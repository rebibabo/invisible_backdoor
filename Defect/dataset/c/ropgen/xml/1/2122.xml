<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2122.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:30">virtio_blk_handle_request</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:50"><name pos:start="1:32" pos:end="1:45">VirtIOBlockReq</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">req</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><name pos:start="1:53" pos:end="1:66">MultiReqBuffer</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">mrb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="127:1">{<block_content pos:start="5:5" pos:end="125:5">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:16">iovec</name></name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">in_iov</name> <init pos:start="7:26" pos:end="7:43">= <expr pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:43"><name pos:start="7:28" pos:end="7:30">req</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">elem</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:43">in_sg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:16">iovec</name></name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">iov</name> <init pos:start="9:23" pos:end="9:41">= <expr pos:start="9:25" pos:end="9:41"><name pos:start="9:25" pos:end="9:41"><name pos:start="9:25" pos:end="9:27">req</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:33">elem</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:41">out_sg</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:19">in_num</name> <init pos:start="11:21" pos:end="11:39">= <expr pos:start="11:23" pos:end="11:39"><name pos:start="11:23" pos:end="11:39"><name pos:start="11:23" pos:end="11:25">req</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:31">elem</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:39">in_num</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:20">out_num</name> <init pos:start="13:22" pos:end="13:41">= <expr pos:start="13:24" pos:end="13:41"><name pos:start="13:24" pos:end="13:41"><name pos:start="13:24" pos:end="13:26">req</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:32">elem</name><operator pos:start="13:33" pos:end="13:34">-&gt;</operator><name pos:start="13:35" pos:end="13:41">out_num</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:56">(<expr pos:start="17:9" pos:end="17:55"><name pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:11">req</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:17">elem</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:26">out_num</name></name> <operator pos:start="17:28" pos:end="17:28">&lt;</operator> <literal type="number" pos:start="17:30" pos:end="17:30">1</literal> <operator pos:start="17:32" pos:end="17:33">||</operator> <name pos:start="17:35" pos:end="17:51"><name pos:start="17:35" pos:end="17:37">req</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:43">elem</name><operator pos:start="17:44" pos:end="17:45">-&gt;</operator><name pos:start="17:46" pos:end="17:51">in_num</name></name> <operator pos:start="17:53" pos:end="17:53">&lt;</operator> <literal type="number" pos:start="17:55" pos:end="17:55">1</literal></expr>)</condition> <block pos:start="17:58" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:16">

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><call pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:20">error_report</name><argument_list pos:start="19:21" pos:end="19:50">(<argument pos:start="19:22" pos:end="19:49"><expr pos:start="19:22" pos:end="19:49"><literal type="string" pos:start="19:22" pos:end="19:49">"virtio-blk missing headers"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><call pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:12">exit</name><argument_list pos:start="21:13" pos:end="21:15">(<argument pos:start="21:14" pos:end="21:14"><expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="29:67">(<expr pos:start="27:9" pos:end="29:66"><call pos:start="27:9" pos:end="29:66"><name pos:start="27:9" pos:end="27:16">unlikely</name><argument_list pos:start="27:17" pos:end="29:66">(<argument pos:start="27:18" pos:end="29:65"><expr pos:start="27:18" pos:end="29:65"><call pos:start="27:18" pos:end="29:45"><name pos:start="27:18" pos:end="27:27">iov_to_buf</name><argument_list pos:start="27:28" pos:end="29:45">(<argument pos:start="27:29" pos:end="27:31"><expr pos:start="27:29" pos:end="27:31"><name pos:start="27:29" pos:end="27:31">iov</name></expr></argument>, <argument pos:start="27:34" pos:end="27:40"><expr pos:start="27:34" pos:end="27:40"><name pos:start="27:34" pos:end="27:40">out_num</name></expr></argument>, <argument pos:start="27:43" pos:end="27:43"><expr pos:start="27:43" pos:end="27:43"><literal type="number" pos:start="27:43" pos:end="27:43">0</literal></expr></argument>, <argument pos:start="27:46" pos:end="27:54"><expr pos:start="27:46" pos:end="27:54"><operator pos:start="27:46" pos:end="27:46">&amp;</operator><name pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:49">req</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:54">out</name></name></expr></argument>,

                            <argument pos:start="29:29" pos:end="29:44"><expr pos:start="29:29" pos:end="29:44"><sizeof pos:start="29:29" pos:end="29:44">sizeof<argument_list pos:start="29:35" pos:end="29:44">(<argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:38">req</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:43">out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="29:47" pos:end="29:48">!=</operator> <sizeof pos:start="29:50" pos:end="29:65">sizeof<argument_list pos:start="29:56" pos:end="29:65">(<argument pos:start="29:57" pos:end="29:64"><expr pos:start="29:57" pos:end="29:64"><name pos:start="29:57" pos:end="29:64"><name pos:start="29:57" pos:end="29:59">req</name><operator pos:start="29:60" pos:end="29:61">-&gt;</operator><name pos:start="29:62" pos:end="29:64">out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:69" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:16">

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><call pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:20">error_report</name><argument_list pos:start="31:21" pos:end="31:59">(<argument pos:start="31:22" pos:end="31:58"><expr pos:start="31:22" pos:end="31:58"><literal type="string" pos:start="31:22" pos:end="31:58">"virtio-blk request outhdr too short"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:12">exit</name><argument_list pos:start="33:13" pos:end="33:15">(<argument pos:start="33:14" pos:end="33:14"><expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:56"><expr pos:start="39:5" pos:end="39:55"><call pos:start="39:5" pos:end="39:55"><name pos:start="39:5" pos:end="39:21">iov_discard_front</name><argument_list pos:start="39:22" pos:end="39:55">(<argument pos:start="39:23" pos:end="39:26"><expr pos:start="39:23" pos:end="39:26"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:26">iov</name></expr></argument>, <argument pos:start="39:29" pos:end="39:36"><expr pos:start="39:29" pos:end="39:36"><operator pos:start="39:29" pos:end="39:29">&amp;</operator><name pos:start="39:30" pos:end="39:36">out_num</name></expr></argument>, <argument pos:start="39:39" pos:end="39:54"><expr pos:start="39:39" pos:end="39:54"><sizeof pos:start="39:39" pos:end="39:54">sizeof<argument_list pos:start="39:45" pos:end="39:54">(<argument pos:start="39:46" pos:end="39:53"><expr pos:start="39:46" pos:end="39:53"><name pos:start="39:46" pos:end="39:53"><name pos:start="39:46" pos:end="39:48">req</name><operator pos:start="39:49" pos:end="39:50">-&gt;</operator><name pos:start="39:51" pos:end="39:53">out</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="45:69">(<expr pos:start="43:9" pos:end="45:68"><name pos:start="43:9" pos:end="43:14">in_num</name> <operator pos:start="43:16" pos:end="43:16">&lt;</operator> <literal type="number" pos:start="43:18" pos:end="43:18">1</literal> <operator pos:start="43:20" pos:end="43:21">||</operator>

        <name pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:14">in_iov</name><index pos:start="45:15" pos:end="45:26">[<expr pos:start="45:16" pos:end="45:25"><name pos:start="45:16" pos:end="45:21">in_num</name> <operator pos:start="45:23" pos:end="45:23">-</operator> <literal type="number" pos:start="45:25" pos:end="45:25">1</literal></expr>]</index></name><operator pos:start="45:27" pos:end="45:27">.</operator><name pos:start="45:28" pos:end="45:34">iov_len</name> <operator pos:start="45:36" pos:end="45:36">&lt;</operator> <sizeof pos:start="45:38" pos:end="45:68">sizeof<argument_list pos:start="45:44" pos:end="45:68">(<argument pos:start="45:45" pos:end="45:67"><expr pos:start="45:45" pos:end="45:67">struct <name pos:start="45:52" pos:end="45:67">virtio_blk_inhdr</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="45:71" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:16">

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><call pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:20">error_report</name><argument_list pos:start="47:21" pos:end="47:58">(<argument pos:start="47:22" pos:end="47:57"><expr pos:start="47:22" pos:end="47:57"><literal type="string" pos:start="47:22" pos:end="47:57">"virtio-blk request inhdr too short"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><call pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:12">exit</name><argument_list pos:start="49:13" pos:end="49:15">(<argument pos:start="49:14" pos:end="49:14"><expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="59:48"><expr pos:start="55:5" pos:end="59:47"><name pos:start="55:5" pos:end="55:11"><name pos:start="55:5" pos:end="55:7">req</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:11">in</name></name> <operator pos:start="55:13" pos:end="55:13">=</operator> <operator pos:start="55:15" pos:end="55:15">(</operator><name pos:start="55:16" pos:end="55:19">void</name> <operator pos:start="55:21" pos:end="55:21">*</operator><operator pos:start="55:22" pos:end="55:22">)</operator><name pos:start="55:23" pos:end="55:40"><name pos:start="55:23" pos:end="55:28">in_iov</name><index pos:start="55:29" pos:end="55:40">[<expr pos:start="55:30" pos:end="55:39"><name pos:start="55:30" pos:end="55:35">in_num</name> <operator pos:start="55:37" pos:end="55:37">-</operator> <literal type="number" pos:start="55:39" pos:end="55:39">1</literal></expr>]</index></name><operator pos:start="55:41" pos:end="55:41">.</operator><name pos:start="55:42" pos:end="55:49">iov_base</name>

              <operator pos:start="57:15" pos:end="57:15">+</operator> <name pos:start="57:17" pos:end="57:34"><name pos:start="57:17" pos:end="57:22">in_iov</name><index pos:start="57:23" pos:end="57:34">[<expr pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:29">in_num</name> <operator pos:start="57:31" pos:end="57:31">-</operator> <literal type="number" pos:start="57:33" pos:end="57:33">1</literal></expr>]</index></name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:42">iov_len</name>

              <operator pos:start="59:15" pos:end="59:15">-</operator> <sizeof pos:start="59:17" pos:end="59:47">sizeof<argument_list pos:start="59:23" pos:end="59:47">(<argument pos:start="59:24" pos:end="59:46"><expr pos:start="59:24" pos:end="59:46">struct <name pos:start="59:31" pos:end="59:46">virtio_blk_inhdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:71"><expr pos:start="61:5" pos:end="61:70"><call pos:start="61:5" pos:end="61:70"><name pos:start="61:5" pos:end="61:20">iov_discard_back</name><argument_list pos:start="61:21" pos:end="61:70">(<argument pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:27"><name pos:start="61:22" pos:end="61:27">in_iov</name></expr></argument>, <argument pos:start="61:30" pos:end="61:36"><expr pos:start="61:30" pos:end="61:36"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:36">in_num</name></expr></argument>, <argument pos:start="61:39" pos:end="61:69"><expr pos:start="61:39" pos:end="61:69"><sizeof pos:start="61:39" pos:end="61:69">sizeof<argument_list pos:start="61:45" pos:end="61:69">(<argument pos:start="61:46" pos:end="61:68"><expr pos:start="61:46" pos:end="61:68">struct <name pos:start="61:53" pos:end="61:68">virtio_blk_inhdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:65"><expr pos:start="65:5" pos:end="65:64"><name pos:start="65:5" pos:end="65:8">type</name> <operator pos:start="65:10" pos:end="65:10">=</operator> <call pos:start="65:12" pos:end="65:64"><name pos:start="65:12" pos:end="65:23">virtio_ldl_p</name><argument_list pos:start="65:24" pos:end="65:64">(<argument pos:start="65:25" pos:end="65:47"><expr pos:start="65:25" pos:end="65:47"><call pos:start="65:25" pos:end="65:47"><name pos:start="65:25" pos:end="65:37">VIRTIO_DEVICE</name><argument_list pos:start="65:38" pos:end="65:47">(<argument pos:start="65:39" pos:end="65:46"><expr pos:start="65:39" pos:end="65:46"><name pos:start="65:39" pos:end="65:46"><name pos:start="65:39" pos:end="65:41">req</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:46">dev</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="65:50" pos:end="65:63"><expr pos:start="65:50" pos:end="65:63"><operator pos:start="65:50" pos:end="65:50">&amp;</operator><name pos:start="65:51" pos:end="65:63"><name pos:start="65:51" pos:end="65:53">req</name><operator pos:start="65:54" pos:end="65:55">-&gt;</operator><name pos:start="65:56" pos:end="65:58">out</name><operator pos:start="65:59" pos:end="65:59">.</operator><name pos:start="65:60" pos:end="65:63">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="125:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:34">(<expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:12">type</name> <operator pos:start="69:14" pos:end="69:14">&amp;</operator> <name pos:start="69:16" pos:end="69:33">VIRTIO_BLK_T_FLUSH</name></expr>)</condition> <block pos:start="69:36" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:42">

        <expr_stmt pos:start="71:9" pos:end="71:42"><expr pos:start="71:9" pos:end="71:41"><call pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:31">virtio_blk_handle_flush</name><argument_list pos:start="71:32" pos:end="71:41">(<argument pos:start="71:33" pos:end="71:35"><expr pos:start="71:33" pos:end="71:35"><name pos:start="71:33" pos:end="71:35">req</name></expr></argument>, <argument pos:start="71:38" pos:end="71:40"><expr pos:start="71:38" pos:end="71:40"><name pos:start="71:38" pos:end="71:40">mrb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="73:7" pos:end="77:5">else if <condition pos:start="73:15" pos:end="73:44">(<expr pos:start="73:16" pos:end="73:43"><name pos:start="73:16" pos:end="73:19">type</name> <operator pos:start="73:21" pos:end="73:21">&amp;</operator> <name pos:start="73:23" pos:end="73:43">VIRTIO_BLK_T_SCSI_CMD</name></expr>)</condition> <block pos:start="73:46" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:36">

        <expr_stmt pos:start="75:9" pos:end="75:36"><expr pos:start="75:9" pos:end="75:35"><call pos:start="75:9" pos:end="75:35"><name pos:start="75:9" pos:end="75:30">virtio_blk_handle_scsi</name><argument_list pos:start="75:31" pos:end="75:35">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="77:7" pos:end="101:5">else if <condition pos:start="77:15" pos:end="77:42">(<expr pos:start="77:16" pos:end="77:41"><name pos:start="77:16" pos:end="77:19">type</name> <operator pos:start="77:21" pos:end="77:21">&amp;</operator> <name pos:start="77:23" pos:end="77:41">VIRTIO_BLK_T_GET_ID</name></expr>)</condition> <block pos:start="77:44" pos:end="101:5">{<block_content pos:start="79:9" pos:end="99:37">

        <decl_stmt pos:start="79:9" pos:end="79:34"><decl pos:start="79:9" pos:end="79:33"><type pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:19">VirtIOBlock</name> <modifier pos:start="79:21" pos:end="79:21">*</modifier></type><name pos:start="79:22" pos:end="79:22">s</name> <init pos:start="79:24" pos:end="79:33">= <expr pos:start="79:26" pos:end="79:33"><name pos:start="79:26" pos:end="79:33"><name pos:start="79:26" pos:end="79:28">req</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:33">dev</name></name></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="83:9" pos:end="89:11">/*

         * NB: per existing s/n string convention the string is

         * terminated by '\0' only when shorter than buffer.

         */</comment>

        <expr_stmt pos:start="91:9" pos:end="95:71"><expr pos:start="91:9" pos:end="95:70"><call pos:start="91:9" pos:end="95:70"><name pos:start="91:9" pos:end="91:15">strncpy</name><argument_list pos:start="91:16" pos:end="95:70">(<argument pos:start="91:17" pos:end="91:44"><expr pos:start="91:17" pos:end="91:44"><name pos:start="91:17" pos:end="91:35"><name pos:start="91:17" pos:end="91:19">req</name><operator pos:start="91:20" pos:end="91:21">-&gt;</operator><name pos:start="91:22" pos:end="91:25">elem</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:32">in_sg</name><index pos:start="91:33" pos:end="91:35">[<expr pos:start="91:34" pos:end="91:34"><literal type="number" pos:start="91:34" pos:end="91:34">0</literal></expr>]</index></name><operator pos:start="91:36" pos:end="91:36">.</operator><name pos:start="91:37" pos:end="91:44">iov_base</name></expr></argument>,

                <argument pos:start="93:17" pos:end="93:50"><expr pos:start="93:17" pos:end="93:50"><ternary pos:start="93:17" pos:end="93:50"><condition pos:start="93:17" pos:end="93:31"><expr pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:29"><name pos:start="93:17" pos:end="93:17">s</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:22">blk</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:29">serial</name></name></expr> ?</condition><then pos:start="93:33" pos:end="93:45"> <expr pos:start="93:33" pos:end="93:45"><name pos:start="93:33" pos:end="93:45"><name pos:start="93:33" pos:end="93:33">s</name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:38">blk</name><operator pos:start="93:39" pos:end="93:39">.</operator><name pos:start="93:40" pos:end="93:45">serial</name></name></expr> </then><else pos:start="93:47" pos:end="93:50">: <expr pos:start="93:49" pos:end="93:50"><literal type="string" pos:start="93:49" pos:end="93:50">""</literal></expr></else></ternary></expr></argument>,

                <argument pos:start="95:17" pos:end="95:69"><expr pos:start="95:17" pos:end="95:69"><call pos:start="95:17" pos:end="95:69"><name pos:start="95:17" pos:end="95:19">MIN</name><argument_list pos:start="95:20" pos:end="95:69">(<argument pos:start="95:21" pos:end="95:47"><expr pos:start="95:21" pos:end="95:47"><name pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:23">req</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:29">elem</name><operator pos:start="95:30" pos:end="95:31">-&gt;</operator><name pos:start="95:32" pos:end="95:36">in_sg</name><index pos:start="95:37" pos:end="95:39">[<expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">0</literal></expr>]</index></name><operator pos:start="95:40" pos:end="95:40">.</operator><name pos:start="95:41" pos:end="95:47">iov_len</name></expr></argument>, <argument pos:start="95:50" pos:end="95:68"><expr pos:start="95:50" pos:end="95:68"><name pos:start="95:50" pos:end="95:68">VIRTIO_BLK_ID_BYTES</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:54"><expr pos:start="97:9" pos:end="97:53"><call pos:start="97:9" pos:end="97:53"><name pos:start="97:9" pos:end="97:31">virtio_blk_req_complete</name><argument_list pos:start="97:32" pos:end="97:53">(<argument pos:start="97:33" pos:end="97:35"><expr pos:start="97:33" pos:end="97:35"><name pos:start="97:33" pos:end="97:35">req</name></expr></argument>, <argument pos:start="97:38" pos:end="97:52"><expr pos:start="97:38" pos:end="97:52"><name pos:start="97:38" pos:end="97:52">VIRTIO_BLK_S_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:37"><expr pos:start="99:9" pos:end="99:36"><call pos:start="99:9" pos:end="99:36"><name pos:start="99:9" pos:end="99:31">virtio_blk_free_request</name><argument_list pos:start="99:32" pos:end="99:36">(<argument pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:35">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="101:7" pos:end="109:5">else if <condition pos:start="101:15" pos:end="101:39">(<expr pos:start="101:16" pos:end="101:38"><name pos:start="101:16" pos:end="101:19">type</name> <operator pos:start="101:21" pos:end="101:21">&amp;</operator> <name pos:start="101:23" pos:end="101:38">VIRTIO_BLK_T_OUT</name></expr>)</condition> <block pos:start="101:41" pos:end="109:5">{<block_content pos:start="103:9" pos:end="107:42">

        <expr_stmt pos:start="103:9" pos:end="105:57"><expr pos:start="103:9" pos:end="105:56"><call pos:start="103:9" pos:end="105:56"><name pos:start="103:9" pos:end="103:32">qemu_iovec_init_external</name><argument_list pos:start="103:33" pos:end="105:56">(<argument pos:start="103:34" pos:end="103:43"><expr pos:start="103:34" pos:end="103:43"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:37">req</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:43">qiov</name></name></expr></argument>, <argument pos:start="103:46" pos:end="103:66"><expr pos:start="103:46" pos:end="103:66"><operator pos:start="103:46" pos:end="103:46">&amp;</operator><name pos:start="103:47" pos:end="103:66"><name pos:start="103:47" pos:end="103:49">req</name><operator pos:start="103:50" pos:end="103:51">-&gt;</operator><name pos:start="103:52" pos:end="103:55">elem</name><operator pos:start="103:56" pos:end="103:57">-&gt;</operator><name pos:start="103:58" pos:end="103:63">out_sg</name><index pos:start="103:64" pos:end="103:66">[<expr pos:start="103:65" pos:end="103:65"><literal type="number" pos:start="103:65" pos:end="103:65">1</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="105:34" pos:end="105:55"><expr pos:start="105:34" pos:end="105:55"><name pos:start="105:34" pos:end="105:51"><name pos:start="105:34" pos:end="105:36">req</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:42">elem</name><operator pos:start="105:43" pos:end="105:44">-&gt;</operator><name pos:start="105:45" pos:end="105:51">out_num</name></name> <operator pos:start="105:53" pos:end="105:53">-</operator> <literal type="number" pos:start="105:55" pos:end="105:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:42"><expr pos:start="107:9" pos:end="107:41"><call pos:start="107:9" pos:end="107:41"><name pos:start="107:9" pos:end="107:31">virtio_blk_handle_write</name><argument_list pos:start="107:32" pos:end="107:41">(<argument pos:start="107:33" pos:end="107:35"><expr pos:start="107:33" pos:end="107:35"><name pos:start="107:33" pos:end="107:35">req</name></expr></argument>, <argument pos:start="107:38" pos:end="107:40"><expr pos:start="107:38" pos:end="107:40"><name pos:start="107:38" pos:end="107:40">mrb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="109:7" pos:end="119:5">else if <condition pos:start="109:15" pos:end="109:71">(<expr pos:start="109:16" pos:end="109:70"><name pos:start="109:16" pos:end="109:19">type</name> <operator pos:start="109:21" pos:end="109:22">==</operator> <name pos:start="109:24" pos:end="109:38">VIRTIO_BLK_T_IN</name> <operator pos:start="109:40" pos:end="109:41">||</operator> <name pos:start="109:43" pos:end="109:46">type</name> <operator pos:start="109:48" pos:end="109:49">==</operator> <name pos:start="109:51" pos:end="109:70">VIRTIO_BLK_T_BARRIER</name></expr>)</condition> <block pos:start="109:73" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:36">

        <comment type="block" pos:start="111:9" pos:end="111:58">/* VIRTIO_BLK_T_IN is 0, so we can't just &amp; it. */</comment>

        <expr_stmt pos:start="113:9" pos:end="115:56"><expr pos:start="113:9" pos:end="115:55"><call pos:start="113:9" pos:end="115:55"><name pos:start="113:9" pos:end="113:32">qemu_iovec_init_external</name><argument_list pos:start="113:33" pos:end="115:55">(<argument pos:start="113:34" pos:end="113:43"><expr pos:start="113:34" pos:end="113:43"><operator pos:start="113:34" pos:end="113:34">&amp;</operator><name pos:start="113:35" pos:end="113:43"><name pos:start="113:35" pos:end="113:37">req</name><operator pos:start="113:38" pos:end="113:39">-&gt;</operator><name pos:start="113:40" pos:end="113:43">qiov</name></name></expr></argument>, <argument pos:start="113:46" pos:end="113:65"><expr pos:start="113:46" pos:end="113:65"><operator pos:start="113:46" pos:end="113:46">&amp;</operator><name pos:start="113:47" pos:end="113:65"><name pos:start="113:47" pos:end="113:49">req</name><operator pos:start="113:50" pos:end="113:51">-&gt;</operator><name pos:start="113:52" pos:end="113:55">elem</name><operator pos:start="113:56" pos:end="113:57">-&gt;</operator><name pos:start="113:58" pos:end="113:62">in_sg</name><index pos:start="113:63" pos:end="113:65">[<expr pos:start="113:64" pos:end="113:64"><literal type="number" pos:start="113:64" pos:end="113:64">0</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="115:34" pos:end="115:54"><expr pos:start="115:34" pos:end="115:54"><name pos:start="115:34" pos:end="115:50"><name pos:start="115:34" pos:end="115:36">req</name><operator pos:start="115:37" pos:end="115:38">-&gt;</operator><name pos:start="115:39" pos:end="115:42">elem</name><operator pos:start="115:43" pos:end="115:44">-&gt;</operator><name pos:start="115:45" pos:end="115:50">in_num</name></name> <operator pos:start="115:52" pos:end="115:52">-</operator> <literal type="number" pos:start="115:54" pos:end="115:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><call pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:30">virtio_blk_handle_read</name><argument_list pos:start="117:31" pos:end="117:35">(<argument pos:start="117:32" pos:end="117:34"><expr pos:start="117:32" pos:end="117:34"><name pos:start="117:32" pos:end="117:34">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="119:7" pos:end="125:5">else <block pos:start="119:12" pos:end="125:5">{<block_content pos:start="121:9" pos:end="123:37">

        <expr_stmt pos:start="121:9" pos:end="121:58"><expr pos:start="121:9" pos:end="121:57"><call pos:start="121:9" pos:end="121:57"><name pos:start="121:9" pos:end="121:31">virtio_blk_req_complete</name><argument_list pos:start="121:32" pos:end="121:57">(<argument pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:35">req</name></expr></argument>, <argument pos:start="121:38" pos:end="121:56"><expr pos:start="121:38" pos:end="121:56"><name pos:start="121:38" pos:end="121:56">VIRTIO_BLK_S_UNSUPP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:37"><expr pos:start="123:9" pos:end="123:36"><call pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:31">virtio_blk_free_request</name><argument_list pos:start="123:32" pos:end="123:36">(<argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:35">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
