<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/282.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">nut_write_trailer</name><parameter_list pos:start="1:29" pos:end="1:48">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NUTContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nut</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">bc</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>, <decl pos:start="7:30" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:36">dyn_bc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="15:29">while <condition pos:start="13:11" pos:end="13:33">(<expr pos:start="13:12" pos:end="13:32"><name pos:start="13:12" pos:end="13:28"><name pos:start="13:12" pos:end="13:14">nut</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:28">header_count</name></name> <operator pos:start="13:30" pos:end="13:30">&lt;</operator> <literal type="number" pos:start="13:32" pos:end="13:32">3</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:29"><block_content pos:start="15:9" pos:end="15:29">

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:21">write_headers</name><argument_list pos:start="15:22" pos:end="15:28">(<argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><name pos:start="15:23" pos:end="15:23">s</name></expr></argument>, <argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:36"><name pos:start="19:11" pos:end="19:27">avio_open_dyn_buf</name><argument_list pos:start="19:28" pos:end="19:36">(<argument pos:start="19:29" pos:end="19:35"><expr pos:start="19:29" pos:end="19:35"><operator pos:start="19:29" pos:end="19:29">&amp;</operator><name pos:start="19:30" pos:end="19:35">dyn_bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:14">&gt;=</operator> <literal type="number" pos:start="21:16" pos:end="21:16">0</literal> <operator pos:start="21:18" pos:end="21:19">&amp;&amp;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:23">nut</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:33">sp_count</name></name></expr>)</condition> <block pos:start="21:36" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:56">

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><call pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:18">av_assert1</name><argument_list pos:start="23:19" pos:end="23:36">(<argument pos:start="23:20" pos:end="23:35"><expr pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:35"><name pos:start="23:20" pos:end="23:22">nut</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:35">write_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><call pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:19">write_index</name><argument_list pos:start="25:20" pos:end="25:32">(<argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><name pos:start="25:21" pos:end="25:23">nut</name></expr></argument>, <argument pos:start="25:26" pos:end="25:31"><expr pos:start="25:26" pos:end="25:31"><name pos:start="25:26" pos:end="25:31">dyn_bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:56"><expr pos:start="27:9" pos:end="27:55"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:18">put_packet</name><argument_list pos:start="27:19" pos:end="27:55">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">nut</name></expr></argument>, <argument pos:start="27:25" pos:end="27:26"><expr pos:start="27:25" pos:end="27:26"><name pos:start="27:25" pos:end="27:26">bc</name></expr></argument>, <argument pos:start="27:29" pos:end="27:34"><expr pos:start="27:29" pos:end="27:34"><name pos:start="27:29" pos:end="27:34">dyn_bc</name></expr></argument>, <argument pos:start="27:37" pos:end="27:37"><expr pos:start="27:37" pos:end="27:37"><literal type="number" pos:start="27:37" pos:end="27:37">1</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:54"><expr pos:start="27:40" pos:end="27:54"><name pos:start="27:40" pos:end="27:54">INDEX_STARTCODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:18">ff_nut_free_sp</name><argument_list pos:start="33:19" pos:end="33:23">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">nut</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="37:47">for <control pos:start="35:9" pos:end="35:35">(<init pos:start="35:10" pos:end="35:13"><expr pos:start="35:10" pos:end="35:12"><name pos:start="35:10" pos:end="35:10">i</name><operator pos:start="35:11" pos:end="35:11">=</operator><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</init> <condition pos:start="35:15" pos:end="35:30"><expr pos:start="35:15" pos:end="35:29"><name pos:start="35:15" pos:end="35:15">i</name><operator pos:start="35:16" pos:end="35:16">&lt;</operator><name pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:29">nb_streams</name></name></expr>;</condition> <incr pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:32">i</name><operator pos:start="35:33" pos:end="35:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:47"><block_content pos:start="37:9" pos:end="37:47">

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:16">av_freep</name><argument_list pos:start="37:17" pos:end="37:46">(<argument pos:start="37:18" pos:end="37:45"><expr pos:start="37:18" pos:end="37:45"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:32"><name pos:start="37:19" pos:end="37:21">nut</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:29">stream</name><index pos:start="37:30" pos:end="37:32">[<expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">i</name></expr>]</index></name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:45">keyframe_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><call pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:12">av_freep</name><argument_list pos:start="41:13" pos:end="41:26">(<argument pos:start="41:14" pos:end="41:25"><expr pos:start="41:14" pos:end="41:25"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:25"><name pos:start="41:15" pos:end="41:17">nut</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:25">stream</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:12">av_freep</name><argument_list pos:start="43:13" pos:end="43:27">(<argument pos:start="43:14" pos:end="43:26"><expr pos:start="43:14" pos:end="43:26"><operator pos:start="43:14" pos:end="43:14">&amp;</operator><name pos:start="43:15" pos:end="43:26"><name pos:start="43:15" pos:end="43:17">nut</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:26">chapter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><call pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:12">av_freep</name><argument_list pos:start="45:13" pos:end="45:29">(<argument pos:start="45:14" pos:end="45:28"><expr pos:start="45:14" pos:end="45:28"><operator pos:start="45:14" pos:end="45:14">&amp;</operator><name pos:start="45:15" pos:end="45:28"><name pos:start="45:15" pos:end="45:17">nut</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:28">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
