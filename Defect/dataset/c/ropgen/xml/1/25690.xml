<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25690.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:20"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">aasc_decode_frame</name><parameter_list pos:start="1:29" pos:end="3:46">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>,
                              <parameter pos:start="2:31" pos:end="2:40"><decl pos:start="2:31" pos:end="2:40"><type pos:start="2:31" pos:end="2:40"><name pos:start="2:31" pos:end="2:34">void</name> <modifier pos:start="2:36" pos:end="2:36">*</modifier></type><name pos:start="2:37" pos:end="2:40">data</name></decl></parameter>, <parameter pos:start="2:43" pos:end="2:56"><decl pos:start="2:43" pos:end="2:56"><type pos:start="2:43" pos:end="2:56"><name pos:start="2:43" pos:end="2:45">int</name> <modifier pos:start="2:47" pos:end="2:47">*</modifier></type><name pos:start="2:48" pos:end="2:56">data_size</name></decl></parameter>,
                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:38">AVPacket</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:45">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="51:20">{<block_content pos:start="5:5" pos:end="51:20">
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AascContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:37">= <expr pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:37"><name pos:start="7:22" pos:end="7:26">avctx</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:32"><decl pos:start="8:5" pos:end="8:13"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:13">compr</name></decl>, <decl pos:start="8:16" pos:end="8:16"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:16" pos:end="8:16">i</name></decl>, <decl pos:start="8:19" pos:end="8:24"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:19" pos:end="8:24">stride</name></decl>, <decl pos:start="8:27" pos:end="8:31"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:27" pos:end="8:31">psize</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:27"><expr pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:12">frame</name><operator pos:start="9:13" pos:end="9:13">.</operator><name pos:start="9:14" pos:end="9:22">reference</name></name> <operator pos:start="9:24" pos:end="9:24">=</operator> <literal type="number" pos:start="9:26" pos:end="9:26">3</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:104"><expr pos:start="10:5" pos:end="10:103"><name pos:start="10:5" pos:end="10:25"><name pos:start="10:5" pos:end="10:5">s</name><operator pos:start="10:6" pos:end="10:7">-&gt;</operator><name pos:start="10:8" pos:end="10:12">frame</name><operator pos:start="10:13" pos:end="10:13">.</operator><name pos:start="10:14" pos:end="10:25">buffer_hints</name></name> <operator pos:start="10:27" pos:end="10:27">=</operator> <name pos:start="10:29" pos:end="10:49">FF_BUFFER_HINTS_VALID</name> <operator pos:start="10:51" pos:end="10:51">|</operator> <name pos:start="10:53" pos:end="10:76">FF_BUFFER_HINTS_PRESERVE</name> <operator pos:start="10:78" pos:end="10:78">|</operator> <name pos:start="10:80" pos:end="10:103">FF_BUFFER_HINTS_REUSABLE</name></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="51:20"><if pos:start="11:5" pos:end="51:20">if <condition pos:start="11:8" pos:end="11:46">(<expr pos:start="11:9" pos:end="11:45"><call pos:start="11:9" pos:end="11:45"><name pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:13">avctx</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:27">reget_buffer</name></name><argument_list pos:start="11:28" pos:end="11:45">(<argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">avctx</name></expr></argument>, <argument pos:start="11:36" pos:end="11:44"><expr pos:start="11:36" pos:end="11:44"><operator pos:start="11:36" pos:end="11:36">&amp;</operator><name pos:start="11:37" pos:end="11:44"><name pos:start="11:37" pos:end="11:37">s</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:44">frame</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:48" pos:end="51:20">{<block_content pos:start="12:9" pos:end="51:20">
        <expr_stmt pos:start="12:9" pos:end="12:63"><expr pos:start="12:9" pos:end="12:62"><call pos:start="12:9" pos:end="12:62"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:62">(<argument pos:start="12:16" pos:end="12:20"><expr pos:start="12:16" pos:end="12:20"><name pos:start="12:16" pos:end="12:20">avctx</name></expr></argument>, <argument pos:start="12:23" pos:end="12:34"><expr pos:start="12:23" pos:end="12:34"><name pos:start="12:23" pos:end="12:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:37" pos:end="12:61"><expr pos:start="12:37" pos:end="12:61"><literal type="string" pos:start="12:37" pos:end="12:61">"reget_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>
    <expr_stmt pos:start="14:5" pos:end="14:25"><expr pos:start="14:5" pos:end="14:24"><name pos:start="14:5" pos:end="14:9">compr</name> <operator pos:start="14:11" pos:end="14:11">=</operator> <call pos:start="14:13" pos:end="14:24"><name pos:start="14:13" pos:end="14:19">AV_RL32</name><argument_list pos:start="14:20" pos:end="14:24">(<argument pos:start="14:21" pos:end="14:23"><expr pos:start="14:21" pos:end="14:23"><name pos:start="14:21" pos:end="14:23">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:13"><expr pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">buf</name> <operator pos:start="15:9" pos:end="15:10">+=</operator> <literal type="number" pos:start="15:12" pos:end="15:12">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:18"><expr pos:start="16:5" pos:end="16:17"><name pos:start="16:5" pos:end="16:12">buf_size</name> <operator pos:start="16:14" pos:end="16:15">-=</operator> <literal type="number" pos:start="16:17" pos:end="16:17">4</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:9">psize</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <name pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:17">avctx</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:40">bits_per_coded_sample</name></name> <operator pos:start="17:42" pos:end="17:42">/</operator> <literal type="number" pos:start="17:44" pos:end="17:44">8</literal></expr>;</expr_stmt>
    <switch pos:start="18:5" pos:end="51:20">switch <condition pos:start="18:12" pos:end="18:29">(<expr pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:28"><name pos:start="18:13" pos:end="18:17">avctx</name><operator pos:start="18:18" pos:end="18:19">-&gt;</operator><name pos:start="18:20" pos:end="18:28">codec_tag</name></name></expr>)</condition> <block pos:start="18:31" pos:end="51:20">{<block_content pos:start="19:5" pos:end="51:20">
    <case pos:start="19:5" pos:end="19:35">case <expr pos:start="19:10" pos:end="19:34"><call pos:start="19:10" pos:end="19:34"><name pos:start="19:10" pos:end="19:14">MKTAG</name><argument_list pos:start="19:15" pos:end="19:34">(<argument pos:start="19:16" pos:end="19:18"><expr pos:start="19:16" pos:end="19:18"><literal type="char" pos:start="19:16" pos:end="19:18">'A'</literal></expr></argument>, <argument pos:start="19:21" pos:end="19:23"><expr pos:start="19:21" pos:end="19:23"><literal type="char" pos:start="19:21" pos:end="19:23">'A'</literal></expr></argument>, <argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><literal type="char" pos:start="19:26" pos:end="19:28">'S'</literal></expr></argument>, <argument pos:start="19:31" pos:end="19:33"><expr pos:start="19:31" pos:end="19:33"><literal type="char" pos:start="19:31" pos:end="19:33">'4'</literal></expr></argument>)</argument_list></call></expr>:</case>
        <expr_stmt pos:start="20:9" pos:end="20:56"><expr pos:start="20:9" pos:end="20:55"><call pos:start="20:9" pos:end="20:55"><name pos:start="20:9" pos:end="20:24">bytestream2_init</name><argument_list pos:start="20:25" pos:end="20:55">(<argument pos:start="20:26" pos:end="20:31"><expr pos:start="20:26" pos:end="20:31"><operator pos:start="20:26" pos:end="20:26">&amp;</operator><name pos:start="20:27" pos:end="20:31"><name pos:start="20:27" pos:end="20:27">s</name><operator pos:start="20:28" pos:end="20:29">-&gt;</operator><name pos:start="20:30" pos:end="20:31">gb</name></name></expr></argument>, <argument pos:start="20:34" pos:end="20:40"><expr pos:start="20:34" pos:end="20:40"><name pos:start="20:34" pos:end="20:36">buf</name> <operator pos:start="20:38" pos:end="20:38">-</operator> <literal type="number" pos:start="20:40" pos:end="20:40">4</literal></expr></argument>, <argument pos:start="20:43" pos:end="20:54"><expr pos:start="20:43" pos:end="20:54"><name pos:start="20:43" pos:end="20:50">buf_size</name> <operator pos:start="20:52" pos:end="20:52">+</operator> <literal type="number" pos:start="20:54" pos:end="20:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="21:65"><expr pos:start="21:9" pos:end="21:64"><call pos:start="21:9" pos:end="21:64"><name pos:start="21:9" pos:end="21:23">ff_msrle_decode</name><argument_list pos:start="21:24" pos:end="21:64">(<argument pos:start="21:25" pos:end="21:29"><expr pos:start="21:25" pos:end="21:29"><name pos:start="21:25" pos:end="21:29">avctx</name></expr></argument>, <argument pos:start="21:32" pos:end="21:52"><expr pos:start="21:32" pos:end="21:52"><operator pos:start="21:32" pos:end="21:32">(</operator><name pos:start="21:33" pos:end="21:41">AVPicture</name><operator pos:start="21:42" pos:end="21:42">*</operator><operator pos:start="21:43" pos:end="21:43">)</operator><operator pos:start="21:44" pos:end="21:44">&amp;</operator><name pos:start="21:45" pos:end="21:52"><name pos:start="21:45" pos:end="21:45">s</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:52">frame</name></name></expr></argument>, <argument pos:start="21:55" pos:end="21:55"><expr pos:start="21:55" pos:end="21:55"><literal type="number" pos:start="21:55" pos:end="21:55">8</literal></expr></argument>, <argument pos:start="21:58" pos:end="21:63"><expr pos:start="21:58" pos:end="21:63"><operator pos:start="21:58" pos:end="21:58">&amp;</operator><name pos:start="21:59" pos:end="21:63"><name pos:start="21:59" pos:end="21:59">s</name><operator pos:start="21:60" pos:end="21:61">-&gt;</operator><name pos:start="21:62" pos:end="21:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="22:9" pos:end="22:14">break;</break>
    <case pos:start="23:5" pos:end="23:35">case <expr pos:start="23:10" pos:end="23:34"><call pos:start="23:10" pos:end="23:34"><name pos:start="23:10" pos:end="23:14">MKTAG</name><argument_list pos:start="23:15" pos:end="23:34">(<argument pos:start="23:16" pos:end="23:18"><expr pos:start="23:16" pos:end="23:18"><literal type="char" pos:start="23:16" pos:end="23:18">'A'</literal></expr></argument>, <argument pos:start="23:21" pos:end="23:23"><expr pos:start="23:21" pos:end="23:23"><literal type="char" pos:start="23:21" pos:end="23:23">'A'</literal></expr></argument>, <argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><literal type="char" pos:start="23:26" pos:end="23:28">'S'</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><literal type="char" pos:start="23:31" pos:end="23:33">'C'</literal></expr></argument>)</argument_list></call></expr>:</case>
    <switch pos:start="24:5" pos:end="51:20">switch<condition pos:start="24:11" pos:end="24:17">(<expr pos:start="24:12" pos:end="24:16"><name pos:start="24:12" pos:end="24:16">compr</name></expr>)</condition><block pos:start="24:18" pos:end="51:20">{<block_content pos:start="25:5" pos:end="51:20">
    <case pos:start="25:5" pos:end="25:11">case <expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">0</literal></expr>:</case>
        <expr_stmt pos:start="26:9" pos:end="26:57"><expr pos:start="26:9" pos:end="26:56"><name pos:start="26:9" pos:end="26:14">stride</name> <operator pos:start="26:16" pos:end="26:16">=</operator> <operator pos:start="26:18" pos:end="26:18">(</operator><name pos:start="26:19" pos:end="26:30"><name pos:start="26:19" pos:end="26:23">avctx</name><operator pos:start="26:24" pos:end="26:25">-&gt;</operator><name pos:start="26:26" pos:end="26:30">width</name></name> <operator pos:start="26:32" pos:end="26:32">*</operator> <name pos:start="26:34" pos:end="26:38">psize</name> <operator pos:start="26:40" pos:end="26:40">+</operator> <name pos:start="26:42" pos:end="26:46">psize</name><operator pos:start="26:47" pos:end="26:47">)</operator> <operator pos:start="26:49" pos:end="26:49">&amp;</operator> <operator pos:start="26:51" pos:end="26:51">~</operator><name pos:start="26:52" pos:end="26:56">psize</name></expr>;</expr_stmt>
        <for pos:start="27:9" pos:end="51:20">for<control pos:start="27:12" pos:end="27:47">(<init pos:start="27:13" pos:end="27:34"><expr pos:start="27:13" pos:end="27:33"><name pos:start="27:13" pos:end="27:13">i</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:29"><name pos:start="27:17" pos:end="27:21">avctx</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:29">height</name></name> <operator pos:start="27:31" pos:end="27:31">-</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr>;</init> <condition pos:start="27:36" pos:end="27:42"><expr pos:start="27:36" pos:end="27:41"><name pos:start="27:36" pos:end="27:36">i</name> <operator pos:start="27:38" pos:end="27:39">&gt;=</operator> <literal type="number" pos:start="27:41" pos:end="27:41">0</literal></expr>;</condition> <incr pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><name pos:start="27:44" pos:end="27:44">i</name><operator pos:start="27:45" pos:end="27:46">--</operator></expr></incr>)</control><block pos:start="27:48" pos:end="51:20">{<block_content pos:start="28:13" pos:end="51:20">
            <if_stmt pos:start="28:13" pos:end="51:20"><if pos:start="28:13" pos:end="51:20">if<condition pos:start="28:15" pos:end="28:47">(<expr pos:start="28:16" pos:end="28:46"><name pos:start="28:16" pos:end="28:27"><name pos:start="28:16" pos:end="28:20">avctx</name><operator pos:start="28:21" pos:end="28:22">-&gt;</operator><name pos:start="28:23" pos:end="28:27">width</name></name> <operator pos:start="28:29" pos:end="28:29">*</operator> <name pos:start="28:31" pos:end="28:35">psize</name> <operator pos:start="28:37" pos:end="28:37">&gt;</operator> <name pos:start="28:39" pos:end="28:46">buf_size</name></expr>)</condition><block pos:start="28:48" pos:end="51:20">{<block_content pos:start="29:17" pos:end="51:20">
                <expr_stmt pos:start="29:17" pos:end="29:83"><expr pos:start="29:17" pos:end="29:82"><call pos:start="29:17" pos:end="29:82"><name pos:start="29:17" pos:end="29:22">av_log</name><argument_list pos:start="29:23" pos:end="29:82">(<argument pos:start="29:24" pos:end="29:28"><expr pos:start="29:24" pos:end="29:28"><name pos:start="29:24" pos:end="29:28">avctx</name></expr></argument>, <argument pos:start="29:31" pos:end="29:42"><expr pos:start="29:31" pos:end="29:42"><name pos:start="29:31" pos:end="29:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="29:45" pos:end="29:81"><expr pos:start="29:45" pos:end="29:81"><literal type="string" pos:start="29:45" pos:end="29:81">"Next line is beyond buffer bounds\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <break pos:start="30:17" pos:end="30:22">break;</break>
            <expr_stmt pos:start="31:13" pos:end="31:89"><expr pos:start="31:13" pos:end="31:88"><call pos:start="31:13" pos:end="31:88"><name pos:start="31:13" pos:end="31:18">memcpy</name><argument_list pos:start="31:19" pos:end="31:88">(<argument pos:start="31:20" pos:end="31:60"><expr pos:start="31:20" pos:end="31:60"><name pos:start="31:20" pos:end="31:35"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">frame</name><operator pos:start="31:28" pos:end="31:28">.</operator><name pos:start="31:29" pos:end="31:32">data</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>]</index></name> <operator pos:start="31:37" pos:end="31:37">+</operator> <name pos:start="31:39" pos:end="31:39">i</name><operator pos:start="31:40" pos:end="31:40">*</operator><name pos:start="31:41" pos:end="31:60"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:48">frame</name><operator pos:start="31:49" pos:end="31:49">.</operator><name pos:start="31:50" pos:end="31:57">linesize</name><index pos:start="31:58" pos:end="31:60">[<expr pos:start="31:59" pos:end="31:59"><literal type="number" pos:start="31:59" pos:end="31:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:63" pos:end="31:65"><expr pos:start="31:63" pos:end="31:65"><name pos:start="31:63" pos:end="31:65">buf</name></expr></argument>, <argument pos:start="31:68" pos:end="31:87"><expr pos:start="31:68" pos:end="31:87"><name pos:start="31:68" pos:end="31:79"><name pos:start="31:68" pos:end="31:72">avctx</name><operator pos:start="31:73" pos:end="31:74">-&gt;</operator><name pos:start="31:75" pos:end="31:79">width</name></name> <operator pos:start="31:81" pos:end="31:81">*</operator> <name pos:start="31:83" pos:end="31:87">psize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="32:13" pos:end="32:26"><expr pos:start="32:13" pos:end="32:25"><name pos:start="32:13" pos:end="32:15">buf</name> <operator pos:start="32:17" pos:end="32:18">+=</operator> <name pos:start="32:20" pos:end="32:25">stride</name></expr>;</expr_stmt>
            <expr_stmt pos:start="33:13" pos:end="33:31"><expr pos:start="33:13" pos:end="33:30"><name pos:start="33:13" pos:end="33:20">buf_size</name> <operator pos:start="33:22" pos:end="33:23">-=</operator> <name pos:start="33:25" pos:end="33:30">stride</name></expr>;</expr_stmt>
        <break pos:start="34:9" pos:end="34:14">break;</break>
    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">1</literal></expr>:</case>
        <expr_stmt pos:start="36:9" pos:end="36:48"><expr pos:start="36:9" pos:end="36:47"><call pos:start="36:9" pos:end="36:47"><name pos:start="36:9" pos:end="36:24">bytestream2_init</name><argument_list pos:start="36:25" pos:end="36:47">(<argument pos:start="36:26" pos:end="36:31"><expr pos:start="36:26" pos:end="36:31"><operator pos:start="36:26" pos:end="36:26">&amp;</operator><name pos:start="36:27" pos:end="36:31"><name pos:start="36:27" pos:end="36:27">s</name><operator pos:start="36:28" pos:end="36:29">-&gt;</operator><name pos:start="36:30" pos:end="36:31">gb</name></name></expr></argument>, <argument pos:start="36:34" pos:end="36:36"><expr pos:start="36:34" pos:end="36:36"><name pos:start="36:34" pos:end="36:36">buf</name></expr></argument>, <argument pos:start="36:39" pos:end="36:46"><expr pos:start="36:39" pos:end="36:46"><name pos:start="36:39" pos:end="36:46">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><call pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:23">ff_msrle_decode</name><argument_list pos:start="37:24" pos:end="37:64">(<argument pos:start="37:25" pos:end="37:29"><expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:29">avctx</name></expr></argument>, <argument pos:start="37:32" pos:end="37:52"><expr pos:start="37:32" pos:end="37:52"><operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:41">AVPicture</name><operator pos:start="37:42" pos:end="37:42">*</operator><operator pos:start="37:43" pos:end="37:43">)</operator><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:52">frame</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:55"><expr pos:start="37:55" pos:end="37:55"><literal type="number" pos:start="37:55" pos:end="37:55">8</literal></expr></argument>, <argument pos:start="37:58" pos:end="37:63"><expr pos:start="37:58" pos:end="37:63"><operator pos:start="37:58" pos:end="37:58">&amp;</operator><name pos:start="37:59" pos:end="37:63"><name pos:start="37:59" pos:end="37:59">s</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:63">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <break pos:start="38:9" pos:end="38:14">break;</break>
    <default pos:start="39:5" pos:end="39:12">default:</default>
        <expr_stmt pos:start="40:9" pos:end="40:76"><expr pos:start="40:9" pos:end="40:75"><call pos:start="40:9" pos:end="40:75"><name pos:start="40:9" pos:end="40:14">av_log</name><argument_list pos:start="40:15" pos:end="40:75">(<argument pos:start="40:16" pos:end="40:20"><expr pos:start="40:16" pos:end="40:20"><name pos:start="40:16" pos:end="40:20">avctx</name></expr></argument>, <argument pos:start="40:23" pos:end="40:34"><expr pos:start="40:23" pos:end="40:34"><name pos:start="40:23" pos:end="40:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="40:37" pos:end="40:67"><expr pos:start="40:37" pos:end="40:67"><literal type="string" pos:start="40:37" pos:end="40:67">"Unknown compression type %d\n"</literal></expr></argument>, <argument pos:start="40:70" pos:end="40:74"><expr pos:start="40:70" pos:end="40:74"><name pos:start="40:70" pos:end="40:74">compr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>
        <break pos:start="42:9" pos:end="42:14">break;</break>
    <default pos:start="43:5" pos:end="43:12">default:</default>
        <expr_stmt pos:start="44:9" pos:end="44:78"><expr pos:start="44:9" pos:end="44:77"><call pos:start="44:9" pos:end="44:77"><name pos:start="44:9" pos:end="44:14">av_log</name><argument_list pos:start="44:15" pos:end="44:77">(<argument pos:start="44:16" pos:end="44:20"><expr pos:start="44:16" pos:end="44:20"><name pos:start="44:16" pos:end="44:20">avctx</name></expr></argument>, <argument pos:start="44:23" pos:end="44:34"><expr pos:start="44:23" pos:end="44:34"><name pos:start="44:23" pos:end="44:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="44:37" pos:end="44:58"><expr pos:start="44:37" pos:end="44:58"><literal type="string" pos:start="44:37" pos:end="44:58">"Unknown FourCC: %X\n"</literal></expr></argument>, <argument pos:start="44:61" pos:end="44:76"><expr pos:start="44:61" pos:end="44:76"><name pos:start="44:61" pos:end="44:76"><name pos:start="44:61" pos:end="44:65">avctx</name><operator pos:start="44:66" pos:end="44:67">-&gt;</operator><name pos:start="44:68" pos:end="44:76">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>
    <if_stmt pos:start="46:5" pos:end="47:62"><if pos:start="46:5" pos:end="47:62">if <condition pos:start="46:8" pos:end="46:42">(<expr pos:start="46:9" pos:end="46:41"><name pos:start="46:9" pos:end="46:22"><name pos:start="46:9" pos:end="46:13">avctx</name><operator pos:start="46:14" pos:end="46:15">-&gt;</operator><name pos:start="46:16" pos:end="46:22">pix_fmt</name></name> <operator pos:start="46:24" pos:end="46:25">==</operator> <name pos:start="46:27" pos:end="46:41">AV_PIX_FMT_PAL8</name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:62"><block_content pos:start="47:9" pos:end="47:62">
        <expr_stmt pos:start="47:9" pos:end="47:62"><expr pos:start="47:9" pos:end="47:61"><call pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:14">memcpy</name><argument_list pos:start="47:15" pos:end="47:61">(<argument pos:start="47:16" pos:end="47:31"><expr pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:31"><name pos:start="47:16" pos:end="47:16">s</name><operator pos:start="47:17" pos:end="47:18">-&gt;</operator><name pos:start="47:19" pos:end="47:23">frame</name><operator pos:start="47:24" pos:end="47:24">.</operator><name pos:start="47:25" pos:end="47:28">data</name><index pos:start="47:29" pos:end="47:31">[<expr pos:start="47:30" pos:end="47:30"><literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:34" pos:end="47:43"><expr pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:43"><name pos:start="47:34" pos:end="47:34">s</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:43">palette</name></name></expr></argument>, <argument pos:start="47:46" pos:end="47:60"><expr pos:start="47:46" pos:end="47:60"><name pos:start="47:46" pos:end="47:60"><name pos:start="47:46" pos:end="47:46">s</name><operator pos:start="47:47" pos:end="47:48">-&gt;</operator><name pos:start="47:49" pos:end="47:60">palette_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="48:5" pos:end="48:33"><expr pos:start="48:5" pos:end="48:32"><operator pos:start="48:5" pos:end="48:5">*</operator><name pos:start="48:6" pos:end="48:14">data_size</name> <operator pos:start="48:16" pos:end="48:16">=</operator> <sizeof pos:start="48:18" pos:end="48:32">sizeof<argument_list pos:start="48:24" pos:end="48:32">(<argument pos:start="48:25" pos:end="48:31"><expr pos:start="48:25" pos:end="48:31"><name pos:start="48:25" pos:end="48:31">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <expr_stmt pos:start="49:5" pos:end="49:31"><expr pos:start="49:5" pos:end="49:30"><operator pos:start="49:5" pos:end="49:5">*</operator><operator pos:start="49:6" pos:end="49:6">(</operator><name pos:start="49:7" pos:end="49:13">AVFrame</name><operator pos:start="49:14" pos:end="49:14">*</operator><operator pos:start="49:15" pos:end="49:15">)</operator><name pos:start="49:16" pos:end="49:19">data</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:30"><name pos:start="49:23" pos:end="49:23">s</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:30">frame</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="50:5" pos:end="50:56">/* report that the buffer was completely consumed */</comment>
    <return pos:start="51:5" pos:end="51:20">return <expr pos:start="51:12" pos:end="51:19"><name pos:start="51:12" pos:end="51:19">buf_size</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></switch></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></function></unit>
