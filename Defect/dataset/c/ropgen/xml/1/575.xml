<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/575.c" pos:tabs="8"><function pos:start="1:1" pos:end="305:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">dxv_decompress_dxt5</name><parameter_list pos:start="1:31" pos:end="1:53">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="305:1">{<block_content pos:start="5:5" pos:end="303:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">DXVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ctx</name> <init pos:start="5:21" pos:end="5:38">= <expr pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:38"><name pos:start="5:23" pos:end="5:27">avctx</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">GetByteContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">gbc</name> <init pos:start="7:25" pos:end="7:35">= <expr pos:start="7:27" pos:end="7:35"><operator pos:start="7:27" pos:end="7:27">&amp;</operator><name pos:start="7:28" pos:end="7:35"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:35">gbc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">value</name></decl>, <decl pos:start="9:21" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:21" pos:end="9:22">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">idx</name></decl>, <decl pos:start="11:14" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:17">prev</name></decl>, <decl pos:start="11:20" pos:end="11:28"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:24">state</name> <init pos:start="11:26" pos:end="11:28">= <expr pos:start="11:28" pos:end="11:28"><literal type="number" pos:start="11:28" pos:end="11:28">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">pos</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">run</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">probe</name></decl>, <decl pos:start="17:16" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:20">check</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:38">/* Copy the first four elements */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:59"><expr pos:start="23:5" pos:end="23:58"><call pos:start="23:5" pos:end="23:58"><name pos:start="23:5" pos:end="23:11">AV_WL32</name><argument_list pos:start="23:12" pos:end="23:58">(<argument pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:15">ctx</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">tex_data</name></name> <operator pos:start="23:27" pos:end="23:27">+</operator>  <literal type="number" pos:start="23:30" pos:end="23:30">0</literal></expr></argument>, <argument pos:start="23:33" pos:end="23:57"><expr pos:start="23:33" pos:end="23:57"><call pos:start="23:33" pos:end="23:57"><name pos:start="23:33" pos:end="23:52">bytestream2_get_le32</name><argument_list pos:start="23:53" pos:end="23:57">(<argument pos:start="23:54" pos:end="23:56"><expr pos:start="23:54" pos:end="23:56"><name pos:start="23:54" pos:end="23:56">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><call pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:11">AV_WL32</name><argument_list pos:start="25:12" pos:end="25:58">(<argument pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:30"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:25">tex_data</name></name> <operator pos:start="25:27" pos:end="25:27">+</operator>  <literal type="number" pos:start="25:30" pos:end="25:30">4</literal></expr></argument>, <argument pos:start="25:33" pos:end="25:57"><expr pos:start="25:33" pos:end="25:57"><call pos:start="25:33" pos:end="25:57"><name pos:start="25:33" pos:end="25:52">bytestream2_get_le32</name><argument_list pos:start="25:53" pos:end="25:57">(<argument pos:start="25:54" pos:end="25:56"><expr pos:start="25:54" pos:end="25:56"><name pos:start="25:54" pos:end="25:56">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><call pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:11">AV_WL32</name><argument_list pos:start="27:12" pos:end="27:58">(<argument pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:30"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">ctx</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:25">tex_data</name></name> <operator pos:start="27:27" pos:end="27:27">+</operator>  <literal type="number" pos:start="27:30" pos:end="27:30">8</literal></expr></argument>, <argument pos:start="27:33" pos:end="27:57"><expr pos:start="27:33" pos:end="27:57"><call pos:start="27:33" pos:end="27:57"><name pos:start="27:33" pos:end="27:52">bytestream2_get_le32</name><argument_list pos:start="27:53" pos:end="27:57">(<argument pos:start="27:54" pos:end="27:56"><expr pos:start="27:54" pos:end="27:56"><name pos:start="27:54" pos:end="27:56">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:59"><expr pos:start="29:5" pos:end="29:58"><call pos:start="29:5" pos:end="29:58"><name pos:start="29:5" pos:end="29:11">AV_WL32</name><argument_list pos:start="29:12" pos:end="29:58">(<argument pos:start="29:13" pos:end="29:30"><expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:15">ctx</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">tex_data</name></name> <operator pos:start="29:27" pos:end="29:27">+</operator> <literal type="number" pos:start="29:29" pos:end="29:30">12</literal></expr></argument>, <argument pos:start="29:33" pos:end="29:57"><expr pos:start="29:33" pos:end="29:57"><call pos:start="29:33" pos:end="29:57"><name pos:start="29:33" pos:end="29:52">bytestream2_get_le32</name><argument_list pos:start="29:53" pos:end="29:57">(<argument pos:start="29:54" pos:end="29:56"><expr pos:start="29:54" pos:end="29:56"><name pos:start="29:54" pos:end="29:56">gbc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:63">/* Process input until the whole texture has been filled */</comment>

    <while pos:start="35:5" pos:end="299:5">while <condition pos:start="35:11" pos:end="35:40">(<expr pos:start="35:12" pos:end="35:39"><name pos:start="35:12" pos:end="35:14">pos</name> <operator pos:start="35:16" pos:end="35:16">+</operator> <literal type="number" pos:start="35:18" pos:end="35:18">2</literal> <operator pos:start="35:20" pos:end="35:21">&lt;=</operator> <name pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:25">ctx</name><operator pos:start="35:26" pos:end="35:27">-&gt;</operator><name pos:start="35:28" pos:end="35:35">tex_size</name></name> <operator pos:start="35:37" pos:end="35:37">/</operator> <literal type="number" pos:start="35:39" pos:end="35:39">4</literal></expr>)</condition> <block pos:start="35:42" pos:end="299:5">{<block_content pos:start="37:9" pos:end="297:9">

        <if_stmt pos:start="37:9" pos:end="226:9"><if pos:start="37:9" pos:end="55:9">if <condition pos:start="37:12" pos:end="37:16">(<expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">run</name></expr>)</condition> <block pos:start="37:18" pos:end="55:9">{<block_content pos:start="39:13" pos:end="53:18">

            <expr_stmt pos:start="39:13" pos:end="39:18"><expr pos:start="39:13" pos:end="39:17"><name pos:start="39:13" pos:end="39:15">run</name><operator pos:start="39:16" pos:end="39:17">--</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="43:13" pos:end="43:58"><expr pos:start="43:13" pos:end="43:57"><name pos:start="43:13" pos:end="43:16">prev</name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:57"><name pos:start="43:20" pos:end="43:26">AV_RL32</name><argument_list pos:start="43:27" pos:end="43:57">(<argument pos:start="43:28" pos:end="43:56"><expr pos:start="43:28" pos:end="43:56"><name pos:start="43:28" pos:end="43:40"><name pos:start="43:28" pos:end="43:30">ctx</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:40">tex_data</name></name> <operator pos:start="43:42" pos:end="43:42">+</operator> <literal type="number" pos:start="43:44" pos:end="43:44">4</literal> <operator pos:start="43:46" pos:end="43:46">*</operator> <operator pos:start="43:48" pos:end="43:48">(</operator><name pos:start="43:49" pos:end="43:51">pos</name> <operator pos:start="43:53" pos:end="43:53">-</operator> <literal type="number" pos:start="43:55" pos:end="43:55">4</literal><operator pos:start="43:56" pos:end="43:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:51"><expr pos:start="45:13" pos:end="45:50"><call pos:start="45:13" pos:end="45:50"><name pos:start="45:13" pos:end="45:19">AV_WL32</name><argument_list pos:start="45:20" pos:end="45:50">(<argument pos:start="45:21" pos:end="45:43"><expr pos:start="45:21" pos:end="45:43"><name pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:23">ctx</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:33">tex_data</name></name> <operator pos:start="45:35" pos:end="45:35">+</operator> <literal type="number" pos:start="45:37" pos:end="45:37">4</literal> <operator pos:start="45:39" pos:end="45:39">*</operator> <name pos:start="45:41" pos:end="45:43">pos</name></expr></argument>, <argument pos:start="45:46" pos:end="45:49"><expr pos:start="45:46" pos:end="45:49"><name pos:start="45:46" pos:end="45:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:18"><expr pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:15">pos</name><operator pos:start="47:16" pos:end="47:17">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:58"><expr pos:start="49:13" pos:end="49:57"><name pos:start="49:13" pos:end="49:16">prev</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:57"><name pos:start="49:20" pos:end="49:26">AV_RL32</name><argument_list pos:start="49:27" pos:end="49:57">(<argument pos:start="49:28" pos:end="49:56"><expr pos:start="49:28" pos:end="49:56"><name pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:30">ctx</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:40">tex_data</name></name> <operator pos:start="49:42" pos:end="49:42">+</operator> <literal type="number" pos:start="49:44" pos:end="49:44">4</literal> <operator pos:start="49:46" pos:end="49:46">*</operator> <operator pos:start="49:48" pos:end="49:48">(</operator><name pos:start="49:49" pos:end="49:51">pos</name> <operator pos:start="49:53" pos:end="49:53">-</operator> <literal type="number" pos:start="49:55" pos:end="49:55">4</literal><operator pos:start="49:56" pos:end="49:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:51"><expr pos:start="51:13" pos:end="51:50"><call pos:start="51:13" pos:end="51:50"><name pos:start="51:13" pos:end="51:19">AV_WL32</name><argument_list pos:start="51:20" pos:end="51:50">(<argument pos:start="51:21" pos:end="51:43"><expr pos:start="51:21" pos:end="51:43"><name pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:23">ctx</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:33">tex_data</name></name> <operator pos:start="51:35" pos:end="51:35">+</operator> <literal type="number" pos:start="51:37" pos:end="51:37">4</literal> <operator pos:start="51:39" pos:end="51:39">*</operator> <name pos:start="51:41" pos:end="51:43">pos</name></expr></argument>, <argument pos:start="51:46" pos:end="51:49"><expr pos:start="51:46" pos:end="51:49"><name pos:start="51:46" pos:end="51:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:18"><expr pos:start="53:13" pos:end="53:17"><name pos:start="53:13" pos:end="53:15">pos</name><operator pos:start="53:16" pos:end="53:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="55:11" pos:end="226:9">else <block pos:start="55:16" pos:end="226:9">{<block_content pos:start="59:13" pos:end="224:13">



            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:27">(<expr pos:start="59:17" pos:end="59:26"><name pos:start="59:17" pos:end="59:21">state</name> <operator pos:start="59:23" pos:end="59:24">==</operator> <literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr>)</condition> <block pos:start="59:29" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:27">

                <expr_stmt pos:start="61:17" pos:end="61:50"><expr pos:start="61:17" pos:end="61:49"><name pos:start="61:17" pos:end="61:21">value</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <call pos:start="61:25" pos:end="61:49"><name pos:start="61:25" pos:end="61:44">bytestream2_get_le32</name><argument_list pos:start="61:45" pos:end="61:49">(<argument pos:start="61:46" pos:end="61:48"><expr pos:start="61:46" pos:end="61:48"><name pos:start="61:46" pos:end="61:48">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:27"><expr pos:start="63:17" pos:end="63:26"><name pos:start="63:17" pos:end="63:21">state</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:26">16</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:14">op</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:22">value</name> <operator pos:start="67:24" pos:end="67:24">&amp;</operator> <literal type="number" pos:start="67:26" pos:end="67:28">0x3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:24"><expr pos:start="69:13" pos:end="69:23"><name pos:start="69:13" pos:end="69:17">value</name> <operator pos:start="69:19" pos:end="69:21">&gt;&gt;=</operator> <literal type="number" pos:start="69:23" pos:end="69:23">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:20"><expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:17">state</name><operator pos:start="71:18" pos:end="71:19">--</operator></expr>;</expr_stmt>



            <switch pos:start="75:13" pos:end="224:13">switch <condition pos:start="75:20" pos:end="75:23">(<expr pos:start="75:21" pos:end="75:22"><name pos:start="75:21" pos:end="75:22">op</name></expr>)</condition> <block pos:start="75:25" pos:end="224:13">{<block_content pos:start="77:13" pos:end="222:22">

            <case pos:start="77:13" pos:end="77:19">case <expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>:</case>

                <comment type="block" pos:start="79:17" pos:end="79:31">/* Long copy */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:54"><expr pos:start="81:17" pos:end="81:53"><name pos:start="81:17" pos:end="81:21">check</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <call pos:start="81:25" pos:end="81:49"><name pos:start="81:25" pos:end="81:44">bytestream2_get_byte</name><argument_list pos:start="81:45" pos:end="81:49">(<argument pos:start="81:46" pos:end="81:48"><expr pos:start="81:46" pos:end="81:48"><name pos:start="81:46" pos:end="81:48">gbc</name></expr></argument>)</argument_list></call> <operator pos:start="81:51" pos:end="81:51">+</operator> <literal type="number" pos:start="81:53" pos:end="81:53">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="83:17" pos:end="93:17"><if pos:start="83:17" pos:end="93:17">if <condition pos:start="83:20" pos:end="83:33">(<expr pos:start="83:21" pos:end="83:32"><name pos:start="83:21" pos:end="83:25">check</name> <operator pos:start="83:27" pos:end="83:28">==</operator> <literal type="number" pos:start="83:30" pos:end="83:32">256</literal></expr>)</condition> <block pos:start="83:35" pos:end="93:17">{<block_content pos:start="85:21" pos:end="91:46">

                    <do pos:start="85:21" pos:end="91:46">do <block pos:start="85:24" pos:end="91:21">{<block_content pos:start="87:25" pos:end="89:39">

                        <expr_stmt pos:start="87:25" pos:end="87:58"><expr pos:start="87:25" pos:end="87:57"><name pos:start="87:25" pos:end="87:29">probe</name> <operator pos:start="87:31" pos:end="87:31">=</operator> <call pos:start="87:33" pos:end="87:57"><name pos:start="87:33" pos:end="87:52">bytestream2_get_le16</name><argument_list pos:start="87:53" pos:end="87:57">(<argument pos:start="87:54" pos:end="87:56"><expr pos:start="87:54" pos:end="87:56"><name pos:start="87:54" pos:end="87:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="89:25" pos:end="89:39"><expr pos:start="89:25" pos:end="89:38"><name pos:start="89:25" pos:end="89:29">check</name> <operator pos:start="89:31" pos:end="89:32">+=</operator> <name pos:start="89:34" pos:end="89:38">probe</name></expr>;</expr_stmt>

                    </block_content>}</block> while <condition pos:start="91:29" pos:end="91:45">(<expr pos:start="91:30" pos:end="91:44"><name pos:start="91:30" pos:end="91:34">probe</name> <operator pos:start="91:36" pos:end="91:37">==</operator> <literal type="number" pos:start="91:39" pos:end="91:44">0xFFFF</literal></expr>)</condition>;</do>

                </block_content>}</block></if></if_stmt>

                <while pos:start="95:17" pos:end="131:17">while <condition pos:start="95:23" pos:end="95:61">(<expr pos:start="95:24" pos:end="95:60"><name pos:start="95:24" pos:end="95:28">check</name> <operator pos:start="95:30" pos:end="95:31">&amp;&amp;</operator> <name pos:start="95:33" pos:end="95:35">pos</name> <operator pos:start="95:37" pos:end="95:37">+</operator> <literal type="number" pos:start="95:39" pos:end="95:39">4</literal> <operator pos:start="95:41" pos:end="95:42">&lt;=</operator> <name pos:start="95:44" pos:end="95:56"><name pos:start="95:44" pos:end="95:46">ctx</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:56">tex_size</name></name> <operator pos:start="95:58" pos:end="95:58">/</operator> <literal type="number" pos:start="95:60" pos:end="95:60">4</literal></expr>)</condition> <block pos:start="95:63" pos:end="131:17">{<block_content pos:start="97:21" pos:end="129:28">

                    <expr_stmt pos:start="97:21" pos:end="97:66"><expr pos:start="97:21" pos:end="97:65"><name pos:start="97:21" pos:end="97:24">prev</name> <operator pos:start="97:26" pos:end="97:26">=</operator> <call pos:start="97:28" pos:end="97:65"><name pos:start="97:28" pos:end="97:34">AV_RL32</name><argument_list pos:start="97:35" pos:end="97:65">(<argument pos:start="97:36" pos:end="97:64"><expr pos:start="97:36" pos:end="97:64"><name pos:start="97:36" pos:end="97:48"><name pos:start="97:36" pos:end="97:38">ctx</name><operator pos:start="97:39" pos:end="97:40">-&gt;</operator><name pos:start="97:41" pos:end="97:48">tex_data</name></name> <operator pos:start="97:50" pos:end="97:50">+</operator> <literal type="number" pos:start="97:52" pos:end="97:52">4</literal> <operator pos:start="97:54" pos:end="97:54">*</operator> <operator pos:start="97:56" pos:end="97:56">(</operator><name pos:start="97:57" pos:end="97:59">pos</name> <operator pos:start="97:61" pos:end="97:61">-</operator> <literal type="number" pos:start="97:63" pos:end="97:63">4</literal><operator pos:start="97:64" pos:end="97:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="99:21" pos:end="99:59"><expr pos:start="99:21" pos:end="99:58"><call pos:start="99:21" pos:end="99:58"><name pos:start="99:21" pos:end="99:27">AV_WL32</name><argument_list pos:start="99:28" pos:end="99:58">(<argument pos:start="99:29" pos:end="99:51"><expr pos:start="99:29" pos:end="99:51"><name pos:start="99:29" pos:end="99:41"><name pos:start="99:29" pos:end="99:31">ctx</name><operator pos:start="99:32" pos:end="99:33">-&gt;</operator><name pos:start="99:34" pos:end="99:41">tex_data</name></name> <operator pos:start="99:43" pos:end="99:43">+</operator> <literal type="number" pos:start="99:45" pos:end="99:45">4</literal> <operator pos:start="99:47" pos:end="99:47">*</operator> <name pos:start="99:49" pos:end="99:51">pos</name></expr></argument>, <argument pos:start="99:54" pos:end="99:57"><expr pos:start="99:54" pos:end="99:57"><name pos:start="99:54" pos:end="99:57">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:26"><expr pos:start="101:21" pos:end="101:25"><name pos:start="101:21" pos:end="101:23">pos</name><operator pos:start="101:24" pos:end="101:25">++</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="105:21" pos:end="105:66"><expr pos:start="105:21" pos:end="105:65"><name pos:start="105:21" pos:end="105:24">prev</name> <operator pos:start="105:26" pos:end="105:26">=</operator> <call pos:start="105:28" pos:end="105:65"><name pos:start="105:28" pos:end="105:34">AV_RL32</name><argument_list pos:start="105:35" pos:end="105:65">(<argument pos:start="105:36" pos:end="105:64"><expr pos:start="105:36" pos:end="105:64"><name pos:start="105:36" pos:end="105:48"><name pos:start="105:36" pos:end="105:38">ctx</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:48">tex_data</name></name> <operator pos:start="105:50" pos:end="105:50">+</operator> <literal type="number" pos:start="105:52" pos:end="105:52">4</literal> <operator pos:start="105:54" pos:end="105:54">*</operator> <operator pos:start="105:56" pos:end="105:56">(</operator><name pos:start="105:57" pos:end="105:59">pos</name> <operator pos:start="105:61" pos:end="105:61">-</operator> <literal type="number" pos:start="105:63" pos:end="105:63">4</literal><operator pos:start="105:64" pos:end="105:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="107:21" pos:end="107:59"><expr pos:start="107:21" pos:end="107:58"><call pos:start="107:21" pos:end="107:58"><name pos:start="107:21" pos:end="107:27">AV_WL32</name><argument_list pos:start="107:28" pos:end="107:58">(<argument pos:start="107:29" pos:end="107:51"><expr pos:start="107:29" pos:end="107:51"><name pos:start="107:29" pos:end="107:41"><name pos:start="107:29" pos:end="107:31">ctx</name><operator pos:start="107:32" pos:end="107:33">-&gt;</operator><name pos:start="107:34" pos:end="107:41">tex_data</name></name> <operator pos:start="107:43" pos:end="107:43">+</operator> <literal type="number" pos:start="107:45" pos:end="107:45">4</literal> <operator pos:start="107:47" pos:end="107:47">*</operator> <name pos:start="107:49" pos:end="107:51">pos</name></expr></argument>, <argument pos:start="107:54" pos:end="107:57"><expr pos:start="107:54" pos:end="107:57"><name pos:start="107:54" pos:end="107:57">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:26"><expr pos:start="109:21" pos:end="109:25"><name pos:start="109:21" pos:end="109:23">pos</name><operator pos:start="109:24" pos:end="109:25">++</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="113:21" pos:end="113:66"><expr pos:start="113:21" pos:end="113:65"><name pos:start="113:21" pos:end="113:24">prev</name> <operator pos:start="113:26" pos:end="113:26">=</operator> <call pos:start="113:28" pos:end="113:65"><name pos:start="113:28" pos:end="113:34">AV_RL32</name><argument_list pos:start="113:35" pos:end="113:65">(<argument pos:start="113:36" pos:end="113:64"><expr pos:start="113:36" pos:end="113:64"><name pos:start="113:36" pos:end="113:48"><name pos:start="113:36" pos:end="113:38">ctx</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:48">tex_data</name></name> <operator pos:start="113:50" pos:end="113:50">+</operator> <literal type="number" pos:start="113:52" pos:end="113:52">4</literal> <operator pos:start="113:54" pos:end="113:54">*</operator> <operator pos:start="113:56" pos:end="113:56">(</operator><name pos:start="113:57" pos:end="113:59">pos</name> <operator pos:start="113:61" pos:end="113:61">-</operator> <literal type="number" pos:start="113:63" pos:end="113:63">4</literal><operator pos:start="113:64" pos:end="113:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:59"><expr pos:start="115:21" pos:end="115:58"><call pos:start="115:21" pos:end="115:58"><name pos:start="115:21" pos:end="115:27">AV_WL32</name><argument_list pos:start="115:28" pos:end="115:58">(<argument pos:start="115:29" pos:end="115:51"><expr pos:start="115:29" pos:end="115:51"><name pos:start="115:29" pos:end="115:41"><name pos:start="115:29" pos:end="115:31">ctx</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:41">tex_data</name></name> <operator pos:start="115:43" pos:end="115:43">+</operator> <literal type="number" pos:start="115:45" pos:end="115:45">4</literal> <operator pos:start="115:47" pos:end="115:47">*</operator> <name pos:start="115:49" pos:end="115:51">pos</name></expr></argument>, <argument pos:start="115:54" pos:end="115:57"><expr pos:start="115:54" pos:end="115:57"><name pos:start="115:54" pos:end="115:57">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:26"><expr pos:start="117:21" pos:end="117:25"><name pos:start="117:21" pos:end="117:23">pos</name><operator pos:start="117:24" pos:end="117:25">++</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="121:21" pos:end="121:66"><expr pos:start="121:21" pos:end="121:65"><name pos:start="121:21" pos:end="121:24">prev</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <call pos:start="121:28" pos:end="121:65"><name pos:start="121:28" pos:end="121:34">AV_RL32</name><argument_list pos:start="121:35" pos:end="121:65">(<argument pos:start="121:36" pos:end="121:64"><expr pos:start="121:36" pos:end="121:64"><name pos:start="121:36" pos:end="121:48"><name pos:start="121:36" pos:end="121:38">ctx</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:48">tex_data</name></name> <operator pos:start="121:50" pos:end="121:50">+</operator> <literal type="number" pos:start="121:52" pos:end="121:52">4</literal> <operator pos:start="121:54" pos:end="121:54">*</operator> <operator pos:start="121:56" pos:end="121:56">(</operator><name pos:start="121:57" pos:end="121:59">pos</name> <operator pos:start="121:61" pos:end="121:61">-</operator> <literal type="number" pos:start="121:63" pos:end="121:63">4</literal><operator pos:start="121:64" pos:end="121:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:59"><expr pos:start="123:21" pos:end="123:58"><call pos:start="123:21" pos:end="123:58"><name pos:start="123:21" pos:end="123:27">AV_WL32</name><argument_list pos:start="123:28" pos:end="123:58">(<argument pos:start="123:29" pos:end="123:51"><expr pos:start="123:29" pos:end="123:51"><name pos:start="123:29" pos:end="123:41"><name pos:start="123:29" pos:end="123:31">ctx</name><operator pos:start="123:32" pos:end="123:33">-&gt;</operator><name pos:start="123:34" pos:end="123:41">tex_data</name></name> <operator pos:start="123:43" pos:end="123:43">+</operator> <literal type="number" pos:start="123:45" pos:end="123:45">4</literal> <operator pos:start="123:47" pos:end="123:47">*</operator> <name pos:start="123:49" pos:end="123:51">pos</name></expr></argument>, <argument pos:start="123:54" pos:end="123:57"><expr pos:start="123:54" pos:end="123:57"><name pos:start="123:54" pos:end="123:57">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="125:21" pos:end="125:26"><expr pos:start="125:21" pos:end="125:25"><name pos:start="125:21" pos:end="125:23">pos</name><operator pos:start="125:24" pos:end="125:25">++</operator></expr>;</expr_stmt>



                    <expr_stmt pos:start="129:21" pos:end="129:28"><expr pos:start="129:21" pos:end="129:27"><name pos:start="129:21" pos:end="129:25">check</name><operator pos:start="129:26" pos:end="129:27">--</operator></expr>;</expr_stmt>

                </block_content>}</block></while>



                <comment type="block" pos:start="135:17" pos:end="135:48">/* Restart (or exit) the loop */</comment>

                <continue pos:start="137:17" pos:end="137:25">continue;</continue>

                <break pos:start="139:17" pos:end="139:22">break;</break>

            <case pos:start="141:13" pos:end="141:19">case <expr pos:start="141:18" pos:end="141:18"><literal type="number" pos:start="141:18" pos:end="141:18">1</literal></expr>:</case>

                <comment type="block" pos:start="143:17" pos:end="143:40">/* Load new run value */</comment>

                <expr_stmt pos:start="145:17" pos:end="145:48"><expr pos:start="145:17" pos:end="145:47"><name pos:start="145:17" pos:end="145:19">run</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <call pos:start="145:23" pos:end="145:47"><name pos:start="145:23" pos:end="145:42">bytestream2_get_byte</name><argument_list pos:start="145:43" pos:end="145:47">(<argument pos:start="145:44" pos:end="145:46"><expr pos:start="145:44" pos:end="145:46"><name pos:start="145:44" pos:end="145:46">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="157:17"><if pos:start="147:17" pos:end="157:17">if <condition pos:start="147:20" pos:end="147:31">(<expr pos:start="147:21" pos:end="147:30"><name pos:start="147:21" pos:end="147:23">run</name> <operator pos:start="147:25" pos:end="147:26">==</operator> <literal type="number" pos:start="147:28" pos:end="147:30">255</literal></expr>)</condition> <block pos:start="147:33" pos:end="157:17">{<block_content pos:start="149:21" pos:end="155:46">

                    <do pos:start="149:21" pos:end="155:46">do <block pos:start="149:24" pos:end="155:21">{<block_content pos:start="151:25" pos:end="153:37">

                        <expr_stmt pos:start="151:25" pos:end="151:58"><expr pos:start="151:25" pos:end="151:57"><name pos:start="151:25" pos:end="151:29">probe</name> <operator pos:start="151:31" pos:end="151:31">=</operator> <call pos:start="151:33" pos:end="151:57"><name pos:start="151:33" pos:end="151:52">bytestream2_get_le16</name><argument_list pos:start="151:53" pos:end="151:57">(<argument pos:start="151:54" pos:end="151:56"><expr pos:start="151:54" pos:end="151:56"><name pos:start="151:54" pos:end="151:56">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="153:25" pos:end="153:37"><expr pos:start="153:25" pos:end="153:36"><name pos:start="153:25" pos:end="153:27">run</name> <operator pos:start="153:29" pos:end="153:30">+=</operator> <name pos:start="153:32" pos:end="153:36">probe</name></expr>;</expr_stmt>

                    </block_content>}</block> while <condition pos:start="155:29" pos:end="155:45">(<expr pos:start="155:30" pos:end="155:44"><name pos:start="155:30" pos:end="155:34">probe</name> <operator pos:start="155:36" pos:end="155:37">==</operator> <literal type="number" pos:start="155:39" pos:end="155:44">0xFFFF</literal></expr>)</condition>;</do>

                </block_content>}</block></if></if_stmt>



                <comment type="block" pos:start="161:17" pos:end="161:56">/* Copy two dwords from previous data */</comment>

                <expr_stmt pos:start="163:17" pos:end="163:62"><expr pos:start="163:17" pos:end="163:61"><name pos:start="163:17" pos:end="163:20">prev</name> <operator pos:start="163:22" pos:end="163:22">=</operator> <call pos:start="163:24" pos:end="163:61"><name pos:start="163:24" pos:end="163:30">AV_RL32</name><argument_list pos:start="163:31" pos:end="163:61">(<argument pos:start="163:32" pos:end="163:60"><expr pos:start="163:32" pos:end="163:60"><name pos:start="163:32" pos:end="163:44"><name pos:start="163:32" pos:end="163:34">ctx</name><operator pos:start="163:35" pos:end="163:36">-&gt;</operator><name pos:start="163:37" pos:end="163:44">tex_data</name></name> <operator pos:start="163:46" pos:end="163:46">+</operator> <literal type="number" pos:start="163:48" pos:end="163:48">4</literal> <operator pos:start="163:50" pos:end="163:50">*</operator> <operator pos:start="163:52" pos:end="163:52">(</operator><name pos:start="163:53" pos:end="163:55">pos</name> <operator pos:start="163:57" pos:end="163:57">-</operator> <literal type="number" pos:start="163:59" pos:end="163:59">4</literal><operator pos:start="163:60" pos:end="163:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:55"><expr pos:start="165:17" pos:end="165:54"><call pos:start="165:17" pos:end="165:54"><name pos:start="165:17" pos:end="165:23">AV_WL32</name><argument_list pos:start="165:24" pos:end="165:54">(<argument pos:start="165:25" pos:end="165:47"><expr pos:start="165:25" pos:end="165:47"><name pos:start="165:25" pos:end="165:37"><name pos:start="165:25" pos:end="165:27">ctx</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:37">tex_data</name></name> <operator pos:start="165:39" pos:end="165:39">+</operator> <literal type="number" pos:start="165:41" pos:end="165:41">4</literal> <operator pos:start="165:43" pos:end="165:43">*</operator> <name pos:start="165:45" pos:end="165:47">pos</name></expr></argument>, <argument pos:start="165:50" pos:end="165:53"><expr pos:start="165:50" pos:end="165:53"><name pos:start="165:50" pos:end="165:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:22"><expr pos:start="167:17" pos:end="167:21"><name pos:start="167:17" pos:end="167:19">pos</name><operator pos:start="167:20" pos:end="167:21">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="171:17" pos:end="171:62"><expr pos:start="171:17" pos:end="171:61"><name pos:start="171:17" pos:end="171:20">prev</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <call pos:start="171:24" pos:end="171:61"><name pos:start="171:24" pos:end="171:30">AV_RL32</name><argument_list pos:start="171:31" pos:end="171:61">(<argument pos:start="171:32" pos:end="171:60"><expr pos:start="171:32" pos:end="171:60"><name pos:start="171:32" pos:end="171:44"><name pos:start="171:32" pos:end="171:34">ctx</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:44">tex_data</name></name> <operator pos:start="171:46" pos:end="171:46">+</operator> <literal type="number" pos:start="171:48" pos:end="171:48">4</literal> <operator pos:start="171:50" pos:end="171:50">*</operator> <operator pos:start="171:52" pos:end="171:52">(</operator><name pos:start="171:53" pos:end="171:55">pos</name> <operator pos:start="171:57" pos:end="171:57">-</operator> <literal type="number" pos:start="171:59" pos:end="171:59">4</literal><operator pos:start="171:60" pos:end="171:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:55"><expr pos:start="173:17" pos:end="173:54"><call pos:start="173:17" pos:end="173:54"><name pos:start="173:17" pos:end="173:23">AV_WL32</name><argument_list pos:start="173:24" pos:end="173:54">(<argument pos:start="173:25" pos:end="173:47"><expr pos:start="173:25" pos:end="173:47"><name pos:start="173:25" pos:end="173:37"><name pos:start="173:25" pos:end="173:27">ctx</name><operator pos:start="173:28" pos:end="173:29">-&gt;</operator><name pos:start="173:30" pos:end="173:37">tex_data</name></name> <operator pos:start="173:39" pos:end="173:39">+</operator> <literal type="number" pos:start="173:41" pos:end="173:41">4</literal> <operator pos:start="173:43" pos:end="173:43">*</operator> <name pos:start="173:45" pos:end="173:47">pos</name></expr></argument>, <argument pos:start="173:50" pos:end="173:53"><expr pos:start="173:50" pos:end="173:53"><name pos:start="173:50" pos:end="173:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:22"><expr pos:start="175:17" pos:end="175:21"><name pos:start="175:17" pos:end="175:19">pos</name><operator pos:start="175:20" pos:end="175:21">++</operator></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            <case pos:start="179:13" pos:end="179:19">case <expr pos:start="179:18" pos:end="179:18"><literal type="number" pos:start="179:18" pos:end="179:18">2</literal></expr>:</case>

                <comment type="block" pos:start="181:17" pos:end="181:59">/* Copy two dwords from a previous index */</comment>

                <expr_stmt pos:start="183:17" pos:end="183:52"><expr pos:start="183:17" pos:end="183:51"><name pos:start="183:17" pos:end="183:19">idx</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <literal type="number" pos:start="183:23" pos:end="183:25">8</literal> <operator pos:start="183:25" pos:end="183:25">+</operator> <call pos:start="183:27" pos:end="183:51"><name pos:start="183:27" pos:end="183:46">bytestream2_get_le16</name><argument_list pos:start="183:47" pos:end="183:51">(<argument pos:start="183:48" pos:end="183:50"><expr pos:start="183:48" pos:end="183:50"><name pos:start="183:48" pos:end="183:50">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="185:17" pos:end="188:64"><if pos:start="185:17" pos:end="188:64">if <condition pos:start="185:20" pos:end="185:83">(<expr pos:start="185:21" pos:end="185:82"><name pos:start="185:21" pos:end="185:23">idx</name> <operator pos:start="185:25" pos:end="185:25">&gt;</operator> <name pos:start="185:27" pos:end="185:29">pos</name> <operator pos:start="185:31" pos:end="185:32">||</operator> <operator pos:start="185:34" pos:end="185:34">(</operator><name pos:start="185:35" pos:end="185:42">unsigned</name> <name pos:start="185:44" pos:end="185:46">int</name><operator pos:start="185:47" pos:end="185:47">)</operator><operator pos:start="185:48" pos:end="185:48">(</operator><name pos:start="185:49" pos:end="185:51">pos</name> <operator pos:start="185:53" pos:end="185:53">-</operator> <name pos:start="185:55" pos:end="185:57">idx</name><operator pos:start="185:58" pos:end="185:58">)</operator> <operator pos:start="185:60" pos:end="185:60">+</operator> <literal type="number" pos:start="185:62" pos:end="185:62">2</literal> <operator pos:start="185:64" pos:end="185:64">&gt;</operator> <name pos:start="185:66" pos:end="185:78"><name pos:start="185:66" pos:end="185:68">ctx</name><operator pos:start="185:69" pos:end="185:70">-&gt;</operator><name pos:start="185:71" pos:end="185:78">tex_size</name></name> <operator pos:start="185:80" pos:end="185:80">/</operator> <literal type="number" pos:start="185:82" pos:end="185:82">4</literal></expr>)</condition><block type="pseudo" pos:start="188:17" pos:end="188:64"><block_content pos:start="188:17" pos:end="188:64">


                <expr_stmt pos:start="188:17" pos:end="188:64"><expr pos:start="188:17" pos:end="188:63"><name pos:start="188:17" pos:end="188:20">prev</name> <operator pos:start="188:22" pos:end="188:22">=</operator> <call pos:start="188:24" pos:end="188:63"><name pos:start="188:24" pos:end="188:30">AV_RL32</name><argument_list pos:start="188:31" pos:end="188:63">(<argument pos:start="188:32" pos:end="188:62"><expr pos:start="188:32" pos:end="188:62"><name pos:start="188:32" pos:end="188:44"><name pos:start="188:32" pos:end="188:34">ctx</name><operator pos:start="188:35" pos:end="188:36">-&gt;</operator><name pos:start="188:37" pos:end="188:44">tex_data</name></name> <operator pos:start="188:46" pos:end="188:46">+</operator> <literal type="number" pos:start="188:48" pos:end="188:48">4</literal> <operator pos:start="188:50" pos:end="188:50">*</operator> <operator pos:start="188:52" pos:end="188:52">(</operator><name pos:start="188:53" pos:end="188:55">pos</name> <operator pos:start="188:57" pos:end="188:57">-</operator> <name pos:start="188:59" pos:end="188:61">idx</name><operator pos:start="188:62" pos:end="188:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="190:17" pos:end="190:55"><expr pos:start="190:17" pos:end="190:54"><call pos:start="190:17" pos:end="190:54"><name pos:start="190:17" pos:end="190:23">AV_WL32</name><argument_list pos:start="190:24" pos:end="190:54">(<argument pos:start="190:25" pos:end="190:47"><expr pos:start="190:25" pos:end="190:47"><name pos:start="190:25" pos:end="190:37"><name pos:start="190:25" pos:end="190:27">ctx</name><operator pos:start="190:28" pos:end="190:29">-&gt;</operator><name pos:start="190:30" pos:end="190:37">tex_data</name></name> <operator pos:start="190:39" pos:end="190:39">+</operator> <literal type="number" pos:start="190:41" pos:end="190:41">4</literal> <operator pos:start="190:43" pos:end="190:43">*</operator> <name pos:start="190:45" pos:end="190:47">pos</name></expr></argument>, <argument pos:start="190:50" pos:end="190:53"><expr pos:start="190:50" pos:end="190:53"><name pos:start="190:50" pos:end="190:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="192:17" pos:end="192:22"><expr pos:start="192:17" pos:end="192:21"><name pos:start="192:17" pos:end="192:19">pos</name><operator pos:start="192:20" pos:end="192:21">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="196:17" pos:end="196:64"><expr pos:start="196:17" pos:end="196:63"><name pos:start="196:17" pos:end="196:20">prev</name> <operator pos:start="196:22" pos:end="196:22">=</operator> <call pos:start="196:24" pos:end="196:63"><name pos:start="196:24" pos:end="196:30">AV_RL32</name><argument_list pos:start="196:31" pos:end="196:63">(<argument pos:start="196:32" pos:end="196:62"><expr pos:start="196:32" pos:end="196:62"><name pos:start="196:32" pos:end="196:44"><name pos:start="196:32" pos:end="196:34">ctx</name><operator pos:start="196:35" pos:end="196:36">-&gt;</operator><name pos:start="196:37" pos:end="196:44">tex_data</name></name> <operator pos:start="196:46" pos:end="196:46">+</operator> <literal type="number" pos:start="196:48" pos:end="196:48">4</literal> <operator pos:start="196:50" pos:end="196:50">*</operator> <operator pos:start="196:52" pos:end="196:52">(</operator><name pos:start="196:53" pos:end="196:55">pos</name> <operator pos:start="196:57" pos:end="196:57">-</operator> <name pos:start="196:59" pos:end="196:61">idx</name><operator pos:start="196:62" pos:end="196:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="198:17" pos:end="198:55"><expr pos:start="198:17" pos:end="198:54"><call pos:start="198:17" pos:end="198:54"><name pos:start="198:17" pos:end="198:23">AV_WL32</name><argument_list pos:start="198:24" pos:end="198:54">(<argument pos:start="198:25" pos:end="198:47"><expr pos:start="198:25" pos:end="198:47"><name pos:start="198:25" pos:end="198:37"><name pos:start="198:25" pos:end="198:27">ctx</name><operator pos:start="198:28" pos:end="198:29">-&gt;</operator><name pos:start="198:30" pos:end="198:37">tex_data</name></name> <operator pos:start="198:39" pos:end="198:39">+</operator> <literal type="number" pos:start="198:41" pos:end="198:41">4</literal> <operator pos:start="198:43" pos:end="198:43">*</operator> <name pos:start="198:45" pos:end="198:47">pos</name></expr></argument>, <argument pos:start="198:50" pos:end="198:53"><expr pos:start="198:50" pos:end="198:53"><name pos:start="198:50" pos:end="198:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="200:17" pos:end="200:22"><expr pos:start="200:17" pos:end="200:21"><name pos:start="200:17" pos:end="200:19">pos</name><operator pos:start="200:20" pos:end="200:21">++</operator></expr>;</expr_stmt>

                <break pos:start="202:17" pos:end="202:22">break;</break>

            <case pos:start="204:13" pos:end="204:19">case <expr pos:start="204:18" pos:end="204:18"><literal type="number" pos:start="204:18" pos:end="204:18">3</literal></expr>:</case>

                <comment type="block" pos:start="206:17" pos:end="206:48">/* Copy two dwords from input */</comment>

                <expr_stmt pos:start="208:17" pos:end="208:49"><expr pos:start="208:17" pos:end="208:48"><name pos:start="208:17" pos:end="208:20">prev</name> <operator pos:start="208:22" pos:end="208:22">=</operator> <call pos:start="208:24" pos:end="208:48"><name pos:start="208:24" pos:end="208:43">bytestream2_get_le32</name><argument_list pos:start="208:44" pos:end="208:48">(<argument pos:start="208:45" pos:end="208:47"><expr pos:start="208:45" pos:end="208:47"><name pos:start="208:45" pos:end="208:47">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="210:17" pos:end="210:55"><expr pos:start="210:17" pos:end="210:54"><call pos:start="210:17" pos:end="210:54"><name pos:start="210:17" pos:end="210:23">AV_WL32</name><argument_list pos:start="210:24" pos:end="210:54">(<argument pos:start="210:25" pos:end="210:47"><expr pos:start="210:25" pos:end="210:47"><name pos:start="210:25" pos:end="210:37"><name pos:start="210:25" pos:end="210:27">ctx</name><operator pos:start="210:28" pos:end="210:29">-&gt;</operator><name pos:start="210:30" pos:end="210:37">tex_data</name></name> <operator pos:start="210:39" pos:end="210:39">+</operator> <literal type="number" pos:start="210:41" pos:end="210:41">4</literal> <operator pos:start="210:43" pos:end="210:43">*</operator> <name pos:start="210:45" pos:end="210:47">pos</name></expr></argument>, <argument pos:start="210:50" pos:end="210:53"><expr pos:start="210:50" pos:end="210:53"><name pos:start="210:50" pos:end="210:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="212:17" pos:end="212:22"><expr pos:start="212:17" pos:end="212:21"><name pos:start="212:17" pos:end="212:19">pos</name><operator pos:start="212:20" pos:end="212:21">++</operator></expr>;</expr_stmt>



                <expr_stmt pos:start="216:17" pos:end="216:49"><expr pos:start="216:17" pos:end="216:48"><name pos:start="216:17" pos:end="216:20">prev</name> <operator pos:start="216:22" pos:end="216:22">=</operator> <call pos:start="216:24" pos:end="216:48"><name pos:start="216:24" pos:end="216:43">bytestream2_get_le32</name><argument_list pos:start="216:44" pos:end="216:48">(<argument pos:start="216:45" pos:end="216:47"><expr pos:start="216:45" pos:end="216:47"><name pos:start="216:45" pos:end="216:47">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="218:17" pos:end="218:55"><expr pos:start="218:17" pos:end="218:54"><call pos:start="218:17" pos:end="218:54"><name pos:start="218:17" pos:end="218:23">AV_WL32</name><argument_list pos:start="218:24" pos:end="218:54">(<argument pos:start="218:25" pos:end="218:47"><expr pos:start="218:25" pos:end="218:47"><name pos:start="218:25" pos:end="218:37"><name pos:start="218:25" pos:end="218:27">ctx</name><operator pos:start="218:28" pos:end="218:29">-&gt;</operator><name pos:start="218:30" pos:end="218:37">tex_data</name></name> <operator pos:start="218:39" pos:end="218:39">+</operator> <literal type="number" pos:start="218:41" pos:end="218:41">4</literal> <operator pos:start="218:43" pos:end="218:43">*</operator> <name pos:start="218:45" pos:end="218:47">pos</name></expr></argument>, <argument pos:start="218:50" pos:end="218:53"><expr pos:start="218:50" pos:end="218:53"><name pos:start="218:50" pos:end="218:53">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="220:17" pos:end="220:22"><expr pos:start="220:17" pos:end="220:21"><name pos:start="220:17" pos:end="220:19">pos</name><operator pos:start="220:20" pos:end="220:21">++</operator></expr>;</expr_stmt>

                <break pos:start="222:17" pos:end="222:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="230:9" pos:end="230:22"><expr pos:start="230:9" pos:end="230:21"><call pos:start="230:9" pos:end="230:21"><name pos:start="230:9" pos:end="230:18">CHECKPOINT</name><argument_list pos:start="230:19" pos:end="230:21">(<argument pos:start="230:20" pos:end="230:20"><expr pos:start="230:20" pos:end="230:20"><literal type="number" pos:start="230:20" pos:end="230:20">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="232:9" pos:end="297:9"><if pos:start="232:9" pos:end="297:9">if <condition pos:start="232:12" pos:end="232:40">(<expr pos:start="232:13" pos:end="232:39"><name pos:start="232:13" pos:end="232:15">pos</name> <operator pos:start="232:17" pos:end="232:17">+</operator> <literal type="number" pos:start="232:19" pos:end="232:19">2</literal> <operator pos:start="232:21" pos:end="232:21">&gt;</operator> <name pos:start="232:23" pos:end="232:35"><name pos:start="232:23" pos:end="232:25">ctx</name><operator pos:start="232:26" pos:end="232:27">-&gt;</operator><name pos:start="232:28" pos:end="232:35">tex_size</name></name> <operator pos:start="232:37" pos:end="232:37">/</operator> <literal type="number" pos:start="232:39" pos:end="232:39">4</literal></expr>)</condition><block type="pseudo" pos:start="239:9" pos:end="297:9"><block_content pos:start="239:9" pos:end="297:9">




        <comment type="block" pos:start="237:9" pos:end="237:79">/* Copy two elements from a previous offset or from the input buffer */</comment>

        <if_stmt pos:start="239:9" pos:end="297:9"><if pos:start="239:9" pos:end="258:9">if <condition pos:start="239:12" pos:end="239:15">(<expr pos:start="239:13" pos:end="239:14"><name pos:start="239:13" pos:end="239:14">op</name></expr>)</condition> <block pos:start="239:17" pos:end="258:9">{<block_content pos:start="241:13" pos:end="256:18">

            <if_stmt pos:start="241:13" pos:end="244:60"><if pos:start="241:13" pos:end="244:60">if <condition pos:start="241:16" pos:end="241:79">(<expr pos:start="241:17" pos:end="241:78"><name pos:start="241:17" pos:end="241:19">idx</name> <operator pos:start="241:21" pos:end="241:21">&gt;</operator> <name pos:start="241:23" pos:end="241:25">pos</name> <operator pos:start="241:27" pos:end="241:28">||</operator> <operator pos:start="241:30" pos:end="241:30">(</operator><name pos:start="241:31" pos:end="241:38">unsigned</name> <name pos:start="241:40" pos:end="241:42">int</name><operator pos:start="241:43" pos:end="241:43">)</operator><operator pos:start="241:44" pos:end="241:44">(</operator><name pos:start="241:45" pos:end="241:47">pos</name> <operator pos:start="241:49" pos:end="241:49">-</operator> <name pos:start="241:51" pos:end="241:53">idx</name><operator pos:start="241:54" pos:end="241:54">)</operator> <operator pos:start="241:56" pos:end="241:56">+</operator> <literal type="number" pos:start="241:58" pos:end="241:58">2</literal> <operator pos:start="241:60" pos:end="241:60">&gt;</operator> <name pos:start="241:62" pos:end="241:74"><name pos:start="241:62" pos:end="241:64">ctx</name><operator pos:start="241:65" pos:end="241:66">-&gt;</operator><name pos:start="241:67" pos:end="241:74">tex_size</name></name> <operator pos:start="241:76" pos:end="241:76">/</operator> <literal type="number" pos:start="241:78" pos:end="241:78">4</literal></expr>)</condition><block type="pseudo" pos:start="244:13" pos:end="244:60"><block_content pos:start="244:13" pos:end="244:60">


            <expr_stmt pos:start="244:13" pos:end="244:60"><expr pos:start="244:13" pos:end="244:59"><name pos:start="244:13" pos:end="244:16">prev</name> <operator pos:start="244:18" pos:end="244:18">=</operator> <call pos:start="244:20" pos:end="244:59"><name pos:start="244:20" pos:end="244:26">AV_RL32</name><argument_list pos:start="244:27" pos:end="244:59">(<argument pos:start="244:28" pos:end="244:58"><expr pos:start="244:28" pos:end="244:58"><name pos:start="244:28" pos:end="244:40"><name pos:start="244:28" pos:end="244:30">ctx</name><operator pos:start="244:31" pos:end="244:32">-&gt;</operator><name pos:start="244:33" pos:end="244:40">tex_data</name></name> <operator pos:start="244:42" pos:end="244:42">+</operator> <literal type="number" pos:start="244:44" pos:end="244:44">4</literal> <operator pos:start="244:46" pos:end="244:46">*</operator> <operator pos:start="244:48" pos:end="244:48">(</operator><name pos:start="244:49" pos:end="244:51">pos</name> <operator pos:start="244:53" pos:end="244:53">-</operator> <name pos:start="244:55" pos:end="244:57">idx</name><operator pos:start="244:58" pos:end="244:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="246:13" pos:end="246:51"><expr pos:start="246:13" pos:end="246:50"><call pos:start="246:13" pos:end="246:50"><name pos:start="246:13" pos:end="246:19">AV_WL32</name><argument_list pos:start="246:20" pos:end="246:50">(<argument pos:start="246:21" pos:end="246:43"><expr pos:start="246:21" pos:end="246:43"><name pos:start="246:21" pos:end="246:33"><name pos:start="246:21" pos:end="246:23">ctx</name><operator pos:start="246:24" pos:end="246:25">-&gt;</operator><name pos:start="246:26" pos:end="246:33">tex_data</name></name> <operator pos:start="246:35" pos:end="246:35">+</operator> <literal type="number" pos:start="246:37" pos:end="246:37">4</literal> <operator pos:start="246:39" pos:end="246:39">*</operator> <name pos:start="246:41" pos:end="246:43">pos</name></expr></argument>, <argument pos:start="246:46" pos:end="246:49"><expr pos:start="246:46" pos:end="246:49"><name pos:start="246:46" pos:end="246:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="248:13" pos:end="248:18"><expr pos:start="248:13" pos:end="248:17"><name pos:start="248:13" pos:end="248:15">pos</name><operator pos:start="248:16" pos:end="248:17">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="252:13" pos:end="252:60"><expr pos:start="252:13" pos:end="252:59"><name pos:start="252:13" pos:end="252:16">prev</name> <operator pos:start="252:18" pos:end="252:18">=</operator> <call pos:start="252:20" pos:end="252:59"><name pos:start="252:20" pos:end="252:26">AV_RL32</name><argument_list pos:start="252:27" pos:end="252:59">(<argument pos:start="252:28" pos:end="252:58"><expr pos:start="252:28" pos:end="252:58"><name pos:start="252:28" pos:end="252:40"><name pos:start="252:28" pos:end="252:30">ctx</name><operator pos:start="252:31" pos:end="252:32">-&gt;</operator><name pos:start="252:33" pos:end="252:40">tex_data</name></name> <operator pos:start="252:42" pos:end="252:42">+</operator> <literal type="number" pos:start="252:44" pos:end="252:44">4</literal> <operator pos:start="252:46" pos:end="252:46">*</operator> <operator pos:start="252:48" pos:end="252:48">(</operator><name pos:start="252:49" pos:end="252:51">pos</name> <operator pos:start="252:53" pos:end="252:53">-</operator> <name pos:start="252:55" pos:end="252:57">idx</name><operator pos:start="252:58" pos:end="252:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="254:13" pos:end="254:51"><expr pos:start="254:13" pos:end="254:50"><call pos:start="254:13" pos:end="254:50"><name pos:start="254:13" pos:end="254:19">AV_WL32</name><argument_list pos:start="254:20" pos:end="254:50">(<argument pos:start="254:21" pos:end="254:43"><expr pos:start="254:21" pos:end="254:43"><name pos:start="254:21" pos:end="254:33"><name pos:start="254:21" pos:end="254:23">ctx</name><operator pos:start="254:24" pos:end="254:25">-&gt;</operator><name pos:start="254:26" pos:end="254:33">tex_data</name></name> <operator pos:start="254:35" pos:end="254:35">+</operator> <literal type="number" pos:start="254:37" pos:end="254:37">4</literal> <operator pos:start="254:39" pos:end="254:39">*</operator> <name pos:start="254:41" pos:end="254:43">pos</name></expr></argument>, <argument pos:start="254:46" pos:end="254:49"><expr pos:start="254:46" pos:end="254:49"><name pos:start="254:46" pos:end="254:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="256:13" pos:end="256:18"><expr pos:start="256:13" pos:end="256:17"><name pos:start="256:13" pos:end="256:15">pos</name><operator pos:start="256:16" pos:end="256:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="258:11" pos:end="297:9">else <block pos:start="258:16" pos:end="297:9">{<block_content pos:start="260:13" pos:end="295:18">

            <expr_stmt pos:start="260:13" pos:end="260:26"><expr pos:start="260:13" pos:end="260:25"><call pos:start="260:13" pos:end="260:25"><name pos:start="260:13" pos:end="260:22">CHECKPOINT</name><argument_list pos:start="260:23" pos:end="260:25">(<argument pos:start="260:24" pos:end="260:24"><expr pos:start="260:24" pos:end="260:24"><literal type="number" pos:start="260:24" pos:end="260:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="264:13" pos:end="273:49"><if pos:start="264:13" pos:end="273:49">if <condition pos:start="264:16" pos:end="264:87">(<expr pos:start="264:17" pos:end="264:86"><name pos:start="264:17" pos:end="264:18">op</name> <operator pos:start="264:20" pos:end="264:21">&amp;&amp;</operator> <operator pos:start="264:23" pos:end="264:23">(</operator><name pos:start="264:24" pos:end="264:26">idx</name> <operator pos:start="264:28" pos:end="264:28">&gt;</operator> <name pos:start="264:30" pos:end="264:32">pos</name> <operator pos:start="264:34" pos:end="264:35">||</operator> <operator pos:start="264:37" pos:end="264:37">(</operator><name pos:start="264:38" pos:end="264:45">unsigned</name> <name pos:start="264:47" pos:end="264:49">int</name><operator pos:start="264:50" pos:end="264:50">)</operator><operator pos:start="264:51" pos:end="264:51">(</operator><name pos:start="264:52" pos:end="264:54">pos</name> <operator pos:start="264:56" pos:end="264:56">-</operator> <name pos:start="264:58" pos:end="264:60">idx</name><operator pos:start="264:61" pos:end="264:61">)</operator> <operator pos:start="264:63" pos:end="264:63">+</operator> <literal type="number" pos:start="264:65" pos:end="264:65">2</literal> <operator pos:start="264:67" pos:end="264:67">&gt;</operator> <name pos:start="264:69" pos:end="264:81"><name pos:start="264:69" pos:end="264:71">ctx</name><operator pos:start="264:72" pos:end="264:73">-&gt;</operator><name pos:start="264:74" pos:end="264:81">tex_size</name></name> <operator pos:start="264:83" pos:end="264:83">/</operator> <literal type="number" pos:start="264:85" pos:end="264:85">4</literal><operator pos:start="264:86" pos:end="264:86">)</operator></expr>)</condition><block type="pseudo" pos:start="267:13" pos:end="273:49"><block_content pos:start="267:13" pos:end="273:49">


            <if_stmt pos:start="267:13" pos:end="273:49"><if pos:start="267:13" pos:end="269:64">if <condition pos:start="267:16" pos:end="267:19">(<expr pos:start="267:17" pos:end="267:18"><name pos:start="267:17" pos:end="267:18">op</name></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:64"><block_content pos:start="269:17" pos:end="269:64">

                <expr_stmt pos:start="269:17" pos:end="269:64"><expr pos:start="269:17" pos:end="269:63"><name pos:start="269:17" pos:end="269:20">prev</name> <operator pos:start="269:22" pos:end="269:22">=</operator> <call pos:start="269:24" pos:end="269:63"><name pos:start="269:24" pos:end="269:30">AV_RL32</name><argument_list pos:start="269:31" pos:end="269:63">(<argument pos:start="269:32" pos:end="269:62"><expr pos:start="269:32" pos:end="269:62"><name pos:start="269:32" pos:end="269:44"><name pos:start="269:32" pos:end="269:34">ctx</name><operator pos:start="269:35" pos:end="269:36">-&gt;</operator><name pos:start="269:37" pos:end="269:44">tex_data</name></name> <operator pos:start="269:46" pos:end="269:46">+</operator> <literal type="number" pos:start="269:48" pos:end="269:48">4</literal> <operator pos:start="269:50" pos:end="269:50">*</operator> <operator pos:start="269:52" pos:end="269:52">(</operator><name pos:start="269:53" pos:end="269:55">pos</name> <operator pos:start="269:57" pos:end="269:57">-</operator> <name pos:start="269:59" pos:end="269:61">idx</name><operator pos:start="269:62" pos:end="269:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="271:13" pos:end="273:49">else<block type="pseudo" pos:start="273:17" pos:end="273:49"><block_content pos:start="273:17" pos:end="273:49">

                <expr_stmt pos:start="273:17" pos:end="273:49"><expr pos:start="273:17" pos:end="273:48"><name pos:start="273:17" pos:end="273:20">prev</name> <operator pos:start="273:22" pos:end="273:22">=</operator> <call pos:start="273:24" pos:end="273:48"><name pos:start="273:24" pos:end="273:43">bytestream2_get_le32</name><argument_list pos:start="273:44" pos:end="273:48">(<argument pos:start="273:45" pos:end="273:47"><expr pos:start="273:45" pos:end="273:47"><name pos:start="273:45" pos:end="273:47">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:51"><expr pos:start="275:13" pos:end="275:50"><call pos:start="275:13" pos:end="275:50"><name pos:start="275:13" pos:end="275:19">AV_WL32</name><argument_list pos:start="275:20" pos:end="275:50">(<argument pos:start="275:21" pos:end="275:43"><expr pos:start="275:21" pos:end="275:43"><name pos:start="275:21" pos:end="275:33"><name pos:start="275:21" pos:end="275:23">ctx</name><operator pos:start="275:24" pos:end="275:25">-&gt;</operator><name pos:start="275:26" pos:end="275:33">tex_data</name></name> <operator pos:start="275:35" pos:end="275:35">+</operator> <literal type="number" pos:start="275:37" pos:end="275:37">4</literal> <operator pos:start="275:39" pos:end="275:39">*</operator> <name pos:start="275:41" pos:end="275:43">pos</name></expr></argument>, <argument pos:start="275:46" pos:end="275:49"><expr pos:start="275:46" pos:end="275:49"><name pos:start="275:46" pos:end="275:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:18"><expr pos:start="277:13" pos:end="277:17"><name pos:start="277:13" pos:end="277:15">pos</name><operator pos:start="277:16" pos:end="277:17">++</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="281:13" pos:end="281:26"><expr pos:start="281:13" pos:end="281:25"><call pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:22">CHECKPOINT</name><argument_list pos:start="281:23" pos:end="281:25">(<argument pos:start="281:24" pos:end="281:24"><expr pos:start="281:24" pos:end="281:24"><literal type="number" pos:start="281:24" pos:end="281:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="285:13" pos:end="291:49"><if pos:start="285:13" pos:end="287:64">if <condition pos:start="285:16" pos:end="285:19">(<expr pos:start="285:17" pos:end="285:18"><name pos:start="285:17" pos:end="285:18">op</name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:64"><block_content pos:start="287:17" pos:end="287:64">

                <expr_stmt pos:start="287:17" pos:end="287:64"><expr pos:start="287:17" pos:end="287:63"><name pos:start="287:17" pos:end="287:20">prev</name> <operator pos:start="287:22" pos:end="287:22">=</operator> <call pos:start="287:24" pos:end="287:63"><name pos:start="287:24" pos:end="287:30">AV_RL32</name><argument_list pos:start="287:31" pos:end="287:63">(<argument pos:start="287:32" pos:end="287:62"><expr pos:start="287:32" pos:end="287:62"><name pos:start="287:32" pos:end="287:44"><name pos:start="287:32" pos:end="287:34">ctx</name><operator pos:start="287:35" pos:end="287:36">-&gt;</operator><name pos:start="287:37" pos:end="287:44">tex_data</name></name> <operator pos:start="287:46" pos:end="287:46">+</operator> <literal type="number" pos:start="287:48" pos:end="287:48">4</literal> <operator pos:start="287:50" pos:end="287:50">*</operator> <operator pos:start="287:52" pos:end="287:52">(</operator><name pos:start="287:53" pos:end="287:55">pos</name> <operator pos:start="287:57" pos:end="287:57">-</operator> <name pos:start="287:59" pos:end="287:61">idx</name><operator pos:start="287:62" pos:end="287:62">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="289:13" pos:end="291:49">else<block type="pseudo" pos:start="291:17" pos:end="291:49"><block_content pos:start="291:17" pos:end="291:49">

                <expr_stmt pos:start="291:17" pos:end="291:49"><expr pos:start="291:17" pos:end="291:48"><name pos:start="291:17" pos:end="291:20">prev</name> <operator pos:start="291:22" pos:end="291:22">=</operator> <call pos:start="291:24" pos:end="291:48"><name pos:start="291:24" pos:end="291:43">bytestream2_get_le32</name><argument_list pos:start="291:44" pos:end="291:48">(<argument pos:start="291:45" pos:end="291:47"><expr pos:start="291:45" pos:end="291:47"><name pos:start="291:45" pos:end="291:47">gbc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="293:13" pos:end="293:51"><expr pos:start="293:13" pos:end="293:50"><call pos:start="293:13" pos:end="293:50"><name pos:start="293:13" pos:end="293:19">AV_WL32</name><argument_list pos:start="293:20" pos:end="293:50">(<argument pos:start="293:21" pos:end="293:43"><expr pos:start="293:21" pos:end="293:43"><name pos:start="293:21" pos:end="293:33"><name pos:start="293:21" pos:end="293:23">ctx</name><operator pos:start="293:24" pos:end="293:25">-&gt;</operator><name pos:start="293:26" pos:end="293:33">tex_data</name></name> <operator pos:start="293:35" pos:end="293:35">+</operator> <literal type="number" pos:start="293:37" pos:end="293:37">4</literal> <operator pos:start="293:39" pos:end="293:39">*</operator> <name pos:start="293:41" pos:end="293:43">pos</name></expr></argument>, <argument pos:start="293:46" pos:end="293:49"><expr pos:start="293:46" pos:end="293:49"><name pos:start="293:46" pos:end="293:49">prev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:18"><expr pos:start="295:13" pos:end="295:17"><name pos:start="295:13" pos:end="295:15">pos</name><operator pos:start="295:16" pos:end="295:17">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="303:5" pos:end="303:13">return <expr pos:start="303:12" pos:end="303:12"><literal type="number" pos:start="303:12" pos:end="303:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
