<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6687.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">usb_host_scan</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:50">USBScanFunc</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">func</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">f</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:7">DIR</name> <modifier pos:start="7:9" pos:end="7:9">*</modifier></type><name pos:start="7:10" pos:end="7:12">dir</name> <init pos:start="7:14" pos:end="7:16">= <expr pos:start="7:16" pos:end="7:16"><literal type="number" pos:start="7:16" pos:end="7:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:23">devices</name> <init pos:start="11:25" pos:end="11:36">= <expr pos:start="11:27" pos:end="11:36"><literal type="string" pos:start="11:27" pos:end="11:36">"/devices"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:22">opened</name> <init pos:start="13:24" pos:end="13:46">= <expr pos:start="13:26" pos:end="13:46"><literal type="string" pos:start="13:26" pos:end="13:46">"husb: opened %s%s\n"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:61"><type pos:start="15:5" pos:end="15:16"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:14">char</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:23">fs_type</name><index pos:start="15:24" pos:end="15:25">[]</index></name> <init pos:start="15:27" pos:end="15:61">= <expr pos:start="15:29" pos:end="15:61"><block pos:start="15:29" pos:end="15:61">{<expr pos:start="15:30" pos:end="15:38"><literal type="string" pos:start="15:30" pos:end="15:38">"unknown"</literal></expr>, <expr pos:start="15:41" pos:end="15:46"><literal type="string" pos:start="15:41" pos:end="15:46">"proc"</literal></expr>, <expr pos:start="15:49" pos:end="15:53"><literal type="string" pos:start="15:49" pos:end="15:53">"dev"</literal></expr>, <expr pos:start="15:56" pos:end="15:60"><literal type="string" pos:start="15:56" pos:end="15:60">"sys"</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:26"><name pos:start="17:10" pos:end="17:16">devpath</name><index pos:start="17:17" pos:end="17:26">[<expr pos:start="17:18" pos:end="17:25"><name pos:start="17:18" pos:end="17:25">PATH_MAX</name></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:34">/* only check the host once */</comment>

    <if_stmt pos:start="23:5" pos:end="105:5"><if pos:start="23:5" pos:end="105:5">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20">usb_fs_type</name></expr>)</condition> <block pos:start="23:23" pos:end="105:5">{<block_content pos:start="25:9" pos:end="103:9">

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:9">f</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:50"><name pos:start="25:13" pos:end="25:17">fopen</name><argument_list pos:start="25:18" pos:end="25:50">(<argument pos:start="25:19" pos:end="25:44"><expr pos:start="25:19" pos:end="25:44"><name pos:start="25:19" pos:end="25:33">USBPROCBUS_PATH</name> <literal type="string" pos:start="25:35" pos:end="25:44">"/devices"</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:49"><expr pos:start="25:47" pos:end="25:49"><literal type="string" pos:start="25:47" pos:end="25:49">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="39:9"><if pos:start="27:9" pos:end="39:9">if <condition pos:start="27:12" pos:end="27:14">(<expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">f</name></expr>)</condition> <block pos:start="27:16" pos:end="39:9">{<block_content pos:start="31:13" pos:end="37:54">

            <comment type="block" pos:start="29:13" pos:end="29:49">/* devices found in /proc/bus/usb/ */</comment>

            <expr_stmt pos:start="31:13" pos:end="31:45"><expr pos:start="31:13" pos:end="31:44"><call pos:start="31:13" pos:end="31:44"><name pos:start="31:13" pos:end="31:18">strcpy</name><argument_list pos:start="31:19" pos:end="31:44">(<argument pos:start="31:20" pos:end="31:26"><expr pos:start="31:20" pos:end="31:26"><name pos:start="31:20" pos:end="31:26">devpath</name></expr></argument>, <argument pos:start="31:29" pos:end="31:43"><expr pos:start="31:29" pos:end="31:43"><name pos:start="31:29" pos:end="31:43">USBPROCBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:38"><expr pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:23">usb_fs_type</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <name pos:start="33:27" pos:end="33:37">USB_FS_PROC</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:22"><expr pos:start="35:13" pos:end="35:21"><call pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:18">fclose</name><argument_list pos:start="35:19" pos:end="35:21">(<argument pos:start="35:20" pos:end="35:20"><expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><call pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:19">dprintf</name><argument_list pos:start="37:20" pos:end="37:53">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">opened</name></expr></argument>, <argument pos:start="37:29" pos:end="37:43"><expr pos:start="37:29" pos:end="37:43"><name pos:start="37:29" pos:end="37:43">USBPROCBUS_PATH</name></expr></argument>, <argument pos:start="37:46" pos:end="37:52"><expr pos:start="37:46" pos:end="37:52"><name pos:start="37:46" pos:end="37:52">devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:78">/* try additional methods if an access method hasn't been found yet */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:9">f</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:49"><name pos:start="43:13" pos:end="43:17">fopen</name><argument_list pos:start="43:18" pos:end="43:49">(<argument pos:start="43:19" pos:end="43:43"><expr pos:start="43:19" pos:end="43:43"><name pos:start="43:19" pos:end="43:32">USBDEVBUS_PATH</name> <literal type="string" pos:start="43:34" pos:end="43:43">"/devices"</literal></expr></argument>, <argument pos:start="43:46" pos:end="43:48"><expr pos:start="43:46" pos:end="43:48"><literal type="string" pos:start="43:46" pos:end="43:48">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:30">(<expr pos:start="45:13" pos:end="45:29"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:24">usb_fs_type</name> <operator pos:start="45:26" pos:end="45:27">&amp;&amp;</operator> <name pos:start="45:29" pos:end="45:29">f</name></expr>)</condition> <block pos:start="45:32" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:53">

            <comment type="block" pos:start="47:13" pos:end="47:48">/* devices found in /dev/bus/usb/ */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:44"><expr pos:start="49:13" pos:end="49:43"><call pos:start="49:13" pos:end="49:43"><name pos:start="49:13" pos:end="49:18">strcpy</name><argument_list pos:start="49:19" pos:end="49:43">(<argument pos:start="49:20" pos:end="49:26"><expr pos:start="49:20" pos:end="49:26"><name pos:start="49:20" pos:end="49:26">devpath</name></expr></argument>, <argument pos:start="49:29" pos:end="49:42"><expr pos:start="49:29" pos:end="49:42"><name pos:start="49:29" pos:end="49:42">USBDEVBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:36"><name pos:start="51:13" pos:end="51:23">usb_fs_type</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:36">USB_FS_DEV</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:22"><expr pos:start="53:13" pos:end="53:21"><call pos:start="53:13" pos:end="53:21"><name pos:start="53:13" pos:end="53:18">fclose</name><argument_list pos:start="53:19" pos:end="53:21">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><call pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:19">dprintf</name><argument_list pos:start="55:20" pos:end="55:52">(<argument pos:start="55:21" pos:end="55:26"><expr pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:26">opened</name></expr></argument>, <argument pos:start="55:29" pos:end="55:42"><expr pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:42">USBDEVBUS_PATH</name></expr></argument>, <argument pos:start="55:45" pos:end="55:51"><expr pos:start="55:45" pos:end="55:51"><name pos:start="55:45" pos:end="55:51">devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:49"><expr pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:11">dir</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:48"><name pos:start="59:15" pos:end="59:21">opendir</name><argument_list pos:start="59:22" pos:end="59:48">(<argument pos:start="59:23" pos:end="59:47"><expr pos:start="59:23" pos:end="59:47"><name pos:start="59:23" pos:end="59:36">USBSYSBUS_PATH</name> <literal type="string" pos:start="59:38" pos:end="59:47">"/devices"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="73:9"><if pos:start="61:9" pos:end="73:9">if <condition pos:start="61:12" pos:end="61:32">(<expr pos:start="61:13" pos:end="61:31"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:24">usb_fs_type</name> <operator pos:start="61:26" pos:end="61:27">&amp;&amp;</operator> <name pos:start="61:29" pos:end="61:31">dir</name></expr>)</condition> <block pos:start="61:34" pos:end="73:9">{<block_content pos:start="65:13" pos:end="71:53">

            <comment type="block" pos:start="63:13" pos:end="63:71">/* devices found in /dev/bus/usb/ (yes - not a mistake!) */</comment>

            <expr_stmt pos:start="65:13" pos:end="65:44"><expr pos:start="65:13" pos:end="65:43"><call pos:start="65:13" pos:end="65:43"><name pos:start="65:13" pos:end="65:18">strcpy</name><argument_list pos:start="65:19" pos:end="65:43">(<argument pos:start="65:20" pos:end="65:26"><expr pos:start="65:20" pos:end="65:26"><name pos:start="65:20" pos:end="65:26">devpath</name></expr></argument>, <argument pos:start="65:29" pos:end="65:42"><expr pos:start="65:29" pos:end="65:42"><name pos:start="65:29" pos:end="65:42">USBDEVBUS_PATH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:23">usb_fs_type</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:36">USB_FS_SYS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><call pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:20">closedir</name><argument_list pos:start="69:21" pos:end="69:25">(<argument pos:start="69:22" pos:end="69:24"><expr pos:start="69:22" pos:end="69:24"><name pos:start="69:22" pos:end="69:24">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:53"><expr pos:start="71:13" pos:end="71:52"><call pos:start="71:13" pos:end="71:52"><name pos:start="71:13" pos:end="71:19">dprintf</name><argument_list pos:start="71:20" pos:end="71:52">(<argument pos:start="71:21" pos:end="71:26"><expr pos:start="71:21" pos:end="71:26"><name pos:start="71:21" pos:end="71:26">opened</name></expr></argument>, <argument pos:start="71:29" pos:end="71:42"><expr pos:start="71:29" pos:end="71:42"><name pos:start="71:29" pos:end="71:42">USBSYSBUS_PATH</name></expr></argument>, <argument pos:start="71:45" pos:end="71:51"><expr pos:start="71:45" pos:end="71:51"><name pos:start="71:45" pos:end="71:51">devices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:25">(<expr pos:start="75:13" pos:end="75:24"><operator pos:start="75:13" pos:end="75:13">!</operator><name pos:start="75:14" pos:end="75:24">usb_fs_type</name></expr>)</condition> <block pos:start="75:27" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:25">

            <expr_stmt pos:start="77:13" pos:end="77:64"><expr pos:start="77:13" pos:end="77:63"><call pos:start="77:13" pos:end="77:63"><name pos:start="77:13" pos:end="77:23">term_printf</name><argument_list pos:start="77:24" pos:end="77:63">(<argument pos:start="77:25" pos:end="77:62"><expr pos:start="77:25" pos:end="77:62"><literal type="string" pos:start="77:25" pos:end="77:62">"husb: unable to access USB devices\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="79:13" pos:end="79:25">goto <name pos:start="79:18" pos:end="79:24">the_end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:65">/* the module setting (used later for opening devices) */</comment>

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:28">usb_host_device_path</name> <operator pos:start="87:30" pos:end="87:30">=</operator> <call pos:start="87:32" pos:end="87:62"><name pos:start="87:32" pos:end="87:43">qemu_mallocz</name><argument_list pos:start="87:44" pos:end="87:62">(<argument pos:start="87:45" pos:end="87:61"><expr pos:start="87:45" pos:end="87:61"><call pos:start="87:45" pos:end="87:59"><name pos:start="87:45" pos:end="87:50">strlen</name><argument_list pos:start="87:51" pos:end="87:59">(<argument pos:start="87:52" pos:end="87:58"><expr pos:start="87:52" pos:end="87:58"><name pos:start="87:52" pos:end="87:58">devpath</name></expr></argument>)</argument_list></call><operator pos:start="87:60" pos:end="87:60">+</operator><literal type="number" pos:start="87:61" pos:end="87:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="103:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:33">(<expr pos:start="89:13" pos:end="89:32"><name pos:start="89:13" pos:end="89:32">usb_host_device_path</name></expr>)</condition> <block pos:start="89:35" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:108">

            <expr_stmt pos:start="91:13" pos:end="91:50"><expr pos:start="91:13" pos:end="91:49"><call pos:start="91:13" pos:end="91:49"><name pos:start="91:13" pos:end="91:18">strcpy</name><argument_list pos:start="91:19" pos:end="91:49">(<argument pos:start="91:20" pos:end="91:39"><expr pos:start="91:20" pos:end="91:39"><name pos:start="91:20" pos:end="91:39">usb_host_device_path</name></expr></argument>, <argument pos:start="91:42" pos:end="91:48"><expr pos:start="91:42" pos:end="91:48"><name pos:start="91:42" pos:end="91:48">devpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:108"><expr pos:start="93:13" pos:end="93:107"><call pos:start="93:13" pos:end="93:107"><name pos:start="93:13" pos:end="93:23">term_printf</name><argument_list pos:start="93:24" pos:end="93:107">(<argument pos:start="93:25" pos:end="93:62"><expr pos:start="93:25" pos:end="93:62"><literal type="string" pos:start="93:25" pos:end="93:62">"husb: using %s file-system with %s\n"</literal></expr></argument>, <argument pos:start="93:65" pos:end="93:84"><expr pos:start="93:65" pos:end="93:84"><name pos:start="93:65" pos:end="93:84"><name pos:start="93:65" pos:end="93:71">fs_type</name><index pos:start="93:72" pos:end="93:84">[<expr pos:start="93:73" pos:end="93:83"><name pos:start="93:73" pos:end="93:83">usb_fs_type</name></expr>]</index></name></expr></argument>, <argument pos:start="93:87" pos:end="93:106"><expr pos:start="93:87" pos:end="93:106"><name pos:start="93:87" pos:end="93:106">usb_host_device_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="103:9">else <block pos:start="95:16" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:25">

            <comment type="block" pos:start="97:13" pos:end="97:32">/* out of memory? */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:70"><expr pos:start="99:13" pos:end="99:69"><call pos:start="99:13" pos:end="99:69"><name pos:start="99:13" pos:end="99:18">perror</name><argument_list pos:start="99:19" pos:end="99:69">(<argument pos:start="99:20" pos:end="99:68"><expr pos:start="99:20" pos:end="99:68"><literal type="string" pos:start="99:20" pos:end="99:68">"husb: unable to allocate memory for device path"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="101:13" pos:end="101:25">goto <name pos:start="101:18" pos:end="101:24">the_end</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="109:5" pos:end="125:5">switch <condition pos:start="109:12" pos:end="109:24">(<expr pos:start="109:13" pos:end="109:23"><name pos:start="109:13" pos:end="109:23">usb_fs_type</name></expr>)</condition> <block pos:start="109:26" pos:end="125:5">{<block_content pos:start="111:5" pos:end="123:14">

    <case pos:start="111:5" pos:end="111:21">case <expr pos:start="111:10" pos:end="111:20"><name pos:start="111:10" pos:end="111:20">USB_FS_PROC</name></expr>:</case>

    <case pos:start="113:5" pos:end="113:20">case <expr pos:start="113:10" pos:end="113:19"><name pos:start="113:10" pos:end="113:19">USB_FS_DEV</name></expr>:</case>

        <expr_stmt pos:start="115:9" pos:end="115:46"><expr pos:start="115:9" pos:end="115:45"><name pos:start="115:9" pos:end="115:11">ret</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <call pos:start="115:15" pos:end="115:45"><name pos:start="115:15" pos:end="115:31">usb_host_scan_dev</name><argument_list pos:start="115:32" pos:end="115:45">(<argument pos:start="115:33" pos:end="115:38"><expr pos:start="115:33" pos:end="115:38"><name pos:start="115:33" pos:end="115:38">opaque</name></expr></argument>, <argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:20">case <expr pos:start="119:10" pos:end="119:19"><name pos:start="119:10" pos:end="119:19">USB_FS_SYS</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:46"><expr pos:start="121:9" pos:end="121:45"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:45"><name pos:start="121:15" pos:end="121:31">usb_host_scan_sys</name><argument_list pos:start="121:32" pos:end="121:45">(<argument pos:start="121:33" pos:end="121:38"><expr pos:start="121:33" pos:end="121:38"><name pos:start="121:33" pos:end="121:38">opaque</name></expr></argument>, <argument pos:start="121:41" pos:end="121:44"><expr pos:start="121:41" pos:end="121:44"><name pos:start="121:41" pos:end="121:44">func</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    </block_content>}</block></switch>

 <label pos:start="127:2" pos:end="127:9"><name pos:start="127:2" pos:end="127:8">the_end</name>:</label>

    <return pos:start="129:5" pos:end="129:15">return <expr pos:start="129:12" pos:end="129:14"><name pos:start="129:12" pos:end="129:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
