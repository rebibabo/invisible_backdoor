<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9450.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">do_memory_save</name><parameter_list pos:start="1:27" pos:end="1:80">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:34">Monitor</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">mon</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:52">QDict</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:59">qdict</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:79"><decl pos:start="1:62" pos:end="1:79"><type pos:start="1:62" pos:end="1:79"><name pos:start="1:62" pos:end="1:68">QObject</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:79">ret_data</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:14">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">size</name> <init pos:start="7:19" pos:end="7:48">= <expr pos:start="7:21" pos:end="7:48"><call pos:start="7:21" pos:end="7:48"><name pos:start="7:21" pos:end="7:33">qdict_get_int</name><argument_list pos:start="7:34" pos:end="7:48">(<argument pos:start="7:35" pos:end="7:39"><expr pos:start="7:35" pos:end="7:39"><name pos:start="7:35" pos:end="7:39">qdict</name></expr></argument>, <argument pos:start="7:42" pos:end="7:47"><expr pos:start="7:42" pos:end="7:47"><literal type="string" pos:start="7:42" pos:end="7:47">"size"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:24">filename</name> <init pos:start="9:26" pos:end="9:59">= <expr pos:start="9:28" pos:end="9:59"><call pos:start="9:28" pos:end="9:59"><name pos:start="9:28" pos:end="9:40">qdict_get_str</name><argument_list pos:start="9:41" pos:end="9:59">(<argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><name pos:start="9:42" pos:end="9:46">qdict</name></expr></argument>, <argument pos:start="9:49" pos:end="9:58"><expr pos:start="9:49" pos:end="9:58"><literal type="string" pos:start="9:49" pos:end="9:58">"filename"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:51"><decl pos:start="11:5" pos:end="11:50"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:15">target_long</name></type> <name pos:start="11:17" pos:end="11:20">addr</name> <init pos:start="11:22" pos:end="11:50">= <expr pos:start="11:24" pos:end="11:50"><call pos:start="11:24" pos:end="11:50"><name pos:start="11:24" pos:end="11:36">qdict_get_int</name><argument_list pos:start="11:37" pos:end="11:50">(<argument pos:start="11:38" pos:end="11:42"><expr pos:start="11:38" pos:end="11:42"><name pos:start="11:38" pos:end="11:42">qdict</name></expr></argument>, <argument pos:start="11:45" pos:end="11:49"><expr pos:start="11:45" pos:end="11:49"><literal type="string" pos:start="11:45" pos:end="11:49">"val"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">CPUState</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:15">buf</name><index pos:start="17:16" pos:end="17:21">[<expr pos:start="17:17" pos:end="17:20"><literal type="number" pos:start="17:17" pos:end="17:20">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:7">env</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:23"><name pos:start="21:11" pos:end="21:21">mon_get_cpu</name><argument_list pos:start="21:22" pos:end="21:23">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">env</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:5">f</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:29"><name pos:start="29:9" pos:end="29:13">fopen</name><argument_list pos:start="29:14" pos:end="29:29">(<argument pos:start="29:15" pos:end="29:22"><expr pos:start="29:15" pos:end="29:22"><name pos:start="29:15" pos:end="29:22">filename</name></expr></argument>, <argument pos:start="29:25" pos:end="29:28"><expr pos:start="29:25" pos:end="29:28"><literal type="string" pos:start="29:25" pos:end="29:28">"wb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:11">(<expr pos:start="31:9" pos:end="31:10"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:10">f</name></expr>)</condition> <block pos:start="31:13" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:15">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:22">monitor_printf</name><argument_list pos:start="33:23" pos:end="33:62">(<argument pos:start="33:24" pos:end="33:26"><expr pos:start="33:24" pos:end="33:26"><name pos:start="33:24" pos:end="33:26">mon</name></expr></argument>, <argument pos:start="33:29" pos:end="33:51"><expr pos:start="33:29" pos:end="33:51"><literal type="string" pos:start="33:29" pos:end="33:51">"could not open '%s'\n"</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:61"><expr pos:start="33:54" pos:end="33:61"><name pos:start="33:54" pos:end="33:61">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <while pos:start="39:5" pos:end="55:5">while <condition pos:start="39:11" pos:end="39:21">(<expr pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:15">size</name> <operator pos:start="39:17" pos:end="39:18">!=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>)</condition> <block pos:start="39:23" pos:end="55:5">{<block_content pos:start="41:9" pos:end="53:18">

        <expr_stmt pos:start="41:9" pos:end="41:24"><expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">l</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <sizeof pos:start="41:13" pos:end="41:23">sizeof<argument_list pos:start="41:19" pos:end="41:23">(<argument pos:start="41:20" pos:end="41:22"><expr pos:start="41:20" pos:end="41:22"><name pos:start="41:20" pos:end="41:22">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="45:21"><if pos:start="43:9" pos:end="45:21">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:13">l</name> <operator pos:start="43:15" pos:end="43:15">&gt;</operator> <name pos:start="43:17" pos:end="43:20">size</name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:21"><block_content pos:start="45:13" pos:end="45:21">

            <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:13">l</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:20">size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:50"><expr pos:start="47:9" pos:end="47:49"><call pos:start="47:9" pos:end="47:49"><name pos:start="47:9" pos:end="47:27">cpu_memory_rw_debug</name><argument_list pos:start="47:28" pos:end="47:49">(<argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><name pos:start="47:29" pos:end="47:31">env</name></expr></argument>, <argument pos:start="47:34" pos:end="47:37"><expr pos:start="47:34" pos:end="47:37"><name pos:start="47:34" pos:end="47:37">addr</name></expr></argument>, <argument pos:start="47:40" pos:end="47:42"><expr pos:start="47:40" pos:end="47:42"><name pos:start="47:40" pos:end="47:42">buf</name></expr></argument>, <argument pos:start="47:45" pos:end="47:45"><expr pos:start="47:45" pos:end="47:45"><name pos:start="47:45" pos:end="47:45">l</name></expr></argument>, <argument pos:start="47:48" pos:end="47:48"><expr pos:start="47:48" pos:end="47:48"><literal type="number" pos:start="47:48" pos:end="47:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><call pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:14">fwrite</name><argument_list pos:start="49:15" pos:end="49:28">(<argument pos:start="49:16" pos:end="49:18"><expr pos:start="49:16" pos:end="49:18"><name pos:start="49:16" pos:end="49:18">buf</name></expr></argument>, <argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr></argument>, <argument pos:start="49:24" pos:end="49:24"><expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">l</name></expr></argument>, <argument pos:start="49:27" pos:end="49:27"><expr pos:start="49:27" pos:end="49:27"><name pos:start="49:27" pos:end="49:27">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:18"><expr pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:12">addr</name> <operator pos:start="51:14" pos:end="51:15">+=</operator> <name pos:start="51:17" pos:end="51:17">l</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:18"><expr pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:12">size</name> <operator pos:start="53:14" pos:end="53:15">-=</operator> <name pos:start="53:17" pos:end="53:17">l</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="57:5" pos:end="57:14"><expr pos:start="57:5" pos:end="57:13"><call pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:10">fclose</name><argument_list pos:start="57:11" pos:end="57:13">(<argument pos:start="57:12" pos:end="57:12"><expr pos:start="57:12" pos:end="57:12"><name pos:start="57:12" pos:end="57:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
