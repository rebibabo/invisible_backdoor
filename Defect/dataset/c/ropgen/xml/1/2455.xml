<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2455.c" pos:tabs="8"><function pos:start="1:1" pos:end="389:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">flv_write_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="389:1">{<block_content pos:start="5:5" pos:end="387:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FLVContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">flv</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:74"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:29">audio_enc</name> <init pos:start="9:31" pos:end="9:36">= <expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">NULL</name></expr></init></decl>, <decl pos:start="9:39" pos:end="9:55"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:39" pos:end="9:39">*</modifier></type><name pos:start="9:40" pos:end="9:48">video_enc</name> <init pos:start="9:50" pos:end="9:55">= <expr pos:start="9:52" pos:end="9:55"><name pos:start="9:52" pos:end="9:55">NULL</name></expr></init></decl>, <decl pos:start="9:58" pos:end="9:73"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:66">data_enc</name> <init pos:start="9:68" pos:end="9:73">= <expr pos:start="9:70" pos:end="9:73"><name pos:start="9:70" pos:end="9:73">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:25">metadata_count</name> <init pos:start="11:27" pos:end="11:29">= <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:20">framerate</name> <init pos:start="13:22" pos:end="13:26">= <expr pos:start="13:24" pos:end="13:26"><literal type="number" pos:start="13:24" pos:end="13:26">0.0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:61"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:29">metadata_size_pos</name></decl>, <decl pos:start="15:32" pos:end="15:40"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:32" pos:end="15:40">data_size</name></decl>, <decl pos:start="15:43" pos:end="15:60"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:43" pos:end="15:60">metadata_count_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:21">AVDictionaryEntry</name> <modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:26">tag</name> <init pos:start="17:28" pos:end="17:33">= <expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">NULL</name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="101:5">for <control pos:start="21:9" pos:end="21:39">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:34"><expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">nb_streams</name></name></expr>;</condition> <incr pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:36">i</name><operator pos:start="21:37" pos:end="21:38">++</operator></expr></incr>)</control> <block pos:start="21:41" pos:end="101:5">{<block_content pos:start="23:9" pos:end="99:25">

        <decl_stmt pos:start="23:9" pos:end="23:51"><decl pos:start="23:9" pos:end="23:50"><type pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:22">AVCodecContext</name> <modifier pos:start="23:24" pos:end="23:24">*</modifier></type><name pos:start="23:25" pos:end="23:27">enc</name> <init pos:start="23:29" pos:end="23:50">= <expr pos:start="23:31" pos:end="23:50"><name pos:start="23:31" pos:end="23:43"><name pos:start="23:31" pos:end="23:31">s</name><operator pos:start="23:32" pos:end="23:33">-&gt;</operator><name pos:start="23:34" pos:end="23:40">streams</name><index pos:start="23:41" pos:end="23:43">[<expr pos:start="23:42" pos:end="23:42"><name pos:start="23:42" pos:end="23:42">i</name></expr>]</index></name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:50">codec</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:29"><decl pos:start="25:9" pos:end="25:28"><type pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:24">FLVStreamContext</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:28">sc</name></decl>;</decl_stmt>

        <switch pos:start="27:9" pos:end="85:9">switch <condition pos:start="27:16" pos:end="27:32">(<expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:19">enc</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:31">codec_type</name></name></expr>)</condition> <block pos:start="27:34" pos:end="85:9">{<block_content pos:start="29:9" pos:end="83:22">

        <case pos:start="29:9" pos:end="29:32">case <expr pos:start="29:14" pos:end="29:31"><name pos:start="29:14" pos:end="29:31">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <if_stmt pos:start="31:13" pos:end="41:13"><if pos:start="31:13" pos:end="37:13">if <condition pos:start="31:16" pos:end="33:48">(<expr pos:start="31:17" pos:end="33:47"><name pos:start="31:17" pos:end="31:29"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:26">streams</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">i</name></expr>]</index></name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:47"><name pos:start="31:32" pos:end="31:43">r_frame_rate</name><operator pos:start="31:44" pos:end="31:44">.</operator><name pos:start="31:45" pos:end="31:47">den</name></name> <operator pos:start="31:49" pos:end="31:50">&amp;&amp;</operator>

                <name pos:start="33:17" pos:end="33:29"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">streams</name><index pos:start="33:27" pos:end="33:29">[<expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">i</name></expr>]</index></name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:47"><name pos:start="33:32" pos:end="33:43">r_frame_rate</name><operator pos:start="33:44" pos:end="33:44">.</operator><name pos:start="33:45" pos:end="33:47">num</name></name></expr>)</condition> <block pos:start="33:50" pos:end="37:13">{<block_content pos:start="35:17" pos:end="35:64">

                <expr_stmt pos:start="35:17" pos:end="35:64"><expr pos:start="35:17" pos:end="35:63"><name pos:start="35:17" pos:end="35:25">framerate</name> <operator pos:start="35:27" pos:end="35:27">=</operator> <call pos:start="35:29" pos:end="35:63"><name pos:start="35:29" pos:end="35:34">av_q2d</name><argument_list pos:start="35:35" pos:end="35:63">(<argument pos:start="35:36" pos:end="35:62"><expr pos:start="35:36" pos:end="35:62"><name pos:start="35:36" pos:end="35:48"><name pos:start="35:36" pos:end="35:36">s</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:45">streams</name><index pos:start="35:46" pos:end="35:48">[<expr pos:start="35:47" pos:end="35:47"><name pos:start="35:47" pos:end="35:47">i</name></expr>]</index></name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:62">r_frame_rate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="37:15" pos:end="41:13">else <block pos:start="37:20" pos:end="41:13">{<block_content pos:start="39:17" pos:end="39:72">

                <expr_stmt pos:start="39:17" pos:end="39:72"><expr pos:start="39:17" pos:end="39:71"><name pos:start="39:17" pos:end="39:25">framerate</name> <operator pos:start="39:27" pos:end="39:27">=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">1</literal> <operator pos:start="39:31" pos:end="39:31">/</operator> <call pos:start="39:33" pos:end="39:71"><name pos:start="39:33" pos:end="39:38">av_q2d</name><argument_list pos:start="39:39" pos:end="39:71">(<argument pos:start="39:40" pos:end="39:70"><expr pos:start="39:40" pos:end="39:70"><name pos:start="39:40" pos:end="39:52"><name pos:start="39:40" pos:end="39:40">s</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:49">streams</name><index pos:start="39:50" pos:end="39:52">[<expr pos:start="39:51" pos:end="39:51"><name pos:start="39:51" pos:end="39:51">i</name></expr>]</index></name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:70"><name pos:start="39:55" pos:end="39:59">codec</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:70">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:21">video_enc</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:27">enc</name></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:36">(<expr pos:start="45:17" pos:end="45:35"><name pos:start="45:17" pos:end="45:30"><name pos:start="45:17" pos:end="45:19">enc</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:30">codec_tag</name></name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="number" pos:start="45:35" pos:end="45:35">0</literal></expr>)</condition> <block pos:start="45:38" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:26">

                <expr_stmt pos:start="47:17" pos:end="47:81"><expr pos:start="47:17" pos:end="47:80"><call pos:start="47:17" pos:end="47:80"><name pos:start="47:17" pos:end="47:22">av_log</name><argument_list pos:start="47:23" pos:end="47:80">(<argument pos:start="47:24" pos:end="47:24"><expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">s</name></expr></argument>, <argument pos:start="47:27" pos:end="47:38"><expr pos:start="47:27" pos:end="47:38"><name pos:start="47:27" pos:end="47:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:41" pos:end="47:79"><expr pos:start="47:41" pos:end="47:79"><literal type="string" pos:start="47:41" pos:end="47:79">"video codec not compatible with flv\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="49:17" pos:end="49:26">return <expr pos:start="49:24" pos:end="49:25"><operator pos:start="49:24" pos:end="49:24">-</operator><literal type="number" pos:start="49:25" pos:end="49:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:32">case <expr pos:start="55:14" pos:end="55:31"><name pos:start="55:14" pos:end="55:31">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:28"><expr pos:start="57:13" pos:end="57:27"><name pos:start="57:13" pos:end="57:21">audio_enc</name> <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:27">enc</name></expr>;</expr_stmt>

            <if_stmt pos:start="59:13" pos:end="61:43"><if pos:start="59:13" pos:end="61:43">if <condition pos:start="59:16" pos:end="59:44">(<expr pos:start="59:17" pos:end="59:43"><call pos:start="59:17" pos:end="59:39"><name pos:start="59:17" pos:end="59:31">get_audio_flags</name><argument_list pos:start="59:32" pos:end="59:39">(<argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><name pos:start="59:33" pos:end="59:33">s</name></expr></argument>, <argument pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:38">enc</name></expr></argument>)</argument_list></call> <operator pos:start="59:41" pos:end="59:41">&lt;</operator> <literal type="number" pos:start="59:43" pos:end="59:43">0</literal></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:43"><block_content pos:start="61:17" pos:end="61:43">

                <return pos:start="61:17" pos:end="61:43">return <expr pos:start="61:24" pos:end="61:42"><name pos:start="61:24" pos:end="61:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:31">case <expr pos:start="65:14" pos:end="65:30"><name pos:start="65:14" pos:end="65:30">AVMEDIA_TYPE_DATA</name></expr>:</case>

            <if_stmt pos:start="67:13" pos:end="73:13"><if pos:start="67:13" pos:end="73:13">if <condition pos:start="67:16" pos:end="67:47">(<expr pos:start="67:17" pos:end="67:46"><name pos:start="67:17" pos:end="67:29"><name pos:start="67:17" pos:end="67:19">enc</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:29">codec_id</name></name> <operator pos:start="67:31" pos:end="67:32">!=</operator> <name pos:start="67:34" pos:end="67:46">CODEC_ID_TEXT</name></expr>)</condition> <block pos:start="67:49" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:43">

                <expr_stmt pos:start="69:17" pos:end="69:75"><expr pos:start="69:17" pos:end="69:74"><call pos:start="69:17" pos:end="69:74"><name pos:start="69:17" pos:end="69:22">av_log</name><argument_list pos:start="69:23" pos:end="69:74">(<argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">s</name></expr></argument>, <argument pos:start="69:27" pos:end="69:38"><expr pos:start="69:27" pos:end="69:38"><name pos:start="69:27" pos:end="69:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="69:41" pos:end="69:73"><expr pos:start="69:41" pos:end="69:73"><literal type="string" pos:start="69:41" pos:end="69:73">"codec not compatible with flv\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="71:17" pos:end="71:43">return <expr pos:start="71:24" pos:end="71:42"><name pos:start="71:24" pos:end="71:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:20">data_enc</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:26">enc</name></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <default pos:start="79:9" pos:end="79:16">default:</default>

            <expr_stmt pos:start="81:13" pos:end="81:71"><expr pos:start="81:13" pos:end="81:70"><call pos:start="81:13" pos:end="81:70"><name pos:start="81:13" pos:end="81:18">av_log</name><argument_list pos:start="81:19" pos:end="81:70">(<argument pos:start="81:20" pos:end="81:20"><expr pos:start="81:20" pos:end="81:20"><name pos:start="81:20" pos:end="81:20">s</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:69"><expr pos:start="81:37" pos:end="81:69"><literal type="string" pos:start="81:37" pos:end="81:69">"codec not compatible with flv\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="83:13" pos:end="83:22">return <expr pos:start="83:20" pos:end="83:21"><operator pos:start="83:20" pos:end="83:20">-</operator><literal type="number" pos:start="83:21" pos:end="83:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><call pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:27">avpriv_set_pts_info</name><argument_list pos:start="87:28" pos:end="87:55">(<argument pos:start="87:29" pos:end="87:41"><expr pos:start="87:29" pos:end="87:41"><name pos:start="87:29" pos:end="87:41"><name pos:start="87:29" pos:end="87:29">s</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:38">streams</name><index pos:start="87:39" pos:end="87:41">[<expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">i</name></expr>]</index></name></expr></argument>, <argument pos:start="87:44" pos:end="87:45"><expr pos:start="87:44" pos:end="87:45"><literal type="number" pos:start="87:44" pos:end="87:45">32</literal></expr></argument>, <argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">1</literal></expr></argument>, <argument pos:start="87:51" pos:end="87:54"><expr pos:start="87:51" pos:end="87:54"><literal type="number" pos:start="87:51" pos:end="87:54">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:58" pos:end="87:79">/* 32 bit pts in ms */</comment>



        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:10">sc</name> <operator pos:start="91:12" pos:end="91:12">=</operator> <call pos:start="91:14" pos:end="91:49"><name pos:start="91:14" pos:end="91:23">av_mallocz</name><argument_list pos:start="91:24" pos:end="91:49">(<argument pos:start="91:25" pos:end="91:48"><expr pos:start="91:25" pos:end="91:48"><sizeof pos:start="91:25" pos:end="91:48">sizeof<argument_list pos:start="91:31" pos:end="91:48">(<argument pos:start="91:32" pos:end="91:47"><expr pos:start="91:32" pos:end="91:47"><name pos:start="91:32" pos:end="91:47">FLVStreamContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:35"><if pos:start="93:9" pos:end="95:35">if <condition pos:start="93:12" pos:end="93:16">(<expr pos:start="93:13" pos:end="93:15"><operator pos:start="93:13" pos:end="93:13">!</operator><name pos:start="93:14" pos:end="93:15">sc</name></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:35"><block_content pos:start="95:13" pos:end="95:35">

            <return pos:start="95:13" pos:end="95:35">return <expr pos:start="95:20" pos:end="95:34"><call pos:start="95:20" pos:end="95:34"><name pos:start="95:20" pos:end="95:26">AVERROR</name><argument_list pos:start="95:27" pos:end="95:34">(<argument pos:start="95:28" pos:end="95:33"><expr pos:start="95:28" pos:end="95:33"><name pos:start="95:28" pos:end="95:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:38"><expr pos:start="97:9" pos:end="97:37"><name pos:start="97:9" pos:end="97:21"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:18">streams</name><index pos:start="97:19" pos:end="97:21">[<expr pos:start="97:20" pos:end="97:20"><name pos:start="97:20" pos:end="97:20">i</name></expr>]</index></name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:32">priv_data</name> <operator pos:start="97:34" pos:end="97:34">=</operator> <name pos:start="97:36" pos:end="97:37">sc</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:25"><expr pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:10">sc</name><operator pos:start="99:11" pos:end="99:12">-&gt;</operator><name pos:start="99:13" pos:end="99:19">last_ts</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <operator pos:start="99:23" pos:end="99:23">-</operator><literal type="number" pos:start="99:24" pos:end="99:24">1</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="105:5" pos:end="105:32"><expr pos:start="105:5" pos:end="105:31"><name pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:7">flv</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:14">delay</name></name> <operator pos:start="105:16" pos:end="105:16">=</operator> <name pos:start="105:18" pos:end="105:31">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:29"><expr pos:start="109:5" pos:end="109:28"><call pos:start="109:5" pos:end="109:28"><name pos:start="109:5" pos:end="109:14">avio_write</name><argument_list pos:start="109:15" pos:end="109:28">(<argument pos:start="109:16" pos:end="109:17"><expr pos:start="109:16" pos:end="109:17"><name pos:start="109:16" pos:end="109:17">pb</name></expr></argument>, <argument pos:start="109:20" pos:end="109:24"><expr pos:start="109:20" pos:end="109:24"><literal type="string" pos:start="109:20" pos:end="109:24">"FLV"</literal></expr></argument>, <argument pos:start="109:27" pos:end="109:27"><expr pos:start="109:27" pos:end="109:27"><literal type="number" pos:start="109:27" pos:end="109:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:19"><expr pos:start="111:5" pos:end="111:18"><call pos:start="111:5" pos:end="111:18"><name pos:start="111:5" pos:end="111:11">avio_w8</name><argument_list pos:start="111:12" pos:end="111:18">(<argument pos:start="111:13" pos:end="111:14"><expr pos:start="111:13" pos:end="111:14"><name pos:start="111:13" pos:end="111:14">pb</name></expr></argument>, <argument pos:start="111:17" pos:end="111:17"><expr pos:start="111:17" pos:end="111:17"><literal type="number" pos:start="111:17" pos:end="111:17">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="115:56"><expr pos:start="113:5" pos:end="115:55"><call pos:start="113:5" pos:end="115:55"><name pos:start="113:5" pos:end="113:11">avio_w8</name><argument_list pos:start="113:12" pos:end="115:55">(<argument pos:start="113:13" pos:end="113:14"><expr pos:start="113:13" pos:end="113:14"><name pos:start="113:13" pos:end="113:14">pb</name></expr></argument>, <argument pos:start="113:17" pos:end="115:54"><expr pos:start="113:17" pos:end="115:54"><name pos:start="113:17" pos:end="113:40">FLV_HEADER_FLAG_HASAUDIO</name> <operator pos:start="113:42" pos:end="113:42">*</operator> <operator pos:start="113:44" pos:end="113:44">!</operator><operator pos:start="113:45" pos:end="113:45">!</operator><name pos:start="113:46" pos:end="113:54">audio_enc</name> <operator pos:start="113:56" pos:end="113:56">+</operator>

                <name pos:start="115:17" pos:end="115:40">FLV_HEADER_FLAG_HASVIDEO</name> <operator pos:start="115:42" pos:end="115:42">*</operator> <operator pos:start="115:44" pos:end="115:44">!</operator><operator pos:start="115:45" pos:end="115:45">!</operator><name pos:start="115:46" pos:end="115:54">video_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:21"><expr pos:start="117:5" pos:end="117:20"><call pos:start="117:5" pos:end="117:20"><name pos:start="117:5" pos:end="117:13">avio_wb32</name><argument_list pos:start="117:14" pos:end="117:20">(<argument pos:start="117:15" pos:end="117:16"><expr pos:start="117:15" pos:end="117:16"><name pos:start="117:15" pos:end="117:16">pb</name></expr></argument>, <argument pos:start="117:19" pos:end="117:19"><expr pos:start="117:19" pos:end="117:19"><literal type="number" pos:start="117:19" pos:end="117:19">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:21"><expr pos:start="119:5" pos:end="119:20"><call pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:13">avio_wb32</name><argument_list pos:start="119:14" pos:end="119:20">(<argument pos:start="119:15" pos:end="119:16"><expr pos:start="119:15" pos:end="119:16"><name pos:start="119:15" pos:end="119:16">pb</name></expr></argument>, <argument pos:start="119:19" pos:end="119:19"><expr pos:start="119:19" pos:end="119:19"><literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="123:5" pos:end="139:9">for <control pos:start="123:9" pos:end="123:39">(<init pos:start="123:10" pos:end="123:15"><expr pos:start="123:10" pos:end="123:14"><name pos:start="123:10" pos:end="123:10">i</name> <operator pos:start="123:12" pos:end="123:12">=</operator> <literal type="number" pos:start="123:14" pos:end="123:14">0</literal></expr>;</init> <condition pos:start="123:17" pos:end="123:34"><expr pos:start="123:17" pos:end="123:33"><name pos:start="123:17" pos:end="123:17">i</name> <operator pos:start="123:19" pos:end="123:19">&lt;</operator> <name pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:21">s</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:33">nb_streams</name></name></expr>;</condition> <incr pos:start="123:36" pos:end="123:38"><expr pos:start="123:36" pos:end="123:38"><name pos:start="123:36" pos:end="123:36">i</name><operator pos:start="123:37" pos:end="123:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="125:9" pos:end="139:9"><block_content pos:start="125:9" pos:end="139:9">

        <if_stmt pos:start="125:9" pos:end="139:9"><if pos:start="125:9" pos:end="139:9">if <condition pos:start="125:12" pos:end="125:49">(<expr pos:start="125:13" pos:end="125:48"><name pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:22">streams</name><index pos:start="125:23" pos:end="125:25">[<expr pos:start="125:24" pos:end="125:24"><name pos:start="125:24" pos:end="125:24">i</name></expr>]</index></name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:43"><name pos:start="125:28" pos:end="125:32">codec</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:43">codec_tag</name></name> <operator pos:start="125:45" pos:end="125:46">==</operator> <literal type="number" pos:start="125:48" pos:end="125:48">5</literal></expr>)</condition> <block pos:start="125:51" pos:end="139:9">{<block_content pos:start="127:13" pos:end="137:30">

            <expr_stmt pos:start="127:13" pos:end="127:27"><expr pos:start="127:13" pos:end="127:26"><call pos:start="127:13" pos:end="127:26"><name pos:start="127:13" pos:end="127:19">avio_w8</name><argument_list pos:start="127:20" pos:end="127:26">(<argument pos:start="127:21" pos:end="127:22"><expr pos:start="127:21" pos:end="127:22"><name pos:start="127:21" pos:end="127:22">pb</name></expr></argument>, <argument pos:start="127:25" pos:end="127:25"><expr pos:start="127:25" pos:end="127:25"><literal type="number" pos:start="127:25" pos:end="127:25">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="127:33" pos:end="127:47">// message type</comment>

            <expr_stmt pos:start="129:13" pos:end="129:29"><expr pos:start="129:13" pos:end="129:28"><call pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:21">avio_wb24</name><argument_list pos:start="129:22" pos:end="129:28">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">pb</name></expr></argument>, <argument pos:start="129:27" pos:end="129:27"><expr pos:start="129:27" pos:end="129:27"><literal type="number" pos:start="129:27" pos:end="129:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="129:33" pos:end="129:48">// include flags</comment>

            <expr_stmt pos:start="131:13" pos:end="131:29"><expr pos:start="131:13" pos:end="131:28"><call pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:21">avio_wb24</name><argument_list pos:start="131:22" pos:end="131:28">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">pb</name></expr></argument>, <argument pos:start="131:27" pos:end="131:27"><expr pos:start="131:27" pos:end="131:27"><literal type="number" pos:start="131:27" pos:end="131:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="131:33" pos:end="131:45">// time stamp</comment>

            <expr_stmt pos:start="133:13" pos:end="133:29"><expr pos:start="133:13" pos:end="133:28"><call pos:start="133:13" pos:end="133:28"><name pos:start="133:13" pos:end="133:21">avio_wb32</name><argument_list pos:start="133:22" pos:end="133:28">(<argument pos:start="133:23" pos:end="133:24"><expr pos:start="133:23" pos:end="133:24"><name pos:start="133:23" pos:end="133:24">pb</name></expr></argument>, <argument pos:start="133:27" pos:end="133:27"><expr pos:start="133:27" pos:end="133:27"><literal type="number" pos:start="133:27" pos:end="133:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="133:33" pos:end="133:43">// reserved</comment>

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><call pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:21">avio_wb32</name><argument_list pos:start="135:22" pos:end="135:29">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>, <argument pos:start="135:27" pos:end="135:28"><expr pos:start="135:27" pos:end="135:28"><literal type="number" pos:start="135:27" pos:end="135:28">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="135:33" pos:end="135:39">// size</comment>

            <expr_stmt pos:start="137:13" pos:end="137:30"><expr pos:start="137:13" pos:end="137:29"><name pos:start="137:13" pos:end="137:25"><name pos:start="137:13" pos:end="137:15">flv</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:25">reserved</name></name> <operator pos:start="137:27" pos:end="137:27">=</operator> <literal type="number" pos:start="137:29" pos:end="137:29">5</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt></block_content></block></for>



    <comment type="block" pos:start="143:5" pos:end="143:24">/* write meta_tag */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:20"><expr pos:start="145:5" pos:end="145:19"><call pos:start="145:5" pos:end="145:19"><name pos:start="145:5" pos:end="145:11">avio_w8</name><argument_list pos:start="145:12" pos:end="145:19">(<argument pos:start="145:13" pos:end="145:14"><expr pos:start="145:13" pos:end="145:14"><name pos:start="145:13" pos:end="145:14">pb</name></expr></argument>, <argument pos:start="145:17" pos:end="145:18"><expr pos:start="145:17" pos:end="145:18"><literal type="number" pos:start="145:17" pos:end="145:18">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="line" pos:start="145:33" pos:end="145:48">// tag type META</comment>

    <expr_stmt pos:start="147:5" pos:end="147:38"><expr pos:start="147:5" pos:end="147:37"><name pos:start="147:5" pos:end="147:21">metadata_size_pos</name> <operator pos:start="147:23" pos:end="147:23">=</operator> <call pos:start="147:25" pos:end="147:37"><name pos:start="147:25" pos:end="147:33">avio_tell</name><argument_list pos:start="147:34" pos:end="147:37">(<argument pos:start="147:35" pos:end="147:36"><expr pos:start="147:35" pos:end="147:36"><name pos:start="147:35" pos:end="147:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:21"><expr pos:start="149:5" pos:end="149:20"><call pos:start="149:5" pos:end="149:20"><name pos:start="149:5" pos:end="149:13">avio_wb24</name><argument_list pos:start="149:14" pos:end="149:20">(<argument pos:start="149:15" pos:end="149:16"><expr pos:start="149:15" pos:end="149:16"><name pos:start="149:15" pos:end="149:16">pb</name></expr></argument>, <argument pos:start="149:19" pos:end="149:19"><expr pos:start="149:19" pos:end="149:19"><literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="line" pos:start="149:33" pos:end="149:77">// size of data part (sum of all parts below)</comment>

    <expr_stmt pos:start="151:5" pos:end="151:21"><expr pos:start="151:5" pos:end="151:20"><call pos:start="151:5" pos:end="151:20"><name pos:start="151:5" pos:end="151:13">avio_wb24</name><argument_list pos:start="151:14" pos:end="151:20">(<argument pos:start="151:15" pos:end="151:16"><expr pos:start="151:15" pos:end="151:16"><name pos:start="151:15" pos:end="151:16">pb</name></expr></argument>, <argument pos:start="151:19" pos:end="151:19"><expr pos:start="151:19" pos:end="151:19"><literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="line" pos:start="151:33" pos:end="151:44">// timestamp</comment>

    <expr_stmt pos:start="153:5" pos:end="153:21"><expr pos:start="153:5" pos:end="153:20"><call pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:13">avio_wb32</name><argument_list pos:start="153:14" pos:end="153:20">(<argument pos:start="153:15" pos:end="153:16"><expr pos:start="153:15" pos:end="153:16"><name pos:start="153:15" pos:end="153:16">pb</name></expr></argument>, <argument pos:start="153:19" pos:end="153:19"><expr pos:start="153:19" pos:end="153:19"><literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>           <comment type="line" pos:start="153:33" pos:end="153:43">// reserved</comment>



    <comment type="block" pos:start="157:5" pos:end="157:36">/* now data of data_size size */</comment>



    <comment type="block" pos:start="161:5" pos:end="161:38">/* first event name as a string */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:38"><expr pos:start="163:5" pos:end="163:37"><call pos:start="163:5" pos:end="163:37"><name pos:start="163:5" pos:end="163:11">avio_w8</name><argument_list pos:start="163:12" pos:end="163:37">(<argument pos:start="163:13" pos:end="163:14"><expr pos:start="163:13" pos:end="163:14"><name pos:start="163:13" pos:end="163:14">pb</name></expr></argument>, <argument pos:start="163:17" pos:end="163:36"><expr pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:36">AMF_DATA_TYPE_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:37"><expr pos:start="165:5" pos:end="165:36"><call pos:start="165:5" pos:end="165:36"><name pos:start="165:5" pos:end="165:18">put_amf_string</name><argument_list pos:start="165:19" pos:end="165:36">(<argument pos:start="165:20" pos:end="165:21"><expr pos:start="165:20" pos:end="165:21"><name pos:start="165:20" pos:end="165:21">pb</name></expr></argument>, <argument pos:start="165:24" pos:end="165:35"><expr pos:start="165:24" pos:end="165:35"><literal type="string" pos:start="165:24" pos:end="165:35">"onMetaData"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="165:39" pos:end="165:49">// 12 bytes</comment>



    <comment type="block" pos:start="169:5" pos:end="169:66">/* mixed array (hash) with size and string/type/data tuples */</comment>

    <expr_stmt pos:start="171:5" pos:end="171:42"><expr pos:start="171:5" pos:end="171:41"><call pos:start="171:5" pos:end="171:41"><name pos:start="171:5" pos:end="171:11">avio_w8</name><argument_list pos:start="171:12" pos:end="171:41">(<argument pos:start="171:13" pos:end="171:14"><expr pos:start="171:13" pos:end="171:14"><name pos:start="171:13" pos:end="171:14">pb</name></expr></argument>, <argument pos:start="171:17" pos:end="171:40"><expr pos:start="171:17" pos:end="171:40"><name pos:start="171:17" pos:end="171:40">AMF_DATA_TYPE_MIXEDARRAY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="173:5" pos:end="173:39"><expr pos:start="173:5" pos:end="173:38"><name pos:start="173:5" pos:end="173:22">metadata_count_pos</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <call pos:start="173:26" pos:end="173:38"><name pos:start="173:26" pos:end="173:34">avio_tell</name><argument_list pos:start="173:35" pos:end="173:38">(<argument pos:start="173:36" pos:end="173:37"><expr pos:start="173:36" pos:end="173:37"><name pos:start="173:36" pos:end="173:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="181:23"><expr pos:start="175:5" pos:end="181:22"><name pos:start="175:5" pos:end="175:18">metadata_count</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">5</literal> <operator pos:start="175:24" pos:end="175:24">*</operator> <operator pos:start="175:26" pos:end="175:26">!</operator><operator pos:start="175:27" pos:end="175:27">!</operator><name pos:start="175:28" pos:end="175:36">video_enc</name> <operator pos:start="175:38" pos:end="175:38">+</operator>

                     <literal type="number" pos:start="177:22" pos:end="177:22">5</literal> <operator pos:start="177:24" pos:end="177:24">*</operator> <operator pos:start="177:26" pos:end="177:26">!</operator><operator pos:start="177:27" pos:end="177:27">!</operator><name pos:start="177:28" pos:end="177:36">audio_enc</name> <operator pos:start="177:38" pos:end="177:38">+</operator>

                     <literal type="number" pos:start="179:22" pos:end="179:22">1</literal> <operator pos:start="179:24" pos:end="179:24">*</operator> <operator pos:start="179:26" pos:end="179:26">!</operator><operator pos:start="179:27" pos:end="179:27">!</operator><name pos:start="179:28" pos:end="179:35">data_enc</name>  <operator pos:start="179:38" pos:end="179:38">+</operator>

                     <literal type="number" pos:start="181:22" pos:end="181:22">2</literal></expr>;</expr_stmt> <comment type="line" pos:start="181:25" pos:end="181:56">// +2 for duration and file size</comment>



    <expr_stmt pos:start="185:5" pos:end="185:34"><expr pos:start="185:5" pos:end="185:33"><call pos:start="185:5" pos:end="185:33"><name pos:start="185:5" pos:end="185:13">avio_wb32</name><argument_list pos:start="185:14" pos:end="185:33">(<argument pos:start="185:15" pos:end="185:16"><expr pos:start="185:15" pos:end="185:16"><name pos:start="185:15" pos:end="185:16">pb</name></expr></argument>, <argument pos:start="185:19" pos:end="185:32"><expr pos:start="185:19" pos:end="185:32"><name pos:start="185:19" pos:end="185:32">metadata_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:35"><expr pos:start="189:5" pos:end="189:34"><call pos:start="189:5" pos:end="189:34"><name pos:start="189:5" pos:end="189:18">put_amf_string</name><argument_list pos:start="189:19" pos:end="189:34">(<argument pos:start="189:20" pos:end="189:21"><expr pos:start="189:20" pos:end="189:21"><name pos:start="189:20" pos:end="189:21">pb</name></expr></argument>, <argument pos:start="189:24" pos:end="189:33"><expr pos:start="189:24" pos:end="189:33"><literal type="string" pos:start="189:24" pos:end="189:33">"duration"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:40"><expr pos:start="191:5" pos:end="191:39"><name pos:start="191:5" pos:end="191:24"><name pos:start="191:5" pos:end="191:7">flv</name><operator pos:start="191:8" pos:end="191:9">-&gt;</operator><name pos:start="191:10" pos:end="191:24">duration_offset</name></name><operator pos:start="191:25" pos:end="191:25">=</operator> <call pos:start="191:27" pos:end="191:39"><name pos:start="191:27" pos:end="191:35">avio_tell</name><argument_list pos:start="191:36" pos:end="191:39">(<argument pos:start="191:37" pos:end="191:38"><expr pos:start="191:37" pos:end="191:38"><name pos:start="191:37" pos:end="191:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="195:5" pos:end="195:74">// fill in the guessed duration, it'll be corrected later if incorrect</comment>

    <expr_stmt pos:start="197:5" pos:end="197:51"><expr pos:start="197:5" pos:end="197:50"><call pos:start="197:5" pos:end="197:50"><name pos:start="197:5" pos:end="197:18">put_amf_double</name><argument_list pos:start="197:19" pos:end="197:50">(<argument pos:start="197:20" pos:end="197:21"><expr pos:start="197:20" pos:end="197:21"><name pos:start="197:20" pos:end="197:21">pb</name></expr></argument>, <argument pos:start="197:24" pos:end="197:49"><expr pos:start="197:24" pos:end="197:49"><name pos:start="197:24" pos:end="197:34"><name pos:start="197:24" pos:end="197:24">s</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:34">duration</name></name> <operator pos:start="197:36" pos:end="197:36">/</operator> <name pos:start="197:38" pos:end="197:49">AV_TIME_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="201:5" pos:end="231:5"><if pos:start="201:5" pos:end="231:5">if <condition pos:start="201:8" pos:end="201:18">(<expr pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:17">video_enc</name></expr>)</condition> <block pos:start="201:20" pos:end="231:5">{<block_content pos:start="203:9" pos:end="229:49">

        <expr_stmt pos:start="203:9" pos:end="203:36"><expr pos:start="203:9" pos:end="203:35"><call pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:22">put_amf_string</name><argument_list pos:start="203:23" pos:end="203:35">(<argument pos:start="203:24" pos:end="203:25"><expr pos:start="203:24" pos:end="203:25"><name pos:start="203:24" pos:end="203:25">pb</name></expr></argument>, <argument pos:start="203:28" pos:end="203:34"><expr pos:start="203:28" pos:end="203:34"><literal type="string" pos:start="203:28" pos:end="203:34">"width"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:45"><expr pos:start="205:9" pos:end="205:44"><call pos:start="205:9" pos:end="205:44"><name pos:start="205:9" pos:end="205:22">put_amf_double</name><argument_list pos:start="205:23" pos:end="205:44">(<argument pos:start="205:24" pos:end="205:25"><expr pos:start="205:24" pos:end="205:25"><name pos:start="205:24" pos:end="205:25">pb</name></expr></argument>, <argument pos:start="205:28" pos:end="205:43"><expr pos:start="205:28" pos:end="205:43"><name pos:start="205:28" pos:end="205:43"><name pos:start="205:28" pos:end="205:36">video_enc</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:43">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:37"><expr pos:start="209:9" pos:end="209:36"><call pos:start="209:9" pos:end="209:36"><name pos:start="209:9" pos:end="209:22">put_amf_string</name><argument_list pos:start="209:23" pos:end="209:36">(<argument pos:start="209:24" pos:end="209:25"><expr pos:start="209:24" pos:end="209:25"><name pos:start="209:24" pos:end="209:25">pb</name></expr></argument>, <argument pos:start="209:28" pos:end="209:35"><expr pos:start="209:28" pos:end="209:35"><literal type="string" pos:start="209:28" pos:end="209:35">"height"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:46"><expr pos:start="211:9" pos:end="211:45"><call pos:start="211:9" pos:end="211:45"><name pos:start="211:9" pos:end="211:22">put_amf_double</name><argument_list pos:start="211:23" pos:end="211:45">(<argument pos:start="211:24" pos:end="211:25"><expr pos:start="211:24" pos:end="211:25"><name pos:start="211:24" pos:end="211:25">pb</name></expr></argument>, <argument pos:start="211:28" pos:end="211:44"><expr pos:start="211:28" pos:end="211:44"><name pos:start="211:28" pos:end="211:44"><name pos:start="211:28" pos:end="211:36">video_enc</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:44">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="215:9" pos:end="215:44"><expr pos:start="215:9" pos:end="215:43"><call pos:start="215:9" pos:end="215:43"><name pos:start="215:9" pos:end="215:22">put_amf_string</name><argument_list pos:start="215:23" pos:end="215:43">(<argument pos:start="215:24" pos:end="215:25"><expr pos:start="215:24" pos:end="215:25"><name pos:start="215:24" pos:end="215:25">pb</name></expr></argument>, <argument pos:start="215:28" pos:end="215:42"><expr pos:start="215:28" pos:end="215:42"><literal type="string" pos:start="215:28" pos:end="215:42">"videodatarate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:57"><expr pos:start="217:9" pos:end="217:56"><call pos:start="217:9" pos:end="217:56"><name pos:start="217:9" pos:end="217:22">put_amf_double</name><argument_list pos:start="217:23" pos:end="217:56">(<argument pos:start="217:24" pos:end="217:25"><expr pos:start="217:24" pos:end="217:25"><name pos:start="217:24" pos:end="217:25">pb</name></expr></argument>, <argument pos:start="217:28" pos:end="217:55"><expr pos:start="217:28" pos:end="217:55"><name pos:start="217:28" pos:end="217:46"><name pos:start="217:28" pos:end="217:36">video_enc</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:46">bit_rate</name></name> <operator pos:start="217:48" pos:end="217:48">/</operator> <literal type="number" pos:start="217:50" pos:end="217:55">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:40"><expr pos:start="221:9" pos:end="221:39"><call pos:start="221:9" pos:end="221:39"><name pos:start="221:9" pos:end="221:22">put_amf_string</name><argument_list pos:start="221:23" pos:end="221:39">(<argument pos:start="221:24" pos:end="221:25"><expr pos:start="221:24" pos:end="221:25"><name pos:start="221:24" pos:end="221:25">pb</name></expr></argument>, <argument pos:start="221:28" pos:end="221:38"><expr pos:start="221:28" pos:end="221:38"><literal type="string" pos:start="221:28" pos:end="221:38">"framerate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="223:9" pos:end="223:38"><expr pos:start="223:9" pos:end="223:37"><call pos:start="223:9" pos:end="223:37"><name pos:start="223:9" pos:end="223:22">put_amf_double</name><argument_list pos:start="223:23" pos:end="223:37">(<argument pos:start="223:24" pos:end="223:25"><expr pos:start="223:24" pos:end="223:25"><name pos:start="223:24" pos:end="223:25">pb</name></expr></argument>, <argument pos:start="223:28" pos:end="223:36"><expr pos:start="223:28" pos:end="223:36"><name pos:start="223:28" pos:end="223:36">framerate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:43"><expr pos:start="227:9" pos:end="227:42"><call pos:start="227:9" pos:end="227:42"><name pos:start="227:9" pos:end="227:22">put_amf_string</name><argument_list pos:start="227:23" pos:end="227:42">(<argument pos:start="227:24" pos:end="227:25"><expr pos:start="227:24" pos:end="227:25"><name pos:start="227:24" pos:end="227:25">pb</name></expr></argument>, <argument pos:start="227:28" pos:end="227:41"><expr pos:start="227:28" pos:end="227:41"><literal type="string" pos:start="227:28" pos:end="227:41">"videocodecid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:49"><expr pos:start="229:9" pos:end="229:48"><call pos:start="229:9" pos:end="229:48"><name pos:start="229:9" pos:end="229:22">put_amf_double</name><argument_list pos:start="229:23" pos:end="229:48">(<argument pos:start="229:24" pos:end="229:25"><expr pos:start="229:24" pos:end="229:25"><name pos:start="229:24" pos:end="229:25">pb</name></expr></argument>, <argument pos:start="229:28" pos:end="229:47"><expr pos:start="229:28" pos:end="229:47"><name pos:start="229:28" pos:end="229:47"><name pos:start="229:28" pos:end="229:36">video_enc</name><operator pos:start="229:37" pos:end="229:38">-&gt;</operator><name pos:start="229:39" pos:end="229:47">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="235:5" pos:end="265:5"><if pos:start="235:5" pos:end="265:5">if <condition pos:start="235:8" pos:end="235:18">(<expr pos:start="235:9" pos:end="235:17"><name pos:start="235:9" pos:end="235:17">audio_enc</name></expr>)</condition> <block pos:start="235:20" pos:end="265:5">{<block_content pos:start="237:9" pos:end="263:49">

        <expr_stmt pos:start="237:9" pos:end="237:44"><expr pos:start="237:9" pos:end="237:43"><call pos:start="237:9" pos:end="237:43"><name pos:start="237:9" pos:end="237:22">put_amf_string</name><argument_list pos:start="237:23" pos:end="237:43">(<argument pos:start="237:24" pos:end="237:25"><expr pos:start="237:24" pos:end="237:25"><name pos:start="237:24" pos:end="237:25">pb</name></expr></argument>, <argument pos:start="237:28" pos:end="237:42"><expr pos:start="237:28" pos:end="237:42"><literal type="string" pos:start="237:28" pos:end="237:42">"audiodatarate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:57"><expr pos:start="239:9" pos:end="239:56"><call pos:start="239:9" pos:end="239:56"><name pos:start="239:9" pos:end="239:22">put_amf_double</name><argument_list pos:start="239:23" pos:end="239:56">(<argument pos:start="239:24" pos:end="239:25"><expr pos:start="239:24" pos:end="239:25"><name pos:start="239:24" pos:end="239:25">pb</name></expr></argument>, <argument pos:start="239:28" pos:end="239:55"><expr pos:start="239:28" pos:end="239:55"><name pos:start="239:28" pos:end="239:46"><name pos:start="239:28" pos:end="239:36">audio_enc</name><operator pos:start="239:37" pos:end="239:38">-&gt;</operator><name pos:start="239:39" pos:end="239:46">bit_rate</name></name> <operator pos:start="239:48" pos:end="239:48">/</operator> <literal type="number" pos:start="239:50" pos:end="239:55">1024.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="243:9" pos:end="243:46"><expr pos:start="243:9" pos:end="243:45"><call pos:start="243:9" pos:end="243:45"><name pos:start="243:9" pos:end="243:22">put_amf_string</name><argument_list pos:start="243:23" pos:end="243:45">(<argument pos:start="243:24" pos:end="243:25"><expr pos:start="243:24" pos:end="243:25"><name pos:start="243:24" pos:end="243:25">pb</name></expr></argument>, <argument pos:start="243:28" pos:end="243:44"><expr pos:start="243:28" pos:end="243:44"><literal type="string" pos:start="243:28" pos:end="243:44">"audiosamplerate"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:51"><expr pos:start="245:9" pos:end="245:50"><call pos:start="245:9" pos:end="245:50"><name pos:start="245:9" pos:end="245:22">put_amf_double</name><argument_list pos:start="245:23" pos:end="245:50">(<argument pos:start="245:24" pos:end="245:25"><expr pos:start="245:24" pos:end="245:25"><name pos:start="245:24" pos:end="245:25">pb</name></expr></argument>, <argument pos:start="245:28" pos:end="245:49"><expr pos:start="245:28" pos:end="245:49"><name pos:start="245:28" pos:end="245:49"><name pos:start="245:28" pos:end="245:36">audio_enc</name><operator pos:start="245:37" pos:end="245:38">-&gt;</operator><name pos:start="245:39" pos:end="245:49">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:46"><expr pos:start="249:9" pos:end="249:45"><call pos:start="249:9" pos:end="249:45"><name pos:start="249:9" pos:end="249:22">put_amf_string</name><argument_list pos:start="249:23" pos:end="249:45">(<argument pos:start="249:24" pos:end="249:25"><expr pos:start="249:24" pos:end="249:25"><name pos:start="249:24" pos:end="249:25">pb</name></expr></argument>, <argument pos:start="249:28" pos:end="249:44"><expr pos:start="249:28" pos:end="249:44"><literal type="string" pos:start="249:28" pos:end="249:44">"audiosamplesize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:76"><expr pos:start="251:9" pos:end="251:75"><call pos:start="251:9" pos:end="251:75"><name pos:start="251:9" pos:end="251:22">put_amf_double</name><argument_list pos:start="251:23" pos:end="251:75">(<argument pos:start="251:24" pos:end="251:25"><expr pos:start="251:24" pos:end="251:25"><name pos:start="251:24" pos:end="251:25">pb</name></expr></argument>, <argument pos:start="251:28" pos:end="251:74"><expr pos:start="251:28" pos:end="251:74"><ternary pos:start="251:28" pos:end="251:74"><condition pos:start="251:28" pos:end="251:67"><expr pos:start="251:28" pos:end="251:65"><name pos:start="251:28" pos:end="251:46"><name pos:start="251:28" pos:end="251:36">audio_enc</name><operator pos:start="251:37" pos:end="251:38">-&gt;</operator><name pos:start="251:39" pos:end="251:46">codec_id</name></name> <operator pos:start="251:48" pos:end="251:49">==</operator> <name pos:start="251:51" pos:end="251:65">CODEC_ID_PCM_U8</name></expr> ?</condition><then pos:start="251:69" pos:end="251:69"> <expr pos:start="251:69" pos:end="251:69"><literal type="number" pos:start="251:69" pos:end="251:69">8</literal></expr> </then><else pos:start="251:71" pos:end="251:74">: <expr pos:start="251:73" pos:end="251:74"><literal type="number" pos:start="251:73" pos:end="251:74">16</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="255:9" pos:end="255:37"><expr pos:start="255:9" pos:end="255:36"><call pos:start="255:9" pos:end="255:36"><name pos:start="255:9" pos:end="255:22">put_amf_string</name><argument_list pos:start="255:23" pos:end="255:36">(<argument pos:start="255:24" pos:end="255:25"><expr pos:start="255:24" pos:end="255:25"><name pos:start="255:24" pos:end="255:25">pb</name></expr></argument>, <argument pos:start="255:28" pos:end="255:35"><expr pos:start="255:28" pos:end="255:35"><literal type="string" pos:start="255:28" pos:end="255:35">"stereo"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:51"><expr pos:start="257:9" pos:end="257:50"><call pos:start="257:9" pos:end="257:50"><name pos:start="257:9" pos:end="257:20">put_amf_bool</name><argument_list pos:start="257:21" pos:end="257:50">(<argument pos:start="257:22" pos:end="257:23"><expr pos:start="257:22" pos:end="257:23"><name pos:start="257:22" pos:end="257:23">pb</name></expr></argument>, <argument pos:start="257:26" pos:end="257:49"><expr pos:start="257:26" pos:end="257:49"><name pos:start="257:26" pos:end="257:44"><name pos:start="257:26" pos:end="257:34">audio_enc</name><operator pos:start="257:35" pos:end="257:36">-&gt;</operator><name pos:start="257:37" pos:end="257:44">channels</name></name> <operator pos:start="257:46" pos:end="257:47">==</operator> <literal type="number" pos:start="257:49" pos:end="257:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:43"><expr pos:start="261:9" pos:end="261:42"><call pos:start="261:9" pos:end="261:42"><name pos:start="261:9" pos:end="261:22">put_amf_string</name><argument_list pos:start="261:23" pos:end="261:42">(<argument pos:start="261:24" pos:end="261:25"><expr pos:start="261:24" pos:end="261:25"><name pos:start="261:24" pos:end="261:25">pb</name></expr></argument>, <argument pos:start="261:28" pos:end="261:41"><expr pos:start="261:28" pos:end="261:41"><literal type="string" pos:start="261:28" pos:end="261:41">"audiocodecid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:49"><expr pos:start="263:9" pos:end="263:48"><call pos:start="263:9" pos:end="263:48"><name pos:start="263:9" pos:end="263:22">put_amf_double</name><argument_list pos:start="263:23" pos:end="263:48">(<argument pos:start="263:24" pos:end="263:25"><expr pos:start="263:24" pos:end="263:25"><name pos:start="263:24" pos:end="263:25">pb</name></expr></argument>, <argument pos:start="263:28" pos:end="263:47"><expr pos:start="263:28" pos:end="263:47"><name pos:start="263:28" pos:end="263:47"><name pos:start="263:28" pos:end="263:36">audio_enc</name><operator pos:start="263:37" pos:end="263:38">-&gt;</operator><name pos:start="263:39" pos:end="263:47">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="269:5" pos:end="275:5"><if pos:start="269:5" pos:end="275:5">if <condition pos:start="269:8" pos:end="269:17">(<expr pos:start="269:9" pos:end="269:16"><name pos:start="269:9" pos:end="269:16">data_enc</name></expr>)</condition> <block pos:start="269:19" pos:end="275:5">{<block_content pos:start="271:9" pos:end="273:32">

        <expr_stmt pos:start="271:9" pos:end="271:41"><expr pos:start="271:9" pos:end="271:40"><call pos:start="271:9" pos:end="271:40"><name pos:start="271:9" pos:end="271:22">put_amf_string</name><argument_list pos:start="271:23" pos:end="271:40">(<argument pos:start="271:24" pos:end="271:25"><expr pos:start="271:24" pos:end="271:25"><name pos:start="271:24" pos:end="271:25">pb</name></expr></argument>, <argument pos:start="271:28" pos:end="271:39"><expr pos:start="271:28" pos:end="271:39"><literal type="string" pos:start="271:28" pos:end="271:39">"datastream"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:32"><expr pos:start="273:9" pos:end="273:31"><call pos:start="273:9" pos:end="273:31"><name pos:start="273:9" pos:end="273:22">put_amf_double</name><argument_list pos:start="273:23" pos:end="273:31">(<argument pos:start="273:24" pos:end="273:25"><expr pos:start="273:24" pos:end="273:25"><name pos:start="273:24" pos:end="273:25">pb</name></expr></argument>, <argument pos:start="273:28" pos:end="273:30"><expr pos:start="273:28" pos:end="273:30"><literal type="number" pos:start="273:28" pos:end="273:30">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="279:5" pos:end="289:5">while <condition pos:start="279:11" pos:end="279:76">(<expr pos:start="279:12" pos:end="279:75"><operator pos:start="279:12" pos:end="279:12">(</operator><name pos:start="279:13" pos:end="279:15">tag</name> <operator pos:start="279:17" pos:end="279:17">=</operator> <call pos:start="279:19" pos:end="279:74"><name pos:start="279:19" pos:end="279:29">av_dict_get</name><argument_list pos:start="279:30" pos:end="279:74">(<argument pos:start="279:31" pos:end="279:41"><expr pos:start="279:31" pos:end="279:41"><name pos:start="279:31" pos:end="279:41"><name pos:start="279:31" pos:end="279:31">s</name><operator pos:start="279:32" pos:end="279:33">-&gt;</operator><name pos:start="279:34" pos:end="279:41">metadata</name></name></expr></argument>, <argument pos:start="279:44" pos:end="279:45"><expr pos:start="279:44" pos:end="279:45"><literal type="string" pos:start="279:44" pos:end="279:45">""</literal></expr></argument>, <argument pos:start="279:48" pos:end="279:50"><expr pos:start="279:48" pos:end="279:50"><name pos:start="279:48" pos:end="279:50">tag</name></expr></argument>, <argument pos:start="279:53" pos:end="279:73"><expr pos:start="279:53" pos:end="279:73"><name pos:start="279:53" pos:end="279:73">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="279:75" pos:end="279:75">)</operator></expr>)</condition> <block pos:start="279:78" pos:end="289:5">{<block_content pos:start="281:9" pos:end="287:25">

        <expr_stmt pos:start="281:9" pos:end="281:37"><expr pos:start="281:9" pos:end="281:36"><call pos:start="281:9" pos:end="281:36"><name pos:start="281:9" pos:end="281:22">put_amf_string</name><argument_list pos:start="281:23" pos:end="281:36">(<argument pos:start="281:24" pos:end="281:25"><expr pos:start="281:24" pos:end="281:25"><name pos:start="281:24" pos:end="281:25">pb</name></expr></argument>, <argument pos:start="281:28" pos:end="281:35"><expr pos:start="281:28" pos:end="281:35"><name pos:start="281:28" pos:end="281:35"><name pos:start="281:28" pos:end="281:30">tag</name><operator pos:start="281:31" pos:end="281:32">-&gt;</operator><name pos:start="281:33" pos:end="281:35">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:42"><expr pos:start="283:9" pos:end="283:41"><call pos:start="283:9" pos:end="283:41"><name pos:start="283:9" pos:end="283:15">avio_w8</name><argument_list pos:start="283:16" pos:end="283:41">(<argument pos:start="283:17" pos:end="283:18"><expr pos:start="283:17" pos:end="283:18"><name pos:start="283:17" pos:end="283:18">pb</name></expr></argument>, <argument pos:start="283:21" pos:end="283:40"><expr pos:start="283:21" pos:end="283:40"><name pos:start="283:21" pos:end="283:40">AMF_DATA_TYPE_STRING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:39"><expr pos:start="285:9" pos:end="285:38"><call pos:start="285:9" pos:end="285:38"><name pos:start="285:9" pos:end="285:22">put_amf_string</name><argument_list pos:start="285:23" pos:end="285:38">(<argument pos:start="285:24" pos:end="285:25"><expr pos:start="285:24" pos:end="285:25"><name pos:start="285:24" pos:end="285:25">pb</name></expr></argument>, <argument pos:start="285:28" pos:end="285:37"><expr pos:start="285:28" pos:end="285:37"><name pos:start="285:28" pos:end="285:37"><name pos:start="285:28" pos:end="285:30">tag</name><operator pos:start="285:31" pos:end="285:32">-&gt;</operator><name pos:start="285:33" pos:end="285:37">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:25"><expr pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:22">metadata_count</name><operator pos:start="287:23" pos:end="287:24">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="293:5" pos:end="293:35"><expr pos:start="293:5" pos:end="293:34"><call pos:start="293:5" pos:end="293:34"><name pos:start="293:5" pos:end="293:18">put_amf_string</name><argument_list pos:start="293:19" pos:end="293:34">(<argument pos:start="293:20" pos:end="293:21"><expr pos:start="293:20" pos:end="293:21"><name pos:start="293:20" pos:end="293:21">pb</name></expr></argument>, <argument pos:start="293:24" pos:end="293:33"><expr pos:start="293:24" pos:end="293:33"><literal type="string" pos:start="293:24" pos:end="293:33">"filesize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:41"><expr pos:start="295:5" pos:end="295:40"><name pos:start="295:5" pos:end="295:24"><name pos:start="295:5" pos:end="295:7">flv</name><operator pos:start="295:8" pos:end="295:9">-&gt;</operator><name pos:start="295:10" pos:end="295:24">filesize_offset</name></name> <operator pos:start="295:26" pos:end="295:26">=</operator> <call pos:start="295:28" pos:end="295:40"><name pos:start="295:28" pos:end="295:36">avio_tell</name><argument_list pos:start="295:37" pos:end="295:40">(<argument pos:start="295:38" pos:end="295:39"><expr pos:start="295:38" pos:end="295:39"><name pos:start="295:38" pos:end="295:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:26"><expr pos:start="297:5" pos:end="297:25"><call pos:start="297:5" pos:end="297:25"><name pos:start="297:5" pos:end="297:18">put_amf_double</name><argument_list pos:start="297:19" pos:end="297:25">(<argument pos:start="297:20" pos:end="297:21"><expr pos:start="297:20" pos:end="297:21"><name pos:start="297:20" pos:end="297:21">pb</name></expr></argument>, <argument pos:start="297:24" pos:end="297:24"><expr pos:start="297:24" pos:end="297:24"><literal type="number" pos:start="297:24" pos:end="297:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="297:28" pos:end="297:43">// delayed write</comment>



    <expr_stmt pos:start="301:5" pos:end="301:27"><expr pos:start="301:5" pos:end="301:26"><call pos:start="301:5" pos:end="301:26"><name pos:start="301:5" pos:end="301:18">put_amf_string</name><argument_list pos:start="301:19" pos:end="301:26">(<argument pos:start="301:20" pos:end="301:21"><expr pos:start="301:20" pos:end="301:21"><name pos:start="301:20" pos:end="301:21">pb</name></expr></argument>, <argument pos:start="301:24" pos:end="301:25"><expr pos:start="301:24" pos:end="301:25"><literal type="string" pos:start="301:24" pos:end="301:25">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="303:5" pos:end="303:35"><expr pos:start="303:5" pos:end="303:34"><call pos:start="303:5" pos:end="303:34"><name pos:start="303:5" pos:end="303:11">avio_w8</name><argument_list pos:start="303:12" pos:end="303:34">(<argument pos:start="303:13" pos:end="303:14"><expr pos:start="303:13" pos:end="303:14"><name pos:start="303:13" pos:end="303:14">pb</name></expr></argument>, <argument pos:start="303:17" pos:end="303:33"><expr pos:start="303:17" pos:end="303:33"><name pos:start="303:17" pos:end="303:33">AMF_END_OF_OBJECT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="307:5" pos:end="307:33">/* write total size of tag */</comment>

    <expr_stmt pos:start="309:5" pos:end="309:55"><expr pos:start="309:5" pos:end="309:54"><name pos:start="309:5" pos:end="309:13">data_size</name> <operator pos:start="309:15" pos:end="309:15">=</operator> <call pos:start="309:17" pos:end="309:29"><name pos:start="309:17" pos:end="309:25">avio_tell</name><argument_list pos:start="309:26" pos:end="309:29">(<argument pos:start="309:27" pos:end="309:28"><expr pos:start="309:27" pos:end="309:28"><name pos:start="309:27" pos:end="309:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="309:31" pos:end="309:31">-</operator> <name pos:start="309:33" pos:end="309:49">metadata_size_pos</name> <operator pos:start="309:51" pos:end="309:51">-</operator> <literal type="number" pos:start="309:53" pos:end="309:54">10</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="313:5" pos:end="313:48"><expr pos:start="313:5" pos:end="313:47"><call pos:start="313:5" pos:end="313:47"><name pos:start="313:5" pos:end="313:13">avio_seek</name><argument_list pos:start="313:14" pos:end="313:47">(<argument pos:start="313:15" pos:end="313:16"><expr pos:start="313:15" pos:end="313:16"><name pos:start="313:15" pos:end="313:16">pb</name></expr></argument>, <argument pos:start="313:19" pos:end="313:36"><expr pos:start="313:19" pos:end="313:36"><name pos:start="313:19" pos:end="313:36">metadata_count_pos</name></expr></argument>, <argument pos:start="313:39" pos:end="313:46"><expr pos:start="313:39" pos:end="313:46"><name pos:start="313:39" pos:end="313:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:34"><expr pos:start="315:5" pos:end="315:33"><call pos:start="315:5" pos:end="315:33"><name pos:start="315:5" pos:end="315:13">avio_wb32</name><argument_list pos:start="315:14" pos:end="315:33">(<argument pos:start="315:15" pos:end="315:16"><expr pos:start="315:15" pos:end="315:16"><name pos:start="315:15" pos:end="315:16">pb</name></expr></argument>, <argument pos:start="315:19" pos:end="315:32"><expr pos:start="315:19" pos:end="315:32"><name pos:start="315:19" pos:end="315:32">metadata_count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="319:5" pos:end="319:47"><expr pos:start="319:5" pos:end="319:46"><call pos:start="319:5" pos:end="319:46"><name pos:start="319:5" pos:end="319:13">avio_seek</name><argument_list pos:start="319:14" pos:end="319:46">(<argument pos:start="319:15" pos:end="319:16"><expr pos:start="319:15" pos:end="319:16"><name pos:start="319:15" pos:end="319:16">pb</name></expr></argument>, <argument pos:start="319:19" pos:end="319:35"><expr pos:start="319:19" pos:end="319:35"><name pos:start="319:19" pos:end="319:35">metadata_size_pos</name></expr></argument>, <argument pos:start="319:38" pos:end="319:45"><expr pos:start="319:38" pos:end="319:45"><name pos:start="319:38" pos:end="319:45">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:29"><expr pos:start="321:5" pos:end="321:28"><call pos:start="321:5" pos:end="321:28"><name pos:start="321:5" pos:end="321:13">avio_wb24</name><argument_list pos:start="321:14" pos:end="321:28">(<argument pos:start="321:15" pos:end="321:16"><expr pos:start="321:15" pos:end="321:16"><name pos:start="321:15" pos:end="321:16">pb</name></expr></argument>, <argument pos:start="321:19" pos:end="321:27"><expr pos:start="321:19" pos:end="321:27"><name pos:start="321:19" pos:end="321:27">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:38"><expr pos:start="323:5" pos:end="323:37"><call pos:start="323:5" pos:end="323:37"><name pos:start="323:5" pos:end="323:13">avio_skip</name><argument_list pos:start="323:14" pos:end="323:37">(<argument pos:start="323:15" pos:end="323:16"><expr pos:start="323:15" pos:end="323:16"><name pos:start="323:15" pos:end="323:16">pb</name></expr></argument>, <argument pos:start="323:19" pos:end="323:36"><expr pos:start="323:19" pos:end="323:36"><name pos:start="323:19" pos:end="323:27">data_size</name> <operator pos:start="323:29" pos:end="323:29">+</operator> <literal type="number" pos:start="323:31" pos:end="323:34">10</literal> <operator pos:start="323:34" pos:end="323:34">-</operator> <literal type="number" pos:start="323:36" pos:end="323:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:34"><expr pos:start="325:5" pos:end="325:33"><call pos:start="325:5" pos:end="325:33"><name pos:start="325:5" pos:end="325:13">avio_wb32</name><argument_list pos:start="325:14" pos:end="325:33">(<argument pos:start="325:15" pos:end="325:16"><expr pos:start="325:15" pos:end="325:16"><name pos:start="325:15" pos:end="325:16">pb</name></expr></argument>, <argument pos:start="325:19" pos:end="325:32"><expr pos:start="325:19" pos:end="325:32"><name pos:start="325:19" pos:end="325:27">data_size</name> <operator pos:start="325:29" pos:end="325:29">+</operator> <literal type="number" pos:start="325:31" pos:end="325:32">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="329:5" pos:end="383:5">for <control pos:start="329:9" pos:end="329:39">(<init pos:start="329:10" pos:end="329:15"><expr pos:start="329:10" pos:end="329:14"><name pos:start="329:10" pos:end="329:10">i</name> <operator pos:start="329:12" pos:end="329:12">=</operator> <literal type="number" pos:start="329:14" pos:end="329:14">0</literal></expr>;</init> <condition pos:start="329:17" pos:end="329:34"><expr pos:start="329:17" pos:end="329:33"><name pos:start="329:17" pos:end="329:17">i</name> <operator pos:start="329:19" pos:end="329:19">&lt;</operator> <name pos:start="329:21" pos:end="329:33"><name pos:start="329:21" pos:end="329:21">s</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:33">nb_streams</name></name></expr>;</condition> <incr pos:start="329:36" pos:end="329:38"><expr pos:start="329:36" pos:end="329:38"><name pos:start="329:36" pos:end="329:36">i</name><operator pos:start="329:37" pos:end="329:38">++</operator></expr></incr>)</control> <block pos:start="329:41" pos:end="383:5">{<block_content pos:start="331:9" pos:end="381:9">

        <decl_stmt pos:start="331:9" pos:end="331:51"><decl pos:start="331:9" pos:end="331:50"><type pos:start="331:9" pos:end="331:24"><name pos:start="331:9" pos:end="331:22">AVCodecContext</name> <modifier pos:start="331:24" pos:end="331:24">*</modifier></type><name pos:start="331:25" pos:end="331:27">enc</name> <init pos:start="331:29" pos:end="331:50">= <expr pos:start="331:31" pos:end="331:50"><name pos:start="331:31" pos:end="331:43"><name pos:start="331:31" pos:end="331:31">s</name><operator pos:start="331:32" pos:end="331:33">-&gt;</operator><name pos:start="331:34" pos:end="331:40">streams</name><index pos:start="331:41" pos:end="331:43">[<expr pos:start="331:42" pos:end="331:42"><name pos:start="331:42" pos:end="331:42">i</name></expr>]</index></name><operator pos:start="331:44" pos:end="331:45">-&gt;</operator><name pos:start="331:46" pos:end="331:50">codec</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="333:9" pos:end="381:9"><if pos:start="333:9" pos:end="381:9">if <condition pos:start="333:12" pos:end="333:76">(<expr pos:start="333:13" pos:end="333:75"><name pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:15">enc</name><operator pos:start="333:16" pos:end="333:17">-&gt;</operator><name pos:start="333:18" pos:end="333:25">codec_id</name></name> <operator pos:start="333:27" pos:end="333:28">==</operator> <name pos:start="333:30" pos:end="333:41">CODEC_ID_AAC</name> <operator pos:start="333:43" pos:end="333:44">||</operator> <name pos:start="333:46" pos:end="333:58"><name pos:start="333:46" pos:end="333:48">enc</name><operator pos:start="333:49" pos:end="333:50">-&gt;</operator><name pos:start="333:51" pos:end="333:58">codec_id</name></name> <operator pos:start="333:60" pos:end="333:61">==</operator> <name pos:start="333:63" pos:end="333:75">CODEC_ID_H264</name></expr>)</condition> <block pos:start="333:78" pos:end="381:9">{<block_content pos:start="335:13" pos:end="379:42">

            <decl_stmt pos:start="335:13" pos:end="335:24"><decl pos:start="335:13" pos:end="335:23"><type pos:start="335:13" pos:end="335:19"><name pos:start="335:13" pos:end="335:19">int64_t</name></type> <name pos:start="335:21" pos:end="335:23">pos</name></decl>;</decl_stmt>

            <expr_stmt pos:start="337:13" pos:end="339:61"><expr pos:start="337:13" pos:end="339:60"><call pos:start="337:13" pos:end="339:60"><name pos:start="337:13" pos:end="337:19">avio_w8</name><argument_list pos:start="337:20" pos:end="339:60">(<argument pos:start="337:21" pos:end="337:22"><expr pos:start="337:21" pos:end="337:22"><name pos:start="337:21" pos:end="337:22">pb</name></expr></argument>, <argument pos:start="337:25" pos:end="339:59"><expr pos:start="337:25" pos:end="339:59"><ternary pos:start="337:25" pos:end="339:59"><condition pos:start="337:25" pos:end="337:63"><expr pos:start="337:25" pos:end="337:61"><name pos:start="337:25" pos:end="337:39"><name pos:start="337:25" pos:end="337:27">enc</name><operator pos:start="337:28" pos:end="337:29">-&gt;</operator><name pos:start="337:30" pos:end="337:39">codec_type</name></name> <operator pos:start="337:41" pos:end="337:42">==</operator> <name pos:start="337:44" pos:end="337:61">AVMEDIA_TYPE_VIDEO</name></expr> ?</condition><then pos:start="339:21" pos:end="339:38">

                    <expr pos:start="339:21" pos:end="339:38"><name pos:start="339:21" pos:end="339:38">FLV_TAG_TYPE_VIDEO</name></expr> </then><else pos:start="339:40" pos:end="339:59">: <expr pos:start="339:42" pos:end="339:59"><name pos:start="339:42" pos:end="339:59">FLV_TAG_TYPE_AUDIO</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:29"><expr pos:start="341:13" pos:end="341:28"><call pos:start="341:13" pos:end="341:28"><name pos:start="341:13" pos:end="341:21">avio_wb24</name><argument_list pos:start="341:22" pos:end="341:28">(<argument pos:start="341:23" pos:end="341:24"><expr pos:start="341:23" pos:end="341:24"><name pos:start="341:23" pos:end="341:24">pb</name></expr></argument>, <argument pos:start="341:27" pos:end="341:27"><expr pos:start="341:27" pos:end="341:27"><literal type="number" pos:start="341:27" pos:end="341:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="341:31" pos:end="341:51">// size patched later</comment>

            <expr_stmt pos:start="343:13" pos:end="343:29"><expr pos:start="343:13" pos:end="343:28"><call pos:start="343:13" pos:end="343:28"><name pos:start="343:13" pos:end="343:21">avio_wb24</name><argument_list pos:start="343:22" pos:end="343:28">(<argument pos:start="343:23" pos:end="343:24"><expr pos:start="343:23" pos:end="343:24"><name pos:start="343:23" pos:end="343:24">pb</name></expr></argument>, <argument pos:start="343:27" pos:end="343:27"><expr pos:start="343:27" pos:end="343:27"><literal type="number" pos:start="343:27" pos:end="343:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="343:31" pos:end="343:35">// ts</comment>

            <expr_stmt pos:start="345:13" pos:end="345:27"><expr pos:start="345:13" pos:end="345:26"><call pos:start="345:13" pos:end="345:26"><name pos:start="345:13" pos:end="345:19">avio_w8</name><argument_list pos:start="345:20" pos:end="345:26">(<argument pos:start="345:21" pos:end="345:22"><expr pos:start="345:21" pos:end="345:22"><name pos:start="345:21" pos:end="345:22">pb</name></expr></argument>, <argument pos:start="345:25" pos:end="345:25"><expr pos:start="345:25" pos:end="345:25"><literal type="number" pos:start="345:25" pos:end="345:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="345:31" pos:end="345:39">// ts ext</comment>

            <expr_stmt pos:start="347:13" pos:end="347:29"><expr pos:start="347:13" pos:end="347:28"><call pos:start="347:13" pos:end="347:28"><name pos:start="347:13" pos:end="347:21">avio_wb24</name><argument_list pos:start="347:22" pos:end="347:28">(<argument pos:start="347:23" pos:end="347:24"><expr pos:start="347:23" pos:end="347:24"><name pos:start="347:23" pos:end="347:24">pb</name></expr></argument>, <argument pos:start="347:27" pos:end="347:27"><expr pos:start="347:27" pos:end="347:27"><literal type="number" pos:start="347:27" pos:end="347:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="347:31" pos:end="347:41">// streamid</comment>

            <expr_stmt pos:start="349:13" pos:end="349:32"><expr pos:start="349:13" pos:end="349:31"><name pos:start="349:13" pos:end="349:15">pos</name> <operator pos:start="349:17" pos:end="349:17">=</operator> <call pos:start="349:19" pos:end="349:31"><name pos:start="349:19" pos:end="349:27">avio_tell</name><argument_list pos:start="349:28" pos:end="349:31">(<argument pos:start="349:29" pos:end="349:30"><expr pos:start="349:29" pos:end="349:30"><name pos:start="349:29" pos:end="349:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="351:13" pos:end="369:13"><if pos:start="351:13" pos:end="359:13">if <condition pos:start="351:16" pos:end="351:46">(<expr pos:start="351:17" pos:end="351:45"><name pos:start="351:17" pos:end="351:29"><name pos:start="351:17" pos:end="351:19">enc</name><operator pos:start="351:20" pos:end="351:21">-&gt;</operator><name pos:start="351:22" pos:end="351:29">codec_id</name></name> <operator pos:start="351:31" pos:end="351:32">==</operator> <name pos:start="351:34" pos:end="351:45">CODEC_ID_AAC</name></expr>)</condition> <block pos:start="351:48" pos:end="359:13">{<block_content pos:start="353:17" pos:end="357:68">

                <expr_stmt pos:start="353:17" pos:end="353:53"><expr pos:start="353:17" pos:end="353:52"><call pos:start="353:17" pos:end="353:52"><name pos:start="353:17" pos:end="353:23">avio_w8</name><argument_list pos:start="353:24" pos:end="353:52">(<argument pos:start="353:25" pos:end="353:26"><expr pos:start="353:25" pos:end="353:26"><name pos:start="353:25" pos:end="353:26">pb</name></expr></argument>, <argument pos:start="353:29" pos:end="353:51"><expr pos:start="353:29" pos:end="353:51"><call pos:start="353:29" pos:end="353:51"><name pos:start="353:29" pos:end="353:43">get_audio_flags</name><argument_list pos:start="353:44" pos:end="353:51">(<argument pos:start="353:45" pos:end="353:45"><expr pos:start="353:45" pos:end="353:45"><name pos:start="353:45" pos:end="353:45">s</name></expr></argument>, <argument pos:start="353:48" pos:end="353:50"><expr pos:start="353:48" pos:end="353:50"><name pos:start="353:48" pos:end="353:50">enc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:31"><expr pos:start="355:17" pos:end="355:30"><call pos:start="355:17" pos:end="355:30"><name pos:start="355:17" pos:end="355:23">avio_w8</name><argument_list pos:start="355:24" pos:end="355:30">(<argument pos:start="355:25" pos:end="355:26"><expr pos:start="355:25" pos:end="355:26"><name pos:start="355:25" pos:end="355:26">pb</name></expr></argument>, <argument pos:start="355:29" pos:end="355:29"><expr pos:start="355:29" pos:end="355:29"><literal type="number" pos:start="355:29" pos:end="355:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="355:33" pos:end="355:54">// AAC sequence header</comment>

                <expr_stmt pos:start="357:17" pos:end="357:68"><expr pos:start="357:17" pos:end="357:67"><call pos:start="357:17" pos:end="357:67"><name pos:start="357:17" pos:end="357:26">avio_write</name><argument_list pos:start="357:27" pos:end="357:67">(<argument pos:start="357:28" pos:end="357:29"><expr pos:start="357:28" pos:end="357:29"><name pos:start="357:28" pos:end="357:29">pb</name></expr></argument>, <argument pos:start="357:32" pos:end="357:45"><expr pos:start="357:32" pos:end="357:45"><name pos:start="357:32" pos:end="357:45"><name pos:start="357:32" pos:end="357:34">enc</name><operator pos:start="357:35" pos:end="357:36">-&gt;</operator><name pos:start="357:37" pos:end="357:45">extradata</name></name></expr></argument>, <argument pos:start="357:48" pos:end="357:66"><expr pos:start="357:48" pos:end="357:66"><name pos:start="357:48" pos:end="357:66"><name pos:start="357:48" pos:end="357:50">enc</name><operator pos:start="357:51" pos:end="357:52">-&gt;</operator><name pos:start="357:53" pos:end="357:66">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="359:15" pos:end="369:13">else <block pos:start="359:20" pos:end="369:13">{<block_content pos:start="361:17" pos:end="367:76">

                <expr_stmt pos:start="361:17" pos:end="361:60"><expr pos:start="361:17" pos:end="361:59"><call pos:start="361:17" pos:end="361:59"><name pos:start="361:17" pos:end="361:23">avio_w8</name><argument_list pos:start="361:24" pos:end="361:59">(<argument pos:start="361:25" pos:end="361:26"><expr pos:start="361:25" pos:end="361:26"><name pos:start="361:25" pos:end="361:26">pb</name></expr></argument>, <argument pos:start="361:29" pos:end="361:58"><expr pos:start="361:29" pos:end="361:58"><name pos:start="361:29" pos:end="361:42"><name pos:start="361:29" pos:end="361:31">enc</name><operator pos:start="361:32" pos:end="361:33">-&gt;</operator><name pos:start="361:34" pos:end="361:42">codec_tag</name></name> <operator pos:start="361:44" pos:end="361:44">|</operator> <name pos:start="361:46" pos:end="361:58">FLV_FRAME_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="361:62" pos:end="361:69">// flags</comment>

                <expr_stmt pos:start="363:17" pos:end="363:31"><expr pos:start="363:17" pos:end="363:30"><call pos:start="363:17" pos:end="363:30"><name pos:start="363:17" pos:end="363:23">avio_w8</name><argument_list pos:start="363:24" pos:end="363:30">(<argument pos:start="363:25" pos:end="363:26"><expr pos:start="363:25" pos:end="363:26"><name pos:start="363:25" pos:end="363:26">pb</name></expr></argument>, <argument pos:start="363:29" pos:end="363:29"><expr pos:start="363:29" pos:end="363:29"><literal type="number" pos:start="363:29" pos:end="363:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="363:33" pos:end="363:54">// AVC sequence header</comment>

                <expr_stmt pos:start="365:17" pos:end="365:33"><expr pos:start="365:17" pos:end="365:32"><call pos:start="365:17" pos:end="365:32"><name pos:start="365:17" pos:end="365:25">avio_wb24</name><argument_list pos:start="365:26" pos:end="365:32">(<argument pos:start="365:27" pos:end="365:28"><expr pos:start="365:27" pos:end="365:28"><name pos:start="365:27" pos:end="365:28">pb</name></expr></argument>, <argument pos:start="365:31" pos:end="365:31"><expr pos:start="365:31" pos:end="365:31"><literal type="number" pos:start="365:31" pos:end="365:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="365:35" pos:end="365:53">// composition time</comment>

                <expr_stmt pos:start="367:17" pos:end="367:76"><expr pos:start="367:17" pos:end="367:75"><call pos:start="367:17" pos:end="367:75"><name pos:start="367:17" pos:end="367:34">ff_isom_write_avcc</name><argument_list pos:start="367:35" pos:end="367:75">(<argument pos:start="367:36" pos:end="367:37"><expr pos:start="367:36" pos:end="367:37"><name pos:start="367:36" pos:end="367:37">pb</name></expr></argument>, <argument pos:start="367:40" pos:end="367:53"><expr pos:start="367:40" pos:end="367:53"><name pos:start="367:40" pos:end="367:53"><name pos:start="367:40" pos:end="367:42">enc</name><operator pos:start="367:43" pos:end="367:44">-&gt;</operator><name pos:start="367:45" pos:end="367:53">extradata</name></name></expr></argument>, <argument pos:start="367:56" pos:end="367:74"><expr pos:start="367:56" pos:end="367:74"><name pos:start="367:56" pos:end="367:74"><name pos:start="367:56" pos:end="367:58">enc</name><operator pos:start="367:59" pos:end="367:60">-&gt;</operator><name pos:start="367:61" pos:end="367:74">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="371:13" pos:end="371:44"><expr pos:start="371:13" pos:end="371:43"><name pos:start="371:13" pos:end="371:21">data_size</name> <operator pos:start="371:23" pos:end="371:23">=</operator> <call pos:start="371:25" pos:end="371:37"><name pos:start="371:25" pos:end="371:33">avio_tell</name><argument_list pos:start="371:34" pos:end="371:37">(<argument pos:start="371:35" pos:end="371:36"><expr pos:start="371:35" pos:end="371:36"><name pos:start="371:35" pos:end="371:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="371:39" pos:end="371:39">-</operator> <name pos:start="371:41" pos:end="371:43">pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="373:53"><expr pos:start="373:13" pos:end="373:52"><call pos:start="373:13" pos:end="373:52"><name pos:start="373:13" pos:end="373:21">avio_seek</name><argument_list pos:start="373:22" pos:end="373:52">(<argument pos:start="373:23" pos:end="373:24"><expr pos:start="373:23" pos:end="373:24"><name pos:start="373:23" pos:end="373:24">pb</name></expr></argument>, <argument pos:start="373:27" pos:end="373:41"><expr pos:start="373:27" pos:end="373:41"><operator pos:start="373:27" pos:end="373:27">-</operator><name pos:start="373:28" pos:end="373:36">data_size</name> <operator pos:start="373:38" pos:end="373:38">-</operator> <literal type="number" pos:start="373:40" pos:end="373:41">10</literal></expr></argument>, <argument pos:start="373:44" pos:end="373:51"><expr pos:start="373:44" pos:end="373:51"><name pos:start="373:44" pos:end="373:51">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:37"><expr pos:start="375:13" pos:end="375:36"><call pos:start="375:13" pos:end="375:36"><name pos:start="375:13" pos:end="375:21">avio_wb24</name><argument_list pos:start="375:22" pos:end="375:36">(<argument pos:start="375:23" pos:end="375:24"><expr pos:start="375:23" pos:end="375:24"><name pos:start="375:23" pos:end="375:24">pb</name></expr></argument>, <argument pos:start="375:27" pos:end="375:35"><expr pos:start="375:27" pos:end="375:35"><name pos:start="375:27" pos:end="375:35">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:46"><expr pos:start="377:13" pos:end="377:45"><call pos:start="377:13" pos:end="377:45"><name pos:start="377:13" pos:end="377:21">avio_skip</name><argument_list pos:start="377:22" pos:end="377:45">(<argument pos:start="377:23" pos:end="377:24"><expr pos:start="377:23" pos:end="377:24"><name pos:start="377:23" pos:end="377:24">pb</name></expr></argument>, <argument pos:start="377:27" pos:end="377:44"><expr pos:start="377:27" pos:end="377:44"><name pos:start="377:27" pos:end="377:35">data_size</name> <operator pos:start="377:37" pos:end="377:37">+</operator> <literal type="number" pos:start="377:39" pos:end="377:42">10</literal> <operator pos:start="377:42" pos:end="377:42">-</operator> <literal type="number" pos:start="377:44" pos:end="377:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:42"><expr pos:start="379:13" pos:end="379:41"><call pos:start="379:13" pos:end="379:41"><name pos:start="379:13" pos:end="379:21">avio_wb32</name><argument_list pos:start="379:22" pos:end="379:41">(<argument pos:start="379:23" pos:end="379:24"><expr pos:start="379:23" pos:end="379:24"><name pos:start="379:23" pos:end="379:24">pb</name></expr></argument>, <argument pos:start="379:27" pos:end="379:40"><expr pos:start="379:27" pos:end="379:40"><name pos:start="379:27" pos:end="379:35">data_size</name> <operator pos:start="379:37" pos:end="379:37">+</operator> <literal type="number" pos:start="379:39" pos:end="379:40">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="379:44" pos:end="379:63">// previous tag size</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="387:5" pos:end="387:13">return <expr pos:start="387:12" pos:end="387:12"><literal type="number" pos:start="387:12" pos:end="387:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
