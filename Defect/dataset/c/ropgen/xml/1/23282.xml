<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23282.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">hls_read</name><parameter_list pos:start="1:20" pos:end="1:58">(<parameter pos:start="1:21" pos:end="1:33"><decl pos:start="1:21" pos:end="1:33"><type pos:start="1:21" pos:end="1:33"><name pos:start="1:21" pos:end="1:30">URLContext</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">h</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:47"><decl pos:start="1:36" pos:end="1:47"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:42">uint8_t</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">buf</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:57"><decl pos:start="1:50" pos:end="1:57"><type pos:start="1:50" pos:end="1:57"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:57">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">url</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:27">reload_interval</name></decl>;</decl_stmt>



<label pos:start="15:1" pos:end="15:6"><name pos:start="15:1" pos:end="15:5">start</name>:</label>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:17">seg_hd</name></name></expr>)</condition> <block pos:start="17:20" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:23">

        <expr_stmt pos:start="19:9" pos:end="19:47"><expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:46"><name pos:start="19:15" pos:end="19:24">ffurl_read</name><argument_list pos:start="19:25" pos:end="19:46">(<argument pos:start="19:26" pos:end="19:34"><expr pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:34"><name pos:start="19:26" pos:end="19:26">s</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:34">seg_hd</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:39"><expr pos:start="19:37" pos:end="19:39"><name pos:start="19:37" pos:end="19:39">buf</name></expr></argument>, <argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:23"><if pos:start="21:9" pos:end="23:23">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:23"><block_content pos:start="23:13" pos:end="23:23">

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:17">seg_hd</name></name></expr>)</condition> <block pos:start="27:20" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:24">

        <expr_stmt pos:start="29:9" pos:end="29:31"><expr pos:start="29:9" pos:end="29:30"><call pos:start="29:9" pos:end="29:30"><name pos:start="29:9" pos:end="29:19">ffurl_close</name><argument_list pos:start="29:20" pos:end="29:30">(<argument pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:29">seg_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:17">seg_hd</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:24">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:21">cur_seq_no</name></name><operator pos:start="33:22" pos:end="33:23">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="41:41"><expr pos:start="37:5" pos:end="41:40"><name pos:start="37:5" pos:end="37:19">reload_interval</name> <operator pos:start="37:21" pos:end="37:21">=</operator> <ternary pos:start="37:23" pos:end="41:40"><condition pos:start="37:23" pos:end="37:41"><expr pos:start="37:23" pos:end="37:39"><name pos:start="37:23" pos:end="37:35"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:35">n_segments</name></name> <operator pos:start="37:37" pos:end="37:37">&gt;</operator> <literal type="number" pos:start="37:39" pos:end="37:39">0</literal></expr> ?</condition><then pos:start="39:23" pos:end="39:62">

                      <expr pos:start="39:23" pos:end="39:62"><name pos:start="39:23" pos:end="39:52"><name pos:start="39:23" pos:end="39:23">s</name><operator pos:start="39:24" pos:end="39:25">-&gt;</operator><name pos:start="39:26" pos:end="39:33">segments</name><index pos:start="39:34" pos:end="39:52">[<expr pos:start="39:35" pos:end="39:51"><name pos:start="39:35" pos:end="39:47"><name pos:start="39:35" pos:end="39:35">s</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:47">n_segments</name></name> <operator pos:start="39:49" pos:end="39:49">-</operator> <literal type="number" pos:start="39:51" pos:end="39:51">1</literal></expr>]</index></name><operator pos:start="39:53" pos:end="39:54">-&gt;</operator><name pos:start="39:55" pos:end="39:62">duration</name></expr> </then><else pos:start="39:64" pos:end="41:40">:

                      <expr pos:start="41:23" pos:end="41:40"><name pos:start="41:23" pos:end="41:40"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:40">target_duration</name></name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:31"><expr pos:start="43:5" pos:end="43:30"><name pos:start="43:5" pos:end="43:19">reload_interval</name> <operator pos:start="43:21" pos:end="43:22">*=</operator> <literal type="number" pos:start="43:24" pos:end="43:30">1000000</literal></expr>;</expr_stmt>

<label pos:start="45:1" pos:end="45:6"><name pos:start="45:1" pos:end="45:5">retry</name>:</label>

    <if_stmt pos:start="47:5" pos:end="67:5"><if pos:start="47:5" pos:end="67:5">if <condition pos:start="47:8" pos:end="47:21">(<expr pos:start="47:9" pos:end="47:20"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:20"><name pos:start="47:10" pos:end="47:10">s</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">finished</name></name></expr>)</condition> <block pos:start="47:23" pos:end="67:5">{<block_content pos:start="49:9" pos:end="65:9">

        <decl_stmt pos:start="49:9" pos:end="49:35"><decl pos:start="49:9" pos:end="49:34"><type pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:15">int64_t</name></type> <name pos:start="49:17" pos:end="49:19">now</name> <init pos:start="49:21" pos:end="49:34">= <expr pos:start="49:23" pos:end="49:34"><call pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:32">av_gettime</name><argument_list pos:start="49:33" pos:end="49:34">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="51:9" pos:end="65:9"><if pos:start="51:9" pos:end="65:9">if <condition pos:start="51:12" pos:end="51:55">(<expr pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:15">now</name> <operator pos:start="51:17" pos:end="51:17">-</operator> <name pos:start="51:19" pos:end="51:35"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:35">last_load_time</name></name> <operator pos:start="51:37" pos:end="51:38">&gt;=</operator> <name pos:start="51:40" pos:end="51:54">reload_interval</name></expr>)</condition> <block pos:start="51:57" pos:end="65:9">{<block_content pos:start="53:13" pos:end="63:58">

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:62">(<expr pos:start="53:17" pos:end="53:61"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">ret</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:56"><name pos:start="53:24" pos:end="53:37">parse_playlist</name><argument_list pos:start="53:38" pos:end="53:56">(<argument pos:start="53:39" pos:end="53:39"><expr pos:start="53:39" pos:end="53:39"><name pos:start="53:39" pos:end="53:39">h</name></expr></argument>, <argument pos:start="53:42" pos:end="53:55"><expr pos:start="53:42" pos:end="53:55"><name pos:start="53:42" pos:end="53:55"><name pos:start="53:42" pos:end="53:42">s</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:55">playlisturl</name></name></expr></argument>)</argument_list></call><operator pos:start="53:57" pos:end="53:57">)</operator> <operator pos:start="53:59" pos:end="53:59">&lt;</operator> <literal type="number" pos:start="53:61" pos:end="53:61">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <comment type="block" pos:start="57:13" pos:end="61:55">/* If we need to reload the playlist again below (if

             * there's still no more segments), switch to a reload

             * interval of half the target duration. */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:58"><expr pos:start="63:13" pos:end="63:57"><name pos:start="63:13" pos:end="63:27">reload_interval</name> <operator pos:start="63:29" pos:end="63:29">=</operator> <name pos:start="63:31" pos:end="63:48"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:48">target_duration</name></name> <operator pos:start="63:50" pos:end="63:50">*</operator> <literal type="number" pos:start="63:52" pos:end="63:57">500000</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:40">(<expr pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">cur_seq_no</name></name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <name pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:25">s</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:39">start_seq_no</name></name></expr>)</condition> <block pos:start="69:42" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:40">

        <expr_stmt pos:start="71:9" pos:end="75:48"><expr pos:start="71:9" pos:end="75:47"><call pos:start="71:9" pos:end="75:47"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="75:47">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">h</name></expr></argument>, <argument pos:start="71:19" pos:end="71:32"><expr pos:start="71:19" pos:end="71:32"><name pos:start="71:19" pos:end="71:32">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:68"><expr pos:start="73:16" pos:end="73:68"><literal type="string" pos:start="73:16" pos:end="73:68">"skipping %d segments ahead, expired from playlist\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:46"><expr pos:start="75:16" pos:end="75:46"><name pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:30">start_seq_no</name></name> <operator pos:start="75:32" pos:end="75:32">-</operator> <name pos:start="75:34" pos:end="75:46"><name pos:start="75:34" pos:end="75:34">s</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:46">cur_seq_no</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:21">cur_seq_no</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:39"><name pos:start="77:25" pos:end="77:25">s</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:39">start_seq_no</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="99:5"><if pos:start="81:5" pos:end="99:5">if <condition pos:start="81:8" pos:end="81:57">(<expr pos:start="81:9" pos:end="81:56"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:21">cur_seq_no</name></name> <operator pos:start="81:23" pos:end="81:23">-</operator> <name pos:start="81:25" pos:end="81:39"><name pos:start="81:25" pos:end="81:25">s</name><operator pos:start="81:26" pos:end="81:27">-&gt;</operator><name pos:start="81:28" pos:end="81:39">start_seq_no</name></name> <operator pos:start="81:41" pos:end="81:42">&gt;=</operator> <name pos:start="81:44" pos:end="81:56"><name pos:start="81:44" pos:end="81:44">s</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:56">n_segments</name></name></expr>)</condition> <block pos:start="81:59" pos:end="99:5">{<block_content pos:start="83:9" pos:end="97:19">

        <if_stmt pos:start="83:9" pos:end="85:31"><if pos:start="83:9" pos:end="85:31">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:23">finished</name></name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:31"><block_content pos:start="85:13" pos:end="85:31">

            <return pos:start="85:13" pos:end="85:31">return <expr pos:start="85:20" pos:end="85:30"><name pos:start="85:20" pos:end="85:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <while pos:start="87:9" pos:end="95:9">while <condition pos:start="87:15" pos:end="87:66">(<expr pos:start="87:16" pos:end="87:65"><call pos:start="87:16" pos:end="87:27"><name pos:start="87:16" pos:end="87:25">av_gettime</name><argument_list pos:start="87:26" pos:end="87:27">()</argument_list></call> <operator pos:start="87:29" pos:end="87:29">-</operator> <name pos:start="87:31" pos:end="87:47"><name pos:start="87:31" pos:end="87:31">s</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:47">last_load_time</name></name> <operator pos:start="87:49" pos:end="87:49">&lt;</operator> <name pos:start="87:51" pos:end="87:65">reload_interval</name></expr>)</condition> <block pos:start="87:68" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:32">

            <if_stmt pos:start="89:13" pos:end="91:36"><if pos:start="89:13" pos:end="91:36">if <condition pos:start="89:16" pos:end="89:59">(<expr pos:start="89:17" pos:end="89:58"><call pos:start="89:17" pos:end="89:58"><name pos:start="89:17" pos:end="89:34">ff_check_interrupt</name><argument_list pos:start="89:35" pos:end="89:58">(<argument pos:start="89:36" pos:end="89:57"><expr pos:start="89:36" pos:end="89:57"><operator pos:start="89:36" pos:end="89:36">&amp;</operator><name pos:start="89:37" pos:end="89:57"><name pos:start="89:37" pos:end="89:37">h</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:57">interrupt_callback</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:36"><block_content pos:start="91:17" pos:end="91:36">

                <return pos:start="91:17" pos:end="91:36">return <expr pos:start="91:24" pos:end="91:35"><name pos:start="91:24" pos:end="91:35">AVERROR_EXIT</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:32"><expr pos:start="93:13" pos:end="93:31"><call pos:start="93:13" pos:end="93:31"><name pos:start="93:13" pos:end="93:21">av_usleep</name><argument_list pos:start="93:22" pos:end="93:31">(<argument pos:start="93:23" pos:end="93:30"><expr pos:start="93:23" pos:end="93:30"><literal type="number" pos:start="93:23" pos:end="93:25">100</literal><operator pos:start="93:26" pos:end="93:26">*</operator><literal type="number" pos:start="93:27" pos:end="93:30">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <goto pos:start="97:9" pos:end="97:19">goto <name pos:start="97:14" pos:end="97:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="101:5" pos:end="103:49"><expr pos:start="101:5" pos:end="101:59"><name pos:start="101:5" pos:end="101:7">url</name> <operator pos:start="101:9" pos:end="101:9">=</operator> <name pos:start="101:11" pos:end="101:54"><name pos:start="101:11" pos:end="101:11">s</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:21">segments</name><index pos:start="101:22" pos:end="101:54">[<expr pos:start="101:23" pos:end="101:53"><name pos:start="101:23" pos:end="101:35"><name pos:start="101:23" pos:end="101:23">s</name><operator pos:start="101:24" pos:end="101:25">-&gt;</operator><name pos:start="101:26" pos:end="101:35">cur_seq_no</name></name> <operator pos:start="101:37" pos:end="101:37">-</operator> <name pos:start="101:39" pos:end="101:53"><name pos:start="101:39" pos:end="101:39">s</name><operator pos:start="101:40" pos:end="101:41">-&gt;</operator><name pos:start="101:42" pos:end="101:53">start_seq_no</name></name></expr>]</index></name><operator pos:start="101:55" pos:end="101:56">-&gt;</operator><name pos:start="101:57" pos:end="101:59">url</name></expr><operator pos:start="101:60" pos:end="101:60">,</operator>

    <expr pos:start="103:5" pos:end="103:48"><call pos:start="103:5" pos:end="103:48"><name pos:start="103:5" pos:end="103:10">av_log</name><argument_list pos:start="103:11" pos:end="103:48">(<argument pos:start="103:12" pos:end="103:12"><expr pos:start="103:12" pos:end="103:12"><name pos:start="103:12" pos:end="103:12">h</name></expr></argument>, <argument pos:start="103:15" pos:end="103:26"><expr pos:start="103:15" pos:end="103:26"><name pos:start="103:15" pos:end="103:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="103:29" pos:end="103:42"><expr pos:start="103:29" pos:end="103:42"><literal type="string" pos:start="103:29" pos:end="103:42">"opening %s\n"</literal></expr></argument>, <argument pos:start="103:45" pos:end="103:47"><expr pos:start="103:45" pos:end="103:47"><name pos:start="103:45" pos:end="103:47">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:51"><expr pos:start="105:5" pos:end="107:50"><name pos:start="105:5" pos:end="105:7">ret</name> <operator pos:start="105:9" pos:end="105:9">=</operator> <call pos:start="105:11" pos:end="107:50"><name pos:start="105:11" pos:end="105:20">ffurl_open</name><argument_list pos:start="105:21" pos:end="107:50">(<argument pos:start="105:22" pos:end="105:31"><expr pos:start="105:22" pos:end="105:31"><operator pos:start="105:22" pos:end="105:22">&amp;</operator><name pos:start="105:23" pos:end="105:31"><name pos:start="105:23" pos:end="105:23">s</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:31">seg_hd</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:36"><expr pos:start="105:34" pos:end="105:36"><name pos:start="105:34" pos:end="105:36">url</name></expr></argument>, <argument pos:start="105:39" pos:end="105:52"><expr pos:start="105:39" pos:end="105:52"><name pos:start="105:39" pos:end="105:52">AVIO_FLAG_READ</name></expr></argument>,

                     <argument pos:start="107:22" pos:end="107:43"><expr pos:start="107:22" pos:end="107:43"><operator pos:start="107:22" pos:end="107:22">&amp;</operator><name pos:start="107:23" pos:end="107:43"><name pos:start="107:23" pos:end="107:23">h</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:43">interrupt_callback</name></name></expr></argument>, <argument pos:start="107:46" pos:end="107:49"><expr pos:start="107:46" pos:end="107:49"><name pos:start="107:46" pos:end="107:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="121:5"><if pos:start="109:5" pos:end="121:5">if <condition pos:start="109:8" pos:end="109:16">(<expr pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">&lt;</operator> <literal type="number" pos:start="109:15" pos:end="109:15">0</literal></expr>)</condition> <block pos:start="109:18" pos:end="121:5">{<block_content pos:start="111:9" pos:end="119:19">

        <if_stmt pos:start="111:9" pos:end="113:32"><if pos:start="111:9" pos:end="113:32">if <condition pos:start="111:12" pos:end="111:55">(<expr pos:start="111:13" pos:end="111:54"><call pos:start="111:13" pos:end="111:54"><name pos:start="111:13" pos:end="111:30">ff_check_interrupt</name><argument_list pos:start="111:31" pos:end="111:54">(<argument pos:start="111:32" pos:end="111:53"><expr pos:start="111:32" pos:end="111:53"><operator pos:start="111:32" pos:end="111:32">&amp;</operator><name pos:start="111:33" pos:end="111:53"><name pos:start="111:33" pos:end="111:33">h</name><operator pos:start="111:34" pos:end="111:35">-&gt;</operator><name pos:start="111:36" pos:end="111:53">interrupt_callback</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:32"><block_content pos:start="113:13" pos:end="113:32">

            <return pos:start="113:13" pos:end="113:32">return <expr pos:start="113:20" pos:end="113:31"><name pos:start="113:20" pos:end="113:31">AVERROR_EXIT</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:62"><expr pos:start="115:9" pos:end="115:61"><call pos:start="115:9" pos:end="115:61"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:61">(<argument pos:start="115:16" pos:end="115:16"><expr pos:start="115:16" pos:end="115:16"><name pos:start="115:16" pos:end="115:16">h</name></expr></argument>, <argument pos:start="115:19" pos:end="115:32"><expr pos:start="115:19" pos:end="115:32"><name pos:start="115:19" pos:end="115:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="115:35" pos:end="115:55"><expr pos:start="115:35" pos:end="115:55"><literal type="string" pos:start="115:35" pos:end="115:55">"Unable to open %s\n"</literal></expr></argument>, <argument pos:start="115:58" pos:end="115:60"><expr pos:start="115:58" pos:end="115:60"><name pos:start="115:58" pos:end="115:60">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:21">cur_seq_no</name></name><operator pos:start="117:22" pos:end="117:23">++</operator></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:19">goto <name pos:start="119:14" pos:end="119:18">retry</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <goto pos:start="123:5" pos:end="123:15">goto <name pos:start="123:10" pos:end="123:14">start</name>;</goto>

</block_content>}</block></function>
</unit>
