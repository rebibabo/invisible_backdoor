<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22309.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">CPUState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:20">cpu_create</name><parameter_list pos:start="1:21" pos:end="1:42">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:33"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">typename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">cpu</name> <init pos:start="7:19" pos:end="7:45">= <expr pos:start="7:21" pos:end="7:45"><call pos:start="7:21" pos:end="7:45"><name pos:start="7:21" pos:end="7:23">CPU</name><argument_list pos:start="7:24" pos:end="7:45">(<argument pos:start="7:25" pos:end="7:44"><expr pos:start="7:25" pos:end="7:44"><call pos:start="7:25" pos:end="7:44"><name pos:start="7:25" pos:end="7:34">object_new</name><argument_list pos:start="7:35" pos:end="7:44">(<argument pos:start="7:36" pos:end="7:43"><expr pos:start="7:36" pos:end="7:43"><name pos:start="7:36" pos:end="7:43">typename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:66"><expr pos:start="9:5" pos:end="9:65"><call pos:start="9:5" pos:end="9:65"><name pos:start="9:5" pos:end="9:28">object_property_set_bool</name><argument_list pos:start="9:29" pos:end="9:65">(<argument pos:start="9:30" pos:end="9:40"><expr pos:start="9:30" pos:end="9:40"><call pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:35">OBJECT</name><argument_list pos:start="9:36" pos:end="9:40">(<argument pos:start="9:37" pos:end="9:39"><expr pos:start="9:37" pos:end="9:39"><name pos:start="9:37" pos:end="9:39">cpu</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="9:43" pos:end="9:46"><expr pos:start="9:43" pos:end="9:46"><name pos:start="9:43" pos:end="9:46">true</name></expr></argument>, <argument pos:start="9:49" pos:end="9:58"><expr pos:start="9:49" pos:end="9:58"><literal type="string" pos:start="9:49" pos:end="9:58">"realized"</literal></expr></argument>, <argument pos:start="9:61" pos:end="9:64"><expr pos:start="9:61" pos:end="9:64"><operator pos:start="9:61" pos:end="9:61">&amp;</operator><name pos:start="9:62" pos:end="9:64">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:11">err</name> <operator pos:start="11:13" pos:end="11:14">!=</operator> <name pos:start="11:16" pos:end="11:19">NULL</name></expr>)</condition> <block pos:start="11:22" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:20">

        <expr_stmt pos:start="13:9" pos:end="13:30"><expr pos:start="13:9" pos:end="13:29"><call pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:24">error_report_err</name><argument_list pos:start="13:25" pos:end="13:29">(<argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><name pos:start="13:26" pos:end="13:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:34"><expr pos:start="15:9" pos:end="15:33"><call pos:start="15:9" pos:end="15:33"><name pos:start="15:9" pos:end="15:20">object_unref</name><argument_list pos:start="15:21" pos:end="15:33">(<argument pos:start="15:22" pos:end="15:32"><expr pos:start="15:22" pos:end="15:32"><call pos:start="15:22" pos:end="15:32"><name pos:start="15:22" pos:end="15:27">OBJECT</name><argument_list pos:start="15:28" pos:end="15:32">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">cpu</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:20">return <expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:15">return <expr pos:start="21:12" pos:end="21:14"><name pos:start="21:12" pos:end="21:14">cpu</name></expr>;</return>

</block_content>}</block></function>
</unit>
