<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3965.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">match_ext</name><parameter_list pos:start="1:14" pos:end="1:59">(<parameter pos:start="1:15" pos:end="1:34"><decl pos:start="1:15" pos:end="1:34"><type pos:start="1:15" pos:end="1:34"><specifier pos:start="1:15" pos:end="1:19">const</specifier> <name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:34">filename</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:58"><decl pos:start="1:37" pos:end="1:58"><type pos:start="1:37" pos:end="1:58"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:58">extensions</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ext</name></decl>, <decl pos:start="5:22" pos:end="5:23"><type ref="prev" pos:start="5:5" pos:end="5:16"><modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:17"><name pos:start="7:10" pos:end="7:13">ext1</name><index pos:start="7:14" pos:end="7:17">[<expr pos:start="7:15" pos:end="7:16"><literal type="number" pos:start="7:15" pos:end="7:16">32</literal></expr>]</index></name></decl>, <decl pos:start="7:20" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:8"><modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">q</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if<condition pos:start="11:7" pos:end="11:17">(<expr pos:start="11:8" pos:end="11:16"><operator pos:start="11:8" pos:end="11:8">!</operator><name pos:start="11:9" pos:end="11:16">filename</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:7">ext</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:32"><name pos:start="17:11" pos:end="17:17">strrchr</name><argument_list pos:start="17:18" pos:end="17:32">(<argument pos:start="17:19" pos:end="17:26"><expr pos:start="17:19" pos:end="17:26"><name pos:start="17:19" pos:end="17:26">filename</name></expr></argument>, <argument pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><literal type="char" pos:start="17:29" pos:end="17:31">'.'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="47:5"><if pos:start="19:5" pos:end="47:5">if <condition pos:start="19:8" pos:end="19:12">(<expr pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">ext</name></expr>)</condition> <block pos:start="19:14" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:9">

        <expr_stmt pos:start="21:9" pos:end="21:14"><expr pos:start="21:9" pos:end="21:13"><name pos:start="21:9" pos:end="21:11">ext</name><operator pos:start="21:12" pos:end="21:13">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:22">extensions</name></expr>;</expr_stmt>

        <for pos:start="25:9" pos:end="45:9">for<control pos:start="25:12" pos:end="25:15">(<init pos:start="25:13" pos:end="25:13">;</init><condition pos:start="25:14" pos:end="25:14">;</condition><incr/>)</control> <block pos:start="25:17" pos:end="45:9">{<block_content pos:start="27:13" pos:end="43:16">

            <expr_stmt pos:start="27:13" pos:end="27:21"><expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:13">q</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:20">ext1</name></expr>;</expr_stmt>

            <while pos:start="29:13" pos:end="31:28">while <condition pos:start="29:19" pos:end="29:43">(<expr pos:start="29:20" pos:end="29:42"><operator pos:start="29:20" pos:end="29:20">*</operator><name pos:start="29:21" pos:end="29:21">p</name> <operator pos:start="29:23" pos:end="29:24">!=</operator> <literal type="char" pos:start="29:26" pos:end="29:29">'\0'</literal> <operator pos:start="29:31" pos:end="29:32">&amp;&amp;</operator> <operator pos:start="29:34" pos:end="29:34">*</operator><name pos:start="29:35" pos:end="29:35">p</name> <operator pos:start="29:37" pos:end="29:38">!=</operator> <literal type="char" pos:start="29:40" pos:end="29:42">','</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:28"><block_content pos:start="31:17" pos:end="31:28"> 

                <expr_stmt pos:start="31:17" pos:end="31:28"><expr pos:start="31:17" pos:end="31:27"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:18">q</name><operator pos:start="31:19" pos:end="31:20">++</operator> <operator pos:start="31:22" pos:end="31:22">=</operator> <operator pos:start="31:24" pos:end="31:24">*</operator><name pos:start="31:25" pos:end="31:25">p</name><operator pos:start="31:26" pos:end="31:27">++</operator></expr>;</expr_stmt></block_content></block></while>

            <expr_stmt pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:21"><operator pos:start="33:13" pos:end="33:13">*</operator><name pos:start="33:14" pos:end="33:14">q</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="char" pos:start="33:18" pos:end="33:21">'\0'</literal></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:25"><if pos:start="35:13" pos:end="37:25">if <condition pos:start="35:16" pos:end="35:39">(<expr pos:start="35:17" pos:end="35:38"><operator pos:start="35:17" pos:end="35:17">!</operator><call pos:start="35:18" pos:end="35:38"><name pos:start="35:18" pos:end="35:27">strcasecmp</name><argument_list pos:start="35:28" pos:end="35:38">(<argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><name pos:start="35:29" pos:end="35:32">ext1</name></expr></argument>, <argument pos:start="35:35" pos:end="35:37"><expr pos:start="35:35" pos:end="35:37"><name pos:start="35:35" pos:end="35:37">ext</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:25"><block_content pos:start="37:17" pos:end="37:25"> 

                <return pos:start="37:17" pos:end="37:25">return <expr pos:start="37:24" pos:end="37:24"><literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="41:22"><if pos:start="39:13" pos:end="41:22">if <condition pos:start="39:16" pos:end="39:27">(<expr pos:start="39:17" pos:end="39:26"><operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:18">p</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="char" pos:start="39:23" pos:end="39:26">'\0'</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:22"><block_content pos:start="41:17" pos:end="41:22"> 

                <break pos:start="41:17" pos:end="41:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:16"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:13">p</name><operator pos:start="43:14" pos:end="43:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
