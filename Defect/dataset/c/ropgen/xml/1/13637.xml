<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13637.c" pos:tabs="8"><function pos:start="1:1" pos:end="435:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">vhdx_parse_metadata</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:51"><decl pos:start="1:32" pos:end="1:51"><type pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:47">BlockDriverState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">bs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><name pos:start="1:54" pos:end="1:66">BDRVVHDXState</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:69">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="435:1">{<block_content pos:start="5:5" pos:end="433:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:19">buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">offset</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:26"><name pos:start="13:5" pos:end="13:26">VHDXMetadataTableEntry</name></type> <name pos:start="13:28" pos:end="13:35">md_entry</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:10">buffer</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <call pos:start="17:14" pos:end="17:62"><name pos:start="17:14" pos:end="17:28">qemu_blockalign</name><argument_list pos:start="17:29" pos:end="17:62">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">bs</name></expr></argument>, <argument pos:start="17:34" pos:end="17:61"><expr pos:start="17:34" pos:end="17:61"><name pos:start="17:34" pos:end="17:61">VHDX_METADATA_TABLE_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:51"><expr pos:start="21:5" pos:end="23:50"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="23:50"><name pos:start="21:11" pos:end="21:20">bdrv_pread</name><argument_list pos:start="21:21" pos:end="23:50">(<argument pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:23">bs</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:29">file</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:57"><expr pos:start="21:32" pos:end="21:57"><name pos:start="21:32" pos:end="21:57"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:45">metadata_rt</name><operator pos:start="21:46" pos:end="21:46">.</operator><name pos:start="21:47" pos:end="21:57">file_offset</name></name></expr></argument>, <argument pos:start="21:60" pos:end="21:65"><expr pos:start="21:60" pos:end="21:65"><name pos:start="21:60" pos:end="21:65">buffer</name></expr></argument>,

                     <argument pos:start="23:22" pos:end="23:49"><expr pos:start="23:22" pos:end="23:49"><name pos:start="23:22" pos:end="23:49">VHDX_METADATA_TABLE_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition> <block pos:start="25:18" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:10">memcpy</name><argument_list pos:start="31:11" pos:end="31:61">(<argument pos:start="31:12" pos:end="31:27"><expr pos:start="31:12" pos:end="31:27"><operator pos:start="31:12" pos:end="31:12">&amp;</operator><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:27">metadata_hdr</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:35">buffer</name></expr></argument>, <argument pos:start="31:38" pos:end="31:60"><expr pos:start="31:38" pos:end="31:60"><sizeof pos:start="31:38" pos:end="31:60">sizeof<argument_list pos:start="31:44" pos:end="31:60">(<argument pos:start="31:45" pos:end="31:59"><expr pos:start="31:45" pos:end="31:59"><name pos:start="31:45" pos:end="31:59"><name pos:start="31:45" pos:end="31:45">s</name><operator pos:start="31:46" pos:end="31:47">-&gt;</operator><name pos:start="31:48" pos:end="31:59">metadata_hdr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:10">offset</name> <operator pos:start="33:12" pos:end="33:13">+=</operator> <sizeof pos:start="33:15" pos:end="33:37">sizeof<argument_list pos:start="33:21" pos:end="33:37">(<argument pos:start="33:22" pos:end="33:36"><expr pos:start="33:22" pos:end="33:36"><name pos:start="33:22" pos:end="33:36"><name pos:start="33:22" pos:end="33:22">s</name><operator pos:start="33:23" pos:end="33:24">-&gt;</operator><name pos:start="33:25" pos:end="33:36">metadata_hdr</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:53"><expr pos:start="37:5" pos:end="37:52"><call pos:start="37:5" pos:end="37:52"><name pos:start="37:5" pos:end="37:34">vhdx_metadata_header_le_import</name><argument_list pos:start="37:35" pos:end="37:52">(<argument pos:start="37:36" pos:end="37:51"><expr pos:start="37:36" pos:end="37:51"><operator pos:start="37:36" pos:end="37:36">&amp;</operator><name pos:start="37:37" pos:end="37:51"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:51">metadata_hdr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:58">(<expr pos:start="41:9" pos:end="41:57"><call pos:start="41:9" pos:end="41:57"><name pos:start="41:9" pos:end="41:14">memcmp</name><argument_list pos:start="41:15" pos:end="41:57">(<argument pos:start="41:16" pos:end="41:41"><expr pos:start="41:16" pos:end="41:41"><operator pos:start="41:16" pos:end="41:16">&amp;</operator><name pos:start="41:17" pos:end="41:41"><name pos:start="41:17" pos:end="41:17">s</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:31">metadata_hdr</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:41">signature</name></name></expr></argument>, <argument pos:start="41:44" pos:end="41:53"><expr pos:start="41:44" pos:end="41:53"><literal type="string" pos:start="41:44" pos:end="41:53">"metadata"</literal></expr></argument>, <argument pos:start="41:56" pos:end="41:56"><expr pos:start="41:56" pos:end="41:56"><literal type="number" pos:start="41:56" pos:end="41:56">8</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:60" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:22"><expr pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">-</operator><name pos:start="43:16" pos:end="43:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:23">metadata_entries</name><operator pos:start="51:24" pos:end="51:24">.</operator><name pos:start="51:25" pos:end="51:31">present</name></name> <operator pos:start="51:33" pos:end="51:33">=</operator> <literal type="number" pos:start="51:35" pos:end="51:35">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="57:48">(<expr pos:start="55:9" pos:end="57:47"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:36"><name pos:start="55:10" pos:end="55:10">s</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:24">metadata_hdr</name><operator pos:start="55:25" pos:end="55:25">.</operator><name pos:start="55:26" pos:end="55:36">entry_count</name></name> <operator pos:start="55:38" pos:end="55:38">*</operator> <sizeof pos:start="55:40" pos:end="55:55">sizeof<argument_list pos:start="55:46" pos:end="55:55">(<argument pos:start="55:47" pos:end="55:54"><expr pos:start="55:47" pos:end="55:54"><name pos:start="55:47" pos:end="55:54">md_entry</name></expr></argument>)</argument_list></sizeof><operator pos:start="55:56" pos:end="55:56">)</operator> <operator pos:start="55:58" pos:end="55:58">&gt;</operator>

        <operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:37">VHDX_METADATA_TABLE_MAX_SIZE</name> <operator pos:start="57:39" pos:end="57:39">-</operator> <name pos:start="57:41" pos:end="57:46">offset</name><operator pos:start="57:47" pos:end="57:47">)</operator></expr>)</condition> <block pos:start="57:50" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:22"><expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <operator pos:start="59:15" pos:end="59:15">-</operator><name pos:start="59:16" pos:end="59:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="61:9" pos:end="61:18">goto <name pos:start="61:14" pos:end="61:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <for pos:start="67:5" pos:end="213:5">for <control pos:start="67:9" pos:end="67:53">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:48"><expr pos:start="67:17" pos:end="67:47"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:47"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:35">metadata_hdr</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:47">entry_count</name></name></expr>;</condition> <incr pos:start="67:50" pos:end="67:52"><expr pos:start="67:50" pos:end="67:52"><name pos:start="67:50" pos:end="67:50">i</name><operator pos:start="67:51" pos:end="67:52">++</operator></expr></incr>)</control> <block pos:start="67:55" pos:end="213:5">{<block_content pos:start="69:9" pos:end="211:9">

        <expr_stmt pos:start="69:9" pos:end="69:61"><expr pos:start="69:9" pos:end="69:60"><call pos:start="69:9" pos:end="69:60"><name pos:start="69:9" pos:end="69:14">memcpy</name><argument_list pos:start="69:15" pos:end="69:60">(<argument pos:start="69:16" pos:end="69:24"><expr pos:start="69:16" pos:end="69:24"><operator pos:start="69:16" pos:end="69:16">&amp;</operator><name pos:start="69:17" pos:end="69:24">md_entry</name></expr></argument>, <argument pos:start="69:27" pos:end="69:41"><expr pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:32">buffer</name> <operator pos:start="69:34" pos:end="69:34">+</operator> <name pos:start="69:36" pos:end="69:41">offset</name></expr></argument>, <argument pos:start="69:44" pos:end="69:59"><expr pos:start="69:44" pos:end="69:59"><sizeof pos:start="69:44" pos:end="69:59">sizeof<argument_list pos:start="69:50" pos:end="69:59">(<argument pos:start="69:51" pos:end="69:58"><expr pos:start="69:51" pos:end="69:58"><name pos:start="69:51" pos:end="69:58">md_entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:35"><expr pos:start="71:9" pos:end="71:34"><name pos:start="71:9" pos:end="71:14">offset</name> <operator pos:start="71:16" pos:end="71:17">+=</operator> <sizeof pos:start="71:19" pos:end="71:34">sizeof<argument_list pos:start="71:25" pos:end="71:34">(<argument pos:start="71:26" pos:end="71:33"><expr pos:start="71:26" pos:end="71:33"><name pos:start="71:26" pos:end="71:33">md_entry</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><call pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:37">vhdx_metadata_entry_le_import</name><argument_list pos:start="75:38" pos:end="75:48">(<argument pos:start="75:39" pos:end="75:47"><expr pos:start="75:39" pos:end="75:47"><operator pos:start="75:39" pos:end="75:39">&amp;</operator><name pos:start="75:40" pos:end="75:47">md_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="79:9" pos:end="95:9"><if pos:start="79:9" pos:end="95:9">if <condition pos:start="79:12" pos:end="79:55">(<expr pos:start="79:13" pos:end="79:54"><call pos:start="79:13" pos:end="79:54"><name pos:start="79:13" pos:end="79:19">guid_eq</name><argument_list pos:start="79:20" pos:end="79:54">(<argument pos:start="79:21" pos:end="79:36"><expr pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:28">md_entry</name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:36">item_id</name></name></expr></argument>, <argument pos:start="79:39" pos:end="79:53"><expr pos:start="79:39" pos:end="79:53"><name pos:start="79:39" pos:end="79:53">file_param_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:57" pos:end="95:9">{<block_content pos:start="81:13" pos:end="93:21">

            <if_stmt pos:start="81:13" pos:end="87:13"><if pos:start="81:13" pos:end="87:13">if <condition pos:start="81:16" pos:end="81:74">(<expr pos:start="81:17" pos:end="81:73"><name pos:start="81:17" pos:end="81:43"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:35">metadata_entries</name><operator pos:start="81:36" pos:end="81:36">.</operator><name pos:start="81:37" pos:end="81:43">present</name></name> <operator pos:start="81:45" pos:end="81:45">&amp;</operator> <name pos:start="81:47" pos:end="81:73">META_FILE_PARAMETER_PRESENT</name></expr>)</condition> <block pos:start="81:76" pos:end="87:13">{<block_content pos:start="83:17" pos:end="85:26">

                <expr_stmt pos:start="83:17" pos:end="83:30"><expr pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:19">ret</name> <operator pos:start="83:21" pos:end="83:21">=</operator> <operator pos:start="83:23" pos:end="83:23">-</operator><name pos:start="83:24" pos:end="83:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="85:17" pos:end="85:26">goto <name pos:start="85:22" pos:end="85:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:65"><expr pos:start="89:13" pos:end="89:64"><name pos:start="89:13" pos:end="89:53"><name pos:start="89:13" pos:end="89:13">s</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:31">metadata_entries</name><operator pos:start="89:32" pos:end="89:32">.</operator><name pos:start="89:33" pos:end="89:53">file_parameters_entry</name></name> <operator pos:start="89:55" pos:end="89:55">=</operator> <name pos:start="89:57" pos:end="89:64">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:71"><expr pos:start="91:13" pos:end="91:70"><name pos:start="91:13" pos:end="91:39"><name pos:start="91:13" pos:end="91:13">s</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:31">metadata_entries</name><operator pos:start="91:32" pos:end="91:32">.</operator><name pos:start="91:33" pos:end="91:39">present</name></name> <operator pos:start="91:41" pos:end="91:42">|=</operator> <name pos:start="91:44" pos:end="91:70">META_FILE_PARAMETER_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="93:13" pos:end="93:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="115:9"><if pos:start="99:9" pos:end="115:9">if <condition pos:start="99:12" pos:end="99:57">(<expr pos:start="99:13" pos:end="99:56"><call pos:start="99:13" pos:end="99:56"><name pos:start="99:13" pos:end="99:19">guid_eq</name><argument_list pos:start="99:20" pos:end="99:56">(<argument pos:start="99:21" pos:end="99:36"><expr pos:start="99:21" pos:end="99:36"><name pos:start="99:21" pos:end="99:36"><name pos:start="99:21" pos:end="99:28">md_entry</name><operator pos:start="99:29" pos:end="99:29">.</operator><name pos:start="99:30" pos:end="99:36">item_id</name></name></expr></argument>, <argument pos:start="99:39" pos:end="99:55"><expr pos:start="99:39" pos:end="99:55"><name pos:start="99:39" pos:end="99:55">virtual_size_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:59" pos:end="115:9">{<block_content pos:start="101:13" pos:end="113:21">

            <if_stmt pos:start="101:13" pos:end="107:13"><if pos:start="101:13" pos:end="107:13">if <condition pos:start="101:16" pos:end="101:77">(<expr pos:start="101:17" pos:end="101:76"><name pos:start="101:17" pos:end="101:43"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:35">metadata_entries</name><operator pos:start="101:36" pos:end="101:36">.</operator><name pos:start="101:37" pos:end="101:43">present</name></name> <operator pos:start="101:45" pos:end="101:45">&amp;</operator> <name pos:start="101:47" pos:end="101:76">META_VIRTUAL_DISK_SIZE_PRESENT</name></expr>)</condition> <block pos:start="101:79" pos:end="107:13">{<block_content pos:start="103:17" pos:end="105:26">

                <expr_stmt pos:start="103:17" pos:end="103:30"><expr pos:start="103:17" pos:end="103:29"><name pos:start="103:17" pos:end="103:19">ret</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <operator pos:start="103:23" pos:end="103:23">-</operator><name pos:start="103:24" pos:end="103:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="105:17" pos:end="105:26">goto <name pos:start="105:22" pos:end="105:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:67"><expr pos:start="109:13" pos:end="109:66"><name pos:start="109:13" pos:end="109:55"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:31">metadata_entries</name><operator pos:start="109:32" pos:end="109:32">.</operator><name pos:start="109:33" pos:end="109:55">virtual_disk_size_entry</name></name> <operator pos:start="109:57" pos:end="109:57">=</operator> <name pos:start="109:59" pos:end="109:66">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:74"><expr pos:start="111:13" pos:end="111:73"><name pos:start="111:13" pos:end="111:39"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:31">metadata_entries</name><operator pos:start="111:32" pos:end="111:32">.</operator><name pos:start="111:33" pos:end="111:39">present</name></name> <operator pos:start="111:41" pos:end="111:42">|=</operator> <name pos:start="111:44" pos:end="111:73">META_VIRTUAL_DISK_SIZE_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="113:13" pos:end="113:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="119:9" pos:end="135:9"><if pos:start="119:9" pos:end="135:9">if <condition pos:start="119:12" pos:end="119:51">(<expr pos:start="119:13" pos:end="119:50"><call pos:start="119:13" pos:end="119:50"><name pos:start="119:13" pos:end="119:19">guid_eq</name><argument_list pos:start="119:20" pos:end="119:50">(<argument pos:start="119:21" pos:end="119:36"><expr pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:28">md_entry</name><operator pos:start="119:29" pos:end="119:29">.</operator><name pos:start="119:30" pos:end="119:36">item_id</name></name></expr></argument>, <argument pos:start="119:39" pos:end="119:49"><expr pos:start="119:39" pos:end="119:49"><name pos:start="119:39" pos:end="119:49">page83_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:53" pos:end="135:9">{<block_content pos:start="121:13" pos:end="133:21">

            <if_stmt pos:start="121:13" pos:end="127:13"><if pos:start="121:13" pos:end="127:13">if <condition pos:start="121:16" pos:end="121:67">(<expr pos:start="121:17" pos:end="121:66"><name pos:start="121:17" pos:end="121:43"><name pos:start="121:17" pos:end="121:17">s</name><operator pos:start="121:18" pos:end="121:19">-&gt;</operator><name pos:start="121:20" pos:end="121:35">metadata_entries</name><operator pos:start="121:36" pos:end="121:36">.</operator><name pos:start="121:37" pos:end="121:43">present</name></name> <operator pos:start="121:45" pos:end="121:45">&amp;</operator> <name pos:start="121:47" pos:end="121:66">META_PAGE_83_PRESENT</name></expr>)</condition> <block pos:start="121:69" pos:end="127:13">{<block_content pos:start="123:17" pos:end="125:26">

                <expr_stmt pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:21">=</operator> <operator pos:start="123:23" pos:end="123:23">-</operator><name pos:start="123:24" pos:end="123:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="125:17" pos:end="125:26">goto <name pos:start="125:22" pos:end="125:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:61"><expr pos:start="129:13" pos:end="129:60"><name pos:start="129:13" pos:end="129:49"><name pos:start="129:13" pos:end="129:13">s</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:31">metadata_entries</name><operator pos:start="129:32" pos:end="129:32">.</operator><name pos:start="129:33" pos:end="129:49">page83_data_entry</name></name> <operator pos:start="129:51" pos:end="129:51">=</operator> <name pos:start="129:53" pos:end="129:60">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:64"><expr pos:start="131:13" pos:end="131:63"><name pos:start="131:13" pos:end="131:39"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:31">metadata_entries</name><operator pos:start="131:32" pos:end="131:32">.</operator><name pos:start="131:33" pos:end="131:39">present</name></name> <operator pos:start="131:41" pos:end="131:42">|=</operator> <name pos:start="131:44" pos:end="131:63">META_PAGE_83_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="133:13" pos:end="133:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="139:9" pos:end="157:9"><if pos:start="139:9" pos:end="157:9">if <condition pos:start="139:12" pos:end="139:59">(<expr pos:start="139:13" pos:end="139:58"><call pos:start="139:13" pos:end="139:58"><name pos:start="139:13" pos:end="139:19">guid_eq</name><argument_list pos:start="139:20" pos:end="139:58">(<argument pos:start="139:21" pos:end="139:36"><expr pos:start="139:21" pos:end="139:36"><name pos:start="139:21" pos:end="139:36"><name pos:start="139:21" pos:end="139:28">md_entry</name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:36">item_id</name></name></expr></argument>, <argument pos:start="139:39" pos:end="139:57"><expr pos:start="139:39" pos:end="139:57"><name pos:start="139:39" pos:end="139:57">logical_sector_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:61" pos:end="157:9">{<block_content pos:start="141:13" pos:end="155:21">

            <if_stmt pos:start="141:13" pos:end="149:13"><if pos:start="141:13" pos:end="149:13">if <condition pos:start="141:16" pos:end="143:49">(<expr pos:start="141:17" pos:end="143:48"><name pos:start="141:17" pos:end="141:43"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:35">metadata_entries</name><operator pos:start="141:36" pos:end="141:36">.</operator><name pos:start="141:37" pos:end="141:43">present</name></name> <operator pos:start="141:45" pos:end="141:45">&amp;</operator>

                <name pos:start="143:17" pos:end="143:48">META_LOGICAL_SECTOR_SIZE_PRESENT</name></expr>)</condition> <block pos:start="143:51" pos:end="149:13">{<block_content pos:start="145:17" pos:end="147:26">

                <expr_stmt pos:start="145:17" pos:end="145:30"><expr pos:start="145:17" pos:end="145:29"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <operator pos:start="145:23" pos:end="145:23">-</operator><name pos:start="145:24" pos:end="145:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="147:17" pos:end="147:26">goto <name pos:start="147:22" pos:end="147:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:69"><expr pos:start="151:13" pos:end="151:68"><name pos:start="151:13" pos:end="151:57"><name pos:start="151:13" pos:end="151:13">s</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:31">metadata_entries</name><operator pos:start="151:32" pos:end="151:32">.</operator><name pos:start="151:33" pos:end="151:57">logical_sector_size_entry</name></name> <operator pos:start="151:59" pos:end="151:59">=</operator> <name pos:start="151:61" pos:end="151:68">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:76"><expr pos:start="153:13" pos:end="153:75"><name pos:start="153:13" pos:end="153:39"><name pos:start="153:13" pos:end="153:13">s</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:31">metadata_entries</name><operator pos:start="153:32" pos:end="153:32">.</operator><name pos:start="153:33" pos:end="153:39">present</name></name> <operator pos:start="153:41" pos:end="153:42">|=</operator> <name pos:start="153:44" pos:end="153:75">META_LOGICAL_SECTOR_SIZE_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="155:13" pos:end="155:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="161:9" pos:end="177:9"><if pos:start="161:9" pos:end="177:9">if <condition pos:start="161:12" pos:end="161:56">(<expr pos:start="161:13" pos:end="161:55"><call pos:start="161:13" pos:end="161:55"><name pos:start="161:13" pos:end="161:19">guid_eq</name><argument_list pos:start="161:20" pos:end="161:55">(<argument pos:start="161:21" pos:end="161:36"><expr pos:start="161:21" pos:end="161:36"><name pos:start="161:21" pos:end="161:36"><name pos:start="161:21" pos:end="161:28">md_entry</name><operator pos:start="161:29" pos:end="161:29">.</operator><name pos:start="161:30" pos:end="161:36">item_id</name></name></expr></argument>, <argument pos:start="161:39" pos:end="161:54"><expr pos:start="161:39" pos:end="161:54"><name pos:start="161:39" pos:end="161:54">phys_sector_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:58" pos:end="177:9">{<block_content pos:start="163:13" pos:end="175:21">

            <if_stmt pos:start="163:13" pos:end="169:13"><if pos:start="163:13" pos:end="169:13">if <condition pos:start="163:16" pos:end="163:76">(<expr pos:start="163:17" pos:end="163:75"><name pos:start="163:17" pos:end="163:43"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:35">metadata_entries</name><operator pos:start="163:36" pos:end="163:36">.</operator><name pos:start="163:37" pos:end="163:43">present</name></name> <operator pos:start="163:45" pos:end="163:45">&amp;</operator> <name pos:start="163:47" pos:end="163:75">META_PHYS_SECTOR_SIZE_PRESENT</name></expr>)</condition> <block pos:start="163:78" pos:end="169:13">{<block_content pos:start="165:17" pos:end="167:26">

                <expr_stmt pos:start="165:17" pos:end="165:30"><expr pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:19">ret</name> <operator pos:start="165:21" pos:end="165:21">=</operator> <operator pos:start="165:23" pos:end="165:23">-</operator><name pos:start="165:24" pos:end="165:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="167:17" pos:end="167:26">goto <name pos:start="167:22" pos:end="167:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:66"><expr pos:start="171:13" pos:end="171:65"><name pos:start="171:13" pos:end="171:54"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:31">metadata_entries</name><operator pos:start="171:32" pos:end="171:32">.</operator><name pos:start="171:33" pos:end="171:54">phys_sector_size_entry</name></name> <operator pos:start="171:56" pos:end="171:56">=</operator> <name pos:start="171:58" pos:end="171:65">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:73"><expr pos:start="173:13" pos:end="173:72"><name pos:start="173:13" pos:end="173:39"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:31">metadata_entries</name><operator pos:start="173:32" pos:end="173:32">.</operator><name pos:start="173:33" pos:end="173:39">present</name></name> <operator pos:start="173:41" pos:end="173:42">|=</operator> <name pos:start="173:44" pos:end="173:72">META_PHYS_SECTOR_SIZE_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="175:13" pos:end="175:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="181:9" pos:end="197:9"><if pos:start="181:9" pos:end="197:9">if <condition pos:start="181:12" pos:end="181:59">(<expr pos:start="181:13" pos:end="181:58"><call pos:start="181:13" pos:end="181:58"><name pos:start="181:13" pos:end="181:19">guid_eq</name><argument_list pos:start="181:20" pos:end="181:58">(<argument pos:start="181:21" pos:end="181:36"><expr pos:start="181:21" pos:end="181:36"><name pos:start="181:21" pos:end="181:36"><name pos:start="181:21" pos:end="181:28">md_entry</name><operator pos:start="181:29" pos:end="181:29">.</operator><name pos:start="181:30" pos:end="181:36">item_id</name></name></expr></argument>, <argument pos:start="181:39" pos:end="181:57"><expr pos:start="181:39" pos:end="181:57"><name pos:start="181:39" pos:end="181:57">parent_locator_guid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:61" pos:end="197:9">{<block_content pos:start="183:13" pos:end="195:21">

            <if_stmt pos:start="183:13" pos:end="189:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="183:74">(<expr pos:start="183:17" pos:end="183:73"><name pos:start="183:17" pos:end="183:43"><name pos:start="183:17" pos:end="183:17">s</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:35">metadata_entries</name><operator pos:start="183:36" pos:end="183:36">.</operator><name pos:start="183:37" pos:end="183:43">present</name></name> <operator pos:start="183:45" pos:end="183:45">&amp;</operator> <name pos:start="183:47" pos:end="183:73">META_PARENT_LOCATOR_PRESENT</name></expr>)</condition> <block pos:start="183:76" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:26">

                <expr_stmt pos:start="185:17" pos:end="185:30"><expr pos:start="185:17" pos:end="185:29"><name pos:start="185:17" pos:end="185:19">ret</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <operator pos:start="185:23" pos:end="185:23">-</operator><name pos:start="185:24" pos:end="185:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">exit</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:64"><expr pos:start="191:13" pos:end="191:63"><name pos:start="191:13" pos:end="191:52"><name pos:start="191:13" pos:end="191:13">s</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:31">metadata_entries</name><operator pos:start="191:32" pos:end="191:32">.</operator><name pos:start="191:33" pos:end="191:52">parent_locator_entry</name></name> <operator pos:start="191:54" pos:end="191:54">=</operator> <name pos:start="191:56" pos:end="191:63">md_entry</name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:71"><expr pos:start="193:13" pos:end="193:70"><name pos:start="193:13" pos:end="193:39"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:31">metadata_entries</name><operator pos:start="193:32" pos:end="193:32">.</operator><name pos:start="193:33" pos:end="193:39">present</name></name> <operator pos:start="193:41" pos:end="193:42">|=</operator> <name pos:start="193:44" pos:end="193:70">META_PARENT_LOCATOR_PRESENT</name></expr>;</expr_stmt>

            <continue pos:start="195:13" pos:end="195:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="201:9" pos:end="211:9"><if pos:start="201:9" pos:end="211:9">if <condition pos:start="201:12" pos:end="201:61">(<expr pos:start="201:13" pos:end="201:60"><name pos:start="201:13" pos:end="201:30"><name pos:start="201:13" pos:end="201:20">md_entry</name><operator pos:start="201:21" pos:end="201:21">.</operator><name pos:start="201:22" pos:end="201:30">data_bits</name></name> <operator pos:start="201:32" pos:end="201:32">&amp;</operator> <name pos:start="201:34" pos:end="201:60">VHDX_META_FLAGS_IS_REQUIRED</name></expr>)</condition> <block pos:start="201:63" pos:end="211:9">{<block_content pos:start="207:13" pos:end="209:22">

            <comment type="block" pos:start="203:13" pos:end="205:71">/* cannot read vhdx file - required region table entry that

             * we do not understand.  per spec, we must fail to open */</comment>

            <expr_stmt pos:start="207:13" pos:end="207:27"><expr pos:start="207:13" pos:end="207:26"><name pos:start="207:13" pos:end="207:15">ret</name> <operator pos:start="207:17" pos:end="207:17">=</operator> <operator pos:start="207:19" pos:end="207:19">-</operator><name pos:start="207:20" pos:end="207:26">ENOTSUP</name></expr>;</expr_stmt>

            <goto pos:start="209:13" pos:end="209:22">goto <name pos:start="209:18" pos:end="209:21">exit</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="217:5" pos:end="223:5"><if pos:start="217:5" pos:end="223:5">if <condition pos:start="217:8" pos:end="217:56">(<expr pos:start="217:9" pos:end="217:55"><name pos:start="217:9" pos:end="217:35"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:27">metadata_entries</name><operator pos:start="217:28" pos:end="217:28">.</operator><name pos:start="217:29" pos:end="217:35">present</name></name> <operator pos:start="217:37" pos:end="217:38">!=</operator> <name pos:start="217:40" pos:end="217:55">META_ALL_PRESENT</name></expr>)</condition> <block pos:start="217:58" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:18">

        <expr_stmt pos:start="219:9" pos:end="219:23"><expr pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:11">ret</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <operator pos:start="219:15" pos:end="219:15">-</operator><name pos:start="219:16" pos:end="219:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="221:9" pos:end="221:18">goto <name pos:start="221:14" pos:end="221:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="227:5" pos:end="235:40"><expr pos:start="227:5" pos:end="235:39"><name pos:start="227:5" pos:end="227:7">ret</name> <operator pos:start="227:9" pos:end="227:9">=</operator> <call pos:start="227:11" pos:end="235:39"><name pos:start="227:11" pos:end="227:20">bdrv_pread</name><argument_list pos:start="227:21" pos:end="235:39">(<argument pos:start="227:22" pos:end="227:29"><expr pos:start="227:22" pos:end="227:29"><name pos:start="227:22" pos:end="227:29"><name pos:start="227:22" pos:end="227:23">bs</name><operator pos:start="227:24" pos:end="227:25">-&gt;</operator><name pos:start="227:26" pos:end="227:29">file</name></name></expr></argument>,

                     <argument pos:start="229:22" pos:end="231:69"><expr pos:start="229:22" pos:end="231:69"><name pos:start="229:22" pos:end="229:69"><name pos:start="229:22" pos:end="229:22">s</name><operator pos:start="229:23" pos:end="229:24">-&gt;</operator><name pos:start="229:25" pos:end="229:40">metadata_entries</name><operator pos:start="229:41" pos:end="229:41">.</operator><name pos:start="229:42" pos:end="229:62">file_parameters_entry</name><operator pos:start="229:63" pos:end="229:63">.</operator><name pos:start="229:64" pos:end="229:69">offset</name></name>

                                         <operator pos:start="231:42" pos:end="231:42">+</operator> <name pos:start="231:44" pos:end="231:69"><name pos:start="231:44" pos:end="231:44">s</name><operator pos:start="231:45" pos:end="231:46">-&gt;</operator><name pos:start="231:47" pos:end="231:57">metadata_rt</name><operator pos:start="231:58" pos:end="231:58">.</operator><name pos:start="231:59" pos:end="231:69">file_offset</name></name></expr></argument>,

                     <argument pos:start="233:22" pos:end="233:31"><expr pos:start="233:22" pos:end="233:31"><operator pos:start="233:22" pos:end="233:22">&amp;</operator><name pos:start="233:23" pos:end="233:31"><name pos:start="233:23" pos:end="233:23">s</name><operator pos:start="233:24" pos:end="233:25">-&gt;</operator><name pos:start="233:26" pos:end="233:31">params</name></name></expr></argument>,

                     <argument pos:start="235:22" pos:end="235:38"><expr pos:start="235:22" pos:end="235:38"><sizeof pos:start="235:22" pos:end="235:38">sizeof<argument_list pos:start="235:28" pos:end="235:38">(<argument pos:start="235:29" pos:end="235:37"><expr pos:start="235:29" pos:end="235:37"><name pos:start="235:29" pos:end="235:37"><name pos:start="235:29" pos:end="235:29">s</name><operator pos:start="235:30" pos:end="235:31">-&gt;</operator><name pos:start="235:32" pos:end="235:37">params</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="239:5" pos:end="243:5"><if pos:start="239:5" pos:end="243:5">if <condition pos:start="239:8" pos:end="239:16">(<expr pos:start="239:9" pos:end="239:15"><name pos:start="239:9" pos:end="239:11">ret</name> <operator pos:start="239:13" pos:end="239:13">&lt;</operator> <literal type="number" pos:start="239:15" pos:end="239:15">0</literal></expr>)</condition> <block pos:start="239:18" pos:end="243:5">{<block_content pos:start="241:9" pos:end="241:18">

        <goto pos:start="241:9" pos:end="241:18">goto <name pos:start="241:14" pos:end="241:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="247:5" pos:end="247:40"><expr pos:start="247:5" pos:end="247:39"><call pos:start="247:5" pos:end="247:39"><name pos:start="247:5" pos:end="247:16">le32_to_cpus</name><argument_list pos:start="247:17" pos:end="247:39">(<argument pos:start="247:18" pos:end="247:38"><expr pos:start="247:18" pos:end="247:38"><operator pos:start="247:18" pos:end="247:18">&amp;</operator><name pos:start="247:19" pos:end="247:38"><name pos:start="247:19" pos:end="247:19">s</name><operator pos:start="247:20" pos:end="247:21">-&gt;</operator><name pos:start="247:22" pos:end="247:27">params</name><operator pos:start="247:28" pos:end="247:28">.</operator><name pos:start="247:29" pos:end="247:38">block_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:39"><expr pos:start="249:5" pos:end="249:38"><call pos:start="249:5" pos:end="249:38"><name pos:start="249:5" pos:end="249:16">le32_to_cpus</name><argument_list pos:start="249:17" pos:end="249:38">(<argument pos:start="249:18" pos:end="249:37"><expr pos:start="249:18" pos:end="249:37"><operator pos:start="249:18" pos:end="249:18">&amp;</operator><name pos:start="249:19" pos:end="249:37"><name pos:start="249:19" pos:end="249:19">s</name><operator pos:start="249:20" pos:end="249:21">-&gt;</operator><name pos:start="249:22" pos:end="249:27">params</name><operator pos:start="249:28" pos:end="249:28">.</operator><name pos:start="249:29" pos:end="249:37">data_bits</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <comment type="block" pos:start="255:5" pos:end="259:60">/* We now have the file parameters, so we can tell if this is a

     * differencing file (i.e.. has_parent), is dynamic or fixed

     * sized (leave_blocks_allocated), and the block size */</comment>



    <comment type="block" pos:start="263:5" pos:end="263:76">/* The parent locator required iff the file parameters has_parent set */</comment>

    <if_stmt pos:start="265:5" pos:end="287:5"><if pos:start="265:5" pos:end="287:5">if <condition pos:start="265:8" pos:end="265:53">(<expr pos:start="265:9" pos:end="265:52"><name pos:start="265:9" pos:end="265:27"><name pos:start="265:9" pos:end="265:9">s</name><operator pos:start="265:10" pos:end="265:11">-&gt;</operator><name pos:start="265:12" pos:end="265:17">params</name><operator pos:start="265:18" pos:end="265:18">.</operator><name pos:start="265:19" pos:end="265:27">data_bits</name></name> <operator pos:start="265:29" pos:end="265:29">&amp;</operator> <name pos:start="265:31" pos:end="265:52">VHDX_PARAMS_HAS_PARENT</name></expr>)</condition> <block pos:start="265:55" pos:end="287:5">{<block_content pos:start="267:9" pos:end="285:9">

        <if_stmt pos:start="267:9" pos:end="285:9"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:70">(<expr pos:start="267:13" pos:end="267:69"><name pos:start="267:13" pos:end="267:39"><name pos:start="267:13" pos:end="267:13">s</name><operator pos:start="267:14" pos:end="267:15">-&gt;</operator><name pos:start="267:16" pos:end="267:31">metadata_entries</name><operator pos:start="267:32" pos:end="267:32">.</operator><name pos:start="267:33" pos:end="267:39">present</name></name> <operator pos:start="267:41" pos:end="267:41">&amp;</operator> <name pos:start="267:43" pos:end="267:69">META_PARENT_LOCATOR_PRESENT</name></expr>)</condition> <block pos:start="267:72" pos:end="275:9">{<block_content pos:start="271:13" pos:end="273:22">

            <comment type="block" pos:start="269:13" pos:end="269:52">/* TODO: parse  parent locator fields */</comment>

            <expr_stmt pos:start="271:13" pos:end="271:27"><expr pos:start="271:13" pos:end="271:26"><name pos:start="271:13" pos:end="271:15">ret</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <operator pos:start="271:19" pos:end="271:19">-</operator><name pos:start="271:20" pos:end="271:26">ENOTSUP</name></expr>;</expr_stmt> <comment type="block" pos:start="271:29" pos:end="271:78">/* temp, until differencing files are supported */</comment>

            <goto pos:start="273:13" pos:end="273:22">goto <name pos:start="273:18" pos:end="273:21">exit</name>;</goto>

        </block_content>}</block></if> <else pos:start="275:11" pos:end="285:9">else <block pos:start="275:16" pos:end="285:9">{<block_content pos:start="281:13" pos:end="283:22">

            <comment type="block" pos:start="277:13" pos:end="279:53">/* if has_parent is set, but there is not parent locator present,

             * then that is an invalid combination */</comment>

            <expr_stmt pos:start="281:13" pos:end="281:26"><expr pos:start="281:13" pos:end="281:25"><name pos:start="281:13" pos:end="281:15">ret</name> <operator pos:start="281:17" pos:end="281:17">=</operator> <operator pos:start="281:19" pos:end="281:19">-</operator><name pos:start="281:20" pos:end="281:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="283:13" pos:end="283:22">goto <name pos:start="283:18" pos:end="283:21">exit</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="291:5" pos:end="293:30">/* determine virtual disk size, logical sector size,

     * and phys sector size */</comment>



    <expr_stmt pos:start="297:5" pos:end="305:39"><expr pos:start="297:5" pos:end="305:38"><name pos:start="297:5" pos:end="297:7">ret</name> <operator pos:start="297:9" pos:end="297:9">=</operator> <call pos:start="297:11" pos:end="305:38"><name pos:start="297:11" pos:end="297:20">bdrv_pread</name><argument_list pos:start="297:21" pos:end="305:38">(<argument pos:start="297:22" pos:end="297:29"><expr pos:start="297:22" pos:end="297:29"><name pos:start="297:22" pos:end="297:29"><name pos:start="297:22" pos:end="297:23">bs</name><operator pos:start="297:24" pos:end="297:25">-&gt;</operator><name pos:start="297:26" pos:end="297:29">file</name></name></expr></argument>,

                     <argument pos:start="299:22" pos:end="301:71"><expr pos:start="299:22" pos:end="301:71"><name pos:start="299:22" pos:end="299:71"><name pos:start="299:22" pos:end="299:22">s</name><operator pos:start="299:23" pos:end="299:24">-&gt;</operator><name pos:start="299:25" pos:end="299:40">metadata_entries</name><operator pos:start="299:41" pos:end="299:41">.</operator><name pos:start="299:42" pos:end="299:64">virtual_disk_size_entry</name><operator pos:start="299:65" pos:end="299:65">.</operator><name pos:start="299:66" pos:end="299:71">offset</name></name>

                                           <operator pos:start="301:44" pos:end="301:44">+</operator> <name pos:start="301:46" pos:end="301:71"><name pos:start="301:46" pos:end="301:46">s</name><operator pos:start="301:47" pos:end="301:48">-&gt;</operator><name pos:start="301:49" pos:end="301:59">metadata_rt</name><operator pos:start="301:60" pos:end="301:60">.</operator><name pos:start="301:61" pos:end="301:71">file_offset</name></name></expr></argument>,

                     <argument pos:start="303:22" pos:end="303:42"><expr pos:start="303:22" pos:end="303:42"><operator pos:start="303:22" pos:end="303:22">&amp;</operator><name pos:start="303:23" pos:end="303:42"><name pos:start="303:23" pos:end="303:23">s</name><operator pos:start="303:24" pos:end="303:25">-&gt;</operator><name pos:start="303:26" pos:end="303:42">virtual_disk_size</name></name></expr></argument>,

                     <argument pos:start="305:22" pos:end="305:37"><expr pos:start="305:22" pos:end="305:37"><sizeof pos:start="305:22" pos:end="305:37">sizeof<argument_list pos:start="305:28" pos:end="305:37">(<argument pos:start="305:29" pos:end="305:36"><expr pos:start="305:29" pos:end="305:36"><name pos:start="305:29" pos:end="305:36">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="307:5" pos:end="311:5"><if pos:start="307:5" pos:end="311:5">if <condition pos:start="307:8" pos:end="307:16">(<expr pos:start="307:9" pos:end="307:15"><name pos:start="307:9" pos:end="307:11">ret</name> <operator pos:start="307:13" pos:end="307:13">&lt;</operator> <literal type="number" pos:start="307:15" pos:end="307:15">0</literal></expr>)</condition> <block pos:start="307:18" pos:end="311:5">{<block_content pos:start="309:9" pos:end="309:18">

        <goto pos:start="309:9" pos:end="309:18">goto <name pos:start="309:14" pos:end="309:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="313:5" pos:end="321:39"><expr pos:start="313:5" pos:end="321:38"><name pos:start="313:5" pos:end="313:7">ret</name> <operator pos:start="313:9" pos:end="313:9">=</operator> <call pos:start="313:11" pos:end="321:38"><name pos:start="313:11" pos:end="313:20">bdrv_pread</name><argument_list pos:start="313:21" pos:end="321:38">(<argument pos:start="313:22" pos:end="313:29"><expr pos:start="313:22" pos:end="313:29"><name pos:start="313:22" pos:end="313:29"><name pos:start="313:22" pos:end="313:23">bs</name><operator pos:start="313:24" pos:end="313:25">-&gt;</operator><name pos:start="313:26" pos:end="313:29">file</name></name></expr></argument>,

                     <argument pos:start="315:22" pos:end="317:73"><expr pos:start="315:22" pos:end="317:73"><name pos:start="315:22" pos:end="315:73"><name pos:start="315:22" pos:end="315:22">s</name><operator pos:start="315:23" pos:end="315:24">-&gt;</operator><name pos:start="315:25" pos:end="315:40">metadata_entries</name><operator pos:start="315:41" pos:end="315:41">.</operator><name pos:start="315:42" pos:end="315:66">logical_sector_size_entry</name><operator pos:start="315:67" pos:end="315:67">.</operator><name pos:start="315:68" pos:end="315:73">offset</name></name>

                                             <operator pos:start="317:46" pos:end="317:46">+</operator> <name pos:start="317:48" pos:end="317:73"><name pos:start="317:48" pos:end="317:48">s</name><operator pos:start="317:49" pos:end="317:50">-&gt;</operator><name pos:start="317:51" pos:end="317:61">metadata_rt</name><operator pos:start="317:62" pos:end="317:62">.</operator><name pos:start="317:63" pos:end="317:73">file_offset</name></name></expr></argument>,

                     <argument pos:start="319:22" pos:end="319:44"><expr pos:start="319:22" pos:end="319:44"><operator pos:start="319:22" pos:end="319:22">&amp;</operator><name pos:start="319:23" pos:end="319:44"><name pos:start="319:23" pos:end="319:23">s</name><operator pos:start="319:24" pos:end="319:25">-&gt;</operator><name pos:start="319:26" pos:end="319:44">logical_sector_size</name></name></expr></argument>,

                     <argument pos:start="321:22" pos:end="321:37"><expr pos:start="321:22" pos:end="321:37"><sizeof pos:start="321:22" pos:end="321:37">sizeof<argument_list pos:start="321:28" pos:end="321:37">(<argument pos:start="321:29" pos:end="321:36"><expr pos:start="321:29" pos:end="321:36"><name pos:start="321:29" pos:end="321:36">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="323:5" pos:end="327:5"><if pos:start="323:5" pos:end="327:5">if <condition pos:start="323:8" pos:end="323:16">(<expr pos:start="323:9" pos:end="323:15"><name pos:start="323:9" pos:end="323:11">ret</name> <operator pos:start="323:13" pos:end="323:13">&lt;</operator> <literal type="number" pos:start="323:15" pos:end="323:15">0</literal></expr>)</condition> <block pos:start="323:18" pos:end="327:5">{<block_content pos:start="325:9" pos:end="325:18">

        <goto pos:start="325:9" pos:end="325:18">goto <name pos:start="325:14" pos:end="325:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="329:5" pos:end="337:39"><expr pos:start="329:5" pos:end="337:38"><name pos:start="329:5" pos:end="329:7">ret</name> <operator pos:start="329:9" pos:end="329:9">=</operator> <call pos:start="329:11" pos:end="337:38"><name pos:start="329:11" pos:end="329:20">bdrv_pread</name><argument_list pos:start="329:21" pos:end="337:38">(<argument pos:start="329:22" pos:end="329:29"><expr pos:start="329:22" pos:end="329:29"><name pos:start="329:22" pos:end="329:29"><name pos:start="329:22" pos:end="329:23">bs</name><operator pos:start="329:24" pos:end="329:25">-&gt;</operator><name pos:start="329:26" pos:end="329:29">file</name></name></expr></argument>,

                     <argument pos:start="331:22" pos:end="333:70"><expr pos:start="331:22" pos:end="333:70"><name pos:start="331:22" pos:end="331:70"><name pos:start="331:22" pos:end="331:22">s</name><operator pos:start="331:23" pos:end="331:24">-&gt;</operator><name pos:start="331:25" pos:end="331:40">metadata_entries</name><operator pos:start="331:41" pos:end="331:41">.</operator><name pos:start="331:42" pos:end="331:63">phys_sector_size_entry</name><operator pos:start="331:64" pos:end="331:64">.</operator><name pos:start="331:65" pos:end="331:70">offset</name></name>

                                          <operator pos:start="333:43" pos:end="333:43">+</operator> <name pos:start="333:45" pos:end="333:70"><name pos:start="333:45" pos:end="333:45">s</name><operator pos:start="333:46" pos:end="333:47">-&gt;</operator><name pos:start="333:48" pos:end="333:58">metadata_rt</name><operator pos:start="333:59" pos:end="333:59">.</operator><name pos:start="333:60" pos:end="333:70">file_offset</name></name></expr></argument>,

                     <argument pos:start="335:22" pos:end="335:45"><expr pos:start="335:22" pos:end="335:45"><operator pos:start="335:22" pos:end="335:22">&amp;</operator><name pos:start="335:23" pos:end="335:45"><name pos:start="335:23" pos:end="335:23">s</name><operator pos:start="335:24" pos:end="335:25">-&gt;</operator><name pos:start="335:26" pos:end="335:45">physical_sector_size</name></name></expr></argument>,

                     <argument pos:start="337:22" pos:end="337:37"><expr pos:start="337:22" pos:end="337:37"><sizeof pos:start="337:22" pos:end="337:37">sizeof<argument_list pos:start="337:28" pos:end="337:37">(<argument pos:start="337:29" pos:end="337:36"><expr pos:start="337:29" pos:end="337:36"><name pos:start="337:29" pos:end="337:36">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="339:5" pos:end="343:5"><if pos:start="339:5" pos:end="343:5">if <condition pos:start="339:8" pos:end="339:16">(<expr pos:start="339:9" pos:end="339:15"><name pos:start="339:9" pos:end="339:11">ret</name> <operator pos:start="339:13" pos:end="339:13">&lt;</operator> <literal type="number" pos:start="339:15" pos:end="339:15">0</literal></expr>)</condition> <block pos:start="339:18" pos:end="343:5">{<block_content pos:start="341:9" pos:end="341:18">

        <goto pos:start="341:9" pos:end="341:18">goto <name pos:start="341:14" pos:end="341:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="347:5" pos:end="347:40"><expr pos:start="347:5" pos:end="347:39"><call pos:start="347:5" pos:end="347:39"><name pos:start="347:5" pos:end="347:16">le64_to_cpus</name><argument_list pos:start="347:17" pos:end="347:39">(<argument pos:start="347:18" pos:end="347:38"><expr pos:start="347:18" pos:end="347:38"><operator pos:start="347:18" pos:end="347:18">&amp;</operator><name pos:start="347:19" pos:end="347:38"><name pos:start="347:19" pos:end="347:19">s</name><operator pos:start="347:20" pos:end="347:21">-&gt;</operator><name pos:start="347:22" pos:end="347:38">virtual_disk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="349:5" pos:end="349:42"><expr pos:start="349:5" pos:end="349:41"><call pos:start="349:5" pos:end="349:41"><name pos:start="349:5" pos:end="349:16">le32_to_cpus</name><argument_list pos:start="349:17" pos:end="349:41">(<argument pos:start="349:18" pos:end="349:40"><expr pos:start="349:18" pos:end="349:40"><operator pos:start="349:18" pos:end="349:18">&amp;</operator><name pos:start="349:19" pos:end="349:40"><name pos:start="349:19" pos:end="349:19">s</name><operator pos:start="349:20" pos:end="349:21">-&gt;</operator><name pos:start="349:22" pos:end="349:40">logical_sector_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="351:5" pos:end="351:43"><expr pos:start="351:5" pos:end="351:42"><call pos:start="351:5" pos:end="351:42"><name pos:start="351:5" pos:end="351:16">le32_to_cpus</name><argument_list pos:start="351:17" pos:end="351:42">(<argument pos:start="351:18" pos:end="351:41"><expr pos:start="351:18" pos:end="351:41"><operator pos:start="351:18" pos:end="351:18">&amp;</operator><name pos:start="351:19" pos:end="351:41"><name pos:start="351:19" pos:end="351:19">s</name><operator pos:start="351:20" pos:end="351:21">-&gt;</operator><name pos:start="351:22" pos:end="351:41">physical_sector_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="355:5" pos:end="361:5"><if pos:start="355:5" pos:end="361:5">if <condition pos:start="355:8" pos:end="355:65">(<expr pos:start="355:9" pos:end="355:64"><name pos:start="355:9" pos:end="355:30"><name pos:start="355:9" pos:end="355:9">s</name><operator pos:start="355:10" pos:end="355:11">-&gt;</operator><name pos:start="355:12" pos:end="355:30">logical_sector_size</name></name> <operator pos:start="355:32" pos:end="355:33">==</operator> <literal type="number" pos:start="355:35" pos:end="355:35">0</literal> <operator pos:start="355:37" pos:end="355:38">||</operator> <name pos:start="355:40" pos:end="355:59"><name pos:start="355:40" pos:end="355:40">s</name><operator pos:start="355:41" pos:end="355:42">-&gt;</operator><name pos:start="355:43" pos:end="355:48">params</name><operator pos:start="355:49" pos:end="355:49">.</operator><name pos:start="355:50" pos:end="355:59">block_size</name></name> <operator pos:start="355:61" pos:end="355:62">==</operator> <literal type="number" pos:start="355:64" pos:end="355:64">0</literal></expr>)</condition> <block pos:start="355:67" pos:end="361:5">{<block_content pos:start="357:9" pos:end="359:18">

        <expr_stmt pos:start="357:9" pos:end="357:22"><expr pos:start="357:9" pos:end="357:21"><name pos:start="357:9" pos:end="357:11">ret</name> <operator pos:start="357:13" pos:end="357:13">=</operator> <operator pos:start="357:15" pos:end="357:15">-</operator><name pos:start="357:16" pos:end="357:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="359:9" pos:end="359:18">goto <name pos:start="359:14" pos:end="359:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="365:5" pos:end="365:68">/* both block_size and sector_size are guaranteed powers of 2 */</comment>

    <expr_stmt pos:start="367:5" pos:end="367:73"><expr pos:start="367:5" pos:end="367:72"><name pos:start="367:5" pos:end="367:24"><name pos:start="367:5" pos:end="367:5">s</name><operator pos:start="367:6" pos:end="367:7">-&gt;</operator><name pos:start="367:8" pos:end="367:24">sectors_per_block</name></name> <operator pos:start="367:26" pos:end="367:26">=</operator> <name pos:start="367:28" pos:end="367:47"><name pos:start="367:28" pos:end="367:28">s</name><operator pos:start="367:29" pos:end="367:30">-&gt;</operator><name pos:start="367:31" pos:end="367:36">params</name><operator pos:start="367:37" pos:end="367:37">.</operator><name pos:start="367:38" pos:end="367:47">block_size</name></name> <operator pos:start="367:49" pos:end="367:49">/</operator> <name pos:start="367:51" pos:end="367:72"><name pos:start="367:51" pos:end="367:51">s</name><operator pos:start="367:52" pos:end="367:53">-&gt;</operator><name pos:start="367:54" pos:end="367:72">logical_sector_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="369:5" pos:end="373:52"><expr pos:start="369:5" pos:end="373:51"><name pos:start="369:5" pos:end="369:18"><name pos:start="369:5" pos:end="369:5">s</name><operator pos:start="369:6" pos:end="369:7">-&gt;</operator><name pos:start="369:8" pos:end="369:18">chunk_ratio</name></name> <operator pos:start="369:20" pos:end="369:20">=</operator> <operator pos:start="369:22" pos:end="369:22">(</operator><name pos:start="369:23" pos:end="369:48">VHDX_MAX_SECTORS_PER_BLOCK</name><operator pos:start="369:49" pos:end="369:49">)</operator> <operator pos:start="369:51" pos:end="369:51">*</operator>

                     <operator pos:start="371:22" pos:end="371:22">(</operator><name pos:start="371:23" pos:end="371:30">uint64_t</name><operator pos:start="371:31" pos:end="371:31">)</operator><name pos:start="371:32" pos:end="371:53"><name pos:start="371:32" pos:end="371:32">s</name><operator pos:start="371:33" pos:end="371:34">-&gt;</operator><name pos:start="371:35" pos:end="371:53">logical_sector_size</name></name> <operator pos:start="371:55" pos:end="371:55">/</operator>

                     <operator pos:start="373:22" pos:end="373:22">(</operator><name pos:start="373:23" pos:end="373:30">uint64_t</name><operator pos:start="373:31" pos:end="373:31">)</operator><name pos:start="373:32" pos:end="373:51"><name pos:start="373:32" pos:end="373:32">s</name><operator pos:start="373:33" pos:end="373:34">-&gt;</operator><name pos:start="373:35" pos:end="373:40">params</name><operator pos:start="373:41" pos:end="373:41">.</operator><name pos:start="373:42" pos:end="373:51">block_size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="377:5" pos:end="383:22">/* These values are ones we will want to use for division / multiplication

     * later on, and they are all guaranteed (per the spec) to be powers of 2,

     * so we can take advantage of that for shift operations during

     * reads/writes */</comment>

    <if_stmt pos:start="385:5" pos:end="391:5"><if pos:start="385:5" pos:end="391:5">if <condition pos:start="385:8" pos:end="385:62">(<expr pos:start="385:9" pos:end="385:61"><name pos:start="385:9" pos:end="385:30"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:30">logical_sector_size</name></name> <operator pos:start="385:32" pos:end="385:32">&amp;</operator> <operator pos:start="385:34" pos:end="385:34">(</operator><name pos:start="385:35" pos:end="385:56"><name pos:start="385:35" pos:end="385:35">s</name><operator pos:start="385:36" pos:end="385:37">-&gt;</operator><name pos:start="385:38" pos:end="385:56">logical_sector_size</name></name> <operator pos:start="385:58" pos:end="385:58">-</operator> <literal type="number" pos:start="385:60" pos:end="385:60">1</literal><operator pos:start="385:61" pos:end="385:61">)</operator></expr>)</condition> <block pos:start="385:64" pos:end="391:5">{<block_content pos:start="387:9" pos:end="389:18">

        <expr_stmt pos:start="387:9" pos:end="387:22"><expr pos:start="387:9" pos:end="387:21"><name pos:start="387:9" pos:end="387:11">ret</name> <operator pos:start="387:13" pos:end="387:13">=</operator> <operator pos:start="387:15" pos:end="387:15">-</operator><name pos:start="387:16" pos:end="387:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="389:9" pos:end="389:18">goto <name pos:start="389:14" pos:end="389:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="393:5" pos:end="399:5"><if pos:start="393:5" pos:end="399:5">if <condition pos:start="393:8" pos:end="393:58">(<expr pos:start="393:9" pos:end="393:57"><name pos:start="393:9" pos:end="393:28"><name pos:start="393:9" pos:end="393:9">s</name><operator pos:start="393:10" pos:end="393:11">-&gt;</operator><name pos:start="393:12" pos:end="393:28">sectors_per_block</name></name> <operator pos:start="393:30" pos:end="393:30">&amp;</operator> <operator pos:start="393:32" pos:end="393:32">(</operator><name pos:start="393:33" pos:end="393:52"><name pos:start="393:33" pos:end="393:33">s</name><operator pos:start="393:34" pos:end="393:35">-&gt;</operator><name pos:start="393:36" pos:end="393:52">sectors_per_block</name></name> <operator pos:start="393:54" pos:end="393:54">-</operator> <literal type="number" pos:start="393:56" pos:end="393:56">1</literal><operator pos:start="393:57" pos:end="393:57">)</operator></expr>)</condition> <block pos:start="393:60" pos:end="399:5">{<block_content pos:start="395:9" pos:end="397:18">

        <expr_stmt pos:start="395:9" pos:end="395:22"><expr pos:start="395:9" pos:end="395:21"><name pos:start="395:9" pos:end="395:11">ret</name> <operator pos:start="395:13" pos:end="395:13">=</operator> <operator pos:start="395:15" pos:end="395:15">-</operator><name pos:start="395:16" pos:end="395:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="397:9" pos:end="397:18">goto <name pos:start="397:14" pos:end="397:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="401:5" pos:end="407:5"><if pos:start="401:5" pos:end="407:5">if <condition pos:start="401:8" pos:end="401:46">(<expr pos:start="401:9" pos:end="401:45"><name pos:start="401:9" pos:end="401:22"><name pos:start="401:9" pos:end="401:9">s</name><operator pos:start="401:10" pos:end="401:11">-&gt;</operator><name pos:start="401:12" pos:end="401:22">chunk_ratio</name></name> <operator pos:start="401:24" pos:end="401:24">&amp;</operator> <operator pos:start="401:26" pos:end="401:26">(</operator><name pos:start="401:27" pos:end="401:40"><name pos:start="401:27" pos:end="401:27">s</name><operator pos:start="401:28" pos:end="401:29">-&gt;</operator><name pos:start="401:30" pos:end="401:40">chunk_ratio</name></name> <operator pos:start="401:42" pos:end="401:42">-</operator> <literal type="number" pos:start="401:44" pos:end="401:44">1</literal><operator pos:start="401:45" pos:end="401:45">)</operator></expr>)</condition> <block pos:start="401:48" pos:end="407:5">{<block_content pos:start="403:9" pos:end="405:18">

        <expr_stmt pos:start="403:9" pos:end="403:22"><expr pos:start="403:9" pos:end="403:21"><name pos:start="403:9" pos:end="403:11">ret</name> <operator pos:start="403:13" pos:end="403:13">=</operator> <operator pos:start="403:15" pos:end="403:15">-</operator><name pos:start="403:16" pos:end="403:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="405:9" pos:end="405:18">goto <name pos:start="405:14" pos:end="405:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="409:5" pos:end="409:41"><expr pos:start="409:5" pos:end="409:40"><name pos:start="409:5" pos:end="409:17"><name pos:start="409:5" pos:end="409:5">s</name><operator pos:start="409:6" pos:end="409:7">-&gt;</operator><name pos:start="409:8" pos:end="409:17">block_size</name></name> <operator pos:start="409:19" pos:end="409:19">=</operator> <name pos:start="409:21" pos:end="409:40"><name pos:start="409:21" pos:end="409:21">s</name><operator pos:start="409:22" pos:end="409:23">-&gt;</operator><name pos:start="409:24" pos:end="409:29">params</name><operator pos:start="409:30" pos:end="409:30">.</operator><name pos:start="409:31" pos:end="409:40">block_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="411:5" pos:end="417:5"><if pos:start="411:5" pos:end="417:5">if <condition pos:start="411:8" pos:end="411:44">(<expr pos:start="411:9" pos:end="411:43"><name pos:start="411:9" pos:end="411:21"><name pos:start="411:9" pos:end="411:9">s</name><operator pos:start="411:10" pos:end="411:11">-&gt;</operator><name pos:start="411:12" pos:end="411:21">block_size</name></name> <operator pos:start="411:23" pos:end="411:23">&amp;</operator> <operator pos:start="411:25" pos:end="411:25">(</operator><name pos:start="411:26" pos:end="411:38"><name pos:start="411:26" pos:end="411:26">s</name><operator pos:start="411:27" pos:end="411:28">-&gt;</operator><name pos:start="411:29" pos:end="411:38">block_size</name></name> <operator pos:start="411:40" pos:end="411:40">-</operator> <literal type="number" pos:start="411:42" pos:end="411:42">1</literal><operator pos:start="411:43" pos:end="411:43">)</operator></expr>)</condition> <block pos:start="411:46" pos:end="417:5">{<block_content pos:start="413:9" pos:end="415:18">

        <expr_stmt pos:start="413:9" pos:end="413:22"><expr pos:start="413:9" pos:end="413:21"><name pos:start="413:9" pos:end="413:11">ret</name> <operator pos:start="413:13" pos:end="413:13">=</operator> <operator pos:start="413:15" pos:end="413:15">-</operator><name pos:start="413:16" pos:end="413:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="415:9" pos:end="415:18">goto <name pos:start="415:14" pos:end="415:17">exit</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="421:5" pos:end="421:27"><expr pos:start="421:5" pos:end="421:26"><call pos:start="421:5" pos:end="421:26"><name pos:start="421:5" pos:end="421:23">vhdx_set_shift_bits</name><argument_list pos:start="421:24" pos:end="421:26">(<argument pos:start="421:25" pos:end="421:25"><expr pos:start="421:25" pos:end="421:25"><name pos:start="421:25" pos:end="421:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="425:5" pos:end="425:12"><expr pos:start="425:5" pos:end="425:11"><name pos:start="425:5" pos:end="425:7">ret</name> <operator pos:start="425:9" pos:end="425:9">=</operator> <literal type="number" pos:start="425:11" pos:end="425:11">0</literal></expr>;</expr_stmt>



<label pos:start="429:1" pos:end="429:5"><name pos:start="429:1" pos:end="429:4">exit</name>:</label>

    <expr_stmt pos:start="431:5" pos:end="431:23"><expr pos:start="431:5" pos:end="431:22"><call pos:start="431:5" pos:end="431:22"><name pos:start="431:5" pos:end="431:14">qemu_vfree</name><argument_list pos:start="431:15" pos:end="431:22">(<argument pos:start="431:16" pos:end="431:21"><expr pos:start="431:16" pos:end="431:21"><name pos:start="431:16" pos:end="431:21">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="433:5" pos:end="433:15">return <expr pos:start="433:12" pos:end="433:14"><name pos:start="433:12" pos:end="433:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
