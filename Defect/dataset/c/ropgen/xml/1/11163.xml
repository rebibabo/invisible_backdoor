<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11163.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">vmxnet3_fill_stats</name><parameter_list pos:start="1:31" pos:end="1:47">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">VMXNET3State</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:25"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:25">device_active</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>



    <for pos:start="15:5" pos:end="25:5">for <control pos:start="15:9" pos:end="15:36">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:31"><expr pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:30">txq_num</name></name></expr>;</condition> <incr pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:33">i</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></incr>)</control> <block pos:start="15:38" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:57">

        <expr_stmt pos:start="17:9" pos:end="23:57"><expr pos:start="17:9" pos:end="23:56"><call pos:start="17:9" pos:end="23:56"><name pos:start="17:9" pos:end="17:21">pci_dma_write</name><argument_list pos:start="17:22" pos:end="23:56">(<argument pos:start="17:23" pos:end="17:35"><expr pos:start="17:23" pos:end="17:35"><call pos:start="17:23" pos:end="17:35"><name pos:start="17:23" pos:end="17:32">PCI_DEVICE</name><argument_list pos:start="17:33" pos:end="17:35">(<argument pos:start="17:34" pos:end="17:34"><expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">s</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="19:23" pos:end="19:49"><expr pos:start="19:23" pos:end="19:49"><name pos:start="19:23" pos:end="19:37"><name pos:start="19:23" pos:end="19:23">s</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">txq_descr</name><index pos:start="19:35" pos:end="19:37">[<expr pos:start="19:36" pos:end="19:36"><name pos:start="19:36" pos:end="19:36">i</name></expr>]</index></name><operator pos:start="19:38" pos:end="19:38">.</operator><name pos:start="19:39" pos:end="19:49">tx_stats_pa</name></expr></argument>,

                      <argument pos:start="21:23" pos:end="21:48"><expr pos:start="21:23" pos:end="21:48"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:38"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:35">txq_descr</name><index pos:start="21:36" pos:end="21:38">[<expr pos:start="21:37" pos:end="21:37"><name pos:start="21:37" pos:end="21:37">i</name></expr>]</index></name><operator pos:start="21:39" pos:end="21:39">.</operator><name pos:start="21:40" pos:end="21:48">txq_stats</name></expr></argument>,

                      <argument pos:start="23:23" pos:end="23:55"><expr pos:start="23:23" pos:end="23:55"><sizeof pos:start="23:23" pos:end="23:55">sizeof<argument_list pos:start="23:29" pos:end="23:55">(<argument pos:start="23:30" pos:end="23:54"><expr pos:start="23:30" pos:end="23:54"><name pos:start="23:30" pos:end="23:44"><name pos:start="23:30" pos:end="23:30">s</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:41">txq_descr</name><index pos:start="23:42" pos:end="23:44">[<expr pos:start="23:43" pos:end="23:43"><name pos:start="23:43" pos:end="23:43">i</name></expr>]</index></name><operator pos:start="23:45" pos:end="23:45">.</operator><name pos:start="23:46" pos:end="23:54">txq_stats</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="29:5" pos:end="39:5">for <control pos:start="29:9" pos:end="29:36">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:31"><expr pos:start="29:17" pos:end="29:30"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:30"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:30">rxq_num</name></name></expr>;</condition> <incr pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:33">i</name><operator pos:start="29:34" pos:end="29:35">++</operator></expr></incr>)</control> <block pos:start="29:38" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:57">

        <expr_stmt pos:start="31:9" pos:end="37:57"><expr pos:start="31:9" pos:end="37:56"><call pos:start="31:9" pos:end="37:56"><name pos:start="31:9" pos:end="31:21">pci_dma_write</name><argument_list pos:start="31:22" pos:end="37:56">(<argument pos:start="31:23" pos:end="31:35"><expr pos:start="31:23" pos:end="31:35"><call pos:start="31:23" pos:end="31:35"><name pos:start="31:23" pos:end="31:32">PCI_DEVICE</name><argument_list pos:start="31:33" pos:end="31:35">(<argument pos:start="31:34" pos:end="31:34"><expr pos:start="31:34" pos:end="31:34"><name pos:start="31:34" pos:end="31:34">s</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:49"><expr pos:start="33:23" pos:end="33:49"><name pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:23">s</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:34">rxq_descr</name><index pos:start="33:35" pos:end="33:37">[<expr pos:start="33:36" pos:end="33:36"><name pos:start="33:36" pos:end="33:36">i</name></expr>]</index></name><operator pos:start="33:38" pos:end="33:38">.</operator><name pos:start="33:39" pos:end="33:49">rx_stats_pa</name></expr></argument>,

                      <argument pos:start="35:23" pos:end="35:48"><expr pos:start="35:23" pos:end="35:48"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:38"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:35">rxq_descr</name><index pos:start="35:36" pos:end="35:38">[<expr pos:start="35:37" pos:end="35:37"><name pos:start="35:37" pos:end="35:37">i</name></expr>]</index></name><operator pos:start="35:39" pos:end="35:39">.</operator><name pos:start="35:40" pos:end="35:48">rxq_stats</name></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:55"><expr pos:start="37:23" pos:end="37:55"><sizeof pos:start="37:23" pos:end="37:55">sizeof<argument_list pos:start="37:29" pos:end="37:55">(<argument pos:start="37:30" pos:end="37:54"><expr pos:start="37:30" pos:end="37:54"><name pos:start="37:30" pos:end="37:44"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:41">rxq_descr</name><index pos:start="37:42" pos:end="37:44">[<expr pos:start="37:43" pos:end="37:43"><name pos:start="37:43" pos:end="37:43">i</name></expr>]</index></name><operator pos:start="37:45" pos:end="37:45">.</operator><name pos:start="37:46" pos:end="37:54">rxq_stats</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
