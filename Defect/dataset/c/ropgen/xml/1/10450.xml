<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10450.c" pos:tabs="8"><function pos:start="1:1" pos:end="573:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">x86_cpu_handle_mmu_fault</name><parameter_list pos:start="1:29" pos:end="3:56">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">cs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:48">vaddr</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:42">is_write1</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:55"><decl pos:start="3:45" pos:end="3:55"><type pos:start="3:45" pos:end="3:55"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:55">mmu_idx</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="573:1">{<block_content pos:start="7:5" pos:end="571:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">X86CPU</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">cpu</name> <init pos:start="7:17" pos:end="7:29">= <expr pos:start="7:19" pos:end="7:29"><call pos:start="7:19" pos:end="7:29"><name pos:start="7:19" pos:end="7:25">X86_CPU</name><argument_list pos:start="7:26" pos:end="7:29">(<argument pos:start="7:27" pos:end="7:28"><expr pos:start="7:27" pos:end="7:28"><name pos:start="7:27" pos:end="7:28">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">CPUX86State</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">env</name> <init pos:start="9:22" pos:end="9:32">= <expr pos:start="9:24" pos:end="9:32"><operator pos:start="9:24" pos:end="9:24">&amp;</operator><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:27">cpu</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:17">ptep</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:20" pos:end="11:22">pte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">target_ulong</name></type> <name pos:start="13:18" pos:end="13:25">pde_addr</name></decl>, <decl pos:start="13:28" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:28" pos:end="13:35">pte_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">error_code</name> <init pos:start="15:20" pos:end="15:22">= <expr pos:start="15:22" pos:end="15:22"><literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:53"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">is_dirty</name></decl>, <decl pos:start="17:19" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:22">prot</name></decl>, <decl pos:start="17:25" pos:end="17:33"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:33">page_size</name></decl>, <decl pos:start="17:36" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:36" pos:end="17:43">is_write</name></decl>, <decl pos:start="17:46" pos:end="17:52"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:46" pos:end="17:52">is_user</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">hwaddr</name></type> <name pos:start="19:12" pos:end="19:16">paddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:41"><decl pos:start="21:5" pos:end="21:40"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:22">rsvd_mask</name> <init pos:start="21:24" pos:end="21:40">= <expr pos:start="21:26" pos:end="21:40"><name pos:start="21:26" pos:end="21:40">PG_HI_RSVD_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint32_t</name></type> <name pos:start="23:14" pos:end="23:24">page_offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:16">target_ulong</name></type> <name pos:start="25:18" pos:end="25:22">vaddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:11">is_user</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:21">mmu_idx</name> <operator pos:start="29:23" pos:end="29:24">==</operator> <name pos:start="29:26" pos:end="29:37">MMU_USER_IDX</name></expr>;</expr_stmt>

<cpp:if pos:start="31:1" pos:end="31:22">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:11">defined</name><argument_list pos:start="31:12" pos:end="31:22">(<argument pos:start="31:13" pos:end="31:21"><expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:21">DEBUG_MMU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="33:5" pos:end="38:0"><expr pos:start="33:5" pos:end="35:46"><call pos:start="33:5" pos:end="35:46"><name pos:start="33:5" pos:end="33:10">printf</name><argument_list pos:start="33:11" pos:end="35:46">(<argument pos:start="33:12" pos:end="33:78"><expr pos:start="33:12" pos:end="33:78"><literal type="string" pos:start="33:12" pos:end="33:30">"MMU fault: addr=%"</literal> <name pos:start="33:32" pos:end="33:41">VADDR_PRIx</name> <literal type="string" pos:start="33:43" pos:end="33:59">" w=%d u=%d eip="</literal> <name pos:start="33:61" pos:end="33:73">TARGET_FMT_lx</name> <literal type="string" pos:start="33:75" pos:end="33:78">"\n"</literal></expr></argument>,

           <argument pos:start="35:12" pos:end="35:15"><expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">addr</name></expr></argument>, <argument pos:start="35:18" pos:end="35:26"><expr pos:start="35:18" pos:end="35:26"><name pos:start="35:18" pos:end="35:26">is_write1</name></expr></argument>, <argument pos:start="35:29" pos:end="35:35"><expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:35">is_user</name></expr></argument>, <argument pos:start="35:38" pos:end="35:45"><expr pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:45"><name pos:start="35:38" pos:end="35:40">env</name><operator pos:start="35:41" pos:end="35:42">-&gt;</operator><name pos:start="35:43" pos:end="35:45">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:12">is_write</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:24">is_write1</name> <operator pos:start="39:26" pos:end="39:26">&amp;</operator> <literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="65:5"><if pos:start="43:5" pos:end="65:5">if <condition pos:start="43:8" pos:end="43:36">(<expr pos:start="43:9" pos:end="43:35"><operator pos:start="43:9" pos:end="43:9">!</operator><operator pos:start="43:10" pos:end="43:10">(</operator><name pos:start="43:11" pos:end="43:20"><name pos:start="43:11" pos:end="43:13">env</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:17">cr</name><index pos:start="43:18" pos:end="43:20">[<expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>]</index></name> <operator pos:start="43:22" pos:end="43:22">&amp;</operator> <name pos:start="43:24" pos:end="43:34">CR0_PG_MASK</name><operator pos:start="43:35" pos:end="43:35">)</operator></expr>)</condition> <block pos:start="43:38" pos:end="65:5">{<block_content pos:start="45:9" pos:end="63:24">

        <expr_stmt pos:start="45:9" pos:end="48:0"><expr pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:11">pte</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:18">addr</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="47:1" pos:end="47:20">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="49:9" pos:end="58:0"><if pos:start="49:9" pos:end="58:0">if <condition pos:start="49:12" pos:end="49:41">(<expr pos:start="49:13" pos:end="49:40"><operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:25"><name pos:start="49:15" pos:end="49:17">env</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:25">hflags</name></name> <operator pos:start="49:27" pos:end="49:27">&amp;</operator> <name pos:start="49:29" pos:end="49:39">HF_LMA_MASK</name><operator pos:start="49:40" pos:end="49:40">)</operator></expr>)</condition> <block pos:start="49:43" pos:end="58:0">{<block_content pos:start="53:13" pos:end="53:32">

            <comment type="block" pos:start="51:13" pos:end="51:75">/* Without long mode we can only address 32bits in real mode */</comment>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:15">pte</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <operator pos:start="53:19" pos:end="53:19">(</operator><name pos:start="53:20" pos:end="53:27">uint32_t</name><operator pos:start="53:28" pos:end="53:28">)</operator><name pos:start="53:29" pos:end="53:31">pte</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="57:1" pos:end="57:6">#<cpp:directive pos:start="57:2" pos:end="57:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="59:9" pos:end="59:50"><expr pos:start="59:9" pos:end="59:49"><name pos:start="59:9" pos:end="59:12">prot</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:24">PAGE_READ</name> <operator pos:start="59:26" pos:end="59:26">|</operator> <name pos:start="59:28" pos:end="59:37">PAGE_WRITE</name> <operator pos:start="59:39" pos:end="59:39">|</operator> <name pos:start="59:41" pos:end="59:49">PAGE_EXEC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:25"><expr pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:17">page_size</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <literal type="number" pos:start="61:21" pos:end="61:24">4096</literal></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:24">goto <name pos:start="63:14" pos:end="63:23">do_mapping</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:36">(<expr pos:start="69:9" pos:end="69:35"><operator pos:start="69:9" pos:end="69:9">!</operator><operator pos:start="69:10" pos:end="69:10">(</operator><name pos:start="69:11" pos:end="69:19"><name pos:start="69:11" pos:end="69:13">env</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:19">efer</name></name> <operator pos:start="69:21" pos:end="69:21">&amp;</operator> <name pos:start="69:23" pos:end="69:34">MSR_EFER_NXE</name><operator pos:start="69:35" pos:end="69:35">)</operator></expr>)</condition> <block pos:start="69:38" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:32">

        <expr_stmt pos:start="71:9" pos:end="71:32"><expr pos:start="71:9" pos:end="71:31"><name pos:start="71:9" pos:end="71:17">rsvd_mask</name> <operator pos:start="71:19" pos:end="71:20">|=</operator> <name pos:start="71:22" pos:end="71:31">PG_NX_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="365:5"><if pos:start="77:5" pos:end="283:5">if <condition pos:start="77:8" pos:end="77:34">(<expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:11">env</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:15">cr</name><index pos:start="77:16" pos:end="77:18">[<expr pos:start="77:17" pos:end="77:17"><literal type="number" pos:start="77:17" pos:end="77:17">4</literal></expr>]</index></name> <operator pos:start="77:20" pos:end="77:20">&amp;</operator> <name pos:start="77:22" pos:end="77:33">CR4_PAE_MASK</name></expr>)</condition> <block pos:start="77:36" pos:end="283:5">{<block_content pos:start="79:9" pos:end="281:25">

        <decl_stmt pos:start="79:9" pos:end="79:27"><decl pos:start="79:9" pos:end="79:20"><type pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:16">uint64_t</name></type> <name pos:start="79:18" pos:end="79:20">pde</name></decl>, <decl pos:start="79:23" pos:end="79:26"><type ref="prev" pos:start="79:9" pos:end="79:16"/><name pos:start="79:23" pos:end="79:26">pdpe</name></decl>;</decl_stmt>

        <decl_stmt pos:start="81:9" pos:end="86:0"><decl pos:start="81:9" pos:end="81:30"><type pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:20">target_ulong</name></type> <name pos:start="81:22" pos:end="81:30">pdpe_addr</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="85:1" pos:end="85:20">#<cpp:directive pos:start="85:2" pos:end="85:6">ifdef</cpp:directive> <name pos:start="85:8" pos:end="85:20">TARGET_X86_64</name></cpp:ifdef>

        <if_stmt pos:start="87:9" pos:end="211:9"><if pos:start="87:9" pos:end="181:9">if <condition pos:start="87:12" pos:end="87:38">(<expr pos:start="87:13" pos:end="87:37"><name pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:15">env</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:23">hflags</name></name> <operator pos:start="87:25" pos:end="87:25">&amp;</operator> <name pos:start="87:27" pos:end="87:37">HF_LMA_MASK</name></expr>)</condition> <block pos:start="87:40" pos:end="181:9">{<block_content pos:start="89:13" pos:end="179:13">

            <decl_stmt pos:start="89:13" pos:end="89:39"><decl pos:start="89:13" pos:end="89:31"><type pos:start="89:13" pos:end="89:20"><name pos:start="89:13" pos:end="89:20">uint64_t</name></type> <name pos:start="89:22" pos:end="89:31">pml4e_addr</name></decl>, <decl pos:start="89:34" pos:end="89:38"><type ref="prev" pos:start="89:13" pos:end="89:20"/><name pos:start="89:34" pos:end="89:38">pml4e</name></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:25"><decl pos:start="91:13" pos:end="91:24"><type pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:19">int32_t</name></type> <name pos:start="91:21" pos:end="91:24">sext</name></decl>;</decl_stmt>



            <comment type="block" pos:start="95:13" pos:end="95:53">/* test virtual address sign extension */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:39"><expr pos:start="97:13" pos:end="97:38"><name pos:start="97:13" pos:end="97:16">sext</name> <operator pos:start="97:18" pos:end="97:18">=</operator> <operator pos:start="97:20" pos:end="97:20">(</operator><name pos:start="97:21" pos:end="97:27">int64_t</name><operator pos:start="97:28" pos:end="97:28">)</operator><name pos:start="97:29" pos:end="97:32">addr</name> <operator pos:start="97:34" pos:end="97:35">&gt;&gt;</operator> <literal type="number" pos:start="97:37" pos:end="97:38">47</literal></expr>;</expr_stmt>

            <if_stmt pos:start="99:13" pos:end="107:13"><if pos:start="99:13" pos:end="107:13">if <condition pos:start="99:16" pos:end="99:40">(<expr pos:start="99:17" pos:end="99:39"><name pos:start="99:17" pos:end="99:20">sext</name> <operator pos:start="99:22" pos:end="99:23">!=</operator> <literal type="number" pos:start="99:25" pos:end="99:25">0</literal> <operator pos:start="99:27" pos:end="99:28">&amp;&amp;</operator> <name pos:start="99:30" pos:end="99:33">sext</name> <operator pos:start="99:35" pos:end="99:36">!=</operator> <operator pos:start="99:38" pos:end="99:38">-</operator><literal type="number" pos:start="99:39" pos:end="99:39">1</literal></expr>)</condition> <block pos:start="99:42" pos:end="107:13">{<block_content pos:start="101:17" pos:end="105:25">

                <expr_stmt pos:start="101:17" pos:end="101:36"><expr pos:start="101:17" pos:end="101:35"><name pos:start="101:17" pos:end="101:31"><name pos:start="101:17" pos:end="101:19">env</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:31">error_code</name></name> <operator pos:start="101:33" pos:end="101:33">=</operator> <literal type="number" pos:start="101:35" pos:end="101:35">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:49"><expr pos:start="103:17" pos:end="103:48"><name pos:start="103:17" pos:end="103:35"><name pos:start="103:17" pos:end="103:18">cs</name><operator pos:start="103:19" pos:end="103:20">-&gt;</operator><name pos:start="103:21" pos:end="103:35">exception_index</name></name> <operator pos:start="103:37" pos:end="103:37">=</operator> <name pos:start="103:39" pos:end="103:48">EXCP0D_GPF</name></expr>;</expr_stmt>

                <return pos:start="105:17" pos:end="105:25">return <expr pos:start="105:24" pos:end="105:24"><literal type="number" pos:start="105:24" pos:end="105:24">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="111:13" pos:end="113:30"><expr pos:start="111:13" pos:end="113:29"><name pos:start="111:13" pos:end="111:22">pml4e_addr</name> <operator pos:start="111:24" pos:end="111:24">=</operator> <operator pos:start="111:26" pos:end="111:26">(</operator><operator pos:start="111:27" pos:end="111:27">(</operator><name pos:start="111:28" pos:end="111:37"><name pos:start="111:28" pos:end="111:30">env</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:34">cr</name><index pos:start="111:35" pos:end="111:37">[<expr pos:start="111:36" pos:end="111:36"><literal type="number" pos:start="111:36" pos:end="111:36">3</literal></expr>]</index></name> <operator pos:start="111:39" pos:end="111:39">&amp;</operator> <operator pos:start="111:41" pos:end="111:41">~</operator><literal type="number" pos:start="111:42" pos:end="111:46">0xfff</literal><operator pos:start="111:47" pos:end="111:47">)</operator> <operator pos:start="111:49" pos:end="111:49">+</operator> <operator pos:start="111:51" pos:end="111:51">(</operator><operator pos:start="111:52" pos:end="111:52">(</operator><operator pos:start="111:53" pos:end="111:53">(</operator><name pos:start="111:54" pos:end="111:57">addr</name> <operator pos:start="111:59" pos:end="111:60">&gt;&gt;</operator> <literal type="number" pos:start="111:62" pos:end="111:63">39</literal><operator pos:start="111:64" pos:end="111:64">)</operator> <operator pos:start="111:66" pos:end="111:66">&amp;</operator> <literal type="number" pos:start="111:68" pos:end="111:72">0x1ff</literal><operator pos:start="111:73" pos:end="111:73">)</operator> <operator pos:start="111:75" pos:end="111:76">&lt;&lt;</operator> <literal type="number" pos:start="111:78" pos:end="111:78">3</literal><operator pos:start="111:79" pos:end="111:79">)</operator><operator pos:start="111:80" pos:end="111:80">)</operator> <operator pos:start="111:82" pos:end="111:82">&amp;</operator>

                <name pos:start="113:17" pos:end="113:29"><name pos:start="113:17" pos:end="113:19">env</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:49"><expr pos:start="115:13" pos:end="115:48"><name pos:start="115:13" pos:end="115:17">pml4e</name> <operator pos:start="115:19" pos:end="115:19">=</operator> <call pos:start="115:21" pos:end="115:48"><name pos:start="115:21" pos:end="115:28">ldq_phys</name><argument_list pos:start="115:29" pos:end="115:48">(<argument pos:start="115:30" pos:end="115:35"><expr pos:start="115:30" pos:end="115:35"><name pos:start="115:30" pos:end="115:35"><name pos:start="115:30" pos:end="115:31">cs</name><operator pos:start="115:32" pos:end="115:33">-&gt;</operator><name pos:start="115:34" pos:end="115:35">as</name></name></expr></argument>, <argument pos:start="115:38" pos:end="115:47"><expr pos:start="115:38" pos:end="115:47"><name pos:start="115:38" pos:end="115:47">pml4e_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="117:13" pos:end="121:13"><if pos:start="117:13" pos:end="121:13">if <condition pos:start="117:16" pos:end="117:43">(<expr pos:start="117:17" pos:end="117:42"><operator pos:start="117:17" pos:end="117:17">!</operator><operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:23">pml4e</name> <operator pos:start="117:25" pos:end="117:25">&amp;</operator> <name pos:start="117:27" pos:end="117:41">PG_PRESENT_MASK</name><operator pos:start="117:42" pos:end="117:42">)</operator></expr>)</condition> <block pos:start="117:45" pos:end="121:13">{<block_content pos:start="119:17" pos:end="119:30">

                <goto pos:start="119:17" pos:end="119:30">goto <name pos:start="119:22" pos:end="119:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="123:13" pos:end="127:13"><if pos:start="123:13" pos:end="127:13">if <condition pos:start="123:16" pos:end="123:50">(<expr pos:start="123:17" pos:end="123:49"><name pos:start="123:17" pos:end="123:21">pml4e</name> <operator pos:start="123:23" pos:end="123:23">&amp;</operator> <operator pos:start="123:25" pos:end="123:25">(</operator><name pos:start="123:26" pos:end="123:34">rsvd_mask</name> <operator pos:start="123:36" pos:end="123:36">|</operator> <name pos:start="123:38" pos:end="123:48">PG_PSE_MASK</name><operator pos:start="123:49" pos:end="123:49">)</operator></expr>)</condition> <block pos:start="123:52" pos:end="127:13">{<block_content pos:start="125:17" pos:end="125:35">

                <goto pos:start="125:17" pos:end="125:35">goto <name pos:start="125:22" pos:end="125:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="129:13" pos:end="135:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:44">(<expr pos:start="129:17" pos:end="129:43"><operator pos:start="129:17" pos:end="129:17">!</operator><operator pos:start="129:18" pos:end="129:18">(</operator><name pos:start="129:19" pos:end="129:23">pml4e</name> <operator pos:start="129:25" pos:end="129:25">&amp;</operator> <name pos:start="129:27" pos:end="129:42">PG_ACCESSED_MASK</name><operator pos:start="129:43" pos:end="129:43">)</operator></expr>)</condition> <block pos:start="129:46" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:61">

                <expr_stmt pos:start="131:17" pos:end="131:42"><expr pos:start="131:17" pos:end="131:41"><name pos:start="131:17" pos:end="131:21">pml4e</name> <operator pos:start="131:23" pos:end="131:24">|=</operator> <name pos:start="131:26" pos:end="131:41">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:61"><expr pos:start="133:17" pos:end="133:60"><call pos:start="133:17" pos:end="133:60"><name pos:start="133:17" pos:end="133:33">stl_phys_notdirty</name><argument_list pos:start="133:34" pos:end="133:60">(<argument pos:start="133:35" pos:end="133:40"><expr pos:start="133:35" pos:end="133:40"><name pos:start="133:35" pos:end="133:40"><name pos:start="133:35" pos:end="133:36">cs</name><operator pos:start="133:37" pos:end="133:38">-&gt;</operator><name pos:start="133:39" pos:end="133:40">as</name></name></expr></argument>, <argument pos:start="133:43" pos:end="133:52"><expr pos:start="133:43" pos:end="133:52"><name pos:start="133:43" pos:end="133:52">pml4e_addr</name></expr></argument>, <argument pos:start="133:55" pos:end="133:59"><expr pos:start="133:55" pos:end="133:59"><name pos:start="133:55" pos:end="133:59">pml4e</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:38"><expr pos:start="137:13" pos:end="137:37"><name pos:start="137:13" pos:end="137:16">ptep</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:24">pml4e</name> <operator pos:start="137:26" pos:end="137:26">^</operator> <name pos:start="137:28" pos:end="137:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="141:30"><expr pos:start="139:13" pos:end="141:29"><name pos:start="139:13" pos:end="139:21">pdpe_addr</name> <operator pos:start="139:23" pos:end="139:23">=</operator> <operator pos:start="139:25" pos:end="139:25">(</operator><operator pos:start="139:26" pos:end="139:26">(</operator><name pos:start="139:27" pos:end="139:31">pml4e</name> <operator pos:start="139:33" pos:end="139:33">&amp;</operator> <name pos:start="139:35" pos:end="139:49">PG_ADDRESS_MASK</name><operator pos:start="139:50" pos:end="139:50">)</operator> <operator pos:start="139:52" pos:end="139:52">+</operator> <operator pos:start="139:54" pos:end="139:54">(</operator><operator pos:start="139:55" pos:end="139:55">(</operator><operator pos:start="139:56" pos:end="139:56">(</operator><name pos:start="139:57" pos:end="139:60">addr</name> <operator pos:start="139:62" pos:end="139:63">&gt;&gt;</operator> <literal type="number" pos:start="139:65" pos:end="139:66">30</literal><operator pos:start="139:67" pos:end="139:67">)</operator> <operator pos:start="139:69" pos:end="139:69">&amp;</operator> <literal type="number" pos:start="139:71" pos:end="139:75">0x1ff</literal><operator pos:start="139:76" pos:end="139:76">)</operator> <operator pos:start="139:78" pos:end="139:79">&lt;&lt;</operator> <literal type="number" pos:start="139:81" pos:end="139:81">3</literal><operator pos:start="139:82" pos:end="139:82">)</operator><operator pos:start="139:83" pos:end="139:83">)</operator> <operator pos:start="139:85" pos:end="139:85">&amp;</operator>

                <name pos:start="141:17" pos:end="141:29"><name pos:start="141:17" pos:end="141:19">env</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:47"><expr pos:start="143:13" pos:end="143:46"><name pos:start="143:13" pos:end="143:16">pdpe</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <call pos:start="143:20" pos:end="143:46"><name pos:start="143:20" pos:end="143:27">ldq_phys</name><argument_list pos:start="143:28" pos:end="143:46">(<argument pos:start="143:29" pos:end="143:34"><expr pos:start="143:29" pos:end="143:34"><name pos:start="143:29" pos:end="143:34"><name pos:start="143:29" pos:end="143:30">cs</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:34">as</name></name></expr></argument>, <argument pos:start="143:37" pos:end="143:45"><expr pos:start="143:37" pos:end="143:45"><name pos:start="143:37" pos:end="143:45">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="145:13" pos:end="149:13"><if pos:start="145:13" pos:end="149:13">if <condition pos:start="145:16" pos:end="145:42">(<expr pos:start="145:17" pos:end="145:41"><operator pos:start="145:17" pos:end="145:17">!</operator><operator pos:start="145:18" pos:end="145:18">(</operator><name pos:start="145:19" pos:end="145:22">pdpe</name> <operator pos:start="145:24" pos:end="145:24">&amp;</operator> <name pos:start="145:26" pos:end="145:40">PG_PRESENT_MASK</name><operator pos:start="145:41" pos:end="145:41">)</operator></expr>)</condition> <block pos:start="145:44" pos:end="149:13">{<block_content pos:start="147:17" pos:end="147:30">

                <goto pos:start="147:17" pos:end="147:30">goto <name pos:start="147:22" pos:end="147:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="151:13" pos:end="155:13"><if pos:start="151:13" pos:end="155:13">if <condition pos:start="151:16" pos:end="151:33">(<expr pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:20">pdpe</name> <operator pos:start="151:22" pos:end="151:22">&amp;</operator> <name pos:start="151:24" pos:end="151:32">rsvd_mask</name></expr>)</condition> <block pos:start="151:35" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:35">

                <goto pos:start="153:17" pos:end="153:35">goto <name pos:start="153:22" pos:end="153:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:38"><expr pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:16">ptep</name> <operator pos:start="157:18" pos:end="157:19">&amp;=</operator> <name pos:start="157:21" pos:end="157:24">pdpe</name> <operator pos:start="157:26" pos:end="157:26">^</operator> <name pos:start="157:28" pos:end="157:37">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="159:13" pos:end="165:13"><if pos:start="159:13" pos:end="165:13">if <condition pos:start="159:16" pos:end="159:43">(<expr pos:start="159:17" pos:end="159:42"><operator pos:start="159:17" pos:end="159:17">!</operator><operator pos:start="159:18" pos:end="159:18">(</operator><name pos:start="159:19" pos:end="159:22">pdpe</name> <operator pos:start="159:24" pos:end="159:24">&amp;</operator> <name pos:start="159:26" pos:end="159:41">PG_ACCESSED_MASK</name><operator pos:start="159:42" pos:end="159:42">)</operator></expr>)</condition> <block pos:start="159:45" pos:end="165:13">{<block_content pos:start="161:17" pos:end="163:59">

                <expr_stmt pos:start="161:17" pos:end="161:41"><expr pos:start="161:17" pos:end="161:40"><name pos:start="161:17" pos:end="161:20">pdpe</name> <operator pos:start="161:22" pos:end="161:23">|=</operator> <name pos:start="161:25" pos:end="161:40">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:59"><expr pos:start="163:17" pos:end="163:58"><call pos:start="163:17" pos:end="163:58"><name pos:start="163:17" pos:end="163:33">stl_phys_notdirty</name><argument_list pos:start="163:34" pos:end="163:58">(<argument pos:start="163:35" pos:end="163:40"><expr pos:start="163:35" pos:end="163:40"><name pos:start="163:35" pos:end="163:40"><name pos:start="163:35" pos:end="163:36">cs</name><operator pos:start="163:37" pos:end="163:38">-&gt;</operator><name pos:start="163:39" pos:end="163:40">as</name></name></expr></argument>, <argument pos:start="163:43" pos:end="163:51"><expr pos:start="163:43" pos:end="163:51"><name pos:start="163:43" pos:end="163:51">pdpe_addr</name></expr></argument>, <argument pos:start="163:54" pos:end="163:57"><expr pos:start="163:54" pos:end="163:57"><name pos:start="163:54" pos:end="163:57">pdpe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="167:13" pos:end="179:13"><if pos:start="167:13" pos:end="179:13">if <condition pos:start="167:16" pos:end="167:35">(<expr pos:start="167:17" pos:end="167:34"><name pos:start="167:17" pos:end="167:20">pdpe</name> <operator pos:start="167:22" pos:end="167:22">&amp;</operator> <name pos:start="167:24" pos:end="167:34">PG_PSE_MASK</name></expr>)</condition> <block pos:start="167:37" pos:end="179:13">{<block_content pos:start="171:17" pos:end="177:38">

                <comment type="block" pos:start="169:17" pos:end="169:31">/* 1 GB page */</comment>

                <expr_stmt pos:start="171:17" pos:end="171:47"><expr pos:start="171:17" pos:end="171:46"><name pos:start="171:17" pos:end="171:25">page_size</name> <operator pos:start="171:27" pos:end="171:27">=</operator> <literal type="number" pos:start="171:29" pos:end="171:32">1024</literal> <operator pos:start="171:34" pos:end="171:34">*</operator> <literal type="number" pos:start="171:36" pos:end="171:39">1024</literal> <operator pos:start="171:41" pos:end="171:41">*</operator> <literal type="number" pos:start="171:43" pos:end="171:46">1024</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:37"><expr pos:start="173:17" pos:end="173:36"><name pos:start="173:17" pos:end="173:24">pte_addr</name> <operator pos:start="173:26" pos:end="173:26">=</operator> <name pos:start="173:28" pos:end="173:36">pdpe_addr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:27"><expr pos:start="175:17" pos:end="175:26"><name pos:start="175:17" pos:end="175:19">pte</name> <operator pos:start="175:21" pos:end="175:21">=</operator> <name pos:start="175:23" pos:end="175:26">pdpe</name></expr>;</expr_stmt>

                <goto pos:start="177:17" pos:end="177:38">goto <name pos:start="177:22" pos:end="177:37">do_check_protect</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="181:11" pos:end="211:9">else

<cpp:endif pos:start="183:1" pos:end="183:6">#<cpp:directive pos:start="183:2" pos:end="183:6">endif</cpp:directive></cpp:endif>

        <block pos:start="185:9" pos:end="211:9">{<block_content pos:start="189:13" pos:end="209:58">

            <comment type="block" pos:start="187:13" pos:end="187:53">/* XXX: load them when cr3 is loaded ? */</comment>

            <expr_stmt pos:start="189:13" pos:end="191:30"><expr pos:start="189:13" pos:end="191:29"><name pos:start="189:13" pos:end="189:21">pdpe_addr</name> <operator pos:start="189:23" pos:end="189:23">=</operator> <operator pos:start="189:25" pos:end="189:25">(</operator><operator pos:start="189:26" pos:end="189:26">(</operator><name pos:start="189:27" pos:end="189:36"><name pos:start="189:27" pos:end="189:29">env</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:33">cr</name><index pos:start="189:34" pos:end="189:36">[<expr pos:start="189:35" pos:end="189:35"><literal type="number" pos:start="189:35" pos:end="189:35">3</literal></expr>]</index></name> <operator pos:start="189:38" pos:end="189:38">&amp;</operator> <operator pos:start="189:40" pos:end="189:40">~</operator><literal type="number" pos:start="189:41" pos:end="189:44">0x1f</literal><operator pos:start="189:45" pos:end="189:45">)</operator> <operator pos:start="189:47" pos:end="189:47">+</operator> <operator pos:start="189:49" pos:end="189:49">(</operator><operator pos:start="189:50" pos:end="189:50">(</operator><name pos:start="189:51" pos:end="189:54">addr</name> <operator pos:start="189:56" pos:end="189:57">&gt;&gt;</operator> <literal type="number" pos:start="189:59" pos:end="189:60">27</literal><operator pos:start="189:61" pos:end="189:61">)</operator> <operator pos:start="189:63" pos:end="189:63">&amp;</operator> <literal type="number" pos:start="189:65" pos:end="189:68">0x18</literal><operator pos:start="189:69" pos:end="189:69">)</operator><operator pos:start="189:70" pos:end="189:70">)</operator> <operator pos:start="189:72" pos:end="189:72">&amp;</operator>

                <name pos:start="191:17" pos:end="191:29"><name pos:start="191:17" pos:end="191:19">env</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:29">a20_mask</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:47"><expr pos:start="193:13" pos:end="193:46"><name pos:start="193:13" pos:end="193:16">pdpe</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:46"><name pos:start="193:20" pos:end="193:27">ldq_phys</name><argument_list pos:start="193:28" pos:end="193:46">(<argument pos:start="193:29" pos:end="193:34"><expr pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:34"><name pos:start="193:29" pos:end="193:30">cs</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:34">as</name></name></expr></argument>, <argument pos:start="193:37" pos:end="193:45"><expr pos:start="193:37" pos:end="193:45"><name pos:start="193:37" pos:end="193:45">pdpe_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="199:13"><if pos:start="195:13" pos:end="199:13">if <condition pos:start="195:16" pos:end="195:42">(<expr pos:start="195:17" pos:end="195:41"><operator pos:start="195:17" pos:end="195:17">!</operator><operator pos:start="195:18" pos:end="195:18">(</operator><name pos:start="195:19" pos:end="195:22">pdpe</name> <operator pos:start="195:24" pos:end="195:24">&amp;</operator> <name pos:start="195:26" pos:end="195:40">PG_PRESENT_MASK</name><operator pos:start="195:41" pos:end="195:41">)</operator></expr>)</condition> <block pos:start="195:44" pos:end="199:13">{<block_content pos:start="197:17" pos:end="197:30">

                <goto pos:start="197:17" pos:end="197:30">goto <name pos:start="197:22" pos:end="197:29">do_fault</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:54"><expr pos:start="201:13" pos:end="201:53"><name pos:start="201:13" pos:end="201:21">rsvd_mask</name> <operator pos:start="201:23" pos:end="201:24">|=</operator> <name pos:start="201:26" pos:end="201:40">PG_HI_USER_MASK</name> <operator pos:start="201:42" pos:end="201:42">|</operator> <name pos:start="201:44" pos:end="201:53">PG_NX_MASK</name></expr>;</expr_stmt>

            <if_stmt pos:start="203:13" pos:end="207:13"><if pos:start="203:13" pos:end="207:13">if <condition pos:start="203:16" pos:end="203:33">(<expr pos:start="203:17" pos:end="203:32"><name pos:start="203:17" pos:end="203:20">pdpe</name> <operator pos:start="203:22" pos:end="203:22">&amp;</operator> <name pos:start="203:24" pos:end="203:32">rsvd_mask</name></expr>)</condition> <block pos:start="203:35" pos:end="207:13">{<block_content pos:start="205:17" pos:end="205:35">

                <goto pos:start="205:17" pos:end="205:35">goto <name pos:start="205:22" pos:end="205:34">do_fault_rsvd</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:58"><expr pos:start="209:13" pos:end="209:57"><name pos:start="209:13" pos:end="209:16">ptep</name> <operator pos:start="209:18" pos:end="209:18">=</operator> <name pos:start="209:20" pos:end="209:29">PG_NX_MASK</name> <operator pos:start="209:31" pos:end="209:31">|</operator> <name pos:start="209:33" pos:end="209:44">PG_USER_MASK</name> <operator pos:start="209:46" pos:end="209:46">|</operator> <name pos:start="209:48" pos:end="209:57">PG_RW_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="215:9" pos:end="217:26"><expr pos:start="215:9" pos:end="217:25"><name pos:start="215:9" pos:end="215:16">pde_addr</name> <operator pos:start="215:18" pos:end="215:18">=</operator> <operator pos:start="215:20" pos:end="215:20">(</operator><operator pos:start="215:21" pos:end="215:21">(</operator><name pos:start="215:22" pos:end="215:25">pdpe</name> <operator pos:start="215:27" pos:end="215:27">&amp;</operator> <name pos:start="215:29" pos:end="215:43">PG_ADDRESS_MASK</name><operator pos:start="215:44" pos:end="215:44">)</operator> <operator pos:start="215:46" pos:end="215:46">+</operator> <operator pos:start="215:48" pos:end="215:48">(</operator><operator pos:start="215:49" pos:end="215:49">(</operator><operator pos:start="215:50" pos:end="215:50">(</operator><name pos:start="215:51" pos:end="215:54">addr</name> <operator pos:start="215:56" pos:end="215:57">&gt;&gt;</operator> <literal type="number" pos:start="215:59" pos:end="215:60">21</literal><operator pos:start="215:61" pos:end="215:61">)</operator> <operator pos:start="215:63" pos:end="215:63">&amp;</operator> <literal type="number" pos:start="215:65" pos:end="215:69">0x1ff</literal><operator pos:start="215:70" pos:end="215:70">)</operator> <operator pos:start="215:72" pos:end="215:73">&lt;&lt;</operator> <literal type="number" pos:start="215:75" pos:end="215:75">3</literal><operator pos:start="215:76" pos:end="215:76">)</operator><operator pos:start="215:77" pos:end="215:77">)</operator> <operator pos:start="215:79" pos:end="215:79">&amp;</operator>

            <name pos:start="217:13" pos:end="217:25"><name pos:start="217:13" pos:end="217:15">env</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="219:9" pos:end="219:41"><expr pos:start="219:9" pos:end="219:40"><name pos:start="219:9" pos:end="219:11">pde</name> <operator pos:start="219:13" pos:end="219:13">=</operator> <call pos:start="219:15" pos:end="219:40"><name pos:start="219:15" pos:end="219:22">ldq_phys</name><argument_list pos:start="219:23" pos:end="219:40">(<argument pos:start="219:24" pos:end="219:29"><expr pos:start="219:24" pos:end="219:29"><name pos:start="219:24" pos:end="219:29"><name pos:start="219:24" pos:end="219:25">cs</name><operator pos:start="219:26" pos:end="219:27">-&gt;</operator><name pos:start="219:28" pos:end="219:29">as</name></name></expr></argument>, <argument pos:start="219:32" pos:end="219:39"><expr pos:start="219:32" pos:end="219:39"><name pos:start="219:32" pos:end="219:39">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="225:9"><if pos:start="221:9" pos:end="225:9">if <condition pos:start="221:12" pos:end="221:37">(<expr pos:start="221:13" pos:end="221:36"><operator pos:start="221:13" pos:end="221:13">!</operator><operator pos:start="221:14" pos:end="221:14">(</operator><name pos:start="221:15" pos:end="221:17">pde</name> <operator pos:start="221:19" pos:end="221:19">&amp;</operator> <name pos:start="221:21" pos:end="221:35">PG_PRESENT_MASK</name><operator pos:start="221:36" pos:end="221:36">)</operator></expr>)</condition> <block pos:start="221:39" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:26">

            <goto pos:start="223:13" pos:end="223:26">goto <name pos:start="223:18" pos:end="223:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="227:9" pos:end="231:9"><if pos:start="227:9" pos:end="231:9">if <condition pos:start="227:12" pos:end="227:28">(<expr pos:start="227:13" pos:end="227:27"><name pos:start="227:13" pos:end="227:15">pde</name> <operator pos:start="227:17" pos:end="227:17">&amp;</operator> <name pos:start="227:19" pos:end="227:27">rsvd_mask</name></expr>)</condition> <block pos:start="227:30" pos:end="231:9">{<block_content pos:start="229:13" pos:end="229:31">

            <goto pos:start="229:13" pos:end="229:31">goto <name pos:start="229:18" pos:end="229:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:33"><expr pos:start="233:9" pos:end="233:32"><name pos:start="233:9" pos:end="233:12">ptep</name> <operator pos:start="233:14" pos:end="233:15">&amp;=</operator> <name pos:start="233:17" pos:end="233:19">pde</name> <operator pos:start="233:21" pos:end="233:21">^</operator> <name pos:start="233:23" pos:end="233:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="247:9"><if pos:start="235:9" pos:end="247:9">if <condition pos:start="235:12" pos:end="235:30">(<expr pos:start="235:13" pos:end="235:29"><name pos:start="235:13" pos:end="235:15">pde</name> <operator pos:start="235:17" pos:end="235:17">&amp;</operator> <name pos:start="235:19" pos:end="235:29">PG_PSE_MASK</name></expr>)</condition> <block pos:start="235:32" pos:end="247:9">{<block_content pos:start="239:13" pos:end="245:34">

            <comment type="block" pos:start="237:13" pos:end="237:27">/* 2 MB page */</comment>

            <expr_stmt pos:start="239:13" pos:end="239:36"><expr pos:start="239:13" pos:end="239:35"><name pos:start="239:13" pos:end="239:21">page_size</name> <operator pos:start="239:23" pos:end="239:23">=</operator> <literal type="number" pos:start="239:25" pos:end="239:28">2048</literal> <operator pos:start="239:30" pos:end="239:30">*</operator> <literal type="number" pos:start="239:32" pos:end="239:35">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:32"><expr pos:start="241:13" pos:end="241:31"><name pos:start="241:13" pos:end="241:20">pte_addr</name> <operator pos:start="241:22" pos:end="241:22">=</operator> <name pos:start="241:24" pos:end="241:31">pde_addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:22"><expr pos:start="243:13" pos:end="243:21"><name pos:start="243:13" pos:end="243:15">pte</name> <operator pos:start="243:17" pos:end="243:17">=</operator> <name pos:start="243:19" pos:end="243:21">pde</name></expr>;</expr_stmt>

            <goto pos:start="245:13" pos:end="245:34">goto <name pos:start="245:18" pos:end="245:33">do_check_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="249:9" pos:end="249:23">/* 4 KB page */</comment>

        <if_stmt pos:start="251:9" pos:end="257:9"><if pos:start="251:9" pos:end="257:9">if <condition pos:start="251:12" pos:end="251:38">(<expr pos:start="251:13" pos:end="251:37"><operator pos:start="251:13" pos:end="251:13">!</operator><operator pos:start="251:14" pos:end="251:14">(</operator><name pos:start="251:15" pos:end="251:17">pde</name> <operator pos:start="251:19" pos:end="251:19">&amp;</operator> <name pos:start="251:21" pos:end="251:36">PG_ACCESSED_MASK</name><operator pos:start="251:37" pos:end="251:37">)</operator></expr>)</condition> <block pos:start="251:40" pos:end="257:9">{<block_content pos:start="253:13" pos:end="255:53">

            <expr_stmt pos:start="253:13" pos:end="253:36"><expr pos:start="253:13" pos:end="253:35"><name pos:start="253:13" pos:end="253:15">pde</name> <operator pos:start="253:17" pos:end="253:18">|=</operator> <name pos:start="253:20" pos:end="253:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:53"><expr pos:start="255:13" pos:end="255:52"><call pos:start="255:13" pos:end="255:52"><name pos:start="255:13" pos:end="255:29">stl_phys_notdirty</name><argument_list pos:start="255:30" pos:end="255:52">(<argument pos:start="255:31" pos:end="255:36"><expr pos:start="255:31" pos:end="255:36"><name pos:start="255:31" pos:end="255:36"><name pos:start="255:31" pos:end="255:32">cs</name><operator pos:start="255:33" pos:end="255:34">-&gt;</operator><name pos:start="255:35" pos:end="255:36">as</name></name></expr></argument>, <argument pos:start="255:39" pos:end="255:46"><expr pos:start="255:39" pos:end="255:46"><name pos:start="255:39" pos:end="255:46">pde_addr</name></expr></argument>, <argument pos:start="255:49" pos:end="255:51"><expr pos:start="255:49" pos:end="255:51"><name pos:start="255:49" pos:end="255:51">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="259:9" pos:end="261:26"><expr pos:start="259:9" pos:end="261:25"><name pos:start="259:9" pos:end="259:16">pte_addr</name> <operator pos:start="259:18" pos:end="259:18">=</operator> <operator pos:start="259:20" pos:end="259:20">(</operator><operator pos:start="259:21" pos:end="259:21">(</operator><name pos:start="259:22" pos:end="259:24">pde</name> <operator pos:start="259:26" pos:end="259:26">&amp;</operator> <name pos:start="259:28" pos:end="259:42">PG_ADDRESS_MASK</name><operator pos:start="259:43" pos:end="259:43">)</operator> <operator pos:start="259:45" pos:end="259:45">+</operator> <operator pos:start="259:47" pos:end="259:47">(</operator><operator pos:start="259:48" pos:end="259:48">(</operator><operator pos:start="259:49" pos:end="259:49">(</operator><name pos:start="259:50" pos:end="259:53">addr</name> <operator pos:start="259:55" pos:end="259:56">&gt;&gt;</operator> <literal type="number" pos:start="259:58" pos:end="259:59">12</literal><operator pos:start="259:60" pos:end="259:60">)</operator> <operator pos:start="259:62" pos:end="259:62">&amp;</operator> <literal type="number" pos:start="259:64" pos:end="259:68">0x1ff</literal><operator pos:start="259:69" pos:end="259:69">)</operator> <operator pos:start="259:71" pos:end="259:72">&lt;&lt;</operator> <literal type="number" pos:start="259:74" pos:end="259:74">3</literal><operator pos:start="259:75" pos:end="259:75">)</operator><operator pos:start="259:76" pos:end="259:76">)</operator> <operator pos:start="259:78" pos:end="259:78">&amp;</operator>

            <name pos:start="261:13" pos:end="261:25"><name pos:start="261:13" pos:end="261:15">env</name><operator pos:start="261:16" pos:end="261:17">-&gt;</operator><name pos:start="261:18" pos:end="261:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:41"><expr pos:start="263:9" pos:end="263:40"><name pos:start="263:9" pos:end="263:11">pte</name> <operator pos:start="263:13" pos:end="263:13">=</operator> <call pos:start="263:15" pos:end="263:40"><name pos:start="263:15" pos:end="263:22">ldq_phys</name><argument_list pos:start="263:23" pos:end="263:40">(<argument pos:start="263:24" pos:end="263:29"><expr pos:start="263:24" pos:end="263:29"><name pos:start="263:24" pos:end="263:29"><name pos:start="263:24" pos:end="263:25">cs</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:29">as</name></name></expr></argument>, <argument pos:start="263:32" pos:end="263:39"><expr pos:start="263:32" pos:end="263:39"><name pos:start="263:32" pos:end="263:39">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="265:9" pos:end="269:9"><if pos:start="265:9" pos:end="269:9">if <condition pos:start="265:12" pos:end="265:37">(<expr pos:start="265:13" pos:end="265:36"><operator pos:start="265:13" pos:end="265:13">!</operator><operator pos:start="265:14" pos:end="265:14">(</operator><name pos:start="265:15" pos:end="265:17">pte</name> <operator pos:start="265:19" pos:end="265:19">&amp;</operator> <name pos:start="265:21" pos:end="265:35">PG_PRESENT_MASK</name><operator pos:start="265:36" pos:end="265:36">)</operator></expr>)</condition> <block pos:start="265:39" pos:end="269:9">{<block_content pos:start="267:13" pos:end="267:26">

            <goto pos:start="267:13" pos:end="267:26">goto <name pos:start="267:18" pos:end="267:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="271:9" pos:end="275:9"><if pos:start="271:9" pos:end="275:9">if <condition pos:start="271:12" pos:end="271:28">(<expr pos:start="271:13" pos:end="271:27"><name pos:start="271:13" pos:end="271:15">pte</name> <operator pos:start="271:17" pos:end="271:17">&amp;</operator> <name pos:start="271:19" pos:end="271:27">rsvd_mask</name></expr>)</condition> <block pos:start="271:30" pos:end="275:9">{<block_content pos:start="273:13" pos:end="273:31">

            <goto pos:start="273:13" pos:end="273:31">goto <name pos:start="273:18" pos:end="273:30">do_fault_rsvd</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="277:9" pos:end="277:61">/* combine pde and pte nx, user and rw protections */</comment>

        <expr_stmt pos:start="279:9" pos:end="279:33"><expr pos:start="279:9" pos:end="279:32"><name pos:start="279:9" pos:end="279:12">ptep</name> <operator pos:start="279:14" pos:end="279:15">&amp;=</operator> <name pos:start="279:17" pos:end="279:19">pte</name> <operator pos:start="279:21" pos:end="279:21">^</operator> <name pos:start="279:23" pos:end="279:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:25"><expr pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:17">page_size</name> <operator pos:start="281:19" pos:end="281:19">=</operator> <literal type="number" pos:start="281:21" pos:end="281:24">4096</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="283:7" pos:end="365:5">else <block pos:start="283:12" pos:end="365:5">{<block_content pos:start="285:9" pos:end="363:22">

        <decl_stmt pos:start="285:9" pos:end="285:21"><decl pos:start="285:9" pos:end="285:20"><type pos:start="285:9" pos:end="285:16"><name pos:start="285:9" pos:end="285:16">uint32_t</name></type> <name pos:start="285:18" pos:end="285:20">pde</name></decl>;</decl_stmt>



        <comment type="block" pos:start="289:9" pos:end="289:34">/* page directory entry */</comment>

        <expr_stmt pos:start="291:9" pos:end="293:26"><expr pos:start="291:9" pos:end="293:25"><name pos:start="291:9" pos:end="291:16">pde_addr</name> <operator pos:start="291:18" pos:end="291:18">=</operator> <operator pos:start="291:20" pos:end="291:20">(</operator><operator pos:start="291:21" pos:end="291:21">(</operator><name pos:start="291:22" pos:end="291:31"><name pos:start="291:22" pos:end="291:24">env</name><operator pos:start="291:25" pos:end="291:26">-&gt;</operator><name pos:start="291:27" pos:end="291:28">cr</name><index pos:start="291:29" pos:end="291:31">[<expr pos:start="291:30" pos:end="291:30"><literal type="number" pos:start="291:30" pos:end="291:30">3</literal></expr>]</index></name> <operator pos:start="291:33" pos:end="291:33">&amp;</operator> <operator pos:start="291:35" pos:end="291:35">~</operator><literal type="number" pos:start="291:36" pos:end="291:40">0xfff</literal><operator pos:start="291:41" pos:end="291:41">)</operator> <operator pos:start="291:43" pos:end="291:43">+</operator> <operator pos:start="291:45" pos:end="291:45">(</operator><operator pos:start="291:46" pos:end="291:46">(</operator><name pos:start="291:47" pos:end="291:50">addr</name> <operator pos:start="291:52" pos:end="291:53">&gt;&gt;</operator> <literal type="number" pos:start="291:55" pos:end="291:56">20</literal><operator pos:start="291:57" pos:end="291:57">)</operator> <operator pos:start="291:59" pos:end="291:59">&amp;</operator> <literal type="number" pos:start="291:61" pos:end="291:65">0xffc</literal><operator pos:start="291:66" pos:end="291:66">)</operator><operator pos:start="291:67" pos:end="291:67">)</operator> <operator pos:start="291:69" pos:end="291:69">&amp;</operator>

            <name pos:start="293:13" pos:end="293:25"><name pos:start="293:13" pos:end="293:15">env</name><operator pos:start="293:16" pos:end="293:17">-&gt;</operator><name pos:start="293:18" pos:end="293:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:41"><expr pos:start="295:9" pos:end="295:40"><name pos:start="295:9" pos:end="295:11">pde</name> <operator pos:start="295:13" pos:end="295:13">=</operator> <call pos:start="295:15" pos:end="295:40"><name pos:start="295:15" pos:end="295:22">ldl_phys</name><argument_list pos:start="295:23" pos:end="295:40">(<argument pos:start="295:24" pos:end="295:29"><expr pos:start="295:24" pos:end="295:29"><name pos:start="295:24" pos:end="295:29"><name pos:start="295:24" pos:end="295:25">cs</name><operator pos:start="295:26" pos:end="295:27">-&gt;</operator><name pos:start="295:28" pos:end="295:29">as</name></name></expr></argument>, <argument pos:start="295:32" pos:end="295:39"><expr pos:start="295:32" pos:end="295:39"><name pos:start="295:32" pos:end="295:39">pde_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="297:9" pos:end="301:9"><if pos:start="297:9" pos:end="301:9">if <condition pos:start="297:12" pos:end="297:37">(<expr pos:start="297:13" pos:end="297:36"><operator pos:start="297:13" pos:end="297:13">!</operator><operator pos:start="297:14" pos:end="297:14">(</operator><name pos:start="297:15" pos:end="297:17">pde</name> <operator pos:start="297:19" pos:end="297:19">&amp;</operator> <name pos:start="297:21" pos:end="297:35">PG_PRESENT_MASK</name><operator pos:start="297:36" pos:end="297:36">)</operator></expr>)</condition> <block pos:start="297:39" pos:end="301:9">{<block_content pos:start="299:13" pos:end="299:26">

            <goto pos:start="299:13" pos:end="299:26">goto <name pos:start="299:18" pos:end="299:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:32"><expr pos:start="303:9" pos:end="303:31"><name pos:start="303:9" pos:end="303:12">ptep</name> <operator pos:start="303:14" pos:end="303:14">=</operator> <name pos:start="303:16" pos:end="303:18">pde</name> <operator pos:start="303:20" pos:end="303:20">|</operator> <name pos:start="303:22" pos:end="303:31">PG_NX_MASK</name></expr>;</expr_stmt>



        <comment type="block" pos:start="307:9" pos:end="307:55">/* if PSE bit is set, then we use a 4MB page */</comment>

        <if_stmt pos:start="309:9" pos:end="329:9"><if pos:start="309:9" pos:end="329:9">if <condition pos:start="309:12" pos:end="309:63">(<expr pos:start="309:13" pos:end="309:62"><operator pos:start="309:13" pos:end="309:13">(</operator><name pos:start="309:14" pos:end="309:16">pde</name> <operator pos:start="309:18" pos:end="309:18">&amp;</operator> <name pos:start="309:20" pos:end="309:30">PG_PSE_MASK</name><operator pos:start="309:31" pos:end="309:31">)</operator> <operator pos:start="309:33" pos:end="309:34">&amp;&amp;</operator> <operator pos:start="309:36" pos:end="309:36">(</operator><name pos:start="309:37" pos:end="309:46"><name pos:start="309:37" pos:end="309:39">env</name><operator pos:start="309:40" pos:end="309:41">-&gt;</operator><name pos:start="309:42" pos:end="309:43">cr</name><index pos:start="309:44" pos:end="309:46">[<expr pos:start="309:45" pos:end="309:45"><literal type="number" pos:start="309:45" pos:end="309:45">4</literal></expr>]</index></name> <operator pos:start="309:48" pos:end="309:48">&amp;</operator> <name pos:start="309:50" pos:end="309:61">CR4_PSE_MASK</name><operator pos:start="309:62" pos:end="309:62">)</operator></expr>)</condition> <block pos:start="309:65" pos:end="329:9">{<block_content pos:start="311:13" pos:end="327:40">

            <expr_stmt pos:start="311:13" pos:end="311:36"><expr pos:start="311:13" pos:end="311:35"><name pos:start="311:13" pos:end="311:21">page_size</name> <operator pos:start="311:23" pos:end="311:23">=</operator> <literal type="number" pos:start="311:25" pos:end="311:28">4096</literal> <operator pos:start="311:30" pos:end="311:30">*</operator> <literal type="number" pos:start="311:32" pos:end="311:35">1024</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="313:13" pos:end="313:32"><expr pos:start="313:13" pos:end="313:31"><name pos:start="313:13" pos:end="313:20">pte_addr</name> <operator pos:start="313:22" pos:end="313:22">=</operator> <name pos:start="313:24" pos:end="313:31">pde_addr</name></expr>;</expr_stmt>



            <comment type="block" pos:start="317:13" pos:end="321:15">/* Bits 20-13 provide bits 39-32 of the address, bit 21 is reserved.

             * Leave bits 20-13 in place for setting accessed/dirty bits below.

             */</comment>

            <expr_stmt pos:start="323:13" pos:end="323:56"><expr pos:start="323:13" pos:end="323:55"><name pos:start="323:13" pos:end="323:15">pte</name> <operator pos:start="323:17" pos:end="323:17">=</operator> <name pos:start="323:19" pos:end="323:21">pde</name> <operator pos:start="323:23" pos:end="323:23">|</operator> <operator pos:start="323:25" pos:end="323:25">(</operator><operator pos:start="323:26" pos:end="323:26">(</operator><name pos:start="323:27" pos:end="323:29">pde</name> <operator pos:start="323:31" pos:end="323:31">&amp;</operator> <literal type="number" pos:start="323:33" pos:end="323:40">0x1fe000</literal><operator pos:start="323:41" pos:end="323:41">)</operator> <operator pos:start="323:43" pos:end="323:44">&lt;&lt;</operator> <operator pos:start="323:46" pos:end="323:46">(</operator><literal type="number" pos:start="323:47" pos:end="323:50">32</literal> <operator pos:start="323:50" pos:end="323:50">-</operator> <literal type="number" pos:start="323:52" pos:end="323:53">13</literal><operator pos:start="323:54" pos:end="323:54">)</operator><operator pos:start="323:55" pos:end="323:55">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:21">rsvd_mask</name> <operator pos:start="325:23" pos:end="325:23">=</operator> <literal type="number" pos:start="325:25" pos:end="325:32">0x200000</literal></expr>;</expr_stmt>

            <goto pos:start="327:13" pos:end="327:40">goto <name pos:start="327:18" pos:end="327:39">do_check_protect_pse36</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="333:9" pos:end="339:9"><if pos:start="333:9" pos:end="339:9">if <condition pos:start="333:12" pos:end="333:38">(<expr pos:start="333:13" pos:end="333:37"><operator pos:start="333:13" pos:end="333:13">!</operator><operator pos:start="333:14" pos:end="333:14">(</operator><name pos:start="333:15" pos:end="333:17">pde</name> <operator pos:start="333:19" pos:end="333:19">&amp;</operator> <name pos:start="333:21" pos:end="333:36">PG_ACCESSED_MASK</name><operator pos:start="333:37" pos:end="333:37">)</operator></expr>)</condition> <block pos:start="333:40" pos:end="339:9">{<block_content pos:start="335:13" pos:end="337:53">

            <expr_stmt pos:start="335:13" pos:end="335:36"><expr pos:start="335:13" pos:end="335:35"><name pos:start="335:13" pos:end="335:15">pde</name> <operator pos:start="335:17" pos:end="335:18">|=</operator> <name pos:start="335:20" pos:end="335:35">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="337:13" pos:end="337:53"><expr pos:start="337:13" pos:end="337:52"><call pos:start="337:13" pos:end="337:52"><name pos:start="337:13" pos:end="337:29">stl_phys_notdirty</name><argument_list pos:start="337:30" pos:end="337:52">(<argument pos:start="337:31" pos:end="337:36"><expr pos:start="337:31" pos:end="337:36"><name pos:start="337:31" pos:end="337:36"><name pos:start="337:31" pos:end="337:32">cs</name><operator pos:start="337:33" pos:end="337:34">-&gt;</operator><name pos:start="337:35" pos:end="337:36">as</name></name></expr></argument>, <argument pos:start="337:39" pos:end="337:46"><expr pos:start="337:39" pos:end="337:46"><name pos:start="337:39" pos:end="337:46">pde_addr</name></expr></argument>, <argument pos:start="337:49" pos:end="337:51"><expr pos:start="337:49" pos:end="337:51"><name pos:start="337:49" pos:end="337:51">pde</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="343:9" pos:end="343:34">/* page directory entry */</comment>

        <expr_stmt pos:start="345:9" pos:end="347:26"><expr pos:start="345:9" pos:end="347:25"><name pos:start="345:9" pos:end="345:16">pte_addr</name> <operator pos:start="345:18" pos:end="345:18">=</operator> <operator pos:start="345:20" pos:end="345:20">(</operator><operator pos:start="345:21" pos:end="345:21">(</operator><name pos:start="345:22" pos:end="345:24">pde</name> <operator pos:start="345:26" pos:end="345:26">&amp;</operator> <operator pos:start="345:28" pos:end="345:28">~</operator><literal type="number" pos:start="345:29" pos:end="345:33">0xfff</literal><operator pos:start="345:34" pos:end="345:34">)</operator> <operator pos:start="345:36" pos:end="345:36">+</operator> <operator pos:start="345:38" pos:end="345:38">(</operator><operator pos:start="345:39" pos:end="345:39">(</operator><name pos:start="345:40" pos:end="345:43">addr</name> <operator pos:start="345:45" pos:end="345:46">&gt;&gt;</operator> <literal type="number" pos:start="345:48" pos:end="345:49">10</literal><operator pos:start="345:50" pos:end="345:50">)</operator> <operator pos:start="345:52" pos:end="345:52">&amp;</operator> <literal type="number" pos:start="345:54" pos:end="345:58">0xffc</literal><operator pos:start="345:59" pos:end="345:59">)</operator><operator pos:start="345:60" pos:end="345:60">)</operator> <operator pos:start="345:62" pos:end="345:62">&amp;</operator>

            <name pos:start="347:13" pos:end="347:25"><name pos:start="347:13" pos:end="347:15">env</name><operator pos:start="347:16" pos:end="347:17">-&gt;</operator><name pos:start="347:18" pos:end="347:25">a20_mask</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="349:9" pos:end="349:41"><expr pos:start="349:9" pos:end="349:40"><name pos:start="349:9" pos:end="349:11">pte</name> <operator pos:start="349:13" pos:end="349:13">=</operator> <call pos:start="349:15" pos:end="349:40"><name pos:start="349:15" pos:end="349:22">ldl_phys</name><argument_list pos:start="349:23" pos:end="349:40">(<argument pos:start="349:24" pos:end="349:29"><expr pos:start="349:24" pos:end="349:29"><name pos:start="349:24" pos:end="349:29"><name pos:start="349:24" pos:end="349:25">cs</name><operator pos:start="349:26" pos:end="349:27">-&gt;</operator><name pos:start="349:28" pos:end="349:29">as</name></name></expr></argument>, <argument pos:start="349:32" pos:end="349:39"><expr pos:start="349:32" pos:end="349:39"><name pos:start="349:32" pos:end="349:39">pte_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="355:9"><if pos:start="351:9" pos:end="355:9">if <condition pos:start="351:12" pos:end="351:37">(<expr pos:start="351:13" pos:end="351:36"><operator pos:start="351:13" pos:end="351:13">!</operator><operator pos:start="351:14" pos:end="351:14">(</operator><name pos:start="351:15" pos:end="351:17">pte</name> <operator pos:start="351:19" pos:end="351:19">&amp;</operator> <name pos:start="351:21" pos:end="351:35">PG_PRESENT_MASK</name><operator pos:start="351:36" pos:end="351:36">)</operator></expr>)</condition> <block pos:start="351:39" pos:end="355:9">{<block_content pos:start="353:13" pos:end="353:26">

            <goto pos:start="353:13" pos:end="353:26">goto <name pos:start="353:18" pos:end="353:25">do_fault</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="357:9" pos:end="357:57">/* combine pde and pte user and rw protections */</comment>

        <expr_stmt pos:start="359:9" pos:end="359:33"><expr pos:start="359:9" pos:end="359:32"><name pos:start="359:9" pos:end="359:12">ptep</name> <operator pos:start="359:14" pos:end="359:15">&amp;=</operator> <name pos:start="359:17" pos:end="359:19">pte</name> <operator pos:start="359:21" pos:end="359:21">|</operator> <name pos:start="359:23" pos:end="359:32">PG_NX_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:25"><expr pos:start="361:9" pos:end="361:24"><name pos:start="361:9" pos:end="361:17">page_size</name> <operator pos:start="361:19" pos:end="361:19">=</operator> <literal type="number" pos:start="361:21" pos:end="361:24">4096</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:22"><expr pos:start="363:9" pos:end="363:21"><name pos:start="363:9" pos:end="363:17">rsvd_mask</name> <operator pos:start="363:19" pos:end="363:19">=</operator> <literal type="number" pos:start="363:21" pos:end="363:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="369:1" pos:end="369:17"><name pos:start="369:1" pos:end="369:16">do_check_protect</name>:</label>

    <expr_stmt pos:start="371:5" pos:end="371:70"><expr pos:start="371:5" pos:end="371:69"><name pos:start="371:5" pos:end="371:13">rsvd_mask</name> <operator pos:start="371:15" pos:end="371:16">|=</operator> <operator pos:start="371:18" pos:end="371:18">(</operator><name pos:start="371:19" pos:end="371:27">page_size</name> <operator pos:start="371:29" pos:end="371:29">-</operator> <literal type="number" pos:start="371:31" pos:end="371:31">1</literal><operator pos:start="371:32" pos:end="371:32">)</operator> <operator pos:start="371:34" pos:end="371:34">&amp;</operator> <name pos:start="371:36" pos:end="371:50">PG_ADDRESS_MASK</name> <operator pos:start="371:52" pos:end="371:52">&amp;</operator> <operator pos:start="371:54" pos:end="371:54">~</operator><name pos:start="371:55" pos:end="371:69">PG_PSE_PAT_MASK</name></expr>;</expr_stmt>

<label pos:start="373:1" pos:end="373:23"><name pos:start="373:1" pos:end="373:22">do_check_protect_pse36</name>:</label>

    <if_stmt pos:start="375:5" pos:end="379:5"><if pos:start="375:5" pos:end="379:5">if <condition pos:start="375:8" pos:end="375:24">(<expr pos:start="375:9" pos:end="375:23"><name pos:start="375:9" pos:end="375:11">pte</name> <operator pos:start="375:13" pos:end="375:13">&amp;</operator> <name pos:start="375:15" pos:end="375:23">rsvd_mask</name></expr>)</condition> <block pos:start="375:26" pos:end="379:5">{<block_content pos:start="377:9" pos:end="377:27">

        <goto pos:start="377:9" pos:end="377:27">goto <name pos:start="377:14" pos:end="377:26">do_fault_rsvd</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:23"><expr pos:start="381:5" pos:end="381:22"><name pos:start="381:5" pos:end="381:8">ptep</name> <operator pos:start="381:10" pos:end="381:11">^=</operator> <name pos:start="381:13" pos:end="381:22">PG_NX_MASK</name></expr>;</expr_stmt>

    <if_stmt pos:start="383:5" pos:end="387:5"><if pos:start="383:5" pos:end="387:5">if <condition pos:start="383:8" pos:end="383:46">(<expr pos:start="383:9" pos:end="383:45"><operator pos:start="383:9" pos:end="383:9">(</operator><name pos:start="383:10" pos:end="383:13">ptep</name> <operator pos:start="383:15" pos:end="383:15">&amp;</operator> <name pos:start="383:17" pos:end="383:26">PG_NX_MASK</name><operator pos:start="383:27" pos:end="383:27">)</operator> <operator pos:start="383:29" pos:end="383:30">&amp;&amp;</operator> <name pos:start="383:32" pos:end="383:40">is_write1</name> <operator pos:start="383:42" pos:end="383:43">==</operator> <literal type="number" pos:start="383:45" pos:end="383:45">2</literal></expr>)</condition> <block pos:start="383:48" pos:end="387:5">{<block_content pos:start="385:9" pos:end="385:30">

        <goto pos:start="385:9" pos:end="385:30">goto <name pos:start="385:14" pos:end="385:29">do_fault_protect</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="389:5" pos:end="445:5">switch <condition pos:start="389:12" pos:end="389:20">(<expr pos:start="389:13" pos:end="389:19"><name pos:start="389:13" pos:end="389:19">mmu_idx</name></expr>)</condition> <block pos:start="389:22" pos:end="445:5">{<block_content pos:start="391:5" pos:end="443:14">

    <case pos:start="391:5" pos:end="391:22">case <expr pos:start="391:10" pos:end="391:21"><name pos:start="391:10" pos:end="391:21">MMU_USER_IDX</name></expr>:</case>

        <if_stmt pos:start="393:9" pos:end="397:9"><if pos:start="393:9" pos:end="397:9">if <condition pos:start="393:12" pos:end="393:35">(<expr pos:start="393:13" pos:end="393:34"><operator pos:start="393:13" pos:end="393:13">!</operator><operator pos:start="393:14" pos:end="393:14">(</operator><name pos:start="393:15" pos:end="393:18">ptep</name> <operator pos:start="393:20" pos:end="393:20">&amp;</operator> <name pos:start="393:22" pos:end="393:33">PG_USER_MASK</name><operator pos:start="393:34" pos:end="393:34">)</operator></expr>)</condition> <block pos:start="393:37" pos:end="397:9">{<block_content pos:start="395:13" pos:end="395:34">

            <goto pos:start="395:13" pos:end="395:34">goto <name pos:start="395:18" pos:end="395:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="399:9" pos:end="403:9"><if pos:start="399:9" pos:end="403:9">if <condition pos:start="399:12" pos:end="399:45">(<expr pos:start="399:13" pos:end="399:44"><name pos:start="399:13" pos:end="399:20">is_write</name> <operator pos:start="399:22" pos:end="399:23">&amp;&amp;</operator> <operator pos:start="399:25" pos:end="399:25">!</operator><operator pos:start="399:26" pos:end="399:26">(</operator><name pos:start="399:27" pos:end="399:30">ptep</name> <operator pos:start="399:32" pos:end="399:32">&amp;</operator> <name pos:start="399:34" pos:end="399:43">PG_RW_MASK</name><operator pos:start="399:44" pos:end="399:44">)</operator></expr>)</condition> <block pos:start="399:47" pos:end="403:9">{<block_content pos:start="401:13" pos:end="401:34">

            <goto pos:start="401:13" pos:end="401:34">goto <name pos:start="401:18" pos:end="401:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="405:9" pos:end="405:14">break;</break>



    <case pos:start="409:5" pos:end="409:23">case <expr pos:start="409:10" pos:end="409:22"><name pos:start="409:10" pos:end="409:22">MMU_KSMAP_IDX</name></expr>:</case>

        <if_stmt pos:start="411:9" pos:end="415:9"><if pos:start="411:9" pos:end="415:9">if <condition pos:start="411:12" pos:end="411:52">(<expr pos:start="411:13" pos:end="411:51"><name pos:start="411:13" pos:end="411:21">is_write1</name> <operator pos:start="411:23" pos:end="411:24">!=</operator> <literal type="number" pos:start="411:26" pos:end="411:26">2</literal> <operator pos:start="411:28" pos:end="411:29">&amp;&amp;</operator> <operator pos:start="411:31" pos:end="411:31">(</operator><name pos:start="411:32" pos:end="411:35">ptep</name> <operator pos:start="411:37" pos:end="411:37">&amp;</operator> <name pos:start="411:39" pos:end="411:50">PG_USER_MASK</name><operator pos:start="411:51" pos:end="411:51">)</operator></expr>)</condition> <block pos:start="411:54" pos:end="415:9">{<block_content pos:start="413:13" pos:end="413:34">

            <goto pos:start="413:13" pos:end="413:34">goto <name pos:start="413:18" pos:end="413:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="417:9" pos:end="417:26">/* fall through */</comment>

    <case pos:start="419:5" pos:end="419:25">case <expr pos:start="419:10" pos:end="419:24"><name pos:start="419:10" pos:end="419:24">MMU_KNOSMAP_IDX</name></expr>:</case>

        <if_stmt pos:start="421:9" pos:end="427:9"><if pos:start="421:9" pos:end="427:9">if <condition pos:start="421:12" pos:end="423:34">(<expr pos:start="421:13" pos:end="423:33"><name pos:start="421:13" pos:end="421:21">is_write1</name> <operator pos:start="421:23" pos:end="421:24">==</operator> <literal type="number" pos:start="421:26" pos:end="421:26">2</literal> <operator pos:start="421:28" pos:end="421:29">&amp;&amp;</operator> <operator pos:start="421:31" pos:end="421:31">(</operator><name pos:start="421:32" pos:end="421:41"><name pos:start="421:32" pos:end="421:34">env</name><operator pos:start="421:35" pos:end="421:36">-&gt;</operator><name pos:start="421:37" pos:end="421:38">cr</name><index pos:start="421:39" pos:end="421:41">[<expr pos:start="421:40" pos:end="421:40"><literal type="number" pos:start="421:40" pos:end="421:40">4</literal></expr>]</index></name> <operator pos:start="421:43" pos:end="421:43">&amp;</operator> <name pos:start="421:45" pos:end="421:57">CR4_SMEP_MASK</name><operator pos:start="421:58" pos:end="421:58">)</operator> <operator pos:start="421:60" pos:end="421:61">&amp;&amp;</operator>

            <operator pos:start="423:13" pos:end="423:13">(</operator><name pos:start="423:14" pos:end="423:17">ptep</name> <operator pos:start="423:19" pos:end="423:19">&amp;</operator> <name pos:start="423:21" pos:end="423:32">PG_USER_MASK</name><operator pos:start="423:33" pos:end="423:33">)</operator></expr>)</condition> <block pos:start="423:36" pos:end="427:9">{<block_content pos:start="425:13" pos:end="425:34">

            <goto pos:start="425:13" pos:end="425:34">goto <name pos:start="425:18" pos:end="425:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="429:9" pos:end="435:9"><if pos:start="429:9" pos:end="435:9">if <condition pos:start="429:12" pos:end="431:45">(<expr pos:start="429:13" pos:end="431:44"><operator pos:start="429:13" pos:end="429:13">(</operator><name pos:start="429:14" pos:end="429:23"><name pos:start="429:14" pos:end="429:16">env</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:20">cr</name><index pos:start="429:21" pos:end="429:23">[<expr pos:start="429:22" pos:end="429:22"><literal type="number" pos:start="429:22" pos:end="429:22">0</literal></expr>]</index></name> <operator pos:start="429:25" pos:end="429:25">&amp;</operator> <name pos:start="429:27" pos:end="429:37">CR0_WP_MASK</name><operator pos:start="429:38" pos:end="429:38">)</operator> <operator pos:start="429:40" pos:end="429:41">&amp;&amp;</operator>

            <name pos:start="431:13" pos:end="431:20">is_write</name> <operator pos:start="431:22" pos:end="431:23">&amp;&amp;</operator> <operator pos:start="431:25" pos:end="431:25">!</operator><operator pos:start="431:26" pos:end="431:26">(</operator><name pos:start="431:27" pos:end="431:30">ptep</name> <operator pos:start="431:32" pos:end="431:32">&amp;</operator> <name pos:start="431:34" pos:end="431:43">PG_RW_MASK</name><operator pos:start="431:44" pos:end="431:44">)</operator></expr>)</condition> <block pos:start="431:47" pos:end="435:9">{<block_content pos:start="433:13" pos:end="433:34">

            <goto pos:start="433:13" pos:end="433:34">goto <name pos:start="433:18" pos:end="433:33">do_fault_protect</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <break pos:start="437:9" pos:end="437:14">break;</break>



    <default pos:start="441:5" pos:end="441:12">default:</default> <comment type="block" pos:start="441:14" pos:end="441:32">/* cannot happen */</comment>

        <break pos:start="443:9" pos:end="443:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="447:5" pos:end="447:50"><expr pos:start="447:5" pos:end="447:49"><name pos:start="447:5" pos:end="447:12">is_dirty</name> <operator pos:start="447:14" pos:end="447:14">=</operator> <name pos:start="447:16" pos:end="447:23">is_write</name> <operator pos:start="447:25" pos:end="447:26">&amp;&amp;</operator> <operator pos:start="447:28" pos:end="447:28">!</operator><operator pos:start="447:29" pos:end="447:29">(</operator><name pos:start="447:30" pos:end="447:32">pte</name> <operator pos:start="447:34" pos:end="447:34">&amp;</operator> <name pos:start="447:36" pos:end="447:48">PG_DIRTY_MASK</name><operator pos:start="447:49" pos:end="447:49">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="449:5" pos:end="461:5"><if pos:start="449:5" pos:end="461:5">if <condition pos:start="449:8" pos:end="449:46">(<expr pos:start="449:9" pos:end="449:45"><operator pos:start="449:9" pos:end="449:9">!</operator><operator pos:start="449:10" pos:end="449:10">(</operator><name pos:start="449:11" pos:end="449:13">pte</name> <operator pos:start="449:15" pos:end="449:15">&amp;</operator> <name pos:start="449:17" pos:end="449:32">PG_ACCESSED_MASK</name><operator pos:start="449:33" pos:end="449:33">)</operator> <operator pos:start="449:35" pos:end="449:36">||</operator> <name pos:start="449:38" pos:end="449:45">is_dirty</name></expr>)</condition> <block pos:start="449:48" pos:end="461:5">{<block_content pos:start="451:9" pos:end="459:49">

        <expr_stmt pos:start="451:9" pos:end="451:32"><expr pos:start="451:9" pos:end="451:31"><name pos:start="451:9" pos:end="451:11">pte</name> <operator pos:start="451:13" pos:end="451:14">|=</operator> <name pos:start="451:16" pos:end="451:31">PG_ACCESSED_MASK</name></expr>;</expr_stmt>

        <if_stmt pos:start="453:9" pos:end="457:9"><if pos:start="453:9" pos:end="457:9">if <condition pos:start="453:12" pos:end="453:21">(<expr pos:start="453:13" pos:end="453:20"><name pos:start="453:13" pos:end="453:20">is_dirty</name></expr>)</condition> <block pos:start="453:23" pos:end="457:9">{<block_content pos:start="455:13" pos:end="455:33">

            <expr_stmt pos:start="455:13" pos:end="455:33"><expr pos:start="455:13" pos:end="455:32"><name pos:start="455:13" pos:end="455:15">pte</name> <operator pos:start="455:17" pos:end="455:18">|=</operator> <name pos:start="455:20" pos:end="455:32">PG_DIRTY_MASK</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="459:9" pos:end="459:49"><expr pos:start="459:9" pos:end="459:48"><call pos:start="459:9" pos:end="459:48"><name pos:start="459:9" pos:end="459:25">stl_phys_notdirty</name><argument_list pos:start="459:26" pos:end="459:48">(<argument pos:start="459:27" pos:end="459:32"><expr pos:start="459:27" pos:end="459:32"><name pos:start="459:27" pos:end="459:32"><name pos:start="459:27" pos:end="459:28">cs</name><operator pos:start="459:29" pos:end="459:30">-&gt;</operator><name pos:start="459:31" pos:end="459:32">as</name></name></expr></argument>, <argument pos:start="459:35" pos:end="459:42"><expr pos:start="459:35" pos:end="459:42"><name pos:start="459:35" pos:end="459:42">pte_addr</name></expr></argument>, <argument pos:start="459:45" pos:end="459:47"><expr pos:start="459:45" pos:end="459:47"><name pos:start="459:45" pos:end="459:47">pte</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="465:5" pos:end="465:40">/* the page can be put in the TLB */</comment>

    <expr_stmt pos:start="467:5" pos:end="467:21"><expr pos:start="467:5" pos:end="467:20"><name pos:start="467:5" pos:end="467:8">prot</name> <operator pos:start="467:10" pos:end="467:10">=</operator> <name pos:start="467:12" pos:end="467:20">PAGE_READ</name></expr>;</expr_stmt>

    <if_stmt pos:start="469:5" pos:end="471:26"><if pos:start="469:5" pos:end="471:26">if <condition pos:start="469:8" pos:end="469:29">(<expr pos:start="469:9" pos:end="469:28"><operator pos:start="469:9" pos:end="469:9">!</operator><operator pos:start="469:10" pos:end="469:10">(</operator><name pos:start="469:11" pos:end="469:14">ptep</name> <operator pos:start="469:16" pos:end="469:16">&amp;</operator> <name pos:start="469:18" pos:end="469:27">PG_NX_MASK</name><operator pos:start="469:28" pos:end="469:28">)</operator></expr>)</condition><block type="pseudo" pos:start="471:9" pos:end="471:26"><block_content pos:start="471:9" pos:end="471:26">

        <expr_stmt pos:start="471:9" pos:end="471:26"><expr pos:start="471:9" pos:end="471:25"><name pos:start="471:9" pos:end="471:12">prot</name> <operator pos:start="471:14" pos:end="471:15">|=</operator> <name pos:start="471:17" pos:end="471:25">PAGE_EXEC</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="473:5" pos:end="495:5"><if pos:start="473:5" pos:end="495:5">if <condition pos:start="473:8" pos:end="473:28">(<expr pos:start="473:9" pos:end="473:27"><name pos:start="473:9" pos:end="473:11">pte</name> <operator pos:start="473:13" pos:end="473:13">&amp;</operator> <name pos:start="473:15" pos:end="473:27">PG_DIRTY_MASK</name></expr>)</condition> <block pos:start="473:30" pos:end="495:5">{<block_content pos:start="479:9" pos:end="493:9">

        <comment type="block" pos:start="475:9" pos:end="477:30">/* only set write access if already dirty... otherwise wait

           for dirty access */</comment>

        <if_stmt pos:start="479:9" pos:end="493:9"><if pos:start="479:9" pos:end="485:9">if <condition pos:start="479:12" pos:end="479:20">(<expr pos:start="479:13" pos:end="479:19"><name pos:start="479:13" pos:end="479:19">is_user</name></expr>)</condition> <block pos:start="479:22" pos:end="485:9">{<block_content pos:start="481:13" pos:end="483:35">

            <if_stmt pos:start="481:13" pos:end="483:35"><if pos:start="481:13" pos:end="483:35">if <condition pos:start="481:16" pos:end="481:34">(<expr pos:start="481:17" pos:end="481:33"><name pos:start="481:17" pos:end="481:20">ptep</name> <operator pos:start="481:22" pos:end="481:22">&amp;</operator> <name pos:start="481:24" pos:end="481:33">PG_RW_MASK</name></expr>)</condition><block type="pseudo" pos:start="483:17" pos:end="483:35"><block_content pos:start="483:17" pos:end="483:35">

                <expr_stmt pos:start="483:17" pos:end="483:35"><expr pos:start="483:17" pos:end="483:34"><name pos:start="483:17" pos:end="483:20">prot</name> <operator pos:start="483:22" pos:end="483:23">|=</operator> <name pos:start="483:25" pos:end="483:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="485:11" pos:end="493:9">else <block pos:start="485:16" pos:end="493:9">{<block_content pos:start="487:13" pos:end="491:35">

            <if_stmt pos:start="487:13" pos:end="491:35"><if pos:start="487:13" pos:end="491:35">if <condition pos:start="487:16" pos:end="489:36">(<expr pos:start="487:17" pos:end="489:35"><operator pos:start="487:17" pos:end="487:17">!</operator><operator pos:start="487:18" pos:end="487:18">(</operator><name pos:start="487:19" pos:end="487:28"><name pos:start="487:19" pos:end="487:21">env</name><operator pos:start="487:22" pos:end="487:23">-&gt;</operator><name pos:start="487:24" pos:end="487:25">cr</name><index pos:start="487:26" pos:end="487:28">[<expr pos:start="487:27" pos:end="487:27"><literal type="number" pos:start="487:27" pos:end="487:27">0</literal></expr>]</index></name> <operator pos:start="487:30" pos:end="487:30">&amp;</operator> <name pos:start="487:32" pos:end="487:42">CR0_WP_MASK</name><operator pos:start="487:43" pos:end="487:43">)</operator> <operator pos:start="487:45" pos:end="487:46">||</operator>

                <operator pos:start="489:17" pos:end="489:17">(</operator><name pos:start="489:18" pos:end="489:21">ptep</name> <operator pos:start="489:23" pos:end="489:23">&amp;</operator> <name pos:start="489:25" pos:end="489:34">PG_RW_MASK</name><operator pos:start="489:35" pos:end="489:35">)</operator></expr>)</condition><block type="pseudo" pos:start="491:17" pos:end="491:35"><block_content pos:start="491:17" pos:end="491:35">

                <expr_stmt pos:start="491:17" pos:end="491:35"><expr pos:start="491:17" pos:end="491:34"><name pos:start="491:17" pos:end="491:20">prot</name> <operator pos:start="491:22" pos:end="491:23">|=</operator> <name pos:start="491:25" pos:end="491:34">PAGE_WRITE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

 <label pos:start="497:2" pos:end="497:12"><name pos:start="497:2" pos:end="497:11">do_mapping</name>:</label>

    <expr_stmt pos:start="499:5" pos:end="499:30"><expr pos:start="499:5" pos:end="499:29"><name pos:start="499:5" pos:end="499:7">pte</name> <operator pos:start="499:9" pos:end="499:9">=</operator> <name pos:start="499:11" pos:end="499:13">pte</name> <operator pos:start="499:15" pos:end="499:15">&amp;</operator> <name pos:start="499:17" pos:end="499:29"><name pos:start="499:17" pos:end="499:19">env</name><operator pos:start="499:20" pos:end="499:21">-&gt;</operator><name pos:start="499:22" pos:end="499:29">a20_mask</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="503:5" pos:end="503:28">/* align to page_size */</comment>

    <expr_stmt pos:start="505:5" pos:end="505:46"><expr pos:start="505:5" pos:end="505:45"><name pos:start="505:5" pos:end="505:7">pte</name> <operator pos:start="505:9" pos:end="505:10">&amp;=</operator> <name pos:start="505:12" pos:end="505:26">PG_ADDRESS_MASK</name> <operator pos:start="505:28" pos:end="505:28">&amp;</operator> <operator pos:start="505:30" pos:end="505:30">~</operator><operator pos:start="505:31" pos:end="505:31">(</operator><name pos:start="505:32" pos:end="505:40">page_size</name> <operator pos:start="505:42" pos:end="505:42">-</operator> <literal type="number" pos:start="505:44" pos:end="505:44">1</literal><operator pos:start="505:45" pos:end="505:45">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="509:5" pos:end="511:35">/* Even if 4MB pages, we map only one 4KB page in the cache to

       avoid filling it too fast */</comment>

    <expr_stmt pos:start="513:5" pos:end="513:36"><expr pos:start="513:5" pos:end="513:35"><name pos:start="513:5" pos:end="513:9">vaddr</name> <operator pos:start="513:11" pos:end="513:11">=</operator> <name pos:start="513:13" pos:end="513:16">addr</name> <operator pos:start="513:18" pos:end="513:18">&amp;</operator> <name pos:start="513:20" pos:end="513:35">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

    <expr_stmt pos:start="515:5" pos:end="515:42"><expr pos:start="515:5" pos:end="515:41"><name pos:start="515:5" pos:end="515:15">page_offset</name> <operator pos:start="515:17" pos:end="515:17">=</operator> <name pos:start="515:19" pos:end="515:23">vaddr</name> <operator pos:start="515:25" pos:end="515:25">&amp;</operator> <operator pos:start="515:27" pos:end="515:27">(</operator><name pos:start="515:28" pos:end="515:36">page_size</name> <operator pos:start="515:38" pos:end="515:38">-</operator> <literal type="number" pos:start="515:40" pos:end="515:40">1</literal><operator pos:start="515:41" pos:end="515:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="517:5" pos:end="517:30"><expr pos:start="517:5" pos:end="517:29"><name pos:start="517:5" pos:end="517:9">paddr</name> <operator pos:start="517:11" pos:end="517:11">=</operator> <name pos:start="517:13" pos:end="517:15">pte</name> <operator pos:start="517:17" pos:end="517:17">+</operator> <name pos:start="517:19" pos:end="517:29">page_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="521:5" pos:end="521:61"><expr pos:start="521:5" pos:end="521:60"><call pos:start="521:5" pos:end="521:60"><name pos:start="521:5" pos:end="521:16">tlb_set_page</name><argument_list pos:start="521:17" pos:end="521:60">(<argument pos:start="521:18" pos:end="521:19"><expr pos:start="521:18" pos:end="521:19"><name pos:start="521:18" pos:end="521:19">cs</name></expr></argument>, <argument pos:start="521:22" pos:end="521:26"><expr pos:start="521:22" pos:end="521:26"><name pos:start="521:22" pos:end="521:26">vaddr</name></expr></argument>, <argument pos:start="521:29" pos:end="521:33"><expr pos:start="521:29" pos:end="521:33"><name pos:start="521:29" pos:end="521:33">paddr</name></expr></argument>, <argument pos:start="521:36" pos:end="521:39"><expr pos:start="521:36" pos:end="521:39"><name pos:start="521:36" pos:end="521:39">prot</name></expr></argument>, <argument pos:start="521:42" pos:end="521:48"><expr pos:start="521:42" pos:end="521:48"><name pos:start="521:42" pos:end="521:48">mmu_idx</name></expr></argument>, <argument pos:start="521:51" pos:end="521:59"><expr pos:start="521:51" pos:end="521:59"><name pos:start="521:51" pos:end="521:59">page_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="523:5" pos:end="523:13">return <expr pos:start="523:12" pos:end="523:12"><literal type="number" pos:start="523:12" pos:end="523:12">0</literal></expr>;</return>

 <label pos:start="525:2" pos:end="525:15"><name pos:start="525:2" pos:end="525:14">do_fault_rsvd</name>:</label>

    <expr_stmt pos:start="527:5" pos:end="527:37"><expr pos:start="527:5" pos:end="527:36"><name pos:start="527:5" pos:end="527:14">error_code</name> <operator pos:start="527:16" pos:end="527:17">|=</operator> <name pos:start="527:19" pos:end="527:36">PG_ERROR_RSVD_MASK</name></expr>;</expr_stmt>

 <label pos:start="529:2" pos:end="529:18"><name pos:start="529:2" pos:end="529:17">do_fault_protect</name>:</label>

    <expr_stmt pos:start="531:5" pos:end="531:34"><expr pos:start="531:5" pos:end="531:33"><name pos:start="531:5" pos:end="531:14">error_code</name> <operator pos:start="531:16" pos:end="531:17">|=</operator> <name pos:start="531:19" pos:end="531:33">PG_ERROR_P_MASK</name></expr>;</expr_stmt>

 <label pos:start="533:2" pos:end="533:10"><name pos:start="533:2" pos:end="533:9">do_fault</name>:</label>

    <expr_stmt pos:start="535:5" pos:end="535:47"><expr pos:start="535:5" pos:end="535:46"><name pos:start="535:5" pos:end="535:14">error_code</name> <operator pos:start="535:16" pos:end="535:17">|=</operator> <operator pos:start="535:19" pos:end="535:19">(</operator><name pos:start="535:20" pos:end="535:27">is_write</name> <operator pos:start="535:29" pos:end="535:30">&lt;&lt;</operator> <name pos:start="535:32" pos:end="535:45">PG_ERROR_W_BIT</name><operator pos:start="535:46" pos:end="535:46">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="537:5" pos:end="539:38"><if pos:start="537:5" pos:end="539:38">if <condition pos:start="537:8" pos:end="537:16">(<expr pos:start="537:9" pos:end="537:15"><name pos:start="537:9" pos:end="537:15">is_user</name></expr>)</condition><block type="pseudo" pos:start="539:9" pos:end="539:38"><block_content pos:start="539:9" pos:end="539:38">

        <expr_stmt pos:start="539:9" pos:end="539:38"><expr pos:start="539:9" pos:end="539:37"><name pos:start="539:9" pos:end="539:18">error_code</name> <operator pos:start="539:20" pos:end="539:21">|=</operator> <name pos:start="539:23" pos:end="539:37">PG_ERROR_U_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="541:5" pos:end="549:40"><if pos:start="541:5" pos:end="549:40">if <condition pos:start="541:8" pos:end="547:39">(<expr pos:start="541:9" pos:end="547:38"><name pos:start="541:9" pos:end="541:17">is_write1</name> <operator pos:start="541:19" pos:end="541:20">==</operator> <literal type="number" pos:start="541:22" pos:end="541:22">2</literal> <operator pos:start="541:24" pos:end="541:25">&amp;&amp;</operator>

        <operator pos:start="543:9" pos:end="543:9">(</operator><operator pos:start="543:10" pos:end="543:10">(</operator><operator pos:start="543:11" pos:end="543:11">(</operator><name pos:start="543:12" pos:end="543:20"><name pos:start="543:12" pos:end="543:14">env</name><operator pos:start="543:15" pos:end="543:16">-&gt;</operator><name pos:start="543:17" pos:end="543:20">efer</name></name> <operator pos:start="543:22" pos:end="543:22">&amp;</operator> <name pos:start="543:24" pos:end="543:35">MSR_EFER_NXE</name><operator pos:start="543:36" pos:end="543:36">)</operator> <operator pos:start="543:38" pos:end="543:39">&amp;&amp;</operator>

          <operator pos:start="545:11" pos:end="545:11">(</operator><name pos:start="545:12" pos:end="545:21"><name pos:start="545:12" pos:end="545:14">env</name><operator pos:start="545:15" pos:end="545:16">-&gt;</operator><name pos:start="545:17" pos:end="545:18">cr</name><index pos:start="545:19" pos:end="545:21">[<expr pos:start="545:20" pos:end="545:20"><literal type="number" pos:start="545:20" pos:end="545:20">4</literal></expr>]</index></name> <operator pos:start="545:23" pos:end="545:23">&amp;</operator> <name pos:start="545:25" pos:end="545:36">CR4_PAE_MASK</name><operator pos:start="545:37" pos:end="545:37">)</operator><operator pos:start="545:38" pos:end="545:38">)</operator> <operator pos:start="545:40" pos:end="545:41">||</operator>

         <operator pos:start="547:10" pos:end="547:10">(</operator><name pos:start="547:11" pos:end="547:20"><name pos:start="547:11" pos:end="547:13">env</name><operator pos:start="547:14" pos:end="547:15">-&gt;</operator><name pos:start="547:16" pos:end="547:17">cr</name><index pos:start="547:18" pos:end="547:20">[<expr pos:start="547:19" pos:end="547:19"><literal type="number" pos:start="547:19" pos:end="547:19">4</literal></expr>]</index></name> <operator pos:start="547:22" pos:end="547:22">&amp;</operator> <name pos:start="547:24" pos:end="547:36">CR4_SMEP_MASK</name><operator pos:start="547:37" pos:end="547:37">)</operator><operator pos:start="547:38" pos:end="547:38">)</operator></expr>)</condition><block type="pseudo" pos:start="549:9" pos:end="549:40"><block_content pos:start="549:9" pos:end="549:40">

        <expr_stmt pos:start="549:9" pos:end="549:40"><expr pos:start="549:9" pos:end="549:39"><name pos:start="549:9" pos:end="549:18">error_code</name> <operator pos:start="549:20" pos:end="549:21">|=</operator> <name pos:start="549:23" pos:end="549:39">PG_ERROR_I_D_MASK</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="551:5" pos:end="565:5"><if pos:start="551:5" pos:end="561:5">if <condition pos:start="551:8" pos:end="551:55">(<expr pos:start="551:9" pos:end="551:54"><name pos:start="551:9" pos:end="551:33"><name pos:start="551:9" pos:end="551:11">env</name><operator pos:start="551:12" pos:end="551:13">-&gt;</operator><name pos:start="551:14" pos:end="551:33">intercept_exceptions</name></name> <operator pos:start="551:35" pos:end="551:35">&amp;</operator> <operator pos:start="551:37" pos:end="551:37">(</operator><literal type="number" pos:start="551:38" pos:end="551:38">1</literal> <operator pos:start="551:40" pos:end="551:41">&lt;&lt;</operator> <name pos:start="551:43" pos:end="551:53">EXCP0E_PAGE</name><operator pos:start="551:54" pos:end="551:54">)</operator></expr>)</condition> <block pos:start="551:57" pos:end="561:5">{<block_content pos:start="555:9" pos:end="559:23">

        <comment type="block" pos:start="553:9" pos:end="553:55">/* cr2 is not modified in case of exceptions */</comment>

        <expr_stmt pos:start="555:9" pos:end="559:23"><expr pos:start="555:9" pos:end="559:22"><call pos:start="555:9" pos:end="559:22"><name pos:start="555:9" pos:end="555:16">stq_phys</name><argument_list pos:start="555:17" pos:end="559:22">(<argument pos:start="555:18" pos:end="555:23"><expr pos:start="555:18" pos:end="555:23"><name pos:start="555:18" pos:end="555:23"><name pos:start="555:18" pos:end="555:19">cs</name><operator pos:start="555:20" pos:end="555:21">-&gt;</operator><name pos:start="555:22" pos:end="555:23">as</name></name></expr></argument>,

                 <argument pos:start="557:18" pos:end="557:74"><expr pos:start="557:18" pos:end="557:74"><name pos:start="557:18" pos:end="557:29"><name pos:start="557:18" pos:end="557:20">env</name><operator pos:start="557:21" pos:end="557:22">-&gt;</operator><name pos:start="557:23" pos:end="557:29">vm_vmcb</name></name> <operator pos:start="557:31" pos:end="557:31">+</operator> <call pos:start="557:33" pos:end="557:74"><name pos:start="557:33" pos:end="557:40">offsetof</name><argument_list pos:start="557:41" pos:end="557:74">(<argument pos:start="557:42" pos:end="557:52"><expr pos:start="557:42" pos:end="557:52">struct <name pos:start="557:49" pos:end="557:52">vmcb</name></expr></argument>, <argument pos:start="557:55" pos:end="557:73"><expr pos:start="557:55" pos:end="557:73"><name pos:start="557:55" pos:end="557:73"><name pos:start="557:55" pos:end="557:61">control</name><operator pos:start="557:62" pos:end="557:62">.</operator><name pos:start="557:63" pos:end="557:73">exit_info_2</name></name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="559:18" pos:end="559:21"><expr pos:start="559:18" pos:end="559:21"><name pos:start="559:18" pos:end="559:21">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="561:7" pos:end="565:5">else <block pos:start="561:12" pos:end="565:5">{<block_content pos:start="563:9" pos:end="563:26">

        <expr_stmt pos:start="563:9" pos:end="563:26"><expr pos:start="563:9" pos:end="563:25"><name pos:start="563:9" pos:end="563:18"><name pos:start="563:9" pos:end="563:11">env</name><operator pos:start="563:12" pos:end="563:13">-&gt;</operator><name pos:start="563:14" pos:end="563:15">cr</name><index pos:start="563:16" pos:end="563:18">[<expr pos:start="563:17" pos:end="563:17"><literal type="number" pos:start="563:17" pos:end="563:17">2</literal></expr>]</index></name> <operator pos:start="563:20" pos:end="563:20">=</operator> <name pos:start="563:22" pos:end="563:25">addr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="567:5" pos:end="567:33"><expr pos:start="567:5" pos:end="567:32"><name pos:start="567:5" pos:end="567:19"><name pos:start="567:5" pos:end="567:7">env</name><operator pos:start="567:8" pos:end="567:9">-&gt;</operator><name pos:start="567:10" pos:end="567:19">error_code</name></name> <operator pos:start="567:21" pos:end="567:21">=</operator> <name pos:start="567:23" pos:end="567:32">error_code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="569:5" pos:end="569:38"><expr pos:start="569:5" pos:end="569:37"><name pos:start="569:5" pos:end="569:23"><name pos:start="569:5" pos:end="569:6">cs</name><operator pos:start="569:7" pos:end="569:8">-&gt;</operator><name pos:start="569:9" pos:end="569:23">exception_index</name></name> <operator pos:start="569:25" pos:end="569:25">=</operator> <name pos:start="569:27" pos:end="569:37">EXCP0E_PAGE</name></expr>;</expr_stmt>

    <return pos:start="571:5" pos:end="571:13">return <expr pos:start="571:12" pos:end="571:12"><literal type="number" pos:start="571:12" pos:end="571:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
