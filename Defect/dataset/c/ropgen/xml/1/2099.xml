<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2099.c" pos:tabs="8"><function pos:start="1:1" pos:end="24:1"><type pos:start="1:1" pos:end="1:30"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:28">MatroskaLevel1Element</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:55">matroska_find_level1_elem</name><parameter_list pos:start="1:56" pos:end="2:68">(<parameter pos:start="1:57" pos:end="1:86"><decl pos:start="1:57" pos:end="1:86"><type pos:start="1:57" pos:end="1:86"><name pos:start="1:57" pos:end="1:76">MatroskaDemuxContext</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:86">matroska</name></decl></parameter>,
                                                        <parameter pos:start="2:57" pos:end="2:67"><decl pos:start="2:57" pos:end="2:67"><type pos:start="2:57" pos:end="2:67"><name pos:start="2:57" pos:end="2:64">uint32_t</name></type> <name pos:start="2:66" pos:end="2:67">id</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="24:1">{<block_content pos:start="4:5" pos:end="23:16">
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:27"><name pos:start="5:5" pos:end="5:25">MatroskaLevel1Element</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:31">elem</name></decl>;</decl_stmt>
    <comment type="line" pos:start="6:5" pos:end="6:48">// Some files link to all clusters; useless.</comment>
    <if_stmt pos:start="7:5" pos:end="14:5"><if pos:start="7:5" pos:end="14:5">if <condition pos:start="7:8" pos:end="7:34">(<expr pos:start="7:9" pos:end="7:33"><name pos:start="7:9" pos:end="7:10">id</name> <operator pos:start="7:12" pos:end="7:13">==</operator> <name pos:start="7:15" pos:end="7:33">MATROSKA_ID_CLUSTER</name></expr>)</condition><block type="pseudo" pos:start="9:5" pos:end="14:5"><block_content pos:start="9:5" pos:end="14:5">
    <comment type="line" pos:start="8:5" pos:end="8:39">// There can be multiple seekheads.</comment>
    <if_stmt pos:start="9:5" pos:end="14:5"><if pos:start="9:5" pos:end="14:5">if <condition pos:start="9:8" pos:end="9:35">(<expr pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:10">id</name> <operator pos:start="9:12" pos:end="9:13">!=</operator> <name pos:start="9:15" pos:end="9:34">MATROSKA_ID_SEEKHEAD</name></expr>)</condition> <block pos:start="9:37" pos:end="14:5">{<block_content pos:start="10:9" pos:end="13:9">
        <for pos:start="10:9" pos:end="13:9">for <control pos:start="10:13" pos:end="10:56">(<init pos:start="10:14" pos:end="10:19"><expr pos:start="10:14" pos:end="10:18"><name pos:start="10:14" pos:end="10:14">i</name> <operator pos:start="10:16" pos:end="10:16">=</operator> <literal type="number" pos:start="10:18" pos:end="10:18">0</literal></expr>;</init> <condition pos:start="10:21" pos:end="10:51"><expr pos:start="10:21" pos:end="10:50"><name pos:start="10:21" pos:end="10:21">i</name> <operator pos:start="10:23" pos:end="10:23">&lt;</operator> <name pos:start="10:25" pos:end="10:50"><name pos:start="10:25" pos:end="10:32">matroska</name><operator pos:start="10:33" pos:end="10:34">-&gt;</operator><name pos:start="10:35" pos:end="10:50">num_level1_elems</name></name></expr>;</condition> <incr pos:start="10:53" pos:end="10:55"><expr pos:start="10:53" pos:end="10:55"><name pos:start="10:53" pos:end="10:53">i</name><operator pos:start="10:54" pos:end="10:55">++</operator></expr></incr>)</control> <block pos:start="10:58" pos:end="13:9">{<block_content pos:start="11:13" pos:end="12:50">
            <if_stmt pos:start="11:13" pos:end="12:50"><if pos:start="11:13" pos:end="12:50">if <condition pos:start="11:16" pos:end="11:51">(<expr pos:start="11:17" pos:end="11:50"><name pos:start="11:17" pos:end="11:41"><name pos:start="11:17" pos:end="11:24">matroska</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:38">level1_elems</name><index pos:start="11:39" pos:end="11:41">[<expr pos:start="11:40" pos:end="11:40"><name pos:start="11:40" pos:end="11:40">i</name></expr>]</index></name><operator pos:start="11:42" pos:end="11:42">.</operator><name pos:start="11:43" pos:end="11:44">id</name> <operator pos:start="11:46" pos:end="11:47">==</operator> <name pos:start="11:49" pos:end="11:50">id</name></expr>)</condition><block type="pseudo" pos:start="12:17" pos:end="12:50"><block_content pos:start="12:17" pos:end="12:50">
                <return pos:start="12:17" pos:end="12:50">return <expr pos:start="12:24" pos:end="12:49"><operator pos:start="12:24" pos:end="12:24">&amp;</operator><name pos:start="12:25" pos:end="12:49"><name pos:start="12:25" pos:end="12:32">matroska</name><operator pos:start="12:33" pos:end="12:34">-&gt;</operator><name pos:start="12:35" pos:end="12:46">level1_elems</name><index pos:start="12:47" pos:end="12:49">[<expr pos:start="12:48" pos:end="12:48"><name pos:start="12:48" pos:end="12:48">i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></for>
    </block_content>}</block></if></if_stmt></block_content></block></if></if_stmt>
    <comment type="line" pos:start="15:5" pos:end="15:62">// Only a completely broken file would have more elements.</comment>
    <comment type="line" pos:start="16:5" pos:end="16:74">// It also provides a low-effort way to escape from circular seekheads</comment>
    <comment type="line" pos:start="17:5" pos:end="17:49">// (every iteration will add a level1 entry).</comment>
    <if_stmt pos:start="18:5" pos:end="20:5"><if pos:start="18:5" pos:end="20:5">if <condition pos:start="18:8" pos:end="18:77">(<expr pos:start="18:9" pos:end="18:76"><name pos:start="18:9" pos:end="18:34"><name pos:start="18:9" pos:end="18:16">matroska</name><operator pos:start="18:17" pos:end="18:18">-&gt;</operator><name pos:start="18:19" pos:end="18:34">num_level1_elems</name></name> <operator pos:start="18:36" pos:end="18:37">&gt;=</operator> <call pos:start="18:39" pos:end="18:76"><name pos:start="18:39" pos:end="18:52">FF_ARRAY_ELEMS</name><argument_list pos:start="18:53" pos:end="18:76">(<argument pos:start="18:54" pos:end="18:75"><expr pos:start="18:54" pos:end="18:75"><name pos:start="18:54" pos:end="18:75"><name pos:start="18:54" pos:end="18:61">matroska</name><operator pos:start="18:62" pos:end="18:63">-&gt;</operator><name pos:start="18:64" pos:end="18:75">level1_elems</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="18:79" pos:end="20:5">{<block_content pos:start="19:9" pos:end="19:97">
        <expr_stmt pos:start="19:9" pos:end="19:97"><expr pos:start="19:9" pos:end="19:96"><call pos:start="19:9" pos:end="19:96"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:96">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:23">matroska</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:28">ctx</name></name></expr></argument>, <argument pos:start="19:31" pos:end="19:42"><expr pos:start="19:31" pos:end="19:42"><name pos:start="19:31" pos:end="19:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:45" pos:end="19:95"><expr pos:start="19:45" pos:end="19:95"><literal type="string" pos:start="19:45" pos:end="19:95">"Too many level1 elements or circular seekheads.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:8">elem</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <operator pos:start="21:12" pos:end="21:12">&amp;</operator><name pos:start="21:13" pos:end="21:64"><name pos:start="21:13" pos:end="21:20">matroska</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:34">level1_elems</name><index pos:start="21:35" pos:end="21:64">[<expr pos:start="21:36" pos:end="21:63"><name pos:start="21:36" pos:end="21:61"><name pos:start="21:36" pos:end="21:43">matroska</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:61">num_level1_elems</name></name><operator pos:start="21:62" pos:end="21:63">++</operator></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:46"><expr pos:start="22:5" pos:end="22:45"><operator pos:start="22:5" pos:end="22:5">*</operator><name pos:start="22:6" pos:end="22:9">elem</name> <operator pos:start="22:11" pos:end="22:11">=</operator> <operator pos:start="22:13" pos:end="22:13">(</operator><name pos:start="22:14" pos:end="22:34">MatroskaLevel1Element</name><operator pos:start="22:35" pos:end="22:35">)</operator><block pos:start="22:36" pos:end="22:45">{<expr pos:start="22:37" pos:end="22:44"><operator pos:start="22:37" pos:end="22:37">.</operator><name pos:start="22:38" pos:end="22:39">id</name> <operator pos:start="22:41" pos:end="22:41">=</operator> <name pos:start="22:43" pos:end="22:44">id</name></expr>}</block></expr>;</expr_stmt>
    <return pos:start="23:5" pos:end="23:16">return <expr pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:15">elem</name></expr>;</return>
</block_content>}</block></function></unit>
