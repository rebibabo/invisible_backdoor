<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5743.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">bdrv_create</name><parameter_list pos:start="1:16" pos:end="3:45">(<parameter pos:start="1:17" pos:end="1:32"><decl pos:start="1:17" pos:end="1:32"><type pos:start="1:17" pos:end="1:32"><name pos:start="1:17" pos:end="1:27">BlockDriver</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">drv</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><specifier pos:start="1:35" pos:end="1:39">const</specifier> <name pos:start="1:41" pos:end="1:44">char</name><modifier pos:start="1:45" pos:end="1:45">*</modifier></type> <name pos:start="1:47" pos:end="1:54">filename</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:30"><decl pos:start="3:17" pos:end="3:30"><type pos:start="3:17" pos:end="3:30"><name pos:start="3:17" pos:end="3:24">QemuOpts</name> <modifier pos:start="3:26" pos:end="3:26">*</modifier></type><name pos:start="3:27" pos:end="3:30">opts</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:44"><decl pos:start="3:33" pos:end="3:44"><type pos:start="3:33" pos:end="3:44"><name pos:start="3:33" pos:end="3:37">Error</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier><modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:44">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">Coroutine</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:17">co</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="25:6"><decl pos:start="13:5" pos:end="25:5"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">CreateCo</name></type> <name pos:start="13:14" pos:end="13:16">cco</name> <init pos:start="13:18" pos:end="25:5">= <expr pos:start="13:20" pos:end="25:5"><block pos:start="13:20" pos:end="25:5">{

        <expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">drv</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">drv</name></expr>,

        <expr pos:start="17:9" pos:end="17:38"><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:17">filename</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:38"><name pos:start="17:21" pos:end="17:28">g_strdup</name><argument_list pos:start="17:29" pos:end="17:38">(<argument pos:start="17:30" pos:end="17:37"><expr pos:start="17:30" pos:end="17:37"><name pos:start="17:30" pos:end="17:37">filename</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="19:9" pos:end="19:20"><operator pos:start="19:9" pos:end="19:9">.</operator><name pos:start="19:10" pos:end="19:13">opts</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:20">opts</name></expr>,

        <expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">.</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:23">NOT_DONE</name></expr>,

        <expr pos:start="23:9" pos:end="23:19"><operator pos:start="23:9" pos:end="23:9">.</operator><name pos:start="23:10" pos:end="23:12">err</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:19">NULL</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:25"><name pos:start="29:10" pos:end="29:12">drv</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:25">bdrv_create</name></name></expr>)</condition> <block pos:start="29:28" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:17">

        <expr_stmt pos:start="31:9" pos:end="31:90"><expr pos:start="31:9" pos:end="31:89"><call pos:start="31:9" pos:end="31:89"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="31:89">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:70"><expr pos:start="31:26" pos:end="31:70"><literal type="string" pos:start="31:26" pos:end="31:70">"Driver '%s' does not support image creation"</literal></expr></argument>, <argument pos:start="31:73" pos:end="31:88"><expr pos:start="31:73" pos:end="31:88"><name pos:start="31:73" pos:end="31:88"><name pos:start="31:73" pos:end="31:75">drv</name><operator pos:start="31:76" pos:end="31:77">-&gt;</operator><name pos:start="31:78" pos:end="31:88">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:23"><expr pos:start="33:9" pos:end="33:22"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">-</operator><name pos:start="33:16" pos:end="33:22">ENOTSUP</name></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="59:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:28">(<expr pos:start="41:9" pos:end="41:27"><call pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:25">qemu_in_coroutine</name><argument_list pos:start="41:26" pos:end="41:27">()</argument_list></call></expr>)</condition> <block pos:start="41:30" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:35">

        <comment type="block" pos:start="43:9" pos:end="43:55">/* Fast-path if already in coroutine context */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><call pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:28">bdrv_create_co_entry</name><argument_list pos:start="45:29" pos:end="45:34">(<argument pos:start="45:30" pos:end="45:33"><expr pos:start="45:30" pos:end="45:33"><operator pos:start="45:30" pos:end="45:30">&amp;</operator><name pos:start="45:31" pos:end="45:33">cco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="47:7" pos:end="59:5">else <block pos:start="47:12" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:9">

        <expr_stmt pos:start="49:9" pos:end="49:57"><expr pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:10">co</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:56"><name pos:start="49:14" pos:end="49:34">qemu_coroutine_create</name><argument_list pos:start="49:35" pos:end="49:56">(<argument pos:start="49:36" pos:end="49:55"><expr pos:start="49:36" pos:end="49:55"><name pos:start="49:36" pos:end="49:55">bdrv_create_co_entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:28">qemu_coroutine_enter</name><argument_list pos:start="51:29" pos:end="51:38">(<argument pos:start="51:30" pos:end="51:31"><expr pos:start="51:30" pos:end="51:31"><name pos:start="51:30" pos:end="51:31">co</name></expr></argument>, <argument pos:start="51:34" pos:end="51:37"><expr pos:start="51:34" pos:end="51:37"><operator pos:start="51:34" pos:end="51:34">&amp;</operator><name pos:start="51:35" pos:end="51:37">cco</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="53:9" pos:end="57:9">while <condition pos:start="53:15" pos:end="53:35">(<expr pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:22"><name pos:start="53:16" pos:end="53:18">cco</name><operator pos:start="53:19" pos:end="53:19">.</operator><name pos:start="53:20" pos:end="53:22">ret</name></name> <operator pos:start="53:24" pos:end="53:25">==</operator> <name pos:start="53:27" pos:end="53:34">NOT_DONE</name></expr>)</condition> <block pos:start="53:37" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:51">

            <expr_stmt pos:start="55:13" pos:end="55:51"><expr pos:start="55:13" pos:end="55:50"><call pos:start="55:13" pos:end="55:50"><name pos:start="55:13" pos:end="55:20">aio_poll</name><argument_list pos:start="55:21" pos:end="55:50">(<argument pos:start="55:22" pos:end="55:43"><expr pos:start="55:22" pos:end="55:43"><call pos:start="55:22" pos:end="55:43"><name pos:start="55:22" pos:end="55:41">qemu_get_aio_context</name><argument_list pos:start="55:42" pos:end="55:43">()</argument_list></call></expr></argument>, <argument pos:start="55:46" pos:end="55:49"><expr pos:start="55:46" pos:end="55:49"><name pos:start="55:46" pos:end="55:49">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:18"><expr pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <name pos:start="63:11" pos:end="63:17"><name pos:start="63:11" pos:end="63:13">cco</name><operator pos:start="63:14" pos:end="63:14">.</operator><name pos:start="63:15" pos:end="63:17">ret</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="77:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <if_stmt pos:start="67:9" pos:end="75:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">cco</name><operator pos:start="67:16" pos:end="67:16">.</operator><name pos:start="67:17" pos:end="67:19">err</name></name></expr>)</condition> <block pos:start="67:22" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:43">

            <expr_stmt pos:start="69:13" pos:end="69:43"><expr pos:start="69:13" pos:end="69:42"><call pos:start="69:13" pos:end="69:42"><name pos:start="69:13" pos:end="69:27">error_propagate</name><argument_list pos:start="69:28" pos:end="69:42">(<argument pos:start="69:29" pos:end="69:32"><expr pos:start="69:29" pos:end="69:32"><name pos:start="69:29" pos:end="69:32">errp</name></expr></argument>, <argument pos:start="69:35" pos:end="69:41"><expr pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:41"><name pos:start="69:35" pos:end="69:37">cco</name><operator pos:start="69:38" pos:end="69:38">.</operator><name pos:start="69:39" pos:end="69:41">err</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="75:9">else <block pos:start="71:16" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:67">

            <expr_stmt pos:start="73:13" pos:end="73:67"><expr pos:start="73:13" pos:end="73:66"><call pos:start="73:13" pos:end="73:66"><name pos:start="73:13" pos:end="73:28">error_setg_errno</name><argument_list pos:start="73:29" pos:end="73:66">(<argument pos:start="73:30" pos:end="73:33"><expr pos:start="73:30" pos:end="73:33"><name pos:start="73:30" pos:end="73:33">errp</name></expr></argument>, <argument pos:start="73:36" pos:end="73:39"><expr pos:start="73:36" pos:end="73:39"><operator pos:start="73:36" pos:end="73:36">-</operator><name pos:start="73:37" pos:end="73:39">ret</name></expr></argument>, <argument pos:start="73:42" pos:end="73:65"><expr pos:start="73:42" pos:end="73:65"><literal type="string" pos:start="73:42" pos:end="73:65">"Could not create image"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="81:1" pos:end="81:4"><name pos:start="81:1" pos:end="81:3">out</name>:</label>

    <expr_stmt pos:start="83:5" pos:end="83:25"><expr pos:start="83:5" pos:end="83:24"><call pos:start="83:5" pos:end="83:24"><name pos:start="83:5" pos:end="83:10">g_free</name><argument_list pos:start="83:11" pos:end="83:24">(<argument pos:start="83:12" pos:end="83:23"><expr pos:start="83:12" pos:end="83:23"><name pos:start="83:12" pos:end="83:23"><name pos:start="83:12" pos:end="83:14">cco</name><operator pos:start="83:15" pos:end="83:15">.</operator><name pos:start="83:16" pos:end="83:23">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="85:5" pos:end="85:15">return <expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
