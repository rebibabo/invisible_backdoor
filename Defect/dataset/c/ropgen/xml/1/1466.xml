<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1466.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">CPUState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:26">cpu_generic_init</name><parameter_list pos:start="1:27" pos:end="1:71">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">typename</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:70"><decl pos:start="1:50" pos:end="1:70"><type pos:start="1:50" pos:end="1:70"><specifier pos:start="1:50" pos:end="1:54">const</specifier> <name pos:start="1:56" pos:end="1:59">char</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:70">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="23:1">{<block_content pos:start="11:5" pos:end="21:16">

    <comment type="block" pos:start="5:5" pos:end="9:7">/* TODO: all callers of cpu_generic_init() need to be converted to

     * call cpu_parse_features() only once, before calling cpu_generic_init().

     */</comment>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:24">cpu_type</name> <init pos:start="11:26" pos:end="11:67">= <expr pos:start="11:28" pos:end="11:67"><call pos:start="11:28" pos:end="11:67"><name pos:start="11:28" pos:end="11:46">cpu_parse_cpu_model</name><argument_list pos:start="11:47" pos:end="11:67">(<argument pos:start="11:48" pos:end="11:55"><expr pos:start="11:48" pos:end="11:55"><name pos:start="11:48" pos:end="11:55">typename</name></expr></argument>, <argument pos:start="11:58" pos:end="11:66"><expr pos:start="11:58" pos:end="11:66"><name pos:start="11:58" pos:end="11:66">cpu_model</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">cpu_type</name></expr>)</condition> <block pos:start="15:19" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:36">

        <return pos:start="17:9" pos:end="17:36">return <expr pos:start="17:16" pos:end="17:35"><call pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:25">cpu_create</name><argument_list pos:start="17:26" pos:end="17:35">(<argument pos:start="17:27" pos:end="17:34"><expr pos:start="17:27" pos:end="17:34"><name pos:start="17:27" pos:end="17:34">cpu_type</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="21:5" pos:end="21:16">return <expr pos:start="21:12" pos:end="21:15"><name pos:start="21:12" pos:end="21:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
