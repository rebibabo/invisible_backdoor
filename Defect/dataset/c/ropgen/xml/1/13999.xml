<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13999.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:19">gen_msa</name><parameter_list pos:start="1:20" pos:end="1:57">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:32">CPUMIPSState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">env</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">DisasContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="179:1">{<block_content pos:start="5:5" pos:end="175:5">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:19">opcode</name> <init pos:start="5:21" pos:end="5:33">= <expr pos:start="5:23" pos:end="5:33"><name pos:start="5:23" pos:end="5:33"><name pos:start="5:23" pos:end="5:25">ctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opcode</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:29"><expr pos:start="7:5" pos:end="7:28"><call pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:14">check_insn</name><argument_list pos:start="7:15" pos:end="7:28">(<argument pos:start="7:16" pos:end="7:18"><expr pos:start="7:16" pos:end="7:18"><name pos:start="7:16" pos:end="7:18">ctx</name></expr></argument>, <argument pos:start="7:21" pos:end="7:27"><expr pos:start="7:21" pos:end="7:27"><name pos:start="7:21" pos:end="7:27">ASE_MSA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:26"><expr pos:start="9:5" pos:end="9:25"><call pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:20">check_msa_access</name><argument_list pos:start="9:21" pos:end="9:25">(<argument pos:start="9:22" pos:end="9:24"><expr pos:start="9:22" pos:end="9:24"><name pos:start="9:22" pos:end="9:24">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="13:5" pos:end="175:5">switch <condition pos:start="13:12" pos:end="13:35">(<expr pos:start="13:13" pos:end="13:34"><call pos:start="13:13" pos:end="13:34"><name pos:start="13:13" pos:end="13:26">MASK_MSA_MINOR</name><argument_list pos:start="13:27" pos:end="13:34">(<argument pos:start="13:28" pos:end="13:33"><expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33">opcode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:37" pos:end="175:5">{<block_content pos:start="15:5" pos:end="173:14">

    <case pos:start="15:5" pos:end="15:23">case <expr pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:22">OPC_MSA_I8_00</name></expr>:</case>

    <case pos:start="17:5" pos:end="17:23">case <expr pos:start="17:10" pos:end="17:22"><name pos:start="17:10" pos:end="17:22">OPC_MSA_I8_01</name></expr>:</case>

    <case pos:start="19:5" pos:end="19:23">case <expr pos:start="19:10" pos:end="19:22"><name pos:start="19:10" pos:end="19:22">OPC_MSA_I8_02</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><call pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:18">gen_msa_i8</name><argument_list pos:start="21:19" pos:end="21:28">(<argument pos:start="21:20" pos:end="21:22"><expr pos:start="21:20" pos:end="21:22"><name pos:start="21:20" pos:end="21:22">env</name></expr></argument>, <argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="23:9" pos:end="23:14">break;</break>

    <case pos:start="25:5" pos:end="25:23">case <expr pos:start="25:10" pos:end="25:22"><name pos:start="25:10" pos:end="25:22">OPC_MSA_I5_06</name></expr>:</case>

    <case pos:start="27:5" pos:end="27:23">case <expr pos:start="27:10" pos:end="27:22"><name pos:start="27:10" pos:end="27:22">OPC_MSA_I5_07</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><call pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:18">gen_msa_i5</name><argument_list pos:start="29:19" pos:end="29:28">(<argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">env</name></expr></argument>, <argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:24">case <expr pos:start="33:10" pos:end="33:23"><name pos:start="33:10" pos:end="33:23">OPC_MSA_BIT_09</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:24">case <expr pos:start="35:10" pos:end="35:23"><name pos:start="35:10" pos:end="35:23">OPC_MSA_BIT_0A</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:30"><expr pos:start="37:9" pos:end="37:29"><call pos:start="37:9" pos:end="37:29"><name pos:start="37:9" pos:end="37:19">gen_msa_bit</name><argument_list pos:start="37:20" pos:end="37:29">(<argument pos:start="37:21" pos:end="37:23"><expr pos:start="37:21" pos:end="37:23"><name pos:start="37:21" pos:end="37:23">env</name></expr></argument>, <argument pos:start="37:26" pos:end="37:28"><expr pos:start="37:26" pos:end="37:28"><name pos:start="37:26" pos:end="37:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">OPC_MSA_3R_0D</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:23">case <expr pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:22">OPC_MSA_3R_0E</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:23">case <expr pos:start="45:10" pos:end="45:22"><name pos:start="45:10" pos:end="45:22">OPC_MSA_3R_0F</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:23">case <expr pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:22">OPC_MSA_3R_10</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:23">case <expr pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:22">OPC_MSA_3R_11</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:23">case <expr pos:start="51:10" pos:end="51:22"><name pos:start="51:10" pos:end="51:22">OPC_MSA_3R_12</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:23">case <expr pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:22">OPC_MSA_3R_13</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:23">case <expr pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:22">OPC_MSA_3R_14</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:23">case <expr pos:start="57:10" pos:end="57:22"><name pos:start="57:10" pos:end="57:22">OPC_MSA_3R_15</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:18">gen_msa_3r</name><argument_list pos:start="59:19" pos:end="59:28">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">env</name></expr></argument>, <argument pos:start="59:25" pos:end="59:27"><expr pos:start="59:25" pos:end="59:27"><name pos:start="59:25" pos:end="59:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:21">case <expr pos:start="63:10" pos:end="63:20"><name pos:start="63:10" pos:end="63:20">OPC_MSA_ELM</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><call pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:19">gen_msa_elm</name><argument_list pos:start="65:20" pos:end="65:29">(<argument pos:start="65:21" pos:end="65:23"><expr pos:start="65:21" pos:end="65:23"><name pos:start="65:21" pos:end="65:23">env</name></expr></argument>, <argument pos:start="65:26" pos:end="65:28"><expr pos:start="65:26" pos:end="65:28"><name pos:start="65:26" pos:end="65:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:24">case <expr pos:start="69:10" pos:end="69:23"><name pos:start="69:10" pos:end="69:23">OPC_MSA_3RF_1A</name></expr>:</case>

    <case pos:start="71:5" pos:end="71:24">case <expr pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:23">OPC_MSA_3RF_1B</name></expr>:</case>

    <case pos:start="73:5" pos:end="73:24">case <expr pos:start="73:10" pos:end="73:23"><name pos:start="73:10" pos:end="73:23">OPC_MSA_3RF_1C</name></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:30"><expr pos:start="75:9" pos:end="75:29"><call pos:start="75:9" pos:end="75:29"><name pos:start="75:9" pos:end="75:19">gen_msa_3rf</name><argument_list pos:start="75:20" pos:end="75:29">(<argument pos:start="75:21" pos:end="75:23"><expr pos:start="75:21" pos:end="75:23"><name pos:start="75:21" pos:end="75:23">env</name></expr></argument>, <argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:21">case <expr pos:start="79:10" pos:end="79:20"><name pos:start="79:10" pos:end="79:20">OPC_MSA_VEC</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><call pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:19">gen_msa_vec</name><argument_list pos:start="81:20" pos:end="81:29">(<argument pos:start="81:21" pos:end="81:23"><expr pos:start="81:21" pos:end="81:23"><name pos:start="81:21" pos:end="81:23">env</name></expr></argument>, <argument pos:start="81:26" pos:end="81:28"><expr pos:start="81:26" pos:end="81:28"><name pos:start="81:26" pos:end="81:28">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:18">case <expr pos:start="85:10" pos:end="85:17"><name pos:start="85:10" pos:end="85:17">OPC_LD_B</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:18">case <expr pos:start="87:10" pos:end="87:17"><name pos:start="87:10" pos:end="87:17">OPC_LD_H</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:18">case <expr pos:start="89:10" pos:end="89:17"><name pos:start="89:10" pos:end="89:17">OPC_LD_W</name></expr>:</case>

    <case pos:start="91:5" pos:end="91:18">case <expr pos:start="91:10" pos:end="91:17"><name pos:start="91:10" pos:end="91:17">OPC_LD_D</name></expr>:</case>

    <case pos:start="93:5" pos:end="93:18">case <expr pos:start="93:10" pos:end="93:17"><name pos:start="93:10" pos:end="93:17">OPC_ST_B</name></expr>:</case>

    <case pos:start="95:5" pos:end="95:18">case <expr pos:start="95:10" pos:end="95:17"><name pos:start="95:10" pos:end="95:17">OPC_ST_H</name></expr>:</case>

    <case pos:start="97:5" pos:end="97:18">case <expr pos:start="97:10" pos:end="97:17"><name pos:start="97:10" pos:end="97:17">OPC_ST_W</name></expr>:</case>

    <case pos:start="99:5" pos:end="99:18">case <expr pos:start="99:10" pos:end="99:17"><name pos:start="99:10" pos:end="99:17">OPC_ST_D</name></expr>:</case>

        <block pos:start="101:9" pos:end="163:9">{<block_content pos:start="103:13" pos:end="161:36">

            <decl_stmt pos:start="103:13" pos:end="103:58"><decl pos:start="103:13" pos:end="103:57"><type pos:start="103:13" pos:end="103:19"><name pos:start="103:13" pos:end="103:19">int32_t</name></type> <name pos:start="103:21" pos:end="103:23">s10</name> <init pos:start="103:25" pos:end="103:57">= <expr pos:start="103:27" pos:end="103:57"><call pos:start="103:27" pos:end="103:57"><name pos:start="103:27" pos:end="103:36">sextract32</name><argument_list pos:start="103:37" pos:end="103:57">(<argument pos:start="103:38" pos:end="103:48"><expr pos:start="103:38" pos:end="103:48"><name pos:start="103:38" pos:end="103:48"><name pos:start="103:38" pos:end="103:40">ctx</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:48">opcode</name></name></expr></argument>, <argument pos:start="103:51" pos:end="103:52"><expr pos:start="103:51" pos:end="103:52"><literal type="number" pos:start="103:51" pos:end="103:52">16</literal></expr></argument>, <argument pos:start="103:55" pos:end="103:56"><expr pos:start="103:55" pos:end="103:56"><literal type="number" pos:start="103:55" pos:end="103:56">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:52"><decl pos:start="105:13" pos:end="105:51"><type pos:start="105:13" pos:end="105:19"><name pos:start="105:13" pos:end="105:19">uint8_t</name></type> <name pos:start="105:21" pos:end="105:22">rs</name> <init pos:start="105:24" pos:end="105:51">= <expr pos:start="105:26" pos:end="105:51"><operator pos:start="105:26" pos:end="105:26">(</operator><name pos:start="105:27" pos:end="105:37"><name pos:start="105:27" pos:end="105:29">ctx</name><operator pos:start="105:30" pos:end="105:31">-&gt;</operator><name pos:start="105:32" pos:end="105:37">opcode</name></name> <operator pos:start="105:39" pos:end="105:40">&gt;&gt;</operator> <literal type="number" pos:start="105:42" pos:end="105:43">11</literal><operator pos:start="105:44" pos:end="105:44">)</operator> <operator pos:start="105:46" pos:end="105:46">&amp;</operator> <literal type="number" pos:start="105:48" pos:end="105:51">0x1f</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:51"><decl pos:start="107:13" pos:end="107:50"><type pos:start="107:13" pos:end="107:19"><name pos:start="107:13" pos:end="107:19">uint8_t</name></type> <name pos:start="107:21" pos:end="107:22">wd</name> <init pos:start="107:24" pos:end="107:50">= <expr pos:start="107:26" pos:end="107:50"><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:37"><name pos:start="107:27" pos:end="107:29">ctx</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:37">opcode</name></name> <operator pos:start="107:39" pos:end="107:40">&gt;&gt;</operator> <literal type="number" pos:start="107:42" pos:end="107:42">6</literal><operator pos:start="107:43" pos:end="107:43">)</operator> <operator pos:start="107:45" pos:end="107:45">&amp;</operator> <literal type="number" pos:start="107:47" pos:end="107:50">0x1f</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="109:13" pos:end="109:50"><decl pos:start="109:13" pos:end="109:49"><type pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:19">uint8_t</name></type> <name pos:start="109:21" pos:end="109:22">df</name> <init pos:start="109:24" pos:end="109:49">= <expr pos:start="109:26" pos:end="109:49"><operator pos:start="109:26" pos:end="109:26">(</operator><name pos:start="109:27" pos:end="109:37"><name pos:start="109:27" pos:end="109:29">ctx</name><operator pos:start="109:30" pos:end="109:31">-&gt;</operator><name pos:start="109:32" pos:end="109:37">opcode</name></name> <operator pos:start="109:39" pos:end="109:40">&gt;&gt;</operator> <literal type="number" pos:start="109:42" pos:end="109:42">0</literal><operator pos:start="109:43" pos:end="109:43">)</operator> <operator pos:start="109:45" pos:end="109:45">&amp;</operator> <literal type="number" pos:start="109:47" pos:end="109:49">0x3</literal></expr></init></decl>;</decl_stmt>



            <decl_stmt pos:start="113:13" pos:end="113:45"><decl pos:start="113:13" pos:end="113:44"><type pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:20">TCGv_i32</name></type> <name pos:start="113:22" pos:end="113:24">tdf</name> <init pos:start="113:26" pos:end="113:44">= <expr pos:start="113:28" pos:end="113:44"><call pos:start="113:28" pos:end="113:44"><name pos:start="113:28" pos:end="113:40">tcg_const_i32</name><argument_list pos:start="113:41" pos:end="113:44">(<argument pos:start="113:42" pos:end="113:43"><expr pos:start="113:42" pos:end="113:43"><name pos:start="113:42" pos:end="113:43">df</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:45"><decl pos:start="115:13" pos:end="115:44"><type pos:start="115:13" pos:end="115:20"><name pos:start="115:13" pos:end="115:20">TCGv_i32</name></type> <name pos:start="115:22" pos:end="115:24">twd</name> <init pos:start="115:26" pos:end="115:44">= <expr pos:start="115:28" pos:end="115:44"><call pos:start="115:28" pos:end="115:44"><name pos:start="115:28" pos:end="115:40">tcg_const_i32</name><argument_list pos:start="115:41" pos:end="115:44">(<argument pos:start="115:42" pos:end="115:43"><expr pos:start="115:42" pos:end="115:43"><name pos:start="115:42" pos:end="115:43">wd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="117:13" pos:end="117:45"><decl pos:start="117:13" pos:end="117:44"><type pos:start="117:13" pos:end="117:20"><name pos:start="117:13" pos:end="117:20">TCGv_i32</name></type> <name pos:start="117:22" pos:end="117:24">trs</name> <init pos:start="117:26" pos:end="117:44">= <expr pos:start="117:28" pos:end="117:44"><call pos:start="117:28" pos:end="117:44"><name pos:start="117:28" pos:end="117:40">tcg_const_i32</name><argument_list pos:start="117:41" pos:end="117:44">(<argument pos:start="117:42" pos:end="117:43"><expr pos:start="117:42" pos:end="117:43"><name pos:start="117:42" pos:end="117:43">rs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="119:13" pos:end="119:47"><decl pos:start="119:13" pos:end="119:46"><type pos:start="119:13" pos:end="119:20"><name pos:start="119:13" pos:end="119:20">TCGv_i32</name></type> <name pos:start="119:22" pos:end="119:25">ts10</name> <init pos:start="119:27" pos:end="119:46">= <expr pos:start="119:29" pos:end="119:46"><call pos:start="119:29" pos:end="119:46"><name pos:start="119:29" pos:end="119:41">tcg_const_i32</name><argument_list pos:start="119:42" pos:end="119:46">(<argument pos:start="119:43" pos:end="119:45"><expr pos:start="119:43" pos:end="119:45"><name pos:start="119:43" pos:end="119:45">s10</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <switch pos:start="123:13" pos:end="151:13">switch <condition pos:start="123:20" pos:end="123:43">(<expr pos:start="123:21" pos:end="123:42"><call pos:start="123:21" pos:end="123:42"><name pos:start="123:21" pos:end="123:34">MASK_MSA_MINOR</name><argument_list pos:start="123:35" pos:end="123:42">(<argument pos:start="123:36" pos:end="123:41"><expr pos:start="123:36" pos:end="123:41"><name pos:start="123:36" pos:end="123:41">opcode</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="123:45" pos:end="151:13">{<block_content pos:start="125:13" pos:end="149:22">

            <case pos:start="125:13" pos:end="125:26">case <expr pos:start="125:18" pos:end="125:25"><name pos:start="125:18" pos:end="125:25">OPC_LD_B</name></expr>:</case>

            <case pos:start="127:13" pos:end="127:26">case <expr pos:start="127:18" pos:end="127:25"><name pos:start="127:18" pos:end="127:25">OPC_LD_H</name></expr>:</case>

            <case pos:start="129:13" pos:end="129:26">case <expr pos:start="129:18" pos:end="129:25"><name pos:start="129:18" pos:end="129:25">OPC_LD_W</name></expr>:</case>

            <case pos:start="131:13" pos:end="131:26">case <expr pos:start="131:18" pos:end="131:25"><name pos:start="131:18" pos:end="131:25">OPC_LD_D</name></expr>:</case>


                <expr_stmt pos:start="134:17" pos:end="134:67"><expr pos:start="134:17" pos:end="134:66"><call pos:start="134:17" pos:end="134:66"><name pos:start="134:17" pos:end="134:36">gen_helper_msa_ld_df</name><argument_list pos:start="134:37" pos:end="134:66">(<argument pos:start="134:38" pos:end="134:44"><expr pos:start="134:38" pos:end="134:44"><name pos:start="134:38" pos:end="134:44">cpu_env</name></expr></argument>, <argument pos:start="134:47" pos:end="134:49"><expr pos:start="134:47" pos:end="134:49"><name pos:start="134:47" pos:end="134:49">tdf</name></expr></argument>, <argument pos:start="134:52" pos:end="134:54"><expr pos:start="134:52" pos:end="134:54"><name pos:start="134:52" pos:end="134:54">twd</name></expr></argument>, <argument pos:start="134:57" pos:end="134:59"><expr pos:start="134:57" pos:end="134:59"><name pos:start="134:57" pos:end="134:59">trs</name></expr></argument>, <argument pos:start="134:62" pos:end="134:65"><expr pos:start="134:62" pos:end="134:65"><name pos:start="134:62" pos:end="134:65">ts10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="136:17" pos:end="136:22">break;</break>

            <case pos:start="138:13" pos:end="138:26">case <expr pos:start="138:18" pos:end="138:25"><name pos:start="138:18" pos:end="138:25">OPC_ST_B</name></expr>:</case>

            <case pos:start="140:13" pos:end="140:26">case <expr pos:start="140:18" pos:end="140:25"><name pos:start="140:18" pos:end="140:25">OPC_ST_H</name></expr>:</case>

            <case pos:start="142:13" pos:end="142:26">case <expr pos:start="142:18" pos:end="142:25"><name pos:start="142:18" pos:end="142:25">OPC_ST_W</name></expr>:</case>

            <case pos:start="144:13" pos:end="144:26">case <expr pos:start="144:18" pos:end="144:25"><name pos:start="144:18" pos:end="144:25">OPC_ST_D</name></expr>:</case>


                <expr_stmt pos:start="147:17" pos:end="147:67"><expr pos:start="147:17" pos:end="147:66"><call pos:start="147:17" pos:end="147:66"><name pos:start="147:17" pos:end="147:36">gen_helper_msa_st_df</name><argument_list pos:start="147:37" pos:end="147:66">(<argument pos:start="147:38" pos:end="147:44"><expr pos:start="147:38" pos:end="147:44"><name pos:start="147:38" pos:end="147:44">cpu_env</name></expr></argument>, <argument pos:start="147:47" pos:end="147:49"><expr pos:start="147:47" pos:end="147:49"><name pos:start="147:47" pos:end="147:49">tdf</name></expr></argument>, <argument pos:start="147:52" pos:end="147:54"><expr pos:start="147:52" pos:end="147:54"><name pos:start="147:52" pos:end="147:54">twd</name></expr></argument>, <argument pos:start="147:57" pos:end="147:59"><expr pos:start="147:57" pos:end="147:59"><name pos:start="147:57" pos:end="147:59">trs</name></expr></argument>, <argument pos:start="147:62" pos:end="147:65"><expr pos:start="147:62" pos:end="147:65"><name pos:start="147:62" pos:end="147:65">ts10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="149:17" pos:end="149:22">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="155:13" pos:end="155:35"><expr pos:start="155:13" pos:end="155:34"><call pos:start="155:13" pos:end="155:34"><name pos:start="155:13" pos:end="155:29">tcg_temp_free_i32</name><argument_list pos:start="155:30" pos:end="155:34">(<argument pos:start="155:31" pos:end="155:33"><expr pos:start="155:31" pos:end="155:33"><name pos:start="155:31" pos:end="155:33">twd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><call pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:29">tcg_temp_free_i32</name><argument_list pos:start="157:30" pos:end="157:34">(<argument pos:start="157:31" pos:end="157:33"><expr pos:start="157:31" pos:end="157:33"><name pos:start="157:31" pos:end="157:33">tdf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:35"><expr pos:start="159:13" pos:end="159:34"><call pos:start="159:13" pos:end="159:34"><name pos:start="159:13" pos:end="159:29">tcg_temp_free_i32</name><argument_list pos:start="159:30" pos:end="159:34">(<argument pos:start="159:31" pos:end="159:33"><expr pos:start="159:31" pos:end="159:33"><name pos:start="159:31" pos:end="159:33">trs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:36"><expr pos:start="161:13" pos:end="161:35"><call pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:29">tcg_temp_free_i32</name><argument_list pos:start="161:30" pos:end="161:35">(<argument pos:start="161:31" pos:end="161:34"><expr pos:start="161:31" pos:end="161:34"><name pos:start="161:31" pos:end="161:34">ts10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <default pos:start="167:5" pos:end="167:12">default:</default>

        <expr_stmt pos:start="169:9" pos:end="169:38"><expr pos:start="169:9" pos:end="169:37"><call pos:start="169:9" pos:end="169:37"><name pos:start="169:9" pos:end="169:18">MIPS_INVAL</name><argument_list pos:start="169:19" pos:end="169:37">(<argument pos:start="169:20" pos:end="169:36"><expr pos:start="169:20" pos:end="169:36"><literal type="string" pos:start="169:20" pos:end="169:36">"MSA instruction"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:41"><expr pos:start="171:9" pos:end="171:40"><call pos:start="171:9" pos:end="171:40"><name pos:start="171:9" pos:end="171:26">generate_exception</name><argument_list pos:start="171:27" pos:end="171:40">(<argument pos:start="171:28" pos:end="171:30"><expr pos:start="171:28" pos:end="171:30"><name pos:start="171:28" pos:end="171:30">ctx</name></expr></argument>, <argument pos:start="171:33" pos:end="171:39"><expr pos:start="171:33" pos:end="171:39"><name pos:start="171:33" pos:end="171:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    </block_content>}</block></switch>



</block_content>}</block></function></unit>
