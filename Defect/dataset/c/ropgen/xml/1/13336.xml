<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13336.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">acpi_pcihp_init</name><parameter_list pos:start="1:21" pos:end="3:74">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:27">Object</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:34">owner</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:50">AcpiPciHpState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:71"><decl pos:start="1:56" pos:end="1:71"><type pos:start="1:56" pos:end="1:71"><name pos:start="1:56" pos:end="1:61">PCIBus</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:71">root_bus</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:51"><decl pos:start="3:22" pos:end="3:51"><type pos:start="3:22" pos:end="3:51"><name pos:start="3:22" pos:end="3:33">MemoryRegion</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:51">address_space_io</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:73"><decl pos:start="3:54" pos:end="3:73"><type pos:start="3:54" pos:end="3:73"><name pos:start="3:54" pos:end="3:57">bool</name></type> <name pos:start="3:59" pos:end="3:73">bridges_enabled</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="55:1">{<block_content pos:start="7:5" pos:end="53:49">

    <expr_stmt pos:start="7:5" pos:end="7:32"><expr pos:start="7:5" pos:end="7:31"><name pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:13">io_len</name></name> <operator pos:start="7:15" pos:end="7:15">=</operator> <name pos:start="7:17" pos:end="7:31">ACPI_PCIHP_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">io_base</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <name pos:start="9:18" pos:end="9:32">ACPI_PCIHP_ADDR</name></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">root</name></name><operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:21">root_bus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:18">legacy_piix</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <operator pos:start="15:22" pos:end="15:22">!</operator><name pos:start="15:23" pos:end="15:37">bridges_enabled</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="35:5">if <condition pos:start="19:8" pos:end="19:23">(<expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">legacy_piix</name></name></expr>)</condition> <block pos:start="19:25" pos:end="35:5">{<block_content pos:start="21:9" pos:end="33:55">

        <decl_stmt pos:start="21:9" pos:end="21:56"><decl pos:start="21:9" pos:end="21:55"><type pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:16">unsigned</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:26">bus_bsel</name> <init pos:start="21:28" pos:end="21:55">= <expr pos:start="21:30" pos:end="21:55"><call pos:start="21:30" pos:end="21:55"><name pos:start="21:30" pos:end="21:37">g_malloc</name><argument_list pos:start="21:38" pos:end="21:55">(<argument pos:start="21:39" pos:end="21:54"><expr pos:start="21:39" pos:end="21:54"><sizeof pos:start="21:39" pos:end="21:44">sizeof <name/></sizeof>*<name pos:start="21:47" pos:end="21:54">bus_bsel</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">io_len</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <name pos:start="25:21" pos:end="25:42">ACPI_PCIHP_LEGACY_SIZE</name></expr>;</expr_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><operator pos:start="29:9" pos:end="29:9">*</operator><name pos:start="29:10" pos:end="29:17">bus_bsel</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:43">ACPI_PCIHP_BSEL_DEFAULT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="33:55"><expr pos:start="31:9" pos:end="33:54"><call pos:start="31:9" pos:end="33:54"><name pos:start="31:9" pos:end="31:38">object_property_add_uint32_ptr</name><argument_list pos:start="31:39" pos:end="33:54">(<argument pos:start="31:40" pos:end="31:55"><expr pos:start="31:40" pos:end="31:55"><call pos:start="31:40" pos:end="31:55"><name pos:start="31:40" pos:end="31:45">OBJECT</name><argument_list pos:start="31:46" pos:end="31:55">(<argument pos:start="31:47" pos:end="31:54"><expr pos:start="31:47" pos:end="31:54"><name pos:start="31:47" pos:end="31:54">root_bus</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:58" pos:end="31:77"><expr pos:start="31:58" pos:end="31:77"><name pos:start="31:58" pos:end="31:77">ACPI_PCIHP_PROP_BSEL</name></expr></argument>,

                                       <argument pos:start="33:40" pos:end="33:47"><expr pos:start="33:40" pos:end="33:47"><name pos:start="33:40" pos:end="33:47">bus_bsel</name></expr></argument>, <argument pos:start="33:50" pos:end="33:53"><expr pos:start="33:50" pos:end="33:53"><name pos:start="33:50" pos:end="33:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="41:57"><expr pos:start="39:5" pos:end="41:56"><call pos:start="39:5" pos:end="41:56"><name pos:start="39:5" pos:end="39:25">memory_region_init_io</name><argument_list pos:start="39:26" pos:end="41:56">(<argument pos:start="39:27" pos:end="39:32"><expr pos:start="39:27" pos:end="39:32"><operator pos:start="39:27" pos:end="39:27">&amp;</operator><name pos:start="39:28" pos:end="39:32"><name pos:start="39:28" pos:end="39:28">s</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:32">io</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:39"><expr pos:start="39:35" pos:end="39:39"><name pos:start="39:35" pos:end="39:39">owner</name></expr></argument>, <argument pos:start="39:42" pos:end="39:59"><expr pos:start="39:42" pos:end="39:59"><operator pos:start="39:42" pos:end="39:42">&amp;</operator><name pos:start="39:43" pos:end="39:59">acpi_pcihp_io_ops</name></expr></argument>, <argument pos:start="39:62" pos:end="39:62"><expr pos:start="39:62" pos:end="39:62"><name pos:start="39:62" pos:end="39:62">s</name></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:44"><expr pos:start="41:27" pos:end="41:44"><literal type="string" pos:start="41:27" pos:end="41:44">"acpi-pci-hotplug"</literal></expr></argument>, <argument pos:start="41:47" pos:end="41:55"><expr pos:start="41:47" pos:end="41:55"><name pos:start="41:47" pos:end="41:55"><name pos:start="41:47" pos:end="41:47">s</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:55">io_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:70"><expr pos:start="43:5" pos:end="43:69"><call pos:start="43:5" pos:end="43:69"><name pos:start="43:5" pos:end="43:31">memory_region_add_subregion</name><argument_list pos:start="43:32" pos:end="43:69">(<argument pos:start="43:33" pos:end="43:48"><expr pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:48">address_space_io</name></expr></argument>, <argument pos:start="43:51" pos:end="43:60"><expr pos:start="43:51" pos:end="43:60"><name pos:start="43:51" pos:end="43:60"><name pos:start="43:51" pos:end="43:51">s</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:60">io_base</name></name></expr></argument>, <argument pos:start="43:63" pos:end="43:68"><expr pos:start="43:63" pos:end="43:68"><operator pos:start="43:63" pos:end="43:63">&amp;</operator><name pos:start="43:64" pos:end="43:68"><name pos:start="43:64" pos:end="43:64">s</name><operator pos:start="43:65" pos:end="43:66">-&gt;</operator><name pos:start="43:67" pos:end="43:68">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:49"><expr pos:start="47:5" pos:end="49:48"><call pos:start="47:5" pos:end="49:48"><name pos:start="47:5" pos:end="47:34">object_property_add_uint16_ptr</name><argument_list pos:start="47:35" pos:end="49:48">(<argument pos:start="47:36" pos:end="47:40"><expr pos:start="47:36" pos:end="47:40"><name pos:start="47:36" pos:end="47:40">owner</name></expr></argument>, <argument pos:start="47:43" pos:end="47:65"><expr pos:start="47:43" pos:end="47:65"><name pos:start="47:43" pos:end="47:65">ACPI_PCIHP_IO_BASE_PROP</name></expr></argument>, <argument pos:start="47:68" pos:end="47:78"><expr pos:start="47:68" pos:end="47:78"><operator pos:start="47:68" pos:end="47:68">&amp;</operator><name pos:start="47:69" pos:end="47:78"><name pos:start="47:69" pos:end="47:69">s</name><operator pos:start="47:70" pos:end="47:71">-&gt;</operator><name pos:start="47:72" pos:end="47:78">io_base</name></name></expr></argument>,

                                   <argument pos:start="49:36" pos:end="49:47"><expr pos:start="49:36" pos:end="49:47"><operator pos:start="49:36" pos:end="49:36">&amp;</operator><name pos:start="49:37" pos:end="49:47">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:49"><expr pos:start="51:5" pos:end="53:48"><call pos:start="51:5" pos:end="53:48"><name pos:start="51:5" pos:end="51:34">object_property_add_uint16_ptr</name><argument_list pos:start="51:35" pos:end="53:48">(<argument pos:start="51:36" pos:end="51:40"><expr pos:start="51:36" pos:end="51:40"><name pos:start="51:36" pos:end="51:40">owner</name></expr></argument>, <argument pos:start="51:43" pos:end="51:64"><expr pos:start="51:43" pos:end="51:64"><name pos:start="51:43" pos:end="51:64">ACPI_PCIHP_IO_LEN_PROP</name></expr></argument>, <argument pos:start="51:67" pos:end="51:76"><expr pos:start="51:67" pos:end="51:76"><operator pos:start="51:67" pos:end="51:67">&amp;</operator><name pos:start="51:68" pos:end="51:76"><name pos:start="51:68" pos:end="51:68">s</name><operator pos:start="51:69" pos:end="51:70">-&gt;</operator><name pos:start="51:71" pos:end="51:76">io_len</name></name></expr></argument>,

                                   <argument pos:start="53:36" pos:end="53:47"><expr pos:start="53:36" pos:end="53:47"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:47">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
