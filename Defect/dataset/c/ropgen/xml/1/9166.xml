<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9166.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">alpha_translate_init</name><parameter_list pos:start="1:26" pos:end="1:31">(<parameter pos:start="1:27" pos:end="1:30"><decl pos:start="1:27" pos:end="1:30"><type pos:start="1:27" pos:end="1:30"><name pos:start="1:27" pos:end="1:30">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="9:5" pos:end="117:5">

<cpp:define pos:start="5:1" pos:end="5:64">#<cpp:directive pos:start="5:2" pos:end="5:7">define</cpp:directive> <cpp:macro pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:15">DEF_VAR</name><parameter_list pos:start="5:16" pos:end="5:18">(<parameter pos:start="5:17" pos:end="5:17"><type pos:start="5:17" pos:end="5:17"><name pos:start="5:17" pos:end="5:17">V</name></type></parameter>)</parameter_list></cpp:macro>  <cpp:value pos:start="5:21" pos:end="5:64">{ &amp;cpu_##V, #V, offsetof(CPUAlphaState, V) }</cpp:value></cpp:define>



    <typedef pos:start="9:5" pos:end="9:71">typedef <type pos:start="9:13" pos:end="9:60"><struct pos:start="9:13" pos:end="9:60">struct <block pos:start="9:20" pos:end="9:60">{ <decl_stmt pos:start="9:22" pos:end="9:31"><decl pos:start="9:22" pos:end="9:30"><type pos:start="9:22" pos:end="9:27"><name pos:start="9:22" pos:end="9:25">TCGv</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:30">var</name></decl>;</decl_stmt> <decl_stmt pos:start="9:33" pos:end="9:49"><decl pos:start="9:33" pos:end="9:48"><type pos:start="9:33" pos:end="9:44"><specifier pos:start="9:33" pos:end="9:37">const</specifier> <name pos:start="9:39" pos:end="9:42">char</name> <modifier pos:start="9:44" pos:end="9:44">*</modifier></type><name pos:start="9:45" pos:end="9:48">name</name></decl>;</decl_stmt> <decl_stmt pos:start="9:51" pos:end="9:58"><decl pos:start="9:51" pos:end="9:57"><type pos:start="9:51" pos:end="9:53"><name pos:start="9:51" pos:end="9:53">int</name></type> <name pos:start="9:55" pos:end="9:57">ofs</name></decl>;</decl_stmt> }</block></struct></type> <name pos:start="9:62" pos:end="9:70">GlobalVar</name>;</typedef>

    <decl_stmt pos:start="11:5" pos:end="36:0"><decl pos:start="11:5" pos:end="31:5"><type pos:start="11:5" pos:end="11:26"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <specifier pos:start="11:12" pos:end="11:16">const</specifier> <name pos:start="11:18" pos:end="11:26">GlobalVar</name></type> <name pos:start="11:28" pos:end="11:33"><name pos:start="11:28" pos:end="11:31">vars</name><index pos:start="11:32" pos:end="11:33">[]</index></name> <init pos:start="11:35" pos:end="31:5">= <expr pos:start="11:37" pos:end="31:5"><block pos:start="11:37" pos:end="31:5">{

        <expr pos:start="13:9" pos:end="13:19"><call pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:15">DEF_VAR</name><argument_list pos:start="13:16" pos:end="13:19">(<argument pos:start="13:17" pos:end="13:18"><expr pos:start="13:17" pos:end="13:18"><name pos:start="13:17" pos:end="13:18">pc</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="15:9" pos:end="15:26"><call pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:15">DEF_VAR</name><argument_list pos:start="15:16" pos:end="15:26">(<argument pos:start="15:17" pos:end="15:25"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:25">lock_addr</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="17:9" pos:end="17:29"><call pos:start="17:9" pos:end="17:29"><name pos:start="17:9" pos:end="17:15">DEF_VAR</name><argument_list pos:start="17:16" pos:end="17:29">(<argument pos:start="17:17" pos:end="17:28"><expr pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:28">lock_st_addr</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="19:9" pos:end="19:27"><call pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:15">DEF_VAR</name><argument_list pos:start="19:16" pos:end="19:27">(<argument pos:start="19:17" pos:end="19:26"><expr pos:start="19:17" pos:end="19:26"><name pos:start="19:17" pos:end="19:26">lock_value</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="21:9" pos:end="21:23"><call pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:15">DEF_VAR</name><argument_list pos:start="21:16" pos:end="21:23">(<argument pos:start="21:17" pos:end="21:22"><expr pos:start="21:17" pos:end="21:22"><name pos:start="21:17" pos:end="21:22">unique</name></expr></argument>)</argument_list></call></expr>,

<cpp:ifndef pos:start="23:1" pos:end="23:24">#<cpp:directive pos:start="23:2" pos:end="23:7">ifndef</cpp:directive> <name pos:start="23:9" pos:end="23:24">CONFIG_USER_ONLY</name></cpp:ifndef>

        <expr pos:start="25:9" pos:end="25:23"><call pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:15">DEF_VAR</name><argument_list pos:start="25:16" pos:end="25:23">(<argument pos:start="25:17" pos:end="25:22"><expr pos:start="25:17" pos:end="25:22"><name pos:start="25:17" pos:end="25:22">sysval</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="27:9" pos:end="27:20"><call pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:15">DEF_VAR</name><argument_list pos:start="27:16" pos:end="27:20">(<argument pos:start="27:17" pos:end="27:19"><expr pos:start="27:17" pos:end="27:19"><name pos:start="27:17" pos:end="27:19">usp</name></expr></argument>)</argument_list></call></expr>,

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    }</block></expr></init></decl>;</decl_stmt>



<cpp:undef pos:start="35:1" pos:end="35:14">#<cpp:directive pos:start="35:2" pos:end="35:6">undef</cpp:directive> <name pos:start="35:8" pos:end="35:14">DEF_VAR</name></cpp:undef>



    <comment type="block" pos:start="39:5" pos:end="39:71">/* Use the symbolic register names that match the disassembler.  */</comment>

    <decl_stmt pos:start="41:5" pos:end="51:6"><decl pos:start="41:5" pos:end="51:5"><type pos:start="41:5" pos:end="41:21"><specifier pos:start="41:5" pos:end="41:10">static</specifier> <specifier pos:start="41:12" pos:end="41:16">const</specifier> <name pos:start="41:18" pos:end="41:21">char</name></type> <name pos:start="41:23" pos:end="41:39"><name pos:start="41:23" pos:end="41:32">greg_names</name><index pos:start="41:33" pos:end="41:36">[<expr pos:start="41:34" pos:end="41:35"><literal type="number" pos:start="41:34" pos:end="41:35">31</literal></expr>]</index><index pos:start="41:37" pos:end="41:39">[<expr pos:start="41:38" pos:end="41:38"><literal type="number" pos:start="41:38" pos:end="41:38">4</literal></expr>]</index></name> <init pos:start="41:41" pos:end="51:5">= <expr pos:start="41:43" pos:end="51:5"><block pos:start="41:43" pos:end="51:5">{

        <expr pos:start="43:9" pos:end="43:12"><literal type="string" pos:start="43:9" pos:end="43:12">"v0"</literal></expr>, <expr pos:start="43:15" pos:end="43:18"><literal type="string" pos:start="43:15" pos:end="43:18">"t0"</literal></expr>, <expr pos:start="43:21" pos:end="43:24"><literal type="string" pos:start="43:21" pos:end="43:24">"t1"</literal></expr>, <expr pos:start="43:27" pos:end="43:30"><literal type="string" pos:start="43:27" pos:end="43:30">"t2"</literal></expr>, <expr pos:start="43:33" pos:end="43:36"><literal type="string" pos:start="43:33" pos:end="43:36">"t3"</literal></expr>, <expr pos:start="43:39" pos:end="43:42"><literal type="string" pos:start="43:39" pos:end="43:42">"t4"</literal></expr>, <expr pos:start="43:45" pos:end="43:48"><literal type="string" pos:start="43:45" pos:end="43:48">"t5"</literal></expr>, <expr pos:start="43:51" pos:end="43:54"><literal type="string" pos:start="43:51" pos:end="43:54">"t6"</literal></expr>,

        <expr pos:start="45:9" pos:end="45:12"><literal type="string" pos:start="45:9" pos:end="45:12">"t7"</literal></expr>, <expr pos:start="45:15" pos:end="45:18"><literal type="string" pos:start="45:15" pos:end="45:18">"s0"</literal></expr>, <expr pos:start="45:21" pos:end="45:24"><literal type="string" pos:start="45:21" pos:end="45:24">"s1"</literal></expr>, <expr pos:start="45:27" pos:end="45:30"><literal type="string" pos:start="45:27" pos:end="45:30">"s2"</literal></expr>, <expr pos:start="45:33" pos:end="45:36"><literal type="string" pos:start="45:33" pos:end="45:36">"s3"</literal></expr>, <expr pos:start="45:39" pos:end="45:42"><literal type="string" pos:start="45:39" pos:end="45:42">"s4"</literal></expr>, <expr pos:start="45:45" pos:end="45:48"><literal type="string" pos:start="45:45" pos:end="45:48">"s5"</literal></expr>, <expr pos:start="45:51" pos:end="45:54"><literal type="string" pos:start="45:51" pos:end="45:54">"fp"</literal></expr>,

        <expr pos:start="47:9" pos:end="47:12"><literal type="string" pos:start="47:9" pos:end="47:12">"a0"</literal></expr>, <expr pos:start="47:15" pos:end="47:18"><literal type="string" pos:start="47:15" pos:end="47:18">"a1"</literal></expr>, <expr pos:start="47:21" pos:end="47:24"><literal type="string" pos:start="47:21" pos:end="47:24">"a2"</literal></expr>, <expr pos:start="47:27" pos:end="47:30"><literal type="string" pos:start="47:27" pos:end="47:30">"a3"</literal></expr>, <expr pos:start="47:33" pos:end="47:36"><literal type="string" pos:start="47:33" pos:end="47:36">"a4"</literal></expr>, <expr pos:start="47:39" pos:end="47:42"><literal type="string" pos:start="47:39" pos:end="47:42">"a5"</literal></expr>, <expr pos:start="47:45" pos:end="47:48"><literal type="string" pos:start="47:45" pos:end="47:48">"t8"</literal></expr>, <expr pos:start="47:51" pos:end="47:54"><literal type="string" pos:start="47:51" pos:end="47:54">"t9"</literal></expr>,

        <expr pos:start="49:9" pos:end="49:13"><literal type="string" pos:start="49:9" pos:end="49:13">"t10"</literal></expr>, <expr pos:start="49:16" pos:end="49:20"><literal type="string" pos:start="49:16" pos:end="49:20">"t11"</literal></expr>, <expr pos:start="49:23" pos:end="49:26"><literal type="string" pos:start="49:23" pos:end="49:26">"ra"</literal></expr>, <expr pos:start="49:29" pos:end="49:33"><literal type="string" pos:start="49:29" pos:end="49:33">"t12"</literal></expr>, <expr pos:start="49:36" pos:end="49:39"><literal type="string" pos:start="49:36" pos:end="49:39">"at"</literal></expr>, <expr pos:start="49:42" pos:end="49:45"><literal type="string" pos:start="49:42" pos:end="49:45">"gp"</literal></expr>, <expr pos:start="49:48" pos:end="49:51"><literal type="string" pos:start="49:48" pos:end="49:51">"sp"</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="63:6"><decl pos:start="53:5" pos:end="63:5"><type pos:start="53:5" pos:end="53:21"><specifier pos:start="53:5" pos:end="53:10">static</specifier> <specifier pos:start="53:12" pos:end="53:16">const</specifier> <name pos:start="53:18" pos:end="53:21">char</name></type> <name pos:start="53:23" pos:end="53:39"><name pos:start="53:23" pos:end="53:32">freg_names</name><index pos:start="53:33" pos:end="53:36">[<expr pos:start="53:34" pos:end="53:35"><literal type="number" pos:start="53:34" pos:end="53:35">31</literal></expr>]</index><index pos:start="53:37" pos:end="53:39">[<expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">4</literal></expr>]</index></name> <init pos:start="53:41" pos:end="63:5">= <expr pos:start="53:43" pos:end="63:5"><block pos:start="53:43" pos:end="63:5">{

        <expr pos:start="55:9" pos:end="55:12"><literal type="string" pos:start="55:9" pos:end="55:12">"f0"</literal></expr>, <expr pos:start="55:15" pos:end="55:18"><literal type="string" pos:start="55:15" pos:end="55:18">"f1"</literal></expr>, <expr pos:start="55:21" pos:end="55:24"><literal type="string" pos:start="55:21" pos:end="55:24">"f2"</literal></expr>, <expr pos:start="55:27" pos:end="55:30"><literal type="string" pos:start="55:27" pos:end="55:30">"f3"</literal></expr>, <expr pos:start="55:33" pos:end="55:36"><literal type="string" pos:start="55:33" pos:end="55:36">"f4"</literal></expr>, <expr pos:start="55:39" pos:end="55:42"><literal type="string" pos:start="55:39" pos:end="55:42">"f5"</literal></expr>, <expr pos:start="55:45" pos:end="55:48"><literal type="string" pos:start="55:45" pos:end="55:48">"f6"</literal></expr>, <expr pos:start="55:51" pos:end="55:54"><literal type="string" pos:start="55:51" pos:end="55:54">"f7"</literal></expr>,

        <expr pos:start="57:9" pos:end="57:12"><literal type="string" pos:start="57:9" pos:end="57:12">"f8"</literal></expr>, <expr pos:start="57:15" pos:end="57:18"><literal type="string" pos:start="57:15" pos:end="57:18">"f9"</literal></expr>, <expr pos:start="57:21" pos:end="57:25"><literal type="string" pos:start="57:21" pos:end="57:25">"f10"</literal></expr>, <expr pos:start="57:28" pos:end="57:32"><literal type="string" pos:start="57:28" pos:end="57:32">"f11"</literal></expr>, <expr pos:start="57:35" pos:end="57:39"><literal type="string" pos:start="57:35" pos:end="57:39">"f12"</literal></expr>, <expr pos:start="57:42" pos:end="57:46"><literal type="string" pos:start="57:42" pos:end="57:46">"f13"</literal></expr>, <expr pos:start="57:49" pos:end="57:53"><literal type="string" pos:start="57:49" pos:end="57:53">"f14"</literal></expr>, <expr pos:start="57:56" pos:end="57:60"><literal type="string" pos:start="57:56" pos:end="57:60">"f15"</literal></expr>,

        <expr pos:start="59:9" pos:end="59:13"><literal type="string" pos:start="59:9" pos:end="59:13">"f16"</literal></expr>, <expr pos:start="59:16" pos:end="59:20"><literal type="string" pos:start="59:16" pos:end="59:20">"f17"</literal></expr>, <expr pos:start="59:23" pos:end="59:27"><literal type="string" pos:start="59:23" pos:end="59:27">"f18"</literal></expr>, <expr pos:start="59:30" pos:end="59:34"><literal type="string" pos:start="59:30" pos:end="59:34">"f19"</literal></expr>, <expr pos:start="59:37" pos:end="59:41"><literal type="string" pos:start="59:37" pos:end="59:41">"f20"</literal></expr>, <expr pos:start="59:44" pos:end="59:48"><literal type="string" pos:start="59:44" pos:end="59:48">"f21"</literal></expr>, <expr pos:start="59:51" pos:end="59:55"><literal type="string" pos:start="59:51" pos:end="59:55">"f22"</literal></expr>, <expr pos:start="59:58" pos:end="59:62"><literal type="string" pos:start="59:58" pos:end="59:62">"f23"</literal></expr>,

        <expr pos:start="61:9" pos:end="61:13"><literal type="string" pos:start="61:9" pos:end="61:13">"f24"</literal></expr>, <expr pos:start="61:16" pos:end="61:20"><literal type="string" pos:start="61:16" pos:end="61:20">"f25"</literal></expr>, <expr pos:start="61:23" pos:end="61:27"><literal type="string" pos:start="61:23" pos:end="61:27">"f26"</literal></expr>, <expr pos:start="61:30" pos:end="61:34"><literal type="string" pos:start="61:30" pos:end="61:34">"f27"</literal></expr>, <expr pos:start="61:37" pos:end="61:41"><literal type="string" pos:start="61:37" pos:end="61:41">"f28"</literal></expr>, <expr pos:start="61:44" pos:end="61:48"><literal type="string" pos:start="61:44" pos:end="61:48">"f29"</literal></expr>, <expr pos:start="61:51" pos:end="61:55"><literal type="string" pos:start="61:51" pos:end="61:55">"f30"</literal></expr>

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="67:5" pos:end="67:30"><decl pos:start="67:5" pos:end="67:29"><type pos:start="67:5" pos:end="67:15"><specifier pos:start="67:5" pos:end="67:10">static</specifier> <name pos:start="67:12" pos:end="67:15">bool</name></type> <name pos:start="67:17" pos:end="67:25">done_init</name> <init pos:start="67:27" pos:end="67:29">= <expr pos:start="67:29" pos:end="67:29"><literal type="number" pos:start="67:29" pos:end="67:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="69:5" pos:end="69:10"><decl pos:start="69:5" pos:end="69:9"><type pos:start="69:5" pos:end="69:7"><name pos:start="69:5" pos:end="69:7">int</name></type> <name pos:start="69:9" pos:end="69:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:18">(<expr pos:start="73:9" pos:end="73:17"><name pos:start="73:9" pos:end="73:17">done_init</name></expr>)</condition> <block pos:start="73:20" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:15">

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:18"><expr pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:13">done_init</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="number" pos:start="79:17" pos:end="79:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:55"><expr pos:start="83:5" pos:end="83:54"><name pos:start="83:5" pos:end="83:11">cpu_env</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:54"><name pos:start="83:15" pos:end="83:36">tcg_global_reg_new_ptr</name><argument_list pos:start="83:37" pos:end="83:54">(<argument pos:start="83:38" pos:end="83:46"><expr pos:start="83:38" pos:end="83:46"><name pos:start="83:38" pos:end="83:46">TCG_AREG0</name></expr></argument>, <argument pos:start="83:49" pos:end="83:53"><expr pos:start="83:49" pos:end="83:53"><literal type="string" pos:start="83:49" pos:end="83:53">"env"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="87:5" pos:end="95:5">for <control pos:start="87:9" pos:end="87:28">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:23"><expr pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <literal type="number" pos:start="87:21" pos:end="87:22">31</literal></expr>;</condition> <incr pos:start="87:25" pos:end="87:27"><expr pos:start="87:25" pos:end="87:27"><name pos:start="87:25" pos:end="87:25">i</name><operator pos:start="87:26" pos:end="87:27">++</operator></expr></incr>)</control> <block pos:start="87:30" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:58">

        <expr_stmt pos:start="89:9" pos:end="93:58"><expr pos:start="89:9" pos:end="93:57"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:14">cpu_ir</name><index pos:start="89:15" pos:end="89:17">[<expr pos:start="89:16" pos:end="89:16"><name pos:start="89:16" pos:end="89:16">i</name></expr>]</index></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="93:57"><name pos:start="89:21" pos:end="89:42">tcg_global_mem_new_i64</name><argument_list pos:start="89:43" pos:end="93:57">(<argument pos:start="89:44" pos:end="89:52"><expr pos:start="89:44" pos:end="89:52"><name pos:start="89:44" pos:end="89:52">TCG_AREG0</name></expr></argument>,

                                           <argument pos:start="91:44" pos:end="91:73"><expr pos:start="91:44" pos:end="91:73"><call pos:start="91:44" pos:end="91:73"><name pos:start="91:44" pos:end="91:51">offsetof</name><argument_list pos:start="91:52" pos:end="91:73">(<argument pos:start="91:53" pos:end="91:65"><expr pos:start="91:53" pos:end="91:65"><name pos:start="91:53" pos:end="91:65">CPUAlphaState</name></expr></argument>, <argument pos:start="91:68" pos:end="91:72"><expr pos:start="91:68" pos:end="91:72"><name pos:start="91:68" pos:end="91:72"><name pos:start="91:68" pos:end="91:69">ir</name><index pos:start="91:70" pos:end="91:72">[<expr pos:start="91:71" pos:end="91:71"><name pos:start="91:71" pos:end="91:71">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                                           <argument pos:start="93:44" pos:end="93:56"><expr pos:start="93:44" pos:end="93:56"><name pos:start="93:44" pos:end="93:56"><name pos:start="93:44" pos:end="93:53">greg_names</name><index pos:start="93:54" pos:end="93:56">[<expr pos:start="93:55" pos:end="93:55"><name pos:start="93:55" pos:end="93:55">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="99:5" pos:end="107:5">for <control pos:start="99:9" pos:end="99:28">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:23"><expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <literal type="number" pos:start="99:21" pos:end="99:22">31</literal></expr>;</condition> <incr pos:start="99:25" pos:end="99:27"><expr pos:start="99:25" pos:end="99:27"><name pos:start="99:25" pos:end="99:25">i</name><operator pos:start="99:26" pos:end="99:27">++</operator></expr></incr>)</control> <block pos:start="99:30" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:59">

        <expr_stmt pos:start="101:9" pos:end="105:59"><expr pos:start="101:9" pos:end="105:58"><name pos:start="101:9" pos:end="101:18"><name pos:start="101:9" pos:end="101:15">cpu_fir</name><index pos:start="101:16" pos:end="101:18">[<expr pos:start="101:17" pos:end="101:17"><name pos:start="101:17" pos:end="101:17">i</name></expr>]</index></name> <operator pos:start="101:20" pos:end="101:20">=</operator> <call pos:start="101:22" pos:end="105:58"><name pos:start="101:22" pos:end="101:43">tcg_global_mem_new_i64</name><argument_list pos:start="101:44" pos:end="105:58">(<argument pos:start="101:45" pos:end="101:53"><expr pos:start="101:45" pos:end="101:53"><name pos:start="101:45" pos:end="101:53">TCG_AREG0</name></expr></argument>,

                                            <argument pos:start="103:45" pos:end="103:75"><expr pos:start="103:45" pos:end="103:75"><call pos:start="103:45" pos:end="103:75"><name pos:start="103:45" pos:end="103:52">offsetof</name><argument_list pos:start="103:53" pos:end="103:75">(<argument pos:start="103:54" pos:end="103:66"><expr pos:start="103:54" pos:end="103:66"><name pos:start="103:54" pos:end="103:66">CPUAlphaState</name></expr></argument>, <argument pos:start="103:69" pos:end="103:74"><expr pos:start="103:69" pos:end="103:74"><name pos:start="103:69" pos:end="103:74"><name pos:start="103:69" pos:end="103:71">fir</name><index pos:start="103:72" pos:end="103:74">[<expr pos:start="103:73" pos:end="103:73"><name pos:start="103:73" pos:end="103:73">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                                            <argument pos:start="105:45" pos:end="105:57"><expr pos:start="105:45" pos:end="105:57"><name pos:start="105:45" pos:end="105:57"><name pos:start="105:45" pos:end="105:54">freg_names</name><index pos:start="105:55" pos:end="105:57">[<expr pos:start="105:56" pos:end="105:56"><name pos:start="105:56" pos:end="105:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="111:5" pos:end="117:5">for <control pos:start="111:9" pos:end="111:42">(<init pos:start="111:10" pos:end="111:15"><expr pos:start="111:10" pos:end="111:14"><name pos:start="111:10" pos:end="111:10">i</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <literal type="number" pos:start="111:14" pos:end="111:14">0</literal></expr>;</init> <condition pos:start="111:17" pos:end="111:37"><expr pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:17">i</name> <operator pos:start="111:19" pos:end="111:19">&lt;</operator> <call pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:30">ARRAY_SIZE</name><argument_list pos:start="111:31" pos:end="111:36">(<argument pos:start="111:32" pos:end="111:35"><expr pos:start="111:32" pos:end="111:35"><name pos:start="111:32" pos:end="111:35">vars</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="111:39" pos:end="111:41"><expr pos:start="111:39" pos:end="111:41"><operator pos:start="111:39" pos:end="111:40">++</operator><name pos:start="111:41" pos:end="111:41">i</name></expr></incr>)</control> <block pos:start="111:44" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:69">

        <decl_stmt pos:start="113:9" pos:end="113:38"><decl pos:start="113:9" pos:end="113:37"><type pos:start="113:9" pos:end="113:25"><specifier pos:start="113:9" pos:end="113:13">const</specifier> <name pos:start="113:15" pos:end="113:23">GlobalVar</name> <modifier pos:start="113:25" pos:end="113:25">*</modifier></type><name pos:start="113:26" pos:end="113:26">v</name> <init pos:start="113:28" pos:end="113:37">= <expr pos:start="113:30" pos:end="113:37"><operator pos:start="113:30" pos:end="113:30">&amp;</operator><name pos:start="113:31" pos:end="113:37"><name pos:start="113:31" pos:end="113:34">vars</name><index pos:start="113:35" pos:end="113:37">[<expr pos:start="113:36" pos:end="113:36"><name pos:start="113:36" pos:end="113:36">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:69"><expr pos:start="115:9" pos:end="115:68"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:15"><name pos:start="115:10" pos:end="115:10">v</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:15">var</name></name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:68"><name pos:start="115:19" pos:end="115:40">tcg_global_mem_new_i64</name><argument_list pos:start="115:41" pos:end="115:68">(<argument pos:start="115:42" pos:end="115:50"><expr pos:start="115:42" pos:end="115:50"><name pos:start="115:42" pos:end="115:50">TCG_AREG0</name></expr></argument>, <argument pos:start="115:53" pos:end="115:58"><expr pos:start="115:53" pos:end="115:58"><name pos:start="115:53" pos:end="115:58"><name pos:start="115:53" pos:end="115:53">v</name><operator pos:start="115:54" pos:end="115:55">-&gt;</operator><name pos:start="115:56" pos:end="115:58">ofs</name></name></expr></argument>, <argument pos:start="115:61" pos:end="115:67"><expr pos:start="115:61" pos:end="115:67"><name pos:start="115:61" pos:end="115:67"><name pos:start="115:61" pos:end="115:61">v</name><operator pos:start="115:62" pos:end="115:63">-&gt;</operator><name pos:start="115:64" pos:end="115:67">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
