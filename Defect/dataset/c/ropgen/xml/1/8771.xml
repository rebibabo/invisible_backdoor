<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8771.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_dump_state</name><parameter_list pos:start="1:20" pos:end="3:18">(<parameter pos:start="1:21" pos:end="1:39"><decl pos:start="1:21" pos:end="1:39"><type pos:start="1:21" pos:end="1:39"><name pos:start="1:21" pos:end="1:34">CPUXtensaState</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:39">env</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:48"><decl pos:start="1:42" pos:end="1:48"><type pos:start="1:42" pos:end="1:48"><name pos:start="1:42" pos:end="1:45">FILE</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">f</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:78"><decl pos:start="1:51" pos:end="1:78"><type pos:start="1:51" pos:end="1:78"><name pos:start="1:51" pos:end="1:66">fprintf_function</name></type> <name pos:start="1:68" pos:end="1:78">cpu_fprintf</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:17"><decl pos:start="3:9" pos:end="3:17"><type pos:start="3:9" pos:end="3:17"><name pos:start="3:9" pos:end="3:11">int</name></type> <name pos:start="3:13" pos:end="3:17">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="93:1">{<block_content pos:start="7:5" pos:end="91:5">

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><call pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:15">cpu_fprintf</name><argument_list pos:start="11:16" pos:end="11:42">(<argument pos:start="11:17" pos:end="11:17"><expr pos:start="11:17" pos:end="11:17"><name pos:start="11:17" pos:end="11:17">f</name></expr></argument>, <argument pos:start="11:20" pos:end="11:32"><expr pos:start="11:20" pos:end="11:32"><literal type="string" pos:start="11:20" pos:end="11:32">"PC=%08x\n\n"</literal></expr></argument>, <argument pos:start="11:35" pos:end="11:41"><expr pos:start="11:35" pos:end="11:41"><name pos:start="11:35" pos:end="11:41"><name pos:start="11:35" pos:end="11:37">env</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:41">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="25:5">for <control pos:start="15:9" pos:end="15:33">(<init pos:start="15:10" pos:end="15:19"><expr pos:start="15:10" pos:end="15:18"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <name pos:start="15:14" pos:end="15:14">j</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:28"><expr pos:start="15:21" pos:end="15:27"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <literal type="number" pos:start="15:25" pos:end="15:27">256</literal></expr>;</condition> <incr pos:start="15:30" pos:end="15:32"><expr pos:start="15:30" pos:end="15:32"><operator pos:start="15:30" pos:end="15:31">++</operator><name pos:start="15:32" pos:end="15:32">i</name></expr></incr>)</control> <block pos:start="15:35" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:9">

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:25">(<expr pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:24"><name pos:start="17:13" pos:end="17:21">sregnames</name><index pos:start="17:22" pos:end="17:24">[<expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="17:27" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:49">

            <expr_stmt pos:start="19:13" pos:end="21:49"><expr pos:start="19:13" pos:end="21:48"><call pos:start="19:13" pos:end="21:48"><name pos:start="19:13" pos:end="19:23">cpu_fprintf</name><argument_list pos:start="19:24" pos:end="21:48">(<argument pos:start="19:25" pos:end="19:25"><expr pos:start="19:25" pos:end="19:25"><name pos:start="19:25" pos:end="19:25">f</name></expr></argument>, <argument pos:start="19:28" pos:end="19:38"><expr pos:start="19:28" pos:end="19:38"><literal type="string" pos:start="19:28" pos:end="19:38">"%s=%08x%c"</literal></expr></argument>, <argument pos:start="19:41" pos:end="19:52"><expr pos:start="19:41" pos:end="19:52"><name pos:start="19:41" pos:end="19:52"><name pos:start="19:41" pos:end="19:49">sregnames</name><index pos:start="19:50" pos:end="19:52">[<expr pos:start="19:51" pos:end="19:51"><name pos:start="19:51" pos:end="19:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="19:55" pos:end="19:67"><expr pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:67"><name pos:start="19:55" pos:end="19:57">env</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:64">sregs</name><index pos:start="19:65" pos:end="19:67">[<expr pos:start="19:66" pos:end="19:66"><name pos:start="19:66" pos:end="19:66">i</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="21:21" pos:end="21:47"><expr pos:start="21:21" pos:end="21:47"><ternary pos:start="21:21" pos:end="21:47"><condition pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:34"><operator pos:start="21:21" pos:end="21:21">(</operator><name pos:start="21:22" pos:end="21:22">j</name><operator pos:start="21:23" pos:end="21:24">++</operator> <operator pos:start="21:26" pos:end="21:26">%</operator> <literal type="number" pos:start="21:28" pos:end="21:28">4</literal><operator pos:start="21:29" pos:end="21:29">)</operator> <operator pos:start="21:31" pos:end="21:32">==</operator> <literal type="number" pos:start="21:34" pos:end="21:34">3</literal></expr> ?</condition><then pos:start="21:38" pos:end="21:41"> <expr pos:start="21:38" pos:end="21:41"><literal type="char" pos:start="21:38" pos:end="21:41">'\n'</literal></expr> </then><else pos:start="21:43" pos:end="21:47">: <expr pos:start="21:45" pos:end="21:47"><literal type="char" pos:start="21:45" pos:end="21:47">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><call pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:15">cpu_fprintf</name><argument_list pos:start="29:16" pos:end="29:48">(<argument pos:start="29:17" pos:end="29:17"><expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">f</name></expr></argument>, <argument pos:start="29:20" pos:end="29:47"><expr pos:start="29:20" pos:end="29:47"><ternary pos:start="29:20" pos:end="29:47"><condition pos:start="29:20" pos:end="29:33"><expr pos:start="29:20" pos:end="29:31"><operator pos:start="29:20" pos:end="29:20">(</operator><name pos:start="29:21" pos:end="29:21">j</name> <operator pos:start="29:23" pos:end="29:23">%</operator> <literal type="number" pos:start="29:25" pos:end="29:25">4</literal><operator pos:start="29:26" pos:end="29:26">)</operator> <operator pos:start="29:28" pos:end="29:29">==</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr> ?</condition><then pos:start="29:35" pos:end="29:38"> <expr pos:start="29:35" pos:end="29:38"><literal type="string" pos:start="29:35" pos:end="29:38">"\n"</literal></expr> </then><else pos:start="29:40" pos:end="29:47">: <expr pos:start="29:42" pos:end="29:47"><literal type="string" pos:start="29:42" pos:end="29:47">"\n\n"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="33:5" pos:end="43:5">for <control pos:start="33:9" pos:end="33:33">(<init pos:start="33:10" pos:end="33:19"><expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:14">j</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:27"><name pos:start="33:21" pos:end="33:21">i</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:27">256</literal></expr>;</condition> <incr pos:start="33:30" pos:end="33:32"><expr pos:start="33:30" pos:end="33:32"><operator pos:start="33:30" pos:end="33:31">++</operator><name pos:start="33:32" pos:end="33:32">i</name></expr></incr>)</control> <block pos:start="33:35" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:9">

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:25">(<expr pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:24"><name pos:start="35:13" pos:end="35:21">uregnames</name><index pos:start="35:22" pos:end="35:24">[<expr pos:start="35:23" pos:end="35:23"><name pos:start="35:23" pos:end="35:23">i</name></expr>]</index></name></expr>)</condition> <block pos:start="35:27" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:49">

            <expr_stmt pos:start="37:13" pos:end="39:49"><expr pos:start="37:13" pos:end="39:48"><call pos:start="37:13" pos:end="39:48"><name pos:start="37:13" pos:end="37:23">cpu_fprintf</name><argument_list pos:start="37:24" pos:end="39:48">(<argument pos:start="37:25" pos:end="37:25"><expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">f</name></expr></argument>, <argument pos:start="37:28" pos:end="37:38"><expr pos:start="37:28" pos:end="37:38"><literal type="string" pos:start="37:28" pos:end="37:38">"%s=%08x%c"</literal></expr></argument>, <argument pos:start="37:41" pos:end="37:52"><expr pos:start="37:41" pos:end="37:52"><name pos:start="37:41" pos:end="37:52"><name pos:start="37:41" pos:end="37:49">uregnames</name><index pos:start="37:50" pos:end="37:52">[<expr pos:start="37:51" pos:end="37:51"><name pos:start="37:51" pos:end="37:51">i</name></expr>]</index></name></expr></argument>, <argument pos:start="37:55" pos:end="37:67"><expr pos:start="37:55" pos:end="37:67"><name pos:start="37:55" pos:end="37:67"><name pos:start="37:55" pos:end="37:57">env</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:64">uregs</name><index pos:start="37:65" pos:end="37:67">[<expr pos:start="37:66" pos:end="37:66"><name pos:start="37:66" pos:end="37:66">i</name></expr>]</index></name></expr></argument>,

                    <argument pos:start="39:21" pos:end="39:47"><expr pos:start="39:21" pos:end="39:47"><ternary pos:start="39:21" pos:end="39:47"><condition pos:start="39:21" pos:end="39:36"><expr pos:start="39:21" pos:end="39:34"><operator pos:start="39:21" pos:end="39:21">(</operator><name pos:start="39:22" pos:end="39:22">j</name><operator pos:start="39:23" pos:end="39:24">++</operator> <operator pos:start="39:26" pos:end="39:26">%</operator> <literal type="number" pos:start="39:28" pos:end="39:28">4</literal><operator pos:start="39:29" pos:end="39:29">)</operator> <operator pos:start="39:31" pos:end="39:32">==</operator> <literal type="number" pos:start="39:34" pos:end="39:34">3</literal></expr> ?</condition><then pos:start="39:38" pos:end="39:41"> <expr pos:start="39:38" pos:end="39:41"><literal type="char" pos:start="39:38" pos:end="39:41">'\n'</literal></expr> </then><else pos:start="39:43" pos:end="39:47">: <expr pos:start="39:45" pos:end="39:47"><literal type="char" pos:start="39:45" pos:end="39:47">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="47:5" pos:end="47:49"><expr pos:start="47:5" pos:end="47:48"><call pos:start="47:5" pos:end="47:48"><name pos:start="47:5" pos:end="47:15">cpu_fprintf</name><argument_list pos:start="47:16" pos:end="47:48">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">f</name></expr></argument>, <argument pos:start="47:20" pos:end="47:47"><expr pos:start="47:20" pos:end="47:47"><ternary pos:start="47:20" pos:end="47:47"><condition pos:start="47:20" pos:end="47:33"><expr pos:start="47:20" pos:end="47:31"><operator pos:start="47:20" pos:end="47:20">(</operator><name pos:start="47:21" pos:end="47:21">j</name> <operator pos:start="47:23" pos:end="47:23">%</operator> <literal type="number" pos:start="47:25" pos:end="47:25">4</literal><operator pos:start="47:26" pos:end="47:26">)</operator> <operator pos:start="47:28" pos:end="47:29">==</operator> <literal type="number" pos:start="47:31" pos:end="47:31">0</literal></expr> ?</condition><then pos:start="47:35" pos:end="47:38"> <expr pos:start="47:35" pos:end="47:38"><literal type="string" pos:start="47:35" pos:end="47:38">"\n"</literal></expr> </then><else pos:start="47:40" pos:end="47:47">: <expr pos:start="47:42" pos:end="47:47"><literal type="string" pos:start="47:42" pos:end="47:47">"\n\n"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="57:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:22">16</literal></expr>;</condition> <incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><operator pos:start="51:25" pos:end="51:26">++</operator><name pos:start="51:27" pos:end="51:27">i</name></expr></incr>)</control> <block pos:start="51:30" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:43">

        <expr_stmt pos:start="53:9" pos:end="55:43"><expr pos:start="53:9" pos:end="55:42"><call pos:start="53:9" pos:end="55:42"><name pos:start="53:9" pos:end="53:19">cpu_fprintf</name><argument_list pos:start="53:20" pos:end="55:42">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">f</name></expr></argument>, <argument pos:start="53:24" pos:end="53:37"><expr pos:start="53:24" pos:end="53:37"><literal type="string" pos:start="53:24" pos:end="53:37">"A%02d=%08x%c"</literal></expr></argument>, <argument pos:start="53:40" pos:end="53:40"><expr pos:start="53:40" pos:end="53:40"><name pos:start="53:40" pos:end="53:40">i</name></expr></argument>, <argument pos:start="53:43" pos:end="53:54"><expr pos:start="53:43" pos:end="53:54"><name pos:start="53:43" pos:end="53:54"><name pos:start="53:43" pos:end="53:45">env</name><operator pos:start="53:46" pos:end="53:47">-&gt;</operator><name pos:start="53:48" pos:end="53:51">regs</name><index pos:start="53:52" pos:end="53:54">[<expr pos:start="53:53" pos:end="53:53"><name pos:start="53:53" pos:end="53:53">i</name></expr>]</index></name></expr></argument>,

                <argument pos:start="55:17" pos:end="55:41"><expr pos:start="55:17" pos:end="55:41"><ternary pos:start="55:17" pos:end="55:41"><condition pos:start="55:17" pos:end="55:30"><expr pos:start="55:17" pos:end="55:28"><operator pos:start="55:17" pos:end="55:17">(</operator><name pos:start="55:18" pos:end="55:18">i</name> <operator pos:start="55:20" pos:end="55:20">%</operator> <literal type="number" pos:start="55:22" pos:end="55:22">4</literal><operator pos:start="55:23" pos:end="55:23">)</operator> <operator pos:start="55:25" pos:end="55:26">==</operator> <literal type="number" pos:start="55:28" pos:end="55:28">3</literal></expr> ?</condition><then pos:start="55:32" pos:end="55:35"> <expr pos:start="55:32" pos:end="55:35"><literal type="char" pos:start="55:32" pos:end="55:35">'\n'</literal></expr> </then><else pos:start="55:37" pos:end="55:41">: <expr pos:start="55:39" pos:end="55:41"><literal type="char" pos:start="55:39" pos:end="55:41">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:15">cpu_fprintf</name><argument_list pos:start="61:16" pos:end="61:24">(<argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">f</name></expr></argument>, <argument pos:start="61:20" pos:end="61:23"><expr pos:start="61:20" pos:end="61:23"><literal type="string" pos:start="61:20" pos:end="61:23">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="65:5" pos:end="71:5">for <control pos:start="65:9" pos:end="65:44">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">0</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:39"><expr pos:start="65:17" pos:end="65:38"><name pos:start="65:17" pos:end="65:17">i</name> <operator pos:start="65:19" pos:end="65:19">&lt;</operator> <name pos:start="65:21" pos:end="65:38"><name pos:start="65:21" pos:end="65:23">env</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:31">config</name><operator pos:start="65:32" pos:end="65:33">-&gt;</operator><name pos:start="65:34" pos:end="65:38">nareg</name></name></expr>;</condition> <incr pos:start="65:41" pos:end="65:43"><expr pos:start="65:41" pos:end="65:43"><operator pos:start="65:41" pos:end="65:42">++</operator><name pos:start="65:43" pos:end="65:43">i</name></expr></incr>)</control> <block pos:start="65:46" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:43">

        <expr_stmt pos:start="67:9" pos:end="69:43"><expr pos:start="67:9" pos:end="69:42"><call pos:start="67:9" pos:end="69:42"><name pos:start="67:9" pos:end="67:19">cpu_fprintf</name><argument_list pos:start="67:20" pos:end="69:42">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">f</name></expr></argument>, <argument pos:start="67:24" pos:end="67:38"><expr pos:start="67:24" pos:end="67:38"><literal type="string" pos:start="67:24" pos:end="67:38">"AR%02d=%08x%c"</literal></expr></argument>, <argument pos:start="67:41" pos:end="67:41"><expr pos:start="67:41" pos:end="67:41"><name pos:start="67:41" pos:end="67:41">i</name></expr></argument>, <argument pos:start="67:44" pos:end="67:60"><expr pos:start="67:44" pos:end="67:60"><name pos:start="67:44" pos:end="67:60"><name pos:start="67:44" pos:end="67:46">env</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:57">phys_regs</name><index pos:start="67:58" pos:end="67:60">[<expr pos:start="67:59" pos:end="67:59"><name pos:start="67:59" pos:end="67:59">i</name></expr>]</index></name></expr></argument>,

                <argument pos:start="69:17" pos:end="69:41"><expr pos:start="69:17" pos:end="69:41"><ternary pos:start="69:17" pos:end="69:41"><condition pos:start="69:17" pos:end="69:30"><expr pos:start="69:17" pos:end="69:28"><operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:18">i</name> <operator pos:start="69:20" pos:end="69:20">%</operator> <literal type="number" pos:start="69:22" pos:end="69:22">4</literal><operator pos:start="69:23" pos:end="69:23">)</operator> <operator pos:start="69:25" pos:end="69:26">==</operator> <literal type="number" pos:start="69:28" pos:end="69:28">3</literal></expr> ?</condition><then pos:start="69:32" pos:end="69:35"> <expr pos:start="69:32" pos:end="69:35"><literal type="char" pos:start="69:32" pos:end="69:35">'\n'</literal></expr> </then><else pos:start="69:37" pos:end="69:41">: <expr pos:start="69:39" pos:end="69:41"><literal type="char" pos:start="69:39" pos:end="69:41">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="75:5" pos:end="91:5"><if pos:start="75:5" pos:end="91:5">if <condition pos:start="75:8" pos:end="75:73">(<expr pos:start="75:9" pos:end="75:72"><call pos:start="75:9" pos:end="75:72"><name pos:start="75:9" pos:end="75:29">xtensa_option_enabled</name><argument_list pos:start="75:30" pos:end="75:72">(<argument pos:start="75:31" pos:end="75:41"><expr pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:33">env</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">config</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:71"><expr pos:start="75:44" pos:end="75:71"><name pos:start="75:44" pos:end="75:71">XTENSA_OPTION_FP_COPROCESSOR</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:75" pos:end="91:5">{<block_content pos:start="77:9" pos:end="89:9">

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><call pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:19">cpu_fprintf</name><argument_list pos:start="77:20" pos:end="77:28">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">f</name></expr></argument>, <argument pos:start="77:24" pos:end="77:27"><expr pos:start="77:24" pos:end="77:27"><literal type="string" pos:start="77:24" pos:end="77:27">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="81:9" pos:end="89:9">for <control pos:start="81:13" pos:end="81:32">(<init pos:start="81:14" pos:end="81:19"><expr pos:start="81:14" pos:end="81:18"><name pos:start="81:14" pos:end="81:14">i</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr>;</init> <condition pos:start="81:21" pos:end="81:27"><expr pos:start="81:21" pos:end="81:26"><name pos:start="81:21" pos:end="81:21">i</name> <operator pos:start="81:23" pos:end="81:23">&lt;</operator> <literal type="number" pos:start="81:25" pos:end="81:26">16</literal></expr>;</condition> <incr pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><operator pos:start="81:29" pos:end="81:30">++</operator><name pos:start="81:31" pos:end="81:31">i</name></expr></incr>)</control> <block pos:start="81:34" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:73">

            <expr_stmt pos:start="83:13" pos:end="87:73"><expr pos:start="83:13" pos:end="87:72"><call pos:start="83:13" pos:end="87:72"><name pos:start="83:13" pos:end="83:23">cpu_fprintf</name><argument_list pos:start="83:24" pos:end="87:72">(<argument pos:start="83:25" pos:end="83:25"><expr pos:start="83:25" pos:end="83:25"><name pos:start="83:25" pos:end="83:25">f</name></expr></argument>, <argument pos:start="83:28" pos:end="83:51"><expr pos:start="83:28" pos:end="83:51"><literal type="string" pos:start="83:28" pos:end="83:51">"F%02d=%08x (%+10.8e)%c"</literal></expr></argument>, <argument pos:start="83:54" pos:end="83:54"><expr pos:start="83:54" pos:end="83:54"><name pos:start="83:54" pos:end="83:54">i</name></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:46"><expr pos:start="85:21" pos:end="85:46"><call pos:start="85:21" pos:end="85:46"><name pos:start="85:21" pos:end="85:31">float32_val</name><argument_list pos:start="85:32" pos:end="85:46">(<argument pos:start="85:33" pos:end="85:45"><expr pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:45"><name pos:start="85:33" pos:end="85:35">env</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:42">fregs</name><index pos:start="85:43" pos:end="85:45">[<expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="87:21" pos:end="87:44"><expr pos:start="87:21" pos:end="87:44"><operator pos:start="87:21" pos:end="87:21">*</operator><operator pos:start="87:22" pos:end="87:22">(</operator><name pos:start="87:23" pos:end="87:27">float</name> <operator pos:start="87:29" pos:end="87:29">*</operator><operator pos:start="87:30" pos:end="87:30">)</operator><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:44"><name pos:start="87:32" pos:end="87:34">env</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:41">fregs</name><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><name pos:start="87:43" pos:end="87:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="87:47" pos:end="87:71"><expr pos:start="87:47" pos:end="87:71"><ternary pos:start="87:47" pos:end="87:71"><condition pos:start="87:47" pos:end="87:60"><expr pos:start="87:47" pos:end="87:58"><operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:48">i</name> <operator pos:start="87:50" pos:end="87:50">%</operator> <literal type="number" pos:start="87:52" pos:end="87:52">2</literal><operator pos:start="87:53" pos:end="87:53">)</operator> <operator pos:start="87:55" pos:end="87:56">==</operator> <literal type="number" pos:start="87:58" pos:end="87:58">1</literal></expr> ?</condition><then pos:start="87:62" pos:end="87:65"> <expr pos:start="87:62" pos:end="87:65"><literal type="char" pos:start="87:62" pos:end="87:65">'\n'</literal></expr> </then><else pos:start="87:67" pos:end="87:71">: <expr pos:start="87:69" pos:end="87:71"><literal type="char" pos:start="87:69" pos:end="87:71">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
