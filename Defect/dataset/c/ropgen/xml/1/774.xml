<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/774.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:16">helper_dcbz</name><parameter_list pos:start="1:17" pos:end="1:72">(<parameter pos:start="1:18" pos:end="1:33"><decl pos:start="1:18" pos:end="1:33"><type pos:start="1:18" pos:end="1:33"><name pos:start="1:18" pos:end="1:28">CPUPPCState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:47">target_ulong</name></type> <name pos:start="1:49" pos:end="1:52">addr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:71"><decl pos:start="1:55" pos:end="1:71"><type pos:start="1:55" pos:end="1:71"><name pos:start="1:55" pos:end="1:62">uint32_t</name></type> <name pos:start="1:64" pos:end="1:71">is_dcbzl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:43">

    <decl_stmt pos:start="5:5" pos:end="10:0"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">dcbz_size</name> <init pos:start="5:19" pos:end="5:41">= <expr pos:start="5:21" pos:end="5:41"><name pos:start="5:21" pos:end="5:41"><name pos:start="5:21" pos:end="5:23">env</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:41">dcache_line_size</name></name></expr></init></decl>;</decl_stmt>



<cpp:if pos:start="9:1" pos:end="9:25">#<cpp:directive pos:start="9:2" pos:end="9:3">if</cpp:directive> <expr pos:start="9:5" pos:end="9:25"><call pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:11">defined</name><argument_list pos:start="9:12" pos:end="9:25">(<argument pos:start="9:13" pos:end="9:24"><expr pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:24">TARGET_PPC64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="11:5" pos:end="22:0"><if pos:start="11:5" pos:end="22:0">if <condition pos:start="11:8" pos:end="15:51">(<expr pos:start="11:9" pos:end="15:50"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:17">is_dcbzl</name> <operator pos:start="11:19" pos:end="11:20">&amp;&amp;</operator>

        <operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:12">env</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:24">excp_model</name></name> <operator pos:start="13:26" pos:end="13:27">==</operator> <name pos:start="13:29" pos:end="13:44">POWERPC_EXCP_970</name><operator pos:start="13:45" pos:end="13:45">)</operator> <operator pos:start="13:47" pos:end="13:48">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:32"><name pos:start="15:11" pos:end="15:13">env</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:18">spr</name><index pos:start="15:19" pos:end="15:32">[<expr pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:31">SPR_970_HID5</name></expr>]</index></name> <operator pos:start="15:34" pos:end="15:35">&gt;&gt;</operator> <literal type="number" pos:start="15:37" pos:end="15:37">7</literal><operator pos:start="15:38" pos:end="15:38">)</operator> <operator pos:start="15:40" pos:end="15:40">&amp;</operator> <literal type="number" pos:start="15:42" pos:end="15:44">0x3</literal><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:48">==</operator> <literal type="number" pos:start="15:50" pos:end="15:50">1</literal></expr>)</condition> <block pos:start="15:53" pos:end="22:0">{<block_content pos:start="17:9" pos:end="17:23">

        <expr_stmt pos:start="17:9" pos:end="17:23"><expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:17">dcbz_size</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:22">32</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="21:1" pos:end="21:6">#<cpp:directive pos:start="21:2" pos:end="21:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="25:5" pos:end="25:32">/* XXX add e500mc support */</comment>



    <expr_stmt pos:start="29:5" pos:end="29:43"><expr pos:start="29:5" pos:end="29:42"><call pos:start="29:5" pos:end="29:42"><name pos:start="29:5" pos:end="29:11">do_dcbz</name><argument_list pos:start="29:12" pos:end="29:42">(<argument pos:start="29:13" pos:end="29:15"><expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">env</name></expr></argument>, <argument pos:start="29:18" pos:end="29:21"><expr pos:start="29:18" pos:end="29:21"><name pos:start="29:18" pos:end="29:21">addr</name></expr></argument>, <argument pos:start="29:24" pos:end="29:32"><expr pos:start="29:24" pos:end="29:32"><name pos:start="29:24" pos:end="29:32">dcbz_size</name></expr></argument>, <argument pos:start="29:35" pos:end="29:41"><expr pos:start="29:35" pos:end="29:41"><call pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:39">GETPC</name><argument_list pos:start="29:40" pos:end="29:41">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
