<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/541.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">vorbis_residue_decode</name><parameter_list pos:start="1:33" pos:end="1:150">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:51"><name pos:start="1:34" pos:end="1:47">vorbis_context</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">vc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:71"><decl pos:start="1:54" pos:end="1:71"><type pos:start="1:54" pos:end="1:71"><name pos:start="1:54" pos:end="1:67">vorbis_residue</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">vr</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:88"><decl pos:start="1:74" pos:end="1:88"><type pos:start="1:74" pos:end="1:88"><name pos:start="1:74" pos:end="1:85">uint_fast8_t</name></type> <name pos:start="1:87" pos:end="1:88">ch</name></decl></parameter>, <parameter pos:start="1:91" pos:end="1:117"><decl pos:start="1:91" pos:end="1:117"><type pos:start="1:91" pos:end="1:117"><name pos:start="1:91" pos:end="1:102">uint_fast8_t</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:117">do_not_decode</name></decl></parameter>, <parameter pos:start="1:120" pos:end="1:129"><decl pos:start="1:120" pos:end="1:129"><type pos:start="1:120" pos:end="1:129"><name pos:start="1:120" pos:end="1:124">float</name> <modifier pos:start="1:126" pos:end="1:126">*</modifier></type><name pos:start="1:127" pos:end="1:129">vec</name></decl></parameter>, <parameter pos:start="1:132" pos:end="1:149"><decl pos:start="1:132" pos:end="1:149"><type pos:start="1:132" pos:end="1:149"><name pos:start="1:132" pos:end="1:144">uint_fast16_t</name></type> <name pos:start="1:146" pos:end="1:149">vlen</name></decl></parameter>)</parameter_list> <block pos:start="1:152" pos:end="271:1">{<block_content pos:start="3:5" pos:end="269:13">

    <decl_stmt pos:start="3:5" pos:end="3:30"><decl pos:start="3:5" pos:end="3:29"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">GetBitContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:21">gb</name><init pos:start="3:22" pos:end="3:29">=<expr pos:start="3:23" pos:end="3:29"><operator pos:start="3:23" pos:end="3:23">&amp;</operator><name pos:start="3:24" pos:end="3:29"><name pos:start="3:24" pos:end="3:25">vc</name><operator pos:start="3:26" pos:end="3:27">-&gt;</operator><name pos:start="3:28" pos:end="3:29">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16">uint_fast8_t</name></type> <name pos:start="5:18" pos:end="5:22">c_p_c</name><init pos:start="5:23" pos:end="5:62">=<expr pos:start="5:24" pos:end="5:62"><name pos:start="5:24" pos:end="5:51"><name pos:start="5:24" pos:end="5:25">vc</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">codebooks</name><index pos:start="5:37" pos:end="5:51">[<expr pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:39">vr</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:50">classbook</name></name></expr>]</index></name><operator pos:start="5:52" pos:end="5:52">.</operator><name pos:start="5:53" pos:end="5:62">dimensions</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">uint_fast16_t</name></type> <name pos:start="7:19" pos:end="7:27">n_to_read</name><init pos:start="7:28" pos:end="7:45">=<expr pos:start="7:29" pos:end="7:45"><name pos:start="7:29" pos:end="7:35"><name pos:start="7:29" pos:end="7:30">vr</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:35">end</name></name><operator pos:start="7:36" pos:end="7:36">-</operator><name pos:start="7:37" pos:end="7:45"><name pos:start="7:37" pos:end="7:38">vr</name><operator pos:start="7:39" pos:end="7:40">-&gt;</operator><name pos:start="7:41" pos:end="7:45">begin</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">uint_fast16_t</name></type> <name pos:start="9:19" pos:end="9:30">ptns_to_read</name><init pos:start="9:31" pos:end="9:59">=<expr pos:start="9:32" pos:end="9:59"><name pos:start="9:32" pos:end="9:40">n_to_read</name><operator pos:start="9:41" pos:end="9:41">/</operator><name pos:start="9:42" pos:end="9:59"><name pos:start="9:42" pos:end="9:43">vr</name><operator pos:start="9:44" pos:end="9:45">-&gt;</operator><name pos:start="9:46" pos:end="9:59">partition_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16">uint_fast8_t</name></type> <name pos:start="11:18" pos:end="11:58"><name pos:start="11:18" pos:end="11:25">classifs</name><index pos:start="11:26" pos:end="11:58">[<expr pos:start="11:27" pos:end="11:57"><name pos:start="11:27" pos:end="11:38">ptns_to_read</name><operator pos:start="11:39" pos:end="11:39">*</operator><name pos:start="11:40" pos:end="11:57"><name pos:start="11:40" pos:end="11:41">vc</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:57">audio_channels</name></name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">uint_fast8_t</name></type> <name pos:start="13:18" pos:end="13:21">pass</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">uint_fast8_t</name></type> <name pos:start="15:18" pos:end="15:24">ch_used</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">uint_fast8_t</name></type> <name pos:start="17:18" pos:end="17:18">i</name></decl>,<decl pos:start="17:20" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:20" pos:end="17:20">j</name></decl>,<decl pos:start="17:22" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:22" pos:end="17:22">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:17">uint_fast16_t</name></type> <name pos:start="19:19" pos:end="19:19">k</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="39:5"><if pos:start="23:5" pos:end="35:5">if <condition pos:start="23:8" pos:end="23:20">(<expr pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:10">vr</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:16">type</name></name><operator pos:start="23:17" pos:end="23:18">==</operator><literal type="number" pos:start="23:19" pos:end="23:19">2</literal></expr>)</condition> <block pos:start="23:22" pos:end="35:5">{<block_content pos:start="25:9" pos:end="33:18">

        <for pos:start="25:9" pos:end="29:9">for<control pos:start="25:12" pos:end="25:25">(<init pos:start="25:13" pos:end="25:16"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:13">j</name><operator pos:start="25:14" pos:end="25:14">=</operator><literal type="number" pos:start="25:15" pos:end="25:15">1</literal></expr>;</init><condition pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:20"><name pos:start="25:17" pos:end="25:17">j</name><operator pos:start="25:18" pos:end="25:18">&lt;</operator><name pos:start="25:19" pos:end="25:20">ch</name></expr>;</condition><incr pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><operator pos:start="25:22" pos:end="25:23">++</operator><name pos:start="25:24" pos:end="25:24">j</name></expr></incr>)</control> <block pos:start="25:27" pos:end="29:9">{<block_content pos:start="27:17" pos:end="27:51">

                <expr_stmt pos:start="27:17" pos:end="27:51"><expr pos:start="27:17" pos:end="27:50"><name pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:29">do_not_decode</name><index pos:start="27:30" pos:end="27:32">[<expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">0</literal></expr>]</index></name><operator pos:start="27:33" pos:end="27:34">&amp;=</operator><name pos:start="27:35" pos:end="27:50"><name pos:start="27:35" pos:end="27:47">do_not_decode</name><index pos:start="27:48" pos:end="27:50">[<expr pos:start="27:49" pos:end="27:49"><name pos:start="27:49" pos:end="27:49">j</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="27:54" pos:end="27:80">// FIXME - clobbering input</comment>

        </block_content>}</block></for>

        <if_stmt pos:start="31:9" pos:end="31:39"><if pos:start="31:9" pos:end="31:39">if <condition pos:start="31:12" pos:end="31:29">(<expr pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:25">do_not_decode</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><literal type="number" pos:start="31:27" pos:end="31:27">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="31:31" pos:end="31:39"><block_content pos:start="31:31" pos:end="31:39"> <return pos:start="31:31" pos:end="31:39">return <expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:18"><expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:15">ch_used</name><operator pos:start="33:16" pos:end="33:16">=</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="35:7" pos:end="39:5">else <block pos:start="35:12" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:19">

        <expr_stmt pos:start="37:9" pos:end="37:19"><expr pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:15">ch_used</name><operator pos:start="37:16" pos:end="37:16">=</operator><name pos:start="37:17" pos:end="37:18">ch</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:80"><expr pos:start="43:5" pos:end="43:79"><call pos:start="43:5" pos:end="43:79"><name pos:start="43:5" pos:end="43:12">AV_DEBUG</name><argument_list pos:start="43:13" pos:end="43:79">(<argument pos:start="43:14" pos:end="43:67"><expr pos:start="43:14" pos:end="43:67"><literal type="string" pos:start="43:14" pos:end="43:67">" residue type 0/1/2 decode begin, ch: %d  cpc %d  \n"</literal></expr></argument>, <argument pos:start="43:70" pos:end="43:71"><expr pos:start="43:70" pos:end="43:71"><name pos:start="43:70" pos:end="43:71">ch</name></expr></argument>, <argument pos:start="43:74" pos:end="43:78"><expr pos:start="43:74" pos:end="43:78"><name pos:start="43:74" pos:end="43:78">c_p_c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="267:5">for<control pos:start="47:8" pos:end="47:40">(<init pos:start="47:9" pos:end="47:15"><expr pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:12">pass</name><operator pos:start="47:13" pos:end="47:13">=</operator><literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init><condition pos:start="47:16" pos:end="47:33"><expr pos:start="47:16" pos:end="47:32"><name pos:start="47:16" pos:end="47:19">pass</name><operator pos:start="47:20" pos:end="47:21">&lt;=</operator><name pos:start="47:22" pos:end="47:32"><name pos:start="47:22" pos:end="47:23">vr</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:32">maxpass</name></name></expr>;</condition><incr pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><operator pos:start="47:34" pos:end="47:35">++</operator><name pos:start="47:36" pos:end="47:39">pass</name></expr></incr>)</control> <block pos:start="47:42" pos:end="267:5">{<block_content pos:start="49:9" pos:end="265:9"> <comment type="line" pos:start="47:44" pos:end="47:61">// FIXME OPTIMIZE?</comment>

        <decl_stmt pos:start="49:9" pos:end="49:30"><decl pos:start="49:9" pos:end="49:29"><type pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:21">uint_fast16_t</name></type> <name pos:start="49:23" pos:end="49:29">voffset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:38"><decl pos:start="51:9" pos:end="51:37"><type pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:21">uint_fast16_t</name></type> <name pos:start="51:23" pos:end="51:37">partition_count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="53:9" pos:end="53:43"><decl pos:start="53:9" pos:end="53:42"><type pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:21">uint_fast16_t</name></type> <name pos:start="53:23" pos:end="53:42">j_times_ptns_to_read</name></decl>;</decl_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:15">voffset</name><operator pos:start="57:16" pos:end="57:16">=</operator><name pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:18">vr</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">begin</name></name></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="265:9">for<control pos:start="59:12" pos:end="59:60">(<init pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:27">partition_count</name><operator pos:start="59:28" pos:end="59:28">=</operator><literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr>;</init><condition pos:start="59:31" pos:end="59:59"><expr pos:start="59:31" pos:end="59:58"><name pos:start="59:31" pos:end="59:45">partition_count</name><operator pos:start="59:46" pos:end="59:46">&lt;</operator><name pos:start="59:47" pos:end="59:58">ptns_to_read</name></expr>;</condition><incr/>)</control> <block pos:start="59:62" pos:end="265:9">{<block_content pos:start="61:13" pos:end="263:13">  <comment type="line" pos:start="59:65" pos:end="59:84">// SPEC        error</comment>

            <if_stmt pos:start="61:13" pos:end="105:13"><if pos:start="61:13" pos:end="105:13">if <condition pos:start="61:16" pos:end="61:22">(<expr pos:start="61:17" pos:end="61:21"><operator pos:start="61:17" pos:end="61:17">!</operator><name pos:start="61:18" pos:end="61:21">pass</name></expr>)</condition> <block pos:start="61:24" pos:end="105:13">{<block_content pos:start="63:17" pos:end="103:17">

                <decl_stmt pos:start="63:17" pos:end="63:78"><decl pos:start="63:17" pos:end="63:77"><type pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:29">uint_fast32_t</name></type> <name pos:start="63:31" pos:end="63:43">inverse_class</name> <init pos:start="63:45" pos:end="63:77">= <expr pos:start="63:47" pos:end="63:77"><name pos:start="63:47" pos:end="63:77"><name pos:start="63:47" pos:end="63:56">ff_inverse</name><index pos:start="63:57" pos:end="63:77">[<expr pos:start="63:58" pos:end="63:76"><name pos:start="63:58" pos:end="63:76"><name pos:start="63:58" pos:end="63:59">vr</name><operator pos:start="63:60" pos:end="63:61">-&gt;</operator><name pos:start="63:62" pos:end="63:76">classifications</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <for pos:start="65:17" pos:end="103:17">for<control pos:start="65:20" pos:end="65:62">(<init pos:start="65:21" pos:end="65:48"><expr pos:start="65:21" pos:end="65:42"><name pos:start="65:21" pos:end="65:40">j_times_ptns_to_read</name><operator pos:start="65:41" pos:end="65:41">=</operator><literal type="number" pos:start="65:42" pos:end="65:42">0</literal></expr><operator pos:start="65:43" pos:end="65:43">,</operator> <expr pos:start="65:45" pos:end="65:47"><name pos:start="65:45" pos:end="65:45">j</name><operator pos:start="65:46" pos:end="65:46">=</operator><literal type="number" pos:start="65:47" pos:end="65:47">0</literal></expr>;</init><condition pos:start="65:49" pos:end="65:58"><expr pos:start="65:49" pos:end="65:57"><name pos:start="65:49" pos:end="65:49">j</name><operator pos:start="65:50" pos:end="65:50">&lt;</operator><name pos:start="65:51" pos:end="65:57">ch_used</name></expr>;</condition><incr pos:start="65:59" pos:end="65:61"><expr pos:start="65:59" pos:end="65:61"><operator pos:start="65:59" pos:end="65:60">++</operator><name pos:start="65:61" pos:end="65:61">j</name></expr></incr>)</control> <block pos:start="65:64" pos:end="103:17">{<block_content pos:start="67:21" pos:end="101:55">

                    <if_stmt pos:start="67:21" pos:end="99:21"><if pos:start="67:21" pos:end="99:21">if <condition pos:start="67:24" pos:end="67:42">(<expr pos:start="67:25" pos:end="67:41"><operator pos:start="67:25" pos:end="67:25">!</operator><name pos:start="67:26" pos:end="67:41"><name pos:start="67:26" pos:end="67:38">do_not_decode</name><index pos:start="67:39" pos:end="67:41">[<expr pos:start="67:40" pos:end="67:40"><name pos:start="67:40" pos:end="67:40">j</name></expr>]</index></name></expr>)</condition> <block pos:start="67:44" pos:end="99:21">{<block_content pos:start="69:25" pos:end="97:25">

                        <decl_stmt pos:start="69:25" pos:end="71:65"><decl pos:start="69:25" pos:end="71:64"><type pos:start="69:25" pos:end="69:37"><name pos:start="69:25" pos:end="69:37">uint_fast32_t</name></type> <name pos:start="69:39" pos:end="69:42">temp</name><init pos:start="69:43" pos:end="71:64">=<expr pos:start="69:44" pos:end="71:64"><call pos:start="69:44" pos:end="71:64"><name pos:start="69:44" pos:end="69:51">get_vlc2</name><argument_list pos:start="69:52" pos:end="71:64">(<argument pos:start="69:53" pos:end="69:54"><expr pos:start="69:53" pos:end="69:54"><name pos:start="69:53" pos:end="69:54">gb</name></expr></argument>, <argument pos:start="69:57" pos:end="69:94"><expr pos:start="69:57" pos:end="69:94"><name pos:start="69:57" pos:end="69:84"><name pos:start="69:57" pos:end="69:58">vc</name><operator pos:start="69:59" pos:end="69:60">-&gt;</operator><name pos:start="69:61" pos:end="69:69">codebooks</name><index pos:start="69:70" pos:end="69:84">[<expr pos:start="69:71" pos:end="69:83"><name pos:start="69:71" pos:end="69:83"><name pos:start="69:71" pos:end="69:72">vr</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:83">classbook</name></name></expr>]</index></name><operator pos:start="69:85" pos:end="69:85">.</operator><name pos:start="69:86" pos:end="69:94"><name pos:start="69:86" pos:end="69:88">vlc</name><operator pos:start="69:89" pos:end="69:89">.</operator><name pos:start="69:90" pos:end="69:94">table</name></name></expr></argument>,

                        <argument pos:start="71:25" pos:end="71:60"><expr pos:start="71:25" pos:end="71:60"><name pos:start="71:25" pos:end="71:52"><name pos:start="71:25" pos:end="71:26">vc</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:37">codebooks</name><index pos:start="71:38" pos:end="71:52">[<expr pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:51"><name pos:start="71:39" pos:end="71:40">vr</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:51">classbook</name></name></expr>]</index></name><operator pos:start="71:53" pos:end="71:53">.</operator><name pos:start="71:54" pos:end="71:60">nb_bits</name></expr></argument>, <argument pos:start="71:63" pos:end="71:63"><expr pos:start="71:63" pos:end="71:63"><literal type="number" pos:start="71:63" pos:end="71:63">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="75:25" pos:end="75:59"><expr pos:start="75:25" pos:end="75:58"><call pos:start="75:25" pos:end="75:58"><name pos:start="75:25" pos:end="75:32">AV_DEBUG</name><argument_list pos:start="75:33" pos:end="75:58">(<argument pos:start="75:34" pos:end="75:51"><expr pos:start="75:34" pos:end="75:51"><literal type="string" pos:start="75:34" pos:end="75:51">"Classword: %d \n"</literal></expr></argument>, <argument pos:start="75:54" pos:end="75:57"><expr pos:start="75:54" pos:end="75:57"><name pos:start="75:54" pos:end="75:57">temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="79:25" pos:end="79:71"><expr pos:start="79:25" pos:end="79:70"><call pos:start="79:25" pos:end="79:70"><name pos:start="79:25" pos:end="79:30">assert</name><argument_list pos:start="79:31" pos:end="79:70">(<argument pos:start="79:32" pos:end="79:69"><expr pos:start="79:32" pos:end="79:69"><name pos:start="79:32" pos:end="79:50"><name pos:start="79:32" pos:end="79:33">vr</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:50">classifications</name></name> <operator pos:start="79:52" pos:end="79:52">&gt;</operator> <literal type="number" pos:start="79:54" pos:end="79:54">1</literal> <operator pos:start="79:56" pos:end="79:57">&amp;&amp;</operator> <name pos:start="79:59" pos:end="79:62">temp</name><operator pos:start="79:63" pos:end="79:64">&lt;=</operator><literal type="number" pos:start="79:65" pos:end="79:69">65536</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="79:73" pos:end="79:94">//needed for inverse[]</comment>

                        <for pos:start="81:25" pos:end="97:25">for<control pos:start="81:28" pos:end="81:44">(<init pos:start="81:29" pos:end="81:32"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:29">i</name><operator pos:start="81:30" pos:end="81:30">=</operator><literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr>;</init><condition pos:start="81:33" pos:end="81:40"><expr pos:start="81:33" pos:end="81:39"><name pos:start="81:33" pos:end="81:33">i</name><operator pos:start="81:34" pos:end="81:34">&lt;</operator><name pos:start="81:35" pos:end="81:39">c_p_c</name></expr>;</condition><incr pos:start="81:41" pos:end="81:43"><expr pos:start="81:41" pos:end="81:43"><operator pos:start="81:41" pos:end="81:42">++</operator><name pos:start="81:43" pos:end="81:43">i</name></expr></incr>)</control> <block pos:start="81:46" pos:end="97:25">{<block_content pos:start="83:29" pos:end="95:39">

                            <decl_stmt pos:start="83:29" pos:end="83:48"><decl pos:start="83:29" pos:end="83:47"><type pos:start="83:29" pos:end="83:41"><name pos:start="83:29" pos:end="83:41">uint_fast32_t</name></type> <name pos:start="83:43" pos:end="83:47">temp2</name></decl>;</decl_stmt>



                            <expr_stmt pos:start="87:29" pos:end="87:78"><expr pos:start="87:29" pos:end="87:77"><name pos:start="87:29" pos:end="87:33">temp2</name><operator pos:start="87:34" pos:end="87:34">=</operator><operator pos:start="87:35" pos:end="87:35">(</operator><operator pos:start="87:36" pos:end="87:36">(</operator><operator pos:start="87:37" pos:end="87:37">(</operator><name pos:start="87:38" pos:end="87:50">uint_fast64_t</name><operator pos:start="87:51" pos:end="87:51">)</operator><name pos:start="87:52" pos:end="87:55">temp</name><operator pos:start="87:56" pos:end="87:56">)</operator> <operator pos:start="87:58" pos:end="87:58">*</operator> <name pos:start="87:60" pos:end="87:72">inverse_class</name><operator pos:start="87:73" pos:end="87:73">)</operator><operator pos:start="87:74" pos:end="87:75">&gt;&gt;</operator><literal type="number" pos:start="87:76" pos:end="87:77">32</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="89:29" pos:end="93:29"><if pos:start="89:29" pos:end="93:29">if <condition pos:start="89:32" pos:end="89:73">(<expr pos:start="89:33" pos:end="89:72"><name pos:start="89:33" pos:end="89:47">partition_count</name><operator pos:start="89:48" pos:end="89:48">+</operator><name pos:start="89:49" pos:end="89:53">c_p_c</name><operator pos:start="89:54" pos:end="89:54">-</operator><literal type="number" pos:start="89:55" pos:end="89:56">1</literal><operator pos:start="89:56" pos:end="89:56">-</operator><name pos:start="89:57" pos:end="89:57">i</name> <operator pos:start="89:59" pos:end="89:59">&lt;</operator> <name pos:start="89:61" pos:end="89:72">ptns_to_read</name></expr>)</condition> <block pos:start="89:75" pos:end="93:29">{<block_content pos:start="91:33" pos:end="91:120">

                                <expr_stmt pos:start="91:33" pos:end="91:120"><expr pos:start="91:33" pos:end="91:119"><name pos:start="91:33" pos:end="91:88"><name pos:start="91:33" pos:end="91:40">classifs</name><index pos:start="91:41" pos:end="91:88">[<expr pos:start="91:42" pos:end="91:87"><name pos:start="91:42" pos:end="91:61">j_times_ptns_to_read</name><operator pos:start="91:62" pos:end="91:62">+</operator><name pos:start="91:63" pos:end="91:77">partition_count</name><operator pos:start="91:78" pos:end="91:78">+</operator><name pos:start="91:79" pos:end="91:83">c_p_c</name><operator pos:start="91:84" pos:end="91:84">-</operator><literal type="number" pos:start="91:85" pos:end="91:85">1</literal><operator pos:start="91:86" pos:end="91:86">-</operator><name pos:start="91:87" pos:end="91:87">i</name></expr>]</index></name><operator pos:start="91:89" pos:end="91:89">=</operator><name pos:start="91:90" pos:end="91:93">temp</name><operator pos:start="91:94" pos:end="91:94">-</operator><name pos:start="91:95" pos:end="91:99">temp2</name><operator pos:start="91:100" pos:end="91:100">*</operator><name pos:start="91:101" pos:end="91:119"><name pos:start="91:101" pos:end="91:102">vr</name><operator pos:start="91:103" pos:end="91:104">-&gt;</operator><name pos:start="91:105" pos:end="91:119">classifications</name></name></expr>;</expr_stmt>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="95:29" pos:end="95:39"><expr pos:start="95:29" pos:end="95:38"><name pos:start="95:29" pos:end="95:32">temp</name><operator pos:start="95:33" pos:end="95:33">=</operator><name pos:start="95:34" pos:end="95:38">temp2</name></expr>;</expr_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:55"><expr pos:start="101:21" pos:end="101:54"><name pos:start="101:21" pos:end="101:40">j_times_ptns_to_read</name><operator pos:start="101:41" pos:end="101:42">+=</operator><name pos:start="101:43" pos:end="101:54">ptns_to_read</name></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="107:13" pos:end="263:13">for<control pos:start="107:16" pos:end="107:68">(<init pos:start="107:17" pos:end="107:20"><expr pos:start="107:17" pos:end="107:19"><name pos:start="107:17" pos:end="107:17">i</name><operator pos:start="107:18" pos:end="107:18">=</operator><literal type="number" pos:start="107:19" pos:end="107:19">0</literal></expr>;</init><condition pos:start="107:21" pos:end="107:64"><expr pos:start="107:21" pos:end="107:63"><operator pos:start="107:21" pos:end="107:21">(</operator><name pos:start="107:22" pos:end="107:22">i</name><operator pos:start="107:23" pos:end="107:23">&lt;</operator><name pos:start="107:24" pos:end="107:28">c_p_c</name><operator pos:start="107:29" pos:end="107:29">)</operator> <operator pos:start="107:31" pos:end="107:32">&amp;&amp;</operator> <operator pos:start="107:34" pos:end="107:34">(</operator><name pos:start="107:35" pos:end="107:49">partition_count</name><operator pos:start="107:50" pos:end="107:50">&lt;</operator><name pos:start="107:51" pos:end="107:62">ptns_to_read</name><operator pos:start="107:63" pos:end="107:63">)</operator></expr>;</condition><incr pos:start="107:65" pos:end="107:67"><expr pos:start="107:65" pos:end="107:67"><operator pos:start="107:65" pos:end="107:66">++</operator><name pos:start="107:67" pos:end="107:67">i</name></expr></incr>)</control> <block pos:start="107:70" pos:end="263:13">{<block_content pos:start="109:17" pos:end="261:44">

                <for pos:start="109:17" pos:end="257:17">for<control pos:start="109:20" pos:end="109:62">(<init pos:start="109:21" pos:end="109:48"><expr pos:start="109:21" pos:end="109:42"><name pos:start="109:21" pos:end="109:40">j_times_ptns_to_read</name><operator pos:start="109:41" pos:end="109:41">=</operator><literal type="number" pos:start="109:42" pos:end="109:42">0</literal></expr><operator pos:start="109:43" pos:end="109:43">,</operator> <expr pos:start="109:45" pos:end="109:47"><name pos:start="109:45" pos:end="109:45">j</name><operator pos:start="109:46" pos:end="109:46">=</operator><literal type="number" pos:start="109:47" pos:end="109:47">0</literal></expr>;</init><condition pos:start="109:49" pos:end="109:58"><expr pos:start="109:49" pos:end="109:57"><name pos:start="109:49" pos:end="109:49">j</name><operator pos:start="109:50" pos:end="109:50">&lt;</operator><name pos:start="109:51" pos:end="109:57">ch_used</name></expr>;</condition><incr pos:start="109:59" pos:end="109:61"><expr pos:start="109:59" pos:end="109:61"><operator pos:start="109:59" pos:end="109:60">++</operator><name pos:start="109:61" pos:end="109:61">j</name></expr></incr>)</control> <block pos:start="109:64" pos:end="257:17">{<block_content pos:start="111:21" pos:end="255:55">

                    <decl_stmt pos:start="111:21" pos:end="111:40"><decl pos:start="111:21" pos:end="111:39"><type pos:start="111:21" pos:end="111:33"><name pos:start="111:21" pos:end="111:33">uint_fast16_t</name></type> <name pos:start="111:35" pos:end="111:39">voffs</name></decl>;</decl_stmt>



                    <if_stmt pos:start="115:21" pos:end="253:21"><if pos:start="115:21" pos:end="253:21">if <condition pos:start="115:24" pos:end="115:42">(<expr pos:start="115:25" pos:end="115:41"><operator pos:start="115:25" pos:end="115:25">!</operator><name pos:start="115:26" pos:end="115:41"><name pos:start="115:26" pos:end="115:38">do_not_decode</name><index pos:start="115:39" pos:end="115:41">[<expr pos:start="115:40" pos:end="115:40"><name pos:start="115:40" pos:end="115:40">j</name></expr>]</index></name></expr>)</condition> <block pos:start="115:44" pos:end="253:21">{<block_content pos:start="117:25" pos:end="251:25">

                        <decl_stmt pos:start="117:25" pos:end="117:92"><decl pos:start="117:25" pos:end="117:91"><type pos:start="117:25" pos:end="117:36"><name pos:start="117:25" pos:end="117:36">uint_fast8_t</name></type> <name pos:start="117:38" pos:end="117:44">vqclass</name><init pos:start="117:45" pos:end="117:91">=<expr pos:start="117:46" pos:end="117:91"><name pos:start="117:46" pos:end="117:91"><name pos:start="117:46" pos:end="117:53">classifs</name><index pos:start="117:54" pos:end="117:91">[<expr pos:start="117:55" pos:end="117:90"><name pos:start="117:55" pos:end="117:74">j_times_ptns_to_read</name><operator pos:start="117:75" pos:end="117:75">+</operator><name pos:start="117:76" pos:end="117:90">partition_count</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="119:25" pos:end="119:69"><decl pos:start="119:25" pos:end="119:68"><type pos:start="119:25" pos:end="119:36"><name pos:start="119:25" pos:end="119:36">int_fast16_t</name></type> <name pos:start="119:38" pos:end="119:43">vqbook</name><init pos:start="119:44" pos:end="119:68">=<expr pos:start="119:45" pos:end="119:68"><name pos:start="119:45" pos:end="119:68"><name pos:start="119:45" pos:end="119:46">vr</name><operator pos:start="119:47" pos:end="119:48">-&gt;</operator><name pos:start="119:49" pos:end="119:53">books</name><index pos:start="119:54" pos:end="119:62">[<expr pos:start="119:55" pos:end="119:61"><name pos:start="119:55" pos:end="119:61">vqclass</name></expr>]</index><index pos:start="119:63" pos:end="119:68">[<expr pos:start="119:64" pos:end="119:67"><name pos:start="119:64" pos:end="119:67">pass</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="123:25" pos:end="251:25"><if pos:start="123:25" pos:end="251:25">if <condition pos:start="123:28" pos:end="123:38">(<expr pos:start="123:29" pos:end="123:37"><name pos:start="123:29" pos:end="123:34">vqbook</name><operator pos:start="123:35" pos:end="123:36">&gt;=</operator><literal type="number" pos:start="123:37" pos:end="123:37">0</literal></expr>)</condition> <block pos:start="123:40" pos:end="251:25">{<block_content pos:start="125:29" pos:end="249:29">

                            <decl_stmt pos:start="125:29" pos:end="125:48"><decl pos:start="125:29" pos:end="125:47"><type pos:start="125:29" pos:end="125:41"><name pos:start="125:29" pos:end="125:41">uint_fast16_t</name></type> <name pos:start="125:43" pos:end="125:47">coffs</name></decl>;</decl_stmt>

                            <decl_stmt pos:start="127:29" pos:end="127:75"><decl pos:start="127:29" pos:end="127:74"><type pos:start="127:29" pos:end="127:36"><name pos:start="127:29" pos:end="127:36">unsigned</name></type> <name pos:start="127:38" pos:end="127:40">dim</name><init pos:start="127:41" pos:end="127:74">= <expr pos:start="127:43" pos:end="127:74"><name pos:start="127:43" pos:end="127:63"><name pos:start="127:43" pos:end="127:44">vc</name><operator pos:start="127:45" pos:end="127:46">-&gt;</operator><name pos:start="127:47" pos:end="127:55">codebooks</name><index pos:start="127:56" pos:end="127:63">[<expr pos:start="127:57" pos:end="127:62"><name pos:start="127:57" pos:end="127:62">vqbook</name></expr>]</index></name><operator pos:start="127:64" pos:end="127:64">.</operator><name pos:start="127:65" pos:end="127:74">dimensions</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="127:77" pos:end="127:126">// not uint_fast8_t: 64bit is slower here on amd64</comment>

                            <decl_stmt pos:start="129:29" pos:end="131:81"><decl pos:start="129:29" pos:end="131:80"><type pos:start="129:29" pos:end="129:41"><name pos:start="129:29" pos:end="129:41">uint_fast16_t</name></type> <name pos:start="129:43" pos:end="129:46">step</name><init pos:start="129:47" pos:end="131:80">= <expr pos:start="129:49" pos:end="131:80"><ternary pos:start="129:49" pos:end="131:80"><condition pos:start="129:49" pos:end="129:56"><expr pos:start="129:49" pos:end="129:54"><name pos:start="129:49" pos:end="129:51">dim</name><operator pos:start="129:52" pos:end="129:53">==</operator><literal type="number" pos:start="129:54" pos:end="129:54">1</literal></expr> ?</condition><then pos:start="129:58" pos:end="129:75"> <expr pos:start="129:58" pos:end="129:75"><name pos:start="129:58" pos:end="129:75"><name pos:start="129:58" pos:end="129:59">vr</name><operator pos:start="129:60" pos:end="129:61">-&gt;</operator><name pos:start="129:62" pos:end="129:75">partition_size</name></name></expr>

                                              </then><else pos:start="131:47" pos:end="131:80">: <expr pos:start="131:49" pos:end="131:80"><call pos:start="131:49" pos:end="131:80"><name pos:start="131:49" pos:end="131:55">FASTDIV</name><argument_list pos:start="131:56" pos:end="131:80">(<argument pos:start="131:57" pos:end="131:74"><expr pos:start="131:57" pos:end="131:74"><name pos:start="131:57" pos:end="131:74"><name pos:start="131:57" pos:end="131:58">vr</name><operator pos:start="131:59" pos:end="131:60">-&gt;</operator><name pos:start="131:61" pos:end="131:74">partition_size</name></name></expr></argument>, <argument pos:start="131:77" pos:end="131:79"><expr pos:start="131:77" pos:end="131:79"><name pos:start="131:77" pos:end="131:79">dim</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="133:29" pos:end="133:76"><decl pos:start="133:29" pos:end="133:75"><type pos:start="133:29" pos:end="133:43"><name pos:start="133:29" pos:end="133:43">vorbis_codebook</name></type> <name pos:start="133:45" pos:end="133:52">codebook</name><init pos:start="133:53" pos:end="133:75">= <expr pos:start="133:55" pos:end="133:75"><name pos:start="133:55" pos:end="133:75"><name pos:start="133:55" pos:end="133:56">vc</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:67">codebooks</name><index pos:start="133:68" pos:end="133:75">[<expr pos:start="133:69" pos:end="133:74"><name pos:start="133:69" pos:end="133:74">vqbook</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                            <if_stmt pos:start="137:29" pos:end="249:29"><if pos:start="137:29" pos:end="155:29">if <condition pos:start="137:32" pos:end="137:44">(<expr pos:start="137:33" pos:end="137:43"><name pos:start="137:33" pos:end="137:40"><name pos:start="137:33" pos:end="137:34">vr</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:40">type</name></name><operator pos:start="137:41" pos:end="137:42">==</operator><literal type="number" pos:start="137:43" pos:end="137:43">0</literal></expr>)</condition> <block pos:start="137:46" pos:end="155:29">{<block_content pos:start="141:33" pos:end="153:33">



                                <expr_stmt pos:start="141:33" pos:end="141:53"><expr pos:start="141:33" pos:end="141:52"><name pos:start="141:33" pos:end="141:37">voffs</name><operator pos:start="141:38" pos:end="141:38">=</operator><name pos:start="141:39" pos:end="141:45">voffset</name><operator pos:start="141:46" pos:end="141:46">+</operator><name pos:start="141:47" pos:end="141:47">j</name><operator pos:start="141:48" pos:end="141:48">*</operator><name pos:start="141:49" pos:end="141:52">vlen</name></expr>;</expr_stmt>

                                <for pos:start="143:33" pos:end="153:33">for<control pos:start="143:36" pos:end="143:51">(<init pos:start="143:37" pos:end="143:40"><expr pos:start="143:37" pos:end="143:39"><name pos:start="143:37" pos:end="143:37">k</name><operator pos:start="143:38" pos:end="143:38">=</operator><literal type="number" pos:start="143:39" pos:end="143:39">0</literal></expr>;</init><condition pos:start="143:41" pos:end="143:47"><expr pos:start="143:41" pos:end="143:46"><name pos:start="143:41" pos:end="143:41">k</name><operator pos:start="143:42" pos:end="143:42">&lt;</operator><name pos:start="143:43" pos:end="143:46">step</name></expr>;</condition><incr pos:start="143:48" pos:end="143:50"><expr pos:start="143:48" pos:end="143:50"><operator pos:start="143:48" pos:end="143:49">++</operator><name pos:start="143:50" pos:end="143:50">k</name></expr></incr>)</control> <block pos:start="143:53" pos:end="153:33">{<block_content pos:start="145:37" pos:end="151:37">

                                    <expr_stmt pos:start="145:37" pos:end="145:102"><expr pos:start="145:37" pos:end="145:101"><name pos:start="145:37" pos:end="145:41">coffs</name><operator pos:start="145:42" pos:end="145:42">=</operator><call pos:start="145:43" pos:end="145:95"><name pos:start="145:43" pos:end="145:50">get_vlc2</name><argument_list pos:start="145:51" pos:end="145:95">(<argument pos:start="145:52" pos:end="145:53"><expr pos:start="145:52" pos:end="145:53"><name pos:start="145:52" pos:end="145:53">gb</name></expr></argument>, <argument pos:start="145:56" pos:end="145:73"><expr pos:start="145:56" pos:end="145:73"><name pos:start="145:56" pos:end="145:73"><name pos:start="145:56" pos:end="145:63">codebook</name><operator pos:start="145:64" pos:end="145:64">.</operator><name pos:start="145:65" pos:end="145:67">vlc</name><operator pos:start="145:68" pos:end="145:68">.</operator><name pos:start="145:69" pos:end="145:73">table</name></name></expr></argument>, <argument pos:start="145:76" pos:end="145:91"><expr pos:start="145:76" pos:end="145:91"><name pos:start="145:76" pos:end="145:91"><name pos:start="145:76" pos:end="145:83">codebook</name><operator pos:start="145:84" pos:end="145:84">.</operator><name pos:start="145:85" pos:end="145:91">nb_bits</name></name></expr></argument>, <argument pos:start="145:94" pos:end="145:94"><expr pos:start="145:94" pos:end="145:94"><literal type="number" pos:start="145:94" pos:end="145:94">3</literal></expr></argument>)</argument_list></call> <operator pos:start="145:97" pos:end="145:97">*</operator> <name pos:start="145:99" pos:end="145:101">dim</name></expr>;</expr_stmt>

                                    <for pos:start="147:37" pos:end="151:37">for<control pos:start="147:40" pos:end="147:54">(<init pos:start="147:41" pos:end="147:44"><expr pos:start="147:41" pos:end="147:43"><name pos:start="147:41" pos:end="147:41">l</name><operator pos:start="147:42" pos:end="147:42">=</operator><literal type="number" pos:start="147:43" pos:end="147:43">0</literal></expr>;</init><condition pos:start="147:45" pos:end="147:50"><expr pos:start="147:45" pos:end="147:49"><name pos:start="147:45" pos:end="147:45">l</name><operator pos:start="147:46" pos:end="147:46">&lt;</operator><name pos:start="147:47" pos:end="147:49">dim</name></expr>;</condition><incr pos:start="147:51" pos:end="147:53"><expr pos:start="147:51" pos:end="147:53"><operator pos:start="147:51" pos:end="147:52">++</operator><name pos:start="147:53" pos:end="147:53">l</name></expr></incr>)</control> <block pos:start="147:56" pos:end="151:37">{<block_content pos:start="149:41" pos:end="149:91">

                                        <expr_stmt pos:start="149:41" pos:end="149:91"><expr pos:start="149:41" pos:end="149:90"><name pos:start="149:41" pos:end="149:59"><name pos:start="149:41" pos:end="149:43">vec</name><index pos:start="149:44" pos:end="149:59">[<expr pos:start="149:45" pos:end="149:58"><name pos:start="149:45" pos:end="149:49">voffs</name><operator pos:start="149:50" pos:end="149:50">+</operator><name pos:start="149:51" pos:end="149:51">k</name><operator pos:start="149:52" pos:end="149:52">+</operator><name pos:start="149:53" pos:end="149:53">l</name><operator pos:start="149:54" pos:end="149:54">*</operator><name pos:start="149:55" pos:end="149:58">step</name></expr>]</index></name><operator pos:start="149:60" pos:end="149:61">+=</operator><name pos:start="149:62" pos:end="149:90"><name pos:start="149:62" pos:end="149:69">codebook</name><operator pos:start="149:70" pos:end="149:70">.</operator><name pos:start="149:71" pos:end="149:81">codevectors</name><index pos:start="149:82" pos:end="149:90">[<expr pos:start="149:83" pos:end="149:89"><name pos:start="149:83" pos:end="149:87">coffs</name><operator pos:start="149:88" pos:end="149:88">+</operator><name pos:start="149:89" pos:end="149:89">l</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="149:94" pos:end="149:102">// FPMATH</comment>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if>

                            <if type="elseif" pos:start="157:29" pos:end="177:29">else if <condition pos:start="157:37" pos:end="157:49">(<expr pos:start="157:38" pos:end="157:48"><name pos:start="157:38" pos:end="157:45"><name pos:start="157:38" pos:end="157:39">vr</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:45">type</name></name><operator pos:start="157:46" pos:end="157:47">==</operator><literal type="number" pos:start="157:48" pos:end="157:48">1</literal></expr>)</condition> <block pos:start="157:51" pos:end="177:29">{<block_content pos:start="159:33" pos:end="175:33">

                                <expr_stmt pos:start="159:33" pos:end="159:53"><expr pos:start="159:33" pos:end="159:52"><name pos:start="159:33" pos:end="159:37">voffs</name><operator pos:start="159:38" pos:end="159:38">=</operator><name pos:start="159:39" pos:end="159:45">voffset</name><operator pos:start="159:46" pos:end="159:46">+</operator><name pos:start="159:47" pos:end="159:47">j</name><operator pos:start="159:48" pos:end="159:48">*</operator><name pos:start="159:49" pos:end="159:52">vlen</name></expr>;</expr_stmt>

                                <for pos:start="161:33" pos:end="175:33">for<control pos:start="161:36" pos:end="161:51">(<init pos:start="161:37" pos:end="161:40"><expr pos:start="161:37" pos:end="161:39"><name pos:start="161:37" pos:end="161:37">k</name><operator pos:start="161:38" pos:end="161:38">=</operator><literal type="number" pos:start="161:39" pos:end="161:39">0</literal></expr>;</init><condition pos:start="161:41" pos:end="161:47"><expr pos:start="161:41" pos:end="161:46"><name pos:start="161:41" pos:end="161:41">k</name><operator pos:start="161:42" pos:end="161:42">&lt;</operator><name pos:start="161:43" pos:end="161:46">step</name></expr>;</condition><incr pos:start="161:48" pos:end="161:50"><expr pos:start="161:48" pos:end="161:50"><operator pos:start="161:48" pos:end="161:49">++</operator><name pos:start="161:50" pos:end="161:50">k</name></expr></incr>)</control> <block pos:start="161:53" pos:end="175:33">{<block_content pos:start="163:37" pos:end="173:37">

                                    <expr_stmt pos:start="163:37" pos:end="163:102"><expr pos:start="163:37" pos:end="163:101"><name pos:start="163:37" pos:end="163:41">coffs</name><operator pos:start="163:42" pos:end="163:42">=</operator><call pos:start="163:43" pos:end="163:95"><name pos:start="163:43" pos:end="163:50">get_vlc2</name><argument_list pos:start="163:51" pos:end="163:95">(<argument pos:start="163:52" pos:end="163:53"><expr pos:start="163:52" pos:end="163:53"><name pos:start="163:52" pos:end="163:53">gb</name></expr></argument>, <argument pos:start="163:56" pos:end="163:73"><expr pos:start="163:56" pos:end="163:73"><name pos:start="163:56" pos:end="163:73"><name pos:start="163:56" pos:end="163:63">codebook</name><operator pos:start="163:64" pos:end="163:64">.</operator><name pos:start="163:65" pos:end="163:67">vlc</name><operator pos:start="163:68" pos:end="163:68">.</operator><name pos:start="163:69" pos:end="163:73">table</name></name></expr></argument>, <argument pos:start="163:76" pos:end="163:91"><expr pos:start="163:76" pos:end="163:91"><name pos:start="163:76" pos:end="163:91"><name pos:start="163:76" pos:end="163:83">codebook</name><operator pos:start="163:84" pos:end="163:84">.</operator><name pos:start="163:85" pos:end="163:91">nb_bits</name></name></expr></argument>, <argument pos:start="163:94" pos:end="163:94"><expr pos:start="163:94" pos:end="163:94"><literal type="number" pos:start="163:94" pos:end="163:94">3</literal></expr></argument>)</argument_list></call> <operator pos:start="163:97" pos:end="163:97">*</operator> <name pos:start="163:99" pos:end="163:101">dim</name></expr>;</expr_stmt>

                                    <for pos:start="165:37" pos:end="173:37">for<control pos:start="165:40" pos:end="165:63">(<init pos:start="165:41" pos:end="165:44"><expr pos:start="165:41" pos:end="165:43"><name pos:start="165:41" pos:end="165:41">l</name><operator pos:start="165:42" pos:end="165:42">=</operator><literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>;</init><condition pos:start="165:45" pos:end="165:50"><expr pos:start="165:45" pos:end="165:49"><name pos:start="165:45" pos:end="165:45">l</name><operator pos:start="165:46" pos:end="165:46">&lt;</operator><name pos:start="165:47" pos:end="165:49">dim</name></expr>;</condition><incr pos:start="165:51" pos:end="165:62"><expr pos:start="165:51" pos:end="165:53"><operator pos:start="165:51" pos:end="165:52">++</operator><name pos:start="165:53" pos:end="165:53">l</name></expr><operator pos:start="165:54" pos:end="165:54">,</operator> <expr pos:start="165:56" pos:end="165:62"><operator pos:start="165:56" pos:end="165:57">++</operator><name pos:start="165:58" pos:end="165:62">voffs</name></expr></incr>)</control> <block pos:start="165:65" pos:end="173:37">{<block_content pos:start="167:41" pos:end="171:170">

                                        <expr_stmt pos:start="167:41" pos:end="167:82"><expr pos:start="167:41" pos:end="167:81"><name pos:start="167:41" pos:end="167:50"><name pos:start="167:41" pos:end="167:43">vec</name><index pos:start="167:44" pos:end="167:50">[<expr pos:start="167:45" pos:end="167:49"><name pos:start="167:45" pos:end="167:49">voffs</name></expr>]</index></name><operator pos:start="167:51" pos:end="167:52">+=</operator><name pos:start="167:53" pos:end="167:81"><name pos:start="167:53" pos:end="167:60">codebook</name><operator pos:start="167:61" pos:end="167:61">.</operator><name pos:start="167:62" pos:end="167:72">codevectors</name><index pos:start="167:73" pos:end="167:81">[<expr pos:start="167:74" pos:end="167:80"><name pos:start="167:74" pos:end="167:78">coffs</name><operator pos:start="167:79" pos:end="167:79">+</operator><name pos:start="167:80" pos:end="167:80">l</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="167:85" pos:end="167:93">// FPMATH</comment>



                                        <expr_stmt pos:start="171:41" pos:end="171:170"><expr pos:start="171:41" pos:end="171:169"><call pos:start="171:41" pos:end="171:169"><name pos:start="171:41" pos:end="171:48">AV_DEBUG</name><argument_list pos:start="171:49" pos:end="171:169">(<argument pos:start="171:50" pos:end="171:105"><expr pos:start="171:50" pos:end="171:105"><literal type="string" pos:start="171:50" pos:end="171:105">" pass %d offs: %d curr: %f change: %f cv offs.: %d  \n"</literal></expr></argument>, <argument pos:start="171:108" pos:end="171:111"><expr pos:start="171:108" pos:end="171:111"><name pos:start="171:108" pos:end="171:111">pass</name></expr></argument>, <argument pos:start="171:114" pos:end="171:118"><expr pos:start="171:114" pos:end="171:118"><name pos:start="171:114" pos:end="171:118">voffs</name></expr></argument>, <argument pos:start="171:121" pos:end="171:130"><expr pos:start="171:121" pos:end="171:130"><name pos:start="171:121" pos:end="171:130"><name pos:start="171:121" pos:end="171:123">vec</name><index pos:start="171:124" pos:end="171:130">[<expr pos:start="171:125" pos:end="171:129"><name pos:start="171:125" pos:end="171:129">voffs</name></expr>]</index></name></expr></argument>, <argument pos:start="171:133" pos:end="171:161"><expr pos:start="171:133" pos:end="171:161"><name pos:start="171:133" pos:end="171:161"><name pos:start="171:133" pos:end="171:140">codebook</name><operator pos:start="171:141" pos:end="171:141">.</operator><name pos:start="171:142" pos:end="171:152">codevectors</name><index pos:start="171:153" pos:end="171:161">[<expr pos:start="171:154" pos:end="171:160"><name pos:start="171:154" pos:end="171:158">coffs</name><operator pos:start="171:159" pos:end="171:159">+</operator><name pos:start="171:160" pos:end="171:160">l</name></expr>]</index></name></expr></argument>, <argument pos:start="171:164" pos:end="171:168"><expr pos:start="171:164" pos:end="171:168"><name pos:start="171:164" pos:end="171:168">coffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if>

                            <if type="elseif" pos:start="179:29" pos:end="219:29">else if <condition pos:start="179:37" pos:end="179:90">(<expr pos:start="179:38" pos:end="179:89"><name pos:start="179:38" pos:end="179:45"><name pos:start="179:38" pos:end="179:39">vr</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:45">type</name></name><operator pos:start="179:46" pos:end="179:47">==</operator><literal type="number" pos:start="179:48" pos:end="179:48">2</literal> <operator pos:start="179:50" pos:end="179:51">&amp;&amp;</operator> <name pos:start="179:53" pos:end="179:54">ch</name><operator pos:start="179:55" pos:end="179:56">==</operator><literal type="number" pos:start="179:57" pos:end="179:57">2</literal> <operator pos:start="179:59" pos:end="179:60">&amp;&amp;</operator> <operator pos:start="179:62" pos:end="179:62">(</operator><name pos:start="179:63" pos:end="179:69">voffset</name><operator pos:start="179:70" pos:end="179:70">&amp;</operator><literal type="number" pos:start="179:71" pos:end="179:71">1</literal><operator pos:start="179:72" pos:end="179:72">)</operator><operator pos:start="179:73" pos:end="179:74">==</operator><literal type="number" pos:start="179:75" pos:end="179:75">0</literal> <operator pos:start="179:77" pos:end="179:78">&amp;&amp;</operator> <operator pos:start="179:80" pos:end="179:80">(</operator><name pos:start="179:81" pos:end="179:83">dim</name><operator pos:start="179:84" pos:end="179:84">&amp;</operator><literal type="number" pos:start="179:85" pos:end="179:85">1</literal><operator pos:start="179:86" pos:end="179:86">)</operator><operator pos:start="179:87" pos:end="179:88">==</operator><literal type="number" pos:start="179:89" pos:end="179:89">0</literal></expr>)</condition> <block pos:start="179:92" pos:end="219:29">{<block_content pos:start="181:33" pos:end="215:33"> <comment type="line" pos:start="179:94" pos:end="179:124">// most frequent case optimized</comment>

                                <expr_stmt pos:start="181:33" pos:end="181:49"><expr pos:start="181:33" pos:end="181:48"><name pos:start="181:33" pos:end="181:37">voffs</name><operator pos:start="181:38" pos:end="181:38">=</operator><name pos:start="181:39" pos:end="181:45">voffset</name><operator pos:start="181:46" pos:end="181:47">&gt;&gt;</operator><literal type="number" pos:start="181:48" pos:end="181:48">1</literal></expr>;</expr_stmt>



                                <if_stmt pos:start="185:33" pos:end="215:33"><if pos:start="185:33" pos:end="197:33">if<condition pos:start="185:35" pos:end="185:42">(<expr pos:start="185:36" pos:end="185:41"><name pos:start="185:36" pos:end="185:38">dim</name><operator pos:start="185:39" pos:end="185:40">==</operator><literal type="number" pos:start="185:41" pos:end="185:41">2</literal></expr>)</condition> <block pos:start="185:44" pos:end="197:33">{<block_content pos:start="187:37" pos:end="195:37">

                                    <for pos:start="187:37" pos:end="195:37">for<control pos:start="187:40" pos:end="187:55">(<init pos:start="187:41" pos:end="187:44"><expr pos:start="187:41" pos:end="187:43"><name pos:start="187:41" pos:end="187:41">k</name><operator pos:start="187:42" pos:end="187:42">=</operator><literal type="number" pos:start="187:43" pos:end="187:43">0</literal></expr>;</init><condition pos:start="187:45" pos:end="187:51"><expr pos:start="187:45" pos:end="187:50"><name pos:start="187:45" pos:end="187:45">k</name><operator pos:start="187:46" pos:end="187:46">&lt;</operator><name pos:start="187:47" pos:end="187:50">step</name></expr>;</condition><incr pos:start="187:52" pos:end="187:54"><expr pos:start="187:52" pos:end="187:54"><operator pos:start="187:52" pos:end="187:53">++</operator><name pos:start="187:54" pos:end="187:54">k</name></expr></incr>)</control> <block pos:start="187:57" pos:end="195:37">{<block_content pos:start="189:41" pos:end="193:89">

                                        <expr_stmt pos:start="189:41" pos:end="189:104"><expr pos:start="189:41" pos:end="189:103"><name pos:start="189:41" pos:end="189:45">coffs</name><operator pos:start="189:46" pos:end="189:46">=</operator><call pos:start="189:47" pos:end="189:99"><name pos:start="189:47" pos:end="189:54">get_vlc2</name><argument_list pos:start="189:55" pos:end="189:99">(<argument pos:start="189:56" pos:end="189:57"><expr pos:start="189:56" pos:end="189:57"><name pos:start="189:56" pos:end="189:57">gb</name></expr></argument>, <argument pos:start="189:60" pos:end="189:77"><expr pos:start="189:60" pos:end="189:77"><name pos:start="189:60" pos:end="189:77"><name pos:start="189:60" pos:end="189:67">codebook</name><operator pos:start="189:68" pos:end="189:68">.</operator><name pos:start="189:69" pos:end="189:71">vlc</name><operator pos:start="189:72" pos:end="189:72">.</operator><name pos:start="189:73" pos:end="189:77">table</name></name></expr></argument>, <argument pos:start="189:80" pos:end="189:95"><expr pos:start="189:80" pos:end="189:95"><name pos:start="189:80" pos:end="189:95"><name pos:start="189:80" pos:end="189:87">codebook</name><operator pos:start="189:88" pos:end="189:88">.</operator><name pos:start="189:89" pos:end="189:95">nb_bits</name></name></expr></argument>, <argument pos:start="189:98" pos:end="189:98"><expr pos:start="189:98" pos:end="189:98"><literal type="number" pos:start="189:98" pos:end="189:98">3</literal></expr></argument>)</argument_list></call> <operator pos:start="189:101" pos:end="189:101">*</operator> <literal type="number" pos:start="189:103" pos:end="189:103">2</literal></expr>;</expr_stmt>

                                        <expr_stmt pos:start="191:41" pos:end="191:89"><expr pos:start="191:41" pos:end="191:88"><name pos:start="191:41" pos:end="191:57"><name pos:start="191:41" pos:end="191:43">vec</name><index pos:start="191:44" pos:end="191:57">[<expr pos:start="191:45" pos:end="191:51"><name pos:start="191:45" pos:end="191:49">voffs</name><operator pos:start="191:50" pos:end="191:50">+</operator><name pos:start="191:51" pos:end="191:51">k</name></expr>     ]</index></name><operator pos:start="191:58" pos:end="191:59">+=</operator><name pos:start="191:60" pos:end="191:88"><name pos:start="191:60" pos:end="191:67">codebook</name><operator pos:start="191:68" pos:end="191:68">.</operator><name pos:start="191:69" pos:end="191:79">codevectors</name><index pos:start="191:80" pos:end="191:88">[<expr pos:start="191:81" pos:end="191:85"><name pos:start="191:81" pos:end="191:85">coffs</name></expr>  ]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="191:92" pos:end="191:100">// FPMATH</comment>

                                        <expr_stmt pos:start="193:41" pos:end="193:89"><expr pos:start="193:41" pos:end="193:88"><name pos:start="193:41" pos:end="193:57"><name pos:start="193:41" pos:end="193:43">vec</name><index pos:start="193:44" pos:end="193:57">[<expr pos:start="193:45" pos:end="193:56"><name pos:start="193:45" pos:end="193:49">voffs</name><operator pos:start="193:50" pos:end="193:50">+</operator><name pos:start="193:51" pos:end="193:51">k</name><operator pos:start="193:52" pos:end="193:52">+</operator><name pos:start="193:53" pos:end="193:56">vlen</name></expr>]</index></name><operator pos:start="193:58" pos:end="193:59">+=</operator><name pos:start="193:60" pos:end="193:88"><name pos:start="193:60" pos:end="193:67">codebook</name><operator pos:start="193:68" pos:end="193:68">.</operator><name pos:start="193:69" pos:end="193:79">codevectors</name><index pos:start="193:80" pos:end="193:88">[<expr pos:start="193:81" pos:end="193:87"><name pos:start="193:81" pos:end="193:85">coffs</name><operator pos:start="193:86" pos:end="193:86">+</operator><literal type="number" pos:start="193:87" pos:end="193:87">1</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="193:92" pos:end="193:100">// FPMATH</comment>

                                    </block_content>}</block></for>

                                </block_content>}</block></if> <else pos:start="197:35" pos:end="215:33">else<block type="pseudo" pos:start="199:33" pos:end="215:33"><block_content pos:start="199:33" pos:end="215:33">

                                <for pos:start="199:33" pos:end="215:33">for<control pos:start="199:36" pos:end="199:51">(<init pos:start="199:37" pos:end="199:40"><expr pos:start="199:37" pos:end="199:39"><name pos:start="199:37" pos:end="199:37">k</name><operator pos:start="199:38" pos:end="199:38">=</operator><literal type="number" pos:start="199:39" pos:end="199:39">0</literal></expr>;</init><condition pos:start="199:41" pos:end="199:47"><expr pos:start="199:41" pos:end="199:46"><name pos:start="199:41" pos:end="199:41">k</name><operator pos:start="199:42" pos:end="199:42">&lt;</operator><name pos:start="199:43" pos:end="199:46">step</name></expr>;</condition><incr pos:start="199:48" pos:end="199:50"><expr pos:start="199:48" pos:end="199:50"><operator pos:start="199:48" pos:end="199:49">++</operator><name pos:start="199:50" pos:end="199:50">k</name></expr></incr>)</control> <block pos:start="199:53" pos:end="215:33">{<block_content pos:start="201:37" pos:end="213:37">

                                    <expr_stmt pos:start="201:37" pos:end="201:102"><expr pos:start="201:37" pos:end="201:101"><name pos:start="201:37" pos:end="201:41">coffs</name><operator pos:start="201:42" pos:end="201:42">=</operator><call pos:start="201:43" pos:end="201:95"><name pos:start="201:43" pos:end="201:50">get_vlc2</name><argument_list pos:start="201:51" pos:end="201:95">(<argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">gb</name></expr></argument>, <argument pos:start="201:56" pos:end="201:73"><expr pos:start="201:56" pos:end="201:73"><name pos:start="201:56" pos:end="201:73"><name pos:start="201:56" pos:end="201:63">codebook</name><operator pos:start="201:64" pos:end="201:64">.</operator><name pos:start="201:65" pos:end="201:67">vlc</name><operator pos:start="201:68" pos:end="201:68">.</operator><name pos:start="201:69" pos:end="201:73">table</name></name></expr></argument>, <argument pos:start="201:76" pos:end="201:91"><expr pos:start="201:76" pos:end="201:91"><name pos:start="201:76" pos:end="201:91"><name pos:start="201:76" pos:end="201:83">codebook</name><operator pos:start="201:84" pos:end="201:84">.</operator><name pos:start="201:85" pos:end="201:91">nb_bits</name></name></expr></argument>, <argument pos:start="201:94" pos:end="201:94"><expr pos:start="201:94" pos:end="201:94"><literal type="number" pos:start="201:94" pos:end="201:94">3</literal></expr></argument>)</argument_list></call> <operator pos:start="201:97" pos:end="201:97">*</operator> <name pos:start="201:99" pos:end="201:101">dim</name></expr>;</expr_stmt>

                                    <for pos:start="203:37" pos:end="213:37">for<control pos:start="203:40" pos:end="203:64">(<init pos:start="203:41" pos:end="203:44"><expr pos:start="203:41" pos:end="203:43"><name pos:start="203:41" pos:end="203:41">l</name><operator pos:start="203:42" pos:end="203:42">=</operator><literal type="number" pos:start="203:43" pos:end="203:43">0</literal></expr>;</init><condition pos:start="203:45" pos:end="203:50"><expr pos:start="203:45" pos:end="203:49"><name pos:start="203:45" pos:end="203:45">l</name><operator pos:start="203:46" pos:end="203:46">&lt;</operator><name pos:start="203:47" pos:end="203:49">dim</name></expr>;</condition><incr pos:start="203:51" pos:end="203:63"><expr pos:start="203:51" pos:end="203:54"><name pos:start="203:51" pos:end="203:51">l</name><operator pos:start="203:52" pos:end="203:53">+=</operator><literal type="number" pos:start="203:54" pos:end="203:54">2</literal></expr><operator pos:start="203:55" pos:end="203:55">,</operator> <expr pos:start="203:57" pos:end="203:63"><name pos:start="203:57" pos:end="203:61">voffs</name><operator pos:start="203:62" pos:end="203:63">++</operator></expr></incr>)</control> <block pos:start="203:66" pos:end="213:37">{<block_content pos:start="205:41" pos:end="211:218">

                                        <expr_stmt pos:start="205:41" pos:end="205:89"><expr pos:start="205:41" pos:end="205:88"><name pos:start="205:41" pos:end="205:55"><name pos:start="205:41" pos:end="205:43">vec</name><index pos:start="205:44" pos:end="205:55">[<expr pos:start="205:45" pos:end="205:49"><name pos:start="205:45" pos:end="205:49">voffs</name></expr>     ]</index></name><operator pos:start="205:56" pos:end="205:57">+=</operator><name pos:start="205:58" pos:end="205:88"><name pos:start="205:58" pos:end="205:65">codebook</name><operator pos:start="205:66" pos:end="205:66">.</operator><name pos:start="205:67" pos:end="205:77">codevectors</name><index pos:start="205:78" pos:end="205:88">[<expr pos:start="205:79" pos:end="205:85"><name pos:start="205:79" pos:end="205:83">coffs</name><operator pos:start="205:84" pos:end="205:84">+</operator><name pos:start="205:85" pos:end="205:85">l</name></expr>  ]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="205:92" pos:end="205:100">// FPMATH</comment>

                                        <expr_stmt pos:start="207:41" pos:end="207:89"><expr pos:start="207:41" pos:end="207:88"><name pos:start="207:41" pos:end="207:55"><name pos:start="207:41" pos:end="207:43">vec</name><index pos:start="207:44" pos:end="207:55">[<expr pos:start="207:45" pos:end="207:54"><name pos:start="207:45" pos:end="207:49">voffs</name><operator pos:start="207:50" pos:end="207:50">+</operator><name pos:start="207:51" pos:end="207:54">vlen</name></expr>]</index></name><operator pos:start="207:56" pos:end="207:57">+=</operator><name pos:start="207:58" pos:end="207:88"><name pos:start="207:58" pos:end="207:65">codebook</name><operator pos:start="207:66" pos:end="207:66">.</operator><name pos:start="207:67" pos:end="207:77">codevectors</name><index pos:start="207:78" pos:end="207:88">[<expr pos:start="207:79" pos:end="207:87"><name pos:start="207:79" pos:end="207:83">coffs</name><operator pos:start="207:84" pos:end="207:84">+</operator><name pos:start="207:85" pos:end="207:85">l</name><operator pos:start="207:86" pos:end="207:86">+</operator><literal type="number" pos:start="207:87" pos:end="207:87">1</literal></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="207:92" pos:end="207:100">// FPMATH</comment>



                                        <expr_stmt pos:start="211:41" pos:end="211:218"><expr pos:start="211:41" pos:end="211:217"><call pos:start="211:41" pos:end="211:217"><name pos:start="211:41" pos:end="211:48">AV_DEBUG</name><argument_list pos:start="211:49" pos:end="211:217">(<argument pos:start="211:50" pos:end="211:108"><expr pos:start="211:50" pos:end="211:108"><literal type="string" pos:start="211:50" pos:end="211:108">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>, <argument pos:start="211:111" pos:end="211:114"><expr pos:start="211:111" pos:end="211:114"><name pos:start="211:111" pos:end="211:114">pass</name></expr></argument>, <argument pos:start="211:117" pos:end="211:142"><expr pos:start="211:117" pos:end="211:142"><name pos:start="211:117" pos:end="211:123">voffset</name><operator pos:start="211:124" pos:end="211:124">/</operator><name pos:start="211:125" pos:end="211:126">ch</name><operator pos:start="211:127" pos:end="211:127">+</operator><operator pos:start="211:128" pos:end="211:128">(</operator><name pos:start="211:129" pos:end="211:133">voffs</name><operator pos:start="211:134" pos:end="211:134">%</operator><name pos:start="211:135" pos:end="211:136">ch</name><operator pos:start="211:137" pos:end="211:137">)</operator><operator pos:start="211:138" pos:end="211:138">*</operator><name pos:start="211:139" pos:end="211:142">vlen</name></expr></argument>, <argument pos:start="211:145" pos:end="211:175"><expr pos:start="211:145" pos:end="211:175"><name pos:start="211:145" pos:end="211:175"><name pos:start="211:145" pos:end="211:147">vec</name><index pos:start="211:148" pos:end="211:175">[<expr pos:start="211:149" pos:end="211:174"><name pos:start="211:149" pos:end="211:155">voffset</name><operator pos:start="211:156" pos:end="211:156">/</operator><name pos:start="211:157" pos:end="211:158">ch</name><operator pos:start="211:159" pos:end="211:159">+</operator><operator pos:start="211:160" pos:end="211:160">(</operator><name pos:start="211:161" pos:end="211:165">voffs</name><operator pos:start="211:166" pos:end="211:166">%</operator><name pos:start="211:167" pos:end="211:168">ch</name><operator pos:start="211:169" pos:end="211:169">)</operator><operator pos:start="211:170" pos:end="211:170">*</operator><name pos:start="211:171" pos:end="211:174">vlen</name></expr>]</index></name></expr></argument>, <argument pos:start="211:178" pos:end="211:206"><expr pos:start="211:178" pos:end="211:206"><name pos:start="211:178" pos:end="211:206"><name pos:start="211:178" pos:end="211:185">codebook</name><operator pos:start="211:186" pos:end="211:186">.</operator><name pos:start="211:187" pos:end="211:197">codevectors</name><index pos:start="211:198" pos:end="211:206">[<expr pos:start="211:199" pos:end="211:205"><name pos:start="211:199" pos:end="211:203">coffs</name><operator pos:start="211:204" pos:end="211:204">+</operator><name pos:start="211:205" pos:end="211:205">l</name></expr>]</index></name></expr></argument>, <argument pos:start="211:209" pos:end="211:213"><expr pos:start="211:209" pos:end="211:213"><name pos:start="211:209" pos:end="211:213">coffs</name></expr></argument>, <argument pos:start="211:216" pos:end="211:216"><expr pos:start="211:216" pos:end="211:216"><name pos:start="211:216" pos:end="211:216">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for></block_content></block></else></if_stmt>



                            </block_content>}</block></if>

                            <if type="elseif" pos:start="221:29" pos:end="243:29">else if <condition pos:start="221:37" pos:end="221:49">(<expr pos:start="221:38" pos:end="221:48"><name pos:start="221:38" pos:end="221:45"><name pos:start="221:38" pos:end="221:39">vr</name><operator pos:start="221:40" pos:end="221:41">-&gt;</operator><name pos:start="221:42" pos:end="221:45">type</name></name><operator pos:start="221:46" pos:end="221:47">==</operator><literal type="number" pos:start="221:48" pos:end="221:48">2</literal></expr>)</condition> <block pos:start="221:51" pos:end="243:29">{<block_content pos:start="223:33" pos:end="241:33">

                                <expr_stmt pos:start="223:33" pos:end="223:46"><expr pos:start="223:33" pos:end="223:45"><name pos:start="223:33" pos:end="223:37">voffs</name><operator pos:start="223:38" pos:end="223:38">=</operator><name pos:start="223:39" pos:end="223:45">voffset</name></expr>;</expr_stmt>



                                <for pos:start="227:33" pos:end="241:33">for<control pos:start="227:36" pos:end="227:51">(<init pos:start="227:37" pos:end="227:40"><expr pos:start="227:37" pos:end="227:39"><name pos:start="227:37" pos:end="227:37">k</name><operator pos:start="227:38" pos:end="227:38">=</operator><literal type="number" pos:start="227:39" pos:end="227:39">0</literal></expr>;</init><condition pos:start="227:41" pos:end="227:47"><expr pos:start="227:41" pos:end="227:46"><name pos:start="227:41" pos:end="227:41">k</name><operator pos:start="227:42" pos:end="227:42">&lt;</operator><name pos:start="227:43" pos:end="227:46">step</name></expr>;</condition><incr pos:start="227:48" pos:end="227:50"><expr pos:start="227:48" pos:end="227:50"><operator pos:start="227:48" pos:end="227:49">++</operator><name pos:start="227:50" pos:end="227:50">k</name></expr></incr>)</control> <block pos:start="227:53" pos:end="241:33">{<block_content pos:start="229:37" pos:end="239:37">

                                    <expr_stmt pos:start="229:37" pos:end="229:102"><expr pos:start="229:37" pos:end="229:101"><name pos:start="229:37" pos:end="229:41">coffs</name><operator pos:start="229:42" pos:end="229:42">=</operator><call pos:start="229:43" pos:end="229:95"><name pos:start="229:43" pos:end="229:50">get_vlc2</name><argument_list pos:start="229:51" pos:end="229:95">(<argument pos:start="229:52" pos:end="229:53"><expr pos:start="229:52" pos:end="229:53"><name pos:start="229:52" pos:end="229:53">gb</name></expr></argument>, <argument pos:start="229:56" pos:end="229:73"><expr pos:start="229:56" pos:end="229:73"><name pos:start="229:56" pos:end="229:73"><name pos:start="229:56" pos:end="229:63">codebook</name><operator pos:start="229:64" pos:end="229:64">.</operator><name pos:start="229:65" pos:end="229:67">vlc</name><operator pos:start="229:68" pos:end="229:68">.</operator><name pos:start="229:69" pos:end="229:73">table</name></name></expr></argument>, <argument pos:start="229:76" pos:end="229:91"><expr pos:start="229:76" pos:end="229:91"><name pos:start="229:76" pos:end="229:91"><name pos:start="229:76" pos:end="229:83">codebook</name><operator pos:start="229:84" pos:end="229:84">.</operator><name pos:start="229:85" pos:end="229:91">nb_bits</name></name></expr></argument>, <argument pos:start="229:94" pos:end="229:94"><expr pos:start="229:94" pos:end="229:94"><literal type="number" pos:start="229:94" pos:end="229:94">3</literal></expr></argument>)</argument_list></call> <operator pos:start="229:97" pos:end="229:97">*</operator> <name pos:start="229:99" pos:end="229:101">dim</name></expr>;</expr_stmt>

                                    <for pos:start="231:37" pos:end="239:37">for<control pos:start="231:40" pos:end="231:63">(<init pos:start="231:41" pos:end="231:44"><expr pos:start="231:41" pos:end="231:43"><name pos:start="231:41" pos:end="231:41">l</name><operator pos:start="231:42" pos:end="231:42">=</operator><literal type="number" pos:start="231:43" pos:end="231:43">0</literal></expr>;</init><condition pos:start="231:45" pos:end="231:50"><expr pos:start="231:45" pos:end="231:49"><name pos:start="231:45" pos:end="231:45">l</name><operator pos:start="231:46" pos:end="231:46">&lt;</operator><name pos:start="231:47" pos:end="231:49">dim</name></expr>;</condition><incr pos:start="231:51" pos:end="231:62"><expr pos:start="231:51" pos:end="231:53"><operator pos:start="231:51" pos:end="231:52">++</operator><name pos:start="231:53" pos:end="231:53">l</name></expr><operator pos:start="231:54" pos:end="231:54">,</operator> <expr pos:start="231:56" pos:end="231:62"><operator pos:start="231:56" pos:end="231:57">++</operator><name pos:start="231:58" pos:end="231:62">voffs</name></expr></incr>)</control> <block pos:start="231:65" pos:end="239:37">{<block_content pos:start="233:41" pos:end="237:218">

                                        <expr_stmt pos:start="233:41" pos:end="233:101"><expr pos:start="233:41" pos:end="233:100"><name pos:start="233:41" pos:end="233:69"><name pos:start="233:41" pos:end="233:43">vec</name><index pos:start="233:44" pos:end="233:69">[<expr pos:start="233:45" pos:end="233:68"><name pos:start="233:45" pos:end="233:49">voffs</name><operator pos:start="233:50" pos:end="233:50">/</operator><name pos:start="233:51" pos:end="233:52">ch</name><operator pos:start="233:53" pos:end="233:53">+</operator><operator pos:start="233:54" pos:end="233:54">(</operator><name pos:start="233:55" pos:end="233:59">voffs</name><operator pos:start="233:60" pos:end="233:60">%</operator><name pos:start="233:61" pos:end="233:62">ch</name><operator pos:start="233:63" pos:end="233:63">)</operator><operator pos:start="233:64" pos:end="233:64">*</operator><name pos:start="233:65" pos:end="233:68">vlen</name></expr>]</index></name><operator pos:start="233:70" pos:end="233:71">+=</operator><name pos:start="233:72" pos:end="233:100"><name pos:start="233:72" pos:end="233:79">codebook</name><operator pos:start="233:80" pos:end="233:80">.</operator><name pos:start="233:81" pos:end="233:91">codevectors</name><index pos:start="233:92" pos:end="233:100">[<expr pos:start="233:93" pos:end="233:99"><name pos:start="233:93" pos:end="233:97">coffs</name><operator pos:start="233:98" pos:end="233:98">+</operator><name pos:start="233:99" pos:end="233:99">l</name></expr>]</index></name></expr>;</expr_stmt>  <comment type="line" pos:start="233:104" pos:end="233:156">// FPMATH FIXME use if and counter instead of / and %</comment>



                                        <expr_stmt pos:start="237:41" pos:end="237:218"><expr pos:start="237:41" pos:end="237:217"><call pos:start="237:41" pos:end="237:217"><name pos:start="237:41" pos:end="237:48">AV_DEBUG</name><argument_list pos:start="237:49" pos:end="237:217">(<argument pos:start="237:50" pos:end="237:108"><expr pos:start="237:50" pos:end="237:108"><literal type="string" pos:start="237:50" pos:end="237:108">" pass %d offs: %d curr: %f change: %f cv offs.: %d+%d  \n"</literal></expr></argument>, <argument pos:start="237:111" pos:end="237:114"><expr pos:start="237:111" pos:end="237:114"><name pos:start="237:111" pos:end="237:114">pass</name></expr></argument>, <argument pos:start="237:117" pos:end="237:142"><expr pos:start="237:117" pos:end="237:142"><name pos:start="237:117" pos:end="237:123">voffset</name><operator pos:start="237:124" pos:end="237:124">/</operator><name pos:start="237:125" pos:end="237:126">ch</name><operator pos:start="237:127" pos:end="237:127">+</operator><operator pos:start="237:128" pos:end="237:128">(</operator><name pos:start="237:129" pos:end="237:133">voffs</name><operator pos:start="237:134" pos:end="237:134">%</operator><name pos:start="237:135" pos:end="237:136">ch</name><operator pos:start="237:137" pos:end="237:137">)</operator><operator pos:start="237:138" pos:end="237:138">*</operator><name pos:start="237:139" pos:end="237:142">vlen</name></expr></argument>, <argument pos:start="237:145" pos:end="237:175"><expr pos:start="237:145" pos:end="237:175"><name pos:start="237:145" pos:end="237:175"><name pos:start="237:145" pos:end="237:147">vec</name><index pos:start="237:148" pos:end="237:175">[<expr pos:start="237:149" pos:end="237:174"><name pos:start="237:149" pos:end="237:155">voffset</name><operator pos:start="237:156" pos:end="237:156">/</operator><name pos:start="237:157" pos:end="237:158">ch</name><operator pos:start="237:159" pos:end="237:159">+</operator><operator pos:start="237:160" pos:end="237:160">(</operator><name pos:start="237:161" pos:end="237:165">voffs</name><operator pos:start="237:166" pos:end="237:166">%</operator><name pos:start="237:167" pos:end="237:168">ch</name><operator pos:start="237:169" pos:end="237:169">)</operator><operator pos:start="237:170" pos:end="237:170">*</operator><name pos:start="237:171" pos:end="237:174">vlen</name></expr>]</index></name></expr></argument>, <argument pos:start="237:178" pos:end="237:206"><expr pos:start="237:178" pos:end="237:206"><name pos:start="237:178" pos:end="237:206"><name pos:start="237:178" pos:end="237:185">codebook</name><operator pos:start="237:186" pos:end="237:186">.</operator><name pos:start="237:187" pos:end="237:197">codevectors</name><index pos:start="237:198" pos:end="237:206">[<expr pos:start="237:199" pos:end="237:205"><name pos:start="237:199" pos:end="237:203">coffs</name><operator pos:start="237:204" pos:end="237:204">+</operator><name pos:start="237:205" pos:end="237:205">l</name></expr>]</index></name></expr></argument>, <argument pos:start="237:209" pos:end="237:213"><expr pos:start="237:209" pos:end="237:213"><name pos:start="237:209" pos:end="237:213">coffs</name></expr></argument>, <argument pos:start="237:216" pos:end="237:216"><expr pos:start="237:216" pos:end="237:216"><name pos:start="237:216" pos:end="237:216">l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    </block_content>}</block></for>

                                </block_content>}</block></for>

                            </block_content>}</block></if> <else pos:start="243:31" pos:end="249:29">else <block pos:start="243:36" pos:end="249:29">{<block_content pos:start="245:33" pos:end="247:41">

                                <expr_stmt pos:start="245:33" pos:end="245:120"><expr pos:start="245:33" pos:end="245:119"><call pos:start="245:33" pos:end="245:119"><name pos:start="245:33" pos:end="245:38">av_log</name><argument_list pos:start="245:39" pos:end="245:119">(<argument pos:start="245:40" pos:end="245:53"><expr pos:start="245:40" pos:end="245:53"><name pos:start="245:40" pos:end="245:53"><name pos:start="245:40" pos:end="245:41">vc</name><operator pos:start="245:42" pos:end="245:43">-&gt;</operator><name pos:start="245:44" pos:end="245:53">avccontext</name></name></expr></argument>, <argument pos:start="245:56" pos:end="245:67"><expr pos:start="245:56" pos:end="245:67"><name pos:start="245:56" pos:end="245:67">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="245:70" pos:end="245:118"><expr pos:start="245:70" pos:end="245:118"><literal type="string" pos:start="245:70" pos:end="245:118">" Invalid residue type while residue decode?! \n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="247:33" pos:end="247:41">return <expr pos:start="247:40" pos:end="247:40"><literal type="number" pos:start="247:40" pos:end="247:40">1</literal></expr>;</return>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="255:21" pos:end="255:55"><expr pos:start="255:21" pos:end="255:54"><name pos:start="255:21" pos:end="255:40">j_times_ptns_to_read</name><operator pos:start="255:41" pos:end="255:42">+=</operator><name pos:start="255:43" pos:end="255:54">ptns_to_read</name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="259:17" pos:end="259:34"><expr pos:start="259:17" pos:end="259:33"><operator pos:start="259:17" pos:end="259:18">++</operator><name pos:start="259:19" pos:end="259:33">partition_count</name></expr>;</expr_stmt>

                <expr_stmt pos:start="261:17" pos:end="261:44"><expr pos:start="261:17" pos:end="261:43"><name pos:start="261:17" pos:end="261:23">voffset</name><operator pos:start="261:24" pos:end="261:25">+=</operator><name pos:start="261:26" pos:end="261:43"><name pos:start="261:26" pos:end="261:27">vr</name><operator pos:start="261:28" pos:end="261:29">-&gt;</operator><name pos:start="261:30" pos:end="261:43">partition_size</name></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="269:5" pos:end="269:13">return <expr pos:start="269:12" pos:end="269:12"><literal type="number" pos:start="269:12" pos:end="269:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
