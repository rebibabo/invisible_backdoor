<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20466.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">dec_scall</name><parameter_list pos:start="1:22" pos:end="1:39">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:34">DisasContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <if_stmt pos:start="5:5" pos:end="17:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:16"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:16">imm5</name></name> <operator pos:start="5:18" pos:end="5:19">==</operator> <literal type="number" pos:start="5:21" pos:end="5:21">7</literal></expr>)</condition> <block pos:start="5:24" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:27">

        <expr_stmt pos:start="7:9" pos:end="7:27"><expr pos:start="7:9" pos:end="7:26"><call pos:start="7:9" pos:end="7:26"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:26">(<argument pos:start="7:17" pos:end="7:25"><expr pos:start="7:17" pos:end="7:25"><literal type="string" pos:start="7:17" pos:end="7:25">"scall\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="9:7" pos:end="13:5">else if <condition pos:start="9:15" pos:end="9:29">(<expr pos:start="9:16" pos:end="9:28"><name pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:17">dc</name><operator pos:start="9:18" pos:end="9:19">-&gt;</operator><name pos:start="9:20" pos:end="9:23">imm5</name></name> <operator pos:start="9:25" pos:end="9:26">==</operator> <literal type="number" pos:start="9:28" pos:end="9:28">2</literal></expr>)</condition> <block pos:start="9:31" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:27">

        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><call pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:26">(<argument pos:start="11:17" pos:end="11:25"><expr pos:start="11:17" pos:end="11:25"><literal type="string" pos:start="11:17" pos:end="11:25">"break\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:47">

        <expr_stmt pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:46"><call pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:17">cpu_abort</name><argument_list pos:start="15:18" pos:end="15:46">(<argument pos:start="15:19" pos:end="15:25"><expr pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:25"><name pos:start="15:19" pos:end="15:20">dc</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:25">env</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:45"><expr pos:start="15:28" pos:end="15:45"><literal type="string" pos:start="15:28" pos:end="15:45">"invalid opcode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:10">dc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:16">imm5</name></name> <operator pos:start="21:18" pos:end="21:19">==</operator> <literal type="number" pos:start="21:21" pos:end="21:21">7</literal></expr>)</condition> <block pos:start="21:24" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:51">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:23">tcg_gen_movi_tl</name><argument_list pos:start="23:24" pos:end="23:39">(<argument pos:start="23:25" pos:end="23:30"><expr pos:start="23:25" pos:end="23:30"><name pos:start="23:25" pos:end="23:30">cpu_pc</name></expr></argument>, <argument pos:start="23:33" pos:end="23:38"><expr pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:38"><name pos:start="23:33" pos:end="23:34">dc</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><call pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:29">t_gen_raise_exception</name><argument_list pos:start="25:30" pos:end="25:50">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">dc</name></expr></argument>, <argument pos:start="25:35" pos:end="25:49"><expr pos:start="25:35" pos:end="25:49"><name pos:start="25:35" pos:end="25:49">EXCP_SYSTEMCALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:51">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><call pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:23">tcg_gen_movi_tl</name><argument_list pos:start="29:24" pos:end="29:39">(<argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:30">cpu_pc</name></expr></argument>, <argument pos:start="29:33" pos:end="29:38"><expr pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:38"><name pos:start="29:33" pos:end="29:34">dc</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:38">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><call pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:29">t_gen_raise_exception</name><argument_list pos:start="31:30" pos:end="31:50">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">dc</name></expr></argument>, <argument pos:start="31:35" pos:end="31:49"><expr pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:49">EXCP_BREAKPOINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
