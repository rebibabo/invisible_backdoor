<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24495.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">execute_ref_pic_marking</name><parameter_list pos:start="1:35" pos:end="1:78">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:46">H264Context</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">h</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">MMCO</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">mmco</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:77">mmco_count</name></decl></parameter>)</parameter_list><block pos:start="1:79" pos:end="95:77">{<block_content pos:start="2:5" pos:end="95:77">
    <decl_stmt pos:start="2:5" pos:end="2:37"><decl pos:start="2:5" pos:end="2:36"><type pos:start="2:5" pos:end="2:26"><name pos:start="2:5" pos:end="2:18">MpegEncContext</name> <modifier pos:start="2:20" pos:end="2:20">*</modifier> <specifier pos:start="2:22" pos:end="2:26">const</specifier></type> <name pos:start="2:28" pos:end="2:28">s</name> <init pos:start="2:30" pos:end="2:36">= <expr pos:start="2:32" pos:end="2:36"><operator pos:start="2:32" pos:end="2:32">&amp;</operator><name pos:start="2:33" pos:end="2:36"><name pos:start="2:33" pos:end="2:33">h</name><operator pos:start="2:34" pos:end="2:35">-&gt;</operator><name pos:start="2:36" pos:end="2:36">s</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:31"><decl pos:start="4:5" pos:end="4:30"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:28">current_ref_assigned</name><init pos:start="4:29" pos:end="4:30">=<expr pos:start="4:30" pos:end="4:30"><literal type="number" pos:start="4:30" pos:end="4:30">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">Picture</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="7:59"><if pos:start="6:5" pos:end="7:59">if<condition pos:start="6:7" pos:end="6:56">(<expr pos:start="6:8" pos:end="6:55"><operator pos:start="6:8" pos:end="6:8">(</operator><name pos:start="6:9" pos:end="6:23"><name pos:start="6:9" pos:end="6:9">s</name><operator pos:start="6:10" pos:end="6:11">-&gt;</operator><name pos:start="6:12" pos:end="6:16">avctx</name><operator pos:start="6:17" pos:end="6:18">-&gt;</operator><name pos:start="6:19" pos:end="6:23">debug</name></name><operator pos:start="6:24" pos:end="6:24">&amp;</operator><name pos:start="6:25" pos:end="6:37">FF_DEBUG_MMCO</name><operator pos:start="6:38" pos:end="6:38">)</operator> <operator pos:start="6:40" pos:end="6:41">&amp;&amp;</operator> <name pos:start="6:43" pos:end="6:52">mmco_count</name><operator pos:start="6:53" pos:end="6:54">==</operator><literal type="number" pos:start="6:55" pos:end="6:55">0</literal></expr>)</condition><block type="pseudo" pos:start="7:9" pos:end="7:59"><block_content pos:start="7:9" pos:end="7:59">
        <expr_stmt pos:start="7:9" pos:end="7:59"><expr pos:start="7:9" pos:end="7:58"><call pos:start="7:9" pos:end="7:58"><name pos:start="7:9" pos:end="7:14">av_log</name><argument_list pos:start="7:15" pos:end="7:58">(<argument pos:start="7:16" pos:end="7:25"><expr pos:start="7:16" pos:end="7:25"><name pos:start="7:16" pos:end="7:25"><name pos:start="7:16" pos:end="7:16">h</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:19">s</name><operator pos:start="7:20" pos:end="7:20">.</operator><name pos:start="7:21" pos:end="7:25">avctx</name></name></expr></argument>, <argument pos:start="7:28" pos:end="7:39"><expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="7:42" pos:end="7:57"><expr pos:start="7:42" pos:end="7:57"><literal type="string" pos:start="7:42" pos:end="7:57">"no mmco here\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <for pos:start="8:5" pos:end="95:77">for<control pos:start="8:8" pos:end="8:31">(<init pos:start="8:9" pos:end="8:12"><expr pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:9">i</name><operator pos:start="8:10" pos:end="8:10">=</operator><literal type="number" pos:start="8:11" pos:end="8:11">0</literal></expr>;</init> <condition pos:start="8:14" pos:end="8:26"><expr pos:start="8:14" pos:end="8:25"><name pos:start="8:14" pos:end="8:14">i</name><operator pos:start="8:15" pos:end="8:15">&lt;</operator><name pos:start="8:16" pos:end="8:25">mmco_count</name></expr>;</condition> <incr pos:start="8:28" pos:end="8:30"><expr pos:start="8:28" pos:end="8:30"><name pos:start="8:28" pos:end="8:28">i</name><operator pos:start="8:29" pos:end="8:30">++</operator></expr></incr>)</control><block pos:start="8:32" pos:end="95:77">{<block_content pos:start="9:9" pos:end="95:77">
        <decl_stmt pos:start="9:9" pos:end="9:44"><decl pos:start="9:9" pos:end="9:21"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:21">structure</name></decl>, <decl pos:start="9:24" pos:end="9:32"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:24" pos:end="9:32">frame_num</name></decl>, <decl pos:start="9:35" pos:end="9:43"><type ref="prev" pos:start="9:9" pos:end="9:11"/><name pos:start="9:35" pos:end="9:43">unref_pic</name></decl>;</decl_stmt>
        <if_stmt pos:start="10:9" pos:end="11:130"><if pos:start="10:9" pos:end="11:130">if<condition pos:start="10:11" pos:end="10:41">(<expr pos:start="10:12" pos:end="10:40"><name pos:start="10:12" pos:end="10:26"><name pos:start="10:12" pos:end="10:12">s</name><operator pos:start="10:13" pos:end="10:14">-&gt;</operator><name pos:start="10:15" pos:end="10:19">avctx</name><operator pos:start="10:20" pos:end="10:21">-&gt;</operator><name pos:start="10:22" pos:end="10:26">debug</name></name><operator pos:start="10:27" pos:end="10:27">&amp;</operator><name pos:start="10:28" pos:end="10:40">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="11:13" pos:end="11:130"><block_content pos:start="11:13" pos:end="11:130">
            <expr_stmt pos:start="11:13" pos:end="11:130"><expr pos:start="11:13" pos:end="11:129"><call pos:start="11:13" pos:end="11:129"><name pos:start="11:13" pos:end="11:18">av_log</name><argument_list pos:start="11:19" pos:end="11:129">(<argument pos:start="11:20" pos:end="11:29"><expr pos:start="11:20" pos:end="11:29"><name pos:start="11:20" pos:end="11:29"><name pos:start="11:20" pos:end="11:20">h</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:24">.</operator><name pos:start="11:25" pos:end="11:29">avctx</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:43"><expr pos:start="11:32" pos:end="11:43"><name pos:start="11:32" pos:end="11:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="11:46" pos:end="11:62"><expr pos:start="11:46" pos:end="11:62"><literal type="string" pos:start="11:46" pos:end="11:62">"mmco:%d %d %d\n"</literal></expr></argument>, <argument pos:start="11:65" pos:end="11:81"><expr pos:start="11:65" pos:end="11:81"><name pos:start="11:65" pos:end="11:74"><name pos:start="11:65" pos:end="11:65">h</name><operator pos:start="11:66" pos:end="11:67">-&gt;</operator><name pos:start="11:68" pos:end="11:71">mmco</name><index pos:start="11:72" pos:end="11:74">[<expr pos:start="11:73" pos:end="11:73"><name pos:start="11:73" pos:end="11:73">i</name></expr>]</index></name><operator pos:start="11:75" pos:end="11:75">.</operator><name pos:start="11:76" pos:end="11:81">opcode</name></expr></argument>, <argument pos:start="11:84" pos:end="11:107"><expr pos:start="11:84" pos:end="11:107"><name pos:start="11:84" pos:end="11:93"><name pos:start="11:84" pos:end="11:84">h</name><operator pos:start="11:85" pos:end="11:86">-&gt;</operator><name pos:start="11:87" pos:end="11:90">mmco</name><index pos:start="11:91" pos:end="11:93">[<expr pos:start="11:92" pos:end="11:92"><name pos:start="11:92" pos:end="11:92">i</name></expr>]</index></name><operator pos:start="11:94" pos:end="11:94">.</operator><name pos:start="11:95" pos:end="11:107">short_pic_num</name></expr></argument>, <argument pos:start="11:110" pos:end="11:128"><expr pos:start="11:110" pos:end="11:128"><name pos:start="11:110" pos:end="11:119"><name pos:start="11:110" pos:end="11:110">h</name><operator pos:start="11:111" pos:end="11:112">-&gt;</operator><name pos:start="11:113" pos:end="11:116">mmco</name><index pos:start="11:117" pos:end="11:119">[<expr pos:start="11:118" pos:end="11:118"><name pos:start="11:118" pos:end="11:118">i</name></expr>]</index></name><operator pos:start="11:120" pos:end="11:120">.</operator><name pos:start="11:121" pos:end="11:128">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <switch pos:start="12:9" pos:end="95:77">switch<condition pos:start="12:15" pos:end="12:30">(<expr pos:start="12:16" pos:end="12:29"><name pos:start="12:16" pos:end="12:22"><name pos:start="12:16" pos:end="12:19">mmco</name><index pos:start="12:20" pos:end="12:22">[<expr pos:start="12:21" pos:end="12:21"><name pos:start="12:21" pos:end="12:21">i</name></expr>]</index></name><operator pos:start="12:23" pos:end="12:23">.</operator><name pos:start="12:24" pos:end="12:29">opcode</name></expr>)</condition><block pos:start="12:31" pos:end="95:77">{<block_content pos:start="13:9" pos:end="95:77">
        <case pos:start="13:9" pos:end="13:31">case <expr pos:start="13:14" pos:end="13:30"><name pos:start="13:14" pos:end="13:30">MMCO_SHORT2UNUSED</name></expr>:</case>
            <if_stmt pos:start="14:13" pos:end="15:130"><if pos:start="14:13" pos:end="15:130">if<condition pos:start="14:15" pos:end="14:45">(<expr pos:start="14:16" pos:end="14:44"><name pos:start="14:16" pos:end="14:30"><name pos:start="14:16" pos:end="14:16">s</name><operator pos:start="14:17" pos:end="14:18">-&gt;</operator><name pos:start="14:19" pos:end="14:23">avctx</name><operator pos:start="14:24" pos:end="14:25">-&gt;</operator><name pos:start="14:26" pos:end="14:30">debug</name></name><operator pos:start="14:31" pos:end="14:31">&amp;</operator><name pos:start="14:32" pos:end="14:44">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="15:17" pos:end="15:130"><block_content pos:start="15:17" pos:end="15:130">
                <expr_stmt pos:start="15:17" pos:end="15:130"><expr pos:start="15:17" pos:end="15:129"><call pos:start="15:17" pos:end="15:129"><name pos:start="15:17" pos:end="15:22">av_log</name><argument_list pos:start="15:23" pos:end="15:129">(<argument pos:start="15:24" pos:end="15:33"><expr pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:33"><name pos:start="15:24" pos:end="15:24">h</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:33">avctx</name></name></expr></argument>, <argument pos:start="15:36" pos:end="15:47"><expr pos:start="15:36" pos:end="15:47"><name pos:start="15:36" pos:end="15:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="15:50" pos:end="15:82"><expr pos:start="15:50" pos:end="15:82"><literal type="string" pos:start="15:50" pos:end="15:82">"mmco: unref short %d count %d\n"</literal></expr></argument>, <argument pos:start="15:85" pos:end="15:108"><expr pos:start="15:85" pos:end="15:108"><name pos:start="15:85" pos:end="15:94"><name pos:start="15:85" pos:end="15:85">h</name><operator pos:start="15:86" pos:end="15:87">-&gt;</operator><name pos:start="15:88" pos:end="15:91">mmco</name><index pos:start="15:92" pos:end="15:94">[<expr pos:start="15:93" pos:end="15:93"><name pos:start="15:93" pos:end="15:93">i</name></expr>]</index></name><operator pos:start="15:95" pos:end="15:95">.</operator><name pos:start="15:96" pos:end="15:108">short_pic_num</name></expr></argument>, <argument pos:start="15:111" pos:end="15:128"><expr pos:start="15:111" pos:end="15:128"><name pos:start="15:111" pos:end="15:128"><name pos:start="15:111" pos:end="15:111">h</name><operator pos:start="15:112" pos:end="15:113">-&gt;</operator><name pos:start="15:114" pos:end="15:128">short_ref_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:78"><expr pos:start="16:13" pos:end="16:77"><name pos:start="16:13" pos:end="16:21">frame_num</name> <operator pos:start="16:23" pos:end="16:23">=</operator> <call pos:start="16:25" pos:end="16:77"><name pos:start="16:25" pos:end="16:39">pic_num_extract</name><argument_list pos:start="16:40" pos:end="16:77">(<argument pos:start="16:41" pos:end="16:41"><expr pos:start="16:41" pos:end="16:41"><name pos:start="16:41" pos:end="16:41">h</name></expr></argument>, <argument pos:start="16:44" pos:end="16:64"><expr pos:start="16:44" pos:end="16:64"><name pos:start="16:44" pos:end="16:50"><name pos:start="16:44" pos:end="16:47">mmco</name><index pos:start="16:48" pos:end="16:50">[<expr pos:start="16:49" pos:end="16:49"><name pos:start="16:49" pos:end="16:49">i</name></expr>]</index></name><operator pos:start="16:51" pos:end="16:51">.</operator><name pos:start="16:52" pos:end="16:64">short_pic_num</name></expr></argument>, <argument pos:start="16:67" pos:end="16:76"><expr pos:start="16:67" pos:end="16:76"><operator pos:start="16:67" pos:end="16:67">&amp;</operator><name pos:start="16:68" pos:end="16:76">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:47"><expr pos:start="17:13" pos:end="17:46"><name pos:start="17:13" pos:end="17:15">pic</name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:46"><name pos:start="17:19" pos:end="17:28">find_short</name><argument_list pos:start="17:29" pos:end="17:46">(<argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><name pos:start="17:30" pos:end="17:30">h</name></expr></argument>, <argument pos:start="17:33" pos:end="17:41"><expr pos:start="17:33" pos:end="17:41"><name pos:start="17:33" pos:end="17:41">frame_num</name></expr></argument>, <argument pos:start="17:44" pos:end="17:45"><expr pos:start="17:44" pos:end="17:45"><operator pos:start="17:44" pos:end="17:44">&amp;</operator><name pos:start="17:45" pos:end="17:45">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="18:13" pos:end="22:80"><if pos:start="18:13" pos:end="21:13">if <condition pos:start="18:16" pos:end="18:20">(<expr pos:start="18:17" pos:end="18:19"><name pos:start="18:17" pos:end="18:19">pic</name></expr>)</condition> <block pos:start="18:22" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:48">
                <if_stmt pos:start="19:17" pos:end="20:48"><if pos:start="19:17" pos:end="20:48">if <condition pos:start="19:20" pos:end="19:68">(<expr pos:start="19:21" pos:end="19:67"><call pos:start="19:21" pos:end="19:67"><name pos:start="19:21" pos:end="19:35">unreference_pic</name><argument_list pos:start="19:36" pos:end="19:67">(<argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">h</name></expr></argument>, <argument pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:42">pic</name></expr></argument>, <argument pos:start="19:45" pos:end="19:66"><expr pos:start="19:45" pos:end="19:66"><name pos:start="19:45" pos:end="19:53">structure</name> <operator pos:start="19:55" pos:end="19:55">^</operator> <name pos:start="19:57" pos:end="19:66">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="20:21" pos:end="20:48"><block_content pos:start="20:21" pos:end="20:48">
                    <expr_stmt pos:start="20:21" pos:end="20:48"><expr pos:start="20:21" pos:end="20:47"><call pos:start="20:21" pos:end="20:47"><name pos:start="20:21" pos:end="20:41">remove_short_at_index</name><argument_list pos:start="20:42" pos:end="20:47">(<argument pos:start="20:43" pos:end="20:43"><expr pos:start="20:43" pos:end="20:43"><name pos:start="20:43" pos:end="20:43">h</name></expr></argument>, <argument pos:start="20:46" pos:end="20:46"><expr pos:start="20:46" pos:end="20:46"><name pos:start="20:46" pos:end="20:46">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="21:15" pos:end="22:80">else if<condition pos:start="21:22" pos:end="21:52">(<expr pos:start="21:23" pos:end="21:51"><name pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:30">avctx</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:37">debug</name></name><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:51">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="22:17" pos:end="22:80"><block_content pos:start="22:17" pos:end="22:80">
                <expr_stmt pos:start="22:17" pos:end="22:80"><expr pos:start="22:17" pos:end="22:79"><call pos:start="22:17" pos:end="22:79"><name pos:start="22:17" pos:end="22:22">av_log</name><argument_list pos:start="22:23" pos:end="22:79">(<argument pos:start="22:24" pos:end="22:33"><expr pos:start="22:24" pos:end="22:33"><name pos:start="22:24" pos:end="22:33"><name pos:start="22:24" pos:end="22:24">h</name><operator pos:start="22:25" pos:end="22:26">-&gt;</operator><name pos:start="22:27" pos:end="22:27">s</name><operator pos:start="22:28" pos:end="22:28">.</operator><name pos:start="22:29" pos:end="22:33">avctx</name></name></expr></argument>, <argument pos:start="22:36" pos:end="22:47"><expr pos:start="22:36" pos:end="22:47"><name pos:start="22:36" pos:end="22:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="22:50" pos:end="22:78"><expr pos:start="22:50" pos:end="22:78"><literal type="string" pos:start="22:50" pos:end="22:78">"mmco: unref short failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <case pos:start="23:9" pos:end="23:29">case <expr pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:28">MMCO_SHORT2LONG</name></expr>:</case>
            <if_stmt pos:start="24:13" pos:end="95:77"><if pos:start="24:13" pos:end="95:77">if <condition pos:start="24:16" pos:end="26:72">(<expr pos:start="24:17" pos:end="26:71"><name pos:start="24:17" pos:end="24:29">FIELD_PICTURE</name> <operator pos:start="24:31" pos:end="24:32">&amp;&amp;</operator> <name pos:start="24:34" pos:end="24:40"><name pos:start="24:34" pos:end="24:37">mmco</name><index pos:start="24:38" pos:end="24:40">[<expr pos:start="24:39" pos:end="24:39"><name pos:start="24:39" pos:end="24:39">i</name></expr>]</index></name><operator pos:start="24:41" pos:end="24:41">.</operator><name pos:start="24:42" pos:end="24:49">long_arg</name> <operator pos:start="24:51" pos:end="24:51">&lt;</operator> <name pos:start="24:53" pos:end="24:69"><name pos:start="24:53" pos:end="24:53">h</name><operator pos:start="24:54" pos:end="24:55">-&gt;</operator><name pos:start="24:56" pos:end="24:69">long_ref_count</name></name> <operator pos:start="24:71" pos:end="24:72">&amp;&amp;</operator>
                    <name pos:start="25:21" pos:end="25:49"><name pos:start="25:21" pos:end="25:21">h</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:31">long_ref</name><index pos:start="25:32" pos:end="25:49">[<expr pos:start="25:33" pos:end="25:48"><name pos:start="25:33" pos:end="25:39"><name pos:start="25:33" pos:end="25:36">mmco</name><index pos:start="25:37" pos:end="25:39">[<expr pos:start="25:38" pos:end="25:38"><name pos:start="25:38" pos:end="25:38">i</name></expr>]</index></name><operator pos:start="25:40" pos:end="25:40">.</operator><name pos:start="25:41" pos:end="25:48">long_arg</name></expr>]</index></name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:60">frame_num</name> <operator pos:start="25:62" pos:end="25:63">==</operator>
                                              <name pos:start="26:47" pos:end="26:53"><name pos:start="26:47" pos:end="26:50">mmco</name><index pos:start="26:51" pos:end="26:53">[<expr pos:start="26:52" pos:end="26:52"><name pos:start="26:52" pos:end="26:52">i</name></expr>]</index></name><operator pos:start="26:54" pos:end="26:54">.</operator><name pos:start="26:55" pos:end="26:67">short_pic_num</name> <operator pos:start="26:69" pos:end="26:69">/</operator> <literal type="number" pos:start="26:71" pos:end="26:71">2</literal></expr>)</condition> <block pos:start="26:74" pos:end="95:77">{<block_content pos:start="28:17" pos:end="95:77">
                <comment type="block" pos:start="27:17" pos:end="27:70">/* do nothing, we've already moved this field pair. */</comment>
                <decl_stmt pos:start="28:17" pos:end="28:71"><decl pos:start="28:17" pos:end="28:70"><type pos:start="28:17" pos:end="28:19"><name pos:start="28:17" pos:end="28:19">int</name></type> <name pos:start="28:21" pos:end="28:29">frame_num</name> <init pos:start="28:31" pos:end="28:70">= <expr pos:start="28:33" pos:end="28:70"><name pos:start="28:33" pos:end="28:39"><name pos:start="28:33" pos:end="28:36">mmco</name><index pos:start="28:37" pos:end="28:39">[<expr pos:start="28:38" pos:end="28:38"><name pos:start="28:38" pos:end="28:38">i</name></expr>]</index></name><operator pos:start="28:40" pos:end="28:40">.</operator><name pos:start="28:41" pos:end="28:53">short_pic_num</name> <operator pos:start="28:55" pos:end="28:56">&gt;&gt;</operator> <name pos:start="28:58" pos:end="28:70">FIELD_PICTURE</name></expr></init></decl>;</decl_stmt>
                <expr_stmt pos:start="29:17" pos:end="29:54"><expr pos:start="29:17" pos:end="29:53"><name pos:start="29:17" pos:end="29:19">pic</name><operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:53"><name pos:start="29:22" pos:end="29:32">remove_long</name><argument_list pos:start="29:33" pos:end="29:53">(<argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><name pos:start="29:34" pos:end="29:34">h</name></expr></argument>, <argument pos:start="29:37" pos:end="29:52"><expr pos:start="29:37" pos:end="29:52"><name pos:start="29:37" pos:end="29:43"><name pos:start="29:37" pos:end="29:40">mmco</name><index pos:start="29:41" pos:end="29:43">[<expr pos:start="29:42" pos:end="29:42"><name pos:start="29:42" pos:end="29:42">i</name></expr>]</index></name><operator pos:start="29:44" pos:end="29:44">.</operator><name pos:start="29:45" pos:end="29:52">long_arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="30:17" pos:end="30:51"><if pos:start="30:17" pos:end="30:51">if<condition pos:start="30:19" pos:end="30:23">(<expr pos:start="30:20" pos:end="30:22"><name pos:start="30:20" pos:end="30:22">pic</name></expr>)</condition><block type="pseudo" pos:start="30:25" pos:end="30:51"><block_content pos:start="30:25" pos:end="30:51"> <expr_stmt pos:start="30:25" pos:end="30:51"><expr pos:start="30:25" pos:end="30:50"><call pos:start="30:25" pos:end="30:50"><name pos:start="30:25" pos:end="30:39">unreference_pic</name><argument_list pos:start="30:40" pos:end="30:50">(<argument pos:start="30:41" pos:end="30:41"><expr pos:start="30:41" pos:end="30:41"><name pos:start="30:41" pos:end="30:41">h</name></expr></argument>, <argument pos:start="30:44" pos:end="30:46"><expr pos:start="30:44" pos:end="30:46"><name pos:start="30:44" pos:end="30:46">pic</name></expr></argument>, <argument pos:start="30:49" pos:end="30:49"><expr pos:start="30:49" pos:end="30:49"><literal type="number" pos:start="30:49" pos:end="30:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="31:17" pos:end="31:76"><expr pos:start="31:17" pos:end="31:75"><name pos:start="31:17" pos:end="31:47"><name pos:start="31:17" pos:end="31:17">h</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:27">long_ref</name><index pos:start="31:28" pos:end="31:47">[ <expr pos:start="31:30" pos:end="31:45"><name pos:start="31:30" pos:end="31:36"><name pos:start="31:30" pos:end="31:33">mmco</name><index pos:start="31:34" pos:end="31:36">[<expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">i</name></expr>]</index></name><operator pos:start="31:37" pos:end="31:37">.</operator><name pos:start="31:38" pos:end="31:45">long_arg</name></expr> ]</index></name><operator pos:start="31:48" pos:end="31:48">=</operator> <call pos:start="31:50" pos:end="31:75"><name pos:start="31:50" pos:end="31:61">remove_short</name><argument_list pos:start="31:62" pos:end="31:75">(<argument pos:start="31:63" pos:end="31:63"><expr pos:start="31:63" pos:end="31:63"><name pos:start="31:63" pos:end="31:63">h</name></expr></argument>, <argument pos:start="31:66" pos:end="31:74"><expr pos:start="31:66" pos:end="31:74"><name pos:start="31:66" pos:end="31:74">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="32:17" pos:end="95:77"><if pos:start="32:17" pos:end="95:77">if <condition pos:start="32:20" pos:end="32:52">(<expr pos:start="32:21" pos:end="32:51"><name pos:start="32:21" pos:end="32:51"><name pos:start="32:21" pos:end="32:21">h</name><operator pos:start="32:22" pos:end="32:23">-&gt;</operator><name pos:start="32:24" pos:end="32:31">long_ref</name><index pos:start="32:32" pos:end="32:51">[ <expr pos:start="32:34" pos:end="32:49"><name pos:start="32:34" pos:end="32:40"><name pos:start="32:34" pos:end="32:37">mmco</name><index pos:start="32:38" pos:end="32:40">[<expr pos:start="32:39" pos:end="32:39"><name pos:start="32:39" pos:end="32:39">i</name></expr>]</index></name><operator pos:start="32:41" pos:end="32:41">.</operator><name pos:start="32:42" pos:end="32:49">long_arg</name></expr> ]</index></name></expr>)</condition><block pos:start="32:53" pos:end="95:77">{<block_content pos:start="33:21" pos:end="95:77">
                    <expr_stmt pos:start="33:21" pos:end="33:64"><expr pos:start="33:21" pos:end="33:63"><name pos:start="33:21" pos:end="33:51"><name pos:start="33:21" pos:end="33:21">h</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:31">long_ref</name><index pos:start="33:32" pos:end="33:51">[ <expr pos:start="33:34" pos:end="33:49"><name pos:start="33:34" pos:end="33:40"><name pos:start="33:34" pos:end="33:37">mmco</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">i</name></expr>]</index></name><operator pos:start="33:41" pos:end="33:41">.</operator><name pos:start="33:42" pos:end="33:49">long_arg</name></expr> ]</index></name><operator pos:start="33:52" pos:end="33:53">-&gt;</operator><name pos:start="33:54" pos:end="33:61">long_ref</name><operator pos:start="33:62" pos:end="33:62">=</operator><literal type="number" pos:start="33:63" pos:end="33:63">1</literal></expr>;</expr_stmt>
                    <expr_stmt pos:start="34:21" pos:end="34:40"><expr pos:start="34:21" pos:end="34:39"><name pos:start="34:21" pos:end="34:37"><name pos:start="34:21" pos:end="34:21">h</name><operator pos:start="34:22" pos:end="34:23">-&gt;</operator><name pos:start="34:24" pos:end="34:37">long_ref_count</name></name><operator pos:start="34:38" pos:end="34:39">++</operator></expr>;</expr_stmt>
        <case pos:start="35:9" pos:end="35:30">case <expr pos:start="35:14" pos:end="35:29"><name pos:start="35:14" pos:end="35:29">MMCO_LONG2UNUSED</name></expr>:</case>
            <expr_stmt pos:start="36:13" pos:end="36:65"><expr pos:start="36:13" pos:end="36:64"><name pos:start="36:13" pos:end="36:13">j</name> <operator pos:start="36:15" pos:end="36:15">=</operator> <call pos:start="36:17" pos:end="36:64"><name pos:start="36:17" pos:end="36:31">pic_num_extract</name><argument_list pos:start="36:32" pos:end="36:64">(<argument pos:start="36:33" pos:end="36:33"><expr pos:start="36:33" pos:end="36:33"><name pos:start="36:33" pos:end="36:33">h</name></expr></argument>, <argument pos:start="36:36" pos:end="36:51"><expr pos:start="36:36" pos:end="36:51"><name pos:start="36:36" pos:end="36:42"><name pos:start="36:36" pos:end="36:39">mmco</name><index pos:start="36:40" pos:end="36:42">[<expr pos:start="36:41" pos:end="36:41"><name pos:start="36:41" pos:end="36:41">i</name></expr>]</index></name><operator pos:start="36:43" pos:end="36:43">.</operator><name pos:start="36:44" pos:end="36:51">long_arg</name></expr></argument>, <argument pos:start="36:54" pos:end="36:63"><expr pos:start="36:54" pos:end="36:63"><operator pos:start="36:54" pos:end="36:54">&amp;</operator><name pos:start="36:55" pos:end="36:63">structure</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:15">pic</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <name pos:start="37:19" pos:end="37:32"><name pos:start="37:19" pos:end="37:19">h</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:29">long_ref</name><index pos:start="37:30" pos:end="37:32">[<expr pos:start="37:31" pos:end="37:31"><name pos:start="37:31" pos:end="37:31">j</name></expr>]</index></name></expr>;</expr_stmt>
            <if_stmt pos:start="38:13" pos:end="42:79"><if pos:start="38:13" pos:end="41:13">if <condition pos:start="38:16" pos:end="38:20">(<expr pos:start="38:17" pos:end="38:19"><name pos:start="38:17" pos:end="38:19">pic</name></expr>)</condition> <block pos:start="38:22" pos:end="41:13">{<block_content pos:start="39:17" pos:end="40:47">
                <if_stmt pos:start="39:17" pos:end="40:47"><if pos:start="39:17" pos:end="40:47">if <condition pos:start="39:20" pos:end="39:68">(<expr pos:start="39:21" pos:end="39:67"><call pos:start="39:21" pos:end="39:67"><name pos:start="39:21" pos:end="39:35">unreference_pic</name><argument_list pos:start="39:36" pos:end="39:67">(<argument pos:start="39:37" pos:end="39:37"><expr pos:start="39:37" pos:end="39:37"><name pos:start="39:37" pos:end="39:37">h</name></expr></argument>, <argument pos:start="39:40" pos:end="39:42"><expr pos:start="39:40" pos:end="39:42"><name pos:start="39:40" pos:end="39:42">pic</name></expr></argument>, <argument pos:start="39:45" pos:end="39:66"><expr pos:start="39:45" pos:end="39:66"><name pos:start="39:45" pos:end="39:53">structure</name> <operator pos:start="39:55" pos:end="39:55">^</operator> <name pos:start="39:57" pos:end="39:66">PICT_FRAME</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="40:21" pos:end="40:47"><block_content pos:start="40:21" pos:end="40:47">
                    <expr_stmt pos:start="40:21" pos:end="40:47"><expr pos:start="40:21" pos:end="40:46"><call pos:start="40:21" pos:end="40:46"><name pos:start="40:21" pos:end="40:40">remove_long_at_index</name><argument_list pos:start="40:41" pos:end="40:46">(<argument pos:start="40:42" pos:end="40:42"><expr pos:start="40:42" pos:end="40:42"><name pos:start="40:42" pos:end="40:42">h</name></expr></argument>, <argument pos:start="40:45" pos:end="40:45"><expr pos:start="40:45" pos:end="40:45"><name pos:start="40:45" pos:end="40:45">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="41:15" pos:end="42:79">else if<condition pos:start="41:22" pos:end="41:52">(<expr pos:start="41:23" pos:end="41:51"><name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:30">avctx</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:37">debug</name></name><operator pos:start="41:38" pos:end="41:38">&amp;</operator><name pos:start="41:39" pos:end="41:51">FF_DEBUG_MMCO</name></expr>)</condition><block type="pseudo" pos:start="42:17" pos:end="42:79"><block_content pos:start="42:17" pos:end="42:79">
                <expr_stmt pos:start="42:17" pos:end="42:79"><expr pos:start="42:17" pos:end="42:78"><call pos:start="42:17" pos:end="42:78"><name pos:start="42:17" pos:end="42:22">av_log</name><argument_list pos:start="42:23" pos:end="42:78">(<argument pos:start="42:24" pos:end="42:33"><expr pos:start="42:24" pos:end="42:33"><name pos:start="42:24" pos:end="42:33"><name pos:start="42:24" pos:end="42:24">h</name><operator pos:start="42:25" pos:end="42:26">-&gt;</operator><name pos:start="42:27" pos:end="42:27">s</name><operator pos:start="42:28" pos:end="42:28">.</operator><name pos:start="42:29" pos:end="42:33">avctx</name></name></expr></argument>, <argument pos:start="42:36" pos:end="42:47"><expr pos:start="42:36" pos:end="42:47"><name pos:start="42:36" pos:end="42:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="42:50" pos:end="42:77"><expr pos:start="42:50" pos:end="42:77"><literal type="string" pos:start="42:50" pos:end="42:77">"mmco: unref long failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <case pos:start="43:9" pos:end="43:23">case <expr pos:start="43:14" pos:end="43:22"><name pos:start="43:14" pos:end="43:22">MMCO_LONG</name></expr>:</case>
            <expr_stmt pos:start="44:13" pos:end="44:26"><expr pos:start="44:13" pos:end="44:25"><name pos:start="44:13" pos:end="44:21">unref_pic</name> <operator pos:start="44:23" pos:end="44:23">=</operator> <literal type="number" pos:start="44:25" pos:end="44:25">1</literal></expr>;</expr_stmt>
            <if_stmt pos:start="45:13" pos:end="95:77"><if pos:start="45:13" pos:end="95:77">if <condition pos:start="45:16" pos:end="45:49">(<expr pos:start="45:17" pos:end="45:48"><name pos:start="45:17" pos:end="45:29">FIELD_PICTURE</name> <operator pos:start="45:31" pos:end="45:32">&amp;&amp;</operator> <operator pos:start="45:34" pos:end="45:34">!</operator><name pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:48">first_field</name></name></expr>)</condition> <block pos:start="45:51" pos:end="95:77">{<block_content pos:start="46:17" pos:end="95:77">
                <if_stmt pos:start="46:17" pos:end="95:77"><if pos:start="46:17" pos:end="49:17">if <condition pos:start="46:20" pos:end="46:76">(<expr pos:start="46:21" pos:end="46:75"><name pos:start="46:21" pos:end="46:49"><name pos:start="46:21" pos:end="46:21">h</name><operator pos:start="46:22" pos:end="46:23">-&gt;</operator><name pos:start="46:24" pos:end="46:31">long_ref</name><index pos:start="46:32" pos:end="46:49">[<expr pos:start="46:33" pos:end="46:48"><name pos:start="46:33" pos:end="46:39"><name pos:start="46:33" pos:end="46:36">mmco</name><index pos:start="46:37" pos:end="46:39">[<expr pos:start="46:38" pos:end="46:38"><name pos:start="46:38" pos:end="46:38">i</name></expr>]</index></name><operator pos:start="46:40" pos:end="46:40">.</operator><name pos:start="46:41" pos:end="46:48">long_arg</name></expr>]</index></name> <operator pos:start="46:51" pos:end="46:52">==</operator> <name pos:start="46:54" pos:end="46:75"><name pos:start="46:54" pos:end="46:54">s</name><operator pos:start="46:55" pos:end="46:56">-&gt;</operator><name pos:start="46:57" pos:end="46:75">current_picture_ptr</name></name></expr>)</condition> <block pos:start="46:78" pos:end="49:17">{<block_content pos:start="48:21" pos:end="48:34">
                    <comment type="block" pos:start="47:21" pos:end="47:62">/* Just mark second field as referenced */</comment>
                    <expr_stmt pos:start="48:21" pos:end="48:34"><expr pos:start="48:21" pos:end="48:33"><name pos:start="48:21" pos:end="48:29">unref_pic</name> <operator pos:start="48:31" pos:end="48:31">=</operator> <literal type="number" pos:start="48:33" pos:end="48:33">0</literal></expr>;</expr_stmt>
                </block_content>}</block></if> <if type="elseif" pos:start="49:19" pos:end="91:9">else if <condition pos:start="49:27" pos:end="49:61">(<expr pos:start="49:28" pos:end="49:60"><name pos:start="49:28" pos:end="49:60"><name pos:start="49:28" pos:end="49:28">s</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:49">current_picture_ptr</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:60">reference</name></name></expr>)</condition> <block pos:start="49:63" pos:end="91:9">{<block_content pos:start="90:13" pos:end="90:59">
                    <comment type="block" pos:start="50:21" pos:end="89:50">/* First field in pair is in short term list or
                     * at a different long term index.
                     * This is not allowed; see 7.4.3, notes 2 and 3.
                     * Report the problem and keep the pair where it is,
                     * and mark this field valid.
                        "illegal long term reference assignment for second "
                        "field in complementary field pair (first field is "
                        "short term or has non-matching long index)\n");
                    unref_pic = 0;
            if (unref_pic) {
                pic= remove_long(h, mmco[i].long_arg);
                if(pic) unreference_pic(h, pic, 0);
                h-&gt;long_ref[ mmco[i].long_arg ]= s-&gt;current_picture_ptr;
                h-&gt;long_ref[ mmco[i].long_arg ]-&gt;long_ref=1;
                h-&gt;long_ref_count++;
            s-&gt;current_picture_ptr-&gt;reference |= s-&gt;picture_structure;
            current_ref_assigned=1;
        case MMCO_SET_MAX_LONG:
            assert(mmco[i].long_arg &lt;= 16);
            // just remove the long term which index is greater than new max
            for(j = mmco[i].long_arg; j&lt;16; j++){
                pic = remove_long(h, j);
                if (pic) unreference_pic(h, pic, 0);
        case MMCO_RESET:
            while(h-&gt;short_ref_count){
                pic= remove_short(h, h-&gt;short_ref[0]-&gt;frame_num);
                if(pic) unreference_pic(h, pic, 0);
            for(j = 0; j &lt; 16; j++) {
                pic= remove_long(h, j);
                if(pic) unreference_pic(h, pic, 0);
        default: assert(0);
    if (!current_ref_assigned &amp;&amp; FIELD_PICTURE &amp;&amp;
            !s-&gt;first_field &amp;&amp; s-&gt;current_picture_ptr-&gt;reference) {
        /* Second field of complementary field pair; the first field of
         * which is already referenced. If short referenced, it
         * should be first entry in short_ref. If not, it must exist
         * in long_ref; trying to put it on the short list here is an
         * error in the encoded bit stream (ref: 7.4.3, NOTE 2 and 3).
        if (h-&gt;short_ref_count &amp;&amp; h-&gt;short_ref[0] == s-&gt;current_picture_ptr) {
            /* Just mark the second field valid */</comment>
            <expr_stmt pos:start="90:13" pos:end="90:59"><expr pos:start="90:13" pos:end="90:58"><name pos:start="90:13" pos:end="90:45"><name pos:start="90:13" pos:end="90:13">s</name><operator pos:start="90:14" pos:end="90:15">-&gt;</operator><name pos:start="90:16" pos:end="90:34">current_picture_ptr</name><operator pos:start="90:35" pos:end="90:36">-&gt;</operator><name pos:start="90:37" pos:end="90:45">reference</name></name> <operator pos:start="90:47" pos:end="90:47">=</operator> <name pos:start="90:49" pos:end="90:58">PICT_FRAME</name></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="91:11" pos:end="95:77">else if <condition pos:start="91:19" pos:end="91:52">(<expr pos:start="91:20" pos:end="91:51"><name pos:start="91:20" pos:end="91:51"><name pos:start="91:20" pos:end="91:20">s</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:41">current_picture_ptr</name><operator pos:start="91:42" pos:end="91:43">-&gt;</operator><name pos:start="91:44" pos:end="91:51">long_ref</name></name></expr>)</condition> <block pos:start="91:54" pos:end="95:77">{<block_content pos:start="92:13" pos:end="95:77">
            <expr_stmt pos:start="92:13" pos:end="95:77"><expr pos:start="92:13" pos:end="95:76"><call pos:start="92:13" pos:end="95:76"><name pos:start="92:13" pos:end="92:18">av_log</name><argument_list pos:start="92:19" pos:end="95:76">(<argument pos:start="92:20" pos:end="92:29"><expr pos:start="92:20" pos:end="92:29"><name pos:start="92:20" pos:end="92:29"><name pos:start="92:20" pos:end="92:20">h</name><operator pos:start="92:21" pos:end="92:22">-&gt;</operator><name pos:start="92:23" pos:end="92:23">s</name><operator pos:start="92:24" pos:end="92:24">.</operator><name pos:start="92:25" pos:end="92:29">avctx</name></name></expr></argument>, <argument pos:start="92:32" pos:end="92:43"><expr pos:start="92:32" pos:end="92:43"><name pos:start="92:32" pos:end="92:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="92:46" pos:end="95:75"><expr pos:start="92:46" pos:end="95:75"><literal type="string" pos:start="92:46" pos:end="92:76">"illegal short term reference "</literal>
                                             <literal type="string" pos:start="93:46" pos:end="93:75">"assignment for second field "</literal>
                                             <literal type="string" pos:start="94:46" pos:end="94:75">"in complementary field pair "</literal>
                                             <literal type="string" pos:start="95:46" pos:end="95:75">"(first field is long term)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></for></block_content></block></function>
            <comment type="block">/*
             * First field in reference, but not in any sensible place on our
             * reference lists. This shouldn't happen unless reference
             * handling somewhere else is wrong.
            assert(0);
        current_ref_assigned = 1;
    if(!current_ref_assigned){
        pic= remove_short(h, s-&gt;current_picture_ptr-&gt;frame_num);
        if(pic){
            unreference_pic(h, pic, 0);
            av_log(h-&gt;s.avctx, AV_LOG_ERROR, "illegal short term buffer state detected\n");
        if(h-&gt;short_ref_count)
            memmove(&amp;h-&gt;short_ref[1], &amp;h-&gt;short_ref[0], h-&gt;short_ref_count*sizeof(Picture*));
        h-&gt;short_ref[0]= s-&gt;current_picture_ptr;
        h-&gt;short_ref[0]-&gt;long_ref=0;
        h-&gt;short_ref_count++;
        s-&gt;current_picture_ptr-&gt;reference |= s-&gt;picture_structure;
    print_short_term(h);
    print_long_term(h);
    return 0;</comment></unit>
