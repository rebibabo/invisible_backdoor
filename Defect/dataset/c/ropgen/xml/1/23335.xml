<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23335.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">pci_bridge_region_init</name><parameter_list pos:start="1:35" pos:end="1:49">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:44">PCIBridge</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">br</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="45:48">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">PCIBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:18">parent</name> <init pos:start="5:20" pos:end="5:32">= <expr pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:23">br</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:28">dev</name><operator pos:start="5:29" pos:end="5:29">.</operator><name pos:start="5:30" pos:end="5:32">bus</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:62"><decl pos:start="7:5" pos:end="7:61"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:16">cmd</name> <init pos:start="7:18" pos:end="7:61">= <expr pos:start="7:20" pos:end="7:61"><call pos:start="7:20" pos:end="7:61"><name pos:start="7:20" pos:end="7:31">pci_get_word</name><argument_list pos:start="7:32" pos:end="7:61">(<argument pos:start="7:33" pos:end="7:60"><expr pos:start="7:33" pos:end="7:60"><name pos:start="7:33" pos:end="7:46"><name pos:start="7:33" pos:end="7:34">br</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:39">dev</name><operator pos:start="7:40" pos:end="7:40">.</operator><name pos:start="7:41" pos:end="7:46">config</name></name> <operator pos:start="7:48" pos:end="7:48">+</operator> <name pos:start="7:50" pos:end="7:60">PCI_COMMAND</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="21:52"><expr pos:start="11:5" pos:end="21:51"><call pos:start="11:5" pos:end="21:51"><name pos:start="11:5" pos:end="11:25">pci_bridge_init_alias</name><argument_list pos:start="11:26" pos:end="21:51">(<argument pos:start="11:27" pos:end="11:28"><expr pos:start="11:27" pos:end="11:28"><name pos:start="11:27" pos:end="11:28">br</name></expr></argument>, <argument pos:start="11:31" pos:end="11:49"><expr pos:start="11:31" pos:end="11:49"><operator pos:start="11:31" pos:end="11:31">&amp;</operator><name pos:start="11:32" pos:end="11:49"><name pos:start="11:32" pos:end="11:33">br</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:49">alias_pref_mem</name></name></expr></argument>,

                          <argument pos:start="13:27" pos:end="13:55"><expr pos:start="13:27" pos:end="13:55"><name pos:start="13:27" pos:end="13:55">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>,

                          <argument pos:start="15:27" pos:end="15:47"><expr pos:start="15:27" pos:end="15:47"><literal type="string" pos:start="15:27" pos:end="15:47">"pci_bridge_pref_mem"</literal></expr></argument>,

                          <argument pos:start="17:27" pos:end="17:48"><expr pos:start="17:27" pos:end="17:48"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:48"><name pos:start="17:28" pos:end="17:29">br</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:48">address_space_mem</name></name></expr></argument>,

                          <argument pos:start="19:27" pos:end="19:51"><expr pos:start="19:27" pos:end="19:51"><name pos:start="19:27" pos:end="19:51"><name pos:start="19:27" pos:end="19:32">parent</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:51">address_space_mem</name></name></expr></argument>,

                          <argument pos:start="21:27" pos:end="21:50"><expr pos:start="21:27" pos:end="21:50"><name pos:start="21:27" pos:end="21:29">cmd</name> <operator pos:start="21:31" pos:end="21:31">&amp;</operator> <name pos:start="21:33" pos:end="21:50">PCI_COMMAND_MEMORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="33:52"><expr pos:start="23:5" pos:end="33:51"><call pos:start="23:5" pos:end="33:51"><name pos:start="23:5" pos:end="23:25">pci_bridge_init_alias</name><argument_list pos:start="23:26" pos:end="33:51">(<argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><name pos:start="23:27" pos:end="23:28">br</name></expr></argument>, <argument pos:start="23:31" pos:end="23:44"><expr pos:start="23:31" pos:end="23:44"><operator pos:start="23:31" pos:end="23:31">&amp;</operator><name pos:start="23:32" pos:end="23:44"><name pos:start="23:32" pos:end="23:33">br</name><operator pos:start="23:34" pos:end="23:35">-&gt;</operator><name pos:start="23:36" pos:end="23:44">alias_mem</name></name></expr></argument>,

                          <argument pos:start="25:27" pos:end="25:55"><expr pos:start="25:27" pos:end="25:55"><name pos:start="25:27" pos:end="25:55">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:42"><expr pos:start="27:27" pos:end="27:42"><literal type="string" pos:start="27:27" pos:end="27:42">"pci_bridge_mem"</literal></expr></argument>,

                          <argument pos:start="29:27" pos:end="29:48"><expr pos:start="29:27" pos:end="29:48"><operator pos:start="29:27" pos:end="29:27">&amp;</operator><name pos:start="29:28" pos:end="29:48"><name pos:start="29:28" pos:end="29:29">br</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:48">address_space_mem</name></name></expr></argument>,

                          <argument pos:start="31:27" pos:end="31:51"><expr pos:start="31:27" pos:end="31:51"><name pos:start="31:27" pos:end="31:51"><name pos:start="31:27" pos:end="31:32">parent</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:51">address_space_mem</name></name></expr></argument>,

                          <argument pos:start="33:27" pos:end="33:50"><expr pos:start="33:27" pos:end="33:50"><name pos:start="33:27" pos:end="33:29">cmd</name> <operator pos:start="33:31" pos:end="33:31">&amp;</operator> <name pos:start="33:33" pos:end="33:50">PCI_COMMAND_MEMORY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="45:48"><expr pos:start="35:5" pos:end="45:47"><call pos:start="35:5" pos:end="45:47"><name pos:start="35:5" pos:end="35:25">pci_bridge_init_alias</name><argument_list pos:start="35:26" pos:end="45:47">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">br</name></expr></argument>, <argument pos:start="35:31" pos:end="35:43"><expr pos:start="35:31" pos:end="35:43"><operator pos:start="35:31" pos:end="35:31">&amp;</operator><name pos:start="35:32" pos:end="35:43"><name pos:start="35:32" pos:end="35:33">br</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:43">alias_io</name></name></expr></argument>,

                          <argument pos:start="37:27" pos:end="37:51"><expr pos:start="37:27" pos:end="37:51"><name pos:start="37:27" pos:end="37:51">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>,

                          <argument pos:start="39:27" pos:end="39:41"><expr pos:start="39:27" pos:end="39:41"><literal type="string" pos:start="39:27" pos:end="39:41">"pci_bridge_io"</literal></expr></argument>,

                          <argument pos:start="41:27" pos:end="41:47"><expr pos:start="41:27" pos:end="41:47"><operator pos:start="41:27" pos:end="41:27">&amp;</operator><name pos:start="41:28" pos:end="41:47"><name pos:start="41:28" pos:end="41:29">br</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:47">address_space_io</name></name></expr></argument>,

                          <argument pos:start="43:27" pos:end="43:50"><expr pos:start="43:27" pos:end="43:50"><name pos:start="43:27" pos:end="43:50"><name pos:start="43:27" pos:end="43:32">parent</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:50">address_space_io</name></name></expr></argument>,

                          <argument pos:start="45:27" pos:end="45:46"><expr pos:start="45:27" pos:end="45:46"><name pos:start="45:27" pos:end="45:29">cmd</name> <operator pos:start="45:31" pos:end="45:31">&amp;</operator> <name pos:start="45:33" pos:end="45:46">PCI_COMMAND_IO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

   <comment type="block" pos:start="47:4" pos:end="47:60">/* TODO: optinal VGA and VGA palette snooping support. */</comment>

</block_content>}</block></function>
</unit>
