<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10613.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">qcow2_check_refcounts</name><parameter_list pos:start="1:26" pos:end="1:47">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:18">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">nb_clusters</name></decl>, <decl pos:start="9:22" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:30">refcount1</name></decl>, <decl pos:start="9:33" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:41">refcount2</name></decl>, <decl pos:start="9:44" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:44" pos:end="9:44">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">QCowSnapshot</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:28">refcount_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>, <decl pos:start="15:14" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:19">errors</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:8">size</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:35"><name pos:start="19:12" pos:end="19:25">bdrv_getlength</name><argument_list pos:start="19:26" pos:end="19:35">(<argument pos:start="19:27" pos:end="19:34"><expr pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:34"><name pos:start="19:27" pos:end="19:28">bs</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:34">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:15">nb_clusters</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:43"><name pos:start="21:19" pos:end="21:34">size_to_clusters</name><argument_list pos:start="21:35" pos:end="21:43">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">s</name></expr></argument>, <argument pos:start="21:39" pos:end="21:42"><expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:66"><expr pos:start="23:5" pos:end="23:65"><name pos:start="23:5" pos:end="23:18">refcount_table</name> <operator pos:start="23:20" pos:end="23:20">=</operator> <call pos:start="23:22" pos:end="23:65"><name pos:start="23:22" pos:end="23:33">qemu_mallocz</name><argument_list pos:start="23:34" pos:end="23:65">(<argument pos:start="23:35" pos:end="23:64"><expr pos:start="23:35" pos:end="23:64"><name pos:start="23:35" pos:end="23:45">nb_clusters</name> <operator pos:start="23:47" pos:end="23:47">*</operator> <sizeof pos:start="23:49" pos:end="23:64">sizeof<argument_list pos:start="23:55" pos:end="23:64">(<argument pos:start="23:56" pos:end="23:63"><expr pos:start="23:56" pos:end="23:63"><name pos:start="23:56" pos:end="23:63">uint16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:16">/* header */</comment>

    <expr_stmt pos:start="29:5" pos:end="31:38"><expr pos:start="29:5" pos:end="31:37"><name pos:start="29:5" pos:end="29:10">errors</name> <operator pos:start="29:12" pos:end="29:13">+=</operator> <call pos:start="29:15" pos:end="31:37"><name pos:start="29:15" pos:end="29:27">inc_refcounts</name><argument_list pos:start="29:28" pos:end="31:37">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">bs</name></expr></argument>, <argument pos:start="29:33" pos:end="29:46"><expr pos:start="29:33" pos:end="29:46"><name pos:start="29:33" pos:end="29:46">refcount_table</name></expr></argument>, <argument pos:start="29:49" pos:end="29:59"><expr pos:start="29:49" pos:end="29:59"><name pos:start="29:49" pos:end="29:59">nb_clusters</name></expr></argument>,

                  <argument pos:start="31:19" pos:end="31:19"><expr pos:start="31:19" pos:end="31:19"><literal type="number" pos:start="31:19" pos:end="31:19">0</literal></expr></argument>, <argument pos:start="31:22" pos:end="31:36"><expr pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:36"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:36">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:26">/* current L1 table */</comment>

    <expr_stmt pos:start="37:5" pos:end="39:58"><expr pos:start="37:5" pos:end="39:57"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="39:57"><name pos:start="37:11" pos:end="37:28">check_refcounts_l1</name><argument_list pos:start="37:29" pos:end="39:57">(<argument pos:start="37:30" pos:end="37:31"><expr pos:start="37:30" pos:end="37:31"><name pos:start="37:30" pos:end="37:31">bs</name></expr></argument>, <argument pos:start="37:34" pos:end="37:47"><expr pos:start="37:34" pos:end="37:47"><name pos:start="37:34" pos:end="37:47">refcount_table</name></expr></argument>, <argument pos:start="37:50" pos:end="37:60"><expr pos:start="37:50" pos:end="37:60"><name pos:start="37:50" pos:end="37:60">nb_clusters</name></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:41"><expr pos:start="39:24" pos:end="39:41"><name pos:start="39:24" pos:end="39:41"><name pos:start="39:24" pos:end="39:24">s</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:41">l1_table_offset</name></name></expr></argument>, <argument pos:start="39:44" pos:end="39:53"><expr pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:53"><name pos:start="39:44" pos:end="39:44">s</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:53">l1_size</name></name></expr></argument>, <argument pos:start="39:56" pos:end="39:56"><expr pos:start="39:56" pos:end="39:56"><literal type="number" pos:start="39:56" pos:end="39:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">&lt;</operator> <literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>)</condition> <block pos:start="41:18" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:19">

        <return pos:start="43:9" pos:end="43:19">return <expr pos:start="43:16" pos:end="43:18"><name pos:start="43:16" pos:end="43:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:18"><expr pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:10">errors</name> <operator pos:start="47:12" pos:end="47:13">+=</operator> <name pos:start="47:15" pos:end="47:17">ret</name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:19">/* snapshots */</comment>

    <for pos:start="53:5" pos:end="61:5">for<control pos:start="53:8" pos:end="53:40">(<init pos:start="53:9" pos:end="53:14"><expr pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">i</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>;</init> <condition pos:start="53:16" pos:end="53:35"><expr pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:16">i</name> <operator pos:start="53:18" pos:end="53:18">&lt;</operator> <name pos:start="53:20" pos:end="53:34"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:34">nb_snapshots</name></name></expr>;</condition> <incr pos:start="53:37" pos:end="53:39"><expr pos:start="53:37" pos:end="53:39"><name pos:start="53:37" pos:end="53:37">i</name><operator pos:start="53:38" pos:end="53:39">++</operator></expr></incr>)</control> <block pos:start="53:42" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:64">

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:10">sn</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:25"><name pos:start="55:14" pos:end="55:14">s</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:25">snapshots</name></name> <operator pos:start="55:27" pos:end="55:27">+</operator> <name pos:start="55:29" pos:end="55:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="59:64"><expr pos:start="57:9" pos:end="59:63"><call pos:start="57:9" pos:end="59:63"><name pos:start="57:9" pos:end="57:26">check_refcounts_l1</name><argument_list pos:start="57:27" pos:end="59:63">(<argument pos:start="57:28" pos:end="57:29"><expr pos:start="57:28" pos:end="57:29"><name pos:start="57:28" pos:end="57:29">bs</name></expr></argument>, <argument pos:start="57:32" pos:end="57:45"><expr pos:start="57:32" pos:end="57:45"><name pos:start="57:32" pos:end="57:45">refcount_table</name></expr></argument>, <argument pos:start="57:48" pos:end="57:58"><expr pos:start="57:48" pos:end="57:58"><name pos:start="57:48" pos:end="57:58">nb_clusters</name></expr></argument>,

                           <argument pos:start="59:28" pos:end="59:46"><expr pos:start="59:28" pos:end="59:46"><name pos:start="59:28" pos:end="59:46"><name pos:start="59:28" pos:end="59:29">sn</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:46">l1_table_offset</name></name></expr></argument>, <argument pos:start="59:49" pos:end="59:59"><expr pos:start="59:49" pos:end="59:59"><name pos:start="59:49" pos:end="59:59"><name pos:start="59:49" pos:end="59:50">sn</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:59">l1_size</name></name></expr></argument>, <argument pos:start="59:62" pos:end="59:62"><expr pos:start="59:62" pos:end="59:62"><literal type="number" pos:start="59:62" pos:end="59:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="63:5" pos:end="65:58"><expr pos:start="63:5" pos:end="65:57"><name pos:start="63:5" pos:end="63:10">errors</name> <operator pos:start="63:12" pos:end="63:13">+=</operator> <call pos:start="63:15" pos:end="65:57"><name pos:start="63:15" pos:end="63:27">inc_refcounts</name><argument_list pos:start="63:28" pos:end="65:57">(<argument pos:start="63:29" pos:end="63:30"><expr pos:start="63:29" pos:end="63:30"><name pos:start="63:29" pos:end="63:30">bs</name></expr></argument>, <argument pos:start="63:33" pos:end="63:46"><expr pos:start="63:33" pos:end="63:46"><name pos:start="63:33" pos:end="63:46">refcount_table</name></expr></argument>, <argument pos:start="63:49" pos:end="63:59"><expr pos:start="63:49" pos:end="63:59"><name pos:start="63:49" pos:end="63:59">nb_clusters</name></expr></argument>,

                  <argument pos:start="65:19" pos:end="65:37"><expr pos:start="65:19" pos:end="65:37"><name pos:start="65:19" pos:end="65:37"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:37">snapshots_offset</name></name></expr></argument>, <argument pos:start="65:40" pos:end="65:56"><expr pos:start="65:40" pos:end="65:56"><name pos:start="65:40" pos:end="65:56"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:56">snapshots_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:23">/* refcount data */</comment>

    <expr_stmt pos:start="71:5" pos:end="75:61"><expr pos:start="71:5" pos:end="75:60"><name pos:start="71:5" pos:end="71:10">errors</name> <operator pos:start="71:12" pos:end="71:13">+=</operator> <call pos:start="71:15" pos:end="75:60"><name pos:start="71:15" pos:end="71:27">inc_refcounts</name><argument_list pos:start="71:28" pos:end="75:60">(<argument pos:start="71:29" pos:end="71:30"><expr pos:start="71:29" pos:end="71:30"><name pos:start="71:29" pos:end="71:30">bs</name></expr></argument>, <argument pos:start="71:33" pos:end="71:46"><expr pos:start="71:33" pos:end="71:46"><name pos:start="71:33" pos:end="71:46">refcount_table</name></expr></argument>, <argument pos:start="71:49" pos:end="71:59"><expr pos:start="71:49" pos:end="71:59"><name pos:start="71:49" pos:end="71:59">nb_clusters</name></expr></argument>,

                  <argument pos:start="73:19" pos:end="73:42"><expr pos:start="73:19" pos:end="73:42"><name pos:start="73:19" pos:end="73:42"><name pos:start="73:19" pos:end="73:19">s</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:42">refcount_table_offset</name></name></expr></argument>,

                  <argument pos:start="75:19" pos:end="75:59"><expr pos:start="75:19" pos:end="75:59"><name pos:start="75:19" pos:end="75:40"><name pos:start="75:19" pos:end="75:19">s</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:40">refcount_table_size</name></name> <operator pos:start="75:42" pos:end="75:42">*</operator> <sizeof pos:start="75:44" pos:end="75:59">sizeof<argument_list pos:start="75:50" pos:end="75:59">(<argument pos:start="75:51" pos:end="75:58"><expr pos:start="75:51" pos:end="75:58"><name pos:start="75:51" pos:end="75:58">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="77:5" pos:end="115:5">for<control pos:start="77:8" pos:end="77:47">(<init pos:start="77:9" pos:end="77:14"><expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:9">i</name> <operator pos:start="77:11" pos:end="77:11">=</operator> <literal type="number" pos:start="77:13" pos:end="77:13">0</literal></expr>;</init> <condition pos:start="77:16" pos:end="77:42"><expr pos:start="77:16" pos:end="77:41"><name pos:start="77:16" pos:end="77:16">i</name> <operator pos:start="77:18" pos:end="77:18">&lt;</operator> <name pos:start="77:20" pos:end="77:41"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:41">refcount_table_size</name></name></expr>;</condition> <incr pos:start="77:44" pos:end="77:46"><expr pos:start="77:44" pos:end="77:46"><name pos:start="77:44" pos:end="77:44">i</name><operator pos:start="77:45" pos:end="77:46">++</operator></expr></incr>)</control> <block pos:start="77:49" pos:end="115:5">{<block_content pos:start="79:9" pos:end="113:9">

        <decl_stmt pos:start="79:9" pos:end="79:23"><decl pos:start="79:9" pos:end="79:22"><type pos:start="79:9" pos:end="79:15"><name pos:start="79:9" pos:end="79:15">int64_t</name></type> <name pos:start="79:17" pos:end="79:22">offset</name></decl>;</decl_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:38"><expr pos:start="81:9" pos:end="81:37"><name pos:start="81:9" pos:end="81:14">offset</name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:37"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:34">refcount_table</name><index pos:start="81:35" pos:end="81:37">[<expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">i</name></expr>]</index></name></expr>;</expr_stmt>



        <comment type="block" pos:start="85:9" pos:end="85:49">/* Refcount blocks are cluster aligned */</comment>

        <if_stmt pos:start="87:9" pos:end="95:9"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:43">(<expr pos:start="87:13" pos:end="87:42"><name pos:start="87:13" pos:end="87:18">offset</name> <operator pos:start="87:20" pos:end="87:20">&amp;</operator> <operator pos:start="87:22" pos:end="87:22">(</operator><name pos:start="87:23" pos:end="87:37"><name pos:start="87:23" pos:end="87:23">s</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:37">cluster_size</name></name> <operator pos:start="87:39" pos:end="87:39">-</operator> <literal type="number" pos:start="87:41" pos:end="87:41">1</literal><operator pos:start="87:42" pos:end="87:42">)</operator></expr>)</condition> <block pos:start="87:45" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:21">

            <expr_stmt pos:start="89:13" pos:end="91:72"><expr pos:start="89:13" pos:end="91:71"><call pos:start="89:13" pos:end="91:71"><name pos:start="89:13" pos:end="89:19">fprintf</name><argument_list pos:start="89:20" pos:end="91:71">(<argument pos:start="89:21" pos:end="89:26"><expr pos:start="89:21" pos:end="89:26"><name pos:start="89:21" pos:end="89:26">stderr</name></expr></argument>, <argument pos:start="89:29" pos:end="91:67"><expr pos:start="89:29" pos:end="91:67"><literal type="string" pos:start="89:29" pos:end="89:61">"ERROR refcount block %d is not "</literal>

                <literal type="string" pos:start="91:17" pos:end="91:67">"cluster aligned; refcount table entry corrupted\n"</literal></expr></argument>, <argument pos:start="91:70" pos:end="91:70"><expr pos:start="91:70" pos:end="91:70"><name pos:start="91:70" pos:end="91:70">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:21"><expr pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:18">errors</name><operator pos:start="93:19" pos:end="93:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="99:9" pos:end="113:9"><if pos:start="99:9" pos:end="113:9">if <condition pos:start="99:12" pos:end="99:24">(<expr pos:start="99:13" pos:end="99:23"><name pos:start="99:13" pos:end="99:18">offset</name> <operator pos:start="99:20" pos:end="99:21">!=</operator> <literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr>)</condition> <block pos:start="99:26" pos:end="113:9">{<block_content pos:start="101:13" pos:end="111:13">

            <expr_stmt pos:start="101:13" pos:end="103:51"><expr pos:start="101:13" pos:end="103:50"><name pos:start="101:13" pos:end="101:18">errors</name> <operator pos:start="101:20" pos:end="101:21">+=</operator> <call pos:start="101:23" pos:end="103:50"><name pos:start="101:23" pos:end="101:35">inc_refcounts</name><argument_list pos:start="101:36" pos:end="103:50">(<argument pos:start="101:37" pos:end="101:38"><expr pos:start="101:37" pos:end="101:38"><name pos:start="101:37" pos:end="101:38">bs</name></expr></argument>, <argument pos:start="101:41" pos:end="101:54"><expr pos:start="101:41" pos:end="101:54"><name pos:start="101:41" pos:end="101:54">refcount_table</name></expr></argument>, <argument pos:start="101:57" pos:end="101:67"><expr pos:start="101:57" pos:end="101:67"><name pos:start="101:57" pos:end="101:67">nb_clusters</name></expr></argument>,

                          <argument pos:start="103:27" pos:end="103:32"><expr pos:start="103:27" pos:end="103:32"><name pos:start="103:27" pos:end="103:32">offset</name></expr></argument>, <argument pos:start="103:35" pos:end="103:49"><expr pos:start="103:35" pos:end="103:49"><name pos:start="103:35" pos:end="103:49"><name pos:start="103:35" pos:end="103:35">s</name><operator pos:start="103:36" pos:end="103:37">-&gt;</operator><name pos:start="103:38" pos:end="103:49">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:62">(<expr pos:start="105:17" pos:end="105:61"><name pos:start="105:17" pos:end="105:56"><name pos:start="105:17" pos:end="105:30">refcount_table</name><index pos:start="105:31" pos:end="105:56">[<expr pos:start="105:32" pos:end="105:55"><name pos:start="105:32" pos:end="105:37">offset</name> <operator pos:start="105:39" pos:end="105:39">/</operator> <name pos:start="105:41" pos:end="105:55"><name pos:start="105:41" pos:end="105:41">s</name><operator pos:start="105:42" pos:end="105:43">-&gt;</operator><name pos:start="105:44" pos:end="105:55">cluster_size</name></name></expr>]</index></name> <operator pos:start="105:58" pos:end="105:59">!=</operator> <literal type="number" pos:start="105:61" pos:end="105:61">1</literal></expr>)</condition> <block pos:start="105:64" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:65">

                <expr_stmt pos:start="107:17" pos:end="109:65"><expr pos:start="107:17" pos:end="109:64"><call pos:start="107:17" pos:end="109:64"><name pos:start="107:17" pos:end="107:23">fprintf</name><argument_list pos:start="107:24" pos:end="109:64">(<argument pos:start="107:25" pos:end="107:30"><expr pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:30">stderr</name></expr></argument>, <argument pos:start="107:33" pos:end="107:71"><expr pos:start="107:33" pos:end="107:71"><literal type="string" pos:start="107:33" pos:end="107:71">"ERROR refcount block %d refcount=%d\n"</literal></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:21"><expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">i</name></expr></argument>, <argument pos:start="109:24" pos:end="109:63"><expr pos:start="109:24" pos:end="109:63"><name pos:start="109:24" pos:end="109:63"><name pos:start="109:24" pos:end="109:37">refcount_table</name><index pos:start="109:38" pos:end="109:63">[<expr pos:start="109:39" pos:end="109:62"><name pos:start="109:39" pos:end="109:44">offset</name> <operator pos:start="109:46" pos:end="109:46">/</operator> <name pos:start="109:48" pos:end="109:62"><name pos:start="109:48" pos:end="109:48">s</name><operator pos:start="109:49" pos:end="109:50">-&gt;</operator><name pos:start="109:51" pos:end="109:62">cluster_size</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="119:5" pos:end="119:28">/* compare ref counts */</comment>

    <for pos:start="121:5" pos:end="147:5">for<control pos:start="121:8" pos:end="121:36">(<init pos:start="121:9" pos:end="121:14"><expr pos:start="121:9" pos:end="121:13"><name pos:start="121:9" pos:end="121:9">i</name> <operator pos:start="121:11" pos:end="121:11">=</operator> <literal type="number" pos:start="121:13" pos:end="121:13">0</literal></expr>;</init> <condition pos:start="121:16" pos:end="121:31"><expr pos:start="121:16" pos:end="121:30"><name pos:start="121:16" pos:end="121:16">i</name> <operator pos:start="121:18" pos:end="121:18">&lt;</operator> <name pos:start="121:20" pos:end="121:30">nb_clusters</name></expr>;</condition> <incr pos:start="121:33" pos:end="121:35"><expr pos:start="121:33" pos:end="121:35"><name pos:start="121:33" pos:end="121:33">i</name><operator pos:start="121:34" pos:end="121:35">++</operator></expr></incr>)</control> <block pos:start="121:38" pos:end="147:5">{<block_content pos:start="123:9" pos:end="145:9">

        <expr_stmt pos:start="123:9" pos:end="123:40"><expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:17">refcount1</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:39"><name pos:start="123:21" pos:end="123:32">get_refcount</name><argument_list pos:start="123:33" pos:end="123:39">(<argument pos:start="123:34" pos:end="123:35"><expr pos:start="123:34" pos:end="123:35"><name pos:start="123:34" pos:end="123:35">bs</name></expr></argument>, <argument pos:start="123:38" pos:end="123:38"><expr pos:start="123:38" pos:end="123:38"><name pos:start="123:38" pos:end="123:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="125:26">(<expr pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:21">refcount1</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <literal type="number" pos:start="125:25" pos:end="125:25">0</literal></expr>)</condition> <block pos:start="125:28" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:41">

            <expr_stmt pos:start="127:13" pos:end="129:41"><expr pos:start="127:13" pos:end="129:40"><call pos:start="127:13" pos:end="129:40"><name pos:start="127:13" pos:end="127:19">fprintf</name><argument_list pos:start="127:20" pos:end="129:40">(<argument pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:26"><name pos:start="127:21" pos:end="127:26">stderr</name></expr></argument>, <argument pos:start="127:29" pos:end="127:69"><expr pos:start="127:29" pos:end="127:69"><literal type="string" pos:start="127:29" pos:end="127:69">"Can't get refcount for cluster %d: %s\n"</literal></expr></argument>,

                <argument pos:start="129:17" pos:end="129:17"><expr pos:start="129:17" pos:end="129:17"><name pos:start="129:17" pos:end="129:17">i</name></expr></argument>, <argument pos:start="129:20" pos:end="129:39"><expr pos:start="129:20" pos:end="129:39"><call pos:start="129:20" pos:end="129:39"><name pos:start="129:20" pos:end="129:27">strerror</name><argument_list pos:start="129:28" pos:end="129:39">(<argument pos:start="129:29" pos:end="129:38"><expr pos:start="129:29" pos:end="129:38"><operator pos:start="129:29" pos:end="129:29">-</operator><name pos:start="129:30" pos:end="129:38">refcount1</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:38"><expr pos:start="135:9" pos:end="135:37"><name pos:start="135:9" pos:end="135:17">refcount2</name> <operator pos:start="135:19" pos:end="135:19">=</operator> <name pos:start="135:21" pos:end="135:37"><name pos:start="135:21" pos:end="135:34">refcount_table</name><index pos:start="135:35" pos:end="135:37">[<expr pos:start="135:36" pos:end="135:36"><name pos:start="135:36" pos:end="135:36">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="145:9"><if pos:start="137:9" pos:end="145:9">if <condition pos:start="137:12" pos:end="137:35">(<expr pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:21">refcount1</name> <operator pos:start="137:23" pos:end="137:24">!=</operator> <name pos:start="137:26" pos:end="137:34">refcount2</name></expr>)</condition> <block pos:start="137:37" pos:end="145:9">{<block_content pos:start="139:13" pos:end="143:21">

            <expr_stmt pos:start="139:13" pos:end="141:44"><expr pos:start="139:13" pos:end="141:43"><call pos:start="139:13" pos:end="141:43"><name pos:start="139:13" pos:end="139:19">fprintf</name><argument_list pos:start="139:20" pos:end="141:43">(<argument pos:start="139:21" pos:end="139:26"><expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:26">stderr</name></expr></argument>, <argument pos:start="139:29" pos:end="139:73"><expr pos:start="139:29" pos:end="139:73"><literal type="string" pos:start="139:29" pos:end="139:73">"ERROR cluster %d refcount=%d reference=%d\n"</literal></expr></argument>,

                   <argument pos:start="141:20" pos:end="141:20"><expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">i</name></expr></argument>, <argument pos:start="141:23" pos:end="141:31"><expr pos:start="141:23" pos:end="141:31"><name pos:start="141:23" pos:end="141:31">refcount1</name></expr></argument>, <argument pos:start="141:34" pos:end="141:42"><expr pos:start="141:34" pos:end="141:42"><name pos:start="141:34" pos:end="141:42">refcount2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:21"><expr pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:18">errors</name><operator pos:start="143:19" pos:end="143:20">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="151:5" pos:end="151:30"><expr pos:start="151:5" pos:end="151:29"><call pos:start="151:5" pos:end="151:29"><name pos:start="151:5" pos:end="151:13">qemu_free</name><argument_list pos:start="151:14" pos:end="151:29">(<argument pos:start="151:15" pos:end="151:28"><expr pos:start="151:15" pos:end="151:28"><name pos:start="151:15" pos:end="151:28">refcount_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:18">return <expr pos:start="155:12" pos:end="155:17"><name pos:start="155:12" pos:end="155:17">errors</name></expr>;</return>

</block_content>}</block></function>
</unit>
