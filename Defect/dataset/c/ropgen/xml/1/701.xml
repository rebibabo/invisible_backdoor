<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/701.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">qemu_cond_init</name><parameter_list pos:start="1:20" pos:end="1:35">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:30"><name pos:start="1:21" pos:end="1:28">QemuCond</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">cond</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <expr_stmt pos:start="5:5" pos:end="5:35"><expr pos:start="5:5" pos:end="5:34"><call pos:start="5:5" pos:end="5:34"><name pos:start="5:5" pos:end="5:10">memset</name><argument_list pos:start="5:11" pos:end="5:34">(<argument pos:start="5:12" pos:end="5:15"><expr pos:start="5:12" pos:end="5:15"><name pos:start="5:12" pos:end="5:15">cond</name></expr></argument>, <argument pos:start="5:18" pos:end="5:18"><expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></argument>, <argument pos:start="5:21" pos:end="5:33"><expr pos:start="5:21" pos:end="5:33"><sizeof pos:start="5:21" pos:end="5:33">sizeof<argument_list pos:start="5:27" pos:end="5:33">(<argument pos:start="5:28" pos:end="5:32"><expr pos:start="5:28" pos:end="5:32"><operator pos:start="5:28" pos:end="5:28">*</operator><name pos:start="5:29" pos:end="5:32">cond</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:58"><expr pos:start="9:5" pos:end="9:57"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:8">cond</name><operator pos:start="9:9" pos:end="9:10">-&gt;</operator><name pos:start="9:11" pos:end="9:14">sema</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:57"><name pos:start="9:18" pos:end="9:32">CreateSemaphore</name><argument_list pos:start="9:33" pos:end="9:57">(<argument pos:start="9:34" pos:end="9:37"><expr pos:start="9:34" pos:end="9:37"><name pos:start="9:34" pos:end="9:37">NULL</name></expr></argument>, <argument pos:start="9:40" pos:end="9:40"><expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr></argument>, <argument pos:start="9:43" pos:end="9:50"><expr pos:start="9:43" pos:end="9:50"><name pos:start="9:43" pos:end="9:50">LONG_MAX</name></expr></argument>, <argument pos:start="9:53" pos:end="9:56"><expr pos:start="9:53" pos:end="9:56"><name pos:start="9:53" pos:end="9:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:20">(<expr pos:start="11:9" pos:end="11:19"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:19"><name pos:start="11:10" pos:end="11:13">cond</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:19">sema</name></name></expr>)</condition> <block pos:start="11:22" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:45">

        <expr_stmt pos:start="13:9" pos:end="13:45"><expr pos:start="13:9" pos:end="13:44"><call pos:start="13:9" pos:end="13:44"><name pos:start="13:9" pos:end="13:18">error_exit</name><argument_list pos:start="13:19" pos:end="13:44">(<argument pos:start="13:20" pos:end="13:33"><expr pos:start="13:20" pos:end="13:33"><call pos:start="13:20" pos:end="13:33"><name pos:start="13:20" pos:end="13:31">GetLastError</name><argument_list pos:start="13:32" pos:end="13:33">()</argument_list></call></expr></argument>, <argument pos:start="13:36" pos:end="13:43"><expr pos:start="13:36" pos:end="13:43"><name pos:start="13:36" pos:end="13:43">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="23:45"><expr pos:start="17:5" pos:end="23:44"><name pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:8">cond</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:24">continue_event</name></name> <operator pos:start="17:26" pos:end="17:26">=</operator> <call pos:start="17:28" pos:end="23:44"><name pos:start="17:28" pos:end="17:38">CreateEvent</name><argument_list pos:start="17:39" pos:end="23:44">(<argument pos:start="17:40" pos:end="17:43"><expr pos:start="17:40" pos:end="17:43"><name pos:start="17:40" pos:end="17:43">NULL</name></expr></argument>,    <comment type="block" pos:start="17:49" pos:end="17:62">/* security */</comment>

                                       <argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44">FALSE</name></expr></argument>,   <comment type="block" pos:start="19:49" pos:end="19:64">/* auto-reset */</comment>

                                       <argument pos:start="21:40" pos:end="21:44"><expr pos:start="21:40" pos:end="21:44"><name pos:start="21:40" pos:end="21:44">FALSE</name></expr></argument>,   <comment type="block" pos:start="21:49" pos:end="21:66">/* not signaled */</comment>

                                       <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="block" pos:start="23:49" pos:end="23:58">/* name */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:30">(<expr pos:start="25:9" pos:end="25:29"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:29"><name pos:start="25:10" pos:end="25:13">cond</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">continue_event</name></name></expr>)</condition> <block pos:start="25:32" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:45">

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><call pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:18">error_exit</name><argument_list pos:start="27:19" pos:end="27:44">(<argument pos:start="27:20" pos:end="27:33"><expr pos:start="27:20" pos:end="27:33"><call pos:start="27:20" pos:end="27:33"><name pos:start="27:20" pos:end="27:31">GetLastError</name><argument_list pos:start="27:32" pos:end="27:33">()</argument_list></call></expr></argument>, <argument pos:start="27:36" pos:end="27:43"><expr pos:start="27:36" pos:end="27:43"><name pos:start="27:36" pos:end="27:43">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
