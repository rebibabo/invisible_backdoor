<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13779.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">rtas_stop_self</name><parameter_list pos:start="1:27" pos:end="4:60">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:37">PowerPCCPU</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">cpu</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:61">sPAPRMachineState</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:68">spapr</name></decl></parameter>,
                           <parameter pos:start="2:28" pos:end="2:41"><decl pos:start="2:28" pos:end="2:41"><type pos:start="2:28" pos:end="2:41"><name pos:start="2:28" pos:end="2:35">uint32_t</name></type> <name pos:start="2:37" pos:end="2:41">token</name></decl></parameter>, <parameter pos:start="2:44" pos:end="2:57"><decl pos:start="2:44" pos:end="2:57"><type pos:start="2:44" pos:end="2:57"><name pos:start="2:44" pos:end="2:51">uint32_t</name></type> <name pos:start="2:53" pos:end="2:57">nargs</name></decl></parameter>,
                           <parameter pos:start="3:28" pos:end="3:44"><decl pos:start="3:28" pos:end="3:44"><type pos:start="3:28" pos:end="3:44"><name pos:start="3:28" pos:end="3:39">target_ulong</name></type> <name pos:start="3:41" pos:end="3:44">args</name></decl></parameter>,
                           <parameter pos:start="4:28" pos:end="4:40"><decl pos:start="4:28" pos:end="4:40"><type pos:start="4:28" pos:end="4:40"><name pos:start="4:28" pos:end="4:35">uint32_t</name></type> <name pos:start="4:37" pos:end="4:40">nret</name></decl></parameter>, <parameter pos:start="4:43" pos:end="4:59"><decl pos:start="4:43" pos:end="4:59"><type pos:start="4:43" pos:end="4:59"><name pos:start="4:43" pos:end="4:54">target_ulong</name></type> <name pos:start="4:56" pos:end="4:59">rets</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="21:1">{<block_content pos:start="6:5" pos:end="20:17">
    <decl_stmt pos:start="6:5" pos:end="6:28"><decl pos:start="6:5" pos:end="6:27"><type pos:start="6:5" pos:end="6:14"><name pos:start="6:5" pos:end="6:12">CPUState</name> <modifier pos:start="6:14" pos:end="6:14">*</modifier></type><name pos:start="6:15" pos:end="6:16">cs</name> <init pos:start="6:18" pos:end="6:27">= <expr pos:start="6:20" pos:end="6:27"><call pos:start="6:20" pos:end="6:27"><name pos:start="6:20" pos:end="6:22">CPU</name><argument_list pos:start="6:23" pos:end="6:27">(<argument pos:start="6:24" pos:end="6:26"><expr pos:start="6:24" pos:end="6:26"><name pos:start="6:24" pos:end="6:26">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name> <init pos:start="7:22" pos:end="7:32">= <expr pos:start="7:24" pos:end="7:32"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:27">cpu</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">env</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:54"><decl pos:start="8:5" pos:end="8:53"><type pos:start="8:5" pos:end="8:21"><name pos:start="8:5" pos:end="8:19">PowerPCCPUClass</name> <modifier pos:start="8:21" pos:end="8:21">*</modifier></type><name pos:start="8:22" pos:end="8:24">pcc</name> <init pos:start="8:26" pos:end="8:53">= <expr pos:start="8:28" pos:end="8:53"><call pos:start="8:28" pos:end="8:53"><name pos:start="8:28" pos:end="8:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="8:49" pos:end="8:53">(<argument pos:start="8:50" pos:end="8:52"><expr pos:start="8:50" pos:end="8:52"><name pos:start="8:50" pos:end="8:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:19"><expr pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:6">cs</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:14">halted</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <literal type="number" pos:start="9:18" pos:end="9:18">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:22"><expr pos:start="10:5" pos:end="10:21"><call pos:start="10:5" pos:end="10:21"><name pos:start="10:5" pos:end="10:17">qemu_cpu_kick</name><argument_list pos:start="10:18" pos:end="10:21">(<argument pos:start="10:19" pos:end="10:20"><expr pos:start="10:19" pos:end="10:20"><name pos:start="10:19" pos:end="10:20">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="11:5" pos:end="19:7">/*
     * While stopping a CPU, the guest calls H_CPPR which
     * effectively disables interrupts on XICS level.
     * However decrementer interrupts in TCG can still
     * wake the CPU up so here we disable interrupts in MSR
     * as well.
     * As rtas_start_cpu() resets the whole MSR anyway, there is
     * no need to bother with specific bits, we just clear it.
     */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:17"><expr pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:12"><name pos:start="20:5" pos:end="20:7">env</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:12">msr</name></name> <operator pos:start="20:14" pos:end="20:14">=</operator> <literal type="number" pos:start="20:16" pos:end="20:16">0</literal></expr>;</expr_stmt>
</block_content>}</block></function></unit>
