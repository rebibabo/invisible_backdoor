<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11892.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:26">av_buffersrc_add_frame</name><parameter_list pos:start="1:27" pos:end="1:64">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">AVFilterContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:56">AVFrame</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">BufferSourceContext</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">s</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVFrame</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="21:31"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:15">(<expr pos:start="13:9" pos:end="13:14"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:14">frame</name></expr>)</condition> <block pos:start="13:17" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:17">

        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">eof</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="21:31">else if <condition pos:start="19:15" pos:end="19:22">(<expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:21">eof</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">

        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <switch pos:start="25:5" pos:end="47:5">switch <condition pos:start="25:12" pos:end="25:34">(<expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:27"><name pos:start="25:13" pos:end="25:15">ctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:24">outputs</name><index pos:start="25:25" pos:end="25:27">[<expr pos:start="25:26" pos:end="25:26"><literal type="number" pos:start="25:26" pos:end="25:26">0</literal></expr>]</index></name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:33">type</name></expr>)</condition> <block pos:start="25:36" pos:end="47:5">{<block_content pos:start="27:5" pos:end="45:31">

    <case pos:start="27:5" pos:end="27:28">case <expr pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="31:48"><expr pos:start="29:9" pos:end="31:47"><call pos:start="29:9" pos:end="31:47"><name pos:start="29:9" pos:end="29:32">CHECK_VIDEO_PARAM_CHANGE</name><argument_list pos:start="29:33" pos:end="31:47">(<argument pos:start="29:34" pos:end="29:36"><expr pos:start="29:34" pos:end="29:36"><name pos:start="29:34" pos:end="29:36">ctx</name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">s</name></expr></argument>, <argument pos:start="29:42" pos:end="29:53"><expr pos:start="29:42" pos:end="29:53"><name pos:start="29:42" pos:end="29:53"><name pos:start="29:42" pos:end="29:46">frame</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:53">width</name></name></expr></argument>, <argument pos:start="29:56" pos:end="29:68"><expr pos:start="29:56" pos:end="29:68"><name pos:start="29:56" pos:end="29:68"><name pos:start="29:56" pos:end="29:60">frame</name><operator pos:start="29:61" pos:end="29:62">-&gt;</operator><name pos:start="29:63" pos:end="29:68">height</name></name></expr></argument>,

                                 <argument pos:start="31:34" pos:end="31:46"><expr pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:46"><name pos:start="31:34" pos:end="31:38">frame</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:28">case <expr pos:start="35:10" pos:end="35:27"><name pos:start="35:10" pos:end="35:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="39:48"><expr pos:start="37:9" pos:end="39:47"><call pos:start="37:9" pos:end="39:47"><name pos:start="37:9" pos:end="37:32">CHECK_AUDIO_PARAM_CHANGE</name><argument_list pos:start="37:33" pos:end="39:47">(<argument pos:start="37:34" pos:end="37:36"><expr pos:start="37:34" pos:end="37:36"><name pos:start="37:34" pos:end="37:36">ctx</name></expr></argument>, <argument pos:start="37:39" pos:end="37:39"><expr pos:start="37:39" pos:end="37:39"><name pos:start="37:39" pos:end="37:39">s</name></expr></argument>, <argument pos:start="37:42" pos:end="37:59"><expr pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:46">frame</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:59">sample_rate</name></name></expr></argument>, <argument pos:start="37:62" pos:end="37:82"><expr pos:start="37:62" pos:end="37:82"><name pos:start="37:62" pos:end="37:82"><name pos:start="37:62" pos:end="37:66">frame</name><operator pos:start="37:67" pos:end="37:68">-&gt;</operator><name pos:start="37:69" pos:end="37:82">channel_layout</name></name></expr></argument>,

                                 <argument pos:start="39:34" pos:end="39:46"><expr pos:start="39:34" pos:end="39:46"><name pos:start="39:34" pos:end="39:46"><name pos:start="39:34" pos:end="39:38">frame</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="51:5" pos:end="57:19"><if pos:start="51:5" pos:end="57:19">if <condition pos:start="51:8" pos:end="55:60">(<expr pos:start="51:9" pos:end="55:59"><operator pos:start="51:9" pos:end="51:9">!</operator><call pos:start="51:10" pos:end="51:31"><name pos:start="51:10" pos:end="51:22">av_fifo_space</name><argument_list pos:start="51:23" pos:end="51:31">(<argument pos:start="51:24" pos:end="51:30"><expr pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:30"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:30">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="51:33" pos:end="51:34">&amp;&amp;</operator>

        <operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="55:54"><name pos:start="53:16" pos:end="53:31">av_fifo_realloc2</name><argument_list pos:start="53:32" pos:end="55:54">(<argument pos:start="53:33" pos:end="53:39"><expr pos:start="53:33" pos:end="53:39"><name pos:start="53:33" pos:end="53:39"><name pos:start="53:33" pos:end="53:33">s</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:39">fifo</name></name></expr></argument>, <argument pos:start="53:42" pos:end="55:53"><expr pos:start="53:42" pos:end="55:53"><call pos:start="53:42" pos:end="53:62"><name pos:start="53:42" pos:end="53:53">av_fifo_size</name><argument_list pos:start="53:54" pos:end="53:62">(<argument pos:start="53:55" pos:end="53:61"><expr pos:start="53:55" pos:end="53:61"><name pos:start="53:55" pos:end="53:61"><name pos:start="53:55" pos:end="53:55">s</name><operator pos:start="53:56" pos:end="53:57">-&gt;</operator><name pos:start="53:58" pos:end="53:61">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="53:64" pos:end="53:64">+</operator>

                                         <sizeof pos:start="55:42" pos:end="55:53">sizeof<argument_list pos:start="55:48" pos:end="55:53">(<argument pos:start="55:49" pos:end="55:52"><expr pos:start="55:49" pos:end="55:52"><name pos:start="55:49" pos:end="55:52">copy</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="55:55" pos:end="55:55">)</operator> <operator pos:start="55:57" pos:end="55:57">&lt;</operator> <literal type="number" pos:start="55:59" pos:end="55:59">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:19"><block_content pos:start="57:9" pos:end="57:19">

        <return pos:start="57:9" pos:end="57:19">return <expr pos:start="57:16" pos:end="57:18"><name pos:start="57:16" pos:end="57:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="63:31"><if pos:start="61:5" pos:end="63:31">if <condition pos:start="61:8" pos:end="61:35">(<expr pos:start="61:9" pos:end="61:34"><operator pos:start="61:9" pos:end="61:9">!</operator><operator pos:start="61:10" pos:end="61:10">(</operator><name pos:start="61:11" pos:end="61:14">copy</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:33"><name pos:start="61:18" pos:end="61:31">av_frame_alloc</name><argument_list pos:start="61:32" pos:end="61:33">()</argument_list></call><operator pos:start="61:34" pos:end="61:34">)</operator></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:31"><block_content pos:start="63:9" pos:end="63:31">

        <return pos:start="63:9" pos:end="63:31">return <expr pos:start="63:16" pos:end="63:30"><call pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><call pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:21">av_frame_move_ref</name><argument_list pos:start="65:22" pos:end="65:34">(<argument pos:start="65:23" pos:end="65:26"><expr pos:start="65:23" pos:end="65:26"><name pos:start="65:23" pos:end="65:26">copy</name></expr></argument>, <argument pos:start="65:29" pos:end="65:33"><expr pos:start="65:29" pos:end="65:33"><name pos:start="65:29" pos:end="65:33">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="69:5" pos:end="77:5"><if pos:start="69:5" pos:end="77:5">if <condition pos:start="69:8" pos:end="69:78">(<expr pos:start="69:9" pos:end="69:77"><operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:12">ret</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:72"><name pos:start="69:16" pos:end="69:36">av_fifo_generic_write</name><argument_list pos:start="69:37" pos:end="69:72">(<argument pos:start="69:38" pos:end="69:44"><expr pos:start="69:38" pos:end="69:44"><name pos:start="69:38" pos:end="69:44"><name pos:start="69:38" pos:end="69:38">s</name><operator pos:start="69:39" pos:end="69:40">-&gt;</operator><name pos:start="69:41" pos:end="69:44">fifo</name></name></expr></argument>, <argument pos:start="69:47" pos:end="69:51"><expr pos:start="69:47" pos:end="69:51"><operator pos:start="69:47" pos:end="69:47">&amp;</operator><name pos:start="69:48" pos:end="69:51">copy</name></expr></argument>, <argument pos:start="69:54" pos:end="69:65"><expr pos:start="69:54" pos:end="69:65"><sizeof pos:start="69:54" pos:end="69:65">sizeof<argument_list pos:start="69:60" pos:end="69:65">(<argument pos:start="69:61" pos:end="69:64"><expr pos:start="69:61" pos:end="69:64"><name pos:start="69:61" pos:end="69:64">copy</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:68" pos:end="69:71"><expr pos:start="69:68" pos:end="69:71"><name pos:start="69:68" pos:end="69:71">NULL</name></expr></argument>)</argument_list></call><operator pos:start="69:73" pos:end="69:73">)</operator> <operator pos:start="69:75" pos:end="69:75">&lt;</operator> <literal type="number" pos:start="69:77" pos:end="69:77">0</literal></expr>)</condition> <block pos:start="69:80" pos:end="77:5">{<block_content pos:start="71:9" pos:end="75:19">

        <expr_stmt pos:start="71:9" pos:end="71:39"><expr pos:start="71:9" pos:end="71:38"><call pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:25">av_frame_move_ref</name><argument_list pos:start="71:26" pos:end="71:38">(<argument pos:start="71:27" pos:end="71:31"><expr pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:31">frame</name></expr></argument>, <argument pos:start="71:34" pos:end="71:37"><expr pos:start="71:34" pos:end="71:37"><name pos:start="71:34" pos:end="71:37">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:29"><expr pos:start="73:9" pos:end="73:28"><call pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:21">av_frame_free</name><argument_list pos:start="73:22" pos:end="73:28">(<argument pos:start="73:23" pos:end="73:27"><expr pos:start="73:23" pos:end="73:27"><operator pos:start="73:23" pos:end="73:23">&amp;</operator><name pos:start="73:24" pos:end="73:27">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
