<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6973.c" pos:tabs="8"><function pos:start="1:1" pos:end="501:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">mpeg4_decode_block</name><parameter_list pos:start="1:37" pos:end="3:68">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:55"><name pos:start="1:38" pos:end="1:51">MpegEncContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type> <name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:72"><decl pos:start="1:58" pos:end="1:72"><type pos:start="1:58" pos:end="1:72"><name pos:start="1:58" pos:end="1:64">DCTELEM</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type> <name pos:start="1:68" pos:end="1:72">block</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:35"><decl pos:start="3:31" pos:end="3:35"><type pos:start="3:31" pos:end="3:35"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:35">n</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:46"><decl pos:start="3:38" pos:end="3:46"><type pos:start="3:38" pos:end="3:46"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:46">coded</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:57"><decl pos:start="3:49" pos:end="3:57"><type pos:start="3:49" pos:end="3:57"><name pos:start="3:49" pos:end="3:51">int</name></type> <name pos:start="3:53" pos:end="3:57">intra</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:67"><decl pos:start="3:60" pos:end="3:67"><type pos:start="3:60" pos:end="3:67"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:67">rvlc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="501:1">{<block_content pos:start="7:5" pos:end="499:13">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:22">last</name></decl>, <decl pos:start="7:25" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:27">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">dc_pred_dir</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">RLTable</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type> <name pos:start="11:15" pos:end="11:16">rl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">RL_VLC_ELEM</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type> <name pos:start="13:19" pos:end="13:24">rl_vlc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type> <name pos:start="15:21" pos:end="15:30">scan_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:12">qmul</name></decl>, <decl pos:start="17:15" pos:end="17:18"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:18">qadd</name></decl>;</decl_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:67">//Note intra &amp; rvlc should be optimized away if this is inlined</comment>



    <if_stmt pos:start="25:5" pos:end="159:5"><if pos:start="25:5" pos:end="103:5">if<condition pos:start="25:7" pos:end="25:13">(<expr pos:start="25:8" pos:end="25:12"><name pos:start="25:8" pos:end="25:12">intra</name></expr>)</condition> <block pos:start="25:15" pos:end="103:5">{<block_content pos:start="27:7" pos:end="101:15">

      <if_stmt pos:start="27:7" pos:end="61:7"><if pos:start="27:7" pos:end="55:7">if<condition pos:start="27:9" pos:end="27:29">(<expr pos:start="27:10" pos:end="27:28"><name pos:start="27:10" pos:end="27:28"><name pos:start="27:10" pos:end="27:10">s</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:28">use_intra_dc_vlc</name></name></expr>)</condition><block pos:start="27:30" pos:end="55:7">{<block_content pos:start="31:9" pos:end="53:14">

        <comment type="block" pos:start="29:9" pos:end="29:21">/* DC coef */</comment>

        <if_stmt pos:start="31:9" pos:end="49:9"><if pos:start="31:9" pos:end="41:9">if<condition pos:start="31:11" pos:end="31:32">(<expr pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:31"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:31">partitioned_frame</name></name></expr>)</condition><block pos:start="31:33" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:83">

            <expr_stmt pos:start="33:13" pos:end="33:54"><expr pos:start="33:13" pos:end="33:53"><name pos:start="33:13" pos:end="33:17">level</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:53"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:29">dc_val</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>]</index><index pos:start="33:33" pos:end="33:53">[ <expr pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:51"><name pos:start="33:35" pos:end="33:35">s</name><operator pos:start="33:36" pos:end="33:37">-&gt;</operator><name pos:start="33:38" pos:end="33:48">block_index</name><index pos:start="33:49" pos:end="33:51">[<expr pos:start="33:50" pos:end="33:50"><name pos:start="33:50" pos:end="33:50">n</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:80"><if pos:start="35:13" pos:end="35:80">if<condition pos:start="35:15" pos:end="35:19">(<expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:16">n</name><operator pos:start="35:17" pos:end="35:17">&lt;</operator><literal type="number" pos:start="35:18" pos:end="35:18">4</literal></expr>)</condition><block type="pseudo" pos:start="35:21" pos:end="35:80"><block_content pos:start="35:21" pos:end="35:80"> <expr_stmt pos:start="35:21" pos:end="35:80"><expr pos:start="35:21" pos:end="35:79"><name pos:start="35:21" pos:end="35:25">level</name><operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:79"><name pos:start="35:28" pos:end="35:34">FASTDIV</name><argument_list pos:start="35:35" pos:end="35:79">(<argument pos:start="35:36" pos:end="35:63"><expr pos:start="35:36" pos:end="35:63"><operator pos:start="35:36" pos:end="35:36">(</operator><name pos:start="35:37" pos:end="35:41">level</name> <operator pos:start="35:43" pos:end="35:43">+</operator> <operator pos:start="35:45" pos:end="35:45">(</operator><name pos:start="35:46" pos:end="35:58"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:58">y_dc_scale</name></name><operator pos:start="35:59" pos:end="35:60">&gt;&gt;</operator><literal type="number" pos:start="35:61" pos:end="35:61">1</literal><operator pos:start="35:62" pos:end="35:62">)</operator><operator pos:start="35:63" pos:end="35:63">)</operator></expr></argument>, <argument pos:start="35:66" pos:end="35:78"><expr pos:start="35:66" pos:end="35:78"><name pos:start="35:66" pos:end="35:78"><name pos:start="35:66" pos:end="35:66">s</name><operator pos:start="35:67" pos:end="35:68">-&gt;</operator><name pos:start="35:69" pos:end="35:78">y_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="37:13" pos:end="37:80">else<block type="pseudo" pos:start="37:21" pos:end="37:80"><block_content pos:start="37:21" pos:end="37:80">    <expr_stmt pos:start="37:21" pos:end="37:80"><expr pos:start="37:21" pos:end="37:79"><name pos:start="37:21" pos:end="37:25">level</name><operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:79"><name pos:start="37:28" pos:end="37:34">FASTDIV</name><argument_list pos:start="37:35" pos:end="37:79">(<argument pos:start="37:36" pos:end="37:63"><expr pos:start="37:36" pos:end="37:63"><operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:41">level</name> <operator pos:start="37:43" pos:end="37:43">+</operator> <operator pos:start="37:45" pos:end="37:45">(</operator><name pos:start="37:46" pos:end="37:58"><name pos:start="37:46" pos:end="37:46">s</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:58">c_dc_scale</name></name><operator pos:start="37:59" pos:end="37:60">&gt;&gt;</operator><literal type="number" pos:start="37:61" pos:end="37:61">1</literal><operator pos:start="37:62" pos:end="37:62">)</operator><operator pos:start="37:63" pos:end="37:63">)</operator></expr></argument>, <argument pos:start="37:66" pos:end="37:78"><expr pos:start="37:66" pos:end="37:78"><name pos:start="37:66" pos:end="37:78"><name pos:start="37:66" pos:end="37:66">s</name><operator pos:start="37:67" pos:end="37:68">-&gt;</operator><name pos:start="37:69" pos:end="37:78">c_dc_scale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:83"><expr pos:start="39:13" pos:end="39:82"><name pos:start="39:13" pos:end="39:23">dc_pred_dir</name><operator pos:start="39:24" pos:end="39:24">=</operator> <operator pos:start="39:26" pos:end="39:26">(</operator><name pos:start="39:27" pos:end="39:75"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:43">pred_dir_table</name><index pos:start="39:44" pos:end="39:75">[<expr pos:start="39:45" pos:end="39:74"><name pos:start="39:45" pos:end="39:51"><name pos:start="39:45" pos:end="39:45">s</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:51">mb_x</name></name> <operator pos:start="39:53" pos:end="39:53">+</operator> <name pos:start="39:55" pos:end="39:61"><name pos:start="39:55" pos:end="39:55">s</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:61">mb_y</name></name><operator pos:start="39:62" pos:end="39:62">*</operator><name pos:start="39:63" pos:end="39:74"><name pos:start="39:63" pos:end="39:63">s</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:74">mb_stride</name></name></expr>]</index></name><operator pos:start="39:76" pos:end="39:77">&lt;&lt;</operator><name pos:start="39:78" pos:end="39:78">n</name><operator pos:start="39:79" pos:end="39:79">)</operator><operator pos:start="39:80" pos:end="39:80">&amp;</operator><literal type="number" pos:start="39:81" pos:end="39:82">32</literal></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="41:10" pos:end="49:9">else<block pos:start="41:14" pos:end="49:9">{<block_content pos:start="43:13" pos:end="47:26">

            <expr_stmt pos:start="43:13" pos:end="43:56"><expr pos:start="43:13" pos:end="43:55"><name pos:start="43:13" pos:end="43:17">level</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:55"><name pos:start="43:21" pos:end="43:35">mpeg4_decode_dc</name><argument_list pos:start="43:36" pos:end="43:55">(<argument pos:start="43:37" pos:end="43:37"><expr pos:start="43:37" pos:end="43:37"><name pos:start="43:37" pos:end="43:37">s</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><name pos:start="43:40" pos:end="43:40">n</name></expr></argument>, <argument pos:start="43:43" pos:end="43:54"><expr pos:start="43:43" pos:end="43:54"><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:54">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="47:26"><if pos:start="45:13" pos:end="47:26">if <condition pos:start="45:16" pos:end="45:26">(<expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:21">level</name> <operator pos:start="45:23" pos:end="45:23">&lt;</operator> <literal type="number" pos:start="45:25" pos:end="45:25">0</literal></expr>)</condition><block type="pseudo" pos:start="47:17" pos:end="47:26"><block_content pos:start="47:17" pos:end="47:26">

                <return pos:start="47:17" pos:end="47:26">return <expr pos:start="47:24" pos:end="47:25"><operator pos:start="47:24" pos:end="47:24">-</operator><literal type="number" pos:start="47:25" pos:end="47:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:25"><expr pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:16"><name pos:start="51:9" pos:end="51:13">block</name><index pos:start="51:14" pos:end="51:16">[<expr pos:start="51:15" pos:end="51:15"><literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>]</index></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:24">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:14"><expr pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">i</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>;</expr_stmt>

      </block_content>}</block></if><else pos:start="55:8" pos:end="61:7">else<block pos:start="55:12" pos:end="61:7">{<block_content pos:start="57:13" pos:end="59:55">

            <expr_stmt pos:start="57:13" pos:end="57:19"><expr pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:13">i</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <operator pos:start="57:17" pos:end="57:17">-</operator><literal type="number" pos:start="57:18" pos:end="57:18">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:55"><expr pos:start="59:13" pos:end="59:54"><call pos:start="59:13" pos:end="59:54"><name pos:start="59:13" pos:end="59:28">ff_mpeg4_pred_dc</name><argument_list pos:start="59:29" pos:end="59:54">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">s</name></expr></argument>, <argument pos:start="59:33" pos:end="59:33"><expr pos:start="59:33" pos:end="59:33"><name pos:start="59:33" pos:end="59:33">n</name></expr></argument>, <argument pos:start="59:36" pos:end="59:36"><expr pos:start="59:36" pos:end="59:36"><literal type="number" pos:start="59:36" pos:end="59:36">0</literal></expr></argument>, <argument pos:start="59:39" pos:end="59:50"><expr pos:start="59:39" pos:end="59:50"><operator pos:start="59:39" pos:end="59:39">&amp;</operator><name pos:start="59:40" pos:end="59:50">dc_pred_dir</name></expr></argument>, <argument pos:start="59:53" pos:end="59:53"><expr pos:start="59:53" pos:end="59:53"><literal type="number" pos:start="59:53" pos:end="59:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="63:9" pos:end="65:27"><if pos:start="63:9" pos:end="65:27">if <condition pos:start="63:12" pos:end="63:19">(<expr pos:start="63:13" pos:end="63:18"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:18">coded</name></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:27"><block_content pos:start="65:13" pos:end="65:27">

            <goto pos:start="65:13" pos:end="65:27">goto <name pos:start="65:18" pos:end="65:26">not_coded</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="75:9">if<condition pos:start="69:11" pos:end="69:16">(<expr pos:start="69:12" pos:end="69:15"><name pos:start="69:12" pos:end="69:15">rvlc</name></expr>)</condition><block pos:start="69:17" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:45">

            <expr_stmt pos:start="71:13" pos:end="71:32"><expr pos:start="71:13" pos:end="71:31"><name pos:start="71:13" pos:end="71:14">rl</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">&amp;</operator><name pos:start="71:19" pos:end="71:31">rvlc_rl_intra</name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:45"><expr pos:start="73:13" pos:end="73:44"><name pos:start="73:13" pos:end="73:18">rl_vlc</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:44"><name pos:start="73:22" pos:end="73:34">rvlc_rl_intra</name><operator pos:start="73:35" pos:end="73:35">.</operator><name pos:start="73:36" pos:end="73:41">rl_vlc</name><index pos:start="73:42" pos:end="73:44">[<expr pos:start="73:43" pos:end="73:43"><literal type="number" pos:start="73:43" pos:end="73:43">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="75:10" pos:end="81:9">else<block pos:start="75:14" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:40">

            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:14">rl</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:26">rl_intra</name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:40"><expr pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:18">rl_vlc</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <name pos:start="79:22" pos:end="79:39"><name pos:start="79:22" pos:end="79:29">rl_intra</name><operator pos:start="79:30" pos:end="79:30">.</operator><name pos:start="79:31" pos:end="79:36">rl_vlc</name><index pos:start="79:37" pos:end="79:39">[<expr pos:start="79:38" pos:end="79:38"><literal type="number" pos:start="79:38" pos:end="79:38">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="83:9" pos:end="97:9"><if pos:start="83:9" pos:end="93:9">if <condition pos:start="83:12" pos:end="83:23">(<expr pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:22"><name pos:start="83:13" pos:end="83:13">s</name><operator pos:start="83:14" pos:end="83:15">-&gt;</operator><name pos:start="83:16" pos:end="83:22">ac_pred</name></name></expr>)</condition> <block pos:start="83:25" pos:end="93:9">{<block_content pos:start="85:13" pos:end="91:61">

            <if_stmt pos:start="85:13" pos:end="91:61"><if pos:start="85:13" pos:end="87:61">if <condition pos:start="85:16" pos:end="85:33">(<expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:27">dc_pred_dir</name> <operator pos:start="85:29" pos:end="85:30">==</operator> <literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:61"><block_content pos:start="87:17" pos:end="87:61">

                <expr_stmt pos:start="87:17" pos:end="87:61"><expr pos:start="87:17" pos:end="87:60"><name pos:start="87:17" pos:end="87:26">scan_table</name> <operator pos:start="87:28" pos:end="87:28">=</operator> <name pos:start="87:30" pos:end="87:60"><name pos:start="87:30" pos:end="87:30">s</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:49">intra_v_scantable</name><operator pos:start="87:50" pos:end="87:50">.</operator><name pos:start="87:51" pos:end="87:60">permutated</name></name></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="87:63" pos:end="87:72">/* left */</comment>

            <else pos:start="89:13" pos:end="91:61">else<block type="pseudo" pos:start="91:17" pos:end="91:61"><block_content pos:start="91:17" pos:end="91:61">

                <expr_stmt pos:start="91:17" pos:end="91:61"><expr pos:start="91:17" pos:end="91:60"><name pos:start="91:17" pos:end="91:26">scan_table</name> <operator pos:start="91:28" pos:end="91:28">=</operator> <name pos:start="91:30" pos:end="91:60"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:49">intra_h_scantable</name><operator pos:start="91:50" pos:end="91:50">.</operator><name pos:start="91:51" pos:end="91:60">permutated</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="block" pos:start="91:63" pos:end="91:71">/* top */</comment>

        </block_content>}</block></if> <else pos:start="93:11" pos:end="97:9">else <block pos:start="93:16" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:55">

            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:22">scan_table</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:54"><name pos:start="95:26" pos:end="95:26">s</name><operator pos:start="95:27" pos:end="95:28">-&gt;</operator><name pos:start="95:29" pos:end="95:43">intra_scantable</name><operator pos:start="95:44" pos:end="95:44">.</operator><name pos:start="95:45" pos:end="95:54">permutated</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:15"><expr pos:start="99:9" pos:end="99:14"><name pos:start="99:9" pos:end="99:12">qmul</name><operator pos:start="99:13" pos:end="99:13">=</operator><literal type="number" pos:start="99:14" pos:end="99:14">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:15"><expr pos:start="101:9" pos:end="101:14"><name pos:start="101:9" pos:end="101:12">qadd</name><operator pos:start="101:13" pos:end="101:13">=</operator><literal type="number" pos:start="101:14" pos:end="101:14">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="159:5">else <block pos:start="103:12" pos:end="159:5">{<block_content pos:start="105:9" pos:end="157:9">

        <expr_stmt pos:start="105:9" pos:end="105:15"><expr pos:start="105:9" pos:end="105:14"><name pos:start="105:9" pos:end="105:9">i</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <operator pos:start="105:13" pos:end="105:13">-</operator><literal type="number" pos:start="105:14" pos:end="105:14">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="107:9" pos:end="113:9"><if pos:start="107:9" pos:end="113:9">if <condition pos:start="107:12" pos:end="107:19">(<expr pos:start="107:13" pos:end="107:18"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:18">coded</name></expr>)</condition> <block pos:start="107:21" pos:end="113:9">{<block_content pos:start="109:13" pos:end="111:21">

            <expr_stmt pos:start="109:13" pos:end="109:39"><expr pos:start="109:13" pos:end="109:38"><name pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:31">block_last_index</name><index pos:start="109:32" pos:end="109:34">[<expr pos:start="109:33" pos:end="109:33"><name pos:start="109:33" pos:end="109:33">n</name></expr>]</index></name> <operator pos:start="109:36" pos:end="109:36">=</operator> <name pos:start="109:38" pos:end="109:38">i</name></expr>;</expr_stmt>

            <return pos:start="111:13" pos:end="111:21">return <expr pos:start="111:20" pos:end="111:20"><literal type="number" pos:start="111:20" pos:end="111:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="117:32"><if pos:start="115:9" pos:end="115:37">if<condition pos:start="115:11" pos:end="115:16">(<expr pos:start="115:12" pos:end="115:15"><name pos:start="115:12" pos:end="115:15">rvlc</name></expr>)</condition><block type="pseudo" pos:start="115:18" pos:end="115:37"><block_content pos:start="115:18" pos:end="115:37"> <expr_stmt pos:start="115:18" pos:end="115:37"><expr pos:start="115:18" pos:end="115:36"><name pos:start="115:18" pos:end="115:19">rl</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:36">rvlc_rl_inter</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="117:9" pos:end="117:32">else<block type="pseudo" pos:start="117:18" pos:end="117:32"><block_content pos:start="117:18" pos:end="117:32">     <expr_stmt pos:start="117:18" pos:end="117:32"><expr pos:start="117:18" pos:end="117:31"><name pos:start="117:18" pos:end="117:19">rl</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <operator pos:start="117:23" pos:end="117:23">&amp;</operator><name pos:start="117:24" pos:end="117:31">rl_inter</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:51"><expr pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:18">scan_table</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:50"><name pos:start="121:22" pos:end="121:22">s</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:39">intra_scantable</name><operator pos:start="121:40" pos:end="121:40">.</operator><name pos:start="121:41" pos:end="121:50">permutated</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="157:9"><if pos:start="125:9" pos:end="141:9">if<condition pos:start="125:11" pos:end="125:25">(<expr pos:start="125:12" pos:end="125:24"><name pos:start="125:12" pos:end="125:24"><name pos:start="125:12" pos:end="125:12">s</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:24">mpeg_quant</name></name></expr>)</condition><block pos:start="125:26" pos:end="141:9">{<block_content pos:start="127:13" pos:end="139:13">

            <expr_stmt pos:start="127:13" pos:end="127:19"><expr pos:start="127:13" pos:end="127:18"><name pos:start="127:13" pos:end="127:16">qmul</name><operator pos:start="127:17" pos:end="127:17">=</operator><literal type="number" pos:start="127:18" pos:end="127:18">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:19"><expr pos:start="129:13" pos:end="129:18"><name pos:start="129:13" pos:end="129:16">qadd</name><operator pos:start="129:17" pos:end="129:17">=</operator><literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="139:13"><if pos:start="131:13" pos:end="135:13">if<condition pos:start="131:15" pos:end="131:20">(<expr pos:start="131:16" pos:end="131:19"><name pos:start="131:16" pos:end="131:19">rvlc</name></expr>)</condition><block pos:start="131:21" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:49">

                <expr_stmt pos:start="133:17" pos:end="133:49"><expr pos:start="133:17" pos:end="133:48"><name pos:start="133:17" pos:end="133:22">rl_vlc</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <name pos:start="133:26" pos:end="133:48"><name pos:start="133:26" pos:end="133:38">rvlc_rl_inter</name><operator pos:start="133:39" pos:end="133:39">.</operator><name pos:start="133:40" pos:end="133:45">rl_vlc</name><index pos:start="133:46" pos:end="133:48">[<expr pos:start="133:47" pos:end="133:47"><literal type="number" pos:start="133:47" pos:end="133:47">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="135:14" pos:end="139:13">else<block pos:start="135:18" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:44">

                <expr_stmt pos:start="137:17" pos:end="137:44"><expr pos:start="137:17" pos:end="137:43"><name pos:start="137:17" pos:end="137:22">rl_vlc</name> <operator pos:start="137:24" pos:end="137:24">=</operator> <name pos:start="137:26" pos:end="137:43"><name pos:start="137:26" pos:end="137:33">rl_inter</name><operator pos:start="137:34" pos:end="137:34">.</operator><name pos:start="137:35" pos:end="137:40">rl_vlc</name><index pos:start="137:41" pos:end="137:43">[<expr pos:start="137:42" pos:end="137:42"><literal type="number" pos:start="137:42" pos:end="137:42">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if><else pos:start="141:10" pos:end="157:9">else<block pos:start="141:14" pos:end="157:9">{<block_content pos:start="143:13" pos:end="155:13">

            <expr_stmt pos:start="143:13" pos:end="143:34"><expr pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:16">qmul</name> <operator pos:start="143:18" pos:end="143:18">=</operator> <name pos:start="143:20" pos:end="143:28"><name pos:start="143:20" pos:end="143:20">s</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:28">qscale</name></name> <operator pos:start="143:30" pos:end="143:31">&lt;&lt;</operator> <literal type="number" pos:start="143:33" pos:end="143:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:16">qadd</name> <operator pos:start="145:18" pos:end="145:18">=</operator> <operator pos:start="145:20" pos:end="145:20">(</operator><name pos:start="145:21" pos:end="145:29"><name pos:start="145:21" pos:end="145:21">s</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:29">qscale</name></name> <operator pos:start="145:31" pos:end="145:31">-</operator> <literal type="number" pos:start="145:33" pos:end="145:33">1</literal><operator pos:start="145:34" pos:end="145:34">)</operator> <operator pos:start="145:36" pos:end="145:36">|</operator> <literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="155:13"><if pos:start="147:13" pos:end="151:13">if<condition pos:start="147:15" pos:end="147:20">(<expr pos:start="147:16" pos:end="147:19"><name pos:start="147:16" pos:end="147:19">rvlc</name></expr>)</condition><block pos:start="147:21" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:57">

                <expr_stmt pos:start="149:17" pos:end="149:57"><expr pos:start="149:17" pos:end="149:56"><name pos:start="149:17" pos:end="149:22">rl_vlc</name> <operator pos:start="149:24" pos:end="149:24">=</operator> <name pos:start="149:26" pos:end="149:56"><name pos:start="149:26" pos:end="149:38">rvlc_rl_inter</name><operator pos:start="149:39" pos:end="149:39">.</operator><name pos:start="149:40" pos:end="149:45">rl_vlc</name><index pos:start="149:46" pos:end="149:56">[<expr pos:start="149:47" pos:end="149:55"><name pos:start="149:47" pos:end="149:55"><name pos:start="149:47" pos:end="149:47">s</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:55">qscale</name></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="151:14" pos:end="155:13">else<block pos:start="151:18" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:52">

                <expr_stmt pos:start="153:17" pos:end="153:52"><expr pos:start="153:17" pos:end="153:51"><name pos:start="153:17" pos:end="153:22">rl_vlc</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:51"><name pos:start="153:26" pos:end="153:33">rl_inter</name><operator pos:start="153:34" pos:end="153:34">.</operator><name pos:start="153:35" pos:end="153:40">rl_vlc</name><index pos:start="153:41" pos:end="153:51">[<expr pos:start="153:42" pos:end="153:50"><name pos:start="153:42" pos:end="153:50"><name pos:start="153:42" pos:end="153:42">s</name><operator pos:start="153:43" pos:end="153:44">-&gt;</operator><name pos:start="153:45" pos:end="153:50">qscale</name></name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

  <block pos:start="161:3" pos:end="469:3">{<block_content pos:start="163:5" pos:end="467:29">

    <expr_stmt pos:start="163:5" pos:end="163:28"><expr pos:start="163:5" pos:end="163:27"><call pos:start="163:5" pos:end="163:27"><name pos:start="163:5" pos:end="163:15">OPEN_READER</name><argument_list pos:start="163:16" pos:end="163:27">(<argument pos:start="163:17" pos:end="163:18"><expr pos:start="163:17" pos:end="163:18"><name pos:start="163:17" pos:end="163:18">re</name></expr></argument>, <argument pos:start="163:21" pos:end="163:26"><expr pos:start="163:21" pos:end="163:26"><operator pos:start="163:21" pos:end="163:21">&amp;</operator><name pos:start="163:22" pos:end="163:26"><name pos:start="163:22" pos:end="163:22">s</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:26">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="165:5" pos:end="465:5">for<control pos:start="165:8" pos:end="165:11">(<init pos:start="165:9" pos:end="165:9">;</init><condition pos:start="165:10" pos:end="165:10">;</condition><incr/>)</control> <block pos:start="165:13" pos:end="465:5">{<block_content pos:start="167:9" pos:end="463:37">

        <expr_stmt pos:start="167:9" pos:end="167:33"><expr pos:start="167:9" pos:end="167:32"><call pos:start="167:9" pos:end="167:32"><name pos:start="167:9" pos:end="167:20">UPDATE_CACHE</name><argument_list pos:start="167:21" pos:end="167:32">(<argument pos:start="167:22" pos:end="167:23"><expr pos:start="167:22" pos:end="167:23"><name pos:start="167:22" pos:end="167:23">re</name></expr></argument>, <argument pos:start="167:26" pos:end="167:31"><expr pos:start="167:26" pos:end="167:31"><operator pos:start="167:26" pos:end="167:26">&amp;</operator><name pos:start="167:27" pos:end="167:31"><name pos:start="167:27" pos:end="167:27">s</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:71"><expr pos:start="169:9" pos:end="169:70"><call pos:start="169:9" pos:end="169:70"><name pos:start="169:9" pos:end="169:18">GET_RL_VLC</name><argument_list pos:start="169:19" pos:end="169:70">(<argument pos:start="169:20" pos:end="169:24"><expr pos:start="169:20" pos:end="169:24"><name pos:start="169:20" pos:end="169:24">level</name></expr></argument>, <argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">run</name></expr></argument>, <argument pos:start="169:32" pos:end="169:33"><expr pos:start="169:32" pos:end="169:33"><name pos:start="169:32" pos:end="169:33">re</name></expr></argument>, <argument pos:start="169:36" pos:end="169:41"><expr pos:start="169:36" pos:end="169:41"><operator pos:start="169:36" pos:end="169:36">&amp;</operator><name pos:start="169:37" pos:end="169:41"><name pos:start="169:37" pos:end="169:37">s</name><operator pos:start="169:38" pos:end="169:39">-&gt;</operator><name pos:start="169:40" pos:end="169:41">gb</name></name></expr></argument>, <argument pos:start="169:44" pos:end="169:49"><expr pos:start="169:44" pos:end="169:49"><name pos:start="169:44" pos:end="169:49">rl_vlc</name></expr></argument>, <argument pos:start="169:52" pos:end="169:63"><expr pos:start="169:52" pos:end="169:63"><name pos:start="169:52" pos:end="169:63">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="169:66" pos:end="169:66"><expr pos:start="169:66" pos:end="169:66"><literal type="number" pos:start="169:66" pos:end="169:66">2</literal></expr></argument>, <argument pos:start="169:69" pos:end="169:69"><expr pos:start="169:69" pos:end="169:69"><literal type="number" pos:start="169:69" pos:end="169:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="439:9"><if pos:start="171:9" pos:end="431:9">if <condition pos:start="171:12" pos:end="171:21">(<expr pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:17">level</name><operator pos:start="171:18" pos:end="171:19">==</operator><literal type="number" pos:start="171:20" pos:end="171:20">0</literal></expr>)</condition> <block pos:start="171:23" pos:end="431:9">{<block_content pos:start="175:11" pos:end="429:11">

          <comment type="block" pos:start="173:11" pos:end="173:22">/* escape */</comment>

          <if_stmt pos:start="175:11" pos:end="429:11"><if pos:start="175:11" pos:end="233:11">if<condition pos:start="175:13" pos:end="175:18">(<expr pos:start="175:14" pos:end="175:17"><name pos:start="175:14" pos:end="175:17">rvlc</name></expr>)</condition><block pos:start="175:19" pos:end="233:11">{<block_content pos:start="177:17" pos:end="231:32">

                <if_stmt pos:start="177:17" pos:end="183:17"><if pos:start="177:17" pos:end="183:17">if<condition pos:start="177:19" pos:end="177:48">(<expr pos:start="177:20" pos:end="177:47"><call pos:start="177:20" pos:end="177:44"><name pos:start="177:20" pos:end="177:29">SHOW_UBITS</name><argument_list pos:start="177:30" pos:end="177:44">(<argument pos:start="177:31" pos:end="177:32"><expr pos:start="177:31" pos:end="177:32"><name pos:start="177:31" pos:end="177:32">re</name></expr></argument>, <argument pos:start="177:35" pos:end="177:40"><expr pos:start="177:35" pos:end="177:40"><operator pos:start="177:35" pos:end="177:35">&amp;</operator><name pos:start="177:36" pos:end="177:40"><name pos:start="177:36" pos:end="177:36">s</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:40">gb</name></name></expr></argument>, <argument pos:start="177:43" pos:end="177:43"><expr pos:start="177:43" pos:end="177:43"><literal type="number" pos:start="177:43" pos:end="177:43">1</literal></expr></argument>)</argument_list></call><operator pos:start="177:45" pos:end="177:46">==</operator><literal type="number" pos:start="177:47" pos:end="177:47">0</literal></expr>)</condition><block pos:start="177:49" pos:end="183:17">{<block_content pos:start="179:21" pos:end="181:30">

                    <expr_stmt pos:start="179:21" pos:end="179:90"><expr pos:start="179:21" pos:end="179:89"><call pos:start="179:21" pos:end="179:89"><name pos:start="179:21" pos:end="179:26">av_log</name><argument_list pos:start="179:27" pos:end="179:89">(<argument pos:start="179:28" pos:end="179:35"><expr pos:start="179:28" pos:end="179:35"><name pos:start="179:28" pos:end="179:35"><name pos:start="179:28" pos:end="179:28">s</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:35">avctx</name></name></expr></argument>, <argument pos:start="179:38" pos:end="179:49"><expr pos:start="179:38" pos:end="179:49"><name pos:start="179:38" pos:end="179:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="179:52" pos:end="179:88"><expr pos:start="179:52" pos:end="179:88"><literal type="string" pos:start="179:52" pos:end="179:88">"1. marker bit missing in rvlc esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="181:21" pos:end="181:30">return <expr pos:start="181:28" pos:end="181:29"><operator pos:start="181:28" pos:end="181:28">-</operator><literal type="number" pos:start="181:29" pos:end="181:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt><empty_stmt pos:start="183:18" pos:end="183:18">;</empty_stmt> <expr_stmt pos:start="183:20" pos:end="183:45"><expr pos:start="183:20" pos:end="183:44"><call pos:start="183:20" pos:end="183:44"><name pos:start="183:20" pos:end="183:29">SKIP_CACHE</name><argument_list pos:start="183:30" pos:end="183:44">(<argument pos:start="183:31" pos:end="183:32"><expr pos:start="183:31" pos:end="183:32"><name pos:start="183:31" pos:end="183:32">re</name></expr></argument>, <argument pos:start="183:35" pos:end="183:40"><expr pos:start="183:35" pos:end="183:40"><operator pos:start="183:35" pos:end="183:35">&amp;</operator><name pos:start="183:36" pos:end="183:40"><name pos:start="183:36" pos:end="183:36">s</name><operator pos:start="183:37" pos:end="183:38">-&gt;</operator><name pos:start="183:39" pos:end="183:40">gb</name></name></expr></argument>, <argument pos:start="183:43" pos:end="183:43"><expr pos:start="183:43" pos:end="183:43"><literal type="number" pos:start="183:43" pos:end="183:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="187:17" pos:end="187:49"><expr pos:start="187:17" pos:end="187:48"><name pos:start="187:17" pos:end="187:20">last</name><operator pos:start="187:21" pos:end="187:21">=</operator>  <call pos:start="187:24" pos:end="187:48"><name pos:start="187:24" pos:end="187:33">SHOW_UBITS</name><argument_list pos:start="187:34" pos:end="187:48">(<argument pos:start="187:35" pos:end="187:36"><expr pos:start="187:35" pos:end="187:36"><name pos:start="187:35" pos:end="187:36">re</name></expr></argument>, <argument pos:start="187:39" pos:end="187:44"><expr pos:start="187:39" pos:end="187:44"><operator pos:start="187:39" pos:end="187:39">&amp;</operator><name pos:start="187:40" pos:end="187:44"><name pos:start="187:40" pos:end="187:40">s</name><operator pos:start="187:41" pos:end="187:42">-&gt;</operator><name pos:start="187:43" pos:end="187:44">gb</name></name></expr></argument>, <argument pos:start="187:47" pos:end="187:47"><expr pos:start="187:47" pos:end="187:47"><literal type="number" pos:start="187:47" pos:end="187:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="187:51" pos:end="187:76"><expr pos:start="187:51" pos:end="187:75"><call pos:start="187:51" pos:end="187:75"><name pos:start="187:51" pos:end="187:60">SKIP_CACHE</name><argument_list pos:start="187:61" pos:end="187:75">(<argument pos:start="187:62" pos:end="187:63"><expr pos:start="187:62" pos:end="187:63"><name pos:start="187:62" pos:end="187:63">re</name></expr></argument>, <argument pos:start="187:66" pos:end="187:71"><expr pos:start="187:66" pos:end="187:71"><operator pos:start="187:66" pos:end="187:66">&amp;</operator><name pos:start="187:67" pos:end="187:71"><name pos:start="187:67" pos:end="187:67">s</name><operator pos:start="187:68" pos:end="187:69">-&gt;</operator><name pos:start="187:70" pos:end="187:71">gb</name></name></expr></argument>, <argument pos:start="187:74" pos:end="187:74"><expr pos:start="187:74" pos:end="187:74"><literal type="number" pos:start="187:74" pos:end="187:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:49"><expr pos:start="189:17" pos:end="189:48"><name pos:start="189:17" pos:end="189:19">run</name><operator pos:start="189:20" pos:end="189:20">=</operator>   <call pos:start="189:24" pos:end="189:48"><name pos:start="189:24" pos:end="189:33">SHOW_UBITS</name><argument_list pos:start="189:34" pos:end="189:48">(<argument pos:start="189:35" pos:end="189:36"><expr pos:start="189:35" pos:end="189:36"><name pos:start="189:35" pos:end="189:36">re</name></expr></argument>, <argument pos:start="189:39" pos:end="189:44"><expr pos:start="189:39" pos:end="189:44"><operator pos:start="189:39" pos:end="189:39">&amp;</operator><name pos:start="189:40" pos:end="189:44"><name pos:start="189:40" pos:end="189:40">s</name><operator pos:start="189:41" pos:end="189:42">-&gt;</operator><name pos:start="189:43" pos:end="189:44">gb</name></name></expr></argument>, <argument pos:start="189:47" pos:end="189:47"><expr pos:start="189:47" pos:end="189:47"><literal type="number" pos:start="189:47" pos:end="189:47">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="189:51" pos:end="189:81"><expr pos:start="189:51" pos:end="189:80"><call pos:start="189:51" pos:end="189:80"><name pos:start="189:51" pos:end="189:65">LAST_SKIP_CACHE</name><argument_list pos:start="189:66" pos:end="189:80">(<argument pos:start="189:67" pos:end="189:68"><expr pos:start="189:67" pos:end="189:68"><name pos:start="189:67" pos:end="189:68">re</name></expr></argument>, <argument pos:start="189:71" pos:end="189:76"><expr pos:start="189:71" pos:end="189:76"><operator pos:start="189:71" pos:end="189:71">&amp;</operator><name pos:start="189:72" pos:end="189:76"><name pos:start="189:72" pos:end="189:72">s</name><operator pos:start="189:73" pos:end="189:74">-&gt;</operator><name pos:start="189:75" pos:end="189:76">gb</name></name></expr></argument>, <argument pos:start="189:79" pos:end="189:79"><expr pos:start="189:79" pos:end="189:79"><literal type="number" pos:start="189:79" pos:end="189:79">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:48"><expr pos:start="191:17" pos:end="191:47"><call pos:start="191:17" pos:end="191:47"><name pos:start="191:17" pos:end="191:28">SKIP_COUNTER</name><argument_list pos:start="191:29" pos:end="191:47">(<argument pos:start="191:30" pos:end="191:31"><expr pos:start="191:30" pos:end="191:31"><name pos:start="191:30" pos:end="191:31">re</name></expr></argument>, <argument pos:start="191:34" pos:end="191:39"><expr pos:start="191:34" pos:end="191:39"><operator pos:start="191:34" pos:end="191:34">&amp;</operator><name pos:start="191:35" pos:end="191:39"><name pos:start="191:35" pos:end="191:35">s</name><operator pos:start="191:36" pos:end="191:37">-&gt;</operator><name pos:start="191:38" pos:end="191:39">gb</name></name></expr></argument>, <argument pos:start="191:42" pos:end="191:46"><expr pos:start="191:42" pos:end="191:46"><literal type="number" pos:start="191:42" pos:end="191:43">1</literal><operator pos:start="191:43" pos:end="191:43">+</operator><literal type="number" pos:start="191:44" pos:end="191:45">1</literal><operator pos:start="191:45" pos:end="191:45">+</operator><literal type="number" pos:start="191:46" pos:end="191:46">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:41"><expr pos:start="193:17" pos:end="193:40"><call pos:start="193:17" pos:end="193:40"><name pos:start="193:17" pos:end="193:28">UPDATE_CACHE</name><argument_list pos:start="193:29" pos:end="193:40">(<argument pos:start="193:30" pos:end="193:31"><expr pos:start="193:30" pos:end="193:31"><name pos:start="193:30" pos:end="193:31">re</name></expr></argument>, <argument pos:start="193:34" pos:end="193:39"><expr pos:start="193:34" pos:end="193:39"><operator pos:start="193:34" pos:end="193:34">&amp;</operator><name pos:start="193:35" pos:end="193:39"><name pos:start="193:35" pos:end="193:35">s</name><operator pos:start="193:36" pos:end="193:37">-&gt;</operator><name pos:start="193:38" pos:end="193:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="197:17" pos:end="203:17"><if pos:start="197:17" pos:end="203:17">if<condition pos:start="197:19" pos:end="197:48">(<expr pos:start="197:20" pos:end="197:47"><call pos:start="197:20" pos:end="197:44"><name pos:start="197:20" pos:end="197:29">SHOW_UBITS</name><argument_list pos:start="197:30" pos:end="197:44">(<argument pos:start="197:31" pos:end="197:32"><expr pos:start="197:31" pos:end="197:32"><name pos:start="197:31" pos:end="197:32">re</name></expr></argument>, <argument pos:start="197:35" pos:end="197:40"><expr pos:start="197:35" pos:end="197:40"><operator pos:start="197:35" pos:end="197:35">&amp;</operator><name pos:start="197:36" pos:end="197:40"><name pos:start="197:36" pos:end="197:36">s</name><operator pos:start="197:37" pos:end="197:38">-&gt;</operator><name pos:start="197:39" pos:end="197:40">gb</name></name></expr></argument>, <argument pos:start="197:43" pos:end="197:43"><expr pos:start="197:43" pos:end="197:43"><literal type="number" pos:start="197:43" pos:end="197:43">1</literal></expr></argument>)</argument_list></call><operator pos:start="197:45" pos:end="197:46">==</operator><literal type="number" pos:start="197:47" pos:end="197:47">0</literal></expr>)</condition><block pos:start="197:49" pos:end="203:17">{<block_content pos:start="199:21" pos:end="201:30">

                    <expr_stmt pos:start="199:21" pos:end="199:90"><expr pos:start="199:21" pos:end="199:89"><call pos:start="199:21" pos:end="199:89"><name pos:start="199:21" pos:end="199:26">av_log</name><argument_list pos:start="199:27" pos:end="199:89">(<argument pos:start="199:28" pos:end="199:35"><expr pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:35"><name pos:start="199:28" pos:end="199:28">s</name><operator pos:start="199:29" pos:end="199:30">-&gt;</operator><name pos:start="199:31" pos:end="199:35">avctx</name></name></expr></argument>, <argument pos:start="199:38" pos:end="199:49"><expr pos:start="199:38" pos:end="199:49"><name pos:start="199:38" pos:end="199:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="199:52" pos:end="199:88"><expr pos:start="199:52" pos:end="199:88"><literal type="string" pos:start="199:52" pos:end="199:88">"2. marker bit missing in rvlc esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="201:21" pos:end="201:30">return <expr pos:start="201:28" pos:end="201:29"><operator pos:start="201:28" pos:end="201:28">-</operator><literal type="number" pos:start="201:29" pos:end="201:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt><empty_stmt pos:start="203:18" pos:end="203:18">;</empty_stmt> <expr_stmt pos:start="203:20" pos:end="203:45"><expr pos:start="203:20" pos:end="203:44"><call pos:start="203:20" pos:end="203:44"><name pos:start="203:20" pos:end="203:29">SKIP_CACHE</name><argument_list pos:start="203:30" pos:end="203:44">(<argument pos:start="203:31" pos:end="203:32"><expr pos:start="203:31" pos:end="203:32"><name pos:start="203:31" pos:end="203:32">re</name></expr></argument>, <argument pos:start="203:35" pos:end="203:40"><expr pos:start="203:35" pos:end="203:40"><operator pos:start="203:35" pos:end="203:35">&amp;</operator><name pos:start="203:36" pos:end="203:40"><name pos:start="203:36" pos:end="203:36">s</name><operator pos:start="203:37" pos:end="203:38">-&gt;</operator><name pos:start="203:39" pos:end="203:40">gb</name></name></expr></argument>, <argument pos:start="203:43" pos:end="203:43"><expr pos:start="203:43" pos:end="203:43"><literal type="number" pos:start="203:43" pos:end="203:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="207:17" pos:end="207:50"><expr pos:start="207:17" pos:end="207:49"><name pos:start="207:17" pos:end="207:21">level</name><operator pos:start="207:22" pos:end="207:22">=</operator> <call pos:start="207:24" pos:end="207:49"><name pos:start="207:24" pos:end="207:33">SHOW_UBITS</name><argument_list pos:start="207:34" pos:end="207:49">(<argument pos:start="207:35" pos:end="207:36"><expr pos:start="207:35" pos:end="207:36"><name pos:start="207:35" pos:end="207:36">re</name></expr></argument>, <argument pos:start="207:39" pos:end="207:44"><expr pos:start="207:39" pos:end="207:44"><operator pos:start="207:39" pos:end="207:39">&amp;</operator><name pos:start="207:40" pos:end="207:44"><name pos:start="207:40" pos:end="207:40">s</name><operator pos:start="207:41" pos:end="207:42">-&gt;</operator><name pos:start="207:43" pos:end="207:44">gb</name></name></expr></argument>, <argument pos:start="207:47" pos:end="207:48"><expr pos:start="207:47" pos:end="207:48"><literal type="number" pos:start="207:47" pos:end="207:48">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="207:52" pos:end="207:78"><expr pos:start="207:52" pos:end="207:77"><call pos:start="207:52" pos:end="207:77"><name pos:start="207:52" pos:end="207:61">SKIP_CACHE</name><argument_list pos:start="207:62" pos:end="207:77">(<argument pos:start="207:63" pos:end="207:64"><expr pos:start="207:63" pos:end="207:64"><name pos:start="207:63" pos:end="207:64">re</name></expr></argument>, <argument pos:start="207:67" pos:end="207:72"><expr pos:start="207:67" pos:end="207:72"><operator pos:start="207:67" pos:end="207:67">&amp;</operator><name pos:start="207:68" pos:end="207:72"><name pos:start="207:68" pos:end="207:68">s</name><operator pos:start="207:69" pos:end="207:70">-&gt;</operator><name pos:start="207:71" pos:end="207:72">gb</name></name></expr></argument>, <argument pos:start="207:75" pos:end="207:76"><expr pos:start="207:75" pos:end="207:76"><literal type="number" pos:start="207:75" pos:end="207:76">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="211:17" pos:end="217:17"><if pos:start="211:17" pos:end="217:17">if<condition pos:start="211:19" pos:end="211:51">(<expr pos:start="211:20" pos:end="211:50"><call pos:start="211:20" pos:end="211:44"><name pos:start="211:20" pos:end="211:29">SHOW_UBITS</name><argument_list pos:start="211:30" pos:end="211:44">(<argument pos:start="211:31" pos:end="211:32"><expr pos:start="211:31" pos:end="211:32"><name pos:start="211:31" pos:end="211:32">re</name></expr></argument>, <argument pos:start="211:35" pos:end="211:40"><expr pos:start="211:35" pos:end="211:40"><operator pos:start="211:35" pos:end="211:35">&amp;</operator><name pos:start="211:36" pos:end="211:40"><name pos:start="211:36" pos:end="211:36">s</name><operator pos:start="211:37" pos:end="211:38">-&gt;</operator><name pos:start="211:39" pos:end="211:40">gb</name></name></expr></argument>, <argument pos:start="211:43" pos:end="211:43"><expr pos:start="211:43" pos:end="211:43"><literal type="number" pos:start="211:43" pos:end="211:43">5</literal></expr></argument>)</argument_list></call><operator pos:start="211:45" pos:end="211:46">!=</operator><literal type="number" pos:start="211:47" pos:end="211:50">0x10</literal></expr>)</condition><block pos:start="211:52" pos:end="217:17">{<block_content pos:start="213:21" pos:end="215:30">

                    <expr_stmt pos:start="213:21" pos:end="213:76"><expr pos:start="213:21" pos:end="213:75"><call pos:start="213:21" pos:end="213:75"><name pos:start="213:21" pos:end="213:26">av_log</name><argument_list pos:start="213:27" pos:end="213:75">(<argument pos:start="213:28" pos:end="213:35"><expr pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:35"><name pos:start="213:28" pos:end="213:28">s</name><operator pos:start="213:29" pos:end="213:30">-&gt;</operator><name pos:start="213:31" pos:end="213:35">avctx</name></name></expr></argument>, <argument pos:start="213:38" pos:end="213:49"><expr pos:start="213:38" pos:end="213:49"><name pos:start="213:38" pos:end="213:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="213:52" pos:end="213:74"><expr pos:start="213:52" pos:end="213:74"><literal type="string" pos:start="213:52" pos:end="213:74">"reverse esc missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="215:21" pos:end="215:30">return <expr pos:start="215:28" pos:end="215:29"><operator pos:start="215:28" pos:end="215:28">-</operator><literal type="number" pos:start="215:29" pos:end="215:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt><empty_stmt pos:start="217:18" pos:end="217:18">;</empty_stmt> <expr_stmt pos:start="217:20" pos:end="217:45"><expr pos:start="217:20" pos:end="217:44"><call pos:start="217:20" pos:end="217:44"><name pos:start="217:20" pos:end="217:29">SKIP_CACHE</name><argument_list pos:start="217:30" pos:end="217:44">(<argument pos:start="217:31" pos:end="217:32"><expr pos:start="217:31" pos:end="217:32"><name pos:start="217:31" pos:end="217:32">re</name></expr></argument>, <argument pos:start="217:35" pos:end="217:40"><expr pos:start="217:35" pos:end="217:40"><operator pos:start="217:35" pos:end="217:35">&amp;</operator><name pos:start="217:36" pos:end="217:40"><name pos:start="217:36" pos:end="217:36">s</name><operator pos:start="217:37" pos:end="217:38">-&gt;</operator><name pos:start="217:39" pos:end="217:40">gb</name></name></expr></argument>, <argument pos:start="217:43" pos:end="217:43"><expr pos:start="217:43" pos:end="217:43"><literal type="number" pos:start="217:43" pos:end="217:43">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="221:17" pos:end="221:44"><expr pos:start="221:17" pos:end="221:43"><name pos:start="221:17" pos:end="221:21">level</name><operator pos:start="221:22" pos:end="221:22">=</operator>  <name pos:start="221:25" pos:end="221:29">level</name> <operator pos:start="221:31" pos:end="221:31">*</operator> <name pos:start="221:33" pos:end="221:36">qmul</name> <operator pos:start="221:38" pos:end="221:38">+</operator> <name pos:start="221:40" pos:end="221:43">qadd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:88"><expr pos:start="223:17" pos:end="223:87"><name pos:start="223:17" pos:end="223:21">level</name> <operator pos:start="223:23" pos:end="223:23">=</operator> <operator pos:start="223:25" pos:end="223:25">(</operator><name pos:start="223:26" pos:end="223:30">level</name> <operator pos:start="223:32" pos:end="223:32">^</operator> <call pos:start="223:34" pos:end="223:58"><name pos:start="223:34" pos:end="223:43">SHOW_SBITS</name><argument_list pos:start="223:44" pos:end="223:58">(<argument pos:start="223:45" pos:end="223:46"><expr pos:start="223:45" pos:end="223:46"><name pos:start="223:45" pos:end="223:46">re</name></expr></argument>, <argument pos:start="223:49" pos:end="223:54"><expr pos:start="223:49" pos:end="223:54"><operator pos:start="223:49" pos:end="223:49">&amp;</operator><name pos:start="223:50" pos:end="223:54"><name pos:start="223:50" pos:end="223:50">s</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:54">gb</name></name></expr></argument>, <argument pos:start="223:57" pos:end="223:57"><expr pos:start="223:57" pos:end="223:57"><literal type="number" pos:start="223:57" pos:end="223:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="223:59" pos:end="223:59">)</operator> <operator pos:start="223:61" pos:end="223:61">-</operator> <call pos:start="223:63" pos:end="223:87"><name pos:start="223:63" pos:end="223:72">SHOW_SBITS</name><argument_list pos:start="223:73" pos:end="223:87">(<argument pos:start="223:74" pos:end="223:75"><expr pos:start="223:74" pos:end="223:75"><name pos:start="223:74" pos:end="223:75">re</name></expr></argument>, <argument pos:start="223:78" pos:end="223:83"><expr pos:start="223:78" pos:end="223:83"><operator pos:start="223:78" pos:end="223:78">&amp;</operator><name pos:start="223:79" pos:end="223:83"><name pos:start="223:79" pos:end="223:79">s</name><operator pos:start="223:80" pos:end="223:81">-&gt;</operator><name pos:start="223:82" pos:end="223:83">gb</name></name></expr></argument>, <argument pos:start="223:86" pos:end="223:86"><expr pos:start="223:86" pos:end="223:86"><literal type="number" pos:start="223:86" pos:end="223:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="223:90" pos:end="223:120"><expr pos:start="223:90" pos:end="223:119"><call pos:start="223:90" pos:end="223:119"><name pos:start="223:90" pos:end="223:104">LAST_SKIP_CACHE</name><argument_list pos:start="223:105" pos:end="223:119">(<argument pos:start="223:106" pos:end="223:107"><expr pos:start="223:106" pos:end="223:107"><name pos:start="223:106" pos:end="223:107">re</name></expr></argument>, <argument pos:start="223:110" pos:end="223:115"><expr pos:start="223:110" pos:end="223:115"><operator pos:start="223:110" pos:end="223:110">&amp;</operator><name pos:start="223:111" pos:end="223:115"><name pos:start="223:111" pos:end="223:111">s</name><operator pos:start="223:112" pos:end="223:113">-&gt;</operator><name pos:start="223:114" pos:end="223:115">gb</name></name></expr></argument>, <argument pos:start="223:118" pos:end="223:118"><expr pos:start="223:118" pos:end="223:118"><literal type="number" pos:start="223:118" pos:end="223:118">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:51"><expr pos:start="225:17" pos:end="225:50"><call pos:start="225:17" pos:end="225:50"><name pos:start="225:17" pos:end="225:28">SKIP_COUNTER</name><argument_list pos:start="225:29" pos:end="225:50">(<argument pos:start="225:30" pos:end="225:31"><expr pos:start="225:30" pos:end="225:31"><name pos:start="225:30" pos:end="225:31">re</name></expr></argument>, <argument pos:start="225:34" pos:end="225:39"><expr pos:start="225:34" pos:end="225:39"><operator pos:start="225:34" pos:end="225:34">&amp;</operator><name pos:start="225:35" pos:end="225:39"><name pos:start="225:35" pos:end="225:35">s</name><operator pos:start="225:36" pos:end="225:37">-&gt;</operator><name pos:start="225:38" pos:end="225:39">gb</name></name></expr></argument>, <argument pos:start="225:42" pos:end="225:49"><expr pos:start="225:42" pos:end="225:49"><literal type="number" pos:start="225:42" pos:end="225:43">1</literal><operator pos:start="225:43" pos:end="225:43">+</operator><literal type="number" pos:start="225:44" pos:end="225:46">11</literal><operator pos:start="225:46" pos:end="225:46">+</operator><literal type="number" pos:start="225:47" pos:end="225:48">5</literal><operator pos:start="225:48" pos:end="225:48">+</operator><literal type="number" pos:start="225:49" pos:end="225:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="229:17" pos:end="229:28"><expr pos:start="229:17" pos:end="229:27"><name pos:start="229:17" pos:end="229:17">i</name><operator pos:start="229:18" pos:end="229:19">+=</operator> <name pos:start="229:21" pos:end="229:23">run</name> <operator pos:start="229:25" pos:end="229:25">+</operator> <literal type="number" pos:start="229:27" pos:end="229:27">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="231:17" pos:end="231:32"><if pos:start="231:17" pos:end="231:32">if<condition pos:start="231:19" pos:end="231:24">(<expr pos:start="231:20" pos:end="231:23"><name pos:start="231:20" pos:end="231:23">last</name></expr>)</condition><block type="pseudo" pos:start="231:26" pos:end="231:32"><block_content pos:start="231:26" pos:end="231:32"> <expr_stmt pos:start="231:26" pos:end="231:32"><expr pos:start="231:26" pos:end="231:31"><name pos:start="231:26" pos:end="231:26">i</name><operator pos:start="231:27" pos:end="231:28">+=</operator><literal type="number" pos:start="231:29" pos:end="231:31">192</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

          </block_content>}</block></if><else pos:start="233:12" pos:end="429:11">else<block pos:start="233:16" pos:end="429:11">{<block_content pos:start="235:13" pos:end="427:13">

            <decl_stmt pos:start="235:13" pos:end="235:22"><decl pos:start="235:13" pos:end="235:21"><type pos:start="235:13" pos:end="235:15"><name pos:start="235:13" pos:end="235:15">int</name></type> <name pos:start="235:17" pos:end="235:21">cache</name></decl>;</decl_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:41"><expr pos:start="237:13" pos:end="237:40"><name pos:start="237:13" pos:end="237:17">cache</name><operator pos:start="237:18" pos:end="237:18">=</operator> <call pos:start="237:20" pos:end="237:40"><name pos:start="237:20" pos:end="237:28">GET_CACHE</name><argument_list pos:start="237:29" pos:end="237:40">(<argument pos:start="237:30" pos:end="237:31"><expr pos:start="237:30" pos:end="237:31"><name pos:start="237:30" pos:end="237:31">re</name></expr></argument>, <argument pos:start="237:34" pos:end="237:39"><expr pos:start="237:34" pos:end="237:39"><operator pos:start="237:34" pos:end="237:34">&amp;</operator><name pos:start="237:35" pos:end="237:39"><name pos:start="237:35" pos:end="237:35">s</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="241:13" pos:end="243:36"><if pos:start="241:13" pos:end="243:36">if<condition pos:start="241:15" pos:end="241:23">(<expr pos:start="241:16" pos:end="241:22"><name pos:start="241:16" pos:end="241:22">IS_3IV1</name></expr>)</condition><block type="pseudo" pos:start="243:17" pos:end="243:36"><block_content pos:start="243:17" pos:end="243:36">

                <expr_stmt pos:start="243:17" pos:end="243:36"><expr pos:start="243:17" pos:end="243:35"><name pos:start="243:17" pos:end="243:21">cache</name> <operator pos:start="243:23" pos:end="243:24">^=</operator> <literal type="number" pos:start="243:26" pos:end="243:35">0xC0000000</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="247:13" pos:end="427:13"><if pos:start="247:13" pos:end="401:13">if <condition pos:start="247:16" pos:end="247:33">(<expr pos:start="247:17" pos:end="247:32"><name pos:start="247:17" pos:end="247:21">cache</name><operator pos:start="247:22" pos:end="247:22">&amp;</operator><literal type="number" pos:start="247:23" pos:end="247:32">0x80000000</literal></expr>)</condition> <block pos:start="247:35" pos:end="401:13">{<block_content pos:start="249:17" pos:end="399:17">

                <if_stmt pos:start="249:17" pos:end="399:17"><if pos:start="249:17" pos:end="375:17">if <condition pos:start="249:20" pos:end="249:37">(<expr pos:start="249:21" pos:end="249:36"><name pos:start="249:21" pos:end="249:25">cache</name><operator pos:start="249:26" pos:end="249:26">&amp;</operator><literal type="number" pos:start="249:27" pos:end="249:36">0x40000000</literal></expr>)</condition> <block pos:start="249:39" pos:end="375:17">{<block_content pos:start="253:21" pos:end="373:36">

                    <comment type="block" pos:start="251:21" pos:end="251:38">/* third escape */</comment>

                    <expr_stmt pos:start="253:21" pos:end="253:46"><expr pos:start="253:21" pos:end="253:45"><call pos:start="253:21" pos:end="253:45"><name pos:start="253:21" pos:end="253:30">SKIP_CACHE</name><argument_list pos:start="253:31" pos:end="253:45">(<argument pos:start="253:32" pos:end="253:33"><expr pos:start="253:32" pos:end="253:33"><name pos:start="253:32" pos:end="253:33">re</name></expr></argument>, <argument pos:start="253:36" pos:end="253:41"><expr pos:start="253:36" pos:end="253:41"><operator pos:start="253:36" pos:end="253:36">&amp;</operator><name pos:start="253:37" pos:end="253:41"><name pos:start="253:37" pos:end="253:37">s</name><operator pos:start="253:38" pos:end="253:39">-&gt;</operator><name pos:start="253:40" pos:end="253:41">gb</name></name></expr></argument>, <argument pos:start="253:44" pos:end="253:44"><expr pos:start="253:44" pos:end="253:44"><literal type="number" pos:start="253:44" pos:end="253:44">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="255:21" pos:end="255:53"><expr pos:start="255:21" pos:end="255:52"><name pos:start="255:21" pos:end="255:24">last</name><operator pos:start="255:25" pos:end="255:25">=</operator>  <call pos:start="255:28" pos:end="255:52"><name pos:start="255:28" pos:end="255:37">SHOW_UBITS</name><argument_list pos:start="255:38" pos:end="255:52">(<argument pos:start="255:39" pos:end="255:40"><expr pos:start="255:39" pos:end="255:40"><name pos:start="255:39" pos:end="255:40">re</name></expr></argument>, <argument pos:start="255:43" pos:end="255:48"><expr pos:start="255:43" pos:end="255:48"><operator pos:start="255:43" pos:end="255:43">&amp;</operator><name pos:start="255:44" pos:end="255:48"><name pos:start="255:44" pos:end="255:44">s</name><operator pos:start="255:45" pos:end="255:46">-&gt;</operator><name pos:start="255:47" pos:end="255:48">gb</name></name></expr></argument>, <argument pos:start="255:51" pos:end="255:51"><expr pos:start="255:51" pos:end="255:51"><literal type="number" pos:start="255:51" pos:end="255:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="255:55" pos:end="255:80"><expr pos:start="255:55" pos:end="255:79"><call pos:start="255:55" pos:end="255:79"><name pos:start="255:55" pos:end="255:64">SKIP_CACHE</name><argument_list pos:start="255:65" pos:end="255:79">(<argument pos:start="255:66" pos:end="255:67"><expr pos:start="255:66" pos:end="255:67"><name pos:start="255:66" pos:end="255:67">re</name></expr></argument>, <argument pos:start="255:70" pos:end="255:75"><expr pos:start="255:70" pos:end="255:75"><operator pos:start="255:70" pos:end="255:70">&amp;</operator><name pos:start="255:71" pos:end="255:75"><name pos:start="255:71" pos:end="255:71">s</name><operator pos:start="255:72" pos:end="255:73">-&gt;</operator><name pos:start="255:74" pos:end="255:75">gb</name></name></expr></argument>, <argument pos:start="255:78" pos:end="255:78"><expr pos:start="255:78" pos:end="255:78"><literal type="number" pos:start="255:78" pos:end="255:78">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:53"><expr pos:start="257:21" pos:end="257:52"><name pos:start="257:21" pos:end="257:23">run</name><operator pos:start="257:24" pos:end="257:24">=</operator>   <call pos:start="257:28" pos:end="257:52"><name pos:start="257:28" pos:end="257:37">SHOW_UBITS</name><argument_list pos:start="257:38" pos:end="257:52">(<argument pos:start="257:39" pos:end="257:40"><expr pos:start="257:39" pos:end="257:40"><name pos:start="257:39" pos:end="257:40">re</name></expr></argument>, <argument pos:start="257:43" pos:end="257:48"><expr pos:start="257:43" pos:end="257:48"><operator pos:start="257:43" pos:end="257:43">&amp;</operator><name pos:start="257:44" pos:end="257:48"><name pos:start="257:44" pos:end="257:44">s</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:48">gb</name></name></expr></argument>, <argument pos:start="257:51" pos:end="257:51"><expr pos:start="257:51" pos:end="257:51"><literal type="number" pos:start="257:51" pos:end="257:51">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="257:55" pos:end="257:85"><expr pos:start="257:55" pos:end="257:84"><call pos:start="257:55" pos:end="257:84"><name pos:start="257:55" pos:end="257:69">LAST_SKIP_CACHE</name><argument_list pos:start="257:70" pos:end="257:84">(<argument pos:start="257:71" pos:end="257:72"><expr pos:start="257:71" pos:end="257:72"><name pos:start="257:71" pos:end="257:72">re</name></expr></argument>, <argument pos:start="257:75" pos:end="257:80"><expr pos:start="257:75" pos:end="257:80"><operator pos:start="257:75" pos:end="257:75">&amp;</operator><name pos:start="257:76" pos:end="257:80"><name pos:start="257:76" pos:end="257:76">s</name><operator pos:start="257:77" pos:end="257:78">-&gt;</operator><name pos:start="257:79" pos:end="257:80">gb</name></name></expr></argument>, <argument pos:start="257:83" pos:end="257:83"><expr pos:start="257:83" pos:end="257:83"><literal type="number" pos:start="257:83" pos:end="257:83">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="259:21" pos:end="259:52"><expr pos:start="259:21" pos:end="259:51"><call pos:start="259:21" pos:end="259:51"><name pos:start="259:21" pos:end="259:32">SKIP_COUNTER</name><argument_list pos:start="259:33" pos:end="259:51">(<argument pos:start="259:34" pos:end="259:35"><expr pos:start="259:34" pos:end="259:35"><name pos:start="259:34" pos:end="259:35">re</name></expr></argument>, <argument pos:start="259:38" pos:end="259:43"><expr pos:start="259:38" pos:end="259:43"><operator pos:start="259:38" pos:end="259:38">&amp;</operator><name pos:start="259:39" pos:end="259:43"><name pos:start="259:39" pos:end="259:39">s</name><operator pos:start="259:40" pos:end="259:41">-&gt;</operator><name pos:start="259:42" pos:end="259:43">gb</name></name></expr></argument>, <argument pos:start="259:46" pos:end="259:50"><expr pos:start="259:46" pos:end="259:50"><literal type="number" pos:start="259:46" pos:end="259:47">2</literal><operator pos:start="259:47" pos:end="259:47">+</operator><literal type="number" pos:start="259:48" pos:end="259:49">1</literal><operator pos:start="259:49" pos:end="259:49">+</operator><literal type="number" pos:start="259:50" pos:end="259:50">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:45"><expr pos:start="261:21" pos:end="261:44"><call pos:start="261:21" pos:end="261:44"><name pos:start="261:21" pos:end="261:32">UPDATE_CACHE</name><argument_list pos:start="261:33" pos:end="261:44">(<argument pos:start="261:34" pos:end="261:35"><expr pos:start="261:34" pos:end="261:35"><name pos:start="261:34" pos:end="261:35">re</name></expr></argument>, <argument pos:start="261:38" pos:end="261:43"><expr pos:start="261:38" pos:end="261:43"><operator pos:start="261:38" pos:end="261:38">&amp;</operator><name pos:start="261:39" pos:end="261:43"><name pos:start="261:39" pos:end="261:39">s</name><operator pos:start="261:40" pos:end="261:41">-&gt;</operator><name pos:start="261:42" pos:end="261:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="265:21" pos:end="344:0"><if pos:start="265:21" pos:end="269:21">if<condition pos:start="265:23" pos:end="265:31">(<expr pos:start="265:24" pos:end="265:30"><name pos:start="265:24" pos:end="265:30">IS_3IV1</name></expr>)</condition><block pos:start="265:32" pos:end="269:21">{<block_content pos:start="267:25" pos:end="267:90">

                        <expr_stmt pos:start="267:25" pos:end="267:58"><expr pos:start="267:25" pos:end="267:57"><name pos:start="267:25" pos:end="267:29">level</name><operator pos:start="267:30" pos:end="267:30">=</operator> <call pos:start="267:32" pos:end="267:57"><name pos:start="267:32" pos:end="267:41">SHOW_SBITS</name><argument_list pos:start="267:42" pos:end="267:57">(<argument pos:start="267:43" pos:end="267:44"><expr pos:start="267:43" pos:end="267:44"><name pos:start="267:43" pos:end="267:44">re</name></expr></argument>, <argument pos:start="267:47" pos:end="267:52"><expr pos:start="267:47" pos:end="267:52"><operator pos:start="267:47" pos:end="267:47">&amp;</operator><name pos:start="267:48" pos:end="267:52"><name pos:start="267:48" pos:end="267:48">s</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:52">gb</name></name></expr></argument>, <argument pos:start="267:55" pos:end="267:56"><expr pos:start="267:55" pos:end="267:56"><literal type="number" pos:start="267:55" pos:end="267:56">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="267:60" pos:end="267:90"><expr pos:start="267:60" pos:end="267:89"><call pos:start="267:60" pos:end="267:89"><name pos:start="267:60" pos:end="267:73">LAST_SKIP_BITS</name><argument_list pos:start="267:74" pos:end="267:89">(<argument pos:start="267:75" pos:end="267:76"><expr pos:start="267:75" pos:end="267:76"><name pos:start="267:75" pos:end="267:76">re</name></expr></argument>, <argument pos:start="267:79" pos:end="267:84"><expr pos:start="267:79" pos:end="267:84"><operator pos:start="267:79" pos:end="267:79">&amp;</operator><name pos:start="267:80" pos:end="267:84"><name pos:start="267:80" pos:end="267:80">s</name><operator pos:start="267:81" pos:end="267:82">-&gt;</operator><name pos:start="267:83" pos:end="267:84">gb</name></name></expr></argument>, <argument pos:start="267:87" pos:end="267:88"><expr pos:start="267:87" pos:end="267:88"><literal type="number" pos:start="267:87" pos:end="267:88">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if><else pos:start="269:22" pos:end="344:0">else<block pos:start="269:26" pos:end="344:0">{<block_content pos:start="271:25" pos:end="295:57">

                        <if_stmt pos:start="271:25" pos:end="277:25"><if pos:start="271:25" pos:end="277:25">if<condition pos:start="271:27" pos:end="271:56">(<expr pos:start="271:28" pos:end="271:55"><call pos:start="271:28" pos:end="271:52"><name pos:start="271:28" pos:end="271:37">SHOW_UBITS</name><argument_list pos:start="271:38" pos:end="271:52">(<argument pos:start="271:39" pos:end="271:40"><expr pos:start="271:39" pos:end="271:40"><name pos:start="271:39" pos:end="271:40">re</name></expr></argument>, <argument pos:start="271:43" pos:end="271:48"><expr pos:start="271:43" pos:end="271:48"><operator pos:start="271:43" pos:end="271:43">&amp;</operator><name pos:start="271:44" pos:end="271:48"><name pos:start="271:44" pos:end="271:44">s</name><operator pos:start="271:45" pos:end="271:46">-&gt;</operator><name pos:start="271:47" pos:end="271:48">gb</name></name></expr></argument>, <argument pos:start="271:51" pos:end="271:51"><expr pos:start="271:51" pos:end="271:51"><literal type="number" pos:start="271:51" pos:end="271:51">1</literal></expr></argument>)</argument_list></call><operator pos:start="271:53" pos:end="271:54">==</operator><literal type="number" pos:start="271:55" pos:end="271:55">0</literal></expr>)</condition><block pos:start="271:57" pos:end="277:25">{<block_content pos:start="273:29" pos:end="275:38">

                            <expr_stmt pos:start="273:29" pos:end="273:96"><expr pos:start="273:29" pos:end="273:95"><call pos:start="273:29" pos:end="273:95"><name pos:start="273:29" pos:end="273:34">av_log</name><argument_list pos:start="273:35" pos:end="273:95">(<argument pos:start="273:36" pos:end="273:43"><expr pos:start="273:36" pos:end="273:43"><name pos:start="273:36" pos:end="273:43"><name pos:start="273:36" pos:end="273:36">s</name><operator pos:start="273:37" pos:end="273:38">-&gt;</operator><name pos:start="273:39" pos:end="273:43">avctx</name></name></expr></argument>, <argument pos:start="273:46" pos:end="273:57"><expr pos:start="273:46" pos:end="273:57"><name pos:start="273:46" pos:end="273:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="273:60" pos:end="273:94"><expr pos:start="273:60" pos:end="273:94"><literal type="string" pos:start="273:60" pos:end="273:94">"1. marker bit missing in 3. esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="275:29" pos:end="275:38">return <expr pos:start="275:36" pos:end="275:37"><operator pos:start="275:36" pos:end="275:36">-</operator><literal type="number" pos:start="275:37" pos:end="275:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt><empty_stmt pos:start="277:26" pos:end="277:26">;</empty_stmt> <expr_stmt pos:start="277:28" pos:end="277:53"><expr pos:start="277:28" pos:end="277:52"><call pos:start="277:28" pos:end="277:52"><name pos:start="277:28" pos:end="277:37">SKIP_CACHE</name><argument_list pos:start="277:38" pos:end="277:52">(<argument pos:start="277:39" pos:end="277:40"><expr pos:start="277:39" pos:end="277:40"><name pos:start="277:39" pos:end="277:40">re</name></expr></argument>, <argument pos:start="277:43" pos:end="277:48"><expr pos:start="277:43" pos:end="277:48"><operator pos:start="277:43" pos:end="277:43">&amp;</operator><name pos:start="277:44" pos:end="277:48"><name pos:start="277:44" pos:end="277:44">s</name><operator pos:start="277:45" pos:end="277:46">-&gt;</operator><name pos:start="277:47" pos:end="277:48">gb</name></name></expr></argument>, <argument pos:start="277:51" pos:end="277:51"><expr pos:start="277:51" pos:end="277:51"><literal type="number" pos:start="277:51" pos:end="277:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="281:25" pos:end="281:58"><expr pos:start="281:25" pos:end="281:57"><name pos:start="281:25" pos:end="281:29">level</name><operator pos:start="281:30" pos:end="281:30">=</operator> <call pos:start="281:32" pos:end="281:57"><name pos:start="281:32" pos:end="281:41">SHOW_SBITS</name><argument_list pos:start="281:42" pos:end="281:57">(<argument pos:start="281:43" pos:end="281:44"><expr pos:start="281:43" pos:end="281:44"><name pos:start="281:43" pos:end="281:44">re</name></expr></argument>, <argument pos:start="281:47" pos:end="281:52"><expr pos:start="281:47" pos:end="281:52"><operator pos:start="281:47" pos:end="281:47">&amp;</operator><name pos:start="281:48" pos:end="281:52"><name pos:start="281:48" pos:end="281:48">s</name><operator pos:start="281:49" pos:end="281:50">-&gt;</operator><name pos:start="281:51" pos:end="281:52">gb</name></name></expr></argument>, <argument pos:start="281:55" pos:end="281:56"><expr pos:start="281:55" pos:end="281:56"><literal type="number" pos:start="281:55" pos:end="281:56">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="281:60" pos:end="281:86"><expr pos:start="281:60" pos:end="281:85"><call pos:start="281:60" pos:end="281:85"><name pos:start="281:60" pos:end="281:69">SKIP_CACHE</name><argument_list pos:start="281:70" pos:end="281:85">(<argument pos:start="281:71" pos:end="281:72"><expr pos:start="281:71" pos:end="281:72"><name pos:start="281:71" pos:end="281:72">re</name></expr></argument>, <argument pos:start="281:75" pos:end="281:80"><expr pos:start="281:75" pos:end="281:80"><operator pos:start="281:75" pos:end="281:75">&amp;</operator><name pos:start="281:76" pos:end="281:80"><name pos:start="281:76" pos:end="281:76">s</name><operator pos:start="281:77" pos:end="281:78">-&gt;</operator><name pos:start="281:79" pos:end="281:80">gb</name></name></expr></argument>, <argument pos:start="281:83" pos:end="281:84"><expr pos:start="281:83" pos:end="281:84"><literal type="number" pos:start="281:83" pos:end="281:84">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="285:25" pos:end="291:25"><if pos:start="285:25" pos:end="291:25">if<condition pos:start="285:27" pos:end="285:56">(<expr pos:start="285:28" pos:end="285:55"><call pos:start="285:28" pos:end="285:52"><name pos:start="285:28" pos:end="285:37">SHOW_UBITS</name><argument_list pos:start="285:38" pos:end="285:52">(<argument pos:start="285:39" pos:end="285:40"><expr pos:start="285:39" pos:end="285:40"><name pos:start="285:39" pos:end="285:40">re</name></expr></argument>, <argument pos:start="285:43" pos:end="285:48"><expr pos:start="285:43" pos:end="285:48"><operator pos:start="285:43" pos:end="285:43">&amp;</operator><name pos:start="285:44" pos:end="285:48"><name pos:start="285:44" pos:end="285:44">s</name><operator pos:start="285:45" pos:end="285:46">-&gt;</operator><name pos:start="285:47" pos:end="285:48">gb</name></name></expr></argument>, <argument pos:start="285:51" pos:end="285:51"><expr pos:start="285:51" pos:end="285:51"><literal type="number" pos:start="285:51" pos:end="285:51">1</literal></expr></argument>)</argument_list></call><operator pos:start="285:53" pos:end="285:54">==</operator><literal type="number" pos:start="285:55" pos:end="285:55">0</literal></expr>)</condition><block pos:start="285:57" pos:end="291:25">{<block_content pos:start="287:29" pos:end="289:38">

                            <expr_stmt pos:start="287:29" pos:end="287:96"><expr pos:start="287:29" pos:end="287:95"><call pos:start="287:29" pos:end="287:95"><name pos:start="287:29" pos:end="287:34">av_log</name><argument_list pos:start="287:35" pos:end="287:95">(<argument pos:start="287:36" pos:end="287:43"><expr pos:start="287:36" pos:end="287:43"><name pos:start="287:36" pos:end="287:43"><name pos:start="287:36" pos:end="287:36">s</name><operator pos:start="287:37" pos:end="287:38">-&gt;</operator><name pos:start="287:39" pos:end="287:43">avctx</name></name></expr></argument>, <argument pos:start="287:46" pos:end="287:57"><expr pos:start="287:46" pos:end="287:57"><name pos:start="287:46" pos:end="287:57">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="287:60" pos:end="287:94"><expr pos:start="287:60" pos:end="287:94"><literal type="string" pos:start="287:60" pos:end="287:94">"2. marker bit missing in 3. esc\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <return pos:start="289:29" pos:end="289:38">return <expr pos:start="289:36" pos:end="289:37"><operator pos:start="289:36" pos:end="289:36">-</operator><literal type="number" pos:start="289:37" pos:end="289:37">1</literal></expr>;</return>

                        </block_content>}</block></if></if_stmt><empty_stmt pos:start="291:26" pos:end="291:26">;</empty_stmt> <expr_stmt pos:start="291:28" pos:end="291:58"><expr pos:start="291:28" pos:end="291:57"><call pos:start="291:28" pos:end="291:57"><name pos:start="291:28" pos:end="291:42">LAST_SKIP_CACHE</name><argument_list pos:start="291:43" pos:end="291:57">(<argument pos:start="291:44" pos:end="291:45"><expr pos:start="291:44" pos:end="291:45"><name pos:start="291:44" pos:end="291:45">re</name></expr></argument>, <argument pos:start="291:48" pos:end="291:53"><expr pos:start="291:48" pos:end="291:53"><operator pos:start="291:48" pos:end="291:48">&amp;</operator><name pos:start="291:49" pos:end="291:53"><name pos:start="291:49" pos:end="291:49">s</name><operator pos:start="291:50" pos:end="291:51">-&gt;</operator><name pos:start="291:52" pos:end="291:53">gb</name></name></expr></argument>, <argument pos:start="291:56" pos:end="291:56"><expr pos:start="291:56" pos:end="291:56"><literal type="number" pos:start="291:56" pos:end="291:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="295:25" pos:end="295:57"><expr pos:start="295:25" pos:end="295:56"><call pos:start="295:25" pos:end="295:56"><name pos:start="295:25" pos:end="295:36">SKIP_COUNTER</name><argument_list pos:start="295:37" pos:end="295:56">(<argument pos:start="295:38" pos:end="295:39"><expr pos:start="295:38" pos:end="295:39"><name pos:start="295:38" pos:end="295:39">re</name></expr></argument>, <argument pos:start="295:42" pos:end="295:47"><expr pos:start="295:42" pos:end="295:47"><operator pos:start="295:42" pos:end="295:42">&amp;</operator><name pos:start="295:43" pos:end="295:47"><name pos:start="295:43" pos:end="295:43">s</name><operator pos:start="295:44" pos:end="295:45">-&gt;</operator><name pos:start="295:46" pos:end="295:47">gb</name></name></expr></argument>, <argument pos:start="295:50" pos:end="295:55"><expr pos:start="295:50" pos:end="295:55"><literal type="number" pos:start="295:50" pos:end="295:51">1</literal><operator pos:start="295:51" pos:end="295:51">+</operator><literal type="number" pos:start="295:52" pos:end="295:54">12</literal><operator pos:start="295:54" pos:end="295:54">+</operator><literal type="number" pos:start="295:55" pos:end="295:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>



<cpp:if pos:start="301:1" pos:end="301:5">#<cpp:directive pos:start="301:2" pos:end="301:3">if</cpp:directive> <expr pos:start="301:5" pos:end="301:5"><literal type="number" pos:start="301:5" pos:end="301:5">0</literal></expr></cpp:if>

                    if(s-&gt;error_resilience &gt;= FF_ER_COMPLIANT){

                        const int abs_level= FFABS(level);

                        if(abs_level&lt;=MAX_LEVEL &amp;&amp; run&lt;=MAX_RUN){

                            const int run1= run - rl-&gt;max_run[last][abs_level] - 1;

                            if(abs_level &lt;= rl-&gt;max_level[last][run]){

                                av_log(s-&gt;avctx, AV_LOG_ERROR, "illegal 3. esc, vlc encoding possible\n");

                                return -1;

                            }

                            if(s-&gt;error_resilience &gt; FF_ER_COMPLIANT){

                                if(abs_level &lt;= rl-&gt;max_level[last][run]*2){

                                    av_log(s-&gt;avctx, AV_LOG_ERROR, "illegal 3. esc, esc 1 encoding possible\n");

                                    return -1;

                                }

                                if(run1 &gt;= 0 &amp;&amp; abs_level &lt;= rl-&gt;max_level[last][run1]){

                                    av_log(s-&gt;avctx, AV_LOG_ERROR, "illegal 3. esc, esc 2 encoding possible\n");

                                    return -1;

                                }

                            }

                        }

                    }

<cpp:endif pos:start="343:1" pos:end="343:6">#<cpp:directive pos:start="343:2" pos:end="343:6">endif</cpp:directive></cpp:endif>

                    <if_stmt pos:start="345:21" pos:end="347:60"><if pos:start="345:21" pos:end="345:60">if <condition pos:start="345:24" pos:end="345:32">(<expr pos:start="345:25" pos:end="345:31"><name pos:start="345:25" pos:end="345:29">level</name><operator pos:start="345:30" pos:end="345:30">&gt;</operator><literal type="number" pos:start="345:31" pos:end="345:31">0</literal></expr>)</condition><block type="pseudo" pos:start="345:34" pos:end="345:60"><block_content pos:start="345:34" pos:end="345:60"> <expr_stmt pos:start="345:34" pos:end="345:60"><expr pos:start="345:34" pos:end="345:59"><name pos:start="345:34" pos:end="345:38">level</name><operator pos:start="345:39" pos:end="345:39">=</operator> <name pos:start="345:41" pos:end="345:45">level</name> <operator pos:start="345:47" pos:end="345:47">*</operator> <name pos:start="345:49" pos:end="345:52">qmul</name> <operator pos:start="345:54" pos:end="345:54">+</operator> <name pos:start="345:56" pos:end="345:59">qadd</name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="347:21" pos:end="347:60">else<block type="pseudo" pos:start="347:34" pos:end="347:60"><block_content pos:start="347:34" pos:end="347:60">         <expr_stmt pos:start="347:34" pos:end="347:60"><expr pos:start="347:34" pos:end="347:59"><name pos:start="347:34" pos:end="347:38">level</name><operator pos:start="347:39" pos:end="347:39">=</operator> <name pos:start="347:41" pos:end="347:45">level</name> <operator pos:start="347:47" pos:end="347:47">*</operator> <name pos:start="347:49" pos:end="347:52">qmul</name> <operator pos:start="347:54" pos:end="347:54">-</operator> <name pos:start="347:56" pos:end="347:59">qadd</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                    <if_stmt pos:start="351:21" pos:end="367:21"><if pos:start="351:21" pos:end="367:21">if<condition pos:start="351:23" pos:end="351:55">(<expr pos:start="351:24" pos:end="351:54"><operator pos:start="351:24" pos:end="351:24">(</operator><name pos:start="351:25" pos:end="351:32">unsigned</name><operator pos:start="351:33" pos:end="351:33">)</operator><operator pos:start="351:34" pos:end="351:34">(</operator><name pos:start="351:35" pos:end="351:39">level</name> <operator pos:start="351:41" pos:end="351:41">+</operator> <literal type="number" pos:start="351:43" pos:end="351:46">2048</literal><operator pos:start="351:47" pos:end="351:47">)</operator> <operator pos:start="351:49" pos:end="351:49">&gt;</operator> <literal type="number" pos:start="351:51" pos:end="351:54">4095</literal></expr>)</condition><block pos:start="351:56" pos:end="367:21">{<block_content pos:start="353:25" pos:end="365:54">

                        <if_stmt pos:start="353:25" pos:end="363:25"><if pos:start="353:25" pos:end="363:25">if<condition pos:start="353:27" pos:end="353:65">(<expr pos:start="353:28" pos:end="353:64"><name pos:start="353:28" pos:end="353:46"><name pos:start="353:28" pos:end="353:28">s</name><operator pos:start="353:29" pos:end="353:30">-&gt;</operator><name pos:start="353:31" pos:end="353:46">error_resilience</name></name> <operator pos:start="353:48" pos:end="353:48">&gt;</operator> <name pos:start="353:50" pos:end="353:64">FF_ER_COMPLIANT</name></expr>)</condition><block pos:start="353:66" pos:end="363:25">{<block_content pos:start="355:29" pos:end="361:29">

                            <if_stmt pos:start="355:29" pos:end="361:29"><if pos:start="355:29" pos:end="361:29">if<condition pos:start="355:31" pos:end="355:59">(<expr pos:start="355:32" pos:end="355:58"><name pos:start="355:32" pos:end="355:36">level</name> <operator pos:start="355:38" pos:end="355:38">&gt;</operator> <literal type="number" pos:start="355:40" pos:end="355:43">2560</literal> <operator pos:start="355:45" pos:end="355:46">||</operator> <name pos:start="355:48" pos:end="355:52">level</name><operator pos:start="355:53" pos:end="355:53">&lt;</operator><operator pos:start="355:54" pos:end="355:54">-</operator><literal type="number" pos:start="355:55" pos:end="355:58">2560</literal></expr>)</condition><block pos:start="355:60" pos:end="361:29">{<block_content pos:start="357:33" pos:end="359:42">

                                <expr_stmt pos:start="357:33" pos:end="357:113"><expr pos:start="357:33" pos:end="357:112"><call pos:start="357:33" pos:end="357:112"><name pos:start="357:33" pos:end="357:38">av_log</name><argument_list pos:start="357:39" pos:end="357:112">(<argument pos:start="357:40" pos:end="357:47"><expr pos:start="357:40" pos:end="357:47"><name pos:start="357:40" pos:end="357:47"><name pos:start="357:40" pos:end="357:40">s</name><operator pos:start="357:41" pos:end="357:42">-&gt;</operator><name pos:start="357:43" pos:end="357:47">avctx</name></name></expr></argument>, <argument pos:start="357:50" pos:end="357:61"><expr pos:start="357:50" pos:end="357:61"><name pos:start="357:50" pos:end="357:61">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="357:64" pos:end="357:100"><expr pos:start="357:64" pos:end="357:100"><literal type="string" pos:start="357:64" pos:end="357:100">"|level| overflow in 3. esc, qp=%d\n"</literal></expr></argument>, <argument pos:start="357:103" pos:end="357:111"><expr pos:start="357:103" pos:end="357:111"><name pos:start="357:103" pos:end="357:111"><name pos:start="357:103" pos:end="357:103">s</name><operator pos:start="357:104" pos:end="357:105">-&gt;</operator><name pos:start="357:106" pos:end="357:111">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="359:33" pos:end="359:42">return <expr pos:start="359:40" pos:end="359:41"><operator pos:start="359:40" pos:end="359:40">-</operator><literal type="number" pos:start="359:41" pos:end="359:41">1</literal></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="365:25" pos:end="365:54"><expr pos:start="365:25" pos:end="365:53"><name pos:start="365:25" pos:end="365:29">level</name><operator pos:start="365:30" pos:end="365:30">=</operator> <ternary pos:start="365:32" pos:end="365:53"><condition pos:start="365:32" pos:end="365:40"><expr pos:start="365:32" pos:end="365:38"><name pos:start="365:32" pos:end="365:36">level</name><operator pos:start="365:37" pos:end="365:37">&lt;</operator><literal type="number" pos:start="365:38" pos:end="365:38">0</literal></expr> ?</condition><then pos:start="365:42" pos:end="365:46"> <expr pos:start="365:42" pos:end="365:46"><operator pos:start="365:42" pos:end="365:42">-</operator><literal type="number" pos:start="365:43" pos:end="365:46">2048</literal></expr> </then><else pos:start="365:48" pos:end="365:53">: <expr pos:start="365:50" pos:end="365:53"><literal type="number" pos:start="365:50" pos:end="365:53">2047</literal></expr></else></ternary></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>



                    <expr_stmt pos:start="371:21" pos:end="371:32"><expr pos:start="371:21" pos:end="371:31"><name pos:start="371:21" pos:end="371:21">i</name><operator pos:start="371:22" pos:end="371:23">+=</operator> <name pos:start="371:25" pos:end="371:27">run</name> <operator pos:start="371:29" pos:end="371:29">+</operator> <literal type="number" pos:start="371:31" pos:end="371:31">1</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="373:21" pos:end="373:36"><if pos:start="373:21" pos:end="373:36">if<condition pos:start="373:23" pos:end="373:28">(<expr pos:start="373:24" pos:end="373:27"><name pos:start="373:24" pos:end="373:27">last</name></expr>)</condition><block type="pseudo" pos:start="373:30" pos:end="373:36"><block_content pos:start="373:30" pos:end="373:36"> <expr_stmt pos:start="373:30" pos:end="373:36"><expr pos:start="373:30" pos:end="373:35"><name pos:start="373:30" pos:end="373:30">i</name><operator pos:start="373:31" pos:end="373:32">+=</operator><literal type="number" pos:start="373:33" pos:end="373:35">192</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="375:19" pos:end="399:17">else <block pos:start="375:24" pos:end="399:17">{<block_content pos:start="381:21" pos:end="397:50">

                    <comment type="block" pos:start="377:21" pos:end="377:39">/* second escape */</comment>

<cpp:if pos:start="379:1" pos:end="379:23">#<cpp:directive pos:start="379:2" pos:end="379:3">if</cpp:directive> <expr pos:start="379:5" pos:end="379:23"><name pos:start="379:5" pos:end="379:18">MIN_CACHE_BITS</name> <operator pos:start="379:20" pos:end="379:20">&lt;</operator> <literal type="number" pos:start="379:22" pos:end="379:23">20</literal></expr></cpp:if>

                    <expr_stmt pos:start="381:21" pos:end="381:50"><expr pos:start="381:21" pos:end="381:49"><call pos:start="381:21" pos:end="381:49"><name pos:start="381:21" pos:end="381:34">LAST_SKIP_BITS</name><argument_list pos:start="381:35" pos:end="381:49">(<argument pos:start="381:36" pos:end="381:37"><expr pos:start="381:36" pos:end="381:37"><name pos:start="381:36" pos:end="381:37">re</name></expr></argument>, <argument pos:start="381:40" pos:end="381:45"><expr pos:start="381:40" pos:end="381:45"><operator pos:start="381:40" pos:end="381:40">&amp;</operator><name pos:start="381:41" pos:end="381:45"><name pos:start="381:41" pos:end="381:41">s</name><operator pos:start="381:42" pos:end="381:43">-&gt;</operator><name pos:start="381:44" pos:end="381:45">gb</name></name></expr></argument>, <argument pos:start="381:48" pos:end="381:48"><expr pos:start="381:48" pos:end="381:48"><literal type="number" pos:start="381:48" pos:end="381:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="383:21" pos:end="386:0"><expr pos:start="383:21" pos:end="383:44"><call pos:start="383:21" pos:end="383:44"><name pos:start="383:21" pos:end="383:32">UPDATE_CACHE</name><argument_list pos:start="383:33" pos:end="383:44">(<argument pos:start="383:34" pos:end="383:35"><expr pos:start="383:34" pos:end="383:35"><name pos:start="383:34" pos:end="383:35">re</name></expr></argument>, <argument pos:start="383:38" pos:end="383:43"><expr pos:start="383:38" pos:end="383:43"><operator pos:start="383:38" pos:end="383:38">&amp;</operator><name pos:start="383:39" pos:end="383:43"><name pos:start="383:39" pos:end="383:39">s</name><operator pos:start="383:40" pos:end="383:41">-&gt;</operator><name pos:start="383:42" pos:end="383:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="385:1" pos:end="385:5">#<cpp:directive pos:start="385:2" pos:end="385:5">else</cpp:directive></cpp:else>

                    <expr_stmt pos:start="387:21" pos:end="390:0"><expr pos:start="387:21" pos:end="387:44"><call pos:start="387:21" pos:end="387:44"><name pos:start="387:21" pos:end="387:29">SKIP_BITS</name><argument_list pos:start="387:30" pos:end="387:44">(<argument pos:start="387:31" pos:end="387:32"><expr pos:start="387:31" pos:end="387:32"><name pos:start="387:31" pos:end="387:32">re</name></expr></argument>, <argument pos:start="387:35" pos:end="387:40"><expr pos:start="387:35" pos:end="387:40"><operator pos:start="387:35" pos:end="387:35">&amp;</operator><name pos:start="387:36" pos:end="387:40"><name pos:start="387:36" pos:end="387:36">s</name><operator pos:start="387:37" pos:end="387:38">-&gt;</operator><name pos:start="387:39" pos:end="387:40">gb</name></name></expr></argument>, <argument pos:start="387:43" pos:end="387:43"><expr pos:start="387:43" pos:end="387:43"><literal type="number" pos:start="387:43" pos:end="387:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="389:1" pos:end="389:6">#<cpp:directive pos:start="389:2" pos:end="389:6">endif</cpp:directive></cpp:endif>

                    <expr_stmt pos:start="391:21" pos:end="391:83"><expr pos:start="391:21" pos:end="391:82"><call pos:start="391:21" pos:end="391:82"><name pos:start="391:21" pos:end="391:30">GET_RL_VLC</name><argument_list pos:start="391:31" pos:end="391:82">(<argument pos:start="391:32" pos:end="391:36"><expr pos:start="391:32" pos:end="391:36"><name pos:start="391:32" pos:end="391:36">level</name></expr></argument>, <argument pos:start="391:39" pos:end="391:41"><expr pos:start="391:39" pos:end="391:41"><name pos:start="391:39" pos:end="391:41">run</name></expr></argument>, <argument pos:start="391:44" pos:end="391:45"><expr pos:start="391:44" pos:end="391:45"><name pos:start="391:44" pos:end="391:45">re</name></expr></argument>, <argument pos:start="391:48" pos:end="391:53"><expr pos:start="391:48" pos:end="391:53"><operator pos:start="391:48" pos:end="391:48">&amp;</operator><name pos:start="391:49" pos:end="391:53"><name pos:start="391:49" pos:end="391:49">s</name><operator pos:start="391:50" pos:end="391:51">-&gt;</operator><name pos:start="391:52" pos:end="391:53">gb</name></name></expr></argument>, <argument pos:start="391:56" pos:end="391:61"><expr pos:start="391:56" pos:end="391:61"><name pos:start="391:56" pos:end="391:61">rl_vlc</name></expr></argument>, <argument pos:start="391:64" pos:end="391:75"><expr pos:start="391:64" pos:end="391:75"><name pos:start="391:64" pos:end="391:75">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="391:78" pos:end="391:78"><expr pos:start="391:78" pos:end="391:78"><literal type="number" pos:start="391:78" pos:end="391:78">2</literal></expr></argument>, <argument pos:start="391:81" pos:end="391:81"><expr pos:start="391:81" pos:end="391:81"><literal type="number" pos:start="391:81" pos:end="391:81">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="393:21" pos:end="393:65"><expr pos:start="393:21" pos:end="393:64"><name pos:start="393:21" pos:end="393:21">i</name><operator pos:start="393:22" pos:end="393:23">+=</operator> <name pos:start="393:25" pos:end="393:27">run</name> <operator pos:start="393:29" pos:end="393:29">+</operator> <name pos:start="393:31" pos:end="393:61"><name pos:start="393:31" pos:end="393:32">rl</name><operator pos:start="393:33" pos:end="393:34">-&gt;</operator><name pos:start="393:35" pos:end="393:41">max_run</name><index pos:start="393:42" pos:end="393:49">[<expr pos:start="393:43" pos:end="393:48"><name pos:start="393:43" pos:end="393:45">run</name><operator pos:start="393:46" pos:end="393:47">&gt;&gt;</operator><literal type="number" pos:start="393:48" pos:end="393:48">7</literal></expr>]</index><index pos:start="393:50" pos:end="393:61">[<expr pos:start="393:51" pos:end="393:60"><name pos:start="393:51" pos:end="393:55">level</name><operator pos:start="393:56" pos:end="393:56">/</operator><name pos:start="393:57" pos:end="393:60">qmul</name></expr>]</index></name> <operator pos:start="393:63" pos:end="393:63">+</operator><literal type="number" pos:start="393:64" pos:end="393:64">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="393:67" pos:end="393:86">//FIXME opt indexing</comment>

                    <expr_stmt pos:start="395:21" pos:end="395:92"><expr pos:start="395:21" pos:end="395:91"><name pos:start="395:21" pos:end="395:25">level</name> <operator pos:start="395:27" pos:end="395:27">=</operator> <operator pos:start="395:29" pos:end="395:29">(</operator><name pos:start="395:30" pos:end="395:34">level</name> <operator pos:start="395:36" pos:end="395:36">^</operator> <call pos:start="395:38" pos:end="395:62"><name pos:start="395:38" pos:end="395:47">SHOW_SBITS</name><argument_list pos:start="395:48" pos:end="395:62">(<argument pos:start="395:49" pos:end="395:50"><expr pos:start="395:49" pos:end="395:50"><name pos:start="395:49" pos:end="395:50">re</name></expr></argument>, <argument pos:start="395:53" pos:end="395:58"><expr pos:start="395:53" pos:end="395:58"><operator pos:start="395:53" pos:end="395:53">&amp;</operator><name pos:start="395:54" pos:end="395:58"><name pos:start="395:54" pos:end="395:54">s</name><operator pos:start="395:55" pos:end="395:56">-&gt;</operator><name pos:start="395:57" pos:end="395:58">gb</name></name></expr></argument>, <argument pos:start="395:61" pos:end="395:61"><expr pos:start="395:61" pos:end="395:61"><literal type="number" pos:start="395:61" pos:end="395:61">1</literal></expr></argument>)</argument_list></call><operator pos:start="395:63" pos:end="395:63">)</operator> <operator pos:start="395:65" pos:end="395:65">-</operator> <call pos:start="395:67" pos:end="395:91"><name pos:start="395:67" pos:end="395:76">SHOW_SBITS</name><argument_list pos:start="395:77" pos:end="395:91">(<argument pos:start="395:78" pos:end="395:79"><expr pos:start="395:78" pos:end="395:79"><name pos:start="395:78" pos:end="395:79">re</name></expr></argument>, <argument pos:start="395:82" pos:end="395:87"><expr pos:start="395:82" pos:end="395:87"><operator pos:start="395:82" pos:end="395:82">&amp;</operator><name pos:start="395:83" pos:end="395:87"><name pos:start="395:83" pos:end="395:83">s</name><operator pos:start="395:84" pos:end="395:85">-&gt;</operator><name pos:start="395:86" pos:end="395:87">gb</name></name></expr></argument>, <argument pos:start="395:90" pos:end="395:90"><expr pos:start="395:90" pos:end="395:90"><literal type="number" pos:start="395:90" pos:end="395:90">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="397:21" pos:end="397:50"><expr pos:start="397:21" pos:end="397:49"><call pos:start="397:21" pos:end="397:49"><name pos:start="397:21" pos:end="397:34">LAST_SKIP_BITS</name><argument_list pos:start="397:35" pos:end="397:49">(<argument pos:start="397:36" pos:end="397:37"><expr pos:start="397:36" pos:end="397:37"><name pos:start="397:36" pos:end="397:37">re</name></expr></argument>, <argument pos:start="397:40" pos:end="397:45"><expr pos:start="397:40" pos:end="397:45"><operator pos:start="397:40" pos:end="397:40">&amp;</operator><name pos:start="397:41" pos:end="397:45"><name pos:start="397:41" pos:end="397:41">s</name><operator pos:start="397:42" pos:end="397:43">-&gt;</operator><name pos:start="397:44" pos:end="397:45">gb</name></name></expr></argument>, <argument pos:start="397:48" pos:end="397:48"><expr pos:start="397:48" pos:end="397:48"><literal type="number" pos:start="397:48" pos:end="397:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="401:15" pos:end="427:13">else <block pos:start="401:20" pos:end="427:13">{<block_content pos:start="407:17" pos:end="425:46">

                <comment type="block" pos:start="403:17" pos:end="403:34">/* first escape */</comment>

<cpp:if pos:start="405:1" pos:end="405:23">#<cpp:directive pos:start="405:2" pos:end="405:3">if</cpp:directive> <expr pos:start="405:5" pos:end="405:23"><name pos:start="405:5" pos:end="405:18">MIN_CACHE_BITS</name> <operator pos:start="405:20" pos:end="405:20">&lt;</operator> <literal type="number" pos:start="405:22" pos:end="405:23">19</literal></expr></cpp:if>

                <expr_stmt pos:start="407:17" pos:end="407:46"><expr pos:start="407:17" pos:end="407:45"><call pos:start="407:17" pos:end="407:45"><name pos:start="407:17" pos:end="407:30">LAST_SKIP_BITS</name><argument_list pos:start="407:31" pos:end="407:45">(<argument pos:start="407:32" pos:end="407:33"><expr pos:start="407:32" pos:end="407:33"><name pos:start="407:32" pos:end="407:33">re</name></expr></argument>, <argument pos:start="407:36" pos:end="407:41"><expr pos:start="407:36" pos:end="407:41"><operator pos:start="407:36" pos:end="407:36">&amp;</operator><name pos:start="407:37" pos:end="407:41"><name pos:start="407:37" pos:end="407:37">s</name><operator pos:start="407:38" pos:end="407:39">-&gt;</operator><name pos:start="407:40" pos:end="407:41">gb</name></name></expr></argument>, <argument pos:start="407:44" pos:end="407:44"><expr pos:start="407:44" pos:end="407:44"><literal type="number" pos:start="407:44" pos:end="407:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="412:0"><expr pos:start="409:17" pos:end="409:40"><call pos:start="409:17" pos:end="409:40"><name pos:start="409:17" pos:end="409:28">UPDATE_CACHE</name><argument_list pos:start="409:29" pos:end="409:40">(<argument pos:start="409:30" pos:end="409:31"><expr pos:start="409:30" pos:end="409:31"><name pos:start="409:30" pos:end="409:31">re</name></expr></argument>, <argument pos:start="409:34" pos:end="409:39"><expr pos:start="409:34" pos:end="409:39"><operator pos:start="409:34" pos:end="409:34">&amp;</operator><name pos:start="409:35" pos:end="409:39"><name pos:start="409:35" pos:end="409:35">s</name><operator pos:start="409:36" pos:end="409:37">-&gt;</operator><name pos:start="409:38" pos:end="409:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="411:1" pos:end="411:5">#<cpp:directive pos:start="411:2" pos:end="411:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="413:17" pos:end="416:0"><expr pos:start="413:17" pos:end="413:40"><call pos:start="413:17" pos:end="413:40"><name pos:start="413:17" pos:end="413:25">SKIP_BITS</name><argument_list pos:start="413:26" pos:end="413:40">(<argument pos:start="413:27" pos:end="413:28"><expr pos:start="413:27" pos:end="413:28"><name pos:start="413:27" pos:end="413:28">re</name></expr></argument>, <argument pos:start="413:31" pos:end="413:36"><expr pos:start="413:31" pos:end="413:36"><operator pos:start="413:31" pos:end="413:31">&amp;</operator><name pos:start="413:32" pos:end="413:36"><name pos:start="413:32" pos:end="413:32">s</name><operator pos:start="413:33" pos:end="413:34">-&gt;</operator><name pos:start="413:35" pos:end="413:36">gb</name></name></expr></argument>, <argument pos:start="413:39" pos:end="413:39"><expr pos:start="413:39" pos:end="413:39"><literal type="number" pos:start="413:39" pos:end="413:39">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="415:1" pos:end="415:6">#<cpp:directive pos:start="415:2" pos:end="415:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="417:17" pos:end="417:79"><expr pos:start="417:17" pos:end="417:78"><call pos:start="417:17" pos:end="417:78"><name pos:start="417:17" pos:end="417:26">GET_RL_VLC</name><argument_list pos:start="417:27" pos:end="417:78">(<argument pos:start="417:28" pos:end="417:32"><expr pos:start="417:28" pos:end="417:32"><name pos:start="417:28" pos:end="417:32">level</name></expr></argument>, <argument pos:start="417:35" pos:end="417:37"><expr pos:start="417:35" pos:end="417:37"><name pos:start="417:35" pos:end="417:37">run</name></expr></argument>, <argument pos:start="417:40" pos:end="417:41"><expr pos:start="417:40" pos:end="417:41"><name pos:start="417:40" pos:end="417:41">re</name></expr></argument>, <argument pos:start="417:44" pos:end="417:49"><expr pos:start="417:44" pos:end="417:49"><operator pos:start="417:44" pos:end="417:44">&amp;</operator><name pos:start="417:45" pos:end="417:49"><name pos:start="417:45" pos:end="417:45">s</name><operator pos:start="417:46" pos:end="417:47">-&gt;</operator><name pos:start="417:48" pos:end="417:49">gb</name></name></expr></argument>, <argument pos:start="417:52" pos:end="417:57"><expr pos:start="417:52" pos:end="417:57"><name pos:start="417:52" pos:end="417:57">rl_vlc</name></expr></argument>, <argument pos:start="417:60" pos:end="417:71"><expr pos:start="417:60" pos:end="417:71"><name pos:start="417:60" pos:end="417:71">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="417:74" pos:end="417:74"><expr pos:start="417:74" pos:end="417:74"><literal type="number" pos:start="417:74" pos:end="417:74">2</literal></expr></argument>, <argument pos:start="417:77" pos:end="417:77"><expr pos:start="417:77" pos:end="417:77"><literal type="number" pos:start="417:77" pos:end="417:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:24"><expr pos:start="419:17" pos:end="419:23"><name pos:start="419:17" pos:end="419:17">i</name><operator pos:start="419:18" pos:end="419:19">+=</operator> <name pos:start="419:21" pos:end="419:23">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:73"><expr pos:start="421:17" pos:end="421:72"><name pos:start="421:17" pos:end="421:21">level</name> <operator pos:start="421:23" pos:end="421:23">=</operator> <name pos:start="421:25" pos:end="421:29">level</name> <operator pos:start="421:31" pos:end="421:31">+</operator> <name pos:start="421:33" pos:end="421:65"><name pos:start="421:33" pos:end="421:34">rl</name><operator pos:start="421:35" pos:end="421:36">-&gt;</operator><name pos:start="421:37" pos:end="421:45">max_level</name><index pos:start="421:46" pos:end="421:53">[<expr pos:start="421:47" pos:end="421:52"><name pos:start="421:47" pos:end="421:49">run</name><operator pos:start="421:50" pos:end="421:51">&gt;&gt;</operator><literal type="number" pos:start="421:52" pos:end="421:52">7</literal></expr>]</index><index pos:start="421:54" pos:end="421:65">[<expr pos:start="421:55" pos:end="421:64"><operator pos:start="421:55" pos:end="421:55">(</operator><name pos:start="421:56" pos:end="421:58">run</name><operator pos:start="421:59" pos:end="421:59">-</operator><literal type="number" pos:start="421:60" pos:end="421:60">1</literal><operator pos:start="421:61" pos:end="421:61">)</operator><operator pos:start="421:62" pos:end="421:62">&amp;</operator><literal type="number" pos:start="421:63" pos:end="421:64">63</literal></expr>]</index></name> <operator pos:start="421:67" pos:end="421:67">*</operator> <name pos:start="421:69" pos:end="421:72">qmul</name></expr>;</expr_stmt><comment type="line" pos:start="421:74" pos:end="421:93">//FIXME opt indexing</comment>

                <expr_stmt pos:start="423:17" pos:end="423:88"><expr pos:start="423:17" pos:end="423:87"><name pos:start="423:17" pos:end="423:21">level</name> <operator pos:start="423:23" pos:end="423:23">=</operator> <operator pos:start="423:25" pos:end="423:25">(</operator><name pos:start="423:26" pos:end="423:30">level</name> <operator pos:start="423:32" pos:end="423:32">^</operator> <call pos:start="423:34" pos:end="423:58"><name pos:start="423:34" pos:end="423:43">SHOW_SBITS</name><argument_list pos:start="423:44" pos:end="423:58">(<argument pos:start="423:45" pos:end="423:46"><expr pos:start="423:45" pos:end="423:46"><name pos:start="423:45" pos:end="423:46">re</name></expr></argument>, <argument pos:start="423:49" pos:end="423:54"><expr pos:start="423:49" pos:end="423:54"><operator pos:start="423:49" pos:end="423:49">&amp;</operator><name pos:start="423:50" pos:end="423:54"><name pos:start="423:50" pos:end="423:50">s</name><operator pos:start="423:51" pos:end="423:52">-&gt;</operator><name pos:start="423:53" pos:end="423:54">gb</name></name></expr></argument>, <argument pos:start="423:57" pos:end="423:57"><expr pos:start="423:57" pos:end="423:57"><literal type="number" pos:start="423:57" pos:end="423:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="423:59" pos:end="423:59">)</operator> <operator pos:start="423:61" pos:end="423:61">-</operator> <call pos:start="423:63" pos:end="423:87"><name pos:start="423:63" pos:end="423:72">SHOW_SBITS</name><argument_list pos:start="423:73" pos:end="423:87">(<argument pos:start="423:74" pos:end="423:75"><expr pos:start="423:74" pos:end="423:75"><name pos:start="423:74" pos:end="423:75">re</name></expr></argument>, <argument pos:start="423:78" pos:end="423:83"><expr pos:start="423:78" pos:end="423:83"><operator pos:start="423:78" pos:end="423:78">&amp;</operator><name pos:start="423:79" pos:end="423:83"><name pos:start="423:79" pos:end="423:79">s</name><operator pos:start="423:80" pos:end="423:81">-&gt;</operator><name pos:start="423:82" pos:end="423:83">gb</name></name></expr></argument>, <argument pos:start="423:86" pos:end="423:86"><expr pos:start="423:86" pos:end="423:86"><literal type="number" pos:start="423:86" pos:end="423:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:46"><expr pos:start="425:17" pos:end="425:45"><call pos:start="425:17" pos:end="425:45"><name pos:start="425:17" pos:end="425:30">LAST_SKIP_BITS</name><argument_list pos:start="425:31" pos:end="425:45">(<argument pos:start="425:32" pos:end="425:33"><expr pos:start="425:32" pos:end="425:33"><name pos:start="425:32" pos:end="425:33">re</name></expr></argument>, <argument pos:start="425:36" pos:end="425:41"><expr pos:start="425:36" pos:end="425:41"><operator pos:start="425:36" pos:end="425:36">&amp;</operator><name pos:start="425:37" pos:end="425:41"><name pos:start="425:37" pos:end="425:37">s</name><operator pos:start="425:38" pos:end="425:39">-&gt;</operator><name pos:start="425:40" pos:end="425:41">gb</name></name></expr></argument>, <argument pos:start="425:44" pos:end="425:44"><expr pos:start="425:44" pos:end="425:44"><literal type="number" pos:start="425:44" pos:end="425:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

          </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="431:11" pos:end="439:9">else <block pos:start="431:16" pos:end="439:9">{<block_content pos:start="433:13" pos:end="437:42">

            <expr_stmt pos:start="433:13" pos:end="433:20"><expr pos:start="433:13" pos:end="433:19"><name pos:start="433:13" pos:end="433:13">i</name><operator pos:start="433:14" pos:end="433:15">+=</operator> <name pos:start="433:17" pos:end="433:19">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="435:13" pos:end="435:84"><expr pos:start="435:13" pos:end="435:83"><name pos:start="435:13" pos:end="435:17">level</name> <operator pos:start="435:19" pos:end="435:19">=</operator> <operator pos:start="435:21" pos:end="435:21">(</operator><name pos:start="435:22" pos:end="435:26">level</name> <operator pos:start="435:28" pos:end="435:28">^</operator> <call pos:start="435:30" pos:end="435:54"><name pos:start="435:30" pos:end="435:39">SHOW_SBITS</name><argument_list pos:start="435:40" pos:end="435:54">(<argument pos:start="435:41" pos:end="435:42"><expr pos:start="435:41" pos:end="435:42"><name pos:start="435:41" pos:end="435:42">re</name></expr></argument>, <argument pos:start="435:45" pos:end="435:50"><expr pos:start="435:45" pos:end="435:50"><operator pos:start="435:45" pos:end="435:45">&amp;</operator><name pos:start="435:46" pos:end="435:50"><name pos:start="435:46" pos:end="435:46">s</name><operator pos:start="435:47" pos:end="435:48">-&gt;</operator><name pos:start="435:49" pos:end="435:50">gb</name></name></expr></argument>, <argument pos:start="435:53" pos:end="435:53"><expr pos:start="435:53" pos:end="435:53"><literal type="number" pos:start="435:53" pos:end="435:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="435:55" pos:end="435:55">)</operator> <operator pos:start="435:57" pos:end="435:57">-</operator> <call pos:start="435:59" pos:end="435:83"><name pos:start="435:59" pos:end="435:68">SHOW_SBITS</name><argument_list pos:start="435:69" pos:end="435:83">(<argument pos:start="435:70" pos:end="435:71"><expr pos:start="435:70" pos:end="435:71"><name pos:start="435:70" pos:end="435:71">re</name></expr></argument>, <argument pos:start="435:74" pos:end="435:79"><expr pos:start="435:74" pos:end="435:79"><operator pos:start="435:74" pos:end="435:74">&amp;</operator><name pos:start="435:75" pos:end="435:79"><name pos:start="435:75" pos:end="435:75">s</name><operator pos:start="435:76" pos:end="435:77">-&gt;</operator><name pos:start="435:78" pos:end="435:79">gb</name></name></expr></argument>, <argument pos:start="435:82" pos:end="435:82"><expr pos:start="435:82" pos:end="435:82"><literal type="number" pos:start="435:82" pos:end="435:82">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="437:13" pos:end="437:42"><expr pos:start="437:13" pos:end="437:41"><call pos:start="437:13" pos:end="437:41"><name pos:start="437:13" pos:end="437:26">LAST_SKIP_BITS</name><argument_list pos:start="437:27" pos:end="437:41">(<argument pos:start="437:28" pos:end="437:29"><expr pos:start="437:28" pos:end="437:29"><name pos:start="437:28" pos:end="437:29">re</name></expr></argument>, <argument pos:start="437:32" pos:end="437:37"><expr pos:start="437:32" pos:end="437:37"><operator pos:start="437:32" pos:end="437:32">&amp;</operator><name pos:start="437:33" pos:end="437:37"><name pos:start="437:33" pos:end="437:33">s</name><operator pos:start="437:34" pos:end="437:35">-&gt;</operator><name pos:start="437:36" pos:end="437:37">gb</name></name></expr></argument>, <argument pos:start="437:40" pos:end="437:40"><expr pos:start="437:40" pos:end="437:40"><literal type="number" pos:start="437:40" pos:end="437:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="441:9" pos:end="459:9"><if pos:start="441:9" pos:end="459:9">if <condition pos:start="441:12" pos:end="441:19">(<expr pos:start="441:13" pos:end="441:18"><name pos:start="441:13" pos:end="441:13">i</name> <operator pos:start="441:15" pos:end="441:15">&gt;</operator> <literal type="number" pos:start="441:17" pos:end="441:18">62</literal></expr>)</condition><block pos:start="441:20" pos:end="459:9">{<block_content pos:start="443:13" pos:end="457:18">

            <expr_stmt pos:start="443:13" pos:end="443:20"><expr pos:start="443:13" pos:end="443:19"><name pos:start="443:13" pos:end="443:13">i</name><operator pos:start="443:14" pos:end="443:15">-=</operator> <literal type="number" pos:start="443:17" pos:end="443:19">192</literal></expr>;</expr_stmt>

            <if_stmt pos:start="445:13" pos:end="451:13"><if pos:start="445:13" pos:end="451:13">if<condition pos:start="445:15" pos:end="445:23">(<expr pos:start="445:16" pos:end="445:22"><name pos:start="445:16" pos:end="445:16">i</name><operator pos:start="445:17" pos:end="445:17">&amp;</operator><operator pos:start="445:18" pos:end="445:18">(</operator><operator pos:start="445:19" pos:end="445:19">~</operator><literal type="number" pos:start="445:20" pos:end="445:21">63</literal><operator pos:start="445:22" pos:end="445:22">)</operator></expr>)</condition><block pos:start="445:24" pos:end="451:13">{<block_content pos:start="447:17" pos:end="449:26">

                <expr_stmt pos:start="447:17" pos:end="447:94"><expr pos:start="447:17" pos:end="447:93"><call pos:start="447:17" pos:end="447:93"><name pos:start="447:17" pos:end="447:22">av_log</name><argument_list pos:start="447:23" pos:end="447:93">(<argument pos:start="447:24" pos:end="447:31"><expr pos:start="447:24" pos:end="447:31"><name pos:start="447:24" pos:end="447:31"><name pos:start="447:24" pos:end="447:24">s</name><operator pos:start="447:25" pos:end="447:26">-&gt;</operator><name pos:start="447:27" pos:end="447:31">avctx</name></name></expr></argument>, <argument pos:start="447:34" pos:end="447:45"><expr pos:start="447:34" pos:end="447:45"><name pos:start="447:34" pos:end="447:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="447:48" pos:end="447:74"><expr pos:start="447:48" pos:end="447:74"><literal type="string" pos:start="447:48" pos:end="447:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="447:77" pos:end="447:83"><expr pos:start="447:77" pos:end="447:83"><name pos:start="447:77" pos:end="447:83"><name pos:start="447:77" pos:end="447:77">s</name><operator pos:start="447:78" pos:end="447:79">-&gt;</operator><name pos:start="447:80" pos:end="447:83">mb_x</name></name></expr></argument>, <argument pos:start="447:86" pos:end="447:92"><expr pos:start="447:86" pos:end="447:92"><name pos:start="447:86" pos:end="447:92"><name pos:start="447:86" pos:end="447:86">s</name><operator pos:start="447:87" pos:end="447:88">-&gt;</operator><name pos:start="447:89" pos:end="447:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="449:17" pos:end="449:26">return <expr pos:start="449:24" pos:end="449:25"><operator pos:start="449:24" pos:end="449:24">-</operator><literal type="number" pos:start="449:25" pos:end="449:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="455:13" pos:end="455:41"><expr pos:start="455:13" pos:end="455:40"><name pos:start="455:13" pos:end="455:32"><name pos:start="455:13" pos:end="455:17">block</name><index pos:start="455:18" pos:end="455:32">[<expr pos:start="455:19" pos:end="455:31"><name pos:start="455:19" pos:end="455:31"><name pos:start="455:19" pos:end="455:28">scan_table</name><index pos:start="455:29" pos:end="455:31">[<expr pos:start="455:30" pos:end="455:30"><name pos:start="455:30" pos:end="455:30">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="455:34" pos:end="455:34">=</operator> <name pos:start="455:36" pos:end="455:40">level</name></expr>;</expr_stmt>

            <break pos:start="457:13" pos:end="457:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="463:9" pos:end="463:37"><expr pos:start="463:9" pos:end="463:36"><name pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:13">block</name><index pos:start="463:14" pos:end="463:28">[<expr pos:start="463:15" pos:end="463:27"><name pos:start="463:15" pos:end="463:27"><name pos:start="463:15" pos:end="463:24">scan_table</name><index pos:start="463:25" pos:end="463:27">[<expr pos:start="463:26" pos:end="463:26"><name pos:start="463:26" pos:end="463:26">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="463:30" pos:end="463:30">=</operator> <name pos:start="463:32" pos:end="463:36">level</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="467:5" pos:end="467:29"><expr pos:start="467:5" pos:end="467:28"><call pos:start="467:5" pos:end="467:28"><name pos:start="467:5" pos:end="467:16">CLOSE_READER</name><argument_list pos:start="467:17" pos:end="467:28">(<argument pos:start="467:18" pos:end="467:19"><expr pos:start="467:18" pos:end="467:19"><name pos:start="467:18" pos:end="467:19">re</name></expr></argument>, <argument pos:start="467:22" pos:end="467:27"><expr pos:start="467:22" pos:end="467:27"><operator pos:start="467:22" pos:end="467:22">&amp;</operator><name pos:start="467:23" pos:end="467:27"><name pos:start="467:23" pos:end="467:23">s</name><operator pos:start="467:24" pos:end="467:25">-&gt;</operator><name pos:start="467:26" pos:end="467:27">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block>

 <label pos:start="471:2" pos:end="471:11"><name pos:start="471:2" pos:end="471:10">not_coded</name>:</label>

    <if_stmt pos:start="473:5" pos:end="495:5"><if pos:start="473:5" pos:end="495:5">if <condition pos:start="473:8" pos:end="473:14">(<expr pos:start="473:9" pos:end="473:13"><name pos:start="473:9" pos:end="473:13">intra</name></expr>)</condition> <block pos:start="473:16" pos:end="495:5">{<block_content pos:start="475:9" pos:end="493:9">

        <if_stmt pos:start="475:9" pos:end="483:9"><if pos:start="475:9" pos:end="483:9">if<condition pos:start="475:11" pos:end="475:32">(<expr pos:start="475:12" pos:end="475:31"><operator pos:start="475:12" pos:end="475:12">!</operator><name pos:start="475:13" pos:end="475:31"><name pos:start="475:13" pos:end="475:13">s</name><operator pos:start="475:14" pos:end="475:15">-&gt;</operator><name pos:start="475:16" pos:end="475:31">use_intra_dc_vlc</name></name></expr>)</condition><block pos:start="475:33" pos:end="483:9">{<block_content pos:start="477:13" pos:end="481:23">

            <expr_stmt pos:start="477:13" pos:end="477:73"><expr pos:start="477:13" pos:end="477:72"><name pos:start="477:13" pos:end="477:20"><name pos:start="477:13" pos:end="477:17">block</name><index pos:start="477:18" pos:end="477:20">[<expr pos:start="477:19" pos:end="477:19"><literal type="number" pos:start="477:19" pos:end="477:19">0</literal></expr>]</index></name> <operator pos:start="477:22" pos:end="477:22">=</operator> <call pos:start="477:24" pos:end="477:72"><name pos:start="477:24" pos:end="477:39">ff_mpeg4_pred_dc</name><argument_list pos:start="477:40" pos:end="477:72">(<argument pos:start="477:41" pos:end="477:41"><expr pos:start="477:41" pos:end="477:41"><name pos:start="477:41" pos:end="477:41">s</name></expr></argument>, <argument pos:start="477:44" pos:end="477:44"><expr pos:start="477:44" pos:end="477:44"><name pos:start="477:44" pos:end="477:44">n</name></expr></argument>, <argument pos:start="477:47" pos:end="477:54"><expr pos:start="477:47" pos:end="477:54"><name pos:start="477:47" pos:end="477:54"><name pos:start="477:47" pos:end="477:51">block</name><index pos:start="477:52" pos:end="477:54">[<expr pos:start="477:53" pos:end="477:53"><literal type="number" pos:start="477:53" pos:end="477:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="477:57" pos:end="477:68"><expr pos:start="477:57" pos:end="477:68"><operator pos:start="477:57" pos:end="477:57">&amp;</operator><name pos:start="477:58" pos:end="477:68">dc_pred_dir</name></expr></argument>, <argument pos:start="477:71" pos:end="477:71"><expr pos:start="477:71" pos:end="477:71"><literal type="number" pos:start="477:71" pos:end="477:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="481:13" pos:end="481:23"><expr pos:start="481:13" pos:end="481:22"><name pos:start="481:13" pos:end="481:13">i</name> <operator pos:start="481:15" pos:end="481:16">-=</operator> <name pos:start="481:18" pos:end="481:18">i</name><operator pos:start="481:19" pos:end="481:20">&gt;&gt;</operator><literal type="number" pos:start="481:21" pos:end="481:22">31</literal></expr>;</expr_stmt> <comment type="line" pos:start="481:25" pos:end="481:42">//if(i == -1) i=0;</comment>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="487:9" pos:end="487:48"><expr pos:start="487:9" pos:end="487:47"><call pos:start="487:9" pos:end="487:47"><name pos:start="487:9" pos:end="487:21">mpeg4_pred_ac</name><argument_list pos:start="487:22" pos:end="487:47">(<argument pos:start="487:23" pos:end="487:23"><expr pos:start="487:23" pos:end="487:23"><name pos:start="487:23" pos:end="487:23">s</name></expr></argument>, <argument pos:start="487:26" pos:end="487:30"><expr pos:start="487:26" pos:end="487:30"><name pos:start="487:26" pos:end="487:30">block</name></expr></argument>, <argument pos:start="487:33" pos:end="487:33"><expr pos:start="487:33" pos:end="487:33"><name pos:start="487:33" pos:end="487:33">n</name></expr></argument>, <argument pos:start="487:36" pos:end="487:46"><expr pos:start="487:36" pos:end="487:46"><name pos:start="487:36" pos:end="487:46">dc_pred_dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="489:9" pos:end="493:9"><if pos:start="489:9" pos:end="493:9">if <condition pos:start="489:12" pos:end="489:23">(<expr pos:start="489:13" pos:end="489:22"><name pos:start="489:13" pos:end="489:22"><name pos:start="489:13" pos:end="489:13">s</name><operator pos:start="489:14" pos:end="489:15">-&gt;</operator><name pos:start="489:16" pos:end="489:22">ac_pred</name></name></expr>)</condition> <block pos:start="489:25" pos:end="493:9">{<block_content pos:start="491:13" pos:end="491:19">

            <expr_stmt pos:start="491:13" pos:end="491:19"><expr pos:start="491:13" pos:end="491:18"><name pos:start="491:13" pos:end="491:13">i</name> <operator pos:start="491:15" pos:end="491:15">=</operator> <literal type="number" pos:start="491:17" pos:end="491:18">63</literal></expr>;</expr_stmt> <comment type="block" pos:start="491:21" pos:end="491:42">/* XXX: not optimal */</comment>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="497:5" pos:end="497:31"><expr pos:start="497:5" pos:end="497:30"><name pos:start="497:5" pos:end="497:26"><name pos:start="497:5" pos:end="497:5">s</name><operator pos:start="497:6" pos:end="497:7">-&gt;</operator><name pos:start="497:8" pos:end="497:23">block_last_index</name><index pos:start="497:24" pos:end="497:26">[<expr pos:start="497:25" pos:end="497:25"><name pos:start="497:25" pos:end="497:25">n</name></expr>]</index></name> <operator pos:start="497:28" pos:end="497:28">=</operator> <name pos:start="497:30" pos:end="497:30">i</name></expr>;</expr_stmt>

    <return pos:start="499:5" pos:end="499:13">return <expr pos:start="499:12" pos:end="499:12"><literal type="number" pos:start="499:12" pos:end="499:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
