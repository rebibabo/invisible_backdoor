<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9766.c" pos:tabs="8"><function pos:start="1:1" pos:end="163:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">start_children</name><parameter_list pos:start="1:27" pos:end="1:48">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:41">FFServerStream</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">feed</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="163:1">{<block_content pos:start="5:5" pos:end="161:23">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:18">pathname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:15">slash</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">cmd_length</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:15"><if pos:start="15:5" pos:end="17:15">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:17">no_launch</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:15"><block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:41"><expr pos:start="21:5" pos:end="21:40"><name pos:start="21:5" pos:end="21:14">cmd_length</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:40"><name pos:start="21:18" pos:end="21:23">strlen</name><argument_list pos:start="21:24" pos:end="21:40">(<argument pos:start="21:25" pos:end="21:39"><expr pos:start="21:25" pos:end="21:39"><name pos:start="21:25" pos:end="21:39">my_program_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



   <comment type="block" format="doxygen" pos:start="25:4" pos:end="31:6">/**

    * FIXME: WIP Safeguard. Remove after clearing all harcoded

    * '1024' path lengths

    */</comment>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:18">cmd_length</name> <operator pos:start="33:20" pos:end="33:20">&gt;</operator> <name pos:start="33:22" pos:end="33:32">PATH_LENGTH</name> <operator pos:start="33:34" pos:end="33:34">-</operator> <literal type="number" pos:start="33:36" pos:end="33:36">1</literal></expr>)</condition> <block pos:start="33:39" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:15">

        <expr_stmt pos:start="35:9" pos:end="37:78"><expr pos:start="35:9" pos:end="37:77"><call pos:start="35:9" pos:end="37:77"><name pos:start="35:9" pos:end="35:16">http_log</name><argument_list pos:start="35:17" pos:end="37:77">(<argument pos:start="35:18" pos:end="37:46"><expr pos:start="35:18" pos:end="37:46"><literal type="string" pos:start="35:18" pos:end="35:72">"Could not start children. Command line: '%s' exceeds "</literal>

                    <literal type="string" pos:start="37:21" pos:end="37:46">"path length limit (%d)\n"</literal></expr></argument>, <argument pos:start="37:49" pos:end="37:63"><expr pos:start="37:49" pos:end="37:63"><name pos:start="37:49" pos:end="37:63">my_program_name</name></expr></argument>, <argument pos:start="37:66" pos:end="37:76"><expr pos:start="37:66" pos:end="37:76"><name pos:start="37:66" pos:end="37:76">PATH_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:12">pathname</name> <operator pos:start="45:14" pos:end="45:14">=</operator> <call pos:start="45:16" pos:end="45:42"><name pos:start="45:16" pos:end="45:24">av_strdup</name> <argument_list pos:start="45:26" pos:end="45:42">(<argument pos:start="45:27" pos:end="45:41"><expr pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:41">my_program_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:18">(<expr pos:start="47:9" pos:end="47:17"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:17">pathname</name></expr>)</condition> <block pos:start="47:20" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:15">

        <expr_stmt pos:start="49:9" pos:end="49:70"><expr pos:start="49:9" pos:end="49:69"><call pos:start="49:9" pos:end="49:69"><name pos:start="49:9" pos:end="49:16">http_log</name><argument_list pos:start="49:17" pos:end="49:69">(<argument pos:start="49:18" pos:end="49:68"><expr pos:start="49:18" pos:end="49:68"><literal type="string" pos:start="49:18" pos:end="49:68">"Could not allocate memory for children cmd line\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:15">return;</return>

    </block_content>}</block></if></if_stmt>

   <comment type="block" pos:start="55:4" pos:end="57:43">/* replace "ffserver" with "ffmpeg" in the path of current

    * program. Ignore user provided path */</comment>



    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:9">slash</name> <operator pos:start="61:11" pos:end="61:11">=</operator> <call pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:19">strrchr</name><argument_list pos:start="61:20" pos:end="61:34">(<argument pos:start="61:21" pos:end="61:28"><expr pos:start="61:21" pos:end="61:28"><name pos:start="61:21" pos:end="61:28">pathname</name></expr></argument>, <argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><literal type="char" pos:start="61:31" pos:end="61:33">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:16"><if pos:start="63:5" pos:end="65:25">if <condition pos:start="63:8" pos:end="63:15">(<expr pos:start="63:9" pos:end="63:14"><operator pos:start="63:9" pos:end="63:9">!</operator><name pos:start="63:10" pos:end="63:14">slash</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:25"><block_content pos:start="65:9" pos:end="65:25">

        <expr_stmt pos:start="65:9" pos:end="65:25"><expr pos:start="65:9" pos:end="65:24"><name pos:start="65:9" pos:end="65:13">slash</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:24">pathname</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="67:5" pos:end="69:16">else<block type="pseudo" pos:start="69:9" pos:end="69:16"><block_content pos:start="69:9" pos:end="69:16">

        <expr_stmt pos:start="69:9" pos:end="69:16"><expr pos:start="69:9" pos:end="69:15"><name pos:start="69:9" pos:end="69:13">slash</name><operator pos:start="69:14" pos:end="69:15">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:10">strcpy</name><argument_list pos:start="71:11" pos:end="71:27">(<argument pos:start="71:12" pos:end="71:16"><expr pos:start="71:12" pos:end="71:16"><name pos:start="71:12" pos:end="71:16">slash</name></expr></argument>, <argument pos:start="71:19" pos:end="71:26"><expr pos:start="71:19" pos:end="71:26"><literal type="string" pos:start="71:19" pos:end="71:26">"ffmpeg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="75:5" pos:end="159:5">for <control pos:start="75:9" pos:end="75:35">(<init pos:start="75:10" pos:end="75:10">;</init> <condition pos:start="75:12" pos:end="75:16"><expr pos:start="75:12" pos:end="75:15"><name pos:start="75:12" pos:end="75:15">feed</name></expr>;</condition> <incr pos:start="75:18" pos:end="75:34"><expr pos:start="75:18" pos:end="75:34"><name pos:start="75:18" pos:end="75:21">feed</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:34"><name pos:start="75:25" pos:end="75:28">feed</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:34">next</name></name></expr></incr>)</control> <block pos:start="75:37" pos:end="159:5">{<block_content pos:start="79:9" pos:end="157:17">



        <if_stmt pos:start="79:9" pos:end="81:21"><if pos:start="79:9" pos:end="81:21">if <condition pos:start="79:12" pos:end="79:43">(<expr pos:start="79:13" pos:end="79:42"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:29"><name pos:start="79:14" pos:end="79:17">feed</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:29">child_argv</name></name> <operator pos:start="79:31" pos:end="79:32">||</operator> <name pos:start="79:34" pos:end="79:42"><name pos:start="79:34" pos:end="79:37">feed</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:42">pid</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:21"><block_content pos:start="81:13" pos:end="81:21">

            <continue pos:start="81:13" pos:end="81:21">continue;</continue></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:34"><expr pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:12">feed</name><operator pos:start="85:13" pos:end="85:14">-&gt;</operator><name pos:start="85:15" pos:end="85:23">pid_start</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <call pos:start="85:27" pos:end="85:33"><name pos:start="85:27" pos:end="85:30">time</name><argument_list pos:start="85:31" pos:end="85:33">(<argument pos:start="85:32" pos:end="85:32"><expr pos:start="85:32" pos:end="85:32"><literal type="number" pos:start="85:32" pos:end="85:32">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:12">feed</name><operator pos:start="89:13" pos:end="89:14">-&gt;</operator><name pos:start="89:15" pos:end="89:17">pid</name></name> <operator pos:start="89:19" pos:end="89:19">=</operator> <call pos:start="89:21" pos:end="89:26"><name pos:start="89:21" pos:end="89:24">fork</name><argument_list pos:start="89:25" pos:end="89:26">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="99:9"><if pos:start="91:9" pos:end="99:9">if <condition pos:start="91:12" pos:end="91:26">(<expr pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:21"><name pos:start="91:13" pos:end="91:16">feed</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:21">pid</name></name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <literal type="number" pos:start="91:25" pos:end="91:25">0</literal></expr>)</condition> <block pos:start="91:28" pos:end="99:9">{<block_content pos:start="93:13" pos:end="97:31">

            <expr_stmt pos:start="93:13" pos:end="93:73"><expr pos:start="93:13" pos:end="93:72"><call pos:start="93:13" pos:end="93:72"><name pos:start="93:13" pos:end="93:20">http_log</name><argument_list pos:start="93:21" pos:end="93:72">(<argument pos:start="93:22" pos:end="93:54"><expr pos:start="93:22" pos:end="93:54"><literal type="string" pos:start="93:22" pos:end="93:54">"Unable to create children: %s\n"</literal></expr></argument>, <argument pos:start="93:57" pos:end="93:71"><expr pos:start="93:57" pos:end="93:71"><call pos:start="93:57" pos:end="93:71"><name pos:start="93:57" pos:end="93:64">strerror</name><argument_list pos:start="93:65" pos:end="93:71">(<argument pos:start="93:66" pos:end="93:70"><expr pos:start="93:66" pos:end="93:70"><name pos:start="93:66" pos:end="93:70">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:31"><expr pos:start="95:13" pos:end="95:30"><call pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:19">av_free</name> <argument_list pos:start="95:21" pos:end="95:30">(<argument pos:start="95:22" pos:end="95:29"><expr pos:start="95:22" pos:end="95:29"><name pos:start="95:22" pos:end="95:29">pathname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:31"><expr pos:start="97:13" pos:end="97:30"><call pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:16">exit</name><argument_list pos:start="97:17" pos:end="97:30">(<argument pos:start="97:18" pos:end="97:29"><expr pos:start="97:18" pos:end="97:29"><name pos:start="97:18" pos:end="97:29">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="103:9" pos:end="105:21"><if pos:start="103:9" pos:end="105:21">if <condition pos:start="103:12" pos:end="103:22">(<expr pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:16">feed</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:21">pid</name></name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:21"><block_content pos:start="105:13" pos:end="105:21">

            <continue pos:start="105:13" pos:end="105:21">continue;</continue></block_content></block></if></if_stmt>



        <comment type="block" pos:start="109:9" pos:end="109:22">/* In child */</comment>



        <expr_stmt pos:start="113:9" pos:end="113:42"><expr pos:start="113:9" pos:end="113:41"><call pos:start="113:9" pos:end="113:41"><name pos:start="113:9" pos:end="113:16">http_log</name><argument_list pos:start="113:17" pos:end="113:41">(<argument pos:start="113:18" pos:end="113:40"><expr pos:start="113:18" pos:end="113:40"><literal type="string" pos:start="113:18" pos:end="113:40">"Launch command line: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><call pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:16">http_log</name><argument_list pos:start="115:17" pos:end="115:33">(<argument pos:start="115:18" pos:end="115:22"><expr pos:start="115:18" pos:end="115:22"><literal type="string" pos:start="115:18" pos:end="115:22">"%s "</literal></expr></argument>, <argument pos:start="115:25" pos:end="115:32"><expr pos:start="115:25" pos:end="115:32"><name pos:start="115:25" pos:end="115:32">pathname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="119:9" pos:end="121:49">for <control pos:start="119:13" pos:end="119:71">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">i</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">1</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:66"><expr pos:start="119:21" pos:end="119:65"><name pos:start="119:21" pos:end="119:39"><name pos:start="119:21" pos:end="119:24">feed</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:36">child_argv</name><index pos:start="119:37" pos:end="119:39">[<expr pos:start="119:38" pos:end="119:38"><name pos:start="119:38" pos:end="119:38">i</name></expr>]</index></name> <operator pos:start="119:41" pos:end="119:42">&amp;&amp;</operator> <name pos:start="119:44" pos:end="119:65"><name pos:start="119:44" pos:end="119:47">feed</name><operator pos:start="119:48" pos:end="119:49">-&gt;</operator><name pos:start="119:50" pos:end="119:59">child_argv</name><index pos:start="119:60" pos:end="119:62">[<expr pos:start="119:61" pos:end="119:61"><name pos:start="119:61" pos:end="119:61">i</name></expr>]</index><index pos:start="119:63" pos:end="119:65">[<expr pos:start="119:64" pos:end="119:64"><literal type="number" pos:start="119:64" pos:end="119:64">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="119:68" pos:end="119:70"><expr pos:start="119:68" pos:end="119:70"><name pos:start="119:68" pos:end="119:68">i</name><operator pos:start="119:69" pos:end="119:70">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:13" pos:end="121:49"><block_content pos:start="121:13" pos:end="121:49">

            <expr_stmt pos:start="121:13" pos:end="121:49"><expr pos:start="121:13" pos:end="121:48"><call pos:start="121:13" pos:end="121:48"><name pos:start="121:13" pos:end="121:20">http_log</name><argument_list pos:start="121:21" pos:end="121:48">(<argument pos:start="121:22" pos:end="121:26"><expr pos:start="121:22" pos:end="121:26"><literal type="string" pos:start="121:22" pos:end="121:26">"%s "</literal></expr></argument>, <argument pos:start="121:29" pos:end="121:47"><expr pos:start="121:29" pos:end="121:47"><name pos:start="121:29" pos:end="121:47"><name pos:start="121:29" pos:end="121:32">feed</name><operator pos:start="121:33" pos:end="121:34">-&gt;</operator><name pos:start="121:35" pos:end="121:44">child_argv</name><index pos:start="121:45" pos:end="121:47">[<expr pos:start="121:46" pos:end="121:46"><name pos:start="121:46" pos:end="121:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><call pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:16">http_log</name><argument_list pos:start="123:17" pos:end="123:22">(<argument pos:start="123:18" pos:end="123:21"><expr pos:start="123:18" pos:end="123:21"><literal type="string" pos:start="123:18" pos:end="123:21">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="127:9" pos:end="129:21">for <control pos:start="127:13" pos:end="127:33">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">3</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:28"><expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:27">256</literal></expr>;</condition> <incr pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:30">i</name><operator pos:start="127:31" pos:end="127:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:13" pos:end="129:21"><block_content pos:start="129:13" pos:end="129:21">

            <expr_stmt pos:start="129:13" pos:end="129:21"><expr pos:start="129:13" pos:end="129:20"><call pos:start="129:13" pos:end="129:20"><name pos:start="129:13" pos:end="129:17">close</name><argument_list pos:start="129:18" pos:end="129:20">(<argument pos:start="129:19" pos:end="129:19"><expr pos:start="129:19" pos:end="129:19"><name pos:start="129:19" pos:end="129:19">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="133:9" pos:end="147:9"><if pos:start="133:9" pos:end="147:9">if <condition pos:start="133:12" pos:end="133:26">(<expr pos:start="133:13" pos:end="133:25"><operator pos:start="133:13" pos:end="133:13">!</operator><name pos:start="133:14" pos:end="133:25"><name pos:start="133:14" pos:end="133:19">config</name><operator pos:start="133:20" pos:end="133:20">.</operator><name pos:start="133:21" pos:end="133:25">debug</name></name></expr>)</condition> <block pos:start="133:28" pos:end="147:9">{<block_content pos:start="135:13" pos:end="145:70">

            <if_stmt pos:start="135:13" pos:end="137:69"><if pos:start="135:13" pos:end="137:69">if <condition pos:start="135:16" pos:end="135:50">(<expr pos:start="135:17" pos:end="135:49"><operator pos:start="135:17" pos:end="135:17">!</operator><call pos:start="135:18" pos:end="135:49"><name pos:start="135:18" pos:end="135:24">freopen</name><argument_list pos:start="135:25" pos:end="135:49">(<argument pos:start="135:26" pos:end="135:36"><expr pos:start="135:26" pos:end="135:36"><literal type="string" pos:start="135:26" pos:end="135:36">"/dev/null"</literal></expr></argument>, <argument pos:start="135:39" pos:end="135:41"><expr pos:start="135:39" pos:end="135:41"><literal type="string" pos:start="135:39" pos:end="135:41">"r"</literal></expr></argument>, <argument pos:start="135:44" pos:end="135:48"><expr pos:start="135:44" pos:end="135:48"><name pos:start="135:44" pos:end="135:48">stdin</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:69"><block_content pos:start="137:17" pos:end="137:69">

                <expr_stmt pos:start="137:17" pos:end="137:69"><expr pos:start="137:17" pos:end="137:68"><call pos:start="137:17" pos:end="137:68"><name pos:start="137:17" pos:end="137:24">http_log</name><argument_list pos:start="137:25" pos:end="137:68">(<argument pos:start="137:26" pos:end="137:67"><expr pos:start="137:26" pos:end="137:67"><literal type="string" pos:start="137:26" pos:end="137:67">"failed to redirect STDIN to /dev/null\n;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="139:13" pos:end="141:70"><if pos:start="139:13" pos:end="141:70">if <condition pos:start="139:16" pos:end="139:51">(<expr pos:start="139:17" pos:end="139:50"><operator pos:start="139:17" pos:end="139:17">!</operator><call pos:start="139:18" pos:end="139:50"><name pos:start="139:18" pos:end="139:24">freopen</name><argument_list pos:start="139:25" pos:end="139:50">(<argument pos:start="139:26" pos:end="139:36"><expr pos:start="139:26" pos:end="139:36"><literal type="string" pos:start="139:26" pos:end="139:36">"/dev/null"</literal></expr></argument>, <argument pos:start="139:39" pos:end="139:41"><expr pos:start="139:39" pos:end="139:41"><literal type="string" pos:start="139:39" pos:end="139:41">"w"</literal></expr></argument>, <argument pos:start="139:44" pos:end="139:49"><expr pos:start="139:44" pos:end="139:49"><name pos:start="139:44" pos:end="139:49">stdout</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:70"><block_content pos:start="141:17" pos:end="141:70">

                <expr_stmt pos:start="141:17" pos:end="141:70"><expr pos:start="141:17" pos:end="141:69"><call pos:start="141:17" pos:end="141:69"><name pos:start="141:17" pos:end="141:24">http_log</name><argument_list pos:start="141:25" pos:end="141:69">(<argument pos:start="141:26" pos:end="141:68"><expr pos:start="141:26" pos:end="141:68"><literal type="string" pos:start="141:26" pos:end="141:68">"failed to redirect STDOUT to /dev/null\n;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="143:13" pos:end="145:70"><if pos:start="143:13" pos:end="145:70">if <condition pos:start="143:16" pos:end="143:51">(<expr pos:start="143:17" pos:end="143:50"><operator pos:start="143:17" pos:end="143:17">!</operator><call pos:start="143:18" pos:end="143:50"><name pos:start="143:18" pos:end="143:24">freopen</name><argument_list pos:start="143:25" pos:end="143:50">(<argument pos:start="143:26" pos:end="143:36"><expr pos:start="143:26" pos:end="143:36"><literal type="string" pos:start="143:26" pos:end="143:36">"/dev/null"</literal></expr></argument>, <argument pos:start="143:39" pos:end="143:41"><expr pos:start="143:39" pos:end="143:41"><literal type="string" pos:start="143:39" pos:end="143:41">"w"</literal></expr></argument>, <argument pos:start="143:44" pos:end="143:49"><expr pos:start="143:44" pos:end="143:49"><name pos:start="143:44" pos:end="143:49">stderr</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:70"><block_content pos:start="145:17" pos:end="145:70">

                <expr_stmt pos:start="145:17" pos:end="145:70"><expr pos:start="145:17" pos:end="145:69"><call pos:start="145:17" pos:end="145:69"><name pos:start="145:17" pos:end="145:24">http_log</name><argument_list pos:start="145:25" pos:end="145:69">(<argument pos:start="145:26" pos:end="145:68"><expr pos:start="145:26" pos:end="145:68"><literal type="string" pos:start="145:26" pos:end="145:68">"failed to redirect STDERR to /dev/null\n;"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><call pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:14">signal</name><argument_list pos:start="151:15" pos:end="151:32">(<argument pos:start="151:16" pos:end="151:22"><expr pos:start="151:16" pos:end="151:22"><name pos:start="151:16" pos:end="151:22">SIGPIPE</name></expr></argument>, <argument pos:start="151:25" pos:end="151:31"><expr pos:start="151:25" pos:end="151:31"><name pos:start="151:25" pos:end="151:31">SIG_DFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:43"><expr pos:start="153:9" pos:end="153:42"><call pos:start="153:9" pos:end="153:42"><name pos:start="153:9" pos:end="153:14">execvp</name><argument_list pos:start="153:15" pos:end="153:42">(<argument pos:start="153:16" pos:end="153:23"><expr pos:start="153:16" pos:end="153:23"><name pos:start="153:16" pos:end="153:23">pathname</name></expr></argument>, <argument pos:start="153:26" pos:end="153:41"><expr pos:start="153:26" pos:end="153:41"><name pos:start="153:26" pos:end="153:41"><name pos:start="153:26" pos:end="153:29">feed</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:41">child_argv</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:27"><expr pos:start="155:9" pos:end="155:26"><call pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:15">av_free</name> <argument_list pos:start="155:17" pos:end="155:26">(<argument pos:start="155:18" pos:end="155:25"><expr pos:start="155:18" pos:end="155:25"><name pos:start="155:18" pos:end="155:25">pathname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:17"><expr pos:start="157:9" pos:end="157:16"><call pos:start="157:9" pos:end="157:16"><name pos:start="157:9" pos:end="157:13">_exit</name><argument_list pos:start="157:14" pos:end="157:16">(<argument pos:start="157:15" pos:end="157:15"><expr pos:start="157:15" pos:end="157:15"><literal type="number" pos:start="157:15" pos:end="157:15">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="161:5" pos:end="161:23"><expr pos:start="161:5" pos:end="161:22"><call pos:start="161:5" pos:end="161:22"><name pos:start="161:5" pos:end="161:11">av_free</name> <argument_list pos:start="161:13" pos:end="161:22">(<argument pos:start="161:14" pos:end="161:21"><expr pos:start="161:14" pos:end="161:21"><name pos:start="161:14" pos:end="161:21">pathname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
