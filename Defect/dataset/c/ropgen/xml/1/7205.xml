<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7205.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">av_buffersink_get_frame_flags</name><parameter_list pos:start="1:34" pos:end="1:82">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:49">AVFilterContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:70"><decl pos:start="1:57" pos:end="1:70"><type pos:start="1:57" pos:end="1:70"><name pos:start="1:57" pos:end="1:63">AVFrame</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:70">frame</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:81"><decl pos:start="1:73" pos:end="1:81"><type pos:start="1:73" pos:end="1:81"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:81">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">BufferSinkContext</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">buf</name> <init pos:start="5:28" pos:end="5:38">= <expr pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:38"><name pos:start="5:30" pos:end="5:32">ctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVFilterLink</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:24">inlink</name> <init pos:start="7:26" pos:end="7:41">= <expr pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:41"><name pos:start="7:28" pos:end="7:30">ctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">inputs</name><index pos:start="7:39" pos:end="7:41">[<expr pos:start="7:40" pos:end="7:40"><literal type="number" pos:start="7:40" pos:end="7:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:22">cur_frame</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:60">/* no picref available, fetch it from the filterchain */</comment>

    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:33">(<expr pos:start="17:9" pos:end="17:32"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:32"><name pos:start="17:10" pos:end="17:21">av_fifo_size</name><argument_list pos:start="17:22" pos:end="17:32">(<argument pos:start="17:23" pos:end="17:31"><expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:25">buf</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:35" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:23">

        <if_stmt pos:start="19:9" pos:end="21:35"><if pos:start="19:9" pos:end="21:35">if <condition pos:start="19:12" pos:end="19:50">(<expr pos:start="19:13" pos:end="19:49"><name pos:start="19:13" pos:end="19:17">flags</name> <operator pos:start="19:19" pos:end="19:19">&amp;</operator> <name pos:start="19:21" pos:end="19:49">AV_BUFFERSINK_FLAG_NO_REQUEST</name></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:35"><block_content pos:start="21:13" pos:end="21:35">

            <return pos:start="21:13" pos:end="21:35">return <expr pos:start="21:20" pos:end="21:34"><call pos:start="21:20" pos:end="21:34"><name pos:start="21:20" pos:end="21:26">AVERROR</name><argument_list pos:start="21:27" pos:end="21:34">(<argument pos:start="21:28" pos:end="21:33"><expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:23"><if pos:start="23:9" pos:end="25:23">if <condition pos:start="23:12" pos:end="23:49">(<expr pos:start="23:13" pos:end="23:48"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:16">ret</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:43"><name pos:start="23:20" pos:end="23:35">ff_request_frame</name><argument_list pos:start="23:36" pos:end="23:43">(<argument pos:start="23:37" pos:end="23:42"><expr pos:start="23:37" pos:end="23:42"><name pos:start="23:37" pos:end="23:42">inlink</name></expr></argument>)</argument_list></call><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:46">&lt;</operator> <literal type="number" pos:start="23:48" pos:end="23:48">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:23"><block_content pos:start="25:13" pos:end="25:23">

            <return pos:start="25:13" pos:end="25:23">return <expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:31"><if pos:start="31:5" pos:end="33:31">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><operator pos:start="31:9" pos:end="31:9">!</operator><call pos:start="31:10" pos:end="31:32"><name pos:start="31:10" pos:end="31:21">av_fifo_size</name><argument_list pos:start="31:22" pos:end="31:32">(<argument pos:start="31:23" pos:end="31:31"><expr pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:31"><name pos:start="31:23" pos:end="31:25">buf</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:31">fifo</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:31"><block_content pos:start="33:9" pos:end="33:31">

        <return pos:start="33:9" pos:end="33:31">return <expr pos:start="33:16" pos:end="33:30"><call pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:22">AVERROR</name><argument_list pos:start="33:23" pos:end="33:30">(<argument pos:start="33:24" pos:end="33:29"><expr pos:start="33:24" pos:end="33:29"><name pos:start="33:24" pos:end="33:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="51:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:40">(<expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:13">flags</name> <operator pos:start="37:15" pos:end="37:15">&amp;</operator> <name pos:start="37:17" pos:end="37:39">AV_BUFFERSINK_FLAG_PEEK</name></expr>)</condition> <block pos:start="37:42" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:39">

        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:17">cur_frame</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <operator pos:start="39:21" pos:end="39:21">*</operator><operator pos:start="39:22" pos:end="39:22">(</operator><operator pos:start="39:23" pos:end="39:23">(</operator><name pos:start="39:24" pos:end="39:30">AVFrame</name> <operator pos:start="39:32" pos:end="39:32">*</operator><operator pos:start="39:33" pos:end="39:33">*</operator><operator pos:start="39:34" pos:end="39:34">)</operator><call pos:start="39:35" pos:end="39:61"><name pos:start="39:35" pos:end="39:47">av_fifo_peek2</name><argument_list pos:start="39:48" pos:end="39:61">(<argument pos:start="39:49" pos:end="39:57"><expr pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:57"><name pos:start="39:49" pos:end="39:51">buf</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:57">fifo</name></name></expr></argument>, <argument pos:start="39:60" pos:end="39:60"><expr pos:start="39:60" pos:end="39:60"><literal type="number" pos:start="39:60" pos:end="39:60">0</literal></expr></argument>)</argument_list></call><operator pos:start="39:62" pos:end="39:62">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><call pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:20">av_frame_ref</name><argument_list pos:start="41:21" pos:end="41:38">(<argument pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:26">frame</name></expr></argument>, <argument pos:start="41:29" pos:end="41:37"><expr pos:start="41:29" pos:end="41:37"><name pos:start="41:29" pos:end="41:37">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:41" pos:end="41:64">/* TODO check failure */</comment>

    </block_content>}</block></if> <else pos:start="43:7" pos:end="51:5">else <block pos:start="43:12" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:34">

        <expr_stmt pos:start="45:9" pos:end="45:77"><expr pos:start="45:9" pos:end="45:76"><call pos:start="45:9" pos:end="45:76"><name pos:start="45:9" pos:end="45:28">av_fifo_generic_read</name><argument_list pos:start="45:29" pos:end="45:76">(<argument pos:start="45:30" pos:end="45:38"><expr pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:38"><name pos:start="45:30" pos:end="45:32">buf</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:38">fifo</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:50"><expr pos:start="45:41" pos:end="45:50"><operator pos:start="45:41" pos:end="45:41">&amp;</operator><name pos:start="45:42" pos:end="45:50">cur_frame</name></expr></argument>, <argument pos:start="45:53" pos:end="45:69"><expr pos:start="45:53" pos:end="45:69"><sizeof pos:start="45:53" pos:end="45:69">sizeof<argument_list pos:start="45:59" pos:end="45:69">(<argument pos:start="45:60" pos:end="45:68"><expr pos:start="45:60" pos:end="45:68"><name pos:start="45:60" pos:end="45:68">cur_frame</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:72" pos:end="45:75"><expr pos:start="45:72" pos:end="45:75"><name pos:start="45:72" pos:end="45:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><call pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:25">av_frame_move_ref</name><argument_list pos:start="47:26" pos:end="47:43">(<argument pos:start="47:27" pos:end="47:31"><expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:31">frame</name></expr></argument>, <argument pos:start="47:34" pos:end="47:42"><expr pos:start="47:34" pos:end="47:42"><name pos:start="47:34" pos:end="47:42">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><call pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:21">av_frame_free</name><argument_list pos:start="49:22" pos:end="49:33">(<argument pos:start="49:23" pos:end="49:32"><expr pos:start="49:23" pos:end="49:32"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:32">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
