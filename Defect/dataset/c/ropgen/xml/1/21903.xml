<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21903.c" pos:tabs="8"><function pos:start="1:1" pos:end="74:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SCSIDevice</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">scsi_disk_init</name><parameter_list pos:start="1:27" pos:end="3:70">(<parameter pos:start="1:28" pos:end="1:49"><decl pos:start="1:28" pos:end="1:49"><type pos:start="1:28" pos:end="1:49"><name pos:start="1:28" pos:end="1:43">BlockDriverState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">bdrv</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">tcq</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:55"><decl pos:start="3:28" pos:end="3:55"><type pos:start="3:28" pos:end="3:55"><name pos:start="3:28" pos:end="3:44">scsi_completionfn</name></type> <name pos:start="3:46" pos:end="3:55">completion</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:69"><decl pos:start="3:58" pos:end="3:69"><type pos:start="3:58" pos:end="3:69"><name pos:start="3:58" pos:end="3:61">void</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:69">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="74:1">{<block_content pos:start="7:5" pos:end="72:13">

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">SCSIDevice</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">SCSIDeviceState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name></decl>;</decl_stmt>




    <expr_stmt pos:start="14:5" pos:end="14:65"><expr pos:start="14:5" pos:end="14:64"><name pos:start="14:5" pos:end="14:5">s</name> <operator pos:start="14:7" pos:end="14:7">=</operator> <operator pos:start="14:9" pos:end="14:9">(</operator><name pos:start="14:10" pos:end="14:24">SCSIDeviceState</name> <operator pos:start="14:26" pos:end="14:26">*</operator><operator pos:start="14:27" pos:end="14:27">)</operator><call pos:start="14:28" pos:end="14:64"><name pos:start="14:28" pos:end="14:39">qemu_mallocz</name><argument_list pos:start="14:40" pos:end="14:64">(<argument pos:start="14:41" pos:end="14:63"><expr pos:start="14:41" pos:end="14:63"><sizeof pos:start="14:41" pos:end="14:63">sizeof<argument_list pos:start="14:47" pos:end="14:63">(<argument pos:start="14:48" pos:end="14:62"><expr pos:start="14:48" pos:end="14:62"><name pos:start="14:48" pos:end="14:62">SCSIDeviceState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="16:5" pos:end="16:19"><expr pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:11"><name pos:start="16:5" pos:end="16:5">s</name><operator pos:start="16:6" pos:end="16:7">-&gt;</operator><name pos:start="16:8" pos:end="16:11">bdrv</name></name> <operator pos:start="16:13" pos:end="16:13">=</operator> <name pos:start="16:15" pos:end="16:18">bdrv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="18:5" pos:end="18:17"><expr pos:start="18:5" pos:end="18:16"><name pos:start="18:5" pos:end="18:10"><name pos:start="18:5" pos:end="18:5">s</name><operator pos:start="18:6" pos:end="18:7">-&gt;</operator><name pos:start="18:8" pos:end="18:10">tcq</name></name> <operator pos:start="18:12" pos:end="18:12">=</operator> <name pos:start="18:14" pos:end="18:16">tcq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="20:5" pos:end="20:31"><expr pos:start="20:5" pos:end="20:30"><name pos:start="20:5" pos:end="20:17"><name pos:start="20:5" pos:end="20:5">s</name><operator pos:start="20:6" pos:end="20:7">-&gt;</operator><name pos:start="20:8" pos:end="20:17">completion</name></name> <operator pos:start="20:19" pos:end="20:19">=</operator> <name pos:start="20:21" pos:end="20:30">completion</name></expr>;</expr_stmt>

    <expr_stmt pos:start="22:5" pos:end="22:23"><expr pos:start="22:5" pos:end="22:22"><name pos:start="22:5" pos:end="22:13"><name pos:start="22:5" pos:end="22:5">s</name><operator pos:start="22:6" pos:end="22:7">-&gt;</operator><name pos:start="22:8" pos:end="22:13">opaque</name></name> <operator pos:start="22:15" pos:end="22:15">=</operator> <name pos:start="22:17" pos:end="22:22">opaque</name></expr>;</expr_stmt>

    <if_stmt pos:start="24:5" pos:end="32:5"><if pos:start="24:5" pos:end="28:5">if <condition pos:start="24:8" pos:end="24:55">(<expr pos:start="24:9" pos:end="24:54"><call pos:start="24:9" pos:end="24:35"><name pos:start="24:9" pos:end="24:26">bdrv_get_type_hint</name><argument_list pos:start="24:27" pos:end="24:35">(<argument pos:start="24:28" pos:end="24:34"><expr pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:34"><name pos:start="24:28" pos:end="24:28">s</name><operator pos:start="24:29" pos:end="24:30">-&gt;</operator><name pos:start="24:31" pos:end="24:34">bdrv</name></name></expr></argument>)</argument_list></call> <operator pos:start="24:37" pos:end="24:38">==</operator> <name pos:start="24:40" pos:end="24:54">BDRV_TYPE_CDROM</name></expr>)</condition> <block pos:start="24:57" pos:end="28:5">{<block_content pos:start="26:9" pos:end="26:28">

        <expr_stmt pos:start="26:9" pos:end="26:28"><expr pos:start="26:9" pos:end="26:27"><name pos:start="26:9" pos:end="26:23"><name pos:start="26:9" pos:end="26:9">s</name><operator pos:start="26:10" pos:end="26:11">-&gt;</operator><name pos:start="26:12" pos:end="26:23">cluster_size</name></name> <operator pos:start="26:25" pos:end="26:25">=</operator> <literal type="number" pos:start="26:27" pos:end="26:27">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="28:7" pos:end="32:5">else <block pos:start="28:12" pos:end="32:5">{<block_content pos:start="30:9" pos:end="30:28">

        <expr_stmt pos:start="30:9" pos:end="30:28"><expr pos:start="30:9" pos:end="30:27"><name pos:start="30:9" pos:end="30:23"><name pos:start="30:9" pos:end="30:9">s</name><operator pos:start="30:10" pos:end="30:11">-&gt;</operator><name pos:start="30:12" pos:end="30:23">cluster_size</name></name> <operator pos:start="30:25" pos:end="30:25">=</operator> <literal type="number" pos:start="30:27" pos:end="30:27">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:44"><expr pos:start="34:5" pos:end="34:43"><call pos:start="34:5" pos:end="34:43"><name pos:start="34:5" pos:end="34:21">bdrv_get_geometry</name><argument_list pos:start="34:22" pos:end="34:43">(<argument pos:start="34:23" pos:end="34:29"><expr pos:start="34:23" pos:end="34:29"><name pos:start="34:23" pos:end="34:29"><name pos:start="34:23" pos:end="34:23">s</name><operator pos:start="34:24" pos:end="34:25">-&gt;</operator><name pos:start="34:26" pos:end="34:29">bdrv</name></name></expr></argument>, <argument pos:start="34:32" pos:end="34:42"><expr pos:start="34:32" pos:end="34:42"><operator pos:start="34:32" pos:end="34:32">&amp;</operator><name pos:start="34:33" pos:end="34:42">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="36:5" pos:end="36:34"><expr pos:start="36:5" pos:end="36:33"><name pos:start="36:5" pos:end="36:14">nb_sectors</name> <operator pos:start="36:16" pos:end="36:17">/=</operator> <name pos:start="36:19" pos:end="36:33"><name pos:start="36:19" pos:end="36:19">s</name><operator pos:start="36:20" pos:end="36:21">-&gt;</operator><name pos:start="36:22" pos:end="36:33">cluster_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="38:5" pos:end="40:21"><if pos:start="38:5" pos:end="40:21">if <condition pos:start="38:8" pos:end="38:19">(<expr pos:start="38:9" pos:end="38:18"><name pos:start="38:9" pos:end="38:18">nb_sectors</name></expr>)</condition><block type="pseudo" pos:start="40:9" pos:end="40:21"><block_content pos:start="40:9" pos:end="40:21">

        <expr_stmt pos:start="40:9" pos:end="40:21"><expr pos:start="40:9" pos:end="40:20"><name pos:start="40:9" pos:end="40:18">nb_sectors</name><operator pos:start="40:19" pos:end="40:20">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="42:5" pos:end="42:28"><expr pos:start="42:5" pos:end="42:27"><name pos:start="42:5" pos:end="42:14"><name pos:start="42:5" pos:end="42:5">s</name><operator pos:start="42:6" pos:end="42:7">-&gt;</operator><name pos:start="42:8" pos:end="42:14">max_lba</name></name> <operator pos:start="42:16" pos:end="42:16">=</operator> <name pos:start="42:18" pos:end="42:27">nb_sectors</name></expr>;</expr_stmt>

    <expr_stmt pos:start="44:5" pos:end="46:41"><expr pos:start="44:5" pos:end="46:40"><call pos:start="44:5" pos:end="46:40"><name pos:start="44:5" pos:end="44:11">strncpy</name><argument_list pos:start="44:12" pos:end="46:40">(<argument pos:start="44:13" pos:end="44:31"><expr pos:start="44:13" pos:end="44:31"><name pos:start="44:13" pos:end="44:31"><name pos:start="44:13" pos:end="44:13">s</name><operator pos:start="44:14" pos:end="44:15">-&gt;</operator><name pos:start="44:16" pos:end="44:31">drive_serial_str</name></name></expr></argument>, <argument pos:start="44:34" pos:end="44:58"><expr pos:start="44:34" pos:end="44:58"><call pos:start="44:34" pos:end="44:58"><name pos:start="44:34" pos:end="44:49">drive_get_serial</name><argument_list pos:start="44:50" pos:end="44:58">(<argument pos:start="44:51" pos:end="44:57"><expr pos:start="44:51" pos:end="44:57"><name pos:start="44:51" pos:end="44:57"><name pos:start="44:51" pos:end="44:51">s</name><operator pos:start="44:52" pos:end="44:53">-&gt;</operator><name pos:start="44:54" pos:end="44:57">bdrv</name></name></expr></argument>)</argument_list></call></expr></argument>,

            <argument pos:start="46:13" pos:end="46:39"><expr pos:start="46:13" pos:end="46:39"><sizeof pos:start="46:13" pos:end="46:39">sizeof<argument_list pos:start="46:19" pos:end="46:39">(<argument pos:start="46:20" pos:end="46:38"><expr pos:start="46:20" pos:end="46:38"><name pos:start="46:20" pos:end="46:38"><name pos:start="46:20" pos:end="46:20">s</name><operator pos:start="46:21" pos:end="46:22">-&gt;</operator><name pos:start="46:23" pos:end="46:38">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="48:5" pos:end="50:71"><if pos:start="48:5" pos:end="50:71">if <condition pos:start="48:8" pos:end="48:41">(<expr pos:start="48:9" pos:end="48:40"><call pos:start="48:9" pos:end="48:35"><name pos:start="48:9" pos:end="48:14">strlen</name><argument_list pos:start="48:15" pos:end="48:35">(<argument pos:start="48:16" pos:end="48:34"><expr pos:start="48:16" pos:end="48:34"><name pos:start="48:16" pos:end="48:34"><name pos:start="48:16" pos:end="48:16">s</name><operator pos:start="48:17" pos:end="48:18">-&gt;</operator><name pos:start="48:19" pos:end="48:34">drive_serial_str</name></name></expr></argument>)</argument_list></call> <operator pos:start="48:37" pos:end="48:38">==</operator> <literal type="number" pos:start="48:40" pos:end="48:40">0</literal></expr>)</condition><block type="pseudo" pos:start="50:9" pos:end="50:71"><block_content pos:start="50:9" pos:end="50:71">

        <expr_stmt pos:start="50:9" pos:end="50:71"><expr pos:start="50:9" pos:end="50:70"><call pos:start="50:9" pos:end="50:70"><name pos:start="50:9" pos:end="50:15">pstrcpy</name><argument_list pos:start="50:16" pos:end="50:70">(<argument pos:start="50:17" pos:end="50:35"><expr pos:start="50:17" pos:end="50:35"><name pos:start="50:17" pos:end="50:35"><name pos:start="50:17" pos:end="50:17">s</name><operator pos:start="50:18" pos:end="50:19">-&gt;</operator><name pos:start="50:20" pos:end="50:35">drive_serial_str</name></name></expr></argument>, <argument pos:start="50:38" pos:end="50:64"><expr pos:start="50:38" pos:end="50:64"><sizeof pos:start="50:38" pos:end="50:64">sizeof<argument_list pos:start="50:44" pos:end="50:64">(<argument pos:start="50:45" pos:end="50:63"><expr pos:start="50:45" pos:end="50:63"><name pos:start="50:45" pos:end="50:63"><name pos:start="50:45" pos:end="50:45">s</name><operator pos:start="50:46" pos:end="50:47">-&gt;</operator><name pos:start="50:48" pos:end="50:63">drive_serial_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="50:67" pos:end="50:69"><expr pos:start="50:67" pos:end="50:69"><literal type="string" pos:start="50:67" pos:end="50:69">"0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="52:5" pos:end="52:61"><expr pos:start="52:5" pos:end="52:60"><call pos:start="52:5" pos:end="52:60"><name pos:start="52:5" pos:end="52:36">qemu_add_vm_change_state_handler</name><argument_list pos:start="52:37" pos:end="52:60">(<argument pos:start="52:38" pos:end="52:56"><expr pos:start="52:38" pos:end="52:56"><name pos:start="52:38" pos:end="52:56">scsi_dma_restart_cb</name></expr></argument>, <argument pos:start="52:59" pos:end="52:59"><expr pos:start="52:59" pos:end="52:59"><name pos:start="52:59" pos:end="52:59">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="54:5" pos:end="54:55"><expr pos:start="54:5" pos:end="54:54"><name pos:start="54:5" pos:end="54:5">d</name> <operator pos:start="54:7" pos:end="54:7">=</operator> <operator pos:start="54:9" pos:end="54:9">(</operator><name pos:start="54:10" pos:end="54:19">SCSIDevice</name> <operator pos:start="54:21" pos:end="54:21">*</operator><operator pos:start="54:22" pos:end="54:22">)</operator><call pos:start="54:23" pos:end="54:54"><name pos:start="54:23" pos:end="54:34">qemu_mallocz</name><argument_list pos:start="54:35" pos:end="54:54">(<argument pos:start="54:36" pos:end="54:53"><expr pos:start="54:36" pos:end="54:53"><sizeof pos:start="54:36" pos:end="54:53">sizeof<argument_list pos:start="54:42" pos:end="54:53">(<argument pos:start="54:43" pos:end="54:52"><expr pos:start="54:43" pos:end="54:52"><name pos:start="54:43" pos:end="54:52">SCSIDevice</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="56:5" pos:end="56:17"><expr pos:start="56:5" pos:end="56:16"><name pos:start="56:5" pos:end="56:12"><name pos:start="56:5" pos:end="56:5">d</name><operator pos:start="56:6" pos:end="56:7">-&gt;</operator><name pos:start="56:8" pos:end="56:12">state</name></name> <operator pos:start="56:14" pos:end="56:14">=</operator> <name pos:start="56:16" pos:end="56:16">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="58:5" pos:end="58:30"><expr pos:start="58:5" pos:end="58:29"><name pos:start="58:5" pos:end="58:14"><name pos:start="58:5" pos:end="58:5">d</name><operator pos:start="58:6" pos:end="58:7">-&gt;</operator><name pos:start="58:8" pos:end="58:14">destroy</name></name> <operator pos:start="58:16" pos:end="58:16">=</operator> <name pos:start="58:18" pos:end="58:29">scsi_destroy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="60:5" pos:end="60:40"><expr pos:start="60:5" pos:end="60:39"><name pos:start="60:5" pos:end="60:19"><name pos:start="60:5" pos:end="60:5">d</name><operator pos:start="60:6" pos:end="60:7">-&gt;</operator><name pos:start="60:8" pos:end="60:19">send_command</name></name> <operator pos:start="60:21" pos:end="60:21">=</operator> <name pos:start="60:23" pos:end="60:39">scsi_send_command</name></expr>;</expr_stmt>

    <expr_stmt pos:start="62:5" pos:end="62:34"><expr pos:start="62:5" pos:end="62:33"><name pos:start="62:5" pos:end="62:16"><name pos:start="62:5" pos:end="62:5">d</name><operator pos:start="62:6" pos:end="62:7">-&gt;</operator><name pos:start="62:8" pos:end="62:16">read_data</name></name> <operator pos:start="62:18" pos:end="62:18">=</operator> <name pos:start="62:20" pos:end="62:33">scsi_read_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="64:5" pos:end="64:36"><expr pos:start="64:5" pos:end="64:35"><name pos:start="64:5" pos:end="64:17"><name pos:start="64:5" pos:end="64:5">d</name><operator pos:start="64:6" pos:end="64:7">-&gt;</operator><name pos:start="64:8" pos:end="64:17">write_data</name></name> <operator pos:start="64:19" pos:end="64:19">=</operator> <name pos:start="64:21" pos:end="64:35">scsi_write_data</name></expr>;</expr_stmt>

    <expr_stmt pos:start="66:5" pos:end="66:34"><expr pos:start="66:5" pos:end="66:33"><name pos:start="66:5" pos:end="66:16"><name pos:start="66:5" pos:end="66:5">d</name><operator pos:start="66:6" pos:end="66:7">-&gt;</operator><name pos:start="66:8" pos:end="66:16">cancel_io</name></name> <operator pos:start="66:18" pos:end="66:18">=</operator> <name pos:start="66:20" pos:end="66:33">scsi_cancel_io</name></expr>;</expr_stmt>

    <expr_stmt pos:start="68:5" pos:end="68:30"><expr pos:start="68:5" pos:end="68:29"><name pos:start="68:5" pos:end="68:14"><name pos:start="68:5" pos:end="68:5">d</name><operator pos:start="68:6" pos:end="68:7">-&gt;</operator><name pos:start="68:8" pos:end="68:14">get_buf</name></name> <operator pos:start="68:16" pos:end="68:16">=</operator> <name pos:start="68:18" pos:end="68:29">scsi_get_buf</name></expr>;</expr_stmt>



    <return pos:start="72:5" pos:end="72:13">return <expr pos:start="72:12" pos:end="72:12"><name pos:start="72:12" pos:end="72:12">d</name></expr>;</return>

</block_content>}</block></function></unit>
