<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14462.c" pos:tabs="8"><function pos:start="1:1" pos:end="124:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:31">qmp_migrate_set_parameters</name><parameter_list pos:start="1:32" pos:end="1:74">(<parameter pos:start="1:33" pos:end="1:59"><decl pos:start="1:33" pos:end="1:59"><type pos:start="1:33" pos:end="1:59"><name pos:start="1:33" pos:end="1:51">MigrationParameters</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:59">params</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:66">Error</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:73">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="124:1">{<block_content pos:start="5:5" pos:end="122:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MigrationState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:45">= <expr pos:start="5:25" pos:end="5:45"><call pos:start="5:25" pos:end="5:45"><name pos:start="5:25" pos:end="5:43">migrate_get_current</name><argument_list pos:start="5:44" pos:end="5:45">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="18:5"><if pos:start="9:5" pos:end="18:5">if <condition pos:start="9:8" pos:end="11:67">(<expr pos:start="9:9" pos:end="11:66"><name pos:start="9:9" pos:end="9:34"><name pos:start="9:9" pos:end="9:14">params</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:34">has_compress_level</name></name> <operator pos:start="9:36" pos:end="9:37">&amp;&amp;</operator>

        <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:31"><name pos:start="11:10" pos:end="11:15">params</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:31">compress_level</name></name> <operator pos:start="11:33" pos:end="11:33">&lt;</operator> <literal type="number" pos:start="11:35" pos:end="11:35">0</literal> <operator pos:start="11:37" pos:end="11:38">||</operator> <name pos:start="11:40" pos:end="11:61"><name pos:start="11:40" pos:end="11:45">params</name><operator pos:start="11:46" pos:end="11:47">-&gt;</operator><name pos:start="11:48" pos:end="11:61">compress_level</name></name> <operator pos:start="11:63" pos:end="11:63">&gt;</operator> <literal type="number" pos:start="11:65" pos:end="11:65">9</literal><operator pos:start="11:66" pos:end="11:66">)</operator></expr>)</condition> <block pos:start="11:69" pos:end="18:5">{<block_content pos:start="13:9" pos:end="15:70">

        <expr_stmt pos:start="13:9" pos:end="15:70"><expr pos:start="13:9" pos:end="15:69"><call pos:start="13:9" pos:end="15:69"><name pos:start="13:9" pos:end="13:18">error_setg</name><argument_list pos:start="13:19" pos:end="15:69">(<argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">errp</name></expr></argument>, <argument pos:start="13:26" pos:end="13:53"><expr pos:start="13:26" pos:end="13:53"><name pos:start="13:26" pos:end="13:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="13:56" pos:end="13:71"><expr pos:start="13:56" pos:end="13:71"><literal type="string" pos:start="13:56" pos:end="13:71">"compress_level"</literal></expr></argument>,

                   <argument pos:start="15:20" pos:end="15:68"><expr pos:start="15:20" pos:end="15:68"><literal type="string" pos:start="15:20" pos:end="15:68">"is invalid, it should be in the range of 0 to 9"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="20:5" pos:end="31:5"><if pos:start="20:5" pos:end="31:5">if <condition pos:start="20:8" pos:end="22:73">(<expr pos:start="20:9" pos:end="22:72"><name pos:start="20:9" pos:end="20:36"><name pos:start="20:9" pos:end="20:14">params</name><operator pos:start="20:15" pos:end="20:16">-&gt;</operator><name pos:start="20:17" pos:end="20:36">has_compress_threads</name></name> <operator pos:start="20:38" pos:end="20:39">&amp;&amp;</operator>

        <operator pos:start="22:9" pos:end="22:9">(</operator><name pos:start="22:10" pos:end="22:33"><name pos:start="22:10" pos:end="22:15">params</name><operator pos:start="22:16" pos:end="22:17">-&gt;</operator><name pos:start="22:18" pos:end="22:33">compress_threads</name></name> <operator pos:start="22:35" pos:end="22:35">&lt;</operator> <literal type="number" pos:start="22:37" pos:end="22:37">1</literal> <operator pos:start="22:39" pos:end="22:40">||</operator> <name pos:start="22:42" pos:end="22:65"><name pos:start="22:42" pos:end="22:47">params</name><operator pos:start="22:48" pos:end="22:49">-&gt;</operator><name pos:start="22:50" pos:end="22:65">compress_threads</name></name> <operator pos:start="22:67" pos:end="22:67">&gt;</operator> <literal type="number" pos:start="22:69" pos:end="22:71">255</literal><operator pos:start="22:72" pos:end="22:72">)</operator></expr>)</condition> <block pos:start="22:75" pos:end="31:5">{<block_content pos:start="24:9" pos:end="28:72">

        <expr_stmt pos:start="24:9" pos:end="28:72"><expr pos:start="24:9" pos:end="28:71"><call pos:start="24:9" pos:end="28:71"><name pos:start="24:9" pos:end="24:18">error_setg</name><argument_list pos:start="24:19" pos:end="28:71">(<argument pos:start="24:20" pos:end="24:23"><expr pos:start="24:20" pos:end="24:23"><name pos:start="24:20" pos:end="24:23">errp</name></expr></argument>, <argument pos:start="24:26" pos:end="24:53"><expr pos:start="24:26" pos:end="24:53"><name pos:start="24:26" pos:end="24:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="26:20" pos:end="26:37"><expr pos:start="26:20" pos:end="26:37"><literal type="string" pos:start="26:20" pos:end="26:37">"compress_threads"</literal></expr></argument>,

                   <argument pos:start="28:20" pos:end="28:70"><expr pos:start="28:20" pos:end="28:70"><literal type="string" pos:start="28:20" pos:end="28:70">"is invalid, it should be in the range of 1 to 255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="44:5"><if pos:start="33:5" pos:end="44:5">if <condition pos:start="33:8" pos:end="35:77">(<expr pos:start="33:9" pos:end="35:76"><name pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:14">params</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:38">has_decompress_threads</name></name> <operator pos:start="33:40" pos:end="33:41">&amp;&amp;</operator>

        <operator pos:start="35:9" pos:end="35:9">(</operator><name pos:start="35:10" pos:end="35:35"><name pos:start="35:10" pos:end="35:15">params</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:35">decompress_threads</name></name> <operator pos:start="35:37" pos:end="35:37">&lt;</operator> <literal type="number" pos:start="35:39" pos:end="35:39">1</literal> <operator pos:start="35:41" pos:end="35:42">||</operator> <name pos:start="35:44" pos:end="35:69"><name pos:start="35:44" pos:end="35:49">params</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:69">decompress_threads</name></name> <operator pos:start="35:71" pos:end="35:71">&gt;</operator> <literal type="number" pos:start="35:73" pos:end="35:75">255</literal><operator pos:start="35:76" pos:end="35:76">)</operator></expr>)</condition> <block pos:start="35:79" pos:end="44:5">{<block_content pos:start="37:9" pos:end="41:72">

        <expr_stmt pos:start="37:9" pos:end="41:72"><expr pos:start="37:9" pos:end="41:71"><call pos:start="37:9" pos:end="41:71"><name pos:start="37:9" pos:end="37:18">error_setg</name><argument_list pos:start="37:19" pos:end="41:71">(<argument pos:start="37:20" pos:end="37:23"><expr pos:start="37:20" pos:end="37:23"><name pos:start="37:20" pos:end="37:23">errp</name></expr></argument>, <argument pos:start="37:26" pos:end="37:53"><expr pos:start="37:26" pos:end="37:53"><name pos:start="37:26" pos:end="37:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="39:20" pos:end="39:39"><expr pos:start="39:20" pos:end="39:39"><literal type="string" pos:start="39:20" pos:end="39:39">"decompress_threads"</literal></expr></argument>,

                   <argument pos:start="41:20" pos:end="41:70"><expr pos:start="41:20" pos:end="41:70"><literal type="string" pos:start="41:20" pos:end="41:70">"is invalid, it should be in the range of 1 to 255"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="46:5" pos:end="59:5"><if pos:start="46:5" pos:end="59:5">if <condition pos:start="46:8" pos:end="50:44">(<expr pos:start="46:9" pos:end="50:43"><name pos:start="46:9" pos:end="46:40"><name pos:start="46:9" pos:end="46:14">params</name><operator pos:start="46:15" pos:end="46:16">-&gt;</operator><name pos:start="46:17" pos:end="46:40">has_cpu_throttle_initial</name></name> <operator pos:start="46:42" pos:end="46:43">&amp;&amp;</operator>

        <operator pos:start="48:9" pos:end="48:9">(</operator><name pos:start="48:10" pos:end="48:37"><name pos:start="48:10" pos:end="48:15">params</name><operator pos:start="48:16" pos:end="48:17">-&gt;</operator><name pos:start="48:18" pos:end="48:37">cpu_throttle_initial</name></name> <operator pos:start="48:39" pos:end="48:39">&lt;</operator> <literal type="number" pos:start="48:41" pos:end="48:41">1</literal> <operator pos:start="48:43" pos:end="48:44">||</operator>

         <name pos:start="50:10" pos:end="50:37"><name pos:start="50:10" pos:end="50:15">params</name><operator pos:start="50:16" pos:end="50:17">-&gt;</operator><name pos:start="50:18" pos:end="50:37">cpu_throttle_initial</name></name> <operator pos:start="50:39" pos:end="50:39">&gt;</operator> <literal type="number" pos:start="50:41" pos:end="50:42">99</literal><operator pos:start="50:43" pos:end="50:43">)</operator></expr>)</condition> <block pos:start="50:46" pos:end="59:5">{<block_content pos:start="52:9" pos:end="56:57">

        <expr_stmt pos:start="52:9" pos:end="56:57"><expr pos:start="52:9" pos:end="56:56"><call pos:start="52:9" pos:end="56:56"><name pos:start="52:9" pos:end="52:18">error_setg</name><argument_list pos:start="52:19" pos:end="56:56">(<argument pos:start="52:20" pos:end="52:23"><expr pos:start="52:20" pos:end="52:23"><name pos:start="52:20" pos:end="52:23">errp</name></expr></argument>, <argument pos:start="52:26" pos:end="52:53"><expr pos:start="52:26" pos:end="52:53"><name pos:start="52:26" pos:end="52:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="54:20" pos:end="54:41"><expr pos:start="54:20" pos:end="54:41"><literal type="string" pos:start="54:20" pos:end="54:41">"cpu_throttle_initial"</literal></expr></argument>,

                   <argument pos:start="56:20" pos:end="56:55"><expr pos:start="56:20" pos:end="56:55"><literal type="string" pos:start="56:20" pos:end="56:55">"an integer in the range of 1 to 99"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="74:5"><if pos:start="61:5" pos:end="74:5">if <condition pos:start="61:8" pos:end="65:46">(<expr pos:start="61:9" pos:end="65:45"><name pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:14">params</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:42">has_cpu_throttle_increment</name></name> <operator pos:start="61:44" pos:end="61:45">&amp;&amp;</operator>

        <operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:39"><name pos:start="63:10" pos:end="63:15">params</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:39">cpu_throttle_increment</name></name> <operator pos:start="63:41" pos:end="63:41">&lt;</operator> <literal type="number" pos:start="63:43" pos:end="63:43">1</literal> <operator pos:start="63:45" pos:end="63:46">||</operator>

         <name pos:start="65:10" pos:end="65:39"><name pos:start="65:10" pos:end="65:15">params</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:39">cpu_throttle_increment</name></name> <operator pos:start="65:41" pos:end="65:41">&gt;</operator> <literal type="number" pos:start="65:43" pos:end="65:44">99</literal><operator pos:start="65:45" pos:end="65:45">)</operator></expr>)</condition> <block pos:start="65:48" pos:end="74:5">{<block_content pos:start="67:9" pos:end="71:57">

        <expr_stmt pos:start="67:9" pos:end="71:57"><expr pos:start="67:9" pos:end="71:56"><call pos:start="67:9" pos:end="71:56"><name pos:start="67:9" pos:end="67:18">error_setg</name><argument_list pos:start="67:19" pos:end="71:56">(<argument pos:start="67:20" pos:end="67:23"><expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">errp</name></expr></argument>, <argument pos:start="67:26" pos:end="67:53"><expr pos:start="67:26" pos:end="67:53"><name pos:start="67:26" pos:end="67:53">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>,

                   <argument pos:start="69:20" pos:end="69:43"><expr pos:start="69:20" pos:end="69:43"><literal type="string" pos:start="69:20" pos:end="69:43">"cpu_throttle_increment"</literal></expr></argument>,

                   <argument pos:start="71:20" pos:end="71:55"><expr pos:start="71:20" pos:end="71:55"><literal type="string" pos:start="71:20" pos:end="71:55">"an integer in the range of 1 to 99"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="78:5" pos:end="82:5"><if pos:start="78:5" pos:end="82:5">if <condition pos:start="78:8" pos:end="78:35">(<expr pos:start="78:9" pos:end="78:34"><name pos:start="78:9" pos:end="78:34"><name pos:start="78:9" pos:end="78:14">params</name><operator pos:start="78:15" pos:end="78:16">-&gt;</operator><name pos:start="78:17" pos:end="78:34">has_compress_level</name></name></expr>)</condition> <block pos:start="78:37" pos:end="82:5">{<block_content pos:start="80:9" pos:end="80:62">

        <expr_stmt pos:start="80:9" pos:end="80:62"><expr pos:start="80:9" pos:end="80:61"><name pos:start="80:9" pos:end="80:36"><name pos:start="80:9" pos:end="80:9">s</name><operator pos:start="80:10" pos:end="80:11">-&gt;</operator><name pos:start="80:12" pos:end="80:21">parameters</name><operator pos:start="80:22" pos:end="80:22">.</operator><name pos:start="80:23" pos:end="80:36">compress_level</name></name> <operator pos:start="80:38" pos:end="80:38">=</operator> <name pos:start="80:40" pos:end="80:61"><name pos:start="80:40" pos:end="80:45">params</name><operator pos:start="80:46" pos:end="80:47">-&gt;</operator><name pos:start="80:48" pos:end="80:61">compress_level</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="84:5" pos:end="88:5"><if pos:start="84:5" pos:end="88:5">if <condition pos:start="84:8" pos:end="84:37">(<expr pos:start="84:9" pos:end="84:36"><name pos:start="84:9" pos:end="84:36"><name pos:start="84:9" pos:end="84:14">params</name><operator pos:start="84:15" pos:end="84:16">-&gt;</operator><name pos:start="84:17" pos:end="84:36">has_compress_threads</name></name></expr>)</condition> <block pos:start="84:39" pos:end="88:5">{<block_content pos:start="86:9" pos:end="86:66">

        <expr_stmt pos:start="86:9" pos:end="86:66"><expr pos:start="86:9" pos:end="86:65"><name pos:start="86:9" pos:end="86:38"><name pos:start="86:9" pos:end="86:9">s</name><operator pos:start="86:10" pos:end="86:11">-&gt;</operator><name pos:start="86:12" pos:end="86:21">parameters</name><operator pos:start="86:22" pos:end="86:22">.</operator><name pos:start="86:23" pos:end="86:38">compress_threads</name></name> <operator pos:start="86:40" pos:end="86:40">=</operator> <name pos:start="86:42" pos:end="86:65"><name pos:start="86:42" pos:end="86:47">params</name><operator pos:start="86:48" pos:end="86:49">-&gt;</operator><name pos:start="86:50" pos:end="86:65">compress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="90:5" pos:end="94:5"><if pos:start="90:5" pos:end="94:5">if <condition pos:start="90:8" pos:end="90:39">(<expr pos:start="90:9" pos:end="90:38"><name pos:start="90:9" pos:end="90:38"><name pos:start="90:9" pos:end="90:14">params</name><operator pos:start="90:15" pos:end="90:16">-&gt;</operator><name pos:start="90:17" pos:end="90:38">has_decompress_threads</name></name></expr>)</condition> <block pos:start="90:41" pos:end="94:5">{<block_content pos:start="92:9" pos:end="92:70">

        <expr_stmt pos:start="92:9" pos:end="92:70"><expr pos:start="92:9" pos:end="92:69"><name pos:start="92:9" pos:end="92:40"><name pos:start="92:9" pos:end="92:9">s</name><operator pos:start="92:10" pos:end="92:11">-&gt;</operator><name pos:start="92:12" pos:end="92:21">parameters</name><operator pos:start="92:22" pos:end="92:22">.</operator><name pos:start="92:23" pos:end="92:40">decompress_threads</name></name> <operator pos:start="92:42" pos:end="92:42">=</operator> <name pos:start="92:44" pos:end="92:69"><name pos:start="92:44" pos:end="92:49">params</name><operator pos:start="92:50" pos:end="92:51">-&gt;</operator><name pos:start="92:52" pos:end="92:69">decompress_threads</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="96:5" pos:end="100:5"><if pos:start="96:5" pos:end="100:5">if <condition pos:start="96:8" pos:end="96:41">(<expr pos:start="96:9" pos:end="96:40"><name pos:start="96:9" pos:end="96:40"><name pos:start="96:9" pos:end="96:14">params</name><operator pos:start="96:15" pos:end="96:16">-&gt;</operator><name pos:start="96:17" pos:end="96:40">has_cpu_throttle_initial</name></name></expr>)</condition> <block pos:start="96:43" pos:end="100:5">{<block_content pos:start="98:9" pos:end="98:74">

        <expr_stmt pos:start="98:9" pos:end="98:74"><expr pos:start="98:9" pos:end="98:73"><name pos:start="98:9" pos:end="98:42"><name pos:start="98:9" pos:end="98:9">s</name><operator pos:start="98:10" pos:end="98:11">-&gt;</operator><name pos:start="98:12" pos:end="98:21">parameters</name><operator pos:start="98:22" pos:end="98:22">.</operator><name pos:start="98:23" pos:end="98:42">cpu_throttle_initial</name></name> <operator pos:start="98:44" pos:end="98:44">=</operator> <name pos:start="98:46" pos:end="98:73"><name pos:start="98:46" pos:end="98:51">params</name><operator pos:start="98:52" pos:end="98:53">-&gt;</operator><name pos:start="98:54" pos:end="98:73">cpu_throttle_initial</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="102:5" pos:end="106:5"><if pos:start="102:5" pos:end="106:5">if <condition pos:start="102:8" pos:end="102:43">(<expr pos:start="102:9" pos:end="102:42"><name pos:start="102:9" pos:end="102:42"><name pos:start="102:9" pos:end="102:14">params</name><operator pos:start="102:15" pos:end="102:16">-&gt;</operator><name pos:start="102:17" pos:end="102:42">has_cpu_throttle_increment</name></name></expr>)</condition> <block pos:start="102:45" pos:end="106:5">{<block_content pos:start="104:9" pos:end="104:78">

        <expr_stmt pos:start="104:9" pos:end="104:78"><expr pos:start="104:9" pos:end="104:77"><name pos:start="104:9" pos:end="104:44"><name pos:start="104:9" pos:end="104:9">s</name><operator pos:start="104:10" pos:end="104:11">-&gt;</operator><name pos:start="104:12" pos:end="104:21">parameters</name><operator pos:start="104:22" pos:end="104:22">.</operator><name pos:start="104:23" pos:end="104:44">cpu_throttle_increment</name></name> <operator pos:start="104:46" pos:end="104:46">=</operator> <name pos:start="104:48" pos:end="104:77"><name pos:start="104:48" pos:end="104:53">params</name><operator pos:start="104:54" pos:end="104:55">-&gt;</operator><name pos:start="104:56" pos:end="104:77">cpu_throttle_increment</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="108:5" pos:end="114:5"><if pos:start="108:5" pos:end="114:5">if <condition pos:start="108:8" pos:end="108:30">(<expr pos:start="108:9" pos:end="108:29"><name pos:start="108:9" pos:end="108:29"><name pos:start="108:9" pos:end="108:14">params</name><operator pos:start="108:15" pos:end="108:16">-&gt;</operator><name pos:start="108:17" pos:end="108:29">has_tls_creds</name></name></expr>)</condition> <block pos:start="108:32" pos:end="114:5">{<block_content pos:start="110:9" pos:end="112:62">

        <expr_stmt pos:start="110:9" pos:end="110:40"><expr pos:start="110:9" pos:end="110:39"><call pos:start="110:9" pos:end="110:39"><name pos:start="110:9" pos:end="110:14">g_free</name><argument_list pos:start="110:15" pos:end="110:39">(<argument pos:start="110:16" pos:end="110:38"><expr pos:start="110:16" pos:end="110:38"><name pos:start="110:16" pos:end="110:38"><name pos:start="110:16" pos:end="110:16">s</name><operator pos:start="110:17" pos:end="110:18">-&gt;</operator><name pos:start="110:19" pos:end="110:28">parameters</name><operator pos:start="110:29" pos:end="110:29">.</operator><name pos:start="110:30" pos:end="110:38">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="112:9" pos:end="112:62"><expr pos:start="112:9" pos:end="112:61"><name pos:start="112:9" pos:end="112:31"><name pos:start="112:9" pos:end="112:9">s</name><operator pos:start="112:10" pos:end="112:11">-&gt;</operator><name pos:start="112:12" pos:end="112:21">parameters</name><operator pos:start="112:22" pos:end="112:22">.</operator><name pos:start="112:23" pos:end="112:31">tls_creds</name></name> <operator pos:start="112:33" pos:end="112:33">=</operator> <call pos:start="112:35" pos:end="112:61"><name pos:start="112:35" pos:end="112:42">g_strdup</name><argument_list pos:start="112:43" pos:end="112:61">(<argument pos:start="112:44" pos:end="112:60"><expr pos:start="112:44" pos:end="112:60"><name pos:start="112:44" pos:end="112:60"><name pos:start="112:44" pos:end="112:49">params</name><operator pos:start="112:50" pos:end="112:51">-&gt;</operator><name pos:start="112:52" pos:end="112:60">tls_creds</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="116:5" pos:end="122:5"><if pos:start="116:5" pos:end="122:5">if <condition pos:start="116:8" pos:end="116:33">(<expr pos:start="116:9" pos:end="116:32"><name pos:start="116:9" pos:end="116:32"><name pos:start="116:9" pos:end="116:14">params</name><operator pos:start="116:15" pos:end="116:16">-&gt;</operator><name pos:start="116:17" pos:end="116:32">has_tls_hostname</name></name></expr>)</condition> <block pos:start="116:35" pos:end="122:5">{<block_content pos:start="118:9" pos:end="120:68">

        <expr_stmt pos:start="118:9" pos:end="118:43"><expr pos:start="118:9" pos:end="118:42"><call pos:start="118:9" pos:end="118:42"><name pos:start="118:9" pos:end="118:14">g_free</name><argument_list pos:start="118:15" pos:end="118:42">(<argument pos:start="118:16" pos:end="118:41"><expr pos:start="118:16" pos:end="118:41"><name pos:start="118:16" pos:end="118:41"><name pos:start="118:16" pos:end="118:16">s</name><operator pos:start="118:17" pos:end="118:18">-&gt;</operator><name pos:start="118:19" pos:end="118:28">parameters</name><operator pos:start="118:29" pos:end="118:29">.</operator><name pos:start="118:30" pos:end="118:41">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:68"><expr pos:start="120:9" pos:end="120:67"><name pos:start="120:9" pos:end="120:34"><name pos:start="120:9" pos:end="120:9">s</name><operator pos:start="120:10" pos:end="120:11">-&gt;</operator><name pos:start="120:12" pos:end="120:21">parameters</name><operator pos:start="120:22" pos:end="120:22">.</operator><name pos:start="120:23" pos:end="120:34">tls_hostname</name></name> <operator pos:start="120:36" pos:end="120:36">=</operator> <call pos:start="120:38" pos:end="120:67"><name pos:start="120:38" pos:end="120:45">g_strdup</name><argument_list pos:start="120:46" pos:end="120:67">(<argument pos:start="120:47" pos:end="120:66"><expr pos:start="120:47" pos:end="120:66"><name pos:start="120:47" pos:end="120:66"><name pos:start="120:47" pos:end="120:52">params</name><operator pos:start="120:53" pos:end="120:54">-&gt;</operator><name pos:start="120:55" pos:end="120:66">tls_hostname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
