<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21645.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">decode_p_frame</name><parameter_list pos:start="1:26" pos:end="1:74">(<parameter pos:start="1:27" pos:end="1:41"><decl pos:start="1:27" pos:end="1:41"><type pos:start="1:27" pos:end="1:41"><name pos:start="1:27" pos:end="1:38">FourXContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">f</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">buf</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:73"><decl pos:start="1:64" pos:end="1:73"><type pos:start="1:64" pos:end="1:73"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:73">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:13">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">x</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">width</name>  <init pos:start="7:22" pos:end="7:38">= <expr pos:start="7:24" pos:end="7:38"><name pos:start="7:24" pos:end="7:38"><name pos:start="7:24" pos:end="7:24">f</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:38">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:20">height</name> <init pos:start="9:22" pos:end="9:39">= <expr pos:start="9:24" pos:end="9:39"><name pos:start="9:24" pos:end="9:39"><name pos:start="9:24" pos:end="9:24">f</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:31">avctx</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:39">height</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:59"><decl pos:start="11:5" pos:end="11:58"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">src</name>    <init pos:start="11:22" pos:end="11:58">= <expr pos:start="11:24" pos:end="11:58"><operator pos:start="11:24" pos:end="11:24">(</operator><name pos:start="11:25" pos:end="11:32">uint16_t</name> <operator pos:start="11:34" pos:end="11:34">*</operator><operator pos:start="11:35" pos:end="11:35">)</operator><name pos:start="11:36" pos:end="11:58"><name pos:start="11:36" pos:end="11:36">f</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:50">last_picture</name><operator pos:start="11:51" pos:end="11:51">.</operator><name pos:start="11:52" pos:end="11:55">data</name><index pos:start="11:56" pos:end="11:58">[<expr pos:start="11:57" pos:end="11:57"><literal type="number" pos:start="11:57" pos:end="11:57">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:62"><decl pos:start="13:5" pos:end="13:61"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint16_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">dst</name>    <init pos:start="13:22" pos:end="13:61">= <expr pos:start="13:24" pos:end="13:61"><operator pos:start="13:24" pos:end="13:24">(</operator><name pos:start="13:25" pos:end="13:32">uint16_t</name> <operator pos:start="13:34" pos:end="13:34">*</operator><operator pos:start="13:35" pos:end="13:35">)</operator><name pos:start="13:36" pos:end="13:61"><name pos:start="13:36" pos:end="13:36">f</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:53">current_picture</name><operator pos:start="13:54" pos:end="13:54">.</operator><name pos:start="13:55" pos:end="13:58">data</name><index pos:start="13:59" pos:end="13:61">[<expr pos:start="13:60" pos:end="13:60"><literal type="number" pos:start="13:60" pos:end="13:60">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:71"><decl pos:start="15:5" pos:end="15:70"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:20">stride</name> <init pos:start="15:22" pos:end="15:70">=             <expr pos:start="15:36" pos:end="15:70"><name pos:start="15:36" pos:end="15:65"><name pos:start="15:36" pos:end="15:36">f</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:53">current_picture</name><operator pos:start="15:54" pos:end="15:54">.</operator><name pos:start="15:55" pos:end="15:62">linesize</name><index pos:start="15:63" pos:end="15:65">[<expr pos:start="15:64" pos:end="15:64"><literal type="number" pos:start="15:64" pos:end="15:64">0</literal></expr>]</index></name> <operator pos:start="15:67" pos:end="15:68">&gt;&gt;</operator> <literal type="number" pos:start="15:70" pos:end="15:70">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="19:54"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:31">bitstream_size</name></decl>, <decl pos:start="17:34" pos:end="17:48"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:34" pos:end="17:48">bytestream_size</name></decl>, <decl pos:start="17:51" pos:end="17:65"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:51" pos:end="17:65">wordstream_size</name></decl>, <decl pos:start="17:68" pos:end="17:72"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:68" pos:end="17:72">extra</name></decl>,

                 <decl pos:start="19:18" pos:end="19:34"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="19:18" pos:end="19:34">bytestream_offset</name></decl>, <decl pos:start="19:37" pos:end="19:53"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="19:37" pos:end="19:53">wordstream_offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="47:5"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">f</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">version</name></name> <operator pos:start="23:20" pos:end="23:20">&gt;</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>)</condition> <block pos:start="23:25" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:44">

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:13">extra</name>           <operator pos:start="25:25" pos:end="25:25">=</operator> <literal type="number" pos:start="25:27" pos:end="25:28">20</literal></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:22"><if pos:start="27:9" pos:end="29:22">if <condition pos:start="27:12" pos:end="27:27">(<expr pos:start="27:13" pos:end="27:26"><name pos:start="27:13" pos:end="27:18">length</name> <operator pos:start="27:20" pos:end="27:20">&lt;</operator> <name pos:start="27:22" pos:end="27:26">extra</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:22"><block_content pos:start="29:13" pos:end="29:22">

            <return pos:start="29:13" pos:end="29:22">return <expr pos:start="29:20" pos:end="29:21"><operator pos:start="29:20" pos:end="29:20">-</operator><literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:43"><expr pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:22">bitstream_size</name>  <operator pos:start="31:25" pos:end="31:25">=</operator> <call pos:start="31:27" pos:end="31:42"><name pos:start="31:27" pos:end="31:33">AV_RL32</name><argument_list pos:start="31:34" pos:end="31:42">(<argument pos:start="31:35" pos:end="31:41"><expr pos:start="31:35" pos:end="31:41"><name pos:start="31:35" pos:end="31:37">buf</name> <operator pos:start="31:39" pos:end="31:39">+</operator> <literal type="number" pos:start="31:41" pos:end="31:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:44"><expr pos:start="33:9" pos:end="33:43"><name pos:start="33:9" pos:end="33:23">wordstream_size</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:43"><name pos:start="33:27" pos:end="33:33">AV_RL32</name><argument_list pos:start="33:34" pos:end="33:43">(<argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><name pos:start="33:35" pos:end="33:37">buf</name> <operator pos:start="33:39" pos:end="33:39">+</operator> <literal type="number" pos:start="33:41" pos:end="33:42">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:23">bytestream_size</name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:43"><name pos:start="35:27" pos:end="35:33">AV_RL32</name><argument_list pos:start="35:34" pos:end="35:43">(<argument pos:start="35:35" pos:end="35:42"><expr pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:37">buf</name> <operator pos:start="35:39" pos:end="35:39">+</operator> <literal type="number" pos:start="35:41" pos:end="35:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="47:5">else <block pos:start="37:12" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:78">

        <expr_stmt pos:start="39:9" pos:end="39:28"><expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:13">extra</name>           <operator pos:start="39:25" pos:end="39:25">=</operator> <literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:43"><expr pos:start="41:9" pos:end="41:42"><name pos:start="41:9" pos:end="41:22">bitstream_size</name>  <operator pos:start="41:25" pos:end="41:25">=</operator> <call pos:start="41:27" pos:end="41:42"><name pos:start="41:27" pos:end="41:33">AV_RL16</name><argument_list pos:start="41:34" pos:end="41:42">(<argument pos:start="41:35" pos:end="41:41"><expr pos:start="41:35" pos:end="41:41"><name pos:start="41:35" pos:end="41:37">buf</name> <operator pos:start="41:39" pos:end="41:39">-</operator> <literal type="number" pos:start="41:41" pos:end="41:41">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:43"><expr pos:start="43:9" pos:end="43:42"><name pos:start="43:9" pos:end="43:23">wordstream_size</name> <operator pos:start="43:25" pos:end="43:25">=</operator> <call pos:start="43:27" pos:end="43:42"><name pos:start="43:27" pos:end="43:33">AV_RL16</name><argument_list pos:start="43:34" pos:end="43:42">(<argument pos:start="43:35" pos:end="43:41"><expr pos:start="43:35" pos:end="43:41"><name pos:start="43:35" pos:end="43:37">buf</name> <operator pos:start="43:39" pos:end="43:39">-</operator> <literal type="number" pos:start="43:41" pos:end="43:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:78"><expr pos:start="45:9" pos:end="45:77"><name pos:start="45:9" pos:end="45:23">bytestream_size</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <call pos:start="45:27" pos:end="45:77"><name pos:start="45:27" pos:end="45:31">FFMAX</name><argument_list pos:start="45:32" pos:end="45:77">(<argument pos:start="45:33" pos:end="45:73"><expr pos:start="45:33" pos:end="45:73"><name pos:start="45:33" pos:end="45:38">length</name> <operator pos:start="45:40" pos:end="45:40">-</operator> <name pos:start="45:42" pos:end="45:55">bitstream_size</name> <operator pos:start="45:57" pos:end="45:57">-</operator> <name pos:start="45:59" pos:end="45:73">wordstream_size</name></expr></argument>, <argument pos:start="45:76" pos:end="45:76"><expr pos:start="45:76" pos:end="45:76"><literal type="number" pos:start="45:76" pos:end="45:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="57:76">(<expr pos:start="51:9" pos:end="57:75"><name pos:start="51:9" pos:end="51:22">bitstream_size</name> <operator pos:start="51:24" pos:end="51:24">&gt;</operator> <name pos:start="51:26" pos:end="51:31">length</name> <operator pos:start="51:33" pos:end="51:34">||</operator>

        <name pos:start="53:9" pos:end="53:23">bytestream_size</name> <operator pos:start="53:25" pos:end="53:25">&gt;</operator> <name pos:start="53:27" pos:end="53:32">length</name> <operator pos:start="53:34" pos:end="53:34">-</operator> <name pos:start="53:36" pos:end="53:49">bitstream_size</name> <operator pos:start="53:51" pos:end="53:52">||</operator>

        <name pos:start="55:9" pos:end="55:23">wordstream_size</name> <operator pos:start="55:25" pos:end="55:25">&gt;</operator> <name pos:start="55:27" pos:end="55:32">length</name> <operator pos:start="55:34" pos:end="55:34">-</operator> <name pos:start="55:36" pos:end="55:50">bytestream_size</name> <operator pos:start="55:52" pos:end="55:52">-</operator> <name pos:start="55:54" pos:end="55:67">bitstream_size</name> <operator pos:start="55:69" pos:end="55:70">||</operator>

        <name pos:start="57:9" pos:end="57:13">extra</name> <operator pos:start="57:15" pos:end="57:15">&gt;</operator> <name pos:start="57:17" pos:end="57:22">length</name> <operator pos:start="57:24" pos:end="57:24">-</operator> <name pos:start="57:26" pos:end="57:40">bytestream_size</name> <operator pos:start="57:42" pos:end="57:42">-</operator> <name pos:start="57:44" pos:end="57:57">bitstream_size</name> <operator pos:start="57:59" pos:end="57:59">-</operator> <name pos:start="57:61" pos:end="57:75">wordstream_size</name></expr>)</condition> <block pos:start="57:78" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:18">

        <expr_stmt pos:start="59:9" pos:end="61:67"><expr pos:start="59:9" pos:end="61:66"><call pos:start="59:9" pos:end="61:66"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="61:66">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">f</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:62"><expr pos:start="59:40" pos:end="59:62"><literal type="string" pos:start="59:40" pos:end="59:62">"lengths %d %d %d %d\n"</literal></expr></argument>, <argument pos:start="59:65" pos:end="59:78"><expr pos:start="59:65" pos:end="59:78"><name pos:start="59:65" pos:end="59:78">bitstream_size</name></expr></argument>, <argument pos:start="59:81" pos:end="59:95"><expr pos:start="59:81" pos:end="59:95"><name pos:start="59:81" pos:end="59:95">bytestream_size</name></expr></argument>, <argument pos:start="59:98" pos:end="59:112"><expr pos:start="59:98" pos:end="59:112"><name pos:start="59:98" pos:end="59:112">wordstream_size</name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:65"><expr pos:start="61:9" pos:end="61:65"><name pos:start="61:9" pos:end="61:22">bitstream_size</name><operator pos:start="61:23" pos:end="61:23">+</operator> <name pos:start="61:25" pos:end="61:39">bytestream_size</name><operator pos:start="61:40" pos:end="61:40">+</operator> <name pos:start="61:42" pos:end="61:56">wordstream_size</name> <operator pos:start="61:58" pos:end="61:58">-</operator> <name pos:start="61:60" pos:end="61:65">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="71:66"><expr pos:start="69:5" pos:end="71:65"><call pos:start="69:5" pos:end="71:65"><name pos:start="69:5" pos:end="69:18">av_fast_malloc</name><argument_list pos:start="69:19" pos:end="71:65">(<argument pos:start="69:20" pos:end="69:39"><expr pos:start="69:20" pos:end="69:39"><operator pos:start="69:20" pos:end="69:20">&amp;</operator><name pos:start="69:21" pos:end="69:39"><name pos:start="69:21" pos:end="69:21">f</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:39">bitstream_buffer</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:66"><expr pos:start="69:42" pos:end="69:66"><operator pos:start="69:42" pos:end="69:42">&amp;</operator><name pos:start="69:43" pos:end="69:66"><name pos:start="69:43" pos:end="69:43">f</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:66">bitstream_buffer_size</name></name></expr></argument>,

                   <argument pos:start="71:20" pos:end="71:64"><expr pos:start="71:20" pos:end="71:64"><name pos:start="71:20" pos:end="71:33">bitstream_size</name> <operator pos:start="71:35" pos:end="71:35">+</operator> <name pos:start="71:37" pos:end="71:64">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="73:5" pos:end="75:31"><if pos:start="73:5" pos:end="75:31">if <condition pos:start="73:8" pos:end="73:29">(<expr pos:start="73:9" pos:end="73:28"><operator pos:start="73:9" pos:end="73:9">!</operator><name pos:start="73:10" pos:end="73:28"><name pos:start="73:10" pos:end="73:10">f</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:28">bitstream_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:31"><block_content pos:start="75:9" pos:end="75:31">

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="79:41"><expr pos:start="77:5" pos:end="79:40"><call pos:start="77:5" pos:end="79:40"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:5">f</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:10">dsp</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:20">bswap_buf</name></name><argument_list pos:start="77:21" pos:end="79:40">(<argument pos:start="77:22" pos:end="77:40"><expr pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:40"><name pos:start="77:22" pos:end="77:22">f</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:40">bitstream_buffer</name></name></expr></argument>, <argument pos:start="77:43" pos:end="77:72"><expr pos:start="77:43" pos:end="77:72"><operator pos:start="77:43" pos:end="77:43">(</operator><specifier pos:start="77:44" pos:end="77:48">const</specifier> <name pos:start="77:50" pos:end="77:57">uint32_t</name><operator pos:start="77:58" pos:end="77:58">*</operator><operator pos:start="77:59" pos:end="77:59">)</operator><operator pos:start="77:60" pos:end="77:60">(</operator><name pos:start="77:61" pos:end="77:63">buf</name> <operator pos:start="77:65" pos:end="77:65">+</operator> <name pos:start="77:67" pos:end="77:71">extra</name><operator pos:start="77:72" pos:end="77:72">)</operator></expr></argument>,

                     <argument pos:start="79:22" pos:end="79:39"><expr pos:start="79:22" pos:end="79:39"><name pos:start="79:22" pos:end="79:35">bitstream_size</name> <operator pos:start="79:37" pos:end="79:37">/</operator> <literal type="number" pos:start="79:39" pos:end="79:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="83:44"><expr pos:start="81:5" pos:end="83:43"><call pos:start="81:5" pos:end="83:43"><name pos:start="81:5" pos:end="81:10">memset</name><argument_list pos:start="81:11" pos:end="83:43">(<argument pos:start="81:12" pos:end="81:57"><expr pos:start="81:12" pos:end="81:57"><operator pos:start="81:12" pos:end="81:12">(</operator><name pos:start="81:13" pos:end="81:19">uint8_t</name><operator pos:start="81:20" pos:end="81:20">*</operator><operator pos:start="81:21" pos:end="81:21">)</operator><name pos:start="81:22" pos:end="81:40"><name pos:start="81:22" pos:end="81:22">f</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:40">bitstream_buffer</name></name> <operator pos:start="81:42" pos:end="81:42">+</operator> <name pos:start="81:44" pos:end="81:57">bitstream_size</name></expr></argument>,

           <argument pos:start="83:12" pos:end="83:12"><expr pos:start="83:12" pos:end="83:12"><literal type="number" pos:start="83:12" pos:end="83:12">0</literal></expr></argument>, <argument pos:start="83:15" pos:end="83:42"><expr pos:start="83:15" pos:end="83:42"><name pos:start="83:15" pos:end="83:42">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:67"><expr pos:start="85:5" pos:end="85:66"><call pos:start="85:5" pos:end="85:66"><name pos:start="85:5" pos:end="85:17">init_get_bits</name><argument_list pos:start="85:18" pos:end="85:66">(<argument pos:start="85:19" pos:end="85:24"><expr pos:start="85:19" pos:end="85:24"><operator pos:start="85:19" pos:end="85:19">&amp;</operator><name pos:start="85:20" pos:end="85:24"><name pos:start="85:20" pos:end="85:20">f</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:24">gb</name></name></expr></argument>, <argument pos:start="85:27" pos:end="85:45"><expr pos:start="85:27" pos:end="85:45"><name pos:start="85:27" pos:end="85:45"><name pos:start="85:27" pos:end="85:27">f</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:45">bitstream_buffer</name></name></expr></argument>, <argument pos:start="85:48" pos:end="85:65"><expr pos:start="85:48" pos:end="85:65"><literal type="number" pos:start="85:48" pos:end="85:48">8</literal> <operator pos:start="85:50" pos:end="85:50">*</operator> <name pos:start="85:52" pos:end="85:65">bitstream_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:47"><expr pos:start="89:5" pos:end="89:46"><name pos:start="89:5" pos:end="89:21">wordstream_offset</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:29">extra</name> <operator pos:start="89:31" pos:end="89:31">+</operator> <name pos:start="89:33" pos:end="89:46">bitstream_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:65"><expr pos:start="91:5" pos:end="91:64"><name pos:start="91:5" pos:end="91:21">bytestream_offset</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <name pos:start="91:25" pos:end="91:29">extra</name> <operator pos:start="91:31" pos:end="91:31">+</operator> <name pos:start="91:33" pos:end="91:46">bitstream_size</name> <operator pos:start="91:48" pos:end="91:48">+</operator> <name pos:start="91:50" pos:end="91:64">wordstream_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:49"><expr pos:start="93:5" pos:end="95:48"><call pos:start="93:5" pos:end="95:48"><name pos:start="93:5" pos:end="93:20">bytestream2_init</name><argument_list pos:start="93:21" pos:end="95:48">(<argument pos:start="93:22" pos:end="93:27"><expr pos:start="93:22" pos:end="93:27"><operator pos:start="93:22" pos:end="93:22">&amp;</operator><name pos:start="93:23" pos:end="93:27"><name pos:start="93:23" pos:end="93:23">f</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:27">g2</name></name></expr></argument>, <argument pos:start="93:30" pos:end="93:52"><expr pos:start="93:30" pos:end="93:52"><name pos:start="93:30" pos:end="93:32">buf</name> <operator pos:start="93:34" pos:end="93:34">+</operator> <name pos:start="93:36" pos:end="93:52">wordstream_offset</name></expr></argument>,

                     <argument pos:start="95:22" pos:end="95:47"><expr pos:start="95:22" pos:end="95:47"><name pos:start="95:22" pos:end="95:27">length</name> <operator pos:start="95:29" pos:end="95:29">-</operator> <name pos:start="95:31" pos:end="95:47">wordstream_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:49"><expr pos:start="97:5" pos:end="99:48"><call pos:start="97:5" pos:end="99:48"><name pos:start="97:5" pos:end="97:20">bytestream2_init</name><argument_list pos:start="97:21" pos:end="99:48">(<argument pos:start="97:22" pos:end="97:26"><expr pos:start="97:22" pos:end="97:26"><operator pos:start="97:22" pos:end="97:22">&amp;</operator><name pos:start="97:23" pos:end="97:26"><name pos:start="97:23" pos:end="97:23">f</name><operator pos:start="97:24" pos:end="97:25">-&gt;</operator><name pos:start="97:26" pos:end="97:26">g</name></name></expr></argument>, <argument pos:start="97:29" pos:end="97:51"><expr pos:start="97:29" pos:end="97:51"><name pos:start="97:29" pos:end="97:31">buf</name> <operator pos:start="97:33" pos:end="97:33">+</operator> <name pos:start="97:35" pos:end="97:51">bytestream_offset</name></expr></argument>,

                     <argument pos:start="99:22" pos:end="99:47"><expr pos:start="99:22" pos:end="99:47"><name pos:start="99:22" pos:end="99:27">length</name> <operator pos:start="99:29" pos:end="99:29">-</operator> <name pos:start="99:31" pos:end="99:47">bytestream_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:15"><expr pos:start="103:5" pos:end="103:14"><call pos:start="103:5" pos:end="103:14"><name pos:start="103:5" pos:end="103:11">init_mv</name><argument_list pos:start="103:12" pos:end="103:14">(<argument pos:start="103:13" pos:end="103:13"><expr pos:start="103:13" pos:end="103:13"><name pos:start="103:13" pos:end="103:13">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="107:5" pos:end="117:5">for <control pos:start="107:9" pos:end="107:35">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">y</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:27"><expr pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:17">y</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <name pos:start="107:21" pos:end="107:26">height</name></expr>;</condition> <incr pos:start="107:29" pos:end="107:34"><expr pos:start="107:29" pos:end="107:34"><name pos:start="107:29" pos:end="107:29">y</name> <operator pos:start="107:31" pos:end="107:32">+=</operator> <literal type="number" pos:start="107:34" pos:end="107:34">8</literal></expr></incr>)</control> <block pos:start="107:37" pos:end="117:5">{<block_content pos:start="109:9" pos:end="115:26">

        <for pos:start="109:9" pos:end="111:62">for <control pos:start="109:13" pos:end="109:38">(<init pos:start="109:14" pos:end="109:19"><expr pos:start="109:14" pos:end="109:18"><name pos:start="109:14" pos:end="109:14">x</name> <operator pos:start="109:16" pos:end="109:16">=</operator> <literal type="number" pos:start="109:18" pos:end="109:18">0</literal></expr>;</init> <condition pos:start="109:21" pos:end="109:30"><expr pos:start="109:21" pos:end="109:29"><name pos:start="109:21" pos:end="109:21">x</name> <operator pos:start="109:23" pos:end="109:23">&lt;</operator> <name pos:start="109:25" pos:end="109:29">width</name></expr>;</condition> <incr pos:start="109:32" pos:end="109:37"><expr pos:start="109:32" pos:end="109:37"><name pos:start="109:32" pos:end="109:32">x</name> <operator pos:start="109:34" pos:end="109:35">+=</operator> <literal type="number" pos:start="109:37" pos:end="109:37">8</literal></expr></incr>)</control><block type="pseudo" pos:start="111:13" pos:end="111:62"><block_content pos:start="111:13" pos:end="111:62">

            <expr_stmt pos:start="111:13" pos:end="111:62"><expr pos:start="111:13" pos:end="111:61"><call pos:start="111:13" pos:end="111:61"><name pos:start="111:13" pos:end="111:26">decode_p_block</name><argument_list pos:start="111:27" pos:end="111:61">(<argument pos:start="111:28" pos:end="111:28"><expr pos:start="111:28" pos:end="111:28"><name pos:start="111:28" pos:end="111:28">f</name></expr></argument>, <argument pos:start="111:31" pos:end="111:37"><expr pos:start="111:31" pos:end="111:37"><name pos:start="111:31" pos:end="111:33">dst</name> <operator pos:start="111:35" pos:end="111:35">+</operator> <name pos:start="111:37" pos:end="111:37">x</name></expr></argument>, <argument pos:start="111:40" pos:end="111:46"><expr pos:start="111:40" pos:end="111:46"><name pos:start="111:40" pos:end="111:42">src</name> <operator pos:start="111:44" pos:end="111:44">+</operator> <name pos:start="111:46" pos:end="111:46">x</name></expr></argument>, <argument pos:start="111:49" pos:end="111:49"><expr pos:start="111:49" pos:end="111:49"><literal type="number" pos:start="111:49" pos:end="111:49">3</literal></expr></argument>, <argument pos:start="111:52" pos:end="111:52"><expr pos:start="111:52" pos:end="111:52"><literal type="number" pos:start="111:52" pos:end="111:52">3</literal></expr></argument>, <argument pos:start="111:55" pos:end="111:60"><expr pos:start="111:55" pos:end="111:60"><name pos:start="111:55" pos:end="111:60">stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="113:9" pos:end="113:26"><expr pos:start="113:9" pos:end="113:25"><name pos:start="113:9" pos:end="113:11">src</name> <operator pos:start="113:13" pos:end="113:14">+=</operator> <literal type="number" pos:start="113:16" pos:end="113:16">8</literal> <operator pos:start="113:18" pos:end="113:18">*</operator> <name pos:start="113:20" pos:end="113:25">stride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:26"><expr pos:start="115:9" pos:end="115:25"><name pos:start="115:9" pos:end="115:11">dst</name> <operator pos:start="115:13" pos:end="115:14">+=</operator> <literal type="number" pos:start="115:16" pos:end="115:16">8</literal> <operator pos:start="115:18" pos:end="115:18">*</operator> <name pos:start="115:20" pos:end="115:25">stride</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="121:5" pos:end="121:13">return <expr pos:start="121:12" pos:end="121:12"><literal type="number" pos:start="121:12" pos:end="121:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
