<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4378.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">get_content_url</name><parameter_list pos:start="1:29" pos:end="9:39">(<parameter pos:start="1:30" pos:end="1:54"><decl pos:start="1:30" pos:end="1:54"><type pos:start="1:30" pos:end="1:54"><name pos:start="1:30" pos:end="1:39">xmlNodePtr</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:54">baseurl_nodes</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:48"><decl pos:start="3:30" pos:end="3:48"><type pos:start="3:30" pos:end="3:48"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:48">n_baseurl_nodes</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:45"><decl pos:start="5:30" pos:end="5:45"><type pos:start="5:30" pos:end="5:45"><name pos:start="5:30" pos:end="5:33">char</name> <modifier pos:start="5:35" pos:end="5:35">*</modifier></type><name pos:start="5:36" pos:end="5:45">rep_id_val</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:52"><decl pos:start="7:30" pos:end="7:52"><type pos:start="7:30" pos:end="7:52"><name pos:start="7:30" pos:end="7:33">char</name> <modifier pos:start="7:35" pos:end="7:35">*</modifier></type><name pos:start="7:36" pos:end="7:52">rep_bandwidth_val</name></decl></parameter>,

                             <parameter pos:start="9:30" pos:end="9:38"><decl pos:start="9:30" pos:end="9:38"><type pos:start="9:30" pos:end="9:38"><name pos:start="9:30" pos:end="9:33">char</name> <modifier pos:start="9:35" pos:end="9:35">*</modifier></type><name pos:start="9:36" pos:end="9:38">val</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="95:1">{<block_content pos:start="13:5" pos:end="93:15">

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">text</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">url</name> <init pos:start="17:15" pos:end="17:20">= <expr pos:start="17:17" pos:end="17:20"><name pos:start="17:17" pos:end="17:20">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:30"><name pos:start="19:10" pos:end="19:16">tmp_str</name><index pos:start="19:17" pos:end="19:30">[<expr pos:start="19:18" pos:end="19:29"><name pos:start="19:18" pos:end="19:29">MAX_URL_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:33"><decl pos:start="21:5" pos:end="21:32"><type pos:start="21:5" pos:end="21:8"><name pos:start="21:5" pos:end="21:8">char</name></type> <name pos:start="21:10" pos:end="21:32"><name pos:start="21:10" pos:end="21:18">tmp_str_2</name><index pos:start="21:19" pos:end="21:32">[<expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:31">MAX_URL_SIZE</name></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><call pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:10">memset</name><argument_list pos:start="25:11" pos:end="25:39">(<argument pos:start="25:12" pos:end="25:18"><expr pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:18">tmp_str</name></expr></argument>, <argument pos:start="25:21" pos:end="25:21"><expr pos:start="25:21" pos:end="25:21"><literal type="number" pos:start="25:21" pos:end="25:21">0</literal></expr></argument>, <argument pos:start="25:24" pos:end="25:38"><expr pos:start="25:24" pos:end="25:38"><sizeof pos:start="25:24" pos:end="25:38">sizeof<argument_list pos:start="25:30" pos:end="25:38">(<argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><name pos:start="25:31" pos:end="25:37">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="55:5">for <control pos:start="29:9" pos:end="29:41">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:36"><expr pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:35">n_baseurl_nodes</name></expr>;</condition> <incr pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><operator pos:start="29:38" pos:end="29:39">++</operator><name pos:start="29:40" pos:end="29:40">i</name></expr></incr>)</control> <block pos:start="29:43" pos:end="55:5">{<block_content pos:start="31:9" pos:end="53:9">

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="53:9">if <condition pos:start="31:12" pos:end="35:62">(<expr pos:start="31:13" pos:end="35:61"><name pos:start="31:13" pos:end="31:28"><name pos:start="31:13" pos:end="31:25">baseurl_nodes</name><index pos:start="31:26" pos:end="31:28">[<expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">i</name></expr>]</index></name> <operator pos:start="31:30" pos:end="31:31">&amp;&amp;</operator>

            <name pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:25">baseurl_nodes</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">i</name></expr>]</index></name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:38">children</name> <operator pos:start="33:40" pos:end="33:41">&amp;&amp;</operator>

            <name pos:start="35:13" pos:end="35:28"><name pos:start="35:13" pos:end="35:25">baseurl_nodes</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><name pos:start="35:27" pos:end="35:27">i</name></expr>]</index></name><operator pos:start="35:29" pos:end="35:30">-&gt;</operator><name pos:start="35:31" pos:end="35:44"><name pos:start="35:31" pos:end="35:38">children</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:44">type</name></name> <operator pos:start="35:46" pos:end="35:47">==</operator> <name pos:start="35:49" pos:end="35:61">XML_TEXT_NODE</name></expr>)</condition> <block pos:start="35:64" pos:end="53:9">{<block_content pos:start="37:13" pos:end="51:13">

            <expr_stmt pos:start="37:13" pos:end="37:65"><expr pos:start="37:13" pos:end="37:64"><name pos:start="37:13" pos:end="37:16">text</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:64"><name pos:start="37:20" pos:end="37:36">xmlNodeGetContent</name><argument_list pos:start="37:37" pos:end="37:64">(<argument pos:start="37:38" pos:end="37:63"><expr pos:start="37:38" pos:end="37:63"><name pos:start="37:38" pos:end="37:53"><name pos:start="37:38" pos:end="37:50">baseurl_nodes</name><index pos:start="37:51" pos:end="37:53">[<expr pos:start="37:52" pos:end="37:52"><name pos:start="37:52" pos:end="37:52">i</name></expr>]</index></name><operator pos:start="37:54" pos:end="37:55">-&gt;</operator><name pos:start="37:56" pos:end="37:63">children</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="51:13"><if pos:start="39:13" pos:end="51:13">if <condition pos:start="39:16" pos:end="39:21">(<expr pos:start="39:17" pos:end="39:20"><name pos:start="39:17" pos:end="39:20">text</name></expr>)</condition> <block pos:start="39:23" pos:end="51:13">{<block_content pos:start="41:17" pos:end="49:30">

                <expr_stmt pos:start="41:17" pos:end="41:52"><expr pos:start="41:17" pos:end="41:51"><call pos:start="41:17" pos:end="41:51"><name pos:start="41:17" pos:end="41:22">memset</name><argument_list pos:start="41:23" pos:end="41:51">(<argument pos:start="41:24" pos:end="41:30"><expr pos:start="41:24" pos:end="41:30"><name pos:start="41:24" pos:end="41:30">tmp_str</name></expr></argument>, <argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><literal type="number" pos:start="41:33" pos:end="41:33">0</literal></expr></argument>, <argument pos:start="41:36" pos:end="41:50"><expr pos:start="41:36" pos:end="41:50"><sizeof pos:start="41:36" pos:end="41:50">sizeof<argument_list pos:start="41:42" pos:end="41:50">(<argument pos:start="41:43" pos:end="41:49"><expr pos:start="41:43" pos:end="41:49"><name pos:start="41:43" pos:end="41:49">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:56"><expr pos:start="43:17" pos:end="43:55"><call pos:start="43:17" pos:end="43:55"><name pos:start="43:17" pos:end="43:22">memset</name><argument_list pos:start="43:23" pos:end="43:55">(<argument pos:start="43:24" pos:end="43:32"><expr pos:start="43:24" pos:end="43:32"><name pos:start="43:24" pos:end="43:32">tmp_str_2</name></expr></argument>, <argument pos:start="43:35" pos:end="43:35"><expr pos:start="43:35" pos:end="43:35"><literal type="number" pos:start="43:35" pos:end="43:35">0</literal></expr></argument>, <argument pos:start="43:38" pos:end="43:54"><expr pos:start="43:38" pos:end="43:54"><sizeof pos:start="43:38" pos:end="43:54">sizeof<argument_list pos:start="43:44" pos:end="43:54">(<argument pos:start="43:45" pos:end="43:53"><expr pos:start="43:45" pos:end="43:53"><name pos:start="43:45" pos:end="43:53">tmp_str_2</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="45:17" pos:end="45:77"><expr pos:start="45:17" pos:end="45:76"><call pos:start="45:17" pos:end="45:76"><name pos:start="45:17" pos:end="45:36">ff_make_absolute_url</name><argument_list pos:start="45:37" pos:end="45:76">(<argument pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:46"><name pos:start="45:38" pos:end="45:46">tmp_str_2</name></expr></argument>, <argument pos:start="45:49" pos:end="45:60"><expr pos:start="45:49" pos:end="45:60"><name pos:start="45:49" pos:end="45:60">MAX_URL_SIZE</name></expr></argument>, <argument pos:start="45:63" pos:end="45:69"><expr pos:start="45:63" pos:end="45:69"><name pos:start="45:63" pos:end="45:69">tmp_str</name></expr></argument>, <argument pos:start="45:72" pos:end="45:75"><expr pos:start="45:72" pos:end="45:75"><name pos:start="45:72" pos:end="45:75">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:64"><expr pos:start="47:17" pos:end="47:63"><call pos:start="47:17" pos:end="47:63"><name pos:start="47:17" pos:end="47:26">av_strlcpy</name><argument_list pos:start="47:27" pos:end="47:63">(<argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:34">tmp_str</name></expr></argument>, <argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:45">tmp_str_2</name></expr></argument>, <argument pos:start="47:48" pos:end="47:62"><expr pos:start="47:48" pos:end="47:62"><sizeof pos:start="47:48" pos:end="47:62">sizeof<argument_list pos:start="47:54" pos:end="47:62">(<argument pos:start="47:55" pos:end="47:61"><expr pos:start="47:55" pos:end="47:61"><name pos:start="47:55" pos:end="47:61">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:30"><expr pos:start="49:17" pos:end="49:29"><call pos:start="49:17" pos:end="49:29"><name pos:start="49:17" pos:end="49:23">xmlFree</name><argument_list pos:start="49:24" pos:end="49:29">(<argument pos:start="49:25" pos:end="49:28"><expr pos:start="49:25" pos:end="49:28"><name pos:start="49:25" pos:end="49:28">text</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="61:63"><if pos:start="59:5" pos:end="61:63">if <condition pos:start="59:8" pos:end="59:12">(<expr pos:start="59:9" pos:end="59:11"><name pos:start="59:9" pos:end="59:11">val</name></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:63"><block_content pos:start="61:9" pos:end="61:63">

        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:18">av_strlcat</name><argument_list pos:start="61:19" pos:end="61:62">(<argument pos:start="61:20" pos:end="61:26"><expr pos:start="61:20" pos:end="61:26"><name pos:start="61:20" pos:end="61:26">tmp_str</name></expr></argument>, <argument pos:start="61:29" pos:end="61:44"><expr pos:start="61:29" pos:end="61:44"><operator pos:start="61:29" pos:end="61:29">(</operator><specifier pos:start="61:30" pos:end="61:34">const</specifier> <name pos:start="61:36" pos:end="61:39">char</name><operator pos:start="61:40" pos:end="61:40">*</operator><operator pos:start="61:41" pos:end="61:41">)</operator><name pos:start="61:42" pos:end="61:44">val</name></expr></argument>, <argument pos:start="61:47" pos:end="61:61"><expr pos:start="61:47" pos:end="61:61"><sizeof pos:start="61:47" pos:end="61:61">sizeof<argument_list pos:start="61:53" pos:end="61:61">(<argument pos:start="61:54" pos:end="61:60"><expr pos:start="61:54" pos:end="61:60"><name pos:start="61:54" pos:end="61:60">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:19">(<expr pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:18">rep_id_val</name></expr>)</condition> <block pos:start="65:21" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:21">

        <expr_stmt pos:start="67:9" pos:end="67:85"><expr pos:start="67:9" pos:end="67:84"><name pos:start="67:9" pos:end="67:11">url</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:84"><name pos:start="67:15" pos:end="67:28">av_strireplace</name><argument_list pos:start="67:29" pos:end="67:84">(<argument pos:start="67:30" pos:end="67:36"><expr pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:36">tmp_str</name></expr></argument>, <argument pos:start="67:39" pos:end="67:58"><expr pos:start="67:39" pos:end="67:58"><literal type="string" pos:start="67:39" pos:end="67:58">"$RepresentationID$"</literal></expr></argument>, <argument pos:start="67:61" pos:end="67:83"><expr pos:start="67:61" pos:end="67:83"><operator pos:start="67:61" pos:end="67:61">(</operator><specifier pos:start="67:62" pos:end="67:66">const</specifier> <name pos:start="67:68" pos:end="67:71">char</name><operator pos:start="67:72" pos:end="67:72">*</operator><operator pos:start="67:73" pos:end="67:73">)</operator><name pos:start="67:74" pos:end="67:83">rep_id_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:17">(<expr pos:start="69:13" pos:end="69:16"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:16">url</name></expr>)</condition> <block pos:start="69:19" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:24">

            <return pos:start="71:13" pos:end="71:24">return <expr pos:start="71:20" pos:end="71:23"><name pos:start="71:20" pos:end="71:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:50"><expr pos:start="75:9" pos:end="75:49"><call pos:start="75:9" pos:end="75:49"><name pos:start="75:9" pos:end="75:18">av_strlcpy</name><argument_list pos:start="75:19" pos:end="75:49">(<argument pos:start="75:20" pos:end="75:26"><expr pos:start="75:20" pos:end="75:26"><name pos:start="75:20" pos:end="75:26">tmp_str</name></expr></argument>, <argument pos:start="75:29" pos:end="75:31"><expr pos:start="75:29" pos:end="75:31"><name pos:start="75:29" pos:end="75:31">url</name></expr></argument>, <argument pos:start="75:34" pos:end="75:48"><expr pos:start="75:34" pos:end="75:48"><sizeof pos:start="75:34" pos:end="75:48">sizeof<argument_list pos:start="75:40" pos:end="75:48">(<argument pos:start="75:41" pos:end="75:47"><expr pos:start="75:41" pos:end="75:47"><name pos:start="75:41" pos:end="75:47">tmp_str</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:21"><expr pos:start="77:9" pos:end="77:20"><call pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:15">av_free</name><argument_list pos:start="77:16" pos:end="77:20">(<argument pos:start="77:17" pos:end="77:19"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="81:5" pos:end="91:5"><if pos:start="81:5" pos:end="91:5">if <condition pos:start="81:8" pos:end="81:48">(<expr pos:start="81:9" pos:end="81:47"><name pos:start="81:9" pos:end="81:25">rep_bandwidth_val</name> <operator pos:start="81:27" pos:end="81:28">&amp;&amp;</operator> <name pos:start="81:30" pos:end="81:39"><name pos:start="81:30" pos:end="81:36">tmp_str</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><literal type="number" pos:start="81:38" pos:end="81:38">0</literal></expr>]</index></name> <operator pos:start="81:41" pos:end="81:42">!=</operator> <literal type="char" pos:start="81:44" pos:end="81:47">'\0'</literal></expr>)</condition> <block pos:start="81:50" pos:end="91:5">{<block_content pos:start="83:9" pos:end="89:9">

        <expr_stmt pos:start="83:9" pos:end="83:85"><expr pos:start="83:9" pos:end="83:84"><name pos:start="83:9" pos:end="83:11">url</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:84"><name pos:start="83:15" pos:end="83:28">av_strireplace</name><argument_list pos:start="83:29" pos:end="83:84">(<argument pos:start="83:30" pos:end="83:36"><expr pos:start="83:30" pos:end="83:36"><name pos:start="83:30" pos:end="83:36">tmp_str</name></expr></argument>, <argument pos:start="83:39" pos:end="83:51"><expr pos:start="83:39" pos:end="83:51"><literal type="string" pos:start="83:39" pos:end="83:51">"$Bandwidth$"</literal></expr></argument>, <argument pos:start="83:54" pos:end="83:83"><expr pos:start="83:54" pos:end="83:83"><operator pos:start="83:54" pos:end="83:54">(</operator><specifier pos:start="83:55" pos:end="83:59">const</specifier> <name pos:start="83:61" pos:end="83:64">char</name><operator pos:start="83:65" pos:end="83:65">*</operator><operator pos:start="83:66" pos:end="83:66">)</operator><name pos:start="83:67" pos:end="83:83">rep_bandwidth_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="89:9"><if pos:start="85:9" pos:end="89:9">if <condition pos:start="85:12" pos:end="85:17">(<expr pos:start="85:13" pos:end="85:16"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:16">url</name></expr>)</condition> <block pos:start="85:19" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:24">

            <return pos:start="87:13" pos:end="87:24">return <expr pos:start="87:20" pos:end="87:23"><name pos:start="87:20" pos:end="87:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="93:5" pos:end="93:15">return <expr pos:start="93:12" pos:end="93:14"><name pos:start="93:12" pos:end="93:14">url</name></expr>;</return>

</block_content>}</block></function>
</unit>
