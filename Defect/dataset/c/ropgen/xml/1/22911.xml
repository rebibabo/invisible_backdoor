<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22911.c" pos:tabs="8"><function pos:start="1:1" pos:end="447:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">ff_MPV_frame_start</name><parameter_list pos:start="1:23" pos:end="1:64">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:37">MpegEncContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:63"><name pos:start="1:43" pos:end="1:56">AVCodecContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="447:1">{<block_content pos:start="5:5" pos:end="445:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Picture</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">pic</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:22"><expr pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:17">mb_skipped</name></name> <operator pos:start="9:19" pos:end="9:19">=</operator> <literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:42">(<expr pos:start="13:9" pos:end="13:41"><operator pos:start="13:9" pos:end="13:9">!</operator><call pos:start="13:10" pos:end="13:41"><name pos:start="13:10" pos:end="13:34">ff_thread_can_start_frame</name><argument_list pos:start="13:35" pos:end="13:41">(<argument pos:start="13:36" pos:end="13:40"><expr pos:start="13:36" pos:end="13:40"><name pos:start="13:36" pos:end="13:40">avctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:44" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:18">

        <expr_stmt pos:start="15:9" pos:end="15:86"><expr pos:start="15:9" pos:end="15:85"><call pos:start="15:9" pos:end="15:85"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:85">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:84"><expr pos:start="15:37" pos:end="15:84"><literal type="string" pos:start="15:37" pos:end="15:84">"Attempt to start a frame outside SETUP state\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:35">/* mark &amp; release old frames */</comment>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="29:39">(<expr pos:start="25:9" pos:end="29:38"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:20">pict_type</name></name> <operator pos:start="25:22" pos:end="25:23">!=</operator> <name pos:start="25:25" pos:end="25:41">AV_PICTURE_TYPE_B</name> <operator pos:start="25:43" pos:end="25:44">&amp;&amp;</operator> <name pos:start="25:46" pos:end="25:64"><name pos:start="25:46" pos:end="25:46">s</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:64">last_picture_ptr</name></name> <operator pos:start="25:66" pos:end="25:67">&amp;&amp;</operator>

        <name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:27">last_picture_ptr</name></name> <operator pos:start="27:29" pos:end="27:30">!=</operator> <name pos:start="27:32" pos:end="27:50"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:50">next_picture_ptr</name></name> <operator pos:start="27:52" pos:end="27:53">&amp;&amp;</operator>

        <name pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:27">last_picture_ptr</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:30">f</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:35">buf</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><literal type="number" pos:start="29:37" pos:end="29:37">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="29:41" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:54">

        <expr_stmt pos:start="31:9" pos:end="31:54"><expr pos:start="31:9" pos:end="31:53"><call pos:start="31:9" pos:end="31:53"><name pos:start="31:9" pos:end="31:29">ff_mpeg_unref_picture</name><argument_list pos:start="31:30" pos:end="31:53">(<argument pos:start="31:31" pos:end="31:31"><expr pos:start="31:31" pos:end="31:31"><name pos:start="31:31" pos:end="31:31">s</name></expr></argument>, <argument pos:start="31:34" pos:end="31:52"><expr pos:start="31:34" pos:end="31:52"><name pos:start="31:34" pos:end="31:52"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:52">last_picture_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:36">/* release forgotten pictures */</comment>

    <comment type="block" pos:start="39:5" pos:end="39:27">/* if (mpeg124/h263) */</comment>

    <for pos:start="41:5" pos:end="59:5">for <control pos:start="41:9" pos:end="41:43">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:37">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:40">i</name><operator pos:start="41:41" pos:end="41:42">++</operator></expr></incr>)</control> <block pos:start="41:45" pos:end="59:5">{<block_content pos:start="43:9" pos:end="57:9">

        <if_stmt pos:start="43:9" pos:end="57:9"><if pos:start="43:9" pos:end="57:9">if <condition pos:start="43:12" pos:end="47:68">(<expr pos:start="43:13" pos:end="47:67"><operator pos:start="43:13" pos:end="43:13">&amp;</operator><name pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:14">s</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:23">picture</name><index pos:start="43:24" pos:end="43:26">[<expr pos:start="43:25" pos:end="43:25"><name pos:start="43:25" pos:end="43:25">i</name></expr>]</index></name> <operator pos:start="43:28" pos:end="43:29">!=</operator> <name pos:start="43:31" pos:end="43:49"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:49">last_picture_ptr</name></name> <operator pos:start="43:51" pos:end="43:52">&amp;&amp;</operator>

            <operator pos:start="45:13" pos:end="45:13">&amp;</operator><name pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:14">s</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:23">picture</name><index pos:start="45:24" pos:end="45:26">[<expr pos:start="45:25" pos:end="45:25"><name pos:start="45:25" pos:end="45:25">i</name></expr>]</index></name> <operator pos:start="45:28" pos:end="45:29">!=</operator> <name pos:start="45:31" pos:end="45:49"><name pos:start="45:31" pos:end="45:31">s</name><operator pos:start="45:32" pos:end="45:33">-&gt;</operator><name pos:start="45:34" pos:end="45:49">next_picture_ptr</name></name> <operator pos:start="45:51" pos:end="45:52">&amp;&amp;</operator>

            <name pos:start="47:13" pos:end="47:25"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:22">picture</name><index pos:start="47:23" pos:end="47:25">[<expr pos:start="47:24" pos:end="47:24"><name pos:start="47:24" pos:end="47:24">i</name></expr>]</index></name><operator pos:start="47:26" pos:end="47:26">.</operator><name pos:start="47:27" pos:end="47:35">reference</name> <operator pos:start="47:37" pos:end="47:38">&amp;&amp;</operator> <operator pos:start="47:40" pos:end="47:40">!</operator><name pos:start="47:41" pos:end="47:53"><name pos:start="47:41" pos:end="47:41">s</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:50">picture</name><index pos:start="47:51" pos:end="47:53">[<expr pos:start="47:52" pos:end="47:52"><name pos:start="47:52" pos:end="47:52">i</name></expr>]</index></name><operator pos:start="47:54" pos:end="47:54">.</operator><name pos:start="47:55" pos:end="47:67">needs_realloc</name></expr>)</condition> <block pos:start="47:70" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:53">

            <if_stmt pos:start="49:13" pos:end="53:53"><if pos:start="49:13" pos:end="53:53">if <condition pos:start="49:16" pos:end="49:63">(<expr pos:start="49:17" pos:end="49:62"><operator pos:start="49:17" pos:end="49:17">!</operator><operator pos:start="49:18" pos:end="49:18">(</operator><name pos:start="49:19" pos:end="49:43"><name pos:start="49:19" pos:end="49:23">avctx</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:43">active_thread_type</name></name> <operator pos:start="49:45" pos:end="49:45">&amp;</operator> <name pos:start="49:47" pos:end="49:61">FF_THREAD_FRAME</name><operator pos:start="49:62" pos:end="49:62">)</operator></expr>)</condition><block type="pseudo" pos:start="51:17" pos:end="53:53"><block_content pos:start="51:17" pos:end="53:53">

                <expr_stmt pos:start="51:17" pos:end="53:53"><expr pos:start="51:17" pos:end="53:52"><call pos:start="51:17" pos:end="53:52"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="53:52">(<argument pos:start="51:24" pos:end="51:28"><expr pos:start="51:24" pos:end="51:28"><name pos:start="51:24" pos:end="51:28">avctx</name></expr></argument>, <argument pos:start="51:31" pos:end="51:42"><expr pos:start="51:31" pos:end="51:42"><name pos:start="51:31" pos:end="51:42">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="53:24" pos:end="53:51"><expr pos:start="53:24" pos:end="53:51"><literal type="string" pos:start="53:24" pos:end="53:51">"releasing zombie picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:53"><expr pos:start="55:13" pos:end="55:52"><call pos:start="55:13" pos:end="55:52"><name pos:start="55:13" pos:end="55:33">ff_mpeg_unref_picture</name><argument_list pos:start="55:34" pos:end="55:52">(<argument pos:start="55:35" pos:end="55:35"><expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">s</name></expr></argument>, <argument pos:start="55:38" pos:end="55:51"><expr pos:start="55:38" pos:end="55:51"><operator pos:start="55:38" pos:end="55:38">&amp;</operator><name pos:start="55:39" pos:end="55:51"><name pos:start="55:39" pos:end="55:39">s</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:48">picture</name><index pos:start="55:49" pos:end="55:51">[<expr pos:start="55:50" pos:end="55:50"><name pos:start="55:50" pos:end="55:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="63:5" pos:end="63:50"><expr pos:start="63:5" pos:end="63:49"><call pos:start="63:5" pos:end="63:49"><name pos:start="63:5" pos:end="63:25">ff_mpeg_unref_picture</name><argument_list pos:start="63:26" pos:end="63:49">(<argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><name pos:start="63:27" pos:end="63:27">s</name></expr></argument>, <argument pos:start="63:30" pos:end="63:48"><expr pos:start="63:30" pos:end="63:48"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:48"><name pos:start="63:31" pos:end="63:31">s</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:48">current_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:31"><expr pos:start="67:5" pos:end="67:30"><call pos:start="67:5" pos:end="67:30"><name pos:start="67:5" pos:end="67:27">release_unused_pictures</name><argument_list pos:start="67:28" pos:end="67:30">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="95:5"><if pos:start="71:5" pos:end="81:5">if <condition pos:start="71:8" pos:end="73:50">(<expr pos:start="71:9" pos:end="73:49"><name pos:start="71:9" pos:end="71:30"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:30">current_picture_ptr</name></name> <operator pos:start="71:32" pos:end="71:33">&amp;&amp;</operator>

        <name pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:30">current_picture_ptr</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:33">f</name><operator pos:start="73:34" pos:end="73:35">-&gt;</operator><name pos:start="73:36" pos:end="73:38">buf</name><index pos:start="73:39" pos:end="73:41">[<expr pos:start="73:40" pos:end="73:40"><literal type="number" pos:start="73:40" pos:end="73:40">0</literal></expr>]</index></name> <operator pos:start="73:43" pos:end="73:44">==</operator> <name pos:start="73:46" pos:end="73:49">NULL</name></expr>)</condition> <block pos:start="73:52" pos:end="81:5">{<block_content pos:start="79:9" pos:end="79:37">

        <comment type="line" pos:start="75:9" pos:end="75:41">// we already have a unused image</comment>

        <comment type="line" pos:start="77:9" pos:end="77:55">// (maybe it was set before reading the header)</comment>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:11">pic</name> <operator pos:start="79:13" pos:end="79:13">=</operator> <name pos:start="79:15" pos:end="79:36"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:36">current_picture_ptr</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="95:5">else <block pos:start="81:12" pos:end="95:5">{<block_content pos:start="83:9" pos:end="93:29">

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:9">i</name>   <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:42"><name pos:start="83:15" pos:end="83:36">ff_find_unused_picture</name><argument_list pos:start="83:37" pos:end="83:42">(<argument pos:start="83:38" pos:end="83:38"><expr pos:start="83:38" pos:end="83:38"><name pos:start="83:38" pos:end="83:38">s</name></expr></argument>, <argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><literal type="number" pos:start="83:41" pos:end="83:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="91:9"><if pos:start="85:9" pos:end="91:9">if <condition pos:start="85:12" pos:end="85:18">(<expr pos:start="85:13" pos:end="85:17"><name pos:start="85:13" pos:end="85:13">i</name> <operator pos:start="85:15" pos:end="85:15">&lt;</operator> <literal type="number" pos:start="85:17" pos:end="85:17">0</literal></expr>)</condition> <block pos:start="85:20" pos:end="91:9">{<block_content pos:start="87:13" pos:end="89:21">

            <expr_stmt pos:start="87:13" pos:end="87:74"><expr pos:start="87:13" pos:end="87:73"><call pos:start="87:13" pos:end="87:73"><name pos:start="87:13" pos:end="87:18">av_log</name><argument_list pos:start="87:19" pos:end="87:73">(<argument pos:start="87:20" pos:end="87:27"><expr pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:27"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:27">avctx</name></name></expr></argument>, <argument pos:start="87:30" pos:end="87:41"><expr pos:start="87:30" pos:end="87:41"><name pos:start="87:30" pos:end="87:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:44" pos:end="87:72"><expr pos:start="87:44" pos:end="87:72"><literal type="string" pos:start="87:44" pos:end="87:72">"no frame buffer available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:21">return <expr pos:start="89:20" pos:end="89:20"><name pos:start="89:20" pos:end="89:20">i</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:11">pic</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <operator pos:start="93:15" pos:end="93:15">&amp;</operator><name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:16">s</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:25">picture</name><index pos:start="93:26" pos:end="93:28">[<expr pos:start="93:27" pos:end="93:27"><name pos:start="93:27" pos:end="93:27">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:23"><expr pos:start="99:5" pos:end="99:22"><name pos:start="99:5" pos:end="99:18"><name pos:start="99:5" pos:end="99:7">pic</name><operator pos:start="99:8" pos:end="99:9">-&gt;</operator><name pos:start="99:10" pos:end="99:18">reference</name></name> <operator pos:start="99:20" pos:end="99:20">=</operator> <literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:21"><name pos:start="101:10" pos:end="101:10">s</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:21">droppable</name></name></expr>)</condition> <block pos:start="101:24" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:31">

        <if_stmt pos:start="103:9" pos:end="105:31"><if pos:start="103:9" pos:end="105:31">if <condition pos:start="103:12" pos:end="103:46">(<expr pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:24"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:24">pict_type</name></name> <operator pos:start="103:26" pos:end="103:27">!=</operator> <name pos:start="103:29" pos:end="103:45">AV_PICTURE_TYPE_B</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:31"><block_content pos:start="105:13" pos:end="105:31">

            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:15">pic</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:26">reference</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <literal type="number" pos:start="105:30" pos:end="105:30">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:61"><expr pos:start="111:5" pos:end="111:60"><name pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:7">pic</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:10">f</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:32">coded_picture_number</name></name> <operator pos:start="111:34" pos:end="111:34">=</operator> <name pos:start="111:36" pos:end="111:58"><name pos:start="111:36" pos:end="111:36">s</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:58">coded_picture_number</name></name><operator pos:start="111:59" pos:end="111:60">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="117:18"><if pos:start="115:5" pos:end="117:18">if <condition pos:start="115:8" pos:end="115:40">(<expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:24">ff_alloc_picture</name><argument_list pos:start="115:25" pos:end="115:35">(<argument pos:start="115:26" pos:end="115:26"><expr pos:start="115:26" pos:end="115:26"><name pos:start="115:26" pos:end="115:26">s</name></expr></argument>, <argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:31">pic</name></expr></argument>, <argument pos:start="115:34" pos:end="115:34"><expr pos:start="115:34" pos:end="115:34"><literal type="number" pos:start="115:34" pos:end="115:34">0</literal></expr></argument>)</argument_list></call> <operator pos:start="115:37" pos:end="115:37">&lt;</operator> <literal type="number" pos:start="115:39" pos:end="115:39">0</literal></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:18"><block_content pos:start="117:9" pos:end="117:18">

        <return pos:start="117:9" pos:end="117:18">return <expr pos:start="117:16" pos:end="117:17"><operator pos:start="117:16" pos:end="117:16">-</operator><literal type="number" pos:start="117:17" pos:end="117:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:33"><expr pos:start="121:5" pos:end="121:32"><name pos:start="121:5" pos:end="121:26"><name pos:start="121:5" pos:end="121:5">s</name><operator pos:start="121:6" pos:end="121:7">-&gt;</operator><name pos:start="121:8" pos:end="121:26">current_picture_ptr</name></name> <operator pos:start="121:28" pos:end="121:28">=</operator> <name pos:start="121:30" pos:end="121:32">pic</name></expr>;</expr_stmt>

    <comment type="line" pos:start="123:5" pos:end="123:47">// FIXME use only the vars from current_pic</comment>

    <expr_stmt pos:start="125:5" pos:end="125:68"><expr pos:start="125:5" pos:end="125:67"><name pos:start="125:5" pos:end="125:46"><name pos:start="125:5" pos:end="125:5">s</name><operator pos:start="125:6" pos:end="125:7">-&gt;</operator><name pos:start="125:8" pos:end="125:26">current_picture_ptr</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:29">f</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:46">top_field_first</name></name> <operator pos:start="125:48" pos:end="125:48">=</operator> <name pos:start="125:50" pos:end="125:67"><name pos:start="125:50" pos:end="125:50">s</name><operator pos:start="125:51" pos:end="125:52">-&gt;</operator><name pos:start="125:53" pos:end="125:67">top_field_first</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="127:5" pos:end="137:5"><if pos:start="127:5" pos:end="137:5">if <condition pos:start="127:8" pos:end="129:46">(<expr pos:start="127:9" pos:end="129:45"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:19">codec_id</name></name> <operator pos:start="127:21" pos:end="127:22">==</operator> <name pos:start="127:24" pos:end="127:45">AV_CODEC_ID_MPEG1VIDEO</name> <operator pos:start="127:47" pos:end="127:48">||</operator>

        <name pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:19">codec_id</name></name> <operator pos:start="129:21" pos:end="129:22">==</operator> <name pos:start="129:24" pos:end="129:45">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="129:48" pos:end="137:5">{<block_content pos:start="131:9" pos:end="135:75">

        <if_stmt pos:start="131:9" pos:end="135:75"><if pos:start="131:9" pos:end="135:75">if <condition pos:start="131:12" pos:end="131:47">(<expr pos:start="131:13" pos:end="131:46"><name pos:start="131:13" pos:end="131:32"><name pos:start="131:13" pos:end="131:13">s</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:32">picture_structure</name></name> <operator pos:start="131:34" pos:end="131:35">!=</operator> <name pos:start="131:37" pos:end="131:46">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="133:13" pos:end="135:75"><block_content pos:start="133:13" pos:end="135:75">

            <expr_stmt pos:start="133:13" pos:end="135:75"><expr pos:start="133:13" pos:end="135:74"><name pos:start="133:13" pos:end="133:54"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:34">current_picture_ptr</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:37">f</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:54">top_field_first</name></name> <operator pos:start="133:56" pos:end="133:56">=</operator>

                <operator pos:start="135:17" pos:end="135:17">(</operator><name pos:start="135:18" pos:end="135:37"><name pos:start="135:18" pos:end="135:18">s</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:37">picture_structure</name></name> <operator pos:start="135:39" pos:end="135:40">==</operator> <name pos:start="135:42" pos:end="135:55">PICT_TOP_FIELD</name><operator pos:start="135:56" pos:end="135:56">)</operator> <operator pos:start="135:58" pos:end="135:59">==</operator> <name pos:start="135:61" pos:end="135:74"><name pos:start="135:61" pos:end="135:61">s</name><operator pos:start="135:62" pos:end="135:63">-&gt;</operator><name pos:start="135:64" pos:end="135:74">first_field</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="139:5" pos:end="141:74"><expr pos:start="139:5" pos:end="141:73"><name pos:start="139:5" pos:end="139:47"><name pos:start="139:5" pos:end="139:5">s</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:26">current_picture_ptr</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:29">f</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:47">interlaced_frame</name></name> <operator pos:start="139:49" pos:end="139:49">=</operator> <operator pos:start="139:51" pos:end="139:51">!</operator><name pos:start="139:52" pos:end="139:71"><name pos:start="139:52" pos:end="139:52">s</name><operator pos:start="139:53" pos:end="139:54">-&gt;</operator><name pos:start="139:55" pos:end="139:71">progressive_frame</name></name> <operator pos:start="139:73" pos:end="139:74">&amp;&amp;</operator>

                                                 <operator pos:start="141:50" pos:end="141:50">!</operator><name pos:start="141:51" pos:end="141:73"><name pos:start="141:51" pos:end="141:51">s</name><operator pos:start="141:52" pos:end="141:53">-&gt;</operator><name pos:start="141:54" pos:end="141:73">progressive_sequence</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:85"><expr pos:start="143:5" pos:end="143:84"><name pos:start="143:5" pos:end="143:41"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:26">current_picture_ptr</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:41">field_picture</name></name>      <operator pos:start="143:48" pos:end="143:48">=</operator>  <name pos:start="143:51" pos:end="143:70"><name pos:start="143:51" pos:end="143:51">s</name><operator pos:start="143:52" pos:end="143:53">-&gt;</operator><name pos:start="143:54" pos:end="143:70">picture_structure</name></name> <operator pos:start="143:72" pos:end="143:73">!=</operator> <name pos:start="143:75" pos:end="143:84">PICT_FRAME</name></expr>;</expr_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:56"><expr pos:start="147:5" pos:end="147:55"><name pos:start="147:5" pos:end="147:40"><name pos:start="147:5" pos:end="147:5">s</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:26">current_picture_ptr</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:29">f</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:40">pict_type</name></name> <operator pos:start="147:42" pos:end="147:42">=</operator> <name pos:start="147:44" pos:end="147:55"><name pos:start="147:44" pos:end="147:44">s</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:55">pict_type</name></name></expr>;</expr_stmt>

    <comment type="line" pos:start="149:5" pos:end="149:41">// if (s-&gt;flags &amp;&amp; CODEC_FLAG_QSCALE)</comment>

    <comment type="line" pos:start="151:5" pos:end="151:73">//     s-&gt;current_picture_ptr-&gt;quality = s-&gt;new_picture_ptr-&gt;quality;</comment>

    <expr_stmt pos:start="153:5" pos:end="153:77"><expr pos:start="153:5" pos:end="153:76"><name pos:start="153:5" pos:end="153:40"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:26">current_picture_ptr</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:29">f</name><operator pos:start="153:30" pos:end="153:31">-&gt;</operator><name pos:start="153:32" pos:end="153:40">key_frame</name></name> <operator pos:start="153:42" pos:end="153:42">=</operator> <name pos:start="153:44" pos:end="153:55"><name pos:start="153:44" pos:end="153:44">s</name><operator pos:start="153:45" pos:end="153:46">-&gt;</operator><name pos:start="153:47" pos:end="153:55">pict_type</name></name> <operator pos:start="153:57" pos:end="153:58">==</operator> <name pos:start="153:60" pos:end="153:76">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>



    <if_stmt pos:start="157:5" pos:end="161:19"><if pos:start="157:5" pos:end="161:19">if <condition pos:start="157:8" pos:end="159:64">(<expr pos:start="157:9" pos:end="159:63"><operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:12">ret</name> <operator pos:start="157:14" pos:end="157:14">=</operator> <call pos:start="157:16" pos:end="159:58"><name pos:start="157:16" pos:end="157:34">ff_mpeg_ref_picture</name><argument_list pos:start="157:35" pos:end="159:58">(<argument pos:start="157:36" pos:end="157:36"><expr pos:start="157:36" pos:end="157:36"><name pos:start="157:36" pos:end="157:36">s</name></expr></argument>, <argument pos:start="157:39" pos:end="157:57"><expr pos:start="157:39" pos:end="157:57"><operator pos:start="157:39" pos:end="157:39">&amp;</operator><name pos:start="157:40" pos:end="157:57"><name pos:start="157:40" pos:end="157:40">s</name><operator pos:start="157:41" pos:end="157:42">-&gt;</operator><name pos:start="157:43" pos:end="157:57">current_picture</name></name></expr></argument>,

                                   <argument pos:start="159:36" pos:end="159:57"><expr pos:start="159:36" pos:end="159:57"><name pos:start="159:36" pos:end="159:57"><name pos:start="159:36" pos:end="159:36">s</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:57">current_picture_ptr</name></name></expr></argument>)</argument_list></call><operator pos:start="159:59" pos:end="159:59">)</operator> <operator pos:start="159:61" pos:end="159:61">&lt;</operator> <literal type="number" pos:start="159:63" pos:end="159:63">0</literal></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:19"><block_content pos:start="161:9" pos:end="161:19">

        <return pos:start="161:9" pos:end="161:19">return <expr pos:start="161:16" pos:end="161:18"><name pos:start="161:16" pos:end="161:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="165:5" pos:end="173:5"><if pos:start="165:5" pos:end="173:5">if <condition pos:start="165:8" pos:end="165:42">(<expr pos:start="165:9" pos:end="165:41"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:20">pict_type</name></name> <operator pos:start="165:22" pos:end="165:23">!=</operator> <name pos:start="165:25" pos:end="165:41">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="165:44" pos:end="173:5">{<block_content pos:start="167:9" pos:end="171:57">

        <expr_stmt pos:start="167:9" pos:end="167:50"><expr pos:start="167:9" pos:end="167:49"><name pos:start="167:9" pos:end="167:27"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:27">last_picture_ptr</name></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:49"><name pos:start="167:31" pos:end="167:31">s</name><operator pos:start="167:32" pos:end="167:33">-&gt;</operator><name pos:start="167:34" pos:end="167:49">next_picture_ptr</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="171:57"><if pos:start="169:9" pos:end="171:57">if <condition pos:start="169:12" pos:end="169:26">(<expr pos:start="169:13" pos:end="169:25"><operator pos:start="169:13" pos:end="169:13">!</operator><name pos:start="169:14" pos:end="169:25"><name pos:start="169:14" pos:end="169:14">s</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:25">droppable</name></name></expr>)</condition><block type="pseudo" pos:start="171:13" pos:end="171:57"><block_content pos:start="171:13" pos:end="171:57">

            <expr_stmt pos:start="171:13" pos:end="171:57"><expr pos:start="171:13" pos:end="171:56"><name pos:start="171:13" pos:end="171:31"><name pos:start="171:13" pos:end="171:13">s</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:31">next_picture_ptr</name></name> <operator pos:start="171:33" pos:end="171:33">=</operator> <name pos:start="171:35" pos:end="171:56"><name pos:start="171:35" pos:end="171:35">s</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:56">current_picture_ptr</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="175:5" pos:end="185:40"><expr pos:start="175:5" pos:end="185:39"><call pos:start="175:5" pos:end="185:39"><name pos:start="175:5" pos:end="175:11">av_dlog</name><argument_list pos:start="175:12" pos:end="185:39">(<argument pos:start="175:13" pos:end="175:20"><expr pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:20"><name pos:start="175:13" pos:end="175:13">s</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">avctx</name></name></expr></argument>, <argument pos:start="175:23" pos:end="175:65"><expr pos:start="175:23" pos:end="175:65"><literal type="string" pos:start="175:23" pos:end="175:65">"L%p N%p C%p L%p N%p C%p type:%d drop:%d\n"</literal></expr></argument>,

            <argument pos:start="177:13" pos:end="177:31"><expr pos:start="177:13" pos:end="177:31"><name pos:start="177:13" pos:end="177:31"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:31">last_picture_ptr</name></name></expr></argument>, <argument pos:start="177:34" pos:end="177:52"><expr pos:start="177:34" pos:end="177:52"><name pos:start="177:34" pos:end="177:52"><name pos:start="177:34" pos:end="177:34">s</name><operator pos:start="177:35" pos:end="177:36">-&gt;</operator><name pos:start="177:37" pos:end="177:52">next_picture_ptr</name></name></expr></argument>,<argument pos:start="177:54" pos:end="177:75"><expr pos:start="177:54" pos:end="177:75"><name pos:start="177:54" pos:end="177:75"><name pos:start="177:54" pos:end="177:54">s</name><operator pos:start="177:55" pos:end="177:56">-&gt;</operator><name pos:start="177:57" pos:end="177:75">current_picture_ptr</name></name></expr></argument>,

            <argument pos:start="179:13" pos:end="179:78"><expr pos:start="179:13" pos:end="179:78"><ternary pos:start="179:13" pos:end="179:78"><condition pos:start="179:13" pos:end="179:36"><expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:13">s</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:31">last_picture_ptr</name></name></expr>    ?</condition><then pos:start="179:38" pos:end="179:68"> <expr pos:start="179:38" pos:end="179:68"><name pos:start="179:38" pos:end="179:68"><name pos:start="179:38" pos:end="179:38">s</name><operator pos:start="179:39" pos:end="179:40">-&gt;</operator><name pos:start="179:41" pos:end="179:56">last_picture_ptr</name><operator pos:start="179:57" pos:end="179:58">-&gt;</operator><name pos:start="179:59" pos:end="179:59">f</name><operator pos:start="179:60" pos:end="179:61">-&gt;</operator><name pos:start="179:62" pos:end="179:65">data</name><index pos:start="179:66" pos:end="179:68">[<expr pos:start="179:67" pos:end="179:67"><literal type="number" pos:start="179:67" pos:end="179:67">0</literal></expr>]</index></name></expr>    </then><else pos:start="179:73" pos:end="179:78">: <expr pos:start="179:75" pos:end="179:78"><name pos:start="179:75" pos:end="179:78">NULL</name></expr></else></ternary></expr></argument>,

            <argument pos:start="181:13" pos:end="181:78"><expr pos:start="181:13" pos:end="181:78"><ternary pos:start="181:13" pos:end="181:78"><condition pos:start="181:13" pos:end="181:36"><expr pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:31"><name pos:start="181:13" pos:end="181:13">s</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:31">next_picture_ptr</name></name></expr>    ?</condition><then pos:start="181:38" pos:end="181:68"> <expr pos:start="181:38" pos:end="181:68"><name pos:start="181:38" pos:end="181:68"><name pos:start="181:38" pos:end="181:38">s</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:56">next_picture_ptr</name><operator pos:start="181:57" pos:end="181:58">-&gt;</operator><name pos:start="181:59" pos:end="181:59">f</name><operator pos:start="181:60" pos:end="181:61">-&gt;</operator><name pos:start="181:62" pos:end="181:65">data</name><index pos:start="181:66" pos:end="181:68">[<expr pos:start="181:67" pos:end="181:67"><literal type="number" pos:start="181:67" pos:end="181:67">0</literal></expr>]</index></name></expr>    </then><else pos:start="181:73" pos:end="181:78">: <expr pos:start="181:75" pos:end="181:78"><name pos:start="181:75" pos:end="181:78">NULL</name></expr></else></ternary></expr></argument>,

            <argument pos:start="183:13" pos:end="183:78"><expr pos:start="183:13" pos:end="183:78"><ternary pos:start="183:13" pos:end="183:78"><condition pos:start="183:13" pos:end="183:36"><expr pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:34"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:34">current_picture_ptr</name></name></expr> ?</condition><then pos:start="183:38" pos:end="183:71"> <expr pos:start="183:38" pos:end="183:71"><name pos:start="183:38" pos:end="183:71"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:59">current_picture_ptr</name><operator pos:start="183:60" pos:end="183:61">-&gt;</operator><name pos:start="183:62" pos:end="183:62">f</name><operator pos:start="183:63" pos:end="183:64">-&gt;</operator><name pos:start="183:65" pos:end="183:68">data</name><index pos:start="183:69" pos:end="183:71">[<expr pos:start="183:70" pos:end="183:70"><literal type="number" pos:start="183:70" pos:end="183:70">0</literal></expr>]</index></name></expr> </then><else pos:start="183:73" pos:end="183:78">: <expr pos:start="183:75" pos:end="183:78"><name pos:start="183:75" pos:end="183:78">NULL</name></expr></else></ternary></expr></argument>,

            <argument pos:start="185:13" pos:end="185:24"><expr pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:24">pict_type</name></name></expr></argument>, <argument pos:start="185:27" pos:end="185:38"><expr pos:start="185:27" pos:end="185:38"><name pos:start="185:27" pos:end="185:38"><name pos:start="185:27" pos:end="185:27">s</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:38">droppable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="295:5"><if pos:start="189:5" pos:end="295:5">if <condition pos:start="189:8" pos:end="195:45">(<expr pos:start="189:9" pos:end="195:44"><operator pos:start="189:9" pos:end="189:9">(</operator><name pos:start="189:10" pos:end="189:28"><name pos:start="189:10" pos:end="189:10">s</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:28">last_picture_ptr</name></name> <operator pos:start="189:30" pos:end="189:31">==</operator> <name pos:start="189:33" pos:end="189:36">NULL</name> <operator pos:start="189:38" pos:end="189:39">||</operator>

         <name pos:start="191:10" pos:end="191:39"><name pos:start="191:10" pos:end="191:10">s</name><operator pos:start="191:11" pos:end="191:12">-&gt;</operator><name pos:start="191:13" pos:end="191:28">last_picture_ptr</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:31">f</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:36">buf</name><index pos:start="191:37" pos:end="191:39">[<expr pos:start="191:38" pos:end="191:38"><literal type="number" pos:start="191:38" pos:end="191:38">0</literal></expr>]</index></name> <operator pos:start="191:41" pos:end="191:42">==</operator> <name pos:start="191:44" pos:end="191:47">NULL</name><operator pos:start="191:48" pos:end="191:48">)</operator> <operator pos:start="191:50" pos:end="191:51">&amp;&amp;</operator>

        <operator pos:start="193:9" pos:end="193:9">(</operator><name pos:start="193:10" pos:end="193:21"><name pos:start="193:10" pos:end="193:10">s</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:21">pict_type</name></name> <operator pos:start="193:23" pos:end="193:24">!=</operator> <name pos:start="193:26" pos:end="193:42">AV_PICTURE_TYPE_I</name> <operator pos:start="193:44" pos:end="193:45">||</operator>

         <name pos:start="195:10" pos:end="195:29"><name pos:start="195:10" pos:end="195:10">s</name><operator pos:start="195:11" pos:end="195:12">-&gt;</operator><name pos:start="195:13" pos:end="195:29">picture_structure</name></name> <operator pos:start="195:31" pos:end="195:32">!=</operator> <name pos:start="195:34" pos:end="195:43">PICT_FRAME</name><operator pos:start="195:44" pos:end="195:44">)</operator></expr>)</condition> <block pos:start="195:47" pos:end="295:5">{<block_content pos:start="197:9" pos:end="293:72">

        <decl_stmt pos:start="197:9" pos:end="197:43"><decl pos:start="197:9" pos:end="197:26"><type pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:11">int</name></type> <name pos:start="197:13" pos:end="197:26">h_chroma_shift</name></decl>, <decl pos:start="197:29" pos:end="197:42"><type ref="prev" pos:start="197:9" pos:end="197:11"/><name pos:start="197:29" pos:end="197:42">v_chroma_shift</name></decl>;</decl_stmt>

        <expr_stmt pos:start="199:9" pos:end="201:75"><expr pos:start="199:9" pos:end="201:74"><call pos:start="199:9" pos:end="201:74"><name pos:start="199:9" pos:end="199:40">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="199:41" pos:end="201:74">(<argument pos:start="199:42" pos:end="199:58"><expr pos:start="199:42" pos:end="199:58"><name pos:start="199:42" pos:end="199:58"><name pos:start="199:42" pos:end="199:42">s</name><operator pos:start="199:43" pos:end="199:44">-&gt;</operator><name pos:start="199:45" pos:end="199:49">avctx</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:58">pix_fmt</name></name></expr></argument>,

                                         <argument pos:start="201:42" pos:end="201:56"><expr pos:start="201:42" pos:end="201:56"><operator pos:start="201:42" pos:end="201:42">&amp;</operator><name pos:start="201:43" pos:end="201:56">h_chroma_shift</name></expr></argument>, <argument pos:start="201:59" pos:end="201:73"><expr pos:start="201:59" pos:end="201:73"><operator pos:start="201:59" pos:end="201:59">&amp;</operator><name pos:start="201:60" pos:end="201:73">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="203:9" pos:end="219:83"><if pos:start="203:9" pos:end="207:66">if <condition pos:start="203:12" pos:end="203:103">(<expr pos:start="203:13" pos:end="203:102"><name pos:start="203:13" pos:end="203:24"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:24">pict_type</name></name> <operator pos:start="203:26" pos:end="203:27">==</operator> <name pos:start="203:29" pos:end="203:45">AV_PICTURE_TYPE_B</name> <operator pos:start="203:47" pos:end="203:48">&amp;&amp;</operator> <name pos:start="203:50" pos:end="203:68"><name pos:start="203:50" pos:end="203:50">s</name><operator pos:start="203:51" pos:end="203:52">-&gt;</operator><name pos:start="203:53" pos:end="203:68">next_picture_ptr</name></name> <operator pos:start="203:70" pos:end="203:71">&amp;&amp;</operator> <name pos:start="203:73" pos:end="203:102"><name pos:start="203:73" pos:end="203:73">s</name><operator pos:start="203:74" pos:end="203:75">-&gt;</operator><name pos:start="203:76" pos:end="203:91">next_picture_ptr</name><operator pos:start="203:92" pos:end="203:93">-&gt;</operator><name pos:start="203:94" pos:end="203:94">f</name><operator pos:start="203:95" pos:end="203:96">-&gt;</operator><name pos:start="203:97" pos:end="203:99">buf</name><index pos:start="203:100" pos:end="203:102">[<expr pos:start="203:101" pos:end="203:101"><literal type="number" pos:start="203:101" pos:end="203:101">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="207:66"><block_content pos:start="205:13" pos:end="207:66">

            <expr_stmt pos:start="205:13" pos:end="207:66"><expr pos:start="205:13" pos:end="207:65"><call pos:start="205:13" pos:end="207:65"><name pos:start="205:13" pos:end="205:18">av_log</name><argument_list pos:start="205:19" pos:end="207:65">(<argument pos:start="205:20" pos:end="205:24"><expr pos:start="205:20" pos:end="205:24"><name pos:start="205:20" pos:end="205:24">avctx</name></expr></argument>, <argument pos:start="205:27" pos:end="205:38"><expr pos:start="205:27" pos:end="205:38"><name pos:start="205:27" pos:end="205:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="207:20" pos:end="207:64"><expr pos:start="207:20" pos:end="207:64"><literal type="string" pos:start="207:20" pos:end="207:64">"allocating dummy last picture for B frame\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="209:9" pos:end="213:60">else if <condition pos:start="209:17" pos:end="209:51">(<expr pos:start="209:18" pos:end="209:50"><name pos:start="209:18" pos:end="209:29"><name pos:start="209:18" pos:end="209:18">s</name><operator pos:start="209:19" pos:end="209:20">-&gt;</operator><name pos:start="209:21" pos:end="209:29">pict_type</name></name> <operator pos:start="209:31" pos:end="209:32">!=</operator> <name pos:start="209:34" pos:end="209:50">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="213:60"><block_content pos:start="211:13" pos:end="213:60">

            <expr_stmt pos:start="211:13" pos:end="213:60"><expr pos:start="211:13" pos:end="213:59"><call pos:start="211:13" pos:end="213:59"><name pos:start="211:13" pos:end="211:18">av_log</name><argument_list pos:start="211:19" pos:end="213:59">(<argument pos:start="211:20" pos:end="211:24"><expr pos:start="211:20" pos:end="211:24"><name pos:start="211:20" pos:end="211:24">avctx</name></expr></argument>, <argument pos:start="211:27" pos:end="211:38"><expr pos:start="211:27" pos:end="211:38"><name pos:start="211:27" pos:end="211:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="213:20" pos:end="213:58"><expr pos:start="213:20" pos:end="213:58"><literal type="string" pos:start="213:20" pos:end="213:58">"warning: first frame is no keyframe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="215:9" pos:end="219:83">else if <condition pos:start="215:17" pos:end="215:52">(<expr pos:start="215:18" pos:end="215:51"><name pos:start="215:18" pos:end="215:37"><name pos:start="215:18" pos:end="215:18">s</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:37">picture_structure</name></name> <operator pos:start="215:39" pos:end="215:40">!=</operator> <name pos:start="215:42" pos:end="215:51">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="217:13" pos:end="219:83"><block_content pos:start="217:13" pos:end="219:83">

            <expr_stmt pos:start="217:13" pos:end="219:83"><expr pos:start="217:13" pos:end="219:82"><call pos:start="217:13" pos:end="219:82"><name pos:start="217:13" pos:end="217:18">av_log</name><argument_list pos:start="217:19" pos:end="219:82">(<argument pos:start="217:20" pos:end="217:24"><expr pos:start="217:20" pos:end="217:24"><name pos:start="217:20" pos:end="217:24">avctx</name></expr></argument>, <argument pos:start="217:27" pos:end="217:38"><expr pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:38">AV_LOG_DEBUG</name></expr></argument>,

                   <argument pos:start="219:20" pos:end="219:81"><expr pos:start="219:20" pos:end="219:81"><literal type="string" pos:start="219:20" pos:end="219:81">"allocate dummy last picture for field based first keyframe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="223:9" pos:end="223:36">/* Allocate a dummy frame */</comment>

        <expr_stmt pos:start="225:9" pos:end="225:41"><expr pos:start="225:9" pos:end="225:40"><name pos:start="225:9" pos:end="225:9">i</name> <operator pos:start="225:11" pos:end="225:11">=</operator> <call pos:start="225:13" pos:end="225:40"><name pos:start="225:13" pos:end="225:34">ff_find_unused_picture</name><argument_list pos:start="225:35" pos:end="225:40">(<argument pos:start="225:36" pos:end="225:36"><expr pos:start="225:36" pos:end="225:36"><name pos:start="225:36" pos:end="225:36">s</name></expr></argument>, <argument pos:start="225:39" pos:end="225:39"><expr pos:start="225:39" pos:end="225:39"><literal type="number" pos:start="225:39" pos:end="225:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="227:9" pos:end="233:9"><if pos:start="227:9" pos:end="233:9">if <condition pos:start="227:12" pos:end="227:18">(<expr pos:start="227:13" pos:end="227:17"><name pos:start="227:13" pos:end="227:13">i</name> <operator pos:start="227:15" pos:end="227:15">&lt;</operator> <literal type="number" pos:start="227:17" pos:end="227:17">0</literal></expr>)</condition> <block pos:start="227:20" pos:end="233:9">{<block_content pos:start="229:13" pos:end="231:21">

            <expr_stmt pos:start="229:13" pos:end="229:74"><expr pos:start="229:13" pos:end="229:73"><call pos:start="229:13" pos:end="229:73"><name pos:start="229:13" pos:end="229:18">av_log</name><argument_list pos:start="229:19" pos:end="229:73">(<argument pos:start="229:20" pos:end="229:27"><expr pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:20">s</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:27">avctx</name></name></expr></argument>, <argument pos:start="229:30" pos:end="229:41"><expr pos:start="229:30" pos:end="229:41"><name pos:start="229:30" pos:end="229:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="229:44" pos:end="229:72"><expr pos:start="229:44" pos:end="229:72"><literal type="string" pos:start="229:44" pos:end="229:72">"no frame buffer available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="231:13" pos:end="231:21">return <expr pos:start="231:20" pos:end="231:20"><name pos:start="231:20" pos:end="231:20">i</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:45"><expr pos:start="235:9" pos:end="235:44"><name pos:start="235:9" pos:end="235:27"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:27">last_picture_ptr</name></name> <operator pos:start="235:29" pos:end="235:29">=</operator> <operator pos:start="235:31" pos:end="235:31">&amp;</operator><name pos:start="235:32" pos:end="235:44"><name pos:start="235:32" pos:end="235:32">s</name><operator pos:start="235:33" pos:end="235:34">-&gt;</operator><name pos:start="235:35" pos:end="235:41">picture</name><index pos:start="235:42" pos:end="235:44">[<expr pos:start="235:43" pos:end="235:43"><name pos:start="235:43" pos:end="235:43">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="239:9" pos:end="239:45"><expr pos:start="239:9" pos:end="239:44"><name pos:start="239:9" pos:end="239:38"><name pos:start="239:9" pos:end="239:9">s</name><operator pos:start="239:10" pos:end="239:11">-&gt;</operator><name pos:start="239:12" pos:end="239:27">last_picture_ptr</name><operator pos:start="239:28" pos:end="239:29">-&gt;</operator><name pos:start="239:30" pos:end="239:38">reference</name></name>   <operator pos:start="239:42" pos:end="239:42">=</operator> <literal type="number" pos:start="239:44" pos:end="239:44">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:46"><expr pos:start="241:9" pos:end="241:45"><name pos:start="241:9" pos:end="241:41"><name pos:start="241:9" pos:end="241:9">s</name><operator pos:start="241:10" pos:end="241:11">-&gt;</operator><name pos:start="241:12" pos:end="241:27">last_picture_ptr</name><operator pos:start="241:28" pos:end="241:29">-&gt;</operator><name pos:start="241:30" pos:end="241:30">f</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:41">key_frame</name></name> <operator pos:start="241:43" pos:end="241:43">=</operator> <literal type="number" pos:start="241:45" pos:end="241:45">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:62"><expr pos:start="243:9" pos:end="243:61"><name pos:start="243:9" pos:end="243:41"><name pos:start="243:9" pos:end="243:9">s</name><operator pos:start="243:10" pos:end="243:11">-&gt;</operator><name pos:start="243:12" pos:end="243:27">last_picture_ptr</name><operator pos:start="243:28" pos:end="243:29">-&gt;</operator><name pos:start="243:30" pos:end="243:30">f</name><operator pos:start="243:31" pos:end="243:32">-&gt;</operator><name pos:start="243:33" pos:end="243:41">pict_type</name></name> <operator pos:start="243:43" pos:end="243:43">=</operator> <name pos:start="243:45" pos:end="243:61">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>



        <if_stmt pos:start="247:9" pos:end="253:9"><if pos:start="247:9" pos:end="253:9">if <condition pos:start="247:12" pos:end="247:60">(<expr pos:start="247:13" pos:end="247:59"><call pos:start="247:13" pos:end="247:55"><name pos:start="247:13" pos:end="247:28">ff_alloc_picture</name><argument_list pos:start="247:29" pos:end="247:55">(<argument pos:start="247:30" pos:end="247:30"><expr pos:start="247:30" pos:end="247:30"><name pos:start="247:30" pos:end="247:30">s</name></expr></argument>, <argument pos:start="247:33" pos:end="247:51"><expr pos:start="247:33" pos:end="247:51"><name pos:start="247:33" pos:end="247:51"><name pos:start="247:33" pos:end="247:33">s</name><operator pos:start="247:34" pos:end="247:35">-&gt;</operator><name pos:start="247:36" pos:end="247:51">last_picture_ptr</name></name></expr></argument>, <argument pos:start="247:54" pos:end="247:54"><expr pos:start="247:54" pos:end="247:54"><literal type="number" pos:start="247:54" pos:end="247:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="247:57" pos:end="247:57">&lt;</operator> <literal type="number" pos:start="247:59" pos:end="247:59">0</literal></expr>)</condition> <block pos:start="247:62" pos:end="253:9">{<block_content pos:start="249:13" pos:end="251:22">

            <expr_stmt pos:start="249:13" pos:end="249:39"><expr pos:start="249:13" pos:end="249:38"><name pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:13">s</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:31">last_picture_ptr</name></name> <operator pos:start="249:33" pos:end="249:33">=</operator> <name pos:start="249:35" pos:end="249:38">NULL</name></expr>;</expr_stmt>

            <return pos:start="251:13" pos:end="251:22">return <expr pos:start="251:20" pos:end="251:21"><operator pos:start="251:20" pos:end="251:20">-</operator><literal type="number" pos:start="251:21" pos:end="251:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="257:9" pos:end="287:9"><if pos:start="257:9" pos:end="287:9">if <condition pos:start="257:12" pos:end="257:28">(<expr pos:start="257:13" pos:end="257:27"><operator pos:start="257:13" pos:end="257:13">!</operator><name pos:start="257:14" pos:end="257:27"><name pos:start="257:14" pos:end="257:18">avctx</name><operator pos:start="257:19" pos:end="257:20">-&gt;</operator><name pos:start="257:21" pos:end="257:27">hwaccel</name></name></expr>)</condition> <block pos:start="257:30" pos:end="287:9">{<block_content pos:start="259:13" pos:end="285:13">

            <for pos:start="259:13" pos:end="263:43">for<control pos:start="259:16" pos:end="259:42">(<init pos:start="259:17" pos:end="259:20"><expr pos:start="259:17" pos:end="259:19"><name pos:start="259:17" pos:end="259:17">i</name><operator pos:start="259:18" pos:end="259:18">=</operator><literal type="number" pos:start="259:19" pos:end="259:19">0</literal></expr>;</init> <condition pos:start="259:22" pos:end="259:37"><expr pos:start="259:22" pos:end="259:36"><name pos:start="259:22" pos:end="259:22">i</name><operator pos:start="259:23" pos:end="259:23">&lt;</operator><name pos:start="259:24" pos:end="259:36"><name pos:start="259:24" pos:end="259:28">avctx</name><operator pos:start="259:29" pos:end="259:30">-&gt;</operator><name pos:start="259:31" pos:end="259:36">height</name></name></expr>;</condition> <incr pos:start="259:39" pos:end="259:41"><expr pos:start="259:39" pos:end="259:41"><name pos:start="259:39" pos:end="259:39">i</name><operator pos:start="259:40" pos:end="259:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="261:17" pos:end="263:43"><block_content pos:start="261:17" pos:end="263:43">

                <expr_stmt pos:start="261:17" pos:end="263:43"><expr pos:start="261:17" pos:end="263:42"><call pos:start="261:17" pos:end="263:42"><name pos:start="261:17" pos:end="261:22">memset</name><argument_list pos:start="261:23" pos:end="263:42">(<argument pos:start="261:24" pos:end="261:94"><expr pos:start="261:24" pos:end="261:94"><name pos:start="261:24" pos:end="261:54"><name pos:start="261:24" pos:end="261:24">s</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:42">last_picture_ptr</name><operator pos:start="261:43" pos:end="261:44">-&gt;</operator><name pos:start="261:45" pos:end="261:45">f</name><operator pos:start="261:46" pos:end="261:47">-&gt;</operator><name pos:start="261:48" pos:end="261:51">data</name><index pos:start="261:52" pos:end="261:54">[<expr pos:start="261:53" pos:end="261:53"><literal type="number" pos:start="261:53" pos:end="261:53">0</literal></expr>]</index></name> <operator pos:start="261:56" pos:end="261:56">+</operator> <name pos:start="261:58" pos:end="261:92"><name pos:start="261:58" pos:end="261:58">s</name><operator pos:start="261:59" pos:end="261:60">-&gt;</operator><name pos:start="261:61" pos:end="261:76">last_picture_ptr</name><operator pos:start="261:77" pos:end="261:78">-&gt;</operator><name pos:start="261:79" pos:end="261:79">f</name><operator pos:start="261:80" pos:end="261:81">-&gt;</operator><name pos:start="261:82" pos:end="261:89">linesize</name><index pos:start="261:90" pos:end="261:92">[<expr pos:start="261:91" pos:end="261:91"><literal type="number" pos:start="261:91" pos:end="261:91">0</literal></expr>]</index></name><operator pos:start="261:93" pos:end="261:93">*</operator><name pos:start="261:94" pos:end="261:94">i</name></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:27"><expr pos:start="263:24" pos:end="263:27"><literal type="number" pos:start="263:24" pos:end="263:27">0x80</literal></expr></argument>, <argument pos:start="263:30" pos:end="263:41"><expr pos:start="263:30" pos:end="263:41"><name pos:start="263:30" pos:end="263:41"><name pos:start="263:30" pos:end="263:34">avctx</name><operator pos:start="263:35" pos:end="263:36">-&gt;</operator><name pos:start="263:37" pos:end="263:41">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <for pos:start="265:13" pos:end="275:13">for<control pos:start="265:16" pos:end="265:74">(<init pos:start="265:17" pos:end="265:20"><expr pos:start="265:17" pos:end="265:19"><name pos:start="265:17" pos:end="265:17">i</name><operator pos:start="265:18" pos:end="265:18">=</operator><literal type="number" pos:start="265:19" pos:end="265:19">0</literal></expr>;</init> <condition pos:start="265:22" pos:end="265:69"><expr pos:start="265:22" pos:end="265:68"><name pos:start="265:22" pos:end="265:22">i</name><operator pos:start="265:23" pos:end="265:23">&lt;</operator><call pos:start="265:24" pos:end="265:68"><name pos:start="265:24" pos:end="265:37">FF_CEIL_RSHIFT</name><argument_list pos:start="265:38" pos:end="265:68">(<argument pos:start="265:39" pos:end="265:51"><expr pos:start="265:39" pos:end="265:51"><name pos:start="265:39" pos:end="265:51"><name pos:start="265:39" pos:end="265:43">avctx</name><operator pos:start="265:44" pos:end="265:45">-&gt;</operator><name pos:start="265:46" pos:end="265:51">height</name></name></expr></argument>, <argument pos:start="265:54" pos:end="265:67"><expr pos:start="265:54" pos:end="265:67"><name pos:start="265:54" pos:end="265:67">v_chroma_shift</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="265:71" pos:end="265:73"><expr pos:start="265:71" pos:end="265:73"><name pos:start="265:71" pos:end="265:71">i</name><operator pos:start="265:72" pos:end="265:73">++</operator></expr></incr>)</control> <block pos:start="265:76" pos:end="275:13">{<block_content pos:start="267:17" pos:end="273:75">

                <expr_stmt pos:start="267:17" pos:end="269:75"><expr pos:start="267:17" pos:end="269:74"><call pos:start="267:17" pos:end="269:74"><name pos:start="267:17" pos:end="267:22">memset</name><argument_list pos:start="267:23" pos:end="269:74">(<argument pos:start="267:24" pos:end="267:94"><expr pos:start="267:24" pos:end="267:94"><name pos:start="267:24" pos:end="267:54"><name pos:start="267:24" pos:end="267:24">s</name><operator pos:start="267:25" pos:end="267:26">-&gt;</operator><name pos:start="267:27" pos:end="267:42">last_picture_ptr</name><operator pos:start="267:43" pos:end="267:44">-&gt;</operator><name pos:start="267:45" pos:end="267:45">f</name><operator pos:start="267:46" pos:end="267:47">-&gt;</operator><name pos:start="267:48" pos:end="267:51">data</name><index pos:start="267:52" pos:end="267:54">[<expr pos:start="267:53" pos:end="267:53"><literal type="number" pos:start="267:53" pos:end="267:53">1</literal></expr>]</index></name> <operator pos:start="267:56" pos:end="267:56">+</operator> <name pos:start="267:58" pos:end="267:92"><name pos:start="267:58" pos:end="267:58">s</name><operator pos:start="267:59" pos:end="267:60">-&gt;</operator><name pos:start="267:61" pos:end="267:76">last_picture_ptr</name><operator pos:start="267:77" pos:end="267:78">-&gt;</operator><name pos:start="267:79" pos:end="267:79">f</name><operator pos:start="267:80" pos:end="267:81">-&gt;</operator><name pos:start="267:82" pos:end="267:89">linesize</name><index pos:start="267:90" pos:end="267:92">[<expr pos:start="267:91" pos:end="267:91"><literal type="number" pos:start="267:91" pos:end="267:91">1</literal></expr>]</index></name><operator pos:start="267:93" pos:end="267:93">*</operator><name pos:start="267:94" pos:end="267:94">i</name></expr></argument>,

                       <argument pos:start="269:24" pos:end="269:27"><expr pos:start="269:24" pos:end="269:27"><literal type="number" pos:start="269:24" pos:end="269:27">0x80</literal></expr></argument>, <argument pos:start="269:30" pos:end="269:73"><expr pos:start="269:30" pos:end="269:73"><call pos:start="269:30" pos:end="269:73"><name pos:start="269:30" pos:end="269:43">FF_CEIL_RSHIFT</name><argument_list pos:start="269:44" pos:end="269:73">(<argument pos:start="269:45" pos:end="269:56"><expr pos:start="269:45" pos:end="269:56"><name pos:start="269:45" pos:end="269:56"><name pos:start="269:45" pos:end="269:49">avctx</name><operator pos:start="269:50" pos:end="269:51">-&gt;</operator><name pos:start="269:52" pos:end="269:56">width</name></name></expr></argument>, <argument pos:start="269:59" pos:end="269:72"><expr pos:start="269:59" pos:end="269:72"><name pos:start="269:59" pos:end="269:72">h_chroma_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="273:75"><expr pos:start="271:17" pos:end="273:74"><call pos:start="271:17" pos:end="273:74"><name pos:start="271:17" pos:end="271:22">memset</name><argument_list pos:start="271:23" pos:end="273:74">(<argument pos:start="271:24" pos:end="271:94"><expr pos:start="271:24" pos:end="271:94"><name pos:start="271:24" pos:end="271:54"><name pos:start="271:24" pos:end="271:24">s</name><operator pos:start="271:25" pos:end="271:26">-&gt;</operator><name pos:start="271:27" pos:end="271:42">last_picture_ptr</name><operator pos:start="271:43" pos:end="271:44">-&gt;</operator><name pos:start="271:45" pos:end="271:45">f</name><operator pos:start="271:46" pos:end="271:47">-&gt;</operator><name pos:start="271:48" pos:end="271:51">data</name><index pos:start="271:52" pos:end="271:54">[<expr pos:start="271:53" pos:end="271:53"><literal type="number" pos:start="271:53" pos:end="271:53">2</literal></expr>]</index></name> <operator pos:start="271:56" pos:end="271:56">+</operator> <name pos:start="271:58" pos:end="271:92"><name pos:start="271:58" pos:end="271:58">s</name><operator pos:start="271:59" pos:end="271:60">-&gt;</operator><name pos:start="271:61" pos:end="271:76">last_picture_ptr</name><operator pos:start="271:77" pos:end="271:78">-&gt;</operator><name pos:start="271:79" pos:end="271:79">f</name><operator pos:start="271:80" pos:end="271:81">-&gt;</operator><name pos:start="271:82" pos:end="271:89">linesize</name><index pos:start="271:90" pos:end="271:92">[<expr pos:start="271:91" pos:end="271:91"><literal type="number" pos:start="271:91" pos:end="271:91">2</literal></expr>]</index></name><operator pos:start="271:93" pos:end="271:93">*</operator><name pos:start="271:94" pos:end="271:94">i</name></expr></argument>,

                       <argument pos:start="273:24" pos:end="273:27"><expr pos:start="273:24" pos:end="273:27"><literal type="number" pos:start="273:24" pos:end="273:27">0x80</literal></expr></argument>, <argument pos:start="273:30" pos:end="273:73"><expr pos:start="273:30" pos:end="273:73"><call pos:start="273:30" pos:end="273:73"><name pos:start="273:30" pos:end="273:43">FF_CEIL_RSHIFT</name><argument_list pos:start="273:44" pos:end="273:73">(<argument pos:start="273:45" pos:end="273:56"><expr pos:start="273:45" pos:end="273:56"><name pos:start="273:45" pos:end="273:56"><name pos:start="273:45" pos:end="273:49">avctx</name><operator pos:start="273:50" pos:end="273:51">-&gt;</operator><name pos:start="273:52" pos:end="273:56">width</name></name></expr></argument>, <argument pos:start="273:59" pos:end="273:72"><expr pos:start="273:59" pos:end="273:72"><name pos:start="273:59" pos:end="273:72">h_chroma_shift</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <if_stmt pos:start="279:13" pos:end="285:13"><if pos:start="279:13" pos:end="285:13">if<condition pos:start="279:15" pos:end="279:82">(<expr pos:start="279:16" pos:end="279:81"><name pos:start="279:16" pos:end="279:26"><name pos:start="279:16" pos:end="279:16">s</name><operator pos:start="279:17" pos:end="279:18">-&gt;</operator><name pos:start="279:19" pos:end="279:26">codec_id</name></name> <operator pos:start="279:28" pos:end="279:29">==</operator> <name pos:start="279:31" pos:end="279:46">AV_CODEC_ID_FLV1</name> <operator pos:start="279:48" pos:end="279:49">||</operator> <name pos:start="279:51" pos:end="279:61"><name pos:start="279:51" pos:end="279:51">s</name><operator pos:start="279:52" pos:end="279:53">-&gt;</operator><name pos:start="279:54" pos:end="279:61">codec_id</name></name> <operator pos:start="279:63" pos:end="279:64">==</operator> <name pos:start="279:66" pos:end="279:81">AV_CODEC_ID_H263</name></expr>)</condition><block pos:start="279:83" pos:end="285:13">{<block_content pos:start="281:17" pos:end="283:114">

                <for pos:start="281:17" pos:end="283:114">for<control pos:start="281:20" pos:end="281:46">(<init pos:start="281:21" pos:end="281:24"><expr pos:start="281:21" pos:end="281:23"><name pos:start="281:21" pos:end="281:21">i</name><operator pos:start="281:22" pos:end="281:22">=</operator><literal type="number" pos:start="281:23" pos:end="281:23">0</literal></expr>;</init> <condition pos:start="281:26" pos:end="281:41"><expr pos:start="281:26" pos:end="281:40"><name pos:start="281:26" pos:end="281:26">i</name><operator pos:start="281:27" pos:end="281:27">&lt;</operator><name pos:start="281:28" pos:end="281:40"><name pos:start="281:28" pos:end="281:32">avctx</name><operator pos:start="281:33" pos:end="281:34">-&gt;</operator><name pos:start="281:35" pos:end="281:40">height</name></name></expr>;</condition> <incr pos:start="281:43" pos:end="281:45"><expr pos:start="281:43" pos:end="281:45"><name pos:start="281:43" pos:end="281:43">i</name><operator pos:start="281:44" pos:end="281:45">++</operator></expr></incr>)</control><block type="pseudo" pos:start="283:17" pos:end="283:114"><block_content pos:start="283:17" pos:end="283:114">

                <expr_stmt pos:start="283:17" pos:end="283:114"><expr pos:start="283:17" pos:end="283:113"><call pos:start="283:17" pos:end="283:113"><name pos:start="283:17" pos:end="283:22">memset</name><argument_list pos:start="283:23" pos:end="283:113">(<argument pos:start="283:24" pos:end="283:94"><expr pos:start="283:24" pos:end="283:94"><name pos:start="283:24" pos:end="283:54"><name pos:start="283:24" pos:end="283:24">s</name><operator pos:start="283:25" pos:end="283:26">-&gt;</operator><name pos:start="283:27" pos:end="283:42">last_picture_ptr</name><operator pos:start="283:43" pos:end="283:44">-&gt;</operator><name pos:start="283:45" pos:end="283:45">f</name><operator pos:start="283:46" pos:end="283:47">-&gt;</operator><name pos:start="283:48" pos:end="283:51">data</name><index pos:start="283:52" pos:end="283:54">[<expr pos:start="283:53" pos:end="283:53"><literal type="number" pos:start="283:53" pos:end="283:53">0</literal></expr>]</index></name> <operator pos:start="283:56" pos:end="283:56">+</operator> <name pos:start="283:58" pos:end="283:92"><name pos:start="283:58" pos:end="283:58">s</name><operator pos:start="283:59" pos:end="283:60">-&gt;</operator><name pos:start="283:61" pos:end="283:76">last_picture_ptr</name><operator pos:start="283:77" pos:end="283:78">-&gt;</operator><name pos:start="283:79" pos:end="283:79">f</name><operator pos:start="283:80" pos:end="283:81">-&gt;</operator><name pos:start="283:82" pos:end="283:89">linesize</name><index pos:start="283:90" pos:end="283:92">[<expr pos:start="283:91" pos:end="283:91"><literal type="number" pos:start="283:91" pos:end="283:91">0</literal></expr>]</index></name><operator pos:start="283:93" pos:end="283:93">*</operator><name pos:start="283:94" pos:end="283:94">i</name></expr></argument>, <argument pos:start="283:97" pos:end="283:98"><expr pos:start="283:97" pos:end="283:98"><literal type="number" pos:start="283:97" pos:end="283:98">16</literal></expr></argument>, <argument pos:start="283:101" pos:end="283:112"><expr pos:start="283:101" pos:end="283:112"><name pos:start="283:101" pos:end="283:112"><name pos:start="283:101" pos:end="283:105">avctx</name><operator pos:start="283:106" pos:end="283:107">-&gt;</operator><name pos:start="283:108" pos:end="283:112">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="291:9" pos:end="291:72"><expr pos:start="291:9" pos:end="291:71"><call pos:start="291:9" pos:end="291:71"><name pos:start="291:9" pos:end="291:33">ff_thread_report_progress</name><argument_list pos:start="291:34" pos:end="291:71">(<argument pos:start="291:35" pos:end="291:58"><expr pos:start="291:35" pos:end="291:58"><operator pos:start="291:35" pos:end="291:35">&amp;</operator><name pos:start="291:36" pos:end="291:58"><name pos:start="291:36" pos:end="291:36">s</name><operator pos:start="291:37" pos:end="291:38">-&gt;</operator><name pos:start="291:39" pos:end="291:54">last_picture_ptr</name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:58">tf</name></name></expr></argument>, <argument pos:start="291:61" pos:end="291:67"><expr pos:start="291:61" pos:end="291:67"><name pos:start="291:61" pos:end="291:67">INT_MAX</name></expr></argument>, <argument pos:start="291:70" pos:end="291:70"><expr pos:start="291:70" pos:end="291:70"><literal type="number" pos:start="291:70" pos:end="291:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:72"><expr pos:start="293:9" pos:end="293:71"><call pos:start="293:9" pos:end="293:71"><name pos:start="293:9" pos:end="293:33">ff_thread_report_progress</name><argument_list pos:start="293:34" pos:end="293:71">(<argument pos:start="293:35" pos:end="293:58"><expr pos:start="293:35" pos:end="293:58"><operator pos:start="293:35" pos:end="293:35">&amp;</operator><name pos:start="293:36" pos:end="293:58"><name pos:start="293:36" pos:end="293:36">s</name><operator pos:start="293:37" pos:end="293:38">-&gt;</operator><name pos:start="293:39" pos:end="293:54">last_picture_ptr</name><operator pos:start="293:55" pos:end="293:56">-&gt;</operator><name pos:start="293:57" pos:end="293:58">tf</name></name></expr></argument>, <argument pos:start="293:61" pos:end="293:67"><expr pos:start="293:61" pos:end="293:67"><name pos:start="293:61" pos:end="293:67">INT_MAX</name></expr></argument>, <argument pos:start="293:70" pos:end="293:70"><expr pos:start="293:70" pos:end="293:70"><literal type="number" pos:start="293:70" pos:end="293:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="297:5" pos:end="350:0"><if pos:start="297:5" pos:end="350:0">if <condition pos:start="297:8" pos:end="301:42">(<expr pos:start="297:9" pos:end="301:41"><operator pos:start="297:9" pos:end="297:9">(</operator><name pos:start="297:10" pos:end="297:28"><name pos:start="297:10" pos:end="297:10">s</name><operator pos:start="297:11" pos:end="297:12">-&gt;</operator><name pos:start="297:13" pos:end="297:28">next_picture_ptr</name></name> <operator pos:start="297:30" pos:end="297:31">==</operator> <name pos:start="297:33" pos:end="297:36">NULL</name> <operator pos:start="297:38" pos:end="297:39">||</operator>

         <name pos:start="299:10" pos:end="299:39"><name pos:start="299:10" pos:end="299:10">s</name><operator pos:start="299:11" pos:end="299:12">-&gt;</operator><name pos:start="299:13" pos:end="299:28">next_picture_ptr</name><operator pos:start="299:29" pos:end="299:30">-&gt;</operator><name pos:start="299:31" pos:end="299:31">f</name><operator pos:start="299:32" pos:end="299:33">-&gt;</operator><name pos:start="299:34" pos:end="299:36">buf</name><index pos:start="299:37" pos:end="299:39">[<expr pos:start="299:38" pos:end="299:38"><literal type="number" pos:start="299:38" pos:end="299:38">0</literal></expr>]</index></name> <operator pos:start="299:41" pos:end="299:42">==</operator> <name pos:start="299:44" pos:end="299:47">NULL</name><operator pos:start="299:48" pos:end="299:48">)</operator> <operator pos:start="299:50" pos:end="299:51">&amp;&amp;</operator>

        <name pos:start="301:9" pos:end="301:20"><name pos:start="301:9" pos:end="301:9">s</name><operator pos:start="301:10" pos:end="301:11">-&gt;</operator><name pos:start="301:12" pos:end="301:20">pict_type</name></name> <operator pos:start="301:22" pos:end="301:23">==</operator> <name pos:start="301:25" pos:end="301:41">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="301:44" pos:end="350:0">{<block_content pos:start="305:9" pos:end="337:72">

        <comment type="block" pos:start="303:9" pos:end="303:36">/* Allocate a dummy frame */</comment>

        <expr_stmt pos:start="305:9" pos:end="305:41"><expr pos:start="305:9" pos:end="305:40"><name pos:start="305:9" pos:end="305:9">i</name> <operator pos:start="305:11" pos:end="305:11">=</operator> <call pos:start="305:13" pos:end="305:40"><name pos:start="305:13" pos:end="305:34">ff_find_unused_picture</name><argument_list pos:start="305:35" pos:end="305:40">(<argument pos:start="305:36" pos:end="305:36"><expr pos:start="305:36" pos:end="305:36"><name pos:start="305:36" pos:end="305:36">s</name></expr></argument>, <argument pos:start="305:39" pos:end="305:39"><expr pos:start="305:39" pos:end="305:39"><literal type="number" pos:start="305:39" pos:end="305:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="307:9" pos:end="313:9"><if pos:start="307:9" pos:end="313:9">if <condition pos:start="307:12" pos:end="307:18">(<expr pos:start="307:13" pos:end="307:17"><name pos:start="307:13" pos:end="307:13">i</name> <operator pos:start="307:15" pos:end="307:15">&lt;</operator> <literal type="number" pos:start="307:17" pos:end="307:17">0</literal></expr>)</condition> <block pos:start="307:20" pos:end="313:9">{<block_content pos:start="309:13" pos:end="311:21">

            <expr_stmt pos:start="309:13" pos:end="309:74"><expr pos:start="309:13" pos:end="309:73"><call pos:start="309:13" pos:end="309:73"><name pos:start="309:13" pos:end="309:18">av_log</name><argument_list pos:start="309:19" pos:end="309:73">(<argument pos:start="309:20" pos:end="309:27"><expr pos:start="309:20" pos:end="309:27"><name pos:start="309:20" pos:end="309:27"><name pos:start="309:20" pos:end="309:20">s</name><operator pos:start="309:21" pos:end="309:22">-&gt;</operator><name pos:start="309:23" pos:end="309:27">avctx</name></name></expr></argument>, <argument pos:start="309:30" pos:end="309:41"><expr pos:start="309:30" pos:end="309:41"><name pos:start="309:30" pos:end="309:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="309:44" pos:end="309:72"><expr pos:start="309:44" pos:end="309:72"><literal type="string" pos:start="309:44" pos:end="309:72">"no frame buffer available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="311:13" pos:end="311:21">return <expr pos:start="311:20" pos:end="311:20"><name pos:start="311:20" pos:end="311:20">i</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:45"><expr pos:start="315:9" pos:end="315:44"><name pos:start="315:9" pos:end="315:27"><name pos:start="315:9" pos:end="315:9">s</name><operator pos:start="315:10" pos:end="315:11">-&gt;</operator><name pos:start="315:12" pos:end="315:27">next_picture_ptr</name></name> <operator pos:start="315:29" pos:end="315:29">=</operator> <operator pos:start="315:31" pos:end="315:31">&amp;</operator><name pos:start="315:32" pos:end="315:44"><name pos:start="315:32" pos:end="315:32">s</name><operator pos:start="315:33" pos:end="315:34">-&gt;</operator><name pos:start="315:35" pos:end="315:41">picture</name><index pos:start="315:42" pos:end="315:44">[<expr pos:start="315:43" pos:end="315:43"><name pos:start="315:43" pos:end="315:43">i</name></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="319:9" pos:end="319:45"><expr pos:start="319:9" pos:end="319:44"><name pos:start="319:9" pos:end="319:38"><name pos:start="319:9" pos:end="319:9">s</name><operator pos:start="319:10" pos:end="319:11">-&gt;</operator><name pos:start="319:12" pos:end="319:27">next_picture_ptr</name><operator pos:start="319:28" pos:end="319:29">-&gt;</operator><name pos:start="319:30" pos:end="319:38">reference</name></name>   <operator pos:start="319:42" pos:end="319:42">=</operator> <literal type="number" pos:start="319:44" pos:end="319:44">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="321:9" pos:end="321:46"><expr pos:start="321:9" pos:end="321:45"><name pos:start="321:9" pos:end="321:41"><name pos:start="321:9" pos:end="321:9">s</name><operator pos:start="321:10" pos:end="321:11">-&gt;</operator><name pos:start="321:12" pos:end="321:27">next_picture_ptr</name><operator pos:start="321:28" pos:end="321:29">-&gt;</operator><name pos:start="321:30" pos:end="321:30">f</name><operator pos:start="321:31" pos:end="321:32">-&gt;</operator><name pos:start="321:33" pos:end="321:41">key_frame</name></name> <operator pos:start="321:43" pos:end="321:43">=</operator> <literal type="number" pos:start="321:45" pos:end="321:45">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:62"><expr pos:start="323:9" pos:end="323:61"><name pos:start="323:9" pos:end="323:41"><name pos:start="323:9" pos:end="323:9">s</name><operator pos:start="323:10" pos:end="323:11">-&gt;</operator><name pos:start="323:12" pos:end="323:27">next_picture_ptr</name><operator pos:start="323:28" pos:end="323:29">-&gt;</operator><name pos:start="323:30" pos:end="323:30">f</name><operator pos:start="323:31" pos:end="323:32">-&gt;</operator><name pos:start="323:33" pos:end="323:41">pict_type</name></name> <operator pos:start="323:43" pos:end="323:43">=</operator> <name pos:start="323:45" pos:end="323:61">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt>



        <if_stmt pos:start="327:9" pos:end="333:9"><if pos:start="327:9" pos:end="333:9">if <condition pos:start="327:12" pos:end="327:60">(<expr pos:start="327:13" pos:end="327:59"><call pos:start="327:13" pos:end="327:55"><name pos:start="327:13" pos:end="327:28">ff_alloc_picture</name><argument_list pos:start="327:29" pos:end="327:55">(<argument pos:start="327:30" pos:end="327:30"><expr pos:start="327:30" pos:end="327:30"><name pos:start="327:30" pos:end="327:30">s</name></expr></argument>, <argument pos:start="327:33" pos:end="327:51"><expr pos:start="327:33" pos:end="327:51"><name pos:start="327:33" pos:end="327:51"><name pos:start="327:33" pos:end="327:33">s</name><operator pos:start="327:34" pos:end="327:35">-&gt;</operator><name pos:start="327:36" pos:end="327:51">next_picture_ptr</name></name></expr></argument>, <argument pos:start="327:54" pos:end="327:54"><expr pos:start="327:54" pos:end="327:54"><literal type="number" pos:start="327:54" pos:end="327:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="327:57" pos:end="327:57">&lt;</operator> <literal type="number" pos:start="327:59" pos:end="327:59">0</literal></expr>)</condition> <block pos:start="327:62" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:22">

            <expr_stmt pos:start="329:13" pos:end="329:39"><expr pos:start="329:13" pos:end="329:38"><name pos:start="329:13" pos:end="329:31"><name pos:start="329:13" pos:end="329:13">s</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:31">next_picture_ptr</name></name> <operator pos:start="329:33" pos:end="329:33">=</operator> <name pos:start="329:35" pos:end="329:38">NULL</name></expr>;</expr_stmt>

            <return pos:start="331:13" pos:end="331:22">return <expr pos:start="331:20" pos:end="331:21"><operator pos:start="331:20" pos:end="331:20">-</operator><literal type="number" pos:start="331:21" pos:end="331:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:72"><expr pos:start="335:9" pos:end="335:71"><call pos:start="335:9" pos:end="335:71"><name pos:start="335:9" pos:end="335:33">ff_thread_report_progress</name><argument_list pos:start="335:34" pos:end="335:71">(<argument pos:start="335:35" pos:end="335:58"><expr pos:start="335:35" pos:end="335:58"><operator pos:start="335:35" pos:end="335:35">&amp;</operator><name pos:start="335:36" pos:end="335:58"><name pos:start="335:36" pos:end="335:36">s</name><operator pos:start="335:37" pos:end="335:38">-&gt;</operator><name pos:start="335:39" pos:end="335:54">next_picture_ptr</name><operator pos:start="335:55" pos:end="335:56">-&gt;</operator><name pos:start="335:57" pos:end="335:58">tf</name></name></expr></argument>, <argument pos:start="335:61" pos:end="335:67"><expr pos:start="335:61" pos:end="335:67"><name pos:start="335:61" pos:end="335:67">INT_MAX</name></expr></argument>, <argument pos:start="335:70" pos:end="335:70"><expr pos:start="335:70" pos:end="335:70"><literal type="number" pos:start="335:70" pos:end="335:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:72"><expr pos:start="337:9" pos:end="337:71"><call pos:start="337:9" pos:end="337:71"><name pos:start="337:9" pos:end="337:33">ff_thread_report_progress</name><argument_list pos:start="337:34" pos:end="337:71">(<argument pos:start="337:35" pos:end="337:58"><expr pos:start="337:35" pos:end="337:58"><operator pos:start="337:35" pos:end="337:35">&amp;</operator><name pos:start="337:36" pos:end="337:58"><name pos:start="337:36" pos:end="337:36">s</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:54">next_picture_ptr</name><operator pos:start="337:55" pos:end="337:56">-&gt;</operator><name pos:start="337:57" pos:end="337:58">tf</name></name></expr></argument>, <argument pos:start="337:61" pos:end="337:67"><expr pos:start="337:61" pos:end="337:67"><name pos:start="337:61" pos:end="337:67">INT_MAX</name></expr></argument>, <argument pos:start="337:70" pos:end="337:70"><expr pos:start="337:70" pos:end="337:70"><literal type="number" pos:start="337:70" pos:end="337:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="343:1" pos:end="343:5">#<cpp:directive pos:start="343:2" pos:end="343:3">if</cpp:directive> <expr pos:start="343:5" pos:end="343:5"><literal type="number" pos:start="343:5" pos:end="343:5">0</literal></expr></cpp:if> <comment type="line" pos:start="343:7" pos:end="343:21">// BUFREF-FIXME</comment>

    memset(s-&gt;last_picture.f-&gt;data, 0, sizeof(s-&gt;last_picture.f-&gt;data));

    memset(s-&gt;next_picture.f-&gt;data, 0, sizeof(s-&gt;next_picture.f-&gt;data));

<cpp:endif pos:start="349:1" pos:end="349:6">#<cpp:directive pos:start="349:2" pos:end="349:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="351:5" pos:end="363:5"><if pos:start="351:5" pos:end="363:5">if <condition pos:start="351:8" pos:end="351:28">(<expr pos:start="351:9" pos:end="351:27"><name pos:start="351:9" pos:end="351:27"><name pos:start="351:9" pos:end="351:9">s</name><operator pos:start="351:10" pos:end="351:11">-&gt;</operator><name pos:start="351:12" pos:end="351:27">last_picture_ptr</name></name></expr>)</condition> <block pos:start="351:30" pos:end="363:5">{<block_content pos:start="353:9" pos:end="361:23">

        <expr_stmt pos:start="353:9" pos:end="353:51"><expr pos:start="353:9" pos:end="353:50"><call pos:start="353:9" pos:end="353:50"><name pos:start="353:9" pos:end="353:29">ff_mpeg_unref_picture</name><argument_list pos:start="353:30" pos:end="353:50">(<argument pos:start="353:31" pos:end="353:31"><expr pos:start="353:31" pos:end="353:31"><name pos:start="353:31" pos:end="353:31">s</name></expr></argument>, <argument pos:start="353:34" pos:end="353:49"><expr pos:start="353:34" pos:end="353:49"><operator pos:start="353:34" pos:end="353:34">&amp;</operator><name pos:start="353:35" pos:end="353:49"><name pos:start="353:35" pos:end="353:35">s</name><operator pos:start="353:36" pos:end="353:37">-&gt;</operator><name pos:start="353:38" pos:end="353:49">last_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="355:9" pos:end="361:23"><if pos:start="355:9" pos:end="361:23">if <condition pos:start="355:12" pos:end="359:65">(<expr pos:start="355:13" pos:end="359:64"><name pos:start="355:13" pos:end="355:42"><name pos:start="355:13" pos:end="355:13">s</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:31">last_picture_ptr</name><operator pos:start="355:32" pos:end="355:33">-&gt;</operator><name pos:start="355:34" pos:end="355:34">f</name><operator pos:start="355:35" pos:end="355:36">-&gt;</operator><name pos:start="355:37" pos:end="355:39">buf</name><index pos:start="355:40" pos:end="355:42">[<expr pos:start="355:41" pos:end="355:41"><literal type="number" pos:start="355:41" pos:end="355:41">0</literal></expr>]</index></name> <operator pos:start="355:44" pos:end="355:45">&amp;&amp;</operator>

            <operator pos:start="357:13" pos:end="357:13">(</operator><name pos:start="357:14" pos:end="357:16">ret</name> <operator pos:start="357:18" pos:end="357:18">=</operator> <call pos:start="357:20" pos:end="359:59"><name pos:start="357:20" pos:end="357:38">ff_mpeg_ref_picture</name><argument_list pos:start="357:39" pos:end="359:59">(<argument pos:start="357:40" pos:end="357:40"><expr pos:start="357:40" pos:end="357:40"><name pos:start="357:40" pos:end="357:40">s</name></expr></argument>, <argument pos:start="357:43" pos:end="357:58"><expr pos:start="357:43" pos:end="357:58"><operator pos:start="357:43" pos:end="357:43">&amp;</operator><name pos:start="357:44" pos:end="357:58"><name pos:start="357:44" pos:end="357:44">s</name><operator pos:start="357:45" pos:end="357:46">-&gt;</operator><name pos:start="357:47" pos:end="357:58">last_picture</name></name></expr></argument>,

                                       <argument pos:start="359:40" pos:end="359:58"><expr pos:start="359:40" pos:end="359:58"><name pos:start="359:40" pos:end="359:58"><name pos:start="359:40" pos:end="359:40">s</name><operator pos:start="359:41" pos:end="359:42">-&gt;</operator><name pos:start="359:43" pos:end="359:58">last_picture_ptr</name></name></expr></argument>)</argument_list></call><operator pos:start="359:60" pos:end="359:60">)</operator> <operator pos:start="359:62" pos:end="359:62">&lt;</operator> <literal type="number" pos:start="359:64" pos:end="359:64">0</literal></expr>)</condition><block type="pseudo" pos:start="361:13" pos:end="361:23"><block_content pos:start="361:13" pos:end="361:23">

            <return pos:start="361:13" pos:end="361:23">return <expr pos:start="361:20" pos:end="361:22"><name pos:start="361:20" pos:end="361:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="365:5" pos:end="377:5"><if pos:start="365:5" pos:end="377:5">if <condition pos:start="365:8" pos:end="365:28">(<expr pos:start="365:9" pos:end="365:27"><name pos:start="365:9" pos:end="365:27"><name pos:start="365:9" pos:end="365:9">s</name><operator pos:start="365:10" pos:end="365:11">-&gt;</operator><name pos:start="365:12" pos:end="365:27">next_picture_ptr</name></name></expr>)</condition> <block pos:start="365:30" pos:end="377:5">{<block_content pos:start="367:9" pos:end="375:23">

        <expr_stmt pos:start="367:9" pos:end="367:51"><expr pos:start="367:9" pos:end="367:50"><call pos:start="367:9" pos:end="367:50"><name pos:start="367:9" pos:end="367:29">ff_mpeg_unref_picture</name><argument_list pos:start="367:30" pos:end="367:50">(<argument pos:start="367:31" pos:end="367:31"><expr pos:start="367:31" pos:end="367:31"><name pos:start="367:31" pos:end="367:31">s</name></expr></argument>, <argument pos:start="367:34" pos:end="367:49"><expr pos:start="367:34" pos:end="367:49"><operator pos:start="367:34" pos:end="367:34">&amp;</operator><name pos:start="367:35" pos:end="367:49"><name pos:start="367:35" pos:end="367:35">s</name><operator pos:start="367:36" pos:end="367:37">-&gt;</operator><name pos:start="367:38" pos:end="367:49">next_picture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="369:9" pos:end="375:23"><if pos:start="369:9" pos:end="375:23">if <condition pos:start="369:12" pos:end="373:65">(<expr pos:start="369:13" pos:end="373:64"><name pos:start="369:13" pos:end="369:42"><name pos:start="369:13" pos:end="369:13">s</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:31">next_picture_ptr</name><operator pos:start="369:32" pos:end="369:33">-&gt;</operator><name pos:start="369:34" pos:end="369:34">f</name><operator pos:start="369:35" pos:end="369:36">-&gt;</operator><name pos:start="369:37" pos:end="369:39">buf</name><index pos:start="369:40" pos:end="369:42">[<expr pos:start="369:41" pos:end="369:41"><literal type="number" pos:start="369:41" pos:end="369:41">0</literal></expr>]</index></name> <operator pos:start="369:44" pos:end="369:45">&amp;&amp;</operator>

            <operator pos:start="371:13" pos:end="371:13">(</operator><name pos:start="371:14" pos:end="371:16">ret</name> <operator pos:start="371:18" pos:end="371:18">=</operator> <call pos:start="371:20" pos:end="373:59"><name pos:start="371:20" pos:end="371:38">ff_mpeg_ref_picture</name><argument_list pos:start="371:39" pos:end="373:59">(<argument pos:start="371:40" pos:end="371:40"><expr pos:start="371:40" pos:end="371:40"><name pos:start="371:40" pos:end="371:40">s</name></expr></argument>, <argument pos:start="371:43" pos:end="371:58"><expr pos:start="371:43" pos:end="371:58"><operator pos:start="371:43" pos:end="371:43">&amp;</operator><name pos:start="371:44" pos:end="371:58"><name pos:start="371:44" pos:end="371:44">s</name><operator pos:start="371:45" pos:end="371:46">-&gt;</operator><name pos:start="371:47" pos:end="371:58">next_picture</name></name></expr></argument>,

                                       <argument pos:start="373:40" pos:end="373:58"><expr pos:start="373:40" pos:end="373:58"><name pos:start="373:40" pos:end="373:58"><name pos:start="373:40" pos:end="373:40">s</name><operator pos:start="373:41" pos:end="373:42">-&gt;</operator><name pos:start="373:43" pos:end="373:58">next_picture_ptr</name></name></expr></argument>)</argument_list></call><operator pos:start="373:60" pos:end="373:60">)</operator> <operator pos:start="373:62" pos:end="373:62">&lt;</operator> <literal type="number" pos:start="373:64" pos:end="373:64">0</literal></expr>)</condition><block type="pseudo" pos:start="375:13" pos:end="375:23"><block_content pos:start="375:13" pos:end="375:23">

            <return pos:start="375:13" pos:end="375:23">return <expr pos:start="375:20" pos:end="375:22"><name pos:start="375:20" pos:end="375:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="381:5" pos:end="383:82"><expr pos:start="381:5" pos:end="383:81"><call pos:start="381:5" pos:end="383:81"><name pos:start="381:5" pos:end="381:14">av_assert0</name><argument_list pos:start="381:15" pos:end="383:81">(<argument pos:start="381:16" pos:end="383:80"><expr pos:start="381:16" pos:end="383:80"><name pos:start="381:16" pos:end="381:27"><name pos:start="381:16" pos:end="381:16">s</name><operator pos:start="381:17" pos:end="381:18">-&gt;</operator><name pos:start="381:19" pos:end="381:27">pict_type</name></name> <operator pos:start="381:29" pos:end="381:30">==</operator> <name pos:start="381:32" pos:end="381:48">AV_PICTURE_TYPE_I</name> <operator pos:start="381:50" pos:end="381:51">||</operator> <operator pos:start="381:53" pos:end="381:53">(</operator><name pos:start="381:54" pos:end="381:72"><name pos:start="381:54" pos:end="381:54">s</name><operator pos:start="381:55" pos:end="381:56">-&gt;</operator><name pos:start="381:57" pos:end="381:72">last_picture_ptr</name></name> <operator pos:start="381:74" pos:end="381:75">&amp;&amp;</operator>

                                                 <name pos:start="383:50" pos:end="383:79"><name pos:start="383:50" pos:end="383:50">s</name><operator pos:start="383:51" pos:end="383:52">-&gt;</operator><name pos:start="383:53" pos:end="383:68">last_picture_ptr</name><operator pos:start="383:69" pos:end="383:70">-&gt;</operator><name pos:start="383:71" pos:end="383:71">f</name><operator pos:start="383:72" pos:end="383:73">-&gt;</operator><name pos:start="383:74" pos:end="383:76">buf</name><index pos:start="383:77" pos:end="383:79">[<expr pos:start="383:78" pos:end="383:78"><literal type="number" pos:start="383:78" pos:end="383:78">0</literal></expr>]</index></name><operator pos:start="383:80" pos:end="383:80">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="387:5" pos:end="409:5"><if pos:start="387:5" pos:end="409:5">if <condition pos:start="387:8" pos:end="387:42">(<expr pos:start="387:9" pos:end="387:41"><name pos:start="387:9" pos:end="387:28"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:28">picture_structure</name></name><operator pos:start="387:29" pos:end="387:30">!=</operator> <name pos:start="387:32" pos:end="387:41">PICT_FRAME</name></expr>)</condition> <block pos:start="387:44" pos:end="409:5">{<block_content pos:start="389:9" pos:end="407:9">

        <decl_stmt pos:start="389:9" pos:end="389:14"><decl pos:start="389:9" pos:end="389:13"><type pos:start="389:9" pos:end="389:11"><name pos:start="389:9" pos:end="389:11">int</name></type> <name pos:start="389:13" pos:end="389:13">i</name></decl>;</decl_stmt>

        <for pos:start="391:9" pos:end="407:9">for <control pos:start="391:13" pos:end="391:31">(<init pos:start="391:14" pos:end="391:19"><expr pos:start="391:14" pos:end="391:18"><name pos:start="391:14" pos:end="391:14">i</name> <operator pos:start="391:16" pos:end="391:16">=</operator> <literal type="number" pos:start="391:18" pos:end="391:18">0</literal></expr>;</init> <condition pos:start="391:21" pos:end="391:26"><expr pos:start="391:21" pos:end="391:25"><name pos:start="391:21" pos:end="391:21">i</name> <operator pos:start="391:23" pos:end="391:23">&lt;</operator> <literal type="number" pos:start="391:25" pos:end="391:25">4</literal></expr>;</condition> <incr pos:start="391:28" pos:end="391:30"><expr pos:start="391:28" pos:end="391:30"><name pos:start="391:28" pos:end="391:28">i</name><operator pos:start="391:29" pos:end="391:30">++</operator></expr></incr>)</control> <block pos:start="391:33" pos:end="407:9">{<block_content pos:start="393:13" pos:end="405:51">

            <if_stmt pos:start="393:13" pos:end="399:13"><if pos:start="393:13" pos:end="399:13">if <condition pos:start="393:16" pos:end="393:58">(<expr pos:start="393:17" pos:end="393:57"><name pos:start="393:17" pos:end="393:36"><name pos:start="393:17" pos:end="393:17">s</name><operator pos:start="393:18" pos:end="393:19">-&gt;</operator><name pos:start="393:20" pos:end="393:36">picture_structure</name></name> <operator pos:start="393:38" pos:end="393:39">==</operator> <name pos:start="393:41" pos:end="393:57">PICT_BOTTOM_FIELD</name></expr>)</condition> <block pos:start="393:60" pos:end="399:13">{<block_content pos:start="395:17" pos:end="397:54">

                <expr_stmt pos:start="395:17" pos:end="397:54"><expr pos:start="395:17" pos:end="397:53"><name pos:start="395:17" pos:end="395:45"><name pos:start="395:17" pos:end="395:17">s</name><operator pos:start="395:18" pos:end="395:19">-&gt;</operator><name pos:start="395:20" pos:end="395:34">current_picture</name><operator pos:start="395:35" pos:end="395:35">.</operator><name pos:start="395:36" pos:end="395:36">f</name><operator pos:start="395:37" pos:end="395:38">-&gt;</operator><name pos:start="395:39" pos:end="395:42">data</name><index pos:start="395:43" pos:end="395:45">[<expr pos:start="395:44" pos:end="395:44"><name pos:start="395:44" pos:end="395:44">i</name></expr>]</index></name> <operator pos:start="395:47" pos:end="395:48">+=</operator>

                    <name pos:start="397:21" pos:end="397:53"><name pos:start="397:21" pos:end="397:21">s</name><operator pos:start="397:22" pos:end="397:23">-&gt;</operator><name pos:start="397:24" pos:end="397:38">current_picture</name><operator pos:start="397:39" pos:end="397:39">.</operator><name pos:start="397:40" pos:end="397:40">f</name><operator pos:start="397:41" pos:end="397:42">-&gt;</operator><name pos:start="397:43" pos:end="397:50">linesize</name><index pos:start="397:51" pos:end="397:53">[<expr pos:start="397:52" pos:end="397:52"><name pos:start="397:52" pos:end="397:52">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:51"><expr pos:start="401:13" pos:end="401:50"><name pos:start="401:13" pos:end="401:45"><name pos:start="401:13" pos:end="401:13">s</name><operator pos:start="401:14" pos:end="401:15">-&gt;</operator><name pos:start="401:16" pos:end="401:30">current_picture</name><operator pos:start="401:31" pos:end="401:31">.</operator><name pos:start="401:32" pos:end="401:32">f</name><operator pos:start="401:33" pos:end="401:34">-&gt;</operator><name pos:start="401:35" pos:end="401:42">linesize</name><index pos:start="401:43" pos:end="401:45">[<expr pos:start="401:44" pos:end="401:44"><name pos:start="401:44" pos:end="401:44">i</name></expr>]</index></name> <operator pos:start="401:47" pos:end="401:48">*=</operator> <literal type="number" pos:start="401:50" pos:end="401:50">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="403:51"><expr pos:start="403:13" pos:end="403:50"><name pos:start="403:13" pos:end="403:42"><name pos:start="403:13" pos:end="403:13">s</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:27">last_picture</name><operator pos:start="403:28" pos:end="403:28">.</operator><name pos:start="403:29" pos:end="403:29">f</name><operator pos:start="403:30" pos:end="403:31">-&gt;</operator><name pos:start="403:32" pos:end="403:39">linesize</name><index pos:start="403:40" pos:end="403:42">[<expr pos:start="403:41" pos:end="403:41"><name pos:start="403:41" pos:end="403:41">i</name></expr>]</index></name>    <operator pos:start="403:47" pos:end="403:48">*=</operator> <literal type="number" pos:start="403:50" pos:end="403:50">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="405:13" pos:end="405:51"><expr pos:start="405:13" pos:end="405:50"><name pos:start="405:13" pos:end="405:42"><name pos:start="405:13" pos:end="405:13">s</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:27">next_picture</name><operator pos:start="405:28" pos:end="405:28">.</operator><name pos:start="405:29" pos:end="405:29">f</name><operator pos:start="405:30" pos:end="405:31">-&gt;</operator><name pos:start="405:32" pos:end="405:39">linesize</name><index pos:start="405:40" pos:end="405:42">[<expr pos:start="405:41" pos:end="405:41"><name pos:start="405:41" pos:end="405:41">i</name></expr>]</index></name>    <operator pos:start="405:47" pos:end="405:48">*=</operator> <literal type="number" pos:start="405:50" pos:end="405:50">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="413:5" pos:end="413:48"><expr pos:start="413:5" pos:end="413:47"><name pos:start="413:5" pos:end="413:22"><name pos:start="413:5" pos:end="413:5">s</name><operator pos:start="413:6" pos:end="413:7">-&gt;</operator><name pos:start="413:8" pos:end="413:22">err_recognition</name></name> <operator pos:start="413:24" pos:end="413:24">=</operator> <name pos:start="413:26" pos:end="413:47"><name pos:start="413:26" pos:end="413:30">avctx</name><operator pos:start="413:31" pos:end="413:32">-&gt;</operator><name pos:start="413:33" pos:end="413:47">err_recognition</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="417:5" pos:end="421:58">/* set dequantizer, we can't do it during init as

     * it might change for mpeg4 and we can't do it in the header

     * decode as init is not called for mpeg4 there yet */</comment>

    <if_stmt pos:start="423:5" pos:end="441:5"><if pos:start="423:5" pos:end="429:5">if <condition pos:start="423:8" pos:end="423:63">(<expr pos:start="423:9" pos:end="423:62"><name pos:start="423:9" pos:end="423:21"><name pos:start="423:9" pos:end="423:9">s</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:21">mpeg_quant</name></name> <operator pos:start="423:23" pos:end="423:24">||</operator> <name pos:start="423:26" pos:end="423:36"><name pos:start="423:26" pos:end="423:26">s</name><operator pos:start="423:27" pos:end="423:28">-&gt;</operator><name pos:start="423:29" pos:end="423:36">codec_id</name></name> <operator pos:start="423:38" pos:end="423:39">==</operator> <name pos:start="423:41" pos:end="423:62">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="423:65" pos:end="429:5">{<block_content pos:start="425:9" pos:end="427:64">

        <expr_stmt pos:start="425:9" pos:end="425:64"><expr pos:start="425:9" pos:end="425:63"><name pos:start="425:9" pos:end="425:31"><name pos:start="425:9" pos:end="425:9">s</name><operator pos:start="425:10" pos:end="425:11">-&gt;</operator><name pos:start="425:12" pos:end="425:31">dct_unquantize_intra</name></name> <operator pos:start="425:33" pos:end="425:33">=</operator> <name pos:start="425:35" pos:end="425:63"><name pos:start="425:35" pos:end="425:35">s</name><operator pos:start="425:36" pos:end="425:37">-&gt;</operator><name pos:start="425:38" pos:end="425:63">dct_unquantize_mpeg2_intra</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:64"><expr pos:start="427:9" pos:end="427:63"><name pos:start="427:9" pos:end="427:31"><name pos:start="427:9" pos:end="427:9">s</name><operator pos:start="427:10" pos:end="427:11">-&gt;</operator><name pos:start="427:12" pos:end="427:31">dct_unquantize_inter</name></name> <operator pos:start="427:33" pos:end="427:33">=</operator> <name pos:start="427:35" pos:end="427:63"><name pos:start="427:35" pos:end="427:35">s</name><operator pos:start="427:36" pos:end="427:37">-&gt;</operator><name pos:start="427:38" pos:end="427:63">dct_unquantize_mpeg2_inter</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="429:7" pos:end="435:5">else if <condition pos:start="429:15" pos:end="429:70">(<expr pos:start="429:16" pos:end="429:69"><name pos:start="429:16" pos:end="429:28"><name pos:start="429:16" pos:end="429:16">s</name><operator pos:start="429:17" pos:end="429:18">-&gt;</operator><name pos:start="429:19" pos:end="429:28">out_format</name></name> <operator pos:start="429:30" pos:end="429:31">==</operator> <name pos:start="429:33" pos:end="429:40">FMT_H263</name> <operator pos:start="429:42" pos:end="429:43">||</operator> <name pos:start="429:45" pos:end="429:57"><name pos:start="429:45" pos:end="429:45">s</name><operator pos:start="429:46" pos:end="429:47">-&gt;</operator><name pos:start="429:48" pos:end="429:57">out_format</name></name> <operator pos:start="429:59" pos:end="429:60">==</operator> <name pos:start="429:62" pos:end="429:69">FMT_H261</name></expr>)</condition> <block pos:start="429:72" pos:end="435:5">{<block_content pos:start="431:9" pos:end="433:63">

        <expr_stmt pos:start="431:9" pos:end="431:63"><expr pos:start="431:9" pos:end="431:62"><name pos:start="431:9" pos:end="431:31"><name pos:start="431:9" pos:end="431:9">s</name><operator pos:start="431:10" pos:end="431:11">-&gt;</operator><name pos:start="431:12" pos:end="431:31">dct_unquantize_intra</name></name> <operator pos:start="431:33" pos:end="431:33">=</operator> <name pos:start="431:35" pos:end="431:62"><name pos:start="431:35" pos:end="431:35">s</name><operator pos:start="431:36" pos:end="431:37">-&gt;</operator><name pos:start="431:38" pos:end="431:62">dct_unquantize_h263_intra</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="433:9" pos:end="433:63"><expr pos:start="433:9" pos:end="433:62"><name pos:start="433:9" pos:end="433:31"><name pos:start="433:9" pos:end="433:9">s</name><operator pos:start="433:10" pos:end="433:11">-&gt;</operator><name pos:start="433:12" pos:end="433:31">dct_unquantize_inter</name></name> <operator pos:start="433:33" pos:end="433:33">=</operator> <name pos:start="433:35" pos:end="433:62"><name pos:start="433:35" pos:end="433:35">s</name><operator pos:start="433:36" pos:end="433:37">-&gt;</operator><name pos:start="433:38" pos:end="433:62">dct_unquantize_h263_inter</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="435:7" pos:end="441:5">else <block pos:start="435:12" pos:end="441:5">{<block_content pos:start="437:9" pos:end="439:64">

        <expr_stmt pos:start="437:9" pos:end="437:64"><expr pos:start="437:9" pos:end="437:63"><name pos:start="437:9" pos:end="437:31"><name pos:start="437:9" pos:end="437:9">s</name><operator pos:start="437:10" pos:end="437:11">-&gt;</operator><name pos:start="437:12" pos:end="437:31">dct_unquantize_intra</name></name> <operator pos:start="437:33" pos:end="437:33">=</operator> <name pos:start="437:35" pos:end="437:63"><name pos:start="437:35" pos:end="437:35">s</name><operator pos:start="437:36" pos:end="437:37">-&gt;</operator><name pos:start="437:38" pos:end="437:63">dct_unquantize_mpeg1_intra</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="439:64"><expr pos:start="439:9" pos:end="439:63"><name pos:start="439:9" pos:end="439:31"><name pos:start="439:9" pos:end="439:9">s</name><operator pos:start="439:10" pos:end="439:11">-&gt;</operator><name pos:start="439:12" pos:end="439:31">dct_unquantize_inter</name></name> <operator pos:start="439:33" pos:end="439:33">=</operator> <name pos:start="439:35" pos:end="439:63"><name pos:start="439:35" pos:end="439:35">s</name><operator pos:start="439:36" pos:end="439:37">-&gt;</operator><name pos:start="439:38" pos:end="439:63">dct_unquantize_mpeg1_inter</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="445:5" pos:end="445:13">return <expr pos:start="445:12" pos:end="445:12"><literal type="number" pos:start="445:12" pos:end="445:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
