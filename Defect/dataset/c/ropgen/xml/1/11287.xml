<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11287.c" pos:tabs="8"><function pos:start="1:1" pos:end="3411:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:38">translate_one</name> <parameter_list pos:start="1:40" pos:end="1:73">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:52">DisasContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint32_t</name></type> <name pos:start="1:69" pos:end="1:72">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="3411:1">{<block_content pos:start="5:5" pos:end="3409:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">palcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:18">disp21</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:26">disp16</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:29" pos:end="7:34">disp12</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">fn11</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:23">fn16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">opc</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:19">ra</name></decl>, <decl pos:start="11:22" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:22" pos:end="11:23">rb</name></decl>, <decl pos:start="11:26" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:26" pos:end="11:27">rc</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:30" pos:end="11:32">sbz</name></decl>, <decl pos:start="11:35" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:35" pos:end="11:38">fpfn</name></decl>, <decl pos:start="11:41" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:41" pos:end="11:43">fn7</name></decl>, <decl pos:start="11:46" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:46" pos:end="11:48">fn2</name></decl>, <decl pos:start="11:51" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:51" pos:end="11:55">islit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:15">lit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* Decode all instruction fields */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">opc</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:14">insn</name> <operator pos:start="21:16" pos:end="21:17">&gt;&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:20">26</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:6">ra</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:14">insn</name> <operator pos:start="23:16" pos:end="23:17">&gt;&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:20">21</literal><operator pos:start="23:21" pos:end="23:21">)</operator> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:6">rb</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:14">insn</name> <operator pos:start="25:16" pos:end="25:17">&gt;&gt;</operator> <literal type="number" pos:start="25:19" pos:end="25:20">16</literal><operator pos:start="25:21" pos:end="25:21">)</operator> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:6">rc</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:13">insn</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <literal type="number" pos:start="27:17" pos:end="27:20">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">sbz</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <operator pos:start="29:11" pos:end="29:11">(</operator><name pos:start="29:12" pos:end="29:15">insn</name> <operator pos:start="29:17" pos:end="29:18">&gt;&gt;</operator> <literal type="number" pos:start="29:20" pos:end="29:21">13</literal><operator pos:start="29:22" pos:end="29:22">)</operator> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <literal type="number" pos:start="29:26" pos:end="29:29">0x07</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:9">islit</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:17">insn</name> <operator pos:start="31:19" pos:end="31:20">&gt;&gt;</operator> <literal type="number" pos:start="31:22" pos:end="31:23">12</literal><operator pos:start="31:24" pos:end="31:24">)</operator> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:34"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:10">rb</name> <operator pos:start="33:12" pos:end="33:13">==</operator> <literal type="number" pos:start="33:15" pos:end="33:16">31</literal> <operator pos:start="33:18" pos:end="33:19">&amp;&amp;</operator> <operator pos:start="33:21" pos:end="33:21">!</operator><name pos:start="33:22" pos:end="33:26">islit</name></expr>)</condition> <block pos:start="33:29" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:16">

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:13">islit</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">lit</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:34">else<block type="pseudo" pos:start="41:9" pos:end="41:34"><block_content pos:start="41:9" pos:end="41:34">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">lit</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:19">insn</name> <operator pos:start="41:21" pos:end="41:22">&gt;&gt;</operator> <literal type="number" pos:start="41:24" pos:end="41:25">13</literal><operator pos:start="41:26" pos:end="41:26">)</operator> <operator pos:start="41:28" pos:end="41:28">&amp;</operator> <literal type="number" pos:start="41:30" pos:end="41:33">0xFF</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:11">palcode</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:18">insn</name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <literal type="number" pos:start="43:22" pos:end="43:31">0x03FFFFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:10">disp21</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">(</operator><operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:22">int32_t</name><operator pos:start="45:23" pos:end="45:23">)</operator><operator pos:start="45:24" pos:end="45:24">(</operator><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:29">insn</name> <operator pos:start="45:31" pos:end="45:31">&amp;</operator> <literal type="number" pos:start="45:33" pos:end="45:42">0x001FFFFF</literal><operator pos:start="45:43" pos:end="45:43">)</operator> <operator pos:start="45:45" pos:end="45:46">&lt;&lt;</operator> <literal type="number" pos:start="45:48" pos:end="45:49">11</literal><operator pos:start="45:50" pos:end="45:50">)</operator><operator pos:start="45:51" pos:end="45:51">)</operator> <operator pos:start="45:53" pos:end="45:54">&gt;&gt;</operator> <literal type="number" pos:start="45:56" pos:end="45:57">11</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:10">disp16</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:21">int16_t</name><operator pos:start="47:22" pos:end="47:22">)</operator><operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:27">insn</name> <operator pos:start="47:29" pos:end="47:29">&amp;</operator> <literal type="number" pos:start="47:31" pos:end="47:40">0x0000FFFF</literal><operator pos:start="47:41" pos:end="47:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:10">disp12</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:21">int32_t</name><operator pos:start="49:22" pos:end="49:22">)</operator><operator pos:start="49:23" pos:end="49:23">(</operator><operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:28">insn</name> <operator pos:start="49:30" pos:end="49:30">&amp;</operator> <literal type="number" pos:start="49:32" pos:end="49:41">0x00000FFF</literal><operator pos:start="49:42" pos:end="49:42">)</operator> <operator pos:start="49:44" pos:end="49:45">&lt;&lt;</operator> <literal type="number" pos:start="49:47" pos:end="49:48">20</literal><operator pos:start="49:49" pos:end="49:49">)</operator> <operator pos:start="49:51" pos:end="49:52">&gt;&gt;</operator> <literal type="number" pos:start="49:54" pos:end="49:55">20</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:8">fn16</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:15">insn</name> <operator pos:start="51:17" pos:end="51:17">&amp;</operator> <literal type="number" pos:start="51:19" pos:end="51:28">0x0000FFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:8">fn11</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <operator pos:start="53:12" pos:end="53:12">(</operator><name pos:start="53:13" pos:end="53:16">insn</name> <operator pos:start="53:18" pos:end="53:19">&gt;&gt;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">5</literal><operator pos:start="53:22" pos:end="53:22">)</operator> <operator pos:start="53:24" pos:end="53:24">&amp;</operator> <literal type="number" pos:start="53:26" pos:end="53:35">0x000007FF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:8">fpfn</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:15">fn11</name> <operator pos:start="55:17" pos:end="55:17">&amp;</operator> <literal type="number" pos:start="55:19" pos:end="55:22">0x3F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:7">fn7</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <operator pos:start="57:11" pos:end="57:11">(</operator><name pos:start="57:12" pos:end="57:15">insn</name> <operator pos:start="57:17" pos:end="57:18">&gt;&gt;</operator> <literal type="number" pos:start="57:20" pos:end="57:20">5</literal><operator pos:start="57:21" pos:end="57:21">)</operator> <operator pos:start="57:23" pos:end="57:23">&amp;</operator> <literal type="number" pos:start="57:25" pos:end="57:34">0x0000007F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:7">fn2</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <operator pos:start="59:11" pos:end="59:11">(</operator><name pos:start="59:12" pos:end="59:15">insn</name> <operator pos:start="59:17" pos:end="59:18">&gt;&gt;</operator> <literal type="number" pos:start="59:20" pos:end="59:20">5</literal><operator pos:start="59:21" pos:end="59:21">)</operator> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <literal type="number" pos:start="59:25" pos:end="59:34">0x00000003</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</expr_stmt>

<cpp:if pos:start="63:1" pos:end="63:29">#<cpp:directive pos:start="63:2" pos:end="63:3">if</cpp:directive> <expr pos:start="63:5" pos:end="63:29"><name pos:start="63:5" pos:end="63:11">defined</name> <name pos:start="63:13" pos:end="63:29">ALPHA_DEBUG_DISAS</name></expr></cpp:if>

    <if_stmt pos:start="65:5" pos:end="74:0"><if pos:start="65:5" pos:end="74:0">if <condition pos:start="65:8" pos:end="65:24">(<expr pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:15">logfile</name> <operator pos:start="65:17" pos:end="65:18">!=</operator> <name pos:start="65:20" pos:end="65:23">NULL</name></expr>)</condition> <block pos:start="65:26" pos:end="74:0">{<block_content pos:start="67:9" pos:end="69:41">

        <expr_stmt pos:start="67:9" pos:end="69:41"><expr pos:start="67:9" pos:end="69:40"><call pos:start="67:9" pos:end="69:40"><name pos:start="67:9" pos:end="67:15">fprintf</name><argument_list pos:start="67:16" pos:end="69:40">(<argument pos:start="67:17" pos:end="67:23"><expr pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:23">logfile</name></expr></argument>, <argument pos:start="67:26" pos:end="67:67"><expr pos:start="67:26" pos:end="67:67"><literal type="string" pos:start="67:26" pos:end="67:67">"opc %02x ra %d rb %d rc %d disp16 %04x\n"</literal></expr></argument>,

                <argument pos:start="69:17" pos:end="69:19"><expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">opc</name></expr></argument>, <argument pos:start="69:22" pos:end="69:23"><expr pos:start="69:22" pos:end="69:23"><name pos:start="69:22" pos:end="69:23">ra</name></expr></argument>, <argument pos:start="69:26" pos:end="69:27"><expr pos:start="69:26" pos:end="69:27"><name pos:start="69:26" pos:end="69:27">rb</name></expr></argument>, <argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">rc</name></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><name pos:start="69:34" pos:end="69:39">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="75:5" pos:end="3405:5">switch <condition pos:start="75:12" pos:end="75:16">(<expr pos:start="75:13" pos:end="75:15"><name pos:start="75:13" pos:end="75:15">opc</name></expr>)</condition> <block pos:start="75:18" pos:end="3405:5">{<block_content pos:start="77:5" pos:end="3403:14">

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="79:9" pos:end="79:22">/* CALL_PAL */</comment>

        <if_stmt pos:start="81:9" pos:end="109:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="81:46">(<expr pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:19">palcode</name> <operator pos:start="81:21" pos:end="81:22">&gt;=</operator> <literal type="number" pos:start="81:24" pos:end="81:27">0x80</literal> <operator pos:start="81:29" pos:end="81:30">&amp;&amp;</operator> <name pos:start="81:32" pos:end="81:38">palcode</name> <operator pos:start="81:40" pos:end="81:40">&lt;</operator> <literal type="number" pos:start="81:42" pos:end="81:45">0xC0</literal></expr>)</condition> <block pos:start="81:48" pos:end="89:9">{<block_content pos:start="85:13" pos:end="88:0">

            <comment type="block" pos:start="83:13" pos:end="83:39">/* Unprivileged PAL call */</comment>

            <expr_stmt pos:start="85:13" pos:end="88:0"><expr pos:start="85:13" pos:end="85:69"><call pos:start="85:13" pos:end="85:69"><name pos:start="85:13" pos:end="85:20">gen_excp</name><argument_list pos:start="85:21" pos:end="85:69">(<argument pos:start="85:22" pos:end="85:24"><expr pos:start="85:22" pos:end="85:24"><name pos:start="85:22" pos:end="85:24">ctx</name></expr></argument>, <argument pos:start="85:27" pos:end="85:65"><expr pos:start="85:27" pos:end="85:65"><name pos:start="85:27" pos:end="85:39">EXCP_CALL_PAL</name> <operator pos:start="85:41" pos:end="85:41">+</operator> <operator pos:start="85:43" pos:end="85:43">(</operator><operator pos:start="85:44" pos:end="85:44">(</operator><name pos:start="85:45" pos:end="85:51">palcode</name> <operator pos:start="85:53" pos:end="85:53">&amp;</operator> <literal type="number" pos:start="85:55" pos:end="85:58">0x1F</literal><operator pos:start="85:59" pos:end="85:59">)</operator> <operator pos:start="85:61" pos:end="85:62">&lt;&lt;</operator> <literal type="number" pos:start="85:64" pos:end="85:64">6</literal><operator pos:start="85:65" pos:end="85:65">)</operator></expr></argument>, <argument pos:start="85:68" pos:end="85:68"><expr pos:start="85:68" pos:end="85:68"><literal type="number" pos:start="85:68" pos:end="85:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="87:1" pos:end="87:31">#<cpp:directive pos:start="87:2" pos:end="87:3">if</cpp:directive> <expr pos:start="87:5" pos:end="87:31"><operator pos:start="87:5" pos:end="87:5">!</operator><call pos:start="87:6" pos:end="87:31"><name pos:start="87:6" pos:end="87:12">defined</name> <argument_list pos:start="87:14" pos:end="87:31">(<argument pos:start="87:15" pos:end="87:30"><expr pos:start="87:15" pos:end="87:30"><name pos:start="87:15" pos:end="87:30">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        </block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="103:9">else if <condition pos:start="89:19" pos:end="89:34">(<expr pos:start="89:20" pos:end="89:33"><name pos:start="89:20" pos:end="89:26">palcode</name> <operator pos:start="89:28" pos:end="89:28">&lt;</operator> <literal type="number" pos:start="89:30" pos:end="89:33">0x40</literal></expr>)</condition> <block pos:start="89:36" pos:end="103:9">{<block_content pos:start="93:13" pos:end="102:0">

            <comment type="block" pos:start="91:13" pos:end="91:37">/* Privileged PAL code */</comment>

            <if_stmt pos:start="93:13" pos:end="102:0"><if pos:start="93:13" pos:end="95:33">if <condition pos:start="93:16" pos:end="93:33">(<expr pos:start="93:17" pos:end="93:32"><name pos:start="93:17" pos:end="93:28"><name pos:start="93:17" pos:end="93:19">ctx</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:28">mem_idx</name></name> <operator pos:start="93:30" pos:end="93:30">&amp;</operator> <literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>)</condition><block type="pseudo" pos:start="95:17" pos:end="95:33"><block_content pos:start="95:17" pos:end="95:33">

                <goto pos:start="95:17" pos:end="95:33">goto <name pos:start="95:22" pos:end="95:32">invalid_opc</name>;</goto></block_content></block></if>

            <else pos:start="97:13" pos:end="102:0">else<block type="pseudo" pos:start="99:17" pos:end="102:0"><block_content pos:start="99:17" pos:end="102:0">

                <expr_stmt pos:start="99:17" pos:end="102:0"><expr pos:start="99:17" pos:end="99:74"><call pos:start="99:17" pos:end="99:74"><name pos:start="99:17" pos:end="99:24">gen_excp</name><argument_list pos:start="99:25" pos:end="99:74">(<argument pos:start="99:26" pos:end="99:28"><expr pos:start="99:26" pos:end="99:28"><name pos:start="99:26" pos:end="99:28">ctx</name></expr></argument>, <argument pos:start="99:31" pos:end="99:70"><expr pos:start="99:31" pos:end="99:70"><name pos:start="99:31" pos:end="99:44">EXCP_CALL_PALP</name> <operator pos:start="99:46" pos:end="99:46">+</operator> <operator pos:start="99:48" pos:end="99:48">(</operator><operator pos:start="99:49" pos:end="99:49">(</operator><name pos:start="99:50" pos:end="99:56">palcode</name> <operator pos:start="99:58" pos:end="99:58">&amp;</operator> <literal type="number" pos:start="99:60" pos:end="99:63">0x1F</literal><operator pos:start="99:64" pos:end="99:64">)</operator> <operator pos:start="99:66" pos:end="99:67">&lt;&lt;</operator> <literal type="number" pos:start="99:69" pos:end="99:69">6</literal><operator pos:start="99:70" pos:end="99:70">)</operator></expr></argument>, <argument pos:start="99:73" pos:end="99:73"><expr pos:start="99:73" pos:end="99:73"><literal type="number" pos:start="99:73" pos:end="99:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="101:1" pos:end="101:6">#<cpp:directive pos:start="101:2" pos:end="101:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="109:9">else <block pos:start="103:16" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:29">

            <comment type="block" pos:start="105:13" pos:end="105:34">/* Invalid PAL call */</comment>

            <goto pos:start="107:13" pos:end="107:29">goto <name pos:start="107:18" pos:end="107:28">invalid_opc</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:16"><expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <literal type="number" pos:start="111:15" pos:end="111:15">3</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:14">case <expr pos:start="115:10" pos:end="115:13"><literal type="number" pos:start="115:10" pos:end="115:13">0x01</literal></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="117:19">/* OPC01 */</comment>

        <goto pos:start="119:9" pos:end="119:25">goto <name pos:start="119:14" pos:end="119:24">invalid_opc</name>;</goto>

    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x02</literal></expr>:</case>

        <comment type="block" pos:start="123:9" pos:end="123:19">/* OPC02 */</comment>

        <goto pos:start="125:9" pos:end="125:25">goto <name pos:start="125:14" pos:end="125:24">invalid_opc</name>;</goto>

    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x03</literal></expr>:</case>

        <comment type="block" pos:start="129:9" pos:end="129:19">/* OPC03 */</comment>

        <goto pos:start="131:9" pos:end="131:25">goto <name pos:start="131:14" pos:end="131:24">invalid_opc</name>;</goto>

    <case pos:start="133:5" pos:end="133:14">case <expr pos:start="133:10" pos:end="133:13"><literal type="number" pos:start="133:10" pos:end="133:13">0x04</literal></expr>:</case>

        <comment type="block" pos:start="135:9" pos:end="135:19">/* OPC04 */</comment>

        <goto pos:start="137:9" pos:end="137:25">goto <name pos:start="137:14" pos:end="137:24">invalid_opc</name>;</goto>

    <case pos:start="139:5" pos:end="139:14">case <expr pos:start="139:10" pos:end="139:13"><literal type="number" pos:start="139:10" pos:end="139:13">0x05</literal></expr>:</case>

        <comment type="block" pos:start="141:9" pos:end="141:19">/* OPC05 */</comment>

        <goto pos:start="143:9" pos:end="143:25">goto <name pos:start="143:14" pos:end="143:24">invalid_opc</name>;</goto>

    <case pos:start="145:5" pos:end="145:14">case <expr pos:start="145:10" pos:end="145:13"><literal type="number" pos:start="145:10" pos:end="145:13">0x06</literal></expr>:</case>

        <comment type="block" pos:start="147:9" pos:end="147:19">/* OPC06 */</comment>

        <goto pos:start="149:9" pos:end="149:25">goto <name pos:start="149:14" pos:end="149:24">invalid_opc</name>;</goto>

    <case pos:start="151:5" pos:end="151:14">case <expr pos:start="151:10" pos:end="151:13"><literal type="number" pos:start="151:10" pos:end="151:13">0x07</literal></expr>:</case>

        <comment type="block" pos:start="153:9" pos:end="153:19">/* OPC07 */</comment>

        <goto pos:start="155:9" pos:end="155:25">goto <name pos:start="155:14" pos:end="155:24">invalid_opc</name>;</goto>

    <case pos:start="157:5" pos:end="157:14">case <expr pos:start="157:10" pos:end="157:13"><literal type="number" pos:start="157:10" pos:end="157:13">0x08</literal></expr>:</case>

        <comment type="block" pos:start="159:9" pos:end="159:17">/* LDA */</comment>

        <if_stmt pos:start="161:9" pos:end="171:9"><if pos:start="161:9" pos:end="171:9">if <condition pos:start="161:12" pos:end="161:29">(<expr pos:start="161:13" pos:end="161:28"><call pos:start="161:13" pos:end="161:28"><name pos:start="161:13" pos:end="161:18">likely</name><argument_list pos:start="161:19" pos:end="161:28">(<argument pos:start="161:20" pos:end="161:27"><expr pos:start="161:20" pos:end="161:27"><name pos:start="161:20" pos:end="161:21">ra</name> <operator pos:start="161:23" pos:end="161:24">!=</operator> <literal type="number" pos:start="161:26" pos:end="161:27">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:31" pos:end="171:9">{<block_content pos:start="163:13" pos:end="169:53">

            <if_stmt pos:start="163:13" pos:end="169:53"><if pos:start="163:13" pos:end="165:65">if <condition pos:start="163:16" pos:end="163:25">(<expr pos:start="163:17" pos:end="163:24"><name pos:start="163:17" pos:end="163:18">rb</name> <operator pos:start="163:20" pos:end="163:21">!=</operator> <literal type="number" pos:start="163:23" pos:end="163:24">31</literal></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:65"><block_content pos:start="165:17" pos:end="165:65">

                <expr_stmt pos:start="165:17" pos:end="165:65"><expr pos:start="165:17" pos:end="165:64"><call pos:start="165:17" pos:end="165:64"><name pos:start="165:17" pos:end="165:32">tcg_gen_addi_i64</name><argument_list pos:start="165:33" pos:end="165:64">(<argument pos:start="165:34" pos:end="165:43"><expr pos:start="165:34" pos:end="165:43"><name pos:start="165:34" pos:end="165:43"><name pos:start="165:34" pos:end="165:39">cpu_ir</name><index pos:start="165:40" pos:end="165:43">[<expr pos:start="165:41" pos:end="165:42"><name pos:start="165:41" pos:end="165:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="165:46" pos:end="165:55"><expr pos:start="165:46" pos:end="165:55"><name pos:start="165:46" pos:end="165:55"><name pos:start="165:46" pos:end="165:51">cpu_ir</name><index pos:start="165:52" pos:end="165:55">[<expr pos:start="165:53" pos:end="165:54"><name pos:start="165:53" pos:end="165:54">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="165:58" pos:end="165:63"><expr pos:start="165:58" pos:end="165:63"><name pos:start="165:58" pos:end="165:63">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="167:13" pos:end="169:53">else<block type="pseudo" pos:start="169:17" pos:end="169:53"><block_content pos:start="169:17" pos:end="169:53">

                <expr_stmt pos:start="169:17" pos:end="169:53"><expr pos:start="169:17" pos:end="169:52"><call pos:start="169:17" pos:end="169:52"><name pos:start="169:17" pos:end="169:32">tcg_gen_movi_i64</name><argument_list pos:start="169:33" pos:end="169:52">(<argument pos:start="169:34" pos:end="169:43"><expr pos:start="169:34" pos:end="169:43"><name pos:start="169:34" pos:end="169:43"><name pos:start="169:34" pos:end="169:39">cpu_ir</name><index pos:start="169:40" pos:end="169:43">[<expr pos:start="169:41" pos:end="169:42"><name pos:start="169:41" pos:end="169:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="169:46" pos:end="169:51"><expr pos:start="169:46" pos:end="169:51"><name pos:start="169:46" pos:end="169:51">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="173:9" pos:end="173:14">break;</break>

    <case pos:start="175:5" pos:end="175:14">case <expr pos:start="175:10" pos:end="175:13"><literal type="number" pos:start="175:10" pos:end="175:13">0x09</literal></expr>:</case>

        <comment type="block" pos:start="177:9" pos:end="177:18">/* LDAH */</comment>

        <if_stmt pos:start="179:9" pos:end="189:9"><if pos:start="179:9" pos:end="189:9">if <condition pos:start="179:12" pos:end="179:29">(<expr pos:start="179:13" pos:end="179:28"><call pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:18">likely</name><argument_list pos:start="179:19" pos:end="179:28">(<argument pos:start="179:20" pos:end="179:27"><expr pos:start="179:20" pos:end="179:27"><name pos:start="179:20" pos:end="179:21">ra</name> <operator pos:start="179:23" pos:end="179:24">!=</operator> <literal type="number" pos:start="179:26" pos:end="179:27">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:31" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:59">

            <if_stmt pos:start="181:13" pos:end="187:59"><if pos:start="181:13" pos:end="183:71">if <condition pos:start="181:16" pos:end="181:25">(<expr pos:start="181:17" pos:end="181:24"><name pos:start="181:17" pos:end="181:18">rb</name> <operator pos:start="181:20" pos:end="181:21">!=</operator> <literal type="number" pos:start="181:23" pos:end="181:24">31</literal></expr>)</condition><block type="pseudo" pos:start="183:17" pos:end="183:71"><block_content pos:start="183:17" pos:end="183:71">

                <expr_stmt pos:start="183:17" pos:end="183:71"><expr pos:start="183:17" pos:end="183:70"><call pos:start="183:17" pos:end="183:70"><name pos:start="183:17" pos:end="183:32">tcg_gen_addi_i64</name><argument_list pos:start="183:33" pos:end="183:70">(<argument pos:start="183:34" pos:end="183:43"><expr pos:start="183:34" pos:end="183:43"><name pos:start="183:34" pos:end="183:43"><name pos:start="183:34" pos:end="183:39">cpu_ir</name><index pos:start="183:40" pos:end="183:43">[<expr pos:start="183:41" pos:end="183:42"><name pos:start="183:41" pos:end="183:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="183:46" pos:end="183:55"><expr pos:start="183:46" pos:end="183:55"><name pos:start="183:46" pos:end="183:55"><name pos:start="183:46" pos:end="183:51">cpu_ir</name><index pos:start="183:52" pos:end="183:55">[<expr pos:start="183:53" pos:end="183:54"><name pos:start="183:53" pos:end="183:54">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="183:58" pos:end="183:69"><expr pos:start="183:58" pos:end="183:69"><name pos:start="183:58" pos:end="183:63">disp16</name> <operator pos:start="183:65" pos:end="183:66">&lt;&lt;</operator> <literal type="number" pos:start="183:68" pos:end="183:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="185:13" pos:end="187:59">else<block type="pseudo" pos:start="187:17" pos:end="187:59"><block_content pos:start="187:17" pos:end="187:59">

                <expr_stmt pos:start="187:17" pos:end="187:59"><expr pos:start="187:17" pos:end="187:58"><call pos:start="187:17" pos:end="187:58"><name pos:start="187:17" pos:end="187:32">tcg_gen_movi_i64</name><argument_list pos:start="187:33" pos:end="187:58">(<argument pos:start="187:34" pos:end="187:43"><expr pos:start="187:34" pos:end="187:43"><name pos:start="187:34" pos:end="187:43"><name pos:start="187:34" pos:end="187:39">cpu_ir</name><index pos:start="187:40" pos:end="187:43">[<expr pos:start="187:41" pos:end="187:42"><name pos:start="187:41" pos:end="187:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="187:46" pos:end="187:57"><expr pos:start="187:46" pos:end="187:57"><name pos:start="187:46" pos:end="187:51">disp16</name> <operator pos:start="187:53" pos:end="187:54">&lt;&lt;</operator> <literal type="number" pos:start="187:56" pos:end="187:57">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="191:9" pos:end="191:14">break;</break>

    <case pos:start="193:5" pos:end="193:14">case <expr pos:start="193:10" pos:end="193:13"><literal type="number" pos:start="193:10" pos:end="193:13">0x0A</literal></expr>:</case>

        <comment type="block" pos:start="195:9" pos:end="195:18">/* LDBU */</comment>

        <if_stmt pos:start="197:9" pos:end="199:29"><if pos:start="197:9" pos:end="199:29">if <condition pos:start="197:12" pos:end="197:38">(<expr pos:start="197:13" pos:end="197:37"><operator pos:start="197:13" pos:end="197:13">!</operator><operator pos:start="197:14" pos:end="197:14">(</operator><name pos:start="197:15" pos:end="197:24"><name pos:start="197:15" pos:end="197:17">ctx</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:24">amask</name></name> <operator pos:start="197:26" pos:end="197:26">&amp;</operator> <name pos:start="197:28" pos:end="197:36">AMASK_BWX</name><operator pos:start="197:37" pos:end="197:37">)</operator></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:29"><block_content pos:start="199:13" pos:end="199:29">

            <goto pos:start="199:13" pos:end="199:29">goto <name pos:start="199:18" pos:end="199:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:68"><expr pos:start="201:9" pos:end="201:67"><call pos:start="201:9" pos:end="201:67"><name pos:start="201:9" pos:end="201:20">gen_load_mem</name><argument_list pos:start="201:21" pos:end="201:67">(<argument pos:start="201:22" pos:end="201:24"><expr pos:start="201:22" pos:end="201:24"><name pos:start="201:22" pos:end="201:24">ctx</name></expr></argument>, <argument pos:start="201:27" pos:end="201:44"><expr pos:start="201:27" pos:end="201:44"><operator pos:start="201:27" pos:end="201:27">&amp;</operator><name pos:start="201:28" pos:end="201:44">tcg_gen_qemu_ld8u</name></expr></argument>, <argument pos:start="201:47" pos:end="201:48"><expr pos:start="201:47" pos:end="201:48"><name pos:start="201:47" pos:end="201:48">ra</name></expr></argument>, <argument pos:start="201:51" pos:end="201:52"><expr pos:start="201:51" pos:end="201:52"><name pos:start="201:51" pos:end="201:52">rb</name></expr></argument>, <argument pos:start="201:55" pos:end="201:60"><expr pos:start="201:55" pos:end="201:60"><name pos:start="201:55" pos:end="201:60">disp16</name></expr></argument>, <argument pos:start="201:63" pos:end="201:63"><expr pos:start="201:63" pos:end="201:63"><literal type="number" pos:start="201:63" pos:end="201:63">0</literal></expr></argument>, <argument pos:start="201:66" pos:end="201:66"><expr pos:start="201:66" pos:end="201:66"><literal type="number" pos:start="201:66" pos:end="201:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:14">case <expr pos:start="205:10" pos:end="205:13"><literal type="number" pos:start="205:10" pos:end="205:13">0x0B</literal></expr>:</case>

        <comment type="block" pos:start="207:9" pos:end="207:19">/* LDQ_U */</comment>

        <expr_stmt pos:start="209:9" pos:end="209:68"><expr pos:start="209:9" pos:end="209:67"><call pos:start="209:9" pos:end="209:67"><name pos:start="209:9" pos:end="209:20">gen_load_mem</name><argument_list pos:start="209:21" pos:end="209:67">(<argument pos:start="209:22" pos:end="209:24"><expr pos:start="209:22" pos:end="209:24"><name pos:start="209:22" pos:end="209:24">ctx</name></expr></argument>, <argument pos:start="209:27" pos:end="209:44"><expr pos:start="209:27" pos:end="209:44"><operator pos:start="209:27" pos:end="209:27">&amp;</operator><name pos:start="209:28" pos:end="209:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="209:47" pos:end="209:48"><expr pos:start="209:47" pos:end="209:48"><name pos:start="209:47" pos:end="209:48">ra</name></expr></argument>, <argument pos:start="209:51" pos:end="209:52"><expr pos:start="209:51" pos:end="209:52"><name pos:start="209:51" pos:end="209:52">rb</name></expr></argument>, <argument pos:start="209:55" pos:end="209:60"><expr pos:start="209:55" pos:end="209:60"><name pos:start="209:55" pos:end="209:60">disp16</name></expr></argument>, <argument pos:start="209:63" pos:end="209:63"><expr pos:start="209:63" pos:end="209:63"><literal type="number" pos:start="209:63" pos:end="209:63">0</literal></expr></argument>, <argument pos:start="209:66" pos:end="209:66"><expr pos:start="209:66" pos:end="209:66"><literal type="number" pos:start="209:66" pos:end="209:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <case pos:start="213:5" pos:end="213:14">case <expr pos:start="213:10" pos:end="213:13"><literal type="number" pos:start="213:10" pos:end="213:13">0x0C</literal></expr>:</case>

        <comment type="block" pos:start="215:9" pos:end="215:18">/* LDWU */</comment>

        <if_stmt pos:start="217:9" pos:end="219:29"><if pos:start="217:9" pos:end="219:29">if <condition pos:start="217:12" pos:end="217:38">(<expr pos:start="217:13" pos:end="217:37"><operator pos:start="217:13" pos:end="217:13">!</operator><operator pos:start="217:14" pos:end="217:14">(</operator><name pos:start="217:15" pos:end="217:24"><name pos:start="217:15" pos:end="217:17">ctx</name><operator pos:start="217:18" pos:end="217:19">-&gt;</operator><name pos:start="217:20" pos:end="217:24">amask</name></name> <operator pos:start="217:26" pos:end="217:26">&amp;</operator> <name pos:start="217:28" pos:end="217:36">AMASK_BWX</name><operator pos:start="217:37" pos:end="217:37">)</operator></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:29"><block_content pos:start="219:13" pos:end="219:29">

            <goto pos:start="219:13" pos:end="219:29">goto <name pos:start="219:18" pos:end="219:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:69"><expr pos:start="221:9" pos:end="221:68"><call pos:start="221:9" pos:end="221:68"><name pos:start="221:9" pos:end="221:20">gen_load_mem</name><argument_list pos:start="221:21" pos:end="221:68">(<argument pos:start="221:22" pos:end="221:24"><expr pos:start="221:22" pos:end="221:24"><name pos:start="221:22" pos:end="221:24">ctx</name></expr></argument>, <argument pos:start="221:27" pos:end="221:45"><expr pos:start="221:27" pos:end="221:45"><operator pos:start="221:27" pos:end="221:27">&amp;</operator><name pos:start="221:28" pos:end="221:45">tcg_gen_qemu_ld16u</name></expr></argument>, <argument pos:start="221:48" pos:end="221:49"><expr pos:start="221:48" pos:end="221:49"><name pos:start="221:48" pos:end="221:49">ra</name></expr></argument>, <argument pos:start="221:52" pos:end="221:53"><expr pos:start="221:52" pos:end="221:53"><name pos:start="221:52" pos:end="221:53">rb</name></expr></argument>, <argument pos:start="221:56" pos:end="221:61"><expr pos:start="221:56" pos:end="221:61"><name pos:start="221:56" pos:end="221:61">disp16</name></expr></argument>, <argument pos:start="221:64" pos:end="221:64"><expr pos:start="221:64" pos:end="221:64"><literal type="number" pos:start="221:64" pos:end="221:64">0</literal></expr></argument>, <argument pos:start="221:67" pos:end="221:67"><expr pos:start="221:67" pos:end="221:67"><literal type="number" pos:start="221:67" pos:end="221:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:14">case <expr pos:start="225:10" pos:end="225:13"><literal type="number" pos:start="225:10" pos:end="225:13">0x0D</literal></expr>:</case>

        <comment type="block" pos:start="227:9" pos:end="227:17">/* STW */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:69"><expr pos:start="229:9" pos:end="229:68"><call pos:start="229:9" pos:end="229:68"><name pos:start="229:9" pos:end="229:21">gen_store_mem</name><argument_list pos:start="229:22" pos:end="229:68">(<argument pos:start="229:23" pos:end="229:25"><expr pos:start="229:23" pos:end="229:25"><name pos:start="229:23" pos:end="229:25">ctx</name></expr></argument>, <argument pos:start="229:28" pos:end="229:45"><expr pos:start="229:28" pos:end="229:45"><operator pos:start="229:28" pos:end="229:28">&amp;</operator><name pos:start="229:29" pos:end="229:45">tcg_gen_qemu_st16</name></expr></argument>, <argument pos:start="229:48" pos:end="229:49"><expr pos:start="229:48" pos:end="229:49"><name pos:start="229:48" pos:end="229:49">ra</name></expr></argument>, <argument pos:start="229:52" pos:end="229:53"><expr pos:start="229:52" pos:end="229:53"><name pos:start="229:52" pos:end="229:53">rb</name></expr></argument>, <argument pos:start="229:56" pos:end="229:61"><expr pos:start="229:56" pos:end="229:61"><name pos:start="229:56" pos:end="229:61">disp16</name></expr></argument>, <argument pos:start="229:64" pos:end="229:64"><expr pos:start="229:64" pos:end="229:64"><literal type="number" pos:start="229:64" pos:end="229:64">0</literal></expr></argument>, <argument pos:start="229:67" pos:end="229:67"><expr pos:start="229:67" pos:end="229:67"><literal type="number" pos:start="229:67" pos:end="229:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:14">case <expr pos:start="233:10" pos:end="233:13"><literal type="number" pos:start="233:10" pos:end="233:13">0x0E</literal></expr>:</case>

        <comment type="block" pos:start="235:9" pos:end="235:17">/* STB */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:68"><expr pos:start="237:9" pos:end="237:67"><call pos:start="237:9" pos:end="237:67"><name pos:start="237:9" pos:end="237:21">gen_store_mem</name><argument_list pos:start="237:22" pos:end="237:67">(<argument pos:start="237:23" pos:end="237:25"><expr pos:start="237:23" pos:end="237:25"><name pos:start="237:23" pos:end="237:25">ctx</name></expr></argument>, <argument pos:start="237:28" pos:end="237:44"><expr pos:start="237:28" pos:end="237:44"><operator pos:start="237:28" pos:end="237:28">&amp;</operator><name pos:start="237:29" pos:end="237:44">tcg_gen_qemu_st8</name></expr></argument>, <argument pos:start="237:47" pos:end="237:48"><expr pos:start="237:47" pos:end="237:48"><name pos:start="237:47" pos:end="237:48">ra</name></expr></argument>, <argument pos:start="237:51" pos:end="237:52"><expr pos:start="237:51" pos:end="237:52"><name pos:start="237:51" pos:end="237:52">rb</name></expr></argument>, <argument pos:start="237:55" pos:end="237:60"><expr pos:start="237:55" pos:end="237:60"><name pos:start="237:55" pos:end="237:60">disp16</name></expr></argument>, <argument pos:start="237:63" pos:end="237:63"><expr pos:start="237:63" pos:end="237:63"><literal type="number" pos:start="237:63" pos:end="237:63">0</literal></expr></argument>, <argument pos:start="237:66" pos:end="237:66"><expr pos:start="237:66" pos:end="237:66"><literal type="number" pos:start="237:66" pos:end="237:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>

    <case pos:start="241:5" pos:end="241:14">case <expr pos:start="241:10" pos:end="241:13"><literal type="number" pos:start="241:10" pos:end="241:13">0x0F</literal></expr>:</case>

        <comment type="block" pos:start="243:9" pos:end="243:19">/* STQ_U */</comment>

        <expr_stmt pos:start="245:9" pos:end="245:69"><expr pos:start="245:9" pos:end="245:68"><call pos:start="245:9" pos:end="245:68"><name pos:start="245:9" pos:end="245:21">gen_store_mem</name><argument_list pos:start="245:22" pos:end="245:68">(<argument pos:start="245:23" pos:end="245:25"><expr pos:start="245:23" pos:end="245:25"><name pos:start="245:23" pos:end="245:25">ctx</name></expr></argument>, <argument pos:start="245:28" pos:end="245:45"><expr pos:start="245:28" pos:end="245:45"><operator pos:start="245:28" pos:end="245:28">&amp;</operator><name pos:start="245:29" pos:end="245:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="245:48" pos:end="245:49"><expr pos:start="245:48" pos:end="245:49"><name pos:start="245:48" pos:end="245:49">ra</name></expr></argument>, <argument pos:start="245:52" pos:end="245:53"><expr pos:start="245:52" pos:end="245:53"><name pos:start="245:52" pos:end="245:53">rb</name></expr></argument>, <argument pos:start="245:56" pos:end="245:61"><expr pos:start="245:56" pos:end="245:61"><name pos:start="245:56" pos:end="245:61">disp16</name></expr></argument>, <argument pos:start="245:64" pos:end="245:64"><expr pos:start="245:64" pos:end="245:64"><literal type="number" pos:start="245:64" pos:end="245:64">0</literal></expr></argument>, <argument pos:start="245:67" pos:end="245:67"><expr pos:start="245:67" pos:end="245:67"><literal type="number" pos:start="245:67" pos:end="245:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>

    <case pos:start="249:5" pos:end="249:14">case <expr pos:start="249:10" pos:end="249:13"><literal type="number" pos:start="249:10" pos:end="249:13">0x10</literal></expr>:</case>

        <switch pos:start="251:9" pos:end="795:9">switch <condition pos:start="251:16" pos:end="251:20">(<expr pos:start="251:17" pos:end="251:19"><name pos:start="251:17" pos:end="251:19">fn7</name></expr>)</condition> <block pos:start="251:22" pos:end="795:9">{<block_content pos:start="253:9" pos:end="793:29">

        <case pos:start="253:9" pos:end="253:18">case <expr pos:start="253:14" pos:end="253:17"><literal type="number" pos:start="253:14" pos:end="253:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="255:13" pos:end="255:22">/* ADDL */</comment>

            <if_stmt pos:start="257:13" pos:end="287:13"><if pos:start="257:13" pos:end="287:13">if <condition pos:start="257:16" pos:end="257:33">(<expr pos:start="257:17" pos:end="257:32"><call pos:start="257:17" pos:end="257:32"><name pos:start="257:17" pos:end="257:22">likely</name><argument_list pos:start="257:23" pos:end="257:32">(<argument pos:start="257:24" pos:end="257:31"><expr pos:start="257:24" pos:end="257:31"><name pos:start="257:24" pos:end="257:25">rc</name> <operator pos:start="257:27" pos:end="257:28">!=</operator> <literal type="number" pos:start="257:30" pos:end="257:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="257:35" pos:end="287:13">{<block_content pos:start="259:17" pos:end="285:17">

                <if_stmt pos:start="259:17" pos:end="285:17"><if pos:start="259:17" pos:end="275:17">if <condition pos:start="259:20" pos:end="259:29">(<expr pos:start="259:21" pos:end="259:28"><name pos:start="259:21" pos:end="259:22">ra</name> <operator pos:start="259:24" pos:end="259:25">!=</operator> <literal type="number" pos:start="259:27" pos:end="259:28">31</literal></expr>)</condition> <block pos:start="259:31" pos:end="275:17">{<block_content pos:start="261:21" pos:end="273:21">

                    <if_stmt pos:start="261:21" pos:end="273:21"><if pos:start="261:21" pos:end="267:21">if <condition pos:start="261:24" pos:end="261:30">(<expr pos:start="261:25" pos:end="261:29"><name pos:start="261:25" pos:end="261:29">islit</name></expr>)</condition> <block pos:start="261:32" pos:end="267:21">{<block_content pos:start="263:25" pos:end="265:67">

                        <expr_stmt pos:start="263:25" pos:end="263:70"><expr pos:start="263:25" pos:end="263:69"><call pos:start="263:25" pos:end="263:69"><name pos:start="263:25" pos:end="263:40">tcg_gen_addi_i64</name><argument_list pos:start="263:41" pos:end="263:69">(<argument pos:start="263:42" pos:end="263:51"><expr pos:start="263:42" pos:end="263:51"><name pos:start="263:42" pos:end="263:51"><name pos:start="263:42" pos:end="263:47">cpu_ir</name><index pos:start="263:48" pos:end="263:51">[<expr pos:start="263:49" pos:end="263:50"><name pos:start="263:49" pos:end="263:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="263:54" pos:end="263:63"><expr pos:start="263:54" pos:end="263:63"><name pos:start="263:54" pos:end="263:63"><name pos:start="263:54" pos:end="263:59">cpu_ir</name><index pos:start="263:60" pos:end="263:63">[<expr pos:start="263:61" pos:end="263:62"><name pos:start="263:61" pos:end="263:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="263:66" pos:end="263:68"><expr pos:start="263:66" pos:end="263:68"><name pos:start="263:66" pos:end="263:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="265:25" pos:end="265:67"><expr pos:start="265:25" pos:end="265:66"><call pos:start="265:25" pos:end="265:66"><name pos:start="265:25" pos:end="265:42">tcg_gen_ext32s_i64</name><argument_list pos:start="265:43" pos:end="265:66">(<argument pos:start="265:44" pos:end="265:53"><expr pos:start="265:44" pos:end="265:53"><name pos:start="265:44" pos:end="265:53"><name pos:start="265:44" pos:end="265:49">cpu_ir</name><index pos:start="265:50" pos:end="265:53">[<expr pos:start="265:51" pos:end="265:52"><name pos:start="265:51" pos:end="265:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="265:56" pos:end="265:65"><expr pos:start="265:56" pos:end="265:65"><name pos:start="265:56" pos:end="265:65"><name pos:start="265:56" pos:end="265:61">cpu_ir</name><index pos:start="265:62" pos:end="265:65">[<expr pos:start="265:63" pos:end="265:64"><name pos:start="265:63" pos:end="265:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="267:23" pos:end="273:21">else <block pos:start="267:28" pos:end="273:21">{<block_content pos:start="269:25" pos:end="271:67">

                        <expr_stmt pos:start="269:25" pos:end="269:76"><expr pos:start="269:25" pos:end="269:75"><call pos:start="269:25" pos:end="269:75"><name pos:start="269:25" pos:end="269:39">tcg_gen_add_i64</name><argument_list pos:start="269:40" pos:end="269:75">(<argument pos:start="269:41" pos:end="269:50"><expr pos:start="269:41" pos:end="269:50"><name pos:start="269:41" pos:end="269:50"><name pos:start="269:41" pos:end="269:46">cpu_ir</name><index pos:start="269:47" pos:end="269:50">[<expr pos:start="269:48" pos:end="269:49"><name pos:start="269:48" pos:end="269:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="269:53" pos:end="269:62"><expr pos:start="269:53" pos:end="269:62"><name pos:start="269:53" pos:end="269:62"><name pos:start="269:53" pos:end="269:58">cpu_ir</name><index pos:start="269:59" pos:end="269:62">[<expr pos:start="269:60" pos:end="269:61"><name pos:start="269:60" pos:end="269:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="269:65" pos:end="269:74"><expr pos:start="269:65" pos:end="269:74"><name pos:start="269:65" pos:end="269:74"><name pos:start="269:65" pos:end="269:70">cpu_ir</name><index pos:start="269:71" pos:end="269:74">[<expr pos:start="269:72" pos:end="269:73"><name pos:start="269:72" pos:end="269:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="271:25" pos:end="271:67"><expr pos:start="271:25" pos:end="271:66"><call pos:start="271:25" pos:end="271:66"><name pos:start="271:25" pos:end="271:42">tcg_gen_ext32s_i64</name><argument_list pos:start="271:43" pos:end="271:66">(<argument pos:start="271:44" pos:end="271:53"><expr pos:start="271:44" pos:end="271:53"><name pos:start="271:44" pos:end="271:53"><name pos:start="271:44" pos:end="271:49">cpu_ir</name><index pos:start="271:50" pos:end="271:53">[<expr pos:start="271:51" pos:end="271:52"><name pos:start="271:51" pos:end="271:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="271:56" pos:end="271:65"><expr pos:start="271:56" pos:end="271:65"><name pos:start="271:56" pos:end="271:65"><name pos:start="271:56" pos:end="271:61">cpu_ir</name><index pos:start="271:62" pos:end="271:65">[<expr pos:start="271:63" pos:end="271:64"><name pos:start="271:63" pos:end="271:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="275:19" pos:end="285:17">else <block pos:start="275:24" pos:end="285:17">{<block_content pos:start="277:21" pos:end="283:67">

                    <if_stmt pos:start="277:21" pos:end="283:67"><if pos:start="277:21" pos:end="279:58">if <condition pos:start="277:24" pos:end="277:30">(<expr pos:start="277:25" pos:end="277:29"><name pos:start="277:25" pos:end="277:29">islit</name></expr>)</condition><block type="pseudo" pos:start="279:25" pos:end="279:58"><block_content pos:start="279:25" pos:end="279:58">

                        <expr_stmt pos:start="279:25" pos:end="279:58"><expr pos:start="279:25" pos:end="279:57"><call pos:start="279:25" pos:end="279:57"><name pos:start="279:25" pos:end="279:40">tcg_gen_movi_i64</name><argument_list pos:start="279:41" pos:end="279:57">(<argument pos:start="279:42" pos:end="279:51"><expr pos:start="279:42" pos:end="279:51"><name pos:start="279:42" pos:end="279:51"><name pos:start="279:42" pos:end="279:47">cpu_ir</name><index pos:start="279:48" pos:end="279:51">[<expr pos:start="279:49" pos:end="279:50"><name pos:start="279:49" pos:end="279:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="279:54" pos:end="279:56"><expr pos:start="279:54" pos:end="279:56"><name pos:start="279:54" pos:end="279:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="281:21" pos:end="283:67">else<block type="pseudo" pos:start="283:25" pos:end="283:67"><block_content pos:start="283:25" pos:end="283:67">

                        <expr_stmt pos:start="283:25" pos:end="283:67"><expr pos:start="283:25" pos:end="283:66"><call pos:start="283:25" pos:end="283:66"><name pos:start="283:25" pos:end="283:42">tcg_gen_ext32s_i64</name><argument_list pos:start="283:43" pos:end="283:66">(<argument pos:start="283:44" pos:end="283:53"><expr pos:start="283:44" pos:end="283:53"><name pos:start="283:44" pos:end="283:53"><name pos:start="283:44" pos:end="283:49">cpu_ir</name><index pos:start="283:50" pos:end="283:53">[<expr pos:start="283:51" pos:end="283:52"><name pos:start="283:51" pos:end="283:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="283:56" pos:end="283:65"><expr pos:start="283:56" pos:end="283:65"><name pos:start="283:56" pos:end="283:65"><name pos:start="283:56" pos:end="283:61">cpu_ir</name><index pos:start="283:62" pos:end="283:65">[<expr pos:start="283:63" pos:end="283:64"><name pos:start="283:63" pos:end="283:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="289:13" pos:end="289:18">break;</break>

        <case pos:start="291:9" pos:end="291:18">case <expr pos:start="291:14" pos:end="291:17"><literal type="number" pos:start="291:14" pos:end="291:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="293:13" pos:end="293:24">/* S4ADDL */</comment>

            <if_stmt pos:start="295:13" pos:end="327:13"><if pos:start="295:13" pos:end="327:13">if <condition pos:start="295:16" pos:end="295:33">(<expr pos:start="295:17" pos:end="295:32"><call pos:start="295:17" pos:end="295:32"><name pos:start="295:17" pos:end="295:22">likely</name><argument_list pos:start="295:23" pos:end="295:32">(<argument pos:start="295:24" pos:end="295:31"><expr pos:start="295:24" pos:end="295:31"><name pos:start="295:24" pos:end="295:25">rc</name> <operator pos:start="295:27" pos:end="295:28">!=</operator> <literal type="number" pos:start="295:30" pos:end="295:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="295:35" pos:end="327:13">{<block_content pos:start="297:17" pos:end="325:17">

                <if_stmt pos:start="297:17" pos:end="325:17"><if pos:start="297:17" pos:end="315:17">if <condition pos:start="297:20" pos:end="297:29">(<expr pos:start="297:21" pos:end="297:28"><name pos:start="297:21" pos:end="297:22">ra</name> <operator pos:start="297:24" pos:end="297:25">!=</operator> <literal type="number" pos:start="297:27" pos:end="297:28">31</literal></expr>)</condition> <block pos:start="297:31" pos:end="315:17">{<block_content pos:start="299:21" pos:end="313:39">

                    <decl_stmt pos:start="299:21" pos:end="299:58"><decl pos:start="299:21" pos:end="299:57"><type pos:start="299:21" pos:end="299:24"><name pos:start="299:21" pos:end="299:24">TCGv</name></type> <name pos:start="299:26" pos:end="299:28">tmp</name> <init pos:start="299:30" pos:end="299:57">= <expr pos:start="299:32" pos:end="299:57"><call pos:start="299:32" pos:end="299:57"><name pos:start="299:32" pos:end="299:43">tcg_temp_new</name><argument_list pos:start="299:44" pos:end="299:57">(<argument pos:start="299:45" pos:end="299:56"><expr pos:start="299:45" pos:end="299:56"><name pos:start="299:45" pos:end="299:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="301:21" pos:end="301:57"><expr pos:start="301:21" pos:end="301:56"><call pos:start="301:21" pos:end="301:56"><name pos:start="301:21" pos:end="301:36">tcg_gen_shli_i64</name><argument_list pos:start="301:37" pos:end="301:56">(<argument pos:start="301:38" pos:end="301:40"><expr pos:start="301:38" pos:end="301:40"><name pos:start="301:38" pos:end="301:40">tmp</name></expr></argument>, <argument pos:start="301:43" pos:end="301:52"><expr pos:start="301:43" pos:end="301:52"><name pos:start="301:43" pos:end="301:52"><name pos:start="301:43" pos:end="301:48">cpu_ir</name><index pos:start="301:49" pos:end="301:52">[<expr pos:start="301:50" pos:end="301:51"><name pos:start="301:50" pos:end="301:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="301:55" pos:end="301:55"><expr pos:start="301:55" pos:end="301:55"><literal type="number" pos:start="301:55" pos:end="301:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="303:21" pos:end="309:62"><if pos:start="303:21" pos:end="305:56">if <condition pos:start="303:24" pos:end="303:30">(<expr pos:start="303:25" pos:end="303:29"><name pos:start="303:25" pos:end="303:29">islit</name></expr>)</condition><block type="pseudo" pos:start="305:25" pos:end="305:56"><block_content pos:start="305:25" pos:end="305:56">

                        <expr_stmt pos:start="305:25" pos:end="305:56"><expr pos:start="305:25" pos:end="305:55"><call pos:start="305:25" pos:end="305:55"><name pos:start="305:25" pos:end="305:40">tcg_gen_addi_i64</name><argument_list pos:start="305:41" pos:end="305:55">(<argument pos:start="305:42" pos:end="305:44"><expr pos:start="305:42" pos:end="305:44"><name pos:start="305:42" pos:end="305:44">tmp</name></expr></argument>, <argument pos:start="305:47" pos:end="305:49"><expr pos:start="305:47" pos:end="305:49"><name pos:start="305:47" pos:end="305:49">tmp</name></expr></argument>, <argument pos:start="305:52" pos:end="305:54"><expr pos:start="305:52" pos:end="305:54"><name pos:start="305:52" pos:end="305:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="307:21" pos:end="309:62">else<block type="pseudo" pos:start="309:25" pos:end="309:62"><block_content pos:start="309:25" pos:end="309:62">

                        <expr_stmt pos:start="309:25" pos:end="309:62"><expr pos:start="309:25" pos:end="309:61"><call pos:start="309:25" pos:end="309:61"><name pos:start="309:25" pos:end="309:39">tcg_gen_add_i64</name><argument_list pos:start="309:40" pos:end="309:61">(<argument pos:start="309:41" pos:end="309:43"><expr pos:start="309:41" pos:end="309:43"><name pos:start="309:41" pos:end="309:43">tmp</name></expr></argument>, <argument pos:start="309:46" pos:end="309:48"><expr pos:start="309:46" pos:end="309:48"><name pos:start="309:46" pos:end="309:48">tmp</name></expr></argument>, <argument pos:start="309:51" pos:end="309:60"><expr pos:start="309:51" pos:end="309:60"><name pos:start="309:51" pos:end="309:60"><name pos:start="309:51" pos:end="309:56">cpu_ir</name><index pos:start="309:57" pos:end="309:60">[<expr pos:start="309:58" pos:end="309:59"><name pos:start="309:58" pos:end="309:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:56"><expr pos:start="311:21" pos:end="311:55"><call pos:start="311:21" pos:end="311:55"><name pos:start="311:21" pos:end="311:38">tcg_gen_ext32s_i64</name><argument_list pos:start="311:39" pos:end="311:55">(<argument pos:start="311:40" pos:end="311:49"><expr pos:start="311:40" pos:end="311:49"><name pos:start="311:40" pos:end="311:49"><name pos:start="311:40" pos:end="311:45">cpu_ir</name><index pos:start="311:46" pos:end="311:49">[<expr pos:start="311:47" pos:end="311:48"><name pos:start="311:47" pos:end="311:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="311:52" pos:end="311:54"><expr pos:start="311:52" pos:end="311:54"><name pos:start="311:52" pos:end="311:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="313:21" pos:end="313:39"><expr pos:start="313:21" pos:end="313:38"><call pos:start="313:21" pos:end="313:38"><name pos:start="313:21" pos:end="313:33">tcg_temp_free</name><argument_list pos:start="313:34" pos:end="313:38">(<argument pos:start="313:35" pos:end="313:37"><expr pos:start="313:35" pos:end="313:37"><name pos:start="313:35" pos:end="313:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="315:19" pos:end="325:17">else <block pos:start="315:24" pos:end="325:17">{<block_content pos:start="317:21" pos:end="323:67">

                    <if_stmt pos:start="317:21" pos:end="323:67"><if pos:start="317:21" pos:end="319:58">if <condition pos:start="317:24" pos:end="317:30">(<expr pos:start="317:25" pos:end="317:29"><name pos:start="317:25" pos:end="317:29">islit</name></expr>)</condition><block type="pseudo" pos:start="319:25" pos:end="319:58"><block_content pos:start="319:25" pos:end="319:58">

                        <expr_stmt pos:start="319:25" pos:end="319:58"><expr pos:start="319:25" pos:end="319:57"><call pos:start="319:25" pos:end="319:57"><name pos:start="319:25" pos:end="319:40">tcg_gen_movi_i64</name><argument_list pos:start="319:41" pos:end="319:57">(<argument pos:start="319:42" pos:end="319:51"><expr pos:start="319:42" pos:end="319:51"><name pos:start="319:42" pos:end="319:51"><name pos:start="319:42" pos:end="319:47">cpu_ir</name><index pos:start="319:48" pos:end="319:51">[<expr pos:start="319:49" pos:end="319:50"><name pos:start="319:49" pos:end="319:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="319:54" pos:end="319:56"><expr pos:start="319:54" pos:end="319:56"><name pos:start="319:54" pos:end="319:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="321:21" pos:end="323:67">else<block type="pseudo" pos:start="323:25" pos:end="323:67"><block_content pos:start="323:25" pos:end="323:67">

                        <expr_stmt pos:start="323:25" pos:end="323:67"><expr pos:start="323:25" pos:end="323:66"><call pos:start="323:25" pos:end="323:66"><name pos:start="323:25" pos:end="323:42">tcg_gen_ext32s_i64</name><argument_list pos:start="323:43" pos:end="323:66">(<argument pos:start="323:44" pos:end="323:53"><expr pos:start="323:44" pos:end="323:53"><name pos:start="323:44" pos:end="323:53"><name pos:start="323:44" pos:end="323:49">cpu_ir</name><index pos:start="323:50" pos:end="323:53">[<expr pos:start="323:51" pos:end="323:52"><name pos:start="323:51" pos:end="323:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="323:56" pos:end="323:65"><expr pos:start="323:56" pos:end="323:65"><name pos:start="323:56" pos:end="323:65"><name pos:start="323:56" pos:end="323:61">cpu_ir</name><index pos:start="323:62" pos:end="323:65">[<expr pos:start="323:63" pos:end="323:64"><name pos:start="323:63" pos:end="323:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="329:13" pos:end="329:18">break;</break>

        <case pos:start="331:9" pos:end="331:18">case <expr pos:start="331:14" pos:end="331:17"><literal type="number" pos:start="331:14" pos:end="331:17">0x09</literal></expr>:</case>

            <comment type="block" pos:start="333:13" pos:end="333:22">/* SUBL */</comment>

            <if_stmt pos:start="335:13" pos:end="499:13"><if pos:start="335:13" pos:end="499:13">if <condition pos:start="335:16" pos:end="335:33">(<expr pos:start="335:17" pos:end="335:32"><call pos:start="335:17" pos:end="335:32"><name pos:start="335:17" pos:end="335:22">likely</name><argument_list pos:start="335:23" pos:end="335:32">(<argument pos:start="335:24" pos:end="335:31"><expr pos:start="335:24" pos:end="335:31"><name pos:start="335:24" pos:end="335:25">rc</name> <operator pos:start="335:27" pos:end="335:28">!=</operator> <literal type="number" pos:start="335:30" pos:end="335:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="335:35" pos:end="499:13">{<block_content pos:start="337:17" pos:end="497:17">

                <if_stmt pos:start="337:17" pos:end="363:13"><if pos:start="337:17" pos:end="349:17">if <condition pos:start="337:20" pos:end="337:29">(<expr pos:start="337:21" pos:end="337:28"><name pos:start="337:21" pos:end="337:22">ra</name> <operator pos:start="337:24" pos:end="337:25">!=</operator> <literal type="number" pos:start="337:27" pos:end="337:28">31</literal></expr>)</condition> <block pos:start="337:31" pos:end="349:17">{<block_content pos:start="339:21" pos:end="347:63">

                    <if_stmt pos:start="339:21" pos:end="345:76"><if pos:start="339:21" pos:end="341:70">if <condition pos:start="339:24" pos:end="339:30">(<expr pos:start="339:25" pos:end="339:29"><name pos:start="339:25" pos:end="339:29">islit</name></expr>)</condition><block type="pseudo" pos:start="341:25" pos:end="341:70"><block_content pos:start="341:25" pos:end="341:70">

                        <expr_stmt pos:start="341:25" pos:end="341:70"><expr pos:start="341:25" pos:end="341:69"><call pos:start="341:25" pos:end="341:69"><name pos:start="341:25" pos:end="341:40">tcg_gen_subi_i64</name><argument_list pos:start="341:41" pos:end="341:69">(<argument pos:start="341:42" pos:end="341:51"><expr pos:start="341:42" pos:end="341:51"><name pos:start="341:42" pos:end="341:51"><name pos:start="341:42" pos:end="341:47">cpu_ir</name><index pos:start="341:48" pos:end="341:51">[<expr pos:start="341:49" pos:end="341:50"><name pos:start="341:49" pos:end="341:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="341:54" pos:end="341:63"><expr pos:start="341:54" pos:end="341:63"><name pos:start="341:54" pos:end="341:63"><name pos:start="341:54" pos:end="341:59">cpu_ir</name><index pos:start="341:60" pos:end="341:63">[<expr pos:start="341:61" pos:end="341:62"><name pos:start="341:61" pos:end="341:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="341:66" pos:end="341:68"><expr pos:start="341:66" pos:end="341:68"><name pos:start="341:66" pos:end="341:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="343:21" pos:end="345:76">else<block type="pseudo" pos:start="345:25" pos:end="345:76"><block_content pos:start="345:25" pos:end="345:76">

                        <expr_stmt pos:start="345:25" pos:end="345:76"><expr pos:start="345:25" pos:end="345:75"><call pos:start="345:25" pos:end="345:75"><name pos:start="345:25" pos:end="345:39">tcg_gen_sub_i64</name><argument_list pos:start="345:40" pos:end="345:75">(<argument pos:start="345:41" pos:end="345:50"><expr pos:start="345:41" pos:end="345:50"><name pos:start="345:41" pos:end="345:50"><name pos:start="345:41" pos:end="345:46">cpu_ir</name><index pos:start="345:47" pos:end="345:50">[<expr pos:start="345:48" pos:end="345:49"><name pos:start="345:48" pos:end="345:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="345:53" pos:end="345:62"><expr pos:start="345:53" pos:end="345:62"><name pos:start="345:53" pos:end="345:62"><name pos:start="345:53" pos:end="345:58">cpu_ir</name><index pos:start="345:59" pos:end="345:62">[<expr pos:start="345:60" pos:end="345:61"><name pos:start="345:60" pos:end="345:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="345:65" pos:end="345:74"><expr pos:start="345:65" pos:end="345:74"><name pos:start="345:65" pos:end="345:74"><name pos:start="345:65" pos:end="345:70">cpu_ir</name><index pos:start="345:71" pos:end="345:74">[<expr pos:start="345:72" pos:end="345:73"><name pos:start="345:72" pos:end="345:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="347:21" pos:end="347:63"><expr pos:start="347:21" pos:end="347:62"><call pos:start="347:21" pos:end="347:62"><name pos:start="347:21" pos:end="347:38">tcg_gen_ext32s_i64</name><argument_list pos:start="347:39" pos:end="347:62">(<argument pos:start="347:40" pos:end="347:49"><expr pos:start="347:40" pos:end="347:49"><name pos:start="347:40" pos:end="347:49"><name pos:start="347:40" pos:end="347:45">cpu_ir</name><index pos:start="347:46" pos:end="347:49">[<expr pos:start="347:47" pos:end="347:48"><name pos:start="347:47" pos:end="347:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="347:52" pos:end="347:61"><expr pos:start="347:52" pos:end="347:61"><name pos:start="347:52" pos:end="347:61"><name pos:start="347:52" pos:end="347:57">cpu_ir</name><index pos:start="347:58" pos:end="347:61">[<expr pos:start="347:59" pos:end="347:60"><name pos:start="347:59" pos:end="347:60">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="349:19" pos:end="363:13">else <block pos:start="349:24" pos:end="363:13">{<block_content pos:start="351:21" pos:end="361:17">

                    <if_stmt pos:start="351:21" pos:end="361:17"><if pos:start="351:21" pos:end="353:59">if <condition pos:start="351:24" pos:end="351:30">(<expr pos:start="351:25" pos:end="351:29"><name pos:start="351:25" pos:end="351:29">islit</name></expr>)</condition><block type="pseudo" pos:start="353:25" pos:end="353:59"><block_content pos:start="353:25" pos:end="353:59">

                        <expr_stmt pos:start="353:25" pos:end="353:59"><expr pos:start="353:25" pos:end="353:58"><call pos:start="353:25" pos:end="353:58"><name pos:start="353:25" pos:end="353:40">tcg_gen_movi_i64</name><argument_list pos:start="353:41" pos:end="353:58">(<argument pos:start="353:42" pos:end="353:51"><expr pos:start="353:42" pos:end="353:51"><name pos:start="353:42" pos:end="353:51"><name pos:start="353:42" pos:end="353:47">cpu_ir</name><index pos:start="353:48" pos:end="353:51">[<expr pos:start="353:49" pos:end="353:50"><name pos:start="353:49" pos:end="353:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="353:54" pos:end="353:57"><expr pos:start="353:54" pos:end="353:57"><operator pos:start="353:54" pos:end="353:54">-</operator><name pos:start="353:55" pos:end="353:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="355:21" pos:end="361:17">else <block pos:start="355:26" pos:end="361:17">{<block_content pos:start="357:25" pos:end="359:67">

                        <expr_stmt pos:start="357:25" pos:end="357:64"><expr pos:start="357:25" pos:end="357:63"><call pos:start="357:25" pos:end="357:63"><name pos:start="357:25" pos:end="357:39">tcg_gen_neg_i64</name><argument_list pos:start="357:40" pos:end="357:63">(<argument pos:start="357:41" pos:end="357:50"><expr pos:start="357:41" pos:end="357:50"><name pos:start="357:41" pos:end="357:50"><name pos:start="357:41" pos:end="357:46">cpu_ir</name><index pos:start="357:47" pos:end="357:50">[<expr pos:start="357:48" pos:end="357:49"><name pos:start="357:48" pos:end="357:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="357:53" pos:end="357:62"><expr pos:start="357:53" pos:end="357:62"><name pos:start="357:53" pos:end="357:62"><name pos:start="357:53" pos:end="357:58">cpu_ir</name><index pos:start="357:59" pos:end="357:62">[<expr pos:start="357:60" pos:end="357:61"><name pos:start="357:60" pos:end="357:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="359:25" pos:end="359:67"><expr pos:start="359:25" pos:end="359:66"><call pos:start="359:25" pos:end="359:66"><name pos:start="359:25" pos:end="359:42">tcg_gen_ext32s_i64</name><argument_list pos:start="359:43" pos:end="359:66">(<argument pos:start="359:44" pos:end="359:53"><expr pos:start="359:44" pos:end="359:53"><name pos:start="359:44" pos:end="359:53"><name pos:start="359:44" pos:end="359:49">cpu_ir</name><index pos:start="359:50" pos:end="359:53">[<expr pos:start="359:51" pos:end="359:52"><name pos:start="359:51" pos:end="359:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="359:56" pos:end="359:65"><expr pos:start="359:56" pos:end="359:65"><name pos:start="359:56" pos:end="359:65"><name pos:start="359:56" pos:end="359:61">cpu_ir</name><index pos:start="359:62" pos:end="359:65">[<expr pos:start="359:63" pos:end="359:64"><name pos:start="359:63" pos:end="359:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:18">case <expr pos:start="367:14" pos:end="367:17"><literal type="number" pos:start="367:14" pos:end="367:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="369:13" pos:end="369:24">/* S4SUBL */</comment>

            <if_stmt pos:start="371:13" pos:end="407:13"><if pos:start="371:13" pos:end="407:13">if <condition pos:start="371:16" pos:end="371:33">(<expr pos:start="371:17" pos:end="371:32"><call pos:start="371:17" pos:end="371:32"><name pos:start="371:17" pos:end="371:22">likely</name><argument_list pos:start="371:23" pos:end="371:32">(<argument pos:start="371:24" pos:end="371:31"><expr pos:start="371:24" pos:end="371:31"><name pos:start="371:24" pos:end="371:25">rc</name> <operator pos:start="371:27" pos:end="371:28">!=</operator> <literal type="number" pos:start="371:30" pos:end="371:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="371:35" pos:end="407:13">{<block_content pos:start="373:17" pos:end="405:17">

                <if_stmt pos:start="373:17" pos:end="405:17"><if pos:start="373:17" pos:end="391:17">if <condition pos:start="373:20" pos:end="373:29">(<expr pos:start="373:21" pos:end="373:28"><name pos:start="373:21" pos:end="373:22">ra</name> <operator pos:start="373:24" pos:end="373:25">!=</operator> <literal type="number" pos:start="373:27" pos:end="373:28">31</literal></expr>)</condition> <block pos:start="373:31" pos:end="391:17">{<block_content pos:start="375:21" pos:end="389:39">

                    <decl_stmt pos:start="375:21" pos:end="375:58"><decl pos:start="375:21" pos:end="375:57"><type pos:start="375:21" pos:end="375:24"><name pos:start="375:21" pos:end="375:24">TCGv</name></type> <name pos:start="375:26" pos:end="375:28">tmp</name> <init pos:start="375:30" pos:end="375:57">= <expr pos:start="375:32" pos:end="375:57"><call pos:start="375:32" pos:end="375:57"><name pos:start="375:32" pos:end="375:43">tcg_temp_new</name><argument_list pos:start="375:44" pos:end="375:57">(<argument pos:start="375:45" pos:end="375:56"><expr pos:start="375:45" pos:end="375:56"><name pos:start="375:45" pos:end="375:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="377:21" pos:end="377:57"><expr pos:start="377:21" pos:end="377:56"><call pos:start="377:21" pos:end="377:56"><name pos:start="377:21" pos:end="377:36">tcg_gen_shli_i64</name><argument_list pos:start="377:37" pos:end="377:56">(<argument pos:start="377:38" pos:end="377:40"><expr pos:start="377:38" pos:end="377:40"><name pos:start="377:38" pos:end="377:40">tmp</name></expr></argument>, <argument pos:start="377:43" pos:end="377:52"><expr pos:start="377:43" pos:end="377:52"><name pos:start="377:43" pos:end="377:52"><name pos:start="377:43" pos:end="377:48">cpu_ir</name><index pos:start="377:49" pos:end="377:52">[<expr pos:start="377:50" pos:end="377:51"><name pos:start="377:50" pos:end="377:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="377:55" pos:end="377:55"><expr pos:start="377:55" pos:end="377:55"><literal type="number" pos:start="377:55" pos:end="377:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="379:21" pos:end="385:62"><if pos:start="379:21" pos:end="381:56">if <condition pos:start="379:24" pos:end="379:30">(<expr pos:start="379:25" pos:end="379:29"><name pos:start="379:25" pos:end="379:29">islit</name></expr>)</condition><block type="pseudo" pos:start="381:25" pos:end="381:56"><block_content pos:start="381:25" pos:end="381:56">

                        <expr_stmt pos:start="381:25" pos:end="381:56"><expr pos:start="381:25" pos:end="381:55"><call pos:start="381:25" pos:end="381:55"><name pos:start="381:25" pos:end="381:40">tcg_gen_subi_i64</name><argument_list pos:start="381:41" pos:end="381:55">(<argument pos:start="381:42" pos:end="381:44"><expr pos:start="381:42" pos:end="381:44"><name pos:start="381:42" pos:end="381:44">tmp</name></expr></argument>, <argument pos:start="381:47" pos:end="381:49"><expr pos:start="381:47" pos:end="381:49"><name pos:start="381:47" pos:end="381:49">tmp</name></expr></argument>, <argument pos:start="381:52" pos:end="381:54"><expr pos:start="381:52" pos:end="381:54"><name pos:start="381:52" pos:end="381:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="383:21" pos:end="385:62">else<block type="pseudo" pos:start="385:25" pos:end="385:62"><block_content pos:start="385:25" pos:end="385:62">

                        <expr_stmt pos:start="385:25" pos:end="385:62"><expr pos:start="385:25" pos:end="385:61"><call pos:start="385:25" pos:end="385:61"><name pos:start="385:25" pos:end="385:39">tcg_gen_sub_i64</name><argument_list pos:start="385:40" pos:end="385:61">(<argument pos:start="385:41" pos:end="385:43"><expr pos:start="385:41" pos:end="385:43"><name pos:start="385:41" pos:end="385:43">tmp</name></expr></argument>, <argument pos:start="385:46" pos:end="385:48"><expr pos:start="385:46" pos:end="385:48"><name pos:start="385:46" pos:end="385:48">tmp</name></expr></argument>, <argument pos:start="385:51" pos:end="385:60"><expr pos:start="385:51" pos:end="385:60"><name pos:start="385:51" pos:end="385:60"><name pos:start="385:51" pos:end="385:56">cpu_ir</name><index pos:start="385:57" pos:end="385:60">[<expr pos:start="385:58" pos:end="385:59"><name pos:start="385:58" pos:end="385:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="387:21" pos:end="387:56"><expr pos:start="387:21" pos:end="387:55"><call pos:start="387:21" pos:end="387:55"><name pos:start="387:21" pos:end="387:38">tcg_gen_ext32s_i64</name><argument_list pos:start="387:39" pos:end="387:55">(<argument pos:start="387:40" pos:end="387:49"><expr pos:start="387:40" pos:end="387:49"><name pos:start="387:40" pos:end="387:49"><name pos:start="387:40" pos:end="387:45">cpu_ir</name><index pos:start="387:46" pos:end="387:49">[<expr pos:start="387:47" pos:end="387:48"><name pos:start="387:47" pos:end="387:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="387:52" pos:end="387:54"><expr pos:start="387:52" pos:end="387:54"><name pos:start="387:52" pos:end="387:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="389:21" pos:end="389:39"><expr pos:start="389:21" pos:end="389:38"><call pos:start="389:21" pos:end="389:38"><name pos:start="389:21" pos:end="389:33">tcg_temp_free</name><argument_list pos:start="389:34" pos:end="389:38">(<argument pos:start="389:35" pos:end="389:37"><expr pos:start="389:35" pos:end="389:37"><name pos:start="389:35" pos:end="389:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="391:19" pos:end="405:17">else <block pos:start="391:24" pos:end="405:17">{<block_content pos:start="393:21" pos:end="403:21">

                    <if_stmt pos:start="393:21" pos:end="403:21"><if pos:start="393:21" pos:end="395:59">if <condition pos:start="393:24" pos:end="393:30">(<expr pos:start="393:25" pos:end="393:29"><name pos:start="393:25" pos:end="393:29">islit</name></expr>)</condition><block type="pseudo" pos:start="395:25" pos:end="395:59"><block_content pos:start="395:25" pos:end="395:59">

                        <expr_stmt pos:start="395:25" pos:end="395:59"><expr pos:start="395:25" pos:end="395:58"><call pos:start="395:25" pos:end="395:58"><name pos:start="395:25" pos:end="395:40">tcg_gen_movi_i64</name><argument_list pos:start="395:41" pos:end="395:58">(<argument pos:start="395:42" pos:end="395:51"><expr pos:start="395:42" pos:end="395:51"><name pos:start="395:42" pos:end="395:51"><name pos:start="395:42" pos:end="395:47">cpu_ir</name><index pos:start="395:48" pos:end="395:51">[<expr pos:start="395:49" pos:end="395:50"><name pos:start="395:49" pos:end="395:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="395:54" pos:end="395:57"><expr pos:start="395:54" pos:end="395:57"><operator pos:start="395:54" pos:end="395:54">-</operator><name pos:start="395:55" pos:end="395:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="397:21" pos:end="403:21">else <block pos:start="397:26" pos:end="403:21">{<block_content pos:start="399:25" pos:end="401:67">

                        <expr_stmt pos:start="399:25" pos:end="399:64"><expr pos:start="399:25" pos:end="399:63"><call pos:start="399:25" pos:end="399:63"><name pos:start="399:25" pos:end="399:39">tcg_gen_neg_i64</name><argument_list pos:start="399:40" pos:end="399:63">(<argument pos:start="399:41" pos:end="399:50"><expr pos:start="399:41" pos:end="399:50"><name pos:start="399:41" pos:end="399:50"><name pos:start="399:41" pos:end="399:46">cpu_ir</name><index pos:start="399:47" pos:end="399:50">[<expr pos:start="399:48" pos:end="399:49"><name pos:start="399:48" pos:end="399:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="399:53" pos:end="399:62"><expr pos:start="399:53" pos:end="399:62"><name pos:start="399:53" pos:end="399:62"><name pos:start="399:53" pos:end="399:58">cpu_ir</name><index pos:start="399:59" pos:end="399:62">[<expr pos:start="399:60" pos:end="399:61"><name pos:start="399:60" pos:end="399:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="401:25" pos:end="401:67"><expr pos:start="401:25" pos:end="401:66"><call pos:start="401:25" pos:end="401:66"><name pos:start="401:25" pos:end="401:42">tcg_gen_ext32s_i64</name><argument_list pos:start="401:43" pos:end="401:66">(<argument pos:start="401:44" pos:end="401:53"><expr pos:start="401:44" pos:end="401:53"><name pos:start="401:44" pos:end="401:53"><name pos:start="401:44" pos:end="401:49">cpu_ir</name><index pos:start="401:50" pos:end="401:53">[<expr pos:start="401:51" pos:end="401:52"><name pos:start="401:51" pos:end="401:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="401:56" pos:end="401:65"><expr pos:start="401:56" pos:end="401:65"><name pos:start="401:56" pos:end="401:65"><name pos:start="401:56" pos:end="401:61">cpu_ir</name><index pos:start="401:62" pos:end="401:65">[<expr pos:start="401:63" pos:end="401:64"><name pos:start="401:63" pos:end="401:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="409:13" pos:end="409:18">break;</break>

        <case pos:start="411:9" pos:end="411:18">case <expr pos:start="411:14" pos:end="411:17"><literal type="number" pos:start="411:14" pos:end="411:17">0x0F</literal></expr>:</case>

            <comment type="block" pos:start="413:13" pos:end="413:24">/* CMPBGE */</comment>

            <expr_stmt pos:start="415:13" pos:end="415:62"><expr pos:start="415:13" pos:end="415:61"><call pos:start="415:13" pos:end="415:61"><name pos:start="415:13" pos:end="415:22">gen_arith3</name><argument_list pos:start="415:23" pos:end="415:61">(<argument pos:start="415:24" pos:end="415:36"><expr pos:start="415:24" pos:end="415:36"><name pos:start="415:24" pos:end="415:36">helper_cmpbge</name></expr></argument>, <argument pos:start="415:39" pos:end="415:40"><expr pos:start="415:39" pos:end="415:40"><name pos:start="415:39" pos:end="415:40">ra</name></expr></argument>, <argument pos:start="415:43" pos:end="415:44"><expr pos:start="415:43" pos:end="415:44"><name pos:start="415:43" pos:end="415:44">rb</name></expr></argument>, <argument pos:start="415:47" pos:end="415:48"><expr pos:start="415:47" pos:end="415:48"><name pos:start="415:47" pos:end="415:48">rc</name></expr></argument>, <argument pos:start="415:51" pos:end="415:55"><expr pos:start="415:51" pos:end="415:55"><name pos:start="415:51" pos:end="415:55">islit</name></expr></argument>, <argument pos:start="415:58" pos:end="415:60"><expr pos:start="415:58" pos:end="415:60"><name pos:start="415:58" pos:end="415:60">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="417:13" pos:end="417:18">break;</break>

        <case pos:start="419:9" pos:end="419:18">case <expr pos:start="419:14" pos:end="419:17"><literal type="number" pos:start="419:14" pos:end="419:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="421:13" pos:end="421:24">/* S8ADDL */</comment>

            <if_stmt pos:start="423:13" pos:end="455:13"><if pos:start="423:13" pos:end="455:13">if <condition pos:start="423:16" pos:end="423:33">(<expr pos:start="423:17" pos:end="423:32"><call pos:start="423:17" pos:end="423:32"><name pos:start="423:17" pos:end="423:22">likely</name><argument_list pos:start="423:23" pos:end="423:32">(<argument pos:start="423:24" pos:end="423:31"><expr pos:start="423:24" pos:end="423:31"><name pos:start="423:24" pos:end="423:25">rc</name> <operator pos:start="423:27" pos:end="423:28">!=</operator> <literal type="number" pos:start="423:30" pos:end="423:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="423:35" pos:end="455:13">{<block_content pos:start="425:17" pos:end="453:17">

                <if_stmt pos:start="425:17" pos:end="453:17"><if pos:start="425:17" pos:end="443:17">if <condition pos:start="425:20" pos:end="425:29">(<expr pos:start="425:21" pos:end="425:28"><name pos:start="425:21" pos:end="425:22">ra</name> <operator pos:start="425:24" pos:end="425:25">!=</operator> <literal type="number" pos:start="425:27" pos:end="425:28">31</literal></expr>)</condition> <block pos:start="425:31" pos:end="443:17">{<block_content pos:start="427:21" pos:end="441:39">

                    <decl_stmt pos:start="427:21" pos:end="427:58"><decl pos:start="427:21" pos:end="427:57"><type pos:start="427:21" pos:end="427:24"><name pos:start="427:21" pos:end="427:24">TCGv</name></type> <name pos:start="427:26" pos:end="427:28">tmp</name> <init pos:start="427:30" pos:end="427:57">= <expr pos:start="427:32" pos:end="427:57"><call pos:start="427:32" pos:end="427:57"><name pos:start="427:32" pos:end="427:43">tcg_temp_new</name><argument_list pos:start="427:44" pos:end="427:57">(<argument pos:start="427:45" pos:end="427:56"><expr pos:start="427:45" pos:end="427:56"><name pos:start="427:45" pos:end="427:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="429:21" pos:end="429:57"><expr pos:start="429:21" pos:end="429:56"><call pos:start="429:21" pos:end="429:56"><name pos:start="429:21" pos:end="429:36">tcg_gen_shli_i64</name><argument_list pos:start="429:37" pos:end="429:56">(<argument pos:start="429:38" pos:end="429:40"><expr pos:start="429:38" pos:end="429:40"><name pos:start="429:38" pos:end="429:40">tmp</name></expr></argument>, <argument pos:start="429:43" pos:end="429:52"><expr pos:start="429:43" pos:end="429:52"><name pos:start="429:43" pos:end="429:52"><name pos:start="429:43" pos:end="429:48">cpu_ir</name><index pos:start="429:49" pos:end="429:52">[<expr pos:start="429:50" pos:end="429:51"><name pos:start="429:50" pos:end="429:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="429:55" pos:end="429:55"><expr pos:start="429:55" pos:end="429:55"><literal type="number" pos:start="429:55" pos:end="429:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="431:21" pos:end="437:62"><if pos:start="431:21" pos:end="433:56">if <condition pos:start="431:24" pos:end="431:30">(<expr pos:start="431:25" pos:end="431:29"><name pos:start="431:25" pos:end="431:29">islit</name></expr>)</condition><block type="pseudo" pos:start="433:25" pos:end="433:56"><block_content pos:start="433:25" pos:end="433:56">

                        <expr_stmt pos:start="433:25" pos:end="433:56"><expr pos:start="433:25" pos:end="433:55"><call pos:start="433:25" pos:end="433:55"><name pos:start="433:25" pos:end="433:40">tcg_gen_addi_i64</name><argument_list pos:start="433:41" pos:end="433:55">(<argument pos:start="433:42" pos:end="433:44"><expr pos:start="433:42" pos:end="433:44"><name pos:start="433:42" pos:end="433:44">tmp</name></expr></argument>, <argument pos:start="433:47" pos:end="433:49"><expr pos:start="433:47" pos:end="433:49"><name pos:start="433:47" pos:end="433:49">tmp</name></expr></argument>, <argument pos:start="433:52" pos:end="433:54"><expr pos:start="433:52" pos:end="433:54"><name pos:start="433:52" pos:end="433:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="435:21" pos:end="437:62">else<block type="pseudo" pos:start="437:25" pos:end="437:62"><block_content pos:start="437:25" pos:end="437:62">

                        <expr_stmt pos:start="437:25" pos:end="437:62"><expr pos:start="437:25" pos:end="437:61"><call pos:start="437:25" pos:end="437:61"><name pos:start="437:25" pos:end="437:39">tcg_gen_add_i64</name><argument_list pos:start="437:40" pos:end="437:61">(<argument pos:start="437:41" pos:end="437:43"><expr pos:start="437:41" pos:end="437:43"><name pos:start="437:41" pos:end="437:43">tmp</name></expr></argument>, <argument pos:start="437:46" pos:end="437:48"><expr pos:start="437:46" pos:end="437:48"><name pos:start="437:46" pos:end="437:48">tmp</name></expr></argument>, <argument pos:start="437:51" pos:end="437:60"><expr pos:start="437:51" pos:end="437:60"><name pos:start="437:51" pos:end="437:60"><name pos:start="437:51" pos:end="437:56">cpu_ir</name><index pos:start="437:57" pos:end="437:60">[<expr pos:start="437:58" pos:end="437:59"><name pos:start="437:58" pos:end="437:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="439:21" pos:end="439:56"><expr pos:start="439:21" pos:end="439:55"><call pos:start="439:21" pos:end="439:55"><name pos:start="439:21" pos:end="439:38">tcg_gen_ext32s_i64</name><argument_list pos:start="439:39" pos:end="439:55">(<argument pos:start="439:40" pos:end="439:49"><expr pos:start="439:40" pos:end="439:49"><name pos:start="439:40" pos:end="439:49"><name pos:start="439:40" pos:end="439:45">cpu_ir</name><index pos:start="439:46" pos:end="439:49">[<expr pos:start="439:47" pos:end="439:48"><name pos:start="439:47" pos:end="439:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="439:52" pos:end="439:54"><expr pos:start="439:52" pos:end="439:54"><name pos:start="439:52" pos:end="439:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="441:21" pos:end="441:39"><expr pos:start="441:21" pos:end="441:38"><call pos:start="441:21" pos:end="441:38"><name pos:start="441:21" pos:end="441:33">tcg_temp_free</name><argument_list pos:start="441:34" pos:end="441:38">(<argument pos:start="441:35" pos:end="441:37"><expr pos:start="441:35" pos:end="441:37"><name pos:start="441:35" pos:end="441:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="443:19" pos:end="453:17">else <block pos:start="443:24" pos:end="453:17">{<block_content pos:start="445:21" pos:end="451:67">

                    <if_stmt pos:start="445:21" pos:end="451:67"><if pos:start="445:21" pos:end="447:58">if <condition pos:start="445:24" pos:end="445:30">(<expr pos:start="445:25" pos:end="445:29"><name pos:start="445:25" pos:end="445:29">islit</name></expr>)</condition><block type="pseudo" pos:start="447:25" pos:end="447:58"><block_content pos:start="447:25" pos:end="447:58">

                        <expr_stmt pos:start="447:25" pos:end="447:58"><expr pos:start="447:25" pos:end="447:57"><call pos:start="447:25" pos:end="447:57"><name pos:start="447:25" pos:end="447:40">tcg_gen_movi_i64</name><argument_list pos:start="447:41" pos:end="447:57">(<argument pos:start="447:42" pos:end="447:51"><expr pos:start="447:42" pos:end="447:51"><name pos:start="447:42" pos:end="447:51"><name pos:start="447:42" pos:end="447:47">cpu_ir</name><index pos:start="447:48" pos:end="447:51">[<expr pos:start="447:49" pos:end="447:50"><name pos:start="447:49" pos:end="447:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="447:54" pos:end="447:56"><expr pos:start="447:54" pos:end="447:56"><name pos:start="447:54" pos:end="447:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="449:21" pos:end="451:67">else<block type="pseudo" pos:start="451:25" pos:end="451:67"><block_content pos:start="451:25" pos:end="451:67">

                        <expr_stmt pos:start="451:25" pos:end="451:67"><expr pos:start="451:25" pos:end="451:66"><call pos:start="451:25" pos:end="451:66"><name pos:start="451:25" pos:end="451:42">tcg_gen_ext32s_i64</name><argument_list pos:start="451:43" pos:end="451:66">(<argument pos:start="451:44" pos:end="451:53"><expr pos:start="451:44" pos:end="451:53"><name pos:start="451:44" pos:end="451:53"><name pos:start="451:44" pos:end="451:49">cpu_ir</name><index pos:start="451:50" pos:end="451:53">[<expr pos:start="451:51" pos:end="451:52"><name pos:start="451:51" pos:end="451:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="451:56" pos:end="451:65"><expr pos:start="451:56" pos:end="451:65"><name pos:start="451:56" pos:end="451:65"><name pos:start="451:56" pos:end="451:61">cpu_ir</name><index pos:start="451:62" pos:end="451:65">[<expr pos:start="451:63" pos:end="451:64"><name pos:start="451:63" pos:end="451:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="457:13" pos:end="457:18">break;</break>

        <case pos:start="459:9" pos:end="459:18">case <expr pos:start="459:14" pos:end="459:17"><literal type="number" pos:start="459:14" pos:end="459:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="461:13" pos:end="461:24">/* S8SUBL */</comment>

            <if_stmt pos:start="463:13" pos:end="497:17"><if pos:start="463:13" pos:end="497:17">if <condition pos:start="463:16" pos:end="463:33">(<expr pos:start="463:17" pos:end="463:32"><call pos:start="463:17" pos:end="463:32"><name pos:start="463:17" pos:end="463:22">likely</name><argument_list pos:start="463:23" pos:end="463:32">(<argument pos:start="463:24" pos:end="463:31"><expr pos:start="463:24" pos:end="463:31"><name pos:start="463:24" pos:end="463:25">rc</name> <operator pos:start="463:27" pos:end="463:28">!=</operator> <literal type="number" pos:start="463:30" pos:end="463:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="463:35" pos:end="497:17">{<block_content pos:start="465:17" pos:end="495:21">

                <if_stmt pos:start="465:17" pos:end="495:21"><if pos:start="465:17" pos:end="483:17">if <condition pos:start="465:20" pos:end="465:29">(<expr pos:start="465:21" pos:end="465:28"><name pos:start="465:21" pos:end="465:22">ra</name> <operator pos:start="465:24" pos:end="465:25">!=</operator> <literal type="number" pos:start="465:27" pos:end="465:28">31</literal></expr>)</condition> <block pos:start="465:31" pos:end="483:17">{<block_content pos:start="467:21" pos:end="481:39">

                    <decl_stmt pos:start="467:21" pos:end="467:58"><decl pos:start="467:21" pos:end="467:57"><type pos:start="467:21" pos:end="467:24"><name pos:start="467:21" pos:end="467:24">TCGv</name></type> <name pos:start="467:26" pos:end="467:28">tmp</name> <init pos:start="467:30" pos:end="467:57">= <expr pos:start="467:32" pos:end="467:57"><call pos:start="467:32" pos:end="467:57"><name pos:start="467:32" pos:end="467:43">tcg_temp_new</name><argument_list pos:start="467:44" pos:end="467:57">(<argument pos:start="467:45" pos:end="467:56"><expr pos:start="467:45" pos:end="467:56"><name pos:start="467:45" pos:end="467:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="469:21" pos:end="469:57"><expr pos:start="469:21" pos:end="469:56"><call pos:start="469:21" pos:end="469:56"><name pos:start="469:21" pos:end="469:36">tcg_gen_shli_i64</name><argument_list pos:start="469:37" pos:end="469:56">(<argument pos:start="469:38" pos:end="469:40"><expr pos:start="469:38" pos:end="469:40"><name pos:start="469:38" pos:end="469:40">tmp</name></expr></argument>, <argument pos:start="469:43" pos:end="469:52"><expr pos:start="469:43" pos:end="469:52"><name pos:start="469:43" pos:end="469:52"><name pos:start="469:43" pos:end="469:48">cpu_ir</name><index pos:start="469:49" pos:end="469:52">[<expr pos:start="469:50" pos:end="469:51"><name pos:start="469:50" pos:end="469:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="469:55" pos:end="469:55"><expr pos:start="469:55" pos:end="469:55"><literal type="number" pos:start="469:55" pos:end="469:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="471:21" pos:end="477:61"><if pos:start="471:21" pos:end="473:56">if <condition pos:start="471:24" pos:end="471:30">(<expr pos:start="471:25" pos:end="471:29"><name pos:start="471:25" pos:end="471:29">islit</name></expr>)</condition><block type="pseudo" pos:start="473:25" pos:end="473:56"><block_content pos:start="473:25" pos:end="473:56">

                        <expr_stmt pos:start="473:25" pos:end="473:56"><expr pos:start="473:25" pos:end="473:55"><call pos:start="473:25" pos:end="473:55"><name pos:start="473:25" pos:end="473:40">tcg_gen_subi_i64</name><argument_list pos:start="473:41" pos:end="473:55">(<argument pos:start="473:42" pos:end="473:44"><expr pos:start="473:42" pos:end="473:44"><name pos:start="473:42" pos:end="473:44">tmp</name></expr></argument>, <argument pos:start="473:47" pos:end="473:49"><expr pos:start="473:47" pos:end="473:49"><name pos:start="473:47" pos:end="473:49">tmp</name></expr></argument>, <argument pos:start="473:52" pos:end="473:54"><expr pos:start="473:52" pos:end="473:54"><name pos:start="473:52" pos:end="473:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="475:21" pos:end="477:61">else<block type="pseudo" pos:start="477:24" pos:end="477:61"><block_content pos:start="477:24" pos:end="477:61">

                       <expr_stmt pos:start="477:24" pos:end="477:61"><expr pos:start="477:24" pos:end="477:60"><call pos:start="477:24" pos:end="477:60"><name pos:start="477:24" pos:end="477:38">tcg_gen_sub_i64</name><argument_list pos:start="477:39" pos:end="477:60">(<argument pos:start="477:40" pos:end="477:42"><expr pos:start="477:40" pos:end="477:42"><name pos:start="477:40" pos:end="477:42">tmp</name></expr></argument>, <argument pos:start="477:45" pos:end="477:47"><expr pos:start="477:45" pos:end="477:47"><name pos:start="477:45" pos:end="477:47">tmp</name></expr></argument>, <argument pos:start="477:50" pos:end="477:59"><expr pos:start="477:50" pos:end="477:59"><name pos:start="477:50" pos:end="477:59"><name pos:start="477:50" pos:end="477:55">cpu_ir</name><index pos:start="477:56" pos:end="477:59">[<expr pos:start="477:57" pos:end="477:58"><name pos:start="477:57" pos:end="477:58">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="479:21" pos:end="479:56"><expr pos:start="479:21" pos:end="479:55"><call pos:start="479:21" pos:end="479:55"><name pos:start="479:21" pos:end="479:38">tcg_gen_ext32s_i64</name><argument_list pos:start="479:39" pos:end="479:55">(<argument pos:start="479:40" pos:end="479:49"><expr pos:start="479:40" pos:end="479:49"><name pos:start="479:40" pos:end="479:49"><name pos:start="479:40" pos:end="479:45">cpu_ir</name><index pos:start="479:46" pos:end="479:49">[<expr pos:start="479:47" pos:end="479:48"><name pos:start="479:47" pos:end="479:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="479:52" pos:end="479:54"><expr pos:start="479:52" pos:end="479:54"><name pos:start="479:52" pos:end="479:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="481:21" pos:end="481:39"><expr pos:start="481:21" pos:end="481:38"><call pos:start="481:21" pos:end="481:38"><name pos:start="481:21" pos:end="481:33">tcg_temp_free</name><argument_list pos:start="481:34" pos:end="481:38">(<argument pos:start="481:35" pos:end="481:37"><expr pos:start="481:35" pos:end="481:37"><name pos:start="481:35" pos:end="481:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="483:19" pos:end="495:21">else <block pos:start="483:24" pos:end="495:21">{<block_content pos:start="485:21" pos:end="493:67">

                    <if_stmt pos:start="485:21" pos:end="491:64"><if pos:start="485:21" pos:end="487:59">if <condition pos:start="485:24" pos:end="485:30">(<expr pos:start="485:25" pos:end="485:29"><name pos:start="485:25" pos:end="485:29">islit</name></expr>)</condition><block type="pseudo" pos:start="487:25" pos:end="487:59"><block_content pos:start="487:25" pos:end="487:59">

                        <expr_stmt pos:start="487:25" pos:end="487:59"><expr pos:start="487:25" pos:end="487:58"><call pos:start="487:25" pos:end="487:58"><name pos:start="487:25" pos:end="487:40">tcg_gen_movi_i64</name><argument_list pos:start="487:41" pos:end="487:58">(<argument pos:start="487:42" pos:end="487:51"><expr pos:start="487:42" pos:end="487:51"><name pos:start="487:42" pos:end="487:51"><name pos:start="487:42" pos:end="487:47">cpu_ir</name><index pos:start="487:48" pos:end="487:51">[<expr pos:start="487:49" pos:end="487:50"><name pos:start="487:49" pos:end="487:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="487:54" pos:end="487:57"><expr pos:start="487:54" pos:end="487:57"><operator pos:start="487:54" pos:end="487:54">-</operator><name pos:start="487:55" pos:end="487:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="489:21" pos:end="491:64">else<block type="pseudo" pos:start="491:25" pos:end="491:64"><block_content pos:start="491:25" pos:end="491:64">

                        <expr_stmt pos:start="491:25" pos:end="491:64"><expr pos:start="491:25" pos:end="491:63"><call pos:start="491:25" pos:end="491:63"><name pos:start="491:25" pos:end="491:39">tcg_gen_neg_i64</name><argument_list pos:start="491:40" pos:end="491:63">(<argument pos:start="491:41" pos:end="491:50"><expr pos:start="491:41" pos:end="491:50"><name pos:start="491:41" pos:end="491:50"><name pos:start="491:41" pos:end="491:46">cpu_ir</name><index pos:start="491:47" pos:end="491:50">[<expr pos:start="491:48" pos:end="491:49"><name pos:start="491:48" pos:end="491:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="491:53" pos:end="491:62"><expr pos:start="491:53" pos:end="491:62"><name pos:start="491:53" pos:end="491:62"><name pos:start="491:53" pos:end="491:58">cpu_ir</name><index pos:start="491:59" pos:end="491:62">[<expr pos:start="491:60" pos:end="491:61"><name pos:start="491:60" pos:end="491:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="493:25" pos:end="493:67"><expr pos:start="493:25" pos:end="493:66"><call pos:start="493:25" pos:end="493:66"><name pos:start="493:25" pos:end="493:42">tcg_gen_ext32s_i64</name><argument_list pos:start="493:43" pos:end="493:66">(<argument pos:start="493:44" pos:end="493:53"><expr pos:start="493:44" pos:end="493:53"><name pos:start="493:44" pos:end="493:53"><name pos:start="493:44" pos:end="493:49">cpu_ir</name><index pos:start="493:50" pos:end="493:53">[<expr pos:start="493:51" pos:end="493:52"><name pos:start="493:51" pos:end="493:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="493:56" pos:end="493:65"><expr pos:start="493:56" pos:end="493:65"><name pos:start="493:56" pos:end="493:65"><name pos:start="493:56" pos:end="493:61">cpu_ir</name><index pos:start="493:62" pos:end="493:65">[<expr pos:start="493:63" pos:end="493:64"><name pos:start="493:63" pos:end="493:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="501:13" pos:end="501:18">break;</break>

        <case pos:start="503:9" pos:end="503:18">case <expr pos:start="503:14" pos:end="503:17"><literal type="number" pos:start="503:14" pos:end="503:17">0x1D</literal></expr>:</case>

            <comment type="block" pos:start="505:13" pos:end="505:24">/* CMPULT */</comment>

            <expr_stmt pos:start="507:13" pos:end="507:58"><expr pos:start="507:13" pos:end="507:57"><call pos:start="507:13" pos:end="507:57"><name pos:start="507:13" pos:end="507:19">gen_cmp</name><argument_list pos:start="507:20" pos:end="507:57">(<argument pos:start="507:21" pos:end="507:32"><expr pos:start="507:21" pos:end="507:32"><name pos:start="507:21" pos:end="507:32">TCG_COND_LTU</name></expr></argument>, <argument pos:start="507:35" pos:end="507:36"><expr pos:start="507:35" pos:end="507:36"><name pos:start="507:35" pos:end="507:36">ra</name></expr></argument>, <argument pos:start="507:39" pos:end="507:40"><expr pos:start="507:39" pos:end="507:40"><name pos:start="507:39" pos:end="507:40">rb</name></expr></argument>, <argument pos:start="507:43" pos:end="507:44"><expr pos:start="507:43" pos:end="507:44"><name pos:start="507:43" pos:end="507:44">rc</name></expr></argument>, <argument pos:start="507:47" pos:end="507:51"><expr pos:start="507:47" pos:end="507:51"><name pos:start="507:47" pos:end="507:51">islit</name></expr></argument>, <argument pos:start="507:54" pos:end="507:56"><expr pos:start="507:54" pos:end="507:56"><name pos:start="507:54" pos:end="507:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        <case pos:start="511:9" pos:end="511:18">case <expr pos:start="511:14" pos:end="511:17"><literal type="number" pos:start="511:14" pos:end="511:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="513:13" pos:end="513:22">/* ADDQ */</comment>

            <if_stmt pos:start="515:13" pos:end="539:13"><if pos:start="515:13" pos:end="539:13">if <condition pos:start="515:16" pos:end="515:33">(<expr pos:start="515:17" pos:end="515:32"><call pos:start="515:17" pos:end="515:32"><name pos:start="515:17" pos:end="515:22">likely</name><argument_list pos:start="515:23" pos:end="515:32">(<argument pos:start="515:24" pos:end="515:31"><expr pos:start="515:24" pos:end="515:31"><name pos:start="515:24" pos:end="515:25">rc</name> <operator pos:start="515:27" pos:end="515:28">!=</operator> <literal type="number" pos:start="515:30" pos:end="515:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="515:35" pos:end="539:13">{<block_content pos:start="517:17" pos:end="537:17">

                <if_stmt pos:start="517:17" pos:end="537:17"><if pos:start="517:17" pos:end="527:17">if <condition pos:start="517:20" pos:end="517:29">(<expr pos:start="517:21" pos:end="517:28"><name pos:start="517:21" pos:end="517:22">ra</name> <operator pos:start="517:24" pos:end="517:25">!=</operator> <literal type="number" pos:start="517:27" pos:end="517:28">31</literal></expr>)</condition> <block pos:start="517:31" pos:end="527:17">{<block_content pos:start="519:21" pos:end="525:76">

                    <if_stmt pos:start="519:21" pos:end="525:76"><if pos:start="519:21" pos:end="521:70">if <condition pos:start="519:24" pos:end="519:30">(<expr pos:start="519:25" pos:end="519:29"><name pos:start="519:25" pos:end="519:29">islit</name></expr>)</condition><block type="pseudo" pos:start="521:25" pos:end="521:70"><block_content pos:start="521:25" pos:end="521:70">

                        <expr_stmt pos:start="521:25" pos:end="521:70"><expr pos:start="521:25" pos:end="521:69"><call pos:start="521:25" pos:end="521:69"><name pos:start="521:25" pos:end="521:40">tcg_gen_addi_i64</name><argument_list pos:start="521:41" pos:end="521:69">(<argument pos:start="521:42" pos:end="521:51"><expr pos:start="521:42" pos:end="521:51"><name pos:start="521:42" pos:end="521:51"><name pos:start="521:42" pos:end="521:47">cpu_ir</name><index pos:start="521:48" pos:end="521:51">[<expr pos:start="521:49" pos:end="521:50"><name pos:start="521:49" pos:end="521:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="521:54" pos:end="521:63"><expr pos:start="521:54" pos:end="521:63"><name pos:start="521:54" pos:end="521:63"><name pos:start="521:54" pos:end="521:59">cpu_ir</name><index pos:start="521:60" pos:end="521:63">[<expr pos:start="521:61" pos:end="521:62"><name pos:start="521:61" pos:end="521:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="521:66" pos:end="521:68"><expr pos:start="521:66" pos:end="521:68"><name pos:start="521:66" pos:end="521:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="523:21" pos:end="525:76">else<block type="pseudo" pos:start="525:25" pos:end="525:76"><block_content pos:start="525:25" pos:end="525:76">

                        <expr_stmt pos:start="525:25" pos:end="525:76"><expr pos:start="525:25" pos:end="525:75"><call pos:start="525:25" pos:end="525:75"><name pos:start="525:25" pos:end="525:39">tcg_gen_add_i64</name><argument_list pos:start="525:40" pos:end="525:75">(<argument pos:start="525:41" pos:end="525:50"><expr pos:start="525:41" pos:end="525:50"><name pos:start="525:41" pos:end="525:50"><name pos:start="525:41" pos:end="525:46">cpu_ir</name><index pos:start="525:47" pos:end="525:50">[<expr pos:start="525:48" pos:end="525:49"><name pos:start="525:48" pos:end="525:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="525:53" pos:end="525:62"><expr pos:start="525:53" pos:end="525:62"><name pos:start="525:53" pos:end="525:62"><name pos:start="525:53" pos:end="525:58">cpu_ir</name><index pos:start="525:59" pos:end="525:62">[<expr pos:start="525:60" pos:end="525:61"><name pos:start="525:60" pos:end="525:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="525:65" pos:end="525:74"><expr pos:start="525:65" pos:end="525:74"><name pos:start="525:65" pos:end="525:74"><name pos:start="525:65" pos:end="525:70">cpu_ir</name><index pos:start="525:71" pos:end="525:74">[<expr pos:start="525:72" pos:end="525:73"><name pos:start="525:72" pos:end="525:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="527:19" pos:end="537:17">else <block pos:start="527:24" pos:end="537:17">{<block_content pos:start="529:21" pos:end="535:64">

                    <if_stmt pos:start="529:21" pos:end="535:64"><if pos:start="529:21" pos:end="531:58">if <condition pos:start="529:24" pos:end="529:30">(<expr pos:start="529:25" pos:end="529:29"><name pos:start="529:25" pos:end="529:29">islit</name></expr>)</condition><block type="pseudo" pos:start="531:25" pos:end="531:58"><block_content pos:start="531:25" pos:end="531:58">

                        <expr_stmt pos:start="531:25" pos:end="531:58"><expr pos:start="531:25" pos:end="531:57"><call pos:start="531:25" pos:end="531:57"><name pos:start="531:25" pos:end="531:40">tcg_gen_movi_i64</name><argument_list pos:start="531:41" pos:end="531:57">(<argument pos:start="531:42" pos:end="531:51"><expr pos:start="531:42" pos:end="531:51"><name pos:start="531:42" pos:end="531:51"><name pos:start="531:42" pos:end="531:47">cpu_ir</name><index pos:start="531:48" pos:end="531:51">[<expr pos:start="531:49" pos:end="531:50"><name pos:start="531:49" pos:end="531:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="531:54" pos:end="531:56"><expr pos:start="531:54" pos:end="531:56"><name pos:start="531:54" pos:end="531:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="533:21" pos:end="535:64">else<block type="pseudo" pos:start="535:25" pos:end="535:64"><block_content pos:start="535:25" pos:end="535:64">

                        <expr_stmt pos:start="535:25" pos:end="535:64"><expr pos:start="535:25" pos:end="535:63"><call pos:start="535:25" pos:end="535:63"><name pos:start="535:25" pos:end="535:39">tcg_gen_mov_i64</name><argument_list pos:start="535:40" pos:end="535:63">(<argument pos:start="535:41" pos:end="535:50"><expr pos:start="535:41" pos:end="535:50"><name pos:start="535:41" pos:end="535:50"><name pos:start="535:41" pos:end="535:46">cpu_ir</name><index pos:start="535:47" pos:end="535:50">[<expr pos:start="535:48" pos:end="535:49"><name pos:start="535:48" pos:end="535:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="535:53" pos:end="535:62"><expr pos:start="535:53" pos:end="535:62"><name pos:start="535:53" pos:end="535:62"><name pos:start="535:53" pos:end="535:58">cpu_ir</name><index pos:start="535:59" pos:end="535:62">[<expr pos:start="535:60" pos:end="535:61"><name pos:start="535:60" pos:end="535:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="541:13" pos:end="541:18">break;</break>

        <case pos:start="543:9" pos:end="543:18">case <expr pos:start="543:14" pos:end="543:17"><literal type="number" pos:start="543:14" pos:end="543:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="545:13" pos:end="545:24">/* S4ADDQ */</comment>

            <if_stmt pos:start="547:13" pos:end="577:13"><if pos:start="547:13" pos:end="577:13">if <condition pos:start="547:16" pos:end="547:33">(<expr pos:start="547:17" pos:end="547:32"><call pos:start="547:17" pos:end="547:32"><name pos:start="547:17" pos:end="547:22">likely</name><argument_list pos:start="547:23" pos:end="547:32">(<argument pos:start="547:24" pos:end="547:31"><expr pos:start="547:24" pos:end="547:31"><name pos:start="547:24" pos:end="547:25">rc</name> <operator pos:start="547:27" pos:end="547:28">!=</operator> <literal type="number" pos:start="547:30" pos:end="547:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="547:35" pos:end="577:13">{<block_content pos:start="549:17" pos:end="575:17">

                <if_stmt pos:start="549:17" pos:end="575:17"><if pos:start="549:17" pos:end="565:17">if <condition pos:start="549:20" pos:end="549:29">(<expr pos:start="549:21" pos:end="549:28"><name pos:start="549:21" pos:end="549:22">ra</name> <operator pos:start="549:24" pos:end="549:25">!=</operator> <literal type="number" pos:start="549:27" pos:end="549:28">31</literal></expr>)</condition> <block pos:start="549:31" pos:end="565:17">{<block_content pos:start="551:21" pos:end="563:39">

                    <decl_stmt pos:start="551:21" pos:end="551:58"><decl pos:start="551:21" pos:end="551:57"><type pos:start="551:21" pos:end="551:24"><name pos:start="551:21" pos:end="551:24">TCGv</name></type> <name pos:start="551:26" pos:end="551:28">tmp</name> <init pos:start="551:30" pos:end="551:57">= <expr pos:start="551:32" pos:end="551:57"><call pos:start="551:32" pos:end="551:57"><name pos:start="551:32" pos:end="551:43">tcg_temp_new</name><argument_list pos:start="551:44" pos:end="551:57">(<argument pos:start="551:45" pos:end="551:56"><expr pos:start="551:45" pos:end="551:56"><name pos:start="551:45" pos:end="551:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="553:21" pos:end="553:57"><expr pos:start="553:21" pos:end="553:56"><call pos:start="553:21" pos:end="553:56"><name pos:start="553:21" pos:end="553:36">tcg_gen_shli_i64</name><argument_list pos:start="553:37" pos:end="553:56">(<argument pos:start="553:38" pos:end="553:40"><expr pos:start="553:38" pos:end="553:40"><name pos:start="553:38" pos:end="553:40">tmp</name></expr></argument>, <argument pos:start="553:43" pos:end="553:52"><expr pos:start="553:43" pos:end="553:52"><name pos:start="553:43" pos:end="553:52"><name pos:start="553:43" pos:end="553:48">cpu_ir</name><index pos:start="553:49" pos:end="553:52">[<expr pos:start="553:50" pos:end="553:51"><name pos:start="553:50" pos:end="553:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="553:55" pos:end="553:55"><expr pos:start="553:55" pos:end="553:55"><literal type="number" pos:start="553:55" pos:end="553:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="555:21" pos:end="561:69"><if pos:start="555:21" pos:end="557:63">if <condition pos:start="555:24" pos:end="555:30">(<expr pos:start="555:25" pos:end="555:29"><name pos:start="555:25" pos:end="555:29">islit</name></expr>)</condition><block type="pseudo" pos:start="557:25" pos:end="557:63"><block_content pos:start="557:25" pos:end="557:63">

                        <expr_stmt pos:start="557:25" pos:end="557:63"><expr pos:start="557:25" pos:end="557:62"><call pos:start="557:25" pos:end="557:62"><name pos:start="557:25" pos:end="557:40">tcg_gen_addi_i64</name><argument_list pos:start="557:41" pos:end="557:62">(<argument pos:start="557:42" pos:end="557:51"><expr pos:start="557:42" pos:end="557:51"><name pos:start="557:42" pos:end="557:51"><name pos:start="557:42" pos:end="557:47">cpu_ir</name><index pos:start="557:48" pos:end="557:51">[<expr pos:start="557:49" pos:end="557:50"><name pos:start="557:49" pos:end="557:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="557:54" pos:end="557:56"><expr pos:start="557:54" pos:end="557:56"><name pos:start="557:54" pos:end="557:56">tmp</name></expr></argument>, <argument pos:start="557:59" pos:end="557:61"><expr pos:start="557:59" pos:end="557:61"><name pos:start="557:59" pos:end="557:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="559:21" pos:end="561:69">else<block type="pseudo" pos:start="561:25" pos:end="561:69"><block_content pos:start="561:25" pos:end="561:69">

                        <expr_stmt pos:start="561:25" pos:end="561:69"><expr pos:start="561:25" pos:end="561:68"><call pos:start="561:25" pos:end="561:68"><name pos:start="561:25" pos:end="561:39">tcg_gen_add_i64</name><argument_list pos:start="561:40" pos:end="561:68">(<argument pos:start="561:41" pos:end="561:50"><expr pos:start="561:41" pos:end="561:50"><name pos:start="561:41" pos:end="561:50"><name pos:start="561:41" pos:end="561:46">cpu_ir</name><index pos:start="561:47" pos:end="561:50">[<expr pos:start="561:48" pos:end="561:49"><name pos:start="561:48" pos:end="561:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="561:53" pos:end="561:55"><expr pos:start="561:53" pos:end="561:55"><name pos:start="561:53" pos:end="561:55">tmp</name></expr></argument>, <argument pos:start="561:58" pos:end="561:67"><expr pos:start="561:58" pos:end="561:67"><name pos:start="561:58" pos:end="561:67"><name pos:start="561:58" pos:end="561:63">cpu_ir</name><index pos:start="561:64" pos:end="561:67">[<expr pos:start="561:65" pos:end="561:66"><name pos:start="561:65" pos:end="561:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="563:21" pos:end="563:39"><expr pos:start="563:21" pos:end="563:38"><call pos:start="563:21" pos:end="563:38"><name pos:start="563:21" pos:end="563:33">tcg_temp_free</name><argument_list pos:start="563:34" pos:end="563:38">(<argument pos:start="563:35" pos:end="563:37"><expr pos:start="563:35" pos:end="563:37"><name pos:start="563:35" pos:end="563:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="565:19" pos:end="575:17">else <block pos:start="565:24" pos:end="575:17">{<block_content pos:start="567:21" pos:end="573:64">

                    <if_stmt pos:start="567:21" pos:end="573:64"><if pos:start="567:21" pos:end="569:58">if <condition pos:start="567:24" pos:end="567:30">(<expr pos:start="567:25" pos:end="567:29"><name pos:start="567:25" pos:end="567:29">islit</name></expr>)</condition><block type="pseudo" pos:start="569:25" pos:end="569:58"><block_content pos:start="569:25" pos:end="569:58">

                        <expr_stmt pos:start="569:25" pos:end="569:58"><expr pos:start="569:25" pos:end="569:57"><call pos:start="569:25" pos:end="569:57"><name pos:start="569:25" pos:end="569:40">tcg_gen_movi_i64</name><argument_list pos:start="569:41" pos:end="569:57">(<argument pos:start="569:42" pos:end="569:51"><expr pos:start="569:42" pos:end="569:51"><name pos:start="569:42" pos:end="569:51"><name pos:start="569:42" pos:end="569:47">cpu_ir</name><index pos:start="569:48" pos:end="569:51">[<expr pos:start="569:49" pos:end="569:50"><name pos:start="569:49" pos:end="569:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="569:54" pos:end="569:56"><expr pos:start="569:54" pos:end="569:56"><name pos:start="569:54" pos:end="569:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="571:21" pos:end="573:64">else<block type="pseudo" pos:start="573:25" pos:end="573:64"><block_content pos:start="573:25" pos:end="573:64">

                        <expr_stmt pos:start="573:25" pos:end="573:64"><expr pos:start="573:25" pos:end="573:63"><call pos:start="573:25" pos:end="573:63"><name pos:start="573:25" pos:end="573:39">tcg_gen_mov_i64</name><argument_list pos:start="573:40" pos:end="573:63">(<argument pos:start="573:41" pos:end="573:50"><expr pos:start="573:41" pos:end="573:50"><name pos:start="573:41" pos:end="573:50"><name pos:start="573:41" pos:end="573:46">cpu_ir</name><index pos:start="573:47" pos:end="573:50">[<expr pos:start="573:48" pos:end="573:49"><name pos:start="573:48" pos:end="573:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="573:53" pos:end="573:62"><expr pos:start="573:53" pos:end="573:62"><name pos:start="573:53" pos:end="573:62"><name pos:start="573:53" pos:end="573:58">cpu_ir</name><index pos:start="573:59" pos:end="573:62">[<expr pos:start="573:60" pos:end="573:61"><name pos:start="573:60" pos:end="573:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="579:13" pos:end="579:18">break;</break>

        <case pos:start="581:9" pos:end="581:18">case <expr pos:start="581:14" pos:end="581:17"><literal type="number" pos:start="581:14" pos:end="581:17">0x29</literal></expr>:</case>

            <comment type="block" pos:start="583:13" pos:end="583:22">/* SUBQ */</comment>

            <if_stmt pos:start="585:13" pos:end="609:13"><if pos:start="585:13" pos:end="609:13">if <condition pos:start="585:16" pos:end="585:33">(<expr pos:start="585:17" pos:end="585:32"><call pos:start="585:17" pos:end="585:32"><name pos:start="585:17" pos:end="585:22">likely</name><argument_list pos:start="585:23" pos:end="585:32">(<argument pos:start="585:24" pos:end="585:31"><expr pos:start="585:24" pos:end="585:31"><name pos:start="585:24" pos:end="585:25">rc</name> <operator pos:start="585:27" pos:end="585:28">!=</operator> <literal type="number" pos:start="585:30" pos:end="585:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="585:35" pos:end="609:13">{<block_content pos:start="587:17" pos:end="607:17">

                <if_stmt pos:start="587:17" pos:end="607:17"><if pos:start="587:17" pos:end="597:17">if <condition pos:start="587:20" pos:end="587:29">(<expr pos:start="587:21" pos:end="587:28"><name pos:start="587:21" pos:end="587:22">ra</name> <operator pos:start="587:24" pos:end="587:25">!=</operator> <literal type="number" pos:start="587:27" pos:end="587:28">31</literal></expr>)</condition> <block pos:start="587:31" pos:end="597:17">{<block_content pos:start="589:21" pos:end="595:76">

                    <if_stmt pos:start="589:21" pos:end="595:76"><if pos:start="589:21" pos:end="591:70">if <condition pos:start="589:24" pos:end="589:30">(<expr pos:start="589:25" pos:end="589:29"><name pos:start="589:25" pos:end="589:29">islit</name></expr>)</condition><block type="pseudo" pos:start="591:25" pos:end="591:70"><block_content pos:start="591:25" pos:end="591:70">

                        <expr_stmt pos:start="591:25" pos:end="591:70"><expr pos:start="591:25" pos:end="591:69"><call pos:start="591:25" pos:end="591:69"><name pos:start="591:25" pos:end="591:40">tcg_gen_subi_i64</name><argument_list pos:start="591:41" pos:end="591:69">(<argument pos:start="591:42" pos:end="591:51"><expr pos:start="591:42" pos:end="591:51"><name pos:start="591:42" pos:end="591:51"><name pos:start="591:42" pos:end="591:47">cpu_ir</name><index pos:start="591:48" pos:end="591:51">[<expr pos:start="591:49" pos:end="591:50"><name pos:start="591:49" pos:end="591:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="591:54" pos:end="591:63"><expr pos:start="591:54" pos:end="591:63"><name pos:start="591:54" pos:end="591:63"><name pos:start="591:54" pos:end="591:59">cpu_ir</name><index pos:start="591:60" pos:end="591:63">[<expr pos:start="591:61" pos:end="591:62"><name pos:start="591:61" pos:end="591:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="591:66" pos:end="591:68"><expr pos:start="591:66" pos:end="591:68"><name pos:start="591:66" pos:end="591:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="593:21" pos:end="595:76">else<block type="pseudo" pos:start="595:25" pos:end="595:76"><block_content pos:start="595:25" pos:end="595:76">

                        <expr_stmt pos:start="595:25" pos:end="595:76"><expr pos:start="595:25" pos:end="595:75"><call pos:start="595:25" pos:end="595:75"><name pos:start="595:25" pos:end="595:39">tcg_gen_sub_i64</name><argument_list pos:start="595:40" pos:end="595:75">(<argument pos:start="595:41" pos:end="595:50"><expr pos:start="595:41" pos:end="595:50"><name pos:start="595:41" pos:end="595:50"><name pos:start="595:41" pos:end="595:46">cpu_ir</name><index pos:start="595:47" pos:end="595:50">[<expr pos:start="595:48" pos:end="595:49"><name pos:start="595:48" pos:end="595:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="595:53" pos:end="595:62"><expr pos:start="595:53" pos:end="595:62"><name pos:start="595:53" pos:end="595:62"><name pos:start="595:53" pos:end="595:58">cpu_ir</name><index pos:start="595:59" pos:end="595:62">[<expr pos:start="595:60" pos:end="595:61"><name pos:start="595:60" pos:end="595:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="595:65" pos:end="595:74"><expr pos:start="595:65" pos:end="595:74"><name pos:start="595:65" pos:end="595:74"><name pos:start="595:65" pos:end="595:70">cpu_ir</name><index pos:start="595:71" pos:end="595:74">[<expr pos:start="595:72" pos:end="595:73"><name pos:start="595:72" pos:end="595:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="597:19" pos:end="607:17">else <block pos:start="597:24" pos:end="607:17">{<block_content pos:start="599:21" pos:end="605:64">

                    <if_stmt pos:start="599:21" pos:end="605:64"><if pos:start="599:21" pos:end="601:59">if <condition pos:start="599:24" pos:end="599:30">(<expr pos:start="599:25" pos:end="599:29"><name pos:start="599:25" pos:end="599:29">islit</name></expr>)</condition><block type="pseudo" pos:start="601:25" pos:end="601:59"><block_content pos:start="601:25" pos:end="601:59">

                        <expr_stmt pos:start="601:25" pos:end="601:59"><expr pos:start="601:25" pos:end="601:58"><call pos:start="601:25" pos:end="601:58"><name pos:start="601:25" pos:end="601:40">tcg_gen_movi_i64</name><argument_list pos:start="601:41" pos:end="601:58">(<argument pos:start="601:42" pos:end="601:51"><expr pos:start="601:42" pos:end="601:51"><name pos:start="601:42" pos:end="601:51"><name pos:start="601:42" pos:end="601:47">cpu_ir</name><index pos:start="601:48" pos:end="601:51">[<expr pos:start="601:49" pos:end="601:50"><name pos:start="601:49" pos:end="601:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="601:54" pos:end="601:57"><expr pos:start="601:54" pos:end="601:57"><operator pos:start="601:54" pos:end="601:54">-</operator><name pos:start="601:55" pos:end="601:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="603:21" pos:end="605:64">else<block type="pseudo" pos:start="605:25" pos:end="605:64"><block_content pos:start="605:25" pos:end="605:64">

                        <expr_stmt pos:start="605:25" pos:end="605:64"><expr pos:start="605:25" pos:end="605:63"><call pos:start="605:25" pos:end="605:63"><name pos:start="605:25" pos:end="605:39">tcg_gen_neg_i64</name><argument_list pos:start="605:40" pos:end="605:63">(<argument pos:start="605:41" pos:end="605:50"><expr pos:start="605:41" pos:end="605:50"><name pos:start="605:41" pos:end="605:50"><name pos:start="605:41" pos:end="605:46">cpu_ir</name><index pos:start="605:47" pos:end="605:50">[<expr pos:start="605:48" pos:end="605:49"><name pos:start="605:48" pos:end="605:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="605:53" pos:end="605:62"><expr pos:start="605:53" pos:end="605:62"><name pos:start="605:53" pos:end="605:62"><name pos:start="605:53" pos:end="605:58">cpu_ir</name><index pos:start="605:59" pos:end="605:62">[<expr pos:start="605:60" pos:end="605:61"><name pos:start="605:60" pos:end="605:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="611:13" pos:end="611:18">break;</break>

        <case pos:start="613:9" pos:end="613:18">case <expr pos:start="613:14" pos:end="613:17"><literal type="number" pos:start="613:14" pos:end="613:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="615:13" pos:end="615:24">/* S4SUBQ */</comment>

            <if_stmt pos:start="617:13" pos:end="647:13"><if pos:start="617:13" pos:end="647:13">if <condition pos:start="617:16" pos:end="617:33">(<expr pos:start="617:17" pos:end="617:32"><call pos:start="617:17" pos:end="617:32"><name pos:start="617:17" pos:end="617:22">likely</name><argument_list pos:start="617:23" pos:end="617:32">(<argument pos:start="617:24" pos:end="617:31"><expr pos:start="617:24" pos:end="617:31"><name pos:start="617:24" pos:end="617:25">rc</name> <operator pos:start="617:27" pos:end="617:28">!=</operator> <literal type="number" pos:start="617:30" pos:end="617:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="617:35" pos:end="647:13">{<block_content pos:start="619:17" pos:end="645:17">

                <if_stmt pos:start="619:17" pos:end="645:17"><if pos:start="619:17" pos:end="635:17">if <condition pos:start="619:20" pos:end="619:29">(<expr pos:start="619:21" pos:end="619:28"><name pos:start="619:21" pos:end="619:22">ra</name> <operator pos:start="619:24" pos:end="619:25">!=</operator> <literal type="number" pos:start="619:27" pos:end="619:28">31</literal></expr>)</condition> <block pos:start="619:31" pos:end="635:17">{<block_content pos:start="621:21" pos:end="633:39">

                    <decl_stmt pos:start="621:21" pos:end="621:58"><decl pos:start="621:21" pos:end="621:57"><type pos:start="621:21" pos:end="621:24"><name pos:start="621:21" pos:end="621:24">TCGv</name></type> <name pos:start="621:26" pos:end="621:28">tmp</name> <init pos:start="621:30" pos:end="621:57">= <expr pos:start="621:32" pos:end="621:57"><call pos:start="621:32" pos:end="621:57"><name pos:start="621:32" pos:end="621:43">tcg_temp_new</name><argument_list pos:start="621:44" pos:end="621:57">(<argument pos:start="621:45" pos:end="621:56"><expr pos:start="621:45" pos:end="621:56"><name pos:start="621:45" pos:end="621:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="623:21" pos:end="623:57"><expr pos:start="623:21" pos:end="623:56"><call pos:start="623:21" pos:end="623:56"><name pos:start="623:21" pos:end="623:36">tcg_gen_shli_i64</name><argument_list pos:start="623:37" pos:end="623:56">(<argument pos:start="623:38" pos:end="623:40"><expr pos:start="623:38" pos:end="623:40"><name pos:start="623:38" pos:end="623:40">tmp</name></expr></argument>, <argument pos:start="623:43" pos:end="623:52"><expr pos:start="623:43" pos:end="623:52"><name pos:start="623:43" pos:end="623:52"><name pos:start="623:43" pos:end="623:48">cpu_ir</name><index pos:start="623:49" pos:end="623:52">[<expr pos:start="623:50" pos:end="623:51"><name pos:start="623:50" pos:end="623:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="623:55" pos:end="623:55"><expr pos:start="623:55" pos:end="623:55"><literal type="number" pos:start="623:55" pos:end="623:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="625:21" pos:end="631:69"><if pos:start="625:21" pos:end="627:63">if <condition pos:start="625:24" pos:end="625:30">(<expr pos:start="625:25" pos:end="625:29"><name pos:start="625:25" pos:end="625:29">islit</name></expr>)</condition><block type="pseudo" pos:start="627:25" pos:end="627:63"><block_content pos:start="627:25" pos:end="627:63">

                        <expr_stmt pos:start="627:25" pos:end="627:63"><expr pos:start="627:25" pos:end="627:62"><call pos:start="627:25" pos:end="627:62"><name pos:start="627:25" pos:end="627:40">tcg_gen_subi_i64</name><argument_list pos:start="627:41" pos:end="627:62">(<argument pos:start="627:42" pos:end="627:51"><expr pos:start="627:42" pos:end="627:51"><name pos:start="627:42" pos:end="627:51"><name pos:start="627:42" pos:end="627:47">cpu_ir</name><index pos:start="627:48" pos:end="627:51">[<expr pos:start="627:49" pos:end="627:50"><name pos:start="627:49" pos:end="627:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="627:54" pos:end="627:56"><expr pos:start="627:54" pos:end="627:56"><name pos:start="627:54" pos:end="627:56">tmp</name></expr></argument>, <argument pos:start="627:59" pos:end="627:61"><expr pos:start="627:59" pos:end="627:61"><name pos:start="627:59" pos:end="627:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="629:21" pos:end="631:69">else<block type="pseudo" pos:start="631:25" pos:end="631:69"><block_content pos:start="631:25" pos:end="631:69">

                        <expr_stmt pos:start="631:25" pos:end="631:69"><expr pos:start="631:25" pos:end="631:68"><call pos:start="631:25" pos:end="631:68"><name pos:start="631:25" pos:end="631:39">tcg_gen_sub_i64</name><argument_list pos:start="631:40" pos:end="631:68">(<argument pos:start="631:41" pos:end="631:50"><expr pos:start="631:41" pos:end="631:50"><name pos:start="631:41" pos:end="631:50"><name pos:start="631:41" pos:end="631:46">cpu_ir</name><index pos:start="631:47" pos:end="631:50">[<expr pos:start="631:48" pos:end="631:49"><name pos:start="631:48" pos:end="631:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="631:53" pos:end="631:55"><expr pos:start="631:53" pos:end="631:55"><name pos:start="631:53" pos:end="631:55">tmp</name></expr></argument>, <argument pos:start="631:58" pos:end="631:67"><expr pos:start="631:58" pos:end="631:67"><name pos:start="631:58" pos:end="631:67"><name pos:start="631:58" pos:end="631:63">cpu_ir</name><index pos:start="631:64" pos:end="631:67">[<expr pos:start="631:65" pos:end="631:66"><name pos:start="631:65" pos:end="631:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="633:21" pos:end="633:39"><expr pos:start="633:21" pos:end="633:38"><call pos:start="633:21" pos:end="633:38"><name pos:start="633:21" pos:end="633:33">tcg_temp_free</name><argument_list pos:start="633:34" pos:end="633:38">(<argument pos:start="633:35" pos:end="633:37"><expr pos:start="633:35" pos:end="633:37"><name pos:start="633:35" pos:end="633:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="635:19" pos:end="645:17">else <block pos:start="635:24" pos:end="645:17">{<block_content pos:start="637:21" pos:end="643:64">

                    <if_stmt pos:start="637:21" pos:end="643:64"><if pos:start="637:21" pos:end="639:59">if <condition pos:start="637:24" pos:end="637:30">(<expr pos:start="637:25" pos:end="637:29"><name pos:start="637:25" pos:end="637:29">islit</name></expr>)</condition><block type="pseudo" pos:start="639:25" pos:end="639:59"><block_content pos:start="639:25" pos:end="639:59">

                        <expr_stmt pos:start="639:25" pos:end="639:59"><expr pos:start="639:25" pos:end="639:58"><call pos:start="639:25" pos:end="639:58"><name pos:start="639:25" pos:end="639:40">tcg_gen_movi_i64</name><argument_list pos:start="639:41" pos:end="639:58">(<argument pos:start="639:42" pos:end="639:51"><expr pos:start="639:42" pos:end="639:51"><name pos:start="639:42" pos:end="639:51"><name pos:start="639:42" pos:end="639:47">cpu_ir</name><index pos:start="639:48" pos:end="639:51">[<expr pos:start="639:49" pos:end="639:50"><name pos:start="639:49" pos:end="639:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="639:54" pos:end="639:57"><expr pos:start="639:54" pos:end="639:57"><operator pos:start="639:54" pos:end="639:54">-</operator><name pos:start="639:55" pos:end="639:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="641:21" pos:end="643:64">else<block type="pseudo" pos:start="643:25" pos:end="643:64"><block_content pos:start="643:25" pos:end="643:64">

                        <expr_stmt pos:start="643:25" pos:end="643:64"><expr pos:start="643:25" pos:end="643:63"><call pos:start="643:25" pos:end="643:63"><name pos:start="643:25" pos:end="643:39">tcg_gen_neg_i64</name><argument_list pos:start="643:40" pos:end="643:63">(<argument pos:start="643:41" pos:end="643:50"><expr pos:start="643:41" pos:end="643:50"><name pos:start="643:41" pos:end="643:50"><name pos:start="643:41" pos:end="643:46">cpu_ir</name><index pos:start="643:47" pos:end="643:50">[<expr pos:start="643:48" pos:end="643:49"><name pos:start="643:48" pos:end="643:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="643:53" pos:end="643:62"><expr pos:start="643:53" pos:end="643:62"><name pos:start="643:53" pos:end="643:62"><name pos:start="643:53" pos:end="643:58">cpu_ir</name><index pos:start="643:59" pos:end="643:62">[<expr pos:start="643:60" pos:end="643:61"><name pos:start="643:60" pos:end="643:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:18">case <expr pos:start="651:14" pos:end="651:17"><literal type="number" pos:start="651:14" pos:end="651:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="653:13" pos:end="653:23">/* CMPEQ */</comment>

            <expr_stmt pos:start="655:13" pos:end="655:57"><expr pos:start="655:13" pos:end="655:56"><call pos:start="655:13" pos:end="655:56"><name pos:start="655:13" pos:end="655:19">gen_cmp</name><argument_list pos:start="655:20" pos:end="655:56">(<argument pos:start="655:21" pos:end="655:31"><expr pos:start="655:21" pos:end="655:31"><name pos:start="655:21" pos:end="655:31">TCG_COND_EQ</name></expr></argument>, <argument pos:start="655:34" pos:end="655:35"><expr pos:start="655:34" pos:end="655:35"><name pos:start="655:34" pos:end="655:35">ra</name></expr></argument>, <argument pos:start="655:38" pos:end="655:39"><expr pos:start="655:38" pos:end="655:39"><name pos:start="655:38" pos:end="655:39">rb</name></expr></argument>, <argument pos:start="655:42" pos:end="655:43"><expr pos:start="655:42" pos:end="655:43"><name pos:start="655:42" pos:end="655:43">rc</name></expr></argument>, <argument pos:start="655:46" pos:end="655:50"><expr pos:start="655:46" pos:end="655:50"><name pos:start="655:46" pos:end="655:50">islit</name></expr></argument>, <argument pos:start="655:53" pos:end="655:55"><expr pos:start="655:53" pos:end="655:55"><name pos:start="655:53" pos:end="655:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="657:13" pos:end="657:18">break;</break>

        <case pos:start="659:9" pos:end="659:18">case <expr pos:start="659:14" pos:end="659:17"><literal type="number" pos:start="659:14" pos:end="659:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="661:13" pos:end="661:24">/* S8ADDQ */</comment>

            <if_stmt pos:start="663:13" pos:end="693:13"><if pos:start="663:13" pos:end="693:13">if <condition pos:start="663:16" pos:end="663:33">(<expr pos:start="663:17" pos:end="663:32"><call pos:start="663:17" pos:end="663:32"><name pos:start="663:17" pos:end="663:22">likely</name><argument_list pos:start="663:23" pos:end="663:32">(<argument pos:start="663:24" pos:end="663:31"><expr pos:start="663:24" pos:end="663:31"><name pos:start="663:24" pos:end="663:25">rc</name> <operator pos:start="663:27" pos:end="663:28">!=</operator> <literal type="number" pos:start="663:30" pos:end="663:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="663:35" pos:end="693:13">{<block_content pos:start="665:17" pos:end="691:17">

                <if_stmt pos:start="665:17" pos:end="691:17"><if pos:start="665:17" pos:end="681:17">if <condition pos:start="665:20" pos:end="665:29">(<expr pos:start="665:21" pos:end="665:28"><name pos:start="665:21" pos:end="665:22">ra</name> <operator pos:start="665:24" pos:end="665:25">!=</operator> <literal type="number" pos:start="665:27" pos:end="665:28">31</literal></expr>)</condition> <block pos:start="665:31" pos:end="681:17">{<block_content pos:start="667:21" pos:end="679:39">

                    <decl_stmt pos:start="667:21" pos:end="667:58"><decl pos:start="667:21" pos:end="667:57"><type pos:start="667:21" pos:end="667:24"><name pos:start="667:21" pos:end="667:24">TCGv</name></type> <name pos:start="667:26" pos:end="667:28">tmp</name> <init pos:start="667:30" pos:end="667:57">= <expr pos:start="667:32" pos:end="667:57"><call pos:start="667:32" pos:end="667:57"><name pos:start="667:32" pos:end="667:43">tcg_temp_new</name><argument_list pos:start="667:44" pos:end="667:57">(<argument pos:start="667:45" pos:end="667:56"><expr pos:start="667:45" pos:end="667:56"><name pos:start="667:45" pos:end="667:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="669:21" pos:end="669:57"><expr pos:start="669:21" pos:end="669:56"><call pos:start="669:21" pos:end="669:56"><name pos:start="669:21" pos:end="669:36">tcg_gen_shli_i64</name><argument_list pos:start="669:37" pos:end="669:56">(<argument pos:start="669:38" pos:end="669:40"><expr pos:start="669:38" pos:end="669:40"><name pos:start="669:38" pos:end="669:40">tmp</name></expr></argument>, <argument pos:start="669:43" pos:end="669:52"><expr pos:start="669:43" pos:end="669:52"><name pos:start="669:43" pos:end="669:52"><name pos:start="669:43" pos:end="669:48">cpu_ir</name><index pos:start="669:49" pos:end="669:52">[<expr pos:start="669:50" pos:end="669:51"><name pos:start="669:50" pos:end="669:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="669:55" pos:end="669:55"><expr pos:start="669:55" pos:end="669:55"><literal type="number" pos:start="669:55" pos:end="669:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="671:21" pos:end="677:69"><if pos:start="671:21" pos:end="673:63">if <condition pos:start="671:24" pos:end="671:30">(<expr pos:start="671:25" pos:end="671:29"><name pos:start="671:25" pos:end="671:29">islit</name></expr>)</condition><block type="pseudo" pos:start="673:25" pos:end="673:63"><block_content pos:start="673:25" pos:end="673:63">

                        <expr_stmt pos:start="673:25" pos:end="673:63"><expr pos:start="673:25" pos:end="673:62"><call pos:start="673:25" pos:end="673:62"><name pos:start="673:25" pos:end="673:40">tcg_gen_addi_i64</name><argument_list pos:start="673:41" pos:end="673:62">(<argument pos:start="673:42" pos:end="673:51"><expr pos:start="673:42" pos:end="673:51"><name pos:start="673:42" pos:end="673:51"><name pos:start="673:42" pos:end="673:47">cpu_ir</name><index pos:start="673:48" pos:end="673:51">[<expr pos:start="673:49" pos:end="673:50"><name pos:start="673:49" pos:end="673:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="673:54" pos:end="673:56"><expr pos:start="673:54" pos:end="673:56"><name pos:start="673:54" pos:end="673:56">tmp</name></expr></argument>, <argument pos:start="673:59" pos:end="673:61"><expr pos:start="673:59" pos:end="673:61"><name pos:start="673:59" pos:end="673:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="675:21" pos:end="677:69">else<block type="pseudo" pos:start="677:25" pos:end="677:69"><block_content pos:start="677:25" pos:end="677:69">

                        <expr_stmt pos:start="677:25" pos:end="677:69"><expr pos:start="677:25" pos:end="677:68"><call pos:start="677:25" pos:end="677:68"><name pos:start="677:25" pos:end="677:39">tcg_gen_add_i64</name><argument_list pos:start="677:40" pos:end="677:68">(<argument pos:start="677:41" pos:end="677:50"><expr pos:start="677:41" pos:end="677:50"><name pos:start="677:41" pos:end="677:50"><name pos:start="677:41" pos:end="677:46">cpu_ir</name><index pos:start="677:47" pos:end="677:50">[<expr pos:start="677:48" pos:end="677:49"><name pos:start="677:48" pos:end="677:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="677:53" pos:end="677:55"><expr pos:start="677:53" pos:end="677:55"><name pos:start="677:53" pos:end="677:55">tmp</name></expr></argument>, <argument pos:start="677:58" pos:end="677:67"><expr pos:start="677:58" pos:end="677:67"><name pos:start="677:58" pos:end="677:67"><name pos:start="677:58" pos:end="677:63">cpu_ir</name><index pos:start="677:64" pos:end="677:67">[<expr pos:start="677:65" pos:end="677:66"><name pos:start="677:65" pos:end="677:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="679:21" pos:end="679:39"><expr pos:start="679:21" pos:end="679:38"><call pos:start="679:21" pos:end="679:38"><name pos:start="679:21" pos:end="679:33">tcg_temp_free</name><argument_list pos:start="679:34" pos:end="679:38">(<argument pos:start="679:35" pos:end="679:37"><expr pos:start="679:35" pos:end="679:37"><name pos:start="679:35" pos:end="679:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="681:19" pos:end="691:17">else <block pos:start="681:24" pos:end="691:17">{<block_content pos:start="683:21" pos:end="689:64">

                    <if_stmt pos:start="683:21" pos:end="689:64"><if pos:start="683:21" pos:end="685:58">if <condition pos:start="683:24" pos:end="683:30">(<expr pos:start="683:25" pos:end="683:29"><name pos:start="683:25" pos:end="683:29">islit</name></expr>)</condition><block type="pseudo" pos:start="685:25" pos:end="685:58"><block_content pos:start="685:25" pos:end="685:58">

                        <expr_stmt pos:start="685:25" pos:end="685:58"><expr pos:start="685:25" pos:end="685:57"><call pos:start="685:25" pos:end="685:57"><name pos:start="685:25" pos:end="685:40">tcg_gen_movi_i64</name><argument_list pos:start="685:41" pos:end="685:57">(<argument pos:start="685:42" pos:end="685:51"><expr pos:start="685:42" pos:end="685:51"><name pos:start="685:42" pos:end="685:51"><name pos:start="685:42" pos:end="685:47">cpu_ir</name><index pos:start="685:48" pos:end="685:51">[<expr pos:start="685:49" pos:end="685:50"><name pos:start="685:49" pos:end="685:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="685:54" pos:end="685:56"><expr pos:start="685:54" pos:end="685:56"><name pos:start="685:54" pos:end="685:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="687:21" pos:end="689:64">else<block type="pseudo" pos:start="689:25" pos:end="689:64"><block_content pos:start="689:25" pos:end="689:64">

                        <expr_stmt pos:start="689:25" pos:end="689:64"><expr pos:start="689:25" pos:end="689:63"><call pos:start="689:25" pos:end="689:63"><name pos:start="689:25" pos:end="689:39">tcg_gen_mov_i64</name><argument_list pos:start="689:40" pos:end="689:63">(<argument pos:start="689:41" pos:end="689:50"><expr pos:start="689:41" pos:end="689:50"><name pos:start="689:41" pos:end="689:50"><name pos:start="689:41" pos:end="689:46">cpu_ir</name><index pos:start="689:47" pos:end="689:50">[<expr pos:start="689:48" pos:end="689:49"><name pos:start="689:48" pos:end="689:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="689:53" pos:end="689:62"><expr pos:start="689:53" pos:end="689:62"><name pos:start="689:53" pos:end="689:62"><name pos:start="689:53" pos:end="689:58">cpu_ir</name><index pos:start="689:59" pos:end="689:62">[<expr pos:start="689:60" pos:end="689:61"><name pos:start="689:60" pos:end="689:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="695:13" pos:end="695:18">break;</break>

        <case pos:start="697:9" pos:end="697:18">case <expr pos:start="697:14" pos:end="697:17"><literal type="number" pos:start="697:14" pos:end="697:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="699:13" pos:end="699:24">/* S8SUBQ */</comment>

            <if_stmt pos:start="701:13" pos:end="731:13"><if pos:start="701:13" pos:end="731:13">if <condition pos:start="701:16" pos:end="701:33">(<expr pos:start="701:17" pos:end="701:32"><call pos:start="701:17" pos:end="701:32"><name pos:start="701:17" pos:end="701:22">likely</name><argument_list pos:start="701:23" pos:end="701:32">(<argument pos:start="701:24" pos:end="701:31"><expr pos:start="701:24" pos:end="701:31"><name pos:start="701:24" pos:end="701:25">rc</name> <operator pos:start="701:27" pos:end="701:28">!=</operator> <literal type="number" pos:start="701:30" pos:end="701:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="701:35" pos:end="731:13">{<block_content pos:start="703:17" pos:end="729:17">

                <if_stmt pos:start="703:17" pos:end="729:17"><if pos:start="703:17" pos:end="719:17">if <condition pos:start="703:20" pos:end="703:29">(<expr pos:start="703:21" pos:end="703:28"><name pos:start="703:21" pos:end="703:22">ra</name> <operator pos:start="703:24" pos:end="703:25">!=</operator> <literal type="number" pos:start="703:27" pos:end="703:28">31</literal></expr>)</condition> <block pos:start="703:31" pos:end="719:17">{<block_content pos:start="705:21" pos:end="717:39">

                    <decl_stmt pos:start="705:21" pos:end="705:58"><decl pos:start="705:21" pos:end="705:57"><type pos:start="705:21" pos:end="705:24"><name pos:start="705:21" pos:end="705:24">TCGv</name></type> <name pos:start="705:26" pos:end="705:28">tmp</name> <init pos:start="705:30" pos:end="705:57">= <expr pos:start="705:32" pos:end="705:57"><call pos:start="705:32" pos:end="705:57"><name pos:start="705:32" pos:end="705:43">tcg_temp_new</name><argument_list pos:start="705:44" pos:end="705:57">(<argument pos:start="705:45" pos:end="705:56"><expr pos:start="705:45" pos:end="705:56"><name pos:start="705:45" pos:end="705:56">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="707:21" pos:end="707:57"><expr pos:start="707:21" pos:end="707:56"><call pos:start="707:21" pos:end="707:56"><name pos:start="707:21" pos:end="707:36">tcg_gen_shli_i64</name><argument_list pos:start="707:37" pos:end="707:56">(<argument pos:start="707:38" pos:end="707:40"><expr pos:start="707:38" pos:end="707:40"><name pos:start="707:38" pos:end="707:40">tmp</name></expr></argument>, <argument pos:start="707:43" pos:end="707:52"><expr pos:start="707:43" pos:end="707:52"><name pos:start="707:43" pos:end="707:52"><name pos:start="707:43" pos:end="707:48">cpu_ir</name><index pos:start="707:49" pos:end="707:52">[<expr pos:start="707:50" pos:end="707:51"><name pos:start="707:50" pos:end="707:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="707:55" pos:end="707:55"><expr pos:start="707:55" pos:end="707:55"><literal type="number" pos:start="707:55" pos:end="707:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="709:21" pos:end="715:69"><if pos:start="709:21" pos:end="711:63">if <condition pos:start="709:24" pos:end="709:30">(<expr pos:start="709:25" pos:end="709:29"><name pos:start="709:25" pos:end="709:29">islit</name></expr>)</condition><block type="pseudo" pos:start="711:25" pos:end="711:63"><block_content pos:start="711:25" pos:end="711:63">

                        <expr_stmt pos:start="711:25" pos:end="711:63"><expr pos:start="711:25" pos:end="711:62"><call pos:start="711:25" pos:end="711:62"><name pos:start="711:25" pos:end="711:40">tcg_gen_subi_i64</name><argument_list pos:start="711:41" pos:end="711:62">(<argument pos:start="711:42" pos:end="711:51"><expr pos:start="711:42" pos:end="711:51"><name pos:start="711:42" pos:end="711:51"><name pos:start="711:42" pos:end="711:47">cpu_ir</name><index pos:start="711:48" pos:end="711:51">[<expr pos:start="711:49" pos:end="711:50"><name pos:start="711:49" pos:end="711:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="711:54" pos:end="711:56"><expr pos:start="711:54" pos:end="711:56"><name pos:start="711:54" pos:end="711:56">tmp</name></expr></argument>, <argument pos:start="711:59" pos:end="711:61"><expr pos:start="711:59" pos:end="711:61"><name pos:start="711:59" pos:end="711:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="713:21" pos:end="715:69">else<block type="pseudo" pos:start="715:25" pos:end="715:69"><block_content pos:start="715:25" pos:end="715:69">

                        <expr_stmt pos:start="715:25" pos:end="715:69"><expr pos:start="715:25" pos:end="715:68"><call pos:start="715:25" pos:end="715:68"><name pos:start="715:25" pos:end="715:39">tcg_gen_sub_i64</name><argument_list pos:start="715:40" pos:end="715:68">(<argument pos:start="715:41" pos:end="715:50"><expr pos:start="715:41" pos:end="715:50"><name pos:start="715:41" pos:end="715:50"><name pos:start="715:41" pos:end="715:46">cpu_ir</name><index pos:start="715:47" pos:end="715:50">[<expr pos:start="715:48" pos:end="715:49"><name pos:start="715:48" pos:end="715:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="715:53" pos:end="715:55"><expr pos:start="715:53" pos:end="715:55"><name pos:start="715:53" pos:end="715:55">tmp</name></expr></argument>, <argument pos:start="715:58" pos:end="715:67"><expr pos:start="715:58" pos:end="715:67"><name pos:start="715:58" pos:end="715:67"><name pos:start="715:58" pos:end="715:63">cpu_ir</name><index pos:start="715:64" pos:end="715:67">[<expr pos:start="715:65" pos:end="715:66"><name pos:start="715:65" pos:end="715:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="717:21" pos:end="717:39"><expr pos:start="717:21" pos:end="717:38"><call pos:start="717:21" pos:end="717:38"><name pos:start="717:21" pos:end="717:33">tcg_temp_free</name><argument_list pos:start="717:34" pos:end="717:38">(<argument pos:start="717:35" pos:end="717:37"><expr pos:start="717:35" pos:end="717:37"><name pos:start="717:35" pos:end="717:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="719:19" pos:end="729:17">else <block pos:start="719:24" pos:end="729:17">{<block_content pos:start="721:21" pos:end="727:64">

                    <if_stmt pos:start="721:21" pos:end="727:64"><if pos:start="721:21" pos:end="723:59">if <condition pos:start="721:24" pos:end="721:30">(<expr pos:start="721:25" pos:end="721:29"><name pos:start="721:25" pos:end="721:29">islit</name></expr>)</condition><block type="pseudo" pos:start="723:25" pos:end="723:59"><block_content pos:start="723:25" pos:end="723:59">

                        <expr_stmt pos:start="723:25" pos:end="723:59"><expr pos:start="723:25" pos:end="723:58"><call pos:start="723:25" pos:end="723:58"><name pos:start="723:25" pos:end="723:40">tcg_gen_movi_i64</name><argument_list pos:start="723:41" pos:end="723:58">(<argument pos:start="723:42" pos:end="723:51"><expr pos:start="723:42" pos:end="723:51"><name pos:start="723:42" pos:end="723:51"><name pos:start="723:42" pos:end="723:47">cpu_ir</name><index pos:start="723:48" pos:end="723:51">[<expr pos:start="723:49" pos:end="723:50"><name pos:start="723:49" pos:end="723:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="723:54" pos:end="723:57"><expr pos:start="723:54" pos:end="723:57"><operator pos:start="723:54" pos:end="723:54">-</operator><name pos:start="723:55" pos:end="723:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="725:21" pos:end="727:64">else<block type="pseudo" pos:start="727:25" pos:end="727:64"><block_content pos:start="727:25" pos:end="727:64">

                        <expr_stmt pos:start="727:25" pos:end="727:64"><expr pos:start="727:25" pos:end="727:63"><call pos:start="727:25" pos:end="727:63"><name pos:start="727:25" pos:end="727:39">tcg_gen_neg_i64</name><argument_list pos:start="727:40" pos:end="727:63">(<argument pos:start="727:41" pos:end="727:50"><expr pos:start="727:41" pos:end="727:50"><name pos:start="727:41" pos:end="727:50"><name pos:start="727:41" pos:end="727:46">cpu_ir</name><index pos:start="727:47" pos:end="727:50">[<expr pos:start="727:48" pos:end="727:49"><name pos:start="727:48" pos:end="727:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="727:53" pos:end="727:62"><expr pos:start="727:53" pos:end="727:62"><name pos:start="727:53" pos:end="727:62"><name pos:start="727:53" pos:end="727:58">cpu_ir</name><index pos:start="727:59" pos:end="727:62">[<expr pos:start="727:60" pos:end="727:61"><name pos:start="727:60" pos:end="727:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="733:13" pos:end="733:18">break;</break>

        <case pos:start="735:9" pos:end="735:18">case <expr pos:start="735:14" pos:end="735:17"><literal type="number" pos:start="735:14" pos:end="735:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="737:13" pos:end="737:24">/* CMPULE */</comment>

            <expr_stmt pos:start="739:13" pos:end="739:58"><expr pos:start="739:13" pos:end="739:57"><call pos:start="739:13" pos:end="739:57"><name pos:start="739:13" pos:end="739:19">gen_cmp</name><argument_list pos:start="739:20" pos:end="739:57">(<argument pos:start="739:21" pos:end="739:32"><expr pos:start="739:21" pos:end="739:32"><name pos:start="739:21" pos:end="739:32">TCG_COND_LEU</name></expr></argument>, <argument pos:start="739:35" pos:end="739:36"><expr pos:start="739:35" pos:end="739:36"><name pos:start="739:35" pos:end="739:36">ra</name></expr></argument>, <argument pos:start="739:39" pos:end="739:40"><expr pos:start="739:39" pos:end="739:40"><name pos:start="739:39" pos:end="739:40">rb</name></expr></argument>, <argument pos:start="739:43" pos:end="739:44"><expr pos:start="739:43" pos:end="739:44"><name pos:start="739:43" pos:end="739:44">rc</name></expr></argument>, <argument pos:start="739:47" pos:end="739:51"><expr pos:start="739:47" pos:end="739:51"><name pos:start="739:47" pos:end="739:51">islit</name></expr></argument>, <argument pos:start="739:54" pos:end="739:56"><expr pos:start="739:54" pos:end="739:56"><name pos:start="739:54" pos:end="739:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        <case pos:start="743:9" pos:end="743:18">case <expr pos:start="743:14" pos:end="743:17"><literal type="number" pos:start="743:14" pos:end="743:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="745:13" pos:end="745:24">/* ADDL/V */</comment>

            <expr_stmt pos:start="747:13" pos:end="747:61"><expr pos:start="747:13" pos:end="747:60"><call pos:start="747:13" pos:end="747:60"><name pos:start="747:13" pos:end="747:22">gen_arith3</name><argument_list pos:start="747:23" pos:end="747:60">(<argument pos:start="747:24" pos:end="747:35"><expr pos:start="747:24" pos:end="747:35"><name pos:start="747:24" pos:end="747:35">helper_addlv</name></expr></argument>, <argument pos:start="747:38" pos:end="747:39"><expr pos:start="747:38" pos:end="747:39"><name pos:start="747:38" pos:end="747:39">ra</name></expr></argument>, <argument pos:start="747:42" pos:end="747:43"><expr pos:start="747:42" pos:end="747:43"><name pos:start="747:42" pos:end="747:43">rb</name></expr></argument>, <argument pos:start="747:46" pos:end="747:47"><expr pos:start="747:46" pos:end="747:47"><name pos:start="747:46" pos:end="747:47">rc</name></expr></argument>, <argument pos:start="747:50" pos:end="747:54"><expr pos:start="747:50" pos:end="747:54"><name pos:start="747:50" pos:end="747:54">islit</name></expr></argument>, <argument pos:start="747:57" pos:end="747:59"><expr pos:start="747:57" pos:end="747:59"><name pos:start="747:57" pos:end="747:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="749:13" pos:end="749:18">break;</break>

        <case pos:start="751:9" pos:end="751:18">case <expr pos:start="751:14" pos:end="751:17"><literal type="number" pos:start="751:14" pos:end="751:17">0x49</literal></expr>:</case>

            <comment type="block" pos:start="753:13" pos:end="753:24">/* SUBL/V */</comment>

            <expr_stmt pos:start="755:13" pos:end="755:61"><expr pos:start="755:13" pos:end="755:60"><call pos:start="755:13" pos:end="755:60"><name pos:start="755:13" pos:end="755:22">gen_arith3</name><argument_list pos:start="755:23" pos:end="755:60">(<argument pos:start="755:24" pos:end="755:35"><expr pos:start="755:24" pos:end="755:35"><name pos:start="755:24" pos:end="755:35">helper_sublv</name></expr></argument>, <argument pos:start="755:38" pos:end="755:39"><expr pos:start="755:38" pos:end="755:39"><name pos:start="755:38" pos:end="755:39">ra</name></expr></argument>, <argument pos:start="755:42" pos:end="755:43"><expr pos:start="755:42" pos:end="755:43"><name pos:start="755:42" pos:end="755:43">rb</name></expr></argument>, <argument pos:start="755:46" pos:end="755:47"><expr pos:start="755:46" pos:end="755:47"><name pos:start="755:46" pos:end="755:47">rc</name></expr></argument>, <argument pos:start="755:50" pos:end="755:54"><expr pos:start="755:50" pos:end="755:54"><name pos:start="755:50" pos:end="755:54">islit</name></expr></argument>, <argument pos:start="755:57" pos:end="755:59"><expr pos:start="755:57" pos:end="755:59"><name pos:start="755:57" pos:end="755:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <case pos:start="759:9" pos:end="759:18">case <expr pos:start="759:14" pos:end="759:17"><literal type="number" pos:start="759:14" pos:end="759:17">0x4D</literal></expr>:</case>

            <comment type="block" pos:start="761:13" pos:end="761:23">/* CMPLT */</comment>

            <expr_stmt pos:start="763:13" pos:end="763:57"><expr pos:start="763:13" pos:end="763:56"><call pos:start="763:13" pos:end="763:56"><name pos:start="763:13" pos:end="763:19">gen_cmp</name><argument_list pos:start="763:20" pos:end="763:56">(<argument pos:start="763:21" pos:end="763:31"><expr pos:start="763:21" pos:end="763:31"><name pos:start="763:21" pos:end="763:31">TCG_COND_LT</name></expr></argument>, <argument pos:start="763:34" pos:end="763:35"><expr pos:start="763:34" pos:end="763:35"><name pos:start="763:34" pos:end="763:35">ra</name></expr></argument>, <argument pos:start="763:38" pos:end="763:39"><expr pos:start="763:38" pos:end="763:39"><name pos:start="763:38" pos:end="763:39">rb</name></expr></argument>, <argument pos:start="763:42" pos:end="763:43"><expr pos:start="763:42" pos:end="763:43"><name pos:start="763:42" pos:end="763:43">rc</name></expr></argument>, <argument pos:start="763:46" pos:end="763:50"><expr pos:start="763:46" pos:end="763:50"><name pos:start="763:46" pos:end="763:50">islit</name></expr></argument>, <argument pos:start="763:53" pos:end="763:55"><expr pos:start="763:53" pos:end="763:55"><name pos:start="763:53" pos:end="763:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="765:13" pos:end="765:18">break;</break>

        <case pos:start="767:9" pos:end="767:18">case <expr pos:start="767:14" pos:end="767:17"><literal type="number" pos:start="767:14" pos:end="767:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="769:13" pos:end="769:24">/* ADDQ/V */</comment>

            <expr_stmt pos:start="771:13" pos:end="771:61"><expr pos:start="771:13" pos:end="771:60"><call pos:start="771:13" pos:end="771:60"><name pos:start="771:13" pos:end="771:22">gen_arith3</name><argument_list pos:start="771:23" pos:end="771:60">(<argument pos:start="771:24" pos:end="771:35"><expr pos:start="771:24" pos:end="771:35"><name pos:start="771:24" pos:end="771:35">helper_addqv</name></expr></argument>, <argument pos:start="771:38" pos:end="771:39"><expr pos:start="771:38" pos:end="771:39"><name pos:start="771:38" pos:end="771:39">ra</name></expr></argument>, <argument pos:start="771:42" pos:end="771:43"><expr pos:start="771:42" pos:end="771:43"><name pos:start="771:42" pos:end="771:43">rb</name></expr></argument>, <argument pos:start="771:46" pos:end="771:47"><expr pos:start="771:46" pos:end="771:47"><name pos:start="771:46" pos:end="771:47">rc</name></expr></argument>, <argument pos:start="771:50" pos:end="771:54"><expr pos:start="771:50" pos:end="771:54"><name pos:start="771:50" pos:end="771:54">islit</name></expr></argument>, <argument pos:start="771:57" pos:end="771:59"><expr pos:start="771:57" pos:end="771:59"><name pos:start="771:57" pos:end="771:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="773:13" pos:end="773:18">break;</break>

        <case pos:start="775:9" pos:end="775:18">case <expr pos:start="775:14" pos:end="775:17"><literal type="number" pos:start="775:14" pos:end="775:17">0x69</literal></expr>:</case>

            <comment type="block" pos:start="777:13" pos:end="777:24">/* SUBQ/V */</comment>

            <expr_stmt pos:start="779:13" pos:end="779:61"><expr pos:start="779:13" pos:end="779:60"><call pos:start="779:13" pos:end="779:60"><name pos:start="779:13" pos:end="779:22">gen_arith3</name><argument_list pos:start="779:23" pos:end="779:60">(<argument pos:start="779:24" pos:end="779:35"><expr pos:start="779:24" pos:end="779:35"><name pos:start="779:24" pos:end="779:35">helper_subqv</name></expr></argument>, <argument pos:start="779:38" pos:end="779:39"><expr pos:start="779:38" pos:end="779:39"><name pos:start="779:38" pos:end="779:39">ra</name></expr></argument>, <argument pos:start="779:42" pos:end="779:43"><expr pos:start="779:42" pos:end="779:43"><name pos:start="779:42" pos:end="779:43">rb</name></expr></argument>, <argument pos:start="779:46" pos:end="779:47"><expr pos:start="779:46" pos:end="779:47"><name pos:start="779:46" pos:end="779:47">rc</name></expr></argument>, <argument pos:start="779:50" pos:end="779:54"><expr pos:start="779:50" pos:end="779:54"><name pos:start="779:50" pos:end="779:54">islit</name></expr></argument>, <argument pos:start="779:57" pos:end="779:59"><expr pos:start="779:57" pos:end="779:59"><name pos:start="779:57" pos:end="779:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="781:13" pos:end="781:18">break;</break>

        <case pos:start="783:9" pos:end="783:18">case <expr pos:start="783:14" pos:end="783:17"><literal type="number" pos:start="783:14" pos:end="783:17">0x6D</literal></expr>:</case>

            <comment type="block" pos:start="785:13" pos:end="785:23">/* CMPLE */</comment>

            <expr_stmt pos:start="787:13" pos:end="787:57"><expr pos:start="787:13" pos:end="787:56"><call pos:start="787:13" pos:end="787:56"><name pos:start="787:13" pos:end="787:19">gen_cmp</name><argument_list pos:start="787:20" pos:end="787:56">(<argument pos:start="787:21" pos:end="787:31"><expr pos:start="787:21" pos:end="787:31"><name pos:start="787:21" pos:end="787:31">TCG_COND_LE</name></expr></argument>, <argument pos:start="787:34" pos:end="787:35"><expr pos:start="787:34" pos:end="787:35"><name pos:start="787:34" pos:end="787:35">ra</name></expr></argument>, <argument pos:start="787:38" pos:end="787:39"><expr pos:start="787:38" pos:end="787:39"><name pos:start="787:38" pos:end="787:39">rb</name></expr></argument>, <argument pos:start="787:42" pos:end="787:43"><expr pos:start="787:42" pos:end="787:43"><name pos:start="787:42" pos:end="787:43">rc</name></expr></argument>, <argument pos:start="787:46" pos:end="787:50"><expr pos:start="787:46" pos:end="787:50"><name pos:start="787:46" pos:end="787:50">islit</name></expr></argument>, <argument pos:start="787:53" pos:end="787:55"><expr pos:start="787:53" pos:end="787:55"><name pos:start="787:53" pos:end="787:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="789:13" pos:end="789:18">break;</break>

        <default pos:start="791:9" pos:end="791:16">default:</default>

            <goto pos:start="793:13" pos:end="793:29">goto <name pos:start="793:18" pos:end="793:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="797:9" pos:end="797:14">break;</break>

    <case pos:start="799:5" pos:end="799:14">case <expr pos:start="799:10" pos:end="799:13"><literal type="number" pos:start="799:10" pos:end="799:13">0x11</literal></expr>:</case>

        <switch pos:start="801:9" pos:end="1073:9">switch <condition pos:start="801:16" pos:end="801:20">(<expr pos:start="801:17" pos:end="801:19"><name pos:start="801:17" pos:end="801:19">fn7</name></expr>)</condition> <block pos:start="801:22" pos:end="1073:9">{<block_content pos:start="803:9" pos:end="1071:29">

        <case pos:start="803:9" pos:end="803:18">case <expr pos:start="803:14" pos:end="803:17"><literal type="number" pos:start="803:14" pos:end="803:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="805:13" pos:end="805:21">/* AND */</comment>

            <if_stmt pos:start="807:13" pos:end="821:13"><if pos:start="807:13" pos:end="821:13">if <condition pos:start="807:16" pos:end="807:33">(<expr pos:start="807:17" pos:end="807:32"><call pos:start="807:17" pos:end="807:32"><name pos:start="807:17" pos:end="807:22">likely</name><argument_list pos:start="807:23" pos:end="807:32">(<argument pos:start="807:24" pos:end="807:31"><expr pos:start="807:24" pos:end="807:31"><name pos:start="807:24" pos:end="807:25">rc</name> <operator pos:start="807:27" pos:end="807:28">!=</operator> <literal type="number" pos:start="807:30" pos:end="807:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="807:35" pos:end="821:13">{<block_content pos:start="809:17" pos:end="819:72">

                <if_stmt pos:start="809:17" pos:end="819:72"><if pos:start="809:17" pos:end="811:52">if <condition pos:start="809:20" pos:end="809:29">(<expr pos:start="809:21" pos:end="809:28"><name pos:start="809:21" pos:end="809:22">ra</name> <operator pos:start="809:24" pos:end="809:25">==</operator> <literal type="number" pos:start="809:27" pos:end="809:28">31</literal></expr>)</condition><block type="pseudo" pos:start="811:21" pos:end="811:52"><block_content pos:start="811:21" pos:end="811:52">

                    <expr_stmt pos:start="811:21" pos:end="811:52"><expr pos:start="811:21" pos:end="811:51"><call pos:start="811:21" pos:end="811:51"><name pos:start="811:21" pos:end="811:36">tcg_gen_movi_i64</name><argument_list pos:start="811:37" pos:end="811:51">(<argument pos:start="811:38" pos:end="811:47"><expr pos:start="811:38" pos:end="811:47"><name pos:start="811:38" pos:end="811:47"><name pos:start="811:38" pos:end="811:43">cpu_ir</name><index pos:start="811:44" pos:end="811:47">[<expr pos:start="811:45" pos:end="811:46"><name pos:start="811:45" pos:end="811:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="811:50" pos:end="811:50"><expr pos:start="811:50" pos:end="811:50"><literal type="number" pos:start="811:50" pos:end="811:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="813:17" pos:end="815:66">else if <condition pos:start="813:25" pos:end="813:31">(<expr pos:start="813:26" pos:end="813:30"><name pos:start="813:26" pos:end="813:30">islit</name></expr>)</condition><block type="pseudo" pos:start="815:21" pos:end="815:66"><block_content pos:start="815:21" pos:end="815:66">

                    <expr_stmt pos:start="815:21" pos:end="815:66"><expr pos:start="815:21" pos:end="815:65"><call pos:start="815:21" pos:end="815:65"><name pos:start="815:21" pos:end="815:36">tcg_gen_andi_i64</name><argument_list pos:start="815:37" pos:end="815:65">(<argument pos:start="815:38" pos:end="815:47"><expr pos:start="815:38" pos:end="815:47"><name pos:start="815:38" pos:end="815:47"><name pos:start="815:38" pos:end="815:43">cpu_ir</name><index pos:start="815:44" pos:end="815:47">[<expr pos:start="815:45" pos:end="815:46"><name pos:start="815:45" pos:end="815:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="815:50" pos:end="815:59"><expr pos:start="815:50" pos:end="815:59"><name pos:start="815:50" pos:end="815:59"><name pos:start="815:50" pos:end="815:55">cpu_ir</name><index pos:start="815:56" pos:end="815:59">[<expr pos:start="815:57" pos:end="815:58"><name pos:start="815:57" pos:end="815:58">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="815:62" pos:end="815:64"><expr pos:start="815:62" pos:end="815:64"><name pos:start="815:62" pos:end="815:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="817:17" pos:end="819:72">else<block type="pseudo" pos:start="819:21" pos:end="819:72"><block_content pos:start="819:21" pos:end="819:72">

                    <expr_stmt pos:start="819:21" pos:end="819:72"><expr pos:start="819:21" pos:end="819:71"><call pos:start="819:21" pos:end="819:71"><name pos:start="819:21" pos:end="819:35">tcg_gen_and_i64</name><argument_list pos:start="819:36" pos:end="819:71">(<argument pos:start="819:37" pos:end="819:46"><expr pos:start="819:37" pos:end="819:46"><name pos:start="819:37" pos:end="819:46"><name pos:start="819:37" pos:end="819:42">cpu_ir</name><index pos:start="819:43" pos:end="819:46">[<expr pos:start="819:44" pos:end="819:45"><name pos:start="819:44" pos:end="819:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="819:49" pos:end="819:58"><expr pos:start="819:49" pos:end="819:58"><name pos:start="819:49" pos:end="819:58"><name pos:start="819:49" pos:end="819:54">cpu_ir</name><index pos:start="819:55" pos:end="819:58">[<expr pos:start="819:56" pos:end="819:57"><name pos:start="819:56" pos:end="819:57">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="819:61" pos:end="819:70"><expr pos:start="819:61" pos:end="819:70"><name pos:start="819:61" pos:end="819:70"><name pos:start="819:61" pos:end="819:66">cpu_ir</name><index pos:start="819:67" pos:end="819:70">[<expr pos:start="819:68" pos:end="819:69"><name pos:start="819:68" pos:end="819:69">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="823:13" pos:end="823:18">break;</break>

        <case pos:start="825:9" pos:end="825:18">case <expr pos:start="825:14" pos:end="825:17"><literal type="number" pos:start="825:14" pos:end="825:17">0x08</literal></expr>:</case>

            <comment type="block" pos:start="827:13" pos:end="827:21">/* BIC */</comment>

            <if_stmt pos:start="829:13" pos:end="845:13"><if pos:start="829:13" pos:end="845:13">if <condition pos:start="829:16" pos:end="829:33">(<expr pos:start="829:17" pos:end="829:32"><call pos:start="829:17" pos:end="829:32"><name pos:start="829:17" pos:end="829:22">likely</name><argument_list pos:start="829:23" pos:end="829:32">(<argument pos:start="829:24" pos:end="829:31"><expr pos:start="829:24" pos:end="829:31"><name pos:start="829:24" pos:end="829:25">rc</name> <operator pos:start="829:27" pos:end="829:28">!=</operator> <literal type="number" pos:start="829:30" pos:end="829:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="829:35" pos:end="845:13">{<block_content pos:start="831:17" pos:end="843:52">

                <if_stmt pos:start="831:17" pos:end="843:52"><if pos:start="831:17" pos:end="841:17">if <condition pos:start="831:20" pos:end="831:29">(<expr pos:start="831:21" pos:end="831:28"><name pos:start="831:21" pos:end="831:22">ra</name> <operator pos:start="831:24" pos:end="831:25">!=</operator> <literal type="number" pos:start="831:27" pos:end="831:28">31</literal></expr>)</condition> <block pos:start="831:31" pos:end="841:17">{<block_content pos:start="833:21" pos:end="839:77">

                    <if_stmt pos:start="833:21" pos:end="839:77"><if pos:start="833:21" pos:end="835:71">if <condition pos:start="833:24" pos:end="833:30">(<expr pos:start="833:25" pos:end="833:29"><name pos:start="833:25" pos:end="833:29">islit</name></expr>)</condition><block type="pseudo" pos:start="835:25" pos:end="835:71"><block_content pos:start="835:25" pos:end="835:71">

                        <expr_stmt pos:start="835:25" pos:end="835:71"><expr pos:start="835:25" pos:end="835:70"><call pos:start="835:25" pos:end="835:70"><name pos:start="835:25" pos:end="835:40">tcg_gen_andi_i64</name><argument_list pos:start="835:41" pos:end="835:70">(<argument pos:start="835:42" pos:end="835:51"><expr pos:start="835:42" pos:end="835:51"><name pos:start="835:42" pos:end="835:51"><name pos:start="835:42" pos:end="835:47">cpu_ir</name><index pos:start="835:48" pos:end="835:51">[<expr pos:start="835:49" pos:end="835:50"><name pos:start="835:49" pos:end="835:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="835:54" pos:end="835:63"><expr pos:start="835:54" pos:end="835:63"><name pos:start="835:54" pos:end="835:63"><name pos:start="835:54" pos:end="835:59">cpu_ir</name><index pos:start="835:60" pos:end="835:63">[<expr pos:start="835:61" pos:end="835:62"><name pos:start="835:61" pos:end="835:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="835:66" pos:end="835:69"><expr pos:start="835:66" pos:end="835:69"><operator pos:start="835:66" pos:end="835:66">~</operator><name pos:start="835:67" pos:end="835:69">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="837:21" pos:end="839:77">else<block type="pseudo" pos:start="839:25" pos:end="839:77"><block_content pos:start="839:25" pos:end="839:77">

                        <expr_stmt pos:start="839:25" pos:end="839:77"><expr pos:start="839:25" pos:end="839:76"><call pos:start="839:25" pos:end="839:76"><name pos:start="839:25" pos:end="839:40">tcg_gen_andc_i64</name><argument_list pos:start="839:41" pos:end="839:76">(<argument pos:start="839:42" pos:end="839:51"><expr pos:start="839:42" pos:end="839:51"><name pos:start="839:42" pos:end="839:51"><name pos:start="839:42" pos:end="839:47">cpu_ir</name><index pos:start="839:48" pos:end="839:51">[<expr pos:start="839:49" pos:end="839:50"><name pos:start="839:49" pos:end="839:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="839:54" pos:end="839:63"><expr pos:start="839:54" pos:end="839:63"><name pos:start="839:54" pos:end="839:63"><name pos:start="839:54" pos:end="839:59">cpu_ir</name><index pos:start="839:60" pos:end="839:63">[<expr pos:start="839:61" pos:end="839:62"><name pos:start="839:61" pos:end="839:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="839:66" pos:end="839:75"><expr pos:start="839:66" pos:end="839:75"><name pos:start="839:66" pos:end="839:75"><name pos:start="839:66" pos:end="839:71">cpu_ir</name><index pos:start="839:72" pos:end="839:75">[<expr pos:start="839:73" pos:end="839:74"><name pos:start="839:73" pos:end="839:74">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="841:19" pos:end="843:52">else<block type="pseudo" pos:start="843:21" pos:end="843:52"><block_content pos:start="843:21" pos:end="843:52">

                    <expr_stmt pos:start="843:21" pos:end="843:52"><expr pos:start="843:21" pos:end="843:51"><call pos:start="843:21" pos:end="843:51"><name pos:start="843:21" pos:end="843:36">tcg_gen_movi_i64</name><argument_list pos:start="843:37" pos:end="843:51">(<argument pos:start="843:38" pos:end="843:47"><expr pos:start="843:38" pos:end="843:47"><name pos:start="843:38" pos:end="843:47"><name pos:start="843:38" pos:end="843:43">cpu_ir</name><index pos:start="843:44" pos:end="843:47">[<expr pos:start="843:45" pos:end="843:46"><name pos:start="843:45" pos:end="843:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="843:50" pos:end="843:50"><expr pos:start="843:50" pos:end="843:50"><literal type="number" pos:start="843:50" pos:end="843:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="849:18">case <expr pos:start="849:14" pos:end="849:17"><literal type="number" pos:start="849:14" pos:end="849:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="851:13" pos:end="851:25">/* CMOVLBS */</comment>

            <expr_stmt pos:start="853:13" pos:end="853:61"><expr pos:start="853:13" pos:end="853:60"><call pos:start="853:13" pos:end="853:60"><name pos:start="853:13" pos:end="853:20">gen_cmov</name><argument_list pos:start="853:21" pos:end="853:60">(<argument pos:start="853:22" pos:end="853:32"><expr pos:start="853:22" pos:end="853:32"><name pos:start="853:22" pos:end="853:32">TCG_COND_EQ</name></expr></argument>, <argument pos:start="853:35" pos:end="853:36"><expr pos:start="853:35" pos:end="853:36"><name pos:start="853:35" pos:end="853:36">ra</name></expr></argument>, <argument pos:start="853:39" pos:end="853:40"><expr pos:start="853:39" pos:end="853:40"><name pos:start="853:39" pos:end="853:40">rb</name></expr></argument>, <argument pos:start="853:43" pos:end="853:44"><expr pos:start="853:43" pos:end="853:44"><name pos:start="853:43" pos:end="853:44">rc</name></expr></argument>, <argument pos:start="853:47" pos:end="853:51"><expr pos:start="853:47" pos:end="853:51"><name pos:start="853:47" pos:end="853:51">islit</name></expr></argument>, <argument pos:start="853:54" pos:end="853:56"><expr pos:start="853:54" pos:end="853:56"><name pos:start="853:54" pos:end="853:56">lit</name></expr></argument>, <argument pos:start="853:59" pos:end="853:59"><expr pos:start="853:59" pos:end="853:59"><literal type="number" pos:start="853:59" pos:end="853:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="855:13" pos:end="855:18">break;</break>

        <case pos:start="857:9" pos:end="857:18">case <expr pos:start="857:14" pos:end="857:17"><literal type="number" pos:start="857:14" pos:end="857:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="859:13" pos:end="859:25">/* CMOVLBC */</comment>

            <expr_stmt pos:start="861:13" pos:end="861:61"><expr pos:start="861:13" pos:end="861:60"><call pos:start="861:13" pos:end="861:60"><name pos:start="861:13" pos:end="861:20">gen_cmov</name><argument_list pos:start="861:21" pos:end="861:60">(<argument pos:start="861:22" pos:end="861:32"><expr pos:start="861:22" pos:end="861:32"><name pos:start="861:22" pos:end="861:32">TCG_COND_NE</name></expr></argument>, <argument pos:start="861:35" pos:end="861:36"><expr pos:start="861:35" pos:end="861:36"><name pos:start="861:35" pos:end="861:36">ra</name></expr></argument>, <argument pos:start="861:39" pos:end="861:40"><expr pos:start="861:39" pos:end="861:40"><name pos:start="861:39" pos:end="861:40">rb</name></expr></argument>, <argument pos:start="861:43" pos:end="861:44"><expr pos:start="861:43" pos:end="861:44"><name pos:start="861:43" pos:end="861:44">rc</name></expr></argument>, <argument pos:start="861:47" pos:end="861:51"><expr pos:start="861:47" pos:end="861:51"><name pos:start="861:47" pos:end="861:51">islit</name></expr></argument>, <argument pos:start="861:54" pos:end="861:56"><expr pos:start="861:54" pos:end="861:56"><name pos:start="861:54" pos:end="861:56">lit</name></expr></argument>, <argument pos:start="861:59" pos:end="861:59"><expr pos:start="861:59" pos:end="861:59"><literal type="number" pos:start="861:59" pos:end="861:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="863:13" pos:end="863:18">break;</break>

        <case pos:start="865:9" pos:end="865:18">case <expr pos:start="865:14" pos:end="865:17"><literal type="number" pos:start="865:14" pos:end="865:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="867:13" pos:end="867:21">/* BIS */</comment>

            <if_stmt pos:start="869:13" pos:end="893:13"><if pos:start="869:13" pos:end="893:13">if <condition pos:start="869:16" pos:end="869:33">(<expr pos:start="869:17" pos:end="869:32"><call pos:start="869:17" pos:end="869:32"><name pos:start="869:17" pos:end="869:22">likely</name><argument_list pos:start="869:23" pos:end="869:32">(<argument pos:start="869:24" pos:end="869:31"><expr pos:start="869:24" pos:end="869:31"><name pos:start="869:24" pos:end="869:25">rc</name> <operator pos:start="869:27" pos:end="869:28">!=</operator> <literal type="number" pos:start="869:30" pos:end="869:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="869:35" pos:end="893:13">{<block_content pos:start="871:17" pos:end="891:17">

                <if_stmt pos:start="871:17" pos:end="891:17"><if pos:start="871:17" pos:end="881:17">if <condition pos:start="871:20" pos:end="871:29">(<expr pos:start="871:21" pos:end="871:28"><name pos:start="871:21" pos:end="871:22">ra</name> <operator pos:start="871:24" pos:end="871:25">!=</operator> <literal type="number" pos:start="871:27" pos:end="871:28">31</literal></expr>)</condition> <block pos:start="871:31" pos:end="881:17">{<block_content pos:start="873:21" pos:end="879:75">

                    <if_stmt pos:start="873:21" pos:end="879:75"><if pos:start="873:21" pos:end="875:69">if <condition pos:start="873:24" pos:end="873:30">(<expr pos:start="873:25" pos:end="873:29"><name pos:start="873:25" pos:end="873:29">islit</name></expr>)</condition><block type="pseudo" pos:start="875:25" pos:end="875:69"><block_content pos:start="875:25" pos:end="875:69">

                        <expr_stmt pos:start="875:25" pos:end="875:69"><expr pos:start="875:25" pos:end="875:68"><call pos:start="875:25" pos:end="875:68"><name pos:start="875:25" pos:end="875:39">tcg_gen_ori_i64</name><argument_list pos:start="875:40" pos:end="875:68">(<argument pos:start="875:41" pos:end="875:50"><expr pos:start="875:41" pos:end="875:50"><name pos:start="875:41" pos:end="875:50"><name pos:start="875:41" pos:end="875:46">cpu_ir</name><index pos:start="875:47" pos:end="875:50">[<expr pos:start="875:48" pos:end="875:49"><name pos:start="875:48" pos:end="875:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="875:53" pos:end="875:62"><expr pos:start="875:53" pos:end="875:62"><name pos:start="875:53" pos:end="875:62"><name pos:start="875:53" pos:end="875:58">cpu_ir</name><index pos:start="875:59" pos:end="875:62">[<expr pos:start="875:60" pos:end="875:61"><name pos:start="875:60" pos:end="875:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="875:65" pos:end="875:67"><expr pos:start="875:65" pos:end="875:67"><name pos:start="875:65" pos:end="875:67">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="877:21" pos:end="879:75">else<block type="pseudo" pos:start="879:25" pos:end="879:75"><block_content pos:start="879:25" pos:end="879:75">

                        <expr_stmt pos:start="879:25" pos:end="879:75"><expr pos:start="879:25" pos:end="879:74"><call pos:start="879:25" pos:end="879:74"><name pos:start="879:25" pos:end="879:38">tcg_gen_or_i64</name><argument_list pos:start="879:39" pos:end="879:74">(<argument pos:start="879:40" pos:end="879:49"><expr pos:start="879:40" pos:end="879:49"><name pos:start="879:40" pos:end="879:49"><name pos:start="879:40" pos:end="879:45">cpu_ir</name><index pos:start="879:46" pos:end="879:49">[<expr pos:start="879:47" pos:end="879:48"><name pos:start="879:47" pos:end="879:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="879:52" pos:end="879:61"><expr pos:start="879:52" pos:end="879:61"><name pos:start="879:52" pos:end="879:61"><name pos:start="879:52" pos:end="879:57">cpu_ir</name><index pos:start="879:58" pos:end="879:61">[<expr pos:start="879:59" pos:end="879:60"><name pos:start="879:59" pos:end="879:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="879:64" pos:end="879:73"><expr pos:start="879:64" pos:end="879:73"><name pos:start="879:64" pos:end="879:73"><name pos:start="879:64" pos:end="879:69">cpu_ir</name><index pos:start="879:70" pos:end="879:73">[<expr pos:start="879:71" pos:end="879:72"><name pos:start="879:71" pos:end="879:72">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="881:19" pos:end="891:17">else <block pos:start="881:24" pos:end="891:17">{<block_content pos:start="883:21" pos:end="889:64">

                    <if_stmt pos:start="883:21" pos:end="889:64"><if pos:start="883:21" pos:end="885:58">if <condition pos:start="883:24" pos:end="883:30">(<expr pos:start="883:25" pos:end="883:29"><name pos:start="883:25" pos:end="883:29">islit</name></expr>)</condition><block type="pseudo" pos:start="885:25" pos:end="885:58"><block_content pos:start="885:25" pos:end="885:58">

                        <expr_stmt pos:start="885:25" pos:end="885:58"><expr pos:start="885:25" pos:end="885:57"><call pos:start="885:25" pos:end="885:57"><name pos:start="885:25" pos:end="885:40">tcg_gen_movi_i64</name><argument_list pos:start="885:41" pos:end="885:57">(<argument pos:start="885:42" pos:end="885:51"><expr pos:start="885:42" pos:end="885:51"><name pos:start="885:42" pos:end="885:51"><name pos:start="885:42" pos:end="885:47">cpu_ir</name><index pos:start="885:48" pos:end="885:51">[<expr pos:start="885:49" pos:end="885:50"><name pos:start="885:49" pos:end="885:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="885:54" pos:end="885:56"><expr pos:start="885:54" pos:end="885:56"><name pos:start="885:54" pos:end="885:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="887:21" pos:end="889:64">else<block type="pseudo" pos:start="889:25" pos:end="889:64"><block_content pos:start="889:25" pos:end="889:64">

                        <expr_stmt pos:start="889:25" pos:end="889:64"><expr pos:start="889:25" pos:end="889:63"><call pos:start="889:25" pos:end="889:63"><name pos:start="889:25" pos:end="889:39">tcg_gen_mov_i64</name><argument_list pos:start="889:40" pos:end="889:63">(<argument pos:start="889:41" pos:end="889:50"><expr pos:start="889:41" pos:end="889:50"><name pos:start="889:41" pos:end="889:50"><name pos:start="889:41" pos:end="889:46">cpu_ir</name><index pos:start="889:47" pos:end="889:50">[<expr pos:start="889:48" pos:end="889:49"><name pos:start="889:48" pos:end="889:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="889:53" pos:end="889:62"><expr pos:start="889:53" pos:end="889:62"><name pos:start="889:53" pos:end="889:62"><name pos:start="889:53" pos:end="889:58">cpu_ir</name><index pos:start="889:59" pos:end="889:62">[<expr pos:start="889:60" pos:end="889:61"><name pos:start="889:60" pos:end="889:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="895:13" pos:end="895:18">break;</break>

        <case pos:start="897:9" pos:end="897:18">case <expr pos:start="897:14" pos:end="897:17"><literal type="number" pos:start="897:14" pos:end="897:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="899:13" pos:end="899:24">/* CMOVEQ */</comment>

            <expr_stmt pos:start="901:13" pos:end="901:61"><expr pos:start="901:13" pos:end="901:60"><call pos:start="901:13" pos:end="901:60"><name pos:start="901:13" pos:end="901:20">gen_cmov</name><argument_list pos:start="901:21" pos:end="901:60">(<argument pos:start="901:22" pos:end="901:32"><expr pos:start="901:22" pos:end="901:32"><name pos:start="901:22" pos:end="901:32">TCG_COND_NE</name></expr></argument>, <argument pos:start="901:35" pos:end="901:36"><expr pos:start="901:35" pos:end="901:36"><name pos:start="901:35" pos:end="901:36">ra</name></expr></argument>, <argument pos:start="901:39" pos:end="901:40"><expr pos:start="901:39" pos:end="901:40"><name pos:start="901:39" pos:end="901:40">rb</name></expr></argument>, <argument pos:start="901:43" pos:end="901:44"><expr pos:start="901:43" pos:end="901:44"><name pos:start="901:43" pos:end="901:44">rc</name></expr></argument>, <argument pos:start="901:47" pos:end="901:51"><expr pos:start="901:47" pos:end="901:51"><name pos:start="901:47" pos:end="901:51">islit</name></expr></argument>, <argument pos:start="901:54" pos:end="901:56"><expr pos:start="901:54" pos:end="901:56"><name pos:start="901:54" pos:end="901:56">lit</name></expr></argument>, <argument pos:start="901:59" pos:end="901:59"><expr pos:start="901:59" pos:end="901:59"><literal type="number" pos:start="901:59" pos:end="901:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="903:13" pos:end="903:18">break;</break>

        <case pos:start="905:9" pos:end="905:18">case <expr pos:start="905:14" pos:end="905:17"><literal type="number" pos:start="905:14" pos:end="905:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="907:13" pos:end="907:24">/* CMOVNE */</comment>

            <expr_stmt pos:start="909:13" pos:end="909:61"><expr pos:start="909:13" pos:end="909:60"><call pos:start="909:13" pos:end="909:60"><name pos:start="909:13" pos:end="909:20">gen_cmov</name><argument_list pos:start="909:21" pos:end="909:60">(<argument pos:start="909:22" pos:end="909:32"><expr pos:start="909:22" pos:end="909:32"><name pos:start="909:22" pos:end="909:32">TCG_COND_EQ</name></expr></argument>, <argument pos:start="909:35" pos:end="909:36"><expr pos:start="909:35" pos:end="909:36"><name pos:start="909:35" pos:end="909:36">ra</name></expr></argument>, <argument pos:start="909:39" pos:end="909:40"><expr pos:start="909:39" pos:end="909:40"><name pos:start="909:39" pos:end="909:40">rb</name></expr></argument>, <argument pos:start="909:43" pos:end="909:44"><expr pos:start="909:43" pos:end="909:44"><name pos:start="909:43" pos:end="909:44">rc</name></expr></argument>, <argument pos:start="909:47" pos:end="909:51"><expr pos:start="909:47" pos:end="909:51"><name pos:start="909:47" pos:end="909:51">islit</name></expr></argument>, <argument pos:start="909:54" pos:end="909:56"><expr pos:start="909:54" pos:end="909:56"><name pos:start="909:54" pos:end="909:56">lit</name></expr></argument>, <argument pos:start="909:59" pos:end="909:59"><expr pos:start="909:59" pos:end="909:59"><literal type="number" pos:start="909:59" pos:end="909:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="911:13" pos:end="911:18">break;</break>

        <case pos:start="913:9" pos:end="913:18">case <expr pos:start="913:14" pos:end="913:17"><literal type="number" pos:start="913:14" pos:end="913:17">0x28</literal></expr>:</case>

            <comment type="block" pos:start="915:13" pos:end="915:23">/* ORNOT */</comment>

            <if_stmt pos:start="917:13" pos:end="941:13"><if pos:start="917:13" pos:end="941:13">if <condition pos:start="917:16" pos:end="917:33">(<expr pos:start="917:17" pos:end="917:32"><call pos:start="917:17" pos:end="917:32"><name pos:start="917:17" pos:end="917:22">likely</name><argument_list pos:start="917:23" pos:end="917:32">(<argument pos:start="917:24" pos:end="917:31"><expr pos:start="917:24" pos:end="917:31"><name pos:start="917:24" pos:end="917:25">rc</name> <operator pos:start="917:27" pos:end="917:28">!=</operator> <literal type="number" pos:start="917:30" pos:end="917:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="917:35" pos:end="941:13">{<block_content pos:start="919:17" pos:end="939:17">

                <if_stmt pos:start="919:17" pos:end="939:17"><if pos:start="919:17" pos:end="929:17">if <condition pos:start="919:20" pos:end="919:29">(<expr pos:start="919:21" pos:end="919:28"><name pos:start="919:21" pos:end="919:22">ra</name> <operator pos:start="919:24" pos:end="919:25">!=</operator> <literal type="number" pos:start="919:27" pos:end="919:28">31</literal></expr>)</condition> <block pos:start="919:31" pos:end="929:17">{<block_content pos:start="921:21" pos:end="927:76">

                    <if_stmt pos:start="921:21" pos:end="927:76"><if pos:start="921:21" pos:end="923:70">if <condition pos:start="921:24" pos:end="921:30">(<expr pos:start="921:25" pos:end="921:29"><name pos:start="921:25" pos:end="921:29">islit</name></expr>)</condition><block type="pseudo" pos:start="923:25" pos:end="923:70"><block_content pos:start="923:25" pos:end="923:70">

                        <expr_stmt pos:start="923:25" pos:end="923:70"><expr pos:start="923:25" pos:end="923:69"><call pos:start="923:25" pos:end="923:69"><name pos:start="923:25" pos:end="923:39">tcg_gen_ori_i64</name><argument_list pos:start="923:40" pos:end="923:69">(<argument pos:start="923:41" pos:end="923:50"><expr pos:start="923:41" pos:end="923:50"><name pos:start="923:41" pos:end="923:50"><name pos:start="923:41" pos:end="923:46">cpu_ir</name><index pos:start="923:47" pos:end="923:50">[<expr pos:start="923:48" pos:end="923:49"><name pos:start="923:48" pos:end="923:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="923:53" pos:end="923:62"><expr pos:start="923:53" pos:end="923:62"><name pos:start="923:53" pos:end="923:62"><name pos:start="923:53" pos:end="923:58">cpu_ir</name><index pos:start="923:59" pos:end="923:62">[<expr pos:start="923:60" pos:end="923:61"><name pos:start="923:60" pos:end="923:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="923:65" pos:end="923:68"><expr pos:start="923:65" pos:end="923:68"><operator pos:start="923:65" pos:end="923:65">~</operator><name pos:start="923:66" pos:end="923:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="925:21" pos:end="927:76">else<block type="pseudo" pos:start="927:25" pos:end="927:76"><block_content pos:start="927:25" pos:end="927:76">

                        <expr_stmt pos:start="927:25" pos:end="927:76"><expr pos:start="927:25" pos:end="927:75"><call pos:start="927:25" pos:end="927:75"><name pos:start="927:25" pos:end="927:39">tcg_gen_orc_i64</name><argument_list pos:start="927:40" pos:end="927:75">(<argument pos:start="927:41" pos:end="927:50"><expr pos:start="927:41" pos:end="927:50"><name pos:start="927:41" pos:end="927:50"><name pos:start="927:41" pos:end="927:46">cpu_ir</name><index pos:start="927:47" pos:end="927:50">[<expr pos:start="927:48" pos:end="927:49"><name pos:start="927:48" pos:end="927:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="927:53" pos:end="927:62"><expr pos:start="927:53" pos:end="927:62"><name pos:start="927:53" pos:end="927:62"><name pos:start="927:53" pos:end="927:58">cpu_ir</name><index pos:start="927:59" pos:end="927:62">[<expr pos:start="927:60" pos:end="927:61"><name pos:start="927:60" pos:end="927:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="927:65" pos:end="927:74"><expr pos:start="927:65" pos:end="927:74"><name pos:start="927:65" pos:end="927:74"><name pos:start="927:65" pos:end="927:70">cpu_ir</name><index pos:start="927:71" pos:end="927:74">[<expr pos:start="927:72" pos:end="927:73"><name pos:start="927:72" pos:end="927:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="929:19" pos:end="939:17">else <block pos:start="929:24" pos:end="939:17">{<block_content pos:start="931:21" pos:end="937:64">

                    <if_stmt pos:start="931:21" pos:end="937:64"><if pos:start="931:21" pos:end="933:59">if <condition pos:start="931:24" pos:end="931:30">(<expr pos:start="931:25" pos:end="931:29"><name pos:start="931:25" pos:end="931:29">islit</name></expr>)</condition><block type="pseudo" pos:start="933:25" pos:end="933:59"><block_content pos:start="933:25" pos:end="933:59">

                        <expr_stmt pos:start="933:25" pos:end="933:59"><expr pos:start="933:25" pos:end="933:58"><call pos:start="933:25" pos:end="933:58"><name pos:start="933:25" pos:end="933:40">tcg_gen_movi_i64</name><argument_list pos:start="933:41" pos:end="933:58">(<argument pos:start="933:42" pos:end="933:51"><expr pos:start="933:42" pos:end="933:51"><name pos:start="933:42" pos:end="933:51"><name pos:start="933:42" pos:end="933:47">cpu_ir</name><index pos:start="933:48" pos:end="933:51">[<expr pos:start="933:49" pos:end="933:50"><name pos:start="933:49" pos:end="933:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="933:54" pos:end="933:57"><expr pos:start="933:54" pos:end="933:57"><operator pos:start="933:54" pos:end="933:54">~</operator><name pos:start="933:55" pos:end="933:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="935:21" pos:end="937:64">else<block type="pseudo" pos:start="937:25" pos:end="937:64"><block_content pos:start="937:25" pos:end="937:64">

                        <expr_stmt pos:start="937:25" pos:end="937:64"><expr pos:start="937:25" pos:end="937:63"><call pos:start="937:25" pos:end="937:63"><name pos:start="937:25" pos:end="937:39">tcg_gen_not_i64</name><argument_list pos:start="937:40" pos:end="937:63">(<argument pos:start="937:41" pos:end="937:50"><expr pos:start="937:41" pos:end="937:50"><name pos:start="937:41" pos:end="937:50"><name pos:start="937:41" pos:end="937:46">cpu_ir</name><index pos:start="937:47" pos:end="937:50">[<expr pos:start="937:48" pos:end="937:49"><name pos:start="937:48" pos:end="937:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="937:53" pos:end="937:62"><expr pos:start="937:53" pos:end="937:62"><name pos:start="937:53" pos:end="937:62"><name pos:start="937:53" pos:end="937:58">cpu_ir</name><index pos:start="937:59" pos:end="937:62">[<expr pos:start="937:60" pos:end="937:61"><name pos:start="937:60" pos:end="937:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="943:13" pos:end="943:18">break;</break>

        <case pos:start="945:9" pos:end="945:18">case <expr pos:start="945:14" pos:end="945:17"><literal type="number" pos:start="945:14" pos:end="945:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="947:13" pos:end="947:21">/* XOR */</comment>

            <if_stmt pos:start="949:13" pos:end="973:13"><if pos:start="949:13" pos:end="973:13">if <condition pos:start="949:16" pos:end="949:33">(<expr pos:start="949:17" pos:end="949:32"><call pos:start="949:17" pos:end="949:32"><name pos:start="949:17" pos:end="949:22">likely</name><argument_list pos:start="949:23" pos:end="949:32">(<argument pos:start="949:24" pos:end="949:31"><expr pos:start="949:24" pos:end="949:31"><name pos:start="949:24" pos:end="949:25">rc</name> <operator pos:start="949:27" pos:end="949:28">!=</operator> <literal type="number" pos:start="949:30" pos:end="949:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="949:35" pos:end="973:13">{<block_content pos:start="951:17" pos:end="971:17">

                <if_stmt pos:start="951:17" pos:end="971:17"><if pos:start="951:17" pos:end="961:17">if <condition pos:start="951:20" pos:end="951:29">(<expr pos:start="951:21" pos:end="951:28"><name pos:start="951:21" pos:end="951:22">ra</name> <operator pos:start="951:24" pos:end="951:25">!=</operator> <literal type="number" pos:start="951:27" pos:end="951:28">31</literal></expr>)</condition> <block pos:start="951:31" pos:end="961:17">{<block_content pos:start="953:21" pos:end="959:76">

                    <if_stmt pos:start="953:21" pos:end="959:76"><if pos:start="953:21" pos:end="955:70">if <condition pos:start="953:24" pos:end="953:30">(<expr pos:start="953:25" pos:end="953:29"><name pos:start="953:25" pos:end="953:29">islit</name></expr>)</condition><block type="pseudo" pos:start="955:25" pos:end="955:70"><block_content pos:start="955:25" pos:end="955:70">

                        <expr_stmt pos:start="955:25" pos:end="955:70"><expr pos:start="955:25" pos:end="955:69"><call pos:start="955:25" pos:end="955:69"><name pos:start="955:25" pos:end="955:40">tcg_gen_xori_i64</name><argument_list pos:start="955:41" pos:end="955:69">(<argument pos:start="955:42" pos:end="955:51"><expr pos:start="955:42" pos:end="955:51"><name pos:start="955:42" pos:end="955:51"><name pos:start="955:42" pos:end="955:47">cpu_ir</name><index pos:start="955:48" pos:end="955:51">[<expr pos:start="955:49" pos:end="955:50"><name pos:start="955:49" pos:end="955:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="955:54" pos:end="955:63"><expr pos:start="955:54" pos:end="955:63"><name pos:start="955:54" pos:end="955:63"><name pos:start="955:54" pos:end="955:59">cpu_ir</name><index pos:start="955:60" pos:end="955:63">[<expr pos:start="955:61" pos:end="955:62"><name pos:start="955:61" pos:end="955:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="955:66" pos:end="955:68"><expr pos:start="955:66" pos:end="955:68"><name pos:start="955:66" pos:end="955:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="957:21" pos:end="959:76">else<block type="pseudo" pos:start="959:25" pos:end="959:76"><block_content pos:start="959:25" pos:end="959:76">

                        <expr_stmt pos:start="959:25" pos:end="959:76"><expr pos:start="959:25" pos:end="959:75"><call pos:start="959:25" pos:end="959:75"><name pos:start="959:25" pos:end="959:39">tcg_gen_xor_i64</name><argument_list pos:start="959:40" pos:end="959:75">(<argument pos:start="959:41" pos:end="959:50"><expr pos:start="959:41" pos:end="959:50"><name pos:start="959:41" pos:end="959:50"><name pos:start="959:41" pos:end="959:46">cpu_ir</name><index pos:start="959:47" pos:end="959:50">[<expr pos:start="959:48" pos:end="959:49"><name pos:start="959:48" pos:end="959:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="959:53" pos:end="959:62"><expr pos:start="959:53" pos:end="959:62"><name pos:start="959:53" pos:end="959:62"><name pos:start="959:53" pos:end="959:58">cpu_ir</name><index pos:start="959:59" pos:end="959:62">[<expr pos:start="959:60" pos:end="959:61"><name pos:start="959:60" pos:end="959:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="959:65" pos:end="959:74"><expr pos:start="959:65" pos:end="959:74"><name pos:start="959:65" pos:end="959:74"><name pos:start="959:65" pos:end="959:70">cpu_ir</name><index pos:start="959:71" pos:end="959:74">[<expr pos:start="959:72" pos:end="959:73"><name pos:start="959:72" pos:end="959:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="961:19" pos:end="971:17">else <block pos:start="961:24" pos:end="971:17">{<block_content pos:start="963:21" pos:end="969:64">

                    <if_stmt pos:start="963:21" pos:end="969:64"><if pos:start="963:21" pos:end="965:58">if <condition pos:start="963:24" pos:end="963:30">(<expr pos:start="963:25" pos:end="963:29"><name pos:start="963:25" pos:end="963:29">islit</name></expr>)</condition><block type="pseudo" pos:start="965:25" pos:end="965:58"><block_content pos:start="965:25" pos:end="965:58">

                        <expr_stmt pos:start="965:25" pos:end="965:58"><expr pos:start="965:25" pos:end="965:57"><call pos:start="965:25" pos:end="965:57"><name pos:start="965:25" pos:end="965:40">tcg_gen_movi_i64</name><argument_list pos:start="965:41" pos:end="965:57">(<argument pos:start="965:42" pos:end="965:51"><expr pos:start="965:42" pos:end="965:51"><name pos:start="965:42" pos:end="965:51"><name pos:start="965:42" pos:end="965:47">cpu_ir</name><index pos:start="965:48" pos:end="965:51">[<expr pos:start="965:49" pos:end="965:50"><name pos:start="965:49" pos:end="965:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="965:54" pos:end="965:56"><expr pos:start="965:54" pos:end="965:56"><name pos:start="965:54" pos:end="965:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="967:21" pos:end="969:64">else<block type="pseudo" pos:start="969:25" pos:end="969:64"><block_content pos:start="969:25" pos:end="969:64">

                        <expr_stmt pos:start="969:25" pos:end="969:64"><expr pos:start="969:25" pos:end="969:63"><call pos:start="969:25" pos:end="969:63"><name pos:start="969:25" pos:end="969:39">tcg_gen_mov_i64</name><argument_list pos:start="969:40" pos:end="969:63">(<argument pos:start="969:41" pos:end="969:50"><expr pos:start="969:41" pos:end="969:50"><name pos:start="969:41" pos:end="969:50"><name pos:start="969:41" pos:end="969:46">cpu_ir</name><index pos:start="969:47" pos:end="969:50">[<expr pos:start="969:48" pos:end="969:49"><name pos:start="969:48" pos:end="969:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="969:53" pos:end="969:62"><expr pos:start="969:53" pos:end="969:62"><name pos:start="969:53" pos:end="969:62"><name pos:start="969:53" pos:end="969:58">cpu_ir</name><index pos:start="969:59" pos:end="969:62">[<expr pos:start="969:60" pos:end="969:61"><name pos:start="969:60" pos:end="969:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="975:13" pos:end="975:18">break;</break>

        <case pos:start="977:9" pos:end="977:18">case <expr pos:start="977:14" pos:end="977:17"><literal type="number" pos:start="977:14" pos:end="977:17">0x44</literal></expr>:</case>

            <comment type="block" pos:start="979:13" pos:end="979:24">/* CMOVLT */</comment>

            <expr_stmt pos:start="981:13" pos:end="981:61"><expr pos:start="981:13" pos:end="981:60"><call pos:start="981:13" pos:end="981:60"><name pos:start="981:13" pos:end="981:20">gen_cmov</name><argument_list pos:start="981:21" pos:end="981:60">(<argument pos:start="981:22" pos:end="981:32"><expr pos:start="981:22" pos:end="981:32"><name pos:start="981:22" pos:end="981:32">TCG_COND_GE</name></expr></argument>, <argument pos:start="981:35" pos:end="981:36"><expr pos:start="981:35" pos:end="981:36"><name pos:start="981:35" pos:end="981:36">ra</name></expr></argument>, <argument pos:start="981:39" pos:end="981:40"><expr pos:start="981:39" pos:end="981:40"><name pos:start="981:39" pos:end="981:40">rb</name></expr></argument>, <argument pos:start="981:43" pos:end="981:44"><expr pos:start="981:43" pos:end="981:44"><name pos:start="981:43" pos:end="981:44">rc</name></expr></argument>, <argument pos:start="981:47" pos:end="981:51"><expr pos:start="981:47" pos:end="981:51"><name pos:start="981:47" pos:end="981:51">islit</name></expr></argument>, <argument pos:start="981:54" pos:end="981:56"><expr pos:start="981:54" pos:end="981:56"><name pos:start="981:54" pos:end="981:56">lit</name></expr></argument>, <argument pos:start="981:59" pos:end="981:59"><expr pos:start="981:59" pos:end="981:59"><literal type="number" pos:start="981:59" pos:end="981:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="983:13" pos:end="983:18">break;</break>

        <case pos:start="985:9" pos:end="985:18">case <expr pos:start="985:14" pos:end="985:17"><literal type="number" pos:start="985:14" pos:end="985:17">0x46</literal></expr>:</case>

            <comment type="block" pos:start="987:13" pos:end="987:24">/* CMOVGE */</comment>

            <expr_stmt pos:start="989:13" pos:end="989:61"><expr pos:start="989:13" pos:end="989:60"><call pos:start="989:13" pos:end="989:60"><name pos:start="989:13" pos:end="989:20">gen_cmov</name><argument_list pos:start="989:21" pos:end="989:60">(<argument pos:start="989:22" pos:end="989:32"><expr pos:start="989:22" pos:end="989:32"><name pos:start="989:22" pos:end="989:32">TCG_COND_LT</name></expr></argument>, <argument pos:start="989:35" pos:end="989:36"><expr pos:start="989:35" pos:end="989:36"><name pos:start="989:35" pos:end="989:36">ra</name></expr></argument>, <argument pos:start="989:39" pos:end="989:40"><expr pos:start="989:39" pos:end="989:40"><name pos:start="989:39" pos:end="989:40">rb</name></expr></argument>, <argument pos:start="989:43" pos:end="989:44"><expr pos:start="989:43" pos:end="989:44"><name pos:start="989:43" pos:end="989:44">rc</name></expr></argument>, <argument pos:start="989:47" pos:end="989:51"><expr pos:start="989:47" pos:end="989:51"><name pos:start="989:47" pos:end="989:51">islit</name></expr></argument>, <argument pos:start="989:54" pos:end="989:56"><expr pos:start="989:54" pos:end="989:56"><name pos:start="989:54" pos:end="989:56">lit</name></expr></argument>, <argument pos:start="989:59" pos:end="989:59"><expr pos:start="989:59" pos:end="989:59"><literal type="number" pos:start="989:59" pos:end="989:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="991:13" pos:end="991:18">break;</break>

        <case pos:start="993:9" pos:end="993:18">case <expr pos:start="993:14" pos:end="993:17"><literal type="number" pos:start="993:14" pos:end="993:17">0x48</literal></expr>:</case>

            <comment type="block" pos:start="995:13" pos:end="995:21">/* EQV */</comment>

            <if_stmt pos:start="997:13" pos:end="1021:13"><if pos:start="997:13" pos:end="1021:13">if <condition pos:start="997:16" pos:end="997:33">(<expr pos:start="997:17" pos:end="997:32"><call pos:start="997:17" pos:end="997:32"><name pos:start="997:17" pos:end="997:22">likely</name><argument_list pos:start="997:23" pos:end="997:32">(<argument pos:start="997:24" pos:end="997:31"><expr pos:start="997:24" pos:end="997:31"><name pos:start="997:24" pos:end="997:25">rc</name> <operator pos:start="997:27" pos:end="997:28">!=</operator> <literal type="number" pos:start="997:30" pos:end="997:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="997:35" pos:end="1021:13">{<block_content pos:start="999:17" pos:end="1019:17">

                <if_stmt pos:start="999:17" pos:end="1019:17"><if pos:start="999:17" pos:end="1009:17">if <condition pos:start="999:20" pos:end="999:29">(<expr pos:start="999:21" pos:end="999:28"><name pos:start="999:21" pos:end="999:22">ra</name> <operator pos:start="999:24" pos:end="999:25">!=</operator> <literal type="number" pos:start="999:27" pos:end="999:28">31</literal></expr>)</condition> <block pos:start="999:31" pos:end="1009:17">{<block_content pos:start="1001:21" pos:end="1007:76">

                    <if_stmt pos:start="1001:21" pos:end="1007:76"><if pos:start="1001:21" pos:end="1003:71">if <condition pos:start="1001:24" pos:end="1001:30">(<expr pos:start="1001:25" pos:end="1001:29"><name pos:start="1001:25" pos:end="1001:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1003:25" pos:end="1003:71"><block_content pos:start="1003:25" pos:end="1003:71">

                        <expr_stmt pos:start="1003:25" pos:end="1003:71"><expr pos:start="1003:25" pos:end="1003:70"><call pos:start="1003:25" pos:end="1003:70"><name pos:start="1003:25" pos:end="1003:40">tcg_gen_xori_i64</name><argument_list pos:start="1003:41" pos:end="1003:70">(<argument pos:start="1003:42" pos:end="1003:51"><expr pos:start="1003:42" pos:end="1003:51"><name pos:start="1003:42" pos:end="1003:51"><name pos:start="1003:42" pos:end="1003:47">cpu_ir</name><index pos:start="1003:48" pos:end="1003:51">[<expr pos:start="1003:49" pos:end="1003:50"><name pos:start="1003:49" pos:end="1003:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1003:54" pos:end="1003:63"><expr pos:start="1003:54" pos:end="1003:63"><name pos:start="1003:54" pos:end="1003:63"><name pos:start="1003:54" pos:end="1003:59">cpu_ir</name><index pos:start="1003:60" pos:end="1003:63">[<expr pos:start="1003:61" pos:end="1003:62"><name pos:start="1003:61" pos:end="1003:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1003:66" pos:end="1003:69"><expr pos:start="1003:66" pos:end="1003:69"><operator pos:start="1003:66" pos:end="1003:66">~</operator><name pos:start="1003:67" pos:end="1003:69">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1005:21" pos:end="1007:76">else<block type="pseudo" pos:start="1007:25" pos:end="1007:76"><block_content pos:start="1007:25" pos:end="1007:76">

                        <expr_stmt pos:start="1007:25" pos:end="1007:76"><expr pos:start="1007:25" pos:end="1007:75"><call pos:start="1007:25" pos:end="1007:75"><name pos:start="1007:25" pos:end="1007:39">tcg_gen_eqv_i64</name><argument_list pos:start="1007:40" pos:end="1007:75">(<argument pos:start="1007:41" pos:end="1007:50"><expr pos:start="1007:41" pos:end="1007:50"><name pos:start="1007:41" pos:end="1007:50"><name pos:start="1007:41" pos:end="1007:46">cpu_ir</name><index pos:start="1007:47" pos:end="1007:50">[<expr pos:start="1007:48" pos:end="1007:49"><name pos:start="1007:48" pos:end="1007:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1007:53" pos:end="1007:62"><expr pos:start="1007:53" pos:end="1007:62"><name pos:start="1007:53" pos:end="1007:62"><name pos:start="1007:53" pos:end="1007:58">cpu_ir</name><index pos:start="1007:59" pos:end="1007:62">[<expr pos:start="1007:60" pos:end="1007:61"><name pos:start="1007:60" pos:end="1007:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1007:65" pos:end="1007:74"><expr pos:start="1007:65" pos:end="1007:74"><name pos:start="1007:65" pos:end="1007:74"><name pos:start="1007:65" pos:end="1007:70">cpu_ir</name><index pos:start="1007:71" pos:end="1007:74">[<expr pos:start="1007:72" pos:end="1007:73"><name pos:start="1007:72" pos:end="1007:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1009:19" pos:end="1019:17">else <block pos:start="1009:24" pos:end="1019:17">{<block_content pos:start="1011:21" pos:end="1017:64">

                    <if_stmt pos:start="1011:21" pos:end="1017:64"><if pos:start="1011:21" pos:end="1013:59">if <condition pos:start="1011:24" pos:end="1011:30">(<expr pos:start="1011:25" pos:end="1011:29"><name pos:start="1011:25" pos:end="1011:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1013:25" pos:end="1013:59"><block_content pos:start="1013:25" pos:end="1013:59">

                        <expr_stmt pos:start="1013:25" pos:end="1013:59"><expr pos:start="1013:25" pos:end="1013:58"><call pos:start="1013:25" pos:end="1013:58"><name pos:start="1013:25" pos:end="1013:40">tcg_gen_movi_i64</name><argument_list pos:start="1013:41" pos:end="1013:58">(<argument pos:start="1013:42" pos:end="1013:51"><expr pos:start="1013:42" pos:end="1013:51"><name pos:start="1013:42" pos:end="1013:51"><name pos:start="1013:42" pos:end="1013:47">cpu_ir</name><index pos:start="1013:48" pos:end="1013:51">[<expr pos:start="1013:49" pos:end="1013:50"><name pos:start="1013:49" pos:end="1013:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1013:54" pos:end="1013:57"><expr pos:start="1013:54" pos:end="1013:57"><operator pos:start="1013:54" pos:end="1013:54">~</operator><name pos:start="1013:55" pos:end="1013:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1015:21" pos:end="1017:64">else<block type="pseudo" pos:start="1017:25" pos:end="1017:64"><block_content pos:start="1017:25" pos:end="1017:64">

                        <expr_stmt pos:start="1017:25" pos:end="1017:64"><expr pos:start="1017:25" pos:end="1017:63"><call pos:start="1017:25" pos:end="1017:63"><name pos:start="1017:25" pos:end="1017:39">tcg_gen_not_i64</name><argument_list pos:start="1017:40" pos:end="1017:63">(<argument pos:start="1017:41" pos:end="1017:50"><expr pos:start="1017:41" pos:end="1017:50"><name pos:start="1017:41" pos:end="1017:50"><name pos:start="1017:41" pos:end="1017:46">cpu_ir</name><index pos:start="1017:47" pos:end="1017:50">[<expr pos:start="1017:48" pos:end="1017:49"><name pos:start="1017:48" pos:end="1017:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1017:53" pos:end="1017:62"><expr pos:start="1017:53" pos:end="1017:62"><name pos:start="1017:53" pos:end="1017:62"><name pos:start="1017:53" pos:end="1017:58">cpu_ir</name><index pos:start="1017:59" pos:end="1017:62">[<expr pos:start="1017:60" pos:end="1017:61"><name pos:start="1017:60" pos:end="1017:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1023:13" pos:end="1023:18">break;</break>

        <case pos:start="1025:9" pos:end="1025:18">case <expr pos:start="1025:14" pos:end="1025:17"><literal type="number" pos:start="1025:14" pos:end="1025:17">0x61</literal></expr>:</case>

            <comment type="block" pos:start="1027:13" pos:end="1027:23">/* AMASK */</comment>

            <if_stmt pos:start="1029:13" pos:end="1039:13"><if pos:start="1029:13" pos:end="1039:13">if <condition pos:start="1029:16" pos:end="1029:33">(<expr pos:start="1029:17" pos:end="1029:32"><call pos:start="1029:17" pos:end="1029:32"><name pos:start="1029:17" pos:end="1029:22">likely</name><argument_list pos:start="1029:23" pos:end="1029:32">(<argument pos:start="1029:24" pos:end="1029:31"><expr pos:start="1029:24" pos:end="1029:31"><name pos:start="1029:24" pos:end="1029:25">rc</name> <operator pos:start="1029:27" pos:end="1029:28">!=</operator> <literal type="number" pos:start="1029:30" pos:end="1029:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1029:35" pos:end="1039:13">{<block_content pos:start="1031:17" pos:end="1037:77">

                <if_stmt pos:start="1031:17" pos:end="1037:77"><if pos:start="1031:17" pos:end="1033:68">if <condition pos:start="1031:20" pos:end="1031:26">(<expr pos:start="1031:21" pos:end="1031:25"><name pos:start="1031:21" pos:end="1031:25">islit</name></expr>)</condition><block type="pseudo" pos:start="1033:21" pos:end="1033:68"><block_content pos:start="1033:21" pos:end="1033:68">

                    <expr_stmt pos:start="1033:21" pos:end="1033:68"><expr pos:start="1033:21" pos:end="1033:67"><call pos:start="1033:21" pos:end="1033:67"><name pos:start="1033:21" pos:end="1033:36">tcg_gen_movi_i64</name><argument_list pos:start="1033:37" pos:end="1033:67">(<argument pos:start="1033:38" pos:end="1033:47"><expr pos:start="1033:38" pos:end="1033:47"><name pos:start="1033:38" pos:end="1033:47"><name pos:start="1033:38" pos:end="1033:43">cpu_ir</name><index pos:start="1033:44" pos:end="1033:47">[<expr pos:start="1033:45" pos:end="1033:46"><name pos:start="1033:45" pos:end="1033:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1033:50" pos:end="1033:66"><expr pos:start="1033:50" pos:end="1033:66"><call pos:start="1033:50" pos:end="1033:66"><name pos:start="1033:50" pos:end="1033:61">helper_amask</name><argument_list pos:start="1033:62" pos:end="1033:66">(<argument pos:start="1033:63" pos:end="1033:65"><expr pos:start="1033:63" pos:end="1033:65"><name pos:start="1033:63" pos:end="1033:65">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1035:17" pos:end="1037:77">else<block type="pseudo" pos:start="1037:21" pos:end="1037:77"><block_content pos:start="1037:21" pos:end="1037:77">

                    <expr_stmt pos:start="1037:21" pos:end="1037:77"><expr pos:start="1037:21" pos:end="1037:76"><call pos:start="1037:21" pos:end="1037:76"><name pos:start="1037:21" pos:end="1037:38">tcg_gen_helper_1_1</name><argument_list pos:start="1037:39" pos:end="1037:76">(<argument pos:start="1037:40" pos:end="1037:51"><expr pos:start="1037:40" pos:end="1037:51"><name pos:start="1037:40" pos:end="1037:51">helper_amask</name></expr></argument>, <argument pos:start="1037:54" pos:end="1037:63"><expr pos:start="1037:54" pos:end="1037:63"><name pos:start="1037:54" pos:end="1037:63"><name pos:start="1037:54" pos:end="1037:59">cpu_ir</name><index pos:start="1037:60" pos:end="1037:63">[<expr pos:start="1037:61" pos:end="1037:62"><name pos:start="1037:61" pos:end="1037:62">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1037:66" pos:end="1037:75"><expr pos:start="1037:66" pos:end="1037:75"><name pos:start="1037:66" pos:end="1037:75"><name pos:start="1037:66" pos:end="1037:71">cpu_ir</name><index pos:start="1037:72" pos:end="1037:75">[<expr pos:start="1037:73" pos:end="1037:74"><name pos:start="1037:73" pos:end="1037:74">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:18">case <expr pos:start="1043:14" pos:end="1043:17"><literal type="number" pos:start="1043:14" pos:end="1043:17">0x64</literal></expr>:</case>

            <comment type="block" pos:start="1045:13" pos:end="1045:24">/* CMOVLE */</comment>

            <expr_stmt pos:start="1047:13" pos:end="1047:61"><expr pos:start="1047:13" pos:end="1047:60"><call pos:start="1047:13" pos:end="1047:60"><name pos:start="1047:13" pos:end="1047:20">gen_cmov</name><argument_list pos:start="1047:21" pos:end="1047:60">(<argument pos:start="1047:22" pos:end="1047:32"><expr pos:start="1047:22" pos:end="1047:32"><name pos:start="1047:22" pos:end="1047:32">TCG_COND_GT</name></expr></argument>, <argument pos:start="1047:35" pos:end="1047:36"><expr pos:start="1047:35" pos:end="1047:36"><name pos:start="1047:35" pos:end="1047:36">ra</name></expr></argument>, <argument pos:start="1047:39" pos:end="1047:40"><expr pos:start="1047:39" pos:end="1047:40"><name pos:start="1047:39" pos:end="1047:40">rb</name></expr></argument>, <argument pos:start="1047:43" pos:end="1047:44"><expr pos:start="1047:43" pos:end="1047:44"><name pos:start="1047:43" pos:end="1047:44">rc</name></expr></argument>, <argument pos:start="1047:47" pos:end="1047:51"><expr pos:start="1047:47" pos:end="1047:51"><name pos:start="1047:47" pos:end="1047:51">islit</name></expr></argument>, <argument pos:start="1047:54" pos:end="1047:56"><expr pos:start="1047:54" pos:end="1047:56"><name pos:start="1047:54" pos:end="1047:56">lit</name></expr></argument>, <argument pos:start="1047:59" pos:end="1047:59"><expr pos:start="1047:59" pos:end="1047:59"><literal type="number" pos:start="1047:59" pos:end="1047:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1049:13" pos:end="1049:18">break;</break>

        <case pos:start="1051:9" pos:end="1051:18">case <expr pos:start="1051:14" pos:end="1051:17"><literal type="number" pos:start="1051:14" pos:end="1051:17">0x66</literal></expr>:</case>

            <comment type="block" pos:start="1053:13" pos:end="1053:24">/* CMOVGT */</comment>

            <expr_stmt pos:start="1055:13" pos:end="1055:61"><expr pos:start="1055:13" pos:end="1055:60"><call pos:start="1055:13" pos:end="1055:60"><name pos:start="1055:13" pos:end="1055:20">gen_cmov</name><argument_list pos:start="1055:21" pos:end="1055:60">(<argument pos:start="1055:22" pos:end="1055:32"><expr pos:start="1055:22" pos:end="1055:32"><name pos:start="1055:22" pos:end="1055:32">TCG_COND_LE</name></expr></argument>, <argument pos:start="1055:35" pos:end="1055:36"><expr pos:start="1055:35" pos:end="1055:36"><name pos:start="1055:35" pos:end="1055:36">ra</name></expr></argument>, <argument pos:start="1055:39" pos:end="1055:40"><expr pos:start="1055:39" pos:end="1055:40"><name pos:start="1055:39" pos:end="1055:40">rb</name></expr></argument>, <argument pos:start="1055:43" pos:end="1055:44"><expr pos:start="1055:43" pos:end="1055:44"><name pos:start="1055:43" pos:end="1055:44">rc</name></expr></argument>, <argument pos:start="1055:47" pos:end="1055:51"><expr pos:start="1055:47" pos:end="1055:51"><name pos:start="1055:47" pos:end="1055:51">islit</name></expr></argument>, <argument pos:start="1055:54" pos:end="1055:56"><expr pos:start="1055:54" pos:end="1055:56"><name pos:start="1055:54" pos:end="1055:56">lit</name></expr></argument>, <argument pos:start="1055:59" pos:end="1055:59"><expr pos:start="1055:59" pos:end="1055:59"><literal type="number" pos:start="1055:59" pos:end="1055:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1057:13" pos:end="1057:18">break;</break>

        <case pos:start="1059:9" pos:end="1059:18">case <expr pos:start="1059:14" pos:end="1059:17"><literal type="number" pos:start="1059:14" pos:end="1059:17">0x6C</literal></expr>:</case>

            <comment type="block" pos:start="1061:13" pos:end="1061:25">/* IMPLVER */</comment>

            <if_stmt pos:start="1063:13" pos:end="1065:68"><if pos:start="1063:13" pos:end="1065:68">if <condition pos:start="1063:16" pos:end="1063:25">(<expr pos:start="1063:17" pos:end="1063:24"><name pos:start="1063:17" pos:end="1063:18">rc</name> <operator pos:start="1063:20" pos:end="1063:21">!=</operator> <literal type="number" pos:start="1063:23" pos:end="1063:24">31</literal></expr>)</condition><block type="pseudo" pos:start="1065:17" pos:end="1065:68"><block_content pos:start="1065:17" pos:end="1065:68">

                <expr_stmt pos:start="1065:17" pos:end="1065:68"><expr pos:start="1065:17" pos:end="1065:67"><call pos:start="1065:17" pos:end="1065:67"><name pos:start="1065:17" pos:end="1065:34">tcg_gen_helper_1_0</name><argument_list pos:start="1065:35" pos:end="1065:67">(<argument pos:start="1065:36" pos:end="1065:54"><expr pos:start="1065:36" pos:end="1065:54"><name pos:start="1065:36" pos:end="1065:54">helper_load_implver</name></expr></argument>, <argument pos:start="1065:57" pos:end="1065:66"><expr pos:start="1065:57" pos:end="1065:66"><name pos:start="1065:57" pos:end="1065:66"><name pos:start="1065:57" pos:end="1065:62">cpu_ir</name><index pos:start="1065:63" pos:end="1065:66">[<expr pos:start="1065:64" pos:end="1065:65"><name pos:start="1065:64" pos:end="1065:65">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="1067:13" pos:end="1067:18">break;</break>

        <default pos:start="1069:9" pos:end="1069:16">default:</default>

            <goto pos:start="1071:13" pos:end="1071:29">goto <name pos:start="1071:18" pos:end="1071:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1075:9" pos:end="1075:14">break;</break>

    <case pos:start="1077:5" pos:end="1077:14">case <expr pos:start="1077:10" pos:end="1077:13"><literal type="number" pos:start="1077:10" pos:end="1077:13">0x12</literal></expr>:</case>

        <switch pos:start="1079:9" pos:end="1365:9">switch <condition pos:start="1079:16" pos:end="1079:20">(<expr pos:start="1079:17" pos:end="1079:19"><name pos:start="1079:17" pos:end="1079:19">fn7</name></expr>)</condition> <block pos:start="1079:22" pos:end="1365:9">{<block_content pos:start="1081:9" pos:end="1363:29">

        <case pos:start="1081:9" pos:end="1081:18">case <expr pos:start="1081:14" pos:end="1081:17"><literal type="number" pos:start="1081:14" pos:end="1081:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1083:13" pos:end="1083:23">/* MSKBL */</comment>

            <expr_stmt pos:start="1085:13" pos:end="1085:61"><expr pos:start="1085:13" pos:end="1085:60"><call pos:start="1085:13" pos:end="1085:60"><name pos:start="1085:13" pos:end="1085:22">gen_arith3</name><argument_list pos:start="1085:23" pos:end="1085:60">(<argument pos:start="1085:24" pos:end="1085:35"><expr pos:start="1085:24" pos:end="1085:35"><name pos:start="1085:24" pos:end="1085:35">helper_mskbl</name></expr></argument>, <argument pos:start="1085:38" pos:end="1085:39"><expr pos:start="1085:38" pos:end="1085:39"><name pos:start="1085:38" pos:end="1085:39">ra</name></expr></argument>, <argument pos:start="1085:42" pos:end="1085:43"><expr pos:start="1085:42" pos:end="1085:43"><name pos:start="1085:42" pos:end="1085:43">rb</name></expr></argument>, <argument pos:start="1085:46" pos:end="1085:47"><expr pos:start="1085:46" pos:end="1085:47"><name pos:start="1085:46" pos:end="1085:47">rc</name></expr></argument>, <argument pos:start="1085:50" pos:end="1085:54"><expr pos:start="1085:50" pos:end="1085:54"><name pos:start="1085:50" pos:end="1085:54">islit</name></expr></argument>, <argument pos:start="1085:57" pos:end="1085:59"><expr pos:start="1085:57" pos:end="1085:59"><name pos:start="1085:57" pos:end="1085:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1087:13" pos:end="1087:18">break;</break>

        <case pos:start="1089:9" pos:end="1089:18">case <expr pos:start="1089:14" pos:end="1089:17"><literal type="number" pos:start="1089:14" pos:end="1089:17">0x06</literal></expr>:</case>

            <comment type="block" pos:start="1091:13" pos:end="1091:23">/* EXTBL */</comment>

            <expr_stmt pos:start="1093:13" pos:end="1093:66"><expr pos:start="1093:13" pos:end="1093:65"><call pos:start="1093:13" pos:end="1093:65"><name pos:start="1093:13" pos:end="1093:21">gen_ext_l</name><argument_list pos:start="1093:22" pos:end="1093:65">(<argument pos:start="1093:23" pos:end="1093:40"><expr pos:start="1093:23" pos:end="1093:40"><operator pos:start="1093:23" pos:end="1093:23">&amp;</operator><name pos:start="1093:24" pos:end="1093:40">tcg_gen_ext8u_i64</name></expr></argument>, <argument pos:start="1093:43" pos:end="1093:44"><expr pos:start="1093:43" pos:end="1093:44"><name pos:start="1093:43" pos:end="1093:44">ra</name></expr></argument>, <argument pos:start="1093:47" pos:end="1093:48"><expr pos:start="1093:47" pos:end="1093:48"><name pos:start="1093:47" pos:end="1093:48">rb</name></expr></argument>, <argument pos:start="1093:51" pos:end="1093:52"><expr pos:start="1093:51" pos:end="1093:52"><name pos:start="1093:51" pos:end="1093:52">rc</name></expr></argument>, <argument pos:start="1093:55" pos:end="1093:59"><expr pos:start="1093:55" pos:end="1093:59"><name pos:start="1093:55" pos:end="1093:59">islit</name></expr></argument>, <argument pos:start="1093:62" pos:end="1093:64"><expr pos:start="1093:62" pos:end="1093:64"><name pos:start="1093:62" pos:end="1093:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1095:13" pos:end="1095:18">break;</break>

        <case pos:start="1097:9" pos:end="1097:18">case <expr pos:start="1097:14" pos:end="1097:17"><literal type="number" pos:start="1097:14" pos:end="1097:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1099:13" pos:end="1099:23">/* INSBL */</comment>

            <expr_stmt pos:start="1101:13" pos:end="1101:61"><expr pos:start="1101:13" pos:end="1101:60"><call pos:start="1101:13" pos:end="1101:60"><name pos:start="1101:13" pos:end="1101:22">gen_arith3</name><argument_list pos:start="1101:23" pos:end="1101:60">(<argument pos:start="1101:24" pos:end="1101:35"><expr pos:start="1101:24" pos:end="1101:35"><name pos:start="1101:24" pos:end="1101:35">helper_insbl</name></expr></argument>, <argument pos:start="1101:38" pos:end="1101:39"><expr pos:start="1101:38" pos:end="1101:39"><name pos:start="1101:38" pos:end="1101:39">ra</name></expr></argument>, <argument pos:start="1101:42" pos:end="1101:43"><expr pos:start="1101:42" pos:end="1101:43"><name pos:start="1101:42" pos:end="1101:43">rb</name></expr></argument>, <argument pos:start="1101:46" pos:end="1101:47"><expr pos:start="1101:46" pos:end="1101:47"><name pos:start="1101:46" pos:end="1101:47">rc</name></expr></argument>, <argument pos:start="1101:50" pos:end="1101:54"><expr pos:start="1101:50" pos:end="1101:54"><name pos:start="1101:50" pos:end="1101:54">islit</name></expr></argument>, <argument pos:start="1101:57" pos:end="1101:59"><expr pos:start="1101:57" pos:end="1101:59"><name pos:start="1101:57" pos:end="1101:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1103:13" pos:end="1103:18">break;</break>

        <case pos:start="1105:9" pos:end="1105:18">case <expr pos:start="1105:14" pos:end="1105:17"><literal type="number" pos:start="1105:14" pos:end="1105:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="1107:13" pos:end="1107:23">/* MSKWL */</comment>

            <expr_stmt pos:start="1109:13" pos:end="1109:61"><expr pos:start="1109:13" pos:end="1109:60"><call pos:start="1109:13" pos:end="1109:60"><name pos:start="1109:13" pos:end="1109:22">gen_arith3</name><argument_list pos:start="1109:23" pos:end="1109:60">(<argument pos:start="1109:24" pos:end="1109:35"><expr pos:start="1109:24" pos:end="1109:35"><name pos:start="1109:24" pos:end="1109:35">helper_mskwl</name></expr></argument>, <argument pos:start="1109:38" pos:end="1109:39"><expr pos:start="1109:38" pos:end="1109:39"><name pos:start="1109:38" pos:end="1109:39">ra</name></expr></argument>, <argument pos:start="1109:42" pos:end="1109:43"><expr pos:start="1109:42" pos:end="1109:43"><name pos:start="1109:42" pos:end="1109:43">rb</name></expr></argument>, <argument pos:start="1109:46" pos:end="1109:47"><expr pos:start="1109:46" pos:end="1109:47"><name pos:start="1109:46" pos:end="1109:47">rc</name></expr></argument>, <argument pos:start="1109:50" pos:end="1109:54"><expr pos:start="1109:50" pos:end="1109:54"><name pos:start="1109:50" pos:end="1109:54">islit</name></expr></argument>, <argument pos:start="1109:57" pos:end="1109:59"><expr pos:start="1109:57" pos:end="1109:59"><name pos:start="1109:57" pos:end="1109:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1111:13" pos:end="1111:18">break;</break>

        <case pos:start="1113:9" pos:end="1113:18">case <expr pos:start="1113:14" pos:end="1113:17"><literal type="number" pos:start="1113:14" pos:end="1113:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="1115:13" pos:end="1115:23">/* EXTWL */</comment>

            <expr_stmt pos:start="1117:13" pos:end="1117:67"><expr pos:start="1117:13" pos:end="1117:66"><call pos:start="1117:13" pos:end="1117:66"><name pos:start="1117:13" pos:end="1117:21">gen_ext_l</name><argument_list pos:start="1117:22" pos:end="1117:66">(<argument pos:start="1117:23" pos:end="1117:41"><expr pos:start="1117:23" pos:end="1117:41"><operator pos:start="1117:23" pos:end="1117:23">&amp;</operator><name pos:start="1117:24" pos:end="1117:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1117:44" pos:end="1117:45"><expr pos:start="1117:44" pos:end="1117:45"><name pos:start="1117:44" pos:end="1117:45">ra</name></expr></argument>, <argument pos:start="1117:48" pos:end="1117:49"><expr pos:start="1117:48" pos:end="1117:49"><name pos:start="1117:48" pos:end="1117:49">rb</name></expr></argument>, <argument pos:start="1117:52" pos:end="1117:53"><expr pos:start="1117:52" pos:end="1117:53"><name pos:start="1117:52" pos:end="1117:53">rc</name></expr></argument>, <argument pos:start="1117:56" pos:end="1117:60"><expr pos:start="1117:56" pos:end="1117:60"><name pos:start="1117:56" pos:end="1117:60">islit</name></expr></argument>, <argument pos:start="1117:63" pos:end="1117:65"><expr pos:start="1117:63" pos:end="1117:65"><name pos:start="1117:63" pos:end="1117:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1119:13" pos:end="1119:18">break;</break>

        <case pos:start="1121:9" pos:end="1121:18">case <expr pos:start="1121:14" pos:end="1121:17"><literal type="number" pos:start="1121:14" pos:end="1121:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="1123:13" pos:end="1123:23">/* INSWL */</comment>

            <expr_stmt pos:start="1125:13" pos:end="1125:61"><expr pos:start="1125:13" pos:end="1125:60"><call pos:start="1125:13" pos:end="1125:60"><name pos:start="1125:13" pos:end="1125:22">gen_arith3</name><argument_list pos:start="1125:23" pos:end="1125:60">(<argument pos:start="1125:24" pos:end="1125:35"><expr pos:start="1125:24" pos:end="1125:35"><name pos:start="1125:24" pos:end="1125:35">helper_inswl</name></expr></argument>, <argument pos:start="1125:38" pos:end="1125:39"><expr pos:start="1125:38" pos:end="1125:39"><name pos:start="1125:38" pos:end="1125:39">ra</name></expr></argument>, <argument pos:start="1125:42" pos:end="1125:43"><expr pos:start="1125:42" pos:end="1125:43"><name pos:start="1125:42" pos:end="1125:43">rb</name></expr></argument>, <argument pos:start="1125:46" pos:end="1125:47"><expr pos:start="1125:46" pos:end="1125:47"><name pos:start="1125:46" pos:end="1125:47">rc</name></expr></argument>, <argument pos:start="1125:50" pos:end="1125:54"><expr pos:start="1125:50" pos:end="1125:54"><name pos:start="1125:50" pos:end="1125:54">islit</name></expr></argument>, <argument pos:start="1125:57" pos:end="1125:59"><expr pos:start="1125:57" pos:end="1125:59"><name pos:start="1125:57" pos:end="1125:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1127:13" pos:end="1127:18">break;</break>

        <case pos:start="1129:9" pos:end="1129:18">case <expr pos:start="1129:14" pos:end="1129:17"><literal type="number" pos:start="1129:14" pos:end="1129:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1131:13" pos:end="1131:23">/* MSKLL */</comment>

            <expr_stmt pos:start="1133:13" pos:end="1133:61"><expr pos:start="1133:13" pos:end="1133:60"><call pos:start="1133:13" pos:end="1133:60"><name pos:start="1133:13" pos:end="1133:22">gen_arith3</name><argument_list pos:start="1133:23" pos:end="1133:60">(<argument pos:start="1133:24" pos:end="1133:35"><expr pos:start="1133:24" pos:end="1133:35"><name pos:start="1133:24" pos:end="1133:35">helper_mskll</name></expr></argument>, <argument pos:start="1133:38" pos:end="1133:39"><expr pos:start="1133:38" pos:end="1133:39"><name pos:start="1133:38" pos:end="1133:39">ra</name></expr></argument>, <argument pos:start="1133:42" pos:end="1133:43"><expr pos:start="1133:42" pos:end="1133:43"><name pos:start="1133:42" pos:end="1133:43">rb</name></expr></argument>, <argument pos:start="1133:46" pos:end="1133:47"><expr pos:start="1133:46" pos:end="1133:47"><name pos:start="1133:46" pos:end="1133:47">rc</name></expr></argument>, <argument pos:start="1133:50" pos:end="1133:54"><expr pos:start="1133:50" pos:end="1133:54"><name pos:start="1133:50" pos:end="1133:54">islit</name></expr></argument>, <argument pos:start="1133:57" pos:end="1133:59"><expr pos:start="1133:57" pos:end="1133:59"><name pos:start="1133:57" pos:end="1133:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1135:13" pos:end="1135:18">break;</break>

        <case pos:start="1137:9" pos:end="1137:18">case <expr pos:start="1137:14" pos:end="1137:17"><literal type="number" pos:start="1137:14" pos:end="1137:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1139:13" pos:end="1139:23">/* EXTLL */</comment>

            <expr_stmt pos:start="1141:13" pos:end="1141:67"><expr pos:start="1141:13" pos:end="1141:66"><call pos:start="1141:13" pos:end="1141:66"><name pos:start="1141:13" pos:end="1141:21">gen_ext_l</name><argument_list pos:start="1141:22" pos:end="1141:66">(<argument pos:start="1141:23" pos:end="1141:41"><expr pos:start="1141:23" pos:end="1141:41"><operator pos:start="1141:23" pos:end="1141:23">&amp;</operator><name pos:start="1141:24" pos:end="1141:41">tcg_gen_ext32u_i64</name></expr></argument>, <argument pos:start="1141:44" pos:end="1141:45"><expr pos:start="1141:44" pos:end="1141:45"><name pos:start="1141:44" pos:end="1141:45">ra</name></expr></argument>, <argument pos:start="1141:48" pos:end="1141:49"><expr pos:start="1141:48" pos:end="1141:49"><name pos:start="1141:48" pos:end="1141:49">rb</name></expr></argument>, <argument pos:start="1141:52" pos:end="1141:53"><expr pos:start="1141:52" pos:end="1141:53"><name pos:start="1141:52" pos:end="1141:53">rc</name></expr></argument>, <argument pos:start="1141:56" pos:end="1141:60"><expr pos:start="1141:56" pos:end="1141:60"><name pos:start="1141:56" pos:end="1141:60">islit</name></expr></argument>, <argument pos:start="1141:63" pos:end="1141:65"><expr pos:start="1141:63" pos:end="1141:65"><name pos:start="1141:63" pos:end="1141:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1143:13" pos:end="1143:18">break;</break>

        <case pos:start="1145:9" pos:end="1145:18">case <expr pos:start="1145:14" pos:end="1145:17"><literal type="number" pos:start="1145:14" pos:end="1145:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="1147:13" pos:end="1147:23">/* INSLL */</comment>

            <expr_stmt pos:start="1149:13" pos:end="1149:61"><expr pos:start="1149:13" pos:end="1149:60"><call pos:start="1149:13" pos:end="1149:60"><name pos:start="1149:13" pos:end="1149:22">gen_arith3</name><argument_list pos:start="1149:23" pos:end="1149:60">(<argument pos:start="1149:24" pos:end="1149:35"><expr pos:start="1149:24" pos:end="1149:35"><name pos:start="1149:24" pos:end="1149:35">helper_insll</name></expr></argument>, <argument pos:start="1149:38" pos:end="1149:39"><expr pos:start="1149:38" pos:end="1149:39"><name pos:start="1149:38" pos:end="1149:39">ra</name></expr></argument>, <argument pos:start="1149:42" pos:end="1149:43"><expr pos:start="1149:42" pos:end="1149:43"><name pos:start="1149:42" pos:end="1149:43">rb</name></expr></argument>, <argument pos:start="1149:46" pos:end="1149:47"><expr pos:start="1149:46" pos:end="1149:47"><name pos:start="1149:46" pos:end="1149:47">rc</name></expr></argument>, <argument pos:start="1149:50" pos:end="1149:54"><expr pos:start="1149:50" pos:end="1149:54"><name pos:start="1149:50" pos:end="1149:54">islit</name></expr></argument>, <argument pos:start="1149:57" pos:end="1149:59"><expr pos:start="1149:57" pos:end="1149:59"><name pos:start="1149:57" pos:end="1149:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1151:13" pos:end="1151:18">break;</break>

        <case pos:start="1153:9" pos:end="1153:18">case <expr pos:start="1153:14" pos:end="1153:17"><literal type="number" pos:start="1153:14" pos:end="1153:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1155:13" pos:end="1155:21">/* ZAP */</comment>

            <expr_stmt pos:start="1157:13" pos:end="1157:59"><expr pos:start="1157:13" pos:end="1157:58"><call pos:start="1157:13" pos:end="1157:58"><name pos:start="1157:13" pos:end="1157:22">gen_arith3</name><argument_list pos:start="1157:23" pos:end="1157:58">(<argument pos:start="1157:24" pos:end="1157:33"><expr pos:start="1157:24" pos:end="1157:33"><name pos:start="1157:24" pos:end="1157:33">helper_zap</name></expr></argument>, <argument pos:start="1157:36" pos:end="1157:37"><expr pos:start="1157:36" pos:end="1157:37"><name pos:start="1157:36" pos:end="1157:37">ra</name></expr></argument>, <argument pos:start="1157:40" pos:end="1157:41"><expr pos:start="1157:40" pos:end="1157:41"><name pos:start="1157:40" pos:end="1157:41">rb</name></expr></argument>, <argument pos:start="1157:44" pos:end="1157:45"><expr pos:start="1157:44" pos:end="1157:45"><name pos:start="1157:44" pos:end="1157:45">rc</name></expr></argument>, <argument pos:start="1157:48" pos:end="1157:52"><expr pos:start="1157:48" pos:end="1157:52"><name pos:start="1157:48" pos:end="1157:52">islit</name></expr></argument>, <argument pos:start="1157:55" pos:end="1157:57"><expr pos:start="1157:55" pos:end="1157:57"><name pos:start="1157:55" pos:end="1157:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1159:13" pos:end="1159:18">break;</break>

        <case pos:start="1161:9" pos:end="1161:18">case <expr pos:start="1161:14" pos:end="1161:17"><literal type="number" pos:start="1161:14" pos:end="1161:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="1163:13" pos:end="1163:24">/* ZAPNOT */</comment>

            <expr_stmt pos:start="1165:13" pos:end="1165:62"><expr pos:start="1165:13" pos:end="1165:61"><call pos:start="1165:13" pos:end="1165:61"><name pos:start="1165:13" pos:end="1165:22">gen_arith3</name><argument_list pos:start="1165:23" pos:end="1165:61">(<argument pos:start="1165:24" pos:end="1165:36"><expr pos:start="1165:24" pos:end="1165:36"><name pos:start="1165:24" pos:end="1165:36">helper_zapnot</name></expr></argument>, <argument pos:start="1165:39" pos:end="1165:40"><expr pos:start="1165:39" pos:end="1165:40"><name pos:start="1165:39" pos:end="1165:40">ra</name></expr></argument>, <argument pos:start="1165:43" pos:end="1165:44"><expr pos:start="1165:43" pos:end="1165:44"><name pos:start="1165:43" pos:end="1165:44">rb</name></expr></argument>, <argument pos:start="1165:47" pos:end="1165:48"><expr pos:start="1165:47" pos:end="1165:48"><name pos:start="1165:47" pos:end="1165:48">rc</name></expr></argument>, <argument pos:start="1165:51" pos:end="1165:55"><expr pos:start="1165:51" pos:end="1165:55"><name pos:start="1165:51" pos:end="1165:55">islit</name></expr></argument>, <argument pos:start="1165:58" pos:end="1165:60"><expr pos:start="1165:58" pos:end="1165:60"><name pos:start="1165:58" pos:end="1165:60">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1167:13" pos:end="1167:18">break;</break>

        <case pos:start="1169:9" pos:end="1169:18">case <expr pos:start="1169:14" pos:end="1169:17"><literal type="number" pos:start="1169:14" pos:end="1169:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="1171:13" pos:end="1171:23">/* MSKQL */</comment>

            <expr_stmt pos:start="1173:13" pos:end="1173:61"><expr pos:start="1173:13" pos:end="1173:60"><call pos:start="1173:13" pos:end="1173:60"><name pos:start="1173:13" pos:end="1173:22">gen_arith3</name><argument_list pos:start="1173:23" pos:end="1173:60">(<argument pos:start="1173:24" pos:end="1173:35"><expr pos:start="1173:24" pos:end="1173:35"><name pos:start="1173:24" pos:end="1173:35">helper_mskql</name></expr></argument>, <argument pos:start="1173:38" pos:end="1173:39"><expr pos:start="1173:38" pos:end="1173:39"><name pos:start="1173:38" pos:end="1173:39">ra</name></expr></argument>, <argument pos:start="1173:42" pos:end="1173:43"><expr pos:start="1173:42" pos:end="1173:43"><name pos:start="1173:42" pos:end="1173:43">rb</name></expr></argument>, <argument pos:start="1173:46" pos:end="1173:47"><expr pos:start="1173:46" pos:end="1173:47"><name pos:start="1173:46" pos:end="1173:47">rc</name></expr></argument>, <argument pos:start="1173:50" pos:end="1173:54"><expr pos:start="1173:50" pos:end="1173:54"><name pos:start="1173:50" pos:end="1173:54">islit</name></expr></argument>, <argument pos:start="1173:57" pos:end="1173:59"><expr pos:start="1173:57" pos:end="1173:59"><name pos:start="1173:57" pos:end="1173:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1175:13" pos:end="1175:18">break;</break>

        <case pos:start="1177:9" pos:end="1177:18">case <expr pos:start="1177:14" pos:end="1177:17"><literal type="number" pos:start="1177:14" pos:end="1177:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="1179:13" pos:end="1179:21">/* SRL */</comment>

            <if_stmt pos:start="1181:13" pos:end="1205:13"><if pos:start="1181:13" pos:end="1205:13">if <condition pos:start="1181:16" pos:end="1181:33">(<expr pos:start="1181:17" pos:end="1181:32"><call pos:start="1181:17" pos:end="1181:32"><name pos:start="1181:17" pos:end="1181:22">likely</name><argument_list pos:start="1181:23" pos:end="1181:32">(<argument pos:start="1181:24" pos:end="1181:31"><expr pos:start="1181:24" pos:end="1181:31"><name pos:start="1181:24" pos:end="1181:25">rc</name> <operator pos:start="1181:27" pos:end="1181:28">!=</operator> <literal type="number" pos:start="1181:30" pos:end="1181:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1181:35" pos:end="1205:13">{<block_content pos:start="1183:17" pos:end="1203:52">

                <if_stmt pos:start="1183:17" pos:end="1203:52"><if pos:start="1183:17" pos:end="1201:17">if <condition pos:start="1183:20" pos:end="1183:29">(<expr pos:start="1183:21" pos:end="1183:28"><name pos:start="1183:21" pos:end="1183:22">ra</name> <operator pos:start="1183:24" pos:end="1183:25">!=</operator> <literal type="number" pos:start="1183:27" pos:end="1183:28">31</literal></expr>)</condition> <block pos:start="1183:31" pos:end="1201:17">{<block_content pos:start="1185:21" pos:end="1199:21">

                    <if_stmt pos:start="1185:21" pos:end="1199:21"><if pos:start="1185:21" pos:end="1187:77">if <condition pos:start="1185:24" pos:end="1185:30">(<expr pos:start="1185:25" pos:end="1185:29"><name pos:start="1185:25" pos:end="1185:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1187:25" pos:end="1187:77"><block_content pos:start="1187:25" pos:end="1187:77">

                        <expr_stmt pos:start="1187:25" pos:end="1187:77"><expr pos:start="1187:25" pos:end="1187:76"><call pos:start="1187:25" pos:end="1187:76"><name pos:start="1187:25" pos:end="1187:40">tcg_gen_shri_i64</name><argument_list pos:start="1187:41" pos:end="1187:76">(<argument pos:start="1187:42" pos:end="1187:51"><expr pos:start="1187:42" pos:end="1187:51"><name pos:start="1187:42" pos:end="1187:51"><name pos:start="1187:42" pos:end="1187:47">cpu_ir</name><index pos:start="1187:48" pos:end="1187:51">[<expr pos:start="1187:49" pos:end="1187:50"><name pos:start="1187:49" pos:end="1187:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1187:54" pos:end="1187:63"><expr pos:start="1187:54" pos:end="1187:63"><name pos:start="1187:54" pos:end="1187:63"><name pos:start="1187:54" pos:end="1187:59">cpu_ir</name><index pos:start="1187:60" pos:end="1187:63">[<expr pos:start="1187:61" pos:end="1187:62"><name pos:start="1187:61" pos:end="1187:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1187:66" pos:end="1187:75"><expr pos:start="1187:66" pos:end="1187:75"><name pos:start="1187:66" pos:end="1187:68">lit</name> <operator pos:start="1187:70" pos:end="1187:70">&amp;</operator> <literal type="number" pos:start="1187:72" pos:end="1187:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1189:21" pos:end="1199:21">else <block pos:start="1189:26" pos:end="1199:21">{<block_content pos:start="1191:25" pos:end="1197:45">

                        <decl_stmt pos:start="1191:25" pos:end="1191:64"><decl pos:start="1191:25" pos:end="1191:63"><type pos:start="1191:25" pos:end="1191:28"><name pos:start="1191:25" pos:end="1191:28">TCGv</name></type> <name pos:start="1191:30" pos:end="1191:34">shift</name> <init pos:start="1191:36" pos:end="1191:63">= <expr pos:start="1191:38" pos:end="1191:63"><call pos:start="1191:38" pos:end="1191:63"><name pos:start="1191:38" pos:end="1191:49">tcg_temp_new</name><argument_list pos:start="1191:50" pos:end="1191:63">(<argument pos:start="1191:51" pos:end="1191:62"><expr pos:start="1191:51" pos:end="1191:62"><name pos:start="1191:51" pos:end="1191:62">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1193:25" pos:end="1193:66"><expr pos:start="1193:25" pos:end="1193:65"><call pos:start="1193:25" pos:end="1193:65"><name pos:start="1193:25" pos:end="1193:40">tcg_gen_andi_i64</name><argument_list pos:start="1193:41" pos:end="1193:65">(<argument pos:start="1193:42" pos:end="1193:46"><expr pos:start="1193:42" pos:end="1193:46"><name pos:start="1193:42" pos:end="1193:46">shift</name></expr></argument>, <argument pos:start="1193:49" pos:end="1193:58"><expr pos:start="1193:49" pos:end="1193:58"><name pos:start="1193:49" pos:end="1193:58"><name pos:start="1193:49" pos:end="1193:54">cpu_ir</name><index pos:start="1193:55" pos:end="1193:58">[<expr pos:start="1193:56" pos:end="1193:57"><name pos:start="1193:56" pos:end="1193:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1193:61" pos:end="1193:64"><expr pos:start="1193:61" pos:end="1193:64"><literal type="number" pos:start="1193:61" pos:end="1193:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1195:25" pos:end="1195:71"><expr pos:start="1195:25" pos:end="1195:70"><call pos:start="1195:25" pos:end="1195:70"><name pos:start="1195:25" pos:end="1195:39">tcg_gen_shr_i64</name><argument_list pos:start="1195:40" pos:end="1195:70">(<argument pos:start="1195:41" pos:end="1195:50"><expr pos:start="1195:41" pos:end="1195:50"><name pos:start="1195:41" pos:end="1195:50"><name pos:start="1195:41" pos:end="1195:46">cpu_ir</name><index pos:start="1195:47" pos:end="1195:50">[<expr pos:start="1195:48" pos:end="1195:49"><name pos:start="1195:48" pos:end="1195:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1195:53" pos:end="1195:62"><expr pos:start="1195:53" pos:end="1195:62"><name pos:start="1195:53" pos:end="1195:62"><name pos:start="1195:53" pos:end="1195:58">cpu_ir</name><index pos:start="1195:59" pos:end="1195:62">[<expr pos:start="1195:60" pos:end="1195:61"><name pos:start="1195:60" pos:end="1195:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1195:65" pos:end="1195:69"><expr pos:start="1195:65" pos:end="1195:69"><name pos:start="1195:65" pos:end="1195:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1197:25" pos:end="1197:45"><expr pos:start="1197:25" pos:end="1197:44"><call pos:start="1197:25" pos:end="1197:44"><name pos:start="1197:25" pos:end="1197:37">tcg_temp_free</name><argument_list pos:start="1197:38" pos:end="1197:44">(<argument pos:start="1197:39" pos:end="1197:43"><expr pos:start="1197:39" pos:end="1197:43"><name pos:start="1197:39" pos:end="1197:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1201:19" pos:end="1203:52">else<block type="pseudo" pos:start="1203:21" pos:end="1203:52"><block_content pos:start="1203:21" pos:end="1203:52">

                    <expr_stmt pos:start="1203:21" pos:end="1203:52"><expr pos:start="1203:21" pos:end="1203:51"><call pos:start="1203:21" pos:end="1203:51"><name pos:start="1203:21" pos:end="1203:36">tcg_gen_movi_i64</name><argument_list pos:start="1203:37" pos:end="1203:51">(<argument pos:start="1203:38" pos:end="1203:47"><expr pos:start="1203:38" pos:end="1203:47"><name pos:start="1203:38" pos:end="1203:47"><name pos:start="1203:38" pos:end="1203:43">cpu_ir</name><index pos:start="1203:44" pos:end="1203:47">[<expr pos:start="1203:45" pos:end="1203:46"><name pos:start="1203:45" pos:end="1203:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1203:50" pos:end="1203:50"><expr pos:start="1203:50" pos:end="1203:50"><literal type="number" pos:start="1203:50" pos:end="1203:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1207:13" pos:end="1207:18">break;</break>

        <case pos:start="1209:9" pos:end="1209:18">case <expr pos:start="1209:14" pos:end="1209:17"><literal type="number" pos:start="1209:14" pos:end="1209:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="1211:13" pos:end="1211:23">/* EXTQL */</comment>

            <expr_stmt pos:start="1213:13" pos:end="1213:52"><expr pos:start="1213:13" pos:end="1213:51"><call pos:start="1213:13" pos:end="1213:51"><name pos:start="1213:13" pos:end="1213:21">gen_ext_l</name><argument_list pos:start="1213:22" pos:end="1213:51">(<argument pos:start="1213:23" pos:end="1213:26"><expr pos:start="1213:23" pos:end="1213:26"><name pos:start="1213:23" pos:end="1213:26">NULL</name></expr></argument>, <argument pos:start="1213:29" pos:end="1213:30"><expr pos:start="1213:29" pos:end="1213:30"><name pos:start="1213:29" pos:end="1213:30">ra</name></expr></argument>, <argument pos:start="1213:33" pos:end="1213:34"><expr pos:start="1213:33" pos:end="1213:34"><name pos:start="1213:33" pos:end="1213:34">rb</name></expr></argument>, <argument pos:start="1213:37" pos:end="1213:38"><expr pos:start="1213:37" pos:end="1213:38"><name pos:start="1213:37" pos:end="1213:38">rc</name></expr></argument>, <argument pos:start="1213:41" pos:end="1213:45"><expr pos:start="1213:41" pos:end="1213:45"><name pos:start="1213:41" pos:end="1213:45">islit</name></expr></argument>, <argument pos:start="1213:48" pos:end="1213:50"><expr pos:start="1213:48" pos:end="1213:50"><name pos:start="1213:48" pos:end="1213:50">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1215:13" pos:end="1215:18">break;</break>

        <case pos:start="1217:9" pos:end="1217:18">case <expr pos:start="1217:14" pos:end="1217:17"><literal type="number" pos:start="1217:14" pos:end="1217:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="1219:13" pos:end="1219:21">/* SLL */</comment>

            <if_stmt pos:start="1221:13" pos:end="1245:13"><if pos:start="1221:13" pos:end="1245:13">if <condition pos:start="1221:16" pos:end="1221:33">(<expr pos:start="1221:17" pos:end="1221:32"><call pos:start="1221:17" pos:end="1221:32"><name pos:start="1221:17" pos:end="1221:22">likely</name><argument_list pos:start="1221:23" pos:end="1221:32">(<argument pos:start="1221:24" pos:end="1221:31"><expr pos:start="1221:24" pos:end="1221:31"><name pos:start="1221:24" pos:end="1221:25">rc</name> <operator pos:start="1221:27" pos:end="1221:28">!=</operator> <literal type="number" pos:start="1221:30" pos:end="1221:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1221:35" pos:end="1245:13">{<block_content pos:start="1223:17" pos:end="1243:52">

                <if_stmt pos:start="1223:17" pos:end="1243:52"><if pos:start="1223:17" pos:end="1241:17">if <condition pos:start="1223:20" pos:end="1223:29">(<expr pos:start="1223:21" pos:end="1223:28"><name pos:start="1223:21" pos:end="1223:22">ra</name> <operator pos:start="1223:24" pos:end="1223:25">!=</operator> <literal type="number" pos:start="1223:27" pos:end="1223:28">31</literal></expr>)</condition> <block pos:start="1223:31" pos:end="1241:17">{<block_content pos:start="1225:21" pos:end="1239:21">

                    <if_stmt pos:start="1225:21" pos:end="1239:21"><if pos:start="1225:21" pos:end="1227:77">if <condition pos:start="1225:24" pos:end="1225:30">(<expr pos:start="1225:25" pos:end="1225:29"><name pos:start="1225:25" pos:end="1225:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1227:25" pos:end="1227:77"><block_content pos:start="1227:25" pos:end="1227:77">

                        <expr_stmt pos:start="1227:25" pos:end="1227:77"><expr pos:start="1227:25" pos:end="1227:76"><call pos:start="1227:25" pos:end="1227:76"><name pos:start="1227:25" pos:end="1227:40">tcg_gen_shli_i64</name><argument_list pos:start="1227:41" pos:end="1227:76">(<argument pos:start="1227:42" pos:end="1227:51"><expr pos:start="1227:42" pos:end="1227:51"><name pos:start="1227:42" pos:end="1227:51"><name pos:start="1227:42" pos:end="1227:47">cpu_ir</name><index pos:start="1227:48" pos:end="1227:51">[<expr pos:start="1227:49" pos:end="1227:50"><name pos:start="1227:49" pos:end="1227:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1227:54" pos:end="1227:63"><expr pos:start="1227:54" pos:end="1227:63"><name pos:start="1227:54" pos:end="1227:63"><name pos:start="1227:54" pos:end="1227:59">cpu_ir</name><index pos:start="1227:60" pos:end="1227:63">[<expr pos:start="1227:61" pos:end="1227:62"><name pos:start="1227:61" pos:end="1227:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1227:66" pos:end="1227:75"><expr pos:start="1227:66" pos:end="1227:75"><name pos:start="1227:66" pos:end="1227:68">lit</name> <operator pos:start="1227:70" pos:end="1227:70">&amp;</operator> <literal type="number" pos:start="1227:72" pos:end="1227:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1229:21" pos:end="1239:21">else <block pos:start="1229:26" pos:end="1239:21">{<block_content pos:start="1231:25" pos:end="1237:45">

                        <decl_stmt pos:start="1231:25" pos:end="1231:64"><decl pos:start="1231:25" pos:end="1231:63"><type pos:start="1231:25" pos:end="1231:28"><name pos:start="1231:25" pos:end="1231:28">TCGv</name></type> <name pos:start="1231:30" pos:end="1231:34">shift</name> <init pos:start="1231:36" pos:end="1231:63">= <expr pos:start="1231:38" pos:end="1231:63"><call pos:start="1231:38" pos:end="1231:63"><name pos:start="1231:38" pos:end="1231:49">tcg_temp_new</name><argument_list pos:start="1231:50" pos:end="1231:63">(<argument pos:start="1231:51" pos:end="1231:62"><expr pos:start="1231:51" pos:end="1231:62"><name pos:start="1231:51" pos:end="1231:62">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1233:25" pos:end="1233:66"><expr pos:start="1233:25" pos:end="1233:65"><call pos:start="1233:25" pos:end="1233:65"><name pos:start="1233:25" pos:end="1233:40">tcg_gen_andi_i64</name><argument_list pos:start="1233:41" pos:end="1233:65">(<argument pos:start="1233:42" pos:end="1233:46"><expr pos:start="1233:42" pos:end="1233:46"><name pos:start="1233:42" pos:end="1233:46">shift</name></expr></argument>, <argument pos:start="1233:49" pos:end="1233:58"><expr pos:start="1233:49" pos:end="1233:58"><name pos:start="1233:49" pos:end="1233:58"><name pos:start="1233:49" pos:end="1233:54">cpu_ir</name><index pos:start="1233:55" pos:end="1233:58">[<expr pos:start="1233:56" pos:end="1233:57"><name pos:start="1233:56" pos:end="1233:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1233:61" pos:end="1233:64"><expr pos:start="1233:61" pos:end="1233:64"><literal type="number" pos:start="1233:61" pos:end="1233:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1235:25" pos:end="1235:71"><expr pos:start="1235:25" pos:end="1235:70"><call pos:start="1235:25" pos:end="1235:70"><name pos:start="1235:25" pos:end="1235:39">tcg_gen_shl_i64</name><argument_list pos:start="1235:40" pos:end="1235:70">(<argument pos:start="1235:41" pos:end="1235:50"><expr pos:start="1235:41" pos:end="1235:50"><name pos:start="1235:41" pos:end="1235:50"><name pos:start="1235:41" pos:end="1235:46">cpu_ir</name><index pos:start="1235:47" pos:end="1235:50">[<expr pos:start="1235:48" pos:end="1235:49"><name pos:start="1235:48" pos:end="1235:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1235:53" pos:end="1235:62"><expr pos:start="1235:53" pos:end="1235:62"><name pos:start="1235:53" pos:end="1235:62"><name pos:start="1235:53" pos:end="1235:58">cpu_ir</name><index pos:start="1235:59" pos:end="1235:62">[<expr pos:start="1235:60" pos:end="1235:61"><name pos:start="1235:60" pos:end="1235:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1235:65" pos:end="1235:69"><expr pos:start="1235:65" pos:end="1235:69"><name pos:start="1235:65" pos:end="1235:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1237:25" pos:end="1237:45"><expr pos:start="1237:25" pos:end="1237:44"><call pos:start="1237:25" pos:end="1237:44"><name pos:start="1237:25" pos:end="1237:37">tcg_temp_free</name><argument_list pos:start="1237:38" pos:end="1237:44">(<argument pos:start="1237:39" pos:end="1237:43"><expr pos:start="1237:39" pos:end="1237:43"><name pos:start="1237:39" pos:end="1237:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1241:19" pos:end="1243:52">else<block type="pseudo" pos:start="1243:21" pos:end="1243:52"><block_content pos:start="1243:21" pos:end="1243:52">

                    <expr_stmt pos:start="1243:21" pos:end="1243:52"><expr pos:start="1243:21" pos:end="1243:51"><call pos:start="1243:21" pos:end="1243:51"><name pos:start="1243:21" pos:end="1243:36">tcg_gen_movi_i64</name><argument_list pos:start="1243:37" pos:end="1243:51">(<argument pos:start="1243:38" pos:end="1243:47"><expr pos:start="1243:38" pos:end="1243:47"><name pos:start="1243:38" pos:end="1243:47"><name pos:start="1243:38" pos:end="1243:43">cpu_ir</name><index pos:start="1243:44" pos:end="1243:47">[<expr pos:start="1243:45" pos:end="1243:46"><name pos:start="1243:45" pos:end="1243:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1243:50" pos:end="1243:50"><expr pos:start="1243:50" pos:end="1243:50"><literal type="number" pos:start="1243:50" pos:end="1243:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1247:13" pos:end="1247:18">break;</break>

        <case pos:start="1249:9" pos:end="1249:18">case <expr pos:start="1249:14" pos:end="1249:17"><literal type="number" pos:start="1249:14" pos:end="1249:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="1251:13" pos:end="1251:23">/* INSQL */</comment>

            <expr_stmt pos:start="1253:13" pos:end="1253:61"><expr pos:start="1253:13" pos:end="1253:60"><call pos:start="1253:13" pos:end="1253:60"><name pos:start="1253:13" pos:end="1253:22">gen_arith3</name><argument_list pos:start="1253:23" pos:end="1253:60">(<argument pos:start="1253:24" pos:end="1253:35"><expr pos:start="1253:24" pos:end="1253:35"><name pos:start="1253:24" pos:end="1253:35">helper_insql</name></expr></argument>, <argument pos:start="1253:38" pos:end="1253:39"><expr pos:start="1253:38" pos:end="1253:39"><name pos:start="1253:38" pos:end="1253:39">ra</name></expr></argument>, <argument pos:start="1253:42" pos:end="1253:43"><expr pos:start="1253:42" pos:end="1253:43"><name pos:start="1253:42" pos:end="1253:43">rb</name></expr></argument>, <argument pos:start="1253:46" pos:end="1253:47"><expr pos:start="1253:46" pos:end="1253:47"><name pos:start="1253:46" pos:end="1253:47">rc</name></expr></argument>, <argument pos:start="1253:50" pos:end="1253:54"><expr pos:start="1253:50" pos:end="1253:54"><name pos:start="1253:50" pos:end="1253:54">islit</name></expr></argument>, <argument pos:start="1253:57" pos:end="1253:59"><expr pos:start="1253:57" pos:end="1253:59"><name pos:start="1253:57" pos:end="1253:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1255:13" pos:end="1255:18">break;</break>

        <case pos:start="1257:9" pos:end="1257:18">case <expr pos:start="1257:14" pos:end="1257:17"><literal type="number" pos:start="1257:14" pos:end="1257:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1259:13" pos:end="1259:21">/* SRA */</comment>

            <if_stmt pos:start="1261:13" pos:end="1285:13"><if pos:start="1261:13" pos:end="1285:13">if <condition pos:start="1261:16" pos:end="1261:33">(<expr pos:start="1261:17" pos:end="1261:32"><call pos:start="1261:17" pos:end="1261:32"><name pos:start="1261:17" pos:end="1261:22">likely</name><argument_list pos:start="1261:23" pos:end="1261:32">(<argument pos:start="1261:24" pos:end="1261:31"><expr pos:start="1261:24" pos:end="1261:31"><name pos:start="1261:24" pos:end="1261:25">rc</name> <operator pos:start="1261:27" pos:end="1261:28">!=</operator> <literal type="number" pos:start="1261:30" pos:end="1261:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1261:35" pos:end="1285:13">{<block_content pos:start="1263:17" pos:end="1283:52">

                <if_stmt pos:start="1263:17" pos:end="1283:52"><if pos:start="1263:17" pos:end="1281:17">if <condition pos:start="1263:20" pos:end="1263:29">(<expr pos:start="1263:21" pos:end="1263:28"><name pos:start="1263:21" pos:end="1263:22">ra</name> <operator pos:start="1263:24" pos:end="1263:25">!=</operator> <literal type="number" pos:start="1263:27" pos:end="1263:28">31</literal></expr>)</condition> <block pos:start="1263:31" pos:end="1281:17">{<block_content pos:start="1265:21" pos:end="1279:21">

                    <if_stmt pos:start="1265:21" pos:end="1279:21"><if pos:start="1265:21" pos:end="1267:77">if <condition pos:start="1265:24" pos:end="1265:30">(<expr pos:start="1265:25" pos:end="1265:29"><name pos:start="1265:25" pos:end="1265:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1267:25" pos:end="1267:77"><block_content pos:start="1267:25" pos:end="1267:77">

                        <expr_stmt pos:start="1267:25" pos:end="1267:77"><expr pos:start="1267:25" pos:end="1267:76"><call pos:start="1267:25" pos:end="1267:76"><name pos:start="1267:25" pos:end="1267:40">tcg_gen_sari_i64</name><argument_list pos:start="1267:41" pos:end="1267:76">(<argument pos:start="1267:42" pos:end="1267:51"><expr pos:start="1267:42" pos:end="1267:51"><name pos:start="1267:42" pos:end="1267:51"><name pos:start="1267:42" pos:end="1267:47">cpu_ir</name><index pos:start="1267:48" pos:end="1267:51">[<expr pos:start="1267:49" pos:end="1267:50"><name pos:start="1267:49" pos:end="1267:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1267:54" pos:end="1267:63"><expr pos:start="1267:54" pos:end="1267:63"><name pos:start="1267:54" pos:end="1267:63"><name pos:start="1267:54" pos:end="1267:59">cpu_ir</name><index pos:start="1267:60" pos:end="1267:63">[<expr pos:start="1267:61" pos:end="1267:62"><name pos:start="1267:61" pos:end="1267:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1267:66" pos:end="1267:75"><expr pos:start="1267:66" pos:end="1267:75"><name pos:start="1267:66" pos:end="1267:68">lit</name> <operator pos:start="1267:70" pos:end="1267:70">&amp;</operator> <literal type="number" pos:start="1267:72" pos:end="1267:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1269:21" pos:end="1279:21">else <block pos:start="1269:26" pos:end="1279:21">{<block_content pos:start="1271:25" pos:end="1277:45">

                        <decl_stmt pos:start="1271:25" pos:end="1271:64"><decl pos:start="1271:25" pos:end="1271:63"><type pos:start="1271:25" pos:end="1271:28"><name pos:start="1271:25" pos:end="1271:28">TCGv</name></type> <name pos:start="1271:30" pos:end="1271:34">shift</name> <init pos:start="1271:36" pos:end="1271:63">= <expr pos:start="1271:38" pos:end="1271:63"><call pos:start="1271:38" pos:end="1271:63"><name pos:start="1271:38" pos:end="1271:49">tcg_temp_new</name><argument_list pos:start="1271:50" pos:end="1271:63">(<argument pos:start="1271:51" pos:end="1271:62"><expr pos:start="1271:51" pos:end="1271:62"><name pos:start="1271:51" pos:end="1271:62">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1273:25" pos:end="1273:66"><expr pos:start="1273:25" pos:end="1273:65"><call pos:start="1273:25" pos:end="1273:65"><name pos:start="1273:25" pos:end="1273:40">tcg_gen_andi_i64</name><argument_list pos:start="1273:41" pos:end="1273:65">(<argument pos:start="1273:42" pos:end="1273:46"><expr pos:start="1273:42" pos:end="1273:46"><name pos:start="1273:42" pos:end="1273:46">shift</name></expr></argument>, <argument pos:start="1273:49" pos:end="1273:58"><expr pos:start="1273:49" pos:end="1273:58"><name pos:start="1273:49" pos:end="1273:58"><name pos:start="1273:49" pos:end="1273:54">cpu_ir</name><index pos:start="1273:55" pos:end="1273:58">[<expr pos:start="1273:56" pos:end="1273:57"><name pos:start="1273:56" pos:end="1273:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1273:61" pos:end="1273:64"><expr pos:start="1273:61" pos:end="1273:64"><literal type="number" pos:start="1273:61" pos:end="1273:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1275:25" pos:end="1275:71"><expr pos:start="1275:25" pos:end="1275:70"><call pos:start="1275:25" pos:end="1275:70"><name pos:start="1275:25" pos:end="1275:39">tcg_gen_sar_i64</name><argument_list pos:start="1275:40" pos:end="1275:70">(<argument pos:start="1275:41" pos:end="1275:50"><expr pos:start="1275:41" pos:end="1275:50"><name pos:start="1275:41" pos:end="1275:50"><name pos:start="1275:41" pos:end="1275:46">cpu_ir</name><index pos:start="1275:47" pos:end="1275:50">[<expr pos:start="1275:48" pos:end="1275:49"><name pos:start="1275:48" pos:end="1275:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1275:53" pos:end="1275:62"><expr pos:start="1275:53" pos:end="1275:62"><name pos:start="1275:53" pos:end="1275:62"><name pos:start="1275:53" pos:end="1275:58">cpu_ir</name><index pos:start="1275:59" pos:end="1275:62">[<expr pos:start="1275:60" pos:end="1275:61"><name pos:start="1275:60" pos:end="1275:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1275:65" pos:end="1275:69"><expr pos:start="1275:65" pos:end="1275:69"><name pos:start="1275:65" pos:end="1275:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1277:25" pos:end="1277:45"><expr pos:start="1277:25" pos:end="1277:44"><call pos:start="1277:25" pos:end="1277:44"><name pos:start="1277:25" pos:end="1277:37">tcg_temp_free</name><argument_list pos:start="1277:38" pos:end="1277:44">(<argument pos:start="1277:39" pos:end="1277:43"><expr pos:start="1277:39" pos:end="1277:43"><name pos:start="1277:39" pos:end="1277:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1281:19" pos:end="1283:52">else<block type="pseudo" pos:start="1283:21" pos:end="1283:52"><block_content pos:start="1283:21" pos:end="1283:52">

                    <expr_stmt pos:start="1283:21" pos:end="1283:52"><expr pos:start="1283:21" pos:end="1283:51"><call pos:start="1283:21" pos:end="1283:51"><name pos:start="1283:21" pos:end="1283:36">tcg_gen_movi_i64</name><argument_list pos:start="1283:37" pos:end="1283:51">(<argument pos:start="1283:38" pos:end="1283:47"><expr pos:start="1283:38" pos:end="1283:47"><name pos:start="1283:38" pos:end="1283:47"><name pos:start="1283:38" pos:end="1283:43">cpu_ir</name><index pos:start="1283:44" pos:end="1283:47">[<expr pos:start="1283:45" pos:end="1283:46"><name pos:start="1283:45" pos:end="1283:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1283:50" pos:end="1283:50"><expr pos:start="1283:50" pos:end="1283:50"><literal type="number" pos:start="1283:50" pos:end="1283:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1287:13" pos:end="1287:18">break;</break>

        <case pos:start="1289:9" pos:end="1289:18">case <expr pos:start="1289:14" pos:end="1289:17"><literal type="number" pos:start="1289:14" pos:end="1289:17">0x52</literal></expr>:</case>

            <comment type="block" pos:start="1291:13" pos:end="1291:23">/* MSKWH */</comment>

            <expr_stmt pos:start="1293:13" pos:end="1293:61"><expr pos:start="1293:13" pos:end="1293:60"><call pos:start="1293:13" pos:end="1293:60"><name pos:start="1293:13" pos:end="1293:22">gen_arith3</name><argument_list pos:start="1293:23" pos:end="1293:60">(<argument pos:start="1293:24" pos:end="1293:35"><expr pos:start="1293:24" pos:end="1293:35"><name pos:start="1293:24" pos:end="1293:35">helper_mskwh</name></expr></argument>, <argument pos:start="1293:38" pos:end="1293:39"><expr pos:start="1293:38" pos:end="1293:39"><name pos:start="1293:38" pos:end="1293:39">ra</name></expr></argument>, <argument pos:start="1293:42" pos:end="1293:43"><expr pos:start="1293:42" pos:end="1293:43"><name pos:start="1293:42" pos:end="1293:43">rb</name></expr></argument>, <argument pos:start="1293:46" pos:end="1293:47"><expr pos:start="1293:46" pos:end="1293:47"><name pos:start="1293:46" pos:end="1293:47">rc</name></expr></argument>, <argument pos:start="1293:50" pos:end="1293:54"><expr pos:start="1293:50" pos:end="1293:54"><name pos:start="1293:50" pos:end="1293:54">islit</name></expr></argument>, <argument pos:start="1293:57" pos:end="1293:59"><expr pos:start="1293:57" pos:end="1293:59"><name pos:start="1293:57" pos:end="1293:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1295:13" pos:end="1295:18">break;</break>

        <case pos:start="1297:9" pos:end="1297:18">case <expr pos:start="1297:14" pos:end="1297:17"><literal type="number" pos:start="1297:14" pos:end="1297:17">0x57</literal></expr>:</case>

            <comment type="block" pos:start="1299:13" pos:end="1299:23">/* INSWH */</comment>

            <expr_stmt pos:start="1301:13" pos:end="1301:61"><expr pos:start="1301:13" pos:end="1301:60"><call pos:start="1301:13" pos:end="1301:60"><name pos:start="1301:13" pos:end="1301:22">gen_arith3</name><argument_list pos:start="1301:23" pos:end="1301:60">(<argument pos:start="1301:24" pos:end="1301:35"><expr pos:start="1301:24" pos:end="1301:35"><name pos:start="1301:24" pos:end="1301:35">helper_inswh</name></expr></argument>, <argument pos:start="1301:38" pos:end="1301:39"><expr pos:start="1301:38" pos:end="1301:39"><name pos:start="1301:38" pos:end="1301:39">ra</name></expr></argument>, <argument pos:start="1301:42" pos:end="1301:43"><expr pos:start="1301:42" pos:end="1301:43"><name pos:start="1301:42" pos:end="1301:43">rb</name></expr></argument>, <argument pos:start="1301:46" pos:end="1301:47"><expr pos:start="1301:46" pos:end="1301:47"><name pos:start="1301:46" pos:end="1301:47">rc</name></expr></argument>, <argument pos:start="1301:50" pos:end="1301:54"><expr pos:start="1301:50" pos:end="1301:54"><name pos:start="1301:50" pos:end="1301:54">islit</name></expr></argument>, <argument pos:start="1301:57" pos:end="1301:59"><expr pos:start="1301:57" pos:end="1301:59"><name pos:start="1301:57" pos:end="1301:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1303:13" pos:end="1303:18">break;</break>

        <case pos:start="1305:9" pos:end="1305:18">case <expr pos:start="1305:14" pos:end="1305:17"><literal type="number" pos:start="1305:14" pos:end="1305:17">0x5A</literal></expr>:</case>

            <comment type="block" pos:start="1307:13" pos:end="1307:23">/* EXTWH */</comment>

            <expr_stmt pos:start="1309:13" pos:end="1309:67"><expr pos:start="1309:13" pos:end="1309:66"><call pos:start="1309:13" pos:end="1309:66"><name pos:start="1309:13" pos:end="1309:21">gen_ext_h</name><argument_list pos:start="1309:22" pos:end="1309:66">(<argument pos:start="1309:23" pos:end="1309:41"><expr pos:start="1309:23" pos:end="1309:41"><operator pos:start="1309:23" pos:end="1309:23">&amp;</operator><name pos:start="1309:24" pos:end="1309:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1309:44" pos:end="1309:45"><expr pos:start="1309:44" pos:end="1309:45"><name pos:start="1309:44" pos:end="1309:45">ra</name></expr></argument>, <argument pos:start="1309:48" pos:end="1309:49"><expr pos:start="1309:48" pos:end="1309:49"><name pos:start="1309:48" pos:end="1309:49">rb</name></expr></argument>, <argument pos:start="1309:52" pos:end="1309:53"><expr pos:start="1309:52" pos:end="1309:53"><name pos:start="1309:52" pos:end="1309:53">rc</name></expr></argument>, <argument pos:start="1309:56" pos:end="1309:60"><expr pos:start="1309:56" pos:end="1309:60"><name pos:start="1309:56" pos:end="1309:60">islit</name></expr></argument>, <argument pos:start="1309:63" pos:end="1309:65"><expr pos:start="1309:63" pos:end="1309:65"><name pos:start="1309:63" pos:end="1309:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1311:13" pos:end="1311:18">break;</break>

        <case pos:start="1313:9" pos:end="1313:18">case <expr pos:start="1313:14" pos:end="1313:17"><literal type="number" pos:start="1313:14" pos:end="1313:17">0x62</literal></expr>:</case>

            <comment type="block" pos:start="1315:13" pos:end="1315:23">/* MSKLH */</comment>

            <expr_stmt pos:start="1317:13" pos:end="1317:61"><expr pos:start="1317:13" pos:end="1317:60"><call pos:start="1317:13" pos:end="1317:60"><name pos:start="1317:13" pos:end="1317:22">gen_arith3</name><argument_list pos:start="1317:23" pos:end="1317:60">(<argument pos:start="1317:24" pos:end="1317:35"><expr pos:start="1317:24" pos:end="1317:35"><name pos:start="1317:24" pos:end="1317:35">helper_msklh</name></expr></argument>, <argument pos:start="1317:38" pos:end="1317:39"><expr pos:start="1317:38" pos:end="1317:39"><name pos:start="1317:38" pos:end="1317:39">ra</name></expr></argument>, <argument pos:start="1317:42" pos:end="1317:43"><expr pos:start="1317:42" pos:end="1317:43"><name pos:start="1317:42" pos:end="1317:43">rb</name></expr></argument>, <argument pos:start="1317:46" pos:end="1317:47"><expr pos:start="1317:46" pos:end="1317:47"><name pos:start="1317:46" pos:end="1317:47">rc</name></expr></argument>, <argument pos:start="1317:50" pos:end="1317:54"><expr pos:start="1317:50" pos:end="1317:54"><name pos:start="1317:50" pos:end="1317:54">islit</name></expr></argument>, <argument pos:start="1317:57" pos:end="1317:59"><expr pos:start="1317:57" pos:end="1317:59"><name pos:start="1317:57" pos:end="1317:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1319:13" pos:end="1319:18">break;</break>

        <case pos:start="1321:9" pos:end="1321:18">case <expr pos:start="1321:14" pos:end="1321:17"><literal type="number" pos:start="1321:14" pos:end="1321:17">0x67</literal></expr>:</case>

            <comment type="block" pos:start="1323:13" pos:end="1323:23">/* INSLH */</comment>

            <expr_stmt pos:start="1325:13" pos:end="1325:61"><expr pos:start="1325:13" pos:end="1325:60"><call pos:start="1325:13" pos:end="1325:60"><name pos:start="1325:13" pos:end="1325:22">gen_arith3</name><argument_list pos:start="1325:23" pos:end="1325:60">(<argument pos:start="1325:24" pos:end="1325:35"><expr pos:start="1325:24" pos:end="1325:35"><name pos:start="1325:24" pos:end="1325:35">helper_inslh</name></expr></argument>, <argument pos:start="1325:38" pos:end="1325:39"><expr pos:start="1325:38" pos:end="1325:39"><name pos:start="1325:38" pos:end="1325:39">ra</name></expr></argument>, <argument pos:start="1325:42" pos:end="1325:43"><expr pos:start="1325:42" pos:end="1325:43"><name pos:start="1325:42" pos:end="1325:43">rb</name></expr></argument>, <argument pos:start="1325:46" pos:end="1325:47"><expr pos:start="1325:46" pos:end="1325:47"><name pos:start="1325:46" pos:end="1325:47">rc</name></expr></argument>, <argument pos:start="1325:50" pos:end="1325:54"><expr pos:start="1325:50" pos:end="1325:54"><name pos:start="1325:50" pos:end="1325:54">islit</name></expr></argument>, <argument pos:start="1325:57" pos:end="1325:59"><expr pos:start="1325:57" pos:end="1325:59"><name pos:start="1325:57" pos:end="1325:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1327:13" pos:end="1327:18">break;</break>

        <case pos:start="1329:9" pos:end="1329:18">case <expr pos:start="1329:14" pos:end="1329:17"><literal type="number" pos:start="1329:14" pos:end="1329:17">0x6A</literal></expr>:</case>

            <comment type="block" pos:start="1331:13" pos:end="1331:23">/* EXTLH */</comment>

            <expr_stmt pos:start="1333:13" pos:end="1333:67"><expr pos:start="1333:13" pos:end="1333:66"><call pos:start="1333:13" pos:end="1333:66"><name pos:start="1333:13" pos:end="1333:21">gen_ext_h</name><argument_list pos:start="1333:22" pos:end="1333:66">(<argument pos:start="1333:23" pos:end="1333:41"><expr pos:start="1333:23" pos:end="1333:41"><operator pos:start="1333:23" pos:end="1333:23">&amp;</operator><name pos:start="1333:24" pos:end="1333:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1333:44" pos:end="1333:45"><expr pos:start="1333:44" pos:end="1333:45"><name pos:start="1333:44" pos:end="1333:45">ra</name></expr></argument>, <argument pos:start="1333:48" pos:end="1333:49"><expr pos:start="1333:48" pos:end="1333:49"><name pos:start="1333:48" pos:end="1333:49">rb</name></expr></argument>, <argument pos:start="1333:52" pos:end="1333:53"><expr pos:start="1333:52" pos:end="1333:53"><name pos:start="1333:52" pos:end="1333:53">rc</name></expr></argument>, <argument pos:start="1333:56" pos:end="1333:60"><expr pos:start="1333:56" pos:end="1333:60"><name pos:start="1333:56" pos:end="1333:60">islit</name></expr></argument>, <argument pos:start="1333:63" pos:end="1333:65"><expr pos:start="1333:63" pos:end="1333:65"><name pos:start="1333:63" pos:end="1333:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1335:13" pos:end="1335:18">break;</break>

        <case pos:start="1337:9" pos:end="1337:18">case <expr pos:start="1337:14" pos:end="1337:17"><literal type="number" pos:start="1337:14" pos:end="1337:17">0x72</literal></expr>:</case>

            <comment type="block" pos:start="1339:13" pos:end="1339:23">/* MSKQH */</comment>

            <expr_stmt pos:start="1341:13" pos:end="1341:61"><expr pos:start="1341:13" pos:end="1341:60"><call pos:start="1341:13" pos:end="1341:60"><name pos:start="1341:13" pos:end="1341:22">gen_arith3</name><argument_list pos:start="1341:23" pos:end="1341:60">(<argument pos:start="1341:24" pos:end="1341:35"><expr pos:start="1341:24" pos:end="1341:35"><name pos:start="1341:24" pos:end="1341:35">helper_mskqh</name></expr></argument>, <argument pos:start="1341:38" pos:end="1341:39"><expr pos:start="1341:38" pos:end="1341:39"><name pos:start="1341:38" pos:end="1341:39">ra</name></expr></argument>, <argument pos:start="1341:42" pos:end="1341:43"><expr pos:start="1341:42" pos:end="1341:43"><name pos:start="1341:42" pos:end="1341:43">rb</name></expr></argument>, <argument pos:start="1341:46" pos:end="1341:47"><expr pos:start="1341:46" pos:end="1341:47"><name pos:start="1341:46" pos:end="1341:47">rc</name></expr></argument>, <argument pos:start="1341:50" pos:end="1341:54"><expr pos:start="1341:50" pos:end="1341:54"><name pos:start="1341:50" pos:end="1341:54">islit</name></expr></argument>, <argument pos:start="1341:57" pos:end="1341:59"><expr pos:start="1341:57" pos:end="1341:59"><name pos:start="1341:57" pos:end="1341:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1343:13" pos:end="1343:18">break;</break>

        <case pos:start="1345:9" pos:end="1345:18">case <expr pos:start="1345:14" pos:end="1345:17"><literal type="number" pos:start="1345:14" pos:end="1345:17">0x77</literal></expr>:</case>

            <comment type="block" pos:start="1347:13" pos:end="1347:23">/* INSQH */</comment>

            <expr_stmt pos:start="1349:13" pos:end="1349:61"><expr pos:start="1349:13" pos:end="1349:60"><call pos:start="1349:13" pos:end="1349:60"><name pos:start="1349:13" pos:end="1349:22">gen_arith3</name><argument_list pos:start="1349:23" pos:end="1349:60">(<argument pos:start="1349:24" pos:end="1349:35"><expr pos:start="1349:24" pos:end="1349:35"><name pos:start="1349:24" pos:end="1349:35">helper_insqh</name></expr></argument>, <argument pos:start="1349:38" pos:end="1349:39"><expr pos:start="1349:38" pos:end="1349:39"><name pos:start="1349:38" pos:end="1349:39">ra</name></expr></argument>, <argument pos:start="1349:42" pos:end="1349:43"><expr pos:start="1349:42" pos:end="1349:43"><name pos:start="1349:42" pos:end="1349:43">rb</name></expr></argument>, <argument pos:start="1349:46" pos:end="1349:47"><expr pos:start="1349:46" pos:end="1349:47"><name pos:start="1349:46" pos:end="1349:47">rc</name></expr></argument>, <argument pos:start="1349:50" pos:end="1349:54"><expr pos:start="1349:50" pos:end="1349:54"><name pos:start="1349:50" pos:end="1349:54">islit</name></expr></argument>, <argument pos:start="1349:57" pos:end="1349:59"><expr pos:start="1349:57" pos:end="1349:59"><name pos:start="1349:57" pos:end="1349:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1351:13" pos:end="1351:18">break;</break>

        <case pos:start="1353:9" pos:end="1353:18">case <expr pos:start="1353:14" pos:end="1353:17"><literal type="number" pos:start="1353:14" pos:end="1353:17">0x7A</literal></expr>:</case>

            <comment type="block" pos:start="1355:13" pos:end="1355:23">/* EXTQH */</comment>

            <expr_stmt pos:start="1357:13" pos:end="1357:52"><expr pos:start="1357:13" pos:end="1357:51"><call pos:start="1357:13" pos:end="1357:51"><name pos:start="1357:13" pos:end="1357:21">gen_ext_h</name><argument_list pos:start="1357:22" pos:end="1357:51">(<argument pos:start="1357:23" pos:end="1357:26"><expr pos:start="1357:23" pos:end="1357:26"><name pos:start="1357:23" pos:end="1357:26">NULL</name></expr></argument>, <argument pos:start="1357:29" pos:end="1357:30"><expr pos:start="1357:29" pos:end="1357:30"><name pos:start="1357:29" pos:end="1357:30">ra</name></expr></argument>, <argument pos:start="1357:33" pos:end="1357:34"><expr pos:start="1357:33" pos:end="1357:34"><name pos:start="1357:33" pos:end="1357:34">rb</name></expr></argument>, <argument pos:start="1357:37" pos:end="1357:38"><expr pos:start="1357:37" pos:end="1357:38"><name pos:start="1357:37" pos:end="1357:38">rc</name></expr></argument>, <argument pos:start="1357:41" pos:end="1357:45"><expr pos:start="1357:41" pos:end="1357:45"><name pos:start="1357:41" pos:end="1357:45">islit</name></expr></argument>, <argument pos:start="1357:48" pos:end="1357:50"><expr pos:start="1357:48" pos:end="1357:50"><name pos:start="1357:48" pos:end="1357:50">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1359:13" pos:end="1359:18">break;</break>

        <default pos:start="1361:9" pos:end="1361:16">default:</default>

            <goto pos:start="1363:13" pos:end="1363:29">goto <name pos:start="1363:18" pos:end="1363:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1367:9" pos:end="1367:14">break;</break>

    <case pos:start="1369:5" pos:end="1369:14">case <expr pos:start="1369:10" pos:end="1369:13"><literal type="number" pos:start="1369:10" pos:end="1369:13">0x13</literal></expr>:</case>

        <switch pos:start="1371:9" pos:end="1451:9">switch <condition pos:start="1371:16" pos:end="1371:20">(<expr pos:start="1371:17" pos:end="1371:19"><name pos:start="1371:17" pos:end="1371:19">fn7</name></expr>)</condition> <block pos:start="1371:22" pos:end="1451:9">{<block_content pos:start="1373:9" pos:end="1449:29">

        <case pos:start="1373:9" pos:end="1373:18">case <expr pos:start="1373:14" pos:end="1373:17"><literal type="number" pos:start="1373:14" pos:end="1373:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1375:13" pos:end="1375:22">/* MULL */</comment>

            <if_stmt pos:start="1377:13" pos:end="1397:13"><if pos:start="1377:13" pos:end="1397:13">if <condition pos:start="1377:16" pos:end="1377:33">(<expr pos:start="1377:17" pos:end="1377:32"><call pos:start="1377:17" pos:end="1377:32"><name pos:start="1377:17" pos:end="1377:22">likely</name><argument_list pos:start="1377:23" pos:end="1377:32">(<argument pos:start="1377:24" pos:end="1377:31"><expr pos:start="1377:24" pos:end="1377:31"><name pos:start="1377:24" pos:end="1377:25">rc</name> <operator pos:start="1377:27" pos:end="1377:28">!=</operator> <literal type="number" pos:start="1377:30" pos:end="1377:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1377:35" pos:end="1397:13">{<block_content pos:start="1379:17" pos:end="1395:17">

                <if_stmt pos:start="1379:17" pos:end="1395:17"><if pos:start="1379:17" pos:end="1381:52">if <condition pos:start="1379:20" pos:end="1379:29">(<expr pos:start="1379:21" pos:end="1379:28"><name pos:start="1379:21" pos:end="1379:22">ra</name> <operator pos:start="1379:24" pos:end="1379:25">==</operator> <literal type="number" pos:start="1379:27" pos:end="1379:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1381:21" pos:end="1381:52"><block_content pos:start="1381:21" pos:end="1381:52">

                    <expr_stmt pos:start="1381:21" pos:end="1381:52"><expr pos:start="1381:21" pos:end="1381:51"><call pos:start="1381:21" pos:end="1381:51"><name pos:start="1381:21" pos:end="1381:36">tcg_gen_movi_i64</name><argument_list pos:start="1381:37" pos:end="1381:51">(<argument pos:start="1381:38" pos:end="1381:47"><expr pos:start="1381:38" pos:end="1381:47"><name pos:start="1381:38" pos:end="1381:47"><name pos:start="1381:38" pos:end="1381:43">cpu_ir</name><index pos:start="1381:44" pos:end="1381:47">[<expr pos:start="1381:45" pos:end="1381:46"><name pos:start="1381:45" pos:end="1381:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1381:50" pos:end="1381:50"><expr pos:start="1381:50" pos:end="1381:50"><literal type="number" pos:start="1381:50" pos:end="1381:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1383:17" pos:end="1395:17">else <block pos:start="1383:22" pos:end="1395:17">{<block_content pos:start="1385:21" pos:end="1393:63">

                    <if_stmt pos:start="1385:21" pos:end="1391:76"><if pos:start="1385:21" pos:end="1387:70">if <condition pos:start="1385:24" pos:end="1385:30">(<expr pos:start="1385:25" pos:end="1385:29"><name pos:start="1385:25" pos:end="1385:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1387:25" pos:end="1387:70"><block_content pos:start="1387:25" pos:end="1387:70">

                        <expr_stmt pos:start="1387:25" pos:end="1387:70"><expr pos:start="1387:25" pos:end="1387:69"><call pos:start="1387:25" pos:end="1387:69"><name pos:start="1387:25" pos:end="1387:40">tcg_gen_muli_i64</name><argument_list pos:start="1387:41" pos:end="1387:69">(<argument pos:start="1387:42" pos:end="1387:51"><expr pos:start="1387:42" pos:end="1387:51"><name pos:start="1387:42" pos:end="1387:51"><name pos:start="1387:42" pos:end="1387:47">cpu_ir</name><index pos:start="1387:48" pos:end="1387:51">[<expr pos:start="1387:49" pos:end="1387:50"><name pos:start="1387:49" pos:end="1387:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1387:54" pos:end="1387:63"><expr pos:start="1387:54" pos:end="1387:63"><name pos:start="1387:54" pos:end="1387:63"><name pos:start="1387:54" pos:end="1387:59">cpu_ir</name><index pos:start="1387:60" pos:end="1387:63">[<expr pos:start="1387:61" pos:end="1387:62"><name pos:start="1387:61" pos:end="1387:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1387:66" pos:end="1387:68"><expr pos:start="1387:66" pos:end="1387:68"><name pos:start="1387:66" pos:end="1387:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1389:21" pos:end="1391:76">else<block type="pseudo" pos:start="1391:25" pos:end="1391:76"><block_content pos:start="1391:25" pos:end="1391:76">

                        <expr_stmt pos:start="1391:25" pos:end="1391:76"><expr pos:start="1391:25" pos:end="1391:75"><call pos:start="1391:25" pos:end="1391:75"><name pos:start="1391:25" pos:end="1391:39">tcg_gen_mul_i64</name><argument_list pos:start="1391:40" pos:end="1391:75">(<argument pos:start="1391:41" pos:end="1391:50"><expr pos:start="1391:41" pos:end="1391:50"><name pos:start="1391:41" pos:end="1391:50"><name pos:start="1391:41" pos:end="1391:46">cpu_ir</name><index pos:start="1391:47" pos:end="1391:50">[<expr pos:start="1391:48" pos:end="1391:49"><name pos:start="1391:48" pos:end="1391:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1391:53" pos:end="1391:62"><expr pos:start="1391:53" pos:end="1391:62"><name pos:start="1391:53" pos:end="1391:62"><name pos:start="1391:53" pos:end="1391:58">cpu_ir</name><index pos:start="1391:59" pos:end="1391:62">[<expr pos:start="1391:60" pos:end="1391:61"><name pos:start="1391:60" pos:end="1391:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1391:65" pos:end="1391:74"><expr pos:start="1391:65" pos:end="1391:74"><name pos:start="1391:65" pos:end="1391:74"><name pos:start="1391:65" pos:end="1391:70">cpu_ir</name><index pos:start="1391:71" pos:end="1391:74">[<expr pos:start="1391:72" pos:end="1391:73"><name pos:start="1391:72" pos:end="1391:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="1393:21" pos:end="1393:63"><expr pos:start="1393:21" pos:end="1393:62"><call pos:start="1393:21" pos:end="1393:62"><name pos:start="1393:21" pos:end="1393:38">tcg_gen_ext32s_i64</name><argument_list pos:start="1393:39" pos:end="1393:62">(<argument pos:start="1393:40" pos:end="1393:49"><expr pos:start="1393:40" pos:end="1393:49"><name pos:start="1393:40" pos:end="1393:49"><name pos:start="1393:40" pos:end="1393:45">cpu_ir</name><index pos:start="1393:46" pos:end="1393:49">[<expr pos:start="1393:47" pos:end="1393:48"><name pos:start="1393:47" pos:end="1393:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1393:52" pos:end="1393:61"><expr pos:start="1393:52" pos:end="1393:61"><name pos:start="1393:52" pos:end="1393:61"><name pos:start="1393:52" pos:end="1393:57">cpu_ir</name><index pos:start="1393:58" pos:end="1393:61">[<expr pos:start="1393:59" pos:end="1393:60"><name pos:start="1393:59" pos:end="1393:60">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1399:13" pos:end="1399:18">break;</break>

        <case pos:start="1401:9" pos:end="1401:18">case <expr pos:start="1401:14" pos:end="1401:17"><literal type="number" pos:start="1401:14" pos:end="1401:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1403:13" pos:end="1403:22">/* MULQ */</comment>

            <if_stmt pos:start="1405:13" pos:end="1419:13"><if pos:start="1405:13" pos:end="1419:13">if <condition pos:start="1405:16" pos:end="1405:33">(<expr pos:start="1405:17" pos:end="1405:32"><call pos:start="1405:17" pos:end="1405:32"><name pos:start="1405:17" pos:end="1405:22">likely</name><argument_list pos:start="1405:23" pos:end="1405:32">(<argument pos:start="1405:24" pos:end="1405:31"><expr pos:start="1405:24" pos:end="1405:31"><name pos:start="1405:24" pos:end="1405:25">rc</name> <operator pos:start="1405:27" pos:end="1405:28">!=</operator> <literal type="number" pos:start="1405:30" pos:end="1405:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1405:35" pos:end="1419:13">{<block_content pos:start="1407:17" pos:end="1417:72">

                <if_stmt pos:start="1407:17" pos:end="1417:72"><if pos:start="1407:17" pos:end="1409:52">if <condition pos:start="1407:20" pos:end="1407:29">(<expr pos:start="1407:21" pos:end="1407:28"><name pos:start="1407:21" pos:end="1407:22">ra</name> <operator pos:start="1407:24" pos:end="1407:25">==</operator> <literal type="number" pos:start="1407:27" pos:end="1407:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1409:21" pos:end="1409:52"><block_content pos:start="1409:21" pos:end="1409:52">

                    <expr_stmt pos:start="1409:21" pos:end="1409:52"><expr pos:start="1409:21" pos:end="1409:51"><call pos:start="1409:21" pos:end="1409:51"><name pos:start="1409:21" pos:end="1409:36">tcg_gen_movi_i64</name><argument_list pos:start="1409:37" pos:end="1409:51">(<argument pos:start="1409:38" pos:end="1409:47"><expr pos:start="1409:38" pos:end="1409:47"><name pos:start="1409:38" pos:end="1409:47"><name pos:start="1409:38" pos:end="1409:43">cpu_ir</name><index pos:start="1409:44" pos:end="1409:47">[<expr pos:start="1409:45" pos:end="1409:46"><name pos:start="1409:45" pos:end="1409:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1409:50" pos:end="1409:50"><expr pos:start="1409:50" pos:end="1409:50"><literal type="number" pos:start="1409:50" pos:end="1409:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="1411:17" pos:end="1413:66">else if <condition pos:start="1411:25" pos:end="1411:31">(<expr pos:start="1411:26" pos:end="1411:30"><name pos:start="1411:26" pos:end="1411:30">islit</name></expr>)</condition><block type="pseudo" pos:start="1413:21" pos:end="1413:66"><block_content pos:start="1413:21" pos:end="1413:66">

                    <expr_stmt pos:start="1413:21" pos:end="1413:66"><expr pos:start="1413:21" pos:end="1413:65"><call pos:start="1413:21" pos:end="1413:65"><name pos:start="1413:21" pos:end="1413:36">tcg_gen_muli_i64</name><argument_list pos:start="1413:37" pos:end="1413:65">(<argument pos:start="1413:38" pos:end="1413:47"><expr pos:start="1413:38" pos:end="1413:47"><name pos:start="1413:38" pos:end="1413:47"><name pos:start="1413:38" pos:end="1413:43">cpu_ir</name><index pos:start="1413:44" pos:end="1413:47">[<expr pos:start="1413:45" pos:end="1413:46"><name pos:start="1413:45" pos:end="1413:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1413:50" pos:end="1413:59"><expr pos:start="1413:50" pos:end="1413:59"><name pos:start="1413:50" pos:end="1413:59"><name pos:start="1413:50" pos:end="1413:55">cpu_ir</name><index pos:start="1413:56" pos:end="1413:59">[<expr pos:start="1413:57" pos:end="1413:58"><name pos:start="1413:57" pos:end="1413:58">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1413:62" pos:end="1413:64"><expr pos:start="1413:62" pos:end="1413:64"><name pos:start="1413:62" pos:end="1413:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1415:17" pos:end="1417:72">else<block type="pseudo" pos:start="1417:21" pos:end="1417:72"><block_content pos:start="1417:21" pos:end="1417:72">

                    <expr_stmt pos:start="1417:21" pos:end="1417:72"><expr pos:start="1417:21" pos:end="1417:71"><call pos:start="1417:21" pos:end="1417:71"><name pos:start="1417:21" pos:end="1417:35">tcg_gen_mul_i64</name><argument_list pos:start="1417:36" pos:end="1417:71">(<argument pos:start="1417:37" pos:end="1417:46"><expr pos:start="1417:37" pos:end="1417:46"><name pos:start="1417:37" pos:end="1417:46"><name pos:start="1417:37" pos:end="1417:42">cpu_ir</name><index pos:start="1417:43" pos:end="1417:46">[<expr pos:start="1417:44" pos:end="1417:45"><name pos:start="1417:44" pos:end="1417:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1417:49" pos:end="1417:58"><expr pos:start="1417:49" pos:end="1417:58"><name pos:start="1417:49" pos:end="1417:58"><name pos:start="1417:49" pos:end="1417:54">cpu_ir</name><index pos:start="1417:55" pos:end="1417:58">[<expr pos:start="1417:56" pos:end="1417:57"><name pos:start="1417:56" pos:end="1417:57">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1417:61" pos:end="1417:70"><expr pos:start="1417:61" pos:end="1417:70"><name pos:start="1417:61" pos:end="1417:70"><name pos:start="1417:61" pos:end="1417:66">cpu_ir</name><index pos:start="1417:67" pos:end="1417:70">[<expr pos:start="1417:68" pos:end="1417:69"><name pos:start="1417:68" pos:end="1417:69">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1421:13" pos:end="1421:18">break;</break>

        <case pos:start="1423:9" pos:end="1423:18">case <expr pos:start="1423:14" pos:end="1423:17"><literal type="number" pos:start="1423:14" pos:end="1423:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1425:13" pos:end="1425:23">/* UMULH */</comment>

            <expr_stmt pos:start="1427:13" pos:end="1427:61"><expr pos:start="1427:13" pos:end="1427:60"><call pos:start="1427:13" pos:end="1427:60"><name pos:start="1427:13" pos:end="1427:22">gen_arith3</name><argument_list pos:start="1427:23" pos:end="1427:60">(<argument pos:start="1427:24" pos:end="1427:35"><expr pos:start="1427:24" pos:end="1427:35"><name pos:start="1427:24" pos:end="1427:35">helper_umulh</name></expr></argument>, <argument pos:start="1427:38" pos:end="1427:39"><expr pos:start="1427:38" pos:end="1427:39"><name pos:start="1427:38" pos:end="1427:39">ra</name></expr></argument>, <argument pos:start="1427:42" pos:end="1427:43"><expr pos:start="1427:42" pos:end="1427:43"><name pos:start="1427:42" pos:end="1427:43">rb</name></expr></argument>, <argument pos:start="1427:46" pos:end="1427:47"><expr pos:start="1427:46" pos:end="1427:47"><name pos:start="1427:46" pos:end="1427:47">rc</name></expr></argument>, <argument pos:start="1427:50" pos:end="1427:54"><expr pos:start="1427:50" pos:end="1427:54"><name pos:start="1427:50" pos:end="1427:54">islit</name></expr></argument>, <argument pos:start="1427:57" pos:end="1427:59"><expr pos:start="1427:57" pos:end="1427:59"><name pos:start="1427:57" pos:end="1427:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1429:13" pos:end="1429:18">break;</break>

        <case pos:start="1431:9" pos:end="1431:18">case <expr pos:start="1431:14" pos:end="1431:17"><literal type="number" pos:start="1431:14" pos:end="1431:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="1433:13" pos:end="1433:24">/* MULL/V */</comment>

            <expr_stmt pos:start="1435:13" pos:end="1435:61"><expr pos:start="1435:13" pos:end="1435:60"><call pos:start="1435:13" pos:end="1435:60"><name pos:start="1435:13" pos:end="1435:22">gen_arith3</name><argument_list pos:start="1435:23" pos:end="1435:60">(<argument pos:start="1435:24" pos:end="1435:35"><expr pos:start="1435:24" pos:end="1435:35"><name pos:start="1435:24" pos:end="1435:35">helper_mullv</name></expr></argument>, <argument pos:start="1435:38" pos:end="1435:39"><expr pos:start="1435:38" pos:end="1435:39"><name pos:start="1435:38" pos:end="1435:39">ra</name></expr></argument>, <argument pos:start="1435:42" pos:end="1435:43"><expr pos:start="1435:42" pos:end="1435:43"><name pos:start="1435:42" pos:end="1435:43">rb</name></expr></argument>, <argument pos:start="1435:46" pos:end="1435:47"><expr pos:start="1435:46" pos:end="1435:47"><name pos:start="1435:46" pos:end="1435:47">rc</name></expr></argument>, <argument pos:start="1435:50" pos:end="1435:54"><expr pos:start="1435:50" pos:end="1435:54"><name pos:start="1435:50" pos:end="1435:54">islit</name></expr></argument>, <argument pos:start="1435:57" pos:end="1435:59"><expr pos:start="1435:57" pos:end="1435:59"><name pos:start="1435:57" pos:end="1435:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1437:13" pos:end="1437:18">break;</break>

        <case pos:start="1439:9" pos:end="1439:18">case <expr pos:start="1439:14" pos:end="1439:17"><literal type="number" pos:start="1439:14" pos:end="1439:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="1441:13" pos:end="1441:24">/* MULQ/V */</comment>

            <expr_stmt pos:start="1443:13" pos:end="1443:61"><expr pos:start="1443:13" pos:end="1443:60"><call pos:start="1443:13" pos:end="1443:60"><name pos:start="1443:13" pos:end="1443:22">gen_arith3</name><argument_list pos:start="1443:23" pos:end="1443:60">(<argument pos:start="1443:24" pos:end="1443:35"><expr pos:start="1443:24" pos:end="1443:35"><name pos:start="1443:24" pos:end="1443:35">helper_mulqv</name></expr></argument>, <argument pos:start="1443:38" pos:end="1443:39"><expr pos:start="1443:38" pos:end="1443:39"><name pos:start="1443:38" pos:end="1443:39">ra</name></expr></argument>, <argument pos:start="1443:42" pos:end="1443:43"><expr pos:start="1443:42" pos:end="1443:43"><name pos:start="1443:42" pos:end="1443:43">rb</name></expr></argument>, <argument pos:start="1443:46" pos:end="1443:47"><expr pos:start="1443:46" pos:end="1443:47"><name pos:start="1443:46" pos:end="1443:47">rc</name></expr></argument>, <argument pos:start="1443:50" pos:end="1443:54"><expr pos:start="1443:50" pos:end="1443:54"><name pos:start="1443:50" pos:end="1443:54">islit</name></expr></argument>, <argument pos:start="1443:57" pos:end="1443:59"><expr pos:start="1443:57" pos:end="1443:59"><name pos:start="1443:57" pos:end="1443:59">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1445:13" pos:end="1445:18">break;</break>

        <default pos:start="1447:9" pos:end="1447:16">default:</default>

            <goto pos:start="1449:13" pos:end="1449:29">goto <name pos:start="1449:18" pos:end="1449:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1453:9" pos:end="1453:14">break;</break>

    <case pos:start="1455:5" pos:end="1455:14">case <expr pos:start="1455:10" pos:end="1455:13"><literal type="number" pos:start="1455:10" pos:end="1455:13">0x14</literal></expr>:</case>

        <switch pos:start="1457:9" pos:end="1589:9">switch <condition pos:start="1457:16" pos:end="1457:21">(<expr pos:start="1457:17" pos:end="1457:20"><name pos:start="1457:17" pos:end="1457:20">fpfn</name></expr>)</condition> <block pos:start="1457:23" pos:end="1589:9">{<block_content pos:start="1459:9" pos:end="1587:29"> <comment type="block" pos:start="1457:25" pos:end="1457:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1459:9" pos:end="1459:18">case <expr pos:start="1459:14" pos:end="1459:17"><literal type="number" pos:start="1459:14" pos:end="1459:17">0x04</literal></expr>:</case>

            <comment type="block" pos:start="1461:13" pos:end="1461:23">/* ITOFS */</comment>

            <if_stmt pos:start="1463:13" pos:end="1465:33"><if pos:start="1463:13" pos:end="1465:33">if <condition pos:start="1463:16" pos:end="1463:42">(<expr pos:start="1463:17" pos:end="1463:41"><operator pos:start="1463:17" pos:end="1463:17">!</operator><operator pos:start="1463:18" pos:end="1463:18">(</operator><name pos:start="1463:19" pos:end="1463:28"><name pos:start="1463:19" pos:end="1463:21">ctx</name><operator pos:start="1463:22" pos:end="1463:23">-&gt;</operator><name pos:start="1463:24" pos:end="1463:28">amask</name></name> <operator pos:start="1463:30" pos:end="1463:30">&amp;</operator> <name pos:start="1463:32" pos:end="1463:40">AMASK_FIX</name><operator pos:start="1463:41" pos:end="1463:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1465:17" pos:end="1465:33"><block_content pos:start="1465:17" pos:end="1465:33">

                <goto pos:start="1465:17" pos:end="1465:33">goto <name pos:start="1465:22" pos:end="1465:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1467:13" pos:end="1483:13"><if pos:start="1467:13" pos:end="1483:13">if <condition pos:start="1467:16" pos:end="1467:33">(<expr pos:start="1467:17" pos:end="1467:32"><call pos:start="1467:17" pos:end="1467:32"><name pos:start="1467:17" pos:end="1467:22">likely</name><argument_list pos:start="1467:23" pos:end="1467:32">(<argument pos:start="1467:24" pos:end="1467:31"><expr pos:start="1467:24" pos:end="1467:31"><name pos:start="1467:24" pos:end="1467:25">rc</name> <operator pos:start="1467:27" pos:end="1467:28">!=</operator> <literal type="number" pos:start="1467:30" pos:end="1467:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1467:35" pos:end="1483:13">{<block_content pos:start="1469:17" pos:end="1481:53">

                <if_stmt pos:start="1469:17" pos:end="1481:53"><if pos:start="1469:17" pos:end="1479:17">if <condition pos:start="1469:20" pos:end="1469:29">(<expr pos:start="1469:21" pos:end="1469:28"><name pos:start="1469:21" pos:end="1469:22">ra</name> <operator pos:start="1469:24" pos:end="1469:25">!=</operator> <literal type="number" pos:start="1469:27" pos:end="1469:28">31</literal></expr>)</condition> <block pos:start="1469:31" pos:end="1479:17">{<block_content pos:start="1471:21" pos:end="1477:39">

                    <decl_stmt pos:start="1471:21" pos:end="1471:58"><decl pos:start="1471:21" pos:end="1471:57"><type pos:start="1471:21" pos:end="1471:24"><name pos:start="1471:21" pos:end="1471:24">TCGv</name></type> <name pos:start="1471:26" pos:end="1471:28">tmp</name> <init pos:start="1471:30" pos:end="1471:57">= <expr pos:start="1471:32" pos:end="1471:57"><call pos:start="1471:32" pos:end="1471:57"><name pos:start="1471:32" pos:end="1471:43">tcg_temp_new</name><argument_list pos:start="1471:44" pos:end="1471:57">(<argument pos:start="1471:45" pos:end="1471:56"><expr pos:start="1471:45" pos:end="1471:56"><name pos:start="1471:45" pos:end="1471:56">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1473:21" pos:end="1473:59"><expr pos:start="1473:21" pos:end="1473:58"><call pos:start="1473:21" pos:end="1473:58"><name pos:start="1473:21" pos:end="1473:41">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1473:42" pos:end="1473:58">(<argument pos:start="1473:43" pos:end="1473:45"><expr pos:start="1473:43" pos:end="1473:45"><name pos:start="1473:43" pos:end="1473:45">tmp</name></expr></argument>, <argument pos:start="1473:48" pos:end="1473:57"><expr pos:start="1473:48" pos:end="1473:57"><name pos:start="1473:48" pos:end="1473:57"><name pos:start="1473:48" pos:end="1473:53">cpu_ir</name><index pos:start="1473:54" pos:end="1473:57">[<expr pos:start="1473:55" pos:end="1473:56"><name pos:start="1473:55" pos:end="1473:56">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1475:21" pos:end="1475:77"><expr pos:start="1475:21" pos:end="1475:76"><call pos:start="1475:21" pos:end="1475:76"><name pos:start="1475:21" pos:end="1475:38">tcg_gen_helper_1_1</name><argument_list pos:start="1475:39" pos:end="1475:76">(<argument pos:start="1475:40" pos:end="1475:57"><expr pos:start="1475:40" pos:end="1475:57"><name pos:start="1475:40" pos:end="1475:57">helper_memory_to_s</name></expr></argument>, <argument pos:start="1475:60" pos:end="1475:70"><expr pos:start="1475:60" pos:end="1475:70"><name pos:start="1475:60" pos:end="1475:70"><name pos:start="1475:60" pos:end="1475:66">cpu_fir</name><index pos:start="1475:67" pos:end="1475:70">[<expr pos:start="1475:68" pos:end="1475:69"><name pos:start="1475:68" pos:end="1475:69">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1475:73" pos:end="1475:75"><expr pos:start="1475:73" pos:end="1475:75"><name pos:start="1475:73" pos:end="1475:75">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1477:21" pos:end="1477:39"><expr pos:start="1477:21" pos:end="1477:38"><call pos:start="1477:21" pos:end="1477:38"><name pos:start="1477:21" pos:end="1477:33">tcg_temp_free</name><argument_list pos:start="1477:34" pos:end="1477:38">(<argument pos:start="1477:35" pos:end="1477:37"><expr pos:start="1477:35" pos:end="1477:37"><name pos:start="1477:35" pos:end="1477:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1479:19" pos:end="1481:53">else<block type="pseudo" pos:start="1481:21" pos:end="1481:53"><block_content pos:start="1481:21" pos:end="1481:53">

                    <expr_stmt pos:start="1481:21" pos:end="1481:53"><expr pos:start="1481:21" pos:end="1481:52"><call pos:start="1481:21" pos:end="1481:52"><name pos:start="1481:21" pos:end="1481:36">tcg_gen_movi_i64</name><argument_list pos:start="1481:37" pos:end="1481:52">(<argument pos:start="1481:38" pos:end="1481:48"><expr pos:start="1481:38" pos:end="1481:48"><name pos:start="1481:38" pos:end="1481:48"><name pos:start="1481:38" pos:end="1481:44">cpu_fir</name><index pos:start="1481:45" pos:end="1481:48">[<expr pos:start="1481:46" pos:end="1481:47"><name pos:start="1481:46" pos:end="1481:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1481:51" pos:end="1481:51"><expr pos:start="1481:51" pos:end="1481:51"><literal type="number" pos:start="1481:51" pos:end="1481:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1485:13" pos:end="1485:18">break;</break>

        <case pos:start="1487:9" pos:end="1487:18">case <expr pos:start="1487:14" pos:end="1487:17"><literal type="number" pos:start="1487:14" pos:end="1487:17">0x0A</literal></expr>:</case>

            <comment type="block" pos:start="1489:13" pos:end="1489:23">/* SQRTF */</comment>

            <if_stmt pos:start="1491:13" pos:end="1493:33"><if pos:start="1491:13" pos:end="1493:33">if <condition pos:start="1491:16" pos:end="1491:42">(<expr pos:start="1491:17" pos:end="1491:41"><operator pos:start="1491:17" pos:end="1491:17">!</operator><operator pos:start="1491:18" pos:end="1491:18">(</operator><name pos:start="1491:19" pos:end="1491:28"><name pos:start="1491:19" pos:end="1491:21">ctx</name><operator pos:start="1491:22" pos:end="1491:23">-&gt;</operator><name pos:start="1491:24" pos:end="1491:28">amask</name></name> <operator pos:start="1491:30" pos:end="1491:30">&amp;</operator> <name pos:start="1491:32" pos:end="1491:40">AMASK_FIX</name><operator pos:start="1491:41" pos:end="1491:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1493:17" pos:end="1493:33"><block_content pos:start="1493:17" pos:end="1493:33">

                <goto pos:start="1493:17" pos:end="1493:33">goto <name pos:start="1493:22" pos:end="1493:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1495:13" pos:end="1495:47"><expr pos:start="1495:13" pos:end="1495:46"><call pos:start="1495:13" pos:end="1495:46"><name pos:start="1495:13" pos:end="1495:23">gen_farith2</name><argument_list pos:start="1495:24" pos:end="1495:46">(<argument pos:start="1495:25" pos:end="1495:37"><expr pos:start="1495:25" pos:end="1495:37"><operator pos:start="1495:25" pos:end="1495:25">&amp;</operator><name pos:start="1495:26" pos:end="1495:37">helper_sqrtf</name></expr></argument>, <argument pos:start="1495:40" pos:end="1495:41"><expr pos:start="1495:40" pos:end="1495:41"><name pos:start="1495:40" pos:end="1495:41">rb</name></expr></argument>, <argument pos:start="1495:44" pos:end="1495:45"><expr pos:start="1495:44" pos:end="1495:45"><name pos:start="1495:44" pos:end="1495:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1497:13" pos:end="1497:18">break;</break>

        <case pos:start="1499:9" pos:end="1499:18">case <expr pos:start="1499:14" pos:end="1499:17"><literal type="number" pos:start="1499:14" pos:end="1499:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1501:13" pos:end="1501:23">/* SQRTS */</comment>

            <if_stmt pos:start="1503:13" pos:end="1505:33"><if pos:start="1503:13" pos:end="1505:33">if <condition pos:start="1503:16" pos:end="1503:42">(<expr pos:start="1503:17" pos:end="1503:41"><operator pos:start="1503:17" pos:end="1503:17">!</operator><operator pos:start="1503:18" pos:end="1503:18">(</operator><name pos:start="1503:19" pos:end="1503:28"><name pos:start="1503:19" pos:end="1503:21">ctx</name><operator pos:start="1503:22" pos:end="1503:23">-&gt;</operator><name pos:start="1503:24" pos:end="1503:28">amask</name></name> <operator pos:start="1503:30" pos:end="1503:30">&amp;</operator> <name pos:start="1503:32" pos:end="1503:40">AMASK_FIX</name><operator pos:start="1503:41" pos:end="1503:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1505:17" pos:end="1505:33"><block_content pos:start="1505:17" pos:end="1505:33">

                <goto pos:start="1505:17" pos:end="1505:33">goto <name pos:start="1505:22" pos:end="1505:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1507:13" pos:end="1507:47"><expr pos:start="1507:13" pos:end="1507:46"><call pos:start="1507:13" pos:end="1507:46"><name pos:start="1507:13" pos:end="1507:23">gen_farith2</name><argument_list pos:start="1507:24" pos:end="1507:46">(<argument pos:start="1507:25" pos:end="1507:37"><expr pos:start="1507:25" pos:end="1507:37"><operator pos:start="1507:25" pos:end="1507:25">&amp;</operator><name pos:start="1507:26" pos:end="1507:37">helper_sqrts</name></expr></argument>, <argument pos:start="1507:40" pos:end="1507:41"><expr pos:start="1507:40" pos:end="1507:41"><name pos:start="1507:40" pos:end="1507:41">rb</name></expr></argument>, <argument pos:start="1507:44" pos:end="1507:45"><expr pos:start="1507:44" pos:end="1507:45"><name pos:start="1507:44" pos:end="1507:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1509:13" pos:end="1509:18">break;</break>

        <case pos:start="1511:9" pos:end="1511:18">case <expr pos:start="1511:14" pos:end="1511:17"><literal type="number" pos:start="1511:14" pos:end="1511:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="1513:13" pos:end="1513:23">/* ITOFF */</comment>

            <if_stmt pos:start="1515:13" pos:end="1517:33"><if pos:start="1515:13" pos:end="1517:33">if <condition pos:start="1515:16" pos:end="1515:42">(<expr pos:start="1515:17" pos:end="1515:41"><operator pos:start="1515:17" pos:end="1515:17">!</operator><operator pos:start="1515:18" pos:end="1515:18">(</operator><name pos:start="1515:19" pos:end="1515:28"><name pos:start="1515:19" pos:end="1515:21">ctx</name><operator pos:start="1515:22" pos:end="1515:23">-&gt;</operator><name pos:start="1515:24" pos:end="1515:28">amask</name></name> <operator pos:start="1515:30" pos:end="1515:30">&amp;</operator> <name pos:start="1515:32" pos:end="1515:40">AMASK_FIX</name><operator pos:start="1515:41" pos:end="1515:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1517:17" pos:end="1517:33"><block_content pos:start="1517:17" pos:end="1517:33">

                <goto pos:start="1517:17" pos:end="1517:33">goto <name pos:start="1517:22" pos:end="1517:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1519:13" pos:end="1535:13"><if pos:start="1519:13" pos:end="1535:13">if <condition pos:start="1519:16" pos:end="1519:33">(<expr pos:start="1519:17" pos:end="1519:32"><call pos:start="1519:17" pos:end="1519:32"><name pos:start="1519:17" pos:end="1519:22">likely</name><argument_list pos:start="1519:23" pos:end="1519:32">(<argument pos:start="1519:24" pos:end="1519:31"><expr pos:start="1519:24" pos:end="1519:31"><name pos:start="1519:24" pos:end="1519:25">rc</name> <operator pos:start="1519:27" pos:end="1519:28">!=</operator> <literal type="number" pos:start="1519:30" pos:end="1519:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1519:35" pos:end="1535:13">{<block_content pos:start="1521:17" pos:end="1533:53">

                <if_stmt pos:start="1521:17" pos:end="1533:53"><if pos:start="1521:17" pos:end="1531:17">if <condition pos:start="1521:20" pos:end="1521:29">(<expr pos:start="1521:21" pos:end="1521:28"><name pos:start="1521:21" pos:end="1521:22">ra</name> <operator pos:start="1521:24" pos:end="1521:25">!=</operator> <literal type="number" pos:start="1521:27" pos:end="1521:28">31</literal></expr>)</condition> <block pos:start="1521:31" pos:end="1531:17">{<block_content pos:start="1523:21" pos:end="1529:39">

                    <decl_stmt pos:start="1523:21" pos:end="1523:58"><decl pos:start="1523:21" pos:end="1523:57"><type pos:start="1523:21" pos:end="1523:24"><name pos:start="1523:21" pos:end="1523:24">TCGv</name></type> <name pos:start="1523:26" pos:end="1523:28">tmp</name> <init pos:start="1523:30" pos:end="1523:57">= <expr pos:start="1523:32" pos:end="1523:57"><call pos:start="1523:32" pos:end="1523:57"><name pos:start="1523:32" pos:end="1523:43">tcg_temp_new</name><argument_list pos:start="1523:44" pos:end="1523:57">(<argument pos:start="1523:45" pos:end="1523:56"><expr pos:start="1523:45" pos:end="1523:56"><name pos:start="1523:45" pos:end="1523:56">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1525:21" pos:end="1525:59"><expr pos:start="1525:21" pos:end="1525:58"><call pos:start="1525:21" pos:end="1525:58"><name pos:start="1525:21" pos:end="1525:41">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1525:42" pos:end="1525:58">(<argument pos:start="1525:43" pos:end="1525:45"><expr pos:start="1525:43" pos:end="1525:45"><name pos:start="1525:43" pos:end="1525:45">tmp</name></expr></argument>, <argument pos:start="1525:48" pos:end="1525:57"><expr pos:start="1525:48" pos:end="1525:57"><name pos:start="1525:48" pos:end="1525:57"><name pos:start="1525:48" pos:end="1525:53">cpu_ir</name><index pos:start="1525:54" pos:end="1525:57">[<expr pos:start="1525:55" pos:end="1525:56"><name pos:start="1525:55" pos:end="1525:56">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1527:21" pos:end="1527:77"><expr pos:start="1527:21" pos:end="1527:76"><call pos:start="1527:21" pos:end="1527:76"><name pos:start="1527:21" pos:end="1527:38">tcg_gen_helper_1_1</name><argument_list pos:start="1527:39" pos:end="1527:76">(<argument pos:start="1527:40" pos:end="1527:57"><expr pos:start="1527:40" pos:end="1527:57"><name pos:start="1527:40" pos:end="1527:57">helper_memory_to_f</name></expr></argument>, <argument pos:start="1527:60" pos:end="1527:70"><expr pos:start="1527:60" pos:end="1527:70"><name pos:start="1527:60" pos:end="1527:70"><name pos:start="1527:60" pos:end="1527:66">cpu_fir</name><index pos:start="1527:67" pos:end="1527:70">[<expr pos:start="1527:68" pos:end="1527:69"><name pos:start="1527:68" pos:end="1527:69">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1527:73" pos:end="1527:75"><expr pos:start="1527:73" pos:end="1527:75"><name pos:start="1527:73" pos:end="1527:75">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1529:21" pos:end="1529:39"><expr pos:start="1529:21" pos:end="1529:38"><call pos:start="1529:21" pos:end="1529:38"><name pos:start="1529:21" pos:end="1529:33">tcg_temp_free</name><argument_list pos:start="1529:34" pos:end="1529:38">(<argument pos:start="1529:35" pos:end="1529:37"><expr pos:start="1529:35" pos:end="1529:37"><name pos:start="1529:35" pos:end="1529:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1531:19" pos:end="1533:53">else<block type="pseudo" pos:start="1533:21" pos:end="1533:53"><block_content pos:start="1533:21" pos:end="1533:53">

                    <expr_stmt pos:start="1533:21" pos:end="1533:53"><expr pos:start="1533:21" pos:end="1533:52"><call pos:start="1533:21" pos:end="1533:52"><name pos:start="1533:21" pos:end="1533:36">tcg_gen_movi_i64</name><argument_list pos:start="1533:37" pos:end="1533:52">(<argument pos:start="1533:38" pos:end="1533:48"><expr pos:start="1533:38" pos:end="1533:48"><name pos:start="1533:38" pos:end="1533:48"><name pos:start="1533:38" pos:end="1533:44">cpu_fir</name><index pos:start="1533:45" pos:end="1533:48">[<expr pos:start="1533:46" pos:end="1533:47"><name pos:start="1533:46" pos:end="1533:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1533:51" pos:end="1533:51"><expr pos:start="1533:51" pos:end="1533:51"><literal type="number" pos:start="1533:51" pos:end="1533:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1537:13" pos:end="1537:18">break;</break>

        <case pos:start="1539:9" pos:end="1539:18">case <expr pos:start="1539:14" pos:end="1539:17"><literal type="number" pos:start="1539:14" pos:end="1539:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1541:13" pos:end="1541:23">/* ITOFT */</comment>

            <if_stmt pos:start="1543:13" pos:end="1545:33"><if pos:start="1543:13" pos:end="1545:33">if <condition pos:start="1543:16" pos:end="1543:42">(<expr pos:start="1543:17" pos:end="1543:41"><operator pos:start="1543:17" pos:end="1543:17">!</operator><operator pos:start="1543:18" pos:end="1543:18">(</operator><name pos:start="1543:19" pos:end="1543:28"><name pos:start="1543:19" pos:end="1543:21">ctx</name><operator pos:start="1543:22" pos:end="1543:23">-&gt;</operator><name pos:start="1543:24" pos:end="1543:28">amask</name></name> <operator pos:start="1543:30" pos:end="1543:30">&amp;</operator> <name pos:start="1543:32" pos:end="1543:40">AMASK_FIX</name><operator pos:start="1543:41" pos:end="1543:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1545:17" pos:end="1545:33"><block_content pos:start="1545:17" pos:end="1545:33">

                <goto pos:start="1545:17" pos:end="1545:33">goto <name pos:start="1545:22" pos:end="1545:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1547:13" pos:end="1557:13"><if pos:start="1547:13" pos:end="1557:13">if <condition pos:start="1547:16" pos:end="1547:33">(<expr pos:start="1547:17" pos:end="1547:32"><call pos:start="1547:17" pos:end="1547:32"><name pos:start="1547:17" pos:end="1547:22">likely</name><argument_list pos:start="1547:23" pos:end="1547:32">(<argument pos:start="1547:24" pos:end="1547:31"><expr pos:start="1547:24" pos:end="1547:31"><name pos:start="1547:24" pos:end="1547:25">rc</name> <operator pos:start="1547:27" pos:end="1547:28">!=</operator> <literal type="number" pos:start="1547:30" pos:end="1547:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1547:35" pos:end="1557:13">{<block_content pos:start="1549:17" pos:end="1555:53">

                <if_stmt pos:start="1549:17" pos:end="1555:53"><if pos:start="1549:17" pos:end="1551:61">if <condition pos:start="1549:20" pos:end="1549:29">(<expr pos:start="1549:21" pos:end="1549:28"><name pos:start="1549:21" pos:end="1549:22">ra</name> <operator pos:start="1549:24" pos:end="1549:25">!=</operator> <literal type="number" pos:start="1549:27" pos:end="1549:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1551:21" pos:end="1551:61"><block_content pos:start="1551:21" pos:end="1551:61">

                    <expr_stmt pos:start="1551:21" pos:end="1551:61"><expr pos:start="1551:21" pos:end="1551:60"><call pos:start="1551:21" pos:end="1551:60"><name pos:start="1551:21" pos:end="1551:35">tcg_gen_mov_i64</name><argument_list pos:start="1551:36" pos:end="1551:60">(<argument pos:start="1551:37" pos:end="1551:47"><expr pos:start="1551:37" pos:end="1551:47"><name pos:start="1551:37" pos:end="1551:47"><name pos:start="1551:37" pos:end="1551:43">cpu_fir</name><index pos:start="1551:44" pos:end="1551:47">[<expr pos:start="1551:45" pos:end="1551:46"><name pos:start="1551:45" pos:end="1551:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1551:50" pos:end="1551:59"><expr pos:start="1551:50" pos:end="1551:59"><name pos:start="1551:50" pos:end="1551:59"><name pos:start="1551:50" pos:end="1551:55">cpu_ir</name><index pos:start="1551:56" pos:end="1551:59">[<expr pos:start="1551:57" pos:end="1551:58"><name pos:start="1551:57" pos:end="1551:58">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1553:17" pos:end="1555:53">else<block type="pseudo" pos:start="1555:21" pos:end="1555:53"><block_content pos:start="1555:21" pos:end="1555:53">

                    <expr_stmt pos:start="1555:21" pos:end="1555:53"><expr pos:start="1555:21" pos:end="1555:52"><call pos:start="1555:21" pos:end="1555:52"><name pos:start="1555:21" pos:end="1555:36">tcg_gen_movi_i64</name><argument_list pos:start="1555:37" pos:end="1555:52">(<argument pos:start="1555:38" pos:end="1555:48"><expr pos:start="1555:38" pos:end="1555:48"><name pos:start="1555:38" pos:end="1555:48"><name pos:start="1555:38" pos:end="1555:44">cpu_fir</name><index pos:start="1555:45" pos:end="1555:48">[<expr pos:start="1555:46" pos:end="1555:47"><name pos:start="1555:46" pos:end="1555:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1555:51" pos:end="1555:51"><expr pos:start="1555:51" pos:end="1555:51"><literal type="number" pos:start="1555:51" pos:end="1555:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1559:13" pos:end="1559:18">break;</break>

        <case pos:start="1561:9" pos:end="1561:18">case <expr pos:start="1561:14" pos:end="1561:17"><literal type="number" pos:start="1561:14" pos:end="1561:17">0x2A</literal></expr>:</case>

            <comment type="block" pos:start="1563:13" pos:end="1563:23">/* SQRTG */</comment>

            <if_stmt pos:start="1565:13" pos:end="1567:33"><if pos:start="1565:13" pos:end="1567:33">if <condition pos:start="1565:16" pos:end="1565:42">(<expr pos:start="1565:17" pos:end="1565:41"><operator pos:start="1565:17" pos:end="1565:17">!</operator><operator pos:start="1565:18" pos:end="1565:18">(</operator><name pos:start="1565:19" pos:end="1565:28"><name pos:start="1565:19" pos:end="1565:21">ctx</name><operator pos:start="1565:22" pos:end="1565:23">-&gt;</operator><name pos:start="1565:24" pos:end="1565:28">amask</name></name> <operator pos:start="1565:30" pos:end="1565:30">&amp;</operator> <name pos:start="1565:32" pos:end="1565:40">AMASK_FIX</name><operator pos:start="1565:41" pos:end="1565:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1567:17" pos:end="1567:33"><block_content pos:start="1567:17" pos:end="1567:33">

                <goto pos:start="1567:17" pos:end="1567:33">goto <name pos:start="1567:22" pos:end="1567:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1569:13" pos:end="1569:47"><expr pos:start="1569:13" pos:end="1569:46"><call pos:start="1569:13" pos:end="1569:46"><name pos:start="1569:13" pos:end="1569:23">gen_farith2</name><argument_list pos:start="1569:24" pos:end="1569:46">(<argument pos:start="1569:25" pos:end="1569:37"><expr pos:start="1569:25" pos:end="1569:37"><operator pos:start="1569:25" pos:end="1569:25">&amp;</operator><name pos:start="1569:26" pos:end="1569:37">helper_sqrtg</name></expr></argument>, <argument pos:start="1569:40" pos:end="1569:41"><expr pos:start="1569:40" pos:end="1569:41"><name pos:start="1569:40" pos:end="1569:41">rb</name></expr></argument>, <argument pos:start="1569:44" pos:end="1569:45"><expr pos:start="1569:44" pos:end="1569:45"><name pos:start="1569:44" pos:end="1569:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1571:13" pos:end="1571:18">break;</break>

        <case pos:start="1573:9" pos:end="1573:19">case <expr pos:start="1573:14" pos:end="1573:18"><literal type="number" pos:start="1573:14" pos:end="1573:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1575:13" pos:end="1575:23">/* SQRTT */</comment>

            <if_stmt pos:start="1577:13" pos:end="1579:33"><if pos:start="1577:13" pos:end="1579:33">if <condition pos:start="1577:16" pos:end="1577:42">(<expr pos:start="1577:17" pos:end="1577:41"><operator pos:start="1577:17" pos:end="1577:17">!</operator><operator pos:start="1577:18" pos:end="1577:18">(</operator><name pos:start="1577:19" pos:end="1577:28"><name pos:start="1577:19" pos:end="1577:21">ctx</name><operator pos:start="1577:22" pos:end="1577:23">-&gt;</operator><name pos:start="1577:24" pos:end="1577:28">amask</name></name> <operator pos:start="1577:30" pos:end="1577:30">&amp;</operator> <name pos:start="1577:32" pos:end="1577:40">AMASK_FIX</name><operator pos:start="1577:41" pos:end="1577:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1579:17" pos:end="1579:33"><block_content pos:start="1579:17" pos:end="1579:33">

                <goto pos:start="1579:17" pos:end="1579:33">goto <name pos:start="1579:22" pos:end="1579:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1581:13" pos:end="1581:47"><expr pos:start="1581:13" pos:end="1581:46"><call pos:start="1581:13" pos:end="1581:46"><name pos:start="1581:13" pos:end="1581:23">gen_farith2</name><argument_list pos:start="1581:24" pos:end="1581:46">(<argument pos:start="1581:25" pos:end="1581:37"><expr pos:start="1581:25" pos:end="1581:37"><operator pos:start="1581:25" pos:end="1581:25">&amp;</operator><name pos:start="1581:26" pos:end="1581:37">helper_sqrtt</name></expr></argument>, <argument pos:start="1581:40" pos:end="1581:41"><expr pos:start="1581:40" pos:end="1581:41"><name pos:start="1581:40" pos:end="1581:41">rb</name></expr></argument>, <argument pos:start="1581:44" pos:end="1581:45"><expr pos:start="1581:44" pos:end="1581:45"><name pos:start="1581:44" pos:end="1581:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1583:13" pos:end="1583:18">break;</break>

        <default pos:start="1585:9" pos:end="1585:16">default:</default>

            <goto pos:start="1587:13" pos:end="1587:29">goto <name pos:start="1587:18" pos:end="1587:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1591:9" pos:end="1591:14">break;</break>

    <case pos:start="1593:5" pos:end="1593:14">case <expr pos:start="1593:10" pos:end="1593:13"><literal type="number" pos:start="1593:10" pos:end="1593:13">0x15</literal></expr>:</case>

        <comment type="block" pos:start="1595:9" pos:end="1595:32">/* VAX floating point */</comment>

        <comment type="block" pos:start="1597:9" pos:end="1597:57">/* XXX: rounding mode and trap are ignored (!) */</comment>

        <switch pos:start="1599:9" pos:end="1757:9">switch <condition pos:start="1599:16" pos:end="1599:21">(<expr pos:start="1599:17" pos:end="1599:20"><name pos:start="1599:17" pos:end="1599:20">fpfn</name></expr>)</condition> <block pos:start="1599:23" pos:end="1757:9">{<block_content pos:start="1601:9" pos:end="1755:29"> <comment type="block" pos:start="1599:25" pos:end="1599:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1601:9" pos:end="1601:18">case <expr pos:start="1601:14" pos:end="1601:17"><literal type="number" pos:start="1601:14" pos:end="1601:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1603:13" pos:end="1603:22">/* ADDF */</comment>

            <expr_stmt pos:start="1605:13" pos:end="1605:50"><expr pos:start="1605:13" pos:end="1605:49"><call pos:start="1605:13" pos:end="1605:49"><name pos:start="1605:13" pos:end="1605:23">gen_farith3</name><argument_list pos:start="1605:24" pos:end="1605:49">(<argument pos:start="1605:25" pos:end="1605:36"><expr pos:start="1605:25" pos:end="1605:36"><operator pos:start="1605:25" pos:end="1605:25">&amp;</operator><name pos:start="1605:26" pos:end="1605:36">helper_addf</name></expr></argument>, <argument pos:start="1605:39" pos:end="1605:40"><expr pos:start="1605:39" pos:end="1605:40"><name pos:start="1605:39" pos:end="1605:40">ra</name></expr></argument>, <argument pos:start="1605:43" pos:end="1605:44"><expr pos:start="1605:43" pos:end="1605:44"><name pos:start="1605:43" pos:end="1605:44">rb</name></expr></argument>, <argument pos:start="1605:47" pos:end="1605:48"><expr pos:start="1605:47" pos:end="1605:48"><name pos:start="1605:47" pos:end="1605:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1607:13" pos:end="1607:18">break;</break>

        <case pos:start="1609:9" pos:end="1609:18">case <expr pos:start="1609:14" pos:end="1609:17"><literal type="number" pos:start="1609:14" pos:end="1609:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1611:13" pos:end="1611:22">/* SUBF */</comment>

            <expr_stmt pos:start="1613:13" pos:end="1613:50"><expr pos:start="1613:13" pos:end="1613:49"><call pos:start="1613:13" pos:end="1613:49"><name pos:start="1613:13" pos:end="1613:23">gen_farith3</name><argument_list pos:start="1613:24" pos:end="1613:49">(<argument pos:start="1613:25" pos:end="1613:36"><expr pos:start="1613:25" pos:end="1613:36"><operator pos:start="1613:25" pos:end="1613:25">&amp;</operator><name pos:start="1613:26" pos:end="1613:36">helper_subf</name></expr></argument>, <argument pos:start="1613:39" pos:end="1613:40"><expr pos:start="1613:39" pos:end="1613:40"><name pos:start="1613:39" pos:end="1613:40">ra</name></expr></argument>, <argument pos:start="1613:43" pos:end="1613:44"><expr pos:start="1613:43" pos:end="1613:44"><name pos:start="1613:43" pos:end="1613:44">rb</name></expr></argument>, <argument pos:start="1613:47" pos:end="1613:48"><expr pos:start="1613:47" pos:end="1613:48"><name pos:start="1613:47" pos:end="1613:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1615:13" pos:end="1615:18">break;</break>

        <case pos:start="1617:9" pos:end="1617:18">case <expr pos:start="1617:14" pos:end="1617:17"><literal type="number" pos:start="1617:14" pos:end="1617:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1619:13" pos:end="1619:22">/* MULF */</comment>

            <expr_stmt pos:start="1621:13" pos:end="1621:50"><expr pos:start="1621:13" pos:end="1621:49"><call pos:start="1621:13" pos:end="1621:49"><name pos:start="1621:13" pos:end="1621:23">gen_farith3</name><argument_list pos:start="1621:24" pos:end="1621:49">(<argument pos:start="1621:25" pos:end="1621:36"><expr pos:start="1621:25" pos:end="1621:36"><operator pos:start="1621:25" pos:end="1621:25">&amp;</operator><name pos:start="1621:26" pos:end="1621:36">helper_mulf</name></expr></argument>, <argument pos:start="1621:39" pos:end="1621:40"><expr pos:start="1621:39" pos:end="1621:40"><name pos:start="1621:39" pos:end="1621:40">ra</name></expr></argument>, <argument pos:start="1621:43" pos:end="1621:44"><expr pos:start="1621:43" pos:end="1621:44"><name pos:start="1621:43" pos:end="1621:44">rb</name></expr></argument>, <argument pos:start="1621:47" pos:end="1621:48"><expr pos:start="1621:47" pos:end="1621:48"><name pos:start="1621:47" pos:end="1621:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1623:13" pos:end="1623:18">break;</break>

        <case pos:start="1625:9" pos:end="1625:18">case <expr pos:start="1625:14" pos:end="1625:17"><literal type="number" pos:start="1625:14" pos:end="1625:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1627:13" pos:end="1627:22">/* DIVF */</comment>

            <expr_stmt pos:start="1629:13" pos:end="1629:50"><expr pos:start="1629:13" pos:end="1629:49"><call pos:start="1629:13" pos:end="1629:49"><name pos:start="1629:13" pos:end="1629:23">gen_farith3</name><argument_list pos:start="1629:24" pos:end="1629:49">(<argument pos:start="1629:25" pos:end="1629:36"><expr pos:start="1629:25" pos:end="1629:36"><operator pos:start="1629:25" pos:end="1629:25">&amp;</operator><name pos:start="1629:26" pos:end="1629:36">helper_divf</name></expr></argument>, <argument pos:start="1629:39" pos:end="1629:40"><expr pos:start="1629:39" pos:end="1629:40"><name pos:start="1629:39" pos:end="1629:40">ra</name></expr></argument>, <argument pos:start="1629:43" pos:end="1629:44"><expr pos:start="1629:43" pos:end="1629:44"><name pos:start="1629:43" pos:end="1629:44">rb</name></expr></argument>, <argument pos:start="1629:47" pos:end="1629:48"><expr pos:start="1629:47" pos:end="1629:48"><name pos:start="1629:47" pos:end="1629:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1631:13" pos:end="1631:18">break;</break>

        <case pos:start="1633:9" pos:end="1642:0">case <expr pos:start="1633:14" pos:end="1633:17"><literal type="number" pos:start="1633:14" pos:end="1633:17">0x1E</literal></expr>:</case>

            <comment type="block" pos:start="1635:13" pos:end="1635:23">/* CVTDG */</comment>

<cpp:if pos:start="1637:1" pos:end="1637:5">#<cpp:directive pos:start="1637:2" pos:end="1637:3">if</cpp:directive> <expr pos:start="1637:5" pos:end="1637:5"><literal type="number" pos:start="1637:5" pos:end="1637:5">0</literal></expr></cpp:if> <comment type="line" pos:start="1637:7" pos:end="1637:13">// TODO</comment>

            gen_farith2(&amp;helper_cvtdg, rb, rc);

<cpp:else pos:start="1641:1" pos:end="1641:5">#<cpp:directive pos:start="1641:2" pos:end="1641:5">else</cpp:directive></cpp:else>

            <goto pos:start="1643:13" pos:end="1646:0">goto <name pos:start="1643:18" pos:end="1643:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="1645:1" pos:end="1645:6">#<cpp:directive pos:start="1645:2" pos:end="1645:6">endif</cpp:directive></cpp:endif>

            <break pos:start="1647:13" pos:end="1647:18">break;</break>

        <case pos:start="1649:9" pos:end="1649:18">case <expr pos:start="1649:14" pos:end="1649:17"><literal type="number" pos:start="1649:14" pos:end="1649:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1651:13" pos:end="1651:22">/* ADDG */</comment>

            <expr_stmt pos:start="1653:13" pos:end="1653:50"><expr pos:start="1653:13" pos:end="1653:49"><call pos:start="1653:13" pos:end="1653:49"><name pos:start="1653:13" pos:end="1653:23">gen_farith3</name><argument_list pos:start="1653:24" pos:end="1653:49">(<argument pos:start="1653:25" pos:end="1653:36"><expr pos:start="1653:25" pos:end="1653:36"><operator pos:start="1653:25" pos:end="1653:25">&amp;</operator><name pos:start="1653:26" pos:end="1653:36">helper_addg</name></expr></argument>, <argument pos:start="1653:39" pos:end="1653:40"><expr pos:start="1653:39" pos:end="1653:40"><name pos:start="1653:39" pos:end="1653:40">ra</name></expr></argument>, <argument pos:start="1653:43" pos:end="1653:44"><expr pos:start="1653:43" pos:end="1653:44"><name pos:start="1653:43" pos:end="1653:44">rb</name></expr></argument>, <argument pos:start="1653:47" pos:end="1653:48"><expr pos:start="1653:47" pos:end="1653:48"><name pos:start="1653:47" pos:end="1653:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1655:13" pos:end="1655:18">break;</break>

        <case pos:start="1657:9" pos:end="1657:18">case <expr pos:start="1657:14" pos:end="1657:17"><literal type="number" pos:start="1657:14" pos:end="1657:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1659:13" pos:end="1659:22">/* SUBG */</comment>

            <expr_stmt pos:start="1661:13" pos:end="1661:50"><expr pos:start="1661:13" pos:end="1661:49"><call pos:start="1661:13" pos:end="1661:49"><name pos:start="1661:13" pos:end="1661:23">gen_farith3</name><argument_list pos:start="1661:24" pos:end="1661:49">(<argument pos:start="1661:25" pos:end="1661:36"><expr pos:start="1661:25" pos:end="1661:36"><operator pos:start="1661:25" pos:end="1661:25">&amp;</operator><name pos:start="1661:26" pos:end="1661:36">helper_subg</name></expr></argument>, <argument pos:start="1661:39" pos:end="1661:40"><expr pos:start="1661:39" pos:end="1661:40"><name pos:start="1661:39" pos:end="1661:40">ra</name></expr></argument>, <argument pos:start="1661:43" pos:end="1661:44"><expr pos:start="1661:43" pos:end="1661:44"><name pos:start="1661:43" pos:end="1661:44">rb</name></expr></argument>, <argument pos:start="1661:47" pos:end="1661:48"><expr pos:start="1661:47" pos:end="1661:48"><name pos:start="1661:47" pos:end="1661:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1663:13" pos:end="1663:18">break;</break>

        <case pos:start="1665:9" pos:end="1665:18">case <expr pos:start="1665:14" pos:end="1665:17"><literal type="number" pos:start="1665:14" pos:end="1665:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1667:13" pos:end="1667:22">/* MULG */</comment>

            <expr_stmt pos:start="1669:13" pos:end="1669:50"><expr pos:start="1669:13" pos:end="1669:49"><call pos:start="1669:13" pos:end="1669:49"><name pos:start="1669:13" pos:end="1669:23">gen_farith3</name><argument_list pos:start="1669:24" pos:end="1669:49">(<argument pos:start="1669:25" pos:end="1669:36"><expr pos:start="1669:25" pos:end="1669:36"><operator pos:start="1669:25" pos:end="1669:25">&amp;</operator><name pos:start="1669:26" pos:end="1669:36">helper_mulg</name></expr></argument>, <argument pos:start="1669:39" pos:end="1669:40"><expr pos:start="1669:39" pos:end="1669:40"><name pos:start="1669:39" pos:end="1669:40">ra</name></expr></argument>, <argument pos:start="1669:43" pos:end="1669:44"><expr pos:start="1669:43" pos:end="1669:44"><name pos:start="1669:43" pos:end="1669:44">rb</name></expr></argument>, <argument pos:start="1669:47" pos:end="1669:48"><expr pos:start="1669:47" pos:end="1669:48"><name pos:start="1669:47" pos:end="1669:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1671:13" pos:end="1671:18">break;</break>

        <case pos:start="1673:9" pos:end="1673:18">case <expr pos:start="1673:14" pos:end="1673:17"><literal type="number" pos:start="1673:14" pos:end="1673:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1675:13" pos:end="1675:22">/* DIVG */</comment>

            <expr_stmt pos:start="1677:13" pos:end="1677:50"><expr pos:start="1677:13" pos:end="1677:49"><call pos:start="1677:13" pos:end="1677:49"><name pos:start="1677:13" pos:end="1677:23">gen_farith3</name><argument_list pos:start="1677:24" pos:end="1677:49">(<argument pos:start="1677:25" pos:end="1677:36"><expr pos:start="1677:25" pos:end="1677:36"><operator pos:start="1677:25" pos:end="1677:25">&amp;</operator><name pos:start="1677:26" pos:end="1677:36">helper_divg</name></expr></argument>, <argument pos:start="1677:39" pos:end="1677:40"><expr pos:start="1677:39" pos:end="1677:40"><name pos:start="1677:39" pos:end="1677:40">ra</name></expr></argument>, <argument pos:start="1677:43" pos:end="1677:44"><expr pos:start="1677:43" pos:end="1677:44"><name pos:start="1677:43" pos:end="1677:44">rb</name></expr></argument>, <argument pos:start="1677:47" pos:end="1677:48"><expr pos:start="1677:47" pos:end="1677:48"><name pos:start="1677:47" pos:end="1677:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1679:13" pos:end="1679:18">break;</break>

        <case pos:start="1681:9" pos:end="1681:18">case <expr pos:start="1681:14" pos:end="1681:17"><literal type="number" pos:start="1681:14" pos:end="1681:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1683:13" pos:end="1683:24">/* CMPGEQ */</comment>

            <expr_stmt pos:start="1685:13" pos:end="1685:52"><expr pos:start="1685:13" pos:end="1685:51"><call pos:start="1685:13" pos:end="1685:51"><name pos:start="1685:13" pos:end="1685:23">gen_farith3</name><argument_list pos:start="1685:24" pos:end="1685:51">(<argument pos:start="1685:25" pos:end="1685:38"><expr pos:start="1685:25" pos:end="1685:38"><operator pos:start="1685:25" pos:end="1685:25">&amp;</operator><name pos:start="1685:26" pos:end="1685:38">helper_cmpgeq</name></expr></argument>, <argument pos:start="1685:41" pos:end="1685:42"><expr pos:start="1685:41" pos:end="1685:42"><name pos:start="1685:41" pos:end="1685:42">ra</name></expr></argument>, <argument pos:start="1685:45" pos:end="1685:46"><expr pos:start="1685:45" pos:end="1685:46"><name pos:start="1685:45" pos:end="1685:46">rb</name></expr></argument>, <argument pos:start="1685:49" pos:end="1685:50"><expr pos:start="1685:49" pos:end="1685:50"><name pos:start="1685:49" pos:end="1685:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1687:13" pos:end="1687:18">break;</break>

        <case pos:start="1689:9" pos:end="1689:18">case <expr pos:start="1689:14" pos:end="1689:17"><literal type="number" pos:start="1689:14" pos:end="1689:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1691:13" pos:end="1691:24">/* CMPGLT */</comment>

            <expr_stmt pos:start="1693:13" pos:end="1693:52"><expr pos:start="1693:13" pos:end="1693:51"><call pos:start="1693:13" pos:end="1693:51"><name pos:start="1693:13" pos:end="1693:23">gen_farith3</name><argument_list pos:start="1693:24" pos:end="1693:51">(<argument pos:start="1693:25" pos:end="1693:38"><expr pos:start="1693:25" pos:end="1693:38"><operator pos:start="1693:25" pos:end="1693:25">&amp;</operator><name pos:start="1693:26" pos:end="1693:38">helper_cmpglt</name></expr></argument>, <argument pos:start="1693:41" pos:end="1693:42"><expr pos:start="1693:41" pos:end="1693:42"><name pos:start="1693:41" pos:end="1693:42">ra</name></expr></argument>, <argument pos:start="1693:45" pos:end="1693:46"><expr pos:start="1693:45" pos:end="1693:46"><name pos:start="1693:45" pos:end="1693:46">rb</name></expr></argument>, <argument pos:start="1693:49" pos:end="1693:50"><expr pos:start="1693:49" pos:end="1693:50"><name pos:start="1693:49" pos:end="1693:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1695:13" pos:end="1695:18">break;</break>

        <case pos:start="1697:9" pos:end="1697:18">case <expr pos:start="1697:14" pos:end="1697:17"><literal type="number" pos:start="1697:14" pos:end="1697:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1699:13" pos:end="1699:24">/* CMPGLE */</comment>

            <expr_stmt pos:start="1701:13" pos:end="1701:52"><expr pos:start="1701:13" pos:end="1701:51"><call pos:start="1701:13" pos:end="1701:51"><name pos:start="1701:13" pos:end="1701:23">gen_farith3</name><argument_list pos:start="1701:24" pos:end="1701:51">(<argument pos:start="1701:25" pos:end="1701:38"><expr pos:start="1701:25" pos:end="1701:38"><operator pos:start="1701:25" pos:end="1701:25">&amp;</operator><name pos:start="1701:26" pos:end="1701:38">helper_cmpgle</name></expr></argument>, <argument pos:start="1701:41" pos:end="1701:42"><expr pos:start="1701:41" pos:end="1701:42"><name pos:start="1701:41" pos:end="1701:42">ra</name></expr></argument>, <argument pos:start="1701:45" pos:end="1701:46"><expr pos:start="1701:45" pos:end="1701:46"><name pos:start="1701:45" pos:end="1701:46">rb</name></expr></argument>, <argument pos:start="1701:49" pos:end="1701:50"><expr pos:start="1701:49" pos:end="1701:50"><name pos:start="1701:49" pos:end="1701:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1703:13" pos:end="1703:18">break;</break>

        <case pos:start="1705:9" pos:end="1705:18">case <expr pos:start="1705:14" pos:end="1705:17"><literal type="number" pos:start="1705:14" pos:end="1705:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1707:13" pos:end="1707:23">/* CVTGF */</comment>

            <expr_stmt pos:start="1709:13" pos:end="1709:47"><expr pos:start="1709:13" pos:end="1709:46"><call pos:start="1709:13" pos:end="1709:46"><name pos:start="1709:13" pos:end="1709:23">gen_farith2</name><argument_list pos:start="1709:24" pos:end="1709:46">(<argument pos:start="1709:25" pos:end="1709:37"><expr pos:start="1709:25" pos:end="1709:37"><operator pos:start="1709:25" pos:end="1709:25">&amp;</operator><name pos:start="1709:26" pos:end="1709:37">helper_cvtgf</name></expr></argument>, <argument pos:start="1709:40" pos:end="1709:41"><expr pos:start="1709:40" pos:end="1709:41"><name pos:start="1709:40" pos:end="1709:41">rb</name></expr></argument>, <argument pos:start="1709:44" pos:end="1709:45"><expr pos:start="1709:44" pos:end="1709:45"><name pos:start="1709:44" pos:end="1709:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1711:13" pos:end="1711:18">break;</break>

        <case pos:start="1713:9" pos:end="1722:0">case <expr pos:start="1713:14" pos:end="1713:17"><literal type="number" pos:start="1713:14" pos:end="1713:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="1715:13" pos:end="1715:23">/* CVTGD */</comment>

<cpp:if pos:start="1717:1" pos:end="1717:5">#<cpp:directive pos:start="1717:2" pos:end="1717:3">if</cpp:directive> <expr pos:start="1717:5" pos:end="1717:5"><literal type="number" pos:start="1717:5" pos:end="1717:5">0</literal></expr></cpp:if> <comment type="line" pos:start="1717:7" pos:end="1717:13">// TODO</comment>

            gen_farith2(ctx, &amp;helper_cvtgd, rb, rc);

<cpp:else pos:start="1721:1" pos:end="1721:5">#<cpp:directive pos:start="1721:2" pos:end="1721:5">else</cpp:directive></cpp:else>

            <goto pos:start="1723:13" pos:end="1726:0">goto <name pos:start="1723:18" pos:end="1723:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="1725:1" pos:end="1725:6">#<cpp:directive pos:start="1725:2" pos:end="1725:6">endif</cpp:directive></cpp:endif>

            <break pos:start="1727:13" pos:end="1727:18">break;</break>

        <case pos:start="1729:9" pos:end="1729:18">case <expr pos:start="1729:14" pos:end="1729:17"><literal type="number" pos:start="1729:14" pos:end="1729:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1731:13" pos:end="1731:23">/* CVTGQ */</comment>

            <expr_stmt pos:start="1733:13" pos:end="1733:47"><expr pos:start="1733:13" pos:end="1733:46"><call pos:start="1733:13" pos:end="1733:46"><name pos:start="1733:13" pos:end="1733:23">gen_farith2</name><argument_list pos:start="1733:24" pos:end="1733:46">(<argument pos:start="1733:25" pos:end="1733:37"><expr pos:start="1733:25" pos:end="1733:37"><operator pos:start="1733:25" pos:end="1733:25">&amp;</operator><name pos:start="1733:26" pos:end="1733:37">helper_cvtgq</name></expr></argument>, <argument pos:start="1733:40" pos:end="1733:41"><expr pos:start="1733:40" pos:end="1733:41"><name pos:start="1733:40" pos:end="1733:41">rb</name></expr></argument>, <argument pos:start="1733:44" pos:end="1733:45"><expr pos:start="1733:44" pos:end="1733:45"><name pos:start="1733:44" pos:end="1733:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1735:13" pos:end="1735:18">break;</break>

        <case pos:start="1737:9" pos:end="1737:18">case <expr pos:start="1737:14" pos:end="1737:17"><literal type="number" pos:start="1737:14" pos:end="1737:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1739:13" pos:end="1739:23">/* CVTQF */</comment>

            <expr_stmt pos:start="1741:13" pos:end="1741:47"><expr pos:start="1741:13" pos:end="1741:46"><call pos:start="1741:13" pos:end="1741:46"><name pos:start="1741:13" pos:end="1741:23">gen_farith2</name><argument_list pos:start="1741:24" pos:end="1741:46">(<argument pos:start="1741:25" pos:end="1741:37"><expr pos:start="1741:25" pos:end="1741:37"><operator pos:start="1741:25" pos:end="1741:25">&amp;</operator><name pos:start="1741:26" pos:end="1741:37">helper_cvtqf</name></expr></argument>, <argument pos:start="1741:40" pos:end="1741:41"><expr pos:start="1741:40" pos:end="1741:41"><name pos:start="1741:40" pos:end="1741:41">rb</name></expr></argument>, <argument pos:start="1741:44" pos:end="1741:45"><expr pos:start="1741:44" pos:end="1741:45"><name pos:start="1741:44" pos:end="1741:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1743:13" pos:end="1743:18">break;</break>

        <case pos:start="1745:9" pos:end="1745:18">case <expr pos:start="1745:14" pos:end="1745:17"><literal type="number" pos:start="1745:14" pos:end="1745:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1747:13" pos:end="1747:23">/* CVTQG */</comment>

            <expr_stmt pos:start="1749:13" pos:end="1749:47"><expr pos:start="1749:13" pos:end="1749:46"><call pos:start="1749:13" pos:end="1749:46"><name pos:start="1749:13" pos:end="1749:23">gen_farith2</name><argument_list pos:start="1749:24" pos:end="1749:46">(<argument pos:start="1749:25" pos:end="1749:37"><expr pos:start="1749:25" pos:end="1749:37"><operator pos:start="1749:25" pos:end="1749:25">&amp;</operator><name pos:start="1749:26" pos:end="1749:37">helper_cvtqg</name></expr></argument>, <argument pos:start="1749:40" pos:end="1749:41"><expr pos:start="1749:40" pos:end="1749:41"><name pos:start="1749:40" pos:end="1749:41">rb</name></expr></argument>, <argument pos:start="1749:44" pos:end="1749:45"><expr pos:start="1749:44" pos:end="1749:45"><name pos:start="1749:44" pos:end="1749:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1751:13" pos:end="1751:18">break;</break>

        <default pos:start="1753:9" pos:end="1753:16">default:</default>

            <goto pos:start="1755:13" pos:end="1755:29">goto <name pos:start="1755:18" pos:end="1755:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1759:9" pos:end="1759:14">break;</break>

    <case pos:start="1761:5" pos:end="1761:14">case <expr pos:start="1761:10" pos:end="1761:13"><literal type="number" pos:start="1761:10" pos:end="1761:13">0x16</literal></expr>:</case>

        <comment type="block" pos:start="1763:9" pos:end="1763:33">/* IEEE floating-point */</comment>

        <comment type="block" pos:start="1765:9" pos:end="1765:58">/* XXX: rounding mode and traps are ignored (!) */</comment>

        <switch pos:start="1767:9" pos:end="1913:9">switch <condition pos:start="1767:16" pos:end="1767:21">(<expr pos:start="1767:17" pos:end="1767:20"><name pos:start="1767:17" pos:end="1767:20">fpfn</name></expr>)</condition> <block pos:start="1767:23" pos:end="1913:9">{<block_content pos:start="1769:9" pos:end="1911:29"> <comment type="block" pos:start="1767:25" pos:end="1767:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1769:9" pos:end="1769:18">case <expr pos:start="1769:14" pos:end="1769:17"><literal type="number" pos:start="1769:14" pos:end="1769:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1771:13" pos:end="1771:22">/* ADDS */</comment>

            <expr_stmt pos:start="1773:13" pos:end="1773:50"><expr pos:start="1773:13" pos:end="1773:49"><call pos:start="1773:13" pos:end="1773:49"><name pos:start="1773:13" pos:end="1773:23">gen_farith3</name><argument_list pos:start="1773:24" pos:end="1773:49">(<argument pos:start="1773:25" pos:end="1773:36"><expr pos:start="1773:25" pos:end="1773:36"><operator pos:start="1773:25" pos:end="1773:25">&amp;</operator><name pos:start="1773:26" pos:end="1773:36">helper_adds</name></expr></argument>, <argument pos:start="1773:39" pos:end="1773:40"><expr pos:start="1773:39" pos:end="1773:40"><name pos:start="1773:39" pos:end="1773:40">ra</name></expr></argument>, <argument pos:start="1773:43" pos:end="1773:44"><expr pos:start="1773:43" pos:end="1773:44"><name pos:start="1773:43" pos:end="1773:44">rb</name></expr></argument>, <argument pos:start="1773:47" pos:end="1773:48"><expr pos:start="1773:47" pos:end="1773:48"><name pos:start="1773:47" pos:end="1773:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1775:13" pos:end="1775:18">break;</break>

        <case pos:start="1777:9" pos:end="1777:18">case <expr pos:start="1777:14" pos:end="1777:17"><literal type="number" pos:start="1777:14" pos:end="1777:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1779:13" pos:end="1779:22">/* SUBS */</comment>

            <expr_stmt pos:start="1781:13" pos:end="1781:50"><expr pos:start="1781:13" pos:end="1781:49"><call pos:start="1781:13" pos:end="1781:49"><name pos:start="1781:13" pos:end="1781:23">gen_farith3</name><argument_list pos:start="1781:24" pos:end="1781:49">(<argument pos:start="1781:25" pos:end="1781:36"><expr pos:start="1781:25" pos:end="1781:36"><operator pos:start="1781:25" pos:end="1781:25">&amp;</operator><name pos:start="1781:26" pos:end="1781:36">helper_subs</name></expr></argument>, <argument pos:start="1781:39" pos:end="1781:40"><expr pos:start="1781:39" pos:end="1781:40"><name pos:start="1781:39" pos:end="1781:40">ra</name></expr></argument>, <argument pos:start="1781:43" pos:end="1781:44"><expr pos:start="1781:43" pos:end="1781:44"><name pos:start="1781:43" pos:end="1781:44">rb</name></expr></argument>, <argument pos:start="1781:47" pos:end="1781:48"><expr pos:start="1781:47" pos:end="1781:48"><name pos:start="1781:47" pos:end="1781:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1783:13" pos:end="1783:18">break;</break>

        <case pos:start="1785:9" pos:end="1785:18">case <expr pos:start="1785:14" pos:end="1785:17"><literal type="number" pos:start="1785:14" pos:end="1785:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1787:13" pos:end="1787:22">/* MULS */</comment>

            <expr_stmt pos:start="1789:13" pos:end="1789:50"><expr pos:start="1789:13" pos:end="1789:49"><call pos:start="1789:13" pos:end="1789:49"><name pos:start="1789:13" pos:end="1789:23">gen_farith3</name><argument_list pos:start="1789:24" pos:end="1789:49">(<argument pos:start="1789:25" pos:end="1789:36"><expr pos:start="1789:25" pos:end="1789:36"><operator pos:start="1789:25" pos:end="1789:25">&amp;</operator><name pos:start="1789:26" pos:end="1789:36">helper_muls</name></expr></argument>, <argument pos:start="1789:39" pos:end="1789:40"><expr pos:start="1789:39" pos:end="1789:40"><name pos:start="1789:39" pos:end="1789:40">ra</name></expr></argument>, <argument pos:start="1789:43" pos:end="1789:44"><expr pos:start="1789:43" pos:end="1789:44"><name pos:start="1789:43" pos:end="1789:44">rb</name></expr></argument>, <argument pos:start="1789:47" pos:end="1789:48"><expr pos:start="1789:47" pos:end="1789:48"><name pos:start="1789:47" pos:end="1789:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1791:13" pos:end="1791:18">break;</break>

        <case pos:start="1793:9" pos:end="1793:18">case <expr pos:start="1793:14" pos:end="1793:17"><literal type="number" pos:start="1793:14" pos:end="1793:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1795:13" pos:end="1795:22">/* DIVS */</comment>

            <expr_stmt pos:start="1797:13" pos:end="1797:50"><expr pos:start="1797:13" pos:end="1797:49"><call pos:start="1797:13" pos:end="1797:49"><name pos:start="1797:13" pos:end="1797:23">gen_farith3</name><argument_list pos:start="1797:24" pos:end="1797:49">(<argument pos:start="1797:25" pos:end="1797:36"><expr pos:start="1797:25" pos:end="1797:36"><operator pos:start="1797:25" pos:end="1797:25">&amp;</operator><name pos:start="1797:26" pos:end="1797:36">helper_divs</name></expr></argument>, <argument pos:start="1797:39" pos:end="1797:40"><expr pos:start="1797:39" pos:end="1797:40"><name pos:start="1797:39" pos:end="1797:40">ra</name></expr></argument>, <argument pos:start="1797:43" pos:end="1797:44"><expr pos:start="1797:43" pos:end="1797:44"><name pos:start="1797:43" pos:end="1797:44">rb</name></expr></argument>, <argument pos:start="1797:47" pos:end="1797:48"><expr pos:start="1797:47" pos:end="1797:48"><name pos:start="1797:47" pos:end="1797:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1799:13" pos:end="1799:18">break;</break>

        <case pos:start="1801:9" pos:end="1801:18">case <expr pos:start="1801:14" pos:end="1801:17"><literal type="number" pos:start="1801:14" pos:end="1801:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1803:13" pos:end="1803:22">/* ADDT */</comment>

            <expr_stmt pos:start="1805:13" pos:end="1805:50"><expr pos:start="1805:13" pos:end="1805:49"><call pos:start="1805:13" pos:end="1805:49"><name pos:start="1805:13" pos:end="1805:23">gen_farith3</name><argument_list pos:start="1805:24" pos:end="1805:49">(<argument pos:start="1805:25" pos:end="1805:36"><expr pos:start="1805:25" pos:end="1805:36"><operator pos:start="1805:25" pos:end="1805:25">&amp;</operator><name pos:start="1805:26" pos:end="1805:36">helper_addt</name></expr></argument>, <argument pos:start="1805:39" pos:end="1805:40"><expr pos:start="1805:39" pos:end="1805:40"><name pos:start="1805:39" pos:end="1805:40">ra</name></expr></argument>, <argument pos:start="1805:43" pos:end="1805:44"><expr pos:start="1805:43" pos:end="1805:44"><name pos:start="1805:43" pos:end="1805:44">rb</name></expr></argument>, <argument pos:start="1805:47" pos:end="1805:48"><expr pos:start="1805:47" pos:end="1805:48"><name pos:start="1805:47" pos:end="1805:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1807:13" pos:end="1807:18">break;</break>

        <case pos:start="1809:9" pos:end="1809:18">case <expr pos:start="1809:14" pos:end="1809:17"><literal type="number" pos:start="1809:14" pos:end="1809:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1811:13" pos:end="1811:22">/* SUBT */</comment>

            <expr_stmt pos:start="1813:13" pos:end="1813:50"><expr pos:start="1813:13" pos:end="1813:49"><call pos:start="1813:13" pos:end="1813:49"><name pos:start="1813:13" pos:end="1813:23">gen_farith3</name><argument_list pos:start="1813:24" pos:end="1813:49">(<argument pos:start="1813:25" pos:end="1813:36"><expr pos:start="1813:25" pos:end="1813:36"><operator pos:start="1813:25" pos:end="1813:25">&amp;</operator><name pos:start="1813:26" pos:end="1813:36">helper_subt</name></expr></argument>, <argument pos:start="1813:39" pos:end="1813:40"><expr pos:start="1813:39" pos:end="1813:40"><name pos:start="1813:39" pos:end="1813:40">ra</name></expr></argument>, <argument pos:start="1813:43" pos:end="1813:44"><expr pos:start="1813:43" pos:end="1813:44"><name pos:start="1813:43" pos:end="1813:44">rb</name></expr></argument>, <argument pos:start="1813:47" pos:end="1813:48"><expr pos:start="1813:47" pos:end="1813:48"><name pos:start="1813:47" pos:end="1813:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1815:13" pos:end="1815:18">break;</break>

        <case pos:start="1817:9" pos:end="1817:18">case <expr pos:start="1817:14" pos:end="1817:17"><literal type="number" pos:start="1817:14" pos:end="1817:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1819:13" pos:end="1819:22">/* MULT */</comment>

            <expr_stmt pos:start="1821:13" pos:end="1821:50"><expr pos:start="1821:13" pos:end="1821:49"><call pos:start="1821:13" pos:end="1821:49"><name pos:start="1821:13" pos:end="1821:23">gen_farith3</name><argument_list pos:start="1821:24" pos:end="1821:49">(<argument pos:start="1821:25" pos:end="1821:36"><expr pos:start="1821:25" pos:end="1821:36"><operator pos:start="1821:25" pos:end="1821:25">&amp;</operator><name pos:start="1821:26" pos:end="1821:36">helper_mult</name></expr></argument>, <argument pos:start="1821:39" pos:end="1821:40"><expr pos:start="1821:39" pos:end="1821:40"><name pos:start="1821:39" pos:end="1821:40">ra</name></expr></argument>, <argument pos:start="1821:43" pos:end="1821:44"><expr pos:start="1821:43" pos:end="1821:44"><name pos:start="1821:43" pos:end="1821:44">rb</name></expr></argument>, <argument pos:start="1821:47" pos:end="1821:48"><expr pos:start="1821:47" pos:end="1821:48"><name pos:start="1821:47" pos:end="1821:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1823:13" pos:end="1823:18">break;</break>

        <case pos:start="1825:9" pos:end="1825:18">case <expr pos:start="1825:14" pos:end="1825:17"><literal type="number" pos:start="1825:14" pos:end="1825:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1827:13" pos:end="1827:22">/* DIVT */</comment>

            <expr_stmt pos:start="1829:13" pos:end="1829:50"><expr pos:start="1829:13" pos:end="1829:49"><call pos:start="1829:13" pos:end="1829:49"><name pos:start="1829:13" pos:end="1829:23">gen_farith3</name><argument_list pos:start="1829:24" pos:end="1829:49">(<argument pos:start="1829:25" pos:end="1829:36"><expr pos:start="1829:25" pos:end="1829:36"><operator pos:start="1829:25" pos:end="1829:25">&amp;</operator><name pos:start="1829:26" pos:end="1829:36">helper_divt</name></expr></argument>, <argument pos:start="1829:39" pos:end="1829:40"><expr pos:start="1829:39" pos:end="1829:40"><name pos:start="1829:39" pos:end="1829:40">ra</name></expr></argument>, <argument pos:start="1829:43" pos:end="1829:44"><expr pos:start="1829:43" pos:end="1829:44"><name pos:start="1829:43" pos:end="1829:44">rb</name></expr></argument>, <argument pos:start="1829:47" pos:end="1829:48"><expr pos:start="1829:47" pos:end="1829:48"><name pos:start="1829:47" pos:end="1829:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1831:13" pos:end="1831:18">break;</break>

        <case pos:start="1833:9" pos:end="1833:18">case <expr pos:start="1833:14" pos:end="1833:17"><literal type="number" pos:start="1833:14" pos:end="1833:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1835:13" pos:end="1835:24">/* CMPTUN */</comment>

            <expr_stmt pos:start="1837:13" pos:end="1837:52"><expr pos:start="1837:13" pos:end="1837:51"><call pos:start="1837:13" pos:end="1837:51"><name pos:start="1837:13" pos:end="1837:23">gen_farith3</name><argument_list pos:start="1837:24" pos:end="1837:51">(<argument pos:start="1837:25" pos:end="1837:38"><expr pos:start="1837:25" pos:end="1837:38"><operator pos:start="1837:25" pos:end="1837:25">&amp;</operator><name pos:start="1837:26" pos:end="1837:38">helper_cmptun</name></expr></argument>, <argument pos:start="1837:41" pos:end="1837:42"><expr pos:start="1837:41" pos:end="1837:42"><name pos:start="1837:41" pos:end="1837:42">ra</name></expr></argument>, <argument pos:start="1837:45" pos:end="1837:46"><expr pos:start="1837:45" pos:end="1837:46"><name pos:start="1837:45" pos:end="1837:46">rb</name></expr></argument>, <argument pos:start="1837:49" pos:end="1837:50"><expr pos:start="1837:49" pos:end="1837:50"><name pos:start="1837:49" pos:end="1837:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1839:13" pos:end="1839:18">break;</break>

        <case pos:start="1841:9" pos:end="1841:18">case <expr pos:start="1841:14" pos:end="1841:17"><literal type="number" pos:start="1841:14" pos:end="1841:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1843:13" pos:end="1843:24">/* CMPTEQ */</comment>

            <expr_stmt pos:start="1845:13" pos:end="1845:52"><expr pos:start="1845:13" pos:end="1845:51"><call pos:start="1845:13" pos:end="1845:51"><name pos:start="1845:13" pos:end="1845:23">gen_farith3</name><argument_list pos:start="1845:24" pos:end="1845:51">(<argument pos:start="1845:25" pos:end="1845:38"><expr pos:start="1845:25" pos:end="1845:38"><operator pos:start="1845:25" pos:end="1845:25">&amp;</operator><name pos:start="1845:26" pos:end="1845:38">helper_cmpteq</name></expr></argument>, <argument pos:start="1845:41" pos:end="1845:42"><expr pos:start="1845:41" pos:end="1845:42"><name pos:start="1845:41" pos:end="1845:42">ra</name></expr></argument>, <argument pos:start="1845:45" pos:end="1845:46"><expr pos:start="1845:45" pos:end="1845:46"><name pos:start="1845:45" pos:end="1845:46">rb</name></expr></argument>, <argument pos:start="1845:49" pos:end="1845:50"><expr pos:start="1845:49" pos:end="1845:50"><name pos:start="1845:49" pos:end="1845:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1847:13" pos:end="1847:18">break;</break>

        <case pos:start="1849:9" pos:end="1849:18">case <expr pos:start="1849:14" pos:end="1849:17"><literal type="number" pos:start="1849:14" pos:end="1849:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1851:13" pos:end="1851:24">/* CMPTLT */</comment>

            <expr_stmt pos:start="1853:13" pos:end="1853:52"><expr pos:start="1853:13" pos:end="1853:51"><call pos:start="1853:13" pos:end="1853:51"><name pos:start="1853:13" pos:end="1853:23">gen_farith3</name><argument_list pos:start="1853:24" pos:end="1853:51">(<argument pos:start="1853:25" pos:end="1853:38"><expr pos:start="1853:25" pos:end="1853:38"><operator pos:start="1853:25" pos:end="1853:25">&amp;</operator><name pos:start="1853:26" pos:end="1853:38">helper_cmptlt</name></expr></argument>, <argument pos:start="1853:41" pos:end="1853:42"><expr pos:start="1853:41" pos:end="1853:42"><name pos:start="1853:41" pos:end="1853:42">ra</name></expr></argument>, <argument pos:start="1853:45" pos:end="1853:46"><expr pos:start="1853:45" pos:end="1853:46"><name pos:start="1853:45" pos:end="1853:46">rb</name></expr></argument>, <argument pos:start="1853:49" pos:end="1853:50"><expr pos:start="1853:49" pos:end="1853:50"><name pos:start="1853:49" pos:end="1853:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1855:13" pos:end="1855:18">break;</break>

        <case pos:start="1857:9" pos:end="1857:18">case <expr pos:start="1857:14" pos:end="1857:17"><literal type="number" pos:start="1857:14" pos:end="1857:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1859:13" pos:end="1859:24">/* CMPTLE */</comment>

            <expr_stmt pos:start="1861:13" pos:end="1861:52"><expr pos:start="1861:13" pos:end="1861:51"><call pos:start="1861:13" pos:end="1861:51"><name pos:start="1861:13" pos:end="1861:23">gen_farith3</name><argument_list pos:start="1861:24" pos:end="1861:51">(<argument pos:start="1861:25" pos:end="1861:38"><expr pos:start="1861:25" pos:end="1861:38"><operator pos:start="1861:25" pos:end="1861:25">&amp;</operator><name pos:start="1861:26" pos:end="1861:38">helper_cmptle</name></expr></argument>, <argument pos:start="1861:41" pos:end="1861:42"><expr pos:start="1861:41" pos:end="1861:42"><name pos:start="1861:41" pos:end="1861:42">ra</name></expr></argument>, <argument pos:start="1861:45" pos:end="1861:46"><expr pos:start="1861:45" pos:end="1861:46"><name pos:start="1861:45" pos:end="1861:46">rb</name></expr></argument>, <argument pos:start="1861:49" pos:end="1861:50"><expr pos:start="1861:49" pos:end="1861:50"><name pos:start="1861:49" pos:end="1861:50">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1863:13" pos:end="1863:18">break;</break>

        <case pos:start="1865:9" pos:end="1865:18">case <expr pos:start="1865:14" pos:end="1865:17"><literal type="number" pos:start="1865:14" pos:end="1865:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1867:13" pos:end="1867:32">/* XXX: incorrect */</comment>

            <if_stmt pos:start="1869:13" pos:end="1881:13"><if pos:start="1869:13" pos:end="1875:13">if <condition pos:start="1869:16" pos:end="1869:30">(<expr pos:start="1869:17" pos:end="1869:29"><name pos:start="1869:17" pos:end="1869:20">fn11</name> <operator pos:start="1869:22" pos:end="1869:23">==</operator> <literal type="number" pos:start="1869:25" pos:end="1869:29">0x2AC</literal></expr>)</condition> <block pos:start="1869:32" pos:end="1875:13">{<block_content pos:start="1873:17" pos:end="1873:51">

                <comment type="block" pos:start="1871:17" pos:end="1871:27">/* CVTST */</comment>

                <expr_stmt pos:start="1873:17" pos:end="1873:51"><expr pos:start="1873:17" pos:end="1873:50"><call pos:start="1873:17" pos:end="1873:50"><name pos:start="1873:17" pos:end="1873:27">gen_farith2</name><argument_list pos:start="1873:28" pos:end="1873:50">(<argument pos:start="1873:29" pos:end="1873:41"><expr pos:start="1873:29" pos:end="1873:41"><operator pos:start="1873:29" pos:end="1873:29">&amp;</operator><name pos:start="1873:30" pos:end="1873:41">helper_cvtst</name></expr></argument>, <argument pos:start="1873:44" pos:end="1873:45"><expr pos:start="1873:44" pos:end="1873:45"><name pos:start="1873:44" pos:end="1873:45">rb</name></expr></argument>, <argument pos:start="1873:48" pos:end="1873:49"><expr pos:start="1873:48" pos:end="1873:49"><name pos:start="1873:48" pos:end="1873:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1875:15" pos:end="1881:13">else <block pos:start="1875:20" pos:end="1881:13">{<block_content pos:start="1879:17" pos:end="1879:51">

                <comment type="block" pos:start="1877:17" pos:end="1877:27">/* CVTTS */</comment>

                <expr_stmt pos:start="1879:17" pos:end="1879:51"><expr pos:start="1879:17" pos:end="1879:50"><call pos:start="1879:17" pos:end="1879:50"><name pos:start="1879:17" pos:end="1879:27">gen_farith2</name><argument_list pos:start="1879:28" pos:end="1879:50">(<argument pos:start="1879:29" pos:end="1879:41"><expr pos:start="1879:29" pos:end="1879:41"><operator pos:start="1879:29" pos:end="1879:29">&amp;</operator><name pos:start="1879:30" pos:end="1879:41">helper_cvtts</name></expr></argument>, <argument pos:start="1879:44" pos:end="1879:45"><expr pos:start="1879:44" pos:end="1879:45"><name pos:start="1879:44" pos:end="1879:45">rb</name></expr></argument>, <argument pos:start="1879:48" pos:end="1879:49"><expr pos:start="1879:48" pos:end="1879:49"><name pos:start="1879:48" pos:end="1879:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1883:13" pos:end="1883:18">break;</break>

        <case pos:start="1885:9" pos:end="1885:18">case <expr pos:start="1885:14" pos:end="1885:17"><literal type="number" pos:start="1885:14" pos:end="1885:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1887:13" pos:end="1887:23">/* CVTTQ */</comment>

            <expr_stmt pos:start="1889:13" pos:end="1889:47"><expr pos:start="1889:13" pos:end="1889:46"><call pos:start="1889:13" pos:end="1889:46"><name pos:start="1889:13" pos:end="1889:23">gen_farith2</name><argument_list pos:start="1889:24" pos:end="1889:46">(<argument pos:start="1889:25" pos:end="1889:37"><expr pos:start="1889:25" pos:end="1889:37"><operator pos:start="1889:25" pos:end="1889:25">&amp;</operator><name pos:start="1889:26" pos:end="1889:37">helper_cvttq</name></expr></argument>, <argument pos:start="1889:40" pos:end="1889:41"><expr pos:start="1889:40" pos:end="1889:41"><name pos:start="1889:40" pos:end="1889:41">rb</name></expr></argument>, <argument pos:start="1889:44" pos:end="1889:45"><expr pos:start="1889:44" pos:end="1889:45"><name pos:start="1889:44" pos:end="1889:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1891:13" pos:end="1891:18">break;</break>

        <case pos:start="1893:9" pos:end="1893:18">case <expr pos:start="1893:14" pos:end="1893:17"><literal type="number" pos:start="1893:14" pos:end="1893:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1895:13" pos:end="1895:23">/* CVTQS */</comment>

            <expr_stmt pos:start="1897:13" pos:end="1897:47"><expr pos:start="1897:13" pos:end="1897:46"><call pos:start="1897:13" pos:end="1897:46"><name pos:start="1897:13" pos:end="1897:23">gen_farith2</name><argument_list pos:start="1897:24" pos:end="1897:46">(<argument pos:start="1897:25" pos:end="1897:37"><expr pos:start="1897:25" pos:end="1897:37"><operator pos:start="1897:25" pos:end="1897:25">&amp;</operator><name pos:start="1897:26" pos:end="1897:37">helper_cvtqs</name></expr></argument>, <argument pos:start="1897:40" pos:end="1897:41"><expr pos:start="1897:40" pos:end="1897:41"><name pos:start="1897:40" pos:end="1897:41">rb</name></expr></argument>, <argument pos:start="1897:44" pos:end="1897:45"><expr pos:start="1897:44" pos:end="1897:45"><name pos:start="1897:44" pos:end="1897:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1899:13" pos:end="1899:18">break;</break>

        <case pos:start="1901:9" pos:end="1901:18">case <expr pos:start="1901:14" pos:end="1901:17"><literal type="number" pos:start="1901:14" pos:end="1901:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1903:13" pos:end="1903:23">/* CVTQT */</comment>

            <expr_stmt pos:start="1905:13" pos:end="1905:47"><expr pos:start="1905:13" pos:end="1905:46"><call pos:start="1905:13" pos:end="1905:46"><name pos:start="1905:13" pos:end="1905:23">gen_farith2</name><argument_list pos:start="1905:24" pos:end="1905:46">(<argument pos:start="1905:25" pos:end="1905:37"><expr pos:start="1905:25" pos:end="1905:37"><operator pos:start="1905:25" pos:end="1905:25">&amp;</operator><name pos:start="1905:26" pos:end="1905:37">helper_cvtqt</name></expr></argument>, <argument pos:start="1905:40" pos:end="1905:41"><expr pos:start="1905:40" pos:end="1905:41"><name pos:start="1905:40" pos:end="1905:41">rb</name></expr></argument>, <argument pos:start="1905:44" pos:end="1905:45"><expr pos:start="1905:44" pos:end="1905:45"><name pos:start="1905:44" pos:end="1905:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1907:13" pos:end="1907:18">break;</break>

        <default pos:start="1909:9" pos:end="1909:16">default:</default>

            <goto pos:start="1911:13" pos:end="1911:29">goto <name pos:start="1911:18" pos:end="1911:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1915:9" pos:end="1915:14">break;</break>

    <case pos:start="1917:5" pos:end="1917:14">case <expr pos:start="1917:10" pos:end="1917:13"><literal type="number" pos:start="1917:10" pos:end="1917:13">0x17</literal></expr>:</case>

        <switch pos:start="1919:9" pos:end="2071:9">switch <condition pos:start="1919:16" pos:end="1919:21">(<expr pos:start="1919:17" pos:end="1919:20"><name pos:start="1919:17" pos:end="1919:20">fn11</name></expr>)</condition> <block pos:start="1919:23" pos:end="2071:9">{<block_content pos:start="1921:9" pos:end="2069:29">

        <case pos:start="1921:9" pos:end="1921:19">case <expr pos:start="1921:14" pos:end="1921:18"><literal type="number" pos:start="1921:14" pos:end="1921:18">0x010</literal></expr>:</case>

            <comment type="block" pos:start="1923:13" pos:end="1923:23">/* CVTLQ */</comment>

            <expr_stmt pos:start="1925:13" pos:end="1925:47"><expr pos:start="1925:13" pos:end="1925:46"><call pos:start="1925:13" pos:end="1925:46"><name pos:start="1925:13" pos:end="1925:23">gen_farith2</name><argument_list pos:start="1925:24" pos:end="1925:46">(<argument pos:start="1925:25" pos:end="1925:37"><expr pos:start="1925:25" pos:end="1925:37"><operator pos:start="1925:25" pos:end="1925:25">&amp;</operator><name pos:start="1925:26" pos:end="1925:37">helper_cvtlq</name></expr></argument>, <argument pos:start="1925:40" pos:end="1925:41"><expr pos:start="1925:40" pos:end="1925:41"><name pos:start="1925:40" pos:end="1925:41">rb</name></expr></argument>, <argument pos:start="1925:44" pos:end="1925:45"><expr pos:start="1925:44" pos:end="1925:45"><name pos:start="1925:44" pos:end="1925:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1927:13" pos:end="1927:18">break;</break>

        <case pos:start="1929:9" pos:end="1929:19">case <expr pos:start="1929:14" pos:end="1929:18"><literal type="number" pos:start="1929:14" pos:end="1929:18">0x020</literal></expr>:</case>

            <if_stmt pos:start="1931:13" pos:end="1945:13"><if pos:start="1931:13" pos:end="1945:13">if <condition pos:start="1931:16" pos:end="1931:33">(<expr pos:start="1931:17" pos:end="1931:32"><call pos:start="1931:17" pos:end="1931:32"><name pos:start="1931:17" pos:end="1931:22">likely</name><argument_list pos:start="1931:23" pos:end="1931:32">(<argument pos:start="1931:24" pos:end="1931:31"><expr pos:start="1931:24" pos:end="1931:31"><name pos:start="1931:24" pos:end="1931:25">rc</name> <operator pos:start="1931:27" pos:end="1931:28">!=</operator> <literal type="number" pos:start="1931:30" pos:end="1931:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1931:35" pos:end="1945:13">{<block_content pos:start="1933:17" pos:end="1943:58">

                <if_stmt pos:start="1933:17" pos:end="1943:58"><if pos:start="1933:17" pos:end="1937:62">if <condition pos:start="1933:20" pos:end="1933:29">(<expr pos:start="1933:21" pos:end="1933:28"><name pos:start="1933:21" pos:end="1933:22">ra</name> <operator pos:start="1933:24" pos:end="1933:25">==</operator> <name pos:start="1933:27" pos:end="1933:28">rb</name></expr>)</condition><block type="pseudo" pos:start="1937:21" pos:end="1937:62"><block_content pos:start="1937:21" pos:end="1937:62">

                    <comment type="block" pos:start="1935:21" pos:end="1935:30">/* FMOV */</comment>

                    <expr_stmt pos:start="1937:21" pos:end="1937:62"><expr pos:start="1937:21" pos:end="1937:61"><call pos:start="1937:21" pos:end="1937:61"><name pos:start="1937:21" pos:end="1937:35">tcg_gen_mov_i64</name><argument_list pos:start="1937:36" pos:end="1937:61">(<argument pos:start="1937:37" pos:end="1937:47"><expr pos:start="1937:37" pos:end="1937:47"><name pos:start="1937:37" pos:end="1937:47"><name pos:start="1937:37" pos:end="1937:43">cpu_fir</name><index pos:start="1937:44" pos:end="1937:47">[<expr pos:start="1937:45" pos:end="1937:46"><name pos:start="1937:45" pos:end="1937:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1937:50" pos:end="1937:60"><expr pos:start="1937:50" pos:end="1937:60"><name pos:start="1937:50" pos:end="1937:60"><name pos:start="1937:50" pos:end="1937:56">cpu_fir</name><index pos:start="1937:57" pos:end="1937:60">[<expr pos:start="1937:58" pos:end="1937:59"><name pos:start="1937:58" pos:end="1937:59">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1939:17" pos:end="1943:58">else<block type="pseudo" pos:start="1943:21" pos:end="1943:58"><block_content pos:start="1943:21" pos:end="1943:58">

                    <comment type="block" pos:start="1941:21" pos:end="1941:30">/* CPYS */</comment>

                    <expr_stmt pos:start="1943:21" pos:end="1943:58"><expr pos:start="1943:21" pos:end="1943:57"><call pos:start="1943:21" pos:end="1943:57"><name pos:start="1943:21" pos:end="1943:31">gen_farith3</name><argument_list pos:start="1943:32" pos:end="1943:57">(<argument pos:start="1943:33" pos:end="1943:44"><expr pos:start="1943:33" pos:end="1943:44"><operator pos:start="1943:33" pos:end="1943:33">&amp;</operator><name pos:start="1943:34" pos:end="1943:44">helper_cpys</name></expr></argument>, <argument pos:start="1943:47" pos:end="1943:48"><expr pos:start="1943:47" pos:end="1943:48"><name pos:start="1943:47" pos:end="1943:48">ra</name></expr></argument>, <argument pos:start="1943:51" pos:end="1943:52"><expr pos:start="1943:51" pos:end="1943:52"><name pos:start="1943:51" pos:end="1943:52">rb</name></expr></argument>, <argument pos:start="1943:55" pos:end="1943:56"><expr pos:start="1943:55" pos:end="1943:56"><name pos:start="1943:55" pos:end="1943:56">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1947:13" pos:end="1947:18">break;</break>

        <case pos:start="1949:9" pos:end="1949:19">case <expr pos:start="1949:14" pos:end="1949:18"><literal type="number" pos:start="1949:14" pos:end="1949:18">0x021</literal></expr>:</case>

            <comment type="block" pos:start="1951:13" pos:end="1951:23">/* CPYSN */</comment>

            <expr_stmt pos:start="1953:13" pos:end="1953:51"><expr pos:start="1953:13" pos:end="1953:50"><call pos:start="1953:13" pos:end="1953:50"><name pos:start="1953:13" pos:end="1953:23">gen_farith3</name><argument_list pos:start="1953:24" pos:end="1953:50">(<argument pos:start="1953:25" pos:end="1953:37"><expr pos:start="1953:25" pos:end="1953:37"><operator pos:start="1953:25" pos:end="1953:25">&amp;</operator><name pos:start="1953:26" pos:end="1953:37">helper_cpysn</name></expr></argument>, <argument pos:start="1953:40" pos:end="1953:41"><expr pos:start="1953:40" pos:end="1953:41"><name pos:start="1953:40" pos:end="1953:41">ra</name></expr></argument>, <argument pos:start="1953:44" pos:end="1953:45"><expr pos:start="1953:44" pos:end="1953:45"><name pos:start="1953:44" pos:end="1953:45">rb</name></expr></argument>, <argument pos:start="1953:48" pos:end="1953:49"><expr pos:start="1953:48" pos:end="1953:49"><name pos:start="1953:48" pos:end="1953:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1955:13" pos:end="1955:18">break;</break>

        <case pos:start="1957:9" pos:end="1957:19">case <expr pos:start="1957:14" pos:end="1957:18"><literal type="number" pos:start="1957:14" pos:end="1957:18">0x022</literal></expr>:</case>

            <comment type="block" pos:start="1959:13" pos:end="1959:23">/* CPYSE */</comment>

            <expr_stmt pos:start="1961:13" pos:end="1961:51"><expr pos:start="1961:13" pos:end="1961:50"><call pos:start="1961:13" pos:end="1961:50"><name pos:start="1961:13" pos:end="1961:23">gen_farith3</name><argument_list pos:start="1961:24" pos:end="1961:50">(<argument pos:start="1961:25" pos:end="1961:37"><expr pos:start="1961:25" pos:end="1961:37"><operator pos:start="1961:25" pos:end="1961:25">&amp;</operator><name pos:start="1961:26" pos:end="1961:37">helper_cpyse</name></expr></argument>, <argument pos:start="1961:40" pos:end="1961:41"><expr pos:start="1961:40" pos:end="1961:41"><name pos:start="1961:40" pos:end="1961:41">ra</name></expr></argument>, <argument pos:start="1961:44" pos:end="1961:45"><expr pos:start="1961:44" pos:end="1961:45"><name pos:start="1961:44" pos:end="1961:45">rb</name></expr></argument>, <argument pos:start="1961:48" pos:end="1961:49"><expr pos:start="1961:48" pos:end="1961:49"><name pos:start="1961:48" pos:end="1961:49">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1963:13" pos:end="1963:18">break;</break>

        <case pos:start="1965:9" pos:end="1965:19">case <expr pos:start="1965:14" pos:end="1965:18"><literal type="number" pos:start="1965:14" pos:end="1965:18">0x024</literal></expr>:</case>

            <comment type="block" pos:start="1967:13" pos:end="1967:25">/* MT_FPCR */</comment>

            <if_stmt pos:start="1969:13" pos:end="1981:13"><if pos:start="1969:13" pos:end="1971:67">if <condition pos:start="1969:16" pos:end="1969:33">(<expr pos:start="1969:17" pos:end="1969:32"><call pos:start="1969:17" pos:end="1969:32"><name pos:start="1969:17" pos:end="1969:22">likely</name><argument_list pos:start="1969:23" pos:end="1969:32">(<argument pos:start="1969:24" pos:end="1969:31"><expr pos:start="1969:24" pos:end="1969:31"><name pos:start="1969:24" pos:end="1969:25">ra</name> <operator pos:start="1969:27" pos:end="1969:28">!=</operator> <literal type="number" pos:start="1969:30" pos:end="1969:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1971:17" pos:end="1971:67"><block_content pos:start="1971:17" pos:end="1971:67">

                <expr_stmt pos:start="1971:17" pos:end="1971:67"><expr pos:start="1971:17" pos:end="1971:66"><call pos:start="1971:17" pos:end="1971:66"><name pos:start="1971:17" pos:end="1971:34">tcg_gen_helper_0_1</name><argument_list pos:start="1971:35" pos:end="1971:66">(<argument pos:start="1971:36" pos:end="1971:52"><expr pos:start="1971:36" pos:end="1971:52"><name pos:start="1971:36" pos:end="1971:52">helper_store_fpcr</name></expr></argument>, <argument pos:start="1971:55" pos:end="1971:65"><expr pos:start="1971:55" pos:end="1971:65"><name pos:start="1971:55" pos:end="1971:65"><name pos:start="1971:55" pos:end="1971:61">cpu_fir</name><index pos:start="1971:62" pos:end="1971:65">[<expr pos:start="1971:63" pos:end="1971:64"><name pos:start="1971:63" pos:end="1971:64">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1973:13" pos:end="1981:13">else <block pos:start="1973:18" pos:end="1981:13">{<block_content pos:start="1975:17" pos:end="1979:35">

                <decl_stmt pos:start="1975:17" pos:end="1975:44"><decl pos:start="1975:17" pos:end="1975:43"><type pos:start="1975:17" pos:end="1975:20"><name pos:start="1975:17" pos:end="1975:20">TCGv</name></type> <name pos:start="1975:22" pos:end="1975:24">tmp</name> <init pos:start="1975:26" pos:end="1975:43">= <expr pos:start="1975:28" pos:end="1975:43"><call pos:start="1975:28" pos:end="1975:43"><name pos:start="1975:28" pos:end="1975:40">tcg_const_i64</name><argument_list pos:start="1975:41" pos:end="1975:43">(<argument pos:start="1975:42" pos:end="1975:42"><expr pos:start="1975:42" pos:end="1975:42"><literal type="number" pos:start="1975:42" pos:end="1975:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="1977:17" pos:end="1977:59"><expr pos:start="1977:17" pos:end="1977:58"><call pos:start="1977:17" pos:end="1977:58"><name pos:start="1977:17" pos:end="1977:34">tcg_gen_helper_0_1</name><argument_list pos:start="1977:35" pos:end="1977:58">(<argument pos:start="1977:36" pos:end="1977:52"><expr pos:start="1977:36" pos:end="1977:52"><name pos:start="1977:36" pos:end="1977:52">helper_store_fpcr</name></expr></argument>, <argument pos:start="1977:55" pos:end="1977:57"><expr pos:start="1977:55" pos:end="1977:57"><name pos:start="1977:55" pos:end="1977:57">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1979:17" pos:end="1979:35"><expr pos:start="1979:17" pos:end="1979:34"><call pos:start="1979:17" pos:end="1979:34"><name pos:start="1979:17" pos:end="1979:29">tcg_temp_free</name><argument_list pos:start="1979:30" pos:end="1979:34">(<argument pos:start="1979:31" pos:end="1979:33"><expr pos:start="1979:31" pos:end="1979:33"><name pos:start="1979:31" pos:end="1979:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1983:13" pos:end="1983:18">break;</break>

        <case pos:start="1985:9" pos:end="1985:19">case <expr pos:start="1985:14" pos:end="1985:18"><literal type="number" pos:start="1985:14" pos:end="1985:18">0x025</literal></expr>:</case>

            <comment type="block" pos:start="1987:13" pos:end="1987:25">/* MF_FPCR */</comment>

            <if_stmt pos:start="1989:13" pos:end="1991:66"><if pos:start="1989:13" pos:end="1991:66">if <condition pos:start="1989:16" pos:end="1989:33">(<expr pos:start="1989:17" pos:end="1989:32"><call pos:start="1989:17" pos:end="1989:32"><name pos:start="1989:17" pos:end="1989:22">likely</name><argument_list pos:start="1989:23" pos:end="1989:32">(<argument pos:start="1989:24" pos:end="1989:31"><expr pos:start="1989:24" pos:end="1989:31"><name pos:start="1989:24" pos:end="1989:25">ra</name> <operator pos:start="1989:27" pos:end="1989:28">!=</operator> <literal type="number" pos:start="1989:30" pos:end="1989:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1991:17" pos:end="1991:66"><block_content pos:start="1991:17" pos:end="1991:66">

                <expr_stmt pos:start="1991:17" pos:end="1991:66"><expr pos:start="1991:17" pos:end="1991:65"><call pos:start="1991:17" pos:end="1991:65"><name pos:start="1991:17" pos:end="1991:34">tcg_gen_helper_1_0</name><argument_list pos:start="1991:35" pos:end="1991:65">(<argument pos:start="1991:36" pos:end="1991:51"><expr pos:start="1991:36" pos:end="1991:51"><name pos:start="1991:36" pos:end="1991:51">helper_load_fpcr</name></expr></argument>, <argument pos:start="1991:54" pos:end="1991:64"><expr pos:start="1991:54" pos:end="1991:64"><name pos:start="1991:54" pos:end="1991:64"><name pos:start="1991:54" pos:end="1991:60">cpu_fir</name><index pos:start="1991:61" pos:end="1991:64">[<expr pos:start="1991:62" pos:end="1991:63"><name pos:start="1991:62" pos:end="1991:63">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="1993:13" pos:end="1993:18">break;</break>

        <case pos:start="1995:9" pos:end="1995:19">case <expr pos:start="1995:14" pos:end="1995:18"><literal type="number" pos:start="1995:14" pos:end="1995:18">0x02A</literal></expr>:</case>

            <comment type="block" pos:start="1997:13" pos:end="1997:25">/* FCMOVEQ */</comment>

            <expr_stmt pos:start="1999:13" pos:end="1999:50"><expr pos:start="1999:13" pos:end="1999:49"><call pos:start="1999:13" pos:end="1999:49"><name pos:start="1999:13" pos:end="1999:21">gen_fcmov</name><argument_list pos:start="1999:22" pos:end="1999:49">(<argument pos:start="1999:23" pos:end="1999:36"><expr pos:start="1999:23" pos:end="1999:36"><operator pos:start="1999:23" pos:end="1999:23">&amp;</operator><name pos:start="1999:24" pos:end="1999:36">helper_cmpfeq</name></expr></argument>, <argument pos:start="1999:39" pos:end="1999:40"><expr pos:start="1999:39" pos:end="1999:40"><name pos:start="1999:39" pos:end="1999:40">ra</name></expr></argument>, <argument pos:start="1999:43" pos:end="1999:44"><expr pos:start="1999:43" pos:end="1999:44"><name pos:start="1999:43" pos:end="1999:44">rb</name></expr></argument>, <argument pos:start="1999:47" pos:end="1999:48"><expr pos:start="1999:47" pos:end="1999:48"><name pos:start="1999:47" pos:end="1999:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2001:13" pos:end="2001:18">break;</break>

        <case pos:start="2003:9" pos:end="2003:19">case <expr pos:start="2003:14" pos:end="2003:18"><literal type="number" pos:start="2003:14" pos:end="2003:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="2005:13" pos:end="2005:25">/* FCMOVNE */</comment>

            <expr_stmt pos:start="2007:13" pos:end="2007:50"><expr pos:start="2007:13" pos:end="2007:49"><call pos:start="2007:13" pos:end="2007:49"><name pos:start="2007:13" pos:end="2007:21">gen_fcmov</name><argument_list pos:start="2007:22" pos:end="2007:49">(<argument pos:start="2007:23" pos:end="2007:36"><expr pos:start="2007:23" pos:end="2007:36"><operator pos:start="2007:23" pos:end="2007:23">&amp;</operator><name pos:start="2007:24" pos:end="2007:36">helper_cmpfne</name></expr></argument>, <argument pos:start="2007:39" pos:end="2007:40"><expr pos:start="2007:39" pos:end="2007:40"><name pos:start="2007:39" pos:end="2007:40">ra</name></expr></argument>, <argument pos:start="2007:43" pos:end="2007:44"><expr pos:start="2007:43" pos:end="2007:44"><name pos:start="2007:43" pos:end="2007:44">rb</name></expr></argument>, <argument pos:start="2007:47" pos:end="2007:48"><expr pos:start="2007:47" pos:end="2007:48"><name pos:start="2007:47" pos:end="2007:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2009:13" pos:end="2009:18">break;</break>

        <case pos:start="2011:9" pos:end="2011:19">case <expr pos:start="2011:14" pos:end="2011:18"><literal type="number" pos:start="2011:14" pos:end="2011:18">0x02C</literal></expr>:</case>

            <comment type="block" pos:start="2013:13" pos:end="2013:25">/* FCMOVLT */</comment>

            <expr_stmt pos:start="2015:13" pos:end="2015:50"><expr pos:start="2015:13" pos:end="2015:49"><call pos:start="2015:13" pos:end="2015:49"><name pos:start="2015:13" pos:end="2015:21">gen_fcmov</name><argument_list pos:start="2015:22" pos:end="2015:49">(<argument pos:start="2015:23" pos:end="2015:36"><expr pos:start="2015:23" pos:end="2015:36"><operator pos:start="2015:23" pos:end="2015:23">&amp;</operator><name pos:start="2015:24" pos:end="2015:36">helper_cmpflt</name></expr></argument>, <argument pos:start="2015:39" pos:end="2015:40"><expr pos:start="2015:39" pos:end="2015:40"><name pos:start="2015:39" pos:end="2015:40">ra</name></expr></argument>, <argument pos:start="2015:43" pos:end="2015:44"><expr pos:start="2015:43" pos:end="2015:44"><name pos:start="2015:43" pos:end="2015:44">rb</name></expr></argument>, <argument pos:start="2015:47" pos:end="2015:48"><expr pos:start="2015:47" pos:end="2015:48"><name pos:start="2015:47" pos:end="2015:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2017:13" pos:end="2017:18">break;</break>

        <case pos:start="2019:9" pos:end="2019:19">case <expr pos:start="2019:14" pos:end="2019:18"><literal type="number" pos:start="2019:14" pos:end="2019:18">0x02D</literal></expr>:</case>

            <comment type="block" pos:start="2021:13" pos:end="2021:25">/* FCMOVGE */</comment>

            <expr_stmt pos:start="2023:13" pos:end="2023:50"><expr pos:start="2023:13" pos:end="2023:49"><call pos:start="2023:13" pos:end="2023:49"><name pos:start="2023:13" pos:end="2023:21">gen_fcmov</name><argument_list pos:start="2023:22" pos:end="2023:49">(<argument pos:start="2023:23" pos:end="2023:36"><expr pos:start="2023:23" pos:end="2023:36"><operator pos:start="2023:23" pos:end="2023:23">&amp;</operator><name pos:start="2023:24" pos:end="2023:36">helper_cmpfge</name></expr></argument>, <argument pos:start="2023:39" pos:end="2023:40"><expr pos:start="2023:39" pos:end="2023:40"><name pos:start="2023:39" pos:end="2023:40">ra</name></expr></argument>, <argument pos:start="2023:43" pos:end="2023:44"><expr pos:start="2023:43" pos:end="2023:44"><name pos:start="2023:43" pos:end="2023:44">rb</name></expr></argument>, <argument pos:start="2023:47" pos:end="2023:48"><expr pos:start="2023:47" pos:end="2023:48"><name pos:start="2023:47" pos:end="2023:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2025:13" pos:end="2025:18">break;</break>

        <case pos:start="2027:9" pos:end="2027:19">case <expr pos:start="2027:14" pos:end="2027:18"><literal type="number" pos:start="2027:14" pos:end="2027:18">0x02E</literal></expr>:</case>

            <comment type="block" pos:start="2029:13" pos:end="2029:25">/* FCMOVLE */</comment>

            <expr_stmt pos:start="2031:13" pos:end="2031:50"><expr pos:start="2031:13" pos:end="2031:49"><call pos:start="2031:13" pos:end="2031:49"><name pos:start="2031:13" pos:end="2031:21">gen_fcmov</name><argument_list pos:start="2031:22" pos:end="2031:49">(<argument pos:start="2031:23" pos:end="2031:36"><expr pos:start="2031:23" pos:end="2031:36"><operator pos:start="2031:23" pos:end="2031:23">&amp;</operator><name pos:start="2031:24" pos:end="2031:36">helper_cmpfle</name></expr></argument>, <argument pos:start="2031:39" pos:end="2031:40"><expr pos:start="2031:39" pos:end="2031:40"><name pos:start="2031:39" pos:end="2031:40">ra</name></expr></argument>, <argument pos:start="2031:43" pos:end="2031:44"><expr pos:start="2031:43" pos:end="2031:44"><name pos:start="2031:43" pos:end="2031:44">rb</name></expr></argument>, <argument pos:start="2031:47" pos:end="2031:48"><expr pos:start="2031:47" pos:end="2031:48"><name pos:start="2031:47" pos:end="2031:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2033:13" pos:end="2033:18">break;</break>

        <case pos:start="2035:9" pos:end="2035:19">case <expr pos:start="2035:14" pos:end="2035:18"><literal type="number" pos:start="2035:14" pos:end="2035:18">0x02F</literal></expr>:</case>

            <comment type="block" pos:start="2037:13" pos:end="2037:25">/* FCMOVGT */</comment>

            <expr_stmt pos:start="2039:13" pos:end="2039:50"><expr pos:start="2039:13" pos:end="2039:49"><call pos:start="2039:13" pos:end="2039:49"><name pos:start="2039:13" pos:end="2039:21">gen_fcmov</name><argument_list pos:start="2039:22" pos:end="2039:49">(<argument pos:start="2039:23" pos:end="2039:36"><expr pos:start="2039:23" pos:end="2039:36"><operator pos:start="2039:23" pos:end="2039:23">&amp;</operator><name pos:start="2039:24" pos:end="2039:36">helper_cmpfgt</name></expr></argument>, <argument pos:start="2039:39" pos:end="2039:40"><expr pos:start="2039:39" pos:end="2039:40"><name pos:start="2039:39" pos:end="2039:40">ra</name></expr></argument>, <argument pos:start="2039:43" pos:end="2039:44"><expr pos:start="2039:43" pos:end="2039:44"><name pos:start="2039:43" pos:end="2039:44">rb</name></expr></argument>, <argument pos:start="2039:47" pos:end="2039:48"><expr pos:start="2039:47" pos:end="2039:48"><name pos:start="2039:47" pos:end="2039:48">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2041:13" pos:end="2041:18">break;</break>

        <case pos:start="2043:9" pos:end="2043:19">case <expr pos:start="2043:14" pos:end="2043:18"><literal type="number" pos:start="2043:14" pos:end="2043:18">0x030</literal></expr>:</case>

            <comment type="block" pos:start="2045:13" pos:end="2045:23">/* CVTQL */</comment>

            <expr_stmt pos:start="2047:13" pos:end="2047:47"><expr pos:start="2047:13" pos:end="2047:46"><call pos:start="2047:13" pos:end="2047:46"><name pos:start="2047:13" pos:end="2047:23">gen_farith2</name><argument_list pos:start="2047:24" pos:end="2047:46">(<argument pos:start="2047:25" pos:end="2047:37"><expr pos:start="2047:25" pos:end="2047:37"><operator pos:start="2047:25" pos:end="2047:25">&amp;</operator><name pos:start="2047:26" pos:end="2047:37">helper_cvtql</name></expr></argument>, <argument pos:start="2047:40" pos:end="2047:41"><expr pos:start="2047:40" pos:end="2047:41"><name pos:start="2047:40" pos:end="2047:41">rb</name></expr></argument>, <argument pos:start="2047:44" pos:end="2047:45"><expr pos:start="2047:44" pos:end="2047:45"><name pos:start="2047:44" pos:end="2047:45">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2049:13" pos:end="2049:18">break;</break>

        <case pos:start="2051:9" pos:end="2051:19">case <expr pos:start="2051:14" pos:end="2051:18"><literal type="number" pos:start="2051:14" pos:end="2051:18">0x130</literal></expr>:</case>

            <comment type="block" pos:start="2053:13" pos:end="2053:25">/* CVTQL/V */</comment>

            <expr_stmt pos:start="2055:13" pos:end="2055:48"><expr pos:start="2055:13" pos:end="2055:47"><call pos:start="2055:13" pos:end="2055:47"><name pos:start="2055:13" pos:end="2055:23">gen_farith2</name><argument_list pos:start="2055:24" pos:end="2055:47">(<argument pos:start="2055:25" pos:end="2055:38"><expr pos:start="2055:25" pos:end="2055:38"><operator pos:start="2055:25" pos:end="2055:25">&amp;</operator><name pos:start="2055:26" pos:end="2055:38">helper_cvtqlv</name></expr></argument>, <argument pos:start="2055:41" pos:end="2055:42"><expr pos:start="2055:41" pos:end="2055:42"><name pos:start="2055:41" pos:end="2055:42">rb</name></expr></argument>, <argument pos:start="2055:45" pos:end="2055:46"><expr pos:start="2055:45" pos:end="2055:46"><name pos:start="2055:45" pos:end="2055:46">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2057:13" pos:end="2057:18">break;</break>

        <case pos:start="2059:9" pos:end="2059:19">case <expr pos:start="2059:14" pos:end="2059:18"><literal type="number" pos:start="2059:14" pos:end="2059:18">0x530</literal></expr>:</case>

            <comment type="block" pos:start="2061:13" pos:end="2061:26">/* CVTQL/SV */</comment>

            <expr_stmt pos:start="2063:13" pos:end="2063:49"><expr pos:start="2063:13" pos:end="2063:48"><call pos:start="2063:13" pos:end="2063:48"><name pos:start="2063:13" pos:end="2063:23">gen_farith2</name><argument_list pos:start="2063:24" pos:end="2063:48">(<argument pos:start="2063:25" pos:end="2063:39"><expr pos:start="2063:25" pos:end="2063:39"><operator pos:start="2063:25" pos:end="2063:25">&amp;</operator><name pos:start="2063:26" pos:end="2063:39">helper_cvtqlsv</name></expr></argument>, <argument pos:start="2063:42" pos:end="2063:43"><expr pos:start="2063:42" pos:end="2063:43"><name pos:start="2063:42" pos:end="2063:43">rb</name></expr></argument>, <argument pos:start="2063:46" pos:end="2063:47"><expr pos:start="2063:46" pos:end="2063:47"><name pos:start="2063:46" pos:end="2063:47">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2065:13" pos:end="2065:18">break;</break>

        <default pos:start="2067:9" pos:end="2067:16">default:</default>

            <goto pos:start="2069:13" pos:end="2069:29">goto <name pos:start="2069:18" pos:end="2069:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2073:9" pos:end="2073:14">break;</break>

    <case pos:start="2075:5" pos:end="2075:14">case <expr pos:start="2075:10" pos:end="2075:13"><literal type="number" pos:start="2075:10" pos:end="2075:13">0x18</literal></expr>:</case>

        <switch pos:start="2077:9" pos:end="2191:9">switch <condition pos:start="2077:16" pos:end="2077:33">(<expr pos:start="2077:17" pos:end="2077:32"><operator pos:start="2077:17" pos:end="2077:17">(</operator><name pos:start="2077:18" pos:end="2077:25">uint16_t</name><operator pos:start="2077:26" pos:end="2077:26">)</operator><name pos:start="2077:27" pos:end="2077:32">disp16</name></expr>)</condition> <block pos:start="2077:35" pos:end="2191:9">{<block_content pos:start="2079:9" pos:end="2189:29">

        <case pos:start="2079:9" pos:end="2079:20">case <expr pos:start="2079:14" pos:end="2079:19"><literal type="number" pos:start="2079:14" pos:end="2079:19">0x0000</literal></expr>:</case>

            <comment type="block" pos:start="2081:13" pos:end="2081:23">/* TRAPB */</comment>

            <comment type="block" pos:start="2083:13" pos:end="2083:54">/* No-op. Just exit from the current tb */</comment>

            <expr_stmt pos:start="2085:13" pos:end="2085:20"><expr pos:start="2085:13" pos:end="2085:19"><name pos:start="2085:13" pos:end="2085:15">ret</name> <operator pos:start="2085:17" pos:end="2085:17">=</operator> <literal type="number" pos:start="2085:19" pos:end="2085:19">2</literal></expr>;</expr_stmt>

            <break pos:start="2087:13" pos:end="2087:18">break;</break>

        <case pos:start="2089:9" pos:end="2089:20">case <expr pos:start="2089:14" pos:end="2089:19"><literal type="number" pos:start="2089:14" pos:end="2089:19">0x0400</literal></expr>:</case>

            <comment type="block" pos:start="2091:13" pos:end="2091:22">/* EXCB */</comment>

            <comment type="block" pos:start="2093:13" pos:end="2093:54">/* No-op. Just exit from the current tb */</comment>

            <expr_stmt pos:start="2095:13" pos:end="2095:20"><expr pos:start="2095:13" pos:end="2095:19"><name pos:start="2095:13" pos:end="2095:15">ret</name> <operator pos:start="2095:17" pos:end="2095:17">=</operator> <literal type="number" pos:start="2095:19" pos:end="2095:19">2</literal></expr>;</expr_stmt>

            <break pos:start="2097:13" pos:end="2097:18">break;</break>

        <case pos:start="2099:9" pos:end="2099:20">case <expr pos:start="2099:14" pos:end="2099:19"><literal type="number" pos:start="2099:14" pos:end="2099:19">0x4000</literal></expr>:</case>

            <comment type="block" pos:start="2101:13" pos:end="2101:20">/* MB */</comment>

            <comment type="block" pos:start="2103:13" pos:end="2103:23">/* No-op */</comment>

            <break pos:start="2105:13" pos:end="2105:18">break;</break>

        <case pos:start="2107:9" pos:end="2107:20">case <expr pos:start="2107:14" pos:end="2107:19"><literal type="number" pos:start="2107:14" pos:end="2107:19">0x4400</literal></expr>:</case>

            <comment type="block" pos:start="2109:13" pos:end="2109:21">/* WMB */</comment>

            <comment type="block" pos:start="2111:13" pos:end="2111:23">/* No-op */</comment>

            <break pos:start="2113:13" pos:end="2113:18">break;</break>

        <case pos:start="2115:9" pos:end="2115:20">case <expr pos:start="2115:14" pos:end="2115:19"><literal type="number" pos:start="2115:14" pos:end="2115:19">0x8000</literal></expr>:</case>

            <comment type="block" pos:start="2117:13" pos:end="2117:23">/* FETCH */</comment>

            <comment type="block" pos:start="2119:13" pos:end="2119:23">/* No-op */</comment>

            <break pos:start="2121:13" pos:end="2121:18">break;</break>

        <case pos:start="2123:9" pos:end="2123:20">case <expr pos:start="2123:14" pos:end="2123:19"><literal type="number" pos:start="2123:14" pos:end="2123:19">0xA000</literal></expr>:</case>

            <comment type="block" pos:start="2125:13" pos:end="2125:25">/* FETCH_M */</comment>

            <comment type="block" pos:start="2127:13" pos:end="2127:23">/* No-op */</comment>

            <break pos:start="2129:13" pos:end="2129:18">break;</break>

        <case pos:start="2131:9" pos:end="2131:20">case <expr pos:start="2131:14" pos:end="2131:19"><literal type="number" pos:start="2131:14" pos:end="2131:19">0xC000</literal></expr>:</case>

            <comment type="block" pos:start="2133:13" pos:end="2133:22">/* RPCC */</comment>

            <if_stmt pos:start="2135:13" pos:end="2137:64"><if pos:start="2135:13" pos:end="2137:64">if <condition pos:start="2135:16" pos:end="2135:25">(<expr pos:start="2135:17" pos:end="2135:24"><name pos:start="2135:17" pos:end="2135:18">ra</name> <operator pos:start="2135:20" pos:end="2135:21">!=</operator> <literal type="number" pos:start="2135:23" pos:end="2135:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2137:17" pos:end="2137:64"><block_content pos:start="2137:17" pos:end="2137:64">

                <expr_stmt pos:start="2137:17" pos:end="2137:64"><expr pos:start="2137:17" pos:end="2137:63"><call pos:start="2137:17" pos:end="2137:63"><name pos:start="2137:17" pos:end="2137:34">tcg_gen_helper_1_0</name><argument_list pos:start="2137:35" pos:end="2137:63">(<argument pos:start="2137:36" pos:end="2137:50"><expr pos:start="2137:36" pos:end="2137:50"><name pos:start="2137:36" pos:end="2137:50">helper_load_pcc</name></expr></argument>, <argument pos:start="2137:53" pos:end="2137:62"><expr pos:start="2137:53" pos:end="2137:62"><name pos:start="2137:53" pos:end="2137:62"><name pos:start="2137:53" pos:end="2137:58">cpu_ir</name><index pos:start="2137:59" pos:end="2137:62">[<expr pos:start="2137:60" pos:end="2137:61"><name pos:start="2137:60" pos:end="2137:61">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2139:13" pos:end="2139:18">break;</break>

        <case pos:start="2141:9" pos:end="2141:20">case <expr pos:start="2141:14" pos:end="2141:19"><literal type="number" pos:start="2141:14" pos:end="2141:19">0xE000</literal></expr>:</case>

            <comment type="block" pos:start="2143:13" pos:end="2143:20">/* RC */</comment>

            <if_stmt pos:start="2145:13" pos:end="2147:58"><if pos:start="2145:13" pos:end="2147:58">if <condition pos:start="2145:16" pos:end="2145:25">(<expr pos:start="2145:17" pos:end="2145:24"><name pos:start="2145:17" pos:end="2145:18">ra</name> <operator pos:start="2145:20" pos:end="2145:21">!=</operator> <literal type="number" pos:start="2145:23" pos:end="2145:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2147:17" pos:end="2147:58"><block_content pos:start="2147:17" pos:end="2147:58">

                <expr_stmt pos:start="2147:17" pos:end="2147:58"><expr pos:start="2147:17" pos:end="2147:57"><call pos:start="2147:17" pos:end="2147:57"><name pos:start="2147:17" pos:end="2147:34">tcg_gen_helper_1_0</name><argument_list pos:start="2147:35" pos:end="2147:57">(<argument pos:start="2147:36" pos:end="2147:44"><expr pos:start="2147:36" pos:end="2147:44"><name pos:start="2147:36" pos:end="2147:44">helper_rc</name></expr></argument>, <argument pos:start="2147:47" pos:end="2147:56"><expr pos:start="2147:47" pos:end="2147:56"><name pos:start="2147:47" pos:end="2147:56"><name pos:start="2147:47" pos:end="2147:52">cpu_ir</name><index pos:start="2147:53" pos:end="2147:56">[<expr pos:start="2147:54" pos:end="2147:55"><name pos:start="2147:54" pos:end="2147:55">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2149:13" pos:end="2149:18">break;</break>

        <case pos:start="2151:9" pos:end="2162:0">case <expr pos:start="2151:14" pos:end="2151:19"><literal type="number" pos:start="2151:14" pos:end="2151:19">0xE800</literal></expr>:</case>

            <comment type="block" pos:start="2153:13" pos:end="2153:21">/* ECB */</comment>

            <comment type="block" pos:start="2155:13" pos:end="2155:57">/* XXX: TODO: evict tb cache at address rb */</comment>

<cpp:if pos:start="2157:1" pos:end="2157:5">#<cpp:directive pos:start="2157:2" pos:end="2157:3">if</cpp:directive> <expr pos:start="2157:5" pos:end="2157:5"><literal type="number" pos:start="2157:5" pos:end="2157:5">0</literal></expr></cpp:if>

            ret = 2;

<cpp:else pos:start="2161:1" pos:end="2161:5">#<cpp:directive pos:start="2161:2" pos:end="2161:5">else</cpp:directive></cpp:else>

            <goto pos:start="2163:13" pos:end="2166:0">goto <name pos:start="2163:18" pos:end="2163:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="2165:1" pos:end="2165:6">#<cpp:directive pos:start="2165:2" pos:end="2165:6">endif</cpp:directive></cpp:endif>

            <break pos:start="2167:13" pos:end="2167:18">break;</break>

        <case pos:start="2169:9" pos:end="2169:20">case <expr pos:start="2169:14" pos:end="2169:19"><literal type="number" pos:start="2169:14" pos:end="2169:19">0xF000</literal></expr>:</case>

            <comment type="block" pos:start="2171:13" pos:end="2171:20">/* RS */</comment>

            <if_stmt pos:start="2173:13" pos:end="2175:58"><if pos:start="2173:13" pos:end="2175:58">if <condition pos:start="2173:16" pos:end="2173:25">(<expr pos:start="2173:17" pos:end="2173:24"><name pos:start="2173:17" pos:end="2173:18">ra</name> <operator pos:start="2173:20" pos:end="2173:21">!=</operator> <literal type="number" pos:start="2173:23" pos:end="2173:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2175:17" pos:end="2175:58"><block_content pos:start="2175:17" pos:end="2175:58">

                <expr_stmt pos:start="2175:17" pos:end="2175:58"><expr pos:start="2175:17" pos:end="2175:57"><call pos:start="2175:17" pos:end="2175:57"><name pos:start="2175:17" pos:end="2175:34">tcg_gen_helper_1_0</name><argument_list pos:start="2175:35" pos:end="2175:57">(<argument pos:start="2175:36" pos:end="2175:44"><expr pos:start="2175:36" pos:end="2175:44"><name pos:start="2175:36" pos:end="2175:44">helper_rs</name></expr></argument>, <argument pos:start="2175:47" pos:end="2175:56"><expr pos:start="2175:47" pos:end="2175:56"><name pos:start="2175:47" pos:end="2175:56"><name pos:start="2175:47" pos:end="2175:52">cpu_ir</name><index pos:start="2175:53" pos:end="2175:56">[<expr pos:start="2175:54" pos:end="2175:55"><name pos:start="2175:54" pos:end="2175:55">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2177:13" pos:end="2177:18">break;</break>

        <case pos:start="2179:9" pos:end="2179:20">case <expr pos:start="2179:14" pos:end="2179:19"><literal type="number" pos:start="2179:14" pos:end="2179:19">0xF800</literal></expr>:</case>

            <comment type="block" pos:start="2181:13" pos:end="2181:22">/* WH64 */</comment>

            <comment type="block" pos:start="2183:13" pos:end="2183:23">/* No-op */</comment>

            <break pos:start="2185:13" pos:end="2185:18">break;</break>

        <default pos:start="2187:9" pos:end="2187:16">default:</default>

            <goto pos:start="2189:13" pos:end="2189:29">goto <name pos:start="2189:18" pos:end="2189:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2193:9" pos:end="2193:14">break;</break>

    <case pos:start="2195:5" pos:end="2200:0">case <expr pos:start="2195:10" pos:end="2195:13"><literal type="number" pos:start="2195:10" pos:end="2195:13">0x19</literal></expr>:</case>

        <comment type="block" pos:start="2197:9" pos:end="2197:31">/* HW_MFPR (PALcode) */</comment>

<cpp:if pos:start="2199:1" pos:end="2199:30">#<cpp:directive pos:start="2199:2" pos:end="2199:3">if</cpp:directive> <expr pos:start="2199:5" pos:end="2199:30"><call pos:start="2199:5" pos:end="2199:30"><name pos:start="2199:5" pos:end="2199:11">defined</name> <argument_list pos:start="2199:13" pos:end="2199:30">(<argument pos:start="2199:14" pos:end="2199:29"><expr pos:start="2199:14" pos:end="2199:29"><name pos:start="2199:14" pos:end="2199:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2201:9" pos:end="2204:0">goto <name pos:start="2201:14" pos:end="2201:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2203:1" pos:end="2203:5">#<cpp:directive pos:start="2203:2" pos:end="2203:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2205:9" pos:end="2207:29"><if pos:start="2205:9" pos:end="2207:29">if <condition pos:start="2205:12" pos:end="2205:27">(<expr pos:start="2205:13" pos:end="2205:26"><operator pos:start="2205:13" pos:end="2205:13">!</operator><name pos:start="2205:14" pos:end="2205:26"><name pos:start="2205:14" pos:end="2205:16">ctx</name><operator pos:start="2205:17" pos:end="2205:18">-&gt;</operator><name pos:start="2205:19" pos:end="2205:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2207:13" pos:end="2207:29"><block_content pos:start="2207:13" pos:end="2207:29">

            <goto pos:start="2207:13" pos:end="2207:29">goto <name pos:start="2207:18" pos:end="2207:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2209:9" pos:end="2217:9"><if pos:start="2209:9" pos:end="2217:9">if <condition pos:start="2209:12" pos:end="2209:21">(<expr pos:start="2209:13" pos:end="2209:20"><name pos:start="2209:13" pos:end="2209:14">ra</name> <operator pos:start="2209:16" pos:end="2209:17">!=</operator> <literal type="number" pos:start="2209:19" pos:end="2209:20">31</literal></expr>)</condition> <block pos:start="2209:23" pos:end="2217:9">{<block_content pos:start="2211:13" pos:end="2215:31">

            <decl_stmt pos:start="2211:13" pos:end="2211:50"><decl pos:start="2211:13" pos:end="2211:49"><type pos:start="2211:13" pos:end="2211:16"><name pos:start="2211:13" pos:end="2211:16">TCGv</name></type> <name pos:start="2211:18" pos:end="2211:20">tmp</name> <init pos:start="2211:22" pos:end="2211:49">= <expr pos:start="2211:24" pos:end="2211:49"><call pos:start="2211:24" pos:end="2211:49"><name pos:start="2211:24" pos:end="2211:36">tcg_const_i32</name><argument_list pos:start="2211:37" pos:end="2211:49">(<argument pos:start="2211:38" pos:end="2211:48"><expr pos:start="2211:38" pos:end="2211:48"><name pos:start="2211:38" pos:end="2211:41">insn</name> <operator pos:start="2211:43" pos:end="2211:43">&amp;</operator> <literal type="number" pos:start="2211:45" pos:end="2211:48">0xFF</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="2213:13" pos:end="2213:73"><expr pos:start="2213:13" pos:end="2213:72"><call pos:start="2213:13" pos:end="2213:72"><name pos:start="2213:13" pos:end="2213:30">tcg_gen_helper_1_2</name><argument_list pos:start="2213:31" pos:end="2213:72">(<argument pos:start="2213:32" pos:end="2213:42"><expr pos:start="2213:32" pos:end="2213:42"><name pos:start="2213:32" pos:end="2213:42">helper_mfpr</name></expr></argument>, <argument pos:start="2213:45" pos:end="2213:54"><expr pos:start="2213:45" pos:end="2213:54"><name pos:start="2213:45" pos:end="2213:54"><name pos:start="2213:45" pos:end="2213:50">cpu_ir</name><index pos:start="2213:51" pos:end="2213:54">[<expr pos:start="2213:52" pos:end="2213:53"><name pos:start="2213:52" pos:end="2213:53">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2213:57" pos:end="2213:59"><expr pos:start="2213:57" pos:end="2213:59"><name pos:start="2213:57" pos:end="2213:59">tmp</name></expr></argument>, <argument pos:start="2213:62" pos:end="2213:71"><expr pos:start="2213:62" pos:end="2213:71"><name pos:start="2213:62" pos:end="2213:71"><name pos:start="2213:62" pos:end="2213:67">cpu_ir</name><index pos:start="2213:68" pos:end="2213:71">[<expr pos:start="2213:69" pos:end="2213:70"><name pos:start="2213:69" pos:end="2213:70">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2215:13" pos:end="2215:31"><expr pos:start="2215:13" pos:end="2215:30"><call pos:start="2215:13" pos:end="2215:30"><name pos:start="2215:13" pos:end="2215:25">tcg_temp_free</name><argument_list pos:start="2215:26" pos:end="2215:30">(<argument pos:start="2215:27" pos:end="2215:29"><expr pos:start="2215:27" pos:end="2215:29"><name pos:start="2215:27" pos:end="2215:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2219:9" pos:end="2222:0">break;</break>

<cpp:endif pos:start="2221:1" pos:end="2221:6">#<cpp:directive pos:start="2221:2" pos:end="2221:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2223:5" pos:end="2223:14">case <expr pos:start="2223:10" pos:end="2223:13"><literal type="number" pos:start="2223:10" pos:end="2223:13">0x1A</literal></expr>:</case>

        <if_stmt pos:start="2225:9" pos:end="2227:50"><if pos:start="2225:9" pos:end="2227:50">if <condition pos:start="2225:12" pos:end="2225:21">(<expr pos:start="2225:13" pos:end="2225:20"><name pos:start="2225:13" pos:end="2225:14">ra</name> <operator pos:start="2225:16" pos:end="2225:17">!=</operator> <literal type="number" pos:start="2225:19" pos:end="2225:20">31</literal></expr>)</condition><block type="pseudo" pos:start="2227:13" pos:end="2227:50"><block_content pos:start="2227:13" pos:end="2227:50">

            <expr_stmt pos:start="2227:13" pos:end="2227:50"><expr pos:start="2227:13" pos:end="2227:49"><call pos:start="2227:13" pos:end="2227:49"><name pos:start="2227:13" pos:end="2227:28">tcg_gen_movi_i64</name><argument_list pos:start="2227:29" pos:end="2227:49">(<argument pos:start="2227:30" pos:end="2227:39"><expr pos:start="2227:30" pos:end="2227:39"><name pos:start="2227:30" pos:end="2227:39"><name pos:start="2227:30" pos:end="2227:35">cpu_ir</name><index pos:start="2227:36" pos:end="2227:39">[<expr pos:start="2227:37" pos:end="2227:38"><name pos:start="2227:37" pos:end="2227:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2227:42" pos:end="2227:48"><expr pos:start="2227:42" pos:end="2227:48"><name pos:start="2227:42" pos:end="2227:48"><name pos:start="2227:42" pos:end="2227:44">ctx</name><operator pos:start="2227:45" pos:end="2227:46">-&gt;</operator><name pos:start="2227:47" pos:end="2227:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="2229:9" pos:end="2235:40"><if pos:start="2229:9" pos:end="2231:53">if <condition pos:start="2229:12" pos:end="2229:21">(<expr pos:start="2229:13" pos:end="2229:20"><name pos:start="2229:13" pos:end="2229:14">rb</name> <operator pos:start="2229:16" pos:end="2229:17">!=</operator> <literal type="number" pos:start="2229:19" pos:end="2229:20">31</literal></expr>)</condition><block type="pseudo" pos:start="2231:13" pos:end="2231:53"><block_content pos:start="2231:13" pos:end="2231:53">

            <expr_stmt pos:start="2231:13" pos:end="2231:53"><expr pos:start="2231:13" pos:end="2231:52"><call pos:start="2231:13" pos:end="2231:52"><name pos:start="2231:13" pos:end="2231:28">tcg_gen_andi_i64</name><argument_list pos:start="2231:29" pos:end="2231:52">(<argument pos:start="2231:30" pos:end="2231:35"><expr pos:start="2231:30" pos:end="2231:35"><name pos:start="2231:30" pos:end="2231:35">cpu_pc</name></expr></argument>, <argument pos:start="2231:38" pos:end="2231:47"><expr pos:start="2231:38" pos:end="2231:47"><name pos:start="2231:38" pos:end="2231:47"><name pos:start="2231:38" pos:end="2231:43">cpu_ir</name><index pos:start="2231:44" pos:end="2231:47">[<expr pos:start="2231:45" pos:end="2231:46"><name pos:start="2231:45" pos:end="2231:46">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2231:50" pos:end="2231:51"><expr pos:start="2231:50" pos:end="2231:51"><operator pos:start="2231:50" pos:end="2231:50">~</operator><literal type="number" pos:start="2231:51" pos:end="2231:51">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="2233:9" pos:end="2235:40">else<block type="pseudo" pos:start="2235:13" pos:end="2235:40"><block_content pos:start="2235:13" pos:end="2235:40">

            <expr_stmt pos:start="2235:13" pos:end="2235:40"><expr pos:start="2235:13" pos:end="2235:39"><call pos:start="2235:13" pos:end="2235:39"><name pos:start="2235:13" pos:end="2235:28">tcg_gen_movi_i64</name><argument_list pos:start="2235:29" pos:end="2235:39">(<argument pos:start="2235:30" pos:end="2235:35"><expr pos:start="2235:30" pos:end="2235:35"><name pos:start="2235:30" pos:end="2235:35">cpu_pc</name></expr></argument>, <argument pos:start="2235:38" pos:end="2235:38"><expr pos:start="2235:38" pos:end="2235:38"><literal type="number" pos:start="2235:38" pos:end="2235:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <comment type="block" pos:start="2237:9" pos:end="2237:72">/* Those four jumps only differ by the branch prediction hint */</comment>

        <switch pos:start="2239:9" pos:end="2265:9">switch <condition pos:start="2239:16" pos:end="2239:20">(<expr pos:start="2239:17" pos:end="2239:19"><name pos:start="2239:17" pos:end="2239:19">fn2</name></expr>)</condition> <block pos:start="2239:22" pos:end="2265:9">{<block_content pos:start="2241:9" pos:end="2263:18">

        <case pos:start="2241:9" pos:end="2241:17">case <expr pos:start="2241:14" pos:end="2241:16"><literal type="number" pos:start="2241:14" pos:end="2241:16">0x0</literal></expr>:</case>

            <comment type="block" pos:start="2243:13" pos:end="2243:21">/* JMP */</comment>

            <break pos:start="2245:13" pos:end="2245:18">break;</break>

        <case pos:start="2247:9" pos:end="2247:17">case <expr pos:start="2247:14" pos:end="2247:16"><literal type="number" pos:start="2247:14" pos:end="2247:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="2249:13" pos:end="2249:21">/* JSR */</comment>

            <break pos:start="2251:13" pos:end="2251:18">break;</break>

        <case pos:start="2253:9" pos:end="2253:17">case <expr pos:start="2253:14" pos:end="2253:16"><literal type="number" pos:start="2253:14" pos:end="2253:16">0x2</literal></expr>:</case>

            <comment type="block" pos:start="2255:13" pos:end="2255:21">/* RET */</comment>

            <break pos:start="2257:13" pos:end="2257:18">break;</break>

        <case pos:start="2259:9" pos:end="2259:17">case <expr pos:start="2259:14" pos:end="2259:16"><literal type="number" pos:start="2259:14" pos:end="2259:16">0x3</literal></expr>:</case>

            <comment type="block" pos:start="2261:13" pos:end="2261:31">/* JSR_COROUTINE */</comment>

            <break pos:start="2263:13" pos:end="2263:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="2267:9" pos:end="2267:16"><expr pos:start="2267:9" pos:end="2267:15"><name pos:start="2267:9" pos:end="2267:11">ret</name> <operator pos:start="2267:13" pos:end="2267:13">=</operator> <literal type="number" pos:start="2267:15" pos:end="2267:15">1</literal></expr>;</expr_stmt>

        <break pos:start="2269:9" pos:end="2269:14">break;</break>

    <case pos:start="2271:5" pos:end="2276:0">case <expr pos:start="2271:10" pos:end="2271:13"><literal type="number" pos:start="2271:10" pos:end="2271:13">0x1B</literal></expr>:</case>

        <comment type="block" pos:start="2273:9" pos:end="2273:29">/* HW_LD (PALcode) */</comment>

<cpp:if pos:start="2275:1" pos:end="2275:30">#<cpp:directive pos:start="2275:2" pos:end="2275:3">if</cpp:directive> <expr pos:start="2275:5" pos:end="2275:30"><call pos:start="2275:5" pos:end="2275:30"><name pos:start="2275:5" pos:end="2275:11">defined</name> <argument_list pos:start="2275:13" pos:end="2275:30">(<argument pos:start="2275:14" pos:end="2275:29"><expr pos:start="2275:14" pos:end="2275:29"><name pos:start="2275:14" pos:end="2275:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2277:9" pos:end="2280:0">goto <name pos:start="2277:14" pos:end="2277:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2279:1" pos:end="2279:5">#<cpp:directive pos:start="2279:2" pos:end="2279:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2281:9" pos:end="2283:29"><if pos:start="2281:9" pos:end="2283:29">if <condition pos:start="2281:12" pos:end="2281:27">(<expr pos:start="2281:13" pos:end="2281:26"><operator pos:start="2281:13" pos:end="2281:13">!</operator><name pos:start="2281:14" pos:end="2281:26"><name pos:start="2281:14" pos:end="2281:16">ctx</name><operator pos:start="2281:17" pos:end="2281:18">-&gt;</operator><name pos:start="2281:19" pos:end="2281:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2283:13" pos:end="2283:29"><block_content pos:start="2283:13" pos:end="2283:29">

            <goto pos:start="2283:13" pos:end="2283:29">goto <name pos:start="2283:18" pos:end="2283:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2285:9" pos:end="2459:9"><if pos:start="2285:9" pos:end="2459:9">if <condition pos:start="2285:12" pos:end="2285:21">(<expr pos:start="2285:13" pos:end="2285:20"><name pos:start="2285:13" pos:end="2285:14">ra</name> <operator pos:start="2285:16" pos:end="2285:17">!=</operator> <literal type="number" pos:start="2285:19" pos:end="2285:20">31</literal></expr>)</condition> <block pos:start="2285:23" pos:end="2459:9">{<block_content pos:start="2287:13" pos:end="2457:32">

            <decl_stmt pos:start="2287:13" pos:end="2287:51"><decl pos:start="2287:13" pos:end="2287:50"><type pos:start="2287:13" pos:end="2287:16"><name pos:start="2287:13" pos:end="2287:16">TCGv</name></type> <name pos:start="2287:18" pos:end="2287:21">addr</name> <init pos:start="2287:23" pos:end="2287:50">= <expr pos:start="2287:25" pos:end="2287:50"><call pos:start="2287:25" pos:end="2287:50"><name pos:start="2287:25" pos:end="2287:36">tcg_temp_new</name><argument_list pos:start="2287:37" pos:end="2287:50">(<argument pos:start="2287:38" pos:end="2287:49"><expr pos:start="2287:38" pos:end="2287:49"><name pos:start="2287:38" pos:end="2287:49">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2289:13" pos:end="2295:47"><if pos:start="2289:13" pos:end="2291:59">if <condition pos:start="2289:16" pos:end="2289:25">(<expr pos:start="2289:17" pos:end="2289:24"><name pos:start="2289:17" pos:end="2289:18">rb</name> <operator pos:start="2289:20" pos:end="2289:21">!=</operator> <literal type="number" pos:start="2289:23" pos:end="2289:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2291:17" pos:end="2291:59"><block_content pos:start="2291:17" pos:end="2291:59">

                <expr_stmt pos:start="2291:17" pos:end="2291:59"><expr pos:start="2291:17" pos:end="2291:58"><call pos:start="2291:17" pos:end="2291:58"><name pos:start="2291:17" pos:end="2291:32">tcg_gen_addi_i64</name><argument_list pos:start="2291:33" pos:end="2291:58">(<argument pos:start="2291:34" pos:end="2291:37"><expr pos:start="2291:34" pos:end="2291:37"><name pos:start="2291:34" pos:end="2291:37">addr</name></expr></argument>, <argument pos:start="2291:40" pos:end="2291:49"><expr pos:start="2291:40" pos:end="2291:49"><name pos:start="2291:40" pos:end="2291:49"><name pos:start="2291:40" pos:end="2291:45">cpu_ir</name><index pos:start="2291:46" pos:end="2291:49">[<expr pos:start="2291:47" pos:end="2291:48"><name pos:start="2291:47" pos:end="2291:48">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2291:52" pos:end="2291:57"><expr pos:start="2291:52" pos:end="2291:57"><name pos:start="2291:52" pos:end="2291:57">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2293:13" pos:end="2295:47">else<block type="pseudo" pos:start="2295:17" pos:end="2295:47"><block_content pos:start="2295:17" pos:end="2295:47">

                <expr_stmt pos:start="2295:17" pos:end="2295:47"><expr pos:start="2295:17" pos:end="2295:46"><call pos:start="2295:17" pos:end="2295:46"><name pos:start="2295:17" pos:end="2295:32">tcg_gen_movi_i64</name><argument_list pos:start="2295:33" pos:end="2295:46">(<argument pos:start="2295:34" pos:end="2295:37"><expr pos:start="2295:34" pos:end="2295:37"><name pos:start="2295:34" pos:end="2295:37">addr</name></expr></argument>, <argument pos:start="2295:40" pos:end="2295:45"><expr pos:start="2295:40" pos:end="2295:45"><name pos:start="2295:40" pos:end="2295:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="2297:13" pos:end="2455:13">switch <condition pos:start="2297:20" pos:end="2297:39">(<expr pos:start="2297:21" pos:end="2297:38"><operator pos:start="2297:21" pos:end="2297:21">(</operator><name pos:start="2297:22" pos:end="2297:25">insn</name> <operator pos:start="2297:27" pos:end="2297:28">&gt;&gt;</operator> <literal type="number" pos:start="2297:30" pos:end="2297:31">12</literal><operator pos:start="2297:32" pos:end="2297:32">)</operator> <operator pos:start="2297:34" pos:end="2297:34">&amp;</operator> <literal type="number" pos:start="2297:36" pos:end="2297:38">0xF</literal></expr>)</condition> <block pos:start="2297:41" pos:end="2455:13">{<block_content pos:start="2299:13" pos:end="2453:22">

            <case pos:start="2299:13" pos:end="2299:21">case <expr pos:start="2299:18" pos:end="2299:20"><literal type="number" pos:start="2299:18" pos:end="2299:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2301:17" pos:end="2301:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2303:17" pos:end="2303:69"><expr pos:start="2303:17" pos:end="2303:68"><call pos:start="2303:17" pos:end="2303:68"><name pos:start="2303:17" pos:end="2303:34">tcg_gen_helper_0_2</name><argument_list pos:start="2303:35" pos:end="2303:68">(<argument pos:start="2303:36" pos:end="2303:49"><expr pos:start="2303:36" pos:end="2303:49"><name pos:start="2303:36" pos:end="2303:49">helper_ldl_raw</name></expr></argument>, <argument pos:start="2303:52" pos:end="2303:61"><expr pos:start="2303:52" pos:end="2303:61"><name pos:start="2303:52" pos:end="2303:61"><name pos:start="2303:52" pos:end="2303:57">cpu_ir</name><index pos:start="2303:58" pos:end="2303:61">[<expr pos:start="2303:59" pos:end="2303:60"><name pos:start="2303:59" pos:end="2303:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2303:64" pos:end="2303:67"><expr pos:start="2303:64" pos:end="2303:67"><name pos:start="2303:64" pos:end="2303:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2305:17" pos:end="2305:22">break;</break>

            <case pos:start="2307:13" pos:end="2307:21">case <expr pos:start="2307:18" pos:end="2307:20"><literal type="number" pos:start="2307:18" pos:end="2307:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2309:17" pos:end="2309:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2311:17" pos:end="2311:69"><expr pos:start="2311:17" pos:end="2311:68"><call pos:start="2311:17" pos:end="2311:68"><name pos:start="2311:17" pos:end="2311:34">tcg_gen_helper_0_2</name><argument_list pos:start="2311:35" pos:end="2311:68">(<argument pos:start="2311:36" pos:end="2311:49"><expr pos:start="2311:36" pos:end="2311:49"><name pos:start="2311:36" pos:end="2311:49">helper_ldq_raw</name></expr></argument>, <argument pos:start="2311:52" pos:end="2311:61"><expr pos:start="2311:52" pos:end="2311:61"><name pos:start="2311:52" pos:end="2311:61"><name pos:start="2311:52" pos:end="2311:57">cpu_ir</name><index pos:start="2311:58" pos:end="2311:61">[<expr pos:start="2311:59" pos:end="2311:60"><name pos:start="2311:59" pos:end="2311:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2311:64" pos:end="2311:67"><expr pos:start="2311:64" pos:end="2311:67"><name pos:start="2311:64" pos:end="2311:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2313:17" pos:end="2313:22">break;</break>

            <case pos:start="2315:13" pos:end="2315:21">case <expr pos:start="2315:18" pos:end="2315:20"><literal type="number" pos:start="2315:18" pos:end="2315:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2317:17" pos:end="2317:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2319:17" pos:end="2319:71"><expr pos:start="2319:17" pos:end="2319:70"><call pos:start="2319:17" pos:end="2319:70"><name pos:start="2319:17" pos:end="2319:34">tcg_gen_helper_0_2</name><argument_list pos:start="2319:35" pos:end="2319:70">(<argument pos:start="2319:36" pos:end="2319:51"><expr pos:start="2319:36" pos:end="2319:51"><name pos:start="2319:36" pos:end="2319:51">helper_ldl_l_raw</name></expr></argument>, <argument pos:start="2319:54" pos:end="2319:63"><expr pos:start="2319:54" pos:end="2319:63"><name pos:start="2319:54" pos:end="2319:63"><name pos:start="2319:54" pos:end="2319:59">cpu_ir</name><index pos:start="2319:60" pos:end="2319:63">[<expr pos:start="2319:61" pos:end="2319:62"><name pos:start="2319:61" pos:end="2319:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2319:66" pos:end="2319:69"><expr pos:start="2319:66" pos:end="2319:69"><name pos:start="2319:66" pos:end="2319:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2321:17" pos:end="2321:22">break;</break>

            <case pos:start="2323:13" pos:end="2323:21">case <expr pos:start="2323:18" pos:end="2323:20"><literal type="number" pos:start="2323:18" pos:end="2323:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2325:17" pos:end="2325:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2327:17" pos:end="2327:71"><expr pos:start="2327:17" pos:end="2327:70"><call pos:start="2327:17" pos:end="2327:70"><name pos:start="2327:17" pos:end="2327:34">tcg_gen_helper_0_2</name><argument_list pos:start="2327:35" pos:end="2327:70">(<argument pos:start="2327:36" pos:end="2327:51"><expr pos:start="2327:36" pos:end="2327:51"><name pos:start="2327:36" pos:end="2327:51">helper_ldq_l_raw</name></expr></argument>, <argument pos:start="2327:54" pos:end="2327:63"><expr pos:start="2327:54" pos:end="2327:63"><name pos:start="2327:54" pos:end="2327:63"><name pos:start="2327:54" pos:end="2327:59">cpu_ir</name><index pos:start="2327:60" pos:end="2327:63">[<expr pos:start="2327:61" pos:end="2327:62"><name pos:start="2327:61" pos:end="2327:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2327:66" pos:end="2327:69"><expr pos:start="2327:66" pos:end="2327:69"><name pos:start="2327:66" pos:end="2327:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2329:17" pos:end="2329:22">break;</break>

            <case pos:start="2331:13" pos:end="2331:21">case <expr pos:start="2331:18" pos:end="2331:20"><literal type="number" pos:start="2331:18" pos:end="2331:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2333:17" pos:end="2333:48">/* Longword virtual PTE fetch */</comment>

                <expr_stmt pos:start="2335:17" pos:end="2335:72"><expr pos:start="2335:17" pos:end="2335:71"><call pos:start="2335:17" pos:end="2335:71"><name pos:start="2335:17" pos:end="2335:34">tcg_gen_helper_0_2</name><argument_list pos:start="2335:35" pos:end="2335:71">(<argument pos:start="2335:36" pos:end="2335:52"><expr pos:start="2335:36" pos:end="2335:52"><name pos:start="2335:36" pos:end="2335:52">helper_ldl_kernel</name></expr></argument>, <argument pos:start="2335:55" pos:end="2335:64"><expr pos:start="2335:55" pos:end="2335:64"><name pos:start="2335:55" pos:end="2335:64"><name pos:start="2335:55" pos:end="2335:60">cpu_ir</name><index pos:start="2335:61" pos:end="2335:64">[<expr pos:start="2335:62" pos:end="2335:63"><name pos:start="2335:62" pos:end="2335:63">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2335:67" pos:end="2335:70"><expr pos:start="2335:67" pos:end="2335:70"><name pos:start="2335:67" pos:end="2335:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2337:17" pos:end="2337:22">break;</break>

            <case pos:start="2339:13" pos:end="2339:21">case <expr pos:start="2339:18" pos:end="2339:20"><literal type="number" pos:start="2339:18" pos:end="2339:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2341:17" pos:end="2341:48">/* Quadword virtual PTE fetch */</comment>

                <expr_stmt pos:start="2343:17" pos:end="2343:72"><expr pos:start="2343:17" pos:end="2343:71"><call pos:start="2343:17" pos:end="2343:71"><name pos:start="2343:17" pos:end="2343:34">tcg_gen_helper_0_2</name><argument_list pos:start="2343:35" pos:end="2343:71">(<argument pos:start="2343:36" pos:end="2343:52"><expr pos:start="2343:36" pos:end="2343:52"><name pos:start="2343:36" pos:end="2343:52">helper_ldq_kernel</name></expr></argument>, <argument pos:start="2343:55" pos:end="2343:64"><expr pos:start="2343:55" pos:end="2343:64"><name pos:start="2343:55" pos:end="2343:64"><name pos:start="2343:55" pos:end="2343:60">cpu_ir</name><index pos:start="2343:61" pos:end="2343:64">[<expr pos:start="2343:62" pos:end="2343:63"><name pos:start="2343:62" pos:end="2343:63">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2343:67" pos:end="2343:70"><expr pos:start="2343:67" pos:end="2343:70"><name pos:start="2343:67" pos:end="2343:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2345:17" pos:end="2345:22">break;</break>

            <case pos:start="2347:13" pos:end="2347:21">case <expr pos:start="2347:18" pos:end="2347:20"><literal type="number" pos:start="2347:18" pos:end="2347:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="2349:17" pos:end="2349:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="2351:17" pos:end="2351:40">goto <name pos:start="2351:22" pos:end="2351:33"><name pos:start="2351:22" pos:end="2351:29">incpu_ir</name><index pos:start="2351:30" pos:end="2351:33">[<expr pos:start="2351:31" pos:end="2351:32"><name pos:start="2351:31" pos:end="2351:32">ra</name></expr>]</index></name><name pos:start="2351:34" pos:end="2351:39">id_opc</name>;</goto>

            <case pos:start="2353:13" pos:end="2353:21">case <expr pos:start="2353:18" pos:end="2353:20"><literal type="number" pos:start="2353:18" pos:end="2353:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="2355:17" pos:end="2355:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="2357:17" pos:end="2357:40">goto <name pos:start="2357:22" pos:end="2357:33"><name pos:start="2357:22" pos:end="2357:29">incpu_ir</name><index pos:start="2357:30" pos:end="2357:33">[<expr pos:start="2357:31" pos:end="2357:32"><name pos:start="2357:31" pos:end="2357:32">ra</name></expr>]</index></name><name pos:start="2357:34" pos:end="2357:39">id_opc</name>;</goto>

            <case pos:start="2359:13" pos:end="2359:21">case <expr pos:start="2359:18" pos:end="2359:20"><literal type="number" pos:start="2359:18" pos:end="2359:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="2361:17" pos:end="2361:45">/* Longword virtual access */</comment>

                <expr_stmt pos:start="2363:17" pos:end="2363:71"><expr pos:start="2363:17" pos:end="2363:70"><call pos:start="2363:17" pos:end="2363:70"><name pos:start="2363:17" pos:end="2363:34">tcg_gen_helper_1_1</name><argument_list pos:start="2363:35" pos:end="2363:70">(<argument pos:start="2363:36" pos:end="2363:57"><expr pos:start="2363:36" pos:end="2363:57"><name pos:start="2363:36" pos:end="2363:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="2363:60" pos:end="2363:63"><expr pos:start="2363:60" pos:end="2363:63"><name pos:start="2363:60" pos:end="2363:63">addr</name></expr></argument>, <argument pos:start="2363:66" pos:end="2363:69"><expr pos:start="2363:66" pos:end="2363:69"><name pos:start="2363:66" pos:end="2363:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2365:17" pos:end="2365:69"><expr pos:start="2365:17" pos:end="2365:68"><call pos:start="2365:17" pos:end="2365:68"><name pos:start="2365:17" pos:end="2365:34">tcg_gen_helper_0_2</name><argument_list pos:start="2365:35" pos:end="2365:68">(<argument pos:start="2365:36" pos:end="2365:49"><expr pos:start="2365:36" pos:end="2365:49"><name pos:start="2365:36" pos:end="2365:49">helper_ldl_raw</name></expr></argument>, <argument pos:start="2365:52" pos:end="2365:61"><expr pos:start="2365:52" pos:end="2365:61"><name pos:start="2365:52" pos:end="2365:61"><name pos:start="2365:52" pos:end="2365:57">cpu_ir</name><index pos:start="2365:58" pos:end="2365:61">[<expr pos:start="2365:59" pos:end="2365:60"><name pos:start="2365:59" pos:end="2365:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2365:64" pos:end="2365:67"><expr pos:start="2365:64" pos:end="2365:67"><name pos:start="2365:64" pos:end="2365:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2367:17" pos:end="2367:22">break;</break>

            <case pos:start="2369:13" pos:end="2369:21">case <expr pos:start="2369:18" pos:end="2369:20"><literal type="number" pos:start="2369:18" pos:end="2369:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="2371:17" pos:end="2371:45">/* Quadword virtual access */</comment>

                <expr_stmt pos:start="2373:17" pos:end="2373:71"><expr pos:start="2373:17" pos:end="2373:70"><call pos:start="2373:17" pos:end="2373:70"><name pos:start="2373:17" pos:end="2373:34">tcg_gen_helper_1_1</name><argument_list pos:start="2373:35" pos:end="2373:70">(<argument pos:start="2373:36" pos:end="2373:57"><expr pos:start="2373:36" pos:end="2373:57"><name pos:start="2373:36" pos:end="2373:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="2373:60" pos:end="2373:63"><expr pos:start="2373:60" pos:end="2373:63"><name pos:start="2373:60" pos:end="2373:63">addr</name></expr></argument>, <argument pos:start="2373:66" pos:end="2373:69"><expr pos:start="2373:66" pos:end="2373:69"><name pos:start="2373:66" pos:end="2373:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2375:17" pos:end="2375:69"><expr pos:start="2375:17" pos:end="2375:68"><call pos:start="2375:17" pos:end="2375:68"><name pos:start="2375:17" pos:end="2375:34">tcg_gen_helper_0_2</name><argument_list pos:start="2375:35" pos:end="2375:68">(<argument pos:start="2375:36" pos:end="2375:49"><expr pos:start="2375:36" pos:end="2375:49"><name pos:start="2375:36" pos:end="2375:49">helper_ldq_raw</name></expr></argument>, <argument pos:start="2375:52" pos:end="2375:61"><expr pos:start="2375:52" pos:end="2375:61"><name pos:start="2375:52" pos:end="2375:61"><name pos:start="2375:52" pos:end="2375:57">cpu_ir</name><index pos:start="2375:58" pos:end="2375:61">[<expr pos:start="2375:59" pos:end="2375:60"><name pos:start="2375:59" pos:end="2375:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2375:64" pos:end="2375:67"><expr pos:start="2375:64" pos:end="2375:67"><name pos:start="2375:64" pos:end="2375:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2377:17" pos:end="2377:22">break;</break>

            <case pos:start="2379:13" pos:end="2379:21">case <expr pos:start="2379:18" pos:end="2379:20"><literal type="number" pos:start="2379:18" pos:end="2379:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="2381:17" pos:end="2381:67">/* Longword virtual access with protection check */</comment>

                <expr_stmt pos:start="2383:17" pos:end="2383:65"><expr pos:start="2383:17" pos:end="2383:64"><call pos:start="2383:17" pos:end="2383:64"><name pos:start="2383:17" pos:end="2383:34">tcg_gen_qemu_ld32s</name><argument_list pos:start="2383:35" pos:end="2383:64">(<argument pos:start="2383:36" pos:end="2383:45"><expr pos:start="2383:36" pos:end="2383:45"><name pos:start="2383:36" pos:end="2383:45"><name pos:start="2383:36" pos:end="2383:41">cpu_ir</name><index pos:start="2383:42" pos:end="2383:45">[<expr pos:start="2383:43" pos:end="2383:44"><name pos:start="2383:43" pos:end="2383:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2383:48" pos:end="2383:51"><expr pos:start="2383:48" pos:end="2383:51"><name pos:start="2383:48" pos:end="2383:51">addr</name></expr></argument>, <argument pos:start="2383:54" pos:end="2383:63"><expr pos:start="2383:54" pos:end="2383:63"><name pos:start="2383:54" pos:end="2383:63"><name pos:start="2383:54" pos:end="2383:56">ctx</name><operator pos:start="2383:57" pos:end="2383:58">-&gt;</operator><name pos:start="2383:59" pos:end="2383:63">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2385:17" pos:end="2385:22">break;</break>

            <case pos:start="2387:13" pos:end="2387:21">case <expr pos:start="2387:18" pos:end="2387:20"><literal type="number" pos:start="2387:18" pos:end="2387:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="2389:17" pos:end="2389:67">/* Quadword virtual access with protection check */</comment>

                <expr_stmt pos:start="2391:17" pos:end="2391:64"><expr pos:start="2391:17" pos:end="2391:63"><call pos:start="2391:17" pos:end="2391:63"><name pos:start="2391:17" pos:end="2391:33">tcg_gen_qemu_ld64</name><argument_list pos:start="2391:34" pos:end="2391:63">(<argument pos:start="2391:35" pos:end="2391:44"><expr pos:start="2391:35" pos:end="2391:44"><name pos:start="2391:35" pos:end="2391:44"><name pos:start="2391:35" pos:end="2391:40">cpu_ir</name><index pos:start="2391:41" pos:end="2391:44">[<expr pos:start="2391:42" pos:end="2391:43"><name pos:start="2391:42" pos:end="2391:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2391:47" pos:end="2391:50"><expr pos:start="2391:47" pos:end="2391:50"><name pos:start="2391:47" pos:end="2391:50">addr</name></expr></argument>, <argument pos:start="2391:53" pos:end="2391:62"><expr pos:start="2391:53" pos:end="2391:62"><name pos:start="2391:53" pos:end="2391:62"><name pos:start="2391:53" pos:end="2391:55">ctx</name><operator pos:start="2391:56" pos:end="2391:57">-&gt;</operator><name pos:start="2391:58" pos:end="2391:62">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2393:17" pos:end="2393:22">break;</break>

            <case pos:start="2395:13" pos:end="2395:21">case <expr pos:start="2395:18" pos:end="2395:20"><literal type="number" pos:start="2395:18" pos:end="2395:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="2397:17" pos:end="2397:71">/* Longword virtual access with altenate access mode */</comment>

                <expr_stmt pos:start="2399:17" pos:end="2399:56"><expr pos:start="2399:17" pos:end="2399:55"><call pos:start="2399:17" pos:end="2399:55"><name pos:start="2399:17" pos:end="2399:34">tcg_gen_helper_0_0</name><argument_list pos:start="2399:35" pos:end="2399:55">(<argument pos:start="2399:36" pos:end="2399:54"><expr pos:start="2399:36" pos:end="2399:54"><name pos:start="2399:36" pos:end="2399:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2401:17" pos:end="2401:71"><expr pos:start="2401:17" pos:end="2401:70"><call pos:start="2401:17" pos:end="2401:70"><name pos:start="2401:17" pos:end="2401:34">tcg_gen_helper_1_1</name><argument_list pos:start="2401:35" pos:end="2401:70">(<argument pos:start="2401:36" pos:end="2401:57"><expr pos:start="2401:36" pos:end="2401:57"><name pos:start="2401:36" pos:end="2401:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="2401:60" pos:end="2401:63"><expr pos:start="2401:60" pos:end="2401:63"><name pos:start="2401:60" pos:end="2401:63">addr</name></expr></argument>, <argument pos:start="2401:66" pos:end="2401:69"><expr pos:start="2401:66" pos:end="2401:69"><name pos:start="2401:66" pos:end="2401:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2403:17" pos:end="2403:69"><expr pos:start="2403:17" pos:end="2403:68"><call pos:start="2403:17" pos:end="2403:68"><name pos:start="2403:17" pos:end="2403:34">tcg_gen_helper_0_2</name><argument_list pos:start="2403:35" pos:end="2403:68">(<argument pos:start="2403:36" pos:end="2403:49"><expr pos:start="2403:36" pos:end="2403:49"><name pos:start="2403:36" pos:end="2403:49">helper_ldl_raw</name></expr></argument>, <argument pos:start="2403:52" pos:end="2403:61"><expr pos:start="2403:52" pos:end="2403:61"><name pos:start="2403:52" pos:end="2403:61"><name pos:start="2403:52" pos:end="2403:57">cpu_ir</name><index pos:start="2403:58" pos:end="2403:61">[<expr pos:start="2403:59" pos:end="2403:60"><name pos:start="2403:59" pos:end="2403:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2403:64" pos:end="2403:67"><expr pos:start="2403:64" pos:end="2403:67"><name pos:start="2403:64" pos:end="2403:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2405:17" pos:end="2405:56"><expr pos:start="2405:17" pos:end="2405:55"><call pos:start="2405:17" pos:end="2405:55"><name pos:start="2405:17" pos:end="2405:34">tcg_gen_helper_0_0</name><argument_list pos:start="2405:35" pos:end="2405:55">(<argument pos:start="2405:36" pos:end="2405:54"><expr pos:start="2405:36" pos:end="2405:54"><name pos:start="2405:36" pos:end="2405:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2407:17" pos:end="2407:22">break;</break>

            <case pos:start="2409:13" pos:end="2409:21">case <expr pos:start="2409:18" pos:end="2409:20"><literal type="number" pos:start="2409:18" pos:end="2409:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2411:17" pos:end="2411:71">/* Quadword virtual access with altenate access mode */</comment>

                <expr_stmt pos:start="2413:17" pos:end="2413:56"><expr pos:start="2413:17" pos:end="2413:55"><call pos:start="2413:17" pos:end="2413:55"><name pos:start="2413:17" pos:end="2413:34">tcg_gen_helper_0_0</name><argument_list pos:start="2413:35" pos:end="2413:55">(<argument pos:start="2413:36" pos:end="2413:54"><expr pos:start="2413:36" pos:end="2413:54"><name pos:start="2413:36" pos:end="2413:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2415:17" pos:end="2415:71"><expr pos:start="2415:17" pos:end="2415:70"><call pos:start="2415:17" pos:end="2415:70"><name pos:start="2415:17" pos:end="2415:34">tcg_gen_helper_1_1</name><argument_list pos:start="2415:35" pos:end="2415:70">(<argument pos:start="2415:36" pos:end="2415:57"><expr pos:start="2415:36" pos:end="2415:57"><name pos:start="2415:36" pos:end="2415:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="2415:60" pos:end="2415:63"><expr pos:start="2415:60" pos:end="2415:63"><name pos:start="2415:60" pos:end="2415:63">addr</name></expr></argument>, <argument pos:start="2415:66" pos:end="2415:69"><expr pos:start="2415:66" pos:end="2415:69"><name pos:start="2415:66" pos:end="2415:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2417:17" pos:end="2417:69"><expr pos:start="2417:17" pos:end="2417:68"><call pos:start="2417:17" pos:end="2417:68"><name pos:start="2417:17" pos:end="2417:34">tcg_gen_helper_0_2</name><argument_list pos:start="2417:35" pos:end="2417:68">(<argument pos:start="2417:36" pos:end="2417:49"><expr pos:start="2417:36" pos:end="2417:49"><name pos:start="2417:36" pos:end="2417:49">helper_ldq_raw</name></expr></argument>, <argument pos:start="2417:52" pos:end="2417:61"><expr pos:start="2417:52" pos:end="2417:61"><name pos:start="2417:52" pos:end="2417:61"><name pos:start="2417:52" pos:end="2417:57">cpu_ir</name><index pos:start="2417:58" pos:end="2417:61">[<expr pos:start="2417:59" pos:end="2417:60"><name pos:start="2417:59" pos:end="2417:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2417:64" pos:end="2417:67"><expr pos:start="2417:64" pos:end="2417:67"><name pos:start="2417:64" pos:end="2417:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2419:17" pos:end="2419:56"><expr pos:start="2419:17" pos:end="2419:55"><call pos:start="2419:17" pos:end="2419:55"><name pos:start="2419:17" pos:end="2419:34">tcg_gen_helper_0_0</name><argument_list pos:start="2419:35" pos:end="2419:55">(<argument pos:start="2419:36" pos:end="2419:54"><expr pos:start="2419:36" pos:end="2419:54"><name pos:start="2419:36" pos:end="2419:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2421:17" pos:end="2421:22">break;</break>

            <case pos:start="2423:13" pos:end="2423:21">case <expr pos:start="2423:18" pos:end="2423:20"><literal type="number" pos:start="2423:18" pos:end="2423:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2425:17" pos:end="2429:19">/* Longword virtual access with alternate access mode and

                 * protection checks

                 */</comment>

                <expr_stmt pos:start="2431:17" pos:end="2431:56"><expr pos:start="2431:17" pos:end="2431:55"><call pos:start="2431:17" pos:end="2431:55"><name pos:start="2431:17" pos:end="2431:34">tcg_gen_helper_0_0</name><argument_list pos:start="2431:35" pos:end="2431:55">(<argument pos:start="2431:36" pos:end="2431:54"><expr pos:start="2431:36" pos:end="2431:54"><name pos:start="2431:36" pos:end="2431:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2433:17" pos:end="2433:70"><expr pos:start="2433:17" pos:end="2433:69"><call pos:start="2433:17" pos:end="2433:69"><name pos:start="2433:17" pos:end="2433:34">tcg_gen_helper_0_2</name><argument_list pos:start="2433:35" pos:end="2433:69">(<argument pos:start="2433:36" pos:end="2433:50"><expr pos:start="2433:36" pos:end="2433:50"><name pos:start="2433:36" pos:end="2433:50">helper_ldl_data</name></expr></argument>, <argument pos:start="2433:53" pos:end="2433:62"><expr pos:start="2433:53" pos:end="2433:62"><name pos:start="2433:53" pos:end="2433:62"><name pos:start="2433:53" pos:end="2433:58">cpu_ir</name><index pos:start="2433:59" pos:end="2433:62">[<expr pos:start="2433:60" pos:end="2433:61"><name pos:start="2433:60" pos:end="2433:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2433:65" pos:end="2433:68"><expr pos:start="2433:65" pos:end="2433:68"><name pos:start="2433:65" pos:end="2433:68">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2435:17" pos:end="2435:56"><expr pos:start="2435:17" pos:end="2435:55"><call pos:start="2435:17" pos:end="2435:55"><name pos:start="2435:17" pos:end="2435:34">tcg_gen_helper_0_0</name><argument_list pos:start="2435:35" pos:end="2435:55">(<argument pos:start="2435:36" pos:end="2435:54"><expr pos:start="2435:36" pos:end="2435:54"><name pos:start="2435:36" pos:end="2435:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2437:17" pos:end="2437:22">break;</break>

            <case pos:start="2439:13" pos:end="2439:21">case <expr pos:start="2439:18" pos:end="2439:20"><literal type="number" pos:start="2439:18" pos:end="2439:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2441:17" pos:end="2445:19">/* Quadword virtual access with alternate access mode and

                 * protection checks

                 */</comment>

                <expr_stmt pos:start="2447:17" pos:end="2447:56"><expr pos:start="2447:17" pos:end="2447:55"><call pos:start="2447:17" pos:end="2447:55"><name pos:start="2447:17" pos:end="2447:34">tcg_gen_helper_0_0</name><argument_list pos:start="2447:35" pos:end="2447:55">(<argument pos:start="2447:36" pos:end="2447:54"><expr pos:start="2447:36" pos:end="2447:54"><name pos:start="2447:36" pos:end="2447:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2449:17" pos:end="2449:70"><expr pos:start="2449:17" pos:end="2449:69"><call pos:start="2449:17" pos:end="2449:69"><name pos:start="2449:17" pos:end="2449:34">tcg_gen_helper_0_2</name><argument_list pos:start="2449:35" pos:end="2449:69">(<argument pos:start="2449:36" pos:end="2449:50"><expr pos:start="2449:36" pos:end="2449:50"><name pos:start="2449:36" pos:end="2449:50">helper_ldq_data</name></expr></argument>, <argument pos:start="2449:53" pos:end="2449:62"><expr pos:start="2449:53" pos:end="2449:62"><name pos:start="2449:53" pos:end="2449:62"><name pos:start="2449:53" pos:end="2449:58">cpu_ir</name><index pos:start="2449:59" pos:end="2449:62">[<expr pos:start="2449:60" pos:end="2449:61"><name pos:start="2449:60" pos:end="2449:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2449:65" pos:end="2449:68"><expr pos:start="2449:65" pos:end="2449:68"><name pos:start="2449:65" pos:end="2449:68">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2451:17" pos:end="2451:56"><expr pos:start="2451:17" pos:end="2451:55"><call pos:start="2451:17" pos:end="2451:55"><name pos:start="2451:17" pos:end="2451:34">tcg_gen_helper_0_0</name><argument_list pos:start="2451:35" pos:end="2451:55">(<argument pos:start="2451:36" pos:end="2451:54"><expr pos:start="2451:36" pos:end="2451:54"><name pos:start="2451:36" pos:end="2451:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2453:17" pos:end="2453:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2457:13" pos:end="2457:32"><expr pos:start="2457:13" pos:end="2457:31"><call pos:start="2457:13" pos:end="2457:31"><name pos:start="2457:13" pos:end="2457:25">tcg_temp_free</name><argument_list pos:start="2457:26" pos:end="2457:31">(<argument pos:start="2457:27" pos:end="2457:30"><expr pos:start="2457:27" pos:end="2457:30"><name pos:start="2457:27" pos:end="2457:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2461:9" pos:end="2464:0">break;</break>

<cpp:endif pos:start="2463:1" pos:end="2463:6">#<cpp:directive pos:start="2463:2" pos:end="2463:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2465:5" pos:end="2465:14">case <expr pos:start="2465:10" pos:end="2465:13"><literal type="number" pos:start="2465:10" pos:end="2465:13">0x1C</literal></expr>:</case>

        <switch pos:start="2467:9" pos:end="2821:9">switch <condition pos:start="2467:16" pos:end="2467:20">(<expr pos:start="2467:17" pos:end="2467:19"><name pos:start="2467:17" pos:end="2467:19">fn7</name></expr>)</condition> <block pos:start="2467:22" pos:end="2821:9">{<block_content pos:start="2469:9" pos:end="2819:29">

        <case pos:start="2469:9" pos:end="2469:18">case <expr pos:start="2469:14" pos:end="2469:17"><literal type="number" pos:start="2469:14" pos:end="2469:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="2471:13" pos:end="2471:23">/* SEXTB */</comment>

            <if_stmt pos:start="2473:13" pos:end="2475:33"><if pos:start="2473:13" pos:end="2475:33">if <condition pos:start="2473:16" pos:end="2473:42">(<expr pos:start="2473:17" pos:end="2473:41"><operator pos:start="2473:17" pos:end="2473:17">!</operator><operator pos:start="2473:18" pos:end="2473:18">(</operator><name pos:start="2473:19" pos:end="2473:28"><name pos:start="2473:19" pos:end="2473:21">ctx</name><operator pos:start="2473:22" pos:end="2473:23">-&gt;</operator><name pos:start="2473:24" pos:end="2473:28">amask</name></name> <operator pos:start="2473:30" pos:end="2473:30">&amp;</operator> <name pos:start="2473:32" pos:end="2473:40">AMASK_BWX</name><operator pos:start="2473:41" pos:end="2473:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2475:17" pos:end="2475:33"><block_content pos:start="2475:17" pos:end="2475:33">

                <goto pos:start="2475:17" pos:end="2475:33">goto <name pos:start="2475:22" pos:end="2475:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2477:13" pos:end="2487:13"><if pos:start="2477:13" pos:end="2487:13">if <condition pos:start="2477:16" pos:end="2477:33">(<expr pos:start="2477:17" pos:end="2477:32"><call pos:start="2477:17" pos:end="2477:32"><name pos:start="2477:17" pos:end="2477:22">likely</name><argument_list pos:start="2477:23" pos:end="2477:32">(<argument pos:start="2477:24" pos:end="2477:31"><expr pos:start="2477:24" pos:end="2477:31"><name pos:start="2477:24" pos:end="2477:25">rc</name> <operator pos:start="2477:27" pos:end="2477:28">!=</operator> <literal type="number" pos:start="2477:30" pos:end="2477:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2477:35" pos:end="2487:13">{<block_content pos:start="2479:17" pos:end="2485:62">

                <if_stmt pos:start="2479:17" pos:end="2485:62"><if pos:start="2479:17" pos:end="2481:73">if <condition pos:start="2479:20" pos:end="2479:26">(<expr pos:start="2479:21" pos:end="2479:25"><name pos:start="2479:21" pos:end="2479:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2481:21" pos:end="2481:73"><block_content pos:start="2481:21" pos:end="2481:73">

                    <expr_stmt pos:start="2481:21" pos:end="2481:73"><expr pos:start="2481:21" pos:end="2481:72"><call pos:start="2481:21" pos:end="2481:72"><name pos:start="2481:21" pos:end="2481:36">tcg_gen_movi_i64</name><argument_list pos:start="2481:37" pos:end="2481:72">(<argument pos:start="2481:38" pos:end="2481:47"><expr pos:start="2481:38" pos:end="2481:47"><name pos:start="2481:38" pos:end="2481:47"><name pos:start="2481:38" pos:end="2481:43">cpu_ir</name><index pos:start="2481:44" pos:end="2481:47">[<expr pos:start="2481:45" pos:end="2481:46"><name pos:start="2481:45" pos:end="2481:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2481:50" pos:end="2481:71"><expr pos:start="2481:50" pos:end="2481:71"><operator pos:start="2481:50" pos:end="2481:50">(</operator><name pos:start="2481:51" pos:end="2481:57">int64_t</name><operator pos:start="2481:58" pos:end="2481:58">)</operator><operator pos:start="2481:59" pos:end="2481:59">(</operator><operator pos:start="2481:60" pos:end="2481:60">(</operator><name pos:start="2481:61" pos:end="2481:66">int8_t</name><operator pos:start="2481:67" pos:end="2481:67">)</operator><name pos:start="2481:68" pos:end="2481:70">lit</name><operator pos:start="2481:71" pos:end="2481:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2483:17" pos:end="2485:62">else<block type="pseudo" pos:start="2485:21" pos:end="2485:62"><block_content pos:start="2485:21" pos:end="2485:62">

                    <expr_stmt pos:start="2485:21" pos:end="2485:62"><expr pos:start="2485:21" pos:end="2485:61"><call pos:start="2485:21" pos:end="2485:61"><name pos:start="2485:21" pos:end="2485:37">tcg_gen_ext8s_i64</name><argument_list pos:start="2485:38" pos:end="2485:61">(<argument pos:start="2485:39" pos:end="2485:48"><expr pos:start="2485:39" pos:end="2485:48"><name pos:start="2485:39" pos:end="2485:48"><name pos:start="2485:39" pos:end="2485:44">cpu_ir</name><index pos:start="2485:45" pos:end="2485:48">[<expr pos:start="2485:46" pos:end="2485:47"><name pos:start="2485:46" pos:end="2485:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2485:51" pos:end="2485:60"><expr pos:start="2485:51" pos:end="2485:60"><name pos:start="2485:51" pos:end="2485:60"><name pos:start="2485:51" pos:end="2485:56">cpu_ir</name><index pos:start="2485:57" pos:end="2485:60">[<expr pos:start="2485:58" pos:end="2485:59"><name pos:start="2485:58" pos:end="2485:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2489:13" pos:end="2489:18">break;</break>

        <case pos:start="2491:9" pos:end="2491:18">case <expr pos:start="2491:14" pos:end="2491:17"><literal type="number" pos:start="2491:14" pos:end="2491:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="2493:13" pos:end="2493:23">/* SEXTW */</comment>

            <if_stmt pos:start="2495:13" pos:end="2497:33"><if pos:start="2495:13" pos:end="2497:33">if <condition pos:start="2495:16" pos:end="2495:42">(<expr pos:start="2495:17" pos:end="2495:41"><operator pos:start="2495:17" pos:end="2495:17">!</operator><operator pos:start="2495:18" pos:end="2495:18">(</operator><name pos:start="2495:19" pos:end="2495:28"><name pos:start="2495:19" pos:end="2495:21">ctx</name><operator pos:start="2495:22" pos:end="2495:23">-&gt;</operator><name pos:start="2495:24" pos:end="2495:28">amask</name></name> <operator pos:start="2495:30" pos:end="2495:30">&amp;</operator> <name pos:start="2495:32" pos:end="2495:40">AMASK_BWX</name><operator pos:start="2495:41" pos:end="2495:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2497:17" pos:end="2497:33"><block_content pos:start="2497:17" pos:end="2497:33">

                <goto pos:start="2497:17" pos:end="2497:33">goto <name pos:start="2497:22" pos:end="2497:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2499:13" pos:end="2509:13"><if pos:start="2499:13" pos:end="2509:13">if <condition pos:start="2499:16" pos:end="2499:33">(<expr pos:start="2499:17" pos:end="2499:32"><call pos:start="2499:17" pos:end="2499:32"><name pos:start="2499:17" pos:end="2499:22">likely</name><argument_list pos:start="2499:23" pos:end="2499:32">(<argument pos:start="2499:24" pos:end="2499:31"><expr pos:start="2499:24" pos:end="2499:31"><name pos:start="2499:24" pos:end="2499:25">rc</name> <operator pos:start="2499:27" pos:end="2499:28">!=</operator> <literal type="number" pos:start="2499:30" pos:end="2499:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2499:35" pos:end="2509:13">{<block_content pos:start="2501:17" pos:end="2507:63">

                <if_stmt pos:start="2501:17" pos:end="2507:63"><if pos:start="2501:17" pos:end="2503:74">if <condition pos:start="2501:20" pos:end="2501:26">(<expr pos:start="2501:21" pos:end="2501:25"><name pos:start="2501:21" pos:end="2501:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2503:21" pos:end="2503:74"><block_content pos:start="2503:21" pos:end="2503:74">

                    <expr_stmt pos:start="2503:21" pos:end="2503:74"><expr pos:start="2503:21" pos:end="2503:73"><call pos:start="2503:21" pos:end="2503:73"><name pos:start="2503:21" pos:end="2503:36">tcg_gen_movi_i64</name><argument_list pos:start="2503:37" pos:end="2503:73">(<argument pos:start="2503:38" pos:end="2503:47"><expr pos:start="2503:38" pos:end="2503:47"><name pos:start="2503:38" pos:end="2503:47"><name pos:start="2503:38" pos:end="2503:43">cpu_ir</name><index pos:start="2503:44" pos:end="2503:47">[<expr pos:start="2503:45" pos:end="2503:46"><name pos:start="2503:45" pos:end="2503:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2503:50" pos:end="2503:72"><expr pos:start="2503:50" pos:end="2503:72"><operator pos:start="2503:50" pos:end="2503:50">(</operator><name pos:start="2503:51" pos:end="2503:57">int64_t</name><operator pos:start="2503:58" pos:end="2503:58">)</operator><operator pos:start="2503:59" pos:end="2503:59">(</operator><operator pos:start="2503:60" pos:end="2503:60">(</operator><name pos:start="2503:61" pos:end="2503:67">int16_t</name><operator pos:start="2503:68" pos:end="2503:68">)</operator><name pos:start="2503:69" pos:end="2503:71">lit</name><operator pos:start="2503:72" pos:end="2503:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2505:17" pos:end="2507:63">else<block type="pseudo" pos:start="2507:21" pos:end="2507:63"><block_content pos:start="2507:21" pos:end="2507:63">

                    <expr_stmt pos:start="2507:21" pos:end="2507:63"><expr pos:start="2507:21" pos:end="2507:62"><call pos:start="2507:21" pos:end="2507:62"><name pos:start="2507:21" pos:end="2507:38">tcg_gen_ext16s_i64</name><argument_list pos:start="2507:39" pos:end="2507:62">(<argument pos:start="2507:40" pos:end="2507:49"><expr pos:start="2507:40" pos:end="2507:49"><name pos:start="2507:40" pos:end="2507:49"><name pos:start="2507:40" pos:end="2507:45">cpu_ir</name><index pos:start="2507:46" pos:end="2507:49">[<expr pos:start="2507:47" pos:end="2507:48"><name pos:start="2507:47" pos:end="2507:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2507:52" pos:end="2507:61"><expr pos:start="2507:52" pos:end="2507:61"><name pos:start="2507:52" pos:end="2507:61"><name pos:start="2507:52" pos:end="2507:57">cpu_ir</name><index pos:start="2507:58" pos:end="2507:61">[<expr pos:start="2507:59" pos:end="2507:60"><name pos:start="2507:59" pos:end="2507:60">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2511:13" pos:end="2511:18">break;</break>

        <case pos:start="2513:9" pos:end="2513:18">case <expr pos:start="2513:14" pos:end="2513:17"><literal type="number" pos:start="2513:14" pos:end="2513:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="2515:13" pos:end="2515:23">/* CTPOP */</comment>

            <if_stmt pos:start="2517:13" pos:end="2519:33"><if pos:start="2517:13" pos:end="2519:33">if <condition pos:start="2517:16" pos:end="2517:42">(<expr pos:start="2517:17" pos:end="2517:41"><operator pos:start="2517:17" pos:end="2517:17">!</operator><operator pos:start="2517:18" pos:end="2517:18">(</operator><name pos:start="2517:19" pos:end="2517:28"><name pos:start="2517:19" pos:end="2517:21">ctx</name><operator pos:start="2517:22" pos:end="2517:23">-&gt;</operator><name pos:start="2517:24" pos:end="2517:28">amask</name></name> <operator pos:start="2517:30" pos:end="2517:30">&amp;</operator> <name pos:start="2517:32" pos:end="2517:40">AMASK_CIX</name><operator pos:start="2517:41" pos:end="2517:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2519:17" pos:end="2519:33"><block_content pos:start="2519:17" pos:end="2519:33">

                <goto pos:start="2519:17" pos:end="2519:33">goto <name pos:start="2519:22" pos:end="2519:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2521:13" pos:end="2531:13"><if pos:start="2521:13" pos:end="2531:13">if <condition pos:start="2521:16" pos:end="2521:33">(<expr pos:start="2521:17" pos:end="2521:32"><call pos:start="2521:17" pos:end="2521:32"><name pos:start="2521:17" pos:end="2521:22">likely</name><argument_list pos:start="2521:23" pos:end="2521:32">(<argument pos:start="2521:24" pos:end="2521:31"><expr pos:start="2521:24" pos:end="2521:31"><name pos:start="2521:24" pos:end="2521:25">rc</name> <operator pos:start="2521:27" pos:end="2521:28">!=</operator> <literal type="number" pos:start="2521:30" pos:end="2521:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2521:35" pos:end="2531:13">{<block_content pos:start="2523:17" pos:end="2529:77">

                <if_stmt pos:start="2523:17" pos:end="2529:77"><if pos:start="2523:17" pos:end="2525:63">if <condition pos:start="2523:20" pos:end="2523:26">(<expr pos:start="2523:21" pos:end="2523:25"><name pos:start="2523:21" pos:end="2523:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2525:21" pos:end="2525:63"><block_content pos:start="2525:21" pos:end="2525:63">

                    <expr_stmt pos:start="2525:21" pos:end="2525:63"><expr pos:start="2525:21" pos:end="2525:62"><call pos:start="2525:21" pos:end="2525:62"><name pos:start="2525:21" pos:end="2525:36">tcg_gen_movi_i64</name><argument_list pos:start="2525:37" pos:end="2525:62">(<argument pos:start="2525:38" pos:end="2525:47"><expr pos:start="2525:38" pos:end="2525:47"><name pos:start="2525:38" pos:end="2525:47"><name pos:start="2525:38" pos:end="2525:43">cpu_ir</name><index pos:start="2525:44" pos:end="2525:47">[<expr pos:start="2525:45" pos:end="2525:46"><name pos:start="2525:45" pos:end="2525:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2525:50" pos:end="2525:61"><expr pos:start="2525:50" pos:end="2525:61"><call pos:start="2525:50" pos:end="2525:61"><name pos:start="2525:50" pos:end="2525:56">ctpop64</name><argument_list pos:start="2525:57" pos:end="2525:61">(<argument pos:start="2525:58" pos:end="2525:60"><expr pos:start="2525:58" pos:end="2525:60"><name pos:start="2525:58" pos:end="2525:60">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2527:17" pos:end="2529:77">else<block type="pseudo" pos:start="2529:21" pos:end="2529:77"><block_content pos:start="2529:21" pos:end="2529:77">

                    <expr_stmt pos:start="2529:21" pos:end="2529:77"><expr pos:start="2529:21" pos:end="2529:76"><call pos:start="2529:21" pos:end="2529:76"><name pos:start="2529:21" pos:end="2529:38">tcg_gen_helper_1_1</name><argument_list pos:start="2529:39" pos:end="2529:76">(<argument pos:start="2529:40" pos:end="2529:51"><expr pos:start="2529:40" pos:end="2529:51"><name pos:start="2529:40" pos:end="2529:51">helper_ctpop</name></expr></argument>, <argument pos:start="2529:54" pos:end="2529:63"><expr pos:start="2529:54" pos:end="2529:63"><name pos:start="2529:54" pos:end="2529:63"><name pos:start="2529:54" pos:end="2529:59">cpu_ir</name><index pos:start="2529:60" pos:end="2529:63">[<expr pos:start="2529:61" pos:end="2529:62"><name pos:start="2529:61" pos:end="2529:62">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2529:66" pos:end="2529:75"><expr pos:start="2529:66" pos:end="2529:75"><name pos:start="2529:66" pos:end="2529:75"><name pos:start="2529:66" pos:end="2529:71">cpu_ir</name><index pos:start="2529:72" pos:end="2529:75">[<expr pos:start="2529:73" pos:end="2529:74"><name pos:start="2529:73" pos:end="2529:74">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2533:13" pos:end="2533:18">break;</break>

        <case pos:start="2535:9" pos:end="2535:18">case <expr pos:start="2535:14" pos:end="2535:17"><literal type="number" pos:start="2535:14" pos:end="2535:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="2537:13" pos:end="2537:22">/* PERR */</comment>

            <if_stmt pos:start="2539:13" pos:end="2541:33"><if pos:start="2539:13" pos:end="2541:33">if <condition pos:start="2539:16" pos:end="2539:42">(<expr pos:start="2539:17" pos:end="2539:41"><operator pos:start="2539:17" pos:end="2539:17">!</operator><operator pos:start="2539:18" pos:end="2539:18">(</operator><name pos:start="2539:19" pos:end="2539:28"><name pos:start="2539:19" pos:end="2539:21">ctx</name><operator pos:start="2539:22" pos:end="2539:23">-&gt;</operator><name pos:start="2539:24" pos:end="2539:28">amask</name></name> <operator pos:start="2539:30" pos:end="2539:30">&amp;</operator> <name pos:start="2539:32" pos:end="2539:40">AMASK_MVI</name><operator pos:start="2539:41" pos:end="2539:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2541:17" pos:end="2541:33"><block_content pos:start="2541:17" pos:end="2541:33">

                <goto pos:start="2541:17" pos:end="2541:33">goto <name pos:start="2541:22" pos:end="2541:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2543:13" pos:end="2543:27">/* XXX: TODO */</comment>

            <goto pos:start="2545:13" pos:end="2545:29">goto <name pos:start="2545:18" pos:end="2545:28">invalid_opc</name>;</goto>

            <break pos:start="2547:13" pos:end="2547:18">break;</break>

        <case pos:start="2549:9" pos:end="2549:18">case <expr pos:start="2549:14" pos:end="2549:17"><literal type="number" pos:start="2549:14" pos:end="2549:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="2551:13" pos:end="2551:22">/* CTLZ */</comment>

            <if_stmt pos:start="2553:13" pos:end="2555:33"><if pos:start="2553:13" pos:end="2555:33">if <condition pos:start="2553:16" pos:end="2553:42">(<expr pos:start="2553:17" pos:end="2553:41"><operator pos:start="2553:17" pos:end="2553:17">!</operator><operator pos:start="2553:18" pos:end="2553:18">(</operator><name pos:start="2553:19" pos:end="2553:28"><name pos:start="2553:19" pos:end="2553:21">ctx</name><operator pos:start="2553:22" pos:end="2553:23">-&gt;</operator><name pos:start="2553:24" pos:end="2553:28">amask</name></name> <operator pos:start="2553:30" pos:end="2553:30">&amp;</operator> <name pos:start="2553:32" pos:end="2553:40">AMASK_CIX</name><operator pos:start="2553:41" pos:end="2553:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2555:17" pos:end="2555:33"><block_content pos:start="2555:17" pos:end="2555:33">

                <goto pos:start="2555:17" pos:end="2555:33">goto <name pos:start="2555:22" pos:end="2555:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2557:13" pos:end="2567:13"><if pos:start="2557:13" pos:end="2567:13">if <condition pos:start="2557:16" pos:end="2557:33">(<expr pos:start="2557:17" pos:end="2557:32"><call pos:start="2557:17" pos:end="2557:32"><name pos:start="2557:17" pos:end="2557:22">likely</name><argument_list pos:start="2557:23" pos:end="2557:32">(<argument pos:start="2557:24" pos:end="2557:31"><expr pos:start="2557:24" pos:end="2557:31"><name pos:start="2557:24" pos:end="2557:25">rc</name> <operator pos:start="2557:27" pos:end="2557:28">!=</operator> <literal type="number" pos:start="2557:30" pos:end="2557:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2557:35" pos:end="2567:13">{<block_content pos:start="2559:17" pos:end="2565:76">

                <if_stmt pos:start="2559:17" pos:end="2565:76"><if pos:start="2559:17" pos:end="2561:61">if <condition pos:start="2559:20" pos:end="2559:26">(<expr pos:start="2559:21" pos:end="2559:25"><name pos:start="2559:21" pos:end="2559:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2561:21" pos:end="2561:61"><block_content pos:start="2561:21" pos:end="2561:61">

                    <expr_stmt pos:start="2561:21" pos:end="2561:61"><expr pos:start="2561:21" pos:end="2561:60"><call pos:start="2561:21" pos:end="2561:60"><name pos:start="2561:21" pos:end="2561:36">tcg_gen_movi_i64</name><argument_list pos:start="2561:37" pos:end="2561:60">(<argument pos:start="2561:38" pos:end="2561:47"><expr pos:start="2561:38" pos:end="2561:47"><name pos:start="2561:38" pos:end="2561:47"><name pos:start="2561:38" pos:end="2561:43">cpu_ir</name><index pos:start="2561:44" pos:end="2561:47">[<expr pos:start="2561:45" pos:end="2561:46"><name pos:start="2561:45" pos:end="2561:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2561:50" pos:end="2561:59"><expr pos:start="2561:50" pos:end="2561:59"><call pos:start="2561:50" pos:end="2561:59"><name pos:start="2561:50" pos:end="2561:54">clz64</name><argument_list pos:start="2561:55" pos:end="2561:59">(<argument pos:start="2561:56" pos:end="2561:58"><expr pos:start="2561:56" pos:end="2561:58"><name pos:start="2561:56" pos:end="2561:58">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2563:17" pos:end="2565:76">else<block type="pseudo" pos:start="2565:21" pos:end="2565:76"><block_content pos:start="2565:21" pos:end="2565:76">

                    <expr_stmt pos:start="2565:21" pos:end="2565:76"><expr pos:start="2565:21" pos:end="2565:75"><call pos:start="2565:21" pos:end="2565:75"><name pos:start="2565:21" pos:end="2565:38">tcg_gen_helper_1_1</name><argument_list pos:start="2565:39" pos:end="2565:75">(<argument pos:start="2565:40" pos:end="2565:50"><expr pos:start="2565:40" pos:end="2565:50"><name pos:start="2565:40" pos:end="2565:50">helper_ctlz</name></expr></argument>, <argument pos:start="2565:53" pos:end="2565:62"><expr pos:start="2565:53" pos:end="2565:62"><name pos:start="2565:53" pos:end="2565:62"><name pos:start="2565:53" pos:end="2565:58">cpu_ir</name><index pos:start="2565:59" pos:end="2565:62">[<expr pos:start="2565:60" pos:end="2565:61"><name pos:start="2565:60" pos:end="2565:61">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2565:65" pos:end="2565:74"><expr pos:start="2565:65" pos:end="2565:74"><name pos:start="2565:65" pos:end="2565:74"><name pos:start="2565:65" pos:end="2565:70">cpu_ir</name><index pos:start="2565:71" pos:end="2565:74">[<expr pos:start="2565:72" pos:end="2565:73"><name pos:start="2565:72" pos:end="2565:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2569:13" pos:end="2569:18">break;</break>

        <case pos:start="2571:9" pos:end="2571:18">case <expr pos:start="2571:14" pos:end="2571:17"><literal type="number" pos:start="2571:14" pos:end="2571:17">0x33</literal></expr>:</case>

            <comment type="block" pos:start="2573:13" pos:end="2573:22">/* CTTZ */</comment>

            <if_stmt pos:start="2575:13" pos:end="2577:33"><if pos:start="2575:13" pos:end="2577:33">if <condition pos:start="2575:16" pos:end="2575:42">(<expr pos:start="2575:17" pos:end="2575:41"><operator pos:start="2575:17" pos:end="2575:17">!</operator><operator pos:start="2575:18" pos:end="2575:18">(</operator><name pos:start="2575:19" pos:end="2575:28"><name pos:start="2575:19" pos:end="2575:21">ctx</name><operator pos:start="2575:22" pos:end="2575:23">-&gt;</operator><name pos:start="2575:24" pos:end="2575:28">amask</name></name> <operator pos:start="2575:30" pos:end="2575:30">&amp;</operator> <name pos:start="2575:32" pos:end="2575:40">AMASK_CIX</name><operator pos:start="2575:41" pos:end="2575:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2577:17" pos:end="2577:33"><block_content pos:start="2577:17" pos:end="2577:33">

                <goto pos:start="2577:17" pos:end="2577:33">goto <name pos:start="2577:22" pos:end="2577:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2579:13" pos:end="2589:13"><if pos:start="2579:13" pos:end="2589:13">if <condition pos:start="2579:16" pos:end="2579:33">(<expr pos:start="2579:17" pos:end="2579:32"><call pos:start="2579:17" pos:end="2579:32"><name pos:start="2579:17" pos:end="2579:22">likely</name><argument_list pos:start="2579:23" pos:end="2579:32">(<argument pos:start="2579:24" pos:end="2579:31"><expr pos:start="2579:24" pos:end="2579:31"><name pos:start="2579:24" pos:end="2579:25">rc</name> <operator pos:start="2579:27" pos:end="2579:28">!=</operator> <literal type="number" pos:start="2579:30" pos:end="2579:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2579:35" pos:end="2589:13">{<block_content pos:start="2581:17" pos:end="2587:76">

                <if_stmt pos:start="2581:17" pos:end="2587:76"><if pos:start="2581:17" pos:end="2583:61">if <condition pos:start="2581:20" pos:end="2581:26">(<expr pos:start="2581:21" pos:end="2581:25"><name pos:start="2581:21" pos:end="2581:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2583:21" pos:end="2583:61"><block_content pos:start="2583:21" pos:end="2583:61">

                    <expr_stmt pos:start="2583:21" pos:end="2583:61"><expr pos:start="2583:21" pos:end="2583:60"><call pos:start="2583:21" pos:end="2583:60"><name pos:start="2583:21" pos:end="2583:36">tcg_gen_movi_i64</name><argument_list pos:start="2583:37" pos:end="2583:60">(<argument pos:start="2583:38" pos:end="2583:47"><expr pos:start="2583:38" pos:end="2583:47"><name pos:start="2583:38" pos:end="2583:47"><name pos:start="2583:38" pos:end="2583:43">cpu_ir</name><index pos:start="2583:44" pos:end="2583:47">[<expr pos:start="2583:45" pos:end="2583:46"><name pos:start="2583:45" pos:end="2583:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2583:50" pos:end="2583:59"><expr pos:start="2583:50" pos:end="2583:59"><call pos:start="2583:50" pos:end="2583:59"><name pos:start="2583:50" pos:end="2583:54">ctz64</name><argument_list pos:start="2583:55" pos:end="2583:59">(<argument pos:start="2583:56" pos:end="2583:58"><expr pos:start="2583:56" pos:end="2583:58"><name pos:start="2583:56" pos:end="2583:58">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2585:17" pos:end="2587:76">else<block type="pseudo" pos:start="2587:21" pos:end="2587:76"><block_content pos:start="2587:21" pos:end="2587:76">

                    <expr_stmt pos:start="2587:21" pos:end="2587:76"><expr pos:start="2587:21" pos:end="2587:75"><call pos:start="2587:21" pos:end="2587:75"><name pos:start="2587:21" pos:end="2587:38">tcg_gen_helper_1_1</name><argument_list pos:start="2587:39" pos:end="2587:75">(<argument pos:start="2587:40" pos:end="2587:50"><expr pos:start="2587:40" pos:end="2587:50"><name pos:start="2587:40" pos:end="2587:50">helper_cttz</name></expr></argument>, <argument pos:start="2587:53" pos:end="2587:62"><expr pos:start="2587:53" pos:end="2587:62"><name pos:start="2587:53" pos:end="2587:62"><name pos:start="2587:53" pos:end="2587:58">cpu_ir</name><index pos:start="2587:59" pos:end="2587:62">[<expr pos:start="2587:60" pos:end="2587:61"><name pos:start="2587:60" pos:end="2587:61">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2587:65" pos:end="2587:74"><expr pos:start="2587:65" pos:end="2587:74"><name pos:start="2587:65" pos:end="2587:74"><name pos:start="2587:65" pos:end="2587:70">cpu_ir</name><index pos:start="2587:71" pos:end="2587:74">[<expr pos:start="2587:72" pos:end="2587:73"><name pos:start="2587:72" pos:end="2587:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2591:13" pos:end="2591:18">break;</break>

        <case pos:start="2593:9" pos:end="2593:18">case <expr pos:start="2593:14" pos:end="2593:17"><literal type="number" pos:start="2593:14" pos:end="2593:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="2595:13" pos:end="2595:24">/* UNPKBW */</comment>

            <if_stmt pos:start="2597:13" pos:end="2599:33"><if pos:start="2597:13" pos:end="2599:33">if <condition pos:start="2597:16" pos:end="2597:42">(<expr pos:start="2597:17" pos:end="2597:41"><operator pos:start="2597:17" pos:end="2597:17">!</operator><operator pos:start="2597:18" pos:end="2597:18">(</operator><name pos:start="2597:19" pos:end="2597:28"><name pos:start="2597:19" pos:end="2597:21">ctx</name><operator pos:start="2597:22" pos:end="2597:23">-&gt;</operator><name pos:start="2597:24" pos:end="2597:28">amask</name></name> <operator pos:start="2597:30" pos:end="2597:30">&amp;</operator> <name pos:start="2597:32" pos:end="2597:40">AMASK_MVI</name><operator pos:start="2597:41" pos:end="2597:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2599:17" pos:end="2599:33"><block_content pos:start="2599:17" pos:end="2599:33">

                <goto pos:start="2599:17" pos:end="2599:33">goto <name pos:start="2599:22" pos:end="2599:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2601:13" pos:end="2601:27">/* XXX: TODO */</comment>

            <goto pos:start="2603:13" pos:end="2603:29">goto <name pos:start="2603:18" pos:end="2603:28">invalid_opc</name>;</goto>

            <break pos:start="2605:13" pos:end="2605:18">break;</break>

        <case pos:start="2607:9" pos:end="2607:18">case <expr pos:start="2607:14" pos:end="2607:17"><literal type="number" pos:start="2607:14" pos:end="2607:17">0x35</literal></expr>:</case>

            <comment type="block" pos:start="2609:13" pos:end="2609:24">/* UNPKWL */</comment>

            <if_stmt pos:start="2611:13" pos:end="2613:33"><if pos:start="2611:13" pos:end="2613:33">if <condition pos:start="2611:16" pos:end="2611:42">(<expr pos:start="2611:17" pos:end="2611:41"><operator pos:start="2611:17" pos:end="2611:17">!</operator><operator pos:start="2611:18" pos:end="2611:18">(</operator><name pos:start="2611:19" pos:end="2611:28"><name pos:start="2611:19" pos:end="2611:21">ctx</name><operator pos:start="2611:22" pos:end="2611:23">-&gt;</operator><name pos:start="2611:24" pos:end="2611:28">amask</name></name> <operator pos:start="2611:30" pos:end="2611:30">&amp;</operator> <name pos:start="2611:32" pos:end="2611:40">AMASK_MVI</name><operator pos:start="2611:41" pos:end="2611:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2613:17" pos:end="2613:33"><block_content pos:start="2613:17" pos:end="2613:33">

                <goto pos:start="2613:17" pos:end="2613:33">goto <name pos:start="2613:22" pos:end="2613:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2615:13" pos:end="2615:27">/* XXX: TODO */</comment>

            <goto pos:start="2617:13" pos:end="2617:29">goto <name pos:start="2617:18" pos:end="2617:28">invalid_opc</name>;</goto>

            <break pos:start="2619:13" pos:end="2619:18">break;</break>

        <case pos:start="2621:9" pos:end="2621:18">case <expr pos:start="2621:14" pos:end="2621:17"><literal type="number" pos:start="2621:14" pos:end="2621:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="2623:13" pos:end="2623:22">/* PKWB */</comment>

            <if_stmt pos:start="2625:13" pos:end="2627:33"><if pos:start="2625:13" pos:end="2627:33">if <condition pos:start="2625:16" pos:end="2625:42">(<expr pos:start="2625:17" pos:end="2625:41"><operator pos:start="2625:17" pos:end="2625:17">!</operator><operator pos:start="2625:18" pos:end="2625:18">(</operator><name pos:start="2625:19" pos:end="2625:28"><name pos:start="2625:19" pos:end="2625:21">ctx</name><operator pos:start="2625:22" pos:end="2625:23">-&gt;</operator><name pos:start="2625:24" pos:end="2625:28">amask</name></name> <operator pos:start="2625:30" pos:end="2625:30">&amp;</operator> <name pos:start="2625:32" pos:end="2625:40">AMASK_MVI</name><operator pos:start="2625:41" pos:end="2625:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2627:17" pos:end="2627:33"><block_content pos:start="2627:17" pos:end="2627:33">

                <goto pos:start="2627:17" pos:end="2627:33">goto <name pos:start="2627:22" pos:end="2627:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2629:13" pos:end="2629:27">/* XXX: TODO */</comment>

            <goto pos:start="2631:13" pos:end="2631:29">goto <name pos:start="2631:18" pos:end="2631:28">invalid_opc</name>;</goto>

            <break pos:start="2633:13" pos:end="2633:18">break;</break>

        <case pos:start="2635:9" pos:end="2635:18">case <expr pos:start="2635:14" pos:end="2635:17"><literal type="number" pos:start="2635:14" pos:end="2635:17">0x37</literal></expr>:</case>

            <comment type="block" pos:start="2637:13" pos:end="2637:22">/* PKLB */</comment>

            <if_stmt pos:start="2639:13" pos:end="2641:33"><if pos:start="2639:13" pos:end="2641:33">if <condition pos:start="2639:16" pos:end="2639:42">(<expr pos:start="2639:17" pos:end="2639:41"><operator pos:start="2639:17" pos:end="2639:17">!</operator><operator pos:start="2639:18" pos:end="2639:18">(</operator><name pos:start="2639:19" pos:end="2639:28"><name pos:start="2639:19" pos:end="2639:21">ctx</name><operator pos:start="2639:22" pos:end="2639:23">-&gt;</operator><name pos:start="2639:24" pos:end="2639:28">amask</name></name> <operator pos:start="2639:30" pos:end="2639:30">&amp;</operator> <name pos:start="2639:32" pos:end="2639:40">AMASK_MVI</name><operator pos:start="2639:41" pos:end="2639:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2641:17" pos:end="2641:33"><block_content pos:start="2641:17" pos:end="2641:33">

                <goto pos:start="2641:17" pos:end="2641:33">goto <name pos:start="2641:22" pos:end="2641:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2643:13" pos:end="2643:27">/* XXX: TODO */</comment>

            <goto pos:start="2645:13" pos:end="2645:29">goto <name pos:start="2645:18" pos:end="2645:28">invalid_opc</name>;</goto>

            <break pos:start="2647:13" pos:end="2647:18">break;</break>

        <case pos:start="2649:9" pos:end="2649:18">case <expr pos:start="2649:14" pos:end="2649:17"><literal type="number" pos:start="2649:14" pos:end="2649:17">0x38</literal></expr>:</case>

            <comment type="block" pos:start="2651:13" pos:end="2651:24">/* MINSB8 */</comment>

            <if_stmt pos:start="2653:13" pos:end="2655:33"><if pos:start="2653:13" pos:end="2655:33">if <condition pos:start="2653:16" pos:end="2653:42">(<expr pos:start="2653:17" pos:end="2653:41"><operator pos:start="2653:17" pos:end="2653:17">!</operator><operator pos:start="2653:18" pos:end="2653:18">(</operator><name pos:start="2653:19" pos:end="2653:28"><name pos:start="2653:19" pos:end="2653:21">ctx</name><operator pos:start="2653:22" pos:end="2653:23">-&gt;</operator><name pos:start="2653:24" pos:end="2653:28">amask</name></name> <operator pos:start="2653:30" pos:end="2653:30">&amp;</operator> <name pos:start="2653:32" pos:end="2653:40">AMASK_MVI</name><operator pos:start="2653:41" pos:end="2653:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2655:17" pos:end="2655:33"><block_content pos:start="2655:17" pos:end="2655:33">

                <goto pos:start="2655:17" pos:end="2655:33">goto <name pos:start="2655:22" pos:end="2655:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2657:13" pos:end="2657:27">/* XXX: TODO */</comment>

            <goto pos:start="2659:13" pos:end="2659:29">goto <name pos:start="2659:18" pos:end="2659:28">invalid_opc</name>;</goto>

            <break pos:start="2661:13" pos:end="2661:18">break;</break>

        <case pos:start="2663:9" pos:end="2663:18">case <expr pos:start="2663:14" pos:end="2663:17"><literal type="number" pos:start="2663:14" pos:end="2663:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="2665:13" pos:end="2665:24">/* MINSW4 */</comment>

            <if_stmt pos:start="2667:13" pos:end="2669:33"><if pos:start="2667:13" pos:end="2669:33">if <condition pos:start="2667:16" pos:end="2667:42">(<expr pos:start="2667:17" pos:end="2667:41"><operator pos:start="2667:17" pos:end="2667:17">!</operator><operator pos:start="2667:18" pos:end="2667:18">(</operator><name pos:start="2667:19" pos:end="2667:28"><name pos:start="2667:19" pos:end="2667:21">ctx</name><operator pos:start="2667:22" pos:end="2667:23">-&gt;</operator><name pos:start="2667:24" pos:end="2667:28">amask</name></name> <operator pos:start="2667:30" pos:end="2667:30">&amp;</operator> <name pos:start="2667:32" pos:end="2667:40">AMASK_MVI</name><operator pos:start="2667:41" pos:end="2667:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2669:17" pos:end="2669:33"><block_content pos:start="2669:17" pos:end="2669:33">

                <goto pos:start="2669:17" pos:end="2669:33">goto <name pos:start="2669:22" pos:end="2669:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2671:13" pos:end="2671:27">/* XXX: TODO */</comment>

            <goto pos:start="2673:13" pos:end="2673:29">goto <name pos:start="2673:18" pos:end="2673:28">invalid_opc</name>;</goto>

            <break pos:start="2675:13" pos:end="2675:18">break;</break>

        <case pos:start="2677:9" pos:end="2677:18">case <expr pos:start="2677:14" pos:end="2677:17"><literal type="number" pos:start="2677:14" pos:end="2677:17">0x3A</literal></expr>:</case>

            <comment type="block" pos:start="2679:13" pos:end="2679:24">/* MINUB8 */</comment>

            <if_stmt pos:start="2681:13" pos:end="2683:33"><if pos:start="2681:13" pos:end="2683:33">if <condition pos:start="2681:16" pos:end="2681:42">(<expr pos:start="2681:17" pos:end="2681:41"><operator pos:start="2681:17" pos:end="2681:17">!</operator><operator pos:start="2681:18" pos:end="2681:18">(</operator><name pos:start="2681:19" pos:end="2681:28"><name pos:start="2681:19" pos:end="2681:21">ctx</name><operator pos:start="2681:22" pos:end="2681:23">-&gt;</operator><name pos:start="2681:24" pos:end="2681:28">amask</name></name> <operator pos:start="2681:30" pos:end="2681:30">&amp;</operator> <name pos:start="2681:32" pos:end="2681:40">AMASK_MVI</name><operator pos:start="2681:41" pos:end="2681:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2683:17" pos:end="2683:33"><block_content pos:start="2683:17" pos:end="2683:33">

                <goto pos:start="2683:17" pos:end="2683:33">goto <name pos:start="2683:22" pos:end="2683:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2685:13" pos:end="2685:27">/* XXX: TODO */</comment>

            <goto pos:start="2687:13" pos:end="2687:29">goto <name pos:start="2687:18" pos:end="2687:28">invalid_opc</name>;</goto>

            <break pos:start="2689:13" pos:end="2689:18">break;</break>

        <case pos:start="2691:9" pos:end="2691:18">case <expr pos:start="2691:14" pos:end="2691:17"><literal type="number" pos:start="2691:14" pos:end="2691:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="2693:13" pos:end="2693:24">/* MINUW4 */</comment>

            <if_stmt pos:start="2695:13" pos:end="2697:33"><if pos:start="2695:13" pos:end="2697:33">if <condition pos:start="2695:16" pos:end="2695:42">(<expr pos:start="2695:17" pos:end="2695:41"><operator pos:start="2695:17" pos:end="2695:17">!</operator><operator pos:start="2695:18" pos:end="2695:18">(</operator><name pos:start="2695:19" pos:end="2695:28"><name pos:start="2695:19" pos:end="2695:21">ctx</name><operator pos:start="2695:22" pos:end="2695:23">-&gt;</operator><name pos:start="2695:24" pos:end="2695:28">amask</name></name> <operator pos:start="2695:30" pos:end="2695:30">&amp;</operator> <name pos:start="2695:32" pos:end="2695:40">AMASK_MVI</name><operator pos:start="2695:41" pos:end="2695:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2697:17" pos:end="2697:33"><block_content pos:start="2697:17" pos:end="2697:33">

                <goto pos:start="2697:17" pos:end="2697:33">goto <name pos:start="2697:22" pos:end="2697:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2699:13" pos:end="2699:27">/* XXX: TODO */</comment>

            <goto pos:start="2701:13" pos:end="2701:29">goto <name pos:start="2701:18" pos:end="2701:28">invalid_opc</name>;</goto>

            <break pos:start="2703:13" pos:end="2703:18">break;</break>

        <case pos:start="2705:9" pos:end="2705:18">case <expr pos:start="2705:14" pos:end="2705:17"><literal type="number" pos:start="2705:14" pos:end="2705:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="2707:13" pos:end="2707:24">/* MAXUB8 */</comment>

            <if_stmt pos:start="2709:13" pos:end="2711:33"><if pos:start="2709:13" pos:end="2711:33">if <condition pos:start="2709:16" pos:end="2709:42">(<expr pos:start="2709:17" pos:end="2709:41"><operator pos:start="2709:17" pos:end="2709:17">!</operator><operator pos:start="2709:18" pos:end="2709:18">(</operator><name pos:start="2709:19" pos:end="2709:28"><name pos:start="2709:19" pos:end="2709:21">ctx</name><operator pos:start="2709:22" pos:end="2709:23">-&gt;</operator><name pos:start="2709:24" pos:end="2709:28">amask</name></name> <operator pos:start="2709:30" pos:end="2709:30">&amp;</operator> <name pos:start="2709:32" pos:end="2709:40">AMASK_MVI</name><operator pos:start="2709:41" pos:end="2709:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2711:17" pos:end="2711:33"><block_content pos:start="2711:17" pos:end="2711:33">

                <goto pos:start="2711:17" pos:end="2711:33">goto <name pos:start="2711:22" pos:end="2711:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2713:13" pos:end="2713:27">/* XXX: TODO */</comment>

            <goto pos:start="2715:13" pos:end="2715:29">goto <name pos:start="2715:18" pos:end="2715:28">invalid_opc</name>;</goto>

            <break pos:start="2717:13" pos:end="2717:18">break;</break>

        <case pos:start="2719:9" pos:end="2719:18">case <expr pos:start="2719:14" pos:end="2719:17"><literal type="number" pos:start="2719:14" pos:end="2719:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="2721:13" pos:end="2721:24">/* MAXUW4 */</comment>

            <if_stmt pos:start="2723:13" pos:end="2725:33"><if pos:start="2723:13" pos:end="2725:33">if <condition pos:start="2723:16" pos:end="2723:42">(<expr pos:start="2723:17" pos:end="2723:41"><operator pos:start="2723:17" pos:end="2723:17">!</operator><operator pos:start="2723:18" pos:end="2723:18">(</operator><name pos:start="2723:19" pos:end="2723:28"><name pos:start="2723:19" pos:end="2723:21">ctx</name><operator pos:start="2723:22" pos:end="2723:23">-&gt;</operator><name pos:start="2723:24" pos:end="2723:28">amask</name></name> <operator pos:start="2723:30" pos:end="2723:30">&amp;</operator> <name pos:start="2723:32" pos:end="2723:40">AMASK_MVI</name><operator pos:start="2723:41" pos:end="2723:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2725:17" pos:end="2725:33"><block_content pos:start="2725:17" pos:end="2725:33">

                <goto pos:start="2725:17" pos:end="2725:33">goto <name pos:start="2725:22" pos:end="2725:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2727:13" pos:end="2727:27">/* XXX: TODO */</comment>

            <goto pos:start="2729:13" pos:end="2729:29">goto <name pos:start="2729:18" pos:end="2729:28">invalid_opc</name>;</goto>

            <break pos:start="2731:13" pos:end="2731:18">break;</break>

        <case pos:start="2733:9" pos:end="2733:18">case <expr pos:start="2733:14" pos:end="2733:17"><literal type="number" pos:start="2733:14" pos:end="2733:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="2735:13" pos:end="2735:24">/* MAXSB8 */</comment>

            <if_stmt pos:start="2737:13" pos:end="2739:33"><if pos:start="2737:13" pos:end="2739:33">if <condition pos:start="2737:16" pos:end="2737:42">(<expr pos:start="2737:17" pos:end="2737:41"><operator pos:start="2737:17" pos:end="2737:17">!</operator><operator pos:start="2737:18" pos:end="2737:18">(</operator><name pos:start="2737:19" pos:end="2737:28"><name pos:start="2737:19" pos:end="2737:21">ctx</name><operator pos:start="2737:22" pos:end="2737:23">-&gt;</operator><name pos:start="2737:24" pos:end="2737:28">amask</name></name> <operator pos:start="2737:30" pos:end="2737:30">&amp;</operator> <name pos:start="2737:32" pos:end="2737:40">AMASK_MVI</name><operator pos:start="2737:41" pos:end="2737:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2739:17" pos:end="2739:33"><block_content pos:start="2739:17" pos:end="2739:33">

                <goto pos:start="2739:17" pos:end="2739:33">goto <name pos:start="2739:22" pos:end="2739:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2741:13" pos:end="2741:27">/* XXX: TODO */</comment>

            <goto pos:start="2743:13" pos:end="2743:29">goto <name pos:start="2743:18" pos:end="2743:28">invalid_opc</name>;</goto>

            <break pos:start="2745:13" pos:end="2745:18">break;</break>

        <case pos:start="2747:9" pos:end="2747:18">case <expr pos:start="2747:14" pos:end="2747:17"><literal type="number" pos:start="2747:14" pos:end="2747:17">0x3F</literal></expr>:</case>

            <comment type="block" pos:start="2749:13" pos:end="2749:24">/* MAXSW4 */</comment>

            <if_stmt pos:start="2751:13" pos:end="2753:33"><if pos:start="2751:13" pos:end="2753:33">if <condition pos:start="2751:16" pos:end="2751:42">(<expr pos:start="2751:17" pos:end="2751:41"><operator pos:start="2751:17" pos:end="2751:17">!</operator><operator pos:start="2751:18" pos:end="2751:18">(</operator><name pos:start="2751:19" pos:end="2751:28"><name pos:start="2751:19" pos:end="2751:21">ctx</name><operator pos:start="2751:22" pos:end="2751:23">-&gt;</operator><name pos:start="2751:24" pos:end="2751:28">amask</name></name> <operator pos:start="2751:30" pos:end="2751:30">&amp;</operator> <name pos:start="2751:32" pos:end="2751:40">AMASK_MVI</name><operator pos:start="2751:41" pos:end="2751:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2753:17" pos:end="2753:33"><block_content pos:start="2753:17" pos:end="2753:33">

                <goto pos:start="2753:17" pos:end="2753:33">goto <name pos:start="2753:22" pos:end="2753:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2755:13" pos:end="2755:27">/* XXX: TODO */</comment>

            <goto pos:start="2757:13" pos:end="2757:29">goto <name pos:start="2757:18" pos:end="2757:28">invalid_opc</name>;</goto>

            <break pos:start="2759:13" pos:end="2759:18">break;</break>

        <case pos:start="2761:9" pos:end="2761:18">case <expr pos:start="2761:14" pos:end="2761:17"><literal type="number" pos:start="2761:14" pos:end="2761:17">0x70</literal></expr>:</case>

            <comment type="block" pos:start="2763:13" pos:end="2763:23">/* FTOIT */</comment>

            <if_stmt pos:start="2765:13" pos:end="2767:33"><if pos:start="2765:13" pos:end="2767:33">if <condition pos:start="2765:16" pos:end="2765:42">(<expr pos:start="2765:17" pos:end="2765:41"><operator pos:start="2765:17" pos:end="2765:17">!</operator><operator pos:start="2765:18" pos:end="2765:18">(</operator><name pos:start="2765:19" pos:end="2765:28"><name pos:start="2765:19" pos:end="2765:21">ctx</name><operator pos:start="2765:22" pos:end="2765:23">-&gt;</operator><name pos:start="2765:24" pos:end="2765:28">amask</name></name> <operator pos:start="2765:30" pos:end="2765:30">&amp;</operator> <name pos:start="2765:32" pos:end="2765:40">AMASK_FIX</name><operator pos:start="2765:41" pos:end="2765:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2767:17" pos:end="2767:33"><block_content pos:start="2767:17" pos:end="2767:33">

                <goto pos:start="2767:17" pos:end="2767:33">goto <name pos:start="2767:22" pos:end="2767:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2769:13" pos:end="2779:13"><if pos:start="2769:13" pos:end="2779:13">if <condition pos:start="2769:16" pos:end="2769:33">(<expr pos:start="2769:17" pos:end="2769:32"><call pos:start="2769:17" pos:end="2769:32"><name pos:start="2769:17" pos:end="2769:22">likely</name><argument_list pos:start="2769:23" pos:end="2769:32">(<argument pos:start="2769:24" pos:end="2769:31"><expr pos:start="2769:24" pos:end="2769:31"><name pos:start="2769:24" pos:end="2769:25">rc</name> <operator pos:start="2769:27" pos:end="2769:28">!=</operator> <literal type="number" pos:start="2769:30" pos:end="2769:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2769:35" pos:end="2779:13">{<block_content pos:start="2771:17" pos:end="2777:52">

                <if_stmt pos:start="2771:17" pos:end="2777:52"><if pos:start="2771:17" pos:end="2773:61">if <condition pos:start="2771:20" pos:end="2771:29">(<expr pos:start="2771:21" pos:end="2771:28"><name pos:start="2771:21" pos:end="2771:22">ra</name> <operator pos:start="2771:24" pos:end="2771:25">!=</operator> <literal type="number" pos:start="2771:27" pos:end="2771:28">31</literal></expr>)</condition><block type="pseudo" pos:start="2773:21" pos:end="2773:61"><block_content pos:start="2773:21" pos:end="2773:61">

                    <expr_stmt pos:start="2773:21" pos:end="2773:61"><expr pos:start="2773:21" pos:end="2773:60"><call pos:start="2773:21" pos:end="2773:60"><name pos:start="2773:21" pos:end="2773:35">tcg_gen_mov_i64</name><argument_list pos:start="2773:36" pos:end="2773:60">(<argument pos:start="2773:37" pos:end="2773:46"><expr pos:start="2773:37" pos:end="2773:46"><name pos:start="2773:37" pos:end="2773:46"><name pos:start="2773:37" pos:end="2773:42">cpu_ir</name><index pos:start="2773:43" pos:end="2773:46">[<expr pos:start="2773:44" pos:end="2773:45"><name pos:start="2773:44" pos:end="2773:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2773:49" pos:end="2773:59"><expr pos:start="2773:49" pos:end="2773:59"><name pos:start="2773:49" pos:end="2773:59"><name pos:start="2773:49" pos:end="2773:55">cpu_fir</name><index pos:start="2773:56" pos:end="2773:59">[<expr pos:start="2773:57" pos:end="2773:58"><name pos:start="2773:57" pos:end="2773:58">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2775:17" pos:end="2777:52">else<block type="pseudo" pos:start="2777:21" pos:end="2777:52"><block_content pos:start="2777:21" pos:end="2777:52">

                    <expr_stmt pos:start="2777:21" pos:end="2777:52"><expr pos:start="2777:21" pos:end="2777:51"><call pos:start="2777:21" pos:end="2777:51"><name pos:start="2777:21" pos:end="2777:36">tcg_gen_movi_i64</name><argument_list pos:start="2777:37" pos:end="2777:51">(<argument pos:start="2777:38" pos:end="2777:47"><expr pos:start="2777:38" pos:end="2777:47"><name pos:start="2777:38" pos:end="2777:47"><name pos:start="2777:38" pos:end="2777:43">cpu_ir</name><index pos:start="2777:44" pos:end="2777:47">[<expr pos:start="2777:45" pos:end="2777:46"><name pos:start="2777:45" pos:end="2777:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2777:50" pos:end="2777:50"><expr pos:start="2777:50" pos:end="2777:50"><literal type="number" pos:start="2777:50" pos:end="2777:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2781:13" pos:end="2781:18">break;</break>

        <case pos:start="2783:9" pos:end="2783:18">case <expr pos:start="2783:14" pos:end="2783:17"><literal type="number" pos:start="2783:14" pos:end="2783:17">0x78</literal></expr>:</case>

            <comment type="block" pos:start="2785:13" pos:end="2785:23">/* FTOIS */</comment>

            <if_stmt pos:start="2787:13" pos:end="2789:33"><if pos:start="2787:13" pos:end="2789:33">if <condition pos:start="2787:16" pos:end="2787:42">(<expr pos:start="2787:17" pos:end="2787:41"><operator pos:start="2787:17" pos:end="2787:17">!</operator><operator pos:start="2787:18" pos:end="2787:18">(</operator><name pos:start="2787:19" pos:end="2787:28"><name pos:start="2787:19" pos:end="2787:21">ctx</name><operator pos:start="2787:22" pos:end="2787:23">-&gt;</operator><name pos:start="2787:24" pos:end="2787:28">amask</name></name> <operator pos:start="2787:30" pos:end="2787:30">&amp;</operator> <name pos:start="2787:32" pos:end="2787:40">AMASK_FIX</name><operator pos:start="2787:41" pos:end="2787:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2789:17" pos:end="2789:33"><block_content pos:start="2789:17" pos:end="2789:33">

                <goto pos:start="2789:17" pos:end="2789:33">goto <name pos:start="2789:22" pos:end="2789:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2791:13" pos:end="2813:13"><if pos:start="2791:13" pos:end="2813:13">if <condition pos:start="2791:16" pos:end="2791:25">(<expr pos:start="2791:17" pos:end="2791:24"><name pos:start="2791:17" pos:end="2791:18">rc</name> <operator pos:start="2791:20" pos:end="2791:21">!=</operator> <literal type="number" pos:start="2791:23" pos:end="2791:24">31</literal></expr>)</condition> <block pos:start="2791:27" pos:end="2813:13">{<block_content pos:start="2793:17" pos:end="2811:36">

                <decl_stmt pos:start="2793:17" pos:end="2793:55"><decl pos:start="2793:17" pos:end="2793:54"><type pos:start="2793:17" pos:end="2793:20"><name pos:start="2793:17" pos:end="2793:20">TCGv</name></type> <name pos:start="2793:22" pos:end="2793:25">tmp1</name> <init pos:start="2793:27" pos:end="2793:54">= <expr pos:start="2793:29" pos:end="2793:54"><call pos:start="2793:29" pos:end="2793:54"><name pos:start="2793:29" pos:end="2793:40">tcg_temp_new</name><argument_list pos:start="2793:41" pos:end="2793:54">(<argument pos:start="2793:42" pos:end="2793:53"><expr pos:start="2793:42" pos:end="2793:53"><name pos:start="2793:42" pos:end="2793:53">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="2795:17" pos:end="2807:17"><if pos:start="2795:17" pos:end="2797:78">if <condition pos:start="2795:20" pos:end="2795:29">(<expr pos:start="2795:21" pos:end="2795:28"><name pos:start="2795:21" pos:end="2795:22">ra</name> <operator pos:start="2795:24" pos:end="2795:25">!=</operator> <literal type="number" pos:start="2795:27" pos:end="2795:28">31</literal></expr>)</condition><block type="pseudo" pos:start="2797:21" pos:end="2797:78"><block_content pos:start="2797:21" pos:end="2797:78">

                    <expr_stmt pos:start="2797:21" pos:end="2797:78"><expr pos:start="2797:21" pos:end="2797:77"><call pos:start="2797:21" pos:end="2797:77"><name pos:start="2797:21" pos:end="2797:38">tcg_gen_helper_1_1</name><argument_list pos:start="2797:39" pos:end="2797:77">(<argument pos:start="2797:40" pos:end="2797:57"><expr pos:start="2797:40" pos:end="2797:57"><name pos:start="2797:40" pos:end="2797:57">helper_s_to_memory</name></expr></argument>, <argument pos:start="2797:60" pos:end="2797:63"><expr pos:start="2797:60" pos:end="2797:63"><name pos:start="2797:60" pos:end="2797:63">tmp1</name></expr></argument>, <argument pos:start="2797:66" pos:end="2797:76"><expr pos:start="2797:66" pos:end="2797:76"><name pos:start="2797:66" pos:end="2797:76"><name pos:start="2797:66" pos:end="2797:72">cpu_fir</name><index pos:start="2797:73" pos:end="2797:76">[<expr pos:start="2797:74" pos:end="2797:75"><name pos:start="2797:74" pos:end="2797:75">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2799:17" pos:end="2807:17">else <block pos:start="2799:22" pos:end="2807:17">{<block_content pos:start="2801:21" pos:end="2805:40">

                    <decl_stmt pos:start="2801:21" pos:end="2801:49"><decl pos:start="2801:21" pos:end="2801:48"><type pos:start="2801:21" pos:end="2801:24"><name pos:start="2801:21" pos:end="2801:24">TCGv</name></type> <name pos:start="2801:26" pos:end="2801:29">tmp2</name> <init pos:start="2801:31" pos:end="2801:48">= <expr pos:start="2801:33" pos:end="2801:48"><call pos:start="2801:33" pos:end="2801:48"><name pos:start="2801:33" pos:end="2801:45">tcg_const_i64</name><argument_list pos:start="2801:46" pos:end="2801:48">(<argument pos:start="2801:47" pos:end="2801:47"><expr pos:start="2801:47" pos:end="2801:47"><literal type="number" pos:start="2801:47" pos:end="2801:47">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2803:21" pos:end="2803:71"><expr pos:start="2803:21" pos:end="2803:70"><call pos:start="2803:21" pos:end="2803:70"><name pos:start="2803:21" pos:end="2803:38">tcg_gen_helper_1_1</name><argument_list pos:start="2803:39" pos:end="2803:70">(<argument pos:start="2803:40" pos:end="2803:57"><expr pos:start="2803:40" pos:end="2803:57"><name pos:start="2803:40" pos:end="2803:57">helper_s_to_memory</name></expr></argument>, <argument pos:start="2803:60" pos:end="2803:63"><expr pos:start="2803:60" pos:end="2803:63"><name pos:start="2803:60" pos:end="2803:63">tmp1</name></expr></argument>, <argument pos:start="2803:66" pos:end="2803:69"><expr pos:start="2803:66" pos:end="2803:69"><name pos:start="2803:66" pos:end="2803:69">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2805:21" pos:end="2805:40"><expr pos:start="2805:21" pos:end="2805:39"><call pos:start="2805:21" pos:end="2805:39"><name pos:start="2805:21" pos:end="2805:33">tcg_temp_free</name><argument_list pos:start="2805:34" pos:end="2805:39">(<argument pos:start="2805:35" pos:end="2805:38"><expr pos:start="2805:35" pos:end="2805:38"><name pos:start="2805:35" pos:end="2805:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2809:17" pos:end="2809:54"><expr pos:start="2809:17" pos:end="2809:53"><call pos:start="2809:17" pos:end="2809:53"><name pos:start="2809:17" pos:end="2809:35">tcg_gen_ext_i32_i64</name><argument_list pos:start="2809:36" pos:end="2809:53">(<argument pos:start="2809:37" pos:end="2809:46"><expr pos:start="2809:37" pos:end="2809:46"><name pos:start="2809:37" pos:end="2809:46"><name pos:start="2809:37" pos:end="2809:42">cpu_ir</name><index pos:start="2809:43" pos:end="2809:46">[<expr pos:start="2809:44" pos:end="2809:45"><name pos:start="2809:44" pos:end="2809:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2809:49" pos:end="2809:52"><expr pos:start="2809:49" pos:end="2809:52"><name pos:start="2809:49" pos:end="2809:52">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2811:17" pos:end="2811:36"><expr pos:start="2811:17" pos:end="2811:35"><call pos:start="2811:17" pos:end="2811:35"><name pos:start="2811:17" pos:end="2811:29">tcg_temp_free</name><argument_list pos:start="2811:30" pos:end="2811:35">(<argument pos:start="2811:31" pos:end="2811:34"><expr pos:start="2811:31" pos:end="2811:34"><name pos:start="2811:31" pos:end="2811:34">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2815:13" pos:end="2815:18">break;</break>

        <default pos:start="2817:9" pos:end="2817:16">default:</default>

            <goto pos:start="2819:13" pos:end="2819:29">goto <name pos:start="2819:18" pos:end="2819:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2823:9" pos:end="2823:14">break;</break>

    <case pos:start="2825:5" pos:end="2830:0">case <expr pos:start="2825:10" pos:end="2825:13"><literal type="number" pos:start="2825:10" pos:end="2825:13">0x1D</literal></expr>:</case>

        <comment type="block" pos:start="2827:9" pos:end="2827:31">/* HW_MTPR (PALcode) */</comment>

<cpp:if pos:start="2829:1" pos:end="2829:30">#<cpp:directive pos:start="2829:2" pos:end="2829:3">if</cpp:directive> <expr pos:start="2829:5" pos:end="2829:30"><call pos:start="2829:5" pos:end="2829:30"><name pos:start="2829:5" pos:end="2829:11">defined</name> <argument_list pos:start="2829:13" pos:end="2829:30">(<argument pos:start="2829:14" pos:end="2829:29"><expr pos:start="2829:14" pos:end="2829:29"><name pos:start="2829:14" pos:end="2829:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2831:9" pos:end="2834:0">goto <name pos:start="2831:14" pos:end="2831:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2833:1" pos:end="2833:5">#<cpp:directive pos:start="2833:2" pos:end="2833:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2835:9" pos:end="2861:9"><if pos:start="2835:9" pos:end="2837:29">if <condition pos:start="2835:12" pos:end="2835:27">(<expr pos:start="2835:13" pos:end="2835:26"><operator pos:start="2835:13" pos:end="2835:13">!</operator><name pos:start="2835:14" pos:end="2835:26"><name pos:start="2835:14" pos:end="2835:16">ctx</name><operator pos:start="2835:17" pos:end="2835:18">-&gt;</operator><name pos:start="2835:19" pos:end="2835:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2837:13" pos:end="2837:29"><block_content pos:start="2837:13" pos:end="2837:29">

            <goto pos:start="2837:13" pos:end="2837:29">goto <name pos:start="2837:18" pos:end="2837:28">invalid_opc</name>;</goto></block_content></block></if>

        <else pos:start="2839:9" pos:end="2861:9">else <block pos:start="2839:14" pos:end="2861:9">{<block_content pos:start="2841:13" pos:end="2859:20">

            <decl_stmt pos:start="2841:13" pos:end="2841:51"><decl pos:start="2841:13" pos:end="2841:50"><type pos:start="2841:13" pos:end="2841:16"><name pos:start="2841:13" pos:end="2841:16">TCGv</name></type> <name pos:start="2841:18" pos:end="2841:21">tmp1</name> <init pos:start="2841:23" pos:end="2841:50">= <expr pos:start="2841:25" pos:end="2841:50"><call pos:start="2841:25" pos:end="2841:50"><name pos:start="2841:25" pos:end="2841:37">tcg_const_i32</name><argument_list pos:start="2841:38" pos:end="2841:50">(<argument pos:start="2841:39" pos:end="2841:49"><expr pos:start="2841:39" pos:end="2841:49"><name pos:start="2841:39" pos:end="2841:42">insn</name> <operator pos:start="2841:44" pos:end="2841:44">&amp;</operator> <literal type="number" pos:start="2841:46" pos:end="2841:49">0xFF</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2843:13" pos:end="2855:13"><if pos:start="2843:13" pos:end="2845:62">if <condition pos:start="2843:16" pos:end="2843:25">(<expr pos:start="2843:17" pos:end="2843:24"><name pos:start="2843:17" pos:end="2843:18">ra</name> <operator pos:start="2843:20" pos:end="2843:21">!=</operator> <literal type="number" pos:start="2843:23" pos:end="2843:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2845:17" pos:end="2845:62"><block_content pos:start="2845:17" pos:end="2845:62">

                <expr_stmt pos:start="2845:17" pos:end="2845:62"><expr pos:start="2845:17" pos:end="2845:61"><call pos:start="2845:17" pos:end="2845:61"><name pos:start="2845:17" pos:end="2845:30">tcg_gen_helper</name><argument_list pos:start="2845:31" pos:end="2845:61">(<argument pos:start="2845:32" pos:end="2845:42"><expr pos:start="2845:32" pos:end="2845:42"><name pos:start="2845:32" pos:end="2845:42">helper_mtpr</name></expr></argument>, <argument pos:start="2845:45" pos:end="2845:48"><expr pos:start="2845:45" pos:end="2845:48"><name pos:start="2845:45" pos:end="2845:48">tmp1</name></expr></argument>, <argument pos:start="2845:51" pos:end="2845:60"><expr pos:start="2845:51" pos:end="2845:60"><name pos:start="2845:51" pos:end="2845:60"><name pos:start="2845:51" pos:end="2845:56">cpu_ir</name><index pos:start="2845:57" pos:end="2845:60">[<expr pos:start="2845:58" pos:end="2845:59"><name pos:start="2845:58" pos:end="2845:59">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2847:13" pos:end="2855:13">else <block pos:start="2847:18" pos:end="2855:13">{<block_content pos:start="2849:17" pos:end="2853:36">

                <decl_stmt pos:start="2849:17" pos:end="2849:45"><decl pos:start="2849:17" pos:end="2849:44"><type pos:start="2849:17" pos:end="2849:20"><name pos:start="2849:17" pos:end="2849:20">TCGv</name></type> <name pos:start="2849:22" pos:end="2849:25">tmp2</name> <init pos:start="2849:27" pos:end="2849:44">= <expr pos:start="2849:29" pos:end="2849:44"><call pos:start="2849:29" pos:end="2849:44"><name pos:start="2849:29" pos:end="2849:41">tcg_const_i64</name><argument_list pos:start="2849:42" pos:end="2849:44">(<argument pos:start="2849:43" pos:end="2849:43"><expr pos:start="2849:43" pos:end="2849:43"><literal type="number" pos:start="2849:43" pos:end="2849:43">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="2851:17" pos:end="2851:56"><expr pos:start="2851:17" pos:end="2851:55"><call pos:start="2851:17" pos:end="2851:55"><name pos:start="2851:17" pos:end="2851:30">tcg_gen_helper</name><argument_list pos:start="2851:31" pos:end="2851:55">(<argument pos:start="2851:32" pos:end="2851:42"><expr pos:start="2851:32" pos:end="2851:42"><name pos:start="2851:32" pos:end="2851:42">helper_mtpr</name></expr></argument>, <argument pos:start="2851:45" pos:end="2851:48"><expr pos:start="2851:45" pos:end="2851:48"><name pos:start="2851:45" pos:end="2851:48">tmp1</name></expr></argument>, <argument pos:start="2851:51" pos:end="2851:54"><expr pos:start="2851:51" pos:end="2851:54"><name pos:start="2851:51" pos:end="2851:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2853:17" pos:end="2853:36"><expr pos:start="2853:17" pos:end="2853:35"><call pos:start="2853:17" pos:end="2853:35"><name pos:start="2853:17" pos:end="2853:29">tcg_temp_free</name><argument_list pos:start="2853:30" pos:end="2853:35">(<argument pos:start="2853:31" pos:end="2853:34"><expr pos:start="2853:31" pos:end="2853:34"><name pos:start="2853:31" pos:end="2853:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="2857:13" pos:end="2857:32"><expr pos:start="2857:13" pos:end="2857:31"><call pos:start="2857:13" pos:end="2857:31"><name pos:start="2857:13" pos:end="2857:25">tcg_temp_free</name><argument_list pos:start="2857:26" pos:end="2857:31">(<argument pos:start="2857:27" pos:end="2857:30"><expr pos:start="2857:27" pos:end="2857:30"><name pos:start="2857:27" pos:end="2857:30">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2859:13" pos:end="2859:20"><expr pos:start="2859:13" pos:end="2859:19"><name pos:start="2859:13" pos:end="2859:15">ret</name> <operator pos:start="2859:17" pos:end="2859:17">=</operator> <literal type="number" pos:start="2859:19" pos:end="2859:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2863:9" pos:end="2866:0">break;</break>

<cpp:endif pos:start="2865:1" pos:end="2865:6">#<cpp:directive pos:start="2865:2" pos:end="2865:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2867:5" pos:end="2872:0">case <expr pos:start="2867:10" pos:end="2867:13"><literal type="number" pos:start="2867:10" pos:end="2867:13">0x1E</literal></expr>:</case>

        <comment type="block" pos:start="2869:9" pos:end="2869:30">/* HW_REI (PALcode) */</comment>

<cpp:if pos:start="2871:1" pos:end="2871:30">#<cpp:directive pos:start="2871:2" pos:end="2871:3">if</cpp:directive> <expr pos:start="2871:5" pos:end="2871:30"><call pos:start="2871:5" pos:end="2871:30"><name pos:start="2871:5" pos:end="2871:11">defined</name> <argument_list pos:start="2871:13" pos:end="2871:30">(<argument pos:start="2871:14" pos:end="2871:29"><expr pos:start="2871:14" pos:end="2871:29"><name pos:start="2871:14" pos:end="2871:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2873:9" pos:end="2876:0">goto <name pos:start="2873:14" pos:end="2873:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2875:1" pos:end="2875:5">#<cpp:directive pos:start="2875:2" pos:end="2875:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2877:9" pos:end="2879:29"><if pos:start="2877:9" pos:end="2879:29">if <condition pos:start="2877:12" pos:end="2877:27">(<expr pos:start="2877:13" pos:end="2877:26"><operator pos:start="2877:13" pos:end="2877:13">!</operator><name pos:start="2877:14" pos:end="2877:26"><name pos:start="2877:14" pos:end="2877:16">ctx</name><operator pos:start="2877:17" pos:end="2877:18">-&gt;</operator><name pos:start="2877:19" pos:end="2877:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2879:13" pos:end="2879:29"><block_content pos:start="2879:13" pos:end="2879:29">

            <goto pos:start="2879:13" pos:end="2879:29">goto <name pos:start="2879:18" pos:end="2879:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2881:9" pos:end="2907:9"><if pos:start="2881:9" pos:end="2887:9">if <condition pos:start="2881:12" pos:end="2881:21">(<expr pos:start="2881:13" pos:end="2881:20"><name pos:start="2881:13" pos:end="2881:14">rb</name> <operator pos:start="2881:16" pos:end="2881:17">==</operator> <literal type="number" pos:start="2881:19" pos:end="2881:20">31</literal></expr>)</condition> <block pos:start="2881:23" pos:end="2887:9">{<block_content pos:start="2885:13" pos:end="2885:46">

            <comment type="block" pos:start="2883:13" pos:end="2883:29">/* "Old" alpha */</comment>

            <expr_stmt pos:start="2885:13" pos:end="2885:46"><expr pos:start="2885:13" pos:end="2885:45"><call pos:start="2885:13" pos:end="2885:45"><name pos:start="2885:13" pos:end="2885:30">tcg_gen_helper_0_0</name><argument_list pos:start="2885:31" pos:end="2885:45">(<argument pos:start="2885:32" pos:end="2885:44"><expr pos:start="2885:32" pos:end="2885:44"><name pos:start="2885:32" pos:end="2885:44">helper_hw_rei</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2887:11" pos:end="2907:9">else <block pos:start="2887:16" pos:end="2907:9">{<block_content pos:start="2889:13" pos:end="2905:31">

            <decl_stmt pos:start="2889:13" pos:end="2889:21"><decl pos:start="2889:13" pos:end="2889:20"><type pos:start="2889:13" pos:end="2889:16"><name pos:start="2889:13" pos:end="2889:16">TCGv</name></type> <name pos:start="2889:18" pos:end="2889:20">tmp</name></decl>;</decl_stmt>



            <if_stmt pos:start="2893:13" pos:end="2901:65"><if pos:start="2893:13" pos:end="2899:13">if <condition pos:start="2893:16" pos:end="2893:25">(<expr pos:start="2893:17" pos:end="2893:24"><name pos:start="2893:17" pos:end="2893:18">ra</name> <operator pos:start="2893:20" pos:end="2893:21">!=</operator> <literal type="number" pos:start="2893:23" pos:end="2893:24">31</literal></expr>)</condition> <block pos:start="2893:27" pos:end="2899:13">{<block_content pos:start="2895:17" pos:end="2897:81">

                <expr_stmt pos:start="2895:17" pos:end="2895:49"><expr pos:start="2895:17" pos:end="2895:48"><name pos:start="2895:17" pos:end="2895:19">tmp</name> <operator pos:start="2895:21" pos:end="2895:21">=</operator> <call pos:start="2895:23" pos:end="2895:48"><name pos:start="2895:23" pos:end="2895:34">tcg_temp_new</name><argument_list pos:start="2895:35" pos:end="2895:48">(<argument pos:start="2895:36" pos:end="2895:47"><expr pos:start="2895:36" pos:end="2895:47"><name pos:start="2895:36" pos:end="2895:47">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2897:17" pos:end="2897:81"><expr pos:start="2897:17" pos:end="2897:80"><call pos:start="2897:17" pos:end="2897:80"><name pos:start="2897:17" pos:end="2897:32">tcg_gen_addi_i64</name><argument_list pos:start="2897:33" pos:end="2897:80">(<argument pos:start="2897:34" pos:end="2897:36"><expr pos:start="2897:34" pos:end="2897:36"><name pos:start="2897:34" pos:end="2897:36">tmp</name></expr></argument>, <argument pos:start="2897:39" pos:end="2897:48"><expr pos:start="2897:39" pos:end="2897:48"><name pos:start="2897:39" pos:end="2897:48"><name pos:start="2897:39" pos:end="2897:44">cpu_ir</name><index pos:start="2897:45" pos:end="2897:48">[<expr pos:start="2897:46" pos:end="2897:47"><name pos:start="2897:46" pos:end="2897:47">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2897:51" pos:end="2897:79"><expr pos:start="2897:51" pos:end="2897:79"><operator pos:start="2897:51" pos:end="2897:51">(</operator><operator pos:start="2897:52" pos:end="2897:52">(</operator><operator pos:start="2897:53" pos:end="2897:53">(</operator><name pos:start="2897:54" pos:end="2897:60">int64_t</name><operator pos:start="2897:61" pos:end="2897:61">)</operator><name pos:start="2897:62" pos:end="2897:65">insn</name> <operator pos:start="2897:67" pos:end="2897:68">&lt;&lt;</operator> <literal type="number" pos:start="2897:70" pos:end="2897:71">51</literal><operator pos:start="2897:72" pos:end="2897:72">)</operator> <operator pos:start="2897:74" pos:end="2897:75">&gt;&gt;</operator> <literal type="number" pos:start="2897:77" pos:end="2897:78">51</literal><operator pos:start="2897:79" pos:end="2897:79">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2899:15" pos:end="2901:65">else<block type="pseudo" pos:start="2901:17" pos:end="2901:65"><block_content pos:start="2901:17" pos:end="2901:65">

                <expr_stmt pos:start="2901:17" pos:end="2901:65"><expr pos:start="2901:17" pos:end="2901:64"><name pos:start="2901:17" pos:end="2901:19">tmp</name> <operator pos:start="2901:21" pos:end="2901:21">=</operator> <call pos:start="2901:23" pos:end="2901:64"><name pos:start="2901:23" pos:end="2901:35">tcg_const_i64</name><argument_list pos:start="2901:36" pos:end="2901:64">(<argument pos:start="2901:37" pos:end="2901:63"><expr pos:start="2901:37" pos:end="2901:63"><operator pos:start="2901:37" pos:end="2901:37">(</operator><operator pos:start="2901:38" pos:end="2901:38">(</operator><name pos:start="2901:39" pos:end="2901:45">int64_t</name><operator pos:start="2901:46" pos:end="2901:46">)</operator><name pos:start="2901:47" pos:end="2901:50">insn</name> <operator pos:start="2901:52" pos:end="2901:53">&lt;&lt;</operator> <literal type="number" pos:start="2901:55" pos:end="2901:56">51</literal><operator pos:start="2901:57" pos:end="2901:57">)</operator> <operator pos:start="2901:59" pos:end="2901:60">&gt;&gt;</operator> <literal type="number" pos:start="2901:62" pos:end="2901:63">51</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2903:13" pos:end="2903:51"><expr pos:start="2903:13" pos:end="2903:50"><call pos:start="2903:13" pos:end="2903:50"><name pos:start="2903:13" pos:end="2903:30">tcg_gen_helper_0_1</name><argument_list pos:start="2903:31" pos:end="2903:50">(<argument pos:start="2903:32" pos:end="2903:44"><expr pos:start="2903:32" pos:end="2903:44"><name pos:start="2903:32" pos:end="2903:44">helper_hw_ret</name></expr></argument>, <argument pos:start="2903:47" pos:end="2903:49"><expr pos:start="2903:47" pos:end="2903:49"><name pos:start="2903:47" pos:end="2903:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2905:13" pos:end="2905:31"><expr pos:start="2905:13" pos:end="2905:30"><call pos:start="2905:13" pos:end="2905:30"><name pos:start="2905:13" pos:end="2905:25">tcg_temp_free</name><argument_list pos:start="2905:26" pos:end="2905:30">(<argument pos:start="2905:27" pos:end="2905:29"><expr pos:start="2905:27" pos:end="2905:29"><name pos:start="2905:27" pos:end="2905:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="2909:9" pos:end="2909:16"><expr pos:start="2909:9" pos:end="2909:15"><name pos:start="2909:9" pos:end="2909:11">ret</name> <operator pos:start="2909:13" pos:end="2909:13">=</operator> <literal type="number" pos:start="2909:15" pos:end="2909:15">2</literal></expr>;</expr_stmt>

        <break pos:start="2911:9" pos:end="2914:0">break;</break>

<cpp:endif pos:start="2913:1" pos:end="2913:6">#<cpp:directive pos:start="2913:2" pos:end="2913:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2915:5" pos:end="2920:0">case <expr pos:start="2915:10" pos:end="2915:13"><literal type="number" pos:start="2915:10" pos:end="2915:13">0x1F</literal></expr>:</case>

        <comment type="block" pos:start="2917:9" pos:end="2917:29">/* HW_ST (PALcode) */</comment>

<cpp:if pos:start="2919:1" pos:end="2919:30">#<cpp:directive pos:start="2919:2" pos:end="2919:3">if</cpp:directive> <expr pos:start="2919:5" pos:end="2919:30"><call pos:start="2919:5" pos:end="2919:30"><name pos:start="2919:5" pos:end="2919:11">defined</name> <argument_list pos:start="2919:13" pos:end="2919:30">(<argument pos:start="2919:14" pos:end="2919:29"><expr pos:start="2919:14" pos:end="2919:29"><name pos:start="2919:14" pos:end="2919:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2921:9" pos:end="2924:0">goto <name pos:start="2921:14" pos:end="2921:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2923:1" pos:end="2923:5">#<cpp:directive pos:start="2923:2" pos:end="2923:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2925:9" pos:end="3093:9"><if pos:start="2925:9" pos:end="2927:29">if <condition pos:start="2925:12" pos:end="2925:27">(<expr pos:start="2925:13" pos:end="2925:26"><operator pos:start="2925:13" pos:end="2925:13">!</operator><name pos:start="2925:14" pos:end="2925:26"><name pos:start="2925:14" pos:end="2925:16">ctx</name><operator pos:start="2925:17" pos:end="2925:18">-&gt;</operator><name pos:start="2925:19" pos:end="2925:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2927:13" pos:end="2927:29"><block_content pos:start="2927:13" pos:end="2927:29">

            <goto pos:start="2927:13" pos:end="2927:29">goto <name pos:start="2927:18" pos:end="2927:28">invalid_opc</name>;</goto></block_content></block></if>

        <else pos:start="2929:9" pos:end="3093:9">else <block pos:start="2929:14" pos:end="3093:9">{<block_content pos:start="2931:13" pos:end="3091:32">

            <decl_stmt pos:start="2931:13" pos:end="2931:27"><decl pos:start="2931:13" pos:end="2931:21"><type pos:start="2931:13" pos:end="2931:16"><name pos:start="2931:13" pos:end="2931:16">TCGv</name></type> <name pos:start="2931:18" pos:end="2931:21">addr</name></decl>, <decl pos:start="2931:24" pos:end="2931:26"><type ref="prev" pos:start="2931:13" pos:end="2931:16"/><name pos:start="2931:24" pos:end="2931:26">val</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2933:13" pos:end="2933:46"><expr pos:start="2933:13" pos:end="2933:45"><name pos:start="2933:13" pos:end="2933:16">addr</name> <operator pos:start="2933:18" pos:end="2933:18">=</operator> <call pos:start="2933:20" pos:end="2933:45"><name pos:start="2933:20" pos:end="2933:31">tcg_temp_new</name><argument_list pos:start="2933:32" pos:end="2933:45">(<argument pos:start="2933:33" pos:end="2933:44"><expr pos:start="2933:33" pos:end="2933:44"><name pos:start="2933:33" pos:end="2933:44">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2935:13" pos:end="2941:47"><if pos:start="2935:13" pos:end="2937:59">if <condition pos:start="2935:16" pos:end="2935:25">(<expr pos:start="2935:17" pos:end="2935:24"><name pos:start="2935:17" pos:end="2935:18">rb</name> <operator pos:start="2935:20" pos:end="2935:21">!=</operator> <literal type="number" pos:start="2935:23" pos:end="2935:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2937:17" pos:end="2937:59"><block_content pos:start="2937:17" pos:end="2937:59">

                <expr_stmt pos:start="2937:17" pos:end="2937:59"><expr pos:start="2937:17" pos:end="2937:58"><call pos:start="2937:17" pos:end="2937:58"><name pos:start="2937:17" pos:end="2937:32">tcg_gen_addi_i64</name><argument_list pos:start="2937:33" pos:end="2937:58">(<argument pos:start="2937:34" pos:end="2937:37"><expr pos:start="2937:34" pos:end="2937:37"><name pos:start="2937:34" pos:end="2937:37">addr</name></expr></argument>, <argument pos:start="2937:40" pos:end="2937:49"><expr pos:start="2937:40" pos:end="2937:49"><name pos:start="2937:40" pos:end="2937:49"><name pos:start="2937:40" pos:end="2937:45">cpu_ir</name><index pos:start="2937:46" pos:end="2937:49">[<expr pos:start="2937:47" pos:end="2937:48"><name pos:start="2937:47" pos:end="2937:48">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2937:52" pos:end="2937:57"><expr pos:start="2937:52" pos:end="2937:57"><name pos:start="2937:52" pos:end="2937:57">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2939:13" pos:end="2941:47">else<block type="pseudo" pos:start="2941:17" pos:end="2941:47"><block_content pos:start="2941:17" pos:end="2941:47">

                <expr_stmt pos:start="2941:17" pos:end="2941:47"><expr pos:start="2941:17" pos:end="2941:46"><call pos:start="2941:17" pos:end="2941:46"><name pos:start="2941:17" pos:end="2941:32">tcg_gen_movi_i64</name><argument_list pos:start="2941:33" pos:end="2941:46">(<argument pos:start="2941:34" pos:end="2941:37"><expr pos:start="2941:34" pos:end="2941:37"><name pos:start="2941:34" pos:end="2941:37">addr</name></expr></argument>, <argument pos:start="2941:40" pos:end="2941:45"><expr pos:start="2941:40" pos:end="2941:45"><name pos:start="2941:40" pos:end="2941:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="2943:13" pos:end="2953:13"><if pos:start="2943:13" pos:end="2945:33">if <condition pos:start="2943:16" pos:end="2943:25">(<expr pos:start="2943:17" pos:end="2943:24"><name pos:start="2943:17" pos:end="2943:18">ra</name> <operator pos:start="2943:20" pos:end="2943:21">!=</operator> <literal type="number" pos:start="2943:23" pos:end="2943:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2945:17" pos:end="2945:33"><block_content pos:start="2945:17" pos:end="2945:33">

                <expr_stmt pos:start="2945:17" pos:end="2945:33"><expr pos:start="2945:17" pos:end="2945:32"><name pos:start="2945:17" pos:end="2945:19">val</name> <operator pos:start="2945:21" pos:end="2945:21">=</operator> <name pos:start="2945:23" pos:end="2945:32"><name pos:start="2945:23" pos:end="2945:28">cpu_ir</name><index pos:start="2945:29" pos:end="2945:32">[<expr pos:start="2945:30" pos:end="2945:31"><name pos:start="2945:30" pos:end="2945:31">ra</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2947:13" pos:end="2953:13">else <block pos:start="2947:18" pos:end="2953:13">{<block_content pos:start="2949:17" pos:end="2951:41">

                <expr_stmt pos:start="2949:17" pos:end="2949:49"><expr pos:start="2949:17" pos:end="2949:48"><name pos:start="2949:17" pos:end="2949:19">val</name> <operator pos:start="2949:21" pos:end="2949:21">=</operator> <call pos:start="2949:23" pos:end="2949:48"><name pos:start="2949:23" pos:end="2949:34">tcg_temp_new</name><argument_list pos:start="2949:35" pos:end="2949:48">(<argument pos:start="2949:36" pos:end="2949:47"><expr pos:start="2949:36" pos:end="2949:47"><name pos:start="2949:36" pos:end="2949:47">TCG_TYPE_I64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2951:17" pos:end="2951:41"><expr pos:start="2951:17" pos:end="2951:40"><call pos:start="2951:17" pos:end="2951:40"><name pos:start="2951:17" pos:end="2951:32">tcg_gen_movi_i64</name><argument_list pos:start="2951:33" pos:end="2951:40">(<argument pos:start="2951:34" pos:end="2951:36"><expr pos:start="2951:34" pos:end="2951:36"><name pos:start="2951:34" pos:end="2951:36">val</name></expr></argument>, <argument pos:start="2951:39" pos:end="2951:39"><expr pos:start="2951:39" pos:end="2951:39"><literal type="number" pos:start="2951:39" pos:end="2951:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <switch pos:start="2955:13" pos:end="3085:13">switch <condition pos:start="2955:20" pos:end="2955:39">(<expr pos:start="2955:21" pos:end="2955:38"><operator pos:start="2955:21" pos:end="2955:21">(</operator><name pos:start="2955:22" pos:end="2955:25">insn</name> <operator pos:start="2955:27" pos:end="2955:28">&gt;&gt;</operator> <literal type="number" pos:start="2955:30" pos:end="2955:31">12</literal><operator pos:start="2955:32" pos:end="2955:32">)</operator> <operator pos:start="2955:34" pos:end="2955:34">&amp;</operator> <literal type="number" pos:start="2955:36" pos:end="2955:38">0xF</literal></expr>)</condition> <block pos:start="2955:41" pos:end="3085:13">{<block_content pos:start="2957:13" pos:end="3083:33">

            <case pos:start="2957:13" pos:end="2957:21">case <expr pos:start="2957:18" pos:end="2957:20"><literal type="number" pos:start="2957:18" pos:end="2957:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2959:17" pos:end="2959:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2961:17" pos:end="2961:62"><expr pos:start="2961:17" pos:end="2961:61"><call pos:start="2961:17" pos:end="2961:61"><name pos:start="2961:17" pos:end="2961:34">tcg_gen_helper_0_2</name><argument_list pos:start="2961:35" pos:end="2961:61">(<argument pos:start="2961:36" pos:end="2961:49"><expr pos:start="2961:36" pos:end="2961:49"><name pos:start="2961:36" pos:end="2961:49">helper_stl_raw</name></expr></argument>, <argument pos:start="2961:52" pos:end="2961:54"><expr pos:start="2961:52" pos:end="2961:54"><name pos:start="2961:52" pos:end="2961:54">val</name></expr></argument>, <argument pos:start="2961:57" pos:end="2961:60"><expr pos:start="2961:57" pos:end="2961:60"><name pos:start="2961:57" pos:end="2961:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2963:17" pos:end="2963:22">break;</break>

            <case pos:start="2965:13" pos:end="2965:21">case <expr pos:start="2965:18" pos:end="2965:20"><literal type="number" pos:start="2965:18" pos:end="2965:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2967:17" pos:end="2967:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2969:17" pos:end="2969:62"><expr pos:start="2969:17" pos:end="2969:61"><call pos:start="2969:17" pos:end="2969:61"><name pos:start="2969:17" pos:end="2969:34">tcg_gen_helper_0_2</name><argument_list pos:start="2969:35" pos:end="2969:61">(<argument pos:start="2969:36" pos:end="2969:49"><expr pos:start="2969:36" pos:end="2969:49"><name pos:start="2969:36" pos:end="2969:49">helper_stq_raw</name></expr></argument>, <argument pos:start="2969:52" pos:end="2969:54"><expr pos:start="2969:52" pos:end="2969:54"><name pos:start="2969:52" pos:end="2969:54">val</name></expr></argument>, <argument pos:start="2969:57" pos:end="2969:60"><expr pos:start="2969:57" pos:end="2969:60"><name pos:start="2969:57" pos:end="2969:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2971:17" pos:end="2971:22">break;</break>

            <case pos:start="2973:13" pos:end="2973:21">case <expr pos:start="2973:18" pos:end="2973:20"><literal type="number" pos:start="2973:18" pos:end="2973:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2975:17" pos:end="2975:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2977:17" pos:end="2977:69"><expr pos:start="2977:17" pos:end="2977:68"><call pos:start="2977:17" pos:end="2977:68"><name pos:start="2977:17" pos:end="2977:34">tcg_gen_helper_1_2</name><argument_list pos:start="2977:35" pos:end="2977:68">(<argument pos:start="2977:36" pos:end="2977:51"><expr pos:start="2977:36" pos:end="2977:51"><name pos:start="2977:36" pos:end="2977:51">helper_stl_c_raw</name></expr></argument>, <argument pos:start="2977:54" pos:end="2977:56"><expr pos:start="2977:54" pos:end="2977:56"><name pos:start="2977:54" pos:end="2977:56">val</name></expr></argument>, <argument pos:start="2977:59" pos:end="2977:61"><expr pos:start="2977:59" pos:end="2977:61"><name pos:start="2977:59" pos:end="2977:61">val</name></expr></argument>, <argument pos:start="2977:64" pos:end="2977:67"><expr pos:start="2977:64" pos:end="2977:67"><name pos:start="2977:64" pos:end="2977:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2979:17" pos:end="2979:22">break;</break>

            <case pos:start="2981:13" pos:end="2981:21">case <expr pos:start="2981:18" pos:end="2981:20"><literal type="number" pos:start="2981:18" pos:end="2981:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2983:17" pos:end="2983:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2985:17" pos:end="2985:69"><expr pos:start="2985:17" pos:end="2985:68"><call pos:start="2985:17" pos:end="2985:68"><name pos:start="2985:17" pos:end="2985:34">tcg_gen_helper_1_2</name><argument_list pos:start="2985:35" pos:end="2985:68">(<argument pos:start="2985:36" pos:end="2985:51"><expr pos:start="2985:36" pos:end="2985:51"><name pos:start="2985:36" pos:end="2985:51">helper_stq_c_raw</name></expr></argument>, <argument pos:start="2985:54" pos:end="2985:56"><expr pos:start="2985:54" pos:end="2985:56"><name pos:start="2985:54" pos:end="2985:56">val</name></expr></argument>, <argument pos:start="2985:59" pos:end="2985:61"><expr pos:start="2985:59" pos:end="2985:61"><name pos:start="2985:59" pos:end="2985:61">val</name></expr></argument>, <argument pos:start="2985:64" pos:end="2985:67"><expr pos:start="2985:64" pos:end="2985:67"><name pos:start="2985:64" pos:end="2985:67">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2987:17" pos:end="2987:22">break;</break>

            <case pos:start="2989:13" pos:end="2989:21">case <expr pos:start="2989:18" pos:end="2989:20"><literal type="number" pos:start="2989:18" pos:end="2989:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2991:17" pos:end="2991:45">/* Longword virtual access */</comment>

                <expr_stmt pos:start="2993:17" pos:end="2993:71"><expr pos:start="2993:17" pos:end="2993:70"><call pos:start="2993:17" pos:end="2993:70"><name pos:start="2993:17" pos:end="2993:34">tcg_gen_helper_1_1</name><argument_list pos:start="2993:35" pos:end="2993:70">(<argument pos:start="2993:36" pos:end="2993:57"><expr pos:start="2993:36" pos:end="2993:57"><name pos:start="2993:36" pos:end="2993:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="2993:60" pos:end="2993:63"><expr pos:start="2993:60" pos:end="2993:63"><name pos:start="2993:60" pos:end="2993:63">addr</name></expr></argument>, <argument pos:start="2993:66" pos:end="2993:69"><expr pos:start="2993:66" pos:end="2993:69"><name pos:start="2993:66" pos:end="2993:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2995:17" pos:end="2995:62"><expr pos:start="2995:17" pos:end="2995:61"><call pos:start="2995:17" pos:end="2995:61"><name pos:start="2995:17" pos:end="2995:34">tcg_gen_helper_0_2</name><argument_list pos:start="2995:35" pos:end="2995:61">(<argument pos:start="2995:36" pos:end="2995:49"><expr pos:start="2995:36" pos:end="2995:49"><name pos:start="2995:36" pos:end="2995:49">helper_stl_raw</name></expr></argument>, <argument pos:start="2995:52" pos:end="2995:54"><expr pos:start="2995:52" pos:end="2995:54"><name pos:start="2995:52" pos:end="2995:54">val</name></expr></argument>, <argument pos:start="2995:57" pos:end="2995:60"><expr pos:start="2995:57" pos:end="2995:60"><name pos:start="2995:57" pos:end="2995:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2997:17" pos:end="2997:22">break;</break>

            <case pos:start="2999:13" pos:end="2999:21">case <expr pos:start="2999:18" pos:end="2999:20"><literal type="number" pos:start="2999:18" pos:end="2999:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="3001:17" pos:end="3001:45">/* Quadword virtual access */</comment>

                <expr_stmt pos:start="3003:17" pos:end="3003:71"><expr pos:start="3003:17" pos:end="3003:70"><call pos:start="3003:17" pos:end="3003:70"><name pos:start="3003:17" pos:end="3003:34">tcg_gen_helper_1_1</name><argument_list pos:start="3003:35" pos:end="3003:70">(<argument pos:start="3003:36" pos:end="3003:57"><expr pos:start="3003:36" pos:end="3003:57"><name pos:start="3003:36" pos:end="3003:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="3003:60" pos:end="3003:63"><expr pos:start="3003:60" pos:end="3003:63"><name pos:start="3003:60" pos:end="3003:63">addr</name></expr></argument>, <argument pos:start="3003:66" pos:end="3003:69"><expr pos:start="3003:66" pos:end="3003:69"><name pos:start="3003:66" pos:end="3003:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3005:17" pos:end="3005:62"><expr pos:start="3005:17" pos:end="3005:61"><call pos:start="3005:17" pos:end="3005:61"><name pos:start="3005:17" pos:end="3005:34">tcg_gen_helper_0_2</name><argument_list pos:start="3005:35" pos:end="3005:61">(<argument pos:start="3005:36" pos:end="3005:49"><expr pos:start="3005:36" pos:end="3005:49"><name pos:start="3005:36" pos:end="3005:49">helper_stq_raw</name></expr></argument>, <argument pos:start="3005:52" pos:end="3005:54"><expr pos:start="3005:52" pos:end="3005:54"><name pos:start="3005:52" pos:end="3005:54">val</name></expr></argument>, <argument pos:start="3005:57" pos:end="3005:60"><expr pos:start="3005:57" pos:end="3005:60"><name pos:start="3005:57" pos:end="3005:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3007:17" pos:end="3007:22">break;</break>

            <case pos:start="3009:13" pos:end="3009:21">case <expr pos:start="3009:18" pos:end="3009:20"><literal type="number" pos:start="3009:18" pos:end="3009:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="3011:17" pos:end="3011:29">/* Invalid */</comment>

                <goto pos:start="3013:17" pos:end="3013:33">goto <name pos:start="3013:22" pos:end="3013:32">invalid_opc</name>;</goto>

            <case pos:start="3015:13" pos:end="3015:21">case <expr pos:start="3015:18" pos:end="3015:20"><literal type="number" pos:start="3015:18" pos:end="3015:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="3017:17" pos:end="3017:29">/* Invalid */</comment>

                <goto pos:start="3019:17" pos:end="3019:33">goto <name pos:start="3019:22" pos:end="3019:32">invalid_opc</name>;</goto>

            <case pos:start="3021:13" pos:end="3021:21">case <expr pos:start="3021:18" pos:end="3021:20"><literal type="number" pos:start="3021:18" pos:end="3021:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="3023:17" pos:end="3023:29">/* Invalid */</comment>

                <goto pos:start="3025:17" pos:end="3025:33">goto <name pos:start="3025:22" pos:end="3025:32">invalid_opc</name>;</goto>

            <case pos:start="3027:13" pos:end="3027:21">case <expr pos:start="3027:18" pos:end="3027:20"><literal type="number" pos:start="3027:18" pos:end="3027:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="3029:17" pos:end="3029:29">/* Invalid */</comment>

                <goto pos:start="3031:17" pos:end="3031:33">goto <name pos:start="3031:22" pos:end="3031:32">invalid_opc</name>;</goto>

            <case pos:start="3033:13" pos:end="3033:21">case <expr pos:start="3033:18" pos:end="3033:20"><literal type="number" pos:start="3033:18" pos:end="3033:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="3035:17" pos:end="3035:29">/* Invalid */</comment>

                <goto pos:start="3037:17" pos:end="3037:33">goto <name pos:start="3037:22" pos:end="3037:32">invalid_opc</name>;</goto>

            <case pos:start="3039:13" pos:end="3039:21">case <expr pos:start="3039:18" pos:end="3039:20"><literal type="number" pos:start="3039:18" pos:end="3039:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="3041:17" pos:end="3041:29">/* Invalid */</comment>

                <goto pos:start="3043:17" pos:end="3043:33">goto <name pos:start="3043:22" pos:end="3043:32">invalid_opc</name>;</goto>

            <case pos:start="3045:13" pos:end="3045:21">case <expr pos:start="3045:18" pos:end="3045:20"><literal type="number" pos:start="3045:18" pos:end="3045:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="3047:17" pos:end="3047:72">/* Longword virtual access with alternate access mode */</comment>

                <expr_stmt pos:start="3049:17" pos:end="3049:56"><expr pos:start="3049:17" pos:end="3049:55"><call pos:start="3049:17" pos:end="3049:55"><name pos:start="3049:17" pos:end="3049:34">tcg_gen_helper_0_0</name><argument_list pos:start="3049:35" pos:end="3049:55">(<argument pos:start="3049:36" pos:end="3049:54"><expr pos:start="3049:36" pos:end="3049:54"><name pos:start="3049:36" pos:end="3049:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3051:17" pos:end="3051:71"><expr pos:start="3051:17" pos:end="3051:70"><call pos:start="3051:17" pos:end="3051:70"><name pos:start="3051:17" pos:end="3051:34">tcg_gen_helper_1_1</name><argument_list pos:start="3051:35" pos:end="3051:70">(<argument pos:start="3051:36" pos:end="3051:57"><expr pos:start="3051:36" pos:end="3051:57"><name pos:start="3051:36" pos:end="3051:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="3051:60" pos:end="3051:63"><expr pos:start="3051:60" pos:end="3051:63"><name pos:start="3051:60" pos:end="3051:63">addr</name></expr></argument>, <argument pos:start="3051:66" pos:end="3051:69"><expr pos:start="3051:66" pos:end="3051:69"><name pos:start="3051:66" pos:end="3051:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3053:17" pos:end="3053:62"><expr pos:start="3053:17" pos:end="3053:61"><call pos:start="3053:17" pos:end="3053:61"><name pos:start="3053:17" pos:end="3053:34">tcg_gen_helper_0_2</name><argument_list pos:start="3053:35" pos:end="3053:61">(<argument pos:start="3053:36" pos:end="3053:49"><expr pos:start="3053:36" pos:end="3053:49"><name pos:start="3053:36" pos:end="3053:49">helper_stl_raw</name></expr></argument>, <argument pos:start="3053:52" pos:end="3053:54"><expr pos:start="3053:52" pos:end="3053:54"><name pos:start="3053:52" pos:end="3053:54">val</name></expr></argument>, <argument pos:start="3053:57" pos:end="3053:60"><expr pos:start="3053:57" pos:end="3053:60"><name pos:start="3053:57" pos:end="3053:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3055:17" pos:end="3055:56"><expr pos:start="3055:17" pos:end="3055:55"><call pos:start="3055:17" pos:end="3055:55"><name pos:start="3055:17" pos:end="3055:34">tcg_gen_helper_0_0</name><argument_list pos:start="3055:35" pos:end="3055:55">(<argument pos:start="3055:36" pos:end="3055:54"><expr pos:start="3055:36" pos:end="3055:54"><name pos:start="3055:36" pos:end="3055:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3057:17" pos:end="3057:22">break;</break>

            <case pos:start="3059:13" pos:end="3059:21">case <expr pos:start="3059:18" pos:end="3059:20"><literal type="number" pos:start="3059:18" pos:end="3059:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="3061:17" pos:end="3061:72">/* Quadword virtual access with alternate access mode */</comment>

                <expr_stmt pos:start="3063:17" pos:end="3063:56"><expr pos:start="3063:17" pos:end="3063:55"><call pos:start="3063:17" pos:end="3063:55"><name pos:start="3063:17" pos:end="3063:34">tcg_gen_helper_0_0</name><argument_list pos:start="3063:35" pos:end="3063:55">(<argument pos:start="3063:36" pos:end="3063:54"><expr pos:start="3063:36" pos:end="3063:54"><name pos:start="3063:36" pos:end="3063:54">helper_set_alt_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3065:17" pos:end="3065:71"><expr pos:start="3065:17" pos:end="3065:70"><call pos:start="3065:17" pos:end="3065:70"><name pos:start="3065:17" pos:end="3065:34">tcg_gen_helper_1_1</name><argument_list pos:start="3065:35" pos:end="3065:70">(<argument pos:start="3065:36" pos:end="3065:57"><expr pos:start="3065:36" pos:end="3065:57"><name pos:start="3065:36" pos:end="3065:57">helper_st_virt_to_phys</name></expr></argument>, <argument pos:start="3065:60" pos:end="3065:63"><expr pos:start="3065:60" pos:end="3065:63"><name pos:start="3065:60" pos:end="3065:63">addr</name></expr></argument>, <argument pos:start="3065:66" pos:end="3065:69"><expr pos:start="3065:66" pos:end="3065:69"><name pos:start="3065:66" pos:end="3065:69">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3067:17" pos:end="3067:62"><expr pos:start="3067:17" pos:end="3067:61"><call pos:start="3067:17" pos:end="3067:61"><name pos:start="3067:17" pos:end="3067:34">tcg_gen_helper_0_2</name><argument_list pos:start="3067:35" pos:end="3067:61">(<argument pos:start="3067:36" pos:end="3067:49"><expr pos:start="3067:36" pos:end="3067:49"><name pos:start="3067:36" pos:end="3067:49">helper_stl_raw</name></expr></argument>, <argument pos:start="3067:52" pos:end="3067:54"><expr pos:start="3067:52" pos:end="3067:54"><name pos:start="3067:52" pos:end="3067:54">val</name></expr></argument>, <argument pos:start="3067:57" pos:end="3067:60"><expr pos:start="3067:57" pos:end="3067:60"><name pos:start="3067:57" pos:end="3067:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3069:17" pos:end="3069:56"><expr pos:start="3069:17" pos:end="3069:55"><call pos:start="3069:17" pos:end="3069:55"><name pos:start="3069:17" pos:end="3069:34">tcg_gen_helper_0_0</name><argument_list pos:start="3069:35" pos:end="3069:55">(<argument pos:start="3069:36" pos:end="3069:54"><expr pos:start="3069:36" pos:end="3069:54"><name pos:start="3069:36" pos:end="3069:54">helper_restore_mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3071:17" pos:end="3071:22">break;</break>

            <case pos:start="3073:13" pos:end="3073:21">case <expr pos:start="3073:18" pos:end="3073:20"><literal type="number" pos:start="3073:18" pos:end="3073:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="3075:17" pos:end="3075:29">/* Invalid */</comment>

                <goto pos:start="3077:17" pos:end="3077:33">goto <name pos:start="3077:22" pos:end="3077:32">invalid_opc</name>;</goto>

            <case pos:start="3079:13" pos:end="3079:21">case <expr pos:start="3079:18" pos:end="3079:20"><literal type="number" pos:start="3079:18" pos:end="3079:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="3081:17" pos:end="3081:29">/* Invalid */</comment>

                <goto pos:start="3083:17" pos:end="3083:33">goto <name pos:start="3083:22" pos:end="3083:32">invalid_opc</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="3087:13" pos:end="3089:35"><if pos:start="3087:13" pos:end="3089:35">if <condition pos:start="3087:16" pos:end="3087:25">(<expr pos:start="3087:17" pos:end="3087:24"><name pos:start="3087:17" pos:end="3087:18">ra</name> <operator pos:start="3087:20" pos:end="3087:21">!=</operator> <literal type="number" pos:start="3087:23" pos:end="3087:24">31</literal></expr>)</condition><block type="pseudo" pos:start="3089:17" pos:end="3089:35"><block_content pos:start="3089:17" pos:end="3089:35">

                <expr_stmt pos:start="3089:17" pos:end="3089:35"><expr pos:start="3089:17" pos:end="3089:34"><call pos:start="3089:17" pos:end="3089:34"><name pos:start="3089:17" pos:end="3089:29">tcg_temp_free</name><argument_list pos:start="3089:30" pos:end="3089:34">(<argument pos:start="3089:31" pos:end="3089:33"><expr pos:start="3089:31" pos:end="3089:33"><name pos:start="3089:31" pos:end="3089:33">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3091:13" pos:end="3091:32"><expr pos:start="3091:13" pos:end="3091:31"><call pos:start="3091:13" pos:end="3091:31"><name pos:start="3091:13" pos:end="3091:25">tcg_temp_free</name><argument_list pos:start="3091:26" pos:end="3091:31">(<argument pos:start="3091:27" pos:end="3091:30"><expr pos:start="3091:27" pos:end="3091:30"><name pos:start="3091:27" pos:end="3091:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="3095:9" pos:end="3095:16"><expr pos:start="3095:9" pos:end="3095:15"><name pos:start="3095:9" pos:end="3095:11">ret</name> <operator pos:start="3095:13" pos:end="3095:13">=</operator> <literal type="number" pos:start="3095:15" pos:end="3095:15">2</literal></expr>;</expr_stmt>

        <break pos:start="3097:9" pos:end="3100:0">break;</break>

<cpp:endif pos:start="3099:1" pos:end="3099:6">#<cpp:directive pos:start="3099:2" pos:end="3099:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3101:5" pos:end="3101:14">case <expr pos:start="3101:10" pos:end="3101:13"><literal type="number" pos:start="3101:10" pos:end="3101:13">0x20</literal></expr>:</case>

        <comment type="block" pos:start="3103:9" pos:end="3103:17">/* LDF */</comment>

        <expr_stmt pos:start="3105:9" pos:end="3105:63"><expr pos:start="3105:9" pos:end="3105:62"><call pos:start="3105:9" pos:end="3105:62"><name pos:start="3105:9" pos:end="3105:20">gen_load_mem</name><argument_list pos:start="3105:21" pos:end="3105:62">(<argument pos:start="3105:22" pos:end="3105:24"><expr pos:start="3105:22" pos:end="3105:24"><name pos:start="3105:22" pos:end="3105:24">ctx</name></expr></argument>, <argument pos:start="3105:27" pos:end="3105:39"><expr pos:start="3105:27" pos:end="3105:39"><operator pos:start="3105:27" pos:end="3105:27">&amp;</operator><name pos:start="3105:28" pos:end="3105:39">gen_qemu_ldf</name></expr></argument>, <argument pos:start="3105:42" pos:end="3105:43"><expr pos:start="3105:42" pos:end="3105:43"><name pos:start="3105:42" pos:end="3105:43">ra</name></expr></argument>, <argument pos:start="3105:46" pos:end="3105:47"><expr pos:start="3105:46" pos:end="3105:47"><name pos:start="3105:46" pos:end="3105:47">rb</name></expr></argument>, <argument pos:start="3105:50" pos:end="3105:55"><expr pos:start="3105:50" pos:end="3105:55"><name pos:start="3105:50" pos:end="3105:55">disp16</name></expr></argument>, <argument pos:start="3105:58" pos:end="3105:58"><expr pos:start="3105:58" pos:end="3105:58"><literal type="number" pos:start="3105:58" pos:end="3105:58">1</literal></expr></argument>, <argument pos:start="3105:61" pos:end="3105:61"><expr pos:start="3105:61" pos:end="3105:61"><literal type="number" pos:start="3105:61" pos:end="3105:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3107:9" pos:end="3107:14">break;</break>

    <case pos:start="3109:5" pos:end="3109:14">case <expr pos:start="3109:10" pos:end="3109:13"><literal type="number" pos:start="3109:10" pos:end="3109:13">0x21</literal></expr>:</case>

        <comment type="block" pos:start="3111:9" pos:end="3111:17">/* LDG */</comment>

        <expr_stmt pos:start="3113:9" pos:end="3113:63"><expr pos:start="3113:9" pos:end="3113:62"><call pos:start="3113:9" pos:end="3113:62"><name pos:start="3113:9" pos:end="3113:20">gen_load_mem</name><argument_list pos:start="3113:21" pos:end="3113:62">(<argument pos:start="3113:22" pos:end="3113:24"><expr pos:start="3113:22" pos:end="3113:24"><name pos:start="3113:22" pos:end="3113:24">ctx</name></expr></argument>, <argument pos:start="3113:27" pos:end="3113:39"><expr pos:start="3113:27" pos:end="3113:39"><operator pos:start="3113:27" pos:end="3113:27">&amp;</operator><name pos:start="3113:28" pos:end="3113:39">gen_qemu_ldg</name></expr></argument>, <argument pos:start="3113:42" pos:end="3113:43"><expr pos:start="3113:42" pos:end="3113:43"><name pos:start="3113:42" pos:end="3113:43">ra</name></expr></argument>, <argument pos:start="3113:46" pos:end="3113:47"><expr pos:start="3113:46" pos:end="3113:47"><name pos:start="3113:46" pos:end="3113:47">rb</name></expr></argument>, <argument pos:start="3113:50" pos:end="3113:55"><expr pos:start="3113:50" pos:end="3113:55"><name pos:start="3113:50" pos:end="3113:55">disp16</name></expr></argument>, <argument pos:start="3113:58" pos:end="3113:58"><expr pos:start="3113:58" pos:end="3113:58"><literal type="number" pos:start="3113:58" pos:end="3113:58">1</literal></expr></argument>, <argument pos:start="3113:61" pos:end="3113:61"><expr pos:start="3113:61" pos:end="3113:61"><literal type="number" pos:start="3113:61" pos:end="3113:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3115:9" pos:end="3115:14">break;</break>

    <case pos:start="3117:5" pos:end="3117:14">case <expr pos:start="3117:10" pos:end="3117:13"><literal type="number" pos:start="3117:10" pos:end="3117:13">0x22</literal></expr>:</case>

        <comment type="block" pos:start="3119:9" pos:end="3119:17">/* LDS */</comment>

        <expr_stmt pos:start="3121:9" pos:end="3121:63"><expr pos:start="3121:9" pos:end="3121:62"><call pos:start="3121:9" pos:end="3121:62"><name pos:start="3121:9" pos:end="3121:20">gen_load_mem</name><argument_list pos:start="3121:21" pos:end="3121:62">(<argument pos:start="3121:22" pos:end="3121:24"><expr pos:start="3121:22" pos:end="3121:24"><name pos:start="3121:22" pos:end="3121:24">ctx</name></expr></argument>, <argument pos:start="3121:27" pos:end="3121:39"><expr pos:start="3121:27" pos:end="3121:39"><operator pos:start="3121:27" pos:end="3121:27">&amp;</operator><name pos:start="3121:28" pos:end="3121:39">gen_qemu_lds</name></expr></argument>, <argument pos:start="3121:42" pos:end="3121:43"><expr pos:start="3121:42" pos:end="3121:43"><name pos:start="3121:42" pos:end="3121:43">ra</name></expr></argument>, <argument pos:start="3121:46" pos:end="3121:47"><expr pos:start="3121:46" pos:end="3121:47"><name pos:start="3121:46" pos:end="3121:47">rb</name></expr></argument>, <argument pos:start="3121:50" pos:end="3121:55"><expr pos:start="3121:50" pos:end="3121:55"><name pos:start="3121:50" pos:end="3121:55">disp16</name></expr></argument>, <argument pos:start="3121:58" pos:end="3121:58"><expr pos:start="3121:58" pos:end="3121:58"><literal type="number" pos:start="3121:58" pos:end="3121:58">1</literal></expr></argument>, <argument pos:start="3121:61" pos:end="3121:61"><expr pos:start="3121:61" pos:end="3121:61"><literal type="number" pos:start="3121:61" pos:end="3121:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3123:9" pos:end="3123:14">break;</break>

    <case pos:start="3125:5" pos:end="3125:14">case <expr pos:start="3125:10" pos:end="3125:13"><literal type="number" pos:start="3125:10" pos:end="3125:13">0x23</literal></expr>:</case>

        <comment type="block" pos:start="3127:9" pos:end="3127:17">/* LDT */</comment>

        <expr_stmt pos:start="3129:9" pos:end="3129:68"><expr pos:start="3129:9" pos:end="3129:67"><call pos:start="3129:9" pos:end="3129:67"><name pos:start="3129:9" pos:end="3129:20">gen_load_mem</name><argument_list pos:start="3129:21" pos:end="3129:67">(<argument pos:start="3129:22" pos:end="3129:24"><expr pos:start="3129:22" pos:end="3129:24"><name pos:start="3129:22" pos:end="3129:24">ctx</name></expr></argument>, <argument pos:start="3129:27" pos:end="3129:44"><expr pos:start="3129:27" pos:end="3129:44"><operator pos:start="3129:27" pos:end="3129:27">&amp;</operator><name pos:start="3129:28" pos:end="3129:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="3129:47" pos:end="3129:48"><expr pos:start="3129:47" pos:end="3129:48"><name pos:start="3129:47" pos:end="3129:48">ra</name></expr></argument>, <argument pos:start="3129:51" pos:end="3129:52"><expr pos:start="3129:51" pos:end="3129:52"><name pos:start="3129:51" pos:end="3129:52">rb</name></expr></argument>, <argument pos:start="3129:55" pos:end="3129:60"><expr pos:start="3129:55" pos:end="3129:60"><name pos:start="3129:55" pos:end="3129:60">disp16</name></expr></argument>, <argument pos:start="3129:63" pos:end="3129:63"><expr pos:start="3129:63" pos:end="3129:63"><literal type="number" pos:start="3129:63" pos:end="3129:63">1</literal></expr></argument>, <argument pos:start="3129:66" pos:end="3129:66"><expr pos:start="3129:66" pos:end="3129:66"><literal type="number" pos:start="3129:66" pos:end="3129:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3131:9" pos:end="3131:14">break;</break>

    <case pos:start="3133:5" pos:end="3133:14">case <expr pos:start="3133:10" pos:end="3133:13"><literal type="number" pos:start="3133:10" pos:end="3133:13">0x24</literal></expr>:</case>

        <comment type="block" pos:start="3135:9" pos:end="3135:17">/* STF */</comment>

        <expr_stmt pos:start="3137:9" pos:end="3137:64"><expr pos:start="3137:9" pos:end="3137:63"><call pos:start="3137:9" pos:end="3137:63"><name pos:start="3137:9" pos:end="3137:21">gen_store_mem</name><argument_list pos:start="3137:22" pos:end="3137:63">(<argument pos:start="3137:23" pos:end="3137:25"><expr pos:start="3137:23" pos:end="3137:25"><name pos:start="3137:23" pos:end="3137:25">ctx</name></expr></argument>, <argument pos:start="3137:28" pos:end="3137:40"><expr pos:start="3137:28" pos:end="3137:40"><operator pos:start="3137:28" pos:end="3137:28">&amp;</operator><name pos:start="3137:29" pos:end="3137:40">gen_qemu_stf</name></expr></argument>, <argument pos:start="3137:43" pos:end="3137:44"><expr pos:start="3137:43" pos:end="3137:44"><name pos:start="3137:43" pos:end="3137:44">ra</name></expr></argument>, <argument pos:start="3137:47" pos:end="3137:48"><expr pos:start="3137:47" pos:end="3137:48"><name pos:start="3137:47" pos:end="3137:48">rb</name></expr></argument>, <argument pos:start="3137:51" pos:end="3137:56"><expr pos:start="3137:51" pos:end="3137:56"><name pos:start="3137:51" pos:end="3137:56">disp16</name></expr></argument>, <argument pos:start="3137:59" pos:end="3137:59"><expr pos:start="3137:59" pos:end="3137:59"><literal type="number" pos:start="3137:59" pos:end="3137:59">1</literal></expr></argument>, <argument pos:start="3137:62" pos:end="3137:62"><expr pos:start="3137:62" pos:end="3137:62"><literal type="number" pos:start="3137:62" pos:end="3137:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3139:9" pos:end="3139:14">break;</break>

    <case pos:start="3141:5" pos:end="3141:14">case <expr pos:start="3141:10" pos:end="3141:13"><literal type="number" pos:start="3141:10" pos:end="3141:13">0x25</literal></expr>:</case>

        <comment type="block" pos:start="3143:9" pos:end="3143:17">/* STG */</comment>

        <expr_stmt pos:start="3145:9" pos:end="3145:64"><expr pos:start="3145:9" pos:end="3145:63"><call pos:start="3145:9" pos:end="3145:63"><name pos:start="3145:9" pos:end="3145:21">gen_store_mem</name><argument_list pos:start="3145:22" pos:end="3145:63">(<argument pos:start="3145:23" pos:end="3145:25"><expr pos:start="3145:23" pos:end="3145:25"><name pos:start="3145:23" pos:end="3145:25">ctx</name></expr></argument>, <argument pos:start="3145:28" pos:end="3145:40"><expr pos:start="3145:28" pos:end="3145:40"><operator pos:start="3145:28" pos:end="3145:28">&amp;</operator><name pos:start="3145:29" pos:end="3145:40">gen_qemu_stg</name></expr></argument>, <argument pos:start="3145:43" pos:end="3145:44"><expr pos:start="3145:43" pos:end="3145:44"><name pos:start="3145:43" pos:end="3145:44">ra</name></expr></argument>, <argument pos:start="3145:47" pos:end="3145:48"><expr pos:start="3145:47" pos:end="3145:48"><name pos:start="3145:47" pos:end="3145:48">rb</name></expr></argument>, <argument pos:start="3145:51" pos:end="3145:56"><expr pos:start="3145:51" pos:end="3145:56"><name pos:start="3145:51" pos:end="3145:56">disp16</name></expr></argument>, <argument pos:start="3145:59" pos:end="3145:59"><expr pos:start="3145:59" pos:end="3145:59"><literal type="number" pos:start="3145:59" pos:end="3145:59">1</literal></expr></argument>, <argument pos:start="3145:62" pos:end="3145:62"><expr pos:start="3145:62" pos:end="3145:62"><literal type="number" pos:start="3145:62" pos:end="3145:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3147:9" pos:end="3147:14">break;</break>

    <case pos:start="3149:5" pos:end="3149:14">case <expr pos:start="3149:10" pos:end="3149:13"><literal type="number" pos:start="3149:10" pos:end="3149:13">0x26</literal></expr>:</case>

        <comment type="block" pos:start="3151:9" pos:end="3151:17">/* STS */</comment>

        <expr_stmt pos:start="3153:9" pos:end="3153:64"><expr pos:start="3153:9" pos:end="3153:63"><call pos:start="3153:9" pos:end="3153:63"><name pos:start="3153:9" pos:end="3153:21">gen_store_mem</name><argument_list pos:start="3153:22" pos:end="3153:63">(<argument pos:start="3153:23" pos:end="3153:25"><expr pos:start="3153:23" pos:end="3153:25"><name pos:start="3153:23" pos:end="3153:25">ctx</name></expr></argument>, <argument pos:start="3153:28" pos:end="3153:40"><expr pos:start="3153:28" pos:end="3153:40"><operator pos:start="3153:28" pos:end="3153:28">&amp;</operator><name pos:start="3153:29" pos:end="3153:40">gen_qemu_sts</name></expr></argument>, <argument pos:start="3153:43" pos:end="3153:44"><expr pos:start="3153:43" pos:end="3153:44"><name pos:start="3153:43" pos:end="3153:44">ra</name></expr></argument>, <argument pos:start="3153:47" pos:end="3153:48"><expr pos:start="3153:47" pos:end="3153:48"><name pos:start="3153:47" pos:end="3153:48">rb</name></expr></argument>, <argument pos:start="3153:51" pos:end="3153:56"><expr pos:start="3153:51" pos:end="3153:56"><name pos:start="3153:51" pos:end="3153:56">disp16</name></expr></argument>, <argument pos:start="3153:59" pos:end="3153:59"><expr pos:start="3153:59" pos:end="3153:59"><literal type="number" pos:start="3153:59" pos:end="3153:59">1</literal></expr></argument>, <argument pos:start="3153:62" pos:end="3153:62"><expr pos:start="3153:62" pos:end="3153:62"><literal type="number" pos:start="3153:62" pos:end="3153:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3155:9" pos:end="3155:14">break;</break>

    <case pos:start="3157:5" pos:end="3157:14">case <expr pos:start="3157:10" pos:end="3157:13"><literal type="number" pos:start="3157:10" pos:end="3157:13">0x27</literal></expr>:</case>

        <comment type="block" pos:start="3159:9" pos:end="3159:17">/* STT */</comment>

        <expr_stmt pos:start="3161:9" pos:end="3161:69"><expr pos:start="3161:9" pos:end="3161:68"><call pos:start="3161:9" pos:end="3161:68"><name pos:start="3161:9" pos:end="3161:21">gen_store_mem</name><argument_list pos:start="3161:22" pos:end="3161:68">(<argument pos:start="3161:23" pos:end="3161:25"><expr pos:start="3161:23" pos:end="3161:25"><name pos:start="3161:23" pos:end="3161:25">ctx</name></expr></argument>, <argument pos:start="3161:28" pos:end="3161:45"><expr pos:start="3161:28" pos:end="3161:45"><operator pos:start="3161:28" pos:end="3161:28">&amp;</operator><name pos:start="3161:29" pos:end="3161:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="3161:48" pos:end="3161:49"><expr pos:start="3161:48" pos:end="3161:49"><name pos:start="3161:48" pos:end="3161:49">ra</name></expr></argument>, <argument pos:start="3161:52" pos:end="3161:53"><expr pos:start="3161:52" pos:end="3161:53"><name pos:start="3161:52" pos:end="3161:53">rb</name></expr></argument>, <argument pos:start="3161:56" pos:end="3161:61"><expr pos:start="3161:56" pos:end="3161:61"><name pos:start="3161:56" pos:end="3161:61">disp16</name></expr></argument>, <argument pos:start="3161:64" pos:end="3161:64"><expr pos:start="3161:64" pos:end="3161:64"><literal type="number" pos:start="3161:64" pos:end="3161:64">1</literal></expr></argument>, <argument pos:start="3161:67" pos:end="3161:67"><expr pos:start="3161:67" pos:end="3161:67"><literal type="number" pos:start="3161:67" pos:end="3161:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3163:9" pos:end="3163:14">break;</break>

    <case pos:start="3165:5" pos:end="3165:14">case <expr pos:start="3165:10" pos:end="3165:13"><literal type="number" pos:start="3165:10" pos:end="3165:13">0x28</literal></expr>:</case>

        <comment type="block" pos:start="3167:9" pos:end="3167:17">/* LDL */</comment>

        <expr_stmt pos:start="3169:9" pos:end="3169:69"><expr pos:start="3169:9" pos:end="3169:68"><call pos:start="3169:9" pos:end="3169:68"><name pos:start="3169:9" pos:end="3169:20">gen_load_mem</name><argument_list pos:start="3169:21" pos:end="3169:68">(<argument pos:start="3169:22" pos:end="3169:24"><expr pos:start="3169:22" pos:end="3169:24"><name pos:start="3169:22" pos:end="3169:24">ctx</name></expr></argument>, <argument pos:start="3169:27" pos:end="3169:45"><expr pos:start="3169:27" pos:end="3169:45"><operator pos:start="3169:27" pos:end="3169:27">&amp;</operator><name pos:start="3169:28" pos:end="3169:45">tcg_gen_qemu_ld32s</name></expr></argument>, <argument pos:start="3169:48" pos:end="3169:49"><expr pos:start="3169:48" pos:end="3169:49"><name pos:start="3169:48" pos:end="3169:49">ra</name></expr></argument>, <argument pos:start="3169:52" pos:end="3169:53"><expr pos:start="3169:52" pos:end="3169:53"><name pos:start="3169:52" pos:end="3169:53">rb</name></expr></argument>, <argument pos:start="3169:56" pos:end="3169:61"><expr pos:start="3169:56" pos:end="3169:61"><name pos:start="3169:56" pos:end="3169:61">disp16</name></expr></argument>, <argument pos:start="3169:64" pos:end="3169:64"><expr pos:start="3169:64" pos:end="3169:64"><literal type="number" pos:start="3169:64" pos:end="3169:64">0</literal></expr></argument>, <argument pos:start="3169:67" pos:end="3169:67"><expr pos:start="3169:67" pos:end="3169:67"><literal type="number" pos:start="3169:67" pos:end="3169:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3171:9" pos:end="3171:14">break;</break>

    <case pos:start="3173:5" pos:end="3173:14">case <expr pos:start="3173:10" pos:end="3173:13"><literal type="number" pos:start="3173:10" pos:end="3173:13">0x29</literal></expr>:</case>

        <comment type="block" pos:start="3175:9" pos:end="3175:17">/* LDQ */</comment>

        <expr_stmt pos:start="3177:9" pos:end="3177:68"><expr pos:start="3177:9" pos:end="3177:67"><call pos:start="3177:9" pos:end="3177:67"><name pos:start="3177:9" pos:end="3177:20">gen_load_mem</name><argument_list pos:start="3177:21" pos:end="3177:67">(<argument pos:start="3177:22" pos:end="3177:24"><expr pos:start="3177:22" pos:end="3177:24"><name pos:start="3177:22" pos:end="3177:24">ctx</name></expr></argument>, <argument pos:start="3177:27" pos:end="3177:44"><expr pos:start="3177:27" pos:end="3177:44"><operator pos:start="3177:27" pos:end="3177:27">&amp;</operator><name pos:start="3177:28" pos:end="3177:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="3177:47" pos:end="3177:48"><expr pos:start="3177:47" pos:end="3177:48"><name pos:start="3177:47" pos:end="3177:48">ra</name></expr></argument>, <argument pos:start="3177:51" pos:end="3177:52"><expr pos:start="3177:51" pos:end="3177:52"><name pos:start="3177:51" pos:end="3177:52">rb</name></expr></argument>, <argument pos:start="3177:55" pos:end="3177:60"><expr pos:start="3177:55" pos:end="3177:60"><name pos:start="3177:55" pos:end="3177:60">disp16</name></expr></argument>, <argument pos:start="3177:63" pos:end="3177:63"><expr pos:start="3177:63" pos:end="3177:63"><literal type="number" pos:start="3177:63" pos:end="3177:63">0</literal></expr></argument>, <argument pos:start="3177:66" pos:end="3177:66"><expr pos:start="3177:66" pos:end="3177:66"><literal type="number" pos:start="3177:66" pos:end="3177:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3179:9" pos:end="3179:14">break;</break>

    <case pos:start="3181:5" pos:end="3181:14">case <expr pos:start="3181:10" pos:end="3181:13"><literal type="number" pos:start="3181:10" pos:end="3181:13">0x2A</literal></expr>:</case>

        <comment type="block" pos:start="3183:9" pos:end="3183:19">/* LDL_L */</comment>

        <expr_stmt pos:start="3185:9" pos:end="3185:65"><expr pos:start="3185:9" pos:end="3185:64"><call pos:start="3185:9" pos:end="3185:64"><name pos:start="3185:9" pos:end="3185:20">gen_load_mem</name><argument_list pos:start="3185:21" pos:end="3185:64">(<argument pos:start="3185:22" pos:end="3185:24"><expr pos:start="3185:22" pos:end="3185:24"><name pos:start="3185:22" pos:end="3185:24">ctx</name></expr></argument>, <argument pos:start="3185:27" pos:end="3185:41"><expr pos:start="3185:27" pos:end="3185:41"><operator pos:start="3185:27" pos:end="3185:27">&amp;</operator><name pos:start="3185:28" pos:end="3185:41">gen_qemu_ldl_l</name></expr></argument>, <argument pos:start="3185:44" pos:end="3185:45"><expr pos:start="3185:44" pos:end="3185:45"><name pos:start="3185:44" pos:end="3185:45">ra</name></expr></argument>, <argument pos:start="3185:48" pos:end="3185:49"><expr pos:start="3185:48" pos:end="3185:49"><name pos:start="3185:48" pos:end="3185:49">rb</name></expr></argument>, <argument pos:start="3185:52" pos:end="3185:57"><expr pos:start="3185:52" pos:end="3185:57"><name pos:start="3185:52" pos:end="3185:57">disp16</name></expr></argument>, <argument pos:start="3185:60" pos:end="3185:60"><expr pos:start="3185:60" pos:end="3185:60"><literal type="number" pos:start="3185:60" pos:end="3185:60">0</literal></expr></argument>, <argument pos:start="3185:63" pos:end="3185:63"><expr pos:start="3185:63" pos:end="3185:63"><literal type="number" pos:start="3185:63" pos:end="3185:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3187:9" pos:end="3187:14">break;</break>

    <case pos:start="3189:5" pos:end="3189:14">case <expr pos:start="3189:10" pos:end="3189:13"><literal type="number" pos:start="3189:10" pos:end="3189:13">0x2B</literal></expr>:</case>

        <comment type="block" pos:start="3191:9" pos:end="3191:19">/* LDQ_L */</comment>

        <expr_stmt pos:start="3193:9" pos:end="3193:65"><expr pos:start="3193:9" pos:end="3193:64"><call pos:start="3193:9" pos:end="3193:64"><name pos:start="3193:9" pos:end="3193:20">gen_load_mem</name><argument_list pos:start="3193:21" pos:end="3193:64">(<argument pos:start="3193:22" pos:end="3193:24"><expr pos:start="3193:22" pos:end="3193:24"><name pos:start="3193:22" pos:end="3193:24">ctx</name></expr></argument>, <argument pos:start="3193:27" pos:end="3193:41"><expr pos:start="3193:27" pos:end="3193:41"><operator pos:start="3193:27" pos:end="3193:27">&amp;</operator><name pos:start="3193:28" pos:end="3193:41">gen_qemu_ldq_l</name></expr></argument>, <argument pos:start="3193:44" pos:end="3193:45"><expr pos:start="3193:44" pos:end="3193:45"><name pos:start="3193:44" pos:end="3193:45">ra</name></expr></argument>, <argument pos:start="3193:48" pos:end="3193:49"><expr pos:start="3193:48" pos:end="3193:49"><name pos:start="3193:48" pos:end="3193:49">rb</name></expr></argument>, <argument pos:start="3193:52" pos:end="3193:57"><expr pos:start="3193:52" pos:end="3193:57"><name pos:start="3193:52" pos:end="3193:57">disp16</name></expr></argument>, <argument pos:start="3193:60" pos:end="3193:60"><expr pos:start="3193:60" pos:end="3193:60"><literal type="number" pos:start="3193:60" pos:end="3193:60">0</literal></expr></argument>, <argument pos:start="3193:63" pos:end="3193:63"><expr pos:start="3193:63" pos:end="3193:63"><literal type="number" pos:start="3193:63" pos:end="3193:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3195:9" pos:end="3195:14">break;</break>

    <case pos:start="3197:5" pos:end="3197:14">case <expr pos:start="3197:10" pos:end="3197:13"><literal type="number" pos:start="3197:10" pos:end="3197:13">0x2C</literal></expr>:</case>

        <comment type="block" pos:start="3199:9" pos:end="3199:17">/* STL */</comment>

        <expr_stmt pos:start="3201:9" pos:end="3201:69"><expr pos:start="3201:9" pos:end="3201:68"><call pos:start="3201:9" pos:end="3201:68"><name pos:start="3201:9" pos:end="3201:21">gen_store_mem</name><argument_list pos:start="3201:22" pos:end="3201:68">(<argument pos:start="3201:23" pos:end="3201:25"><expr pos:start="3201:23" pos:end="3201:25"><name pos:start="3201:23" pos:end="3201:25">ctx</name></expr></argument>, <argument pos:start="3201:28" pos:end="3201:45"><expr pos:start="3201:28" pos:end="3201:45"><operator pos:start="3201:28" pos:end="3201:28">&amp;</operator><name pos:start="3201:29" pos:end="3201:45">tcg_gen_qemu_st32</name></expr></argument>, <argument pos:start="3201:48" pos:end="3201:49"><expr pos:start="3201:48" pos:end="3201:49"><name pos:start="3201:48" pos:end="3201:49">ra</name></expr></argument>, <argument pos:start="3201:52" pos:end="3201:53"><expr pos:start="3201:52" pos:end="3201:53"><name pos:start="3201:52" pos:end="3201:53">rb</name></expr></argument>, <argument pos:start="3201:56" pos:end="3201:61"><expr pos:start="3201:56" pos:end="3201:61"><name pos:start="3201:56" pos:end="3201:61">disp16</name></expr></argument>, <argument pos:start="3201:64" pos:end="3201:64"><expr pos:start="3201:64" pos:end="3201:64"><literal type="number" pos:start="3201:64" pos:end="3201:64">0</literal></expr></argument>, <argument pos:start="3201:67" pos:end="3201:67"><expr pos:start="3201:67" pos:end="3201:67"><literal type="number" pos:start="3201:67" pos:end="3201:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3203:9" pos:end="3203:14">break;</break>

    <case pos:start="3205:5" pos:end="3205:14">case <expr pos:start="3205:10" pos:end="3205:13"><literal type="number" pos:start="3205:10" pos:end="3205:13">0x2D</literal></expr>:</case>

        <comment type="block" pos:start="3207:9" pos:end="3207:17">/* STQ */</comment>

        <expr_stmt pos:start="3209:9" pos:end="3209:69"><expr pos:start="3209:9" pos:end="3209:68"><call pos:start="3209:9" pos:end="3209:68"><name pos:start="3209:9" pos:end="3209:21">gen_store_mem</name><argument_list pos:start="3209:22" pos:end="3209:68">(<argument pos:start="3209:23" pos:end="3209:25"><expr pos:start="3209:23" pos:end="3209:25"><name pos:start="3209:23" pos:end="3209:25">ctx</name></expr></argument>, <argument pos:start="3209:28" pos:end="3209:45"><expr pos:start="3209:28" pos:end="3209:45"><operator pos:start="3209:28" pos:end="3209:28">&amp;</operator><name pos:start="3209:29" pos:end="3209:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="3209:48" pos:end="3209:49"><expr pos:start="3209:48" pos:end="3209:49"><name pos:start="3209:48" pos:end="3209:49">ra</name></expr></argument>, <argument pos:start="3209:52" pos:end="3209:53"><expr pos:start="3209:52" pos:end="3209:53"><name pos:start="3209:52" pos:end="3209:53">rb</name></expr></argument>, <argument pos:start="3209:56" pos:end="3209:61"><expr pos:start="3209:56" pos:end="3209:61"><name pos:start="3209:56" pos:end="3209:61">disp16</name></expr></argument>, <argument pos:start="3209:64" pos:end="3209:64"><expr pos:start="3209:64" pos:end="3209:64"><literal type="number" pos:start="3209:64" pos:end="3209:64">0</literal></expr></argument>, <argument pos:start="3209:67" pos:end="3209:67"><expr pos:start="3209:67" pos:end="3209:67"><literal type="number" pos:start="3209:67" pos:end="3209:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3211:9" pos:end="3211:14">break;</break>

    <case pos:start="3213:5" pos:end="3213:14">case <expr pos:start="3213:10" pos:end="3213:13"><literal type="number" pos:start="3213:10" pos:end="3213:13">0x2E</literal></expr>:</case>

        <comment type="block" pos:start="3215:9" pos:end="3215:19">/* STL_C */</comment>

        <expr_stmt pos:start="3217:9" pos:end="3217:66"><expr pos:start="3217:9" pos:end="3217:65"><call pos:start="3217:9" pos:end="3217:65"><name pos:start="3217:9" pos:end="3217:21">gen_store_mem</name><argument_list pos:start="3217:22" pos:end="3217:65">(<argument pos:start="3217:23" pos:end="3217:25"><expr pos:start="3217:23" pos:end="3217:25"><name pos:start="3217:23" pos:end="3217:25">ctx</name></expr></argument>, <argument pos:start="3217:28" pos:end="3217:42"><expr pos:start="3217:28" pos:end="3217:42"><operator pos:start="3217:28" pos:end="3217:28">&amp;</operator><name pos:start="3217:29" pos:end="3217:42">gen_qemu_stl_c</name></expr></argument>, <argument pos:start="3217:45" pos:end="3217:46"><expr pos:start="3217:45" pos:end="3217:46"><name pos:start="3217:45" pos:end="3217:46">ra</name></expr></argument>, <argument pos:start="3217:49" pos:end="3217:50"><expr pos:start="3217:49" pos:end="3217:50"><name pos:start="3217:49" pos:end="3217:50">rb</name></expr></argument>, <argument pos:start="3217:53" pos:end="3217:58"><expr pos:start="3217:53" pos:end="3217:58"><name pos:start="3217:53" pos:end="3217:58">disp16</name></expr></argument>, <argument pos:start="3217:61" pos:end="3217:61"><expr pos:start="3217:61" pos:end="3217:61"><literal type="number" pos:start="3217:61" pos:end="3217:61">0</literal></expr></argument>, <argument pos:start="3217:64" pos:end="3217:64"><expr pos:start="3217:64" pos:end="3217:64"><literal type="number" pos:start="3217:64" pos:end="3217:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3219:9" pos:end="3219:14">break;</break>

    <case pos:start="3221:5" pos:end="3221:14">case <expr pos:start="3221:10" pos:end="3221:13"><literal type="number" pos:start="3221:10" pos:end="3221:13">0x2F</literal></expr>:</case>

        <comment type="block" pos:start="3223:9" pos:end="3223:19">/* STQ_C */</comment>

        <expr_stmt pos:start="3225:9" pos:end="3225:66"><expr pos:start="3225:9" pos:end="3225:65"><call pos:start="3225:9" pos:end="3225:65"><name pos:start="3225:9" pos:end="3225:21">gen_store_mem</name><argument_list pos:start="3225:22" pos:end="3225:65">(<argument pos:start="3225:23" pos:end="3225:25"><expr pos:start="3225:23" pos:end="3225:25"><name pos:start="3225:23" pos:end="3225:25">ctx</name></expr></argument>, <argument pos:start="3225:28" pos:end="3225:42"><expr pos:start="3225:28" pos:end="3225:42"><operator pos:start="3225:28" pos:end="3225:28">&amp;</operator><name pos:start="3225:29" pos:end="3225:42">gen_qemu_stq_c</name></expr></argument>, <argument pos:start="3225:45" pos:end="3225:46"><expr pos:start="3225:45" pos:end="3225:46"><name pos:start="3225:45" pos:end="3225:46">ra</name></expr></argument>, <argument pos:start="3225:49" pos:end="3225:50"><expr pos:start="3225:49" pos:end="3225:50"><name pos:start="3225:49" pos:end="3225:50">rb</name></expr></argument>, <argument pos:start="3225:53" pos:end="3225:58"><expr pos:start="3225:53" pos:end="3225:58"><name pos:start="3225:53" pos:end="3225:58">disp16</name></expr></argument>, <argument pos:start="3225:61" pos:end="3225:61"><expr pos:start="3225:61" pos:end="3225:61"><literal type="number" pos:start="3225:61" pos:end="3225:61">0</literal></expr></argument>, <argument pos:start="3225:64" pos:end="3225:64"><expr pos:start="3225:64" pos:end="3225:64"><literal type="number" pos:start="3225:64" pos:end="3225:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3227:9" pos:end="3227:14">break;</break>

    <case pos:start="3229:5" pos:end="3229:14">case <expr pos:start="3229:10" pos:end="3229:13"><literal type="number" pos:start="3229:10" pos:end="3229:13">0x30</literal></expr>:</case>

        <comment type="block" pos:start="3231:9" pos:end="3231:16">/* BR */</comment>

        <if_stmt pos:start="3233:9" pos:end="3235:50"><if pos:start="3233:9" pos:end="3235:50">if <condition pos:start="3233:12" pos:end="3233:21">(<expr pos:start="3233:13" pos:end="3233:20"><name pos:start="3233:13" pos:end="3233:14">ra</name> <operator pos:start="3233:16" pos:end="3233:17">!=</operator> <literal type="number" pos:start="3233:19" pos:end="3233:20">31</literal></expr>)</condition><block type="pseudo" pos:start="3235:13" pos:end="3235:50"><block_content pos:start="3235:13" pos:end="3235:50">

            <expr_stmt pos:start="3235:13" pos:end="3235:50"><expr pos:start="3235:13" pos:end="3235:49"><call pos:start="3235:13" pos:end="3235:49"><name pos:start="3235:13" pos:end="3235:28">tcg_gen_movi_i64</name><argument_list pos:start="3235:29" pos:end="3235:49">(<argument pos:start="3235:30" pos:end="3235:39"><expr pos:start="3235:30" pos:end="3235:39"><name pos:start="3235:30" pos:end="3235:39"><name pos:start="3235:30" pos:end="3235:35">cpu_ir</name><index pos:start="3235:36" pos:end="3235:39">[<expr pos:start="3235:37" pos:end="3235:38"><name pos:start="3235:37" pos:end="3235:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="3235:42" pos:end="3235:48"><expr pos:start="3235:42" pos:end="3235:48"><name pos:start="3235:42" pos:end="3235:48"><name pos:start="3235:42" pos:end="3235:44">ctx</name><operator pos:start="3235:45" pos:end="3235:46">-&gt;</operator><name pos:start="3235:47" pos:end="3235:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3237:9" pos:end="3237:67"><expr pos:start="3237:9" pos:end="3237:66"><call pos:start="3237:9" pos:end="3237:66"><name pos:start="3237:9" pos:end="3237:24">tcg_gen_movi_i64</name><argument_list pos:start="3237:25" pos:end="3237:66">(<argument pos:start="3237:26" pos:end="3237:31"><expr pos:start="3237:26" pos:end="3237:31"><name pos:start="3237:26" pos:end="3237:31">cpu_pc</name></expr></argument>, <argument pos:start="3237:34" pos:end="3237:65"><expr pos:start="3237:34" pos:end="3237:65"><name pos:start="3237:34" pos:end="3237:40"><name pos:start="3237:34" pos:end="3237:36">ctx</name><operator pos:start="3237:37" pos:end="3237:38">-&gt;</operator><name pos:start="3237:39" pos:end="3237:40">pc</name></name> <operator pos:start="3237:42" pos:end="3237:42">+</operator> <operator pos:start="3237:44" pos:end="3237:44">(</operator><name pos:start="3237:45" pos:end="3237:51">int64_t</name><operator pos:start="3237:52" pos:end="3237:52">)</operator><operator pos:start="3237:53" pos:end="3237:53">(</operator><name pos:start="3237:54" pos:end="3237:59">disp21</name> <operator pos:start="3237:61" pos:end="3237:62">&lt;&lt;</operator> <literal type="number" pos:start="3237:64" pos:end="3237:64">2</literal><operator pos:start="3237:65" pos:end="3237:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3239:9" pos:end="3239:16"><expr pos:start="3239:9" pos:end="3239:15"><name pos:start="3239:9" pos:end="3239:11">ret</name> <operator pos:start="3239:13" pos:end="3239:13">=</operator> <literal type="number" pos:start="3239:15" pos:end="3239:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3241:9" pos:end="3241:14">break;</break>

    <case pos:start="3243:5" pos:end="3243:14">case <expr pos:start="3243:10" pos:end="3243:13"><literal type="number" pos:start="3243:10" pos:end="3243:13">0x31</literal></expr>:</case>

        <comment type="block" pos:start="3245:9" pos:end="3245:18">/* FBEQ */</comment>

        <expr_stmt pos:start="3247:9" pos:end="3247:52"><expr pos:start="3247:9" pos:end="3247:51"><call pos:start="3247:9" pos:end="3247:51"><name pos:start="3247:9" pos:end="3247:18">gen_fbcond</name><argument_list pos:start="3247:19" pos:end="3247:51">(<argument pos:start="3247:20" pos:end="3247:22"><expr pos:start="3247:20" pos:end="3247:22"><name pos:start="3247:20" pos:end="3247:22">ctx</name></expr></argument>, <argument pos:start="3247:25" pos:end="3247:38"><expr pos:start="3247:25" pos:end="3247:38"><operator pos:start="3247:25" pos:end="3247:25">&amp;</operator><name pos:start="3247:26" pos:end="3247:38">helper_cmpfeq</name></expr></argument>, <argument pos:start="3247:41" pos:end="3247:42"><expr pos:start="3247:41" pos:end="3247:42"><name pos:start="3247:41" pos:end="3247:42">ra</name></expr></argument>, <argument pos:start="3247:45" pos:end="3247:50"><expr pos:start="3247:45" pos:end="3247:50"><name pos:start="3247:45" pos:end="3247:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3249:9" pos:end="3249:16"><expr pos:start="3249:9" pos:end="3249:15"><name pos:start="3249:9" pos:end="3249:11">ret</name> <operator pos:start="3249:13" pos:end="3249:13">=</operator> <literal type="number" pos:start="3249:15" pos:end="3249:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3251:9" pos:end="3251:14">break;</break>

    <case pos:start="3253:5" pos:end="3253:14">case <expr pos:start="3253:10" pos:end="3253:13"><literal type="number" pos:start="3253:10" pos:end="3253:13">0x32</literal></expr>:</case>

        <comment type="block" pos:start="3255:9" pos:end="3255:18">/* FBLT */</comment>

        <expr_stmt pos:start="3257:9" pos:end="3257:52"><expr pos:start="3257:9" pos:end="3257:51"><call pos:start="3257:9" pos:end="3257:51"><name pos:start="3257:9" pos:end="3257:18">gen_fbcond</name><argument_list pos:start="3257:19" pos:end="3257:51">(<argument pos:start="3257:20" pos:end="3257:22"><expr pos:start="3257:20" pos:end="3257:22"><name pos:start="3257:20" pos:end="3257:22">ctx</name></expr></argument>, <argument pos:start="3257:25" pos:end="3257:38"><expr pos:start="3257:25" pos:end="3257:38"><operator pos:start="3257:25" pos:end="3257:25">&amp;</operator><name pos:start="3257:26" pos:end="3257:38">helper_cmpflt</name></expr></argument>, <argument pos:start="3257:41" pos:end="3257:42"><expr pos:start="3257:41" pos:end="3257:42"><name pos:start="3257:41" pos:end="3257:42">ra</name></expr></argument>, <argument pos:start="3257:45" pos:end="3257:50"><expr pos:start="3257:45" pos:end="3257:50"><name pos:start="3257:45" pos:end="3257:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3259:9" pos:end="3259:16"><expr pos:start="3259:9" pos:end="3259:15"><name pos:start="3259:9" pos:end="3259:11">ret</name> <operator pos:start="3259:13" pos:end="3259:13">=</operator> <literal type="number" pos:start="3259:15" pos:end="3259:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3261:9" pos:end="3261:14">break;</break>

    <case pos:start="3263:5" pos:end="3263:14">case <expr pos:start="3263:10" pos:end="3263:13"><literal type="number" pos:start="3263:10" pos:end="3263:13">0x33</literal></expr>:</case>

        <comment type="block" pos:start="3265:9" pos:end="3265:18">/* FBLE */</comment>

        <expr_stmt pos:start="3267:9" pos:end="3267:52"><expr pos:start="3267:9" pos:end="3267:51"><call pos:start="3267:9" pos:end="3267:51"><name pos:start="3267:9" pos:end="3267:18">gen_fbcond</name><argument_list pos:start="3267:19" pos:end="3267:51">(<argument pos:start="3267:20" pos:end="3267:22"><expr pos:start="3267:20" pos:end="3267:22"><name pos:start="3267:20" pos:end="3267:22">ctx</name></expr></argument>, <argument pos:start="3267:25" pos:end="3267:38"><expr pos:start="3267:25" pos:end="3267:38"><operator pos:start="3267:25" pos:end="3267:25">&amp;</operator><name pos:start="3267:26" pos:end="3267:38">helper_cmpfle</name></expr></argument>, <argument pos:start="3267:41" pos:end="3267:42"><expr pos:start="3267:41" pos:end="3267:42"><name pos:start="3267:41" pos:end="3267:42">ra</name></expr></argument>, <argument pos:start="3267:45" pos:end="3267:50"><expr pos:start="3267:45" pos:end="3267:50"><name pos:start="3267:45" pos:end="3267:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3269:9" pos:end="3269:16"><expr pos:start="3269:9" pos:end="3269:15"><name pos:start="3269:9" pos:end="3269:11">ret</name> <operator pos:start="3269:13" pos:end="3269:13">=</operator> <literal type="number" pos:start="3269:15" pos:end="3269:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3271:9" pos:end="3271:14">break;</break>

    <case pos:start="3273:5" pos:end="3273:14">case <expr pos:start="3273:10" pos:end="3273:13"><literal type="number" pos:start="3273:10" pos:end="3273:13">0x34</literal></expr>:</case>

        <comment type="block" pos:start="3275:9" pos:end="3275:17">/* BSR */</comment>

        <if_stmt pos:start="3277:9" pos:end="3279:50"><if pos:start="3277:9" pos:end="3279:50">if <condition pos:start="3277:12" pos:end="3277:21">(<expr pos:start="3277:13" pos:end="3277:20"><name pos:start="3277:13" pos:end="3277:14">ra</name> <operator pos:start="3277:16" pos:end="3277:17">!=</operator> <literal type="number" pos:start="3277:19" pos:end="3277:20">31</literal></expr>)</condition><block type="pseudo" pos:start="3279:13" pos:end="3279:50"><block_content pos:start="3279:13" pos:end="3279:50">

            <expr_stmt pos:start="3279:13" pos:end="3279:50"><expr pos:start="3279:13" pos:end="3279:49"><call pos:start="3279:13" pos:end="3279:49"><name pos:start="3279:13" pos:end="3279:28">tcg_gen_movi_i64</name><argument_list pos:start="3279:29" pos:end="3279:49">(<argument pos:start="3279:30" pos:end="3279:39"><expr pos:start="3279:30" pos:end="3279:39"><name pos:start="3279:30" pos:end="3279:39"><name pos:start="3279:30" pos:end="3279:35">cpu_ir</name><index pos:start="3279:36" pos:end="3279:39">[<expr pos:start="3279:37" pos:end="3279:38"><name pos:start="3279:37" pos:end="3279:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="3279:42" pos:end="3279:48"><expr pos:start="3279:42" pos:end="3279:48"><name pos:start="3279:42" pos:end="3279:48"><name pos:start="3279:42" pos:end="3279:44">ctx</name><operator pos:start="3279:45" pos:end="3279:46">-&gt;</operator><name pos:start="3279:47" pos:end="3279:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3281:9" pos:end="3281:67"><expr pos:start="3281:9" pos:end="3281:66"><call pos:start="3281:9" pos:end="3281:66"><name pos:start="3281:9" pos:end="3281:24">tcg_gen_movi_i64</name><argument_list pos:start="3281:25" pos:end="3281:66">(<argument pos:start="3281:26" pos:end="3281:31"><expr pos:start="3281:26" pos:end="3281:31"><name pos:start="3281:26" pos:end="3281:31">cpu_pc</name></expr></argument>, <argument pos:start="3281:34" pos:end="3281:65"><expr pos:start="3281:34" pos:end="3281:65"><name pos:start="3281:34" pos:end="3281:40"><name pos:start="3281:34" pos:end="3281:36">ctx</name><operator pos:start="3281:37" pos:end="3281:38">-&gt;</operator><name pos:start="3281:39" pos:end="3281:40">pc</name></name> <operator pos:start="3281:42" pos:end="3281:42">+</operator> <operator pos:start="3281:44" pos:end="3281:44">(</operator><name pos:start="3281:45" pos:end="3281:51">int64_t</name><operator pos:start="3281:52" pos:end="3281:52">)</operator><operator pos:start="3281:53" pos:end="3281:53">(</operator><name pos:start="3281:54" pos:end="3281:59">disp21</name> <operator pos:start="3281:61" pos:end="3281:62">&lt;&lt;</operator> <literal type="number" pos:start="3281:64" pos:end="3281:64">2</literal><operator pos:start="3281:65" pos:end="3281:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3283:9" pos:end="3283:16"><expr pos:start="3283:9" pos:end="3283:15"><name pos:start="3283:9" pos:end="3283:11">ret</name> <operator pos:start="3283:13" pos:end="3283:13">=</operator> <literal type="number" pos:start="3283:15" pos:end="3283:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3285:9" pos:end="3285:14">break;</break>

    <case pos:start="3287:5" pos:end="3287:14">case <expr pos:start="3287:10" pos:end="3287:13"><literal type="number" pos:start="3287:10" pos:end="3287:13">0x35</literal></expr>:</case>

        <comment type="block" pos:start="3289:9" pos:end="3289:18">/* FBNE */</comment>

        <expr_stmt pos:start="3291:9" pos:end="3291:52"><expr pos:start="3291:9" pos:end="3291:51"><call pos:start="3291:9" pos:end="3291:51"><name pos:start="3291:9" pos:end="3291:18">gen_fbcond</name><argument_list pos:start="3291:19" pos:end="3291:51">(<argument pos:start="3291:20" pos:end="3291:22"><expr pos:start="3291:20" pos:end="3291:22"><name pos:start="3291:20" pos:end="3291:22">ctx</name></expr></argument>, <argument pos:start="3291:25" pos:end="3291:38"><expr pos:start="3291:25" pos:end="3291:38"><operator pos:start="3291:25" pos:end="3291:25">&amp;</operator><name pos:start="3291:26" pos:end="3291:38">helper_cmpfne</name></expr></argument>, <argument pos:start="3291:41" pos:end="3291:42"><expr pos:start="3291:41" pos:end="3291:42"><name pos:start="3291:41" pos:end="3291:42">ra</name></expr></argument>, <argument pos:start="3291:45" pos:end="3291:50"><expr pos:start="3291:45" pos:end="3291:50"><name pos:start="3291:45" pos:end="3291:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3293:9" pos:end="3293:16"><expr pos:start="3293:9" pos:end="3293:15"><name pos:start="3293:9" pos:end="3293:11">ret</name> <operator pos:start="3293:13" pos:end="3293:13">=</operator> <literal type="number" pos:start="3293:15" pos:end="3293:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3295:9" pos:end="3295:14">break;</break>

    <case pos:start="3297:5" pos:end="3297:14">case <expr pos:start="3297:10" pos:end="3297:13"><literal type="number" pos:start="3297:10" pos:end="3297:13">0x36</literal></expr>:</case>

        <comment type="block" pos:start="3299:9" pos:end="3299:18">/* FBGE */</comment>

        <expr_stmt pos:start="3301:9" pos:end="3301:52"><expr pos:start="3301:9" pos:end="3301:51"><call pos:start="3301:9" pos:end="3301:51"><name pos:start="3301:9" pos:end="3301:18">gen_fbcond</name><argument_list pos:start="3301:19" pos:end="3301:51">(<argument pos:start="3301:20" pos:end="3301:22"><expr pos:start="3301:20" pos:end="3301:22"><name pos:start="3301:20" pos:end="3301:22">ctx</name></expr></argument>, <argument pos:start="3301:25" pos:end="3301:38"><expr pos:start="3301:25" pos:end="3301:38"><operator pos:start="3301:25" pos:end="3301:25">&amp;</operator><name pos:start="3301:26" pos:end="3301:38">helper_cmpfge</name></expr></argument>, <argument pos:start="3301:41" pos:end="3301:42"><expr pos:start="3301:41" pos:end="3301:42"><name pos:start="3301:41" pos:end="3301:42">ra</name></expr></argument>, <argument pos:start="3301:45" pos:end="3301:50"><expr pos:start="3301:45" pos:end="3301:50"><name pos:start="3301:45" pos:end="3301:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3303:9" pos:end="3303:16"><expr pos:start="3303:9" pos:end="3303:15"><name pos:start="3303:9" pos:end="3303:11">ret</name> <operator pos:start="3303:13" pos:end="3303:13">=</operator> <literal type="number" pos:start="3303:15" pos:end="3303:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3305:9" pos:end="3305:14">break;</break>

    <case pos:start="3307:5" pos:end="3307:14">case <expr pos:start="3307:10" pos:end="3307:13"><literal type="number" pos:start="3307:10" pos:end="3307:13">0x37</literal></expr>:</case>

        <comment type="block" pos:start="3309:9" pos:end="3309:18">/* FBGT */</comment>

        <expr_stmt pos:start="3311:9" pos:end="3311:52"><expr pos:start="3311:9" pos:end="3311:51"><call pos:start="3311:9" pos:end="3311:51"><name pos:start="3311:9" pos:end="3311:18">gen_fbcond</name><argument_list pos:start="3311:19" pos:end="3311:51">(<argument pos:start="3311:20" pos:end="3311:22"><expr pos:start="3311:20" pos:end="3311:22"><name pos:start="3311:20" pos:end="3311:22">ctx</name></expr></argument>, <argument pos:start="3311:25" pos:end="3311:38"><expr pos:start="3311:25" pos:end="3311:38"><operator pos:start="3311:25" pos:end="3311:25">&amp;</operator><name pos:start="3311:26" pos:end="3311:38">helper_cmpfgt</name></expr></argument>, <argument pos:start="3311:41" pos:end="3311:42"><expr pos:start="3311:41" pos:end="3311:42"><name pos:start="3311:41" pos:end="3311:42">ra</name></expr></argument>, <argument pos:start="3311:45" pos:end="3311:50"><expr pos:start="3311:45" pos:end="3311:50"><name pos:start="3311:45" pos:end="3311:50">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3313:9" pos:end="3313:16"><expr pos:start="3313:9" pos:end="3313:15"><name pos:start="3313:9" pos:end="3313:11">ret</name> <operator pos:start="3313:13" pos:end="3313:13">=</operator> <literal type="number" pos:start="3313:15" pos:end="3313:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3315:9" pos:end="3315:14">break;</break>

    <case pos:start="3317:5" pos:end="3317:14">case <expr pos:start="3317:10" pos:end="3317:13"><literal type="number" pos:start="3317:10" pos:end="3317:13">0x38</literal></expr>:</case>

        <comment type="block" pos:start="3319:9" pos:end="3319:18">/* BLBC */</comment>

        <expr_stmt pos:start="3321:9" pos:end="3321:51"><expr pos:start="3321:9" pos:end="3321:50"><call pos:start="3321:9" pos:end="3321:50"><name pos:start="3321:9" pos:end="3321:17">gen_bcond</name><argument_list pos:start="3321:18" pos:end="3321:50">(<argument pos:start="3321:19" pos:end="3321:21"><expr pos:start="3321:19" pos:end="3321:21"><name pos:start="3321:19" pos:end="3321:21">ctx</name></expr></argument>, <argument pos:start="3321:24" pos:end="3321:34"><expr pos:start="3321:24" pos:end="3321:34"><name pos:start="3321:24" pos:end="3321:34">TCG_COND_EQ</name></expr></argument>, <argument pos:start="3321:37" pos:end="3321:38"><expr pos:start="3321:37" pos:end="3321:38"><name pos:start="3321:37" pos:end="3321:38">ra</name></expr></argument>, <argument pos:start="3321:41" pos:end="3321:46"><expr pos:start="3321:41" pos:end="3321:46"><name pos:start="3321:41" pos:end="3321:46">disp16</name></expr></argument>, <argument pos:start="3321:49" pos:end="3321:49"><expr pos:start="3321:49" pos:end="3321:49"><literal type="number" pos:start="3321:49" pos:end="3321:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3323:9" pos:end="3323:16"><expr pos:start="3323:9" pos:end="3323:15"><name pos:start="3323:9" pos:end="3323:11">ret</name> <operator pos:start="3323:13" pos:end="3323:13">=</operator> <literal type="number" pos:start="3323:15" pos:end="3323:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3325:9" pos:end="3325:14">break;</break>

    <case pos:start="3327:5" pos:end="3327:14">case <expr pos:start="3327:10" pos:end="3327:13"><literal type="number" pos:start="3327:10" pos:end="3327:13">0x39</literal></expr>:</case>

        <comment type="block" pos:start="3329:9" pos:end="3329:17">/* BEQ */</comment>

        <expr_stmt pos:start="3331:9" pos:end="3331:51"><expr pos:start="3331:9" pos:end="3331:50"><call pos:start="3331:9" pos:end="3331:50"><name pos:start="3331:9" pos:end="3331:17">gen_bcond</name><argument_list pos:start="3331:18" pos:end="3331:50">(<argument pos:start="3331:19" pos:end="3331:21"><expr pos:start="3331:19" pos:end="3331:21"><name pos:start="3331:19" pos:end="3331:21">ctx</name></expr></argument>, <argument pos:start="3331:24" pos:end="3331:34"><expr pos:start="3331:24" pos:end="3331:34"><name pos:start="3331:24" pos:end="3331:34">TCG_COND_EQ</name></expr></argument>, <argument pos:start="3331:37" pos:end="3331:38"><expr pos:start="3331:37" pos:end="3331:38"><name pos:start="3331:37" pos:end="3331:38">ra</name></expr></argument>, <argument pos:start="3331:41" pos:end="3331:46"><expr pos:start="3331:41" pos:end="3331:46"><name pos:start="3331:41" pos:end="3331:46">disp16</name></expr></argument>, <argument pos:start="3331:49" pos:end="3331:49"><expr pos:start="3331:49" pos:end="3331:49"><literal type="number" pos:start="3331:49" pos:end="3331:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3333:9" pos:end="3333:16"><expr pos:start="3333:9" pos:end="3333:15"><name pos:start="3333:9" pos:end="3333:11">ret</name> <operator pos:start="3333:13" pos:end="3333:13">=</operator> <literal type="number" pos:start="3333:15" pos:end="3333:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3335:9" pos:end="3335:14">break;</break>

    <case pos:start="3337:5" pos:end="3337:14">case <expr pos:start="3337:10" pos:end="3337:13"><literal type="number" pos:start="3337:10" pos:end="3337:13">0x3A</literal></expr>:</case>

        <comment type="block" pos:start="3339:9" pos:end="3339:17">/* BLT */</comment>

        <expr_stmt pos:start="3341:9" pos:end="3341:51"><expr pos:start="3341:9" pos:end="3341:50"><call pos:start="3341:9" pos:end="3341:50"><name pos:start="3341:9" pos:end="3341:17">gen_bcond</name><argument_list pos:start="3341:18" pos:end="3341:50">(<argument pos:start="3341:19" pos:end="3341:21"><expr pos:start="3341:19" pos:end="3341:21"><name pos:start="3341:19" pos:end="3341:21">ctx</name></expr></argument>, <argument pos:start="3341:24" pos:end="3341:34"><expr pos:start="3341:24" pos:end="3341:34"><name pos:start="3341:24" pos:end="3341:34">TCG_COND_LT</name></expr></argument>, <argument pos:start="3341:37" pos:end="3341:38"><expr pos:start="3341:37" pos:end="3341:38"><name pos:start="3341:37" pos:end="3341:38">ra</name></expr></argument>, <argument pos:start="3341:41" pos:end="3341:46"><expr pos:start="3341:41" pos:end="3341:46"><name pos:start="3341:41" pos:end="3341:46">disp16</name></expr></argument>, <argument pos:start="3341:49" pos:end="3341:49"><expr pos:start="3341:49" pos:end="3341:49"><literal type="number" pos:start="3341:49" pos:end="3341:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3343:9" pos:end="3343:16"><expr pos:start="3343:9" pos:end="3343:15"><name pos:start="3343:9" pos:end="3343:11">ret</name> <operator pos:start="3343:13" pos:end="3343:13">=</operator> <literal type="number" pos:start="3343:15" pos:end="3343:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3345:9" pos:end="3345:14">break;</break>

    <case pos:start="3347:5" pos:end="3347:14">case <expr pos:start="3347:10" pos:end="3347:13"><literal type="number" pos:start="3347:10" pos:end="3347:13">0x3B</literal></expr>:</case>

        <comment type="block" pos:start="3349:9" pos:end="3349:17">/* BLE */</comment>

        <expr_stmt pos:start="3351:9" pos:end="3351:51"><expr pos:start="3351:9" pos:end="3351:50"><call pos:start="3351:9" pos:end="3351:50"><name pos:start="3351:9" pos:end="3351:17">gen_bcond</name><argument_list pos:start="3351:18" pos:end="3351:50">(<argument pos:start="3351:19" pos:end="3351:21"><expr pos:start="3351:19" pos:end="3351:21"><name pos:start="3351:19" pos:end="3351:21">ctx</name></expr></argument>, <argument pos:start="3351:24" pos:end="3351:34"><expr pos:start="3351:24" pos:end="3351:34"><name pos:start="3351:24" pos:end="3351:34">TCG_COND_LE</name></expr></argument>, <argument pos:start="3351:37" pos:end="3351:38"><expr pos:start="3351:37" pos:end="3351:38"><name pos:start="3351:37" pos:end="3351:38">ra</name></expr></argument>, <argument pos:start="3351:41" pos:end="3351:46"><expr pos:start="3351:41" pos:end="3351:46"><name pos:start="3351:41" pos:end="3351:46">disp16</name></expr></argument>, <argument pos:start="3351:49" pos:end="3351:49"><expr pos:start="3351:49" pos:end="3351:49"><literal type="number" pos:start="3351:49" pos:end="3351:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3353:9" pos:end="3353:16"><expr pos:start="3353:9" pos:end="3353:15"><name pos:start="3353:9" pos:end="3353:11">ret</name> <operator pos:start="3353:13" pos:end="3353:13">=</operator> <literal type="number" pos:start="3353:15" pos:end="3353:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3355:9" pos:end="3355:14">break;</break>

    <case pos:start="3357:5" pos:end="3357:14">case <expr pos:start="3357:10" pos:end="3357:13"><literal type="number" pos:start="3357:10" pos:end="3357:13">0x3C</literal></expr>:</case>

        <comment type="block" pos:start="3359:9" pos:end="3359:18">/* BLBS */</comment>

        <expr_stmt pos:start="3361:9" pos:end="3361:51"><expr pos:start="3361:9" pos:end="3361:50"><call pos:start="3361:9" pos:end="3361:50"><name pos:start="3361:9" pos:end="3361:17">gen_bcond</name><argument_list pos:start="3361:18" pos:end="3361:50">(<argument pos:start="3361:19" pos:end="3361:21"><expr pos:start="3361:19" pos:end="3361:21"><name pos:start="3361:19" pos:end="3361:21">ctx</name></expr></argument>, <argument pos:start="3361:24" pos:end="3361:34"><expr pos:start="3361:24" pos:end="3361:34"><name pos:start="3361:24" pos:end="3361:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="3361:37" pos:end="3361:38"><expr pos:start="3361:37" pos:end="3361:38"><name pos:start="3361:37" pos:end="3361:38">ra</name></expr></argument>, <argument pos:start="3361:41" pos:end="3361:46"><expr pos:start="3361:41" pos:end="3361:46"><name pos:start="3361:41" pos:end="3361:46">disp16</name></expr></argument>, <argument pos:start="3361:49" pos:end="3361:49"><expr pos:start="3361:49" pos:end="3361:49"><literal type="number" pos:start="3361:49" pos:end="3361:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3363:9" pos:end="3363:16"><expr pos:start="3363:9" pos:end="3363:15"><name pos:start="3363:9" pos:end="3363:11">ret</name> <operator pos:start="3363:13" pos:end="3363:13">=</operator> <literal type="number" pos:start="3363:15" pos:end="3363:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3365:9" pos:end="3365:14">break;</break>

    <case pos:start="3367:5" pos:end="3367:14">case <expr pos:start="3367:10" pos:end="3367:13"><literal type="number" pos:start="3367:10" pos:end="3367:13">0x3D</literal></expr>:</case>

        <comment type="block" pos:start="3369:9" pos:end="3369:17">/* BNE */</comment>

        <expr_stmt pos:start="3371:9" pos:end="3371:51"><expr pos:start="3371:9" pos:end="3371:50"><call pos:start="3371:9" pos:end="3371:50"><name pos:start="3371:9" pos:end="3371:17">gen_bcond</name><argument_list pos:start="3371:18" pos:end="3371:50">(<argument pos:start="3371:19" pos:end="3371:21"><expr pos:start="3371:19" pos:end="3371:21"><name pos:start="3371:19" pos:end="3371:21">ctx</name></expr></argument>, <argument pos:start="3371:24" pos:end="3371:34"><expr pos:start="3371:24" pos:end="3371:34"><name pos:start="3371:24" pos:end="3371:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="3371:37" pos:end="3371:38"><expr pos:start="3371:37" pos:end="3371:38"><name pos:start="3371:37" pos:end="3371:38">ra</name></expr></argument>, <argument pos:start="3371:41" pos:end="3371:46"><expr pos:start="3371:41" pos:end="3371:46"><name pos:start="3371:41" pos:end="3371:46">disp16</name></expr></argument>, <argument pos:start="3371:49" pos:end="3371:49"><expr pos:start="3371:49" pos:end="3371:49"><literal type="number" pos:start="3371:49" pos:end="3371:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3373:9" pos:end="3373:16"><expr pos:start="3373:9" pos:end="3373:15"><name pos:start="3373:9" pos:end="3373:11">ret</name> <operator pos:start="3373:13" pos:end="3373:13">=</operator> <literal type="number" pos:start="3373:15" pos:end="3373:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3375:9" pos:end="3375:14">break;</break>

    <case pos:start="3377:5" pos:end="3377:14">case <expr pos:start="3377:10" pos:end="3377:13"><literal type="number" pos:start="3377:10" pos:end="3377:13">0x3E</literal></expr>:</case>

        <comment type="block" pos:start="3379:9" pos:end="3379:17">/* BGE */</comment>

        <expr_stmt pos:start="3381:9" pos:end="3381:51"><expr pos:start="3381:9" pos:end="3381:50"><call pos:start="3381:9" pos:end="3381:50"><name pos:start="3381:9" pos:end="3381:17">gen_bcond</name><argument_list pos:start="3381:18" pos:end="3381:50">(<argument pos:start="3381:19" pos:end="3381:21"><expr pos:start="3381:19" pos:end="3381:21"><name pos:start="3381:19" pos:end="3381:21">ctx</name></expr></argument>, <argument pos:start="3381:24" pos:end="3381:34"><expr pos:start="3381:24" pos:end="3381:34"><name pos:start="3381:24" pos:end="3381:34">TCG_COND_GE</name></expr></argument>, <argument pos:start="3381:37" pos:end="3381:38"><expr pos:start="3381:37" pos:end="3381:38"><name pos:start="3381:37" pos:end="3381:38">ra</name></expr></argument>, <argument pos:start="3381:41" pos:end="3381:46"><expr pos:start="3381:41" pos:end="3381:46"><name pos:start="3381:41" pos:end="3381:46">disp16</name></expr></argument>, <argument pos:start="3381:49" pos:end="3381:49"><expr pos:start="3381:49" pos:end="3381:49"><literal type="number" pos:start="3381:49" pos:end="3381:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3383:9" pos:end="3383:16"><expr pos:start="3383:9" pos:end="3383:15"><name pos:start="3383:9" pos:end="3383:11">ret</name> <operator pos:start="3383:13" pos:end="3383:13">=</operator> <literal type="number" pos:start="3383:15" pos:end="3383:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3385:9" pos:end="3385:14">break;</break>

    <case pos:start="3387:5" pos:end="3387:14">case <expr pos:start="3387:10" pos:end="3387:13"><literal type="number" pos:start="3387:10" pos:end="3387:13">0x3F</literal></expr>:</case>

        <comment type="block" pos:start="3389:9" pos:end="3389:17">/* BGT */</comment>

        <expr_stmt pos:start="3391:9" pos:end="3391:51"><expr pos:start="3391:9" pos:end="3391:50"><call pos:start="3391:9" pos:end="3391:50"><name pos:start="3391:9" pos:end="3391:17">gen_bcond</name><argument_list pos:start="3391:18" pos:end="3391:50">(<argument pos:start="3391:19" pos:end="3391:21"><expr pos:start="3391:19" pos:end="3391:21"><name pos:start="3391:19" pos:end="3391:21">ctx</name></expr></argument>, <argument pos:start="3391:24" pos:end="3391:34"><expr pos:start="3391:24" pos:end="3391:34"><name pos:start="3391:24" pos:end="3391:34">TCG_COND_GT</name></expr></argument>, <argument pos:start="3391:37" pos:end="3391:38"><expr pos:start="3391:37" pos:end="3391:38"><name pos:start="3391:37" pos:end="3391:38">ra</name></expr></argument>, <argument pos:start="3391:41" pos:end="3391:46"><expr pos:start="3391:41" pos:end="3391:46"><name pos:start="3391:41" pos:end="3391:46">disp16</name></expr></argument>, <argument pos:start="3391:49" pos:end="3391:49"><expr pos:start="3391:49" pos:end="3391:49"><literal type="number" pos:start="3391:49" pos:end="3391:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3393:9" pos:end="3393:16"><expr pos:start="3393:9" pos:end="3393:15"><name pos:start="3393:9" pos:end="3393:11">ret</name> <operator pos:start="3393:13" pos:end="3393:13">=</operator> <literal type="number" pos:start="3393:15" pos:end="3393:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3395:9" pos:end="3395:14">break;</break>

    <label pos:start="3397:5" pos:end="3397:16"><name pos:start="3397:5" pos:end="3397:15">invalid_opc</name>:</label>

        <expr_stmt pos:start="3399:9" pos:end="3399:25"><expr pos:start="3399:9" pos:end="3399:24"><call pos:start="3399:9" pos:end="3399:24"><name pos:start="3399:9" pos:end="3399:19">gen_invalid</name><argument_list pos:start="3399:20" pos:end="3399:24">(<argument pos:start="3399:21" pos:end="3399:23"><expr pos:start="3399:21" pos:end="3399:23"><name pos:start="3399:21" pos:end="3399:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3401:9" pos:end="3401:16"><expr pos:start="3401:9" pos:end="3401:15"><name pos:start="3401:9" pos:end="3401:11">ret</name> <operator pos:start="3401:13" pos:end="3401:13">=</operator> <literal type="number" pos:start="3401:15" pos:end="3401:15">3</literal></expr>;</expr_stmt>

        <break pos:start="3403:9" pos:end="3403:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="3409:5" pos:end="3409:15">return <expr pos:start="3409:12" pos:end="3409:14"><name pos:start="3409:12" pos:end="3409:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
