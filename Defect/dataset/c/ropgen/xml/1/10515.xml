<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10515.c" pos:tabs="8"><function pos:start="1:1" pos:end="255:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="4:42">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,
                         <parameter pos:start="2:26" pos:end="2:42"><decl pos:start="2:26" pos:end="2:42"><type pos:start="2:26" pos:end="2:42"><name pos:start="2:26" pos:end="2:37">OutputStream</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:42">ost</name></decl></parameter>,
                         <parameter pos:start="3:26" pos:end="3:46"><decl pos:start="3:26" pos:end="3:46"><type pos:start="3:26" pos:end="3:46"><name pos:start="3:26" pos:end="3:32">AVFrame</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:46">next_picture</name></decl></parameter>,
                         <parameter pos:start="4:26" pos:end="4:41"><decl pos:start="4:26" pos:end="4:41"><type pos:start="4:26" pos:end="4:41"><name pos:start="4:26" pos:end="4:31">double</name></type> <name pos:start="4:33" pos:end="4:41">sync_ipts</name></decl></parameter>)</parameter_list>
<block pos:start="5:1" pos:end="255:1">{<block_content pos:start="6:5" pos:end="254:52">
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name></decl>, <decl pos:start="6:14" pos:end="6:30"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:14" pos:end="6:30">format_video_sync</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVPacket</name></type> <name pos:start="7:14" pos:end="7:16">pkt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:39"><decl pos:start="8:5" pos:end="8:38"><type pos:start="8:5" pos:end="8:20"><name pos:start="8:5" pos:end="8:18">AVCodecContext</name> <modifier pos:start="8:20" pos:end="8:20">*</modifier></type><name pos:start="8:21" pos:end="8:23">enc</name> <init pos:start="8:25" pos:end="8:38">= <expr pos:start="8:27" pos:end="8:38"><name pos:start="8:27" pos:end="8:38"><name pos:start="8:27" pos:end="8:29">ost</name><operator pos:start="8:30" pos:end="8:31">-&gt;</operator><name pos:start="8:32" pos:end="8:38">enc_ctx</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">mux_enc</name> <init pos:start="9:29" pos:end="9:44">= <expr pos:start="9:31" pos:end="9:44"><name pos:start="9:31" pos:end="9:44"><name pos:start="9:31" pos:end="9:33">ost</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:37">st</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:44">codec</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:33"><decl pos:start="10:5" pos:end="10:17"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:17">nb_frames</name></decl>, <decl pos:start="10:20" pos:end="10:29"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:20" pos:end="10:29">nb0_frames</name></decl>, <decl pos:start="10:32" pos:end="10:32"><type ref="prev" pos:start="10:5" pos:end="10:7"/><name pos:start="10:32" pos:end="10:32">i</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">double</name></type> <name pos:start="11:12" pos:end="11:16">delta</name></decl>, <decl pos:start="11:19" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:10"/><name pos:start="11:19" pos:end="11:24">delta0</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="12:24"><decl pos:start="12:5" pos:end="12:23"><type pos:start="12:5" pos:end="12:10"><name pos:start="12:5" pos:end="12:10">double</name></type> <name pos:start="12:12" pos:end="12:19">duration</name> <init pos:start="12:21" pos:end="12:23">= <expr pos:start="12:23" pos:end="12:23"><literal type="number" pos:start="12:23" pos:end="12:23">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">frame_size</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="14:5" pos:end="14:28"><decl pos:start="14:5" pos:end="14:27"><type pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:15">InputStream</name> <modifier pos:start="14:17" pos:end="14:17">*</modifier></type><name pos:start="14:18" pos:end="14:20">ist</name> <init pos:start="14:22" pos:end="14:27">= <expr pos:start="14:24" pos:end="14:27"><name pos:start="14:24" pos:end="14:27">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:49"><type pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:19">AVFilterContext</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:27">filter</name> <init pos:start="15:29" pos:end="15:49">= <expr pos:start="15:31" pos:end="15:49"><name pos:start="15:31" pos:end="15:49"><name pos:start="15:31" pos:end="15:33">ost</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:41">filter</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:49">filter</name></name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="16:5" pos:end="17:47"><if pos:start="16:5" pos:end="17:47">if <condition pos:start="16:8" pos:end="16:31">(<expr pos:start="16:9" pos:end="16:30"><name pos:start="16:9" pos:end="16:25"><name pos:start="16:9" pos:end="16:11">ost</name><operator pos:start="16:12" pos:end="16:13">-&gt;</operator><name pos:start="16:14" pos:end="16:25">source_index</name></name> <operator pos:start="16:27" pos:end="16:28">&gt;=</operator> <literal type="number" pos:start="16:30" pos:end="16:30">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:47"><block_content pos:start="17:9" pos:end="17:47">
        <expr_stmt pos:start="17:9" pos:end="17:47"><expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:11">ist</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:46"><name pos:start="17:15" pos:end="17:27">input_streams</name><index pos:start="17:28" pos:end="17:46">[<expr pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:45"><name pos:start="17:29" pos:end="17:31">ost</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:45">source_index</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="18:5" pos:end="20:86"><if pos:start="18:5" pos:end="20:86">if <condition pos:start="18:8" pos:end="19:46">(<expr pos:start="18:9" pos:end="19:45"><name pos:start="18:9" pos:end="18:25"><name pos:start="18:9" pos:end="18:14">filter</name><operator pos:start="18:15" pos:end="18:16">-&gt;</operator><name pos:start="18:17" pos:end="18:22">inputs</name><index pos:start="18:23" pos:end="18:25">[<expr pos:start="18:24" pos:end="18:24"><literal type="number" pos:start="18:24" pos:end="18:24">0</literal></expr>]</index></name><operator pos:start="18:26" pos:end="18:27">-&gt;</operator><name pos:start="18:28" pos:end="18:41"><name pos:start="18:28" pos:end="18:37">frame_rate</name><operator pos:start="18:38" pos:end="18:38">.</operator><name pos:start="18:39" pos:end="18:41">num</name></name> <operator pos:start="18:43" pos:end="18:43">&gt;</operator> <literal type="number" pos:start="18:45" pos:end="18:45">0</literal> <operator pos:start="18:47" pos:end="18:48">&amp;&amp;</operator>
        <name pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:14">filter</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:22">inputs</name><index pos:start="19:23" pos:end="19:25">[<expr pos:start="19:24" pos:end="19:24"><literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>]</index></name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:41"><name pos:start="19:28" pos:end="19:37">frame_rate</name><operator pos:start="19:38" pos:end="19:38">.</operator><name pos:start="19:39" pos:end="19:41">den</name></name> <operator pos:start="19:43" pos:end="19:43">&gt;</operator> <literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr>)</condition><block type="pseudo" pos:start="20:9" pos:end="20:86"><block_content pos:start="20:9" pos:end="20:86">
        <expr_stmt pos:start="20:9" pos:end="20:86"><expr pos:start="20:9" pos:end="20:85"><name pos:start="20:9" pos:end="20:16">duration</name> <operator pos:start="20:18" pos:end="20:18">=</operator> <literal type="number" pos:start="20:20" pos:end="20:20">1</literal><operator pos:start="20:21" pos:end="20:21">/</operator><operator pos:start="20:22" pos:end="20:22">(</operator><call pos:start="20:23" pos:end="20:59"><name pos:start="20:23" pos:end="20:28">av_q2d</name><argument_list pos:start="20:29" pos:end="20:59">(<argument pos:start="20:30" pos:end="20:58"><expr pos:start="20:30" pos:end="20:58"><name pos:start="20:30" pos:end="20:46"><name pos:start="20:30" pos:end="20:35">filter</name><operator pos:start="20:36" pos:end="20:37">-&gt;</operator><name pos:start="20:38" pos:end="20:43">inputs</name><index pos:start="20:44" pos:end="20:46">[<expr pos:start="20:45" pos:end="20:45"><literal type="number" pos:start="20:45" pos:end="20:45">0</literal></expr>]</index></name><operator pos:start="20:47" pos:end="20:48">-&gt;</operator><name pos:start="20:49" pos:end="20:58">frame_rate</name></expr></argument>)</argument_list></call> <operator pos:start="20:61" pos:end="20:61">*</operator> <call pos:start="20:63" pos:end="20:84"><name pos:start="20:63" pos:end="20:68">av_q2d</name><argument_list pos:start="20:69" pos:end="20:84">(<argument pos:start="20:70" pos:end="20:83"><expr pos:start="20:70" pos:end="20:83"><name pos:start="20:70" pos:end="20:83"><name pos:start="20:70" pos:end="20:72">enc</name><operator pos:start="20:73" pos:end="20:74">-&gt;</operator><name pos:start="20:75" pos:end="20:83">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="20:85" pos:end="20:85">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="22:89"><if pos:start="21:5" pos:end="22:89">if<condition pos:start="21:7" pos:end="21:115">(<expr pos:start="21:8" pos:end="21:114"><name pos:start="21:8" pos:end="21:10">ist</name> <operator pos:start="21:12" pos:end="21:13">&amp;&amp;</operator> <name pos:start="21:15" pos:end="21:33"><name pos:start="21:15" pos:end="21:17">ist</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:21">st</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:33">start_time</name></name> <operator pos:start="21:35" pos:end="21:36">!=</operator> <name pos:start="21:38" pos:end="21:51">AV_NOPTS_VALUE</name> <operator pos:start="21:53" pos:end="21:54">&amp;&amp;</operator> <name pos:start="21:56" pos:end="21:73"><name pos:start="21:56" pos:end="21:58">ist</name><operator pos:start="21:59" pos:end="21:60">-&gt;</operator><name pos:start="21:61" pos:end="21:62">st</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:73">first_dts</name></name> <operator pos:start="21:75" pos:end="21:76">!=</operator> <name pos:start="21:78" pos:end="21:91">AV_NOPTS_VALUE</name> <operator pos:start="21:93" pos:end="21:94">&amp;&amp;</operator> <name pos:start="21:96" pos:end="21:114"><name pos:start="21:96" pos:end="21:98">ost</name><operator pos:start="21:99" pos:end="21:100">-&gt;</operator><name pos:start="21:101" pos:end="21:110">frame_rate</name><operator pos:start="21:111" pos:end="21:111">.</operator><name pos:start="21:112" pos:end="21:114">num</name></name></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:89"><block_content pos:start="22:9" pos:end="22:89">
        <expr_stmt pos:start="22:9" pos:end="22:89"><expr pos:start="22:9" pos:end="22:88"><name pos:start="22:9" pos:end="22:16">duration</name> <operator pos:start="22:18" pos:end="22:18">=</operator> <call pos:start="22:20" pos:end="22:88"><name pos:start="22:20" pos:end="22:24">FFMIN</name><argument_list pos:start="22:25" pos:end="22:88">(<argument pos:start="22:26" pos:end="22:33"><expr pos:start="22:26" pos:end="22:33"><name pos:start="22:26" pos:end="22:33">duration</name></expr></argument>, <argument pos:start="22:36" pos:end="22:87"><expr pos:start="22:36" pos:end="22:87"><literal type="number" pos:start="22:36" pos:end="22:36">1</literal><operator pos:start="22:37" pos:end="22:37">/</operator><operator pos:start="22:38" pos:end="22:38">(</operator><call pos:start="22:39" pos:end="22:61"><name pos:start="22:39" pos:end="22:44">av_q2d</name><argument_list pos:start="22:45" pos:end="22:61">(<argument pos:start="22:46" pos:end="22:60"><expr pos:start="22:46" pos:end="22:60"><name pos:start="22:46" pos:end="22:60"><name pos:start="22:46" pos:end="22:48">ost</name><operator pos:start="22:49" pos:end="22:50">-&gt;</operator><name pos:start="22:51" pos:end="22:60">frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="22:63" pos:end="22:63">*</operator> <call pos:start="22:65" pos:end="22:86"><name pos:start="22:65" pos:end="22:70">av_q2d</name><argument_list pos:start="22:71" pos:end="22:86">(<argument pos:start="22:72" pos:end="22:85"><expr pos:start="22:72" pos:end="22:85"><name pos:start="22:72" pos:end="22:85"><name pos:start="22:72" pos:end="22:74">enc</name><operator pos:start="22:75" pos:end="22:76">-&gt;</operator><name pos:start="22:77" pos:end="22:85">time_base</name></name></expr></argument>)</argument_list></call><operator pos:start="22:87" pos:end="22:87">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="27:114">(<expr pos:start="23:9" pos:end="27:113"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:28"><name pos:start="23:10" pos:end="23:12">ost</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:28">filters_script</name></name> <operator pos:start="23:30" pos:end="23:31">&amp;&amp;</operator>
        <operator pos:start="24:9" pos:end="24:9">!</operator><name pos:start="24:10" pos:end="24:21"><name pos:start="24:10" pos:end="24:12">ost</name><operator pos:start="24:13" pos:end="24:14">-&gt;</operator><name pos:start="24:15" pos:end="24:21">filters</name></name> <operator pos:start="24:23" pos:end="24:24">&amp;&amp;</operator>
        <name pos:start="25:9" pos:end="25:20">next_picture</name> <operator pos:start="25:22" pos:end="25:23">&amp;&amp;</operator>
        <name pos:start="26:9" pos:end="26:11">ist</name> <operator pos:start="26:13" pos:end="26:14">&amp;&amp;</operator>
        <call pos:start="27:9" pos:end="27:109"><name pos:start="27:9" pos:end="27:14">lrintf</name><argument_list pos:start="27:15" pos:end="27:109">(<argument pos:start="27:16" pos:end="27:108"><expr pos:start="27:16" pos:end="27:108"><call pos:start="27:16" pos:end="27:54"><name pos:start="27:16" pos:end="27:40">av_frame_get_pkt_duration</name><argument_list pos:start="27:41" pos:end="27:54">(<argument pos:start="27:42" pos:end="27:53"><expr pos:start="27:42" pos:end="27:53"><name pos:start="27:42" pos:end="27:53">next_picture</name></expr></argument>)</argument_list></call> <operator pos:start="27:56" pos:end="27:56">*</operator> <call pos:start="27:58" pos:end="27:83"><name pos:start="27:58" pos:end="27:63">av_q2d</name><argument_list pos:start="27:64" pos:end="27:83">(<argument pos:start="27:65" pos:end="27:82"><expr pos:start="27:65" pos:end="27:82"><name pos:start="27:65" pos:end="27:82"><name pos:start="27:65" pos:end="27:67">ist</name><operator pos:start="27:68" pos:end="27:69">-&gt;</operator><name pos:start="27:70" pos:end="27:71">st</name><operator pos:start="27:72" pos:end="27:73">-&gt;</operator><name pos:start="27:74" pos:end="27:82">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="27:85" pos:end="27:85">/</operator> <call pos:start="27:87" pos:end="27:108"><name pos:start="27:87" pos:end="27:92">av_q2d</name><argument_list pos:start="27:93" pos:end="27:108">(<argument pos:start="27:94" pos:end="27:107"><expr pos:start="27:94" pos:end="27:107"><name pos:start="27:94" pos:end="27:107"><name pos:start="27:94" pos:end="27:96">enc</name><operator pos:start="27:97" pos:end="27:98">-&gt;</operator><name pos:start="27:99" pos:end="27:107">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="27:111" pos:end="27:111">&gt;</operator> <literal type="number" pos:start="27:113" pos:end="27:113">0</literal></expr>)</condition> <block pos:start="27:116" pos:end="29:5">{<block_content pos:start="28:9" pos:end="28:121">
        <expr_stmt pos:start="28:9" pos:end="28:121"><expr pos:start="28:9" pos:end="28:120"><name pos:start="28:9" pos:end="28:16">duration</name> <operator pos:start="28:18" pos:end="28:18">=</operator> <call pos:start="28:20" pos:end="28:120"><name pos:start="28:20" pos:end="28:25">lrintf</name><argument_list pos:start="28:26" pos:end="28:120">(<argument pos:start="28:27" pos:end="28:119"><expr pos:start="28:27" pos:end="28:119"><call pos:start="28:27" pos:end="28:65"><name pos:start="28:27" pos:end="28:51">av_frame_get_pkt_duration</name><argument_list pos:start="28:52" pos:end="28:65">(<argument pos:start="28:53" pos:end="28:64"><expr pos:start="28:53" pos:end="28:64"><name pos:start="28:53" pos:end="28:64">next_picture</name></expr></argument>)</argument_list></call> <operator pos:start="28:67" pos:end="28:67">*</operator> <call pos:start="28:69" pos:end="28:94"><name pos:start="28:69" pos:end="28:74">av_q2d</name><argument_list pos:start="28:75" pos:end="28:94">(<argument pos:start="28:76" pos:end="28:93"><expr pos:start="28:76" pos:end="28:93"><name pos:start="28:76" pos:end="28:93"><name pos:start="28:76" pos:end="28:78">ist</name><operator pos:start="28:79" pos:end="28:80">-&gt;</operator><name pos:start="28:81" pos:end="28:82">st</name><operator pos:start="28:83" pos:end="28:84">-&gt;</operator><name pos:start="28:85" pos:end="28:93">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="28:96" pos:end="28:96">/</operator> <call pos:start="28:98" pos:end="28:119"><name pos:start="28:98" pos:end="28:103">av_q2d</name><argument_list pos:start="28:104" pos:end="28:119">(<argument pos:start="28:105" pos:end="28:118"><expr pos:start="28:105" pos:end="28:118"><name pos:start="28:105" pos:end="28:118"><name pos:start="28:105" pos:end="28:107">enc</name><operator pos:start="28:108" pos:end="28:109">-&gt;</operator><name pos:start="28:110" pos:end="28:118">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="30:5" pos:end="103:5"><if pos:start="30:5" pos:end="35:5">if <condition pos:start="30:8" pos:end="30:22">(<expr pos:start="30:9" pos:end="30:21"><operator pos:start="30:9" pos:end="30:9">!</operator><name pos:start="30:10" pos:end="30:21">next_picture</name></expr>)</condition> <block pos:start="30:24" pos:end="35:5">{<block_content pos:start="32:9" pos:end="34:67">
        <comment type="line" pos:start="31:9" pos:end="31:23">//end, flushing</comment>
        <expr_stmt pos:start="32:9" pos:end="34:67"><expr pos:start="32:9" pos:end="34:66"><name pos:start="32:9" pos:end="32:18">nb0_frames</name> <operator pos:start="32:20" pos:end="32:20">=</operator> <name pos:start="32:22" pos:end="32:30">nb_frames</name> <operator pos:start="32:32" pos:end="32:32">=</operator> <call pos:start="32:34" pos:end="34:66"><name pos:start="32:34" pos:end="32:41">mid_pred</name><argument_list pos:start="32:42" pos:end="34:66">(<argument pos:start="32:43" pos:end="32:65"><expr pos:start="32:43" pos:end="32:65"><name pos:start="32:43" pos:end="32:65"><name pos:start="32:43" pos:end="32:45">ost</name><operator pos:start="32:46" pos:end="32:47">-&gt;</operator><name pos:start="32:48" pos:end="32:62">last_nb0_frames</name><index pos:start="32:63" pos:end="32:65">[<expr pos:start="32:64" pos:end="32:64"><literal type="number" pos:start="32:64" pos:end="32:64">0</literal></expr>]</index></name></expr></argument>,
                                          <argument pos:start="33:43" pos:end="33:65"><expr pos:start="33:43" pos:end="33:65"><name pos:start="33:43" pos:end="33:65"><name pos:start="33:43" pos:end="33:45">ost</name><operator pos:start="33:46" pos:end="33:47">-&gt;</operator><name pos:start="33:48" pos:end="33:62">last_nb0_frames</name><index pos:start="33:63" pos:end="33:65">[<expr pos:start="33:64" pos:end="33:64"><literal type="number" pos:start="33:64" pos:end="33:64">1</literal></expr>]</index></name></expr></argument>,
                                          <argument pos:start="34:43" pos:end="34:65"><expr pos:start="34:43" pos:end="34:65"><name pos:start="34:43" pos:end="34:65"><name pos:start="34:43" pos:end="34:45">ost</name><operator pos:start="34:46" pos:end="34:47">-&gt;</operator><name pos:start="34:48" pos:end="34:62">last_nb0_frames</name><index pos:start="34:63" pos:end="34:65">[<expr pos:start="34:64" pos:end="34:64"><literal type="number" pos:start="34:64" pos:end="34:64">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="35:7" pos:end="103:5">else <block pos:start="35:12" pos:end="103:5">{<block_content pos:start="36:9" pos:end="102:9">
        <expr_stmt pos:start="36:9" pos:end="36:44"><expr pos:start="36:9" pos:end="36:43"><name pos:start="36:9" pos:end="36:14">delta0</name> <operator pos:start="36:16" pos:end="36:16">=</operator> <name pos:start="36:18" pos:end="36:26">sync_ipts</name> <operator pos:start="36:28" pos:end="36:28">-</operator> <name pos:start="36:30" pos:end="36:43"><name pos:start="36:30" pos:end="36:32">ost</name><operator pos:start="36:33" pos:end="36:34">-&gt;</operator><name pos:start="36:35" pos:end="36:43">sync_opts</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:13">delta</name>  <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:23">delta0</name> <operator pos:start="37:25" pos:end="37:25">+</operator> <name pos:start="37:27" pos:end="37:34">duration</name></expr>;</expr_stmt>
        <comment type="block" pos:start="38:9" pos:end="38:50">/* by default, we output a single frame */</comment>
        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><name pos:start="39:9" pos:end="39:18">nb0_frames</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="40:9" pos:end="40:22"><expr pos:start="40:9" pos:end="40:21"><name pos:start="40:9" pos:end="40:17">nb_frames</name> <operator pos:start="40:19" pos:end="40:19">=</operator> <literal type="number" pos:start="40:21" pos:end="40:21">1</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="41:9" pos:end="41:46"><expr pos:start="41:9" pos:end="41:45"><name pos:start="41:9" pos:end="41:25">format_video_sync</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <name pos:start="41:29" pos:end="41:45">video_sync_method</name></expr>;</expr_stmt>
        <if_stmt pos:start="42:9" pos:end="56:9"><if pos:start="42:9" pos:end="56:9">if <condition pos:start="42:12" pos:end="42:44">(<expr pos:start="42:13" pos:end="42:43"><name pos:start="42:13" pos:end="42:29">format_video_sync</name> <operator pos:start="42:31" pos:end="42:32">==</operator> <name pos:start="42:34" pos:end="42:43">VSYNC_AUTO</name></expr>)</condition> <block pos:start="42:46" pos:end="56:9">{<block_content pos:start="43:13" pos:end="55:13">
            <if_stmt pos:start="43:13" pos:end="46:166"><if pos:start="43:13" pos:end="45:13">if<condition pos:start="43:15" pos:end="43:48">(<expr pos:start="43:16" pos:end="43:47"><operator pos:start="43:16" pos:end="43:16">!</operator><call pos:start="43:17" pos:end="43:47"><name pos:start="43:17" pos:end="43:22">strcmp</name><argument_list pos:start="43:23" pos:end="43:47">(<argument pos:start="43:24" pos:end="43:39"><expr pos:start="43:24" pos:end="43:39"><name pos:start="43:24" pos:end="43:39"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:33">oformat</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:39">name</name></name></expr></argument>, <argument pos:start="43:42" pos:end="43:46"><expr pos:start="43:42" pos:end="43:46"><literal type="string" pos:start="43:42" pos:end="43:46">"avi"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:50" pos:end="45:13">{<block_content pos:start="44:17" pos:end="44:46">
                <expr_stmt pos:start="44:17" pos:end="44:46"><expr pos:start="44:17" pos:end="44:45"><name pos:start="44:17" pos:end="44:33">format_video_sync</name> <operator pos:start="44:35" pos:end="44:35">=</operator> <name pos:start="44:37" pos:end="44:45">VSYNC_VFR</name></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="45:15" pos:end="46:166">else<block type="pseudo" pos:start="46:17" pos:end="46:166"><block_content pos:start="46:17" pos:end="46:166">
                <expr_stmt pos:start="46:17" pos:end="46:166"><expr pos:start="46:17" pos:end="46:165"><name pos:start="46:17" pos:end="46:33">format_video_sync</name> <operator pos:start="46:35" pos:end="46:35">=</operator> <ternary pos:start="46:37" pos:end="46:165"><condition pos:start="46:37" pos:end="46:78"><expr pos:start="46:37" pos:end="46:76"><operator pos:start="46:37" pos:end="46:37">(</operator><name pos:start="46:38" pos:end="46:54"><name pos:start="46:38" pos:end="46:38">s</name><operator pos:start="46:39" pos:end="46:40">-&gt;</operator><name pos:start="46:41" pos:end="46:47">oformat</name><operator pos:start="46:48" pos:end="46:49">-&gt;</operator><name pos:start="46:50" pos:end="46:54">flags</name></name> <operator pos:start="46:56" pos:end="46:56">&amp;</operator> <name pos:start="46:58" pos:end="46:75">AVFMT_VARIABLE_FPS</name><operator pos:start="46:76" pos:end="46:76">)</operator></expr> ?</condition><then pos:start="46:80" pos:end="46:153"> <expr pos:start="46:80" pos:end="46:153"><operator pos:start="46:80" pos:end="46:80">(</operator><ternary pos:start="46:81" pos:end="46:152"><condition pos:start="46:81" pos:end="46:122"><expr pos:start="46:81" pos:end="46:120"><operator pos:start="46:81" pos:end="46:81">(</operator><name pos:start="46:82" pos:end="46:98"><name pos:start="46:82" pos:end="46:82">s</name><operator pos:start="46:83" pos:end="46:84">-&gt;</operator><name pos:start="46:85" pos:end="46:91">oformat</name><operator pos:start="46:92" pos:end="46:93">-&gt;</operator><name pos:start="46:94" pos:end="46:98">flags</name></name> <operator pos:start="46:100" pos:end="46:100">&amp;</operator> <name pos:start="46:102" pos:end="46:119">AVFMT_NOTIMESTAMPS</name><operator pos:start="46:120" pos:end="46:120">)</operator></expr> ?</condition><then pos:start="46:124" pos:end="46:140"> <expr pos:start="46:124" pos:end="46:140"><name pos:start="46:124" pos:end="46:140">VSYNC_PASSTHROUGH</name></expr> </then><else pos:start="46:142" pos:end="46:152">: <expr pos:start="46:144" pos:end="46:152"><name pos:start="46:144" pos:end="46:152">VSYNC_VFR</name></expr></else></ternary><operator pos:start="46:153" pos:end="46:153">)</operator></expr> </then><else pos:start="46:155" pos:end="46:165">: <expr pos:start="46:157" pos:end="46:165"><name pos:start="46:157" pos:end="46:165">VSYNC_CFR</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <if_stmt pos:start="47:13" pos:end="52:13"><if pos:start="47:13" pos:end="52:13">if <condition pos:start="47:16" pos:end="50:70">(   <expr pos:start="47:20" pos:end="50:69"><name pos:start="47:20" pos:end="47:22">ist</name>
                <operator pos:start="48:17" pos:end="48:18">&amp;&amp;</operator> <name pos:start="48:20" pos:end="48:36">format_video_sync</name> <operator pos:start="48:38" pos:end="48:39">==</operator> <name pos:start="48:41" pos:end="48:49">VSYNC_CFR</name>
                <operator pos:start="49:17" pos:end="49:18">&amp;&amp;</operator> <name pos:start="49:20" pos:end="49:47"><name pos:start="49:20" pos:end="49:30">input_files</name><index pos:start="49:31" pos:end="49:47">[<expr pos:start="49:32" pos:end="49:46"><name pos:start="49:32" pos:end="49:46"><name pos:start="49:32" pos:end="49:34">ist</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:46">file_index</name></name></expr>]</index></name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:64"><name pos:start="49:50" pos:end="49:52">ctx</name><operator pos:start="49:53" pos:end="49:54">-&gt;</operator><name pos:start="49:55" pos:end="49:64">nb_streams</name></name> <operator pos:start="49:66" pos:end="49:67">==</operator> <literal type="number" pos:start="49:69" pos:end="49:69">1</literal>
                <operator pos:start="50:17" pos:end="50:18">&amp;&amp;</operator> <name pos:start="50:20" pos:end="50:47"><name pos:start="50:20" pos:end="50:30">input_files</name><index pos:start="50:31" pos:end="50:47">[<expr pos:start="50:32" pos:end="50:46"><name pos:start="50:32" pos:end="50:46"><name pos:start="50:32" pos:end="50:34">ist</name><operator pos:start="50:35" pos:end="50:36">-&gt;</operator><name pos:start="50:37" pos:end="50:46">file_index</name></name></expr>]</index></name><operator pos:start="50:48" pos:end="50:49">-&gt;</operator><name pos:start="50:50" pos:end="50:64">input_ts_offset</name> <operator pos:start="50:66" pos:end="50:67">==</operator> <literal type="number" pos:start="50:69" pos:end="50:69">0</literal></expr>)</condition> <block pos:start="50:72" pos:end="52:13">{<block_content pos:start="51:17" pos:end="51:48">
                <expr_stmt pos:start="51:17" pos:end="51:48"><expr pos:start="51:17" pos:end="51:47"><name pos:start="51:17" pos:end="51:33">format_video_sync</name> <operator pos:start="51:35" pos:end="51:35">=</operator> <name pos:start="51:37" pos:end="51:47">VSYNC_VSCFR</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="53:13" pos:end="55:13"><if pos:start="53:13" pos:end="55:13">if <condition pos:start="53:16" pos:end="53:58">(<expr pos:start="53:17" pos:end="53:57"><name pos:start="53:17" pos:end="53:33">format_video_sync</name> <operator pos:start="53:35" pos:end="53:36">==</operator> <name pos:start="53:38" pos:end="53:46">VSYNC_CFR</name> <operator pos:start="53:48" pos:end="53:49">&amp;&amp;</operator> <name pos:start="53:51" pos:end="53:57">copy_ts</name></expr>)</condition> <block pos:start="53:60" pos:end="55:13">{<block_content pos:start="54:17" pos:end="54:48">
                <expr_stmt pos:start="54:17" pos:end="54:48"><expr pos:start="54:17" pos:end="54:47"><name pos:start="54:17" pos:end="54:33">format_video_sync</name> <operator pos:start="54:35" pos:end="54:35">=</operator> <name pos:start="54:37" pos:end="54:47">VSYNC_VSCFR</name></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="60:44">(<expr pos:start="57:13" pos:end="60:43"><name pos:start="57:13" pos:end="58:19"><name pos:start="57:13" pos:end="57:18">delta0</name> <argument_list type="generic" pos:start="57:20" pos:end="58:19">&lt; <argument pos:start="57:22" pos:end="58:17"><expr pos:start="57:22" pos:end="58:17"><literal type="number" pos:start="57:22" pos:end="57:22">0</literal> <operator pos:start="57:24" pos:end="57:25">&amp;&amp;</operator>
            <name pos:start="58:13" pos:end="58:17">delta</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="58:21" pos:end="58:21">0</literal> <operator pos:start="58:23" pos:end="58:24">&amp;&amp;</operator>
            <name pos:start="59:13" pos:end="59:29">format_video_sync</name> <operator pos:start="59:31" pos:end="59:32">!=</operator> <name pos:start="59:34" pos:end="59:50">VSYNC_PASSTHROUGH</name> <operator pos:start="59:52" pos:end="59:53">&amp;&amp;</operator>
            <name pos:start="60:13" pos:end="60:29">format_video_sync</name> <operator pos:start="60:31" pos:end="60:32">!=</operator> <name pos:start="60:34" pos:end="60:43">VSYNC_DROP</name></expr>)</condition> <block pos:start="60:46" pos:end="69:9">{<block_content pos:start="61:13" pos:end="68:26">
            <decl_stmt pos:start="61:13" pos:end="61:50"><decl pos:start="61:13" pos:end="61:49"><type pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:18">double</name></type> <name pos:start="61:20" pos:end="61:22">cor</name> <init pos:start="61:24" pos:end="61:49">= <expr pos:start="61:26" pos:end="61:49"><call pos:start="61:26" pos:end="61:49"><name pos:start="61:26" pos:end="61:30">FFMIN</name><argument_list pos:start="61:31" pos:end="61:49">(<argument pos:start="61:32" pos:end="61:38"><expr pos:start="61:32" pos:end="61:38"><operator pos:start="61:32" pos:end="61:32">-</operator><name pos:start="61:33" pos:end="61:38">delta0</name></expr></argument>, <argument pos:start="61:41" pos:end="61:48"><expr pos:start="61:41" pos:end="61:48"><name pos:start="61:41" pos:end="61:48">duration</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <if_stmt pos:start="62:13" pos:end="65:96"><if pos:start="62:13" pos:end="64:13">if <condition pos:start="62:16" pos:end="62:30">(<expr pos:start="62:17" pos:end="62:29"><name pos:start="62:17" pos:end="62:22">delta0</name> <operator pos:start="62:24" pos:end="62:24">&lt;</operator> <operator pos:start="62:26" pos:end="62:26">-</operator><literal type="number" pos:start="62:27" pos:end="62:29">0.6</literal></expr>)</condition> <block pos:start="62:32" pos:end="64:13">{<block_content pos:start="63:17" pos:end="63:86">
                <expr_stmt pos:start="63:17" pos:end="63:86"><expr pos:start="63:17" pos:end="63:85"><call pos:start="63:17" pos:end="63:85"><name pos:start="63:17" pos:end="63:22">av_log</name><argument_list pos:start="63:23" pos:end="63:85">(<argument pos:start="63:24" pos:end="63:27"><expr pos:start="63:24" pos:end="63:27"><name pos:start="63:24" pos:end="63:27">NULL</name></expr></argument>, <argument pos:start="63:30" pos:end="63:43"><expr pos:start="63:30" pos:end="63:43"><name pos:start="63:30" pos:end="63:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="63:46" pos:end="63:75"><expr pos:start="63:46" pos:end="63:75"><literal type="string" pos:start="63:46" pos:end="63:75">"Past duration %f too large\n"</literal></expr></argument>, <argument pos:start="63:78" pos:end="63:84"><expr pos:start="63:78" pos:end="63:84"><operator pos:start="63:78" pos:end="63:78">-</operator><name pos:start="63:79" pos:end="63:84">delta0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if> <else pos:start="64:15" pos:end="65:96">else<block type="pseudo" pos:start="65:17" pos:end="65:96"><block_content pos:start="65:17" pos:end="65:96">
                <expr_stmt pos:start="65:17" pos:end="65:96"><expr pos:start="65:17" pos:end="65:95"><call pos:start="65:17" pos:end="65:95"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:95">(<argument pos:start="65:24" pos:end="65:27"><expr pos:start="65:24" pos:end="65:27"><name pos:start="65:24" pos:end="65:27">NULL</name></expr></argument>, <argument pos:start="65:30" pos:end="65:41"><expr pos:start="65:30" pos:end="65:41"><name pos:start="65:30" pos:end="65:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:44" pos:end="65:85"><expr pos:start="65:44" pos:end="65:85"><literal type="string" pos:start="65:44" pos:end="65:85">"Cliping frame in rate conversion by %f\n"</literal></expr></argument>, <argument pos:start="65:88" pos:end="65:94"><expr pos:start="65:88" pos:end="65:94"><operator pos:start="65:88" pos:end="65:88">-</operator><name pos:start="65:89" pos:end="65:94">delta0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
            <expr_stmt pos:start="66:13" pos:end="66:29"><expr pos:start="66:13" pos:end="66:28"><name pos:start="66:13" pos:end="66:21">sync_ipts</name> <operator pos:start="66:23" pos:end="66:24">+=</operator> <name pos:start="66:26" pos:end="66:28">cor</name></expr>;</expr_stmt>
            <expr_stmt pos:start="67:13" pos:end="67:28"><expr pos:start="67:13" pos:end="67:27"><name pos:start="67:13" pos:end="67:20">duration</name> <operator pos:start="67:22" pos:end="67:23">-=</operator> <name pos:start="67:25" pos:end="67:27">cor</name></expr>;</expr_stmt>
            <expr_stmt pos:start="68:13" pos:end="68:26"><expr pos:start="68:13" pos:end="68:25"><name pos:start="68:13" pos:end="68:18">delta0</name> <operator pos:start="68:20" pos:end="68:21">+=</operator> <name pos:start="68:23" pos:end="68:25">cor</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <switch pos:start="70:9" pos:end="102:9">switch <condition pos:start="70:16" pos:end="70:34">(<expr pos:start="70:17" pos:end="70:33"><name pos:start="70:17" pos:end="70:33">format_video_sync</name></expr>)</condition> <block pos:start="70:36" pos:end="102:9">{<block_content pos:start="71:9" pos:end="101:26">
        <case pos:start="71:9" pos:end="71:25">case <expr pos:start="71:14" pos:end="71:24"><name pos:start="71:14" pos:end="71:24">VSYNC_VSCFR</name></expr>:</case>
            <if_stmt pos:start="72:13" pos:end="77:13"><if pos:start="72:13" pos:end="77:13">if <condition pos:start="72:16" pos:end="72:66">(<expr pos:start="72:17" pos:end="72:65"><name pos:start="72:17" pos:end="72:33"><name pos:start="72:17" pos:end="72:19">ost</name><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:33">frame_number</name></name> <operator pos:start="72:35" pos:end="72:36">==</operator> <literal type="number" pos:start="72:38" pos:end="72:38">0</literal> <operator pos:start="72:40" pos:end="72:41">&amp;&amp;</operator> <name pos:start="72:43" pos:end="72:47">delta</name> <operator pos:start="72:49" pos:end="72:49">-</operator> <name pos:start="72:51" pos:end="72:58">duration</name> <operator pos:start="72:60" pos:end="72:61">&gt;=</operator> <literal type="number" pos:start="72:63" pos:end="72:65">0.5</literal></expr>)</condition> <block pos:start="72:68" pos:end="77:13">{<block_content pos:start="73:17" pos:end="76:50">
                <expr_stmt pos:start="73:17" pos:end="73:113"><expr pos:start="73:17" pos:end="73:112"><call pos:start="73:17" pos:end="73:112"><name pos:start="73:17" pos:end="73:22">av_log</name><argument_list pos:start="73:23" pos:end="73:112">(<argument pos:start="73:24" pos:end="73:27"><expr pos:start="73:24" pos:end="73:27"><name pos:start="73:24" pos:end="73:27">NULL</name></expr></argument>, <argument pos:start="73:30" pos:end="73:41"><expr pos:start="73:30" pos:end="73:41"><name pos:start="73:30" pos:end="73:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:44" pos:end="73:80"><expr pos:start="73:44" pos:end="73:80"><literal type="string" pos:start="73:44" pos:end="73:80">"Not duplicating %d initial frames\n"</literal></expr></argument>, <argument pos:start="73:83" pos:end="73:111"><expr pos:start="73:83" pos:end="73:111"><operator pos:start="73:83" pos:end="73:83">(</operator><name pos:start="73:84" pos:end="73:86">int</name><operator pos:start="73:87" pos:end="73:87">)</operator><call pos:start="73:88" pos:end="73:111"><name pos:start="73:88" pos:end="73:93">lrintf</name><argument_list pos:start="73:94" pos:end="73:111">(<argument pos:start="73:95" pos:end="73:110"><expr pos:start="73:95" pos:end="73:110"><name pos:start="73:95" pos:end="73:99">delta</name> <operator pos:start="73:101" pos:end="73:101">-</operator> <name pos:start="73:103" pos:end="73:110">duration</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="74:17" pos:end="74:33"><expr pos:start="74:17" pos:end="74:32"><name pos:start="74:17" pos:end="74:21">delta</name> <operator pos:start="74:23" pos:end="74:23">=</operator> <name pos:start="74:25" pos:end="74:32">duration</name></expr>;</expr_stmt>
                <expr_stmt pos:start="75:17" pos:end="75:27"><expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:22">delta0</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="76:17" pos:end="76:50"><expr pos:start="76:17" pos:end="76:49"><name pos:start="76:17" pos:end="76:30"><name pos:start="76:17" pos:end="76:19">ost</name><operator pos:start="76:20" pos:end="76:21">-&gt;</operator><name pos:start="76:22" pos:end="76:30">sync_opts</name></name> <operator pos:start="76:32" pos:end="76:32">=</operator> <call pos:start="76:34" pos:end="76:49"><name pos:start="76:34" pos:end="76:38">lrint</name><argument_list pos:start="76:39" pos:end="76:49">(<argument pos:start="76:40" pos:end="76:48"><expr pos:start="76:40" pos:end="76:48"><name pos:start="76:40" pos:end="76:48">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        <case pos:start="78:9" pos:end="78:23">case <expr pos:start="78:14" pos:end="78:22"><name pos:start="78:14" pos:end="78:22">VSYNC_CFR</name></expr>:</case>
            <comment type="line" pos:start="79:13" pos:end="79:79">// FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>
            <if_stmt pos:start="80:13" pos:end="88:13"><if pos:start="80:13" pos:end="82:13">if <condition pos:start="80:16" pos:end="80:90">(<expr pos:start="80:17" pos:end="80:89"><name pos:start="80:17" pos:end="80:36">frame_drop_threshold</name> <operator pos:start="80:38" pos:end="80:39">&amp;&amp;</operator> <name pos:start="80:41" pos:end="80:45">delta</name> <operator pos:start="80:47" pos:end="80:47">&lt;</operator> <name pos:start="80:49" pos:end="80:68">frame_drop_threshold</name> <operator pos:start="80:70" pos:end="80:71">&amp;&amp;</operator> <name pos:start="80:73" pos:end="80:89"><name pos:start="80:73" pos:end="80:75">ost</name><operator pos:start="80:76" pos:end="80:77">-&gt;</operator><name pos:start="80:78" pos:end="80:89">frame_number</name></name></expr>)</condition> <block pos:start="80:92" pos:end="82:13">{<block_content pos:start="81:17" pos:end="81:30">
                <expr_stmt pos:start="81:17" pos:end="81:30"><expr pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:25">nb_frames</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">0</literal></expr>;</expr_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="82:15" pos:end="83:30">else if <condition pos:start="82:23" pos:end="82:36">(<expr pos:start="82:24" pos:end="82:35"><name pos:start="82:24" pos:end="82:28">delta</name> <operator pos:start="82:30" pos:end="82:30">&lt;</operator> <operator pos:start="82:32" pos:end="82:32">-</operator><literal type="number" pos:start="82:33" pos:end="82:35">1.1</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:30"><block_content pos:start="83:17" pos:end="83:30">
                <expr_stmt pos:start="83:17" pos:end="83:30"><expr pos:start="83:17" pos:end="83:29"><name pos:start="83:17" pos:end="83:25">nb_frames</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <literal type="number" pos:start="83:29" pos:end="83:29">0</literal></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="84:13" pos:end="88:13">else if <condition pos:start="84:21" pos:end="84:33">(<expr pos:start="84:22" pos:end="84:32"><name pos:start="84:22" pos:end="84:26">delta</name> <operator pos:start="84:28" pos:end="84:28">&gt;</operator> <literal type="number" pos:start="84:30" pos:end="84:32">1.1</literal></expr>)</condition> <block pos:start="84:35" pos:end="88:13">{<block_content pos:start="85:17" pos:end="87:54">
                <expr_stmt pos:start="85:17" pos:end="85:42"><expr pos:start="85:17" pos:end="85:41"><name pos:start="85:17" pos:end="85:25">nb_frames</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <call pos:start="85:29" pos:end="85:41"><name pos:start="85:29" pos:end="85:34">lrintf</name><argument_list pos:start="85:35" pos:end="85:41">(<argument pos:start="85:36" pos:end="85:40"><expr pos:start="85:36" pos:end="85:40"><name pos:start="85:36" pos:end="85:40">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <if_stmt pos:start="86:17" pos:end="87:54"><if pos:start="86:17" pos:end="87:54">if <condition pos:start="86:20" pos:end="86:33">(<expr pos:start="86:21" pos:end="86:32"><name pos:start="86:21" pos:end="86:26">delta0</name> <operator pos:start="86:28" pos:end="86:28">&gt;</operator> <literal type="number" pos:start="86:30" pos:end="86:32">1.1</literal></expr>)</condition><block type="pseudo" pos:start="87:21" pos:end="87:54"><block_content pos:start="87:21" pos:end="87:54">
                    <expr_stmt pos:start="87:21" pos:end="87:54"><expr pos:start="87:21" pos:end="87:53"><name pos:start="87:21" pos:end="87:30">nb0_frames</name> <operator pos:start="87:32" pos:end="87:32">=</operator> <call pos:start="87:34" pos:end="87:53"><name pos:start="87:34" pos:end="87:39">lrintf</name><argument_list pos:start="87:40" pos:end="87:53">(<argument pos:start="87:41" pos:end="87:52"><expr pos:start="87:41" pos:end="87:52"><name pos:start="87:41" pos:end="87:46">delta0</name> <operator pos:start="87:48" pos:end="87:48">-</operator> <literal type="number" pos:start="87:50" pos:end="87:52">0.6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if></if_stmt>
            <break pos:start="89:13" pos:end="89:18">break;</break>
        <case pos:start="90:9" pos:end="90:23">case <expr pos:start="90:14" pos:end="90:22"><name pos:start="90:14" pos:end="90:22">VSYNC_VFR</name></expr>:</case>
            <if_stmt pos:start="91:13" pos:end="94:50"><if pos:start="91:13" pos:end="92:30">if <condition pos:start="91:16" pos:end="91:30">(<expr pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:21">delta</name> <operator pos:start="91:23" pos:end="91:24">&lt;=</operator> <operator pos:start="91:26" pos:end="91:26">-</operator><literal type="number" pos:start="91:27" pos:end="91:29">0.6</literal></expr>)</condition><block type="pseudo" pos:start="92:17" pos:end="92:30"><block_content pos:start="92:17" pos:end="92:30">
                <expr_stmt pos:start="92:17" pos:end="92:30"><expr pos:start="92:17" pos:end="92:29"><name pos:start="92:17" pos:end="92:25">nb_frames</name> <operator pos:start="92:27" pos:end="92:27">=</operator> <literal type="number" pos:start="92:29" pos:end="92:29">0</literal></expr>;</expr_stmt></block_content></block></if>
            <if type="elseif" pos:start="93:13" pos:end="94:50">else if <condition pos:start="93:21" pos:end="93:33">(<expr pos:start="93:22" pos:end="93:32"><name pos:start="93:22" pos:end="93:26">delta</name> <operator pos:start="93:28" pos:end="93:28">&gt;</operator> <literal type="number" pos:start="93:30" pos:end="93:32">0.6</literal></expr>)</condition><block type="pseudo" pos:start="94:17" pos:end="94:50"><block_content pos:start="94:17" pos:end="94:50">
                <expr_stmt pos:start="94:17" pos:end="94:50"><expr pos:start="94:17" pos:end="94:49"><name pos:start="94:17" pos:end="94:30"><name pos:start="94:17" pos:end="94:19">ost</name><operator pos:start="94:20" pos:end="94:21">-&gt;</operator><name pos:start="94:22" pos:end="94:30">sync_opts</name></name> <operator pos:start="94:32" pos:end="94:32">=</operator> <call pos:start="94:34" pos:end="94:49"><name pos:start="94:34" pos:end="94:38">lrint</name><argument_list pos:start="94:39" pos:end="94:49">(<argument pos:start="94:40" pos:end="94:48"><expr pos:start="94:40" pos:end="94:48"><name pos:start="94:40" pos:end="94:48">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <break pos:start="95:13" pos:end="95:18">break;</break>
        <case pos:start="96:9" pos:end="96:24">case <expr pos:start="96:14" pos:end="96:23"><name pos:start="96:14" pos:end="96:23">VSYNC_DROP</name></expr>:</case>
        <case pos:start="97:9" pos:end="97:31">case <expr pos:start="97:14" pos:end="97:30"><name pos:start="97:14" pos:end="97:30">VSYNC_PASSTHROUGH</name></expr>:</case>
            <expr_stmt pos:start="98:13" pos:end="98:46"><expr pos:start="98:13" pos:end="98:45"><name pos:start="98:13" pos:end="98:26"><name pos:start="98:13" pos:end="98:15">ost</name><operator pos:start="98:16" pos:end="98:17">-&gt;</operator><name pos:start="98:18" pos:end="98:26">sync_opts</name></name> <operator pos:start="98:28" pos:end="98:28">=</operator> <call pos:start="98:30" pos:end="98:45"><name pos:start="98:30" pos:end="98:34">lrint</name><argument_list pos:start="98:35" pos:end="98:45">(<argument pos:start="98:36" pos:end="98:44"><expr pos:start="98:36" pos:end="98:44"><name pos:start="98:36" pos:end="98:44">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="99:13" pos:end="99:18">break;</break>
        <default pos:start="100:9" pos:end="100:16">default:</default>
            <expr_stmt pos:start="101:13" pos:end="101:26"><expr pos:start="101:13" pos:end="101:25"><call pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:22">av_assert0</name><argument_list pos:start="101:23" pos:end="101:25">(<argument pos:start="101:24" pos:end="101:24"><expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></switch>
    </block_content>}</block></else></if_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:70"><expr pos:start="104:5" pos:end="104:69"><name pos:start="104:5" pos:end="104:13">nb_frames</name> <operator pos:start="104:15" pos:end="104:15">=</operator> <call pos:start="104:17" pos:end="104:69"><name pos:start="104:17" pos:end="104:21">FFMIN</name><argument_list pos:start="104:22" pos:end="104:69">(<argument pos:start="104:23" pos:end="104:31"><expr pos:start="104:23" pos:end="104:31"><name pos:start="104:23" pos:end="104:31">nb_frames</name></expr></argument>, <argument pos:start="104:34" pos:end="104:68"><expr pos:start="104:34" pos:end="104:68"><name pos:start="104:34" pos:end="104:48"><name pos:start="104:34" pos:end="104:36">ost</name><operator pos:start="104:37" pos:end="104:38">-&gt;</operator><name pos:start="104:39" pos:end="104:48">max_frames</name></name> <operator pos:start="104:50" pos:end="104:50">-</operator> <name pos:start="104:52" pos:end="104:68"><name pos:start="104:52" pos:end="104:54">ost</name><operator pos:start="104:55" pos:end="104:56">-&gt;</operator><name pos:start="104:57" pos:end="104:68">frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="105:5" pos:end="105:46"><expr pos:start="105:5" pos:end="105:45"><name pos:start="105:5" pos:end="105:14">nb0_frames</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:45"><name pos:start="105:18" pos:end="105:22">FFMIN</name><argument_list pos:start="105:23" pos:end="105:45">(<argument pos:start="105:24" pos:end="105:33"><expr pos:start="105:24" pos:end="105:33"><name pos:start="105:24" pos:end="105:33">nb0_frames</name></expr></argument>, <argument pos:start="105:36" pos:end="105:44"><expr pos:start="105:36" pos:end="105:44"><name pos:start="105:36" pos:end="105:44">nb_frames</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="106:5" pos:end="108:90"><expr pos:start="106:5" pos:end="108:89"><call pos:start="106:5" pos:end="108:89"><name pos:start="106:5" pos:end="106:11">memmove</name><argument_list pos:start="106:12" pos:end="108:89">(<argument pos:start="106:13" pos:end="106:36"><expr pos:start="106:13" pos:end="106:36"><name pos:start="106:13" pos:end="106:32"><name pos:start="106:13" pos:end="106:15">ost</name><operator pos:start="106:16" pos:end="106:17">-&gt;</operator><name pos:start="106:18" pos:end="106:32">last_nb0_frames</name></name> <operator pos:start="106:34" pos:end="106:34">+</operator> <literal type="number" pos:start="106:36" pos:end="106:36">1</literal></expr></argument>,
            <argument pos:start="107:13" pos:end="107:32"><expr pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:15">ost</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:32">last_nb0_frames</name></name></expr></argument>,
            <argument pos:start="108:13" pos:end="108:88"><expr pos:start="108:13" pos:end="108:88"><sizeof pos:start="108:13" pos:end="108:43">sizeof<argument_list pos:start="108:19" pos:end="108:43">(<argument pos:start="108:20" pos:end="108:42"><expr pos:start="108:20" pos:end="108:42"><name pos:start="108:20" pos:end="108:42"><name pos:start="108:20" pos:end="108:22">ost</name><operator pos:start="108:23" pos:end="108:24">-&gt;</operator><name pos:start="108:25" pos:end="108:39">last_nb0_frames</name><index pos:start="108:40" pos:end="108:42">[<expr pos:start="108:41" pos:end="108:41"><literal type="number" pos:start="108:41" pos:end="108:41">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="108:45" pos:end="108:45">*</operator> <operator pos:start="108:47" pos:end="108:47">(</operator><call pos:start="108:48" pos:end="108:83"><name pos:start="108:48" pos:end="108:61">FF_ARRAY_ELEMS</name><argument_list pos:start="108:62" pos:end="108:83">(<argument pos:start="108:63" pos:end="108:82"><expr pos:start="108:63" pos:end="108:82"><name pos:start="108:63" pos:end="108:82"><name pos:start="108:63" pos:end="108:65">ost</name><operator pos:start="108:66" pos:end="108:67">-&gt;</operator><name pos:start="108:68" pos:end="108:82">last_nb0_frames</name></name></expr></argument>)</argument_list></call> <operator pos:start="108:85" pos:end="108:85">-</operator> <literal type="number" pos:start="108:87" pos:end="108:87">1</literal><operator pos:start="108:88" pos:end="108:88">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="109:5" pos:end="109:41"><expr pos:start="109:5" pos:end="109:40"><name pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:7">ost</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:24">last_nb0_frames</name><index pos:start="109:25" pos:end="109:27">[<expr pos:start="109:26" pos:end="109:26"><literal type="number" pos:start="109:26" pos:end="109:26">0</literal></expr>]</index></name> <operator pos:start="109:29" pos:end="109:29">=</operator> <name pos:start="109:31" pos:end="109:40">nb0_frames</name></expr>;</expr_stmt>
    <if_stmt pos:start="110:5" pos:end="115:5"><if pos:start="110:5" pos:end="115:5">if <condition pos:start="110:8" pos:end="110:44">(<expr pos:start="110:9" pos:end="110:43"><name pos:start="110:9" pos:end="110:18">nb0_frames</name> <operator pos:start="110:20" pos:end="110:21">==</operator> <literal type="number" pos:start="110:23" pos:end="110:23">0</literal> <operator pos:start="110:25" pos:end="110:26">&amp;&amp;</operator> <name pos:start="110:28" pos:end="110:43"><name pos:start="110:28" pos:end="110:30">ost</name><operator pos:start="110:31" pos:end="110:32">-&gt;</operator><name pos:start="110:33" pos:end="110:43">last_droped</name></name></expr>)</condition> <block pos:start="110:46" pos:end="115:5">{<block_content pos:start="111:9" pos:end="114:72">
        <expr_stmt pos:start="111:9" pos:end="111:25"><expr pos:start="111:9" pos:end="111:24"><name pos:start="111:9" pos:end="111:22">nb_frames_drop</name><operator pos:start="111:23" pos:end="111:24">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="112:9" pos:end="114:72"><expr pos:start="112:9" pos:end="114:71"><call pos:start="112:9" pos:end="114:71"><name pos:start="112:9" pos:end="112:14">av_log</name><argument_list pos:start="112:15" pos:end="114:71">(<argument pos:start="112:16" pos:end="112:19"><expr pos:start="112:16" pos:end="112:19"><name pos:start="112:16" pos:end="112:19">NULL</name></expr></argument>, <argument pos:start="112:22" pos:end="112:35"><expr pos:start="112:22" pos:end="112:35"><name pos:start="112:22" pos:end="112:35">AV_LOG_VERBOSE</name></expr></argument>,
               <argument pos:start="113:16" pos:end="113:71"><expr pos:start="113:16" pos:end="113:71"><literal type="string" pos:start="113:16" pos:end="113:61">"*** dropping frame %d from stream %d at ts %"</literal><name pos:start="113:62" pos:end="113:67">PRId64</name><literal type="string" pos:start="113:68" pos:end="113:71">"\n"</literal></expr></argument>,
               <argument pos:start="114:16" pos:end="114:32"><expr pos:start="114:16" pos:end="114:32"><name pos:start="114:16" pos:end="114:32"><name pos:start="114:16" pos:end="114:18">ost</name><operator pos:start="114:19" pos:end="114:20">-&gt;</operator><name pos:start="114:21" pos:end="114:32">frame_number</name></name></expr></argument>, <argument pos:start="114:35" pos:end="114:48"><expr pos:start="114:35" pos:end="114:48"><name pos:start="114:35" pos:end="114:48"><name pos:start="114:35" pos:end="114:37">ost</name><operator pos:start="114:38" pos:end="114:39">-&gt;</operator><name pos:start="114:40" pos:end="114:41">st</name><operator pos:start="114:42" pos:end="114:43">-&gt;</operator><name pos:start="114:44" pos:end="114:48">index</name></name></expr></argument>, <argument pos:start="114:51" pos:end="114:70"><expr pos:start="114:51" pos:end="114:70"><name pos:start="114:51" pos:end="114:70"><name pos:start="114:51" pos:end="114:53">ost</name><operator pos:start="114:54" pos:end="114:55">-&gt;</operator><name pos:start="114:56" pos:end="114:65">last_frame</name><operator pos:start="114:66" pos:end="114:67">-&gt;</operator><name pos:start="114:68" pos:end="114:70">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="116:5" pos:end="123:5"><if pos:start="116:5" pos:end="123:5">if <condition pos:start="116:8" pos:end="116:80">(<expr pos:start="116:9" pos:end="116:79"><name pos:start="116:9" pos:end="116:17">nb_frames</name> <operator pos:start="116:19" pos:end="116:19">&gt;</operator> <operator pos:start="116:21" pos:end="116:21">(</operator><name pos:start="116:22" pos:end="116:31">nb0_frames</name> <operator pos:start="116:33" pos:end="116:34">&amp;&amp;</operator> <name pos:start="116:36" pos:end="116:51"><name pos:start="116:36" pos:end="116:38">ost</name><operator pos:start="116:39" pos:end="116:40">-&gt;</operator><name pos:start="116:41" pos:end="116:51">last_droped</name></name><operator pos:start="116:52" pos:end="116:52">)</operator> <operator pos:start="116:54" pos:end="116:54">+</operator> <operator pos:start="116:56" pos:end="116:56">(</operator><name pos:start="116:57" pos:end="116:65">nb_frames</name> <operator pos:start="116:67" pos:end="116:67">&gt;</operator> <name pos:start="116:69" pos:end="116:78">nb0_frames</name><operator pos:start="116:79" pos:end="116:79">)</operator></expr>)</condition> <block pos:start="116:82" pos:end="123:5">{<block_content pos:start="117:9" pos:end="122:69">
        <if_stmt pos:start="117:9" pos:end="120:9"><if pos:start="117:9" pos:end="120:9">if <condition pos:start="117:12" pos:end="117:49">(<expr pos:start="117:13" pos:end="117:48"><name pos:start="117:13" pos:end="117:21">nb_frames</name> <operator pos:start="117:23" pos:end="117:23">&gt;</operator> <name pos:start="117:25" pos:end="117:43">dts_error_threshold</name> <operator pos:start="117:45" pos:end="117:45">*</operator> <literal type="number" pos:start="117:47" pos:end="117:48">30</literal></expr>)</condition> <block pos:start="117:51" pos:end="120:9">{<block_content pos:start="118:13" pos:end="119:29">
            <expr_stmt pos:start="118:13" pos:end="118:100"><expr pos:start="118:13" pos:end="118:99"><call pos:start="118:13" pos:end="118:99"><name pos:start="118:13" pos:end="118:18">av_log</name><argument_list pos:start="118:19" pos:end="118:99">(<argument pos:start="118:20" pos:end="118:23"><expr pos:start="118:20" pos:end="118:23"><name pos:start="118:20" pos:end="118:23">NULL</name></expr></argument>, <argument pos:start="118:26" pos:end="118:37"><expr pos:start="118:26" pos:end="118:37"><name pos:start="118:26" pos:end="118:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="118:40" pos:end="118:83"><expr pos:start="118:40" pos:end="118:83"><literal type="string" pos:start="118:40" pos:end="118:83">"%d frame duplication too large, skipping\n"</literal></expr></argument>, <argument pos:start="118:86" pos:end="118:98"><expr pos:start="118:86" pos:end="118:98"><name pos:start="118:86" pos:end="118:94">nb_frames</name> <operator pos:start="118:96" pos:end="118:96">-</operator> <literal type="number" pos:start="118:98" pos:end="118:98">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="119:13" pos:end="119:29"><expr pos:start="119:13" pos:end="119:28"><name pos:start="119:13" pos:end="119:26">nb_frames_drop</name><operator pos:start="119:27" pos:end="119:28">++</operator></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="121:9" pos:end="121:97"><expr pos:start="121:9" pos:end="121:96"><name pos:start="121:9" pos:end="121:21">nb_frames_dup</name> <operator pos:start="121:23" pos:end="121:24">+=</operator> <name pos:start="121:26" pos:end="121:34">nb_frames</name> <operator pos:start="121:36" pos:end="121:36">-</operator> <operator pos:start="121:38" pos:end="121:38">(</operator><name pos:start="121:39" pos:end="121:48">nb0_frames</name> <operator pos:start="121:50" pos:end="121:51">&amp;&amp;</operator> <name pos:start="121:53" pos:end="121:68"><name pos:start="121:53" pos:end="121:55">ost</name><operator pos:start="121:56" pos:end="121:57">-&gt;</operator><name pos:start="121:58" pos:end="121:68">last_droped</name></name><operator pos:start="121:69" pos:end="121:69">)</operator> <operator pos:start="121:71" pos:end="121:71">-</operator> <operator pos:start="121:73" pos:end="121:73">(</operator><name pos:start="121:74" pos:end="121:82">nb_frames</name> <operator pos:start="121:84" pos:end="121:84">&gt;</operator> <name pos:start="121:86" pos:end="121:95">nb0_frames</name><operator pos:start="121:96" pos:end="121:96">)</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="122:9" pos:end="122:69"><expr pos:start="122:9" pos:end="122:68"><call pos:start="122:9" pos:end="122:68"><name pos:start="122:9" pos:end="122:14">av_log</name><argument_list pos:start="122:15" pos:end="122:68">(<argument pos:start="122:16" pos:end="122:19"><expr pos:start="122:16" pos:end="122:19"><name pos:start="122:16" pos:end="122:19">NULL</name></expr></argument>, <argument pos:start="122:22" pos:end="122:35"><expr pos:start="122:22" pos:end="122:35"><name pos:start="122:22" pos:end="122:35">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="122:38" pos:end="122:52"><expr pos:start="122:38" pos:end="122:52"><literal type="string" pos:start="122:38" pos:end="122:52">"*** %d dup!\n"</literal></expr></argument>, <argument pos:start="122:55" pos:end="122:67"><expr pos:start="122:55" pos:end="122:67"><name pos:start="122:55" pos:end="122:63">nb_frames</name> <operator pos:start="122:65" pos:end="122:65">-</operator> <literal type="number" pos:start="122:67" pos:end="122:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="124:5" pos:end="124:63"><expr pos:start="124:5" pos:end="124:62"><name pos:start="124:5" pos:end="124:20"><name pos:start="124:5" pos:end="124:7">ost</name><operator pos:start="124:8" pos:end="124:9">-&gt;</operator><name pos:start="124:10" pos:end="124:20">last_droped</name></name> <operator pos:start="124:22" pos:end="124:22">=</operator> <name pos:start="124:24" pos:end="124:32">nb_frames</name> <operator pos:start="124:34" pos:end="124:35">==</operator> <name pos:start="124:37" pos:end="124:46">nb0_frames</name> <operator pos:start="124:48" pos:end="124:49">&amp;&amp;</operator> <name pos:start="124:51" pos:end="124:62">next_picture</name></expr>;</expr_stmt>
  <comment type="block" pos:start="125:3" pos:end="125:34">/* duplicates frame if needed */</comment>
  <for pos:start="126:3" pos:end="249:3">for <control pos:start="126:7" pos:end="126:33">(<init pos:start="126:8" pos:end="126:13"><expr pos:start="126:8" pos:end="126:12"><name pos:start="126:8" pos:end="126:8">i</name> <operator pos:start="126:10" pos:end="126:10">=</operator> <literal type="number" pos:start="126:12" pos:end="126:12">0</literal></expr>;</init> <condition pos:start="126:15" pos:end="126:28"><expr pos:start="126:15" pos:end="126:27"><name pos:start="126:15" pos:end="126:15">i</name> <operator pos:start="126:17" pos:end="126:17">&lt;</operator> <name pos:start="126:19" pos:end="126:27">nb_frames</name></expr>;</condition> <incr pos:start="126:30" pos:end="126:32"><expr pos:start="126:30" pos:end="126:32"><name pos:start="126:30" pos:end="126:30">i</name><operator pos:start="126:31" pos:end="126:32">++</operator></expr></incr>)</control> <block pos:start="126:35" pos:end="249:3">{<block_content pos:start="127:5" pos:end="248:40">
    <decl_stmt pos:start="127:5" pos:end="127:24"><decl pos:start="127:5" pos:end="127:23"><type pos:start="127:5" pos:end="127:13"><name pos:start="127:5" pos:end="127:11">AVFrame</name> <modifier pos:start="127:13" pos:end="127:13">*</modifier></type><name pos:start="127:14" pos:end="127:23">in_picture</name></decl>;</decl_stmt>
    <expr_stmt pos:start="128:5" pos:end="128:25"><expr pos:start="128:5" pos:end="128:24"><call pos:start="128:5" pos:end="128:24"><name pos:start="128:5" pos:end="128:18">av_init_packet</name><argument_list pos:start="128:19" pos:end="128:24">(<argument pos:start="128:20" pos:end="128:23"><expr pos:start="128:20" pos:end="128:23"><operator pos:start="128:20" pos:end="128:20">&amp;</operator><name pos:start="128:21" pos:end="128:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="129:5" pos:end="129:20"><expr pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:12"><name pos:start="129:5" pos:end="129:7">pkt</name><operator pos:start="129:8" pos:end="129:8">.</operator><name pos:start="129:9" pos:end="129:12">data</name></name> <operator pos:start="129:14" pos:end="129:14">=</operator> <name pos:start="129:16" pos:end="129:19">NULL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="130:5" pos:end="130:17"><expr pos:start="130:5" pos:end="130:16"><name pos:start="130:5" pos:end="130:12"><name pos:start="130:5" pos:end="130:7">pkt</name><operator pos:start="130:8" pos:end="130:8">.</operator><name pos:start="130:9" pos:end="130:12">size</name></name> <operator pos:start="130:14" pos:end="130:14">=</operator> <literal type="number" pos:start="130:16" pos:end="130:16">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="131:5" pos:end="134:34"><if pos:start="131:5" pos:end="133:5">if <condition pos:start="131:8" pos:end="131:42">(<expr pos:start="131:9" pos:end="131:41"><name pos:start="131:9" pos:end="131:9">i</name> <operator pos:start="131:11" pos:end="131:11">&lt;</operator> <name pos:start="131:13" pos:end="131:22">nb0_frames</name> <operator pos:start="131:24" pos:end="131:25">&amp;&amp;</operator> <name pos:start="131:27" pos:end="131:41"><name pos:start="131:27" pos:end="131:29">ost</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:41">last_frame</name></name></expr>)</condition> <block pos:start="131:44" pos:end="133:5">{<block_content pos:start="132:9" pos:end="132:37">
        <expr_stmt pos:start="132:9" pos:end="132:37"><expr pos:start="132:9" pos:end="132:36"><name pos:start="132:9" pos:end="132:18">in_picture</name> <operator pos:start="132:20" pos:end="132:20">=</operator> <name pos:start="132:22" pos:end="132:36"><name pos:start="132:22" pos:end="132:24">ost</name><operator pos:start="132:25" pos:end="132:26">-&gt;</operator><name pos:start="132:27" pos:end="132:36">last_frame</name></name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="133:7" pos:end="134:34">else<block type="pseudo" pos:start="134:9" pos:end="134:34"><block_content pos:start="134:9" pos:end="134:34">
        <expr_stmt pos:start="134:9" pos:end="134:34"><expr pos:start="134:9" pos:end="134:33"><name pos:start="134:9" pos:end="134:18">in_picture</name> <operator pos:start="134:20" pos:end="134:20">=</operator> <name pos:start="134:22" pos:end="134:33">next_picture</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <expr_stmt pos:start="135:5" pos:end="137:0"><expr pos:start="135:5" pos:end="135:36"><name pos:start="135:5" pos:end="135:19"><name pos:start="135:5" pos:end="135:14">in_picture</name><operator pos:start="135:15" pos:end="135:16">-&gt;</operator><name pos:start="135:17" pos:end="135:19">pts</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:36"><name pos:start="135:23" pos:end="135:25">ost</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:36">sync_opts</name></name></expr>;</expr_stmt>
<cpp:if pos:start="136:1" pos:end="136:5">#<cpp:directive pos:start="136:2" pos:end="136:3">if</cpp:directive> <expr pos:start="136:5" pos:end="136:5"><literal type="number" pos:start="136:5" pos:end="136:5">1</literal></expr></cpp:if>
    <if_stmt pos:start="137:5" pos:end="239:5"><if pos:start="137:5" pos:end="239:5">if <condition pos:start="137:8" pos:end="139:0">(<expr pos:start="137:9" pos:end="137:34"><operator pos:start="137:9" pos:end="137:9">!</operator><call pos:start="137:10" pos:end="137:34"><name pos:start="137:10" pos:end="137:29">check_recording_time</name><argument_list pos:start="137:30" pos:end="137:34">(<argument pos:start="137:31" pos:end="137:33"><expr pos:start="137:31" pos:end="137:33"><name pos:start="137:31" pos:end="137:33">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="139:5" pos:end="239:5"><block_content pos:start="139:5" pos:end="239:5">
<cpp:else pos:start="138:1" pos:end="138:5">#<cpp:directive pos:start="138:2" pos:end="138:5">else</cpp:directive></cpp:else>
    <if_stmt pos:start="139:5" pos:end="239:5"><if pos:start="139:5" pos:end="239:5">if <condition pos:start="139:8" pos:end="141:0">(<expr pos:start="139:9" pos:end="139:44"><name pos:start="139:9" pos:end="139:25"><name pos:start="139:9" pos:end="139:11">ost</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:25">frame_number</name></name> <operator pos:start="139:27" pos:end="139:28">&gt;=</operator> <name pos:start="139:30" pos:end="139:44"><name pos:start="139:30" pos:end="139:32">ost</name><operator pos:start="139:33" pos:end="139:34">-&gt;</operator><name pos:start="139:35" pos:end="139:44">max_frames</name></name></expr>)</condition><block type="pseudo" pos:start="141:5" pos:end="239:5"><block_content pos:start="141:5" pos:end="239:5">
<cpp:endif pos:start="140:1" pos:end="140:6">#<cpp:directive pos:start="140:2" pos:end="140:6">endif</cpp:directive></cpp:endif>
    <if_stmt pos:start="141:5" pos:end="239:5"><if pos:start="141:5" pos:end="155:5">if <condition pos:start="141:8" pos:end="142:47">(<expr pos:start="141:9" pos:end="142:46"><name pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:18">oformat</name><operator pos:start="141:19" pos:end="141:20">-&gt;</operator><name pos:start="141:21" pos:end="141:25">flags</name></name> <operator pos:start="141:27" pos:end="141:27">&amp;</operator> <name pos:start="141:29" pos:end="141:44">AVFMT_RAWPICTURE</name> <operator pos:start="141:46" pos:end="141:47">&amp;&amp;</operator>
        <name pos:start="142:9" pos:end="142:22"><name pos:start="142:9" pos:end="142:11">enc</name><operator pos:start="142:12" pos:end="142:13">-&gt;</operator><name pos:start="142:14" pos:end="142:18">codec</name><operator pos:start="142:19" pos:end="142:20">-&gt;</operator><name pos:start="142:21" pos:end="142:22">id</name></name> <operator pos:start="142:24" pos:end="142:25">==</operator> <name pos:start="142:27" pos:end="142:46">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="142:49" pos:end="155:5">{<block_content pos:start="146:9" pos:end="154:34">
        <comment type="block" pos:start="143:9" pos:end="145:21">/* raw pictures are written as AVPicture structure to
           avoid any copies. We support temporarily the older
           method. */</comment>
        <if_stmt pos:start="146:9" pos:end="149:56"><if pos:start="146:9" pos:end="147:89">if <condition pos:start="146:12" pos:end="146:41">(<expr pos:start="146:13" pos:end="146:40"><name pos:start="146:13" pos:end="146:40"><name pos:start="146:13" pos:end="146:22">in_picture</name><operator pos:start="146:23" pos:end="146:24">-&gt;</operator><name pos:start="146:25" pos:end="146:40">interlaced_frame</name></name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:89"><block_content pos:start="147:13" pos:end="147:89">
            <expr_stmt pos:start="147:13" pos:end="147:89"><expr pos:start="147:13" pos:end="147:88"><name pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:19">mux_enc</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:32">field_order</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <ternary pos:start="147:36" pos:end="147:88"><condition pos:start="147:36" pos:end="147:64"><expr pos:start="147:36" pos:end="147:62"><name pos:start="147:36" pos:end="147:62"><name pos:start="147:36" pos:end="147:45">in_picture</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:62">top_field_first</name></name></expr> ?</condition><then pos:start="147:66" pos:end="147:76"> <expr pos:start="147:66" pos:end="147:76"><name pos:start="147:66" pos:end="147:76">AV_FIELD_TB</name></expr></then><else pos:start="147:77" pos:end="147:88">:<expr pos:start="147:78" pos:end="147:88"><name pos:start="147:78" pos:end="147:88">AV_FIELD_BT</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="148:9" pos:end="149:56">else<block type="pseudo" pos:start="149:13" pos:end="149:56"><block_content pos:start="149:13" pos:end="149:56">
            <expr_stmt pos:start="149:13" pos:end="149:56"><expr pos:start="149:13" pos:end="149:55"><name pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:19">mux_enc</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:32">field_order</name></name> <operator pos:start="149:34" pos:end="149:34">=</operator> <name pos:start="149:36" pos:end="149:55">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="150:9" pos:end="150:43"><expr pos:start="150:9" pos:end="150:42"><name pos:start="150:9" pos:end="150:16"><name pos:start="150:9" pos:end="150:11">pkt</name><operator pos:start="150:12" pos:end="150:12">.</operator><name pos:start="150:13" pos:end="150:16">data</name></name>   <operator pos:start="150:20" pos:end="150:20">=</operator> <operator pos:start="150:22" pos:end="150:22">(</operator><name pos:start="150:23" pos:end="150:29">uint8_t</name> <operator pos:start="150:31" pos:end="150:31">*</operator><operator pos:start="150:32" pos:end="150:32">)</operator><name pos:start="150:33" pos:end="150:42">in_picture</name></expr>;</expr_stmt>
        <expr_stmt pos:start="151:9" pos:end="151:40"><expr pos:start="151:9" pos:end="151:39"><name pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:11">pkt</name><operator pos:start="151:12" pos:end="151:12">.</operator><name pos:start="151:13" pos:end="151:16">size</name></name>   <operator pos:start="151:20" pos:end="151:20">=</operator>  <sizeof pos:start="151:23" pos:end="151:39">sizeof<argument_list pos:start="151:29" pos:end="151:39">(<argument pos:start="151:30" pos:end="151:38"><expr pos:start="151:30" pos:end="151:38"><name pos:start="151:30" pos:end="151:38">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
        <expr_stmt pos:start="152:9" pos:end="152:87"><expr pos:start="152:9" pos:end="152:86"><name pos:start="152:9" pos:end="152:15"><name pos:start="152:9" pos:end="152:11">pkt</name><operator pos:start="152:12" pos:end="152:12">.</operator><name pos:start="152:13" pos:end="152:15">pts</name></name>    <operator pos:start="152:20" pos:end="152:20">=</operator> <call pos:start="152:22" pos:end="152:86"><name pos:start="152:22" pos:end="152:33">av_rescale_q</name><argument_list pos:start="152:34" pos:end="152:86">(<argument pos:start="152:35" pos:end="152:49"><expr pos:start="152:35" pos:end="152:49"><name pos:start="152:35" pos:end="152:49"><name pos:start="152:35" pos:end="152:44">in_picture</name><operator pos:start="152:45" pos:end="152:46">-&gt;</operator><name pos:start="152:47" pos:end="152:49">pts</name></name></expr></argument>, <argument pos:start="152:52" pos:end="152:65"><expr pos:start="152:52" pos:end="152:65"><name pos:start="152:52" pos:end="152:65"><name pos:start="152:52" pos:end="152:54">enc</name><operator pos:start="152:55" pos:end="152:56">-&gt;</operator><name pos:start="152:57" pos:end="152:65">time_base</name></name></expr></argument>, <argument pos:start="152:68" pos:end="152:85"><expr pos:start="152:68" pos:end="152:85"><name pos:start="152:68" pos:end="152:85"><name pos:start="152:68" pos:end="152:70">ost</name><operator pos:start="152:71" pos:end="152:72">-&gt;</operator><name pos:start="152:73" pos:end="152:74">st</name><operator pos:start="152:75" pos:end="152:76">-&gt;</operator><name pos:start="152:77" pos:end="152:85">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="153:9" pos:end="153:37"><expr pos:start="153:9" pos:end="153:36"><name pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:11">pkt</name><operator pos:start="153:12" pos:end="153:12">.</operator><name pos:start="153:13" pos:end="153:17">flags</name></name> <operator pos:start="153:19" pos:end="153:20">|=</operator> <name pos:start="153:22" pos:end="153:36">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>
        <expr_stmt pos:start="154:9" pos:end="154:34"><expr pos:start="154:9" pos:end="154:33"><call pos:start="154:9" pos:end="154:33"><name pos:start="154:9" pos:end="154:19">write_frame</name><argument_list pos:start="154:20" pos:end="154:33">(<argument pos:start="154:21" pos:end="154:21"><expr pos:start="154:21" pos:end="154:21"><name pos:start="154:21" pos:end="154:21">s</name></expr></argument>, <argument pos:start="154:24" pos:end="154:27"><expr pos:start="154:24" pos:end="154:27"><operator pos:start="154:24" pos:end="154:24">&amp;</operator><name pos:start="154:25" pos:end="154:27">pkt</name></expr></argument>, <argument pos:start="154:30" pos:end="154:32"><expr pos:start="154:30" pos:end="154:32"><name pos:start="154:30" pos:end="154:32">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="155:7" pos:end="239:5">else <block pos:start="155:12" pos:end="239:5">{<block_content pos:start="156:9" pos:end="238:9">
        <decl_stmt pos:start="156:9" pos:end="156:44"><decl pos:start="156:9" pos:end="156:22"><type pos:start="156:9" pos:end="156:11"><name pos:start="156:9" pos:end="156:11">int</name></type> <name pos:start="156:13" pos:end="156:22">got_packet</name></decl>, <decl pos:start="156:25" pos:end="156:43"><type ref="prev" pos:start="156:9" pos:end="156:11"/><name pos:start="156:25" pos:end="156:39">forced_keyframe</name> <init pos:start="156:41" pos:end="156:43">= <expr pos:start="156:43" pos:end="156:43"><literal type="number" pos:start="156:43" pos:end="156:43">0</literal></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="157:9" pos:end="157:24"><decl pos:start="157:9" pos:end="157:23"><type pos:start="157:9" pos:end="157:14"><name pos:start="157:9" pos:end="157:14">double</name></type> <name pos:start="157:16" pos:end="157:23">pts_time</name></decl>;</decl_stmt>
        <if_stmt pos:start="158:9" pos:end="160:65"><if pos:start="158:9" pos:end="160:65">if <condition pos:start="158:12" pos:end="159:38">(<expr pos:start="158:13" pos:end="159:37"><name pos:start="158:13" pos:end="158:22"><name pos:start="158:13" pos:end="158:15">enc</name><operator pos:start="158:16" pos:end="158:17">-&gt;</operator><name pos:start="158:18" pos:end="158:22">flags</name></name> <operator pos:start="158:24" pos:end="158:24">&amp;</operator> <operator pos:start="158:26" pos:end="158:26">(</operator><name pos:start="158:27" pos:end="158:51">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="158:52" pos:end="158:52">|</operator><name pos:start="158:53" pos:end="158:76">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="158:77" pos:end="158:77">)</operator> <operator pos:start="158:79" pos:end="158:80">&amp;&amp;</operator>
            <name pos:start="159:13" pos:end="159:32"><name pos:start="159:13" pos:end="159:15">ost</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:32">top_field_first</name></name> <operator pos:start="159:34" pos:end="159:35">&gt;=</operator> <literal type="number" pos:start="159:37" pos:end="159:37">0</literal></expr>)</condition><block type="pseudo" pos:start="160:13" pos:end="160:65"><block_content pos:start="160:13" pos:end="160:65">
            <expr_stmt pos:start="160:13" pos:end="160:65"><expr pos:start="160:13" pos:end="160:64"><name pos:start="160:13" pos:end="160:39"><name pos:start="160:13" pos:end="160:22">in_picture</name><operator pos:start="160:23" pos:end="160:24">-&gt;</operator><name pos:start="160:25" pos:end="160:39">top_field_first</name></name> <operator pos:start="160:41" pos:end="160:41">=</operator> <operator pos:start="160:43" pos:end="160:43">!</operator><operator pos:start="160:44" pos:end="160:44">!</operator><name pos:start="160:45" pos:end="160:64"><name pos:start="160:45" pos:end="160:47">ost</name><operator pos:start="160:48" pos:end="160:49">-&gt;</operator><name pos:start="160:50" pos:end="160:64">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <if_stmt pos:start="161:9" pos:end="167:56"><if pos:start="161:9" pos:end="166:9">if <condition pos:start="161:12" pos:end="161:41">(<expr pos:start="161:13" pos:end="161:40"><name pos:start="161:13" pos:end="161:40"><name pos:start="161:13" pos:end="161:22">in_picture</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:40">interlaced_frame</name></name></expr>)</condition> <block pos:start="161:43" pos:end="166:9">{<block_content pos:start="162:13" pos:end="165:93">
            <if_stmt pos:start="162:13" pos:end="165:93"><if pos:start="162:13" pos:end="163:93">if <condition pos:start="162:16" pos:end="162:52">(<expr pos:start="162:17" pos:end="162:51"><name pos:start="162:17" pos:end="162:30"><name pos:start="162:17" pos:end="162:19">enc</name><operator pos:start="162:20" pos:end="162:21">-&gt;</operator><name pos:start="162:22" pos:end="162:26">codec</name><operator pos:start="162:27" pos:end="162:28">-&gt;</operator><name pos:start="162:29" pos:end="162:30">id</name></name> <operator pos:start="162:32" pos:end="162:33">==</operator> <name pos:start="162:35" pos:end="162:51">AV_CODEC_ID_MJPEG</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:93"><block_content pos:start="163:17" pos:end="163:93">
                <expr_stmt pos:start="163:17" pos:end="163:93"><expr pos:start="163:17" pos:end="163:92"><name pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:23">mux_enc</name><operator pos:start="163:24" pos:end="163:25">-&gt;</operator><name pos:start="163:26" pos:end="163:36">field_order</name></name> <operator pos:start="163:38" pos:end="163:38">=</operator> <ternary pos:start="163:40" pos:end="163:92"><condition pos:start="163:40" pos:end="163:68"><expr pos:start="163:40" pos:end="163:66"><name pos:start="163:40" pos:end="163:66"><name pos:start="163:40" pos:end="163:49">in_picture</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:66">top_field_first</name></name></expr> ?</condition><then pos:start="163:70" pos:end="163:80"> <expr pos:start="163:70" pos:end="163:80"><name pos:start="163:70" pos:end="163:80">AV_FIELD_TT</name></expr></then><else pos:start="163:81" pos:end="163:92">:<expr pos:start="163:82" pos:end="163:92"><name pos:start="163:82" pos:end="163:92">AV_FIELD_BB</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></if>
            <else pos:start="164:13" pos:end="165:93">else<block type="pseudo" pos:start="165:17" pos:end="165:93"><block_content pos:start="165:17" pos:end="165:93">
                <expr_stmt pos:start="165:17" pos:end="165:93"><expr pos:start="165:17" pos:end="165:92"><name pos:start="165:17" pos:end="165:36"><name pos:start="165:17" pos:end="165:23">mux_enc</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:36">field_order</name></name> <operator pos:start="165:38" pos:end="165:38">=</operator> <ternary pos:start="165:40" pos:end="165:92"><condition pos:start="165:40" pos:end="165:68"><expr pos:start="165:40" pos:end="165:66"><name pos:start="165:40" pos:end="165:66"><name pos:start="165:40" pos:end="165:49">in_picture</name><operator pos:start="165:50" pos:end="165:51">-&gt;</operator><name pos:start="165:52" pos:end="165:66">top_field_first</name></name></expr> ?</condition><then pos:start="165:70" pos:end="165:80"> <expr pos:start="165:70" pos:end="165:80"><name pos:start="165:70" pos:end="165:80">AV_FIELD_TB</name></expr></then><else pos:start="165:81" pos:end="165:92">:<expr pos:start="165:82" pos:end="165:92"><name pos:start="165:82" pos:end="165:92">AV_FIELD_BT</name></expr></else></ternary></expr>;</expr_stmt></block_content></block></else></if_stmt>
        </block_content>}</block></if> <else pos:start="166:11" pos:end="167:56">else<block type="pseudo" pos:start="167:13" pos:end="167:56"><block_content pos:start="167:13" pos:end="167:56">
            <expr_stmt pos:start="167:13" pos:end="167:56"><expr pos:start="167:13" pos:end="167:55"><name pos:start="167:13" pos:end="167:32"><name pos:start="167:13" pos:end="167:19">mux_enc</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:32">field_order</name></name> <operator pos:start="167:34" pos:end="167:34">=</operator> <name pos:start="167:36" pos:end="167:55">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
        <expr_stmt pos:start="168:9" pos:end="168:50"><expr pos:start="168:9" pos:end="168:49"><name pos:start="168:9" pos:end="168:27"><name pos:start="168:9" pos:end="168:18">in_picture</name><operator pos:start="168:19" pos:end="168:20">-&gt;</operator><name pos:start="168:21" pos:end="168:27">quality</name></name> <operator pos:start="168:29" pos:end="168:29">=</operator> <name pos:start="168:31" pos:end="168:49"><name pos:start="168:31" pos:end="168:33">enc</name><operator pos:start="168:34" pos:end="168:35">-&gt;</operator><name pos:start="168:36" pos:end="168:49">global_quality</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="169:9" pos:end="169:34"><expr pos:start="169:9" pos:end="169:33"><name pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:18">in_picture</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:29">pict_type</name></name> <operator pos:start="169:31" pos:end="169:31">=</operator> <literal type="number" pos:start="169:33" pos:end="169:33">0</literal></expr>;</expr_stmt>
        <expr_stmt pos:start="170:9" pos:end="171:59"><expr pos:start="170:9" pos:end="171:58"><name pos:start="170:9" pos:end="170:16">pts_time</name> <operator pos:start="170:18" pos:end="170:18">=</operator> <ternary pos:start="170:20" pos:end="171:58"><condition pos:start="170:20" pos:end="170:54"><expr pos:start="170:20" pos:end="170:52"><name pos:start="170:20" pos:end="170:34"><name pos:start="170:20" pos:end="170:29">in_picture</name><operator pos:start="170:30" pos:end="170:31">-&gt;</operator><name pos:start="170:32" pos:end="170:34">pts</name></name> <operator pos:start="170:36" pos:end="170:37">!=</operator> <name pos:start="170:39" pos:end="170:52">AV_NOPTS_VALUE</name></expr> ?</condition><then pos:start="171:13" pos:end="171:52">
            <expr pos:start="171:13" pos:end="171:52"><name pos:start="171:13" pos:end="171:27"><name pos:start="171:13" pos:end="171:22">in_picture</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:27">pts</name></name> <operator pos:start="171:29" pos:end="171:29">*</operator> <call pos:start="171:31" pos:end="171:52"><name pos:start="171:31" pos:end="171:36">av_q2d</name><argument_list pos:start="171:37" pos:end="171:52">(<argument pos:start="171:38" pos:end="171:51"><expr pos:start="171:38" pos:end="171:51"><name pos:start="171:38" pos:end="171:51"><name pos:start="171:38" pos:end="171:40">enc</name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:51">time_base</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="171:54" pos:end="171:58">: <expr pos:start="171:56" pos:end="171:58"><name pos:start="171:56" pos:end="171:58">NAN</name></expr></else></ternary></expr>;</expr_stmt>
        <if_stmt pos:start="172:9" pos:end="197:9"><if pos:start="172:9" pos:end="176:9">if <condition pos:start="172:12" pos:end="173:72">(<expr pos:start="172:13" pos:end="173:71"><name pos:start="172:13" pos:end="172:32"><name pos:start="172:13" pos:end="172:15">ost</name><operator pos:start="172:16" pos:end="172:17">-&gt;</operator><name pos:start="172:18" pos:end="172:32">forced_kf_index</name></name> <operator pos:start="172:34" pos:end="172:34">&lt;</operator> <name pos:start="172:36" pos:end="172:55"><name pos:start="172:36" pos:end="172:38">ost</name><operator pos:start="172:39" pos:end="172:40">-&gt;</operator><name pos:start="172:41" pos:end="172:55">forced_kf_count</name></name> <operator pos:start="172:57" pos:end="172:58">&amp;&amp;</operator>
            <name pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:22">in_picture</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:27">pts</name></name> <operator pos:start="173:29" pos:end="173:30">&gt;=</operator> <name pos:start="173:32" pos:end="173:71"><name pos:start="173:32" pos:end="173:34">ost</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:49">forced_kf_pts</name><index pos:start="173:50" pos:end="173:71">[<expr pos:start="173:51" pos:end="173:70"><name pos:start="173:51" pos:end="173:70"><name pos:start="173:51" pos:end="173:53">ost</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:70">forced_kf_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="173:74" pos:end="176:9">{<block_content pos:start="174:13" pos:end="175:32">
            <expr_stmt pos:start="174:13" pos:end="174:35"><expr pos:start="174:13" pos:end="174:34"><name pos:start="174:13" pos:end="174:32"><name pos:start="174:13" pos:end="174:15">ost</name><operator pos:start="174:16" pos:end="174:17">-&gt;</operator><name pos:start="174:18" pos:end="174:32">forced_kf_index</name></name><operator pos:start="174:33" pos:end="174:34">++</operator></expr>;</expr_stmt>
            <expr_stmt pos:start="175:13" pos:end="175:32"><expr pos:start="175:13" pos:end="175:31"><name pos:start="175:13" pos:end="175:27">forced_keyframe</name> <operator pos:start="175:29" pos:end="175:29">=</operator> <literal type="number" pos:start="175:31" pos:end="175:31">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="176:11" pos:end="197:9">else if <condition pos:start="176:19" pos:end="176:47">(<expr pos:start="176:20" pos:end="176:46"><name pos:start="176:20" pos:end="176:46"><name pos:start="176:20" pos:end="176:22">ost</name><operator pos:start="176:23" pos:end="176:24">-&gt;</operator><name pos:start="176:25" pos:end="176:46">forced_keyframes_pexpr</name></name></expr>)</condition> <block pos:start="176:49" pos:end="197:9">{<block_content pos:start="177:13" pos:end="196:64">
            <decl_stmt pos:start="177:13" pos:end="177:23"><decl pos:start="177:13" pos:end="177:22"><type pos:start="177:13" pos:end="177:18"><name pos:start="177:13" pos:end="177:18">double</name></type> <name pos:start="177:20" pos:end="177:22">res</name></decl>;</decl_stmt>
            <expr_stmt pos:start="178:13" pos:end="178:70"><expr pos:start="178:13" pos:end="178:69"><name pos:start="178:13" pos:end="178:58"><name pos:start="178:13" pos:end="178:15">ost</name><operator pos:start="178:16" pos:end="178:17">-&gt;</operator><name pos:start="178:18" pos:end="178:51">forced_keyframes_expr_const_values</name><index pos:start="178:52" pos:end="178:58">[<expr pos:start="178:53" pos:end="178:57"><name pos:start="178:53" pos:end="178:57">FKF_T</name></expr>]</index></name> <operator pos:start="178:60" pos:end="178:60">=</operator> <name pos:start="178:62" pos:end="178:69">pts_time</name></expr>;</expr_stmt>
            <expr_stmt pos:start="179:13" pos:end="180:78"><expr pos:start="179:13" pos:end="180:77"><name pos:start="179:13" pos:end="179:15">res</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <call pos:start="179:19" pos:end="180:77"><name pos:start="179:19" pos:end="179:30">av_expr_eval</name><argument_list pos:start="179:31" pos:end="180:77">(<argument pos:start="179:32" pos:end="179:58"><expr pos:start="179:32" pos:end="179:58"><name pos:start="179:32" pos:end="179:58"><name pos:start="179:32" pos:end="179:34">ost</name><operator pos:start="179:35" pos:end="179:36">-&gt;</operator><name pos:start="179:37" pos:end="179:58">forced_keyframes_pexpr</name></name></expr></argument>,
                               <argument pos:start="180:32" pos:end="180:70"><expr pos:start="180:32" pos:end="180:70"><name pos:start="180:32" pos:end="180:70"><name pos:start="180:32" pos:end="180:34">ost</name><operator pos:start="180:35" pos:end="180:36">-&gt;</operator><name pos:start="180:37" pos:end="180:70">forced_keyframes_expr_const_values</name></name></expr></argument>, <argument pos:start="180:73" pos:end="180:76"><expr pos:start="180:73" pos:end="180:76"><name pos:start="180:73" pos:end="180:76">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="181:13" pos:end="187:25"><expr pos:start="181:13" pos:end="187:24"><call pos:start="181:13" pos:end="187:24"><name pos:start="181:13" pos:end="181:19">av_dlog</name><argument_list pos:start="181:20" pos:end="187:24">(<argument pos:start="181:21" pos:end="181:24"><expr pos:start="181:21" pos:end="181:24"><name pos:start="181:21" pos:end="181:24">NULL</name></expr></argument>, <argument pos:start="181:27" pos:end="181:112"><expr pos:start="181:27" pos:end="181:112"><literal type="string" pos:start="181:27" pos:end="181:112">"force_key_frame: n:%f n_forced:%f prev_forced_n:%f t:%f prev_forced_t:%f -&gt; res:%f\n"</literal></expr></argument>,
                    <argument pos:start="182:21" pos:end="182:66"><expr pos:start="182:21" pos:end="182:66"><name pos:start="182:21" pos:end="182:66"><name pos:start="182:21" pos:end="182:23">ost</name><operator pos:start="182:24" pos:end="182:25">-&gt;</operator><name pos:start="182:26" pos:end="182:59">forced_keyframes_expr_const_values</name><index pos:start="182:60" pos:end="182:66">[<expr pos:start="182:61" pos:end="182:65"><name pos:start="182:61" pos:end="182:65">FKF_N</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="183:21" pos:end="183:73"><expr pos:start="183:21" pos:end="183:73"><name pos:start="183:21" pos:end="183:73"><name pos:start="183:21" pos:end="183:23">ost</name><operator pos:start="183:24" pos:end="183:25">-&gt;</operator><name pos:start="183:26" pos:end="183:59">forced_keyframes_expr_const_values</name><index pos:start="183:60" pos:end="183:73">[<expr pos:start="183:61" pos:end="183:72"><name pos:start="183:61" pos:end="183:72">FKF_N_FORCED</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="184:21" pos:end="184:78"><expr pos:start="184:21" pos:end="184:78"><name pos:start="184:21" pos:end="184:78"><name pos:start="184:21" pos:end="184:23">ost</name><operator pos:start="184:24" pos:end="184:25">-&gt;</operator><name pos:start="184:26" pos:end="184:59">forced_keyframes_expr_const_values</name><index pos:start="184:60" pos:end="184:78">[<expr pos:start="184:61" pos:end="184:77"><name pos:start="184:61" pos:end="184:77">FKF_PREV_FORCED_N</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="185:21" pos:end="185:66"><expr pos:start="185:21" pos:end="185:66"><name pos:start="185:21" pos:end="185:66"><name pos:start="185:21" pos:end="185:23">ost</name><operator pos:start="185:24" pos:end="185:25">-&gt;</operator><name pos:start="185:26" pos:end="185:59">forced_keyframes_expr_const_values</name><index pos:start="185:60" pos:end="185:66">[<expr pos:start="185:61" pos:end="185:65"><name pos:start="185:61" pos:end="185:65">FKF_T</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="186:21" pos:end="186:78"><expr pos:start="186:21" pos:end="186:78"><name pos:start="186:21" pos:end="186:78"><name pos:start="186:21" pos:end="186:23">ost</name><operator pos:start="186:24" pos:end="186:25">-&gt;</operator><name pos:start="186:26" pos:end="186:59">forced_keyframes_expr_const_values</name><index pos:start="186:60" pos:end="186:78">[<expr pos:start="186:61" pos:end="186:77"><name pos:start="186:61" pos:end="186:77">FKF_PREV_FORCED_T</name></expr>]</index></name></expr></argument>,
                    <argument pos:start="187:21" pos:end="187:23"><expr pos:start="187:21" pos:end="187:23"><name pos:start="187:21" pos:end="187:23">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="188:13" pos:end="195:13"><if pos:start="188:13" pos:end="195:13">if <condition pos:start="188:16" pos:end="188:20">(<expr pos:start="188:17" pos:end="188:19"><name pos:start="188:17" pos:end="188:19">res</name></expr>)</condition> <block pos:start="188:22" pos:end="195:13">{<block_content pos:start="189:17" pos:end="194:75">
                <expr_stmt pos:start="189:17" pos:end="189:36"><expr pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:31">forced_keyframe</name> <operator pos:start="189:33" pos:end="189:33">=</operator> <literal type="number" pos:start="189:35" pos:end="189:35">1</literal></expr>;</expr_stmt>
                <expr_stmt pos:start="190:17" pos:end="191:67"><expr pos:start="190:17" pos:end="191:66"><name pos:start="190:17" pos:end="190:74"><name pos:start="190:17" pos:end="190:19">ost</name><operator pos:start="190:20" pos:end="190:21">-&gt;</operator><name pos:start="190:22" pos:end="190:55">forced_keyframes_expr_const_values</name><index pos:start="190:56" pos:end="190:74">[<expr pos:start="190:57" pos:end="190:73"><name pos:start="190:57" pos:end="190:73">FKF_PREV_FORCED_N</name></expr>]</index></name> <operator pos:start="190:76" pos:end="190:76">=</operator>
                    <name pos:start="191:21" pos:end="191:66"><name pos:start="191:21" pos:end="191:23">ost</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:59">forced_keyframes_expr_const_values</name><index pos:start="191:60" pos:end="191:66">[<expr pos:start="191:61" pos:end="191:65"><name pos:start="191:61" pos:end="191:65">FKF_N</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="192:17" pos:end="193:67"><expr pos:start="192:17" pos:end="193:66"><name pos:start="192:17" pos:end="192:74"><name pos:start="192:17" pos:end="192:19">ost</name><operator pos:start="192:20" pos:end="192:21">-&gt;</operator><name pos:start="192:22" pos:end="192:55">forced_keyframes_expr_const_values</name><index pos:start="192:56" pos:end="192:74">[<expr pos:start="192:57" pos:end="192:73"><name pos:start="192:57" pos:end="192:73">FKF_PREV_FORCED_T</name></expr>]</index></name> <operator pos:start="192:76" pos:end="192:76">=</operator>
                    <name pos:start="193:21" pos:end="193:66"><name pos:start="193:21" pos:end="193:23">ost</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:59">forced_keyframes_expr_const_values</name><index pos:start="193:60" pos:end="193:66">[<expr pos:start="193:61" pos:end="193:65"><name pos:start="193:61" pos:end="193:65">FKF_T</name></expr>]</index></name></expr>;</expr_stmt>
                <expr_stmt pos:start="194:17" pos:end="194:75"><expr pos:start="194:17" pos:end="194:74"><name pos:start="194:17" pos:end="194:69"><name pos:start="194:17" pos:end="194:19">ost</name><operator pos:start="194:20" pos:end="194:21">-&gt;</operator><name pos:start="194:22" pos:end="194:55">forced_keyframes_expr_const_values</name><index pos:start="194:56" pos:end="194:69">[<expr pos:start="194:57" pos:end="194:68"><name pos:start="194:57" pos:end="194:68">FKF_N_FORCED</name></expr>]</index></name> <operator pos:start="194:71" pos:end="194:72">+=</operator> <literal type="number" pos:start="194:74" pos:end="194:74">1</literal></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="196:13" pos:end="196:64"><expr pos:start="196:13" pos:end="196:63"><name pos:start="196:13" pos:end="196:58"><name pos:start="196:13" pos:end="196:15">ost</name><operator pos:start="196:16" pos:end="196:17">-&gt;</operator><name pos:start="196:18" pos:end="196:51">forced_keyframes_expr_const_values</name><index pos:start="196:52" pos:end="196:58">[<expr pos:start="196:53" pos:end="196:57"><name pos:start="196:53" pos:end="196:57">FKF_N</name></expr>]</index></name> <operator pos:start="196:60" pos:end="196:61">+=</operator> <literal type="number" pos:start="196:63" pos:end="196:63">1</literal></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="198:9" pos:end="201:9"><if pos:start="198:9" pos:end="201:9">if <condition pos:start="198:12" pos:end="198:28">(<expr pos:start="198:13" pos:end="198:27"><name pos:start="198:13" pos:end="198:27">forced_keyframe</name></expr>)</condition> <block pos:start="198:30" pos:end="201:9">{<block_content pos:start="199:13" pos:end="200:81">
            <expr_stmt pos:start="199:13" pos:end="199:54"><expr pos:start="199:13" pos:end="199:53"><name pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:22">in_picture</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:33">pict_type</name></name> <operator pos:start="199:35" pos:end="199:35">=</operator> <name pos:start="199:37" pos:end="199:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>
            <expr_stmt pos:start="200:13" pos:end="200:81"><expr pos:start="200:13" pos:end="200:80"><call pos:start="200:13" pos:end="200:80"><name pos:start="200:13" pos:end="200:18">av_log</name><argument_list pos:start="200:19" pos:end="200:80">(<argument pos:start="200:20" pos:end="200:23"><expr pos:start="200:20" pos:end="200:23"><name pos:start="200:20" pos:end="200:23">NULL</name></expr></argument>, <argument pos:start="200:26" pos:end="200:37"><expr pos:start="200:26" pos:end="200:37"><name pos:start="200:26" pos:end="200:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="200:40" pos:end="200:69"><expr pos:start="200:40" pos:end="200:69"><literal type="string" pos:start="200:40" pos:end="200:69">"Forced keyframe at time %f\n"</literal></expr></argument>, <argument pos:start="200:72" pos:end="200:79"><expr pos:start="200:72" pos:end="200:79"><name pos:start="200:72" pos:end="200:79">pts_time</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="202:9" pos:end="202:31"><expr pos:start="202:9" pos:end="202:30"><call pos:start="202:9" pos:end="202:30"><name pos:start="202:9" pos:end="202:24">update_benchmark</name><argument_list pos:start="202:25" pos:end="202:30">(<argument pos:start="202:26" pos:end="202:29"><expr pos:start="202:26" pos:end="202:29"><name pos:start="202:26" pos:end="202:29">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="203:9" pos:end="208:9"><if pos:start="203:9" pos:end="208:9">if <condition pos:start="203:12" pos:end="203:21">(<expr pos:start="203:13" pos:end="203:20"><name pos:start="203:13" pos:end="203:20">debug_ts</name></expr>)</condition> <block pos:start="203:23" pos:end="208:9">{<block_content pos:start="204:13" pos:end="207:59">
            <expr_stmt pos:start="204:13" pos:end="207:59"><expr pos:start="204:13" pos:end="207:58"><call pos:start="204:13" pos:end="207:58"><name pos:start="204:13" pos:end="204:18">av_log</name><argument_list pos:start="204:19" pos:end="207:58">(<argument pos:start="204:20" pos:end="204:23"><expr pos:start="204:20" pos:end="204:23"><name pos:start="204:20" pos:end="204:23">NULL</name></expr></argument>, <argument pos:start="204:26" pos:end="204:36"><expr pos:start="204:26" pos:end="204:36"><name pos:start="204:26" pos:end="204:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="204:39" pos:end="205:69"><expr pos:start="204:39" pos:end="205:69"><literal type="string" pos:start="204:39" pos:end="204:62">"encoder &lt;- type:video "</literal>
                   <literal type="string" pos:start="205:20" pos:end="205:69">"frame_pts:%s frame_pts_time:%s time_base:%d/%d\n"</literal></expr></argument>,
                   <argument pos:start="206:20" pos:end="206:45"><expr pos:start="206:20" pos:end="206:45"><call pos:start="206:20" pos:end="206:45"><name pos:start="206:20" pos:end="206:28">av_ts2str</name><argument_list pos:start="206:29" pos:end="206:45">(<argument pos:start="206:30" pos:end="206:44"><expr pos:start="206:30" pos:end="206:44"><name pos:start="206:30" pos:end="206:44"><name pos:start="206:30" pos:end="206:39">in_picture</name><operator pos:start="206:40" pos:end="206:41">-&gt;</operator><name pos:start="206:42" pos:end="206:44">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="206:48" pos:end="206:94"><expr pos:start="206:48" pos:end="206:94"><call pos:start="206:48" pos:end="206:94"><name pos:start="206:48" pos:end="206:60">av_ts2timestr</name><argument_list pos:start="206:61" pos:end="206:94">(<argument pos:start="206:62" pos:end="206:76"><expr pos:start="206:62" pos:end="206:76"><name pos:start="206:62" pos:end="206:76"><name pos:start="206:62" pos:end="206:71">in_picture</name><operator pos:start="206:72" pos:end="206:73">-&gt;</operator><name pos:start="206:74" pos:end="206:76">pts</name></name></expr></argument>, <argument pos:start="206:79" pos:end="206:93"><expr pos:start="206:79" pos:end="206:93"><operator pos:start="206:79" pos:end="206:79">&amp;</operator><name pos:start="206:80" pos:end="206:93"><name pos:start="206:80" pos:end="206:82">enc</name><operator pos:start="206:83" pos:end="206:84">-&gt;</operator><name pos:start="206:85" pos:end="206:93">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,
                   <argument pos:start="207:20" pos:end="207:37"><expr pos:start="207:20" pos:end="207:37"><name pos:start="207:20" pos:end="207:37"><name pos:start="207:20" pos:end="207:22">enc</name><operator pos:start="207:23" pos:end="207:24">-&gt;</operator><name pos:start="207:25" pos:end="207:33">time_base</name><operator pos:start="207:34" pos:end="207:34">.</operator><name pos:start="207:35" pos:end="207:37">num</name></name></expr></argument>, <argument pos:start="207:40" pos:end="207:57"><expr pos:start="207:40" pos:end="207:57"><name pos:start="207:40" pos:end="207:57"><name pos:start="207:40" pos:end="207:42">enc</name><operator pos:start="207:43" pos:end="207:44">-&gt;</operator><name pos:start="207:45" pos:end="207:53">time_base</name><operator pos:start="207:54" pos:end="207:54">.</operator><name pos:start="207:55" pos:end="207:57">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="209:9" pos:end="209:30"><expr pos:start="209:9" pos:end="209:29"><name pos:start="209:9" pos:end="209:27"><name pos:start="209:9" pos:end="209:11">ost</name><operator pos:start="209:12" pos:end="209:13">-&gt;</operator><name pos:start="209:14" pos:end="209:27">frames_encoded</name></name><operator pos:start="209:28" pos:end="209:29">++</operator></expr>;</expr_stmt>
        <expr_stmt pos:start="210:9" pos:end="210:72"><expr pos:start="210:9" pos:end="210:71"><name pos:start="210:9" pos:end="210:11">ret</name> <operator pos:start="210:13" pos:end="210:13">=</operator> <call pos:start="210:15" pos:end="210:71"><name pos:start="210:15" pos:end="210:35">avcodec_encode_video2</name><argument_list pos:start="210:36" pos:end="210:71">(<argument pos:start="210:37" pos:end="210:39"><expr pos:start="210:37" pos:end="210:39"><name pos:start="210:37" pos:end="210:39">enc</name></expr></argument>, <argument pos:start="210:42" pos:end="210:45"><expr pos:start="210:42" pos:end="210:45"><operator pos:start="210:42" pos:end="210:42">&amp;</operator><name pos:start="210:43" pos:end="210:45">pkt</name></expr></argument>, <argument pos:start="210:48" pos:end="210:57"><expr pos:start="210:48" pos:end="210:57"><name pos:start="210:48" pos:end="210:57">in_picture</name></expr></argument>, <argument pos:start="210:60" pos:end="210:70"><expr pos:start="210:60" pos:end="210:70"><operator pos:start="210:60" pos:end="210:60">&amp;</operator><name pos:start="210:61" pos:end="210:70">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="211:9" pos:end="211:76"><expr pos:start="211:9" pos:end="211:75"><call pos:start="211:9" pos:end="211:75"><name pos:start="211:9" pos:end="211:24">update_benchmark</name><argument_list pos:start="211:25" pos:end="211:75">(<argument pos:start="211:26" pos:end="211:45"><expr pos:start="211:26" pos:end="211:45"><literal type="string" pos:start="211:26" pos:end="211:45">"encode_video %d.%d"</literal></expr></argument>, <argument pos:start="211:48" pos:end="211:62"><expr pos:start="211:48" pos:end="211:62"><name pos:start="211:48" pos:end="211:62"><name pos:start="211:48" pos:end="211:50">ost</name><operator pos:start="211:51" pos:end="211:52">-&gt;</operator><name pos:start="211:53" pos:end="211:62">file_index</name></name></expr></argument>, <argument pos:start="211:65" pos:end="211:74"><expr pos:start="211:65" pos:end="211:74"><name pos:start="211:65" pos:end="211:74"><name pos:start="211:65" pos:end="211:67">ost</name><operator pos:start="211:68" pos:end="211:69">-&gt;</operator><name pos:start="211:70" pos:end="211:74">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="212:9" pos:end="215:9"><if pos:start="212:9" pos:end="215:9">if <condition pos:start="212:12" pos:end="212:20">(<expr pos:start="212:13" pos:end="212:19"><name pos:start="212:13" pos:end="212:15">ret</name> <operator pos:start="212:17" pos:end="212:17">&lt;</operator> <literal type="number" pos:start="212:19" pos:end="212:19">0</literal></expr>)</condition> <block pos:start="212:22" pos:end="215:9">{<block_content pos:start="213:13" pos:end="214:28">
            <expr_stmt pos:start="213:13" pos:end="213:66"><expr pos:start="213:13" pos:end="213:65"><call pos:start="213:13" pos:end="213:65"><name pos:start="213:13" pos:end="213:18">av_log</name><argument_list pos:start="213:19" pos:end="213:65">(<argument pos:start="213:20" pos:end="213:23"><expr pos:start="213:20" pos:end="213:23"><name pos:start="213:20" pos:end="213:23">NULL</name></expr></argument>, <argument pos:start="213:26" pos:end="213:37"><expr pos:start="213:26" pos:end="213:37"><name pos:start="213:26" pos:end="213:37">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="213:40" pos:end="213:64"><expr pos:start="213:40" pos:end="213:64"><literal type="string" pos:start="213:40" pos:end="213:64">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="214:13" pos:end="214:28"><expr pos:start="214:13" pos:end="214:27"><call pos:start="214:13" pos:end="214:27"><name pos:start="214:13" pos:end="214:24">exit_program</name><argument_list pos:start="214:25" pos:end="214:27">(<argument pos:start="214:26" pos:end="214:26"><expr pos:start="214:26" pos:end="214:26"><literal type="number" pos:start="214:26" pos:end="214:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
        <if_stmt pos:start="216:9" pos:end="238:9"><if pos:start="216:9" pos:end="238:9">if <condition pos:start="216:12" pos:end="216:23">(<expr pos:start="216:13" pos:end="216:22"><name pos:start="216:13" pos:end="216:22">got_packet</name></expr>)</condition> <block pos:start="216:25" pos:end="238:9">{<block_content pos:start="217:13" pos:end="237:13">
            <if_stmt pos:start="217:13" pos:end="222:13"><if pos:start="217:13" pos:end="222:13">if <condition pos:start="217:16" pos:end="217:25">(<expr pos:start="217:17" pos:end="217:24"><name pos:start="217:17" pos:end="217:24">debug_ts</name></expr>)</condition> <block pos:start="217:27" pos:end="222:13">{<block_content pos:start="218:17" pos:end="221:84">
                <expr_stmt pos:start="218:17" pos:end="221:84"><expr pos:start="218:17" pos:end="221:83"><call pos:start="218:17" pos:end="221:83"><name pos:start="218:17" pos:end="218:22">av_log</name><argument_list pos:start="218:23" pos:end="221:83">(<argument pos:start="218:24" pos:end="218:27"><expr pos:start="218:24" pos:end="218:27"><name pos:start="218:24" pos:end="218:27">NULL</name></expr></argument>, <argument pos:start="218:30" pos:end="218:40"><expr pos:start="218:30" pos:end="218:40"><name pos:start="218:30" pos:end="218:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="218:43" pos:end="219:80"><expr pos:start="218:43" pos:end="219:80"><literal type="string" pos:start="218:43" pos:end="218:66">"encoder -&gt; type:video "</literal>
                       <literal type="string" pos:start="219:24" pos:end="219:80">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,
                       <argument pos:start="220:24" pos:end="220:41"><expr pos:start="220:24" pos:end="220:41"><call pos:start="220:24" pos:end="220:41"><name pos:start="220:24" pos:end="220:32">av_ts2str</name><argument_list pos:start="220:33" pos:end="220:41">(<argument pos:start="220:34" pos:end="220:40"><expr pos:start="220:34" pos:end="220:40"><name pos:start="220:34" pos:end="220:40"><name pos:start="220:34" pos:end="220:36">pkt</name><operator pos:start="220:37" pos:end="220:37">.</operator><name pos:start="220:38" pos:end="220:40">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="220:44" pos:end="220:82"><expr pos:start="220:44" pos:end="220:82"><call pos:start="220:44" pos:end="220:82"><name pos:start="220:44" pos:end="220:56">av_ts2timestr</name><argument_list pos:start="220:57" pos:end="220:82">(<argument pos:start="220:58" pos:end="220:64"><expr pos:start="220:58" pos:end="220:64"><name pos:start="220:58" pos:end="220:64"><name pos:start="220:58" pos:end="220:60">pkt</name><operator pos:start="220:61" pos:end="220:61">.</operator><name pos:start="220:62" pos:end="220:64">pts</name></name></expr></argument>, <argument pos:start="220:67" pos:end="220:81"><expr pos:start="220:67" pos:end="220:81"><operator pos:start="220:67" pos:end="220:67">&amp;</operator><name pos:start="220:68" pos:end="220:81"><name pos:start="220:68" pos:end="220:70">enc</name><operator pos:start="220:71" pos:end="220:72">-&gt;</operator><name pos:start="220:73" pos:end="220:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,
                       <argument pos:start="221:24" pos:end="221:41"><expr pos:start="221:24" pos:end="221:41"><call pos:start="221:24" pos:end="221:41"><name pos:start="221:24" pos:end="221:32">av_ts2str</name><argument_list pos:start="221:33" pos:end="221:41">(<argument pos:start="221:34" pos:end="221:40"><expr pos:start="221:34" pos:end="221:40"><name pos:start="221:34" pos:end="221:40"><name pos:start="221:34" pos:end="221:36">pkt</name><operator pos:start="221:37" pos:end="221:37">.</operator><name pos:start="221:38" pos:end="221:40">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="221:44" pos:end="221:82"><expr pos:start="221:44" pos:end="221:82"><call pos:start="221:44" pos:end="221:82"><name pos:start="221:44" pos:end="221:56">av_ts2timestr</name><argument_list pos:start="221:57" pos:end="221:82">(<argument pos:start="221:58" pos:end="221:64"><expr pos:start="221:58" pos:end="221:64"><name pos:start="221:58" pos:end="221:64"><name pos:start="221:58" pos:end="221:60">pkt</name><operator pos:start="221:61" pos:end="221:61">.</operator><name pos:start="221:62" pos:end="221:64">dts</name></name></expr></argument>, <argument pos:start="221:67" pos:end="221:81"><expr pos:start="221:67" pos:end="221:81"><operator pos:start="221:67" pos:end="221:67">&amp;</operator><name pos:start="221:68" pos:end="221:81"><name pos:start="221:68" pos:end="221:70">enc</name><operator pos:start="221:71" pos:end="221:72">-&gt;</operator><name pos:start="221:73" pos:end="221:81">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <if_stmt pos:start="223:13" pos:end="224:41"><if pos:start="223:13" pos:end="224:41">if <condition pos:start="223:16" pos:end="223:91">(<expr pos:start="223:17" pos:end="223:90"><name pos:start="223:17" pos:end="223:23"><name pos:start="223:17" pos:end="223:19">pkt</name><operator pos:start="223:20" pos:end="223:20">.</operator><name pos:start="223:21" pos:end="223:23">pts</name></name> <operator pos:start="223:25" pos:end="223:26">==</operator> <name pos:start="223:28" pos:end="223:41">AV_NOPTS_VALUE</name> <operator pos:start="223:43" pos:end="223:44">&amp;&amp;</operator> <operator pos:start="223:46" pos:end="223:46">!</operator><operator pos:start="223:47" pos:end="223:47">(</operator><name pos:start="223:48" pos:end="223:71"><name pos:start="223:48" pos:end="223:50">enc</name><operator pos:start="223:51" pos:end="223:52">-&gt;</operator><name pos:start="223:53" pos:end="223:57">codec</name><operator pos:start="223:58" pos:end="223:59">-&gt;</operator><name pos:start="223:60" pos:end="223:71">capabilities</name></name> <operator pos:start="223:73" pos:end="223:73">&amp;</operator> <name pos:start="223:75" pos:end="223:89">CODEC_CAP_DELAY</name><operator pos:start="223:90" pos:end="223:90">)</operator></expr>)</condition><block type="pseudo" pos:start="224:17" pos:end="224:41"><block_content pos:start="224:17" pos:end="224:41">
                <expr_stmt pos:start="224:17" pos:end="224:41"><expr pos:start="224:17" pos:end="224:40"><name pos:start="224:17" pos:end="224:23"><name pos:start="224:17" pos:end="224:19">pkt</name><operator pos:start="224:20" pos:end="224:20">.</operator><name pos:start="224:21" pos:end="224:23">pts</name></name> <operator pos:start="224:25" pos:end="224:25">=</operator> <name pos:start="224:27" pos:end="224:40"><name pos:start="224:27" pos:end="224:29">ost</name><operator pos:start="224:30" pos:end="224:31">-&gt;</operator><name pos:start="224:32" pos:end="224:40">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <expr_stmt pos:start="225:13" pos:end="225:75"><expr pos:start="225:13" pos:end="225:74"><call pos:start="225:13" pos:end="225:74"><name pos:start="225:13" pos:end="225:32">av_packet_rescale_ts</name><argument_list pos:start="225:33" pos:end="225:74">(<argument pos:start="225:34" pos:end="225:37"><expr pos:start="225:34" pos:end="225:37"><operator pos:start="225:34" pos:end="225:34">&amp;</operator><name pos:start="225:35" pos:end="225:37">pkt</name></expr></argument>, <argument pos:start="225:40" pos:end="225:53"><expr pos:start="225:40" pos:end="225:53"><name pos:start="225:40" pos:end="225:53"><name pos:start="225:40" pos:end="225:42">enc</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:53">time_base</name></name></expr></argument>, <argument pos:start="225:56" pos:end="225:73"><expr pos:start="225:56" pos:end="225:73"><name pos:start="225:56" pos:end="225:73"><name pos:start="225:56" pos:end="225:58">ost</name><operator pos:start="225:59" pos:end="225:60">-&gt;</operator><name pos:start="225:61" pos:end="225:62">st</name><operator pos:start="225:63" pos:end="225:64">-&gt;</operator><name pos:start="225:65" pos:end="225:73">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="226:13" pos:end="231:13"><if pos:start="226:13" pos:end="231:13">if <condition pos:start="226:16" pos:end="226:25">(<expr pos:start="226:17" pos:end="226:24"><name pos:start="226:17" pos:end="226:24">debug_ts</name></expr>)</condition> <block pos:start="226:27" pos:end="231:13">{<block_content pos:start="227:17" pos:end="230:85">
                <expr_stmt pos:start="227:17" pos:end="230:85"><expr pos:start="227:17" pos:end="230:84"><call pos:start="227:17" pos:end="230:84"><name pos:start="227:17" pos:end="227:22">av_log</name><argument_list pos:start="227:23" pos:end="230:84">(<argument pos:start="227:24" pos:end="227:27"><expr pos:start="227:24" pos:end="227:27"><name pos:start="227:24" pos:end="227:27">NULL</name></expr></argument>, <argument pos:start="227:30" pos:end="227:40"><expr pos:start="227:30" pos:end="227:40"><name pos:start="227:30" pos:end="227:40">AV_LOG_INFO</name></expr></argument>, <argument pos:start="227:43" pos:end="228:77"><expr pos:start="227:43" pos:end="228:77"><literal type="string" pos:start="227:43" pos:end="227:66">"encoder -&gt; type:video "</literal>
                    <literal type="string" pos:start="228:21" pos:end="228:77">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,
                    <argument pos:start="229:21" pos:end="229:38"><expr pos:start="229:21" pos:end="229:38"><call pos:start="229:21" pos:end="229:38"><name pos:start="229:21" pos:end="229:29">av_ts2str</name><argument_list pos:start="229:30" pos:end="229:38">(<argument pos:start="229:31" pos:end="229:37"><expr pos:start="229:31" pos:end="229:37"><name pos:start="229:31" pos:end="229:37"><name pos:start="229:31" pos:end="229:33">pkt</name><operator pos:start="229:34" pos:end="229:34">.</operator><name pos:start="229:35" pos:end="229:37">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="229:41" pos:end="229:83"><expr pos:start="229:41" pos:end="229:83"><call pos:start="229:41" pos:end="229:83"><name pos:start="229:41" pos:end="229:53">av_ts2timestr</name><argument_list pos:start="229:54" pos:end="229:83">(<argument pos:start="229:55" pos:end="229:61"><expr pos:start="229:55" pos:end="229:61"><name pos:start="229:55" pos:end="229:61"><name pos:start="229:55" pos:end="229:57">pkt</name><operator pos:start="229:58" pos:end="229:58">.</operator><name pos:start="229:59" pos:end="229:61">pts</name></name></expr></argument>, <argument pos:start="229:64" pos:end="229:82"><expr pos:start="229:64" pos:end="229:82"><operator pos:start="229:64" pos:end="229:64">&amp;</operator><name pos:start="229:65" pos:end="229:82"><name pos:start="229:65" pos:end="229:67">ost</name><operator pos:start="229:68" pos:end="229:69">-&gt;</operator><name pos:start="229:70" pos:end="229:71">st</name><operator pos:start="229:72" pos:end="229:73">-&gt;</operator><name pos:start="229:74" pos:end="229:82">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,
                    <argument pos:start="230:21" pos:end="230:38"><expr pos:start="230:21" pos:end="230:38"><call pos:start="230:21" pos:end="230:38"><name pos:start="230:21" pos:end="230:29">av_ts2str</name><argument_list pos:start="230:30" pos:end="230:38">(<argument pos:start="230:31" pos:end="230:37"><expr pos:start="230:31" pos:end="230:37"><name pos:start="230:31" pos:end="230:37"><name pos:start="230:31" pos:end="230:33">pkt</name><operator pos:start="230:34" pos:end="230:34">.</operator><name pos:start="230:35" pos:end="230:37">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="230:41" pos:end="230:83"><expr pos:start="230:41" pos:end="230:83"><call pos:start="230:41" pos:end="230:83"><name pos:start="230:41" pos:end="230:53">av_ts2timestr</name><argument_list pos:start="230:54" pos:end="230:83">(<argument pos:start="230:55" pos:end="230:61"><expr pos:start="230:55" pos:end="230:61"><name pos:start="230:55" pos:end="230:61"><name pos:start="230:55" pos:end="230:57">pkt</name><operator pos:start="230:58" pos:end="230:58">.</operator><name pos:start="230:59" pos:end="230:61">dts</name></name></expr></argument>, <argument pos:start="230:64" pos:end="230:82"><expr pos:start="230:64" pos:end="230:82"><operator pos:start="230:64" pos:end="230:64">&amp;</operator><name pos:start="230:65" pos:end="230:82"><name pos:start="230:65" pos:end="230:67">ost</name><operator pos:start="230:68" pos:end="230:69">-&gt;</operator><name pos:start="230:70" pos:end="230:71">st</name><operator pos:start="230:72" pos:end="230:73">-&gt;</operator><name pos:start="230:74" pos:end="230:82">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
            <expr_stmt pos:start="232:13" pos:end="232:34"><expr pos:start="232:13" pos:end="232:33"><name pos:start="232:13" pos:end="232:22">frame_size</name> <operator pos:start="232:24" pos:end="232:24">=</operator> <name pos:start="232:26" pos:end="232:33"><name pos:start="232:26" pos:end="232:28">pkt</name><operator pos:start="232:29" pos:end="232:29">.</operator><name pos:start="232:30" pos:end="232:33">size</name></name></expr>;</expr_stmt>
            <expr_stmt pos:start="233:13" pos:end="233:38"><expr pos:start="233:13" pos:end="233:37"><call pos:start="233:13" pos:end="233:37"><name pos:start="233:13" pos:end="233:23">write_frame</name><argument_list pos:start="233:24" pos:end="233:37">(<argument pos:start="233:25" pos:end="233:25"><expr pos:start="233:25" pos:end="233:25"><name pos:start="233:25" pos:end="233:25">s</name></expr></argument>, <argument pos:start="233:28" pos:end="233:31"><expr pos:start="233:28" pos:end="233:31"><operator pos:start="233:28" pos:end="233:28">&amp;</operator><name pos:start="233:29" pos:end="233:31">pkt</name></expr></argument>, <argument pos:start="233:34" pos:end="233:36"><expr pos:start="233:34" pos:end="233:36"><name pos:start="233:34" pos:end="233:36">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <comment type="block" pos:start="234:13" pos:end="234:41">/* if two pass, output log */</comment>
            <if_stmt pos:start="235:13" pos:end="237:13"><if pos:start="235:13" pos:end="237:13">if <condition pos:start="235:16" pos:end="235:47">(<expr pos:start="235:17" pos:end="235:46"><name pos:start="235:17" pos:end="235:28"><name pos:start="235:17" pos:end="235:19">ost</name><operator pos:start="235:20" pos:end="235:21">-&gt;</operator><name pos:start="235:22" pos:end="235:28">logfile</name></name> <operator pos:start="235:30" pos:end="235:31">&amp;&amp;</operator> <name pos:start="235:33" pos:end="235:46"><name pos:start="235:33" pos:end="235:35">enc</name><operator pos:start="235:36" pos:end="235:37">-&gt;</operator><name pos:start="235:38" pos:end="235:46">stats_out</name></name></expr>)</condition> <block pos:start="235:49" pos:end="237:13">{<block_content pos:start="236:17" pos:end="236:60">
                <expr_stmt pos:start="236:17" pos:end="236:60"><expr pos:start="236:17" pos:end="236:59"><call pos:start="236:17" pos:end="236:59"><name pos:start="236:17" pos:end="236:23">fprintf</name><argument_list pos:start="236:24" pos:end="236:59">(<argument pos:start="236:25" pos:end="236:36"><expr pos:start="236:25" pos:end="236:36"><name pos:start="236:25" pos:end="236:36"><name pos:start="236:25" pos:end="236:27">ost</name><operator pos:start="236:28" pos:end="236:29">-&gt;</operator><name pos:start="236:30" pos:end="236:36">logfile</name></name></expr></argument>, <argument pos:start="236:39" pos:end="236:42"><expr pos:start="236:39" pos:end="236:42"><literal type="string" pos:start="236:39" pos:end="236:42">"%s"</literal></expr></argument>, <argument pos:start="236:45" pos:end="236:58"><expr pos:start="236:45" pos:end="236:58"><name pos:start="236:45" pos:end="236:58"><name pos:start="236:45" pos:end="236:47">enc</name><operator pos:start="236:48" pos:end="236:49">-&gt;</operator><name pos:start="236:50" pos:end="236:58">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="240:5" pos:end="240:21"><expr pos:start="240:5" pos:end="240:20"><name pos:start="240:5" pos:end="240:18"><name pos:start="240:5" pos:end="240:7">ost</name><operator pos:start="240:8" pos:end="240:9">-&gt;</operator><name pos:start="240:10" pos:end="240:18">sync_opts</name></name><operator pos:start="240:19" pos:end="240:20">++</operator></expr>;</expr_stmt>
    <comment type="block" pos:start="241:5" pos:end="245:7">/*
     * For video, number of frames in == number of packets out.
     * But there may be reordering, so we can't throw away frames on encoder
     * flush, we need to limit them here, before they go into encoder.
     */</comment>
    <expr_stmt pos:start="246:5" pos:end="246:24"><expr pos:start="246:5" pos:end="246:23"><name pos:start="246:5" pos:end="246:21"><name pos:start="246:5" pos:end="246:7">ost</name><operator pos:start="246:8" pos:end="246:9">-&gt;</operator><name pos:start="246:10" pos:end="246:21">frame_number</name></name><operator pos:start="246:22" pos:end="246:23">++</operator></expr>;</expr_stmt>
    <if_stmt pos:start="247:5" pos:end="248:40"><if pos:start="247:5" pos:end="248:40">if <condition pos:start="247:8" pos:end="247:38">(<expr pos:start="247:9" pos:end="247:37"><name pos:start="247:9" pos:end="247:23">vstats_filename</name> <operator pos:start="247:25" pos:end="247:26">&amp;&amp;</operator> <name pos:start="247:28" pos:end="247:37">frame_size</name></expr>)</condition><block type="pseudo" pos:start="248:9" pos:end="248:40"><block_content pos:start="248:9" pos:end="248:40">
        <expr_stmt pos:start="248:9" pos:end="248:40"><expr pos:start="248:9" pos:end="248:39"><call pos:start="248:9" pos:end="248:39"><name pos:start="248:9" pos:end="248:22">do_video_stats</name><argument_list pos:start="248:23" pos:end="248:39">(<argument pos:start="248:24" pos:end="248:26"><expr pos:start="248:24" pos:end="248:26"><name pos:start="248:24" pos:end="248:26">ost</name></expr></argument>, <argument pos:start="248:29" pos:end="248:38"><expr pos:start="248:29" pos:end="248:38"><name pos:start="248:29" pos:end="248:38">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
  </block_content>}</block></for>
    <if_stmt pos:start="250:5" pos:end="251:43"><if pos:start="250:5" pos:end="251:43">if <condition pos:start="250:8" pos:end="250:25">(<expr pos:start="250:9" pos:end="250:24"><operator pos:start="250:9" pos:end="250:9">!</operator><name pos:start="250:10" pos:end="250:24"><name pos:start="250:10" pos:end="250:12">ost</name><operator pos:start="250:13" pos:end="250:14">-&gt;</operator><name pos:start="250:15" pos:end="250:24">last_frame</name></name></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:43"><block_content pos:start="251:9" pos:end="251:43">
        <expr_stmt pos:start="251:9" pos:end="251:43"><expr pos:start="251:9" pos:end="251:42"><name pos:start="251:9" pos:end="251:23"><name pos:start="251:9" pos:end="251:11">ost</name><operator pos:start="251:12" pos:end="251:13">-&gt;</operator><name pos:start="251:14" pos:end="251:23">last_frame</name></name> <operator pos:start="251:25" pos:end="251:25">=</operator> <call pos:start="251:27" pos:end="251:42"><name pos:start="251:27" pos:end="251:40">av_frame_alloc</name><argument_list pos:start="251:41" pos:end="251:42">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="252:5" pos:end="252:36"><expr pos:start="252:5" pos:end="252:35"><call pos:start="252:5" pos:end="252:35"><name pos:start="252:5" pos:end="252:18">av_frame_unref</name><argument_list pos:start="252:19" pos:end="252:35">(<argument pos:start="252:20" pos:end="252:34"><expr pos:start="252:20" pos:end="252:34"><name pos:start="252:20" pos:end="252:34"><name pos:start="252:20" pos:end="252:22">ost</name><operator pos:start="252:23" pos:end="252:24">-&gt;</operator><name pos:start="252:25" pos:end="252:34">last_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="253:5" pos:end="254:52"><if pos:start="253:5" pos:end="254:52">if <condition pos:start="253:8" pos:end="253:21">(<expr pos:start="253:9" pos:end="253:20"><name pos:start="253:9" pos:end="253:20">next_picture</name></expr>)</condition><block type="pseudo" pos:start="254:9" pos:end="254:52"><block_content pos:start="254:9" pos:end="254:52">
        <expr_stmt pos:start="254:9" pos:end="254:52"><expr pos:start="254:9" pos:end="254:51"><call pos:start="254:9" pos:end="254:51"><name pos:start="254:9" pos:end="254:20">av_frame_ref</name><argument_list pos:start="254:21" pos:end="254:51">(<argument pos:start="254:22" pos:end="254:36"><expr pos:start="254:22" pos:end="254:36"><name pos:start="254:22" pos:end="254:36"><name pos:start="254:22" pos:end="254:24">ost</name><operator pos:start="254:25" pos:end="254:26">-&gt;</operator><name pos:start="254:27" pos:end="254:36">last_frame</name></name></expr></argument>, <argument pos:start="254:39" pos:end="254:50"><expr pos:start="254:39" pos:end="254:50"><name pos:start="254:39" pos:end="254:50">next_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
</block_content>}</block></function></unit>
