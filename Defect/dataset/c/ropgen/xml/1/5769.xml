<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5769.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">setup_frame</name><parameter_list pos:start="1:24" pos:end="3:65">(<parameter pos:start="1:25" pos:end="1:31"><decl pos:start="1:25" pos:end="1:31"><type pos:start="1:25" pos:end="1:31"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:31">sig</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:60"><decl pos:start="1:34" pos:end="1:60"><type pos:start="1:34" pos:end="1:60"><name pos:start="1:34" pos:end="1:56"><name pos:start="1:34" pos:end="1:39">struct</name> <name pos:start="1:41" pos:end="1:56">target_sigaction</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">ka</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:44"><decl pos:start="3:25" pos:end="3:44"><type pos:start="3:25" pos:end="3:44"><name pos:start="3:25" pos:end="3:39">target_sigset_t</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">set</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:64"><decl pos:start="3:47" pos:end="3:64"><type pos:start="3:47" pos:end="3:64"><name pos:start="3:47" pos:end="3:59">CPUS390XState</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:64">env</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="129:1">{<block_content pos:start="7:5" pos:end="127:30">

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">sigframe</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">abi_ulong</name></type> <name pos:start="9:15" pos:end="9:24">frame_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:14">frame_addr</name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:54"><name pos:start="13:18" pos:end="13:29">get_sigframe</name><argument_list pos:start="13:30" pos:end="13:54">(<argument pos:start="13:31" pos:end="13:32"><expr pos:start="13:31" pos:end="13:32"><name pos:start="13:31" pos:end="13:32">ka</name></expr></argument>, <argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">env</name></expr></argument>, <argument pos:start="13:40" pos:end="13:53"><expr pos:start="13:40" pos:end="13:53"><sizeof pos:start="13:40" pos:end="13:53">sizeof<argument_list pos:start="13:46" pos:end="13:53">(<argument pos:start="13:47" pos:end="13:52"><expr pos:start="13:47" pos:end="13:52"><operator pos:start="13:47" pos:end="13:47">*</operator><name pos:start="13:48" pos:end="13:52">frame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:45"><expr pos:start="15:5" pos:end="17:44"><call pos:start="15:5" pos:end="17:44"><name pos:start="15:5" pos:end="15:12">qemu_log</name><argument_list pos:start="15:13" pos:end="17:44">(<argument pos:start="15:14" pos:end="15:38"><expr pos:start="15:14" pos:end="15:38"><literal type="string" pos:start="15:14" pos:end="15:38">"%s: frame_addr 0x%llx\n"</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:52"><expr pos:start="15:41" pos:end="15:52"><name pos:start="15:41" pos:end="15:52">__FUNCTION__</name></expr></argument>,

             <argument pos:start="17:14" pos:end="17:43"><expr pos:start="17:14" pos:end="17:43"><operator pos:start="17:14" pos:end="17:14">(</operator><name pos:start="17:15" pos:end="17:22">unsigned</name> <name pos:start="17:24" pos:end="17:27">long</name> <name pos:start="17:29" pos:end="17:32">long</name><operator pos:start="17:33" pos:end="17:33">)</operator><name pos:start="17:34" pos:end="17:43">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:61"><name pos:start="19:10" pos:end="19:25">lock_user_struct</name><argument_list pos:start="19:26" pos:end="19:61">(<argument pos:start="19:27" pos:end="19:38"><expr pos:start="19:27" pos:end="19:38"><name pos:start="19:27" pos:end="19:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">frame</name></expr></argument>, <argument pos:start="19:48" pos:end="19:57"><expr pos:start="19:48" pos:end="19:57"><name pos:start="19:48" pos:end="19:57">frame_addr</name></expr></argument>, <argument pos:start="19:60" pos:end="19:60"><expr pos:start="19:60" pos:end="19:60"><literal type="number" pos:start="19:60" pos:end="19:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:64" pos:end="23:5">{<block_content pos:start="21:13" pos:end="21:30">

            <goto pos:start="21:13" pos:end="21:30">goto <name pos:start="21:18" pos:end="21:29">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:12">qemu_log</name><argument_list pos:start="27:13" pos:end="27:37">(<argument pos:start="27:14" pos:end="27:22"><expr pos:start="27:14" pos:end="27:22"><literal type="string" pos:start="27:14" pos:end="27:22">"%s: 1\n"</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:36"><expr pos:start="27:25" pos:end="27:36"><name pos:start="27:25" pos:end="27:36">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:55">(<expr pos:start="29:9" pos:end="29:54"><call pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:18">__put_user</name><argument_list pos:start="29:19" pos:end="29:54">(<argument pos:start="29:20" pos:end="29:30"><expr pos:start="29:20" pos:end="29:30"><name pos:start="29:20" pos:end="29:30"><name pos:start="29:20" pos:end="29:22">set</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">sig</name><index pos:start="29:28" pos:end="29:30">[<expr pos:start="29:29" pos:end="29:29"><literal type="number" pos:start="29:29" pos:end="29:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:33" pos:end="29:53"><expr pos:start="29:33" pos:end="29:53"><operator pos:start="29:33" pos:end="29:33">&amp;</operator><name pos:start="29:34" pos:end="29:53"><name pos:start="29:34" pos:end="29:38">frame</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:42">sc</name><operator pos:start="29:43" pos:end="29:43">.</operator><name pos:start="29:44" pos:end="29:50">oldmask</name><index pos:start="29:51" pos:end="29:53">[<expr pos:start="29:52" pos:end="29:52"><literal type="number" pos:start="29:52" pos:end="29:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:57" pos:end="33:5">{<block_content pos:start="31:15" pos:end="31:32">

              <goto pos:start="31:15" pos:end="31:32">goto <name pos:start="31:20" pos:end="31:31">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:37"><expr pos:start="37:5" pos:end="37:36"><call pos:start="37:5" pos:end="37:36"><name pos:start="37:5" pos:end="37:16">save_sigregs</name><argument_list pos:start="37:17" pos:end="37:36">(<argument pos:start="37:18" pos:end="37:20"><expr pos:start="37:18" pos:end="37:20"><name pos:start="37:18" pos:end="37:20">env</name></expr></argument>, <argument pos:start="37:23" pos:end="37:35"><expr pos:start="37:23" pos:end="37:35"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:35"><name pos:start="37:24" pos:end="37:28">frame</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:35">sregs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:46"><expr pos:start="41:5" pos:end="43:45"><call pos:start="41:5" pos:end="43:45"><name pos:start="41:5" pos:end="41:14">__put_user</name><argument_list pos:start="41:15" pos:end="43:45">(<argument pos:start="41:16" pos:end="41:54"><expr pos:start="41:16" pos:end="41:54"><operator pos:start="41:16" pos:end="41:16">(</operator><name pos:start="41:17" pos:end="41:25">abi_ulong</name><operator pos:start="41:26" pos:end="41:26">)</operator><operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:35">unsigned</name> <name pos:start="41:37" pos:end="41:40">long</name><operator pos:start="41:41" pos:end="41:41">)</operator><operator pos:start="41:42" pos:end="41:42">&amp;</operator><name pos:start="41:43" pos:end="41:54"><name pos:start="41:43" pos:end="41:47">frame</name><operator pos:start="41:48" pos:end="41:49">-&gt;</operator><name pos:start="41:50" pos:end="41:54">sregs</name></name></expr></argument>,

               <argument pos:start="43:16" pos:end="43:44"><expr pos:start="43:16" pos:end="43:44"><operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:25">abi_ulong</name> <operator pos:start="43:27" pos:end="43:27">*</operator><operator pos:start="43:28" pos:end="43:28">)</operator><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:44"><name pos:start="43:30" pos:end="43:34">frame</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:38">sc</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:44">sregs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="49:32">/* Set up to return from userspace.  If provided, use a stub

       already in userspace.  */</comment>

    <if_stmt pos:start="51:5" pos:end="69:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:42">(<expr pos:start="51:9" pos:end="51:41"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:10">ka</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:20">sa_flags</name></name> <operator pos:start="51:22" pos:end="51:22">&amp;</operator> <name pos:start="51:24" pos:end="51:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="51:44" pos:end="57:5">{<block_content pos:start="53:13" pos:end="55:53">

            <expr_stmt pos:start="53:13" pos:end="55:53"><expr pos:start="53:13" pos:end="55:52"><name pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:15">env</name><operator pos:start="53:16" pos:end="53:17">-&gt;</operator><name pos:start="53:18" pos:end="53:21">regs</name><index pos:start="53:22" pos:end="53:25">[<expr pos:start="53:23" pos:end="53:24"><literal type="number" pos:start="53:23" pos:end="53:24">14</literal></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <operator pos:start="53:29" pos:end="53:29">(</operator><name pos:start="53:30" pos:end="53:37">unsigned</name> <name pos:start="53:39" pos:end="53:42">long</name><operator pos:start="53:43" pos:end="53:43">)</operator>

                    <name pos:start="55:21" pos:end="55:35"><name pos:start="55:21" pos:end="55:22">ka</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:35">sa_restorer</name></name> <operator pos:start="55:37" pos:end="55:37">|</operator> <name pos:start="55:39" pos:end="55:52">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="69:5">else <block pos:start="57:12" pos:end="69:5">{<block_content pos:start="59:13" pos:end="67:38">

            <expr_stmt pos:start="59:13" pos:end="61:52"><expr pos:start="59:13" pos:end="61:51"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">env</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:21">regs</name><index pos:start="59:22" pos:end="59:25">[<expr pos:start="59:23" pos:end="59:24"><literal type="number" pos:start="59:23" pos:end="59:24">14</literal></expr>]</index></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:37">unsigned</name> <name pos:start="59:39" pos:end="59:42">long</name><operator pos:start="59:43" pos:end="59:43">)</operator>

                    <name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:25">frame</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:34">retcode</name></name> <operator pos:start="61:36" pos:end="61:36">|</operator> <name pos:start="61:38" pos:end="61:51">PSW_ADDR_AMODE</name></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="67:38"><if pos:start="63:13" pos:end="67:38">if <condition pos:start="63:16" pos:end="65:57">(<expr pos:start="63:17" pos:end="65:56"><call pos:start="63:17" pos:end="65:56"><name pos:start="63:17" pos:end="63:26">__put_user</name><argument_list pos:start="63:27" pos:end="65:56">(<argument pos:start="63:28" pos:end="63:68"><expr pos:start="63:28" pos:end="63:68"><name pos:start="63:28" pos:end="63:46">S390_SYSCALL_OPCODE</name> <operator pos:start="63:48" pos:end="63:48">|</operator> <name pos:start="63:50" pos:end="63:68">TARGET_NR_sigreturn</name></expr></argument>,

                           <argument pos:start="65:28" pos:end="65:55"><expr pos:start="65:28" pos:end="65:55"><operator pos:start="65:28" pos:end="65:28">(</operator><name pos:start="65:29" pos:end="65:36">uint16_t</name> <operator pos:start="65:38" pos:end="65:38">*</operator><operator pos:start="65:39" pos:end="65:39">)</operator><operator pos:start="65:40" pos:end="65:40">(</operator><name pos:start="65:41" pos:end="65:54"><name pos:start="65:41" pos:end="65:45">frame</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:54">retcode</name></name><operator pos:start="65:55" pos:end="65:55">)</operator></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:21" pos:end="67:38"><block_content pos:start="67:21" pos:end="67:38">

                    <goto pos:start="67:21" pos:end="67:38">goto <name pos:start="67:26" pos:end="67:37">give_sigsegv</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:27">/* Set up backchain. */</comment>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:55">(<expr pos:start="75:9" pos:end="75:54"><call pos:start="75:9" pos:end="75:54"><name pos:start="75:9" pos:end="75:18">__put_user</name><argument_list pos:start="75:19" pos:end="75:54">(<argument pos:start="75:20" pos:end="75:32"><expr pos:start="75:20" pos:end="75:32"><name pos:start="75:20" pos:end="75:32"><name pos:start="75:20" pos:end="75:22">env</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:28">regs</name><index pos:start="75:29" pos:end="75:32">[<expr pos:start="75:30" pos:end="75:31"><literal type="number" pos:start="75:30" pos:end="75:31">15</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:35" pos:end="75:53"><expr pos:start="75:35" pos:end="75:53"><operator pos:start="75:35" pos:end="75:35">(</operator><name pos:start="75:36" pos:end="75:44">abi_ulong</name> <operator pos:start="75:46" pos:end="75:46">*</operator><operator pos:start="75:47" pos:end="75:47">)</operator> <name pos:start="75:49" pos:end="75:53">frame</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:57" pos:end="79:5">{<block_content pos:start="77:13" pos:end="77:30">

            <goto pos:start="77:13" pos:end="77:30">goto <name pos:start="77:18" pos:end="77:29">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:45">/* Set up registers for signal handler */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><name pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:7">env</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:13">regs</name><index pos:start="85:14" pos:end="85:17">[<expr pos:start="85:15" pos:end="85:16"><literal type="number" pos:start="85:15" pos:end="85:16">15</literal></expr>]</index></name> <operator pos:start="85:19" pos:end="85:19">=</operator> <name pos:start="85:21" pos:end="85:30">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:68"><expr pos:start="87:5" pos:end="87:67"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:7">env</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:12">psw</name><operator pos:start="87:13" pos:end="87:13">.</operator><name pos:start="87:14" pos:end="87:17">addr</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <operator pos:start="87:21" pos:end="87:21">(</operator><name pos:start="87:22" pos:end="87:33">target_ulong</name><operator pos:start="87:34" pos:end="87:34">)</operator> <name pos:start="87:36" pos:end="87:50"><name pos:start="87:36" pos:end="87:37">ka</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:50">_sa_handler</name></name> <operator pos:start="87:52" pos:end="87:52">|</operator> <name pos:start="87:54" pos:end="87:67">PSW_ADDR_AMODE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:23"><expr pos:start="91:5" pos:end="91:22"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:7">env</name><operator pos:start="91:8" pos:end="91:9">-&gt;</operator><name pos:start="91:10" pos:end="91:13">regs</name><index pos:start="91:14" pos:end="91:16">[<expr pos:start="91:15" pos:end="91:15"><literal type="number" pos:start="91:15" pos:end="91:15">2</literal></expr>]</index></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:22">sig</name></expr>;</expr_stmt> <comment type="line" pos:start="91:25" pos:end="91:42">//map_signal(sig);</comment>

    <expr_stmt pos:start="93:5" pos:end="93:62"><expr pos:start="93:5" pos:end="93:61"><name pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:7">env</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:13">regs</name><index pos:start="93:14" pos:end="93:16">[<expr pos:start="93:15" pos:end="93:15"><literal type="number" pos:start="93:15" pos:end="93:15">3</literal></expr>]</index></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:29">frame_addr</name> <operator pos:start="93:31" pos:end="93:32">+=</operator> <call pos:start="93:34" pos:end="93:61"><name pos:start="93:34" pos:end="93:41">offsetof</name><argument_list pos:start="93:42" pos:end="93:61">(<argument pos:start="93:43" pos:end="93:56"><expr pos:start="93:43" pos:end="93:56"><call pos:start="93:43" pos:end="93:56"><name pos:start="93:43" pos:end="93:48">typeof</name><argument_list pos:start="93:49" pos:end="93:56">(<argument pos:start="93:50" pos:end="93:55"><expr pos:start="93:50" pos:end="93:55"><operator pos:start="93:50" pos:end="93:50">*</operator><name pos:start="93:51" pos:end="93:55">frame</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="93:59" pos:end="93:60"><expr pos:start="93:59" pos:end="93:60"><name pos:start="93:59" pos:end="93:60">sc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="99:74">/* We forgot to include these in the sigcontext.

       To avoid breaking binary compatibility, they are passed as args. */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:21"><expr pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:7">env</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:13">regs</name><index pos:start="101:14" pos:end="101:16">[<expr pos:start="101:15" pos:end="101:15"><literal type="number" pos:start="101:15" pos:end="101:15">4</literal></expr>]</index></name> <operator pos:start="101:18" pos:end="101:18">=</operator> <literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="101:23" pos:end="101:67">// FIXME: no clue... current-&gt;thread.trap_no;</comment>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:7">env</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:13">regs</name><index pos:start="103:14" pos:end="103:16">[<expr pos:start="103:15" pos:end="103:15"><literal type="number" pos:start="103:15" pos:end="103:15">5</literal></expr>]</index></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</expr_stmt> <comment type="line" pos:start="103:23" pos:end="103:69">// FIXME: no clue... current-&gt;thread.prot_addr;</comment>



    <comment type="block" pos:start="107:5" pos:end="107:72">/* Place signal number on stack to allow backtrace from handler.  */</comment>

    <if_stmt pos:start="109:5" pos:end="113:5"><if pos:start="109:5" pos:end="113:5">if <condition pos:start="109:8" pos:end="109:56">(<expr pos:start="109:9" pos:end="109:55"><call pos:start="109:9" pos:end="109:55"><name pos:start="109:9" pos:end="109:18">__put_user</name><argument_list pos:start="109:19" pos:end="109:55">(<argument pos:start="109:20" pos:end="109:31"><expr pos:start="109:20" pos:end="109:31"><name pos:start="109:20" pos:end="109:31"><name pos:start="109:20" pos:end="109:22">env</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:28">regs</name><index pos:start="109:29" pos:end="109:31">[<expr pos:start="109:30" pos:end="109:30"><literal type="number" pos:start="109:30" pos:end="109:30">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="109:34" pos:end="109:54"><expr pos:start="109:34" pos:end="109:54"><operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:37">int</name> <operator pos:start="109:39" pos:end="109:39">*</operator><operator pos:start="109:40" pos:end="109:40">)</operator> <operator pos:start="109:42" pos:end="109:42">&amp;</operator><name pos:start="109:43" pos:end="109:54"><name pos:start="109:43" pos:end="109:47">frame</name><operator pos:start="109:48" pos:end="109:49">-&gt;</operator><name pos:start="109:50" pos:end="109:54">signo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:58" pos:end="113:5">{<block_content pos:start="111:13" pos:end="111:30">

            <goto pos:start="111:13" pos:end="111:30">goto <name pos:start="111:18" pos:end="111:29">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:45"><expr pos:start="115:5" pos:end="115:44"><call pos:start="115:5" pos:end="115:44"><name pos:start="115:5" pos:end="115:22">unlock_user_struct</name><argument_list pos:start="115:23" pos:end="115:44">(<argument pos:start="115:24" pos:end="115:28"><expr pos:start="115:24" pos:end="115:28"><name pos:start="115:24" pos:end="115:28">frame</name></expr></argument>, <argument pos:start="115:31" pos:end="115:40"><expr pos:start="115:31" pos:end="115:40"><name pos:start="115:31" pos:end="115:40">frame_addr</name></expr></argument>, <argument pos:start="115:43" pos:end="115:43"><expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:11">return;</return>



<label pos:start="121:1" pos:end="121:13"><name pos:start="121:1" pos:end="121:12">give_sigsegv</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:49"><expr pos:start="123:5" pos:end="123:48"><call pos:start="123:5" pos:end="123:48"><name pos:start="123:5" pos:end="123:12">qemu_log</name><argument_list pos:start="123:13" pos:end="123:48">(<argument pos:start="123:14" pos:end="123:33"><expr pos:start="123:14" pos:end="123:33"><literal type="string" pos:start="123:14" pos:end="123:33">"%s: give_sigsegv\n"</literal></expr></argument>, <argument pos:start="123:36" pos:end="123:47"><expr pos:start="123:36" pos:end="123:47"><name pos:start="123:36" pos:end="123:47">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:45"><expr pos:start="125:5" pos:end="125:44"><call pos:start="125:5" pos:end="125:44"><name pos:start="125:5" pos:end="125:22">unlock_user_struct</name><argument_list pos:start="125:23" pos:end="125:44">(<argument pos:start="125:24" pos:end="125:28"><expr pos:start="125:24" pos:end="125:28"><name pos:start="125:24" pos:end="125:28">frame</name></expr></argument>, <argument pos:start="125:31" pos:end="125:40"><expr pos:start="125:31" pos:end="125:40"><name pos:start="125:31" pos:end="125:40">frame_addr</name></expr></argument>, <argument pos:start="125:43" pos:end="125:43"><expr pos:start="125:43" pos:end="125:43"><literal type="number" pos:start="125:43" pos:end="125:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:30"><expr pos:start="127:5" pos:end="127:29"><call pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:13">force_sig</name><argument_list pos:start="127:14" pos:end="127:29">(<argument pos:start="127:15" pos:end="127:28"><expr pos:start="127:15" pos:end="127:28"><name pos:start="127:15" pos:end="127:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
