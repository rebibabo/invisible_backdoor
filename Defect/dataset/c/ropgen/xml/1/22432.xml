<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22432.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">puv3_load_kernel</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:56"><decl pos:start="1:30" pos:end="1:56"><type pos:start="1:30" pos:end="1:41"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:56">kernel_filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:49">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:51">(<expr pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:23">kernel_filename</name> <operator pos:start="9:25" pos:end="9:26">==</operator> <name pos:start="9:28" pos:end="9:31">NULL</name> <operator pos:start="9:33" pos:end="9:34">&amp;&amp;</operator> <call pos:start="9:36" pos:end="9:50"><name pos:start="9:36" pos:end="9:48">qtest_enabled</name><argument_list pos:start="9:49" pos:end="9:50">()</argument_list></call></expr>)</condition> <block pos:start="9:53" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:15">

        <return pos:start="11:9" pos:end="11:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:36"><expr pos:start="15:5" pos:end="15:35"><call pos:start="15:5" pos:end="15:35"><name pos:start="15:5" pos:end="15:10">assert</name><argument_list pos:start="15:11" pos:end="15:35">(<argument pos:start="15:12" pos:end="15:34"><expr pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:26">kernel_filename</name> <operator pos:start="15:28" pos:end="15:29">!=</operator> <name pos:start="15:31" pos:end="15:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:38">/* only zImage format supported */</comment>

    <expr_stmt pos:start="21:5" pos:end="23:29"><expr pos:start="21:5" pos:end="23:28"><name pos:start="21:5" pos:end="21:8">size</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <call pos:start="21:12" pos:end="23:28"><name pos:start="21:12" pos:end="21:30">load_image_targphys</name><argument_list pos:start="21:31" pos:end="23:28">(<argument pos:start="21:32" pos:end="21:46"><expr pos:start="21:32" pos:end="21:46"><name pos:start="21:32" pos:end="21:46">kernel_filename</name></expr></argument>, <argument pos:start="21:49" pos:end="21:64"><expr pos:start="21:49" pos:end="21:64"><name pos:start="21:49" pos:end="21:64">KERNEL_LOAD_ADDR</name></expr></argument>,

            <argument pos:start="23:13" pos:end="23:27"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:27">KERNEL_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:12">size</name> <operator pos:start="25:14" pos:end="25:14">&lt;</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:16">

        <expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:20">error_report</name><argument_list pos:start="27:21" pos:end="27:64">(<argument pos:start="27:22" pos:end="27:46"><expr pos:start="27:22" pos:end="27:46"><literal type="string" pos:start="27:22" pos:end="27:46">"Load kernel error: '%s'"</literal></expr></argument>, <argument pos:start="27:49" pos:end="27:63"><expr pos:start="27:49" pos:end="27:63"><name pos:start="27:49" pos:end="27:63">kernel_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:16"><expr pos:start="29:9" pos:end="29:15"><call pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">exit</name><argument_list pos:start="29:13" pos:end="29:15">(<argument pos:start="29:14" pos:end="29:14"><expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:77">/* cheat curses that we have a graphic console, only under ocd console */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><call pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:24">graphic_console_init</name><argument_list pos:start="37:25" pos:end="37:48">(<argument pos:start="37:26" pos:end="37:29"><expr pos:start="37:26" pos:end="37:29"><name pos:start="37:26" pos:end="37:29">NULL</name></expr></argument>, <argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:41"><expr pos:start="37:35" pos:end="37:41"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:41">no_ops</name></expr></argument>, <argument pos:start="37:44" pos:end="37:47"><expr pos:start="37:44" pos:end="37:47"><name pos:start="37:44" pos:end="37:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
