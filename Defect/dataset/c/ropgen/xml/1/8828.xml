<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8828.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ff_v4l2_m2m_codec_end</name><parameter_list pos:start="1:26" pos:end="1:48">(<parameter pos:start="1:27" pos:end="1:47"><decl pos:start="1:27" pos:end="1:47"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:40">AVCodecContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:18">V4L2m2mContext</name><modifier pos:start="5:19" pos:end="5:19">*</modifier></type> <name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:67"><expr pos:start="11:5" pos:end="11:66"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:66"><name pos:start="11:11" pos:end="11:36">ff_v4l2_context_set_status</name><argument_list pos:start="11:37" pos:end="11:66">(<argument pos:start="11:38" pos:end="11:47"><expr pos:start="11:38" pos:end="11:47"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:47"><name pos:start="11:39" pos:end="11:39">s</name><operator pos:start="11:40" pos:end="11:41">-&gt;</operator><name pos:start="11:42" pos:end="11:47">output</name></name></expr></argument>, <argument pos:start="11:50" pos:end="11:65"><expr pos:start="11:50" pos:end="11:65"><name pos:start="11:50" pos:end="11:65">VIDIOC_STREAMOFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:81"><if pos:start="13:5" pos:end="15:81">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">ret</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:81"><block_content pos:start="15:13" pos:end="15:81">

            <expr_stmt pos:start="15:13" pos:end="15:81"><expr pos:start="15:13" pos:end="15:80"><call pos:start="15:13" pos:end="15:80"><name pos:start="15:13" pos:end="15:18">av_log</name><argument_list pos:start="15:19" pos:end="15:80">(<argument pos:start="15:20" pos:end="15:24"><expr pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:24">avctx</name></expr></argument>, <argument pos:start="15:27" pos:end="15:38"><expr pos:start="15:27" pos:end="15:38"><name pos:start="15:27" pos:end="15:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:41" pos:end="15:63"><expr pos:start="15:41" pos:end="15:63"><literal type="string" pos:start="15:41" pos:end="15:63">"VIDIOC_STREAMOFF %s\n"</literal></expr></argument>, <argument pos:start="15:66" pos:end="15:79"><expr pos:start="15:66" pos:end="15:79"><name pos:start="15:66" pos:end="15:79"><name pos:start="15:66" pos:end="15:66">s</name><operator pos:start="15:67" pos:end="15:68">-&gt;</operator><name pos:start="15:69" pos:end="15:74">output</name><operator pos:start="15:75" pos:end="15:75">.</operator><name pos:start="15:76" pos:end="15:79">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:68"><expr pos:start="19:5" pos:end="19:67"><name pos:start="19:5" pos:end="19:7">ret</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:67"><name pos:start="19:11" pos:end="19:36">ff_v4l2_context_set_status</name><argument_list pos:start="19:37" pos:end="19:67">(<argument pos:start="19:38" pos:end="19:48"><expr pos:start="19:38" pos:end="19:48"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:48"><name pos:start="19:39" pos:end="19:39">s</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:48">capture</name></name></expr></argument>, <argument pos:start="19:51" pos:end="19:66"><expr pos:start="19:51" pos:end="19:66"><name pos:start="19:51" pos:end="19:66">VIDIOC_STREAMOFF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:78"><if pos:start="21:5" pos:end="23:78">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">ret</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:78"><block_content pos:start="23:9" pos:end="23:78">

        <expr_stmt pos:start="23:9" pos:end="23:78"><expr pos:start="23:9" pos:end="23:77"><call pos:start="23:9" pos:end="23:77"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:77">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:59"><expr pos:start="23:37" pos:end="23:59"><literal type="string" pos:start="23:37" pos:end="23:59">"VIDIOC_STREAMOFF %s\n"</literal></expr></argument>, <argument pos:start="23:62" pos:end="23:76"><expr pos:start="23:62" pos:end="23:76"><name pos:start="23:62" pos:end="23:76"><name pos:start="23:62" pos:end="23:62">s</name><operator pos:start="23:63" pos:end="23:64">-&gt;</operator><name pos:start="23:65" pos:end="23:71">capture</name><operator pos:start="23:72" pos:end="23:72">.</operator><name pos:start="23:73" pos:end="23:76">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><call pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:27">ff_v4l2_context_release</name><argument_list pos:start="27:28" pos:end="27:39">(<argument pos:start="27:29" pos:end="27:38"><expr pos:start="27:29" pos:end="27:38"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:38"><name pos:start="27:30" pos:end="27:30">s</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:38">output</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:86"><if pos:start="31:5" pos:end="33:86">if <condition pos:start="31:8" pos:end="31:34">(<expr pos:start="31:9" pos:end="31:33"><call pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:19">atomic_load</name><argument_list pos:start="31:20" pos:end="31:33">(<argument pos:start="31:21" pos:end="31:32"><expr pos:start="31:21" pos:end="31:32"><operator pos:start="31:21" pos:end="31:21">&amp;</operator><name pos:start="31:22" pos:end="31:32"><name pos:start="31:22" pos:end="31:22">s</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:32">refcount</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:86"><block_content pos:start="33:9" pos:end="33:86">

        <expr_stmt pos:start="33:9" pos:end="33:86"><expr pos:start="33:9" pos:end="33:85"><call pos:start="33:9" pos:end="33:85"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:85">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:84"><expr pos:start="33:37" pos:end="33:84"><literal type="string" pos:start="33:37" pos:end="33:84">"ff_v4l2m2m_codec_end leaving pending buffers\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><call pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:27">ff_v4l2_context_release</name><argument_list pos:start="37:28" pos:end="37:40">(<argument pos:start="37:29" pos:end="37:39"><expr pos:start="37:29" pos:end="37:39"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:39"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:39">capture</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:29"><expr pos:start="39:5" pos:end="39:28"><call pos:start="39:5" pos:end="39:28"><name pos:start="39:5" pos:end="39:15">sem_destroy</name><argument_list pos:start="39:16" pos:end="39:28">(<argument pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:27"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:27"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:27">refsync</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="43:5" pos:end="43:30">/* release the hardware */</comment>

    <if_stmt pos:start="45:5" pos:end="47:105"><if pos:start="45:5" pos:end="47:105">if <condition pos:start="45:8" pos:end="45:26">(<expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:13">close</name><argument_list pos:start="45:14" pos:end="45:20">(<argument pos:start="45:15" pos:end="45:19"><expr pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:19"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:19">fd</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:22" pos:end="45:22">&lt;</operator> <literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr> )</condition><block type="pseudo" pos:start="47:9" pos:end="47:105"><block_content pos:start="47:9" pos:end="47:105">

        <expr_stmt pos:start="47:9" pos:end="47:105"><expr pos:start="47:9" pos:end="47:104"><call pos:start="47:9" pos:end="47:104"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:104">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:63"><expr pos:start="47:37" pos:end="47:63"><literal type="string" pos:start="47:37" pos:end="47:63">"failure closing %s (%s)\n"</literal></expr></argument>, <argument pos:start="47:66" pos:end="47:75"><expr pos:start="47:66" pos:end="47:75"><name pos:start="47:66" pos:end="47:75"><name pos:start="47:66" pos:end="47:66">s</name><operator pos:start="47:67" pos:end="47:68">-&gt;</operator><name pos:start="47:69" pos:end="47:75">devname</name></name></expr></argument>, <argument pos:start="47:78" pos:end="47:103"><expr pos:start="47:78" pos:end="47:103"><call pos:start="47:78" pos:end="47:103"><name pos:start="47:78" pos:end="47:87">av_err2str</name><argument_list pos:start="47:88" pos:end="47:103">(<argument pos:start="47:89" pos:end="47:102"><expr pos:start="47:89" pos:end="47:102"><call pos:start="47:89" pos:end="47:102"><name pos:start="47:89" pos:end="47:95">AVERROR</name><argument_list pos:start="47:96" pos:end="47:102">(<argument pos:start="47:97" pos:end="47:101"><expr pos:start="47:97" pos:end="47:101"><name pos:start="47:97" pos:end="47:101">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:9">fd</name></name> <operator pos:start="51:11" pos:end="51:11">=</operator> <operator pos:start="51:13" pos:end="51:13">-</operator><literal type="number" pos:start="51:14" pos:end="51:14">1</literal></expr>;</expr_stmt>



    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
