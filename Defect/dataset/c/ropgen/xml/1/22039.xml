<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22039.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">decode_pic_timing</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">HEVCContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:38">= <expr pos:start="5:25" pos:end="5:38"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:38"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">HEVClc</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:79"><decl pos:start="7:5" pos:end="7:78"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">HEVCSPS</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">sps</name> <init pos:start="7:18" pos:end="7:78">= <expr pos:start="7:20" pos:end="7:78"><operator pos:start="7:20" pos:end="7:20">(</operator><name pos:start="7:21" pos:end="7:27">HEVCSPS</name><operator pos:start="7:28" pos:end="7:28">*</operator><operator pos:start="7:29" pos:end="7:29">)</operator><name pos:start="7:30" pos:end="7:72"><name pos:start="7:30" pos:end="7:30">s</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:40">sps_list</name><index pos:start="7:41" pos:end="7:72">[<expr pos:start="7:42" pos:end="7:71"><name pos:start="7:42" pos:end="7:71"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:71">active_seq_parameter_set_id</name></name></expr>]</index></name><operator pos:start="7:73" pos:end="7:74">-&gt;</operator><name pos:start="7:75" pos:end="7:78">data</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:32"><if pos:start="11:5" pos:end="13:32">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">sps</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:32"><block_content pos:start="13:9" pos:end="13:32">

        <return pos:start="13:9" pos:end="13:32">return<expr pos:start="13:15" pos:end="13:31"><operator pos:start="13:15" pos:end="13:15">(</operator><call pos:start="13:16" pos:end="13:30"><name pos:start="13:16" pos:end="13:22">AVERROR</name><argument_list pos:start="13:23" pos:end="13:30">(<argument pos:start="13:24" pos:end="13:29"><expr pos:start="13:24" pos:end="13:29"><name pos:start="13:24" pos:end="13:29">ENOMEM</name></expr></argument>)</argument_list></call><operator pos:start="13:31" pos:end="13:31">)</operator></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="41:5"><if pos:start="17:5" pos:end="41:5">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:46"><name pos:start="17:9" pos:end="17:11">sps</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:16">vui</name><operator pos:start="17:17" pos:end="17:17">.</operator><name pos:start="17:18" pos:end="17:46">frame_field_info_present_flag</name></name></expr>)</condition> <block pos:start="17:49" pos:end="41:5">{<block_content pos:start="19:9" pos:end="39:24">

        <decl_stmt pos:start="19:9" pos:end="19:41"><decl pos:start="19:9" pos:end="19:40"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:22">pic_struct</name> <init pos:start="19:24" pos:end="19:40">= <expr pos:start="19:26" pos:end="19:40"><call pos:start="19:26" pos:end="19:40"><name pos:start="19:26" pos:end="19:33">get_bits</name><argument_list pos:start="19:34" pos:end="19:40">(<argument pos:start="19:35" pos:end="19:36"><expr pos:start="19:35" pos:end="19:36"><name pos:start="19:35" pos:end="19:36">gb</name></expr></argument>, <argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><literal type="number" pos:start="19:39" pos:end="19:39">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:57"><expr pos:start="21:9" pos:end="21:56"><name pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:25">picture_struct</name></name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:56">AV_PICTURE_STRUCTURE_UNKNOWN</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="35:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:28">(<expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:22">pic_struct</name> <operator pos:start="23:24" pos:end="23:25">==</operator> <literal type="number" pos:start="23:27" pos:end="23:27">2</literal></expr>)</condition> <block pos:start="23:30" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:66">

            <expr_stmt pos:start="25:13" pos:end="25:61"><expr pos:start="25:13" pos:end="25:60"><call pos:start="25:13" pos:end="25:60"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="25:60">(<argument pos:start="25:20" pos:end="25:27"><expr pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:27"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:27">avctx</name></name></expr></argument>, <argument pos:start="25:30" pos:end="25:41"><expr pos:start="25:30" pos:end="25:41"><name pos:start="25:30" pos:end="25:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="25:44" pos:end="25:59"><expr pos:start="25:44" pos:end="25:59"><literal type="string" pos:start="25:44" pos:end="25:59">"BOTTOM Field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:66"><expr pos:start="27:13" pos:end="27:65"><name pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:29">picture_struct</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:65">AV_PICTURE_STRUCTURE_BOTTOM_FIELD</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="35:9">else if <condition pos:start="29:19" pos:end="29:35">(<expr pos:start="29:20" pos:end="29:34"><name pos:start="29:20" pos:end="29:29">pic_struct</name> <operator pos:start="29:31" pos:end="29:32">==</operator> <literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr>)</condition> <block pos:start="29:37" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:63">

            <expr_stmt pos:start="31:13" pos:end="31:58"><expr pos:start="31:13" pos:end="31:57"><call pos:start="31:13" pos:end="31:57"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:57">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="31:44" pos:end="31:56"><expr pos:start="31:44" pos:end="31:56"><literal type="string" pos:start="31:44" pos:end="31:56">"TOP Field\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:63"><expr pos:start="33:13" pos:end="33:62"><name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:29">picture_struct</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:62">AV_PICTURE_STRUCTURE_TOP_FIELD</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><call pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:16">get_bits</name><argument_list pos:start="37:17" pos:end="37:23">(<argument pos:start="37:18" pos:end="37:19"><expr pos:start="37:18" pos:end="37:19"><name pos:start="37:18" pos:end="37:19">gb</name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   <comment type="line" pos:start="37:44" pos:end="37:62">// source_scan_type</comment>

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><call pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:16">get_bits</name><argument_list pos:start="39:17" pos:end="39:23">(<argument pos:start="39:18" pos:end="39:19"><expr pos:start="39:18" pos:end="39:19"><name pos:start="39:18" pos:end="39:19">gb</name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                   <comment type="line" pos:start="39:44" pos:end="39:60">// duplicate_flag</comment>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
