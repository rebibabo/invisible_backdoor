<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21895.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:34">(<parameter pos:start="1:19" pos:end="1:33"><decl pos:start="1:19" pos:end="1:33"><type pos:start="1:19" pos:end="1:30"><name pos:start="1:19" pos:end="1:28">CPUMBState</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:33">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:30">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:30"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:30">target_signal_frame</name></name> <modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:37">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:19">target_sigset_t</name></type> <name pos:start="9:21" pos:end="9:30">target_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">sigset_t</name></type> <name pos:start="11:14" pos:end="11:16">set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:14">frame_addr</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <name pos:start="17:18" pos:end="17:32"><name pos:start="17:18" pos:end="17:20">env</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:26">regs</name><index pos:start="17:27" pos:end="17:32">[<expr pos:start="17:28" pos:end="17:31"><name pos:start="17:28" pos:end="17:31">R_SP</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:45"><expr pos:start="19:5" pos:end="19:44"><call pos:start="19:5" pos:end="19:44"><name pos:start="19:5" pos:end="19:27">trace_user_do_sigreturn</name><argument_list pos:start="19:28" pos:end="19:44">(<argument pos:start="19:29" pos:end="19:31"><expr pos:start="19:29" pos:end="19:31"><name pos:start="19:29" pos:end="19:31">env</name></expr></argument>, <argument pos:start="19:34" pos:end="19:43"><expr pos:start="19:34" pos:end="19:43"><name pos:start="19:34" pos:end="19:43">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="21:5" pos:end="21:51">/* Make sure the guest isn't playing games.  */</comment>

    <if_stmt pos:start="23:5" pos:end="25:22"><if pos:start="23:5" pos:end="25:22">if <condition pos:start="23:8" pos:end="23:62">(<expr pos:start="23:9" pos:end="23:61"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:61"><name pos:start="23:10" pos:end="23:25">lock_user_struct</name><argument_list pos:start="23:26" pos:end="23:61">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="23:41" pos:end="23:45"><expr pos:start="23:41" pos:end="23:45"><name pos:start="23:41" pos:end="23:45">frame</name></expr></argument>, <argument pos:start="23:48" pos:end="23:57"><expr pos:start="23:48" pos:end="23:57"><name pos:start="23:48" pos:end="23:57">frame_addr</name></expr></argument>, <argument pos:start="23:60" pos:end="23:60"><expr pos:start="23:60" pos:end="23:60"><literal type="number" pos:start="23:60" pos:end="23:60">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:22"><block_content pos:start="25:9" pos:end="25:22">

        <goto pos:start="25:9" pos:end="25:22">goto <name pos:start="25:14" pos:end="25:21">badframe</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:33">/* Restore blocked signals */</comment>

    <expr_stmt pos:start="31:5" pos:end="31:67"><expr pos:start="31:5" pos:end="31:66"><call pos:start="31:5" pos:end="31:66"><name pos:start="31:5" pos:end="31:14">__get_user</name><argument_list pos:start="31:15" pos:end="31:66">(<argument pos:start="31:16" pos:end="31:32"><expr pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:32"><name pos:start="31:16" pos:end="31:25">target_set</name><operator pos:start="31:26" pos:end="31:26">.</operator><name pos:start="31:27" pos:end="31:29">sig</name><index pos:start="31:30" pos:end="31:32">[<expr pos:start="31:31" pos:end="31:31"><literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:35" pos:end="31:65"><expr pos:start="31:35" pos:end="31:65"><operator pos:start="31:35" pos:end="31:35">&amp;</operator><name pos:start="31:36" pos:end="31:65"><name pos:start="31:36" pos:end="31:40">frame</name><operator pos:start="31:41" pos:end="31:42">-&gt;</operator><name pos:start="31:43" pos:end="31:44">uc</name><operator pos:start="31:45" pos:end="31:45">.</operator><name pos:start="31:46" pos:end="31:57">tuc_mcontext</name><operator pos:start="31:58" pos:end="31:58">.</operator><name pos:start="31:59" pos:end="31:65">oldmask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="37:5">for<control pos:start="33:8" pos:end="33:42">(<init pos:start="33:9" pos:end="33:14"><expr pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:9">i</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <literal type="number" pos:start="33:13" pos:end="33:13">1</literal></expr>;</init> <condition pos:start="33:16" pos:end="33:37"><expr pos:start="33:16" pos:end="33:36"><name pos:start="33:16" pos:end="33:16">i</name> <operator pos:start="33:18" pos:end="33:18">&lt;</operator> <name pos:start="33:20" pos:end="33:36">TARGET_NSIG_WORDS</name></expr>;</condition> <incr pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><name pos:start="33:39" pos:end="33:39">i</name><operator pos:start="33:40" pos:end="33:41">++</operator></expr></incr>)</control> <block pos:start="33:44" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:64">

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><call pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:18">__get_user</name><argument_list pos:start="35:19" pos:end="35:63">(<argument pos:start="35:20" pos:end="35:36"><expr pos:start="35:20" pos:end="35:36"><name pos:start="35:20" pos:end="35:36"><name pos:start="35:20" pos:end="35:29">target_set</name><operator pos:start="35:30" pos:end="35:30">.</operator><name pos:start="35:31" pos:end="35:33">sig</name><index pos:start="35:34" pos:end="35:36">[<expr pos:start="35:35" pos:end="35:35"><name pos:start="35:35" pos:end="35:35">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:39" pos:end="35:62"><expr pos:start="35:39" pos:end="35:62"><operator pos:start="35:39" pos:end="35:39">&amp;</operator><name pos:start="35:40" pos:end="35:62"><name pos:start="35:40" pos:end="35:44">frame</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:55">extramask</name><index pos:start="35:56" pos:end="35:62">[<expr pos:start="35:57" pos:end="35:61"><name pos:start="35:57" pos:end="35:57">i</name> <operator pos:start="35:59" pos:end="35:59">-</operator> <literal type="number" pos:start="35:61" pos:end="35:61">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:54"><expr pos:start="39:5" pos:end="39:53"><call pos:start="39:5" pos:end="39:53"><name pos:start="39:5" pos:end="39:34">target_to_host_sigset_internal</name><argument_list pos:start="39:35" pos:end="39:53">(<argument pos:start="39:36" pos:end="39:39"><expr pos:start="39:36" pos:end="39:39"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:39">set</name></expr></argument>, <argument pos:start="39:42" pos:end="39:52"><expr pos:start="39:42" pos:end="39:52"><operator pos:start="39:42" pos:end="39:42">&amp;</operator><name pos:start="39:43" pos:end="39:52">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:44"><expr pos:start="41:5" pos:end="41:43"><call pos:start="41:5" pos:end="41:43"><name pos:start="41:5" pos:end="41:18">do_sigprocmask</name><argument_list pos:start="41:19" pos:end="41:43">(<argument pos:start="41:20" pos:end="41:30"><expr pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:30">SIG_SETMASK</name></expr></argument>, <argument pos:start="41:33" pos:end="41:36"><expr pos:start="41:33" pos:end="41:36"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:36">set</name></expr></argument>, <argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><name pos:start="41:39" pos:end="41:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><call pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:22">restore_sigcontext</name><argument_list pos:start="45:23" pos:end="45:52">(<argument pos:start="45:24" pos:end="45:46"><expr pos:start="45:24" pos:end="45:46"><operator pos:start="45:24" pos:end="45:24">&amp;</operator><name pos:start="45:25" pos:end="45:46"><name pos:start="45:25" pos:end="45:29">frame</name><operator pos:start="45:30" pos:end="45:31">-&gt;</operator><name pos:start="45:32" pos:end="45:33">uc</name><operator pos:start="45:34" pos:end="45:34">.</operator><name pos:start="45:35" pos:end="45:46">tuc_mcontext</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:51"><expr pos:start="45:49" pos:end="45:51"><name pos:start="45:49" pos:end="45:51">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="49:42">/* We got here through a sigreturn syscall, our path back is via an

       rtb insn so setup r14 for that.  */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:38"><expr pos:start="51:5" pos:end="51:37"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">env</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:13">regs</name><index pos:start="51:14" pos:end="51:17">[<expr pos:start="51:15" pos:end="51:16"><literal type="number" pos:start="51:15" pos:end="51:16">14</literal></expr>]</index></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:23">env</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:30">sregs</name><index pos:start="51:31" pos:end="51:37">[<expr pos:start="51:32" pos:end="51:36"><name pos:start="51:32" pos:end="51:36">SR_PC</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:22">unlock_user_struct</name><argument_list pos:start="55:23" pos:end="55:44">(<argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28">frame</name></expr></argument>, <argument pos:start="55:31" pos:end="55:40"><expr pos:start="55:31" pos:end="55:40"><name pos:start="55:31" pos:end="55:40">frame_addr</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:25">return <expr pos:start="57:12" pos:end="57:24"><name pos:start="57:12" pos:end="57:24"><name pos:start="57:12" pos:end="57:14">env</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:20">regs</name><index pos:start="57:21" pos:end="57:24">[<expr pos:start="57:22" pos:end="57:23"><literal type="number" pos:start="57:22" pos:end="57:23">10</literal></expr>]</index></name></expr>;</return>

<label pos:start="59:1" pos:end="59:9"><name pos:start="59:1" pos:end="59:8">badframe</name>:</label>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><call pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:13">force_sig</name><argument_list pos:start="61:14" pos:end="61:29">(<argument pos:start="61:15" pos:end="61:28"><expr pos:start="61:15" pos:end="61:28"><name pos:start="61:15" pos:end="61:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
