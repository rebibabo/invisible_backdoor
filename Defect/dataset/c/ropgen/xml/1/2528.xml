<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2528.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:41">vncws_send_handshake_response</name><parameter_list pos:start="1:42" pos:end="1:72">(<parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:50">VncState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">vs</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:71"><decl pos:start="1:57" pos:end="1:71"><type pos:start="1:57" pos:end="1:71"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name><modifier pos:start="1:67" pos:end="1:67">*</modifier></type> <name pos:start="1:69" pos:end="1:71">key</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:23">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:58"><name pos:start="5:10" pos:end="5:21">combined_key</name><index pos:start="5:22" pos:end="5:58">[<expr pos:start="5:23" pos:end="5:57"><name pos:start="5:23" pos:end="5:39">WS_CLIENT_KEY_LEN</name> <operator pos:start="5:41" pos:end="5:41">+</operator> <name pos:start="5:43" pos:end="5:53">WS_GUID_LEN</name> <operator pos:start="5:55" pos:end="5:55">+</operator> <literal type="number" pos:start="5:57" pos:end="5:57">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:30"><name pos:start="7:10" pos:end="7:13">hash</name><index pos:start="7:14" pos:end="7:30">[<expr pos:start="7:15" pos:end="7:29"><name pos:start="7:15" pos:end="7:29">SHA1_DIGEST_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:20">hash_size</name> <init pos:start="9:22" pos:end="9:38">= <expr pos:start="9:24" pos:end="9:38"><name pos:start="9:24" pos:end="9:38">SHA1_DIGEST_LEN</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:16">accept</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>, <decl pos:start="11:26" pos:end="11:41"><type ref="prev" pos:start="11:5" pos:end="11:10"><modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:34">response</name> <init pos:start="11:36" pos:end="11:41">= <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">gnutls_datum_t</name></type> <name pos:start="13:20" pos:end="13:21">in</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><call pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:13">g_strlcpy</name><argument_list pos:start="17:14" pos:end="17:55">(<argument pos:start="17:15" pos:end="17:26"><expr pos:start="17:15" pos:end="17:26"><name pos:start="17:15" pos:end="17:26">combined_key</name></expr></argument>, <argument pos:start="17:29" pos:end="17:31"><expr pos:start="17:29" pos:end="17:31"><name pos:start="17:29" pos:end="17:31">key</name></expr></argument>, <argument pos:start="17:34" pos:end="17:54"><expr pos:start="17:34" pos:end="17:54"><name pos:start="17:34" pos:end="17:50">WS_CLIENT_KEY_LEN</name> <operator pos:start="17:52" pos:end="17:52">+</operator> <literal type="number" pos:start="17:54" pos:end="17:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:74"><expr pos:start="19:5" pos:end="19:73"><call pos:start="19:5" pos:end="19:73"><name pos:start="19:5" pos:end="19:13">g_strlcat</name><argument_list pos:start="19:14" pos:end="19:73">(<argument pos:start="19:15" pos:end="19:26"><expr pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:26">combined_key</name></expr></argument>, <argument pos:start="19:29" pos:end="19:35"><expr pos:start="19:29" pos:end="19:35"><name pos:start="19:29" pos:end="19:35">WS_GUID</name></expr></argument>, <argument pos:start="19:38" pos:end="19:72"><expr pos:start="19:38" pos:end="19:72"><name pos:start="19:38" pos:end="19:54">WS_CLIENT_KEY_LEN</name> <operator pos:start="19:56" pos:end="19:56">+</operator> <name pos:start="19:58" pos:end="19:68">WS_GUID_LEN</name> <operator pos:start="19:70" pos:end="19:70">+</operator> <literal type="number" pos:start="19:72" pos:end="19:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:28">/* hash and encode it */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:6">in</name><operator pos:start="25:7" pos:end="25:7">.</operator><name pos:start="25:8" pos:end="25:11">data</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">(</operator><name pos:start="25:16" pos:end="25:19">void</name> <operator pos:start="25:21" pos:end="25:21">*</operator><operator pos:start="25:22" pos:end="25:22">)</operator><name pos:start="25:23" pos:end="25:34">combined_key</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:46"><expr pos:start="27:5" pos:end="27:45"><name pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:6">in</name><operator pos:start="27:7" pos:end="27:7">.</operator><name pos:start="27:8" pos:end="27:11">size</name></name> <operator pos:start="27:13" pos:end="27:13">=</operator> <name pos:start="27:15" pos:end="27:31">WS_CLIENT_KEY_LEN</name> <operator pos:start="27:33" pos:end="27:33">+</operator> <name pos:start="27:35" pos:end="27:45">WS_GUID_LEN</name></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="31:32">(<expr pos:start="29:9" pos:end="31:31"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:26">gnutls_fingerprint</name><argument_list pos:start="29:27" pos:end="29:66">(<argument pos:start="29:28" pos:end="29:42"><expr pos:start="29:28" pos:end="29:42"><name pos:start="29:28" pos:end="29:42">GNUTLS_DIG_SHA1</name></expr></argument>, <argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><operator pos:start="29:45" pos:end="29:45">&amp;</operator><name pos:start="29:46" pos:end="29:47">in</name></expr></argument>, <argument pos:start="29:50" pos:end="29:53"><expr pos:start="29:50" pos:end="29:53"><name pos:start="29:50" pos:end="29:53">hash</name></expr></argument>, <argument pos:start="29:56" pos:end="29:65"><expr pos:start="29:56" pos:end="29:65"><operator pos:start="29:56" pos:end="29:56">&amp;</operator><name pos:start="29:57" pos:end="29:65">hash_size</name></expr></argument>)</argument_list></call>

            <operator pos:start="31:13" pos:end="31:14">==</operator> <name pos:start="31:16" pos:end="31:31">GNUTLS_E_SUCCESS</name></expr>)</condition> <block pos:start="31:34" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:66">

        <expr_stmt pos:start="33:9" pos:end="33:66"><expr pos:start="33:9" pos:end="33:65"><name pos:start="33:9" pos:end="33:14">accept</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:65"><name pos:start="33:18" pos:end="33:32">g_base64_encode</name><argument_list pos:start="33:33" pos:end="33:65">(<argument pos:start="33:34" pos:end="33:47"><expr pos:start="33:34" pos:end="33:47"><operator pos:start="33:34" pos:end="33:34">(</operator><name pos:start="33:35" pos:end="33:40">guchar</name> <operator pos:start="33:42" pos:end="33:42">*</operator><operator pos:start="33:43" pos:end="33:43">)</operator><name pos:start="33:44" pos:end="33:47">hash</name></expr></argument>, <argument pos:start="33:50" pos:end="33:64"><expr pos:start="33:50" pos:end="33:64"><name pos:start="33:50" pos:end="33:64">SHA1_DIGEST_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="45:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:23">(<expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:14">accept</name> <operator pos:start="37:16" pos:end="37:17">==</operator> <name pos:start="37:19" pos:end="37:22">NULL</name></expr>)</condition> <block pos:start="37:25" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:15">

        <expr_stmt pos:start="39:9" pos:end="39:61"><expr pos:start="39:9" pos:end="39:60"><call pos:start="39:9" pos:end="39:60"><name pos:start="39:9" pos:end="39:17">VNC_DEBUG</name><argument_list pos:start="39:18" pos:end="39:60">(<argument pos:start="39:19" pos:end="39:59"><expr pos:start="39:19" pos:end="39:59"><literal type="string" pos:start="39:19" pos:end="39:59">"Hashing Websocket combined key failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><call pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:24">vnc_client_error</name><argument_list pos:start="41:25" pos:end="41:28">(<argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><name pos:start="41:26" pos:end="41:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:12">response</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:52"><name pos:start="49:16" pos:end="49:30">g_strdup_printf</name><argument_list pos:start="49:31" pos:end="49:52">(<argument pos:start="49:32" pos:end="49:43"><expr pos:start="49:32" pos:end="49:43"><name pos:start="49:32" pos:end="49:43">WS_HANDSHAKE</name></expr></argument>, <argument pos:start="49:46" pos:end="49:51"><expr pos:start="49:46" pos:end="49:51"><name pos:start="49:46" pos:end="49:51">accept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:46"><expr pos:start="51:5" pos:end="51:45"><call pos:start="51:5" pos:end="51:45"><name pos:start="51:5" pos:end="51:13">vnc_write</name><argument_list pos:start="51:14" pos:end="51:45">(<argument pos:start="51:15" pos:end="51:16"><expr pos:start="51:15" pos:end="51:16"><name pos:start="51:15" pos:end="51:16">vs</name></expr></argument>, <argument pos:start="51:19" pos:end="51:26"><expr pos:start="51:19" pos:end="51:26"><name pos:start="51:19" pos:end="51:26">response</name></expr></argument>, <argument pos:start="51:29" pos:end="51:44"><expr pos:start="51:29" pos:end="51:44"><call pos:start="51:29" pos:end="51:44"><name pos:start="51:29" pos:end="51:34">strlen</name><argument_list pos:start="51:35" pos:end="51:44">(<argument pos:start="51:36" pos:end="51:43"><expr pos:start="51:36" pos:end="51:43"><name pos:start="51:36" pos:end="51:43">response</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:18"><expr pos:start="53:5" pos:end="53:17"><call pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:13">vnc_flush</name><argument_list pos:start="53:14" pos:end="53:17">(<argument pos:start="53:15" pos:end="53:16"><expr pos:start="53:15" pos:end="53:16"><name pos:start="53:15" pos:end="53:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:18">(<argument pos:start="57:12" pos:end="57:17"><expr pos:start="57:12" pos:end="57:17"><name pos:start="57:12" pos:end="57:17">accept</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><call pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:10">g_free</name><argument_list pos:start="59:11" pos:end="59:20">(<argument pos:start="59:12" pos:end="59:19"><expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:19">response</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:22"><expr pos:start="63:5" pos:end="63:21"><name pos:start="63:5" pos:end="63:17"><name pos:start="63:5" pos:end="63:6">vs</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:17">encode_ws</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><call pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:18">vnc_init_state</name><argument_list pos:start="65:19" pos:end="65:22">(<argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
