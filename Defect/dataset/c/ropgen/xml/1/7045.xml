<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7045.c" pos:tabs="8"><function pos:start="1:1" pos:end="194:13"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">wmavoice_decode_init</name><parameter_list pos:start="1:40" pos:end="1:60">(<parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="194:13">{<block_content pos:start="5:5" pos:end="194:13">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">n</name></decl>, <decl pos:start="5:12" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:16">flags</name></decl>, <decl pos:start="5:19" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:29">pitch_range</name></decl>, <decl pos:start="5:32" pos:end="5:41"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:41">lsp16_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">WMAVoiceContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:39">= <expr pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:28">ctx</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" format="doxygen" pos:start="11:5" pos:end="25:7">/**

     * Extradata layout:

     * - byte  0-18: WMAPro-in-WMAVoice extradata (see wmaprodec.c),

     * - byte 19-22: flags field (annoyingly in LE; see below for known

     *               values),

     * - byte 23-46: variable bitmode tree (really just 17 * 3 bits,

     *               rest is 0).

     */</comment>

    <if_stmt pos:start="27:5" pos:end="194:13"><if pos:start="27:5" pos:end="194:13">if <condition pos:start="27:8" pos:end="27:34">(<expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:11">ctx</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:27">extradata_size</name></name> <operator pos:start="27:29" pos:end="27:30">!=</operator> <literal type="number" pos:start="27:32" pos:end="27:33">46</literal></expr>)</condition> <block pos:start="27:36" pos:end="194:13">{<block_content pos:start="29:9" pos:end="194:13">

        <expr_stmt pos:start="29:9" pos:end="33:36"><expr pos:start="29:9" pos:end="33:35"><call pos:start="29:9" pos:end="33:35"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="33:35">(<argument pos:start="29:16" pos:end="29:18"><expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ctx</name></expr></argument>, <argument pos:start="29:21" pos:end="29:32"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="31:16" pos:end="31:59"><expr pos:start="31:16" pos:end="31:59"><literal type="string" pos:start="31:16" pos:end="31:59">"Invalid extradata size %d (should be 46)\n"</literal></expr></argument>,

               <argument pos:start="33:16" pos:end="33:34"><expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:18">ctx</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:34">extradata_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:9">flags</name>                <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:55"><name pos:start="37:28" pos:end="37:34">AV_RL32</name><argument_list pos:start="37:35" pos:end="37:55">(<argument pos:start="37:36" pos:end="37:54"><expr pos:start="37:36" pos:end="37:54"><name pos:start="37:36" pos:end="37:49"><name pos:start="37:36" pos:end="37:38">ctx</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:49">extradata</name></name> <operator pos:start="37:51" pos:end="37:51">+</operator> <literal type="number" pos:start="37:53" pos:end="37:54">18</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:24">spillover_bitsize</name></name> <operator pos:start="39:26" pos:end="39:26">=</operator> <literal type="number" pos:start="39:28" pos:end="39:30">3</literal> <operator pos:start="39:30" pos:end="39:30">+</operator> <call pos:start="39:32" pos:end="39:61"><name pos:start="39:32" pos:end="39:43">av_ceil_log2</name><argument_list pos:start="39:44" pos:end="39:61">(<argument pos:start="39:45" pos:end="39:60"><expr pos:start="39:45" pos:end="39:60"><name pos:start="39:45" pos:end="39:60"><name pos:start="39:45" pos:end="39:47">ctx</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:60">block_align</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:13"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:13">do_apf</name></name>            <operator pos:start="41:26" pos:end="41:26">=</operator>    <name pos:start="41:31" pos:end="41:35">flags</name> <operator pos:start="41:37" pos:end="41:37">&amp;</operator> <literal type="number" pos:start="41:39" pos:end="41:41">0x1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="194:13"><if pos:start="43:5" pos:end="194:13">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:17">do_apf</name></name></expr>)</condition> <block pos:start="43:20" pos:end="194:13">{<block_content pos:start="45:9" pos:end="194:13">

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><call pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:20">ff_rdft_init</name><argument_list pos:start="45:21" pos:end="45:43">(<argument pos:start="45:22" pos:end="45:29"><expr pos:start="45:22" pos:end="45:29"><operator pos:start="45:22" pos:end="45:22">&amp;</operator><name pos:start="45:23" pos:end="45:29"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">rdft</name></name></expr></argument>,  <argument pos:start="45:33" pos:end="45:33"><expr pos:start="45:33" pos:end="45:33"><literal type="number" pos:start="45:33" pos:end="45:33">7</literal></expr></argument>, <argument pos:start="45:36" pos:end="45:42"><expr pos:start="45:36" pos:end="45:42"><name pos:start="45:36" pos:end="45:42">DFT_R2C</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><call pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:20">ff_rdft_init</name><argument_list pos:start="47:21" pos:end="47:44">(<argument pos:start="47:22" pos:end="47:30"><expr pos:start="47:22" pos:end="47:30"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:30"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:30">irdft</name></name></expr></argument>, <argument pos:start="47:33" pos:end="47:33"><expr pos:start="47:33" pos:end="47:33"><literal type="number" pos:start="47:33" pos:end="47:33">7</literal></expr></argument>, <argument pos:start="47:36" pos:end="47:43"><expr pos:start="47:36" pos:end="47:43"><name pos:start="47:36" pos:end="47:43">IDFT_C2R</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:40"><expr pos:start="49:9" pos:end="49:39"><call pos:start="49:9" pos:end="49:39"><name pos:start="49:9" pos:end="49:19">ff_dct_init</name><argument_list pos:start="49:20" pos:end="49:39">(<argument pos:start="49:21" pos:end="49:27"><expr pos:start="49:21" pos:end="49:27"><operator pos:start="49:21" pos:end="49:21">&amp;</operator><name pos:start="49:22" pos:end="49:27"><name pos:start="49:22" pos:end="49:22">s</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:27">dct</name></name></expr></argument>,  <argument pos:start="49:31" pos:end="49:31"><expr pos:start="49:31" pos:end="49:31"><literal type="number" pos:start="49:31" pos:end="49:31">6</literal></expr></argument>, <argument pos:start="49:34" pos:end="49:38"><expr pos:start="49:34" pos:end="49:38"><name pos:start="49:34" pos:end="49:38">DCT_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:40"><expr pos:start="51:9" pos:end="51:39"><call pos:start="51:9" pos:end="51:39"><name pos:start="51:9" pos:end="51:19">ff_dct_init</name><argument_list pos:start="51:20" pos:end="51:39">(<argument pos:start="51:21" pos:end="51:27"><expr pos:start="51:21" pos:end="51:27"><operator pos:start="51:21" pos:end="51:21">&amp;</operator><name pos:start="51:22" pos:end="51:27"><name pos:start="51:22" pos:end="51:22">s</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:27">dst</name></name></expr></argument>,  <argument pos:start="51:31" pos:end="51:31"><expr pos:start="51:31" pos:end="51:31"><literal type="number" pos:start="51:31" pos:end="51:31">6</literal></expr></argument>, <argument pos:start="51:34" pos:end="51:38"><expr pos:start="51:34" pos:end="51:38"><name pos:start="51:34" pos:end="51:38">DST_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><call pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:27">ff_sine_window_init</name><argument_list pos:start="55:28" pos:end="55:40">(<argument pos:start="55:29" pos:end="55:34"><expr pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:34"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:34">cos</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><literal type="number" pos:start="55:37" pos:end="55:39">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:62"><expr pos:start="57:9" pos:end="57:61"><call pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:14">memcpy</name><argument_list pos:start="57:15" pos:end="57:61">(<argument pos:start="57:16" pos:end="57:27"><expr pos:start="57:16" pos:end="57:27"><operator pos:start="57:16" pos:end="57:16">&amp;</operator><name pos:start="57:17" pos:end="57:27"><name pos:start="57:17" pos:end="57:17">s</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:22">sin</name><index pos:start="57:23" pos:end="57:27">[<expr pos:start="57:24" pos:end="57:26"><literal type="number" pos:start="57:24" pos:end="57:26">255</literal></expr>]</index></name></expr></argument>, <argument pos:start="57:30" pos:end="57:35"><expr pos:start="57:30" pos:end="57:35"><name pos:start="57:30" pos:end="57:35"><name pos:start="57:30" pos:end="57:30">s</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:35">cos</name></name></expr></argument>, <argument pos:start="57:38" pos:end="57:60"><expr pos:start="57:38" pos:end="57:60"><literal type="number" pos:start="57:38" pos:end="57:40">256</literal> <operator pos:start="57:42" pos:end="57:42">*</operator> <sizeof pos:start="57:44" pos:end="57:60">sizeof<argument_list pos:start="57:50" pos:end="57:60">(<argument pos:start="57:51" pos:end="57:59"><expr pos:start="57:51" pos:end="57:59"><name pos:start="57:51" pos:end="57:59"><name pos:start="57:51" pos:end="57:51">s</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:56">cos</name><index pos:start="57:57" pos:end="57:59">[<expr pos:start="57:58" pos:end="57:58"><literal type="number" pos:start="57:58" pos:end="57:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="59:9" pos:end="194:13">for <control pos:start="59:13" pos:end="59:33">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">n</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:28"><expr pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:21">n</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <literal type="number" pos:start="59:25" pos:end="59:27">255</literal></expr>;</condition> <incr pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:30">n</name><operator pos:start="59:31" pos:end="59:32">++</operator></expr></incr>)</control> <block pos:start="59:35" pos:end="194:13">{<block_content pos:start="61:13" pos:end="194:13">

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">sin</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">n</name></expr>]</index></name>       <operator pos:start="61:29" pos:end="61:29">=</operator> <operator pos:start="61:31" pos:end="61:31">-</operator><name pos:start="61:32" pos:end="61:46"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:37">sin</name><index pos:start="61:38" pos:end="61:46">[<expr pos:start="61:39" pos:end="61:45"><literal type="number" pos:start="61:39" pos:end="61:43">510</literal> <operator pos:start="61:43" pos:end="61:43">-</operator> <name pos:start="61:45" pos:end="61:45">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:41"><expr pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:27"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:18">cos</name><index pos:start="63:19" pos:end="63:27">[<expr pos:start="63:20" pos:end="63:26"><literal type="number" pos:start="63:20" pos:end="63:22">510</literal> <operator pos:start="63:24" pos:end="63:24">-</operator> <name pos:start="63:26" pos:end="63:26">n</name></expr>]</index></name> <operator pos:start="63:29" pos:end="63:29">=</operator>  <name pos:start="63:32" pos:end="63:40"><name pos:start="63:32" pos:end="63:32">s</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:37">cos</name><index pos:start="63:38" pos:end="63:40">[<expr pos:start="63:39" pos:end="63:39"><name pos:start="63:39" pos:end="63:39">n</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:48"><expr pos:start="67:5" pos:end="67:47"><name pos:start="67:5" pos:end="67:23"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:23">denoise_strength</name></name>  <operator pos:start="67:26" pos:end="67:26">=</operator>   <operator pos:start="67:30" pos:end="67:30">(</operator><name pos:start="67:31" pos:end="67:35">flags</name> <operator pos:start="67:37" pos:end="67:38">&gt;&gt;</operator> <literal type="number" pos:start="67:40" pos:end="67:40">2</literal><operator pos:start="67:41" pos:end="67:41">)</operator> <operator pos:start="67:43" pos:end="67:43">&amp;</operator> <literal type="number" pos:start="67:45" pos:end="67:47">0xF</literal></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="194:13"><if pos:start="69:5" pos:end="194:13">if <condition pos:start="69:8" pos:end="69:34">(<expr pos:start="69:9" pos:end="69:33"><name pos:start="69:9" pos:end="69:27"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:27">denoise_strength</name></name> <operator pos:start="69:29" pos:end="69:30">&gt;=</operator> <literal type="number" pos:start="69:32" pos:end="69:33">12</literal></expr>)</condition> <block pos:start="69:36" pos:end="194:13">{<block_content pos:start="71:9" pos:end="194:13">

        <expr_stmt pos:start="71:9" pos:end="75:36"><expr pos:start="71:9" pos:end="75:35"><call pos:start="71:9" pos:end="75:35"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="75:35">(<argument pos:start="71:16" pos:end="71:18"><expr pos:start="71:16" pos:end="71:18"><name pos:start="71:16" pos:end="71:18">ctx</name></expr></argument>, <argument pos:start="71:21" pos:end="71:32"><expr pos:start="71:21" pos:end="71:32"><name pos:start="71:21" pos:end="71:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="73:16" pos:end="73:62"><expr pos:start="73:16" pos:end="73:62"><literal type="string" pos:start="73:16" pos:end="73:62">"Invalid denoise filter strength %d (max=11)\n"</literal></expr></argument>,

               <argument pos:start="75:16" pos:end="75:34"><expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:34">denoise_strength</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:24">denoise_tilt_corr</name></name> <operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">!</operator><operator pos:start="79:29" pos:end="79:29">!</operator><operator pos:start="79:30" pos:end="79:30">(</operator><name pos:start="79:31" pos:end="79:35">flags</name> <operator pos:start="79:37" pos:end="79:37">&amp;</operator> <literal type="number" pos:start="79:39" pos:end="79:42">0x40</literal><operator pos:start="79:43" pos:end="79:43">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:48"><expr pos:start="81:5" pos:end="81:47"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:15">dc_level</name></name>          <operator pos:start="81:26" pos:end="81:26">=</operator>   <operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:35">flags</name> <operator pos:start="81:37" pos:end="81:38">&gt;&gt;</operator> <literal type="number" pos:start="81:40" pos:end="81:40">7</literal><operator pos:start="81:41" pos:end="81:41">)</operator> <operator pos:start="81:43" pos:end="81:43">&amp;</operator> <literal type="number" pos:start="81:45" pos:end="81:47">0xF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:46"><expr pos:start="83:5" pos:end="83:45"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:5">s</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:17">lsp_q_mode</name></name>        <operator pos:start="83:26" pos:end="83:26">=</operator> <operator pos:start="83:28" pos:end="83:28">!</operator><operator pos:start="83:29" pos:end="83:29">!</operator><operator pos:start="83:30" pos:end="83:30">(</operator><name pos:start="83:31" pos:end="83:35">flags</name> <operator pos:start="83:37" pos:end="83:37">&amp;</operator> <literal type="number" pos:start="83:39" pos:end="83:44">0x2000</literal><operator pos:start="83:45" pos:end="83:45">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:46"><expr pos:start="85:5" pos:end="85:45"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:5">s</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:19">lsp_def_mode</name></name>      <operator pos:start="85:26" pos:end="85:26">=</operator> <operator pos:start="85:28" pos:end="85:28">!</operator><operator pos:start="85:29" pos:end="85:29">!</operator><operator pos:start="85:30" pos:end="85:30">(</operator><name pos:start="85:31" pos:end="85:35">flags</name> <operator pos:start="85:37" pos:end="85:37">&amp;</operator> <literal type="number" pos:start="85:39" pos:end="85:44">0x4000</literal><operator pos:start="85:45" pos:end="85:45">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:14">lsp16_flag</name>           <operator pos:start="87:26" pos:end="87:26">=</operator>    <name pos:start="87:31" pos:end="87:35">flags</name> <operator pos:start="87:37" pos:end="87:37">&amp;</operator> <literal type="number" pos:start="87:39" pos:end="87:44">0x1000</literal></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="194:13"><if pos:start="89:5" pos:end="97:5">if <condition pos:start="89:8" pos:end="89:19">(<expr pos:start="89:9" pos:end="89:18"><name pos:start="89:9" pos:end="89:18">lsp16_flag</name></expr>)</condition> <block pos:start="89:21" pos:end="97:5">{<block_content pos:start="91:9" pos:end="95:35">

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:15">lsps</name></name>               <operator pos:start="91:31" pos:end="91:31">=</operator> <literal type="number" pos:start="91:33" pos:end="91:34">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:35"><expr pos:start="93:9" pos:end="93:34"><name pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:28">frame_lsp_bitsize</name></name>  <operator pos:start="93:31" pos:end="93:31">=</operator> <literal type="number" pos:start="93:33" pos:end="93:34">34</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:35"><expr pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:29">sframe_lsp_bitsize</name></name> <operator pos:start="95:31" pos:end="95:31">=</operator> <literal type="number" pos:start="95:33" pos:end="95:34">60</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="194:13">else <block pos:start="97:12" pos:end="194:13">{<block_content pos:start="99:9" pos:end="194:13">

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">lsps</name></name>               <operator pos:start="99:31" pos:end="99:31">=</operator> <literal type="number" pos:start="99:33" pos:end="99:34">10</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:35"><expr pos:start="101:9" pos:end="101:34"><name pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:28">frame_lsp_bitsize</name></name>  <operator pos:start="101:31" pos:end="101:31">=</operator> <literal type="number" pos:start="101:33" pos:end="101:34">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:9">s</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:29">sframe_lsp_bitsize</name></name> <operator pos:start="103:31" pos:end="103:31">=</operator> <literal type="number" pos:start="103:33" pos:end="103:34">48</literal></expr>;</expr_stmt>


    <for pos:start="106:5" pos:end="108:61">for <control pos:start="106:9" pos:end="106:33">(<init pos:start="106:10" pos:end="106:15"><expr pos:start="106:10" pos:end="106:14"><name pos:start="106:10" pos:end="106:10">n</name> <operator pos:start="106:12" pos:end="106:12">=</operator> <literal type="number" pos:start="106:14" pos:end="106:14">0</literal></expr>;</init> <condition pos:start="106:17" pos:end="106:28"><expr pos:start="106:17" pos:end="106:27"><name pos:start="106:17" pos:end="106:17">n</name> <operator pos:start="106:19" pos:end="106:19">&lt;</operator> <name pos:start="106:21" pos:end="106:27"><name pos:start="106:21" pos:end="106:21">s</name><operator pos:start="106:22" pos:end="106:23">-&gt;</operator><name pos:start="106:24" pos:end="106:27">lsps</name></name></expr>;</condition> <incr pos:start="106:30" pos:end="106:32"><expr pos:start="106:30" pos:end="106:32"><name pos:start="106:30" pos:end="106:30">n</name><operator pos:start="106:31" pos:end="106:32">++</operator></expr></incr>)</control><block type="pseudo" pos:start="108:9" pos:end="108:61"><block_content pos:start="108:9" pos:end="108:61">

        <expr_stmt pos:start="108:9" pos:end="108:61"><expr pos:start="108:9" pos:end="108:60"><name pos:start="108:9" pos:end="108:23"><name pos:start="108:9" pos:end="108:9">s</name><operator pos:start="108:10" pos:end="108:11">-&gt;</operator><name pos:start="108:12" pos:end="108:20">prev_lsps</name><index pos:start="108:21" pos:end="108:23">[<expr pos:start="108:22" pos:end="108:22"><name pos:start="108:22" pos:end="108:22">n</name></expr>]</index></name> <operator pos:start="108:25" pos:end="108:25">=</operator> <name pos:start="108:27" pos:end="108:30">M_PI</name> <operator pos:start="108:32" pos:end="108:32">*</operator> <operator pos:start="108:34" pos:end="108:34">(</operator><name pos:start="108:35" pos:end="108:35">n</name> <operator pos:start="108:37" pos:end="108:37">+</operator> <literal type="number" pos:start="108:39" pos:end="108:41">1.0</literal><operator pos:start="108:42" pos:end="108:42">)</operator> <operator pos:start="108:44" pos:end="108:44">/</operator> <operator pos:start="108:46" pos:end="108:46">(</operator><name pos:start="108:47" pos:end="108:53"><name pos:start="108:47" pos:end="108:47">s</name><operator pos:start="108:48" pos:end="108:49">-&gt;</operator><name pos:start="108:50" pos:end="108:53">lsps</name></name> <operator pos:start="108:55" pos:end="108:55">+</operator> <literal type="number" pos:start="108:57" pos:end="108:59">1.0</literal><operator pos:start="108:60" pos:end="108:60">)</operator></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="112:5" pos:end="112:80"><expr pos:start="112:5" pos:end="112:79"><call pos:start="112:5" pos:end="112:79"><name pos:start="112:5" pos:end="112:17">init_get_bits</name><argument_list pos:start="112:18" pos:end="112:79">(<argument pos:start="112:19" pos:end="112:24"><expr pos:start="112:19" pos:end="112:24"><operator pos:start="112:19" pos:end="112:19">&amp;</operator><name pos:start="112:20" pos:end="112:24"><name pos:start="112:20" pos:end="112:20">s</name><operator pos:start="112:21" pos:end="112:22">-&gt;</operator><name pos:start="112:23" pos:end="112:24">gb</name></name></expr></argument>, <argument pos:start="112:27" pos:end="112:45"><expr pos:start="112:27" pos:end="112:45"><name pos:start="112:27" pos:end="112:40"><name pos:start="112:27" pos:end="112:29">ctx</name><operator pos:start="112:30" pos:end="112:31">-&gt;</operator><name pos:start="112:32" pos:end="112:40">extradata</name></name> <operator pos:start="112:42" pos:end="112:42">+</operator> <literal type="number" pos:start="112:44" pos:end="112:45">22</literal></expr></argument>, <argument pos:start="112:48" pos:end="112:78"><expr pos:start="112:48" pos:end="112:78"><operator pos:start="112:48" pos:end="112:48">(</operator><name pos:start="112:49" pos:end="112:67"><name pos:start="112:49" pos:end="112:51">ctx</name><operator pos:start="112:52" pos:end="112:53">-&gt;</operator><name pos:start="112:54" pos:end="112:67">extradata_size</name></name> <operator pos:start="112:69" pos:end="112:69">-</operator> <literal type="number" pos:start="112:71" pos:end="112:72">22</literal><operator pos:start="112:73" pos:end="112:73">)</operator> <operator pos:start="112:75" pos:end="112:76">&lt;&lt;</operator> <literal type="number" pos:start="112:78" pos:end="112:78">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="114:5" pos:end="194:13"><if pos:start="114:5" pos:end="194:13">if <condition pos:start="114:8" pos:end="114:48">(<expr pos:start="114:9" pos:end="114:47"><call pos:start="114:9" pos:end="114:43"><name pos:start="114:9" pos:end="114:22">decode_vbmtree</name><argument_list pos:start="114:23" pos:end="114:43">(<argument pos:start="114:24" pos:end="114:29"><expr pos:start="114:24" pos:end="114:29"><operator pos:start="114:24" pos:end="114:24">&amp;</operator><name pos:start="114:25" pos:end="114:29"><name pos:start="114:25" pos:end="114:25">s</name><operator pos:start="114:26" pos:end="114:27">-&gt;</operator><name pos:start="114:28" pos:end="114:29">gb</name></name></expr></argument>, <argument pos:start="114:32" pos:end="114:42"><expr pos:start="114:32" pos:end="114:42"><name pos:start="114:32" pos:end="114:42"><name pos:start="114:32" pos:end="114:32">s</name><operator pos:start="114:33" pos:end="114:34">-&gt;</operator><name pos:start="114:35" pos:end="114:42">vbm_tree</name></name></expr></argument>)</argument_list></call> <operator pos:start="114:45" pos:end="114:45">&lt;</operator> <literal type="number" pos:start="114:47" pos:end="114:47">0</literal></expr>)</condition> <block pos:start="114:50" pos:end="194:13">{<block_content pos:start="116:9" pos:end="194:13">

        <expr_stmt pos:start="116:9" pos:end="116:75"><expr pos:start="116:9" pos:end="116:74"><call pos:start="116:9" pos:end="116:74"><name pos:start="116:9" pos:end="116:14">av_log</name><argument_list pos:start="116:15" pos:end="116:74">(<argument pos:start="116:16" pos:end="116:18"><expr pos:start="116:16" pos:end="116:18"><name pos:start="116:16" pos:end="116:18">ctx</name></expr></argument>, <argument pos:start="116:21" pos:end="116:32"><expr pos:start="116:21" pos:end="116:32"><name pos:start="116:21" pos:end="116:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="116:35" pos:end="116:73"><expr pos:start="116:35" pos:end="116:73"><literal type="string" pos:start="116:35" pos:end="116:73">"Invalid VBM tree; broken extradata?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="122:5" pos:end="122:74"><expr pos:start="122:5" pos:end="122:73"><name pos:start="122:5" pos:end="122:20"><name pos:start="122:5" pos:end="122:5">s</name><operator pos:start="122:6" pos:end="122:7">-&gt;</operator><name pos:start="122:8" pos:end="122:20">min_pitch_val</name></name>    <operator pos:start="122:25" pos:end="122:25">=</operator> <operator pos:start="122:27" pos:end="122:27">(</operator><operator pos:start="122:28" pos:end="122:28">(</operator><name pos:start="122:29" pos:end="122:44"><name pos:start="122:29" pos:end="122:31">ctx</name><operator pos:start="122:32" pos:end="122:33">-&gt;</operator><name pos:start="122:34" pos:end="122:44">sample_rate</name></name> <operator pos:start="122:46" pos:end="122:47">&lt;&lt;</operator> <literal type="number" pos:start="122:49" pos:end="122:49">8</literal><operator pos:start="122:50" pos:end="122:50">)</operator>      <operator pos:start="122:57" pos:end="122:57">/</operator>  <literal type="number" pos:start="122:60" pos:end="122:64">400</literal> <operator pos:start="122:64" pos:end="122:64">+</operator> <literal type="number" pos:start="122:66" pos:end="122:67">50</literal><operator pos:start="122:68" pos:end="122:68">)</operator> <operator pos:start="122:70" pos:end="122:71">&gt;&gt;</operator> <literal type="number" pos:start="122:73" pos:end="122:73">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="124:5" pos:end="124:74"><expr pos:start="124:5" pos:end="124:73"><name pos:start="124:5" pos:end="124:20"><name pos:start="124:5" pos:end="124:5">s</name><operator pos:start="124:6" pos:end="124:7">-&gt;</operator><name pos:start="124:8" pos:end="124:20">max_pitch_val</name></name>    <operator pos:start="124:25" pos:end="124:25">=</operator> <operator pos:start="124:27" pos:end="124:27">(</operator><operator pos:start="124:28" pos:end="124:28">(</operator><name pos:start="124:29" pos:end="124:44"><name pos:start="124:29" pos:end="124:31">ctx</name><operator pos:start="124:32" pos:end="124:33">-&gt;</operator><name pos:start="124:34" pos:end="124:44">sample_rate</name></name> <operator pos:start="124:46" pos:end="124:47">&lt;&lt;</operator> <literal type="number" pos:start="124:49" pos:end="124:49">8</literal><operator pos:start="124:50" pos:end="124:50">)</operator> <operator pos:start="124:52" pos:end="124:52">*</operator> <literal type="number" pos:start="124:54" pos:end="124:55">37</literal> <operator pos:start="124:57" pos:end="124:57">/</operator> <literal type="number" pos:start="124:59" pos:end="124:64">2000</literal> <operator pos:start="124:64" pos:end="124:64">+</operator> <literal type="number" pos:start="124:66" pos:end="124:67">50</literal><operator pos:start="124:68" pos:end="124:68">)</operator> <operator pos:start="124:70" pos:end="124:71">&gt;&gt;</operator> <literal type="number" pos:start="124:73" pos:end="124:73">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="126:5" pos:end="126:62"><expr pos:start="126:5" pos:end="126:61"><name pos:start="126:5" pos:end="126:15">pitch_range</name>         <operator pos:start="126:25" pos:end="126:25">=</operator> <name pos:start="126:27" pos:end="126:42"><name pos:start="126:27" pos:end="126:27">s</name><operator pos:start="126:28" pos:end="126:29">-&gt;</operator><name pos:start="126:30" pos:end="126:42">max_pitch_val</name></name> <operator pos:start="126:44" pos:end="126:44">-</operator> <name pos:start="126:46" pos:end="126:61"><name pos:start="126:46" pos:end="126:46">s</name><operator pos:start="126:47" pos:end="126:48">-&gt;</operator><name pos:start="126:49" pos:end="126:61">min_pitch_val</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="128:5" pos:end="194:13"><if pos:start="128:5" pos:end="194:13">if <condition pos:start="128:8" pos:end="128:25">(<expr pos:start="128:9" pos:end="128:24"><name pos:start="128:9" pos:end="128:19">pitch_range</name> <operator pos:start="128:21" pos:end="128:22">&lt;=</operator> <literal type="number" pos:start="128:24" pos:end="128:24">0</literal></expr>)</condition> <block pos:start="128:27" pos:end="194:13">{<block_content pos:start="130:9" pos:end="194:13">

        <expr_stmt pos:start="130:9" pos:end="130:78"><expr pos:start="130:9" pos:end="130:77"><call pos:start="130:9" pos:end="130:77"><name pos:start="130:9" pos:end="130:14">av_log</name><argument_list pos:start="130:15" pos:end="130:77">(<argument pos:start="130:16" pos:end="130:18"><expr pos:start="130:16" pos:end="130:18"><name pos:start="130:16" pos:end="130:18">ctx</name></expr></argument>, <argument pos:start="130:21" pos:end="130:32"><expr pos:start="130:21" pos:end="130:32"><name pos:start="130:21" pos:end="130:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="130:35" pos:end="130:76"><expr pos:start="130:35" pos:end="130:76"><literal type="string" pos:start="130:35" pos:end="130:76">"Invalid pitch range; broken extradata?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="134:5" pos:end="134:52"><expr pos:start="134:5" pos:end="134:51"><name pos:start="134:5" pos:end="134:18"><name pos:start="134:5" pos:end="134:5">s</name><operator pos:start="134:6" pos:end="134:7">-&gt;</operator><name pos:start="134:8" pos:end="134:18">pitch_nbits</name></name>      <operator pos:start="134:25" pos:end="134:25">=</operator> <call pos:start="134:27" pos:end="134:51"><name pos:start="134:27" pos:end="134:38">av_ceil_log2</name><argument_list pos:start="134:39" pos:end="134:51">(<argument pos:start="134:40" pos:end="134:50"><expr pos:start="134:40" pos:end="134:50"><name pos:start="134:40" pos:end="134:50">pitch_range</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="136:5" pos:end="136:29"><expr pos:start="136:5" pos:end="136:28"><name pos:start="136:5" pos:end="136:21"><name pos:start="136:5" pos:end="136:5">s</name><operator pos:start="136:6" pos:end="136:7">-&gt;</operator><name pos:start="136:8" pos:end="136:21">last_pitch_val</name></name>   <operator pos:start="136:25" pos:end="136:25">=</operator> <literal type="number" pos:start="136:27" pos:end="136:28">40</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="138:5" pos:end="138:40"><expr pos:start="138:5" pos:end="138:39"><name pos:start="138:5" pos:end="138:20"><name pos:start="138:5" pos:end="138:5">s</name><operator pos:start="138:6" pos:end="138:7">-&gt;</operator><name pos:start="138:8" pos:end="138:20">last_acb_type</name></name>    <operator pos:start="138:25" pos:end="138:25">=</operator> <name pos:start="138:27" pos:end="138:39">ACB_TYPE_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="140:5" pos:end="140:47"><expr pos:start="140:5" pos:end="140:46"><name pos:start="140:5" pos:end="140:23"><name pos:start="140:5" pos:end="140:5">s</name><operator pos:start="140:6" pos:end="140:7">-&gt;</operator><name pos:start="140:8" pos:end="140:23">history_nsamples</name></name> <operator pos:start="140:25" pos:end="140:25">=</operator> <name pos:start="140:27" pos:end="140:42"><name pos:start="140:27" pos:end="140:27">s</name><operator pos:start="140:28" pos:end="140:29">-&gt;</operator><name pos:start="140:30" pos:end="140:42">max_pitch_val</name></name> <operator pos:start="140:44" pos:end="140:44">+</operator> <literal type="number" pos:start="140:46" pos:end="140:46">8</literal></expr>;</expr_stmt>



    <if_stmt pos:start="144:5" pos:end="194:13"><if pos:start="144:5" pos:end="194:13">if <condition pos:start="144:8" pos:end="144:73">(<expr pos:start="144:9" pos:end="144:72"><name pos:start="144:9" pos:end="144:24"><name pos:start="144:9" pos:end="144:9">s</name><operator pos:start="144:10" pos:end="144:11">-&gt;</operator><name pos:start="144:12" pos:end="144:24">min_pitch_val</name></name> <operator pos:start="144:26" pos:end="144:26">&lt;</operator> <literal type="number" pos:start="144:28" pos:end="144:28">1</literal> <operator pos:start="144:30" pos:end="144:31">||</operator> <name pos:start="144:33" pos:end="144:51"><name pos:start="144:33" pos:end="144:33">s</name><operator pos:start="144:34" pos:end="144:35">-&gt;</operator><name pos:start="144:36" pos:end="144:51">history_nsamples</name></name> <operator pos:start="144:53" pos:end="144:53">&gt;</operator> <name pos:start="144:55" pos:end="144:72">MAX_SIGNAL_HISTORY</name></expr>)</condition> <block pos:start="144:75" pos:end="194:13">{<block_content pos:start="146:9" pos:end="194:13">

        <decl_stmt pos:start="146:9" pos:end="148:80"><decl pos:start="146:9" pos:end="146:58"><type pos:start="146:9" pos:end="146:11"><name pos:start="146:9" pos:end="146:11">int</name></type> <name pos:start="146:13" pos:end="146:18">min_sr</name> <init pos:start="146:20" pos:end="146:58">= <expr pos:start="146:22" pos:end="146:58"><operator pos:start="146:22" pos:end="146:22">(</operator><operator pos:start="146:23" pos:end="146:23">(</operator><operator pos:start="146:24" pos:end="146:24">(</operator><operator pos:start="146:25" pos:end="146:25">(</operator><literal type="number" pos:start="146:26" pos:end="146:26">1</literal> <operator pos:start="146:28" pos:end="146:29">&lt;&lt;</operator> <literal type="number" pos:start="146:31" pos:end="146:31">8</literal><operator pos:start="146:32" pos:end="146:32">)</operator> <operator pos:start="146:34" pos:end="146:34">-</operator> <literal type="number" pos:start="146:36" pos:end="146:37">50</literal><operator pos:start="146:38" pos:end="146:38">)</operator> <operator pos:start="146:40" pos:end="146:40">*</operator> <literal type="number" pos:start="146:42" pos:end="146:44">400</literal><operator pos:start="146:45" pos:end="146:45">)</operator> <operator pos:start="146:47" pos:end="146:47">+</operator> <literal type="number" pos:start="146:49" pos:end="146:52">0xFF</literal><operator pos:start="146:53" pos:end="146:53">)</operator> <operator pos:start="146:55" pos:end="146:56">&gt;&gt;</operator> <literal type="number" pos:start="146:58" pos:end="146:58">8</literal></expr></init></decl>,

            <decl pos:start="148:13" pos:end="148:79"><type ref="prev" pos:start="146:9" pos:end="146:11"/><name pos:start="148:13" pos:end="148:18">max_sr</name> <init pos:start="148:20" pos:end="148:79">= <expr pos:start="148:22" pos:end="148:79"><operator pos:start="148:22" pos:end="148:22">(</operator><operator pos:start="148:23" pos:end="148:23">(</operator><operator pos:start="148:24" pos:end="148:24">(</operator><operator pos:start="148:25" pos:end="148:25">(</operator><name pos:start="148:26" pos:end="148:43">MAX_SIGNAL_HISTORY</name> <operator pos:start="148:45" pos:end="148:45">-</operator> <literal type="number" pos:start="148:47" pos:end="148:47">8</literal><operator pos:start="148:48" pos:end="148:48">)</operator> <operator pos:start="148:50" pos:end="148:51">&lt;&lt;</operator> <literal type="number" pos:start="148:53" pos:end="148:53">8</literal><operator pos:start="148:54" pos:end="148:54">)</operator> <operator pos:start="148:56" pos:end="148:56">+</operator> <literal type="number" pos:start="148:58" pos:end="148:60">205</literal><operator pos:start="148:61" pos:end="148:61">)</operator> <operator pos:start="148:63" pos:end="148:63">*</operator> <literal type="number" pos:start="148:65" pos:end="148:68">2000</literal> <operator pos:start="148:70" pos:end="148:70">/</operator> <literal type="number" pos:start="148:72" pos:end="148:73">37</literal><operator pos:start="148:74" pos:end="148:74">)</operator> <operator pos:start="148:76" pos:end="148:77">&gt;&gt;</operator> <literal type="number" pos:start="148:79" pos:end="148:79">8</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="152:9" pos:end="156:49"><expr pos:start="152:9" pos:end="156:48"><call pos:start="152:9" pos:end="156:48"><name pos:start="152:9" pos:end="152:14">av_log</name><argument_list pos:start="152:15" pos:end="156:48">(<argument pos:start="152:16" pos:end="152:18"><expr pos:start="152:16" pos:end="152:18"><name pos:start="152:16" pos:end="152:18">ctx</name></expr></argument>, <argument pos:start="152:21" pos:end="152:32"><expr pos:start="152:21" pos:end="152:32"><name pos:start="152:21" pos:end="152:32">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="154:16" pos:end="154:61"><expr pos:start="154:16" pos:end="154:61"><literal type="string" pos:start="154:16" pos:end="154:61">"Unsupported samplerate %d (min=%d, max=%d)\n"</literal></expr></argument>,

               <argument pos:start="156:16" pos:end="156:31"><expr pos:start="156:16" pos:end="156:31"><name pos:start="156:16" pos:end="156:31"><name pos:start="156:16" pos:end="156:18">ctx</name><operator pos:start="156:19" pos:end="156:20">-&gt;</operator><name pos:start="156:21" pos:end="156:31">sample_rate</name></name></expr></argument>, <argument pos:start="156:34" pos:end="156:39"><expr pos:start="156:34" pos:end="156:39"><name pos:start="156:34" pos:end="156:39">min_sr</name></expr></argument>, <argument pos:start="156:42" pos:end="156:47"><expr pos:start="156:42" pos:end="156:47"><name pos:start="156:42" pos:end="156:47">max_sr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="156:51" pos:end="156:65">// 322-22097 Hz</comment>







    <expr_stmt pos:start="164:5" pos:end="164:51"><expr pos:start="164:5" pos:end="164:50"><name pos:start="164:5" pos:end="164:26"><name pos:start="164:5" pos:end="164:5">s</name><operator pos:start="164:6" pos:end="164:7">-&gt;</operator><name pos:start="164:8" pos:end="164:23">block_conv_table</name><index pos:start="164:24" pos:end="164:26">[<expr pos:start="164:25" pos:end="164:25"><literal type="number" pos:start="164:25" pos:end="164:25">0</literal></expr>]</index></name>      <operator pos:start="164:33" pos:end="164:33">=</operator> <name pos:start="164:35" pos:end="164:50"><name pos:start="164:35" pos:end="164:35">s</name><operator pos:start="164:36" pos:end="164:37">-&gt;</operator><name pos:start="164:38" pos:end="164:50">min_pitch_val</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="166:5" pos:end="166:58"><expr pos:start="166:5" pos:end="166:57"><name pos:start="166:5" pos:end="166:26"><name pos:start="166:5" pos:end="166:5">s</name><operator pos:start="166:6" pos:end="166:7">-&gt;</operator><name pos:start="166:8" pos:end="166:23">block_conv_table</name><index pos:start="166:24" pos:end="166:26">[<expr pos:start="166:25" pos:end="166:25"><literal type="number" pos:start="166:25" pos:end="166:25">1</literal></expr>]</index></name>      <operator pos:start="166:33" pos:end="166:33">=</operator> <operator pos:start="166:35" pos:end="166:35">(</operator><name pos:start="166:36" pos:end="166:46">pitch_range</name> <operator pos:start="166:48" pos:end="166:48">*</operator> <literal type="number" pos:start="166:50" pos:end="166:51">25</literal><operator pos:start="166:52" pos:end="166:52">)</operator> <operator pos:start="166:54" pos:end="166:55">&gt;&gt;</operator> <literal type="number" pos:start="166:57" pos:end="166:57">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="168:5" pos:end="168:58"><expr pos:start="168:5" pos:end="168:57"><name pos:start="168:5" pos:end="168:26"><name pos:start="168:5" pos:end="168:5">s</name><operator pos:start="168:6" pos:end="168:7">-&gt;</operator><name pos:start="168:8" pos:end="168:23">block_conv_table</name><index pos:start="168:24" pos:end="168:26">[<expr pos:start="168:25" pos:end="168:25"><literal type="number" pos:start="168:25" pos:end="168:25">2</literal></expr>]</index></name>      <operator pos:start="168:33" pos:end="168:33">=</operator> <operator pos:start="168:35" pos:end="168:35">(</operator><name pos:start="168:36" pos:end="168:46">pitch_range</name> <operator pos:start="168:48" pos:end="168:48">*</operator> <literal type="number" pos:start="168:50" pos:end="168:51">44</literal><operator pos:start="168:52" pos:end="168:52">)</operator> <operator pos:start="168:54" pos:end="168:55">&gt;&gt;</operator> <literal type="number" pos:start="168:57" pos:end="168:57">6</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="170:5" pos:end="170:55"><expr pos:start="170:5" pos:end="170:54"><name pos:start="170:5" pos:end="170:26"><name pos:start="170:5" pos:end="170:5">s</name><operator pos:start="170:6" pos:end="170:7">-&gt;</operator><name pos:start="170:8" pos:end="170:23">block_conv_table</name><index pos:start="170:24" pos:end="170:26">[<expr pos:start="170:25" pos:end="170:25"><literal type="number" pos:start="170:25" pos:end="170:25">3</literal></expr>]</index></name>      <operator pos:start="170:33" pos:end="170:33">=</operator> <name pos:start="170:35" pos:end="170:50"><name pos:start="170:35" pos:end="170:35">s</name><operator pos:start="170:36" pos:end="170:37">-&gt;</operator><name pos:start="170:38" pos:end="170:50">max_pitch_val</name></name> <operator pos:start="170:52" pos:end="170:52">-</operator> <literal type="number" pos:start="170:54" pos:end="170:54">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="172:5" pos:end="172:60"><expr pos:start="172:5" pos:end="172:59"><name pos:start="172:5" pos:end="172:31"><name pos:start="172:5" pos:end="172:5">s</name><operator pos:start="172:6" pos:end="172:7">-&gt;</operator><name pos:start="172:8" pos:end="172:31">block_delta_pitch_hrange</name></name> <operator pos:start="172:33" pos:end="172:33">=</operator> <operator pos:start="172:35" pos:end="172:35">(</operator><name pos:start="172:36" pos:end="172:46">pitch_range</name> <operator pos:start="172:48" pos:end="172:49">&gt;&gt;</operator> <literal type="number" pos:start="172:51" pos:end="172:51">3</literal><operator pos:start="172:52" pos:end="172:52">)</operator> <operator pos:start="172:54" pos:end="172:54">&amp;</operator> <operator pos:start="172:56" pos:end="172:56">~</operator><literal type="number" pos:start="172:57" pos:end="172:59">0xF</literal></expr>;</expr_stmt>





    <expr_stmt pos:start="178:5" pos:end="178:80"><expr pos:start="178:5" pos:end="178:79"><name pos:start="178:5" pos:end="178:30"><name pos:start="178:5" pos:end="178:5">s</name><operator pos:start="178:6" pos:end="178:7">-&gt;</operator><name pos:start="178:8" pos:end="178:30">block_delta_pitch_nbits</name></name>  <operator pos:start="178:33" pos:end="178:33">=</operator> <literal type="number" pos:start="178:35" pos:end="178:37">1</literal> <operator pos:start="178:37" pos:end="178:37">+</operator> <call pos:start="178:39" pos:end="178:79"><name pos:start="178:39" pos:end="178:50">av_ceil_log2</name><argument_list pos:start="178:51" pos:end="178:79">(<argument pos:start="178:52" pos:end="178:78"><expr pos:start="178:52" pos:end="178:78"><name pos:start="178:52" pos:end="178:78"><name pos:start="178:52" pos:end="178:52">s</name><operator pos:start="178:53" pos:end="178:54">-&gt;</operator><name pos:start="178:55" pos:end="178:78">block_delta_pitch_hrange</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="180:5" pos:end="184:86"><expr pos:start="180:5" pos:end="184:85"><name pos:start="180:5" pos:end="180:24"><name pos:start="180:5" pos:end="180:5">s</name><operator pos:start="180:6" pos:end="180:7">-&gt;</operator><name pos:start="180:8" pos:end="180:24">block_pitch_range</name></name>        <operator pos:start="180:33" pos:end="180:33">=</operator> <name pos:start="180:35" pos:end="180:56"><name pos:start="180:35" pos:end="180:35">s</name><operator pos:start="180:36" pos:end="180:37">-&gt;</operator><name pos:start="180:38" pos:end="180:53">block_conv_table</name><index pos:start="180:54" pos:end="180:56">[<expr pos:start="180:55" pos:end="180:55"><literal type="number" pos:start="180:55" pos:end="180:55">2</literal></expr>]</index></name> <operator pos:start="180:58" pos:end="180:58">+</operator>

                                  <name pos:start="182:35" pos:end="182:56"><name pos:start="182:35" pos:end="182:35">s</name><operator pos:start="182:36" pos:end="182:37">-&gt;</operator><name pos:start="182:38" pos:end="182:53">block_conv_table</name><index pos:start="182:54" pos:end="182:56">[<expr pos:start="182:55" pos:end="182:55"><literal type="number" pos:start="182:55" pos:end="182:55">3</literal></expr>]</index></name> <operator pos:start="182:58" pos:end="182:58">+</operator> <literal type="number" pos:start="182:60" pos:end="182:62">1</literal> <operator pos:start="182:62" pos:end="182:62">+</operator>

                                  <literal type="number" pos:start="184:35" pos:end="184:35">2</literal> <operator pos:start="184:37" pos:end="184:37">*</operator> <operator pos:start="184:39" pos:end="184:39">(</operator><name pos:start="184:40" pos:end="184:61"><name pos:start="184:40" pos:end="184:40">s</name><operator pos:start="184:41" pos:end="184:42">-&gt;</operator><name pos:start="184:43" pos:end="184:58">block_conv_table</name><index pos:start="184:59" pos:end="184:61">[<expr pos:start="184:60" pos:end="184:60"><literal type="number" pos:start="184:60" pos:end="184:60">1</literal></expr>]</index></name> <operator pos:start="184:63" pos:end="184:63">-</operator> <literal type="number" pos:start="184:65" pos:end="184:65">2</literal> <operator pos:start="184:67" pos:end="184:67">*</operator> <name pos:start="184:69" pos:end="184:84"><name pos:start="184:69" pos:end="184:69">s</name><operator pos:start="184:70" pos:end="184:71">-&gt;</operator><name pos:start="184:72" pos:end="184:84">min_pitch_val</name></name><operator pos:start="184:85" pos:end="184:85">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="186:5" pos:end="186:69"><expr pos:start="186:5" pos:end="186:68"><name pos:start="186:5" pos:end="186:24"><name pos:start="186:5" pos:end="186:5">s</name><operator pos:start="186:6" pos:end="186:7">-&gt;</operator><name pos:start="186:8" pos:end="186:24">block_pitch_nbits</name></name>        <operator pos:start="186:33" pos:end="186:33">=</operator> <call pos:start="186:35" pos:end="186:68"><name pos:start="186:35" pos:end="186:46">av_ceil_log2</name><argument_list pos:start="186:47" pos:end="186:68">(<argument pos:start="186:48" pos:end="186:67"><expr pos:start="186:48" pos:end="186:67"><name pos:start="186:48" pos:end="186:67"><name pos:start="186:48" pos:end="186:48">s</name><operator pos:start="186:49" pos:end="186:50">-&gt;</operator><name pos:start="186:51" pos:end="186:67">block_pitch_range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="190:5" pos:end="190:52"><expr pos:start="190:5" pos:end="190:51"><name pos:start="190:5" pos:end="190:19"><name pos:start="190:5" pos:end="190:7">ctx</name><operator pos:start="190:8" pos:end="190:9">-&gt;</operator><name pos:start="190:10" pos:end="190:19">sample_fmt</name></name>             <operator pos:start="190:33" pos:end="190:33">=</operator> <name pos:start="190:35" pos:end="190:51">AV_SAMPLE_FMT_FLT</name></expr>;</expr_stmt>



    <return pos:start="194:5" pos:end="194:13">return <expr pos:start="194:12" pos:end="194:12"><literal type="number" pos:start="194:12" pos:end="194:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
