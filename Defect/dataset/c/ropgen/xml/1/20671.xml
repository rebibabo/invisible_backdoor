<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20671.c" pos:tabs="8"><function pos:start="1:1" pos:end="123:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">fdctrl_write_data</name> <parameter_list pos:start="1:31" pos:end="1:64">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:39">fdctrl_t</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:47">fdctrl</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:63"><decl pos:start="1:50" pos:end="1:63"><type pos:start="1:50" pos:end="1:63"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:63">value</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="123:1">{<block_content pos:start="5:5" pos:end="121:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">fdrive_t</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:21">cur_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">pos</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:20">/* Reset mode */</comment>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:39">(<expr pos:start="13:9" pos:end="13:38"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:16">fdctrl</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:21">dor</name></name> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <name pos:start="13:25" pos:end="13:37">FD_DOR_nRESET</name><operator pos:start="13:38" pos:end="13:38">)</operator></expr>)</condition> <block pos:start="13:41" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:63"><expr pos:start="15:9" pos:end="15:62"><call pos:start="15:9" pos:end="15:62"><name pos:start="15:9" pos:end="15:22">FLOPPY_DPRINTF</name><argument_list pos:start="15:23" pos:end="15:62">(<argument pos:start="15:24" pos:end="15:61"><expr pos:start="15:24" pos:end="15:61"><literal type="string" pos:start="15:24" pos:end="15:61">"Floppy controller in RESET state !\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:66">(<expr pos:start="21:9" pos:end="21:65"><operator pos:start="21:9" pos:end="21:9">!</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:21"><name pos:start="21:11" pos:end="21:16">fdctrl</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">msr</name></name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:34">FD_MSR_RQM</name><operator pos:start="21:35" pos:end="21:35">)</operator> <operator pos:start="21:37" pos:end="21:38">||</operator> <operator pos:start="21:40" pos:end="21:40">(</operator><name pos:start="21:41" pos:end="21:51"><name pos:start="21:41" pos:end="21:46">fdctrl</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:51">msr</name></name> <operator pos:start="21:53" pos:end="21:53">&amp;</operator> <name pos:start="21:55" pos:end="21:64">FD_MSR_DIO</name><operator pos:start="21:65" pos:end="21:65">)</operator></expr>)</condition> <block pos:start="21:68" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <expr_stmt pos:start="23:9" pos:end="23:59"><expr pos:start="23:9" pos:end="23:58"><call pos:start="23:9" pos:end="23:58"><name pos:start="23:9" pos:end="23:20">FLOPPY_ERROR</name><argument_list pos:start="23:21" pos:end="23:58">(<argument pos:start="23:22" pos:end="23:57"><expr pos:start="23:22" pos:end="23:57"><literal type="string" pos:start="23:22" pos:end="23:57">"controller not ready for writing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:35"><expr pos:start="29:5" pos:end="29:34"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:10">fdctrl</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:15">dsr</name></name> <operator pos:start="29:17" pos:end="29:18">&amp;=</operator> <operator pos:start="29:20" pos:end="29:20">~</operator><name pos:start="29:21" pos:end="29:34">FD_DSR_PWRDOWN</name></expr>;</expr_stmt>

    <comment type="block" pos:start="31:5" pos:end="31:36">/* Is it write command time ? */</comment>

    <if_stmt pos:start="33:5" pos:end="77:5"><if pos:start="33:5" pos:end="77:5">if <condition pos:start="33:8" pos:end="33:36">(<expr pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:14">fdctrl</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:19">msr</name></name> <operator pos:start="33:21" pos:end="33:21">&amp;</operator> <name pos:start="33:23" pos:end="33:35">FD_MSR_NONDMA</name></expr>)</condition> <block pos:start="33:38" pos:end="77:5">{<block_content pos:start="37:9" pos:end="75:15">

        <comment type="block" pos:start="35:9" pos:end="35:29">/* FIFO data write */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:14">fdctrl</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">fifo</name><index pos:start="37:21" pos:end="37:40">[<expr pos:start="37:22" pos:end="37:39"><name pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:27">fdctrl</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:37">data_pos</name></name><operator pos:start="37:38" pos:end="37:39">++</operator></expr>]</index></name> <operator pos:start="37:42" pos:end="37:42">=</operator> <name pos:start="37:44" pos:end="37:48">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="63:9"><if pos:start="39:9" pos:end="63:9">if <condition pos:start="39:12" pos:end="41:49">(<expr pos:start="39:13" pos:end="41:48"><name pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:18">fdctrl</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:28">data_pos</name></name> <operator pos:start="39:30" pos:end="39:30">%</operator> <name pos:start="39:32" pos:end="39:44">FD_SECTOR_LEN</name> <operator pos:start="39:46" pos:end="39:47">==</operator> <operator pos:start="39:49" pos:end="39:49">(</operator><name pos:start="39:50" pos:end="39:62">FD_SECTOR_LEN</name> <operator pos:start="39:64" pos:end="39:64">-</operator> <literal type="number" pos:start="39:66" pos:end="39:66">1</literal><operator pos:start="39:67" pos:end="39:67">)</operator> <operator pos:start="39:69" pos:end="39:70">||</operator>

            <name pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:18">fdctrl</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:28">data_pos</name></name> <operator pos:start="41:30" pos:end="41:31">==</operator> <name pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:38">fdctrl</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:48">data_len</name></name></expr>)</condition> <block pos:start="41:51" pos:end="63:9">{<block_content pos:start="43:13" pos:end="61:13">

            <expr_stmt pos:start="43:13" pos:end="43:42"><expr pos:start="43:13" pos:end="43:41"><name pos:start="43:13" pos:end="43:19">cur_drv</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <call pos:start="43:23" pos:end="43:41"><name pos:start="43:23" pos:end="43:33">get_cur_drv</name><argument_list pos:start="43:34" pos:end="43:41">(<argument pos:start="43:35" pos:end="43:40"><expr pos:start="43:35" pos:end="43:40"><name pos:start="43:35" pos:end="43:40">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="51:13"><if pos:start="45:13" pos:end="51:13">if <condition pos:start="45:16" pos:end="45:81">(<expr pos:start="45:17" pos:end="45:80"><call pos:start="45:17" pos:end="45:76"><name pos:start="45:17" pos:end="45:26">bdrv_write</name><argument_list pos:start="45:27" pos:end="45:76">(<argument pos:start="45:28" pos:end="45:38"><expr pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:38"><name pos:start="45:28" pos:end="45:34">cur_drv</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:38">bs</name></name></expr></argument>, <argument pos:start="45:41" pos:end="45:58"><expr pos:start="45:41" pos:end="45:58"><call pos:start="45:41" pos:end="45:58"><name pos:start="45:41" pos:end="45:49">fd_sector</name><argument_list pos:start="45:50" pos:end="45:58">(<argument pos:start="45:51" pos:end="45:57"><expr pos:start="45:51" pos:end="45:57"><name pos:start="45:51" pos:end="45:57">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="45:61" pos:end="45:72"><expr pos:start="45:61" pos:end="45:72"><name pos:start="45:61" pos:end="45:72"><name pos:start="45:61" pos:end="45:66">fdctrl</name><operator pos:start="45:67" pos:end="45:68">-&gt;</operator><name pos:start="45:69" pos:end="45:72">fifo</name></name></expr></argument>, <argument pos:start="45:75" pos:end="45:75"><expr pos:start="45:75" pos:end="45:75"><literal type="number" pos:start="45:75" pos:end="45:75">1</literal></expr></argument>)</argument_list></call> <operator pos:start="45:78" pos:end="45:78">&lt;</operator> <literal type="number" pos:start="45:80" pos:end="45:80">0</literal></expr>)</condition> <block pos:start="45:83" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:23">

                <expr_stmt pos:start="47:17" pos:end="47:72"><expr pos:start="47:17" pos:end="47:71"><call pos:start="47:17" pos:end="47:71"><name pos:start="47:17" pos:end="47:28">FLOPPY_ERROR</name><argument_list pos:start="47:29" pos:end="47:71">(<argument pos:start="47:30" pos:end="47:50"><expr pos:start="47:30" pos:end="47:50"><literal type="string" pos:start="47:30" pos:end="47:50">"writing sector %d\n"</literal></expr></argument>, <argument pos:start="47:53" pos:end="47:70"><expr pos:start="47:53" pos:end="47:70"><call pos:start="47:53" pos:end="47:70"><name pos:start="47:53" pos:end="47:61">fd_sector</name><argument_list pos:start="47:62" pos:end="47:70">(<argument pos:start="47:63" pos:end="47:69"><expr pos:start="47:63" pos:end="47:69"><name pos:start="47:63" pos:end="47:69">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="49:17" pos:end="49:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="61:13"><if pos:start="53:13" pos:end="61:13">if <condition pos:start="53:16" pos:end="53:59">(<expr pos:start="53:17" pos:end="53:58"><operator pos:start="53:17" pos:end="53:17">!</operator><call pos:start="53:18" pos:end="53:58"><name pos:start="53:18" pos:end="53:41">fdctrl_seek_to_next_sect</name><argument_list pos:start="53:42" pos:end="53:58">(<argument pos:start="53:43" pos:end="53:48"><expr pos:start="53:43" pos:end="53:48"><name pos:start="53:43" pos:end="53:48">fdctrl</name></expr></argument>, <argument pos:start="53:51" pos:end="53:57"><expr pos:start="53:51" pos:end="53:57"><name pos:start="53:51" pos:end="53:57">cur_drv</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:61" pos:end="61:13">{<block_content pos:start="55:17" pos:end="59:23">

                <expr_stmt pos:start="55:17" pos:end="57:51"><expr pos:start="55:17" pos:end="57:50"><call pos:start="55:17" pos:end="57:50"><name pos:start="55:17" pos:end="55:30">FLOPPY_DPRINTF</name><argument_list pos:start="55:31" pos:end="57:50">(<argument pos:start="55:32" pos:end="55:66"><expr pos:start="55:32" pos:end="55:66"><literal type="string" pos:start="55:32" pos:end="55:66">"error seeking to next sector %d\n"</literal></expr></argument>,

                               <argument pos:start="57:32" pos:end="57:49"><expr pos:start="57:32" pos:end="57:49"><call pos:start="57:32" pos:end="57:49"><name pos:start="57:32" pos:end="57:40">fd_sector</name><argument_list pos:start="57:41" pos:end="57:49">(<argument pos:start="57:42" pos:end="57:48"><expr pos:start="57:42" pos:end="57:48"><name pos:start="57:42" pos:end="57:48">cur_drv</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="59:17" pos:end="59:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="65:9" pos:end="69:11">/* Switch from transfer mode to status mode

         * then from status mode to command mode

         */</comment>

        <if_stmt pos:start="71:9" pos:end="73:66"><if pos:start="71:9" pos:end="73:66">if <condition pos:start="71:12" pos:end="71:49">(<expr pos:start="71:13" pos:end="71:48"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:18">fdctrl</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:28">data_pos</name></name> <operator pos:start="71:30" pos:end="71:31">==</operator> <name pos:start="71:33" pos:end="71:48"><name pos:start="71:33" pos:end="71:38">fdctrl</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:48">data_len</name></name></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:66"><block_content pos:start="73:13" pos:end="73:66">

            <expr_stmt pos:start="73:13" pos:end="73:66"><expr pos:start="73:13" pos:end="73:65"><call pos:start="73:13" pos:end="73:65"><name pos:start="73:13" pos:end="73:32">fdctrl_stop_transfer</name><argument_list pos:start="73:33" pos:end="73:65">(<argument pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:39"><name pos:start="73:34" pos:end="73:39">fdctrl</name></expr></argument>, <argument pos:start="73:42" pos:end="73:52"><expr pos:start="73:42" pos:end="73:52"><name pos:start="73:42" pos:end="73:52">FD_SR0_SEEK</name></expr></argument>, <argument pos:start="73:55" pos:end="73:58"><expr pos:start="73:55" pos:end="73:58"><literal type="number" pos:start="73:55" pos:end="73:58">0x00</literal></expr></argument>, <argument pos:start="73:61" pos:end="73:64"><expr pos:start="73:61" pos:end="73:64"><literal type="number" pos:start="73:61" pos:end="73:64">0x00</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="75:9" pos:end="75:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="79:5" pos:end="89:5"><if pos:start="79:5" pos:end="89:5">if <condition pos:start="79:8" pos:end="79:30">(<expr pos:start="79:9" pos:end="79:29"><name pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:14">fdctrl</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:24">data_pos</name></name> <operator pos:start="79:26" pos:end="79:27">==</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>)</condition> <block pos:start="79:32" pos:end="89:5">{<block_content pos:start="83:9" pos:end="87:56">

        <comment type="block" pos:start="81:9" pos:end="81:21">/* Command */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:47"><expr pos:start="83:9" pos:end="83:46"><name pos:start="83:9" pos:end="83:11">pos</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:46"><name pos:start="83:15" pos:end="83:32">command_to_handler</name><index pos:start="83:33" pos:end="83:46">[<expr pos:start="83:34" pos:end="83:45"><name pos:start="83:34" pos:end="83:38">value</name> <operator pos:start="83:40" pos:end="83:40">&amp;</operator> <literal type="number" pos:start="83:42" pos:end="83:45">0xff</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:59"><expr pos:start="85:9" pos:end="85:58"><call pos:start="85:9" pos:end="85:58"><name pos:start="85:9" pos:end="85:22">FLOPPY_DPRINTF</name><argument_list pos:start="85:23" pos:end="85:58">(<argument pos:start="85:24" pos:end="85:37"><expr pos:start="85:24" pos:end="85:37"><literal type="string" pos:start="85:24" pos:end="85:37">"%s command\n"</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:57"><expr pos:start="85:40" pos:end="85:57"><name pos:start="85:40" pos:end="85:52"><name pos:start="85:40" pos:end="85:47">handlers</name><index pos:start="85:48" pos:end="85:52">[<expr pos:start="85:49" pos:end="85:51"><name pos:start="85:49" pos:end="85:51">pos</name></expr>]</index></name><operator pos:start="85:53" pos:end="85:53">.</operator><name pos:start="85:54" pos:end="85:57">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:56"><expr pos:start="87:9" pos:end="87:55"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:14">fdctrl</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:24">data_len</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <name pos:start="87:28" pos:end="87:40"><name pos:start="87:28" pos:end="87:35">handlers</name><index pos:start="87:36" pos:end="87:40">[<expr pos:start="87:37" pos:end="87:39"><name pos:start="87:37" pos:end="87:39">pos</name></expr>]</index></name><operator pos:start="87:41" pos:end="87:41">.</operator><name pos:start="87:42" pos:end="87:51">parameters</name> <operator pos:start="87:53" pos:end="87:53">+</operator> <literal type="number" pos:start="87:55" pos:end="87:55">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:50"><expr pos:start="93:5" pos:end="93:49"><call pos:start="93:5" pos:end="93:49"><name pos:start="93:5" pos:end="93:18">FLOPPY_DPRINTF</name><argument_list pos:start="93:19" pos:end="93:49">(<argument pos:start="93:20" pos:end="93:31"><expr pos:start="93:20" pos:end="93:31"><literal type="string" pos:start="93:20" pos:end="93:31">"%s: %02x\n"</literal></expr></argument>, <argument pos:start="93:34" pos:end="93:41"><expr pos:start="93:34" pos:end="93:41"><name pos:start="93:34" pos:end="93:41">__func__</name></expr></argument>, <argument pos:start="93:44" pos:end="93:48"><expr pos:start="93:44" pos:end="93:48"><name pos:start="93:44" pos:end="93:48">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:10">fdctrl</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:16">fifo</name><index pos:start="95:17" pos:end="95:36">[<expr pos:start="95:18" pos:end="95:35"><name pos:start="95:18" pos:end="95:33"><name pos:start="95:18" pos:end="95:23">fdctrl</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:33">data_pos</name></name><operator pos:start="95:34" pos:end="95:35">++</operator></expr>]</index></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <name pos:start="95:40" pos:end="95:44">value</name></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="121:5"><if pos:start="97:5" pos:end="121:5">if <condition pos:start="97:8" pos:end="97:45">(<expr pos:start="97:9" pos:end="97:44"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:14">fdctrl</name><operator pos:start="97:15" pos:end="97:16">-&gt;</operator><name pos:start="97:17" pos:end="97:24">data_pos</name></name> <operator pos:start="97:26" pos:end="97:27">==</operator> <name pos:start="97:29" pos:end="97:44"><name pos:start="97:29" pos:end="97:34">fdctrl</name><operator pos:start="97:35" pos:end="97:36">-&gt;</operator><name pos:start="97:37" pos:end="97:44">data_len</name></name></expr>)</condition> <block pos:start="97:47" pos:end="121:5">{<block_content pos:start="105:9" pos:end="119:66">

        <comment type="block" pos:start="99:9" pos:end="103:11">/* We now have all parameters

         * and will be able to treat the command

         */</comment>

        <if_stmt pos:start="105:9" pos:end="111:9"><if pos:start="105:9" pos:end="111:9">if <condition pos:start="105:12" pos:end="105:49">(<expr pos:start="105:13" pos:end="105:48"><name pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:18">fdctrl</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:30">data_state</name></name> <operator pos:start="105:32" pos:end="105:32">&amp;</operator> <name pos:start="105:34" pos:end="105:48">FD_STATE_FORMAT</name></expr>)</condition> <block pos:start="105:51" pos:end="111:9">{<block_content pos:start="107:13" pos:end="109:19">

            <expr_stmt pos:start="107:13" pos:end="107:41"><expr pos:start="107:13" pos:end="107:40"><call pos:start="107:13" pos:end="107:40"><name pos:start="107:13" pos:end="107:32">fdctrl_format_sector</name><argument_list pos:start="107:33" pos:end="107:40">(<argument pos:start="107:34" pos:end="107:39"><expr pos:start="107:34" pos:end="107:39"><name pos:start="107:34" pos:end="107:39">fdctrl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:57"><expr pos:start="115:9" pos:end="115:56"><name pos:start="115:9" pos:end="115:11">pos</name> <operator pos:start="115:13" pos:end="115:13">=</operator> <name pos:start="115:15" pos:end="115:56"><name pos:start="115:15" pos:end="115:32">command_to_handler</name><index pos:start="115:33" pos:end="115:56">[<expr pos:start="115:34" pos:end="115:55"><name pos:start="115:34" pos:end="115:48"><name pos:start="115:34" pos:end="115:39">fdctrl</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:45">fifo</name><index pos:start="115:46" pos:end="115:48">[<expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">0</literal></expr>]</index></name> <operator pos:start="115:50" pos:end="115:50">&amp;</operator> <literal type="number" pos:start="115:52" pos:end="115:55">0xff</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:65"><expr pos:start="117:9" pos:end="117:64"><call pos:start="117:9" pos:end="117:64"><name pos:start="117:9" pos:end="117:22">FLOPPY_DPRINTF</name><argument_list pos:start="117:23" pos:end="117:64">(<argument pos:start="117:24" pos:end="117:43"><expr pos:start="117:24" pos:end="117:43"><literal type="string" pos:start="117:24" pos:end="117:43">"treat %s command\n"</literal></expr></argument>, <argument pos:start="117:46" pos:end="117:63"><expr pos:start="117:46" pos:end="117:63"><name pos:start="117:46" pos:end="117:58"><name pos:start="117:46" pos:end="117:53">handlers</name><index pos:start="117:54" pos:end="117:58">[<expr pos:start="117:55" pos:end="117:57"><name pos:start="117:55" pos:end="117:57">pos</name></expr>]</index></name><operator pos:start="117:59" pos:end="117:59">.</operator><name pos:start="117:60" pos:end="117:63">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:66"><expr pos:start="119:9" pos:end="119:65"><operator pos:start="119:9" pos:end="119:9">(</operator><operator pos:start="119:10" pos:end="119:10">*</operator><name pos:start="119:11" pos:end="119:23"><name pos:start="119:11" pos:end="119:18">handlers</name><index pos:start="119:19" pos:end="119:23">[<expr pos:start="119:20" pos:end="119:22"><name pos:start="119:20" pos:end="119:22">pos</name></expr>]</index></name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:31">handler</name><operator pos:start="119:32" pos:end="119:32">)</operator><operator pos:start="119:33" pos:end="119:33">(</operator><name pos:start="119:34" pos:end="119:39">fdctrl</name><operator pos:start="119:40" pos:end="119:40">,</operator> <name pos:start="119:42" pos:end="119:54"><name pos:start="119:42" pos:end="119:49">handlers</name><index pos:start="119:50" pos:end="119:54">[<expr pos:start="119:51" pos:end="119:53"><name pos:start="119:51" pos:end="119:53">pos</name></expr>]</index></name><operator pos:start="119:55" pos:end="119:55">.</operator><name pos:start="119:56" pos:end="119:64">direction</name><operator pos:start="119:65" pos:end="119:65">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
