<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14101.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">spapr_events_init</name><parameter_list pos:start="1:23" pos:end="1:48">(<parameter pos:start="1:24" pos:end="1:47"><decl pos:start="1:24" pos:end="1:47"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:40">sPAPRMachineState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">spapr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:67">

    <expr_stmt pos:start="5:5" pos:end="5:40"><expr pos:start="5:5" pos:end="5:39"><call pos:start="5:5" pos:end="5:39"><name pos:start="5:5" pos:end="5:15">QTAILQ_INIT</name><argument_list pos:start="5:16" pos:end="5:39">(<argument pos:start="5:17" pos:end="5:38"><expr pos:start="5:17" pos:end="5:38"><operator pos:start="5:17" pos:end="5:17">&amp;</operator><name pos:start="5:18" pos:end="5:38"><name pos:start="5:18" pos:end="5:22">spapr</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:38">pending_events</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:69"><expr pos:start="7:5" pos:end="7:68"><name pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:9">spapr</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:30">check_exception_irq</name></name> <operator pos:start="7:32" pos:end="7:32">=</operator> <call pos:start="7:34" pos:end="7:68"><name pos:start="7:34" pos:end="7:43">xics_alloc</name><argument_list pos:start="7:44" pos:end="7:68">(<argument pos:start="7:45" pos:end="7:54"><expr pos:start="7:45" pos:end="7:54"><name pos:start="7:45" pos:end="7:54"><name pos:start="7:45" pos:end="7:49">spapr</name><operator pos:start="7:50" pos:end="7:51">-&gt;</operator><name pos:start="7:52" pos:end="7:54">icp</name></name></expr></argument>, <argument pos:start="7:57" pos:end="7:57"><expr pos:start="7:57" pos:end="7:57"><literal type="number" pos:start="7:57" pos:end="7:57">0</literal></expr></argument>, <argument pos:start="7:60" pos:end="7:60"><expr pos:start="7:60" pos:end="7:60"><literal type="number" pos:start="7:60" pos:end="7:60">0</literal></expr></argument>, <argument pos:start="7:63" pos:end="7:67"><expr pos:start="7:63" pos:end="7:67"><name pos:start="7:63" pos:end="7:67">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:9">spapr</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:24">epow_notifier</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:31">notify</name></name> <operator pos:start="9:33" pos:end="9:33">=</operator> <name pos:start="9:35" pos:end="9:53">spapr_powerdown_req</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:60"><expr pos:start="11:5" pos:end="11:59"><call pos:start="11:5" pos:end="11:59"><name pos:start="11:5" pos:end="11:36">qemu_register_powerdown_notifier</name><argument_list pos:start="11:37" pos:end="11:59">(<argument pos:start="11:38" pos:end="11:58"><expr pos:start="11:38" pos:end="11:58"><operator pos:start="11:38" pos:end="11:38">&amp;</operator><name pos:start="11:39" pos:end="11:58"><name pos:start="11:39" pos:end="11:43">spapr</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:58">epow_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="15:41"><expr pos:start="13:5" pos:end="15:40"><call pos:start="13:5" pos:end="15:40"><name pos:start="13:5" pos:end="13:23">spapr_rtas_register</name><argument_list pos:start="13:24" pos:end="15:40">(<argument pos:start="13:25" pos:end="13:44"><expr pos:start="13:25" pos:end="13:44"><name pos:start="13:25" pos:end="13:44">RTAS_CHECK_EXCEPTION</name></expr></argument>, <argument pos:start="13:47" pos:end="13:63"><expr pos:start="13:47" pos:end="13:63"><literal type="string" pos:start="13:47" pos:end="13:63">"check-exception"</literal></expr></argument>,

                        <argument pos:start="15:25" pos:end="15:39"><expr pos:start="15:25" pos:end="15:39"><name pos:start="15:25" pos:end="15:39">check_exception</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:67"><expr pos:start="17:5" pos:end="17:66"><call pos:start="17:5" pos:end="17:66"><name pos:start="17:5" pos:end="17:23">spapr_rtas_register</name><argument_list pos:start="17:24" pos:end="17:66">(<argument pos:start="17:25" pos:end="17:39"><expr pos:start="17:25" pos:end="17:39"><name pos:start="17:25" pos:end="17:39">RTAS_EVENT_SCAN</name></expr></argument>, <argument pos:start="17:42" pos:end="17:53"><expr pos:start="17:42" pos:end="17:53"><literal type="string" pos:start="17:42" pos:end="17:53">"event-scan"</literal></expr></argument>, <argument pos:start="17:56" pos:end="17:65"><expr pos:start="17:56" pos:end="17:65"><name pos:start="17:56" pos:end="17:65">event_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
