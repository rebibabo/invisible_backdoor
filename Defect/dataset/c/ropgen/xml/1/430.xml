<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/430.c" pos:tabs="8"><function pos:start="1:1" pos:end="189:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegts_read_header</name><parameter_list pos:start="1:30" pos:end="1:49">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="189:1">{<block_content pos:start="5:5" pos:end="187:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name>   <init pos:start="7:23" pos:end="7:29">= <expr pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:25"><name pos:start="9:13" pos:end="9:15">buf</name><index pos:start="9:16" pos:end="9:25">[<expr pos:start="9:17" pos:end="9:24"><literal type="number" pos:start="9:17" pos:end="9:17">8</literal> <operator pos:start="9:19" pos:end="9:19">*</operator> <literal type="number" pos:start="9:21" pos:end="9:24">1024</literal></expr>]</index></name> <init pos:start="9:27" pos:end="9:31">= <expr pos:start="9:29" pos:end="9:31"><block pos:start="9:29" pos:end="9:31">{<expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pos</name></decl>, <decl pos:start="13:18" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:18" pos:end="13:26">probesize</name> <init pos:start="13:28" pos:end="13:41">= <expr pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:41"><name pos:start="13:30" pos:end="13:30">s</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:41">probesize</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:79"><if pos:start="17:5" pos:end="19:79">if <condition pos:start="17:8" pos:end="17:48">(<expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:43"><name pos:start="17:9" pos:end="17:28">ffio_ensure_seekback</name><argument_list pos:start="17:29" pos:end="17:43">(<argument pos:start="17:30" pos:end="17:31"><expr pos:start="17:30" pos:end="17:31"><name pos:start="17:30" pos:end="17:31">pb</name></expr></argument>, <argument pos:start="17:34" pos:end="17:42"><expr pos:start="17:34" pos:end="17:42"><name pos:start="17:34" pos:end="17:42">probesize</name></expr></argument>)</argument_list></call> <operator pos:start="17:45" pos:end="17:45">&lt;</operator> <literal type="number" pos:start="17:47" pos:end="17:47">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:79"><block_content pos:start="19:9" pos:end="19:79">

        <expr_stmt pos:start="19:9" pos:end="19:79"><expr pos:start="19:9" pos:end="19:78"><call pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:78">(<argument pos:start="19:16" pos:end="19:16"><expr pos:start="19:16" pos:end="19:16"><name pos:start="19:16" pos:end="19:16">s</name></expr></argument>, <argument pos:start="19:19" pos:end="19:32"><expr pos:start="19:19" pos:end="19:32"><name pos:start="19:19" pos:end="19:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="19:35" pos:end="19:77"><expr pos:start="19:35" pos:end="19:77"><literal type="string" pos:start="19:35" pos:end="19:77">"Failed to allocate buffers for seekback\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:54">/* read the first 8192 bytes to get packet size */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:7">pos</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:19">avio_tell</name><argument_list pos:start="25:20" pos:end="25:23">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:42"><expr pos:start="27:5" pos:end="27:41"><name pos:start="27:5" pos:end="27:7">len</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:41"><name pos:start="27:11" pos:end="27:19">avio_read</name><argument_list pos:start="27:20" pos:end="27:41">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><name pos:start="27:21" pos:end="27:22">pb</name></expr></argument>, <argument pos:start="27:25" pos:end="27:27"><expr pos:start="27:25" pos:end="27:27"><name pos:start="27:25" pos:end="27:27">buf</name></expr></argument>, <argument pos:start="27:30" pos:end="27:40"><expr pos:start="27:30" pos:end="27:40"><sizeof pos:start="27:30" pos:end="27:40">sizeof<argument_list pos:start="27:36" pos:end="27:40">(<argument pos:start="27:37" pos:end="27:39"><expr pos:start="27:37" pos:end="27:39"><name pos:start="27:37" pos:end="27:39">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:52"><expr pos:start="29:5" pos:end="29:51"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:6">ts</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:23">raw_packet_size</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <call pos:start="29:27" pos:end="29:51"><name pos:start="29:27" pos:end="29:41">get_packet_size</name><argument_list pos:start="29:42" pos:end="29:51">(<argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">buf</name></expr></argument>, <argument pos:start="29:48" pos:end="29:50"><expr pos:start="29:48" pos:end="29:50"><name pos:start="29:48" pos:end="29:50">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:10">ts</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:27">raw_packet_size</name></name> <operator pos:start="31:29" pos:end="31:30">&lt;=</operator> <literal type="number" pos:start="31:32" pos:end="31:32">0</literal></expr>)</condition> <block pos:start="31:35" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:45">

        <expr_stmt pos:start="33:9" pos:end="33:99"><expr pos:start="33:9" pos:end="33:98"><call pos:start="33:9" pos:end="33:98"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:98">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:32"><expr pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:32">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="33:35" pos:end="33:97"><expr pos:start="33:35" pos:end="33:97"><literal type="string" pos:start="33:35" pos:end="33:97">"Could not detect TS packet size, defaulting to non-FEC/DVHS\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:45"><expr pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:10">ts</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:27">raw_packet_size</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:44">TS_PACKET_SIZE</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">ts</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">stream</name></name>     <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:22">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:23"><expr pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:6">ts</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:18">auto_guess</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="181:5"><if pos:start="45:5" pos:end="81:5">if <condition pos:start="45:8" pos:end="45:41">(<expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:18"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:18">iformat</name></name> <operator pos:start="45:20" pos:end="45:21">==</operator> <operator pos:start="45:23" pos:end="45:23">&amp;</operator><name pos:start="45:24" pos:end="45:40">ff_mpegts_demuxer</name></expr>)</condition> <block pos:start="45:43" pos:end="81:5">{<block_content pos:start="53:9" pos:end="79:42">

        <comment type="block" pos:start="47:9" pos:end="47:26">/* normal demux */</comment>



        <comment type="block" pos:start="51:9" pos:end="51:53">/* first do a scan to get all the services */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><call pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:17">seek_back</name><argument_list pos:start="53:18" pos:end="53:29">(<argument pos:start="53:19" pos:end="53:19"><expr pos:start="53:19" pos:end="53:19"><name pos:start="53:19" pos:end="53:19">s</name></expr></argument>, <argument pos:start="53:22" pos:end="53:23"><expr pos:start="53:22" pos:end="53:23"><name pos:start="53:22" pos:end="53:23">pb</name></expr></argument>, <argument pos:start="53:26" pos:end="53:28"><expr pos:start="53:26" pos:end="53:28"><name pos:start="53:26" pos:end="53:28">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="57:9" pos:end="57:63"><expr pos:start="57:9" pos:end="57:62"><call pos:start="57:9" pos:end="57:62"><name pos:start="57:9" pos:end="57:34">mpegts_open_section_filter</name><argument_list pos:start="57:35" pos:end="57:62">(<argument pos:start="57:36" pos:end="57:37"><expr pos:start="57:36" pos:end="57:37"><name pos:start="57:36" pos:end="57:37">ts</name></expr></argument>, <argument pos:start="57:40" pos:end="57:46"><expr pos:start="57:40" pos:end="57:46"><name pos:start="57:40" pos:end="57:46">SDT_PID</name></expr></argument>, <argument pos:start="57:49" pos:end="57:54"><expr pos:start="57:49" pos:end="57:54"><name pos:start="57:49" pos:end="57:54">sdt_cb</name></expr></argument>, <argument pos:start="57:57" pos:end="57:58"><expr pos:start="57:57" pos:end="57:58"><name pos:start="57:57" pos:end="57:58">ts</name></expr></argument>, <argument pos:start="57:61" pos:end="57:61"><expr pos:start="57:61" pos:end="57:61"><literal type="number" pos:start="57:61" pos:end="57:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:63"><expr pos:start="61:9" pos:end="61:62"><call pos:start="61:9" pos:end="61:62"><name pos:start="61:9" pos:end="61:34">mpegts_open_section_filter</name><argument_list pos:start="61:35" pos:end="61:62">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">ts</name></expr></argument>, <argument pos:start="61:40" pos:end="61:46"><expr pos:start="61:40" pos:end="61:46"><name pos:start="61:40" pos:end="61:46">PAT_PID</name></expr></argument>, <argument pos:start="61:49" pos:end="61:54"><expr pos:start="61:49" pos:end="61:54"><name pos:start="61:49" pos:end="61:54">pat_cb</name></expr></argument>, <argument pos:start="61:57" pos:end="61:58"><expr pos:start="61:57" pos:end="61:58"><name pos:start="61:57" pos:end="61:58">ts</name></expr></argument>, <argument pos:start="61:61" pos:end="61:61"><expr pos:start="61:61" pos:end="61:61"><literal type="number" pos:start="61:61" pos:end="61:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="65:9" pos:end="65:60"><expr pos:start="65:9" pos:end="65:59"><call pos:start="65:9" pos:end="65:59"><name pos:start="65:9" pos:end="65:22">handle_packets</name><argument_list pos:start="65:23" pos:end="65:59">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">ts</name></expr></argument>, <argument pos:start="65:28" pos:end="65:58"><expr pos:start="65:28" pos:end="65:58"><name pos:start="65:28" pos:end="65:36">probesize</name> <operator pos:start="65:38" pos:end="65:38">/</operator> <name pos:start="65:40" pos:end="65:58"><name pos:start="65:40" pos:end="65:41">ts</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:58">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="67:9" pos:end="67:58">/* if could not find service, enable auto_guess */</comment>



        <expr_stmt pos:start="71:9" pos:end="71:27"><expr pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:10">ts</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:22">auto_guess</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:58"><expr pos:start="75:9" pos:end="75:57"><call pos:start="75:9" pos:end="75:57"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:57">(<argument pos:start="75:16" pos:end="75:25"><expr pos:start="75:16" pos:end="75:25"><name pos:start="75:16" pos:end="75:25"><name pos:start="75:16" pos:end="75:17">ts</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:25">stream</name></name></expr></argument>, <argument pos:start="75:28" pos:end="75:39"><expr pos:start="75:28" pos:end="75:39"><name pos:start="75:28" pos:end="75:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="75:42" pos:end="75:56"><expr pos:start="75:42" pos:end="75:56"><literal type="string" pos:start="75:42" pos:end="75:56">"tuning done\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:20"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">ctx_flags</name></name> <operator pos:start="79:22" pos:end="79:23">|=</operator> <name pos:start="79:25" pos:end="79:41">AVFMTCTX_NOHEADER</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="81:7" pos:end="181:5">else <block pos:start="81:12" pos:end="181:5">{<block_content pos:start="83:9" pos:end="179:74">

        <decl_stmt pos:start="83:9" pos:end="83:21"><decl pos:start="83:9" pos:end="83:20"><type pos:start="83:9" pos:end="83:18"><name pos:start="83:9" pos:end="83:16">AVStream</name> <modifier pos:start="83:18" pos:end="83:18">*</modifier></type><name pos:start="83:19" pos:end="83:20">st</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:58"><decl pos:start="85:9" pos:end="85:19"><type pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">int</name></type> <name pos:start="85:13" pos:end="85:19">pcr_pid</name></decl>, <decl pos:start="85:22" pos:end="85:24"><type ref="prev" pos:start="85:9" pos:end="85:11"/><name pos:start="85:22" pos:end="85:24">pid</name></decl>, <decl pos:start="85:27" pos:end="85:36"><type ref="prev" pos:start="85:9" pos:end="85:11"/><name pos:start="85:27" pos:end="85:36">nb_packets</name></decl>, <decl pos:start="85:39" pos:end="85:45"><type ref="prev" pos:start="85:9" pos:end="85:11"/><name pos:start="85:39" pos:end="85:45">nb_pcrs</name></decl>, <decl pos:start="85:48" pos:end="85:50"><type ref="prev" pos:start="85:9" pos:end="85:11"/><name pos:start="85:48" pos:end="85:50">ret</name></decl>, <decl pos:start="85:53" pos:end="85:57"><type ref="prev" pos:start="85:9" pos:end="85:11"/><name pos:start="85:53" pos:end="85:57">pcr_l</name></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:31"><decl pos:start="87:9" pos:end="87:23"><type pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:15">int64_t</name></type> <name pos:start="87:17" pos:end="87:23"><name pos:start="87:17" pos:end="87:20">pcrs</name><index pos:start="87:21" pos:end="87:23">[<expr pos:start="87:22" pos:end="87:22"><literal type="number" pos:start="87:22" pos:end="87:22">2</literal></expr>]</index></name></decl>, <decl pos:start="87:26" pos:end="87:30"><type ref="prev" pos:start="87:9" pos:end="87:15"/><name pos:start="87:26" pos:end="87:30">pcr_h</name></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:28"><decl pos:start="89:9" pos:end="89:27"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:27"><name pos:start="89:13" pos:end="89:24">packet_count</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:39"><decl pos:start="91:9" pos:end="91:38"><type pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:15">uint8_t</name></type> <name pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:22">packet</name><index pos:start="91:23" pos:end="91:38">[<expr pos:start="91:24" pos:end="91:37"><name pos:start="91:24" pos:end="91:37">TS_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:28"><decl pos:start="93:9" pos:end="93:27"><type pos:start="93:9" pos:end="93:23"><specifier pos:start="93:9" pos:end="93:13">const</specifier> <name pos:start="93:15" pos:end="93:21">uint8_t</name> <modifier pos:start="93:23" pos:end="93:23">*</modifier></type><name pos:start="93:24" pos:end="93:27">data</name></decl>;</decl_stmt>



        <comment type="block" pos:start="97:9" pos:end="97:31">/* only read packets */</comment>



        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:10">st</name> <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:41"><name pos:start="101:14" pos:end="101:32">avformat_new_stream</name><argument_list pos:start="101:33" pos:end="101:41">(<argument pos:start="101:34" pos:end="101:34"><expr pos:start="101:34" pos:end="101:34"><name pos:start="101:34" pos:end="101:34">s</name></expr></argument>, <argument pos:start="101:37" pos:end="101:40"><expr pos:start="101:37" pos:end="101:40"><name pos:start="101:37" pos:end="101:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:35"><if pos:start="103:9" pos:end="105:35">if <condition pos:start="103:12" pos:end="103:16">(<expr pos:start="103:13" pos:end="103:15"><operator pos:start="103:13" pos:end="103:13">!</operator><name pos:start="103:14" pos:end="103:15">st</name></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:35"><block_content pos:start="105:13" pos:end="105:35">

            <return pos:start="105:13" pos:end="105:35">return <expr pos:start="105:20" pos:end="105:34"><call pos:start="105:20" pos:end="105:34"><name pos:start="105:20" pos:end="105:26">AVERROR</name><argument_list pos:start="105:27" pos:end="105:34">(<argument pos:start="105:28" pos:end="105:33"><expr pos:start="105:28" pos:end="105:33"><name pos:start="105:28" pos:end="105:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:49"><expr pos:start="107:9" pos:end="107:48"><call pos:start="107:9" pos:end="107:48"><name pos:start="107:9" pos:end="107:27">avpriv_set_pts_info</name><argument_list pos:start="107:28" pos:end="107:48">(<argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><name pos:start="107:29" pos:end="107:30">st</name></expr></argument>, <argument pos:start="107:33" pos:end="107:34"><expr pos:start="107:33" pos:end="107:34"><literal type="number" pos:start="107:33" pos:end="107:34">60</literal></expr></argument>, <argument pos:start="107:37" pos:end="107:37"><expr pos:start="107:37" pos:end="107:37"><literal type="number" pos:start="107:37" pos:end="107:37">1</literal></expr></argument>, <argument pos:start="107:40" pos:end="107:47"><expr pos:start="107:40" pos:end="107:47"><literal type="number" pos:start="107:40" pos:end="107:47">27000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:53"><expr pos:start="109:9" pos:end="109:52"><name pos:start="109:9" pos:end="109:32"><name pos:start="109:9" pos:end="109:10">st</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:20">codecpar</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:32">codec_type</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <name pos:start="109:36" pos:end="109:52">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:55"><expr pos:start="111:9" pos:end="111:54"><name pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:10">st</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:20">codecpar</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:30">codec_id</name></name>   <operator pos:start="111:34" pos:end="111:34">=</operator> <name pos:start="111:36" pos:end="111:54">AV_CODEC_ID_MPEG2TS</name></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="115:71">/* we iterate until we find two PCRs to estimate the bitrate */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:15">pcr_pid</name>    <operator pos:start="117:20" pos:end="117:20">=</operator> <operator pos:start="117:22" pos:end="117:22">-</operator><literal type="number" pos:start="117:23" pos:end="117:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:23"><expr pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:15">nb_pcrs</name>    <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:23"><expr pos:start="121:9" pos:end="121:22"><name pos:start="121:9" pos:end="121:18">nb_packets</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <literal type="number" pos:start="121:22" pos:end="121:22">0</literal></expr>;</expr_stmt>

        <for pos:start="123:9" pos:end="159:9">for <control pos:start="123:13" pos:end="123:16">(<init pos:start="123:14" pos:end="123:14">;</init><condition pos:start="123:15" pos:end="123:15">;</condition><incr/>)</control> <block pos:start="123:18" pos:end="159:9">{<block_content pos:start="125:13" pos:end="157:25">

            <expr_stmt pos:start="125:13" pos:end="125:69"><expr pos:start="125:13" pos:end="125:68"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:68"><name pos:start="125:19" pos:end="125:29">read_packet</name><argument_list pos:start="125:30" pos:end="125:68">(<argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">s</name></expr></argument>, <argument pos:start="125:34" pos:end="125:39"><expr pos:start="125:34" pos:end="125:39"><name pos:start="125:34" pos:end="125:39">packet</name></expr></argument>, <argument pos:start="125:42" pos:end="125:60"><expr pos:start="125:42" pos:end="125:60"><name pos:start="125:42" pos:end="125:60"><name pos:start="125:42" pos:end="125:43">ts</name><operator pos:start="125:44" pos:end="125:45">-&gt;</operator><name pos:start="125:46" pos:end="125:60">raw_packet_size</name></name></expr></argument>, <argument pos:start="125:63" pos:end="125:67"><expr pos:start="125:63" pos:end="125:67"><operator pos:start="125:63" pos:end="125:63">&amp;</operator><name pos:start="125:64" pos:end="125:67">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:27"><if pos:start="127:13" pos:end="129:27">if <condition pos:start="127:16" pos:end="127:24">(<expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">ret</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:27"><block_content pos:start="129:17" pos:end="129:27">

                <return pos:start="129:17" pos:end="129:27">return <expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:15">pid</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:35"><name pos:start="131:19" pos:end="131:25">AV_RB16</name><argument_list pos:start="131:26" pos:end="131:35">(<argument pos:start="131:27" pos:end="131:34"><expr pos:start="131:27" pos:end="131:34"><name pos:start="131:27" pos:end="131:30">data</name> <operator pos:start="131:32" pos:end="131:32">+</operator> <literal type="number" pos:start="131:34" pos:end="131:34">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:37" pos:end="131:37">&amp;</operator> <literal type="number" pos:start="131:39" pos:end="131:44">0x1fff</literal></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="155:13"><if pos:start="133:13" pos:end="151:13">if <condition pos:start="133:16" pos:end="135:53">(<expr pos:start="133:17" pos:end="135:52"><operator pos:start="133:17" pos:end="133:17">(</operator><name pos:start="133:18" pos:end="133:24">pcr_pid</name> <operator pos:start="133:26" pos:end="133:27">==</operator> <operator pos:start="133:29" pos:end="133:29">-</operator><literal type="number" pos:start="133:30" pos:end="133:30">1</literal> <operator pos:start="133:32" pos:end="133:33">||</operator> <name pos:start="133:35" pos:end="133:41">pcr_pid</name> <operator pos:start="133:43" pos:end="133:44">==</operator> <name pos:start="133:46" pos:end="133:48">pid</name><operator pos:start="133:49" pos:end="133:49">)</operator> <operator pos:start="133:51" pos:end="133:52">&amp;&amp;</operator>

                <call pos:start="135:17" pos:end="135:47"><name pos:start="135:17" pos:end="135:25">parse_pcr</name><argument_list pos:start="135:26" pos:end="135:47">(<argument pos:start="135:27" pos:end="135:32"><expr pos:start="135:27" pos:end="135:32"><operator pos:start="135:27" pos:end="135:27">&amp;</operator><name pos:start="135:28" pos:end="135:32">pcr_h</name></expr></argument>, <argument pos:start="135:35" pos:end="135:40"><expr pos:start="135:35" pos:end="135:40"><operator pos:start="135:35" pos:end="135:35">&amp;</operator><name pos:start="135:36" pos:end="135:40">pcr_l</name></expr></argument>, <argument pos:start="135:43" pos:end="135:46"><expr pos:start="135:43" pos:end="135:46"><name pos:start="135:43" pos:end="135:46">data</name></expr></argument>)</argument_list></call> <operator pos:start="135:49" pos:end="135:50">==</operator> <literal type="number" pos:start="135:52" pos:end="135:52">0</literal></expr>)</condition> <block pos:start="135:55" pos:end="151:13">{<block_content pos:start="137:17" pos:end="149:26">

                <expr_stmt pos:start="137:17" pos:end="137:64"><expr pos:start="137:17" pos:end="137:63"><call pos:start="137:17" pos:end="137:63"><name pos:start="137:17" pos:end="137:39">finished_reading_packet</name><argument_list pos:start="137:40" pos:end="137:63">(<argument pos:start="137:41" pos:end="137:41"><expr pos:start="137:41" pos:end="137:41"><name pos:start="137:41" pos:end="137:41">s</name></expr></argument>, <argument pos:start="137:44" pos:end="137:62"><expr pos:start="137:44" pos:end="137:62"><name pos:start="137:44" pos:end="137:62"><name pos:start="137:44" pos:end="137:45">ts</name><operator pos:start="137:46" pos:end="137:47">-&gt;</operator><name pos:start="137:48" pos:end="137:62">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="139:17" pos:end="139:30"><expr pos:start="139:17" pos:end="139:29"><name pos:start="139:17" pos:end="139:23">pcr_pid</name> <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:29">pid</name></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:51"><expr pos:start="141:17" pos:end="141:50"><name pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:28">packet_count</name><index pos:start="141:29" pos:end="141:37">[<expr pos:start="141:30" pos:end="141:36"><name pos:start="141:30" pos:end="141:36">nb_pcrs</name></expr>]</index></name> <operator pos:start="141:39" pos:end="141:39">=</operator> <name pos:start="141:41" pos:end="141:50">nb_packets</name></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:52"><expr pos:start="143:17" pos:end="143:51"><name pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:20">pcrs</name><index pos:start="143:21" pos:end="143:29">[<expr pos:start="143:22" pos:end="143:28"><name pos:start="143:22" pos:end="143:28">nb_pcrs</name></expr>]</index></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:37">pcr_h</name> <operator pos:start="143:39" pos:end="143:39">*</operator> <literal type="number" pos:start="143:41" pos:end="143:45">300</literal> <operator pos:start="143:45" pos:end="143:45">+</operator> <name pos:start="143:47" pos:end="143:51">pcr_l</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:26"><expr pos:start="145:17" pos:end="145:25"><name pos:start="145:17" pos:end="145:23">nb_pcrs</name><operator pos:start="145:24" pos:end="145:25">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="147:17" pos:end="149:26"><if pos:start="147:17" pos:end="149:26">if <condition pos:start="147:20" pos:end="147:33">(<expr pos:start="147:21" pos:end="147:32"><name pos:start="147:21" pos:end="147:27">nb_pcrs</name> <operator pos:start="147:29" pos:end="147:30">&gt;=</operator> <literal type="number" pos:start="147:32" pos:end="147:32">2</literal></expr>)</condition><block type="pseudo" pos:start="149:21" pos:end="149:26"><block_content pos:start="149:21" pos:end="149:26">

                    <break pos:start="149:21" pos:end="149:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="151:15" pos:end="155:13">else <block pos:start="151:20" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:64">

                <expr_stmt pos:start="153:17" pos:end="153:64"><expr pos:start="153:17" pos:end="153:63"><call pos:start="153:17" pos:end="153:63"><name pos:start="153:17" pos:end="153:39">finished_reading_packet</name><argument_list pos:start="153:40" pos:end="153:63">(<argument pos:start="153:41" pos:end="153:41"><expr pos:start="153:41" pos:end="153:41"><name pos:start="153:41" pos:end="153:41">s</name></expr></argument>, <argument pos:start="153:44" pos:end="153:62"><expr pos:start="153:44" pos:end="153:62"><name pos:start="153:44" pos:end="153:62"><name pos:start="153:44" pos:end="153:45">ts</name><operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:62">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:25"><expr pos:start="157:13" pos:end="157:24"><name pos:start="157:13" pos:end="157:22">nb_packets</name><operator pos:start="157:23" pos:end="157:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="163:9" pos:end="163:60">/* NOTE1: the bitrate is computed without the FEC */</comment>

        <comment type="block" pos:start="165:9" pos:end="165:70">/* NOTE2: it is only the bitrate of the start of the stream */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:81"><expr pos:start="167:9" pos:end="167:80"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:10">ts</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:20">pcr_incr</name></name> <operator pos:start="167:22" pos:end="167:22">=</operator> <operator pos:start="167:24" pos:end="167:24">(</operator><name pos:start="167:25" pos:end="167:31"><name pos:start="167:25" pos:end="167:28">pcrs</name><index pos:start="167:29" pos:end="167:31">[<expr pos:start="167:30" pos:end="167:30"><literal type="number" pos:start="167:30" pos:end="167:30">1</literal></expr>]</index></name> <operator pos:start="167:33" pos:end="167:33">-</operator> <name pos:start="167:35" pos:end="167:41"><name pos:start="167:35" pos:end="167:38">pcrs</name><index pos:start="167:39" pos:end="167:41">[<expr pos:start="167:40" pos:end="167:40"><literal type="number" pos:start="167:40" pos:end="167:40">0</literal></expr>]</index></name><operator pos:start="167:42" pos:end="167:42">)</operator> <operator pos:start="167:44" pos:end="167:44">/</operator> <operator pos:start="167:46" pos:end="167:46">(</operator><name pos:start="167:47" pos:end="167:61"><name pos:start="167:47" pos:end="167:58">packet_count</name><index pos:start="167:59" pos:end="167:61">[<expr pos:start="167:60" pos:end="167:60"><literal type="number" pos:start="167:60" pos:end="167:60">1</literal></expr>]</index></name> <operator pos:start="167:63" pos:end="167:63">-</operator> <name pos:start="167:65" pos:end="167:79"><name pos:start="167:65" pos:end="167:76">packet_count</name><index pos:start="167:77" pos:end="167:79">[<expr pos:start="167:78" pos:end="167:78"><literal type="number" pos:start="167:78" pos:end="167:78">0</literal></expr>]</index></name><operator pos:start="167:80" pos:end="167:80">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:64"><expr pos:start="169:9" pos:end="169:63"><name pos:start="169:9" pos:end="169:19"><name pos:start="169:9" pos:end="169:10">ts</name><operator pos:start="169:11" pos:end="169:12">-&gt;</operator><name pos:start="169:13" pos:end="169:19">cur_pcr</name></name>  <operator pos:start="169:22" pos:end="169:22">=</operator> <name pos:start="169:24" pos:end="169:30"><name pos:start="169:24" pos:end="169:27">pcrs</name><index pos:start="169:28" pos:end="169:30">[<expr pos:start="169:29" pos:end="169:29"><literal type="number" pos:start="169:29" pos:end="169:29">0</literal></expr>]</index></name> <operator pos:start="169:32" pos:end="169:32">-</operator> <name pos:start="169:34" pos:end="169:45"><name pos:start="169:34" pos:end="169:35">ts</name><operator pos:start="169:36" pos:end="169:37">-&gt;</operator><name pos:start="169:38" pos:end="169:45">pcr_incr</name></name> <operator pos:start="169:47" pos:end="169:47">*</operator> <name pos:start="169:49" pos:end="169:63"><name pos:start="169:49" pos:end="169:60">packet_count</name><index pos:start="169:61" pos:end="169:63">[<expr pos:start="169:62" pos:end="169:62"><literal type="number" pos:start="169:62" pos:end="169:62">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:70"><expr pos:start="171:9" pos:end="171:69"><name pos:start="171:9" pos:end="171:19"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:19">bit_rate</name></name>  <operator pos:start="171:22" pos:end="171:22">=</operator> <name pos:start="171:24" pos:end="171:37">TS_PACKET_SIZE</name> <operator pos:start="171:39" pos:end="171:39">*</operator> <literal type="number" pos:start="171:41" pos:end="171:41">8</literal> <operator pos:start="171:43" pos:end="171:43">*</operator> <literal type="number" pos:start="171:45" pos:end="171:54">27000000LL</literal> <operator pos:start="171:56" pos:end="171:56">/</operator> <name pos:start="171:58" pos:end="171:69"><name pos:start="171:58" pos:end="171:59">ts</name><operator pos:start="171:60" pos:end="171:61">-&gt;</operator><name pos:start="171:62" pos:end="171:69">pcr_incr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:45"><expr pos:start="173:9" pos:end="173:44"><name pos:start="173:9" pos:end="173:30"><name pos:start="173:9" pos:end="173:10">st</name><operator pos:start="173:11" pos:end="173:12">-&gt;</operator><name pos:start="173:13" pos:end="173:20">codecpar</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:30">bit_rate</name></name> <operator pos:start="173:32" pos:end="173:32">=</operator> <name pos:start="173:34" pos:end="173:44"><name pos:start="173:34" pos:end="173:34">s</name><operator pos:start="173:35" pos:end="173:36">-&gt;</operator><name pos:start="173:37" pos:end="173:44">bit_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:42"><expr pos:start="175:9" pos:end="175:41"><name pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:10">st</name><operator pos:start="175:11" pos:end="175:12">-&gt;</operator><name pos:start="175:13" pos:end="175:22">start_time</name></name>      <operator pos:start="175:29" pos:end="175:29">=</operator> <name pos:start="175:31" pos:end="175:41"><name pos:start="175:31" pos:end="175:32">ts</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:41">cur_pcr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="179:74"><expr pos:start="177:9" pos:end="179:73"><call pos:start="177:9" pos:end="179:73"><name pos:start="177:9" pos:end="177:14">av_log</name><argument_list pos:start="177:15" pos:end="179:73">(<argument pos:start="177:16" pos:end="177:25"><expr pos:start="177:16" pos:end="177:25"><name pos:start="177:16" pos:end="177:25"><name pos:start="177:16" pos:end="177:17">ts</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:25">stream</name></name></expr></argument>, <argument pos:start="177:28" pos:end="177:39"><expr pos:start="177:28" pos:end="177:39"><name pos:start="177:28" pos:end="177:39">AV_LOG_TRACE</name></expr></argument>, <argument pos:start="177:42" pos:end="177:74"><expr pos:start="177:42" pos:end="177:74"><literal type="string" pos:start="177:42" pos:end="177:74">"start=%0.3f pcr=%0.3f incr=%d\n"</literal></expr></argument>,

                <argument pos:start="179:17" pos:end="179:42"><expr pos:start="179:17" pos:end="179:42"><name pos:start="179:17" pos:end="179:30"><name pos:start="179:17" pos:end="179:18">st</name><operator pos:start="179:19" pos:end="179:20">-&gt;</operator><name pos:start="179:21" pos:end="179:30">start_time</name></name> <operator pos:start="179:32" pos:end="179:32">/</operator> <literal type="number" pos:start="179:34" pos:end="179:42">1000000.0</literal></expr></argument>, <argument pos:start="179:45" pos:end="179:58"><expr pos:start="179:45" pos:end="179:58"><name pos:start="179:45" pos:end="179:51"><name pos:start="179:45" pos:end="179:48">pcrs</name><index pos:start="179:49" pos:end="179:51">[<expr pos:start="179:50" pos:end="179:50"><literal type="number" pos:start="179:50" pos:end="179:50">0</literal></expr>]</index></name> <operator pos:start="179:53" pos:end="179:53">/</operator> <literal type="number" pos:start="179:55" pos:end="179:58">27e6</literal></expr></argument>, <argument pos:start="179:61" pos:end="179:72"><expr pos:start="179:61" pos:end="179:72"><name pos:start="179:61" pos:end="179:72"><name pos:start="179:61" pos:end="179:62">ts</name><operator pos:start="179:63" pos:end="179:64">-&gt;</operator><name pos:start="179:65" pos:end="179:72">pcr_incr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:26"><expr pos:start="185:5" pos:end="185:25"><call pos:start="185:5" pos:end="185:25"><name pos:start="185:5" pos:end="185:13">seek_back</name><argument_list pos:start="185:14" pos:end="185:25">(<argument pos:start="185:15" pos:end="185:15"><expr pos:start="185:15" pos:end="185:15"><name pos:start="185:15" pos:end="185:15">s</name></expr></argument>, <argument pos:start="185:18" pos:end="185:19"><expr pos:start="185:18" pos:end="185:19"><name pos:start="185:18" pos:end="185:19">pb</name></expr></argument>, <argument pos:start="185:22" pos:end="185:24"><expr pos:start="185:22" pos:end="185:24"><name pos:start="185:22" pos:end="185:24">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="187:5" pos:end="187:13">return <expr pos:start="187:12" pos:end="187:12"><literal type="number" pos:start="187:12" pos:end="187:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
