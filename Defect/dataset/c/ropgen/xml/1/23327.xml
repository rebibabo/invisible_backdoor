<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23327.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">smvjpeg_decode_frame</name><parameter_list pos:start="1:32" pos:end="3:44">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:81"><decl pos:start="1:68" pos:end="1:81"><type pos:start="1:68" pos:end="1:81"><name pos:start="1:68" pos:end="1:70">int</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:81">data_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:30"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:28">AVPixFmtDescriptor</name> <modifier pos:start="7:30" pos:end="7:30">*</modifier></type><name pos:start="7:31" pos:end="7:34">desc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">SMVJpegDecodeContext</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:27">s</name> <init pos:start="9:29" pos:end="9:46">= <expr pos:start="9:31" pos:end="9:46"><name pos:start="9:31" pos:end="9:46"><name pos:start="9:31" pos:end="9:35">avctx</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:11">AVFrame</name><modifier pos:start="11:12" pos:end="11:12">*</modifier></type> <name pos:start="11:14" pos:end="11:23">mjpeg_data</name> <init pos:start="11:25" pos:end="11:39">= <expr pos:start="11:27" pos:end="11:39"><name pos:start="11:27" pos:end="11:39"><name pos:start="11:27" pos:end="11:27">s</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:36">picture</name><index pos:start="11:37" pos:end="11:39">[<expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:20">cur_frame</name> <init pos:start="13:22" pos:end="13:24">= <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr></init></decl>, <decl pos:start="13:27" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:29">ret</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:13">cur_frame</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:21">avpkt</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:26">pts</name></name> <operator pos:start="17:28" pos:end="17:28">%</operator> <name pos:start="17:30" pos:end="17:47"><name pos:start="17:30" pos:end="17:30">s</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:47">frames_per_jpeg</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:41">/* Are we at the start of a block? */</comment>

    <if_stmt pos:start="23:5" pos:end="39:31"><if pos:start="23:5" pos:end="37:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:18">cur_frame</name></expr>)</condition> <block pos:start="23:21" pos:end="37:5">{<block_content pos:start="25:9" pos:end="35:9">

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:22">av_frame_unref</name><argument_list pos:start="25:23" pos:end="25:34">(<argument pos:start="25:24" pos:end="25:33"><expr pos:start="25:24" pos:end="25:33"><name pos:start="25:24" pos:end="25:33">mjpeg_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:86"><expr pos:start="27:9" pos:end="27:85"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:85"><name pos:start="27:15" pos:end="27:35">avcodec_decode_video2</name><argument_list pos:start="27:36" pos:end="27:85">(<argument pos:start="27:37" pos:end="27:44"><expr pos:start="27:37" pos:end="27:44"><name pos:start="27:37" pos:end="27:44"><name pos:start="27:37" pos:end="27:37">s</name><operator pos:start="27:38" pos:end="27:39">-&gt;</operator><name pos:start="27:40" pos:end="27:44">avctx</name></name></expr></argument>, <argument pos:start="27:47" pos:end="27:56"><expr pos:start="27:47" pos:end="27:56"><name pos:start="27:47" pos:end="27:56">mjpeg_data</name></expr></argument>, <argument pos:start="27:59" pos:end="27:77"><expr pos:start="27:59" pos:end="27:77"><operator pos:start="27:59" pos:end="27:59">&amp;</operator><name pos:start="27:60" pos:end="27:77"><name pos:start="27:60" pos:end="27:60">s</name><operator pos:start="27:61" pos:end="27:62">-&gt;</operator><name pos:start="27:63" pos:end="27:77">mjpeg_data_size</name></name></expr></argument>, <argument pos:start="27:80" pos:end="27:84"><expr pos:start="27:80" pos:end="27:84"><name pos:start="27:80" pos:end="27:84">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:17">&lt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:23">

            <expr_stmt pos:start="31:13" pos:end="31:35"><expr pos:start="31:13" pos:end="31:34"><name pos:start="31:13" pos:end="31:30"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:30">mjpeg_data_size</name></name> <operator pos:start="31:32" pos:end="31:32">=</operator> <literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>;</expr_stmt>

            <return pos:start="33:13" pos:end="33:23">return <expr pos:start="33:20" pos:end="33:22"><name pos:start="33:20" pos:end="33:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="39:31">else if <condition pos:start="37:15" pos:end="37:35">(<expr pos:start="37:16" pos:end="37:34"><operator pos:start="37:16" pos:end="37:16">!</operator><name pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:17">s</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:34">mjpeg_data_size</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <return pos:start="39:9" pos:end="39:31">return <expr pos:start="39:16" pos:end="39:30"><call pos:start="39:16" pos:end="39:30"><name pos:start="39:16" pos:end="39:22">AVERROR</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:8">desc</name> <operator pos:start="43:10" pos:end="43:10">=</operator> <call pos:start="43:12" pos:end="43:49"><name pos:start="43:12" pos:end="43:30">av_pix_fmt_desc_get</name><argument_list pos:start="43:31" pos:end="43:49">(<argument pos:start="43:32" pos:end="43:48"><expr pos:start="43:32" pos:end="43:48"><name pos:start="43:32" pos:end="43:48"><name pos:start="43:32" pos:end="43:32">s</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">avctx</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:48">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:81">(<expr pos:start="45:9" pos:end="45:80"><name pos:start="45:9" pos:end="45:12">desc</name> <operator pos:start="45:14" pos:end="45:15">&amp;&amp;</operator> <name pos:start="45:17" pos:end="45:34"><name pos:start="45:17" pos:end="45:26">mjpeg_data</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:34">height</name></name> <operator pos:start="45:36" pos:end="45:36">%</operator> <operator pos:start="45:38" pos:end="45:38">(</operator><name pos:start="45:39" pos:end="45:56"><name pos:start="45:39" pos:end="45:39">s</name><operator pos:start="45:40" pos:end="45:41">-&gt;</operator><name pos:start="45:42" pos:end="45:56">frames_per_jpeg</name></name> <operator pos:start="45:58" pos:end="45:59">&lt;&lt;</operator> <name pos:start="45:61" pos:end="45:79"><name pos:start="45:61" pos:end="45:64">desc</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:79">log2_chroma_h</name></name><operator pos:start="45:80" pos:end="45:80">)</operator></expr>)</condition> <block pos:start="45:83" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:35">

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><call pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:55">(<argument pos:start="47:16" pos:end="47:20"><expr pos:start="47:16" pos:end="47:20"><name pos:start="47:16" pos:end="47:20">avctx</name></expr></argument>, <argument pos:start="47:23" pos:end="47:34"><expr pos:start="47:23" pos:end="47:34"><name pos:start="47:23" pos:end="47:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:37" pos:end="47:54"><expr pos:start="47:37" pos:end="47:54"><literal type="string" pos:start="47:37" pos:end="47:54">"Invalid height\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:35">return <expr pos:start="49:16" pos:end="49:34"><name pos:start="49:16" pos:end="49:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="55:5" pos:end="55:28">/*use the last lot... */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><operator pos:start="57:5" pos:end="57:5">*</operator><name pos:start="57:6" pos:end="57:14">data_size</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <name pos:start="57:18" pos:end="57:35"><name pos:start="57:18" pos:end="57:18">s</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:35">mjpeg_data_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:9">avctx</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:18">pix_fmt</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:38"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:29">avctx</name><operator pos:start="61:30" pos:end="61:31">-&gt;</operator><name pos:start="61:32" pos:end="61:38">pix_fmt</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="67:17">/* We shouldn't get here if frames_per_jpeg &lt;= 0 because this was rejected

       in init */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:95"><expr pos:start="69:5" pos:end="69:94"><name pos:start="69:5" pos:end="69:7">ret</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <call pos:start="69:11" pos:end="69:94"><name pos:start="69:11" pos:end="69:27">ff_set_dimensions</name><argument_list pos:start="69:28" pos:end="69:94">(<argument pos:start="69:29" pos:end="69:33"><expr pos:start="69:29" pos:end="69:33"><name pos:start="69:29" pos:end="69:33">avctx</name></expr></argument>, <argument pos:start="69:36" pos:end="69:52"><expr pos:start="69:36" pos:end="69:52"><name pos:start="69:36" pos:end="69:52"><name pos:start="69:36" pos:end="69:45">mjpeg_data</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:52">width</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:93"><expr pos:start="69:55" pos:end="69:93"><name pos:start="69:55" pos:end="69:72"><name pos:start="69:55" pos:end="69:64">mjpeg_data</name><operator pos:start="69:65" pos:end="69:66">-&gt;</operator><name pos:start="69:67" pos:end="69:72">height</name></name> <operator pos:start="69:74" pos:end="69:74">/</operator> <name pos:start="69:76" pos:end="69:93"><name pos:start="69:76" pos:end="69:76">s</name><operator pos:start="69:77" pos:end="69:78">-&gt;</operator><name pos:start="69:79" pos:end="69:93">frames_per_jpeg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">&lt;</operator> <literal type="number" pos:start="71:15" pos:end="71:15">0</literal></expr>)</condition> <block pos:start="71:18" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:19">

        <expr_stmt pos:start="73:9" pos:end="73:62"><expr pos:start="73:9" pos:end="73:61"><call pos:start="73:9" pos:end="73:61"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:61">(<argument pos:start="73:16" pos:end="73:16"><expr pos:start="73:16" pos:end="73:16"><name pos:start="73:16" pos:end="73:16">s</name></expr></argument>, <argument pos:start="73:19" pos:end="73:30"><expr pos:start="73:19" pos:end="73:30"><name pos:start="73:19" pos:end="73:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:60"><expr pos:start="73:33" pos:end="73:60"><literal type="string" pos:start="73:33" pos:end="73:60">"Failed to set dimensions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:19">return <expr pos:start="75:16" pos:end="75:18"><name pos:start="75:16" pos:end="75:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="105:5"><if pos:start="81:5" pos:end="105:5">if <condition pos:start="81:8" pos:end="81:19">(<expr pos:start="81:9" pos:end="81:18"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:18">data_size</name></expr>)</condition> <block pos:start="81:21" pos:end="105:5">{<block_content pos:start="83:9" pos:end="103:48">

        <expr_stmt pos:start="83:9" pos:end="83:44"><expr pos:start="83:9" pos:end="83:43"><name pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:18">picture</name><index pos:start="83:19" pos:end="83:21">[<expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">1</literal></expr>]</index></name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:36">extended_data</name> <operator pos:start="83:38" pos:end="83:38">=</operator> <name pos:start="83:40" pos:end="83:43">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:52"><expr pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:18">picture</name><index pos:start="85:19" pos:end="85:21">[<expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">1</literal></expr>]</index></name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:28">width</name>         <operator pos:start="85:38" pos:end="85:38">=</operator> <name pos:start="85:40" pos:end="85:51"><name pos:start="85:40" pos:end="85:44">avctx</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:51">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:53"><expr pos:start="87:9" pos:end="87:52"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:18">picture</name><index pos:start="87:19" pos:end="87:21">[<expr pos:start="87:20" pos:end="87:20"><literal type="number" pos:start="87:20" pos:end="87:20">1</literal></expr>]</index></name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:29">height</name>        <operator pos:start="87:38" pos:end="87:38">=</operator> <name pos:start="87:40" pos:end="87:52"><name pos:start="87:40" pos:end="87:44">avctx</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:52">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:54"><expr pos:start="89:9" pos:end="89:53"><name pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:18">picture</name><index pos:start="89:19" pos:end="89:21">[<expr pos:start="89:20" pos:end="89:20"><literal type="number" pos:start="89:20" pos:end="89:20">1</literal></expr>]</index></name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:29">format</name>        <operator pos:start="89:38" pos:end="89:38">=</operator> <name pos:start="89:40" pos:end="89:53"><name pos:start="89:40" pos:end="89:44">avctx</name><operator pos:start="89:45" pos:end="89:46">-&gt;</operator><name pos:start="89:47" pos:end="89:53">pix_fmt</name></name></expr>;</expr_stmt>

        <comment type="block" pos:start="91:9" pos:end="91:57">/* ff_init_buffer_info(avctx, &amp;s-&gt;picture[1]); */</comment>

        <expr_stmt pos:start="93:9" pos:end="95:76"><expr pos:start="93:9" pos:end="95:75"><call pos:start="93:9" pos:end="95:75"><name pos:start="93:9" pos:end="93:19">smv_img_pnt</name><argument_list pos:start="93:20" pos:end="95:75">(<argument pos:start="93:21" pos:end="93:39"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:33"><name pos:start="93:21" pos:end="93:21">s</name><operator pos:start="93:22" pos:end="93:23">-&gt;</operator><name pos:start="93:24" pos:end="93:30">picture</name><index pos:start="93:31" pos:end="93:33">[<expr pos:start="93:32" pos:end="93:32"><literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>]</index></name><operator pos:start="93:34" pos:end="93:35">-&gt;</operator><name pos:start="93:36" pos:end="93:39">data</name></expr></argument>, <argument pos:start="93:42" pos:end="93:57"><expr pos:start="93:42" pos:end="93:57"><name pos:start="93:42" pos:end="93:57"><name pos:start="93:42" pos:end="93:51">mjpeg_data</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:57">data</name></name></expr></argument>, <argument pos:start="93:60" pos:end="93:79"><expr pos:start="93:60" pos:end="93:79"><name pos:start="93:60" pos:end="93:79"><name pos:start="93:60" pos:end="93:69">mjpeg_data</name><operator pos:start="93:70" pos:end="93:71">-&gt;</operator><name pos:start="93:72" pos:end="93:79">linesize</name></name></expr></argument>,

                    <argument pos:start="95:21" pos:end="95:34"><expr pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:34"><name pos:start="95:21" pos:end="95:25">avctx</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:34">pix_fmt</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:48"><expr pos:start="95:37" pos:end="95:48"><name pos:start="95:37" pos:end="95:48"><name pos:start="95:37" pos:end="95:41">avctx</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:48">width</name></name></expr></argument>, <argument pos:start="95:51" pos:end="95:63"><expr pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:63"><name pos:start="95:51" pos:end="95:55">avctx</name><operator pos:start="95:56" pos:end="95:57">-&gt;</operator><name pos:start="95:58" pos:end="95:63">height</name></name></expr></argument>, <argument pos:start="95:66" pos:end="95:74"><expr pos:start="95:66" pos:end="95:74"><name pos:start="95:66" pos:end="95:74">cur_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="97:9" pos:end="99:65">for <control pos:start="97:13" pos:end="97:50">(<init pos:start="97:14" pos:end="97:19"><expr pos:start="97:14" pos:end="97:18"><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">=</operator> <literal type="number" pos:start="97:18" pos:end="97:18">0</literal></expr>;</init> <condition pos:start="97:21" pos:end="97:45"><expr pos:start="97:21" pos:end="97:44"><name pos:start="97:21" pos:end="97:21">i</name> <operator pos:start="97:23" pos:end="97:23">&lt;</operator> <name pos:start="97:25" pos:end="97:44">AV_NUM_DATA_POINTERS</name></expr>;</condition> <incr pos:start="97:47" pos:end="97:49"><expr pos:start="97:47" pos:end="97:49"><name pos:start="97:47" pos:end="97:47">i</name><operator pos:start="97:48" pos:end="97:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:13" pos:end="99:65"><block_content pos:start="99:13" pos:end="99:65">

            <expr_stmt pos:start="99:13" pos:end="99:65"><expr pos:start="99:13" pos:end="99:64"><name pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:22">picture</name><index pos:start="99:23" pos:end="99:25">[<expr pos:start="99:24" pos:end="99:24"><literal type="number" pos:start="99:24" pos:end="99:24">1</literal></expr>]</index></name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:35">linesize</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">i</name></expr>]</index></name> <operator pos:start="99:40" pos:end="99:40">=</operator> <name pos:start="99:42" pos:end="99:64"><name pos:start="99:42" pos:end="99:51">mjpeg_data</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:61">linesize</name><index pos:start="99:62" pos:end="99:64">[<expr pos:start="99:63" pos:end="99:63"><name pos:start="99:63" pos:end="99:63">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="103:9" pos:end="103:48"><expr pos:start="103:9" pos:end="103:47"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <call pos:start="103:15" pos:end="103:47"><name pos:start="103:15" pos:end="103:26">av_frame_ref</name><argument_list pos:start="103:27" pos:end="103:47">(<argument pos:start="103:28" pos:end="103:31"><expr pos:start="103:28" pos:end="103:31"><name pos:start="103:28" pos:end="103:31">data</name></expr></argument>, <argument pos:start="103:34" pos:end="103:46"><expr pos:start="103:34" pos:end="103:46"><name pos:start="103:34" pos:end="103:46"><name pos:start="103:34" pos:end="103:34">s</name><operator pos:start="103:35" pos:end="103:36">-&gt;</operator><name pos:start="103:37" pos:end="103:43">picture</name><index pos:start="103:44" pos:end="103:46">[<expr pos:start="103:45" pos:end="103:45"><literal type="number" pos:start="103:45" pos:end="103:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="109:5" pos:end="109:15">return <expr pos:start="109:12" pos:end="109:14"><name pos:start="109:12" pos:end="109:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
