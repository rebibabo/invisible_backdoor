<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9887.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">vnc_tls_initialize</name><parameter_list pos:start="1:30" pos:end="1:35">(<parameter pos:start="1:31" pos:end="1:34"><decl pos:start="1:31" pos:end="1:34"><type pos:start="1:31" pos:end="1:34"><name pos:start="1:31" pos:end="1:34">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:14"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <name pos:start="5:12" pos:end="5:14">int</name></type> <name pos:start="5:16" pos:end="5:29">tlsinitialized</name> <init pos:start="5:31" pos:end="5:33">= <expr pos:start="5:33" pos:end="5:33"><literal type="number" pos:start="5:33" pos:end="5:33">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:17"><if pos:start="9:5" pos:end="11:17">if <condition pos:start="9:8" pos:end="9:23">(<expr pos:start="9:9" pos:end="9:22"><name pos:start="9:9" pos:end="9:22">tlsinitialized</name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:17"><block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:34">(<expr pos:start="15:9" pos:end="15:33"><call pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:26">gnutls_global_init</name> <argument_list pos:start="15:28" pos:end="15:29">()</argument_list></call> <operator pos:start="15:31" pos:end="15:31">&lt;</operator> <literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:69">/* XXX ought to re-generate diffie-hellman params periodically */</comment>

    <if_stmt pos:start="23:5" pos:end="25:17"><if pos:start="23:5" pos:end="25:17">if <condition pos:start="23:8" pos:end="23:47">(<expr pos:start="23:9" pos:end="23:46"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:29">gnutls_dh_params_init</name> <argument_list pos:start="23:31" pos:end="23:42">(<argument pos:start="23:32" pos:end="23:41"><expr pos:start="23:32" pos:end="23:41"><operator pos:start="23:32" pos:end="23:32">&amp;</operator><name pos:start="23:33" pos:end="23:41">dh_params</name></expr></argument>)</argument_list></call> <operator pos:start="23:44" pos:end="23:44">&lt;</operator> <literal type="number" pos:start="23:46" pos:end="23:46">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:17"><block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="34:0"><if pos:start="27:5" pos:end="34:0">if <condition pos:start="27:8" pos:end="27:60">(<expr pos:start="27:9" pos:end="27:59"><call pos:start="27:9" pos:end="27:55"><name pos:start="27:9" pos:end="27:34">gnutls_dh_params_generate2</name> <argument_list pos:start="27:36" pos:end="27:55">(<argument pos:start="27:37" pos:end="27:45"><expr pos:start="27:37" pos:end="27:45"><name pos:start="27:37" pos:end="27:45">dh_params</name></expr></argument>, <argument pos:start="27:48" pos:end="27:54"><expr pos:start="27:48" pos:end="27:54"><name pos:start="27:48" pos:end="27:54">DH_BITS</name></expr></argument>)</argument_list></call> <operator pos:start="27:57" pos:end="27:57">&lt;</operator> <literal type="number" pos:start="27:59" pos:end="27:59">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="34:0"><block_content pos:start="29:9" pos:end="34:0">

        <return pos:start="29:9" pos:end="34:0">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="33:1" pos:end="33:42">#<cpp:directive pos:start="33:2" pos:end="33:3">if</cpp:directive> <expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:11">defined</name><argument_list pos:start="33:12" pos:end="33:23">(<argument pos:start="33:13" pos:end="33:22"><expr pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:22">_VNC_DEBUG</name></expr></argument>)</argument_list></call> <operator pos:start="33:25" pos:end="33:26">&amp;&amp;</operator> <name pos:start="33:28" pos:end="33:37">_VNC_DEBUG</name> <operator pos:start="33:39" pos:end="33:40">&gt;=</operator> <literal type="number" pos:start="33:42" pos:end="33:42">2</literal></expr></cpp:if>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><call pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:31">gnutls_global_set_log_level</name><argument_list pos:start="35:32" pos:end="35:35">(<argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><literal type="number" pos:start="35:33" pos:end="35:34">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:56"><call pos:start="37:5" pos:end="37:56"><name pos:start="37:5" pos:end="37:34">gnutls_global_set_log_function</name><argument_list pos:start="37:35" pos:end="37:56">(<argument pos:start="37:36" pos:end="37:55"><expr pos:start="37:36" pos:end="37:55"><name pos:start="37:36" pos:end="37:55">vnc_debug_gnutls_log</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:18">tlsinitialized</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">1</literal></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
