<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24647.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:30">ff_MPV_common_init</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">MpegEncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:14">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="11:47"><decl pos:start="7:5" pos:end="11:46"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">nb_slices</name> <init pos:start="7:19" pos:end="11:46">= <expr pos:start="7:21" pos:end="11:46"><ternary pos:start="7:21" pos:end="11:46"><condition pos:start="7:21" pos:end="9:70"><expr pos:start="7:21" pos:end="9:68"><operator pos:start="7:21" pos:end="7:21">(</operator><name pos:start="7:22" pos:end="7:33">HAVE_THREADS</name> <operator pos:start="7:35" pos:end="7:36">&amp;&amp;</operator>

                     <name pos:start="9:22" pos:end="9:49"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:49">active_thread_type</name></name> <operator pos:start="9:51" pos:end="9:51">&amp;</operator> <name pos:start="9:53" pos:end="9:67">FF_THREAD_SLICE</name><operator pos:start="9:68" pos:end="9:68">)</operator></expr> ?</condition><then pos:start="11:21" pos:end="11:42">

                    <expr pos:start="11:21" pos:end="11:42"><name pos:start="11:21" pos:end="11:42"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:28">avctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:42">thread_count</name></name></expr> </then><else pos:start="11:44" pos:end="11:46">: <expr pos:start="11:46" pos:end="11:46"><literal type="number" pos:start="11:46" pos:end="11:46">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:37"><if pos:start="15:5" pos:end="17:37">if <condition pos:start="15:8" pos:end="15:40">(<expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">encoding</name></name> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:39"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:31">avctx</name><operator pos:start="15:32" pos:end="15:33">-&gt;</operator><name pos:start="15:34" pos:end="15:39">slices</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:37"><block_content pos:start="17:9" pos:end="17:37">

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:17">nb_slices</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <name pos:start="17:21" pos:end="17:36"><name pos:start="17:21" pos:end="17:21">s</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:28">avctx</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">slices</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="27:45"><if pos:start="21:5" pos:end="23:49">if <condition pos:start="21:8" pos:end="21:74">(<expr pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:19">codec_id</name></name> <operator pos:start="21:21" pos:end="21:22">==</operator> <name pos:start="21:24" pos:end="21:45">AV_CODEC_ID_MPEG2VIDEO</name> <operator pos:start="21:47" pos:end="21:48">&amp;&amp;</operator> <operator pos:start="21:50" pos:end="21:50">!</operator><name pos:start="21:51" pos:end="21:73"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:73">progressive_sequence</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:49"><block_content pos:start="23:9" pos:end="23:49">

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">mb_height</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <operator pos:start="23:24" pos:end="23:24">(</operator><name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:25">s</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:33">height</name></name> <operator pos:start="23:35" pos:end="23:35">+</operator> <literal type="number" pos:start="23:37" pos:end="23:38">31</literal><operator pos:start="23:39" pos:end="23:39">)</operator> <operator pos:start="23:41" pos:end="23:41">/</operator> <literal type="number" pos:start="23:43" pos:end="23:44">32</literal> <operator pos:start="23:46" pos:end="23:46">*</operator> <literal type="number" pos:start="23:48" pos:end="23:48">2</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="25:5" pos:end="27:45">else<block type="pseudo" pos:start="27:9" pos:end="27:45"><block_content pos:start="27:9" pos:end="27:45">

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">mb_height</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <operator pos:start="27:24" pos:end="27:24">(</operator><name pos:start="27:25" pos:end="27:33"><name pos:start="27:25" pos:end="27:25">s</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:33">height</name></name> <operator pos:start="27:35" pos:end="27:35">+</operator> <literal type="number" pos:start="27:37" pos:end="27:38">15</literal><operator pos:start="27:39" pos:end="27:39">)</operator> <operator pos:start="27:41" pos:end="27:41">/</operator> <literal type="number" pos:start="27:43" pos:end="27:44">16</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:16">avctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:25">pix_fmt</name></name> <operator pos:start="31:27" pos:end="31:28">==</operator> <name pos:start="31:30" pos:end="31:44">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="31:47" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:18">

        <expr_stmt pos:start="33:9" pos:end="35:66"><expr pos:start="33:9" pos:end="35:65"><call pos:start="33:9" pos:end="35:65"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:65">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="35:16" pos:end="35:64"><expr pos:start="35:16" pos:end="35:64"><literal type="string" pos:start="35:16" pos:end="35:64">"decoding to AV_PIX_FMT_NONE is not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="61:5"><if pos:start="43:5" pos:end="61:5">if <condition pos:start="43:8" pos:end="43:78">(<expr pos:start="43:9" pos:end="43:77"><name pos:start="43:9" pos:end="43:17">nb_slices</name> <operator pos:start="43:19" pos:end="43:19">&gt;</operator> <name pos:start="43:21" pos:end="43:31">MAX_THREADS</name> <operator pos:start="43:33" pos:end="43:34">||</operator> <operator pos:start="43:36" pos:end="43:36">(</operator><name pos:start="43:37" pos:end="43:45">nb_slices</name> <operator pos:start="43:47" pos:end="43:47">&gt;</operator> <name pos:start="43:49" pos:end="43:60"><name pos:start="43:49" pos:end="43:49">s</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:60">mb_height</name></name> <operator pos:start="43:62" pos:end="43:63">&amp;&amp;</operator> <name pos:start="43:65" pos:end="43:76"><name pos:start="43:65" pos:end="43:65">s</name><operator pos:start="43:66" pos:end="43:67">-&gt;</operator><name pos:start="43:68" pos:end="43:76">mb_height</name></name><operator pos:start="43:77" pos:end="43:77">)</operator></expr>)</condition> <block pos:start="43:80" pos:end="61:5">{<block_content pos:start="45:9" pos:end="59:31">

        <decl_stmt pos:start="45:9" pos:end="45:23"><decl pos:start="45:9" pos:end="45:22"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:22">max_slices</name></decl>;</decl_stmt>

        <if_stmt pos:start="47:9" pos:end="53:37"><if pos:start="47:9" pos:end="49:58">if <condition pos:start="47:12" pos:end="47:25">(<expr pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:24">mb_height</name></name></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:58"><block_content pos:start="49:13" pos:end="49:58">

            <expr_stmt pos:start="49:13" pos:end="49:58"><expr pos:start="49:13" pos:end="49:57"><name pos:start="49:13" pos:end="49:22">max_slices</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:57"><name pos:start="49:26" pos:end="49:30">FFMIN</name><argument_list pos:start="49:31" pos:end="49:57">(<argument pos:start="49:32" pos:end="49:42"><expr pos:start="49:32" pos:end="49:42"><name pos:start="49:32" pos:end="49:42">MAX_THREADS</name></expr></argument>, <argument pos:start="49:45" pos:end="49:56"><expr pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:56"><name pos:start="49:45" pos:end="49:45">s</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:56">mb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="51:9" pos:end="53:37">else<block type="pseudo" pos:start="53:13" pos:end="53:37"><block_content pos:start="53:13" pos:end="53:37">

            <expr_stmt pos:start="53:13" pos:end="53:37"><expr pos:start="53:13" pos:end="53:36"><name pos:start="53:13" pos:end="53:22">max_slices</name> <operator pos:start="53:24" pos:end="53:24">=</operator> <name pos:start="53:26" pos:end="53:36">MAX_THREADS</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="57:59"><expr pos:start="55:9" pos:end="57:58"><call pos:start="55:9" pos:end="57:58"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="57:58">(<argument pos:start="55:16" pos:end="55:23"><expr pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:16">s</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:23">avctx</name></name></expr></argument>, <argument pos:start="55:26" pos:end="55:39"><expr pos:start="55:26" pos:end="55:39"><name pos:start="55:26" pos:end="55:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="55:42" pos:end="57:34"><expr pos:start="55:42" pos:end="57:34"><literal type="string" pos:start="55:42" pos:end="55:72">"too many threads/slices (%d),"</literal>

               <literal type="string" pos:start="57:16" pos:end="57:34">" reducing to %d\n"</literal></expr></argument>, <argument pos:start="57:37" pos:end="57:45"><expr pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:45">nb_slices</name></expr></argument>, <argument pos:start="57:48" pos:end="57:57"><expr pos:start="57:48" pos:end="57:57"><name pos:start="57:48" pos:end="57:57">max_slices</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:17">nb_slices</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:30">max_slices</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="65:5" pos:end="69:18"><if pos:start="65:5" pos:end="69:18">if <condition pos:start="65:8" pos:end="67:62">(<expr pos:start="65:9" pos:end="67:61"><operator pos:start="65:9" pos:end="65:9">(</operator><name pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:10">s</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:17">width</name></name> <operator pos:start="65:19" pos:end="65:20">||</operator> <name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:30">height</name></name><operator pos:start="65:31" pos:end="65:31">)</operator> <operator pos:start="65:33" pos:end="65:34">&amp;&amp;</operator>

        <call pos:start="67:9" pos:end="67:61"><name pos:start="67:9" pos:end="67:27">av_image_check_size</name><argument_list pos:start="67:28" pos:end="67:61">(<argument pos:start="67:29" pos:end="67:36"><expr pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:36"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:36">width</name></name></expr></argument>, <argument pos:start="67:39" pos:end="67:47"><expr pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:47"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:47">height</name></name></expr></argument>, <argument pos:start="67:50" pos:end="67:50"><expr pos:start="67:50" pos:end="67:50"><literal type="number" pos:start="67:50" pos:end="67:50">0</literal></expr></argument>, <argument pos:start="67:53" pos:end="67:60"><expr pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:53">s</name><operator pos:start="67:54" pos:end="67:55">-&gt;</operator><name pos:start="67:56" pos:end="67:60">avctx</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:26"><expr pos:start="73:5" pos:end="73:25"><call pos:start="73:5" pos:end="73:25"><name pos:start="73:5" pos:end="73:22">ff_dct_common_init</name><argument_list pos:start="73:23" pos:end="73:25">(<argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:32"><expr pos:start="77:5" pos:end="77:31"><name pos:start="77:5" pos:end="77:12"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:12">flags</name></name>  <operator pos:start="77:15" pos:end="77:15">=</operator> <name pos:start="77:17" pos:end="77:31"><name pos:start="77:17" pos:end="77:17">s</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:24">avctx</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:31">flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:33"><expr pos:start="79:5" pos:end="79:32"><name pos:start="79:5" pos:end="79:13"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:13">flags2</name></name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:32"><name pos:start="79:17" pos:end="79:17">s</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:24">avctx</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:32">flags2</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:27">/* set chroma shifts */</comment>

    <expr_stmt pos:start="85:5" pos:end="89:57"><expr pos:start="85:5" pos:end="89:56"><call pos:start="85:5" pos:end="89:56"><name pos:start="85:5" pos:end="85:36">av_pix_fmt_get_chroma_sub_sample</name><argument_list pos:start="85:37" pos:end="89:56">(<argument pos:start="85:38" pos:end="85:54"><expr pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:38">s</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:45">avctx</name><operator pos:start="85:46" pos:end="85:47">-&gt;</operator><name pos:start="85:48" pos:end="85:54">pix_fmt</name></name></expr></argument>,

                                     <argument pos:start="87:38" pos:end="87:55"><expr pos:start="87:38" pos:end="87:55"><operator pos:start="87:38" pos:end="87:38">&amp;</operator><name pos:start="87:39" pos:end="87:55"><name pos:start="87:39" pos:end="87:39">s</name><operator pos:start="87:40" pos:end="87:41">-&gt;</operator><name pos:start="87:42" pos:end="87:55">chroma_x_shift</name></name></expr></argument>,

                                     <argument pos:start="89:38" pos:end="89:55"><expr pos:start="89:38" pos:end="89:55"><operator pos:start="89:38" pos:end="89:38">&amp;</operator><name pos:start="89:39" pos:end="89:55"><name pos:start="89:39" pos:end="89:39">s</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:55">chroma_y_shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:38">/* convert fourcc to upper case */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:65"><expr pos:start="95:5" pos:end="95:64"><name pos:start="95:5" pos:end="95:16"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:16">codec_tag</name></name>          <operator pos:start="95:27" pos:end="95:27">=</operator> <call pos:start="95:29" pos:end="95:64"><name pos:start="95:29" pos:end="95:43">avpriv_toupper4</name><argument_list pos:start="95:44" pos:end="95:64">(<argument pos:start="95:45" pos:end="95:63"><expr pos:start="95:45" pos:end="95:63"><name pos:start="95:45" pos:end="95:63"><name pos:start="95:45" pos:end="95:45">s</name><operator pos:start="95:46" pos:end="95:47">-&gt;</operator><name pos:start="95:48" pos:end="95:52">avctx</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:63">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:72"><expr pos:start="99:5" pos:end="99:71"><name pos:start="99:5" pos:end="99:23"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:23">stream_codec_tag</name></name>   <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:71"><name pos:start="99:29" pos:end="99:43">avpriv_toupper4</name><argument_list pos:start="99:44" pos:end="99:71">(<argument pos:start="99:45" pos:end="99:70"><expr pos:start="99:45" pos:end="99:70"><name pos:start="99:45" pos:end="99:70"><name pos:start="99:45" pos:end="99:45">s</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:52">avctx</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:70">stream_codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:65"><expr pos:start="103:5" pos:end="105:64"><call pos:start="103:5" pos:end="105:64"><name pos:start="103:5" pos:end="103:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="103:22" pos:end="105:64">(<argument pos:start="103:23" pos:end="103:30"><expr pos:start="103:23" pos:end="103:30"><name pos:start="103:23" pos:end="103:30"><name pos:start="103:23" pos:end="103:23">s</name><operator pos:start="103:24" pos:end="103:25">-&gt;</operator><name pos:start="103:26" pos:end="103:30">avctx</name></name></expr></argument>, <argument pos:start="103:33" pos:end="103:42"><expr pos:start="103:33" pos:end="103:42"><name pos:start="103:33" pos:end="103:42"><name pos:start="103:33" pos:end="103:33">s</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:42">picture</name></name></expr></argument>,

                      <argument pos:start="105:23" pos:end="105:57"><expr pos:start="105:23" pos:end="105:57"><name pos:start="105:23" pos:end="105:39">MAX_PICTURE_COUNT</name> <operator pos:start="105:41" pos:end="105:41">*</operator> <sizeof pos:start="105:43" pos:end="105:57">sizeof<argument_list pos:start="105:49" pos:end="105:57">(<argument pos:start="105:50" pos:end="105:56"><expr pos:start="105:50" pos:end="105:56"><name pos:start="105:50" pos:end="105:56">Picture</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="105:60" pos:end="105:63"><expr pos:start="105:60" pos:end="105:63"><name pos:start="105:60" pos:end="105:63">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="107:5" pos:end="111:5">for <control pos:start="107:9" pos:end="107:43">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:38"><expr pos:start="107:17" pos:end="107:37"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <name pos:start="107:21" pos:end="107:37">MAX_PICTURE_COUNT</name></expr>;</condition> <incr pos:start="107:40" pos:end="107:42"><expr pos:start="107:40" pos:end="107:42"><name pos:start="107:40" pos:end="107:40">i</name><operator pos:start="107:41" pos:end="107:42">++</operator></expr></incr>)</control> <block pos:start="107:45" pos:end="111:5">{<block_content pos:start="109:9" pos:end="109:41">

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><call pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:22">av_frame_unref</name><argument_list pos:start="109:23" pos:end="109:40">(<argument pos:start="109:24" pos:end="109:39"><expr pos:start="109:24" pos:end="109:39"><operator pos:start="109:24" pos:end="109:24">&amp;</operator><name pos:start="109:25" pos:end="109:37"><name pos:start="109:25" pos:end="109:25">s</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:34">picture</name><index pos:start="109:35" pos:end="109:37">[<expr pos:start="109:36" pos:end="109:36"><name pos:start="109:36" pos:end="109:36">i</name></expr>]</index></name><operator pos:start="109:38" pos:end="109:38">.</operator><name pos:start="109:39" pos:end="109:39">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="113:5" pos:end="113:57"><expr pos:start="113:5" pos:end="113:56"><call pos:start="113:5" pos:end="113:56"><name pos:start="113:5" pos:end="113:10">memset</name><argument_list pos:start="113:11" pos:end="113:56">(<argument pos:start="113:12" pos:end="113:27"><expr pos:start="113:12" pos:end="113:27"><operator pos:start="113:12" pos:end="113:12">&amp;</operator><name pos:start="113:13" pos:end="113:27"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:27">next_picture</name></name></expr></argument>, <argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><literal type="number" pos:start="113:30" pos:end="113:30">0</literal></expr></argument>, <argument pos:start="113:33" pos:end="113:55"><expr pos:start="113:33" pos:end="113:55"><sizeof pos:start="113:33" pos:end="113:55">sizeof<argument_list pos:start="113:39" pos:end="113:55">(<argument pos:start="113:40" pos:end="113:54"><expr pos:start="113:40" pos:end="113:54"><name pos:start="113:40" pos:end="113:54"><name pos:start="113:40" pos:end="113:40">s</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:54">next_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:57"><expr pos:start="115:5" pos:end="115:56"><call pos:start="115:5" pos:end="115:56"><name pos:start="115:5" pos:end="115:10">memset</name><argument_list pos:start="115:11" pos:end="115:56">(<argument pos:start="115:12" pos:end="115:27"><expr pos:start="115:12" pos:end="115:27"><operator pos:start="115:12" pos:end="115:12">&amp;</operator><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:27">last_picture</name></name></expr></argument>, <argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><literal type="number" pos:start="115:30" pos:end="115:30">0</literal></expr></argument>, <argument pos:start="115:33" pos:end="115:55"><expr pos:start="115:33" pos:end="115:55"><sizeof pos:start="115:33" pos:end="115:55">sizeof<argument_list pos:start="115:39" pos:end="115:55">(<argument pos:start="115:40" pos:end="115:54"><expr pos:start="115:40" pos:end="115:54"><name pos:start="115:40" pos:end="115:54"><name pos:start="115:40" pos:end="115:40">s</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:54">last_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:63"><expr pos:start="117:5" pos:end="117:62"><call pos:start="117:5" pos:end="117:62"><name pos:start="117:5" pos:end="117:10">memset</name><argument_list pos:start="117:11" pos:end="117:62">(<argument pos:start="117:12" pos:end="117:30"><expr pos:start="117:12" pos:end="117:30"><operator pos:start="117:12" pos:end="117:12">&amp;</operator><name pos:start="117:13" pos:end="117:30"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:30">current_picture</name></name></expr></argument>, <argument pos:start="117:33" pos:end="117:33"><expr pos:start="117:33" pos:end="117:33"><literal type="number" pos:start="117:33" pos:end="117:33">0</literal></expr></argument>, <argument pos:start="117:36" pos:end="117:61"><expr pos:start="117:36" pos:end="117:61"><sizeof pos:start="117:36" pos:end="117:61">sizeof<argument_list pos:start="117:42" pos:end="117:61">(<argument pos:start="117:43" pos:end="117:60"><expr pos:start="117:43" pos:end="117:60"><name pos:start="117:43" pos:end="117:60"><name pos:start="117:43" pos:end="117:43">s</name><operator pos:start="117:44" pos:end="117:45">-&gt;</operator><name pos:start="117:46" pos:end="117:60">current_picture</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:39"><expr pos:start="119:5" pos:end="119:38"><call pos:start="119:5" pos:end="119:38"><name pos:start="119:5" pos:end="119:18">av_frame_unref</name><argument_list pos:start="119:19" pos:end="119:38">(<argument pos:start="119:20" pos:end="119:37"><expr pos:start="119:20" pos:end="119:37"><operator pos:start="119:20" pos:end="119:20">&amp;</operator><name pos:start="119:21" pos:end="119:37"><name pos:start="119:21" pos:end="119:21">s</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:35">next_picture</name><operator pos:start="119:36" pos:end="119:36">.</operator><name pos:start="119:37" pos:end="119:37">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:39"><expr pos:start="121:5" pos:end="121:38"><call pos:start="121:5" pos:end="121:38"><name pos:start="121:5" pos:end="121:18">av_frame_unref</name><argument_list pos:start="121:19" pos:end="121:38">(<argument pos:start="121:20" pos:end="121:37"><expr pos:start="121:20" pos:end="121:37"><operator pos:start="121:20" pos:end="121:20">&amp;</operator><name pos:start="121:21" pos:end="121:37"><name pos:start="121:21" pos:end="121:21">s</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:35">last_picture</name><operator pos:start="121:36" pos:end="121:36">.</operator><name pos:start="121:37" pos:end="121:37">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:42"><expr pos:start="123:5" pos:end="123:41"><call pos:start="123:5" pos:end="123:41"><name pos:start="123:5" pos:end="123:18">av_frame_unref</name><argument_list pos:start="123:19" pos:end="123:41">(<argument pos:start="123:20" pos:end="123:40"><expr pos:start="123:20" pos:end="123:40"><operator pos:start="123:20" pos:end="123:20">&amp;</operator><name pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:21">s</name><operator pos:start="123:22" pos:end="123:23">-&gt;</operator><name pos:start="123:24" pos:end="123:38">current_picture</name><operator pos:start="123:39" pos:end="123:39">.</operator><name pos:start="123:40" pos:end="123:40">f</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="137:5"><if pos:start="127:5" pos:end="137:5">if <condition pos:start="127:8" pos:end="127:30">(<expr pos:start="127:9" pos:end="127:29"><name pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:16">width</name></name> <operator pos:start="127:18" pos:end="127:19">&amp;&amp;</operator> <name pos:start="127:21" pos:end="127:29"><name pos:start="127:21" pos:end="127:21">s</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:29">height</name></name></expr>)</condition> <block pos:start="127:32" pos:end="137:5">{<block_content pos:start="129:9" pos:end="135:36">

        <if_stmt pos:start="129:9" pos:end="131:22"><if pos:start="129:9" pos:end="131:22">if <condition pos:start="129:12" pos:end="129:34">(<expr pos:start="129:13" pos:end="129:33"><call pos:start="129:13" pos:end="129:33"><name pos:start="129:13" pos:end="129:30">init_context_frame</name><argument_list pos:start="129:31" pos:end="129:33">(<argument pos:start="129:32" pos:end="129:32"><expr pos:start="129:32" pos:end="129:32"><name pos:start="129:32" pos:end="129:32">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:22"><block_content pos:start="131:13" pos:end="131:22">

            <goto pos:start="131:13" pos:end="131:22">goto <name pos:start="131:18" pos:end="131:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="135:9" pos:end="135:36"><expr pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:24">parse_context</name><operator pos:start="135:25" pos:end="135:25">.</operator><name pos:start="135:26" pos:end="135:30">state</name></name> <operator pos:start="135:32" pos:end="135:32">=</operator> <operator pos:start="135:34" pos:end="135:34">-</operator><literal type="number" pos:start="135:35" pos:end="135:35">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:31"><expr pos:start="141:5" pos:end="141:30"><name pos:start="141:5" pos:end="141:26"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:26">context_initialized</name></name> <operator pos:start="141:28" pos:end="141:28">=</operator> <literal type="number" pos:start="141:30" pos:end="141:30">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:31"><expr pos:start="143:5" pos:end="143:30"><name pos:start="143:5" pos:end="143:24"><name pos:start="143:5" pos:end="143:5">s</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:21">thread_context</name><index pos:start="143:22" pos:end="143:24">[<expr pos:start="143:23" pos:end="143:23"><literal type="number" pos:start="143:23" pos:end="143:23">0</literal></expr>]</index></name>   <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:30">s</name></expr>;</expr_stmt>



    <if_stmt pos:start="147:5" pos:end="191:5"><if pos:start="147:5" pos:end="191:5">if <condition pos:start="147:8" pos:end="147:30">(<expr pos:start="147:9" pos:end="147:29"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">width</name></name> <operator pos:start="147:18" pos:end="147:19">&amp;&amp;</operator> <name pos:start="147:21" pos:end="147:29"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:29">height</name></name></expr>)</condition> <block pos:start="147:32" pos:end="191:5">{<block_content pos:start="149:9" pos:end="189:43">

        <if_stmt pos:start="149:9" pos:end="187:9"><if pos:start="149:9" pos:end="177:9">if <condition pos:start="149:12" pos:end="149:26">(<expr pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:21">nb_slices</name> <operator pos:start="149:23" pos:end="149:23">&gt;</operator> <literal type="number" pos:start="149:25" pos:end="149:25">1</literal></expr>)</condition> <block pos:start="149:28" pos:end="177:9">{<block_content pos:start="151:13" pos:end="175:13">

            <for pos:start="151:13" pos:end="157:13">for <control pos:start="151:17" pos:end="151:43">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">i</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">1</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:38"><expr pos:start="151:25" pos:end="151:37"><name pos:start="151:25" pos:end="151:25">i</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <name pos:start="151:29" pos:end="151:37">nb_slices</name></expr>;</condition> <incr pos:start="151:40" pos:end="151:42"><expr pos:start="151:40" pos:end="151:42"><name pos:start="151:40" pos:end="151:40">i</name><operator pos:start="151:41" pos:end="151:42">++</operator></expr></incr>)</control> <block pos:start="151:45" pos:end="157:13">{<block_content pos:start="153:17" pos:end="155:72">

                <expr_stmt pos:start="153:17" pos:end="153:73"><expr pos:start="153:17" pos:end="153:72"><name pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:33">thread_context</name><index pos:start="153:34" pos:end="153:36">[<expr pos:start="153:35" pos:end="153:35"><name pos:start="153:35" pos:end="153:35">i</name></expr>]</index></name> <operator pos:start="153:38" pos:end="153:38">=</operator> <call pos:start="153:40" pos:end="153:72"><name pos:start="153:40" pos:end="153:48">av_malloc</name><argument_list pos:start="153:49" pos:end="153:72">(<argument pos:start="153:50" pos:end="153:71"><expr pos:start="153:50" pos:end="153:71"><sizeof pos:start="153:50" pos:end="153:71">sizeof<argument_list pos:start="153:56" pos:end="153:71">(<argument pos:start="153:57" pos:end="153:70"><expr pos:start="153:57" pos:end="153:70"><name pos:start="153:57" pos:end="153:70">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:72"><expr pos:start="155:17" pos:end="155:71"><call pos:start="155:17" pos:end="155:71"><name pos:start="155:17" pos:end="155:22">memcpy</name><argument_list pos:start="155:23" pos:end="155:71">(<argument pos:start="155:24" pos:end="155:43"><expr pos:start="155:24" pos:end="155:43"><name pos:start="155:24" pos:end="155:43"><name pos:start="155:24" pos:end="155:24">s</name><operator pos:start="155:25" pos:end="155:26">-&gt;</operator><name pos:start="155:27" pos:end="155:40">thread_context</name><index pos:start="155:41" pos:end="155:43">[<expr pos:start="155:42" pos:end="155:42"><name pos:start="155:42" pos:end="155:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="155:46" pos:end="155:46"><expr pos:start="155:46" pos:end="155:46"><name pos:start="155:46" pos:end="155:46">s</name></expr></argument>, <argument pos:start="155:49" pos:end="155:70"><expr pos:start="155:49" pos:end="155:70"><sizeof pos:start="155:49" pos:end="155:70">sizeof<argument_list pos:start="155:55" pos:end="155:70">(<argument pos:start="155:56" pos:end="155:69"><expr pos:start="155:56" pos:end="155:69"><name pos:start="155:56" pos:end="155:69">MpegEncContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>



            <for pos:start="161:13" pos:end="175:13">for <control pos:start="161:17" pos:end="161:43">(<init pos:start="161:18" pos:end="161:23"><expr pos:start="161:18" pos:end="161:22"><name pos:start="161:18" pos:end="161:18">i</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</init> <condition pos:start="161:25" pos:end="161:38"><expr pos:start="161:25" pos:end="161:37"><name pos:start="161:25" pos:end="161:25">i</name> <operator pos:start="161:27" pos:end="161:27">&lt;</operator> <name pos:start="161:29" pos:end="161:37">nb_slices</name></expr>;</condition> <incr pos:start="161:40" pos:end="161:42"><expr pos:start="161:40" pos:end="161:42"><name pos:start="161:40" pos:end="161:40">i</name><operator pos:start="161:41" pos:end="161:42">++</operator></expr></incr>)</control> <block pos:start="161:45" pos:end="175:13">{<block_content pos:start="163:17" pos:end="173:77">

                <if_stmt pos:start="163:17" pos:end="165:30"><if pos:start="163:17" pos:end="165:30">if <condition pos:start="163:20" pos:end="163:69">(<expr pos:start="163:21" pos:end="163:68"><call pos:start="163:21" pos:end="163:64"><name pos:start="163:21" pos:end="163:42">init_duplicate_context</name><argument_list pos:start="163:43" pos:end="163:64">(<argument pos:start="163:44" pos:end="163:63"><expr pos:start="163:44" pos:end="163:63"><name pos:start="163:44" pos:end="163:63"><name pos:start="163:44" pos:end="163:44">s</name><operator pos:start="163:45" pos:end="163:46">-&gt;</operator><name pos:start="163:47" pos:end="163:60">thread_context</name><index pos:start="163:61" pos:end="163:63">[<expr pos:start="163:62" pos:end="163:62"><name pos:start="163:62" pos:end="163:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="163:66" pos:end="163:66">&lt;</operator> <literal type="number" pos:start="163:68" pos:end="163:68">0</literal></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:30"><block_content pos:start="165:21" pos:end="165:30">

                    <goto pos:start="165:21" pos:end="165:30">goto <name pos:start="165:26" pos:end="165:29">fail</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="167:21" pos:end="169:73"><expr pos:start="167:21" pos:end="169:72"><name pos:start="167:21" pos:end="167:40"><name pos:start="167:21" pos:end="167:21">s</name><operator pos:start="167:22" pos:end="167:23">-&gt;</operator><name pos:start="167:24" pos:end="167:37">thread_context</name><index pos:start="167:38" pos:end="167:40">[<expr pos:start="167:39" pos:end="167:39"><name pos:start="167:39" pos:end="167:39">i</name></expr>]</index></name><operator pos:start="167:41" pos:end="167:42">-&gt;</operator><name pos:start="167:43" pos:end="167:52">start_mb_y</name> <operator pos:start="167:54" pos:end="167:54">=</operator>

                        <operator pos:start="169:25" pos:end="169:25">(</operator><name pos:start="169:26" pos:end="169:37"><name pos:start="169:26" pos:end="169:26">s</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:37">mb_height</name></name> <operator pos:start="169:39" pos:end="169:39">*</operator> <operator pos:start="169:41" pos:end="169:41">(</operator><name pos:start="169:42" pos:end="169:42">i</name><operator pos:start="169:43" pos:end="169:43">)</operator> <operator pos:start="169:45" pos:end="169:45">+</operator> <name pos:start="169:47" pos:end="169:55">nb_slices</name> <operator pos:start="169:57" pos:end="169:57">/</operator> <literal type="number" pos:start="169:59" pos:end="169:59">2</literal><operator pos:start="169:60" pos:end="169:60">)</operator> <operator pos:start="169:62" pos:end="169:62">/</operator> <name pos:start="169:64" pos:end="169:72">nb_slices</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="173:77"><expr pos:start="171:21" pos:end="173:76"><name pos:start="171:21" pos:end="171:40"><name pos:start="171:21" pos:end="171:21">s</name><operator pos:start="171:22" pos:end="171:23">-&gt;</operator><name pos:start="171:24" pos:end="171:37">thread_context</name><index pos:start="171:38" pos:end="171:40">[<expr pos:start="171:39" pos:end="171:39"><name pos:start="171:39" pos:end="171:39">i</name></expr>]</index></name><operator pos:start="171:41" pos:end="171:42">-&gt;</operator><name pos:start="171:43" pos:end="171:50">end_mb_y</name>   <operator pos:start="171:54" pos:end="171:54">=</operator>

                        <operator pos:start="173:25" pos:end="173:25">(</operator><name pos:start="173:26" pos:end="173:37"><name pos:start="173:26" pos:end="173:26">s</name><operator pos:start="173:27" pos:end="173:28">-&gt;</operator><name pos:start="173:29" pos:end="173:37">mb_height</name></name> <operator pos:start="173:39" pos:end="173:39">*</operator> <operator pos:start="173:41" pos:end="173:41">(</operator><name pos:start="173:42" pos:end="173:42">i</name> <operator pos:start="173:44" pos:end="173:44">+</operator> <literal type="number" pos:start="173:46" pos:end="173:46">1</literal><operator pos:start="173:47" pos:end="173:47">)</operator> <operator pos:start="173:49" pos:end="173:49">+</operator> <name pos:start="173:51" pos:end="173:59">nb_slices</name> <operator pos:start="173:61" pos:end="173:61">/</operator> <literal type="number" pos:start="173:63" pos:end="173:63">2</literal><operator pos:start="173:64" pos:end="173:64">)</operator> <operator pos:start="173:66" pos:end="173:66">/</operator> <name pos:start="173:68" pos:end="173:76">nb_slices</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="187:9">else <block pos:start="177:16" pos:end="187:9">{<block_content pos:start="179:13" pos:end="185:41">

            <if_stmt pos:start="179:13" pos:end="181:26"><if pos:start="179:13" pos:end="181:26">if <condition pos:start="179:16" pos:end="179:46">(<expr pos:start="179:17" pos:end="179:45"><call pos:start="179:17" pos:end="179:41"><name pos:start="179:17" pos:end="179:38">init_duplicate_context</name><argument_list pos:start="179:39" pos:end="179:41">(<argument pos:start="179:40" pos:end="179:40"><expr pos:start="179:40" pos:end="179:40"><name pos:start="179:40" pos:end="179:40">s</name></expr></argument>)</argument_list></call> <operator pos:start="179:43" pos:end="179:43">&lt;</operator> <literal type="number" pos:start="179:45" pos:end="179:45">0</literal></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:26"><block_content pos:start="181:17" pos:end="181:26">

                <goto pos:start="181:17" pos:end="181:26">goto <name pos:start="181:22" pos:end="181:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:30"><expr pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:25">start_mb_y</name></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <literal type="number" pos:start="183:29" pos:end="183:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:41"><expr pos:start="185:13" pos:end="185:40"><name pos:start="185:13" pos:end="185:23"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:23">end_mb_y</name></name>   <operator pos:start="185:27" pos:end="185:27">=</operator> <name pos:start="185:29" pos:end="185:40"><name pos:start="185:29" pos:end="185:29">s</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:40">mb_height</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:43"><expr pos:start="189:9" pos:end="189:42"><name pos:start="189:9" pos:end="189:30"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:30">slice_context_count</name></name> <operator pos:start="189:32" pos:end="189:32">=</operator> <name pos:start="189:34" pos:end="189:42">nb_slices</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

 <label pos:start="197:2" pos:end="197:6"><name pos:start="197:2" pos:end="197:5">fail</name>:</label>

    <expr_stmt pos:start="199:5" pos:end="199:25"><expr pos:start="199:5" pos:end="199:24"><call pos:start="199:5" pos:end="199:24"><name pos:start="199:5" pos:end="199:21">ff_MPV_common_end</name><argument_list pos:start="199:22" pos:end="199:24">(<argument pos:start="199:23" pos:end="199:23"><expr pos:start="199:23" pos:end="199:23"><name pos:start="199:23" pos:end="199:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="201:5" pos:end="201:14">return <expr pos:start="201:12" pos:end="201:13"><operator pos:start="201:12" pos:end="201:12">-</operator><literal type="number" pos:start="201:13" pos:end="201:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
