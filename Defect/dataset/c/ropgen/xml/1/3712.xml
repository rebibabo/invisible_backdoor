<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3712.c" pos:tabs="8"><function pos:start="1:1" pos:end="665:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">TCGArg</name> <modifier pos:start="1:15" pos:end="1:15">*</modifier></type><name pos:start="1:16" pos:end="1:35">tcg_constant_folding</name><parameter_list pos:start="1:36" pos:end="3:72">(<parameter pos:start="1:37" pos:end="1:49"><decl pos:start="1:37" pos:end="1:49"><type pos:start="1:37" pos:end="1:49"><name pos:start="1:37" pos:end="1:46">TCGContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:72"><name pos:start="1:52" pos:end="1:59">uint16_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:72">tcg_opc_ptr</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:48"><decl pos:start="3:37" pos:end="3:48"><type pos:start="3:37" pos:end="3:48"><name pos:start="3:37" pos:end="3:42">TCGArg</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">args</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:71"><decl pos:start="3:51" pos:end="3:71"><type pos:start="3:51" pos:end="3:71"><name pos:start="3:51" pos:end="3:58">TCGOpDef</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:71">tcg_op_defs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="665:1">{<block_content pos:start="7:5" pos:end="663:20">

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:17">nb_ops</name></decl>, <decl pos:start="7:20" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:27">op_index</name></decl>, <decl pos:start="7:30" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:30" pos:end="7:37">nb_temps</name></decl>, <decl pos:start="7:40" pos:end="7:49"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:40" pos:end="7:49">nb_globals</name></decl>, <decl pos:start="7:52" pos:end="7:63"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:52" pos:end="7:63">nb_call_args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">TCGOpcode</name></type> <name pos:start="9:15" pos:end="9:16">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">TCGOpDef</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">def</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">TCGArg</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:20">gen_args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">TCGArg</name></type> <name pos:start="15:12" pos:end="15:14">tmp</name></decl>;</decl_stmt>

    <comment type="block" pos:start="17:5" pos:end="27:28">/* Array VALS has an element for each temp.

       If this temp holds a constant then its value is kept in VALS' element.

       If this temp is a copy of other ones then this equivalence class'

       representative is kept in VALS' element.

       If this temp is neither copy nor constant then corresponding VALS'

       element is unused. */</comment>



    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:12">nb_temps</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:26">nb_temps</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:14">nb_globals</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:30"><name pos:start="33:18" pos:end="33:18">s</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:30">nb_globals</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:62"><expr pos:start="35:5" pos:end="35:61"><call pos:start="35:5" pos:end="35:61"><name pos:start="35:5" pos:end="35:10">memset</name><argument_list pos:start="35:11" pos:end="35:61">(<argument pos:start="35:12" pos:end="35:16"><expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:16">temps</name></expr></argument>, <argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">0</literal></expr></argument>, <argument pos:start="35:22" pos:end="35:60"><expr pos:start="35:22" pos:end="35:60"><name pos:start="35:22" pos:end="35:29">nb_temps</name> <operator pos:start="35:31" pos:end="35:31">*</operator> <sizeof pos:start="35:33" pos:end="35:60">sizeof<argument_list pos:start="35:39" pos:end="35:60">(<argument pos:start="35:40" pos:end="35:59"><expr pos:start="35:40" pos:end="35:59">struct <name pos:start="35:47" pos:end="35:59">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:39"><expr pos:start="39:5" pos:end="39:38"><name pos:start="39:5" pos:end="39:10">nb_ops</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <name pos:start="39:14" pos:end="39:24">tcg_opc_ptr</name> <operator pos:start="39:26" pos:end="39:26">-</operator> <name pos:start="39:28" pos:end="39:38">gen_opc_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:12">gen_args</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:19">args</name></expr>;</expr_stmt>

    <for pos:start="43:5" pos:end="659:5">for <control pos:start="43:9" pos:end="43:53">(<init pos:start="43:10" pos:end="43:22"><expr pos:start="43:10" pos:end="43:21"><name pos:start="43:10" pos:end="43:17">op_index</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>;</init> <condition pos:start="43:24" pos:end="43:41"><expr pos:start="43:24" pos:end="43:40"><name pos:start="43:24" pos:end="43:31">op_index</name> <operator pos:start="43:33" pos:end="43:33">&lt;</operator> <name pos:start="43:35" pos:end="43:40">nb_ops</name></expr>;</condition> <incr pos:start="43:43" pos:end="43:52"><expr pos:start="43:43" pos:end="43:52"><name pos:start="43:43" pos:end="43:50">op_index</name><operator pos:start="43:51" pos:end="43:52">++</operator></expr></incr>)</control> <block pos:start="43:55" pos:end="659:5">{<block_content pos:start="45:9" pos:end="657:9">

        <expr_stmt pos:start="45:9" pos:end="45:35"><expr pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:10">op</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:34"><name pos:start="45:14" pos:end="45:24">gen_opc_buf</name><index pos:start="45:25" pos:end="45:34">[<expr pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:33">op_index</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:11">def</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <operator pos:start="47:15" pos:end="47:15">&amp;</operator><name pos:start="47:16" pos:end="47:30"><name pos:start="47:16" pos:end="47:26">tcg_op_defs</name><index pos:start="47:27" pos:end="47:30">[<expr pos:start="47:28" pos:end="47:29"><name pos:start="47:28" pos:end="47:29">op</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:33">/* Do copy propagation */</comment>

        <if_stmt pos:start="51:9" pos:end="65:9"><if pos:start="51:9" pos:end="65:9">if <condition pos:start="51:12" pos:end="51:74">(<expr pos:start="51:13" pos:end="51:73"><operator pos:start="51:13" pos:end="51:13">!</operator><operator pos:start="51:14" pos:end="51:14">(</operator><name pos:start="51:15" pos:end="51:24"><name pos:start="51:15" pos:end="51:17">def</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:24">flags</name></name> <operator pos:start="51:26" pos:end="51:26">&amp;</operator> <operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:48">TCG_OPF_CALL_CLOBBER</name> <operator pos:start="51:50" pos:end="51:50">|</operator> <name pos:start="51:52" pos:end="51:71">TCG_OPF_SIDE_EFFECTS</name><operator pos:start="51:72" pos:end="51:72">)</operator><operator pos:start="51:73" pos:end="51:73">)</operator></expr>)</condition> <block pos:start="51:76" pos:end="65:9">{<block_content pos:start="53:13" pos:end="63:13">

            <expr_stmt pos:start="53:13" pos:end="53:40"><expr pos:start="53:13" pos:end="53:39"><call pos:start="53:13" pos:end="53:39"><name pos:start="53:13" pos:end="53:18">assert</name><argument_list pos:start="53:19" pos:end="53:39">(<argument pos:start="53:20" pos:end="53:38"><expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:21">op</name> <operator pos:start="53:23" pos:end="53:24">!=</operator> <name pos:start="53:26" pos:end="53:38">INDEX_op_call</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="55:13" pos:end="63:13">for <control pos:start="55:17" pos:end="55:75">(<init pos:start="55:18" pos:end="55:35"><expr pos:start="55:18" pos:end="55:34"><name pos:start="55:18" pos:end="55:18">i</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <name pos:start="55:22" pos:end="55:34"><name pos:start="55:22" pos:end="55:24">def</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:34">nb_oargs</name></name></expr>;</init> <condition pos:start="55:37" pos:end="55:70"><expr pos:start="55:37" pos:end="55:69"><name pos:start="55:37" pos:end="55:37">i</name> <operator pos:start="55:39" pos:end="55:39">&lt;</operator> <name pos:start="55:41" pos:end="55:53"><name pos:start="55:41" pos:end="55:43">def</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:53">nb_oargs</name></name> <operator pos:start="55:55" pos:end="55:55">+</operator> <name pos:start="55:57" pos:end="55:69"><name pos:start="55:57" pos:end="55:59">def</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:69">nb_iargs</name></name></expr>;</condition> <incr pos:start="55:72" pos:end="55:74"><expr pos:start="55:72" pos:end="55:74"><name pos:start="55:72" pos:end="55:72">i</name><operator pos:start="55:73" pos:end="55:74">++</operator></expr></incr>)</control> <block pos:start="55:77" pos:end="63:13">{<block_content pos:start="57:17" pos:end="61:17">

                <if_stmt pos:start="57:17" pos:end="61:17"><if pos:start="57:17" pos:end="61:17">if <condition pos:start="57:20" pos:end="57:58">(<expr pos:start="57:21" pos:end="57:57"><name pos:start="57:21" pos:end="57:34"><name pos:start="57:21" pos:end="57:25">temps</name><index pos:start="57:26" pos:end="57:34">[<expr pos:start="57:27" pos:end="57:33"><name pos:start="57:27" pos:end="57:33"><name pos:start="57:27" pos:end="57:30">args</name><index pos:start="57:31" pos:end="57:33">[<expr pos:start="57:32" pos:end="57:32"><name pos:start="57:32" pos:end="57:32">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:40">state</name> <operator pos:start="57:42" pos:end="57:43">==</operator> <name pos:start="57:45" pos:end="57:57">TCG_TEMP_COPY</name></expr>)</condition> <block pos:start="57:60" pos:end="61:17">{<block_content pos:start="59:21" pos:end="59:49">

                    <expr_stmt pos:start="59:21" pos:end="59:49"><expr pos:start="59:21" pos:end="59:48"><name pos:start="59:21" pos:end="59:27"><name pos:start="59:21" pos:end="59:24">args</name><index pos:start="59:25" pos:end="59:27">[<expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">i</name></expr>]</index></name> <operator pos:start="59:29" pos:end="59:29">=</operator> <name pos:start="59:31" pos:end="59:44"><name pos:start="59:31" pos:end="59:35">temps</name><index pos:start="59:36" pos:end="59:44">[<expr pos:start="59:37" pos:end="59:43"><name pos:start="59:37" pos:end="59:43"><name pos:start="59:37" pos:end="59:40">args</name><index pos:start="59:41" pos:end="59:43">[<expr pos:start="59:42" pos:end="59:42"><name pos:start="59:42" pos:end="59:42">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="59:45" pos:end="59:45">.</operator><name pos:start="59:46" pos:end="59:48">val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:70">/* For commutative operations make constant second argument */</comment>

        <switch pos:start="71:9" pos:end="141:9">switch <condition pos:start="71:16" pos:end="71:19">(<expr pos:start="71:17" pos:end="71:18"><name pos:start="71:17" pos:end="71:18">op</name></expr>)</condition> <block pos:start="71:21" pos:end="141:9">{<block_content pos:start="73:9" pos:end="139:18">

        <expr_stmt pos:start="73:9" pos:end="87:27"><expr pos:start="73:9" pos:end="87:27"><call pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:21">CASE_OP_32_64</name><argument_list pos:start="73:22" pos:end="73:26">(<argument pos:start="73:23" pos:end="73:25"><expr pos:start="73:23" pos:end="73:25"><name pos:start="73:23" pos:end="73:25">add</name></expr></argument>)</argument_list></call><operator pos:start="73:27" pos:end="73:27">:</operator>

        <call pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:21">CASE_OP_32_64</name><argument_list pos:start="75:22" pos:end="75:26">(<argument pos:start="75:23" pos:end="75:25"><expr pos:start="75:23" pos:end="75:25"><name pos:start="75:23" pos:end="75:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="75:27" pos:end="75:27">:</operator>

        <call pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:21">CASE_OP_32_64</name><argument_list pos:start="77:22" pos:end="77:26">(<argument pos:start="77:23" pos:end="77:25"><expr pos:start="77:23" pos:end="77:25"><name pos:start="77:23" pos:end="77:25">and</name></expr></argument>)</argument_list></call><operator pos:start="77:27" pos:end="77:27">:</operator>

        <call pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:21">CASE_OP_32_64</name><argument_list pos:start="79:22" pos:end="79:25">(<argument pos:start="79:23" pos:end="79:24"><expr pos:start="79:23" pos:end="79:24"><name pos:start="79:23" pos:end="79:24">or</name></expr></argument>)</argument_list></call><operator pos:start="79:26" pos:end="79:26">:</operator>

        <call pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:21">CASE_OP_32_64</name><argument_list pos:start="81:22" pos:end="81:26">(<argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="81:27" pos:end="81:27">:</operator>

        <call pos:start="83:9" pos:end="83:26"><name pos:start="83:9" pos:end="83:21">CASE_OP_32_64</name><argument_list pos:start="83:22" pos:end="83:26">(<argument pos:start="83:23" pos:end="83:25"><expr pos:start="83:23" pos:end="83:25"><name pos:start="83:23" pos:end="83:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="83:27" pos:end="83:27">:</operator>

        <call pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:21">CASE_OP_32_64</name><argument_list pos:start="85:22" pos:end="85:27">(<argument pos:start="85:23" pos:end="85:26"><expr pos:start="85:23" pos:end="85:26"><name pos:start="85:23" pos:end="85:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="85:28" pos:end="85:28">:</operator>

        <call pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:21">CASE_OP_32_64</name><argument_list pos:start="87:22" pos:end="87:26">(<argument pos:start="87:23" pos:end="87:25"><expr pos:start="87:23" pos:end="87:25"><name pos:start="87:23" pos:end="87:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="87:27" pos:end="87:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="89:13" pos:end="97:13"><if pos:start="89:13" pos:end="97:13">if <condition pos:start="89:16" pos:end="89:55">(<expr pos:start="89:17" pos:end="89:54"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:21">temps</name><index pos:start="89:22" pos:end="89:30">[<expr pos:start="89:23" pos:end="89:29"><name pos:start="89:23" pos:end="89:29"><name pos:start="89:23" pos:end="89:26">args</name><index pos:start="89:27" pos:end="89:29">[<expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="89:31" pos:end="89:31">.</operator><name pos:start="89:32" pos:end="89:36">state</name> <operator pos:start="89:38" pos:end="89:39">==</operator> <name pos:start="89:41" pos:end="89:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="89:57" pos:end="97:13">{<block_content pos:start="91:17" pos:end="95:30">

                <expr_stmt pos:start="91:17" pos:end="91:30"><expr pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:19">tmp</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <name pos:start="91:23" pos:end="91:29"><name pos:start="91:23" pos:end="91:26">args</name><index pos:start="91:27" pos:end="91:29">[<expr pos:start="91:28" pos:end="91:28"><literal type="number" pos:start="91:28" pos:end="91:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:23"><name pos:start="93:17" pos:end="93:20">args</name><index pos:start="93:21" pos:end="93:23">[<expr pos:start="93:22" pos:end="93:22"><literal type="number" pos:start="93:22" pos:end="93:22">1</literal></expr>]</index></name> <operator pos:start="93:25" pos:end="93:25">=</operator> <name pos:start="93:27" pos:end="93:33"><name pos:start="93:27" pos:end="93:30">args</name><index pos:start="93:31" pos:end="93:33">[<expr pos:start="93:32" pos:end="93:32"><literal type="number" pos:start="93:32" pos:end="93:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:30"><expr pos:start="95:17" pos:end="95:29"><name pos:start="95:17" pos:end="95:23"><name pos:start="95:17" pos:end="95:20">args</name><index pos:start="95:21" pos:end="95:23">[<expr pos:start="95:22" pos:end="95:22"><literal type="number" pos:start="95:22" pos:end="95:22">2</literal></expr>]</index></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:29">tmp</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="99:13" pos:end="99:18">break;</break>

        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:30"><call pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:21">CASE_OP_32_64</name><argument_list pos:start="101:22" pos:end="101:29">(<argument pos:start="101:23" pos:end="101:28"><expr pos:start="101:23" pos:end="101:28"><name pos:start="101:23" pos:end="101:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="101:30" pos:end="101:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="103:13" pos:end="115:13"><if pos:start="103:13" pos:end="115:13">if <condition pos:start="103:16" pos:end="105:58">(<expr pos:start="103:17" pos:end="105:57"><name pos:start="103:17" pos:end="103:30"><name pos:start="103:17" pos:end="103:21">temps</name><index pos:start="103:22" pos:end="103:30">[<expr pos:start="103:23" pos:end="103:29"><name pos:start="103:23" pos:end="103:29"><name pos:start="103:23" pos:end="103:26">args</name><index pos:start="103:27" pos:end="103:29">[<expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="103:31" pos:end="103:31">.</operator><name pos:start="103:32" pos:end="103:36">state</name> <operator pos:start="103:38" pos:end="103:39">==</operator> <name pos:start="103:41" pos:end="103:54">TCG_TEMP_CONST</name>

                <operator pos:start="105:17" pos:end="105:18">&amp;&amp;</operator> <name pos:start="105:20" pos:end="105:33"><name pos:start="105:20" pos:end="105:24">temps</name><index pos:start="105:25" pos:end="105:33">[<expr pos:start="105:26" pos:end="105:32"><name pos:start="105:26" pos:end="105:32"><name pos:start="105:26" pos:end="105:29">args</name><index pos:start="105:30" pos:end="105:32">[<expr pos:start="105:31" pos:end="105:31"><literal type="number" pos:start="105:31" pos:end="105:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="105:34" pos:end="105:34">.</operator><name pos:start="105:35" pos:end="105:39">state</name> <operator pos:start="105:41" pos:end="105:42">!=</operator> <name pos:start="105:44" pos:end="105:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="105:60" pos:end="115:13">{<block_content pos:start="107:17" pos:end="113:49">

                <expr_stmt pos:start="107:17" pos:end="107:30"><expr pos:start="107:17" pos:end="107:29"><name pos:start="107:17" pos:end="107:19">tmp</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:29"><name pos:start="107:23" pos:end="107:26">args</name><index pos:start="107:27" pos:end="107:29">[<expr pos:start="107:28" pos:end="107:28"><literal type="number" pos:start="107:28" pos:end="107:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:34"><expr pos:start="109:17" pos:end="109:33"><name pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:20">args</name><index pos:start="109:21" pos:end="109:23">[<expr pos:start="109:22" pos:end="109:22"><literal type="number" pos:start="109:22" pos:end="109:22">0</literal></expr>]</index></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <name pos:start="109:27" pos:end="109:33"><name pos:start="109:27" pos:end="109:30">args</name><index pos:start="109:31" pos:end="109:33">[<expr pos:start="109:32" pos:end="109:32"><literal type="number" pos:start="109:32" pos:end="109:32">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:30"><expr pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:23"><name pos:start="111:17" pos:end="111:20">args</name><index pos:start="111:21" pos:end="111:23">[<expr pos:start="111:22" pos:end="111:22"><literal type="number" pos:start="111:22" pos:end="111:22">1</literal></expr>]</index></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:49"><expr pos:start="113:17" pos:end="113:48"><name pos:start="113:17" pos:end="113:23"><name pos:start="113:17" pos:end="113:20">args</name><index pos:start="113:21" pos:end="113:23">[<expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">2</literal></expr>]</index></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <call pos:start="113:27" pos:end="113:48"><name pos:start="113:27" pos:end="113:39">tcg_swap_cond</name><argument_list pos:start="113:40" pos:end="113:48">(<argument pos:start="113:41" pos:end="113:47"><expr pos:start="113:41" pos:end="113:47"><name pos:start="113:41" pos:end="113:47"><name pos:start="113:41" pos:end="113:44">args</name><index pos:start="113:45" pos:end="113:47">[<expr pos:start="113:46" pos:end="113:46"><literal type="number" pos:start="113:46" pos:end="113:46">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:31"><call pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:21">CASE_OP_32_64</name><argument_list pos:start="119:22" pos:end="119:30">(<argument pos:start="119:23" pos:end="119:29"><expr pos:start="119:23" pos:end="119:29"><name pos:start="119:23" pos:end="119:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="119:31" pos:end="119:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="121:13" pos:end="133:13"><if pos:start="121:13" pos:end="133:13">if <condition pos:start="121:16" pos:end="123:58">(<expr pos:start="121:17" pos:end="123:57"><name pos:start="121:17" pos:end="121:30"><name pos:start="121:17" pos:end="121:21">temps</name><index pos:start="121:22" pos:end="121:30">[<expr pos:start="121:23" pos:end="121:29"><name pos:start="121:23" pos:end="121:29"><name pos:start="121:23" pos:end="121:26">args</name><index pos:start="121:27" pos:end="121:29">[<expr pos:start="121:28" pos:end="121:28"><literal type="number" pos:start="121:28" pos:end="121:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="121:31" pos:end="121:31">.</operator><name pos:start="121:32" pos:end="121:36">state</name> <operator pos:start="121:38" pos:end="121:39">==</operator> <name pos:start="121:41" pos:end="121:54">TCG_TEMP_CONST</name>

                <operator pos:start="123:17" pos:end="123:18">&amp;&amp;</operator> <name pos:start="123:20" pos:end="123:33"><name pos:start="123:20" pos:end="123:24">temps</name><index pos:start="123:25" pos:end="123:33">[<expr pos:start="123:26" pos:end="123:32"><name pos:start="123:26" pos:end="123:32"><name pos:start="123:26" pos:end="123:29">args</name><index pos:start="123:30" pos:end="123:32">[<expr pos:start="123:31" pos:end="123:31"><literal type="number" pos:start="123:31" pos:end="123:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="123:34" pos:end="123:34">.</operator><name pos:start="123:35" pos:end="123:39">state</name> <operator pos:start="123:41" pos:end="123:42">!=</operator> <name pos:start="123:44" pos:end="123:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="123:60" pos:end="133:13">{<block_content pos:start="125:17" pos:end="131:49">

                <expr_stmt pos:start="125:17" pos:end="125:30"><expr pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:19">tmp</name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:29"><name pos:start="125:23" pos:end="125:26">args</name><index pos:start="125:27" pos:end="125:29">[<expr pos:start="125:28" pos:end="125:28"><literal type="number" pos:start="125:28" pos:end="125:28">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="127:17" pos:end="127:34"><expr pos:start="127:17" pos:end="127:33"><name pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:20">args</name><index pos:start="127:21" pos:end="127:23">[<expr pos:start="127:22" pos:end="127:22"><literal type="number" pos:start="127:22" pos:end="127:22">1</literal></expr>]</index></name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:33"><name pos:start="127:27" pos:end="127:30">args</name><index pos:start="127:31" pos:end="127:33">[<expr pos:start="127:32" pos:end="127:32"><literal type="number" pos:start="127:32" pos:end="127:32">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:29"><name pos:start="129:17" pos:end="129:23"><name pos:start="129:17" pos:end="129:20">args</name><index pos:start="129:21" pos:end="129:23">[<expr pos:start="129:22" pos:end="129:22"><literal type="number" pos:start="129:22" pos:end="129:22">2</literal></expr>]</index></name> <operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:29">tmp</name></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="131:49"><expr pos:start="131:17" pos:end="131:48"><name pos:start="131:17" pos:end="131:23"><name pos:start="131:17" pos:end="131:20">args</name><index pos:start="131:21" pos:end="131:23">[<expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">3</literal></expr>]</index></name> <operator pos:start="131:25" pos:end="131:25">=</operator> <call pos:start="131:27" pos:end="131:48"><name pos:start="131:27" pos:end="131:39">tcg_swap_cond</name><argument_list pos:start="131:40" pos:end="131:48">(<argument pos:start="131:41" pos:end="131:47"><expr pos:start="131:41" pos:end="131:47"><name pos:start="131:41" pos:end="131:47"><name pos:start="131:41" pos:end="131:44">args</name><index pos:start="131:45" pos:end="131:47">[<expr pos:start="131:46" pos:end="131:46"><literal type="number" pos:start="131:46" pos:end="131:46">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <default pos:start="137:9" pos:end="137:16">default:</default>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="145:9" pos:end="145:71">/* Simplify expressions for "shift/rot r, 0, a =&gt; movi r, 0" */</comment>

        <switch pos:start="147:9" pos:end="181:9">switch <condition pos:start="147:16" pos:end="147:19">(<expr pos:start="147:17" pos:end="147:18"><name pos:start="147:17" pos:end="147:18">op</name></expr>)</condition> <block pos:start="147:21" pos:end="181:9">{<block_content pos:start="149:9" pos:end="179:18">

        <expr_stmt pos:start="149:9" pos:end="157:28"><expr pos:start="149:9" pos:end="157:28"><call pos:start="149:9" pos:end="149:26"><name pos:start="149:9" pos:end="149:21">CASE_OP_32_64</name><argument_list pos:start="149:22" pos:end="149:26">(<argument pos:start="149:23" pos:end="149:25"><expr pos:start="149:23" pos:end="149:25"><name pos:start="149:23" pos:end="149:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="149:27" pos:end="149:27">:</operator>

        <call pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:21">CASE_OP_32_64</name><argument_list pos:start="151:22" pos:end="151:26">(<argument pos:start="151:23" pos:end="151:25"><expr pos:start="151:23" pos:end="151:25"><name pos:start="151:23" pos:end="151:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="151:27" pos:end="151:27">:</operator>

        <call pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:21">CASE_OP_32_64</name><argument_list pos:start="153:22" pos:end="153:26">(<argument pos:start="153:23" pos:end="153:25"><expr pos:start="153:23" pos:end="153:25"><name pos:start="153:23" pos:end="153:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="153:27" pos:end="153:27">:</operator>

        <call pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:21">CASE_OP_32_64</name><argument_list pos:start="155:22" pos:end="155:27">(<argument pos:start="155:23" pos:end="155:26"><expr pos:start="155:23" pos:end="155:26"><name pos:start="155:23" pos:end="155:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="155:28" pos:end="155:28">:</operator>

        <call pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:21">CASE_OP_32_64</name><argument_list pos:start="157:22" pos:end="157:27">(<argument pos:start="157:23" pos:end="157:26"><expr pos:start="157:23" pos:end="157:26"><name pos:start="157:23" pos:end="157:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="157:28" pos:end="157:28">:</operator></expr></expr_stmt>

            <if_stmt pos:start="159:13" pos:end="173:13"><if pos:start="159:13" pos:end="173:13">if <condition pos:start="159:16" pos:end="161:43">(<expr pos:start="159:17" pos:end="161:42"><name pos:start="159:17" pos:end="159:30"><name pos:start="159:17" pos:end="159:21">temps</name><index pos:start="159:22" pos:end="159:30">[<expr pos:start="159:23" pos:end="159:29"><name pos:start="159:23" pos:end="159:29"><name pos:start="159:23" pos:end="159:26">args</name><index pos:start="159:27" pos:end="159:29">[<expr pos:start="159:28" pos:end="159:28"><literal type="number" pos:start="159:28" pos:end="159:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="159:31" pos:end="159:31">.</operator><name pos:start="159:32" pos:end="159:36">state</name> <operator pos:start="159:38" pos:end="159:39">==</operator> <name pos:start="159:41" pos:end="159:54">TCG_TEMP_CONST</name>

                <operator pos:start="161:17" pos:end="161:18">&amp;&amp;</operator> <name pos:start="161:20" pos:end="161:33"><name pos:start="161:20" pos:end="161:24">temps</name><index pos:start="161:25" pos:end="161:33">[<expr pos:start="161:26" pos:end="161:32"><name pos:start="161:26" pos:end="161:32"><name pos:start="161:26" pos:end="161:29">args</name><index pos:start="161:30" pos:end="161:32">[<expr pos:start="161:31" pos:end="161:31"><literal type="number" pos:start="161:31" pos:end="161:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="161:34" pos:end="161:34">.</operator><name pos:start="161:35" pos:end="161:37">val</name> <operator pos:start="161:39" pos:end="161:40">==</operator> <literal type="number" pos:start="161:42" pos:end="161:42">0</literal></expr>)</condition> <block pos:start="161:45" pos:end="173:13">{<block_content pos:start="163:17" pos:end="171:25">

                <expr_stmt pos:start="163:17" pos:end="163:55"><expr pos:start="163:17" pos:end="163:54"><name pos:start="163:17" pos:end="163:37"><name pos:start="163:17" pos:end="163:27">gen_opc_buf</name><index pos:start="163:28" pos:end="163:37">[<expr pos:start="163:29" pos:end="163:36"><name pos:start="163:29" pos:end="163:36">op_index</name></expr>]</index></name> <operator pos:start="163:39" pos:end="163:39">=</operator> <call pos:start="163:41" pos:end="163:54"><name pos:start="163:41" pos:end="163:50">op_to_movi</name><argument_list pos:start="163:51" pos:end="163:54">(<argument pos:start="163:52" pos:end="163:53"><expr pos:start="163:52" pos:end="163:53"><name pos:start="163:52" pos:end="163:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:77"><expr pos:start="165:17" pos:end="165:76"><call pos:start="165:17" pos:end="165:76"><name pos:start="165:17" pos:end="165:32">tcg_opt_gen_movi</name><argument_list pos:start="165:33" pos:end="165:76">(<argument pos:start="165:34" pos:end="165:41"><expr pos:start="165:34" pos:end="165:41"><name pos:start="165:34" pos:end="165:41">gen_args</name></expr></argument>, <argument pos:start="165:44" pos:end="165:50"><expr pos:start="165:44" pos:end="165:50"><name pos:start="165:44" pos:end="165:50"><name pos:start="165:44" pos:end="165:47">args</name><index pos:start="165:48" pos:end="165:50">[<expr pos:start="165:49" pos:end="165:49"><literal type="number" pos:start="165:49" pos:end="165:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="165:53" pos:end="165:53"><expr pos:start="165:53" pos:end="165:53"><literal type="number" pos:start="165:53" pos:end="165:53">0</literal></expr></argument>, <argument pos:start="165:56" pos:end="165:63"><expr pos:start="165:56" pos:end="165:63"><name pos:start="165:56" pos:end="165:63">nb_temps</name></expr></argument>, <argument pos:start="165:66" pos:end="165:75"><expr pos:start="165:66" pos:end="165:75"><name pos:start="165:66" pos:end="165:75">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="167:17" pos:end="167:26"><expr pos:start="167:17" pos:end="167:25"><name pos:start="167:17" pos:end="167:20">args</name> <operator pos:start="167:22" pos:end="167:23">+=</operator> <literal type="number" pos:start="167:25" pos:end="167:25">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:30"><expr pos:start="169:17" pos:end="169:29"><name pos:start="169:17" pos:end="169:24">gen_args</name> <operator pos:start="169:26" pos:end="169:27">+=</operator> <literal type="number" pos:start="169:29" pos:end="169:29">2</literal></expr>;</expr_stmt>

                <continue pos:start="171:17" pos:end="171:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <default pos:start="177:9" pos:end="177:16">default:</default>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="185:9" pos:end="185:68">/* Simplify expression for "op r, a, 0 =&gt; mov r, a" cases */</comment>

        <switch pos:start="187:9" pos:end="251:9">switch <condition pos:start="187:16" pos:end="187:19">(<expr pos:start="187:17" pos:end="187:18"><name pos:start="187:17" pos:end="187:18">op</name></expr>)</condition> <block pos:start="187:21" pos:end="251:9">{<block_content pos:start="189:9" pos:end="249:18">

        <expr_stmt pos:start="189:9" pos:end="205:27"><expr pos:start="189:9" pos:end="205:27"><call pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:21">CASE_OP_32_64</name><argument_list pos:start="189:22" pos:end="189:26">(<argument pos:start="189:23" pos:end="189:25"><expr pos:start="189:23" pos:end="189:25"><name pos:start="189:23" pos:end="189:25">add</name></expr></argument>)</argument_list></call><operator pos:start="189:27" pos:end="189:27">:</operator>

        <call pos:start="191:9" pos:end="191:26"><name pos:start="191:9" pos:end="191:21">CASE_OP_32_64</name><argument_list pos:start="191:22" pos:end="191:26">(<argument pos:start="191:23" pos:end="191:25"><expr pos:start="191:23" pos:end="191:25"><name pos:start="191:23" pos:end="191:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="191:27" pos:end="191:27">:</operator>

        <call pos:start="193:9" pos:end="193:26"><name pos:start="193:9" pos:end="193:21">CASE_OP_32_64</name><argument_list pos:start="193:22" pos:end="193:26">(<argument pos:start="193:23" pos:end="193:25"><expr pos:start="193:23" pos:end="193:25"><name pos:start="193:23" pos:end="193:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="193:27" pos:end="193:27">:</operator>

        <call pos:start="195:9" pos:end="195:26"><name pos:start="195:9" pos:end="195:21">CASE_OP_32_64</name><argument_list pos:start="195:22" pos:end="195:26">(<argument pos:start="195:23" pos:end="195:25"><expr pos:start="195:23" pos:end="195:25"><name pos:start="195:23" pos:end="195:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="195:27" pos:end="195:27">:</operator>

        <call pos:start="197:9" pos:end="197:26"><name pos:start="197:9" pos:end="197:21">CASE_OP_32_64</name><argument_list pos:start="197:22" pos:end="197:26">(<argument pos:start="197:23" pos:end="197:25"><expr pos:start="197:23" pos:end="197:25"><name pos:start="197:23" pos:end="197:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="197:27" pos:end="197:27">:</operator>

        <call pos:start="199:9" pos:end="199:27"><name pos:start="199:9" pos:end="199:21">CASE_OP_32_64</name><argument_list pos:start="199:22" pos:end="199:27">(<argument pos:start="199:23" pos:end="199:26"><expr pos:start="199:23" pos:end="199:26"><name pos:start="199:23" pos:end="199:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="199:28" pos:end="199:28">:</operator>

        <call pos:start="201:9" pos:end="201:27"><name pos:start="201:9" pos:end="201:21">CASE_OP_32_64</name><argument_list pos:start="201:22" pos:end="201:27">(<argument pos:start="201:23" pos:end="201:26"><expr pos:start="201:23" pos:end="201:26"><name pos:start="201:23" pos:end="201:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="201:28" pos:end="201:28">:</operator>

        <call pos:start="203:9" pos:end="203:25"><name pos:start="203:9" pos:end="203:21">CASE_OP_32_64</name><argument_list pos:start="203:22" pos:end="203:25">(<argument pos:start="203:23" pos:end="203:24"><expr pos:start="203:23" pos:end="203:24"><name pos:start="203:23" pos:end="203:24">or</name></expr></argument>)</argument_list></call><operator pos:start="203:26" pos:end="203:26">:</operator>

        <call pos:start="205:9" pos:end="205:26"><name pos:start="205:9" pos:end="205:21">CASE_OP_32_64</name><argument_list pos:start="205:22" pos:end="205:26">(<argument pos:start="205:23" pos:end="205:25"><expr pos:start="205:23" pos:end="205:25"><name pos:start="205:23" pos:end="205:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="205:27" pos:end="205:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="207:13" pos:end="213:13"><if pos:start="207:13" pos:end="213:13">if <condition pos:start="207:16" pos:end="207:55">(<expr pos:start="207:17" pos:end="207:54"><name pos:start="207:17" pos:end="207:30"><name pos:start="207:17" pos:end="207:21">temps</name><index pos:start="207:22" pos:end="207:30">[<expr pos:start="207:23" pos:end="207:29"><name pos:start="207:23" pos:end="207:29"><name pos:start="207:23" pos:end="207:26">args</name><index pos:start="207:27" pos:end="207:29">[<expr pos:start="207:28" pos:end="207:28"><literal type="number" pos:start="207:28" pos:end="207:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="207:31" pos:end="207:31">.</operator><name pos:start="207:32" pos:end="207:36">state</name> <operator pos:start="207:38" pos:end="207:39">==</operator> <name pos:start="207:41" pos:end="207:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="207:57" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:22">

                <comment type="block" pos:start="209:17" pos:end="209:61">/* Proceed with possible constant folding. */</comment>

                <break pos:start="211:17" pos:end="211:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="243:13"><if pos:start="215:13" pos:end="243:13">if <condition pos:start="215:16" pos:end="217:43">(<expr pos:start="215:17" pos:end="217:42"><name pos:start="215:17" pos:end="215:30"><name pos:start="215:17" pos:end="215:21">temps</name><index pos:start="215:22" pos:end="215:30">[<expr pos:start="215:23" pos:end="215:29"><name pos:start="215:23" pos:end="215:29"><name pos:start="215:23" pos:end="215:26">args</name><index pos:start="215:27" pos:end="215:29">[<expr pos:start="215:28" pos:end="215:28"><literal type="number" pos:start="215:28" pos:end="215:28">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="215:31" pos:end="215:31">.</operator><name pos:start="215:32" pos:end="215:36">state</name> <operator pos:start="215:38" pos:end="215:39">==</operator> <name pos:start="215:41" pos:end="215:54">TCG_TEMP_CONST</name>

                <operator pos:start="217:17" pos:end="217:18">&amp;&amp;</operator> <name pos:start="217:20" pos:end="217:33"><name pos:start="217:20" pos:end="217:24">temps</name><index pos:start="217:25" pos:end="217:33">[<expr pos:start="217:26" pos:end="217:32"><name pos:start="217:26" pos:end="217:32"><name pos:start="217:26" pos:end="217:29">args</name><index pos:start="217:30" pos:end="217:32">[<expr pos:start="217:31" pos:end="217:31"><literal type="number" pos:start="217:31" pos:end="217:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="217:34" pos:end="217:34">.</operator><name pos:start="217:35" pos:end="217:37">val</name> <operator pos:start="217:39" pos:end="217:40">==</operator> <literal type="number" pos:start="217:42" pos:end="217:42">0</literal></expr>)</condition> <block pos:start="217:45" pos:end="243:13">{<block_content pos:start="219:17" pos:end="241:25">

                <if_stmt pos:start="219:17" pos:end="237:17"><if pos:start="219:17" pos:end="227:17">if <condition pos:start="219:20" pos:end="223:42">(<expr pos:start="219:21" pos:end="223:41"><operator pos:start="219:21" pos:end="219:21">(</operator><name pos:start="219:22" pos:end="219:35"><name pos:start="219:22" pos:end="219:26">temps</name><index pos:start="219:27" pos:end="219:35">[<expr pos:start="219:28" pos:end="219:34"><name pos:start="219:28" pos:end="219:34"><name pos:start="219:28" pos:end="219:31">args</name><index pos:start="219:32" pos:end="219:34">[<expr pos:start="219:33" pos:end="219:33"><literal type="number" pos:start="219:33" pos:end="219:33">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="219:36" pos:end="219:36">.</operator><name pos:start="219:37" pos:end="219:41">state</name> <operator pos:start="219:43" pos:end="219:44">==</operator> <name pos:start="219:46" pos:end="219:58">TCG_TEMP_COPY</name>

                    <operator pos:start="221:21" pos:end="221:22">&amp;&amp;</operator> <name pos:start="221:24" pos:end="221:37"><name pos:start="221:24" pos:end="221:28">temps</name><index pos:start="221:29" pos:end="221:37">[<expr pos:start="221:30" pos:end="221:36"><name pos:start="221:30" pos:end="221:36"><name pos:start="221:30" pos:end="221:33">args</name><index pos:start="221:34" pos:end="221:36">[<expr pos:start="221:35" pos:end="221:35"><literal type="number" pos:start="221:35" pos:end="221:35">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="221:38" pos:end="221:38">.</operator><name pos:start="221:39" pos:end="221:41">val</name> <operator pos:start="221:43" pos:end="221:44">==</operator> <name pos:start="221:46" pos:end="221:52"><name pos:start="221:46" pos:end="221:49">args</name><index pos:start="221:50" pos:end="221:52">[<expr pos:start="221:51" pos:end="221:51"><literal type="number" pos:start="221:51" pos:end="221:51">1</literal></expr>]</index></name><operator pos:start="221:53" pos:end="221:53">)</operator>

                    <operator pos:start="223:21" pos:end="223:22">||</operator> <name pos:start="223:24" pos:end="223:30"><name pos:start="223:24" pos:end="223:27">args</name><index pos:start="223:28" pos:end="223:30">[<expr pos:start="223:29" pos:end="223:29"><literal type="number" pos:start="223:29" pos:end="223:29">0</literal></expr>]</index></name> <operator pos:start="223:32" pos:end="223:33">==</operator> <name pos:start="223:35" pos:end="223:41"><name pos:start="223:35" pos:end="223:38">args</name><index pos:start="223:39" pos:end="223:41">[<expr pos:start="223:40" pos:end="223:40"><literal type="number" pos:start="223:40" pos:end="223:40">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="223:44" pos:end="227:17">{<block_content pos:start="225:21" pos:end="225:57">

                    <expr_stmt pos:start="225:21" pos:end="225:57"><expr pos:start="225:21" pos:end="225:56"><name pos:start="225:21" pos:end="225:41"><name pos:start="225:21" pos:end="225:31">gen_opc_buf</name><index pos:start="225:32" pos:end="225:41">[<expr pos:start="225:33" pos:end="225:40"><name pos:start="225:33" pos:end="225:40">op_index</name></expr>]</index></name> <operator pos:start="225:43" pos:end="225:43">=</operator> <name pos:start="225:45" pos:end="225:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="227:19" pos:end="237:17">else <block pos:start="227:24" pos:end="237:17">{<block_content pos:start="229:21" pos:end="235:34">

                    <expr_stmt pos:start="229:21" pos:end="229:58"><expr pos:start="229:21" pos:end="229:57"><name pos:start="229:21" pos:end="229:41"><name pos:start="229:21" pos:end="229:31">gen_opc_buf</name><index pos:start="229:32" pos:end="229:41">[<expr pos:start="229:33" pos:end="229:40"><name pos:start="229:33" pos:end="229:40">op_index</name></expr>]</index></name> <operator pos:start="229:43" pos:end="229:43">=</operator> <call pos:start="229:45" pos:end="229:57"><name pos:start="229:45" pos:end="229:53">op_to_mov</name><argument_list pos:start="229:54" pos:end="229:57">(<argument pos:start="229:55" pos:end="229:56"><expr pos:start="229:55" pos:end="229:56"><name pos:start="229:55" pos:end="229:56">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="233:58"><expr pos:start="231:21" pos:end="233:57"><call pos:start="231:21" pos:end="233:57"><name pos:start="231:21" pos:end="231:35">tcg_opt_gen_mov</name><argument_list pos:start="231:36" pos:end="233:57">(<argument pos:start="231:37" pos:end="231:44"><expr pos:start="231:37" pos:end="231:44"><name pos:start="231:37" pos:end="231:44">gen_args</name></expr></argument>, <argument pos:start="231:47" pos:end="231:53"><expr pos:start="231:47" pos:end="231:53"><name pos:start="231:47" pos:end="231:53"><name pos:start="231:47" pos:end="231:50">args</name><index pos:start="231:51" pos:end="231:53">[<expr pos:start="231:52" pos:end="231:52"><literal type="number" pos:start="231:52" pos:end="231:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:56" pos:end="231:62"><expr pos:start="231:56" pos:end="231:62"><name pos:start="231:56" pos:end="231:62"><name pos:start="231:56" pos:end="231:59">args</name><index pos:start="231:60" pos:end="231:62">[<expr pos:start="231:61" pos:end="231:61"><literal type="number" pos:start="231:61" pos:end="231:61">1</literal></expr>]</index></name></expr></argument>,

                                    <argument pos:start="233:37" pos:end="233:44"><expr pos:start="233:37" pos:end="233:44"><name pos:start="233:37" pos:end="233:44">nb_temps</name></expr></argument>, <argument pos:start="233:47" pos:end="233:56"><expr pos:start="233:47" pos:end="233:56"><name pos:start="233:47" pos:end="233:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="235:21" pos:end="235:34"><expr pos:start="235:21" pos:end="235:33"><name pos:start="235:21" pos:end="235:28">gen_args</name> <operator pos:start="235:30" pos:end="235:31">+=</operator> <literal type="number" pos:start="235:33" pos:end="235:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:26"><expr pos:start="239:17" pos:end="239:25"><name pos:start="239:17" pos:end="239:20">args</name> <operator pos:start="239:22" pos:end="239:23">+=</operator> <literal type="number" pos:start="239:25" pos:end="239:25">3</literal></expr>;</expr_stmt>

                <continue pos:start="241:17" pos:end="241:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="245:13" pos:end="245:18">break;</break>

        <default pos:start="247:9" pos:end="247:16">default:</default>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="255:9" pos:end="255:69">/* Simplify expression for "op r, a, 0 =&gt; movi r, 0" cases */</comment>

        <switch pos:start="257:9" pos:end="285:9">switch <condition pos:start="257:16" pos:end="257:19">(<expr pos:start="257:17" pos:end="257:18"><name pos:start="257:17" pos:end="257:18">op</name></expr>)</condition> <block pos:start="257:21" pos:end="285:9">{<block_content pos:start="259:9" pos:end="283:18">

        <expr_stmt pos:start="259:9" pos:end="261:27"><expr pos:start="259:9" pos:end="261:27"><call pos:start="259:9" pos:end="259:26"><name pos:start="259:9" pos:end="259:21">CASE_OP_32_64</name><argument_list pos:start="259:22" pos:end="259:26">(<argument pos:start="259:23" pos:end="259:25"><expr pos:start="259:23" pos:end="259:25"><name pos:start="259:23" pos:end="259:25">and</name></expr></argument>)</argument_list></call><operator pos:start="259:27" pos:end="259:27">:</operator>

        <call pos:start="261:9" pos:end="261:26"><name pos:start="261:9" pos:end="261:21">CASE_OP_32_64</name><argument_list pos:start="261:22" pos:end="261:26">(<argument pos:start="261:23" pos:end="261:25"><expr pos:start="261:23" pos:end="261:25"><name pos:start="261:23" pos:end="261:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="261:27" pos:end="261:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="263:13" pos:end="277:13"><if pos:start="263:13" pos:end="277:13">if <condition pos:start="263:16" pos:end="265:44">(<expr pos:start="263:17" pos:end="265:43"><operator pos:start="263:17" pos:end="263:17">(</operator><name pos:start="263:18" pos:end="263:31"><name pos:start="263:18" pos:end="263:22">temps</name><index pos:start="263:23" pos:end="263:31">[<expr pos:start="263:24" pos:end="263:30"><name pos:start="263:24" pos:end="263:30"><name pos:start="263:24" pos:end="263:27">args</name><index pos:start="263:28" pos:end="263:30">[<expr pos:start="263:29" pos:end="263:29"><literal type="number" pos:start="263:29" pos:end="263:29">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="263:32" pos:end="263:32">.</operator><name pos:start="263:33" pos:end="263:37">state</name> <operator pos:start="263:39" pos:end="263:40">==</operator> <name pos:start="263:42" pos:end="263:55">TCG_TEMP_CONST</name>

                <operator pos:start="265:17" pos:end="265:18">&amp;&amp;</operator> <name pos:start="265:20" pos:end="265:33"><name pos:start="265:20" pos:end="265:24">temps</name><index pos:start="265:25" pos:end="265:33">[<expr pos:start="265:26" pos:end="265:32"><name pos:start="265:26" pos:end="265:32"><name pos:start="265:26" pos:end="265:29">args</name><index pos:start="265:30" pos:end="265:32">[<expr pos:start="265:31" pos:end="265:31"><literal type="number" pos:start="265:31" pos:end="265:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="265:34" pos:end="265:34">.</operator><name pos:start="265:35" pos:end="265:37">val</name> <operator pos:start="265:39" pos:end="265:40">==</operator> <literal type="number" pos:start="265:42" pos:end="265:42">0</literal><operator pos:start="265:43" pos:end="265:43">)</operator></expr>)</condition> <block pos:start="265:46" pos:end="277:13">{<block_content pos:start="267:17" pos:end="275:25">

                <expr_stmt pos:start="267:17" pos:end="267:55"><expr pos:start="267:17" pos:end="267:54"><name pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:27">gen_opc_buf</name><index pos:start="267:28" pos:end="267:37">[<expr pos:start="267:29" pos:end="267:36"><name pos:start="267:29" pos:end="267:36">op_index</name></expr>]</index></name> <operator pos:start="267:39" pos:end="267:39">=</operator> <call pos:start="267:41" pos:end="267:54"><name pos:start="267:41" pos:end="267:50">op_to_movi</name><argument_list pos:start="267:51" pos:end="267:54">(<argument pos:start="267:52" pos:end="267:53"><expr pos:start="267:52" pos:end="267:53"><name pos:start="267:52" pos:end="267:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:77"><expr pos:start="269:17" pos:end="269:76"><call pos:start="269:17" pos:end="269:76"><name pos:start="269:17" pos:end="269:32">tcg_opt_gen_movi</name><argument_list pos:start="269:33" pos:end="269:76">(<argument pos:start="269:34" pos:end="269:41"><expr pos:start="269:34" pos:end="269:41"><name pos:start="269:34" pos:end="269:41">gen_args</name></expr></argument>, <argument pos:start="269:44" pos:end="269:50"><expr pos:start="269:44" pos:end="269:50"><name pos:start="269:44" pos:end="269:50"><name pos:start="269:44" pos:end="269:47">args</name><index pos:start="269:48" pos:end="269:50">[<expr pos:start="269:49" pos:end="269:49"><literal type="number" pos:start="269:49" pos:end="269:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:53" pos:end="269:53"><expr pos:start="269:53" pos:end="269:53"><literal type="number" pos:start="269:53" pos:end="269:53">0</literal></expr></argument>, <argument pos:start="269:56" pos:end="269:63"><expr pos:start="269:56" pos:end="269:63"><name pos:start="269:56" pos:end="269:63">nb_temps</name></expr></argument>, <argument pos:start="269:66" pos:end="269:75"><expr pos:start="269:66" pos:end="269:75"><name pos:start="269:66" pos:end="269:75">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:26"><expr pos:start="271:17" pos:end="271:25"><name pos:start="271:17" pos:end="271:20">args</name> <operator pos:start="271:22" pos:end="271:23">+=</operator> <literal type="number" pos:start="271:25" pos:end="271:25">3</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:30"><expr pos:start="273:17" pos:end="273:29"><name pos:start="273:17" pos:end="273:24">gen_args</name> <operator pos:start="273:26" pos:end="273:27">+=</operator> <literal type="number" pos:start="273:29" pos:end="273:29">2</literal></expr>;</expr_stmt>

                <continue pos:start="275:17" pos:end="275:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="279:13" pos:end="279:18">break;</break>

        <default pos:start="281:9" pos:end="281:16">default:</default>

            <break pos:start="283:13" pos:end="283:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="289:9" pos:end="289:68">/* Simplify expression for "op r, a, a =&gt; mov r, a" cases */</comment>

        <switch pos:start="291:9" pos:end="327:9">switch <condition pos:start="291:16" pos:end="291:19">(<expr pos:start="291:17" pos:end="291:18"><name pos:start="291:17" pos:end="291:18">op</name></expr>)</condition> <block pos:start="291:21" pos:end="327:9">{<block_content pos:start="293:9" pos:end="325:18">

        <expr_stmt pos:start="293:9" pos:end="295:27"><expr pos:start="293:9" pos:end="295:27"><call pos:start="293:9" pos:end="293:25"><name pos:start="293:9" pos:end="293:21">CASE_OP_32_64</name><argument_list pos:start="293:22" pos:end="293:25">(<argument pos:start="293:23" pos:end="293:24"><expr pos:start="293:23" pos:end="293:24"><name pos:start="293:23" pos:end="293:24">or</name></expr></argument>)</argument_list></call><operator pos:start="293:26" pos:end="293:26">:</operator>

        <call pos:start="295:9" pos:end="295:26"><name pos:start="295:9" pos:end="295:21">CASE_OP_32_64</name><argument_list pos:start="295:22" pos:end="295:26">(<argument pos:start="295:23" pos:end="295:25"><expr pos:start="295:23" pos:end="295:25"><name pos:start="295:23" pos:end="295:25">and</name></expr></argument>)</argument_list></call><operator pos:start="295:27" pos:end="295:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="297:13" pos:end="319:13"><if pos:start="297:13" pos:end="319:13">if <condition pos:start="297:16" pos:end="297:35">(<expr pos:start="297:17" pos:end="297:34"><name pos:start="297:17" pos:end="297:23"><name pos:start="297:17" pos:end="297:20">args</name><index pos:start="297:21" pos:end="297:23">[<expr pos:start="297:22" pos:end="297:22"><literal type="number" pos:start="297:22" pos:end="297:22">1</literal></expr>]</index></name> <operator pos:start="297:25" pos:end="297:26">==</operator> <name pos:start="297:28" pos:end="297:34"><name pos:start="297:28" pos:end="297:31">args</name><index pos:start="297:32" pos:end="297:34">[<expr pos:start="297:33" pos:end="297:33"><literal type="number" pos:start="297:33" pos:end="297:33">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="297:37" pos:end="319:13">{<block_content pos:start="299:17" pos:end="317:25">

                <if_stmt pos:start="299:17" pos:end="313:17"><if pos:start="299:17" pos:end="303:17">if <condition pos:start="299:20" pos:end="299:39">(<expr pos:start="299:21" pos:end="299:38"><name pos:start="299:21" pos:end="299:27"><name pos:start="299:21" pos:end="299:24">args</name><index pos:start="299:25" pos:end="299:27">[<expr pos:start="299:26" pos:end="299:26"><literal type="number" pos:start="299:26" pos:end="299:26">1</literal></expr>]</index></name> <operator pos:start="299:29" pos:end="299:30">==</operator> <name pos:start="299:32" pos:end="299:38"><name pos:start="299:32" pos:end="299:35">args</name><index pos:start="299:36" pos:end="299:38">[<expr pos:start="299:37" pos:end="299:37"><literal type="number" pos:start="299:37" pos:end="299:37">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="299:41" pos:end="303:17">{<block_content pos:start="301:21" pos:end="301:57">

                    <expr_stmt pos:start="301:21" pos:end="301:57"><expr pos:start="301:21" pos:end="301:56"><name pos:start="301:21" pos:end="301:41"><name pos:start="301:21" pos:end="301:31">gen_opc_buf</name><index pos:start="301:32" pos:end="301:41">[<expr pos:start="301:33" pos:end="301:40"><name pos:start="301:33" pos:end="301:40">op_index</name></expr>]</index></name> <operator pos:start="301:43" pos:end="301:43">=</operator> <name pos:start="301:45" pos:end="301:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="303:19" pos:end="313:17">else <block pos:start="303:24" pos:end="313:17">{<block_content pos:start="305:21" pos:end="311:34">

                    <expr_stmt pos:start="305:21" pos:end="305:58"><expr pos:start="305:21" pos:end="305:57"><name pos:start="305:21" pos:end="305:41"><name pos:start="305:21" pos:end="305:31">gen_opc_buf</name><index pos:start="305:32" pos:end="305:41">[<expr pos:start="305:33" pos:end="305:40"><name pos:start="305:33" pos:end="305:40">op_index</name></expr>]</index></name> <operator pos:start="305:43" pos:end="305:43">=</operator> <call pos:start="305:45" pos:end="305:57"><name pos:start="305:45" pos:end="305:53">op_to_mov</name><argument_list pos:start="305:54" pos:end="305:57">(<argument pos:start="305:55" pos:end="305:56"><expr pos:start="305:55" pos:end="305:56"><name pos:start="305:55" pos:end="305:56">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="309:48"><expr pos:start="307:21" pos:end="309:47"><call pos:start="307:21" pos:end="309:47"><name pos:start="307:21" pos:end="307:35">tcg_opt_gen_mov</name><argument_list pos:start="307:36" pos:end="309:47">(<argument pos:start="307:37" pos:end="307:44"><expr pos:start="307:37" pos:end="307:44"><name pos:start="307:37" pos:end="307:44">gen_args</name></expr></argument>, <argument pos:start="307:47" pos:end="307:53"><expr pos:start="307:47" pos:end="307:53"><name pos:start="307:47" pos:end="307:53"><name pos:start="307:47" pos:end="307:50">args</name><index pos:start="307:51" pos:end="307:53">[<expr pos:start="307:52" pos:end="307:52"><literal type="number" pos:start="307:52" pos:end="307:52">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:56" pos:end="307:62"><expr pos:start="307:56" pos:end="307:62"><name pos:start="307:56" pos:end="307:62"><name pos:start="307:56" pos:end="307:59">args</name><index pos:start="307:60" pos:end="307:62">[<expr pos:start="307:61" pos:end="307:61"><literal type="number" pos:start="307:61" pos:end="307:61">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="307:65" pos:end="307:72"><expr pos:start="307:65" pos:end="307:72"><name pos:start="307:65" pos:end="307:72">nb_temps</name></expr></argument>,

                                    <argument pos:start="309:37" pos:end="309:46"><expr pos:start="309:37" pos:end="309:46"><name pos:start="309:37" pos:end="309:46">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="311:21" pos:end="311:34"><expr pos:start="311:21" pos:end="311:33"><name pos:start="311:21" pos:end="311:28">gen_args</name> <operator pos:start="311:30" pos:end="311:31">+=</operator> <literal type="number" pos:start="311:33" pos:end="311:33">2</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:26"><expr pos:start="315:17" pos:end="315:25"><name pos:start="315:17" pos:end="315:20">args</name> <operator pos:start="315:22" pos:end="315:23">+=</operator> <literal type="number" pos:start="315:25" pos:end="315:25">3</literal></expr>;</expr_stmt>

                <continue pos:start="317:17" pos:end="317:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <default pos:start="323:9" pos:end="323:16">default:</default>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        </block_content>}</block></switch>



        <comment type="block" pos:start="331:9" pos:end="335:71">/* Propagate constants through copy operations and do constant

           folding.  Constants will be substituted to arguments by register

           allocator where needed and possible.  Also detect copies. */</comment>

        <switch pos:start="337:9" pos:end="657:9">switch <condition pos:start="337:16" pos:end="337:19">(<expr pos:start="337:17" pos:end="337:18"><name pos:start="337:17" pos:end="337:18">op</name></expr>)</condition> <block pos:start="337:21" pos:end="657:9">{<block_content pos:start="339:9" pos:end="655:18">

        <expr_stmt pos:start="339:9" pos:end="339:27"><expr pos:start="339:9" pos:end="339:27"><call pos:start="339:9" pos:end="339:26"><name pos:start="339:9" pos:end="339:21">CASE_OP_32_64</name><argument_list pos:start="339:22" pos:end="339:26">(<argument pos:start="339:23" pos:end="339:25"><expr pos:start="339:23" pos:end="339:25"><name pos:start="339:23" pos:end="339:25">mov</name></expr></argument>)</argument_list></call><operator pos:start="339:27" pos:end="339:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="341:13" pos:end="353:13"><if pos:start="341:13" pos:end="353:13">if <condition pos:start="341:16" pos:end="345:38">(<expr pos:start="341:17" pos:end="345:37"><operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:31"><name pos:start="341:18" pos:end="341:22">temps</name><index pos:start="341:23" pos:end="341:31">[<expr pos:start="341:24" pos:end="341:30"><name pos:start="341:24" pos:end="341:30"><name pos:start="341:24" pos:end="341:27">args</name><index pos:start="341:28" pos:end="341:30">[<expr pos:start="341:29" pos:end="341:29"><literal type="number" pos:start="341:29" pos:end="341:29">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="341:32" pos:end="341:32">.</operator><name pos:start="341:33" pos:end="341:37">state</name> <operator pos:start="341:39" pos:end="341:40">==</operator> <name pos:start="341:42" pos:end="341:54">TCG_TEMP_COPY</name>

                <operator pos:start="343:17" pos:end="343:18">&amp;&amp;</operator> <name pos:start="343:20" pos:end="343:33"><name pos:start="343:20" pos:end="343:24">temps</name><index pos:start="343:25" pos:end="343:33">[<expr pos:start="343:26" pos:end="343:32"><name pos:start="343:26" pos:end="343:32"><name pos:start="343:26" pos:end="343:29">args</name><index pos:start="343:30" pos:end="343:32">[<expr pos:start="343:31" pos:end="343:31"><literal type="number" pos:start="343:31" pos:end="343:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="343:34" pos:end="343:34">.</operator><name pos:start="343:35" pos:end="343:37">val</name> <operator pos:start="343:39" pos:end="343:40">==</operator> <name pos:start="343:42" pos:end="343:48"><name pos:start="343:42" pos:end="343:45">args</name><index pos:start="343:46" pos:end="343:48">[<expr pos:start="343:47" pos:end="343:47"><literal type="number" pos:start="343:47" pos:end="343:47">0</literal></expr>]</index></name><operator pos:start="343:49" pos:end="343:49">)</operator>

                <operator pos:start="345:17" pos:end="345:18">||</operator> <name pos:start="345:20" pos:end="345:26"><name pos:start="345:20" pos:end="345:23">args</name><index pos:start="345:24" pos:end="345:26">[<expr pos:start="345:25" pos:end="345:25"><literal type="number" pos:start="345:25" pos:end="345:25">0</literal></expr>]</index></name> <operator pos:start="345:28" pos:end="345:29">==</operator> <name pos:start="345:31" pos:end="345:37"><name pos:start="345:31" pos:end="345:34">args</name><index pos:start="345:35" pos:end="345:37">[<expr pos:start="345:36" pos:end="345:36"><literal type="number" pos:start="345:36" pos:end="345:36">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="345:40" pos:end="353:13">{<block_content pos:start="347:17" pos:end="351:22">

                <expr_stmt pos:start="347:17" pos:end="347:26"><expr pos:start="347:17" pos:end="347:25"><name pos:start="347:17" pos:end="347:20">args</name> <operator pos:start="347:22" pos:end="347:23">+=</operator> <literal type="number" pos:start="347:25" pos:end="347:25">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:53"><expr pos:start="349:17" pos:end="349:52"><name pos:start="349:17" pos:end="349:37"><name pos:start="349:17" pos:end="349:27">gen_opc_buf</name><index pos:start="349:28" pos:end="349:37">[<expr pos:start="349:29" pos:end="349:36"><name pos:start="349:29" pos:end="349:36">op_index</name></expr>]</index></name> <operator pos:start="349:39" pos:end="349:39">=</operator> <name pos:start="349:41" pos:end="349:52">INDEX_op_nop</name></expr>;</expr_stmt>

                <break pos:start="351:17" pos:end="351:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="355:13" pos:end="367:13"><if pos:start="355:13" pos:end="367:13">if <condition pos:start="355:16" pos:end="355:55">(<expr pos:start="355:17" pos:end="355:54"><name pos:start="355:17" pos:end="355:30"><name pos:start="355:17" pos:end="355:21">temps</name><index pos:start="355:22" pos:end="355:30">[<expr pos:start="355:23" pos:end="355:29"><name pos:start="355:23" pos:end="355:29"><name pos:start="355:23" pos:end="355:26">args</name><index pos:start="355:27" pos:end="355:29">[<expr pos:start="355:28" pos:end="355:28"><literal type="number" pos:start="355:28" pos:end="355:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="355:31" pos:end="355:31">.</operator><name pos:start="355:32" pos:end="355:36">state</name> <operator pos:start="355:38" pos:end="355:39">!=</operator> <name pos:start="355:41" pos:end="355:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="355:57" pos:end="367:13">{<block_content pos:start="357:17" pos:end="365:22">

                <expr_stmt pos:start="357:17" pos:end="359:54"><expr pos:start="357:17" pos:end="359:53"><call pos:start="357:17" pos:end="359:53"><name pos:start="357:17" pos:end="357:31">tcg_opt_gen_mov</name><argument_list pos:start="357:32" pos:end="359:53">(<argument pos:start="357:33" pos:end="357:40"><expr pos:start="357:33" pos:end="357:40"><name pos:start="357:33" pos:end="357:40">gen_args</name></expr></argument>, <argument pos:start="357:43" pos:end="357:49"><expr pos:start="357:43" pos:end="357:49"><name pos:start="357:43" pos:end="357:49"><name pos:start="357:43" pos:end="357:46">args</name><index pos:start="357:47" pos:end="357:49">[<expr pos:start="357:48" pos:end="357:48"><literal type="number" pos:start="357:48" pos:end="357:48">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="357:52" pos:end="357:58"><expr pos:start="357:52" pos:end="357:58"><name pos:start="357:52" pos:end="357:58"><name pos:start="357:52" pos:end="357:55">args</name><index pos:start="357:56" pos:end="357:58">[<expr pos:start="357:57" pos:end="357:57"><literal type="number" pos:start="357:57" pos:end="357:57">1</literal></expr>]</index></name></expr></argument>,

                                <argument pos:start="359:33" pos:end="359:40"><expr pos:start="359:33" pos:end="359:40"><name pos:start="359:33" pos:end="359:40">nb_temps</name></expr></argument>, <argument pos:start="359:43" pos:end="359:52"><expr pos:start="359:43" pos:end="359:52"><name pos:start="359:43" pos:end="359:52">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="361:17" pos:end="361:30"><expr pos:start="361:17" pos:end="361:29"><name pos:start="361:17" pos:end="361:24">gen_args</name> <operator pos:start="361:26" pos:end="361:27">+=</operator> <literal type="number" pos:start="361:29" pos:end="361:29">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:26"><expr pos:start="363:17" pos:end="363:25"><name pos:start="363:17" pos:end="363:20">args</name> <operator pos:start="363:22" pos:end="363:23">+=</operator> <literal type="number" pos:start="363:25" pos:end="363:25">2</literal></expr>;</expr_stmt>

                <break pos:start="365:17" pos:end="365:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="369:13" pos:end="371:42">/* Source argument is constant.  Rewrite the operation and

               let movi case handle it. */</comment>

            <expr_stmt pos:start="373:13" pos:end="373:32"><expr pos:start="373:13" pos:end="373:31"><name pos:start="373:13" pos:end="373:14">op</name> <operator pos:start="373:16" pos:end="373:16">=</operator> <call pos:start="373:18" pos:end="373:31"><name pos:start="373:18" pos:end="373:27">op_to_movi</name><argument_list pos:start="373:28" pos:end="373:31">(<argument pos:start="373:29" pos:end="373:30"><expr pos:start="373:29" pos:end="373:30"><name pos:start="373:29" pos:end="373:30">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="375:13" pos:end="375:39"><expr pos:start="375:13" pos:end="375:38"><name pos:start="375:13" pos:end="375:33"><name pos:start="375:13" pos:end="375:23">gen_opc_buf</name><index pos:start="375:24" pos:end="375:33">[<expr pos:start="375:25" pos:end="375:32"><name pos:start="375:25" pos:end="375:32">op_index</name></expr>]</index></name> <operator pos:start="375:35" pos:end="375:35">=</operator> <name pos:start="375:37" pos:end="375:38">op</name></expr>;</expr_stmt>

            <expr_stmt pos:start="377:13" pos:end="377:41"><expr pos:start="377:13" pos:end="377:40"><name pos:start="377:13" pos:end="377:19"><name pos:start="377:13" pos:end="377:16">args</name><index pos:start="377:17" pos:end="377:19">[<expr pos:start="377:18" pos:end="377:18"><literal type="number" pos:start="377:18" pos:end="377:18">1</literal></expr>]</index></name> <operator pos:start="377:21" pos:end="377:21">=</operator> <name pos:start="377:23" pos:end="377:36"><name pos:start="377:23" pos:end="377:27">temps</name><index pos:start="377:28" pos:end="377:36">[<expr pos:start="377:29" pos:end="377:35"><name pos:start="377:29" pos:end="377:35"><name pos:start="377:29" pos:end="377:32">args</name><index pos:start="377:33" pos:end="377:35">[<expr pos:start="377:34" pos:end="377:34"><literal type="number" pos:start="377:34" pos:end="377:34">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="377:37" pos:end="377:37">.</operator><name pos:start="377:38" pos:end="377:40">val</name></expr>;</expr_stmt>

            <comment type="block" pos:start="379:13" pos:end="379:29">/* fallthrough */</comment>

        <expr_stmt pos:start="381:9" pos:end="383:79"><expr pos:start="381:9" pos:end="383:78"><call pos:start="381:9" pos:end="381:27"><name pos:start="381:9" pos:end="381:21">CASE_OP_32_64</name><argument_list pos:start="381:22" pos:end="381:27">(<argument pos:start="381:23" pos:end="381:26"><expr pos:start="381:23" pos:end="381:26"><name pos:start="381:23" pos:end="381:26">movi</name></expr></argument>)</argument_list></call><operator pos:start="381:28" pos:end="381:28">:</operator>

            <call pos:start="383:13" pos:end="383:78"><name pos:start="383:13" pos:end="383:28">tcg_opt_gen_movi</name><argument_list pos:start="383:29" pos:end="383:78">(<argument pos:start="383:30" pos:end="383:37"><expr pos:start="383:30" pos:end="383:37"><name pos:start="383:30" pos:end="383:37">gen_args</name></expr></argument>, <argument pos:start="383:40" pos:end="383:46"><expr pos:start="383:40" pos:end="383:46"><name pos:start="383:40" pos:end="383:46"><name pos:start="383:40" pos:end="383:43">args</name><index pos:start="383:44" pos:end="383:46">[<expr pos:start="383:45" pos:end="383:45"><literal type="number" pos:start="383:45" pos:end="383:45">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="383:49" pos:end="383:55"><expr pos:start="383:49" pos:end="383:55"><name pos:start="383:49" pos:end="383:55"><name pos:start="383:49" pos:end="383:52">args</name><index pos:start="383:53" pos:end="383:55">[<expr pos:start="383:54" pos:end="383:54"><literal type="number" pos:start="383:54" pos:end="383:54">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="383:58" pos:end="383:65"><expr pos:start="383:58" pos:end="383:65"><name pos:start="383:58" pos:end="383:65">nb_temps</name></expr></argument>, <argument pos:start="383:68" pos:end="383:77"><expr pos:start="383:68" pos:end="383:77"><name pos:start="383:68" pos:end="383:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:26"><expr pos:start="385:13" pos:end="385:25"><name pos:start="385:13" pos:end="385:20">gen_args</name> <operator pos:start="385:22" pos:end="385:23">+=</operator> <literal type="number" pos:start="385:25" pos:end="385:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:22"><expr pos:start="387:13" pos:end="387:21"><name pos:start="387:13" pos:end="387:16">args</name> <operator pos:start="387:18" pos:end="387:19">+=</operator> <literal type="number" pos:start="387:21" pos:end="387:21">2</literal></expr>;</expr_stmt>

            <break pos:start="389:13" pos:end="389:18">break;</break>

        <expr_stmt pos:start="391:9" pos:end="401:30"><expr pos:start="391:9" pos:end="401:30"><call pos:start="391:9" pos:end="391:26"><name pos:start="391:9" pos:end="391:21">CASE_OP_32_64</name><argument_list pos:start="391:22" pos:end="391:26">(<argument pos:start="391:23" pos:end="391:25"><expr pos:start="391:23" pos:end="391:25"><name pos:start="391:23" pos:end="391:25">not</name></expr></argument>)</argument_list></call><operator pos:start="391:27" pos:end="391:27">:</operator>

        <call pos:start="393:9" pos:end="393:26"><name pos:start="393:9" pos:end="393:21">CASE_OP_32_64</name><argument_list pos:start="393:22" pos:end="393:26">(<argument pos:start="393:23" pos:end="393:25"><expr pos:start="393:23" pos:end="393:25"><name pos:start="393:23" pos:end="393:25">neg</name></expr></argument>)</argument_list></call><operator pos:start="393:27" pos:end="393:27">:</operator>

        <call pos:start="395:9" pos:end="395:28"><name pos:start="395:9" pos:end="395:21">CASE_OP_32_64</name><argument_list pos:start="395:22" pos:end="395:28">(<argument pos:start="395:23" pos:end="395:27"><expr pos:start="395:23" pos:end="395:27"><name pos:start="395:23" pos:end="395:27">ext8s</name></expr></argument>)</argument_list></call><operator pos:start="395:29" pos:end="395:29">:</operator>

        <call pos:start="397:9" pos:end="397:28"><name pos:start="397:9" pos:end="397:21">CASE_OP_32_64</name><argument_list pos:start="397:22" pos:end="397:28">(<argument pos:start="397:23" pos:end="397:27"><expr pos:start="397:23" pos:end="397:27"><name pos:start="397:23" pos:end="397:27">ext8u</name></expr></argument>)</argument_list></call><operator pos:start="397:29" pos:end="397:29">:</operator>

        <call pos:start="399:9" pos:end="399:29"><name pos:start="399:9" pos:end="399:21">CASE_OP_32_64</name><argument_list pos:start="399:22" pos:end="399:29">(<argument pos:start="399:23" pos:end="399:28"><expr pos:start="399:23" pos:end="399:28"><name pos:start="399:23" pos:end="399:28">ext16s</name></expr></argument>)</argument_list></call><operator pos:start="399:30" pos:end="399:30">:</operator>

        <call pos:start="401:9" pos:end="401:29"><name pos:start="401:9" pos:end="401:21">CASE_OP_32_64</name><argument_list pos:start="401:22" pos:end="401:29">(<argument pos:start="401:23" pos:end="401:28"><expr pos:start="401:23" pos:end="401:28"><name pos:start="401:23" pos:end="401:28">ext16u</name></expr></argument>)</argument_list></call><operator pos:start="401:30" pos:end="401:30">:</operator></expr></expr_stmt>

        <case pos:start="403:9" pos:end="403:33">case <expr pos:start="403:14" pos:end="403:32"><name pos:start="403:14" pos:end="403:32">INDEX_op_ext32s_i64</name></expr>:</case>

        <case pos:start="405:9" pos:end="405:33">case <expr pos:start="405:14" pos:end="405:32"><name pos:start="405:14" pos:end="405:32">INDEX_op_ext32u_i64</name></expr>:</case>

            <if_stmt pos:start="407:13" pos:end="423:13"><if pos:start="407:13" pos:end="415:13">if <condition pos:start="407:16" pos:end="407:55">(<expr pos:start="407:17" pos:end="407:54"><name pos:start="407:17" pos:end="407:30"><name pos:start="407:17" pos:end="407:21">temps</name><index pos:start="407:22" pos:end="407:30">[<expr pos:start="407:23" pos:end="407:29"><name pos:start="407:23" pos:end="407:29"><name pos:start="407:23" pos:end="407:26">args</name><index pos:start="407:27" pos:end="407:29">[<expr pos:start="407:28" pos:end="407:28"><literal type="number" pos:start="407:28" pos:end="407:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="407:31" pos:end="407:31">.</operator><name pos:start="407:32" pos:end="407:36">state</name> <operator pos:start="407:38" pos:end="407:39">==</operator> <name pos:start="407:41" pos:end="407:54">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="407:57" pos:end="415:13">{<block_content pos:start="409:17" pos:end="413:79">

                <expr_stmt pos:start="409:17" pos:end="409:55"><expr pos:start="409:17" pos:end="409:54"><name pos:start="409:17" pos:end="409:37"><name pos:start="409:17" pos:end="409:27">gen_opc_buf</name><index pos:start="409:28" pos:end="409:37">[<expr pos:start="409:29" pos:end="409:36"><name pos:start="409:29" pos:end="409:36">op_index</name></expr>]</index></name> <operator pos:start="409:39" pos:end="409:39">=</operator> <call pos:start="409:41" pos:end="409:54"><name pos:start="409:41" pos:end="409:50">op_to_movi</name><argument_list pos:start="409:51" pos:end="409:54">(<argument pos:start="409:52" pos:end="409:53"><expr pos:start="409:52" pos:end="409:53"><name pos:start="409:52" pos:end="409:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:69"><expr pos:start="411:17" pos:end="411:68"><name pos:start="411:17" pos:end="411:19">tmp</name> <operator pos:start="411:21" pos:end="411:21">=</operator> <call pos:start="411:23" pos:end="411:68"><name pos:start="411:23" pos:end="411:41">do_constant_folding</name><argument_list pos:start="411:42" pos:end="411:68">(<argument pos:start="411:43" pos:end="411:44"><expr pos:start="411:43" pos:end="411:44"><name pos:start="411:43" pos:end="411:44">op</name></expr></argument>, <argument pos:start="411:47" pos:end="411:64"><expr pos:start="411:47" pos:end="411:64"><name pos:start="411:47" pos:end="411:60"><name pos:start="411:47" pos:end="411:51">temps</name><index pos:start="411:52" pos:end="411:60">[<expr pos:start="411:53" pos:end="411:59"><name pos:start="411:53" pos:end="411:59"><name pos:start="411:53" pos:end="411:56">args</name><index pos:start="411:57" pos:end="411:59">[<expr pos:start="411:58" pos:end="411:58"><literal type="number" pos:start="411:58" pos:end="411:58">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="411:61" pos:end="411:61">.</operator><name pos:start="411:62" pos:end="411:64">val</name></expr></argument>, <argument pos:start="411:67" pos:end="411:67"><expr pos:start="411:67" pos:end="411:67"><literal type="number" pos:start="411:67" pos:end="411:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:79"><expr pos:start="413:17" pos:end="413:78"><call pos:start="413:17" pos:end="413:78"><name pos:start="413:17" pos:end="413:32">tcg_opt_gen_movi</name><argument_list pos:start="413:33" pos:end="413:78">(<argument pos:start="413:34" pos:end="413:41"><expr pos:start="413:34" pos:end="413:41"><name pos:start="413:34" pos:end="413:41">gen_args</name></expr></argument>, <argument pos:start="413:44" pos:end="413:50"><expr pos:start="413:44" pos:end="413:50"><name pos:start="413:44" pos:end="413:50"><name pos:start="413:44" pos:end="413:47">args</name><index pos:start="413:48" pos:end="413:50">[<expr pos:start="413:49" pos:end="413:49"><literal type="number" pos:start="413:49" pos:end="413:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="413:53" pos:end="413:55"><expr pos:start="413:53" pos:end="413:55"><name pos:start="413:53" pos:end="413:55">tmp</name></expr></argument>, <argument pos:start="413:58" pos:end="413:65"><expr pos:start="413:58" pos:end="413:65"><name pos:start="413:58" pos:end="413:65">nb_temps</name></expr></argument>, <argument pos:start="413:68" pos:end="413:77"><expr pos:start="413:68" pos:end="413:77"><name pos:start="413:68" pos:end="413:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="415:15" pos:end="423:13">else <block pos:start="415:20" pos:end="423:13">{<block_content pos:start="417:17" pos:end="421:38">

                <expr_stmt pos:start="417:17" pos:end="417:58"><expr pos:start="417:17" pos:end="417:57"><call pos:start="417:17" pos:end="417:57"><name pos:start="417:17" pos:end="417:26">reset_temp</name><argument_list pos:start="417:27" pos:end="417:57">(<argument pos:start="417:28" pos:end="417:34"><expr pos:start="417:28" pos:end="417:34"><name pos:start="417:28" pos:end="417:34"><name pos:start="417:28" pos:end="417:31">args</name><index pos:start="417:32" pos:end="417:34">[<expr pos:start="417:33" pos:end="417:33"><literal type="number" pos:start="417:33" pos:end="417:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="417:37" pos:end="417:44"><expr pos:start="417:37" pos:end="417:44"><name pos:start="417:37" pos:end="417:44">nb_temps</name></expr></argument>, <argument pos:start="417:47" pos:end="417:56"><expr pos:start="417:47" pos:end="417:56"><name pos:start="417:47" pos:end="417:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:38"><expr pos:start="419:17" pos:end="419:37"><name pos:start="419:17" pos:end="419:27"><name pos:start="419:17" pos:end="419:24">gen_args</name><index pos:start="419:25" pos:end="419:27">[<expr pos:start="419:26" pos:end="419:26"><literal type="number" pos:start="419:26" pos:end="419:26">0</literal></expr>]</index></name> <operator pos:start="419:29" pos:end="419:29">=</operator> <name pos:start="419:31" pos:end="419:37"><name pos:start="419:31" pos:end="419:34">args</name><index pos:start="419:35" pos:end="419:37">[<expr pos:start="419:36" pos:end="419:36"><literal type="number" pos:start="419:36" pos:end="419:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:38"><expr pos:start="421:17" pos:end="421:37"><name pos:start="421:17" pos:end="421:27"><name pos:start="421:17" pos:end="421:24">gen_args</name><index pos:start="421:25" pos:end="421:27">[<expr pos:start="421:26" pos:end="421:26"><literal type="number" pos:start="421:26" pos:end="421:26">1</literal></expr>]</index></name> <operator pos:start="421:29" pos:end="421:29">=</operator> <name pos:start="421:31" pos:end="421:37"><name pos:start="421:31" pos:end="421:34">args</name><index pos:start="421:35" pos:end="421:37">[<expr pos:start="421:36" pos:end="421:36"><literal type="number" pos:start="421:36" pos:end="421:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:26"><expr pos:start="425:13" pos:end="425:25"><name pos:start="425:13" pos:end="425:20">gen_args</name> <operator pos:start="425:22" pos:end="425:23">+=</operator> <literal type="number" pos:start="425:25" pos:end="425:25">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:22"><expr pos:start="427:13" pos:end="427:21"><name pos:start="427:13" pos:end="427:16">args</name> <operator pos:start="427:18" pos:end="427:19">+=</operator> <literal type="number" pos:start="427:21" pos:end="427:21">2</literal></expr>;</expr_stmt>

            <break pos:start="429:13" pos:end="429:18">break;</break>

        <expr_stmt pos:start="431:9" pos:end="461:27"><expr pos:start="431:9" pos:end="461:27"><call pos:start="431:9" pos:end="431:26"><name pos:start="431:9" pos:end="431:21">CASE_OP_32_64</name><argument_list pos:start="431:22" pos:end="431:26">(<argument pos:start="431:23" pos:end="431:25"><expr pos:start="431:23" pos:end="431:25"><name pos:start="431:23" pos:end="431:25">add</name></expr></argument>)</argument_list></call><operator pos:start="431:27" pos:end="431:27">:</operator>

        <call pos:start="433:9" pos:end="433:26"><name pos:start="433:9" pos:end="433:21">CASE_OP_32_64</name><argument_list pos:start="433:22" pos:end="433:26">(<argument pos:start="433:23" pos:end="433:25"><expr pos:start="433:23" pos:end="433:25"><name pos:start="433:23" pos:end="433:25">sub</name></expr></argument>)</argument_list></call><operator pos:start="433:27" pos:end="433:27">:</operator>

        <call pos:start="435:9" pos:end="435:26"><name pos:start="435:9" pos:end="435:21">CASE_OP_32_64</name><argument_list pos:start="435:22" pos:end="435:26">(<argument pos:start="435:23" pos:end="435:25"><expr pos:start="435:23" pos:end="435:25"><name pos:start="435:23" pos:end="435:25">mul</name></expr></argument>)</argument_list></call><operator pos:start="435:27" pos:end="435:27">:</operator>

        <call pos:start="437:9" pos:end="437:25"><name pos:start="437:9" pos:end="437:21">CASE_OP_32_64</name><argument_list pos:start="437:22" pos:end="437:25">(<argument pos:start="437:23" pos:end="437:24"><expr pos:start="437:23" pos:end="437:24"><name pos:start="437:23" pos:end="437:24">or</name></expr></argument>)</argument_list></call><operator pos:start="437:26" pos:end="437:26">:</operator>

        <call pos:start="439:9" pos:end="439:26"><name pos:start="439:9" pos:end="439:21">CASE_OP_32_64</name><argument_list pos:start="439:22" pos:end="439:26">(<argument pos:start="439:23" pos:end="439:25"><expr pos:start="439:23" pos:end="439:25"><name pos:start="439:23" pos:end="439:25">and</name></expr></argument>)</argument_list></call><operator pos:start="439:27" pos:end="439:27">:</operator>

        <call pos:start="441:9" pos:end="441:26"><name pos:start="441:9" pos:end="441:21">CASE_OP_32_64</name><argument_list pos:start="441:22" pos:end="441:26">(<argument pos:start="441:23" pos:end="441:25"><expr pos:start="441:23" pos:end="441:25"><name pos:start="441:23" pos:end="441:25">xor</name></expr></argument>)</argument_list></call><operator pos:start="441:27" pos:end="441:27">:</operator>

        <call pos:start="443:9" pos:end="443:26"><name pos:start="443:9" pos:end="443:21">CASE_OP_32_64</name><argument_list pos:start="443:22" pos:end="443:26">(<argument pos:start="443:23" pos:end="443:25"><expr pos:start="443:23" pos:end="443:25"><name pos:start="443:23" pos:end="443:25">shl</name></expr></argument>)</argument_list></call><operator pos:start="443:27" pos:end="443:27">:</operator>

        <call pos:start="445:9" pos:end="445:26"><name pos:start="445:9" pos:end="445:21">CASE_OP_32_64</name><argument_list pos:start="445:22" pos:end="445:26">(<argument pos:start="445:23" pos:end="445:25"><expr pos:start="445:23" pos:end="445:25"><name pos:start="445:23" pos:end="445:25">shr</name></expr></argument>)</argument_list></call><operator pos:start="445:27" pos:end="445:27">:</operator>

        <call pos:start="447:9" pos:end="447:26"><name pos:start="447:9" pos:end="447:21">CASE_OP_32_64</name><argument_list pos:start="447:22" pos:end="447:26">(<argument pos:start="447:23" pos:end="447:25"><expr pos:start="447:23" pos:end="447:25"><name pos:start="447:23" pos:end="447:25">sar</name></expr></argument>)</argument_list></call><operator pos:start="447:27" pos:end="447:27">:</operator>

        <call pos:start="449:9" pos:end="449:27"><name pos:start="449:9" pos:end="449:21">CASE_OP_32_64</name><argument_list pos:start="449:22" pos:end="449:27">(<argument pos:start="449:23" pos:end="449:26"><expr pos:start="449:23" pos:end="449:26"><name pos:start="449:23" pos:end="449:26">rotl</name></expr></argument>)</argument_list></call><operator pos:start="449:28" pos:end="449:28">:</operator>

        <call pos:start="451:9" pos:end="451:27"><name pos:start="451:9" pos:end="451:21">CASE_OP_32_64</name><argument_list pos:start="451:22" pos:end="451:27">(<argument pos:start="451:23" pos:end="451:26"><expr pos:start="451:23" pos:end="451:26"><name pos:start="451:23" pos:end="451:26">rotr</name></expr></argument>)</argument_list></call><operator pos:start="451:28" pos:end="451:28">:</operator>

        <call pos:start="453:9" pos:end="453:27"><name pos:start="453:9" pos:end="453:21">CASE_OP_32_64</name><argument_list pos:start="453:22" pos:end="453:27">(<argument pos:start="453:23" pos:end="453:26"><expr pos:start="453:23" pos:end="453:26"><name pos:start="453:23" pos:end="453:26">andc</name></expr></argument>)</argument_list></call><operator pos:start="453:28" pos:end="453:28">:</operator>

        <call pos:start="455:9" pos:end="455:26"><name pos:start="455:9" pos:end="455:21">CASE_OP_32_64</name><argument_list pos:start="455:22" pos:end="455:26">(<argument pos:start="455:23" pos:end="455:25"><expr pos:start="455:23" pos:end="455:25"><name pos:start="455:23" pos:end="455:25">orc</name></expr></argument>)</argument_list></call><operator pos:start="455:27" pos:end="455:27">:</operator>

        <call pos:start="457:9" pos:end="457:26"><name pos:start="457:9" pos:end="457:21">CASE_OP_32_64</name><argument_list pos:start="457:22" pos:end="457:26">(<argument pos:start="457:23" pos:end="457:25"><expr pos:start="457:23" pos:end="457:25"><name pos:start="457:23" pos:end="457:25">eqv</name></expr></argument>)</argument_list></call><operator pos:start="457:27" pos:end="457:27">:</operator>

        <call pos:start="459:9" pos:end="459:27"><name pos:start="459:9" pos:end="459:21">CASE_OP_32_64</name><argument_list pos:start="459:22" pos:end="459:27">(<argument pos:start="459:23" pos:end="459:26"><expr pos:start="459:23" pos:end="459:26"><name pos:start="459:23" pos:end="459:26">nand</name></expr></argument>)</argument_list></call><operator pos:start="459:28" pos:end="459:28">:</operator>

        <call pos:start="461:9" pos:end="461:26"><name pos:start="461:9" pos:end="461:21">CASE_OP_32_64</name><argument_list pos:start="461:22" pos:end="461:26">(<argument pos:start="461:23" pos:end="461:25"><expr pos:start="461:23" pos:end="461:25"><name pos:start="461:23" pos:end="461:25">nor</name></expr></argument>)</argument_list></call><operator pos:start="461:27" pos:end="461:27">:</operator></expr></expr_stmt>

            <if_stmt pos:start="463:13" pos:end="489:13"><if pos:start="463:13" pos:end="477:13">if <condition pos:start="463:16" pos:end="465:58">(<expr pos:start="463:17" pos:end="465:57"><name pos:start="463:17" pos:end="463:30"><name pos:start="463:17" pos:end="463:21">temps</name><index pos:start="463:22" pos:end="463:30">[<expr pos:start="463:23" pos:end="463:29"><name pos:start="463:23" pos:end="463:29"><name pos:start="463:23" pos:end="463:26">args</name><index pos:start="463:27" pos:end="463:29">[<expr pos:start="463:28" pos:end="463:28"><literal type="number" pos:start="463:28" pos:end="463:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="463:31" pos:end="463:31">.</operator><name pos:start="463:32" pos:end="463:36">state</name> <operator pos:start="463:38" pos:end="463:39">==</operator> <name pos:start="463:41" pos:end="463:54">TCG_TEMP_CONST</name>

                <operator pos:start="465:17" pos:end="465:18">&amp;&amp;</operator> <name pos:start="465:20" pos:end="465:33"><name pos:start="465:20" pos:end="465:24">temps</name><index pos:start="465:25" pos:end="465:33">[<expr pos:start="465:26" pos:end="465:32"><name pos:start="465:26" pos:end="465:32"><name pos:start="465:26" pos:end="465:29">args</name><index pos:start="465:30" pos:end="465:32">[<expr pos:start="465:31" pos:end="465:31"><literal type="number" pos:start="465:31" pos:end="465:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="465:34" pos:end="465:34">.</operator><name pos:start="465:35" pos:end="465:39">state</name> <operator pos:start="465:41" pos:end="465:42">==</operator> <name pos:start="465:44" pos:end="465:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="465:60" pos:end="477:13">{<block_content pos:start="467:17" pos:end="475:30">

                <expr_stmt pos:start="467:17" pos:end="467:55"><expr pos:start="467:17" pos:end="467:54"><name pos:start="467:17" pos:end="467:37"><name pos:start="467:17" pos:end="467:27">gen_opc_buf</name><index pos:start="467:28" pos:end="467:37">[<expr pos:start="467:29" pos:end="467:36"><name pos:start="467:29" pos:end="467:36">op_index</name></expr>]</index></name> <operator pos:start="467:39" pos:end="467:39">=</operator> <call pos:start="467:41" pos:end="467:54"><name pos:start="467:41" pos:end="467:50">op_to_movi</name><argument_list pos:start="467:51" pos:end="467:54">(<argument pos:start="467:52" pos:end="467:53"><expr pos:start="467:52" pos:end="467:53"><name pos:start="467:52" pos:end="467:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="469:17" pos:end="471:62"><expr pos:start="469:17" pos:end="471:61"><name pos:start="469:17" pos:end="469:19">tmp</name> <operator pos:start="469:21" pos:end="469:21">=</operator> <call pos:start="469:23" pos:end="471:61"><name pos:start="469:23" pos:end="469:41">do_constant_folding</name><argument_list pos:start="469:42" pos:end="471:61">(<argument pos:start="469:43" pos:end="469:44"><expr pos:start="469:43" pos:end="469:44"><name pos:start="469:43" pos:end="469:44">op</name></expr></argument>, <argument pos:start="469:47" pos:end="469:64"><expr pos:start="469:47" pos:end="469:64"><name pos:start="469:47" pos:end="469:60"><name pos:start="469:47" pos:end="469:51">temps</name><index pos:start="469:52" pos:end="469:60">[<expr pos:start="469:53" pos:end="469:59"><name pos:start="469:53" pos:end="469:59"><name pos:start="469:53" pos:end="469:56">args</name><index pos:start="469:57" pos:end="469:59">[<expr pos:start="469:58" pos:end="469:58"><literal type="number" pos:start="469:58" pos:end="469:58">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="469:61" pos:end="469:61">.</operator><name pos:start="469:62" pos:end="469:64">val</name></expr></argument>,

                                          <argument pos:start="471:43" pos:end="471:60"><expr pos:start="471:43" pos:end="471:60"><name pos:start="471:43" pos:end="471:56"><name pos:start="471:43" pos:end="471:47">temps</name><index pos:start="471:48" pos:end="471:56">[<expr pos:start="471:49" pos:end="471:55"><name pos:start="471:49" pos:end="471:55"><name pos:start="471:49" pos:end="471:52">args</name><index pos:start="471:53" pos:end="471:55">[<expr pos:start="471:54" pos:end="471:54"><literal type="number" pos:start="471:54" pos:end="471:54">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="471:57" pos:end="471:57">.</operator><name pos:start="471:58" pos:end="471:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="473:17" pos:end="473:79"><expr pos:start="473:17" pos:end="473:78"><call pos:start="473:17" pos:end="473:78"><name pos:start="473:17" pos:end="473:32">tcg_opt_gen_movi</name><argument_list pos:start="473:33" pos:end="473:78">(<argument pos:start="473:34" pos:end="473:41"><expr pos:start="473:34" pos:end="473:41"><name pos:start="473:34" pos:end="473:41">gen_args</name></expr></argument>, <argument pos:start="473:44" pos:end="473:50"><expr pos:start="473:44" pos:end="473:50"><name pos:start="473:44" pos:end="473:50"><name pos:start="473:44" pos:end="473:47">args</name><index pos:start="473:48" pos:end="473:50">[<expr pos:start="473:49" pos:end="473:49"><literal type="number" pos:start="473:49" pos:end="473:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="473:53" pos:end="473:55"><expr pos:start="473:53" pos:end="473:55"><name pos:start="473:53" pos:end="473:55">tmp</name></expr></argument>, <argument pos:start="473:58" pos:end="473:65"><expr pos:start="473:58" pos:end="473:65"><name pos:start="473:58" pos:end="473:65">nb_temps</name></expr></argument>, <argument pos:start="473:68" pos:end="473:77"><expr pos:start="473:68" pos:end="473:77"><name pos:start="473:68" pos:end="473:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:30"><expr pos:start="475:17" pos:end="475:29"><name pos:start="475:17" pos:end="475:24">gen_args</name> <operator pos:start="475:26" pos:end="475:27">+=</operator> <literal type="number" pos:start="475:29" pos:end="475:29">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="477:15" pos:end="489:13">else <block pos:start="477:20" pos:end="489:13">{<block_content pos:start="479:17" pos:end="487:30">

                <expr_stmt pos:start="479:17" pos:end="479:58"><expr pos:start="479:17" pos:end="479:57"><call pos:start="479:17" pos:end="479:57"><name pos:start="479:17" pos:end="479:26">reset_temp</name><argument_list pos:start="479:27" pos:end="479:57">(<argument pos:start="479:28" pos:end="479:34"><expr pos:start="479:28" pos:end="479:34"><name pos:start="479:28" pos:end="479:34"><name pos:start="479:28" pos:end="479:31">args</name><index pos:start="479:32" pos:end="479:34">[<expr pos:start="479:33" pos:end="479:33"><literal type="number" pos:start="479:33" pos:end="479:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="479:37" pos:end="479:44"><expr pos:start="479:37" pos:end="479:44"><name pos:start="479:37" pos:end="479:44">nb_temps</name></expr></argument>, <argument pos:start="479:47" pos:end="479:56"><expr pos:start="479:47" pos:end="479:56"><name pos:start="479:47" pos:end="479:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="481:17" pos:end="481:38"><expr pos:start="481:17" pos:end="481:37"><name pos:start="481:17" pos:end="481:27"><name pos:start="481:17" pos:end="481:24">gen_args</name><index pos:start="481:25" pos:end="481:27">[<expr pos:start="481:26" pos:end="481:26"><literal type="number" pos:start="481:26" pos:end="481:26">0</literal></expr>]</index></name> <operator pos:start="481:29" pos:end="481:29">=</operator> <name pos:start="481:31" pos:end="481:37"><name pos:start="481:31" pos:end="481:34">args</name><index pos:start="481:35" pos:end="481:37">[<expr pos:start="481:36" pos:end="481:36"><literal type="number" pos:start="481:36" pos:end="481:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="483:17" pos:end="483:38"><expr pos:start="483:17" pos:end="483:37"><name pos:start="483:17" pos:end="483:27"><name pos:start="483:17" pos:end="483:24">gen_args</name><index pos:start="483:25" pos:end="483:27">[<expr pos:start="483:26" pos:end="483:26"><literal type="number" pos:start="483:26" pos:end="483:26">1</literal></expr>]</index></name> <operator pos:start="483:29" pos:end="483:29">=</operator> <name pos:start="483:31" pos:end="483:37"><name pos:start="483:31" pos:end="483:34">args</name><index pos:start="483:35" pos:end="483:37">[<expr pos:start="483:36" pos:end="483:36"><literal type="number" pos:start="483:36" pos:end="483:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="485:17" pos:end="485:38"><expr pos:start="485:17" pos:end="485:37"><name pos:start="485:17" pos:end="485:27"><name pos:start="485:17" pos:end="485:24">gen_args</name><index pos:start="485:25" pos:end="485:27">[<expr pos:start="485:26" pos:end="485:26"><literal type="number" pos:start="485:26" pos:end="485:26">2</literal></expr>]</index></name> <operator pos:start="485:29" pos:end="485:29">=</operator> <name pos:start="485:31" pos:end="485:37"><name pos:start="485:31" pos:end="485:34">args</name><index pos:start="485:35" pos:end="485:37">[<expr pos:start="485:36" pos:end="485:36"><literal type="number" pos:start="485:36" pos:end="485:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:30"><expr pos:start="487:17" pos:end="487:29"><name pos:start="487:17" pos:end="487:24">gen_args</name> <operator pos:start="487:26" pos:end="487:27">+=</operator> <literal type="number" pos:start="487:29" pos:end="487:29">3</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:22"><expr pos:start="491:13" pos:end="491:21"><name pos:start="491:13" pos:end="491:16">args</name> <operator pos:start="491:18" pos:end="491:19">+=</operator> <literal type="number" pos:start="491:21" pos:end="491:21">3</literal></expr>;</expr_stmt>

            <break pos:start="493:13" pos:end="493:18">break;</break>

        <expr_stmt pos:start="495:9" pos:end="495:31"><expr pos:start="495:9" pos:end="495:31"><call pos:start="495:9" pos:end="495:30"><name pos:start="495:9" pos:end="495:21">CASE_OP_32_64</name><argument_list pos:start="495:22" pos:end="495:30">(<argument pos:start="495:23" pos:end="495:29"><expr pos:start="495:23" pos:end="495:29"><name pos:start="495:23" pos:end="495:29">setcond</name></expr></argument>)</argument_list></call><operator pos:start="495:31" pos:end="495:31">:</operator></expr></expr_stmt>

            <if_stmt pos:start="497:13" pos:end="525:13"><if pos:start="497:13" pos:end="511:13">if <condition pos:start="497:16" pos:end="499:58">(<expr pos:start="497:17" pos:end="499:57"><name pos:start="497:17" pos:end="497:30"><name pos:start="497:17" pos:end="497:21">temps</name><index pos:start="497:22" pos:end="497:30">[<expr pos:start="497:23" pos:end="497:29"><name pos:start="497:23" pos:end="497:29"><name pos:start="497:23" pos:end="497:26">args</name><index pos:start="497:27" pos:end="497:29">[<expr pos:start="497:28" pos:end="497:28"><literal type="number" pos:start="497:28" pos:end="497:28">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="497:31" pos:end="497:31">.</operator><name pos:start="497:32" pos:end="497:36">state</name> <operator pos:start="497:38" pos:end="497:39">==</operator> <name pos:start="497:41" pos:end="497:54">TCG_TEMP_CONST</name>

                <operator pos:start="499:17" pos:end="499:18">&amp;&amp;</operator> <name pos:start="499:20" pos:end="499:33"><name pos:start="499:20" pos:end="499:24">temps</name><index pos:start="499:25" pos:end="499:33">[<expr pos:start="499:26" pos:end="499:32"><name pos:start="499:26" pos:end="499:32"><name pos:start="499:26" pos:end="499:29">args</name><index pos:start="499:30" pos:end="499:32">[<expr pos:start="499:31" pos:end="499:31"><literal type="number" pos:start="499:31" pos:end="499:31">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="499:34" pos:end="499:34">.</operator><name pos:start="499:35" pos:end="499:39">state</name> <operator pos:start="499:41" pos:end="499:42">==</operator> <name pos:start="499:44" pos:end="499:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="499:60" pos:end="511:13">{<block_content pos:start="501:17" pos:end="509:30">

                <expr_stmt pos:start="501:17" pos:end="501:55"><expr pos:start="501:17" pos:end="501:54"><name pos:start="501:17" pos:end="501:37"><name pos:start="501:17" pos:end="501:27">gen_opc_buf</name><index pos:start="501:28" pos:end="501:37">[<expr pos:start="501:29" pos:end="501:36"><name pos:start="501:29" pos:end="501:36">op_index</name></expr>]</index></name> <operator pos:start="501:39" pos:end="501:39">=</operator> <call pos:start="501:41" pos:end="501:54"><name pos:start="501:41" pos:end="501:50">op_to_movi</name><argument_list pos:start="501:51" pos:end="501:54">(<argument pos:start="501:52" pos:end="501:53"><expr pos:start="501:52" pos:end="501:53"><name pos:start="501:52" pos:end="501:53">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="505:76"><expr pos:start="503:17" pos:end="505:75"><name pos:start="503:17" pos:end="503:19">tmp</name> <operator pos:start="503:21" pos:end="503:21">=</operator> <call pos:start="503:23" pos:end="505:75"><name pos:start="503:23" pos:end="503:46">do_constant_folding_cond</name><argument_list pos:start="503:47" pos:end="505:75">(<argument pos:start="503:48" pos:end="503:49"><expr pos:start="503:48" pos:end="503:49"><name pos:start="503:48" pos:end="503:49">op</name></expr></argument>, <argument pos:start="503:52" pos:end="503:69"><expr pos:start="503:52" pos:end="503:69"><name pos:start="503:52" pos:end="503:65"><name pos:start="503:52" pos:end="503:56">temps</name><index pos:start="503:57" pos:end="503:65">[<expr pos:start="503:58" pos:end="503:64"><name pos:start="503:58" pos:end="503:64"><name pos:start="503:58" pos:end="503:61">args</name><index pos:start="503:62" pos:end="503:64">[<expr pos:start="503:63" pos:end="503:63"><literal type="number" pos:start="503:63" pos:end="503:63">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="503:66" pos:end="503:66">.</operator><name pos:start="503:67" pos:end="503:69">val</name></expr></argument>,

                                               <argument pos:start="505:48" pos:end="505:65"><expr pos:start="505:48" pos:end="505:65"><name pos:start="505:48" pos:end="505:61"><name pos:start="505:48" pos:end="505:52">temps</name><index pos:start="505:53" pos:end="505:61">[<expr pos:start="505:54" pos:end="505:60"><name pos:start="505:54" pos:end="505:60"><name pos:start="505:54" pos:end="505:57">args</name><index pos:start="505:58" pos:end="505:60">[<expr pos:start="505:59" pos:end="505:59"><literal type="number" pos:start="505:59" pos:end="505:59">2</literal></expr>]</index></name></expr>]</index></name><operator pos:start="505:62" pos:end="505:62">.</operator><name pos:start="505:63" pos:end="505:65">val</name></expr></argument>, <argument pos:start="505:68" pos:end="505:74"><expr pos:start="505:68" pos:end="505:74"><name pos:start="505:68" pos:end="505:74"><name pos:start="505:68" pos:end="505:71">args</name><index pos:start="505:72" pos:end="505:74">[<expr pos:start="505:73" pos:end="505:73"><literal type="number" pos:start="505:73" pos:end="505:73">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:79"><expr pos:start="507:17" pos:end="507:78"><call pos:start="507:17" pos:end="507:78"><name pos:start="507:17" pos:end="507:32">tcg_opt_gen_movi</name><argument_list pos:start="507:33" pos:end="507:78">(<argument pos:start="507:34" pos:end="507:41"><expr pos:start="507:34" pos:end="507:41"><name pos:start="507:34" pos:end="507:41">gen_args</name></expr></argument>, <argument pos:start="507:44" pos:end="507:50"><expr pos:start="507:44" pos:end="507:50"><name pos:start="507:44" pos:end="507:50"><name pos:start="507:44" pos:end="507:47">args</name><index pos:start="507:48" pos:end="507:50">[<expr pos:start="507:49" pos:end="507:49"><literal type="number" pos:start="507:49" pos:end="507:49">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="507:53" pos:end="507:55"><expr pos:start="507:53" pos:end="507:55"><name pos:start="507:53" pos:end="507:55">tmp</name></expr></argument>, <argument pos:start="507:58" pos:end="507:65"><expr pos:start="507:58" pos:end="507:65"><name pos:start="507:58" pos:end="507:65">nb_temps</name></expr></argument>, <argument pos:start="507:68" pos:end="507:77"><expr pos:start="507:68" pos:end="507:77"><name pos:start="507:68" pos:end="507:77">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="509:17" pos:end="509:30"><expr pos:start="509:17" pos:end="509:29"><name pos:start="509:17" pos:end="509:24">gen_args</name> <operator pos:start="509:26" pos:end="509:27">+=</operator> <literal type="number" pos:start="509:29" pos:end="509:29">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="511:15" pos:end="525:13">else <block pos:start="511:20" pos:end="525:13">{<block_content pos:start="513:17" pos:end="523:30">

                <expr_stmt pos:start="513:17" pos:end="513:58"><expr pos:start="513:17" pos:end="513:57"><call pos:start="513:17" pos:end="513:57"><name pos:start="513:17" pos:end="513:26">reset_temp</name><argument_list pos:start="513:27" pos:end="513:57">(<argument pos:start="513:28" pos:end="513:34"><expr pos:start="513:28" pos:end="513:34"><name pos:start="513:28" pos:end="513:34"><name pos:start="513:28" pos:end="513:31">args</name><index pos:start="513:32" pos:end="513:34">[<expr pos:start="513:33" pos:end="513:33"><literal type="number" pos:start="513:33" pos:end="513:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="513:37" pos:end="513:44"><expr pos:start="513:37" pos:end="513:44"><name pos:start="513:37" pos:end="513:44">nb_temps</name></expr></argument>, <argument pos:start="513:47" pos:end="513:56"><expr pos:start="513:47" pos:end="513:56"><name pos:start="513:47" pos:end="513:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="515:17" pos:end="515:38"><expr pos:start="515:17" pos:end="515:37"><name pos:start="515:17" pos:end="515:27"><name pos:start="515:17" pos:end="515:24">gen_args</name><index pos:start="515:25" pos:end="515:27">[<expr pos:start="515:26" pos:end="515:26"><literal type="number" pos:start="515:26" pos:end="515:26">0</literal></expr>]</index></name> <operator pos:start="515:29" pos:end="515:29">=</operator> <name pos:start="515:31" pos:end="515:37"><name pos:start="515:31" pos:end="515:34">args</name><index pos:start="515:35" pos:end="515:37">[<expr pos:start="515:36" pos:end="515:36"><literal type="number" pos:start="515:36" pos:end="515:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="517:17" pos:end="517:38"><expr pos:start="517:17" pos:end="517:37"><name pos:start="517:17" pos:end="517:27"><name pos:start="517:17" pos:end="517:24">gen_args</name><index pos:start="517:25" pos:end="517:27">[<expr pos:start="517:26" pos:end="517:26"><literal type="number" pos:start="517:26" pos:end="517:26">1</literal></expr>]</index></name> <operator pos:start="517:29" pos:end="517:29">=</operator> <name pos:start="517:31" pos:end="517:37"><name pos:start="517:31" pos:end="517:34">args</name><index pos:start="517:35" pos:end="517:37">[<expr pos:start="517:36" pos:end="517:36"><literal type="number" pos:start="517:36" pos:end="517:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="519:17" pos:end="519:38"><expr pos:start="519:17" pos:end="519:37"><name pos:start="519:17" pos:end="519:27"><name pos:start="519:17" pos:end="519:24">gen_args</name><index pos:start="519:25" pos:end="519:27">[<expr pos:start="519:26" pos:end="519:26"><literal type="number" pos:start="519:26" pos:end="519:26">2</literal></expr>]</index></name> <operator pos:start="519:29" pos:end="519:29">=</operator> <name pos:start="519:31" pos:end="519:37"><name pos:start="519:31" pos:end="519:34">args</name><index pos:start="519:35" pos:end="519:37">[<expr pos:start="519:36" pos:end="519:36"><literal type="number" pos:start="519:36" pos:end="519:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="521:17" pos:end="521:38"><expr pos:start="521:17" pos:end="521:37"><name pos:start="521:17" pos:end="521:27"><name pos:start="521:17" pos:end="521:24">gen_args</name><index pos:start="521:25" pos:end="521:27">[<expr pos:start="521:26" pos:end="521:26"><literal type="number" pos:start="521:26" pos:end="521:26">3</literal></expr>]</index></name> <operator pos:start="521:29" pos:end="521:29">=</operator> <name pos:start="521:31" pos:end="521:37"><name pos:start="521:31" pos:end="521:34">args</name><index pos:start="521:35" pos:end="521:37">[<expr pos:start="521:36" pos:end="521:36"><literal type="number" pos:start="521:36" pos:end="521:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="523:17" pos:end="523:30"><expr pos:start="523:17" pos:end="523:29"><name pos:start="523:17" pos:end="523:24">gen_args</name> <operator pos:start="523:26" pos:end="523:27">+=</operator> <literal type="number" pos:start="523:29" pos:end="523:29">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:22"><expr pos:start="527:13" pos:end="527:21"><name pos:start="527:13" pos:end="527:16">args</name> <operator pos:start="527:18" pos:end="527:19">+=</operator> <literal type="number" pos:start="527:21" pos:end="527:21">4</literal></expr>;</expr_stmt>

            <break pos:start="529:13" pos:end="529:18">break;</break>

        <expr_stmt pos:start="531:9" pos:end="531:30"><expr pos:start="531:9" pos:end="531:30"><call pos:start="531:9" pos:end="531:29"><name pos:start="531:9" pos:end="531:21">CASE_OP_32_64</name><argument_list pos:start="531:22" pos:end="531:29">(<argument pos:start="531:23" pos:end="531:28"><expr pos:start="531:23" pos:end="531:28"><name pos:start="531:23" pos:end="531:28">brcond</name></expr></argument>)</argument_list></call><operator pos:start="531:30" pos:end="531:30">:</operator></expr></expr_stmt>

            <if_stmt pos:start="533:13" pos:end="571:13"><if pos:start="533:13" pos:end="555:13">if <condition pos:start="533:16" pos:end="535:58">(<expr pos:start="533:17" pos:end="535:57"><name pos:start="533:17" pos:end="533:30"><name pos:start="533:17" pos:end="533:21">temps</name><index pos:start="533:22" pos:end="533:30">[<expr pos:start="533:23" pos:end="533:29"><name pos:start="533:23" pos:end="533:29"><name pos:start="533:23" pos:end="533:26">args</name><index pos:start="533:27" pos:end="533:29">[<expr pos:start="533:28" pos:end="533:28"><literal type="number" pos:start="533:28" pos:end="533:28">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="533:31" pos:end="533:31">.</operator><name pos:start="533:32" pos:end="533:36">state</name> <operator pos:start="533:38" pos:end="533:39">==</operator> <name pos:start="533:41" pos:end="533:54">TCG_TEMP_CONST</name>

                <operator pos:start="535:17" pos:end="535:18">&amp;&amp;</operator> <name pos:start="535:20" pos:end="535:33"><name pos:start="535:20" pos:end="535:24">temps</name><index pos:start="535:25" pos:end="535:33">[<expr pos:start="535:26" pos:end="535:32"><name pos:start="535:26" pos:end="535:32"><name pos:start="535:26" pos:end="535:29">args</name><index pos:start="535:30" pos:end="535:32">[<expr pos:start="535:31" pos:end="535:31"><literal type="number" pos:start="535:31" pos:end="535:31">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="535:34" pos:end="535:34">.</operator><name pos:start="535:35" pos:end="535:39">state</name> <operator pos:start="535:41" pos:end="535:42">==</operator> <name pos:start="535:44" pos:end="535:57">TCG_TEMP_CONST</name></expr>)</condition> <block pos:start="535:60" pos:end="555:13">{<block_content pos:start="537:17" pos:end="553:17">

                <if_stmt pos:start="537:17" pos:end="553:17"><if pos:start="537:17" pos:end="549:17">if <condition pos:start="537:20" pos:end="539:74">(<expr pos:start="537:21" pos:end="539:73"><call pos:start="537:21" pos:end="539:73"><name pos:start="537:21" pos:end="537:44">do_constant_folding_cond</name><argument_list pos:start="537:45" pos:end="539:73">(<argument pos:start="537:46" pos:end="537:47"><expr pos:start="537:46" pos:end="537:47"><name pos:start="537:46" pos:end="537:47">op</name></expr></argument>, <argument pos:start="537:50" pos:end="537:67"><expr pos:start="537:50" pos:end="537:67"><name pos:start="537:50" pos:end="537:63"><name pos:start="537:50" pos:end="537:54">temps</name><index pos:start="537:55" pos:end="537:63">[<expr pos:start="537:56" pos:end="537:62"><name pos:start="537:56" pos:end="537:62"><name pos:start="537:56" pos:end="537:59">args</name><index pos:start="537:60" pos:end="537:62">[<expr pos:start="537:61" pos:end="537:61"><literal type="number" pos:start="537:61" pos:end="537:61">0</literal></expr>]</index></name></expr>]</index></name><operator pos:start="537:64" pos:end="537:64">.</operator><name pos:start="537:65" pos:end="537:67">val</name></expr></argument>,

                                             <argument pos:start="539:46" pos:end="539:63"><expr pos:start="539:46" pos:end="539:63"><name pos:start="539:46" pos:end="539:59"><name pos:start="539:46" pos:end="539:50">temps</name><index pos:start="539:51" pos:end="539:59">[<expr pos:start="539:52" pos:end="539:58"><name pos:start="539:52" pos:end="539:58"><name pos:start="539:52" pos:end="539:55">args</name><index pos:start="539:56" pos:end="539:58">[<expr pos:start="539:57" pos:end="539:57"><literal type="number" pos:start="539:57" pos:end="539:57">1</literal></expr>]</index></name></expr>]</index></name><operator pos:start="539:60" pos:end="539:60">.</operator><name pos:start="539:61" pos:end="539:63">val</name></expr></argument>, <argument pos:start="539:66" pos:end="539:72"><expr pos:start="539:66" pos:end="539:72"><name pos:start="539:66" pos:end="539:72"><name pos:start="539:66" pos:end="539:69">args</name><index pos:start="539:70" pos:end="539:72">[<expr pos:start="539:71" pos:end="539:71"><literal type="number" pos:start="539:71" pos:end="539:71">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:76" pos:end="549:17">{<block_content pos:start="541:21" pos:end="547:34">

                    <expr_stmt pos:start="541:21" pos:end="541:78"><expr pos:start="541:21" pos:end="541:77"><call pos:start="541:21" pos:end="541:77"><name pos:start="541:21" pos:end="541:26">memset</name><argument_list pos:start="541:27" pos:end="541:77">(<argument pos:start="541:28" pos:end="541:32"><expr pos:start="541:28" pos:end="541:32"><name pos:start="541:28" pos:end="541:32">temps</name></expr></argument>, <argument pos:start="541:35" pos:end="541:35"><expr pos:start="541:35" pos:end="541:35"><literal type="number" pos:start="541:35" pos:end="541:35">0</literal></expr></argument>, <argument pos:start="541:38" pos:end="541:76"><expr pos:start="541:38" pos:end="541:76"><name pos:start="541:38" pos:end="541:45">nb_temps</name> <operator pos:start="541:47" pos:end="541:47">*</operator> <sizeof pos:start="541:49" pos:end="541:76">sizeof<argument_list pos:start="541:55" pos:end="541:76">(<argument pos:start="541:56" pos:end="541:75"><expr pos:start="541:56" pos:end="541:75">struct <name pos:start="541:63" pos:end="541:75">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="543:21" pos:end="543:56"><expr pos:start="543:21" pos:end="543:55"><name pos:start="543:21" pos:end="543:41"><name pos:start="543:21" pos:end="543:31">gen_opc_buf</name><index pos:start="543:32" pos:end="543:41">[<expr pos:start="543:33" pos:end="543:40"><name pos:start="543:33" pos:end="543:40">op_index</name></expr>]</index></name> <operator pos:start="543:43" pos:end="543:43">=</operator> <name pos:start="543:45" pos:end="543:55">INDEX_op_br</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="545:21" pos:end="545:42"><expr pos:start="545:21" pos:end="545:41"><name pos:start="545:21" pos:end="545:31"><name pos:start="545:21" pos:end="545:28">gen_args</name><index pos:start="545:29" pos:end="545:31">[<expr pos:start="545:30" pos:end="545:30"><literal type="number" pos:start="545:30" pos:end="545:30">0</literal></expr>]</index></name> <operator pos:start="545:33" pos:end="545:33">=</operator> <name pos:start="545:35" pos:end="545:41"><name pos:start="545:35" pos:end="545:38">args</name><index pos:start="545:39" pos:end="545:41">[<expr pos:start="545:40" pos:end="545:40"><literal type="number" pos:start="545:40" pos:end="545:40">3</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="547:21" pos:end="547:34"><expr pos:start="547:21" pos:end="547:33"><name pos:start="547:21" pos:end="547:28">gen_args</name> <operator pos:start="547:30" pos:end="547:31">+=</operator> <literal type="number" pos:start="547:33" pos:end="547:33">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="549:19" pos:end="553:17">else <block pos:start="549:24" pos:end="553:17">{<block_content pos:start="551:21" pos:end="551:57">

                    <expr_stmt pos:start="551:21" pos:end="551:57"><expr pos:start="551:21" pos:end="551:56"><name pos:start="551:21" pos:end="551:41"><name pos:start="551:21" pos:end="551:31">gen_opc_buf</name><index pos:start="551:32" pos:end="551:41">[<expr pos:start="551:33" pos:end="551:40"><name pos:start="551:33" pos:end="551:40">op_index</name></expr>]</index></name> <operator pos:start="551:43" pos:end="551:43">=</operator> <name pos:start="551:45" pos:end="551:56">INDEX_op_nop</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="555:15" pos:end="571:13">else <block pos:start="555:20" pos:end="571:13">{<block_content pos:start="557:17" pos:end="569:30">

                <expr_stmt pos:start="557:17" pos:end="557:74"><expr pos:start="557:17" pos:end="557:73"><call pos:start="557:17" pos:end="557:73"><name pos:start="557:17" pos:end="557:22">memset</name><argument_list pos:start="557:23" pos:end="557:73">(<argument pos:start="557:24" pos:end="557:28"><expr pos:start="557:24" pos:end="557:28"><name pos:start="557:24" pos:end="557:28">temps</name></expr></argument>, <argument pos:start="557:31" pos:end="557:31"><expr pos:start="557:31" pos:end="557:31"><literal type="number" pos:start="557:31" pos:end="557:31">0</literal></expr></argument>, <argument pos:start="557:34" pos:end="557:72"><expr pos:start="557:34" pos:end="557:72"><name pos:start="557:34" pos:end="557:41">nb_temps</name> <operator pos:start="557:43" pos:end="557:43">*</operator> <sizeof pos:start="557:45" pos:end="557:72">sizeof<argument_list pos:start="557:51" pos:end="557:72">(<argument pos:start="557:52" pos:end="557:71"><expr pos:start="557:52" pos:end="557:71">struct <name pos:start="557:59" pos:end="557:71">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="559:17" pos:end="559:58"><expr pos:start="559:17" pos:end="559:57"><call pos:start="559:17" pos:end="559:57"><name pos:start="559:17" pos:end="559:26">reset_temp</name><argument_list pos:start="559:27" pos:end="559:57">(<argument pos:start="559:28" pos:end="559:34"><expr pos:start="559:28" pos:end="559:34"><name pos:start="559:28" pos:end="559:34"><name pos:start="559:28" pos:end="559:31">args</name><index pos:start="559:32" pos:end="559:34">[<expr pos:start="559:33" pos:end="559:33"><literal type="number" pos:start="559:33" pos:end="559:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="559:37" pos:end="559:44"><expr pos:start="559:37" pos:end="559:44"><name pos:start="559:37" pos:end="559:44">nb_temps</name></expr></argument>, <argument pos:start="559:47" pos:end="559:56"><expr pos:start="559:47" pos:end="559:56"><name pos:start="559:47" pos:end="559:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:38"><expr pos:start="561:17" pos:end="561:37"><name pos:start="561:17" pos:end="561:27"><name pos:start="561:17" pos:end="561:24">gen_args</name><index pos:start="561:25" pos:end="561:27">[<expr pos:start="561:26" pos:end="561:26"><literal type="number" pos:start="561:26" pos:end="561:26">0</literal></expr>]</index></name> <operator pos:start="561:29" pos:end="561:29">=</operator> <name pos:start="561:31" pos:end="561:37"><name pos:start="561:31" pos:end="561:34">args</name><index pos:start="561:35" pos:end="561:37">[<expr pos:start="561:36" pos:end="561:36"><literal type="number" pos:start="561:36" pos:end="561:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:38"><expr pos:start="563:17" pos:end="563:37"><name pos:start="563:17" pos:end="563:27"><name pos:start="563:17" pos:end="563:24">gen_args</name><index pos:start="563:25" pos:end="563:27">[<expr pos:start="563:26" pos:end="563:26"><literal type="number" pos:start="563:26" pos:end="563:26">1</literal></expr>]</index></name> <operator pos:start="563:29" pos:end="563:29">=</operator> <name pos:start="563:31" pos:end="563:37"><name pos:start="563:31" pos:end="563:34">args</name><index pos:start="563:35" pos:end="563:37">[<expr pos:start="563:36" pos:end="563:36"><literal type="number" pos:start="563:36" pos:end="563:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:38"><expr pos:start="565:17" pos:end="565:37"><name pos:start="565:17" pos:end="565:27"><name pos:start="565:17" pos:end="565:24">gen_args</name><index pos:start="565:25" pos:end="565:27">[<expr pos:start="565:26" pos:end="565:26"><literal type="number" pos:start="565:26" pos:end="565:26">2</literal></expr>]</index></name> <operator pos:start="565:29" pos:end="565:29">=</operator> <name pos:start="565:31" pos:end="565:37"><name pos:start="565:31" pos:end="565:34">args</name><index pos:start="565:35" pos:end="565:37">[<expr pos:start="565:36" pos:end="565:36"><literal type="number" pos:start="565:36" pos:end="565:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:38"><expr pos:start="567:17" pos:end="567:37"><name pos:start="567:17" pos:end="567:27"><name pos:start="567:17" pos:end="567:24">gen_args</name><index pos:start="567:25" pos:end="567:27">[<expr pos:start="567:26" pos:end="567:26"><literal type="number" pos:start="567:26" pos:end="567:26">3</literal></expr>]</index></name> <operator pos:start="567:29" pos:end="567:29">=</operator> <name pos:start="567:31" pos:end="567:37"><name pos:start="567:31" pos:end="567:34">args</name><index pos:start="567:35" pos:end="567:37">[<expr pos:start="567:36" pos:end="567:36"><literal type="number" pos:start="567:36" pos:end="567:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="569:17" pos:end="569:30"><expr pos:start="569:17" pos:end="569:29"><name pos:start="569:17" pos:end="569:24">gen_args</name> <operator pos:start="569:26" pos:end="569:27">+=</operator> <literal type="number" pos:start="569:29" pos:end="569:29">4</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="573:13" pos:end="573:22"><expr pos:start="573:13" pos:end="573:21"><name pos:start="573:13" pos:end="573:16">args</name> <operator pos:start="573:18" pos:end="573:19">+=</operator> <literal type="number" pos:start="573:21" pos:end="573:21">4</literal></expr>;</expr_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>

        <case pos:start="577:9" pos:end="577:27">case <expr pos:start="577:14" pos:end="577:26"><name pos:start="577:14" pos:end="577:26">INDEX_op_call</name></expr>:</case>

            <expr_stmt pos:start="579:13" pos:end="579:64"><expr pos:start="579:13" pos:end="579:63"><name pos:start="579:13" pos:end="579:24">nb_call_args</name> <operator pos:start="579:26" pos:end="579:26">=</operator> <operator pos:start="579:28" pos:end="579:28">(</operator><name pos:start="579:29" pos:end="579:35"><name pos:start="579:29" pos:end="579:32">args</name><index pos:start="579:33" pos:end="579:35">[<expr pos:start="579:34" pos:end="579:34"><literal type="number" pos:start="579:34" pos:end="579:34">0</literal></expr>]</index></name> <operator pos:start="579:37" pos:end="579:38">&gt;&gt;</operator> <literal type="number" pos:start="579:40" pos:end="579:41">16</literal><operator pos:start="579:42" pos:end="579:42">)</operator> <operator pos:start="579:44" pos:end="579:44">+</operator> <operator pos:start="579:46" pos:end="579:46">(</operator><name pos:start="579:47" pos:end="579:53"><name pos:start="579:47" pos:end="579:50">args</name><index pos:start="579:51" pos:end="579:53">[<expr pos:start="579:52" pos:end="579:52"><literal type="number" pos:start="579:52" pos:end="579:52">0</literal></expr>]</index></name> <operator pos:start="579:55" pos:end="579:55">&amp;</operator> <literal type="number" pos:start="579:57" pos:end="579:62">0xffff</literal><operator pos:start="579:63" pos:end="579:63">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="581:13" pos:end="589:13"><if pos:start="581:13" pos:end="589:13">if <condition pos:start="581:16" pos:end="581:77">(<expr pos:start="581:17" pos:end="581:76"><operator pos:start="581:17" pos:end="581:17">!</operator><operator pos:start="581:18" pos:end="581:18">(</operator><name pos:start="581:19" pos:end="581:40"><name pos:start="581:19" pos:end="581:22">args</name><index pos:start="581:23" pos:end="581:40">[<expr pos:start="581:24" pos:end="581:39"><name pos:start="581:24" pos:end="581:35">nb_call_args</name> <operator pos:start="581:37" pos:end="581:37">+</operator> <literal type="number" pos:start="581:39" pos:end="581:39">1</literal></expr>]</index></name> <operator pos:start="581:42" pos:end="581:42">&amp;</operator> <operator pos:start="581:44" pos:end="581:44">(</operator><name pos:start="581:45" pos:end="581:58">TCG_CALL_CONST</name> <operator pos:start="581:60" pos:end="581:60">|</operator> <name pos:start="581:62" pos:end="581:74">TCG_CALL_PURE</name><operator pos:start="581:75" pos:end="581:75">)</operator><operator pos:start="581:76" pos:end="581:76">)</operator></expr>)</condition> <block pos:start="581:79" pos:end="589:13">{<block_content pos:start="583:17" pos:end="587:17">

                <for pos:start="583:17" pos:end="587:17">for <control pos:start="583:21" pos:end="583:48">(<init pos:start="583:22" pos:end="583:27"><expr pos:start="583:22" pos:end="583:26"><name pos:start="583:22" pos:end="583:22">i</name> <operator pos:start="583:24" pos:end="583:24">=</operator> <literal type="number" pos:start="583:26" pos:end="583:26">0</literal></expr>;</init> <condition pos:start="583:29" pos:end="583:43"><expr pos:start="583:29" pos:end="583:42"><name pos:start="583:29" pos:end="583:29">i</name> <operator pos:start="583:31" pos:end="583:31">&lt;</operator> <name pos:start="583:33" pos:end="583:42">nb_globals</name></expr>;</condition> <incr pos:start="583:45" pos:end="583:47"><expr pos:start="583:45" pos:end="583:47"><name pos:start="583:45" pos:end="583:45">i</name><operator pos:start="583:46" pos:end="583:47">++</operator></expr></incr>)</control> <block pos:start="583:50" pos:end="587:17">{<block_content pos:start="585:21" pos:end="585:56">

                    <expr_stmt pos:start="585:21" pos:end="585:56"><expr pos:start="585:21" pos:end="585:55"><call pos:start="585:21" pos:end="585:55"><name pos:start="585:21" pos:end="585:30">reset_temp</name><argument_list pos:start="585:31" pos:end="585:55">(<argument pos:start="585:32" pos:end="585:32"><expr pos:start="585:32" pos:end="585:32"><name pos:start="585:32" pos:end="585:32">i</name></expr></argument>, <argument pos:start="585:35" pos:end="585:42"><expr pos:start="585:35" pos:end="585:42"><name pos:start="585:35" pos:end="585:42">nb_temps</name></expr></argument>, <argument pos:start="585:45" pos:end="585:54"><expr pos:start="585:45" pos:end="585:54"><name pos:start="585:45" pos:end="585:54">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

            <for pos:start="591:13" pos:end="595:13">for <control pos:start="591:17" pos:end="591:49">(<init pos:start="591:18" pos:end="591:23"><expr pos:start="591:18" pos:end="591:22"><name pos:start="591:18" pos:end="591:18">i</name> <operator pos:start="591:20" pos:end="591:20">=</operator> <literal type="number" pos:start="591:22" pos:end="591:22">0</literal></expr>;</init> <condition pos:start="591:25" pos:end="591:44"><expr pos:start="591:25" pos:end="591:43"><name pos:start="591:25" pos:end="591:25">i</name> <operator pos:start="591:27" pos:end="591:27">&lt;</operator> <operator pos:start="591:29" pos:end="591:29">(</operator><name pos:start="591:30" pos:end="591:36"><name pos:start="591:30" pos:end="591:33">args</name><index pos:start="591:34" pos:end="591:36">[<expr pos:start="591:35" pos:end="591:35"><literal type="number" pos:start="591:35" pos:end="591:35">0</literal></expr>]</index></name> <operator pos:start="591:38" pos:end="591:39">&gt;&gt;</operator> <literal type="number" pos:start="591:41" pos:end="591:42">16</literal><operator pos:start="591:43" pos:end="591:43">)</operator></expr>;</condition> <incr pos:start="591:46" pos:end="591:48"><expr pos:start="591:46" pos:end="591:48"><name pos:start="591:46" pos:end="591:46">i</name><operator pos:start="591:47" pos:end="591:48">++</operator></expr></incr>)</control> <block pos:start="591:51" pos:end="595:13">{<block_content pos:start="593:17" pos:end="593:62">

                <expr_stmt pos:start="593:17" pos:end="593:62"><expr pos:start="593:17" pos:end="593:61"><call pos:start="593:17" pos:end="593:61"><name pos:start="593:17" pos:end="593:26">reset_temp</name><argument_list pos:start="593:27" pos:end="593:61">(<argument pos:start="593:28" pos:end="593:38"><expr pos:start="593:28" pos:end="593:38"><name pos:start="593:28" pos:end="593:38"><name pos:start="593:28" pos:end="593:31">args</name><index pos:start="593:32" pos:end="593:38">[<expr pos:start="593:33" pos:end="593:37"><name pos:start="593:33" pos:end="593:33">i</name> <operator pos:start="593:35" pos:end="593:35">+</operator> <literal type="number" pos:start="593:37" pos:end="593:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="593:41" pos:end="593:48"><expr pos:start="593:41" pos:end="593:48"><name pos:start="593:41" pos:end="593:48">nb_temps</name></expr></argument>, <argument pos:start="593:51" pos:end="593:60"><expr pos:start="593:51" pos:end="593:60"><name pos:start="593:51" pos:end="593:60">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="597:13" pos:end="597:33"><expr pos:start="597:13" pos:end="597:32"><name pos:start="597:13" pos:end="597:13">i</name> <operator pos:start="597:15" pos:end="597:15">=</operator> <name pos:start="597:17" pos:end="597:28">nb_call_args</name> <operator pos:start="597:30" pos:end="597:30">+</operator> <literal type="number" pos:start="597:32" pos:end="597:32">3</literal></expr>;</expr_stmt>

            <while pos:start="599:13" pos:end="609:13">while <condition pos:start="599:19" pos:end="599:21">(<expr pos:start="599:20" pos:end="599:20"><name pos:start="599:20" pos:end="599:20">i</name></expr>)</condition> <block pos:start="599:23" pos:end="609:13">{<block_content pos:start="601:17" pos:end="607:20">

                <expr_stmt pos:start="601:17" pos:end="601:34"><expr pos:start="601:17" pos:end="601:33"><operator pos:start="601:17" pos:end="601:17">*</operator><name pos:start="601:18" pos:end="601:25">gen_args</name> <operator pos:start="601:27" pos:end="601:27">=</operator> <operator pos:start="601:29" pos:end="601:29">*</operator><name pos:start="601:30" pos:end="601:33">args</name></expr>;</expr_stmt>

                <expr_stmt pos:start="603:17" pos:end="603:23"><expr pos:start="603:17" pos:end="603:22"><name pos:start="603:17" pos:end="603:20">args</name><operator pos:start="603:21" pos:end="603:22">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:27"><expr pos:start="605:17" pos:end="605:26"><name pos:start="605:17" pos:end="605:24">gen_args</name><operator pos:start="605:25" pos:end="605:26">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="607:17" pos:end="607:20"><expr pos:start="607:17" pos:end="607:19"><name pos:start="607:17" pos:end="607:17">i</name><operator pos:start="607:18" pos:end="607:19">--</operator></expr>;</expr_stmt>

            </block_content>}</block></while>

            <break pos:start="611:13" pos:end="611:18">break;</break>

        <case pos:start="613:9" pos:end="613:32">case <expr pos:start="613:14" pos:end="613:31"><name pos:start="613:14" pos:end="613:31">INDEX_op_set_label</name></expr>:</case>

        <case pos:start="615:9" pos:end="615:26">case <expr pos:start="615:14" pos:end="615:25"><name pos:start="615:14" pos:end="615:25">INDEX_op_jmp</name></expr>:</case>

        <case pos:start="617:9" pos:end="617:25">case <expr pos:start="617:14" pos:end="617:24"><name pos:start="617:14" pos:end="617:24">INDEX_op_br</name></expr>:</case>

            <expr_stmt pos:start="619:13" pos:end="619:70"><expr pos:start="619:13" pos:end="619:69"><call pos:start="619:13" pos:end="619:69"><name pos:start="619:13" pos:end="619:18">memset</name><argument_list pos:start="619:19" pos:end="619:69">(<argument pos:start="619:20" pos:end="619:24"><expr pos:start="619:20" pos:end="619:24"><name pos:start="619:20" pos:end="619:24">temps</name></expr></argument>, <argument pos:start="619:27" pos:end="619:27"><expr pos:start="619:27" pos:end="619:27"><literal type="number" pos:start="619:27" pos:end="619:27">0</literal></expr></argument>, <argument pos:start="619:30" pos:end="619:68"><expr pos:start="619:30" pos:end="619:68"><name pos:start="619:30" pos:end="619:37">nb_temps</name> <operator pos:start="619:39" pos:end="619:39">*</operator> <sizeof pos:start="619:41" pos:end="619:68">sizeof<argument_list pos:start="619:47" pos:end="619:68">(<argument pos:start="619:48" pos:end="619:67"><expr pos:start="619:48" pos:end="619:67">struct <name pos:start="619:55" pos:end="619:67">tcg_temp_info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="621:13" pos:end="629:13">for <control pos:start="621:17" pos:end="621:46">(<init pos:start="621:18" pos:end="621:23"><expr pos:start="621:18" pos:end="621:22"><name pos:start="621:18" pos:end="621:18">i</name> <operator pos:start="621:20" pos:end="621:20">=</operator> <literal type="number" pos:start="621:22" pos:end="621:22">0</literal></expr>;</init> <condition pos:start="621:25" pos:end="621:41"><expr pos:start="621:25" pos:end="621:40"><name pos:start="621:25" pos:end="621:25">i</name> <operator pos:start="621:27" pos:end="621:27">&lt;</operator> <name pos:start="621:29" pos:end="621:40"><name pos:start="621:29" pos:end="621:31">def</name><operator pos:start="621:32" pos:end="621:33">-&gt;</operator><name pos:start="621:34" pos:end="621:40">nb_args</name></name></expr>;</condition> <incr pos:start="621:43" pos:end="621:45"><expr pos:start="621:43" pos:end="621:45"><name pos:start="621:43" pos:end="621:43">i</name><operator pos:start="621:44" pos:end="621:45">++</operator></expr></incr>)</control> <block pos:start="621:48" pos:end="629:13">{<block_content pos:start="623:17" pos:end="627:27">

                <expr_stmt pos:start="623:17" pos:end="623:34"><expr pos:start="623:17" pos:end="623:33"><operator pos:start="623:17" pos:end="623:17">*</operator><name pos:start="623:18" pos:end="623:25">gen_args</name> <operator pos:start="623:27" pos:end="623:27">=</operator> <operator pos:start="623:29" pos:end="623:29">*</operator><name pos:start="623:30" pos:end="623:33">args</name></expr>;</expr_stmt>

                <expr_stmt pos:start="625:17" pos:end="625:23"><expr pos:start="625:17" pos:end="625:22"><name pos:start="625:17" pos:end="625:20">args</name><operator pos:start="625:21" pos:end="625:22">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="627:17" pos:end="627:27"><expr pos:start="627:17" pos:end="627:26"><name pos:start="627:17" pos:end="627:24">gen_args</name><operator pos:start="627:25" pos:end="627:26">++</operator></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="631:13" pos:end="631:18">break;</break>

        <default pos:start="633:9" pos:end="633:16">default:</default>

            <comment type="block" pos:start="635:13" pos:end="637:67">/* Default case: we do know nothing about operation so no

               propagation is done.  We only trash output args.  */</comment>

            <for pos:start="639:13" pos:end="643:13">for <control pos:start="639:17" pos:end="639:47">(<init pos:start="639:18" pos:end="639:23"><expr pos:start="639:18" pos:end="639:22"><name pos:start="639:18" pos:end="639:18">i</name> <operator pos:start="639:20" pos:end="639:20">=</operator> <literal type="number" pos:start="639:22" pos:end="639:22">0</literal></expr>;</init> <condition pos:start="639:25" pos:end="639:42"><expr pos:start="639:25" pos:end="639:41"><name pos:start="639:25" pos:end="639:25">i</name> <operator pos:start="639:27" pos:end="639:27">&lt;</operator> <name pos:start="639:29" pos:end="639:41"><name pos:start="639:29" pos:end="639:31">def</name><operator pos:start="639:32" pos:end="639:33">-&gt;</operator><name pos:start="639:34" pos:end="639:41">nb_oargs</name></name></expr>;</condition> <incr pos:start="639:44" pos:end="639:46"><expr pos:start="639:44" pos:end="639:46"><name pos:start="639:44" pos:end="639:44">i</name><operator pos:start="639:45" pos:end="639:46">++</operator></expr></incr>)</control> <block pos:start="639:49" pos:end="643:13">{<block_content pos:start="641:17" pos:end="641:58">

                <expr_stmt pos:start="641:17" pos:end="641:58"><expr pos:start="641:17" pos:end="641:57"><call pos:start="641:17" pos:end="641:57"><name pos:start="641:17" pos:end="641:26">reset_temp</name><argument_list pos:start="641:27" pos:end="641:57">(<argument pos:start="641:28" pos:end="641:34"><expr pos:start="641:28" pos:end="641:34"><name pos:start="641:28" pos:end="641:34"><name pos:start="641:28" pos:end="641:31">args</name><index pos:start="641:32" pos:end="641:34">[<expr pos:start="641:33" pos:end="641:33"><name pos:start="641:33" pos:end="641:33">i</name></expr>]</index></name></expr></argument>, <argument pos:start="641:37" pos:end="641:44"><expr pos:start="641:37" pos:end="641:44"><name pos:start="641:37" pos:end="641:44">nb_temps</name></expr></argument>, <argument pos:start="641:47" pos:end="641:56"><expr pos:start="641:47" pos:end="641:56"><name pos:start="641:47" pos:end="641:56">nb_globals</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="645:13" pos:end="649:13">for <control pos:start="645:17" pos:end="645:46">(<init pos:start="645:18" pos:end="645:23"><expr pos:start="645:18" pos:end="645:22"><name pos:start="645:18" pos:end="645:18">i</name> <operator pos:start="645:20" pos:end="645:20">=</operator> <literal type="number" pos:start="645:22" pos:end="645:22">0</literal></expr>;</init> <condition pos:start="645:25" pos:end="645:41"><expr pos:start="645:25" pos:end="645:40"><name pos:start="645:25" pos:end="645:25">i</name> <operator pos:start="645:27" pos:end="645:27">&lt;</operator> <name pos:start="645:29" pos:end="645:40"><name pos:start="645:29" pos:end="645:31">def</name><operator pos:start="645:32" pos:end="645:33">-&gt;</operator><name pos:start="645:34" pos:end="645:40">nb_args</name></name></expr>;</condition> <incr pos:start="645:43" pos:end="645:45"><expr pos:start="645:43" pos:end="645:45"><name pos:start="645:43" pos:end="645:43">i</name><operator pos:start="645:44" pos:end="645:45">++</operator></expr></incr>)</control> <block pos:start="645:48" pos:end="649:13">{<block_content pos:start="647:17" pos:end="647:38">

                <expr_stmt pos:start="647:17" pos:end="647:38"><expr pos:start="647:17" pos:end="647:37"><name pos:start="647:17" pos:end="647:27"><name pos:start="647:17" pos:end="647:24">gen_args</name><index pos:start="647:25" pos:end="647:27">[<expr pos:start="647:26" pos:end="647:26"><name pos:start="647:26" pos:end="647:26">i</name></expr>]</index></name> <operator pos:start="647:29" pos:end="647:29">=</operator> <name pos:start="647:31" pos:end="647:37"><name pos:start="647:31" pos:end="647:34">args</name><index pos:start="647:35" pos:end="647:37">[<expr pos:start="647:36" pos:end="647:36"><name pos:start="647:36" pos:end="647:36">i</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="651:13" pos:end="651:33"><expr pos:start="651:13" pos:end="651:32"><name pos:start="651:13" pos:end="651:16">args</name> <operator pos:start="651:18" pos:end="651:19">+=</operator> <name pos:start="651:21" pos:end="651:32"><name pos:start="651:21" pos:end="651:23">def</name><operator pos:start="651:24" pos:end="651:25">-&gt;</operator><name pos:start="651:26" pos:end="651:32">nb_args</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="653:13" pos:end="653:37"><expr pos:start="653:13" pos:end="653:36"><name pos:start="653:13" pos:end="653:20">gen_args</name> <operator pos:start="653:22" pos:end="653:23">+=</operator> <name pos:start="653:25" pos:end="653:36"><name pos:start="653:25" pos:end="653:27">def</name><operator pos:start="653:28" pos:end="653:29">-&gt;</operator><name pos:start="653:30" pos:end="653:36">nb_args</name></name></expr>;</expr_stmt>

            <break pos:start="655:13" pos:end="655:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <return pos:start="663:5" pos:end="663:20">return <expr pos:start="663:12" pos:end="663:19"><name pos:start="663:12" pos:end="663:19">gen_args</name></expr>;</return>

</block_content>}</block></function>
</unit>
