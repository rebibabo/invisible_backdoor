<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14991.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:33">init_subtitles</name><parameter_list pos:start="1:34" pos:end="1:73">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:49">AVFilterContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">ctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:72">args</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:16"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:16">sid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">fmt</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:27">dec_ctx</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVCodec</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:16">dec</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">AVPacket</name></type> <name pos:start="15:14" pos:end="15:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">AssContext</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:19">ass</name> <init pos:start="17:21" pos:end="17:31">= <expr pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:25">ctx</name><operator pos:start="17:26" pos:end="17:27">-&gt;</operator><name pos:start="17:28" pos:end="17:31">priv</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:21">/* Init libass */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:44"><expr pos:start="23:5" pos:end="23:43"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:43"><name pos:start="23:11" pos:end="23:14">init</name><argument_list pos:start="23:15" pos:end="23:43">(<argument pos:start="23:16" pos:end="23:18"><expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ctx</name></expr></argument>, <argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">args</name></expr></argument>, <argument pos:start="23:27" pos:end="23:42"><expr pos:start="23:27" pos:end="23:42"><operator pos:start="23:27" pos:end="23:27">&amp;</operator><name pos:start="23:28" pos:end="23:42">subtitles_class</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:14"><name pos:start="29:5" pos:end="29:7">ass</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:14">track</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:44"><name pos:start="29:18" pos:end="29:30">ass_new_track</name><argument_list pos:start="29:31" pos:end="29:44">(<argument pos:start="29:32" pos:end="29:43"><expr pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:43"><name pos:start="29:32" pos:end="29:34">ass</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">library</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:20">(<expr pos:start="31:9" pos:end="31:19"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:19"><name pos:start="31:10" pos:end="31:12">ass</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:19">track</name></name></expr>)</condition> <block pos:start="31:22" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:71"><expr pos:start="33:9" pos:end="33:70"><call pos:start="33:9" pos:end="33:70"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:70">(<argument pos:start="33:16" pos:end="33:18"><expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ctx</name></expr></argument>, <argument pos:start="33:21" pos:end="33:32"><expr pos:start="33:21" pos:end="33:32"><name pos:start="33:21" pos:end="33:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:35" pos:end="33:69"><expr pos:start="33:35" pos:end="33:69"><literal type="string" pos:start="33:35" pos:end="33:69">"Could not create a libass track\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:29">/* Open subtitles file */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:7">ret</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:62"><name pos:start="43:11" pos:end="43:29">avformat_open_input</name><argument_list pos:start="43:30" pos:end="43:62">(<argument pos:start="43:31" pos:end="43:34"><expr pos:start="43:31" pos:end="43:34"><operator pos:start="43:31" pos:end="43:31">&amp;</operator><name pos:start="43:32" pos:end="43:34">fmt</name></expr></argument>, <argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:39">ass</name><operator pos:start="43:40" pos:end="43:41">-&gt;</operator><name pos:start="43:42" pos:end="43:49">filename</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:55"><expr pos:start="43:52" pos:end="43:55"><name pos:start="43:52" pos:end="43:55">NULL</name></expr></argument>, <argument pos:start="43:58" pos:end="43:61"><expr pos:start="43:58" pos:end="43:61"><name pos:start="43:58" pos:end="43:61">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:16">(<expr pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">&lt;</operator> <literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>)</condition> <block pos:start="45:18" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:17">

        <expr_stmt pos:start="47:9" pos:end="47:72"><expr pos:start="47:9" pos:end="47:71"><call pos:start="47:9" pos:end="47:71"><name pos:start="47:9" pos:end="47:14">av_log</name><argument_list pos:start="47:15" pos:end="47:71">(<argument pos:start="47:16" pos:end="47:18"><expr pos:start="47:16" pos:end="47:18"><name pos:start="47:16" pos:end="47:18">ctx</name></expr></argument>, <argument pos:start="47:21" pos:end="47:32"><expr pos:start="47:21" pos:end="47:32"><name pos:start="47:21" pos:end="47:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="47:35" pos:end="47:55"><expr pos:start="47:35" pos:end="47:55"><literal type="string" pos:start="47:35" pos:end="47:55">"Unable to open %s\n"</literal></expr></argument>, <argument pos:start="47:58" pos:end="47:70"><expr pos:start="47:58" pos:end="47:70"><name pos:start="47:58" pos:end="47:70"><name pos:start="47:58" pos:end="47:60">ass</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:70">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:47"><expr pos:start="53:5" pos:end="53:46"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:46"><name pos:start="53:11" pos:end="53:35">avformat_find_stream_info</name><argument_list pos:start="53:36" pos:end="53:46">(<argument pos:start="53:37" pos:end="53:39"><expr pos:start="53:37" pos:end="53:39"><name pos:start="53:37" pos:end="53:39">fmt</name></expr></argument>, <argument pos:start="53:42" pos:end="53:45"><expr pos:start="53:42" pos:end="53:45"><name pos:start="53:42" pos:end="53:45">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="57:17"><if pos:start="55:5" pos:end="57:17">if <condition pos:start="55:8" pos:end="55:16">(<expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">&lt;</operator> <literal type="number" pos:start="55:15" pos:end="55:15">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">end</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:33">/* Locate subtitles stream */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:75"><expr pos:start="63:5" pos:end="63:74"><name pos:start="63:5" pos:end="63:7">ret</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:74"><name pos:start="63:11" pos:end="63:29">av_find_best_stream</name><argument_list pos:start="63:30" pos:end="63:74">(<argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">fmt</name></expr></argument>, <argument pos:start="63:36" pos:end="63:56"><expr pos:start="63:36" pos:end="63:56"><name pos:start="63:36" pos:end="63:56">AVMEDIA_TYPE_SUBTITLE</name></expr></argument>, <argument pos:start="63:59" pos:end="63:60"><expr pos:start="63:59" pos:end="63:60"><operator pos:start="63:59" pos:end="63:59">-</operator><literal type="number" pos:start="63:60" pos:end="63:60">1</literal></expr></argument>, <argument pos:start="63:63" pos:end="63:64"><expr pos:start="63:63" pos:end="63:64"><operator pos:start="63:63" pos:end="63:63">-</operator><literal type="number" pos:start="63:64" pos:end="63:64">1</literal></expr></argument>, <argument pos:start="63:67" pos:end="63:70"><expr pos:start="63:67" pos:end="63:70"><name pos:start="63:67" pos:end="63:70">NULL</name></expr></argument>, <argument pos:start="63:73" pos:end="63:73"><expr pos:start="63:73" pos:end="63:73"><literal type="number" pos:start="63:73" pos:end="63:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">&lt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition> <block pos:start="65:18" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:17">

        <expr_stmt pos:start="67:9" pos:end="69:30"><expr pos:start="67:9" pos:end="69:29"><call pos:start="67:9" pos:end="69:29"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="69:29">(<argument pos:start="67:16" pos:end="67:18"><expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ctx</name></expr></argument>, <argument pos:start="67:21" pos:end="67:32"><expr pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:35" pos:end="67:76"><expr pos:start="67:35" pos:end="67:76"><literal type="string" pos:start="67:35" pos:end="67:76">"Unable to locate subtitle stream in %s\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:28"><expr pos:start="69:16" pos:end="69:28"><name pos:start="69:16" pos:end="69:28"><name pos:start="69:16" pos:end="69:18">ass</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:28">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:17">goto <name pos:start="71:14" pos:end="71:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:14"><expr pos:start="75:5" pos:end="75:13"><name pos:start="75:5" pos:end="75:7">sid</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <name pos:start="75:11" pos:end="75:13">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:6">st</name> <operator pos:start="77:8" pos:end="77:8">=</operator> <name pos:start="77:10" pos:end="77:26"><name pos:start="77:10" pos:end="77:12">fmt</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:21">streams</name><index pos:start="77:22" pos:end="77:26">[<expr pos:start="77:23" pos:end="77:25"><name pos:start="77:23" pos:end="77:25">sid</name></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:22">/* Open decoder */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:24"><expr pos:start="83:5" pos:end="83:23"><name pos:start="83:5" pos:end="83:11">dec_ctx</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <name pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:16">st</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:23">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:50"><expr pos:start="85:5" pos:end="85:49"><name pos:start="85:5" pos:end="85:7">dec</name> <operator pos:start="85:9" pos:end="85:9">=</operator> <call pos:start="85:11" pos:end="85:49"><name pos:start="85:11" pos:end="85:30">avcodec_find_decoder</name><argument_list pos:start="85:31" pos:end="85:49">(<argument pos:start="85:32" pos:end="85:48"><expr pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:48"><name pos:start="85:32" pos:end="85:38">dec_ctx</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:48">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:13">(<expr pos:start="87:9" pos:end="87:12"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:12">dec</name></expr>)</condition> <block pos:start="87:15" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:31">

        <expr_stmt pos:start="89:9" pos:end="91:52"><expr pos:start="89:9" pos:end="91:51"><call pos:start="89:9" pos:end="91:51"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="91:51">(<argument pos:start="89:16" pos:end="89:18"><expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ctx</name></expr></argument>, <argument pos:start="89:21" pos:end="89:32"><expr pos:start="89:21" pos:end="89:32"><name pos:start="89:21" pos:end="89:32">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:35" pos:end="89:70"><expr pos:start="89:35" pos:end="89:70"><literal type="string" pos:start="89:35" pos:end="89:70">"Failed to find subtitle codec %s\n"</literal></expr></argument>,

               <argument pos:start="91:16" pos:end="91:50"><expr pos:start="91:16" pos:end="91:50"><call pos:start="91:16" pos:end="91:50"><name pos:start="91:16" pos:end="91:31">avcodec_get_name</name><argument_list pos:start="91:32" pos:end="91:50">(<argument pos:start="91:33" pos:end="91:49"><expr pos:start="91:33" pos:end="91:49"><name pos:start="91:33" pos:end="91:49"><name pos:start="91:33" pos:end="91:39">dec_ctx</name><operator pos:start="91:40" pos:end="91:41">-&gt;</operator><name pos:start="91:42" pos:end="91:49">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:31">return <expr pos:start="93:16" pos:end="93:30"><call pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:22">AVERROR</name><argument_list pos:start="93:23" pos:end="93:30">(<argument pos:start="93:24" pos:end="93:29"><expr pos:start="93:24" pos:end="93:29"><name pos:start="93:24" pos:end="93:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:44"><expr pos:start="97:5" pos:end="97:43"><name pos:start="97:5" pos:end="97:7">ret</name> <operator pos:start="97:9" pos:end="97:9">=</operator> <call pos:start="97:11" pos:end="97:43"><name pos:start="97:11" pos:end="97:23">avcodec_open2</name><argument_list pos:start="97:24" pos:end="97:43">(<argument pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:31">dec_ctx</name></expr></argument>, <argument pos:start="97:34" pos:end="97:36"><expr pos:start="97:34" pos:end="97:36"><name pos:start="97:34" pos:end="97:36">dec</name></expr></argument>, <argument pos:start="97:39" pos:end="97:42"><expr pos:start="97:39" pos:end="97:42"><name pos:start="97:39" pos:end="97:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:17"><if pos:start="99:5" pos:end="101:17">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:17"><block_content pos:start="101:9" pos:end="101:17">

        <goto pos:start="101:9" pos:end="101:17">goto <name pos:start="101:14" pos:end="101:16">end</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="105:5" pos:end="105:67">/* Decode subtitles and push them into the renderer (libass) */</comment>

    <if_stmt pos:start="107:5" pos:end="113:65"><if pos:start="107:5" pos:end="113:65">if <condition pos:start="107:8" pos:end="107:33">(<expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:15">dec_ctx</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:32">subtitle_header</name></name></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="113:65"><block_content pos:start="109:9" pos:end="113:65">

        <expr_stmt pos:start="109:9" pos:end="113:65"><expr pos:start="109:9" pos:end="113:64"><call pos:start="109:9" pos:end="113:64"><name pos:start="109:9" pos:end="109:33">ass_process_codec_private</name><argument_list pos:start="109:34" pos:end="113:64">(<argument pos:start="109:35" pos:end="109:44"><expr pos:start="109:35" pos:end="109:44"><name pos:start="109:35" pos:end="109:44"><name pos:start="109:35" pos:end="109:37">ass</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:44">track</name></name></expr></argument>,

                                  <argument pos:start="111:35" pos:end="111:58"><expr pos:start="111:35" pos:end="111:58"><name pos:start="111:35" pos:end="111:58"><name pos:start="111:35" pos:end="111:41">dec_ctx</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:58">subtitle_header</name></name></expr></argument>,

                                  <argument pos:start="113:35" pos:end="113:63"><expr pos:start="113:35" pos:end="113:63"><name pos:start="113:35" pos:end="113:63"><name pos:start="113:35" pos:end="113:41">dec_ctx</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:63">subtitle_header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:25"><expr pos:start="115:5" pos:end="115:24"><call pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:18">av_init_packet</name><argument_list pos:start="115:19" pos:end="115:24">(<argument pos:start="115:20" pos:end="115:23"><expr pos:start="115:20" pos:end="115:23"><operator pos:start="115:20" pos:end="115:20">&amp;</operator><name pos:start="115:21" pos:end="115:23">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:20"><expr pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:12"><name pos:start="117:5" pos:end="117:7">pkt</name><operator pos:start="117:8" pos:end="117:8">.</operator><name pos:start="117:9" pos:end="117:12">data</name></name> <operator pos:start="117:14" pos:end="117:14">=</operator> <name pos:start="117:16" pos:end="117:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:17"><expr pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:12"><name pos:start="119:5" pos:end="119:7">pkt</name><operator pos:start="119:8" pos:end="119:8">.</operator><name pos:start="119:9" pos:end="119:12">size</name></name> <operator pos:start="119:14" pos:end="119:14">=</operator> <literal type="number" pos:start="119:16" pos:end="119:16">0</literal></expr>;</expr_stmt>

    <while pos:start="121:5" pos:end="155:5">while <condition pos:start="121:11" pos:end="121:41">(<expr pos:start="121:12" pos:end="121:40"><call pos:start="121:12" pos:end="121:35"><name pos:start="121:12" pos:end="121:24">av_read_frame</name><argument_list pos:start="121:25" pos:end="121:35">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">fmt</name></expr></argument>, <argument pos:start="121:31" pos:end="121:34"><expr pos:start="121:31" pos:end="121:34"><operator pos:start="121:31" pos:end="121:31">&amp;</operator><name pos:start="121:32" pos:end="121:34">pkt</name></expr></argument>)</argument_list></call> <operator pos:start="121:37" pos:end="121:38">&gt;=</operator> <literal type="number" pos:start="121:40" pos:end="121:40">0</literal></expr>)</condition> <block pos:start="121:43" pos:end="155:5">{<block_content pos:start="123:9" pos:end="153:30">

        <decl_stmt pos:start="123:9" pos:end="123:28"><decl pos:start="123:9" pos:end="123:13"><type pos:start="123:9" pos:end="123:11"><name pos:start="123:9" pos:end="123:11">int</name></type> <name pos:start="123:13" pos:end="123:13">i</name></decl>, <decl pos:start="123:16" pos:end="123:27"><type ref="prev" pos:start="123:9" pos:end="123:11"/><name pos:start="123:16" pos:end="123:27">got_subtitle</name></decl>;</decl_stmt>

        <decl_stmt pos:start="125:9" pos:end="125:23"><decl pos:start="125:9" pos:end="125:22"><type pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:18">AVSubtitle</name></type> <name pos:start="125:20" pos:end="125:22">sub</name></decl>;</decl_stmt>



        <if_stmt pos:start="129:9" pos:end="149:9"><if pos:start="129:9" pos:end="149:9">if <condition pos:start="129:12" pos:end="129:36">(<expr pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:15">pkt</name><operator pos:start="129:16" pos:end="129:16">.</operator><name pos:start="129:17" pos:end="129:28">stream_index</name></name> <operator pos:start="129:30" pos:end="129:31">==</operator> <name pos:start="129:33" pos:end="129:35">sid</name></expr>)</condition> <block pos:start="129:38" pos:end="149:9">{<block_content pos:start="131:13" pos:end="147:13">

            <expr_stmt pos:start="131:13" pos:end="131:79"><expr pos:start="131:13" pos:end="131:78"><name pos:start="131:13" pos:end="131:15">ret</name> <operator pos:start="131:17" pos:end="131:17">=</operator> <call pos:start="131:19" pos:end="131:78"><name pos:start="131:19" pos:end="131:42">avcodec_decode_subtitle2</name><argument_list pos:start="131:43" pos:end="131:78">(<argument pos:start="131:44" pos:end="131:50"><expr pos:start="131:44" pos:end="131:50"><name pos:start="131:44" pos:end="131:50">dec_ctx</name></expr></argument>, <argument pos:start="131:53" pos:end="131:56"><expr pos:start="131:53" pos:end="131:56"><operator pos:start="131:53" pos:end="131:53">&amp;</operator><name pos:start="131:54" pos:end="131:56">sub</name></expr></argument>, <argument pos:start="131:59" pos:end="131:71"><expr pos:start="131:59" pos:end="131:71"><operator pos:start="131:59" pos:end="131:59">&amp;</operator><name pos:start="131:60" pos:end="131:71">got_subtitle</name></expr></argument>, <argument pos:start="131:74" pos:end="131:77"><expr pos:start="131:74" pos:end="131:77"><operator pos:start="131:74" pos:end="131:74">&amp;</operator><name pos:start="131:75" pos:end="131:77">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="133:13" pos:end="135:22"><if pos:start="133:13" pos:end="135:22">if <condition pos:start="133:16" pos:end="133:41">(<expr pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:19">ret</name> <operator pos:start="133:21" pos:end="133:21">&lt;</operator> <literal type="number" pos:start="133:23" pos:end="133:23">0</literal> <operator pos:start="133:25" pos:end="133:26">||</operator> <operator pos:start="133:28" pos:end="133:28">!</operator><name pos:start="133:29" pos:end="133:40">got_subtitle</name></expr>)</condition><block type="pseudo" pos:start="135:17" pos:end="135:22"><block_content pos:start="135:17" pos:end="135:22">

                <break pos:start="135:17" pos:end="135:22">break;</break></block_content></block></if></if_stmt>

            <for pos:start="137:13" pos:end="147:13">for <control pos:start="137:17" pos:end="137:47">(<init pos:start="137:18" pos:end="137:23"><expr pos:start="137:18" pos:end="137:22"><name pos:start="137:18" pos:end="137:18">i</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">0</literal></expr>;</init> <condition pos:start="137:25" pos:end="137:42"><expr pos:start="137:25" pos:end="137:41"><name pos:start="137:25" pos:end="137:25">i</name> <operator pos:start="137:27" pos:end="137:27">&lt;</operator> <name pos:start="137:29" pos:end="137:41"><name pos:start="137:29" pos:end="137:31">sub</name><operator pos:start="137:32" pos:end="137:32">.</operator><name pos:start="137:33" pos:end="137:41">num_rects</name></name></expr>;</condition> <incr pos:start="137:44" pos:end="137:46"><expr pos:start="137:44" pos:end="137:46"><name pos:start="137:44" pos:end="137:44">i</name><operator pos:start="137:45" pos:end="137:46">++</operator></expr></incr>)</control> <block pos:start="137:49" pos:end="147:13">{<block_content pos:start="139:17" pos:end="145:73">

                <decl_stmt pos:start="139:17" pos:end="139:51"><decl pos:start="139:17" pos:end="139:50"><type pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:20">char</name> <modifier pos:start="139:22" pos:end="139:22">*</modifier></type><name pos:start="139:23" pos:end="139:30">ass_line</name> <init pos:start="139:32" pos:end="139:50">= <expr pos:start="139:34" pos:end="139:50"><name pos:start="139:34" pos:end="139:45"><name pos:start="139:34" pos:end="139:36">sub</name><operator pos:start="139:37" pos:end="139:37">.</operator><name pos:start="139:38" pos:end="139:42">rects</name><index pos:start="139:43" pos:end="139:45">[<expr pos:start="139:44" pos:end="139:44"><name pos:start="139:44" pos:end="139:44">i</name></expr>]</index></name><operator pos:start="139:46" pos:end="139:47">-&gt;</operator><name pos:start="139:48" pos:end="139:50">ass</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="141:17" pos:end="143:26"><if pos:start="141:17" pos:end="143:26">if <condition pos:start="141:20" pos:end="141:30">(<expr pos:start="141:21" pos:end="141:29"><operator pos:start="141:21" pos:end="141:21">!</operator><name pos:start="141:22" pos:end="141:29">ass_line</name></expr>)</condition><block type="pseudo" pos:start="143:21" pos:end="143:26"><block_content pos:start="143:21" pos:end="143:26">

                    <break pos:start="143:21" pos:end="143:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:73"><expr pos:start="145:17" pos:end="145:72"><call pos:start="145:17" pos:end="145:72"><name pos:start="145:17" pos:end="145:32">ass_process_data</name><argument_list pos:start="145:33" pos:end="145:72">(<argument pos:start="145:34" pos:end="145:43"><expr pos:start="145:34" pos:end="145:43"><name pos:start="145:34" pos:end="145:43"><name pos:start="145:34" pos:end="145:36">ass</name><operator pos:start="145:37" pos:end="145:38">-&gt;</operator><name pos:start="145:39" pos:end="145:43">track</name></name></expr></argument>, <argument pos:start="145:46" pos:end="145:53"><expr pos:start="145:46" pos:end="145:53"><name pos:start="145:46" pos:end="145:53">ass_line</name></expr></argument>, <argument pos:start="145:56" pos:end="145:71"><expr pos:start="145:56" pos:end="145:71"><call pos:start="145:56" pos:end="145:71"><name pos:start="145:56" pos:end="145:61">strlen</name><argument_list pos:start="145:62" pos:end="145:71">(<argument pos:start="145:63" pos:end="145:70"><expr pos:start="145:63" pos:end="145:70"><name pos:start="145:63" pos:end="145:70">ass_line</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:29"><expr pos:start="151:9" pos:end="151:28"><call pos:start="151:9" pos:end="151:28"><name pos:start="151:9" pos:end="151:22">av_free_packet</name><argument_list pos:start="151:23" pos:end="151:28">(<argument pos:start="151:24" pos:end="151:27"><expr pos:start="151:24" pos:end="151:27"><operator pos:start="151:24" pos:end="151:24">&amp;</operator><name pos:start="151:25" pos:end="151:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:30"><expr pos:start="153:9" pos:end="153:29"><call pos:start="153:9" pos:end="153:29"><name pos:start="153:9" pos:end="153:23">avsubtitle_free</name><argument_list pos:start="153:24" pos:end="153:29">(<argument pos:start="153:25" pos:end="153:28"><expr pos:start="153:25" pos:end="153:28"><operator pos:start="153:25" pos:end="153:25">&amp;</operator><name pos:start="153:26" pos:end="153:28">sub</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



<label pos:start="159:1" pos:end="159:4"><name pos:start="159:1" pos:end="159:3">end</name>:</label>

    <if_stmt pos:start="161:5" pos:end="163:35"><if pos:start="161:5" pos:end="163:35">if <condition pos:start="161:8" pos:end="161:12">(<expr pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">fmt</name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:35"><block_content pos:start="163:9" pos:end="163:35">

        <expr_stmt pos:start="163:9" pos:end="163:35"><expr pos:start="163:9" pos:end="163:34"><call pos:start="163:9" pos:end="163:34"><name pos:start="163:9" pos:end="163:28">avformat_close_input</name><argument_list pos:start="163:29" pos:end="163:34">(<argument pos:start="163:30" pos:end="163:33"><expr pos:start="163:30" pos:end="163:33"><operator pos:start="163:30" pos:end="163:30">&amp;</operator><name pos:start="163:31" pos:end="163:33">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="165:5" pos:end="167:31"><if pos:start="165:5" pos:end="167:31">if <condition pos:start="165:8" pos:end="165:16">(<expr pos:start="165:9" pos:end="165:15"><name pos:start="165:9" pos:end="165:15">dec_ctx</name></expr>)</condition><block type="pseudo" pos:start="167:9" pos:end="167:31"><block_content pos:start="167:9" pos:end="167:31">

        <expr_stmt pos:start="167:9" pos:end="167:31"><expr pos:start="167:9" pos:end="167:30"><call pos:start="167:9" pos:end="167:30"><name pos:start="167:9" pos:end="167:21">avcodec_close</name><argument_list pos:start="167:22" pos:end="167:30">(<argument pos:start="167:23" pos:end="167:29"><expr pos:start="167:23" pos:end="167:29"><name pos:start="167:23" pos:end="167:29">dec_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="169:5" pos:end="169:15">return <expr pos:start="169:12" pos:end="169:14"><name pos:start="169:12" pos:end="169:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
