<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2331.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">decode_mb_b</name><parameter_list pos:start="1:24" pos:end="1:60">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">AVSContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">h</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:59"><decl pos:start="1:40" pos:end="1:59"><type pos:start="1:40" pos:end="1:59"><name pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:43">enum</name> <name pos:start="1:45" pos:end="1:51">cavs_mb</name></name></type> <name pos:start="1:53" pos:end="1:59">mb_type</name></decl></parameter>)</parameter_list> <block pos:start="1:62" pos:end="213:1">{<block_content pos:start="3:5" pos:end="211:30">

    <decl_stmt pos:start="3:5" pos:end="3:14"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:8">enum</name> <name pos:start="5:10" pos:end="5:20">cavs_sub_mb</name></name></type> <name pos:start="5:22" pos:end="5:32"><name pos:start="5:22" pos:end="5:29">sub_type</name><index pos:start="5:30" pos:end="5:32">[<expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">flags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:19">ff_cavs_init_mb</name><argument_list pos:start="11:20" pos:end="11:22">(<argument pos:start="11:21" pos:end="11:21"><expr pos:start="11:21" pos:end="11:21"><name pos:start="11:21" pos:end="11:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:23">/* reset all MVs */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:5">h</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:9">mv</name><index pos:start="17:10" pos:end="17:20">[<expr pos:start="17:11" pos:end="17:19"><name pos:start="17:11" pos:end="17:19">MV_FWD_X0</name></expr>]</index></name> <operator pos:start="17:22" pos:end="17:22">=</operator> <name pos:start="17:24" pos:end="17:37">ff_cavs_dir_mv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:11">set_mvs</name><argument_list pos:start="19:12" pos:end="19:41">(<argument pos:start="19:13" pos:end="19:29"><expr pos:start="19:13" pos:end="19:29"><operator pos:start="19:13" pos:end="19:13">&amp;</operator><name pos:start="19:14" pos:end="19:29"><name pos:start="19:14" pos:end="19:14">h</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:18">mv</name><index pos:start="19:19" pos:end="19:29">[<expr pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:28">MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument pos:start="19:32" pos:end="19:40"><expr pos:start="19:32" pos:end="19:40"><name pos:start="19:32" pos:end="19:40">BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">h</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">mv</name><index pos:start="21:10" pos:end="21:20">[<expr pos:start="21:11" pos:end="21:19"><name pos:start="21:11" pos:end="21:19">MV_BWD_X0</name></expr>]</index></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <name pos:start="21:24" pos:end="21:37">ff_cavs_dir_mv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:11">set_mvs</name><argument_list pos:start="23:12" pos:end="23:41">(<argument pos:start="23:13" pos:end="23:29"><expr pos:start="23:13" pos:end="23:29"><operator pos:start="23:13" pos:end="23:13">&amp;</operator><name pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:14">h</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:18">mv</name><index pos:start="23:19" pos:end="23:29">[<expr pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:28">MV_BWD_X0</name></expr>]</index></name></expr></argument>, <argument pos:start="23:32" pos:end="23:40"><expr pos:start="23:32" pos:end="23:40"><name pos:start="23:32" pos:end="23:40">BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="201:5">switch<condition pos:start="25:11" pos:end="25:19">(<expr pos:start="25:12" pos:end="25:18"><name pos:start="25:12" pos:end="25:18">mb_type</name></expr>)</condition> <block pos:start="25:21" pos:end="201:5">{<block_content pos:start="27:5" pos:end="199:9">

    <case pos:start="27:5" pos:end="27:16">case <expr pos:start="27:10" pos:end="27:15"><name pos:start="27:10" pos:end="27:15">B_SKIP</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:18">case <expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:17">B_DIRECT</name></expr>:</case>

        <if_stmt pos:start="31:9" pos:end="47:65"><if pos:start="31:9" pos:end="39:9">if<condition pos:start="31:11" pos:end="31:39">(<expr pos:start="31:12" pos:end="31:38"><operator pos:start="31:12" pos:end="31:12">!</operator><name pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:13">h</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:28">col_type_base</name><index pos:start="31:29" pos:end="31:38">[<expr pos:start="31:30" pos:end="31:37"><name pos:start="31:30" pos:end="31:37"><name pos:start="31:30" pos:end="31:30">h</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:37">mbidx</name></name></expr>]</index></name></expr>)</condition> <block pos:start="31:41" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:77">

            <comment type="block" pos:start="33:13" pos:end="33:65">/* intra MB at co-location, do in-plane prediction */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:77"><expr pos:start="35:13" pos:end="35:76"><call pos:start="35:13" pos:end="35:76"><name pos:start="35:13" pos:end="35:22">ff_cavs_mv</name><argument_list pos:start="35:23" pos:end="35:76">(<argument pos:start="35:24" pos:end="35:24"><expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">h</name></expr></argument>, <argument pos:start="35:27" pos:end="35:35"><expr pos:start="35:27" pos:end="35:35"><name pos:start="35:27" pos:end="35:35">MV_FWD_X0</name></expr></argument>, <argument pos:start="35:38" pos:end="35:46"><expr pos:start="35:38" pos:end="35:46"><name pos:start="35:38" pos:end="35:46">MV_FWD_C2</name></expr></argument>, <argument pos:start="35:49" pos:end="35:61"><expr pos:start="35:49" pos:end="35:61"><name pos:start="35:49" pos:end="35:61">MV_PRED_BSKIP</name></expr></argument>, <argument pos:start="35:64" pos:end="35:72"><expr pos:start="35:64" pos:end="35:72"><name pos:start="35:64" pos:end="35:72">BLK_16X16</name></expr></argument>, <argument pos:start="35:75" pos:end="35:75"><expr pos:start="35:75" pos:end="35:75"><literal type="number" pos:start="35:75" pos:end="35:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:77"><expr pos:start="37:13" pos:end="37:76"><call pos:start="37:13" pos:end="37:76"><name pos:start="37:13" pos:end="37:22">ff_cavs_mv</name><argument_list pos:start="37:23" pos:end="37:76">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">h</name></expr></argument>, <argument pos:start="37:27" pos:end="37:35"><expr pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:35">MV_BWD_X0</name></expr></argument>, <argument pos:start="37:38" pos:end="37:46"><expr pos:start="37:38" pos:end="37:46"><name pos:start="37:38" pos:end="37:46">MV_BWD_C2</name></expr></argument>, <argument pos:start="37:49" pos:end="37:61"><expr pos:start="37:49" pos:end="37:61"><name pos:start="37:49" pos:end="37:61">MV_PRED_BSKIP</name></expr></argument>, <argument pos:start="37:64" pos:end="37:72"><expr pos:start="37:64" pos:end="37:72"><name pos:start="37:64" pos:end="37:72">BLK_16X16</name></expr></argument>, <argument pos:start="37:75" pos:end="37:75"><expr pos:start="37:75" pos:end="37:75"><literal type="number" pos:start="37:75" pos:end="37:75">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="39:11" pos:end="47:65">else<block type="pseudo" pos:start="43:13" pos:end="47:65"><block_content pos:start="43:13" pos:end="47:65">

            <comment type="block" pos:start="41:13" pos:end="41:68">/* direct prediction from co-located P MB, block-wise */</comment>

            <for pos:start="43:13" pos:end="47:65">for<control pos:start="43:16" pos:end="43:40">(<init pos:start="43:17" pos:end="43:24"><expr pos:start="43:17" pos:end="43:23"><name pos:start="43:17" pos:end="43:21">block</name><operator pos:start="43:22" pos:end="43:22">=</operator><literal type="number" pos:start="43:23" pos:end="43:23">0</literal></expr>;</init><condition pos:start="43:25" pos:end="43:32"><expr pos:start="43:25" pos:end="43:31"><name pos:start="43:25" pos:end="43:29">block</name><operator pos:start="43:30" pos:end="43:30">&lt;</operator><literal type="number" pos:start="43:31" pos:end="43:31">4</literal></expr>;</condition><incr pos:start="43:33" pos:end="43:39"><expr pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:37">block</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:17" pos:end="47:65"><block_content pos:start="45:17" pos:end="47:65">

                <expr_stmt pos:start="45:17" pos:end="47:65"><expr pos:start="45:17" pos:end="47:64"><call pos:start="45:17" pos:end="47:64"><name pos:start="45:17" pos:end="45:30">mv_pred_direct</name><argument_list pos:start="45:31" pos:end="47:64">(<argument pos:start="45:32" pos:end="45:32"><expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">h</name></expr></argument>,<argument pos:start="45:34" pos:end="45:55"><expr pos:start="45:34" pos:end="45:55"><operator pos:start="45:34" pos:end="45:34">&amp;</operator><name pos:start="45:35" pos:end="45:55"><name pos:start="45:35" pos:end="45:35">h</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:39">mv</name><index pos:start="45:40" pos:end="45:55">[<expr pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:54"><name pos:start="45:41" pos:end="45:47">mv_scan</name><index pos:start="45:48" pos:end="45:54">[<expr pos:start="45:49" pos:end="45:53"><name pos:start="45:49" pos:end="45:53">block</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                                 <argument pos:start="47:34" pos:end="47:63"><expr pos:start="47:34" pos:end="47:63"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:63"><name pos:start="47:35" pos:end="47:35">h</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:43">col_mv</name><index pos:start="47:44" pos:end="47:63">[<expr pos:start="47:45" pos:end="47:62"><name pos:start="47:45" pos:end="47:52"><name pos:start="47:45" pos:end="47:45">h</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:52">mbidx</name></name><operator pos:start="47:53" pos:end="47:53">*</operator><literal type="number" pos:start="47:54" pos:end="47:56">4</literal> <operator pos:start="47:56" pos:end="47:56">+</operator> <name pos:start="47:58" pos:end="47:62">block</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></else></if_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:21">case <expr pos:start="51:10" pos:end="51:20"><name pos:start="51:10" pos:end="51:20">B_FWD_16X16</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:74"><expr pos:start="53:9" pos:end="53:73"><call pos:start="53:9" pos:end="53:73"><name pos:start="53:9" pos:end="53:18">ff_cavs_mv</name><argument_list pos:start="53:19" pos:end="53:73">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">h</name></expr></argument>, <argument pos:start="53:23" pos:end="53:31"><expr pos:start="53:23" pos:end="53:31"><name pos:start="53:23" pos:end="53:31">MV_FWD_X0</name></expr></argument>, <argument pos:start="53:34" pos:end="53:42"><expr pos:start="53:34" pos:end="53:42"><name pos:start="53:34" pos:end="53:42">MV_FWD_C2</name></expr></argument>, <argument pos:start="53:45" pos:end="53:58"><expr pos:start="53:45" pos:end="53:58"><name pos:start="53:45" pos:end="53:58">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="53:61" pos:end="53:69"><expr pos:start="53:61" pos:end="53:69"><name pos:start="53:61" pos:end="53:69">BLK_16X16</name></expr></argument>, <argument pos:start="53:72" pos:end="53:72"><expr pos:start="53:72" pos:end="53:72"><literal type="number" pos:start="53:72" pos:end="53:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:21">case <expr pos:start="57:10" pos:end="57:20"><name pos:start="57:10" pos:end="57:20">B_SYM_16X16</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:74"><expr pos:start="59:9" pos:end="59:73"><call pos:start="59:9" pos:end="59:73"><name pos:start="59:9" pos:end="59:18">ff_cavs_mv</name><argument_list pos:start="59:19" pos:end="59:73">(<argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">h</name></expr></argument>, <argument pos:start="59:23" pos:end="59:31"><expr pos:start="59:23" pos:end="59:31"><name pos:start="59:23" pos:end="59:31">MV_FWD_X0</name></expr></argument>, <argument pos:start="59:34" pos:end="59:42"><expr pos:start="59:34" pos:end="59:42"><name pos:start="59:34" pos:end="59:42">MV_FWD_C2</name></expr></argument>, <argument pos:start="59:45" pos:end="59:58"><expr pos:start="59:45" pos:end="59:58"><name pos:start="59:45" pos:end="59:58">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="59:61" pos:end="59:69"><expr pos:start="59:61" pos:end="59:69"><name pos:start="59:61" pos:end="59:69">BLK_16X16</name></expr></argument>, <argument pos:start="59:72" pos:end="59:72"><expr pos:start="59:72" pos:end="59:72"><literal type="number" pos:start="59:72" pos:end="59:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:53"><expr pos:start="61:9" pos:end="61:52"><call pos:start="61:9" pos:end="61:52"><name pos:start="61:9" pos:end="61:19">mv_pred_sym</name><argument_list pos:start="61:20" pos:end="61:52">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">h</name></expr></argument>, <argument pos:start="61:24" pos:end="61:40"><expr pos:start="61:24" pos:end="61:40"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:40"><name pos:start="61:25" pos:end="61:25">h</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:29">mv</name><index pos:start="61:30" pos:end="61:40">[<expr pos:start="61:31" pos:end="61:39"><name pos:start="61:31" pos:end="61:39">MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument pos:start="61:43" pos:end="61:51"><expr pos:start="61:43" pos:end="61:51"><name pos:start="61:43" pos:end="61:51">BLK_16X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:21">case <expr pos:start="65:10" pos:end="65:20"><name pos:start="65:10" pos:end="65:20">B_BWD_16X16</name></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:74"><expr pos:start="67:9" pos:end="67:73"><call pos:start="67:9" pos:end="67:73"><name pos:start="67:9" pos:end="67:18">ff_cavs_mv</name><argument_list pos:start="67:19" pos:end="67:73">(<argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><name pos:start="67:20" pos:end="67:20">h</name></expr></argument>, <argument pos:start="67:23" pos:end="67:31"><expr pos:start="67:23" pos:end="67:31"><name pos:start="67:23" pos:end="67:31">MV_BWD_X0</name></expr></argument>, <argument pos:start="67:34" pos:end="67:42"><expr pos:start="67:34" pos:end="67:42"><name pos:start="67:34" pos:end="67:42">MV_BWD_C2</name></expr></argument>, <argument pos:start="67:45" pos:end="67:58"><expr pos:start="67:45" pos:end="67:58"><name pos:start="67:45" pos:end="67:58">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="67:61" pos:end="67:69"><expr pos:start="67:61" pos:end="67:69"><name pos:start="67:61" pos:end="67:69">BLK_16X16</name></expr></argument>, <argument pos:start="67:72" pos:end="67:72"><expr pos:start="67:72" pos:end="67:72"><literal type="number" pos:start="67:72" pos:end="67:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:15">case <expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:14">B_8X8</name></expr>:</case>

        <for pos:start="73:9" pos:end="75:51">for<control pos:start="73:12" pos:end="73:36">(<init pos:start="73:13" pos:end="73:20"><expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:17">block</name><operator pos:start="73:18" pos:end="73:18">=</operator><literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>;</init><condition pos:start="73:21" pos:end="73:28"><expr pos:start="73:21" pos:end="73:27"><name pos:start="73:21" pos:end="73:25">block</name><operator pos:start="73:26" pos:end="73:26">&lt;</operator><literal type="number" pos:start="73:27" pos:end="73:27">4</literal></expr>;</condition><incr pos:start="73:29" pos:end="73:35"><expr pos:start="73:29" pos:end="73:35"><name pos:start="73:29" pos:end="73:33">block</name><operator pos:start="73:34" pos:end="73:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:13" pos:end="75:51"><block_content pos:start="75:13" pos:end="75:51">

            <expr_stmt pos:start="75:13" pos:end="75:51"><expr pos:start="75:13" pos:end="75:50"><name pos:start="75:13" pos:end="75:27"><name pos:start="75:13" pos:end="75:20">sub_type</name><index pos:start="75:21" pos:end="75:27">[<expr pos:start="75:22" pos:end="75:26"><name pos:start="75:22" pos:end="75:26">block</name></expr>]</index></name> <operator pos:start="75:29" pos:end="75:29">=</operator> <call pos:start="75:31" pos:end="75:50"><name pos:start="75:31" pos:end="75:38">get_bits</name><argument_list pos:start="75:39" pos:end="75:50">(<argument pos:start="75:40" pos:end="75:47"><expr pos:start="75:40" pos:end="75:47"><operator pos:start="75:40" pos:end="75:40">&amp;</operator><name pos:start="75:41" pos:end="75:47"><name pos:start="75:41" pos:end="75:41">h</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:44">s</name><operator pos:start="75:45" pos:end="75:45">.</operator><name pos:start="75:46" pos:end="75:47">gb</name></name></expr></argument>,<argument pos:start="75:49" pos:end="75:49"><expr pos:start="75:49" pos:end="75:49"><literal type="number" pos:start="75:49" pos:end="75:49">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <for pos:start="77:9" pos:end="125:9">for<control pos:start="77:12" pos:end="77:36">(<init pos:start="77:13" pos:end="77:20"><expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:17">block</name><operator pos:start="77:18" pos:end="77:18">=</operator><literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>;</init><condition pos:start="77:21" pos:end="77:28"><expr pos:start="77:21" pos:end="77:27"><name pos:start="77:21" pos:end="77:25">block</name><operator pos:start="77:26" pos:end="77:26">&lt;</operator><literal type="number" pos:start="77:27" pos:end="77:27">4</literal></expr>;</condition><incr pos:start="77:29" pos:end="77:35"><expr pos:start="77:29" pos:end="77:35"><name pos:start="77:29" pos:end="77:33">block</name><operator pos:start="77:34" pos:end="77:35">++</operator></expr></incr>)</control> <block pos:start="77:38" pos:end="125:9">{<block_content pos:start="79:13" pos:end="123:13">

            <switch pos:start="79:13" pos:end="123:13">switch<condition pos:start="79:19" pos:end="79:35">(<expr pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:34"><name pos:start="79:20" pos:end="79:27">sub_type</name><index pos:start="79:28" pos:end="79:34">[<expr pos:start="79:29" pos:end="79:33"><name pos:start="79:29" pos:end="79:33">block</name></expr>]</index></name></expr>)</condition> <block pos:start="79:37" pos:end="123:13">{<block_content pos:start="81:13" pos:end="121:22">

            <case pos:start="81:13" pos:end="81:30">case <expr pos:start="81:18" pos:end="81:29"><name pos:start="81:18" pos:end="81:29">B_SUB_DIRECT</name></expr>:</case>

                <if_stmt pos:start="83:17" pos:end="101:67"><if pos:start="83:17" pos:end="97:17">if<condition pos:start="83:19" pos:end="83:47">(<expr pos:start="83:20" pos:end="83:46"><operator pos:start="83:20" pos:end="83:20">!</operator><name pos:start="83:21" pos:end="83:46"><name pos:start="83:21" pos:end="83:21">h</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:36">col_type_base</name><index pos:start="83:37" pos:end="83:46">[<expr pos:start="83:38" pos:end="83:45"><name pos:start="83:38" pos:end="83:45"><name pos:start="83:38" pos:end="83:38">h</name><operator pos:start="83:39" pos:end="83:40">-&gt;</operator><name pos:start="83:41" pos:end="83:45">mbidx</name></name></expr>]</index></name></expr>)</condition> <block pos:start="83:49" pos:end="97:17">{<block_content pos:start="87:21" pos:end="95:55">

                    <comment type="block" pos:start="85:21" pos:end="85:73">/* intra MB at co-location, do in-plane prediction */</comment>

                    <expr_stmt pos:start="87:21" pos:end="89:55"><expr pos:start="87:21" pos:end="89:54"><call pos:start="87:21" pos:end="89:54"><name pos:start="87:21" pos:end="87:30">ff_cavs_mv</name><argument_list pos:start="87:31" pos:end="89:54">(<argument pos:start="87:32" pos:end="87:32"><expr pos:start="87:32" pos:end="87:32"><name pos:start="87:32" pos:end="87:32">h</name></expr></argument>, <argument pos:start="87:35" pos:end="87:48"><expr pos:start="87:35" pos:end="87:48"><name pos:start="87:35" pos:end="87:48"><name pos:start="87:35" pos:end="87:41">mv_scan</name><index pos:start="87:42" pos:end="87:48">[<expr pos:start="87:43" pos:end="87:47"><name pos:start="87:43" pos:end="87:47">block</name></expr>]</index></name></expr></argument>, <argument pos:start="87:51" pos:end="87:66"><expr pos:start="87:51" pos:end="87:66"><name pos:start="87:51" pos:end="87:64"><name pos:start="87:51" pos:end="87:57">mv_scan</name><index pos:start="87:58" pos:end="87:64">[<expr pos:start="87:59" pos:end="87:63"><name pos:start="87:59" pos:end="87:63">block</name></expr>]</index></name><operator pos:start="87:65" pos:end="87:65">-</operator><literal type="number" pos:start="87:66" pos:end="87:66">3</literal></expr></argument>,

                            <argument pos:start="89:29" pos:end="89:41"><expr pos:start="89:29" pos:end="89:41"><name pos:start="89:29" pos:end="89:41">MV_PRED_BSKIP</name></expr></argument>, <argument pos:start="89:44" pos:end="89:50"><expr pos:start="89:44" pos:end="89:50"><name pos:start="89:44" pos:end="89:50">BLK_8X8</name></expr></argument>, <argument pos:start="89:53" pos:end="89:53"><expr pos:start="89:53" pos:end="89:53"><literal type="number" pos:start="89:53" pos:end="89:53">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="95:55"><expr pos:start="91:21" pos:end="95:54"><call pos:start="91:21" pos:end="95:54"><name pos:start="91:21" pos:end="91:30">ff_cavs_mv</name><argument_list pos:start="91:31" pos:end="95:54">(<argument pos:start="91:32" pos:end="91:32"><expr pos:start="91:32" pos:end="91:32"><name pos:start="91:32" pos:end="91:32">h</name></expr></argument>, <argument pos:start="91:35" pos:end="91:60"><expr pos:start="91:35" pos:end="91:60"><name pos:start="91:35" pos:end="91:48"><name pos:start="91:35" pos:end="91:41">mv_scan</name><index pos:start="91:42" pos:end="91:48">[<expr pos:start="91:43" pos:end="91:47"><name pos:start="91:43" pos:end="91:47">block</name></expr>]</index></name><operator pos:start="91:49" pos:end="91:49">+</operator><name pos:start="91:50" pos:end="91:60">MV_BWD_OFFS</name></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:56"><expr pos:start="93:29" pos:end="93:56"><name pos:start="93:29" pos:end="93:42"><name pos:start="93:29" pos:end="93:35">mv_scan</name><index pos:start="93:36" pos:end="93:42">[<expr pos:start="93:37" pos:end="93:41"><name pos:start="93:37" pos:end="93:41">block</name></expr>]</index></name><operator pos:start="93:43" pos:end="93:43">-</operator><literal type="number" pos:start="93:44" pos:end="93:45">3</literal><operator pos:start="93:45" pos:end="93:45">+</operator><name pos:start="93:46" pos:end="93:56">MV_BWD_OFFS</name></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:41"><expr pos:start="95:29" pos:end="95:41"><name pos:start="95:29" pos:end="95:41">MV_PRED_BSKIP</name></expr></argument>, <argument pos:start="95:44" pos:end="95:50"><expr pos:start="95:44" pos:end="95:50"><name pos:start="95:44" pos:end="95:50">BLK_8X8</name></expr></argument>, <argument pos:start="95:53" pos:end="95:53"><expr pos:start="95:53" pos:end="95:53"><literal type="number" pos:start="95:53" pos:end="95:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="97:19" pos:end="101:67">else<block type="pseudo" pos:start="99:21" pos:end="101:67"><block_content pos:start="99:21" pos:end="101:67">

                    <expr_stmt pos:start="99:21" pos:end="101:67"><expr pos:start="99:21" pos:end="101:66"><call pos:start="99:21" pos:end="101:66"><name pos:start="99:21" pos:end="99:34">mv_pred_direct</name><argument_list pos:start="99:35" pos:end="101:66">(<argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">h</name></expr></argument>,<argument pos:start="99:38" pos:end="99:59"><expr pos:start="99:38" pos:end="99:59"><operator pos:start="99:38" pos:end="99:38">&amp;</operator><name pos:start="99:39" pos:end="99:59"><name pos:start="99:39" pos:end="99:39">h</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:43">mv</name><index pos:start="99:44" pos:end="99:59">[<expr pos:start="99:45" pos:end="99:58"><name pos:start="99:45" pos:end="99:58"><name pos:start="99:45" pos:end="99:51">mv_scan</name><index pos:start="99:52" pos:end="99:58">[<expr pos:start="99:53" pos:end="99:57"><name pos:start="99:53" pos:end="99:57">block</name></expr>]</index></name></expr>]</index></name></expr></argument>,

                                   <argument pos:start="101:36" pos:end="101:65"><expr pos:start="101:36" pos:end="101:65"><operator pos:start="101:36" pos:end="101:36">&amp;</operator><name pos:start="101:37" pos:end="101:65"><name pos:start="101:37" pos:end="101:37">h</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:45">col_mv</name><index pos:start="101:46" pos:end="101:65">[<expr pos:start="101:47" pos:end="101:64"><name pos:start="101:47" pos:end="101:54"><name pos:start="101:47" pos:end="101:47">h</name><operator pos:start="101:48" pos:end="101:49">-&gt;</operator><name pos:start="101:50" pos:end="101:54">mbidx</name></name><operator pos:start="101:55" pos:end="101:55">*</operator><literal type="number" pos:start="101:56" pos:end="101:58">4</literal> <operator pos:start="101:58" pos:end="101:58">+</operator> <name pos:start="101:60" pos:end="101:64">block</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <break pos:start="103:17" pos:end="103:22">break;</break>

            <case pos:start="105:13" pos:end="105:27">case <expr pos:start="105:18" pos:end="105:26"><name pos:start="105:18" pos:end="105:26">B_SUB_FWD</name></expr>:</case>

                <expr_stmt pos:start="107:17" pos:end="109:52"><expr pos:start="107:17" pos:end="109:51"><call pos:start="107:17" pos:end="109:51"><name pos:start="107:17" pos:end="107:26">ff_cavs_mv</name><argument_list pos:start="107:27" pos:end="109:51">(<argument pos:start="107:28" pos:end="107:28"><expr pos:start="107:28" pos:end="107:28"><name pos:start="107:28" pos:end="107:28">h</name></expr></argument>, <argument pos:start="107:31" pos:end="107:44"><expr pos:start="107:31" pos:end="107:44"><name pos:start="107:31" pos:end="107:44"><name pos:start="107:31" pos:end="107:37">mv_scan</name><index pos:start="107:38" pos:end="107:44">[<expr pos:start="107:39" pos:end="107:43"><name pos:start="107:39" pos:end="107:43">block</name></expr>]</index></name></expr></argument>, <argument pos:start="107:47" pos:end="107:62"><expr pos:start="107:47" pos:end="107:62"><name pos:start="107:47" pos:end="107:60"><name pos:start="107:47" pos:end="107:53">mv_scan</name><index pos:start="107:54" pos:end="107:60">[<expr pos:start="107:55" pos:end="107:59"><name pos:start="107:55" pos:end="107:59">block</name></expr>]</index></name><operator pos:start="107:61" pos:end="107:61">-</operator><literal type="number" pos:start="107:62" pos:end="107:62">3</literal></expr></argument>,

                        <argument pos:start="109:25" pos:end="109:38"><expr pos:start="109:25" pos:end="109:38"><name pos:start="109:25" pos:end="109:38">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="109:41" pos:end="109:47"><expr pos:start="109:41" pos:end="109:47"><name pos:start="109:41" pos:end="109:47">BLK_8X8</name></expr></argument>, <argument pos:start="109:50" pos:end="109:50"><expr pos:start="109:50" pos:end="109:50"><literal type="number" pos:start="109:50" pos:end="109:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="111:17" pos:end="111:22">break;</break>

            <case pos:start="113:13" pos:end="113:27">case <expr pos:start="113:18" pos:end="113:26"><name pos:start="113:18" pos:end="113:26">B_SUB_SYM</name></expr>:</case>

                <expr_stmt pos:start="115:17" pos:end="117:52"><expr pos:start="115:17" pos:end="117:51"><call pos:start="115:17" pos:end="117:51"><name pos:start="115:17" pos:end="115:26">ff_cavs_mv</name><argument_list pos:start="115:27" pos:end="117:51">(<argument pos:start="115:28" pos:end="115:28"><expr pos:start="115:28" pos:end="115:28"><name pos:start="115:28" pos:end="115:28">h</name></expr></argument>, <argument pos:start="115:31" pos:end="115:44"><expr pos:start="115:31" pos:end="115:44"><name pos:start="115:31" pos:end="115:44"><name pos:start="115:31" pos:end="115:37">mv_scan</name><index pos:start="115:38" pos:end="115:44">[<expr pos:start="115:39" pos:end="115:43"><name pos:start="115:39" pos:end="115:43">block</name></expr>]</index></name></expr></argument>, <argument pos:start="115:47" pos:end="115:62"><expr pos:start="115:47" pos:end="115:62"><name pos:start="115:47" pos:end="115:60"><name pos:start="115:47" pos:end="115:53">mv_scan</name><index pos:start="115:54" pos:end="115:60">[<expr pos:start="115:55" pos:end="115:59"><name pos:start="115:55" pos:end="115:59">block</name></expr>]</index></name><operator pos:start="115:61" pos:end="115:61">-</operator><literal type="number" pos:start="115:62" pos:end="115:62">3</literal></expr></argument>,

                        <argument pos:start="117:25" pos:end="117:38"><expr pos:start="117:25" pos:end="117:38"><name pos:start="117:25" pos:end="117:38">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="117:41" pos:end="117:47"><expr pos:start="117:41" pos:end="117:47"><name pos:start="117:41" pos:end="117:47">BLK_8X8</name></expr></argument>, <argument pos:start="117:50" pos:end="117:50"><expr pos:start="117:50" pos:end="117:50"><literal type="number" pos:start="117:50" pos:end="117:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:64"><expr pos:start="119:17" pos:end="119:63"><call pos:start="119:17" pos:end="119:63"><name pos:start="119:17" pos:end="119:27">mv_pred_sym</name><argument_list pos:start="119:28" pos:end="119:63">(<argument pos:start="119:29" pos:end="119:29"><expr pos:start="119:29" pos:end="119:29"><name pos:start="119:29" pos:end="119:29">h</name></expr></argument>, <argument pos:start="119:32" pos:end="119:53"><expr pos:start="119:32" pos:end="119:53"><operator pos:start="119:32" pos:end="119:32">&amp;</operator><name pos:start="119:33" pos:end="119:53"><name pos:start="119:33" pos:end="119:33">h</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:37">mv</name><index pos:start="119:38" pos:end="119:53">[<expr pos:start="119:39" pos:end="119:52"><name pos:start="119:39" pos:end="119:52"><name pos:start="119:39" pos:end="119:45">mv_scan</name><index pos:start="119:46" pos:end="119:52">[<expr pos:start="119:47" pos:end="119:51"><name pos:start="119:47" pos:end="119:51">block</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="119:56" pos:end="119:62"><expr pos:start="119:56" pos:end="119:62"><name pos:start="119:56" pos:end="119:62">BLK_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="121:17" pos:end="121:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>

        <for pos:start="127:9" pos:end="137:9">for<control pos:start="127:12" pos:end="127:36">(<init pos:start="127:13" pos:end="127:20"><expr pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:17">block</name><operator pos:start="127:18" pos:end="127:18">=</operator><literal type="number" pos:start="127:19" pos:end="127:19">0</literal></expr>;</init><condition pos:start="127:21" pos:end="127:28"><expr pos:start="127:21" pos:end="127:27"><name pos:start="127:21" pos:end="127:25">block</name><operator pos:start="127:26" pos:end="127:26">&lt;</operator><literal type="number" pos:start="127:27" pos:end="127:27">4</literal></expr>;</condition><incr pos:start="127:29" pos:end="127:35"><expr pos:start="127:29" pos:end="127:35"><name pos:start="127:29" pos:end="127:33">block</name><operator pos:start="127:34" pos:end="127:35">++</operator></expr></incr>)</control> <block pos:start="127:38" pos:end="137:9">{<block_content pos:start="129:13" pos:end="135:52">

            <if_stmt pos:start="129:13" pos:end="135:52"><if pos:start="129:13" pos:end="135:52">if<condition pos:start="129:15" pos:end="129:44">(<expr pos:start="129:16" pos:end="129:43"><name pos:start="129:16" pos:end="129:30"><name pos:start="129:16" pos:end="129:23">sub_type</name><index pos:start="129:24" pos:end="129:30">[<expr pos:start="129:25" pos:end="129:29"><name pos:start="129:25" pos:end="129:29">block</name></expr>]</index></name> <operator pos:start="129:32" pos:end="129:33">==</operator> <name pos:start="129:35" pos:end="129:43">B_SUB_BWD</name></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="135:52"><block_content pos:start="131:17" pos:end="135:52">

                <expr_stmt pos:start="131:17" pos:end="135:52"><expr pos:start="131:17" pos:end="135:51"><call pos:start="131:17" pos:end="135:51"><name pos:start="131:17" pos:end="131:26">ff_cavs_mv</name><argument_list pos:start="131:27" pos:end="135:51">(<argument pos:start="131:28" pos:end="131:28"><expr pos:start="131:28" pos:end="131:28"><name pos:start="131:28" pos:end="131:28">h</name></expr></argument>, <argument pos:start="131:31" pos:end="131:56"><expr pos:start="131:31" pos:end="131:56"><name pos:start="131:31" pos:end="131:44"><name pos:start="131:31" pos:end="131:37">mv_scan</name><index pos:start="131:38" pos:end="131:44">[<expr pos:start="131:39" pos:end="131:43"><name pos:start="131:39" pos:end="131:43">block</name></expr>]</index></name><operator pos:start="131:45" pos:end="131:45">+</operator><name pos:start="131:46" pos:end="131:56">MV_BWD_OFFS</name></expr></argument>,

                        <argument pos:start="133:25" pos:end="133:52"><expr pos:start="133:25" pos:end="133:52"><name pos:start="133:25" pos:end="133:38"><name pos:start="133:25" pos:end="133:31">mv_scan</name><index pos:start="133:32" pos:end="133:38">[<expr pos:start="133:33" pos:end="133:37"><name pos:start="133:33" pos:end="133:37">block</name></expr>]</index></name><operator pos:start="133:39" pos:end="133:39">+</operator><name pos:start="133:40" pos:end="133:50">MV_BWD_OFFS</name><operator pos:start="133:51" pos:end="133:51">-</operator><literal type="number" pos:start="133:52" pos:end="133:52">3</literal></expr></argument>,

                        <argument pos:start="135:25" pos:end="135:38"><expr pos:start="135:25" pos:end="135:38"><name pos:start="135:25" pos:end="135:38">MV_PRED_MEDIAN</name></expr></argument>, <argument pos:start="135:41" pos:end="135:47"><expr pos:start="135:41" pos:end="135:47"><name pos:start="135:41" pos:end="135:47">BLK_8X8</name></expr></argument>, <argument pos:start="135:50" pos:end="135:50"><expr pos:start="135:50" pos:end="135:50"><literal type="number" pos:start="135:50" pos:end="135:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <break pos:start="139:9" pos:end="139:14">break;</break>

    <default pos:start="141:5" pos:end="141:12">default:</default>

        <expr_stmt pos:start="143:9" pos:end="143:65"><expr pos:start="143:9" pos:end="143:64"><call pos:start="143:9" pos:end="143:64"><name pos:start="143:9" pos:end="143:18">av_assert2</name><argument_list pos:start="143:19" pos:end="143:64">(<argument pos:start="143:20" pos:end="143:63"><expr pos:start="143:20" pos:end="143:63"><operator pos:start="143:20" pos:end="143:20">(</operator><name pos:start="143:21" pos:end="143:27">mb_type</name> <operator pos:start="143:29" pos:end="143:29">&gt;</operator> <name pos:start="143:31" pos:end="143:41">B_SYM_16X16</name><operator pos:start="143:42" pos:end="143:42">)</operator> <operator pos:start="143:44" pos:end="143:45">&amp;&amp;</operator> <operator pos:start="143:47" pos:end="143:47">(</operator><name pos:start="143:48" pos:end="143:54">mb_type</name> <operator pos:start="143:56" pos:end="143:56">&lt;</operator> <name pos:start="143:58" pos:end="143:62">B_8X8</name><operator pos:start="143:63" pos:end="143:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:49"><expr pos:start="145:9" pos:end="145:48"><name pos:start="145:9" pos:end="145:13">flags</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <name pos:start="145:17" pos:end="145:48"><name pos:start="145:17" pos:end="145:39">ff_cavs_partition_flags</name><index pos:start="145:40" pos:end="145:48">[<expr pos:start="145:41" pos:end="145:47"><name pos:start="145:41" pos:end="145:47">mb_type</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="199:9"><if pos:start="147:9" pos:end="173:9">if<condition pos:start="147:11" pos:end="147:23">(<expr pos:start="147:12" pos:end="147:22"><name pos:start="147:12" pos:end="147:18">mb_type</name> <operator pos:start="147:20" pos:end="147:20">&amp;</operator> <literal type="number" pos:start="147:22" pos:end="147:22">1</literal></expr>)</condition> <block pos:start="147:25" pos:end="173:9">{<block_content pos:start="149:13" pos:end="171:79"> <comment type="block" pos:start="147:27" pos:end="147:53">/* 16x8 macroblock types */</comment>

            <if_stmt pos:start="149:13" pos:end="151:79"><if pos:start="149:13" pos:end="151:79">if<condition pos:start="149:15" pos:end="149:28">(<expr pos:start="149:16" pos:end="149:27"><name pos:start="149:16" pos:end="149:20">flags</name> <operator pos:start="149:22" pos:end="149:22">&amp;</operator> <name pos:start="149:24" pos:end="149:27">FWD0</name></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:79"><block_content pos:start="151:17" pos:end="151:79">

                <expr_stmt pos:start="151:17" pos:end="151:79"><expr pos:start="151:17" pos:end="151:78"><call pos:start="151:17" pos:end="151:78"><name pos:start="151:17" pos:end="151:26">ff_cavs_mv</name><argument_list pos:start="151:27" pos:end="151:78">(<argument pos:start="151:28" pos:end="151:28"><expr pos:start="151:28" pos:end="151:28"><name pos:start="151:28" pos:end="151:28">h</name></expr></argument>, <argument pos:start="151:31" pos:end="151:39"><expr pos:start="151:31" pos:end="151:39"><name pos:start="151:31" pos:end="151:39">MV_FWD_X0</name></expr></argument>, <argument pos:start="151:42" pos:end="151:50"><expr pos:start="151:42" pos:end="151:50"><name pos:start="151:42" pos:end="151:50">MV_FWD_C2</name></expr></argument>, <argument pos:start="151:53" pos:end="151:63"><expr pos:start="151:53" pos:end="151:63"><name pos:start="151:53" pos:end="151:63">MV_PRED_TOP</name></expr></argument>,  <argument pos:start="151:67" pos:end="151:74"><expr pos:start="151:67" pos:end="151:74"><name pos:start="151:67" pos:end="151:74">BLK_16X8</name></expr></argument>, <argument pos:start="151:77" pos:end="151:77"><expr pos:start="151:77" pos:end="151:77"><literal type="number" pos:start="151:77" pos:end="151:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="153:13" pos:end="155:60"><if pos:start="153:13" pos:end="155:60">if<condition pos:start="153:15" pos:end="153:28">(<expr pos:start="153:16" pos:end="153:27"><name pos:start="153:16" pos:end="153:20">flags</name> <operator pos:start="153:22" pos:end="153:22">&amp;</operator> <name pos:start="153:24" pos:end="153:27">SYM0</name></expr>)</condition><block type="pseudo" pos:start="155:17" pos:end="155:60"><block_content pos:start="155:17" pos:end="155:60">

                <expr_stmt pos:start="155:17" pos:end="155:60"><expr pos:start="155:17" pos:end="155:59"><call pos:start="155:17" pos:end="155:59"><name pos:start="155:17" pos:end="155:27">mv_pred_sym</name><argument_list pos:start="155:28" pos:end="155:59">(<argument pos:start="155:29" pos:end="155:29"><expr pos:start="155:29" pos:end="155:29"><name pos:start="155:29" pos:end="155:29">h</name></expr></argument>, <argument pos:start="155:32" pos:end="155:48"><expr pos:start="155:32" pos:end="155:48"><operator pos:start="155:32" pos:end="155:32">&amp;</operator><name pos:start="155:33" pos:end="155:48"><name pos:start="155:33" pos:end="155:33">h</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:37">mv</name><index pos:start="155:38" pos:end="155:48">[<expr pos:start="155:39" pos:end="155:47"><name pos:start="155:39" pos:end="155:47">MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument pos:start="155:51" pos:end="155:58"><expr pos:start="155:51" pos:end="155:58"><name pos:start="155:51" pos:end="155:58">BLK_16X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="157:13" pos:end="159:79"><if pos:start="157:13" pos:end="159:79">if<condition pos:start="157:15" pos:end="157:28">(<expr pos:start="157:16" pos:end="157:27"><name pos:start="157:16" pos:end="157:20">flags</name> <operator pos:start="157:22" pos:end="157:22">&amp;</operator> <name pos:start="157:24" pos:end="157:27">FWD1</name></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:79"><block_content pos:start="159:17" pos:end="159:79">

                <expr_stmt pos:start="159:17" pos:end="159:79"><expr pos:start="159:17" pos:end="159:78"><call pos:start="159:17" pos:end="159:78"><name pos:start="159:17" pos:end="159:26">ff_cavs_mv</name><argument_list pos:start="159:27" pos:end="159:78">(<argument pos:start="159:28" pos:end="159:28"><expr pos:start="159:28" pos:end="159:28"><name pos:start="159:28" pos:end="159:28">h</name></expr></argument>, <argument pos:start="159:31" pos:end="159:39"><expr pos:start="159:31" pos:end="159:39"><name pos:start="159:31" pos:end="159:39">MV_FWD_X2</name></expr></argument>, <argument pos:start="159:42" pos:end="159:50"><expr pos:start="159:42" pos:end="159:50"><name pos:start="159:42" pos:end="159:50">MV_FWD_A1</name></expr></argument>, <argument pos:start="159:53" pos:end="159:64"><expr pos:start="159:53" pos:end="159:64"><name pos:start="159:53" pos:end="159:64">MV_PRED_LEFT</name></expr></argument>, <argument pos:start="159:67" pos:end="159:74"><expr pos:start="159:67" pos:end="159:74"><name pos:start="159:67" pos:end="159:74">BLK_16X8</name></expr></argument>, <argument pos:start="159:77" pos:end="159:77"><expr pos:start="159:77" pos:end="159:77"><literal type="number" pos:start="159:77" pos:end="159:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="161:13" pos:end="163:60"><if pos:start="161:13" pos:end="163:60">if<condition pos:start="161:15" pos:end="161:28">(<expr pos:start="161:16" pos:end="161:27"><name pos:start="161:16" pos:end="161:20">flags</name> <operator pos:start="161:22" pos:end="161:22">&amp;</operator> <name pos:start="161:24" pos:end="161:27">SYM1</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:60"><block_content pos:start="163:17" pos:end="163:60">

                <expr_stmt pos:start="163:17" pos:end="163:60"><expr pos:start="163:17" pos:end="163:59"><call pos:start="163:17" pos:end="163:59"><name pos:start="163:17" pos:end="163:27">mv_pred_sym</name><argument_list pos:start="163:28" pos:end="163:59">(<argument pos:start="163:29" pos:end="163:29"><expr pos:start="163:29" pos:end="163:29"><name pos:start="163:29" pos:end="163:29">h</name></expr></argument>, <argument pos:start="163:32" pos:end="163:48"><expr pos:start="163:32" pos:end="163:48"><operator pos:start="163:32" pos:end="163:32">&amp;</operator><name pos:start="163:33" pos:end="163:48"><name pos:start="163:33" pos:end="163:33">h</name><operator pos:start="163:34" pos:end="163:35">-&gt;</operator><name pos:start="163:36" pos:end="163:37">mv</name><index pos:start="163:38" pos:end="163:48">[<expr pos:start="163:39" pos:end="163:47"><name pos:start="163:39" pos:end="163:47">MV_FWD_X2</name></expr>]</index></name></expr></argument>, <argument pos:start="163:51" pos:end="163:58"><expr pos:start="163:51" pos:end="163:58"><name pos:start="163:51" pos:end="163:58">BLK_16X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="165:13" pos:end="167:79"><if pos:start="165:13" pos:end="167:79">if<condition pos:start="165:15" pos:end="165:28">(<expr pos:start="165:16" pos:end="165:27"><name pos:start="165:16" pos:end="165:20">flags</name> <operator pos:start="165:22" pos:end="165:22">&amp;</operator> <name pos:start="165:24" pos:end="165:27">BWD0</name></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:79"><block_content pos:start="167:17" pos:end="167:79">

                <expr_stmt pos:start="167:17" pos:end="167:79"><expr pos:start="167:17" pos:end="167:78"><call pos:start="167:17" pos:end="167:78"><name pos:start="167:17" pos:end="167:26">ff_cavs_mv</name><argument_list pos:start="167:27" pos:end="167:78">(<argument pos:start="167:28" pos:end="167:28"><expr pos:start="167:28" pos:end="167:28"><name pos:start="167:28" pos:end="167:28">h</name></expr></argument>, <argument pos:start="167:31" pos:end="167:39"><expr pos:start="167:31" pos:end="167:39"><name pos:start="167:31" pos:end="167:39">MV_BWD_X0</name></expr></argument>, <argument pos:start="167:42" pos:end="167:50"><expr pos:start="167:42" pos:end="167:50"><name pos:start="167:42" pos:end="167:50">MV_BWD_C2</name></expr></argument>, <argument pos:start="167:53" pos:end="167:63"><expr pos:start="167:53" pos:end="167:63"><name pos:start="167:53" pos:end="167:63">MV_PRED_TOP</name></expr></argument>,  <argument pos:start="167:67" pos:end="167:74"><expr pos:start="167:67" pos:end="167:74"><name pos:start="167:67" pos:end="167:74">BLK_16X8</name></expr></argument>, <argument pos:start="167:77" pos:end="167:77"><expr pos:start="167:77" pos:end="167:77"><literal type="number" pos:start="167:77" pos:end="167:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="169:13" pos:end="171:79"><if pos:start="169:13" pos:end="171:79">if<condition pos:start="169:15" pos:end="169:28">(<expr pos:start="169:16" pos:end="169:27"><name pos:start="169:16" pos:end="169:20">flags</name> <operator pos:start="169:22" pos:end="169:22">&amp;</operator> <name pos:start="169:24" pos:end="169:27">BWD1</name></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:79"><block_content pos:start="171:17" pos:end="171:79">

                <expr_stmt pos:start="171:17" pos:end="171:79"><expr pos:start="171:17" pos:end="171:78"><call pos:start="171:17" pos:end="171:78"><name pos:start="171:17" pos:end="171:26">ff_cavs_mv</name><argument_list pos:start="171:27" pos:end="171:78">(<argument pos:start="171:28" pos:end="171:28"><expr pos:start="171:28" pos:end="171:28"><name pos:start="171:28" pos:end="171:28">h</name></expr></argument>, <argument pos:start="171:31" pos:end="171:39"><expr pos:start="171:31" pos:end="171:39"><name pos:start="171:31" pos:end="171:39">MV_BWD_X2</name></expr></argument>, <argument pos:start="171:42" pos:end="171:50"><expr pos:start="171:42" pos:end="171:50"><name pos:start="171:42" pos:end="171:50">MV_BWD_A1</name></expr></argument>, <argument pos:start="171:53" pos:end="171:64"><expr pos:start="171:53" pos:end="171:64"><name pos:start="171:53" pos:end="171:64">MV_PRED_LEFT</name></expr></argument>, <argument pos:start="171:67" pos:end="171:74"><expr pos:start="171:67" pos:end="171:74"><name pos:start="171:67" pos:end="171:74">BLK_16X8</name></expr></argument>, <argument pos:start="171:77" pos:end="171:77"><expr pos:start="171:77" pos:end="171:77"><literal type="number" pos:start="171:77" pos:end="171:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="173:11" pos:end="199:9">else <block pos:start="173:16" pos:end="199:9">{<block_content pos:start="175:13" pos:end="197:78">          <comment type="block" pos:start="173:27" pos:end="173:53">/* 8x16 macroblock types */</comment>

            <if_stmt pos:start="175:13" pos:end="177:79"><if pos:start="175:13" pos:end="177:79">if<condition pos:start="175:15" pos:end="175:28">(<expr pos:start="175:16" pos:end="175:27"><name pos:start="175:16" pos:end="175:20">flags</name> <operator pos:start="175:22" pos:end="175:22">&amp;</operator> <name pos:start="175:24" pos:end="175:27">FWD0</name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:79"><block_content pos:start="177:17" pos:end="177:79">

                <expr_stmt pos:start="177:17" pos:end="177:79"><expr pos:start="177:17" pos:end="177:78"><call pos:start="177:17" pos:end="177:78"><name pos:start="177:17" pos:end="177:26">ff_cavs_mv</name><argument_list pos:start="177:27" pos:end="177:78">(<argument pos:start="177:28" pos:end="177:28"><expr pos:start="177:28" pos:end="177:28"><name pos:start="177:28" pos:end="177:28">h</name></expr></argument>, <argument pos:start="177:31" pos:end="177:39"><expr pos:start="177:31" pos:end="177:39"><name pos:start="177:31" pos:end="177:39">MV_FWD_X0</name></expr></argument>, <argument pos:start="177:42" pos:end="177:50"><expr pos:start="177:42" pos:end="177:50"><name pos:start="177:42" pos:end="177:50">MV_FWD_B3</name></expr></argument>, <argument pos:start="177:53" pos:end="177:64"><expr pos:start="177:53" pos:end="177:64"><name pos:start="177:53" pos:end="177:64">MV_PRED_LEFT</name></expr></argument>, <argument pos:start="177:67" pos:end="177:74"><expr pos:start="177:67" pos:end="177:74"><name pos:start="177:67" pos:end="177:74">BLK_8X16</name></expr></argument>, <argument pos:start="177:77" pos:end="177:77"><expr pos:start="177:77" pos:end="177:77"><literal type="number" pos:start="177:77" pos:end="177:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="179:13" pos:end="181:60"><if pos:start="179:13" pos:end="181:60">if<condition pos:start="179:15" pos:end="179:28">(<expr pos:start="179:16" pos:end="179:27"><name pos:start="179:16" pos:end="179:20">flags</name> <operator pos:start="179:22" pos:end="179:22">&amp;</operator> <name pos:start="179:24" pos:end="179:27">SYM0</name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:60"><block_content pos:start="181:17" pos:end="181:60">

                <expr_stmt pos:start="181:17" pos:end="181:60"><expr pos:start="181:17" pos:end="181:59"><call pos:start="181:17" pos:end="181:59"><name pos:start="181:17" pos:end="181:27">mv_pred_sym</name><argument_list pos:start="181:28" pos:end="181:59">(<argument pos:start="181:29" pos:end="181:29"><expr pos:start="181:29" pos:end="181:29"><name pos:start="181:29" pos:end="181:29">h</name></expr></argument>, <argument pos:start="181:32" pos:end="181:48"><expr pos:start="181:32" pos:end="181:48"><operator pos:start="181:32" pos:end="181:32">&amp;</operator><name pos:start="181:33" pos:end="181:48"><name pos:start="181:33" pos:end="181:33">h</name><operator pos:start="181:34" pos:end="181:35">-&gt;</operator><name pos:start="181:36" pos:end="181:37">mv</name><index pos:start="181:38" pos:end="181:48">[<expr pos:start="181:39" pos:end="181:47"><name pos:start="181:39" pos:end="181:47">MV_FWD_X0</name></expr>]</index></name></expr></argument>, <argument pos:start="181:51" pos:end="181:58"><expr pos:start="181:51" pos:end="181:58"><name pos:start="181:51" pos:end="181:58">BLK_8X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="185:78"><if pos:start="183:13" pos:end="185:78">if<condition pos:start="183:15" pos:end="183:28">(<expr pos:start="183:16" pos:end="183:27"><name pos:start="183:16" pos:end="183:20">flags</name> <operator pos:start="183:22" pos:end="183:22">&amp;</operator> <name pos:start="183:24" pos:end="183:27">FWD1</name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:78"><block_content pos:start="185:17" pos:end="185:78">

                <expr_stmt pos:start="185:17" pos:end="185:78"><expr pos:start="185:17" pos:end="185:77"><call pos:start="185:17" pos:end="185:77"><name pos:start="185:17" pos:end="185:26">ff_cavs_mv</name><argument_list pos:start="185:27" pos:end="185:77">(<argument pos:start="185:28" pos:end="185:28"><expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">h</name></expr></argument>,<argument pos:start="185:30" pos:end="185:38"><expr pos:start="185:30" pos:end="185:38"><name pos:start="185:30" pos:end="185:38">MV_FWD_X1</name></expr></argument>,<argument pos:start="185:40" pos:end="185:48"><expr pos:start="185:40" pos:end="185:48"><name pos:start="185:40" pos:end="185:48">MV_FWD_C2</name></expr></argument>,<argument pos:start="185:50" pos:end="185:65"><expr pos:start="185:50" pos:end="185:65"><name pos:start="185:50" pos:end="185:65">MV_PRED_TOPRIGHT</name></expr></argument>,<argument pos:start="185:67" pos:end="185:74"><expr pos:start="185:67" pos:end="185:74"><name pos:start="185:67" pos:end="185:74">BLK_8X16</name></expr></argument>,<argument pos:start="185:76" pos:end="185:76"><expr pos:start="185:76" pos:end="185:76"><literal type="number" pos:start="185:76" pos:end="185:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="187:13" pos:end="189:60"><if pos:start="187:13" pos:end="189:60">if<condition pos:start="187:15" pos:end="187:28">(<expr pos:start="187:16" pos:end="187:27"><name pos:start="187:16" pos:end="187:20">flags</name> <operator pos:start="187:22" pos:end="187:22">&amp;</operator> <name pos:start="187:24" pos:end="187:27">SYM1</name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:60"><block_content pos:start="189:17" pos:end="189:60">

                <expr_stmt pos:start="189:17" pos:end="189:60"><expr pos:start="189:17" pos:end="189:59"><call pos:start="189:17" pos:end="189:59"><name pos:start="189:17" pos:end="189:27">mv_pred_sym</name><argument_list pos:start="189:28" pos:end="189:59">(<argument pos:start="189:29" pos:end="189:29"><expr pos:start="189:29" pos:end="189:29"><name pos:start="189:29" pos:end="189:29">h</name></expr></argument>, <argument pos:start="189:32" pos:end="189:48"><expr pos:start="189:32" pos:end="189:48"><operator pos:start="189:32" pos:end="189:32">&amp;</operator><name pos:start="189:33" pos:end="189:48"><name pos:start="189:33" pos:end="189:33">h</name><operator pos:start="189:34" pos:end="189:35">-&gt;</operator><name pos:start="189:36" pos:end="189:37">mv</name><index pos:start="189:38" pos:end="189:48">[<expr pos:start="189:39" pos:end="189:47"><name pos:start="189:39" pos:end="189:47">MV_FWD_X1</name></expr>]</index></name></expr></argument>, <argument pos:start="189:51" pos:end="189:58"><expr pos:start="189:51" pos:end="189:58"><name pos:start="189:51" pos:end="189:58">BLK_8X16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="191:13" pos:end="193:79"><if pos:start="191:13" pos:end="193:79">if<condition pos:start="191:15" pos:end="191:28">(<expr pos:start="191:16" pos:end="191:27"><name pos:start="191:16" pos:end="191:20">flags</name> <operator pos:start="191:22" pos:end="191:22">&amp;</operator> <name pos:start="191:24" pos:end="191:27">BWD0</name></expr>)</condition><block type="pseudo" pos:start="193:17" pos:end="193:79"><block_content pos:start="193:17" pos:end="193:79">

                <expr_stmt pos:start="193:17" pos:end="193:79"><expr pos:start="193:17" pos:end="193:78"><call pos:start="193:17" pos:end="193:78"><name pos:start="193:17" pos:end="193:26">ff_cavs_mv</name><argument_list pos:start="193:27" pos:end="193:78">(<argument pos:start="193:28" pos:end="193:28"><expr pos:start="193:28" pos:end="193:28"><name pos:start="193:28" pos:end="193:28">h</name></expr></argument>, <argument pos:start="193:31" pos:end="193:39"><expr pos:start="193:31" pos:end="193:39"><name pos:start="193:31" pos:end="193:39">MV_BWD_X0</name></expr></argument>, <argument pos:start="193:42" pos:end="193:50"><expr pos:start="193:42" pos:end="193:50"><name pos:start="193:42" pos:end="193:50">MV_BWD_B3</name></expr></argument>, <argument pos:start="193:53" pos:end="193:64"><expr pos:start="193:53" pos:end="193:64"><name pos:start="193:53" pos:end="193:64">MV_PRED_LEFT</name></expr></argument>, <argument pos:start="193:67" pos:end="193:74"><expr pos:start="193:67" pos:end="193:74"><name pos:start="193:67" pos:end="193:74">BLK_8X16</name></expr></argument>, <argument pos:start="193:77" pos:end="193:77"><expr pos:start="193:77" pos:end="193:77"><literal type="number" pos:start="193:77" pos:end="193:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="195:13" pos:end="197:78"><if pos:start="195:13" pos:end="197:78">if<condition pos:start="195:15" pos:end="195:28">(<expr pos:start="195:16" pos:end="195:27"><name pos:start="195:16" pos:end="195:20">flags</name> <operator pos:start="195:22" pos:end="195:22">&amp;</operator> <name pos:start="195:24" pos:end="195:27">BWD1</name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:78"><block_content pos:start="197:17" pos:end="197:78">

                <expr_stmt pos:start="197:17" pos:end="197:78"><expr pos:start="197:17" pos:end="197:77"><call pos:start="197:17" pos:end="197:77"><name pos:start="197:17" pos:end="197:26">ff_cavs_mv</name><argument_list pos:start="197:27" pos:end="197:77">(<argument pos:start="197:28" pos:end="197:28"><expr pos:start="197:28" pos:end="197:28"><name pos:start="197:28" pos:end="197:28">h</name></expr></argument>,<argument pos:start="197:30" pos:end="197:38"><expr pos:start="197:30" pos:end="197:38"><name pos:start="197:30" pos:end="197:38">MV_BWD_X1</name></expr></argument>,<argument pos:start="197:40" pos:end="197:48"><expr pos:start="197:40" pos:end="197:48"><name pos:start="197:40" pos:end="197:48">MV_BWD_C2</name></expr></argument>,<argument pos:start="197:50" pos:end="197:65"><expr pos:start="197:50" pos:end="197:65"><name pos:start="197:50" pos:end="197:65">MV_PRED_TOPRIGHT</name></expr></argument>,<argument pos:start="197:67" pos:end="197:74"><expr pos:start="197:67" pos:end="197:74"><name pos:start="197:67" pos:end="197:74">BLK_8X16</name></expr></argument>,<argument pos:start="197:76" pos:end="197:76"><expr pos:start="197:76" pos:end="197:76"><literal type="number" pos:start="197:76" pos:end="197:76">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="203:5" pos:end="203:30"><expr pos:start="203:5" pos:end="203:29"><call pos:start="203:5" pos:end="203:29"><name pos:start="203:5" pos:end="203:17">ff_cavs_inter</name><argument_list pos:start="203:18" pos:end="203:29">(<argument pos:start="203:19" pos:end="203:19"><expr pos:start="203:19" pos:end="203:19"><name pos:start="203:19" pos:end="203:19">h</name></expr></argument>, <argument pos:start="203:22" pos:end="203:28"><expr pos:start="203:22" pos:end="203:28"><name pos:start="203:22" pos:end="203:28">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:30"><expr pos:start="205:5" pos:end="205:29"><call pos:start="205:5" pos:end="205:29"><name pos:start="205:5" pos:end="205:26">set_intra_mode_default</name><argument_list pos:start="205:27" pos:end="205:29">(<argument pos:start="205:28" pos:end="205:28"><expr pos:start="205:28" pos:end="205:28"><name pos:start="205:28" pos:end="205:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="207:5" pos:end="209:33"><if pos:start="207:5" pos:end="209:33">if<condition pos:start="207:7" pos:end="207:25">(<expr pos:start="207:8" pos:end="207:24"><name pos:start="207:8" pos:end="207:14">mb_type</name> <operator pos:start="207:16" pos:end="207:17">!=</operator> <name pos:start="207:19" pos:end="207:24">B_SKIP</name></expr>)</condition><block type="pseudo" pos:start="209:9" pos:end="209:33"><block_content pos:start="209:9" pos:end="209:33">

        <expr_stmt pos:start="209:9" pos:end="209:33"><expr pos:start="209:9" pos:end="209:32"><call pos:start="209:9" pos:end="209:32"><name pos:start="209:9" pos:end="209:29">decode_residual_inter</name><argument_list pos:start="209:30" pos:end="209:32">(<argument pos:start="209:31" pos:end="209:31"><expr pos:start="209:31" pos:end="209:31"><name pos:start="209:31" pos:end="209:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:30"><expr pos:start="211:5" pos:end="211:29"><call pos:start="211:5" pos:end="211:29"><name pos:start="211:5" pos:end="211:18">ff_cavs_filter</name><argument_list pos:start="211:19" pos:end="211:29">(<argument pos:start="211:20" pos:end="211:20"><expr pos:start="211:20" pos:end="211:20"><name pos:start="211:20" pos:end="211:20">h</name></expr></argument>,<argument pos:start="211:22" pos:end="211:28"><expr pos:start="211:22" pos:end="211:28"><name pos:start="211:22" pos:end="211:28">mb_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
