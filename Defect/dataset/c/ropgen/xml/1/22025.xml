<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22025.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">scsi_write_complete</name><parameter_list pos:start="1:32" pos:end="1:55">(<parameter pos:start="1:33" pos:end="1:45"><decl pos:start="1:33" pos:end="1:45"><type pos:start="1:33" pos:end="1:45"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type> <name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:54"><decl pos:start="1:48" pos:end="1:54"><type pos:start="1:48" pos:end="1:54"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:54">ret</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:5">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIDiskReq</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">r</name> <init pos:start="5:20" pos:end="5:42">= <expr pos:start="5:22" pos:end="5:42"><operator pos:start="5:22" pos:end="5:22">(</operator><name pos:start="5:23" pos:end="5:33">SCSIDiskReq</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator><name pos:start="5:37" pos:end="5:42">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:66"><decl pos:start="7:5" pos:end="7:65"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:65">= <expr pos:start="7:24" pos:end="7:65"><call pos:start="7:24" pos:end="7:65"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:65">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:64"><expr pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:55">r</name><operator pos:start="7:56" pos:end="7:57">-&gt;</operator><name pos:start="7:58" pos:end="7:60">req</name><operator pos:start="7:61" pos:end="7:61">.</operator><name pos:start="7:62" pos:end="7:64">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">n</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:29">(<expr pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:9">r</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">req</name><operator pos:start="13:15" pos:end="13:15">.</operator><name pos:start="13:16" pos:end="13:20">aiocb</name></name> <operator pos:start="13:22" pos:end="13:23">!=</operator> <name pos:start="13:25" pos:end="13:28">NULL</name></expr>)</condition> <block pos:start="13:31" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:50">

        <expr_stmt pos:start="15:9" pos:end="15:28"><expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">r</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:14">req</name><operator pos:start="15:15" pos:end="15:15">.</operator><name pos:start="15:16" pos:end="15:20">aiocb</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <name pos:start="15:24" pos:end="15:27">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:50"><expr pos:start="17:9" pos:end="17:49"><call pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:22">bdrv_acct_done</name><argument_list pos:start="17:23" pos:end="17:49">(<argument pos:start="17:24" pos:end="17:38"><expr pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:38"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:30">qdev</name><operator pos:start="17:31" pos:end="17:31">.</operator><name pos:start="17:32" pos:end="17:35">conf</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:38">bs</name></name></expr></argument>, <argument pos:start="17:41" pos:end="17:48"><expr pos:start="17:41" pos:end="17:48"><operator pos:start="17:41" pos:end="17:41">&amp;</operator><name pos:start="17:42" pos:end="17:48"><name pos:start="17:42" pos:end="17:42">r</name><operator pos:start="17:43" pos:end="17:44">-&gt;</operator><name pos:start="17:45" pos:end="17:48">acct</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:9">

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:42">(<expr pos:start="25:13" pos:end="25:41"><call pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:32">scsi_handle_rw_error</name><argument_list pos:start="25:33" pos:end="25:41">(<argument pos:start="25:34" pos:end="25:34"><expr pos:start="25:34" pos:end="25:34"><name pos:start="25:34" pos:end="25:34">r</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><operator pos:start="25:37" pos:end="25:37">-</operator><name pos:start="25:38" pos:end="25:40">ret</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:44" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:22">

            <goto pos:start="27:13" pos:end="27:22">goto <name pos:start="27:18" pos:end="27:21">done</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:5">n</name> <operator pos:start="35:7" pos:end="35:7">=</operator> <name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:9">r</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">qiov</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:20">size</name></name> <operator pos:start="35:22" pos:end="35:22">/</operator> <literal type="number" pos:start="35:24" pos:end="35:26">512</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">r</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">sector</name></name> <operator pos:start="37:15" pos:end="37:16">+=</operator> <name pos:start="37:18" pos:end="37:18">n</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:5">r</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:19">sector_count</name></name> <operator pos:start="39:21" pos:end="39:22">-=</operator> <name pos:start="39:24" pos:end="39:24">n</name></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:29">(<expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">r</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:23">sector_count</name></name> <operator pos:start="41:25" pos:end="41:26">==</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>)</condition> <block pos:start="41:31" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:41">

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:25">scsi_req_complete</name><argument_list pos:start="43:26" pos:end="43:40">(<argument pos:start="43:27" pos:end="43:33"><expr pos:start="43:27" pos:end="43:33"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:28">r</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:33">req</name></name></expr></argument>, <argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">GOOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="53:5">else <block pos:start="45:12" pos:end="53:5">{<block_content pos:start="47:9" pos:end="51:45">

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><call pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:23">scsi_init_iovec</name><argument_list pos:start="47:24" pos:end="47:45">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">r</name></expr></argument>, <argument pos:start="47:28" pos:end="47:44"><expr pos:start="47:28" pos:end="47:44"><name pos:start="47:28" pos:end="47:44">SCSI_DMA_BUF_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:79"><expr pos:start="49:9" pos:end="49:78"><call pos:start="49:9" pos:end="49:78"><name pos:start="49:9" pos:end="49:15">DPRINTF</name><argument_list pos:start="49:16" pos:end="49:78">(<argument pos:start="49:17" pos:end="49:51"><expr pos:start="49:17" pos:end="49:51"><literal type="string" pos:start="49:17" pos:end="49:51">"Write complete tag=0x%x more=%d\n"</literal></expr></argument>, <argument pos:start="49:54" pos:end="49:63"><expr pos:start="49:54" pos:end="49:63"><name pos:start="49:54" pos:end="49:63"><name pos:start="49:54" pos:end="49:54">r</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:59">req</name><operator pos:start="49:60" pos:end="49:60">.</operator><name pos:start="49:61" pos:end="49:63">tag</name></name></expr></argument>, <argument pos:start="49:66" pos:end="49:77"><expr pos:start="49:66" pos:end="49:77"><name pos:start="49:66" pos:end="49:77"><name pos:start="49:66" pos:end="49:66">r</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:72">qiov</name><operator pos:start="49:73" pos:end="49:73">.</operator><name pos:start="49:74" pos:end="49:77">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:45"><expr pos:start="51:9" pos:end="51:44"><call pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:21">scsi_req_data</name><argument_list pos:start="51:22" pos:end="51:44">(<argument pos:start="51:23" pos:end="51:29"><expr pos:start="51:23" pos:end="51:29"><operator pos:start="51:23" pos:end="51:23">&amp;</operator><name pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:24">r</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:29">req</name></name></expr></argument>, <argument pos:start="51:32" pos:end="51:43"><expr pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:32">r</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:38">qiov</name><operator pos:start="51:39" pos:end="51:39">.</operator><name pos:start="51:40" pos:end="51:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="57:1" pos:end="57:5"><name pos:start="57:1" pos:end="57:4">done</name>:</label>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:28">(<expr pos:start="59:9" pos:end="59:27"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:10">r</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:15">req</name><operator pos:start="59:16" pos:end="59:16">.</operator><name pos:start="59:17" pos:end="59:27">io_canceled</name></name></expr>)</condition> <block pos:start="59:30" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:32">

        <expr_stmt pos:start="61:9" pos:end="61:32"><expr pos:start="61:9" pos:end="61:31"><call pos:start="61:9" pos:end="61:31"><name pos:start="61:9" pos:end="61:22">scsi_req_unref</name><argument_list pos:start="61:23" pos:end="61:31">(<argument pos:start="61:24" pos:end="61:30"><expr pos:start="61:24" pos:end="61:30"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:25">r</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:30">req</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
