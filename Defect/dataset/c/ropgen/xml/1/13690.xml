<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13690.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">teletext_init_decoder</name><parameter_list pos:start="1:33" pos:end="1:55">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:77">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">TeletextContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">maj</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:23" pos:end="7:25">min</name></decl>, <decl pos:start="7:28" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:28" pos:end="7:30">rev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:34"><expr pos:start="11:5" pos:end="11:33"><call pos:start="11:5" pos:end="11:33"><name pos:start="11:5" pos:end="11:15">vbi_version</name><argument_list pos:start="11:16" pos:end="11:33">(<argument pos:start="11:17" pos:end="11:20"><expr pos:start="11:17" pos:end="11:20"><operator pos:start="11:17" pos:end="11:17">&amp;</operator><name pos:start="11:18" pos:end="11:20">maj</name></expr></argument>, <argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><operator pos:start="11:23" pos:end="11:23">&amp;</operator><name pos:start="11:24" pos:end="11:26">min</name></expr></argument>, <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><operator pos:start="11:29" pos:end="11:29">&amp;</operator><name pos:start="11:30" pos:end="11:32">rev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:55">(<expr pos:start="13:9" pos:end="13:54"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:13">maj</name> <operator pos:start="13:15" pos:end="13:15">&gt;</operator> <literal type="number" pos:start="13:17" pos:end="13:17">0</literal> <operator pos:start="13:19" pos:end="13:20">||</operator> <name pos:start="13:22" pos:end="13:24">min</name> <operator pos:start="13:26" pos:end="13:26">&gt;</operator> <literal type="number" pos:start="13:28" pos:end="13:28">2</literal> <operator pos:start="13:30" pos:end="13:31">||</operator> <name pos:start="13:33" pos:end="13:35">min</name> <operator pos:start="13:37" pos:end="13:38">==</operator> <literal type="number" pos:start="13:40" pos:end="13:40">2</literal> <operator pos:start="13:42" pos:end="13:43">&amp;&amp;</operator> <name pos:start="13:45" pos:end="13:47">rev</name> <operator pos:start="13:49" pos:end="13:50">&gt;=</operator> <literal type="number" pos:start="13:52" pos:end="13:53">26</literal><operator pos:start="13:54" pos:end="13:54">)</operator></expr>)</condition> <block pos:start="13:57" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:32">

        <expr_stmt pos:start="15:9" pos:end="15:79"><expr pos:start="15:9" pos:end="15:78"><call pos:start="15:9" pos:end="15:78"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:78">(<argument pos:start="15:16" pos:end="15:20"><expr pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:20">avctx</name></expr></argument>, <argument pos:start="15:23" pos:end="15:34"><expr pos:start="15:23" pos:end="15:34"><name pos:start="15:23" pos:end="15:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:37" pos:end="15:77"><expr pos:start="15:37" pos:end="15:77"><literal type="string" pos:start="15:37" pos:end="15:77">"decoder needs zvbi version &gt;= 0.2.26.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:32">return <expr pos:start="17:16" pos:end="17:31"><name pos:start="17:16" pos:end="17:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:28">(<expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">ctx</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">format_id</name></name> <operator pos:start="23:24" pos:end="23:25">==</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>)</condition> <block pos:start="23:30" pos:end="29:5">{<block_content pos:start="25:9" pos:end="27:48">

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">width</name></name>  <operator pos:start="25:23" pos:end="25:23">=</operator> <literal type="number" pos:start="25:25" pos:end="25:26">41</literal> <operator pos:start="25:28" pos:end="25:28">*</operator> <name pos:start="25:30" pos:end="25:46">BITMAP_CHAR_WIDTH</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:48"><expr pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:13">avctx</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">height</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:26">25</literal> <operator pos:start="27:28" pos:end="27:28">*</operator> <name pos:start="27:30" pos:end="27:47">BITMAP_CHAR_HEIGHT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:7">ctx</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:11">dx</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:20"><expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:12"><name pos:start="35:5" pos:end="35:7">ctx</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:12">vbi</name></name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:19">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="42:0"><expr pos:start="37:5" pos:end="37:29"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">ctx</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">pts</name></name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:29">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="41:1" pos:end="41:12">#<cpp:directive pos:start="41:2" pos:end="41:6">ifdef</cpp:directive> <name pos:start="41:8" pos:end="41:12">DEBUG</name></cpp:ifdef>

    <block pos:start="43:5" pos:end="52:0">{<block_content pos:start="45:9" pos:end="47:45">

        <decl_stmt pos:start="45:9" pos:end="45:16"><decl pos:start="45:9" pos:end="45:15"><type pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:12">char</name> <modifier pos:start="45:14" pos:end="45:14">*</modifier></type><name pos:start="45:15" pos:end="45:15">t</name></decl>;</decl_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:45"><expr pos:start="47:9" pos:end="47:44"><name pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:15">ex</name></name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="47:44"><name pos:start="47:19" pos:end="47:32">vbi_export_new</name><argument_list pos:start="47:33" pos:end="47:44">(<argument pos:start="47:34" pos:end="47:39"><expr pos:start="47:34" pos:end="47:39"><literal type="string" pos:start="47:34" pos:end="47:39">"text"</literal></expr></argument>, <argument pos:start="47:42" pos:end="47:43"><expr pos:start="47:42" pos:end="47:43"><operator pos:start="47:42" pos:end="47:42">&amp;</operator><name pos:start="47:43" pos:end="47:43">t</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="53:5" pos:end="53:66"><expr pos:start="53:5" pos:end="53:65"><call pos:start="53:5" pos:end="53:65"><name pos:start="53:5" pos:end="53:10">av_log</name><argument_list pos:start="53:11" pos:end="53:65">(<argument pos:start="53:12" pos:end="53:16"><expr pos:start="53:12" pos:end="53:16"><name pos:start="53:12" pos:end="53:16">avctx</name></expr></argument>, <argument pos:start="53:19" pos:end="53:32"><expr pos:start="53:19" pos:end="53:32"><name pos:start="53:19" pos:end="53:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="53:35" pos:end="53:53"><expr pos:start="53:35" pos:end="53:53"><literal type="string" pos:start="53:35" pos:end="53:53">"page filter: %s\n"</literal></expr></argument>, <argument pos:start="53:56" pos:end="53:64"><expr pos:start="53:56" pos:end="53:64"><name pos:start="53:56" pos:end="53:64"><name pos:start="53:56" pos:end="53:58">ctx</name><operator pos:start="53:59" pos:end="53:60">-&gt;</operator><name pos:start="53:61" pos:end="53:64">pgno</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:77">return <expr pos:start="55:12" pos:end="55:76"><ternary pos:start="55:12" pos:end="55:76"><condition pos:start="55:12" pos:end="55:34"><expr pos:start="55:12" pos:end="55:32"><operator pos:start="55:12" pos:end="55:12">(</operator><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:26">format_id</name></name> <operator pos:start="55:28" pos:end="55:29">==</operator> <literal type="number" pos:start="55:31" pos:end="55:31">1</literal><operator pos:start="55:32" pos:end="55:32">)</operator></expr> ?</condition><then pos:start="55:36" pos:end="55:72"> <expr pos:start="55:36" pos:end="55:72"><call pos:start="55:36" pos:end="55:72"><name pos:start="55:36" pos:end="55:65">ff_ass_subtitle_header_default</name><argument_list pos:start="55:66" pos:end="55:72">(<argument pos:start="55:67" pos:end="55:71"><expr pos:start="55:67" pos:end="55:71"><name pos:start="55:67" pos:end="55:71">avctx</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="55:74" pos:end="55:76">: <expr pos:start="55:76" pos:end="55:76"><literal type="number" pos:start="55:76" pos:end="55:76">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
