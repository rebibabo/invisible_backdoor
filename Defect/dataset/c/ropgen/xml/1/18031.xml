<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18031.c" pos:tabs="8"><function pos:start="1:1" pos:end="631:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_slice_header</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">H264Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>)</parameter_list><block pos:start="1:47" pos:end="631:1">{<block_content pos:start="3:5" pos:end="629:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:25">first_mb_in_slice</name></decl>, <decl pos:start="5:28" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:33">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:40">num_ref_idx_active_override_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:87"><decl pos:start="9:5" pos:end="9:86"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:24">uint8_t</name></type> <name pos:start="9:26" pos:end="9:42"><name pos:start="9:26" pos:end="9:39">slice_type_map</name><index pos:start="9:40" pos:end="9:42">[<expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">5</literal></expr>]</index></name><init pos:start="9:43" pos:end="9:86">= <expr pos:start="9:45" pos:end="9:86"><block pos:start="9:45" pos:end="9:86">{<expr pos:start="9:46" pos:end="9:51"><name pos:start="9:46" pos:end="9:51">P_TYPE</name></expr>, <expr pos:start="9:54" pos:end="9:59"><name pos:start="9:54" pos:end="9:59">B_TYPE</name></expr>, <expr pos:start="9:62" pos:end="9:67"><name pos:start="9:62" pos:end="9:67">I_TYPE</name></expr>, <expr pos:start="9:70" pos:end="9:76"><name pos:start="9:70" pos:end="9:76">SP_TYPE</name></expr>, <expr pos:start="9:79" pos:end="9:85"><name pos:start="9:79" pos:end="9:85">SI_TYPE</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">slice_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">default_ref_list_done</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">current_picture</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:32">reference</name></name><operator pos:start="17:33" pos:end="17:33">=</operator> <name pos:start="17:35" pos:end="17:48"><name pos:start="17:35" pos:end="17:35">h</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:48">nal_ref_idc</name></name> <operator pos:start="17:50" pos:end="17:51">!=</operator> <literal type="number" pos:start="17:53" pos:end="17:53">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">dropable</name></name><operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:31"><name pos:start="19:18" pos:end="19:18">h</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:31">nal_ref_idc</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:21">first_mb_in_slice</name><operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:44"><name pos:start="23:24" pos:end="23:36">get_ue_golomb</name><argument_list pos:start="23:37" pos:end="23:44">(<argument pos:start="23:38" pos:end="23:43"><expr pos:start="23:38" pos:end="23:43"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:43"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:14">slice_type</name><operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:29">get_ue_golomb</name><argument_list pos:start="27:30" pos:end="27:37">(<argument pos:start="27:31" pos:end="27:36"><expr pos:start="27:31" pos:end="27:36"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if<condition pos:start="29:7" pos:end="29:22">(<expr pos:start="29:8" pos:end="29:21"><name pos:start="29:8" pos:end="29:17">slice_type</name> <operator pos:start="29:19" pos:end="29:19">&gt;</operator> <literal type="number" pos:start="29:21" pos:end="29:21">9</literal></expr>)</condition><block pos:start="29:23" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:114"><expr pos:start="31:9" pos:end="31:113"><call pos:start="31:9" pos:end="31:113"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:113">(<argument pos:start="31:16" pos:end="31:25"><expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">h</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:25">avctx</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:42" pos:end="31:79"><expr pos:start="31:42" pos:end="31:79"><literal type="string" pos:start="31:42" pos:end="31:79">"slice type too large (%d) at %d %d\n"</literal></expr></argument>, <argument pos:start="31:82" pos:end="31:94"><expr pos:start="31:82" pos:end="31:94"><name pos:start="31:82" pos:end="31:94"><name pos:start="31:82" pos:end="31:82">h</name><operator pos:start="31:83" pos:end="31:84">-&gt;</operator><name pos:start="31:85" pos:end="31:94">slice_type</name></name></expr></argument>, <argument pos:start="31:97" pos:end="31:103"><expr pos:start="31:97" pos:end="31:103"><name pos:start="31:97" pos:end="31:103"><name pos:start="31:97" pos:end="31:97">s</name><operator pos:start="31:98" pos:end="31:99">-&gt;</operator><name pos:start="31:100" pos:end="31:103">mb_x</name></name></expr></argument>, <argument pos:start="31:106" pos:end="31:112"><expr pos:start="31:106" pos:end="31:112"><name pos:start="31:106" pos:end="31:112"><name pos:start="31:106" pos:end="31:106">s</name><operator pos:start="31:107" pos:end="31:108">-&gt;</operator><name pos:start="31:109" pos:end="31:112">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="45:30"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:22">(<expr pos:start="37:8" pos:end="37:21"><name pos:start="37:8" pos:end="37:17">slice_type</name> <operator pos:start="37:19" pos:end="37:19">&gt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">4</literal></expr>)</condition><block pos:start="37:23" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:30">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:18">slice_type</name> <operator pos:start="39:20" pos:end="39:21">-=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:9">h</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:27">slice_type_fixed</name></name><operator pos:start="41:28" pos:end="41:28">=</operator><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="43:6" pos:end="45:30">else<block type="pseudo" pos:start="45:9" pos:end="45:30"><block_content pos:start="45:9" pos:end="45:30">

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:9">h</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:27">slice_type_fixed</name></name><operator pos:start="45:28" pos:end="45:28">=</operator><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:14">slice_type</name><operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:30">slice_type_map</name><index pos:start="49:31" pos:end="49:44">[ <expr pos:start="49:33" pos:end="49:42"><name pos:start="49:33" pos:end="49:42">slice_type</name></expr> ]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="53:63">(<expr pos:start="51:9" pos:end="53:61"><name pos:start="51:9" pos:end="51:18">slice_type</name> <operator pos:start="51:20" pos:end="51:21">==</operator> <name pos:start="51:23" pos:end="51:28">I_TYPE</name>

        <operator pos:start="53:9" pos:end="53:10">||</operator> <operator pos:start="53:12" pos:end="53:12">(</operator><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">h</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">slice_num</name></name> <operator pos:start="53:26" pos:end="53:27">!=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal> <operator pos:start="53:31" pos:end="53:32">&amp;&amp;</operator> <name pos:start="53:34" pos:end="53:43">slice_type</name> <operator pos:start="53:45" pos:end="53:46">==</operator> <name pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:48">h</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:60">slice_type</name></name><operator pos:start="53:61" pos:end="53:61">)</operator></expr> )</condition> <block pos:start="53:65" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:34">

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:29">default_ref_list_done</name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">h</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">slice_type</name></name><operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:29">slice_type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">pict_type</name></name><operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:31"><name pos:start="63:19" pos:end="63:19">h</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:31">slice_type</name></name></expr>;</expr_stmt> <comment type="line" pos:start="63:34" pos:end="63:83">// to make a few old func happy, it's wrong though</comment>



    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:10">pps_id</name><operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:25">get_ue_golomb</name><argument_list pos:start="67:26" pos:end="67:33">(<argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if<condition pos:start="69:7" pos:end="69:18">(<expr pos:start="69:8" pos:end="69:17"><name pos:start="69:8" pos:end="69:13">pps_id</name><operator pos:start="69:14" pos:end="69:14">&gt;</operator><literal type="number" pos:start="69:15" pos:end="69:17">255</literal></expr>)</condition><block pos:start="69:19" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:65">(<argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:16">h</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:25">avctx</name></name></expr></argument>, <argument pos:start="71:28" pos:end="71:39"><expr pos:start="71:28" pos:end="71:39"><name pos:start="71:28" pos:end="71:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:42" pos:end="71:64"><expr pos:start="71:42" pos:end="71:64"><literal type="string" pos:start="71:42" pos:end="71:64">"pps_id out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:10"><name pos:start="77:5" pos:end="77:5">h</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:10">pps</name></name><operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:13">h</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:25">pps_buffer</name><index pos:start="77:26" pos:end="77:33">[<expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">pps_id</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:37">(<expr pos:start="79:8" pos:end="79:36"><name pos:start="79:8" pos:end="79:31"><name pos:start="79:8" pos:end="79:8">h</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:13">pps</name><operator pos:start="79:14" pos:end="79:14">.</operator><name pos:start="79:15" pos:end="79:31">slice_group_count</name></name> <operator pos:start="79:33" pos:end="79:34">==</operator> <literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr>)</condition><block pos:start="79:38" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><call pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:73">(<argument pos:start="81:16" pos:end="81:25"><expr pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:16">h</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:25">avctx</name></name></expr></argument>, <argument pos:start="81:28" pos:end="81:39"><expr pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:42" pos:end="81:72"><expr pos:start="81:42" pos:end="81:72"><literal type="string" pos:start="81:42" pos:end="81:72">"non existing PPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:43"><expr pos:start="89:5" pos:end="89:42"><name pos:start="89:5" pos:end="89:10"><name pos:start="89:5" pos:end="89:5">h</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:10">sps</name></name><operator pos:start="89:11" pos:end="89:11">=</operator> <name pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:13">h</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">sps_buffer</name><index pos:start="89:26" pos:end="89:42">[ <expr pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:28">h</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:33">pps</name><operator pos:start="89:34" pos:end="89:34">.</operator><name pos:start="89:35" pos:end="89:40">sps_id</name></name></expr> ]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:38">(<expr pos:start="91:8" pos:end="91:37"><name pos:start="91:8" pos:end="91:32"><name pos:start="91:8" pos:end="91:8">h</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:13">sps</name><operator pos:start="91:14" pos:end="91:14">.</operator><name pos:start="91:15" pos:end="91:32">log2_max_frame_num</name></name> <operator pos:start="91:34" pos:end="91:35">==</operator> <literal type="number" pos:start="91:37" pos:end="91:37">0</literal></expr>)</condition><block pos:start="91:39" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:74"><expr pos:start="93:9" pos:end="93:73"><call pos:start="93:9" pos:end="93:73"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:73">(<argument pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:16">h</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:25">avctx</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:39"><expr pos:start="93:28" pos:end="93:39"><name pos:start="93:28" pos:end="93:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:42" pos:end="93:72"><expr pos:start="93:42" pos:end="93:72"><literal type="string" pos:start="93:42" pos:end="93:72">"non existing SPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if<condition pos:start="101:7" pos:end="101:38">(<expr pos:start="101:8" pos:end="101:37"><name pos:start="101:8" pos:end="101:27"><name pos:start="101:8" pos:end="101:8">h</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:27">dequant_coeff_pps</name></name> <operator pos:start="101:29" pos:end="101:30">!=</operator> <name pos:start="101:32" pos:end="101:37">pps_id</name></expr>)</condition><block pos:start="101:39" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:31">

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:9">h</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:28">dequant_coeff_pps</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><call pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:27">init_dequant_tables</name><argument_list pos:start="105:28" pos:end="105:30">(<argument pos:start="105:29" pos:end="105:29"><expr pos:start="105:29" pos:end="105:29"><name pos:start="105:29" pos:end="105:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">mb_width</name></name><operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:32"><name pos:start="111:18" pos:end="111:18">h</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:23">sps</name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:70"><expr pos:start="113:5" pos:end="113:69"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:16">mb_height</name></name><operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:34"><name pos:start="113:19" pos:end="113:19">h</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:24">sps</name><operator pos:start="113:25" pos:end="113:25">.</operator><name pos:start="113:26" pos:end="113:34">mb_height</name></name> <operator pos:start="113:36" pos:end="113:36">*</operator> <operator pos:start="113:38" pos:end="113:38">(</operator><literal type="number" pos:start="113:39" pos:end="113:41">2</literal> <operator pos:start="113:41" pos:end="113:41">-</operator> <name pos:start="113:43" pos:end="113:68"><name pos:start="113:43" pos:end="113:43">h</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:48">sps</name><operator pos:start="113:49" pos:end="113:49">.</operator><name pos:start="113:50" pos:end="113:68">frame_mbs_only_flag</name></name><operator pos:start="113:69" pos:end="113:69">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:32"><expr pos:start="117:5" pos:end="117:31"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:5">h</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:15">b_stride</name></name><operator pos:start="117:16" pos:end="117:16">=</operator>  <name pos:start="117:19" pos:end="117:29"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:29">mb_width</name></name><operator pos:start="117:30" pos:end="117:30">*</operator><literal type="number" pos:start="117:31" pos:end="117:31">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:32"><expr pos:start="119:5" pos:end="119:31"><name pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:5">h</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:16">b8_stride</name></name><operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:29"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:29">mb_width</name></name><operator pos:start="119:30" pos:end="119:30">*</operator><literal type="number" pos:start="119:31" pos:end="119:31">2</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:74"><expr pos:start="123:5" pos:end="123:73"><name pos:start="123:5" pos:end="123:12"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:12">width</name></name> <operator pos:start="123:14" pos:end="123:14">=</operator> <literal type="number" pos:start="123:16" pos:end="123:17">16</literal><operator pos:start="123:18" pos:end="123:18">*</operator><name pos:start="123:19" pos:end="123:29"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">mb_width</name></name> <operator pos:start="123:31" pos:end="123:31">-</operator> <literal type="number" pos:start="123:33" pos:end="123:33">2</literal><operator pos:start="123:34" pos:end="123:34">*</operator><operator pos:start="123:35" pos:end="123:35">(</operator><name pos:start="123:36" pos:end="123:51"><name pos:start="123:36" pos:end="123:36">h</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:41">sps</name><operator pos:start="123:42" pos:end="123:42">.</operator><name pos:start="123:43" pos:end="123:51">crop_left</name></name> <operator pos:start="123:53" pos:end="123:53">+</operator> <name pos:start="123:55" pos:end="123:71"><name pos:start="123:55" pos:end="123:55">h</name><operator pos:start="123:56" pos:end="123:57">-&gt;</operator><name pos:start="123:58" pos:end="123:60">sps</name><operator pos:start="123:61" pos:end="123:61">.</operator><name pos:start="123:62" pos:end="123:71">crop_right</name></name> <operator pos:start="123:73" pos:end="123:73">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:79"><if pos:start="125:5" pos:end="127:79">if<condition pos:start="125:7" pos:end="125:34">(<expr pos:start="125:8" pos:end="125:33"><name pos:start="125:8" pos:end="125:33"><name pos:start="125:8" pos:end="125:8">h</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:13">sps</name><operator pos:start="125:14" pos:end="125:14">.</operator><name pos:start="125:15" pos:end="125:33">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:79"><block_content pos:start="127:9" pos:end="127:79">

        <expr_stmt pos:start="127:9" pos:end="127:79"><expr pos:start="127:9" pos:end="127:78"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">height</name></name><operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="number" pos:start="127:20" pos:end="127:21">16</literal><operator pos:start="127:22" pos:end="127:22">*</operator><name pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:34">mb_height</name></name> <operator pos:start="127:36" pos:end="127:36">-</operator> <literal type="number" pos:start="127:38" pos:end="127:38">2</literal><operator pos:start="127:39" pos:end="127:39">*</operator><operator pos:start="127:40" pos:end="127:40">(</operator><name pos:start="127:41" pos:end="127:55"><name pos:start="127:41" pos:end="127:41">h</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:46">sps</name><operator pos:start="127:47" pos:end="127:47">.</operator><name pos:start="127:48" pos:end="127:55">crop_top</name></name>  <operator pos:start="127:58" pos:end="127:58">+</operator> <name pos:start="127:60" pos:end="127:77"><name pos:start="127:60" pos:end="127:60">h</name><operator pos:start="127:61" pos:end="127:62">-&gt;</operator><name pos:start="127:63" pos:end="127:65">sps</name><operator pos:start="127:66" pos:end="127:66">.</operator><name pos:start="127:67" pos:end="127:77">crop_bottom</name></name><operator pos:start="127:78" pos:end="127:78">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="129:5" pos:end="131:79">else<block type="pseudo" pos:start="131:9" pos:end="131:79"><block_content pos:start="131:9" pos:end="131:79">

        <expr_stmt pos:start="131:9" pos:end="131:79"><expr pos:start="131:9" pos:end="131:78"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:17">height</name></name><operator pos:start="131:18" pos:end="131:18">=</operator> <literal type="number" pos:start="131:20" pos:end="131:21">16</literal><operator pos:start="131:22" pos:end="131:22">*</operator><name pos:start="131:23" pos:end="131:34"><name pos:start="131:23" pos:end="131:23">s</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:34">mb_height</name></name> <operator pos:start="131:36" pos:end="131:36">-</operator> <literal type="number" pos:start="131:38" pos:end="131:38">4</literal><operator pos:start="131:39" pos:end="131:39">*</operator><operator pos:start="131:40" pos:end="131:40">(</operator><name pos:start="131:41" pos:end="131:55"><name pos:start="131:41" pos:end="131:41">h</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:46">sps</name><operator pos:start="131:47" pos:end="131:47">.</operator><name pos:start="131:48" pos:end="131:55">crop_top</name></name>  <operator pos:start="131:58" pos:end="131:58">+</operator> <name pos:start="131:60" pos:end="131:77"><name pos:start="131:60" pos:end="131:60">h</name><operator pos:start="131:61" pos:end="131:62">-&gt;</operator><name pos:start="131:63" pos:end="131:65">sps</name><operator pos:start="131:66" pos:end="131:66">.</operator><name pos:start="131:67" pos:end="131:77">crop_bottom</name></name><operator pos:start="131:78" pos:end="131:78">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="131:81" pos:end="131:95">//FIXME recheck</comment>



    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="137:77">(<expr pos:start="135:9" pos:end="137:76"><name pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:30">context_initialized</name></name>

        <operator pos:start="137:9" pos:end="137:10">&amp;&amp;</operator> <operator pos:start="137:12" pos:end="137:12">(</operator>   <name pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">width</name></name> <operator pos:start="137:25" pos:end="137:26">!=</operator> <name pos:start="137:28" pos:end="137:42"><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:35">avctx</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:42">width</name></name> <operator pos:start="137:44" pos:end="137:45">||</operator> <name pos:start="137:47" pos:end="137:55"><name pos:start="137:47" pos:end="137:47">s</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:55">height</name></name> <operator pos:start="137:57" pos:end="137:58">!=</operator> <name pos:start="137:60" pos:end="137:75"><name pos:start="137:60" pos:end="137:60">s</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:67">avctx</name><operator pos:start="137:68" pos:end="137:69">-&gt;</operator><name pos:start="137:70" pos:end="137:75">height</name></name><operator pos:start="137:76" pos:end="137:76">)</operator></expr>)</condition> <block pos:start="137:79" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:26">

        <expr_stmt pos:start="139:9" pos:end="139:23"><expr pos:start="139:9" pos:end="139:22"><call pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:19">free_tables</name><argument_list pos:start="139:20" pos:end="139:22">(<argument pos:start="139:21" pos:end="139:21"><expr pos:start="139:21" pos:end="139:21"><name pos:start="139:21" pos:end="139:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:26"><expr pos:start="141:9" pos:end="141:25"><call pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:22">MPV_common_end</name><argument_list pos:start="141:23" pos:end="141:25">(<argument pos:start="141:24" pos:end="141:24"><expr pos:start="141:24" pos:end="141:24"><name pos:start="141:24" pos:end="141:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="271:5"><if pos:start="145:5" pos:end="271:5">if <condition pos:start="145:8" pos:end="145:32">(<expr pos:start="145:9" pos:end="145:31"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:31"><name pos:start="145:10" pos:end="145:10">s</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:31">context_initialized</name></name></expr>)</condition> <block pos:start="145:34" pos:end="271:5">{<block_content pos:start="147:9" pos:end="269:9">

        <if_stmt pos:start="147:9" pos:end="149:22"><if pos:start="147:9" pos:end="149:22">if <condition pos:start="147:12" pos:end="147:35">(<expr pos:start="147:13" pos:end="147:34"><call pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:27">MPV_common_init</name><argument_list pos:start="147:28" pos:end="147:30">(<argument pos:start="147:29" pos:end="147:29"><expr pos:start="147:29" pos:end="147:29"><name pos:start="147:29" pos:end="147:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="147:32" pos:end="147:32">&lt;</operator> <literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:22"><block_content pos:start="149:13" pos:end="149:22">

            <return pos:start="149:13" pos:end="149:22">return <expr pos:start="149:20" pos:end="149:21"><operator pos:start="149:20" pos:end="149:20">-</operator><literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="175:9"><if pos:start="153:9" pos:end="159:9">if<condition pos:start="153:11" pos:end="153:54">(<expr pos:start="153:12" pos:end="153:53"><name pos:start="153:12" pos:end="153:31"><name pos:start="153:12" pos:end="153:12">s</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:17">dsp</name><operator pos:start="153:18" pos:end="153:18">.</operator><name pos:start="153:19" pos:end="153:31">h264_idct_add</name></name> <operator pos:start="153:33" pos:end="153:34">==</operator> <name pos:start="153:36" pos:end="153:53">ff_h264_idct_add_c</name></expr>)</condition><block pos:start="153:55" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:68"> <comment type="line" pos:start="153:57" pos:end="153:75">//FIXME little ugly</comment>

            <expr_stmt pos:start="155:13" pos:end="155:68"><expr pos:start="155:13" pos:end="155:67"><call pos:start="155:13" pos:end="155:67"><name pos:start="155:13" pos:end="155:18">memcpy</name><argument_list pos:start="155:19" pos:end="155:67">(<argument pos:start="155:20" pos:end="155:33"><expr pos:start="155:20" pos:end="155:33"><name pos:start="155:20" pos:end="155:33"><name pos:start="155:20" pos:end="155:20">h</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:33">zigzag_scan</name></name></expr></argument>, <argument pos:start="155:36" pos:end="155:46"><expr pos:start="155:36" pos:end="155:46"><name pos:start="155:36" pos:end="155:46">zigzag_scan</name></expr></argument>, <argument pos:start="155:49" pos:end="155:66"><expr pos:start="155:49" pos:end="155:66"><literal type="number" pos:start="155:49" pos:end="155:50">16</literal><operator pos:start="155:51" pos:end="155:51">*</operator><sizeof pos:start="155:52" pos:end="155:66">sizeof<argument_list pos:start="155:58" pos:end="155:66">(<argument pos:start="155:59" pos:end="155:65"><expr pos:start="155:59" pos:end="155:65"><name pos:start="155:59" pos:end="155:65">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:68"><expr pos:start="157:13" pos:end="157:67"><call pos:start="157:13" pos:end="157:67"><name pos:start="157:13" pos:end="157:18">memcpy</name><argument_list pos:start="157:19" pos:end="157:67">(<argument pos:start="157:20" pos:end="157:33"><expr pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:20">h</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator> <name pos:start="157:24" pos:end="157:33">field_scan</name></name></expr></argument>,  <argument pos:start="157:37" pos:end="157:46"><expr pos:start="157:37" pos:end="157:46"><name pos:start="157:37" pos:end="157:46">field_scan</name></expr></argument>, <argument pos:start="157:49" pos:end="157:66"><expr pos:start="157:49" pos:end="157:66"><literal type="number" pos:start="157:49" pos:end="157:50">16</literal><operator pos:start="157:51" pos:end="157:51">*</operator><sizeof pos:start="157:52" pos:end="157:66">sizeof<argument_list pos:start="157:58" pos:end="157:66">(<argument pos:start="157:59" pos:end="157:65"><expr pos:start="157:59" pos:end="157:65"><name pos:start="157:59" pos:end="157:65">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="159:10" pos:end="175:9">else<block pos:start="159:14" pos:end="175:9">{<block_content pos:start="161:13" pos:end="173:13">

            <decl_stmt pos:start="161:13" pos:end="161:18"><decl pos:start="161:13" pos:end="161:17"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:17">i</name></decl>;</decl_stmt>

            <for pos:start="163:13" pos:end="173:13">for<control pos:start="163:16" pos:end="163:31">(<init pos:start="163:17" pos:end="163:20"><expr pos:start="163:17" pos:end="163:19"><name pos:start="163:17" pos:end="163:17">i</name><operator pos:start="163:18" pos:end="163:18">=</operator><literal type="number" pos:start="163:19" pos:end="163:19">0</literal></expr>;</init> <condition pos:start="163:22" pos:end="163:26"><expr pos:start="163:22" pos:end="163:25"><name pos:start="163:22" pos:end="163:22">i</name><operator pos:start="163:23" pos:end="163:23">&lt;</operator><literal type="number" pos:start="163:24" pos:end="163:25">16</literal></expr>;</condition> <incr pos:start="163:28" pos:end="163:30"><expr pos:start="163:28" pos:end="163:30"><name pos:start="163:28" pos:end="163:28">i</name><operator pos:start="163:29" pos:end="163:30">++</operator></expr></incr>)</control><block pos:start="163:32" pos:end="173:13">{<block_content pos:start="167:17" pos:end="172:0">

<cpp:define pos:start="165:1" pos:end="165:36">#<cpp:directive pos:start="165:2" pos:end="165:7">define</cpp:directive> <cpp:macro pos:start="165:9" pos:end="165:12"><name pos:start="165:9" pos:end="165:9">T</name><parameter_list pos:start="165:10" pos:end="165:12">(<parameter pos:start="165:11" pos:end="165:11"><type pos:start="165:11" pos:end="165:11"><name pos:start="165:11" pos:end="165:11">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="165:14" pos:end="165:36">(x&gt;&gt;2) | ((x&lt;&lt;2) &amp; 0xF)</cpp:value></cpp:define>

                <expr_stmt pos:start="167:17" pos:end="167:54"><expr pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:17">h</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:30">zigzag_scan</name><index pos:start="167:31" pos:end="167:33">[<expr pos:start="167:32" pos:end="167:32"><name pos:start="167:32" pos:end="167:32">i</name></expr>]</index></name> <operator pos:start="167:35" pos:end="167:35">=</operator> <call pos:start="167:37" pos:end="167:53"><name pos:start="167:37" pos:end="167:37">T</name><argument_list pos:start="167:38" pos:end="167:53">(<argument pos:start="167:39" pos:end="167:52"><expr pos:start="167:39" pos:end="167:52"><name pos:start="167:39" pos:end="167:52"><name pos:start="167:39" pos:end="167:49">zigzag_scan</name><index pos:start="167:50" pos:end="167:52">[<expr pos:start="167:51" pos:end="167:51"><name pos:start="167:51" pos:end="167:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="172:0"><expr pos:start="169:17" pos:end="169:53"><name pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:17">h</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator> <name pos:start="169:21" pos:end="169:30">field_scan</name><index pos:start="169:31" pos:end="169:33">[<expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">i</name></expr>]</index></name> <operator pos:start="169:35" pos:end="169:35">=</operator> <call pos:start="169:37" pos:end="169:53"><name pos:start="169:37" pos:end="169:37">T</name><argument_list pos:start="169:38" pos:end="169:53">( <argument pos:start="169:40" pos:end="169:52"><expr pos:start="169:40" pos:end="169:52"><name pos:start="169:40" pos:end="169:52"><name pos:start="169:40" pos:end="169:49">field_scan</name><index pos:start="169:50" pos:end="169:52">[<expr pos:start="169:51" pos:end="169:51"><name pos:start="169:51" pos:end="169:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="171:1" pos:end="171:8">#<cpp:directive pos:start="171:2" pos:end="171:6">undef</cpp:directive> <name pos:start="171:8" pos:end="171:8">T</name></cpp:undef>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="177:9" pos:end="207:9"><if pos:start="177:9" pos:end="187:9">if<condition pos:start="177:11" pos:end="177:56">(<expr pos:start="177:12" pos:end="177:55"><name pos:start="177:12" pos:end="177:32"><name pos:start="177:12" pos:end="177:12">s</name><operator pos:start="177:13" pos:end="177:14">-&gt;</operator><name pos:start="177:15" pos:end="177:17">dsp</name><operator pos:start="177:18" pos:end="177:18">.</operator><name pos:start="177:19" pos:end="177:32">h264_idct8_add</name></name> <operator pos:start="177:34" pos:end="177:35">==</operator> <name pos:start="177:37" pos:end="177:55">ff_h264_idct8_add_c</name></expr>)</condition><block pos:start="177:57" pos:end="187:9">{<block_content pos:start="179:13" pos:end="185:86">

            <expr_stmt pos:start="179:13" pos:end="179:86"><expr pos:start="179:13" pos:end="179:85"><call pos:start="179:13" pos:end="179:85"><name pos:start="179:13" pos:end="179:18">memcpy</name><argument_list pos:start="179:19" pos:end="179:85">(<argument pos:start="179:20" pos:end="179:36"><expr pos:start="179:20" pos:end="179:36"><name pos:start="179:20" pos:end="179:36"><name pos:start="179:20" pos:end="179:20">h</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:36">zigzag_scan8x8</name></name></expr></argument>,       <argument pos:start="179:45" pos:end="179:58"><expr pos:start="179:45" pos:end="179:58"><name pos:start="179:45" pos:end="179:58">zigzag_scan8x8</name></expr></argument>,       <argument pos:start="179:67" pos:end="179:84"><expr pos:start="179:67" pos:end="179:84"><literal type="number" pos:start="179:67" pos:end="179:68">64</literal><operator pos:start="179:69" pos:end="179:69">*</operator><sizeof pos:start="179:70" pos:end="179:84">sizeof<argument_list pos:start="179:76" pos:end="179:84">(<argument pos:start="179:77" pos:end="179:83"><expr pos:start="179:77" pos:end="179:83"><name pos:start="179:77" pos:end="179:83">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:86"><expr pos:start="181:13" pos:end="181:85"><call pos:start="181:13" pos:end="181:85"><name pos:start="181:13" pos:end="181:18">memcpy</name><argument_list pos:start="181:19" pos:end="181:85">(<argument pos:start="181:20" pos:end="181:42"><expr pos:start="181:20" pos:end="181:42"><name pos:start="181:20" pos:end="181:42"><name pos:start="181:20" pos:end="181:20">h</name><operator pos:start="181:21" pos:end="181:22">-&gt;</operator><name pos:start="181:23" pos:end="181:42">zigzag_scan8x8_cavlc</name></name></expr></argument>, <argument pos:start="181:45" pos:end="181:64"><expr pos:start="181:45" pos:end="181:64"><name pos:start="181:45" pos:end="181:64">zigzag_scan8x8_cavlc</name></expr></argument>, <argument pos:start="181:67" pos:end="181:84"><expr pos:start="181:67" pos:end="181:84"><literal type="number" pos:start="181:67" pos:end="181:68">64</literal><operator pos:start="181:69" pos:end="181:69">*</operator><sizeof pos:start="181:70" pos:end="181:84">sizeof<argument_list pos:start="181:76" pos:end="181:84">(<argument pos:start="181:77" pos:end="181:83"><expr pos:start="181:77" pos:end="181:83"><name pos:start="181:77" pos:end="181:83">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:86"><expr pos:start="183:13" pos:end="183:85"><call pos:start="183:13" pos:end="183:85"><name pos:start="183:13" pos:end="183:18">memcpy</name><argument_list pos:start="183:19" pos:end="183:85">(<argument pos:start="183:20" pos:end="183:35"><expr pos:start="183:20" pos:end="183:35"><name pos:start="183:20" pos:end="183:35"><name pos:start="183:20" pos:end="183:20">h</name><operator pos:start="183:21" pos:end="183:22">-&gt;</operator><name pos:start="183:23" pos:end="183:35">field_scan8x8</name></name></expr></argument>,        <argument pos:start="183:45" pos:end="183:57"><expr pos:start="183:45" pos:end="183:57"><name pos:start="183:45" pos:end="183:57">field_scan8x8</name></expr></argument>,        <argument pos:start="183:67" pos:end="183:84"><expr pos:start="183:67" pos:end="183:84"><literal type="number" pos:start="183:67" pos:end="183:68">64</literal><operator pos:start="183:69" pos:end="183:69">*</operator><sizeof pos:start="183:70" pos:end="183:84">sizeof<argument_list pos:start="183:76" pos:end="183:84">(<argument pos:start="183:77" pos:end="183:83"><expr pos:start="183:77" pos:end="183:83"><name pos:start="183:77" pos:end="183:83">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:86"><expr pos:start="185:13" pos:end="185:85"><call pos:start="185:13" pos:end="185:85"><name pos:start="185:13" pos:end="185:18">memcpy</name><argument_list pos:start="185:19" pos:end="185:85">(<argument pos:start="185:20" pos:end="185:41"><expr pos:start="185:20" pos:end="185:41"><name pos:start="185:20" pos:end="185:41"><name pos:start="185:20" pos:end="185:20">h</name><operator pos:start="185:21" pos:end="185:22">-&gt;</operator><name pos:start="185:23" pos:end="185:41">field_scan8x8_cavlc</name></name></expr></argument>,  <argument pos:start="185:45" pos:end="185:63"><expr pos:start="185:45" pos:end="185:63"><name pos:start="185:45" pos:end="185:63">field_scan8x8_cavlc</name></expr></argument>,  <argument pos:start="185:67" pos:end="185:84"><expr pos:start="185:67" pos:end="185:84"><literal type="number" pos:start="185:67" pos:end="185:68">64</literal><operator pos:start="185:69" pos:end="185:69">*</operator><sizeof pos:start="185:70" pos:end="185:84">sizeof<argument_list pos:start="185:76" pos:end="185:84">(<argument pos:start="185:77" pos:end="185:83"><expr pos:start="185:77" pos:end="185:83"><name pos:start="185:77" pos:end="185:83">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="187:10" pos:end="207:9">else<block pos:start="187:14" pos:end="207:9">{<block_content pos:start="189:13" pos:end="205:13">

            <decl_stmt pos:start="189:13" pos:end="189:18"><decl pos:start="189:13" pos:end="189:17"><type pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">int</name></type> <name pos:start="189:17" pos:end="189:17">i</name></decl>;</decl_stmt>

            <for pos:start="191:13" pos:end="205:13">for<control pos:start="191:16" pos:end="191:31">(<init pos:start="191:17" pos:end="191:20"><expr pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:17">i</name><operator pos:start="191:18" pos:end="191:18">=</operator><literal type="number" pos:start="191:19" pos:end="191:19">0</literal></expr>;</init> <condition pos:start="191:22" pos:end="191:26"><expr pos:start="191:22" pos:end="191:25"><name pos:start="191:22" pos:end="191:22">i</name><operator pos:start="191:23" pos:end="191:23">&lt;</operator><literal type="number" pos:start="191:24" pos:end="191:25">64</literal></expr>;</condition> <incr pos:start="191:28" pos:end="191:30"><expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:28">i</name><operator pos:start="191:29" pos:end="191:30">++</operator></expr></incr>)</control><block pos:start="191:32" pos:end="205:13">{<block_content pos:start="195:17" pos:end="204:0">

<cpp:define pos:start="193:1" pos:end="193:32">#<cpp:directive pos:start="193:2" pos:end="193:7">define</cpp:directive> <cpp:macro pos:start="193:9" pos:end="193:12"><name pos:start="193:9" pos:end="193:9">T</name><parameter_list pos:start="193:10" pos:end="193:12">(<parameter pos:start="193:11" pos:end="193:11"><type pos:start="193:11" pos:end="193:11"><name pos:start="193:11" pos:end="193:11">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="193:14" pos:end="193:32">(x&gt;&gt;3) | ((x&amp;7)&lt;&lt;3)</cpp:value></cpp:define>

                <expr_stmt pos:start="195:17" pos:end="195:66"><expr pos:start="195:17" pos:end="195:65"><name pos:start="195:17" pos:end="195:36"><name pos:start="195:17" pos:end="195:17">h</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:33">zigzag_scan8x8</name><index pos:start="195:34" pos:end="195:36">[<expr pos:start="195:35" pos:end="195:35"><name pos:start="195:35" pos:end="195:35">i</name></expr>]</index></name>       <operator pos:start="195:44" pos:end="195:44">=</operator> <call pos:start="195:46" pos:end="195:65"><name pos:start="195:46" pos:end="195:46">T</name><argument_list pos:start="195:47" pos:end="195:65">(<argument pos:start="195:48" pos:end="195:64"><expr pos:start="195:48" pos:end="195:64"><name pos:start="195:48" pos:end="195:64"><name pos:start="195:48" pos:end="195:61">zigzag_scan8x8</name><index pos:start="195:62" pos:end="195:64">[<expr pos:start="195:63" pos:end="195:63"><name pos:start="195:63" pos:end="195:63">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="197:17" pos:end="197:72"><expr pos:start="197:17" pos:end="197:71"><name pos:start="197:17" pos:end="197:42"><name pos:start="197:17" pos:end="197:17">h</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:39">zigzag_scan8x8_cavlc</name><index pos:start="197:40" pos:end="197:42">[<expr pos:start="197:41" pos:end="197:41"><name pos:start="197:41" pos:end="197:41">i</name></expr>]</index></name> <operator pos:start="197:44" pos:end="197:44">=</operator> <call pos:start="197:46" pos:end="197:71"><name pos:start="197:46" pos:end="197:46">T</name><argument_list pos:start="197:47" pos:end="197:71">(<argument pos:start="197:48" pos:end="197:70"><expr pos:start="197:48" pos:end="197:70"><name pos:start="197:48" pos:end="197:70"><name pos:start="197:48" pos:end="197:67">zigzag_scan8x8_cavlc</name><index pos:start="197:68" pos:end="197:70">[<expr pos:start="197:69" pos:end="197:69"><name pos:start="197:69" pos:end="197:69">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="199:17" pos:end="199:65"><expr pos:start="199:17" pos:end="199:64"><name pos:start="199:17" pos:end="199:35"><name pos:start="199:17" pos:end="199:17">h</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:32">field_scan8x8</name><index pos:start="199:33" pos:end="199:35">[<expr pos:start="199:34" pos:end="199:34"><name pos:start="199:34" pos:end="199:34">i</name></expr>]</index></name>        <operator pos:start="199:44" pos:end="199:44">=</operator> <call pos:start="199:46" pos:end="199:64"><name pos:start="199:46" pos:end="199:46">T</name><argument_list pos:start="199:47" pos:end="199:64">(<argument pos:start="199:48" pos:end="199:63"><expr pos:start="199:48" pos:end="199:63"><name pos:start="199:48" pos:end="199:63"><name pos:start="199:48" pos:end="199:60">field_scan8x8</name><index pos:start="199:61" pos:end="199:63">[<expr pos:start="199:62" pos:end="199:62"><name pos:start="199:62" pos:end="199:62">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="204:0"><expr pos:start="201:17" pos:end="201:70"><name pos:start="201:17" pos:end="201:41"><name pos:start="201:17" pos:end="201:17">h</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:38">field_scan8x8_cavlc</name><index pos:start="201:39" pos:end="201:41">[<expr pos:start="201:40" pos:end="201:40"><name pos:start="201:40" pos:end="201:40">i</name></expr>]</index></name>  <operator pos:start="201:44" pos:end="201:44">=</operator> <call pos:start="201:46" pos:end="201:70"><name pos:start="201:46" pos:end="201:46">T</name><argument_list pos:start="201:47" pos:end="201:70">(<argument pos:start="201:48" pos:end="201:69"><expr pos:start="201:48" pos:end="201:69"><name pos:start="201:48" pos:end="201:69"><name pos:start="201:48" pos:end="201:66">field_scan8x8_cavlc</name><index pos:start="201:67" pos:end="201:69">[<expr pos:start="201:68" pos:end="201:68"><name pos:start="201:68" pos:end="201:68">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:undef pos:start="203:1" pos:end="203:8">#<cpp:directive pos:start="203:2" pos:end="203:6">undef</cpp:directive> <name pos:start="203:8" pos:end="203:8">T</name></cpp:undef>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="209:9" pos:end="237:9"><if pos:start="209:9" pos:end="223:9">if<condition pos:start="209:11" pos:end="209:35">(<expr pos:start="209:12" pos:end="209:34"><name pos:start="209:12" pos:end="209:34"><name pos:start="209:12" pos:end="209:12">h</name><operator pos:start="209:13" pos:end="209:14">-&gt;</operator><name pos:start="209:15" pos:end="209:17">sps</name><operator pos:start="209:18" pos:end="209:18">.</operator><name pos:start="209:19" pos:end="209:34">transform_bypass</name></name></expr>)</condition><block pos:start="209:36" pos:end="223:9">{<block_content pos:start="211:13" pos:end="221:61"> <comment type="line" pos:start="209:38" pos:end="209:54">//FIXME same ugly</comment>

            <expr_stmt pos:start="211:13" pos:end="211:53"><expr pos:start="211:13" pos:end="211:52"><name pos:start="211:13" pos:end="211:29"><name pos:start="211:13" pos:end="211:13">h</name><operator pos:start="211:14" pos:end="211:15">-&gt;</operator><name pos:start="211:16" pos:end="211:29">zigzag_scan_q0</name></name>          <operator pos:start="211:40" pos:end="211:40">=</operator> <name pos:start="211:42" pos:end="211:52">zigzag_scan</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:56"><expr pos:start="213:13" pos:end="213:55"><name pos:start="213:13" pos:end="213:32"><name pos:start="213:13" pos:end="213:13">h</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:32">zigzag_scan8x8_q0</name></name>       <operator pos:start="213:40" pos:end="213:40">=</operator> <name pos:start="213:42" pos:end="213:55">zigzag_scan8x8</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:62"><expr pos:start="215:13" pos:end="215:61"><name pos:start="215:13" pos:end="215:38"><name pos:start="215:13" pos:end="215:13">h</name><operator pos:start="215:14" pos:end="215:15">-&gt;</operator><name pos:start="215:16" pos:end="215:38">zigzag_scan8x8_cavlc_q0</name></name> <operator pos:start="215:40" pos:end="215:40">=</operator> <name pos:start="215:42" pos:end="215:61">zigzag_scan8x8_cavlc</name></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:52"><expr pos:start="217:13" pos:end="217:51"><name pos:start="217:13" pos:end="217:28"><name pos:start="217:13" pos:end="217:13">h</name><operator pos:start="217:14" pos:end="217:15">-&gt;</operator><name pos:start="217:16" pos:end="217:28">field_scan_q0</name></name>           <operator pos:start="217:40" pos:end="217:40">=</operator> <name pos:start="217:42" pos:end="217:51">field_scan</name></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:55"><expr pos:start="219:13" pos:end="219:54"><name pos:start="219:13" pos:end="219:31"><name pos:start="219:13" pos:end="219:13">h</name><operator pos:start="219:14" pos:end="219:15">-&gt;</operator><name pos:start="219:16" pos:end="219:31">field_scan8x8_q0</name></name>        <operator pos:start="219:40" pos:end="219:40">=</operator> <name pos:start="219:42" pos:end="219:54">field_scan8x8</name></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:61"><expr pos:start="221:13" pos:end="221:60"><name pos:start="221:13" pos:end="221:37"><name pos:start="221:13" pos:end="221:13">h</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:37">field_scan8x8_cavlc_q0</name></name>  <operator pos:start="221:40" pos:end="221:40">=</operator> <name pos:start="221:42" pos:end="221:60">field_scan8x8_cavlc</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="223:10" pos:end="237:9">else<block pos:start="223:14" pos:end="237:9">{<block_content pos:start="225:13" pos:end="235:64">

            <expr_stmt pos:start="225:13" pos:end="225:56"><expr pos:start="225:13" pos:end="225:55"><name pos:start="225:13" pos:end="225:29"><name pos:start="225:13" pos:end="225:13">h</name><operator pos:start="225:14" pos:end="225:15">-&gt;</operator><name pos:start="225:16" pos:end="225:29">zigzag_scan_q0</name></name>          <operator pos:start="225:40" pos:end="225:40">=</operator> <name pos:start="225:42" pos:end="225:55"><name pos:start="225:42" pos:end="225:42">h</name><operator pos:start="225:43" pos:end="225:44">-&gt;</operator><name pos:start="225:45" pos:end="225:55">zigzag_scan</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:59"><expr pos:start="227:13" pos:end="227:58"><name pos:start="227:13" pos:end="227:32"><name pos:start="227:13" pos:end="227:13">h</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:32">zigzag_scan8x8_q0</name></name>       <operator pos:start="227:40" pos:end="227:40">=</operator> <name pos:start="227:42" pos:end="227:58"><name pos:start="227:42" pos:end="227:42">h</name><operator pos:start="227:43" pos:end="227:44">-&gt;</operator><name pos:start="227:45" pos:end="227:58">zigzag_scan8x8</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:65"><expr pos:start="229:13" pos:end="229:64"><name pos:start="229:13" pos:end="229:38"><name pos:start="229:13" pos:end="229:13">h</name><operator pos:start="229:14" pos:end="229:15">-&gt;</operator><name pos:start="229:16" pos:end="229:38">zigzag_scan8x8_cavlc_q0</name></name> <operator pos:start="229:40" pos:end="229:40">=</operator> <name pos:start="229:42" pos:end="229:64"><name pos:start="229:42" pos:end="229:42">h</name><operator pos:start="229:43" pos:end="229:44">-&gt;</operator><name pos:start="229:45" pos:end="229:64">zigzag_scan8x8_cavlc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:55"><expr pos:start="231:13" pos:end="231:54"><name pos:start="231:13" pos:end="231:28"><name pos:start="231:13" pos:end="231:13">h</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:28">field_scan_q0</name></name>           <operator pos:start="231:40" pos:end="231:40">=</operator> <name pos:start="231:42" pos:end="231:54"><name pos:start="231:42" pos:end="231:42">h</name><operator pos:start="231:43" pos:end="231:44">-&gt;</operator><name pos:start="231:45" pos:end="231:54">field_scan</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="233:13" pos:end="233:58"><expr pos:start="233:13" pos:end="233:57"><name pos:start="233:13" pos:end="233:31"><name pos:start="233:13" pos:end="233:13">h</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:31">field_scan8x8_q0</name></name>        <operator pos:start="233:40" pos:end="233:40">=</operator> <name pos:start="233:42" pos:end="233:57"><name pos:start="233:42" pos:end="233:42">h</name><operator pos:start="233:43" pos:end="233:44">-&gt;</operator><name pos:start="233:45" pos:end="233:57">field_scan8x8</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="235:13" pos:end="235:64"><expr pos:start="235:13" pos:end="235:63"><name pos:start="235:13" pos:end="235:37"><name pos:start="235:13" pos:end="235:13">h</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:37">field_scan8x8_cavlc_q0</name></name>  <operator pos:start="235:40" pos:end="235:40">=</operator> <name pos:start="235:42" pos:end="235:63"><name pos:start="235:42" pos:end="235:42">h</name><operator pos:start="235:43" pos:end="235:44">-&gt;</operator><name pos:start="235:45" pos:end="235:63">field_scan8x8_cavlc</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="241:9" pos:end="241:24"><expr pos:start="241:9" pos:end="241:23"><call pos:start="241:9" pos:end="241:23"><name pos:start="241:9" pos:end="241:20">alloc_tables</name><argument_list pos:start="241:21" pos:end="241:23">(<argument pos:start="241:22" pos:end="241:22"><expr pos:start="241:22" pos:end="241:22"><name pos:start="241:22" pos:end="241:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="245:9" pos:end="245:35"><expr pos:start="245:9" pos:end="245:34"><name pos:start="245:9" pos:end="245:23"><name pos:start="245:9" pos:end="245:9">s</name><operator pos:start="245:10" pos:end="245:11">-&gt;</operator><name pos:start="245:12" pos:end="245:16">avctx</name><operator pos:start="245:17" pos:end="245:18">-&gt;</operator><name pos:start="245:19" pos:end="245:23">width</name></name> <operator pos:start="245:25" pos:end="245:25">=</operator> <name pos:start="245:27" pos:end="245:34"><name pos:start="245:27" pos:end="245:27">s</name><operator pos:start="245:28" pos:end="245:29">-&gt;</operator><name pos:start="245:30" pos:end="245:34">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:37"><expr pos:start="247:9" pos:end="247:36"><name pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:9">s</name><operator pos:start="247:10" pos:end="247:11">-&gt;</operator><name pos:start="247:12" pos:end="247:16">avctx</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:24">height</name></name> <operator pos:start="247:26" pos:end="247:26">=</operator> <name pos:start="247:28" pos:end="247:36"><name pos:start="247:28" pos:end="247:28">s</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:36">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:50"><expr pos:start="249:9" pos:end="249:49"><name pos:start="249:9" pos:end="249:37"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:16">avctx</name><operator pos:start="249:17" pos:end="249:18">-&gt;</operator><name pos:start="249:19" pos:end="249:37">sample_aspect_ratio</name></name><operator pos:start="249:38" pos:end="249:38">=</operator> <name pos:start="249:40" pos:end="249:49"><name pos:start="249:40" pos:end="249:40">h</name><operator pos:start="249:41" pos:end="249:42">-&gt;</operator><name pos:start="249:43" pos:end="249:45">sps</name><operator pos:start="249:46" pos:end="249:46">.</operator><name pos:start="249:47" pos:end="249:49">sar</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="253:50"><if pos:start="251:9" pos:end="253:50">if<condition pos:start="251:11" pos:end="251:46">(<expr pos:start="251:12" pos:end="251:45"><operator pos:start="251:12" pos:end="251:12">!</operator><name pos:start="251:13" pos:end="251:45"><name pos:start="251:13" pos:end="251:13">s</name><operator pos:start="251:14" pos:end="251:15">-&gt;</operator><name pos:start="251:16" pos:end="251:20">avctx</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:41">sample_aspect_ratio</name><operator pos:start="251:42" pos:end="251:42">.</operator><name pos:start="251:43" pos:end="251:45">den</name></name></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:50"><block_content pos:start="253:13" pos:end="253:50">

            <expr_stmt pos:start="253:13" pos:end="253:50"><expr pos:start="253:13" pos:end="253:49"><name pos:start="253:13" pos:end="253:45"><name pos:start="253:13" pos:end="253:13">s</name><operator pos:start="253:14" pos:end="253:15">-&gt;</operator><name pos:start="253:16" pos:end="253:20">avctx</name><operator pos:start="253:21" pos:end="253:22">-&gt;</operator><name pos:start="253:23" pos:end="253:41">sample_aspect_ratio</name><operator pos:start="253:42" pos:end="253:42">.</operator><name pos:start="253:43" pos:end="253:45">den</name></name> <operator pos:start="253:47" pos:end="253:47">=</operator> <literal type="number" pos:start="253:49" pos:end="253:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="257:9" pos:end="269:9"><if pos:start="257:9" pos:end="269:9">if<condition pos:start="257:11" pos:end="257:43">(<expr pos:start="257:12" pos:end="257:42"><name pos:start="257:12" pos:end="257:42"><name pos:start="257:12" pos:end="257:12">h</name><operator pos:start="257:13" pos:end="257:14">-&gt;</operator><name pos:start="257:15" pos:end="257:17">sps</name><operator pos:start="257:18" pos:end="257:18">.</operator><name pos:start="257:19" pos:end="257:42">timing_info_present_flag</name></name></expr>)</condition><block pos:start="257:44" pos:end="269:9">{<block_content pos:start="259:13" pos:end="267:79">

            <expr_stmt pos:start="259:13" pos:end="259:95"><expr pos:start="259:13" pos:end="259:94"><name pos:start="259:13" pos:end="259:31"><name pos:start="259:13" pos:end="259:13">s</name><operator pos:start="259:14" pos:end="259:15">-&gt;</operator><name pos:start="259:16" pos:end="259:20">avctx</name><operator pos:start="259:21" pos:end="259:22">-&gt;</operator><name pos:start="259:23" pos:end="259:31">time_base</name></name><operator pos:start="259:32" pos:end="259:32">=</operator> <operator pos:start="259:34" pos:end="259:34">(</operator><name pos:start="259:35" pos:end="259:44">AVRational</name><operator pos:start="259:45" pos:end="259:45">)</operator><block pos:start="259:46" pos:end="259:94">{<expr pos:start="259:47" pos:end="259:74"><name pos:start="259:47" pos:end="259:70"><name pos:start="259:47" pos:end="259:47">h</name><operator pos:start="259:48" pos:end="259:49">-&gt;</operator><name pos:start="259:50" pos:end="259:52">sps</name><operator pos:start="259:53" pos:end="259:53">.</operator><name pos:start="259:54" pos:end="259:70">num_units_in_tick</name></name> <operator pos:start="259:72" pos:end="259:72">*</operator> <literal type="number" pos:start="259:74" pos:end="259:74">2</literal></expr>, <expr pos:start="259:77" pos:end="259:93"><name pos:start="259:77" pos:end="259:93"><name pos:start="259:77" pos:end="259:77">h</name><operator pos:start="259:78" pos:end="259:79">-&gt;</operator><name pos:start="259:80" pos:end="259:82">sps</name><operator pos:start="259:83" pos:end="259:83">.</operator><name pos:start="259:84" pos:end="259:93">time_scale</name></name></expr>}</block></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="263:45"><if pos:start="261:13" pos:end="263:45">if<condition pos:start="261:15" pos:end="261:55">(<expr pos:start="261:16" pos:end="261:54"><name pos:start="261:16" pos:end="261:28"><name pos:start="261:16" pos:end="261:16">h</name><operator pos:start="261:17" pos:end="261:18">-&gt;</operator><name pos:start="261:19" pos:end="261:28">x264_build</name></name> <operator pos:start="261:30" pos:end="261:30">&gt;</operator> <literal type="number" pos:start="261:32" pos:end="261:32">0</literal> <operator pos:start="261:34" pos:end="261:35">&amp;&amp;</operator> <name pos:start="261:37" pos:end="261:49"><name pos:start="261:37" pos:end="261:37">h</name><operator pos:start="261:38" pos:end="261:39">-&gt;</operator><name pos:start="261:40" pos:end="261:49">x264_build</name></name> <operator pos:start="261:51" pos:end="261:51">&lt;</operator> <literal type="number" pos:start="261:53" pos:end="261:54">44</literal></expr>)</condition><block type="pseudo" pos:start="263:17" pos:end="263:45"><block_content pos:start="263:17" pos:end="263:45">

                <expr_stmt pos:start="263:17" pos:end="263:45"><expr pos:start="263:17" pos:end="263:44"><name pos:start="263:17" pos:end="263:39"><name pos:start="263:17" pos:end="263:17">s</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:24">avctx</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:35">time_base</name><operator pos:start="263:36" pos:end="263:36">.</operator><name pos:start="263:37" pos:end="263:39">den</name></name> <operator pos:start="263:41" pos:end="263:42">*=</operator> <literal type="number" pos:start="263:44" pos:end="263:44">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="265:13" pos:end="267:79"><expr pos:start="265:13" pos:end="267:78"><call pos:start="265:13" pos:end="267:78"><name pos:start="265:13" pos:end="265:21">av_reduce</name><argument_list pos:start="265:22" pos:end="267:78">(<argument pos:start="265:23" pos:end="265:46"><expr pos:start="265:23" pos:end="265:46"><operator pos:start="265:23" pos:end="265:23">&amp;</operator><name pos:start="265:24" pos:end="265:46"><name pos:start="265:24" pos:end="265:24">s</name><operator pos:start="265:25" pos:end="265:26">-&gt;</operator><name pos:start="265:27" pos:end="265:31">avctx</name><operator pos:start="265:32" pos:end="265:33">-&gt;</operator><name pos:start="265:34" pos:end="265:42">time_base</name><operator pos:start="265:43" pos:end="265:43">.</operator><name pos:start="265:44" pos:end="265:46">num</name></name></expr></argument>, <argument pos:start="265:49" pos:end="265:72"><expr pos:start="265:49" pos:end="265:72"><operator pos:start="265:49" pos:end="265:49">&amp;</operator><name pos:start="265:50" pos:end="265:72"><name pos:start="265:50" pos:end="265:50">s</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator><name pos:start="265:53" pos:end="265:57">avctx</name><operator pos:start="265:58" pos:end="265:59">-&gt;</operator><name pos:start="265:60" pos:end="265:68">time_base</name><operator pos:start="265:69" pos:end="265:69">.</operator><name pos:start="265:70" pos:end="265:72">den</name></name></expr></argument>,

                      <argument pos:start="267:23" pos:end="267:45"><expr pos:start="267:23" pos:end="267:45"><name pos:start="267:23" pos:end="267:45"><name pos:start="267:23" pos:end="267:23">s</name><operator pos:start="267:24" pos:end="267:25">-&gt;</operator><name pos:start="267:26" pos:end="267:30">avctx</name><operator pos:start="267:31" pos:end="267:32">-&gt;</operator><name pos:start="267:33" pos:end="267:41">time_base</name><operator pos:start="267:42" pos:end="267:42">.</operator><name pos:start="267:43" pos:end="267:45">num</name></name></expr></argument>, <argument pos:start="267:48" pos:end="267:70"><expr pos:start="267:48" pos:end="267:70"><name pos:start="267:48" pos:end="267:70"><name pos:start="267:48" pos:end="267:48">s</name><operator pos:start="267:49" pos:end="267:50">-&gt;</operator><name pos:start="267:51" pos:end="267:55">avctx</name><operator pos:start="267:56" pos:end="267:57">-&gt;</operator><name pos:start="267:58" pos:end="267:66">time_base</name><operator pos:start="267:67" pos:end="267:67">.</operator><name pos:start="267:68" pos:end="267:70">den</name></name></expr></argument>, <argument pos:start="267:73" pos:end="267:77"><expr pos:start="267:73" pos:end="267:77"><literal type="number" pos:start="267:73" pos:end="267:73">1</literal><operator pos:start="267:74" pos:end="267:75">&lt;&lt;</operator><literal type="number" pos:start="267:76" pos:end="267:77">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="275:5" pos:end="281:5"><if pos:start="275:5" pos:end="281:5">if<condition pos:start="275:7" pos:end="275:25">(<expr pos:start="275:8" pos:end="275:24"><name pos:start="275:8" pos:end="275:19"><name pos:start="275:8" pos:end="275:8">h</name><operator pos:start="275:9" pos:end="275:10">-&gt;</operator><name pos:start="275:11" pos:end="275:19">slice_num</name></name> <operator pos:start="275:21" pos:end="275:22">==</operator> <literal type="number" pos:start="275:24" pos:end="275:24">0</literal></expr>)</condition><block pos:start="275:26" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:22">

        <if_stmt pos:start="277:9" pos:end="279:22"><if pos:start="277:9" pos:end="279:22">if<condition pos:start="277:11" pos:end="277:30">(<expr pos:start="277:12" pos:end="277:29"><call pos:start="277:12" pos:end="277:25"><name pos:start="277:12" pos:end="277:22">frame_start</name><argument_list pos:start="277:23" pos:end="277:25">(<argument pos:start="277:24" pos:end="277:24"><expr pos:start="277:24" pos:end="277:24"><name pos:start="277:24" pos:end="277:24">h</name></expr></argument>)</argument_list></call> <operator pos:start="277:27" pos:end="277:27">&lt;</operator> <literal type="number" pos:start="277:29" pos:end="277:29">0</literal></expr>)</condition><block type="pseudo" pos:start="279:13" pos:end="279:22"><block_content pos:start="279:13" pos:end="279:22">

            <return pos:start="279:13" pos:end="279:22">return <expr pos:start="279:20" pos:end="279:21"><operator pos:start="279:20" pos:end="279:20">-</operator><literal type="number" pos:start="279:21" pos:end="279:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="285:5" pos:end="287:62"><expr pos:start="285:5" pos:end="287:61"><name pos:start="285:5" pos:end="285:37"><name pos:start="285:5" pos:end="285:5">s</name><operator pos:start="285:6" pos:end="285:7">-&gt;</operator><name pos:start="285:8" pos:end="285:26">current_picture_ptr</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:37">frame_num</name></name><operator pos:start="285:38" pos:end="285:38">=</operator> <comment type="line" pos:start="285:40" pos:end="285:64">//FIXME frame_num cleanup</comment>

    <name pos:start="287:5" pos:end="287:16"><name pos:start="287:5" pos:end="287:5">h</name><operator pos:start="287:6" pos:end="287:7">-&gt;</operator><name pos:start="287:8" pos:end="287:16">frame_num</name></name><operator pos:start="287:17" pos:end="287:17">=</operator> <call pos:start="287:19" pos:end="287:61"><name pos:start="287:19" pos:end="287:26">get_bits</name><argument_list pos:start="287:27" pos:end="287:61">(<argument pos:start="287:28" pos:end="287:33"><expr pos:start="287:28" pos:end="287:33"><operator pos:start="287:28" pos:end="287:28">&amp;</operator><name pos:start="287:29" pos:end="287:33"><name pos:start="287:29" pos:end="287:29">s</name><operator pos:start="287:30" pos:end="287:31">-&gt;</operator><name pos:start="287:32" pos:end="287:33">gb</name></name></expr></argument>, <argument pos:start="287:36" pos:end="287:60"><expr pos:start="287:36" pos:end="287:60"><name pos:start="287:36" pos:end="287:60"><name pos:start="287:36" pos:end="287:36">h</name><operator pos:start="287:37" pos:end="287:38">-&gt;</operator><name pos:start="287:39" pos:end="287:41">sps</name><operator pos:start="287:42" pos:end="287:42">.</operator><name pos:start="287:43" pos:end="287:60">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:20"><expr pos:start="291:5" pos:end="291:19"><name pos:start="291:5" pos:end="291:15"><name pos:start="291:5" pos:end="291:5">h</name><operator pos:start="291:6" pos:end="291:7">-&gt;</operator><name pos:start="291:8" pos:end="291:15">mb_mbaff</name></name> <operator pos:start="291:17" pos:end="291:17">=</operator> <literal type="number" pos:start="291:19" pos:end="291:19">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:24"><expr pos:start="293:5" pos:end="293:23"><name pos:start="293:5" pos:end="293:19"><name pos:start="293:5" pos:end="293:5">h</name><operator pos:start="293:6" pos:end="293:7">-&gt;</operator><name pos:start="293:8" pos:end="293:19">mb_aff_frame</name></name> <operator pos:start="293:21" pos:end="293:21">=</operator> <literal type="number" pos:start="293:23" pos:end="293:23">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="295:5" pos:end="315:5"><if pos:start="295:5" pos:end="299:5">if<condition pos:start="295:7" pos:end="295:34">(<expr pos:start="295:8" pos:end="295:33"><name pos:start="295:8" pos:end="295:33"><name pos:start="295:8" pos:end="295:8">h</name><operator pos:start="295:9" pos:end="295:10">-&gt;</operator><name pos:start="295:11" pos:end="295:13">sps</name><operator pos:start="295:14" pos:end="295:14">.</operator><name pos:start="295:15" pos:end="295:33">frame_mbs_only_flag</name></name></expr>)</condition><block pos:start="295:35" pos:end="299:5">{<block_content pos:start="297:9" pos:end="297:41">

        <expr_stmt pos:start="297:9" pos:end="297:41"><expr pos:start="297:9" pos:end="297:40"><name pos:start="297:9" pos:end="297:28"><name pos:start="297:9" pos:end="297:9">s</name><operator pos:start="297:10" pos:end="297:11">-&gt;</operator><name pos:start="297:12" pos:end="297:28">picture_structure</name></name><operator pos:start="297:29" pos:end="297:29">=</operator> <name pos:start="297:31" pos:end="297:40">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="299:6" pos:end="315:5">else<block pos:start="299:10" pos:end="315:5">{<block_content pos:start="301:9" pos:end="313:9">

        <if_stmt pos:start="301:9" pos:end="313:9"><if pos:start="301:9" pos:end="307:9">if<condition pos:start="301:11" pos:end="301:29">(<expr pos:start="301:12" pos:end="301:28"><call pos:start="301:12" pos:end="301:28"><name pos:start="301:12" pos:end="301:20">get_bits1</name><argument_list pos:start="301:21" pos:end="301:28">(<argument pos:start="301:22" pos:end="301:27"><expr pos:start="301:22" pos:end="301:27"><operator pos:start="301:22" pos:end="301:22">&amp;</operator><name pos:start="301:23" pos:end="301:27"><name pos:start="301:23" pos:end="301:23">s</name><operator pos:start="301:24" pos:end="301:25">-&gt;</operator><name pos:start="301:26" pos:end="301:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="301:31" pos:end="307:9">{<block_content pos:start="303:13" pos:end="305:86"> <comment type="line" pos:start="301:33" pos:end="301:48">//field_pic_flag</comment>

            <expr_stmt pos:start="303:13" pos:end="303:69"><expr pos:start="303:13" pos:end="303:68"><name pos:start="303:13" pos:end="303:32"><name pos:start="303:13" pos:end="303:13">s</name><operator pos:start="303:14" pos:end="303:15">-&gt;</operator><name pos:start="303:16" pos:end="303:32">picture_structure</name></name><operator pos:start="303:33" pos:end="303:33">=</operator> <name pos:start="303:35" pos:end="303:48">PICT_TOP_FIELD</name> <operator pos:start="303:50" pos:end="303:50">+</operator> <call pos:start="303:52" pos:end="303:68"><name pos:start="303:52" pos:end="303:60">get_bits1</name><argument_list pos:start="303:61" pos:end="303:68">(<argument pos:start="303:62" pos:end="303:67"><expr pos:start="303:62" pos:end="303:67"><operator pos:start="303:62" pos:end="303:62">&amp;</operator><name pos:start="303:63" pos:end="303:67"><name pos:start="303:63" pos:end="303:63">s</name><operator pos:start="303:64" pos:end="303:65">-&gt;</operator><name pos:start="303:66" pos:end="303:67">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="303:71" pos:end="303:89">//bottom_field_flag</comment>

            <expr_stmt pos:start="305:13" pos:end="305:86"><expr pos:start="305:13" pos:end="305:85"><call pos:start="305:13" pos:end="305:85"><name pos:start="305:13" pos:end="305:18">av_log</name><argument_list pos:start="305:19" pos:end="305:85">(<argument pos:start="305:20" pos:end="305:29"><expr pos:start="305:20" pos:end="305:29"><name pos:start="305:20" pos:end="305:29"><name pos:start="305:20" pos:end="305:20">h</name><operator pos:start="305:21" pos:end="305:22">-&gt;</operator><name pos:start="305:23" pos:end="305:23">s</name><operator pos:start="305:24" pos:end="305:24">.</operator><name pos:start="305:25" pos:end="305:29">avctx</name></name></expr></argument>, <argument pos:start="305:32" pos:end="305:43"><expr pos:start="305:32" pos:end="305:43"><name pos:start="305:32" pos:end="305:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="305:46" pos:end="305:84"><expr pos:start="305:46" pos:end="305:84"><literal type="string" pos:start="305:46" pos:end="305:84">"PAFF interlacing is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="307:11" pos:end="313:9">else <block pos:start="307:16" pos:end="313:9">{<block_content pos:start="309:13" pos:end="311:44">

            <expr_stmt pos:start="309:13" pos:end="309:45"><expr pos:start="309:13" pos:end="309:44"><name pos:start="309:13" pos:end="309:32"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:32">picture_structure</name></name><operator pos:start="309:33" pos:end="309:33">=</operator> <name pos:start="309:35" pos:end="309:44">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="311:13" pos:end="311:44"><expr pos:start="311:13" pos:end="311:43"><name pos:start="311:13" pos:end="311:27"><name pos:start="311:13" pos:end="311:13">h</name><operator pos:start="311:14" pos:end="311:15">-&gt;</operator><name pos:start="311:16" pos:end="311:27">mb_aff_frame</name></name> <operator pos:start="311:29" pos:end="311:29">=</operator> <name pos:start="311:31" pos:end="311:43"><name pos:start="311:31" pos:end="311:31">h</name><operator pos:start="311:32" pos:end="311:33">-&gt;</operator><name pos:start="311:34" pos:end="311:36">sps</name><operator pos:start="311:37" pos:end="311:37">.</operator><name pos:start="311:38" pos:end="311:43">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="319:5" pos:end="319:63"><expr pos:start="319:5" pos:end="319:62"><name pos:start="319:5" pos:end="319:18"><name pos:start="319:5" pos:end="319:5">s</name><operator pos:start="319:6" pos:end="319:7">-&gt;</operator><name pos:start="319:8" pos:end="319:18">resync_mb_x</name></name> <operator pos:start="319:20" pos:end="319:20">=</operator> <name pos:start="319:22" pos:end="319:28"><name pos:start="319:22" pos:end="319:22">s</name><operator pos:start="319:23" pos:end="319:24">-&gt;</operator><name pos:start="319:25" pos:end="319:28">mb_x</name></name> <operator pos:start="319:30" pos:end="319:30">=</operator> <name pos:start="319:32" pos:end="319:48">first_mb_in_slice</name> <operator pos:start="319:50" pos:end="319:50">%</operator> <name pos:start="319:52" pos:end="319:62"><name pos:start="319:52" pos:end="319:52">s</name><operator pos:start="319:53" pos:end="319:54">-&gt;</operator><name pos:start="319:55" pos:end="319:62">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:84"><expr pos:start="321:5" pos:end="321:83"><name pos:start="321:5" pos:end="321:18"><name pos:start="321:5" pos:end="321:5">s</name><operator pos:start="321:6" pos:end="321:7">-&gt;</operator><name pos:start="321:8" pos:end="321:18">resync_mb_y</name></name> <operator pos:start="321:20" pos:end="321:20">=</operator> <name pos:start="321:22" pos:end="321:28"><name pos:start="321:22" pos:end="321:22">s</name><operator pos:start="321:23" pos:end="321:24">-&gt;</operator><name pos:start="321:25" pos:end="321:28">mb_y</name></name> <operator pos:start="321:30" pos:end="321:30">=</operator> <operator pos:start="321:32" pos:end="321:32">(</operator><name pos:start="321:33" pos:end="321:49">first_mb_in_slice</name> <operator pos:start="321:51" pos:end="321:51">/</operator> <name pos:start="321:53" pos:end="321:63"><name pos:start="321:53" pos:end="321:53">s</name><operator pos:start="321:54" pos:end="321:55">-&gt;</operator><name pos:start="321:56" pos:end="321:63">mb_width</name></name><operator pos:start="321:64" pos:end="321:64">)</operator> <operator pos:start="321:66" pos:end="321:67">&lt;&lt;</operator> <name pos:start="321:69" pos:end="321:83"><name pos:start="321:69" pos:end="321:69">h</name><operator pos:start="321:70" pos:end="321:71">-&gt;</operator><name pos:start="321:72" pos:end="321:83">mb_aff_frame</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="323:5" pos:end="327:5"><if pos:start="323:5" pos:end="327:5">if<condition pos:start="323:7" pos:end="323:31">(<expr pos:start="323:8" pos:end="323:30"><name pos:start="323:8" pos:end="323:14"><name pos:start="323:8" pos:end="323:8">s</name><operator pos:start="323:9" pos:end="323:10">-&gt;</operator><name pos:start="323:11" pos:end="323:14">mb_y</name></name> <operator pos:start="323:16" pos:end="323:17">&gt;=</operator> <name pos:start="323:19" pos:end="323:30"><name pos:start="323:19" pos:end="323:19">s</name><operator pos:start="323:20" pos:end="323:21">-&gt;</operator><name pos:start="323:22" pos:end="323:30">mb_height</name></name></expr>)</condition><block pos:start="323:32" pos:end="327:5">{<block_content pos:start="325:9" pos:end="325:18">

        <return pos:start="325:9" pos:end="325:18">return <expr pos:start="325:16" pos:end="325:17"><operator pos:start="325:16" pos:end="325:16">-</operator><literal type="number" pos:start="325:17" pos:end="325:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="331:5" pos:end="343:5"><if pos:start="331:5" pos:end="337:5">if<condition pos:start="331:7" pos:end="331:40">(<expr pos:start="331:8" pos:end="331:39"><name pos:start="331:8" pos:end="331:27"><name pos:start="331:8" pos:end="331:8">s</name><operator pos:start="331:9" pos:end="331:10">-&gt;</operator><name pos:start="331:11" pos:end="331:27">picture_structure</name></name><operator pos:start="331:28" pos:end="331:29">==</operator><name pos:start="331:30" pos:end="331:39">PICT_FRAME</name></expr>)</condition><block pos:start="331:41" pos:end="337:5">{<block_content pos:start="333:9" pos:end="335:54">

        <expr_stmt pos:start="333:9" pos:end="333:40"><expr pos:start="333:9" pos:end="333:39"><name pos:start="333:9" pos:end="333:23"><name pos:start="333:9" pos:end="333:9">h</name><operator pos:start="333:10" pos:end="333:11">-&gt;</operator><name pos:start="333:12" pos:end="333:23">curr_pic_num</name></name><operator pos:start="333:24" pos:end="333:24">=</operator>   <name pos:start="333:28" pos:end="333:39"><name pos:start="333:28" pos:end="333:28">h</name><operator pos:start="333:29" pos:end="333:30">-&gt;</operator><name pos:start="333:31" pos:end="333:39">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:54"><expr pos:start="335:9" pos:end="335:53"><name pos:start="335:9" pos:end="335:22"><name pos:start="335:9" pos:end="335:9">h</name><operator pos:start="335:10" pos:end="335:11">-&gt;</operator><name pos:start="335:12" pos:end="335:22">max_pic_num</name></name><operator pos:start="335:23" pos:end="335:23">=</operator> <literal type="number" pos:start="335:25" pos:end="335:25">1</literal><operator pos:start="335:26" pos:end="335:27">&lt;&lt;</operator> <name pos:start="335:29" pos:end="335:53"><name pos:start="335:29" pos:end="335:29">h</name><operator pos:start="335:30" pos:end="335:31">-&gt;</operator><name pos:start="335:32" pos:end="335:34">sps</name><operator pos:start="335:35" pos:end="335:35">.</operator><name pos:start="335:36" pos:end="335:53">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="337:6" pos:end="343:5">else<block pos:start="337:10" pos:end="343:5">{<block_content pos:start="339:9" pos:end="341:59">

        <expr_stmt pos:start="339:9" pos:end="339:40"><expr pos:start="339:9" pos:end="339:39"><name pos:start="339:9" pos:end="339:23"><name pos:start="339:9" pos:end="339:9">h</name><operator pos:start="339:10" pos:end="339:11">-&gt;</operator><name pos:start="339:12" pos:end="339:23">curr_pic_num</name></name><operator pos:start="339:24" pos:end="339:24">=</operator> <literal type="number" pos:start="339:26" pos:end="339:26">2</literal><operator pos:start="339:27" pos:end="339:27">*</operator><name pos:start="339:28" pos:end="339:39"><name pos:start="339:28" pos:end="339:28">h</name><operator pos:start="339:29" pos:end="339:30">-&gt;</operator><name pos:start="339:31" pos:end="339:39">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="341:9" pos:end="341:59"><expr pos:start="341:9" pos:end="341:58"><name pos:start="341:9" pos:end="341:22"><name pos:start="341:9" pos:end="341:9">h</name><operator pos:start="341:10" pos:end="341:11">-&gt;</operator><name pos:start="341:12" pos:end="341:22">max_pic_num</name></name><operator pos:start="341:23" pos:end="341:23">=</operator> <literal type="number" pos:start="341:25" pos:end="341:25">1</literal><operator pos:start="341:26" pos:end="341:27">&lt;&lt;</operator><operator pos:start="341:28" pos:end="341:28">(</operator><name pos:start="341:29" pos:end="341:53"><name pos:start="341:29" pos:end="341:29">h</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:34">sps</name><operator pos:start="341:35" pos:end="341:35">.</operator><name pos:start="341:36" pos:end="341:53">log2_max_frame_num</name></name> <operator pos:start="341:55" pos:end="341:55">+</operator> <literal type="number" pos:start="341:57" pos:end="341:57">1</literal><operator pos:start="341:58" pos:end="341:58">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="347:5" pos:end="351:5"><if pos:start="347:5" pos:end="351:5">if<condition pos:start="347:7" pos:end="347:41">(<expr pos:start="347:8" pos:end="347:40"><name pos:start="347:8" pos:end="347:23"><name pos:start="347:8" pos:end="347:8">h</name><operator pos:start="347:9" pos:end="347:10">-&gt;</operator><name pos:start="347:11" pos:end="347:23">nal_unit_type</name></name> <operator pos:start="347:25" pos:end="347:26">==</operator> <name pos:start="347:28" pos:end="347:40">NAL_IDR_SLICE</name></expr>)</condition><block pos:start="347:42" pos:end="351:5">{<block_content pos:start="349:9" pos:end="349:30">

        <expr_stmt pos:start="349:9" pos:end="349:30"><expr pos:start="349:9" pos:end="349:29"><call pos:start="349:9" pos:end="349:29"><name pos:start="349:9" pos:end="349:21">get_ue_golomb</name><argument_list pos:start="349:22" pos:end="349:29">(<argument pos:start="349:23" pos:end="349:28"><expr pos:start="349:23" pos:end="349:28"><operator pos:start="349:23" pos:end="349:23">&amp;</operator><name pos:start="349:24" pos:end="349:28"><name pos:start="349:24" pos:end="349:24">s</name><operator pos:start="349:25" pos:end="349:26">-&gt;</operator><name pos:start="349:27" pos:end="349:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="349:32" pos:end="349:47">/* idr_pic_id */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="355:5" pos:end="367:5"><if pos:start="355:5" pos:end="367:5">if<condition pos:start="355:7" pos:end="355:26">(<expr pos:start="355:8" pos:end="355:25"><name pos:start="355:8" pos:end="355:22"><name pos:start="355:8" pos:end="355:8">h</name><operator pos:start="355:9" pos:end="355:10">-&gt;</operator><name pos:start="355:11" pos:end="355:13">sps</name><operator pos:start="355:14" pos:end="355:14">.</operator><name pos:start="355:15" pos:end="355:22">poc_type</name></name><operator pos:start="355:23" pos:end="355:24">==</operator><literal type="number" pos:start="355:25" pos:end="355:25">0</literal></expr>)</condition><block pos:start="355:27" pos:end="367:5">{<block_content pos:start="357:9" pos:end="365:9">

        <expr_stmt pos:start="357:9" pos:end="357:62"><expr pos:start="357:9" pos:end="357:61"><name pos:start="357:9" pos:end="357:18"><name pos:start="357:9" pos:end="357:9">h</name><operator pos:start="357:10" pos:end="357:11">-&gt;</operator><name pos:start="357:12" pos:end="357:18">poc_lsb</name></name><operator pos:start="357:19" pos:end="357:19">=</operator> <call pos:start="357:21" pos:end="357:61"><name pos:start="357:21" pos:end="357:28">get_bits</name><argument_list pos:start="357:29" pos:end="357:61">(<argument pos:start="357:30" pos:end="357:35"><expr pos:start="357:30" pos:end="357:35"><operator pos:start="357:30" pos:end="357:30">&amp;</operator><name pos:start="357:31" pos:end="357:35"><name pos:start="357:31" pos:end="357:31">s</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:35">gb</name></name></expr></argument>, <argument pos:start="357:38" pos:end="357:60"><expr pos:start="357:38" pos:end="357:60"><name pos:start="357:38" pos:end="357:60"><name pos:start="357:38" pos:end="357:38">h</name><operator pos:start="357:39" pos:end="357:40">-&gt;</operator><name pos:start="357:41" pos:end="357:43">sps</name><operator pos:start="357:44" pos:end="357:44">.</operator><name pos:start="357:45" pos:end="357:60">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="361:9" pos:end="365:9"><if pos:start="361:9" pos:end="365:9">if<condition pos:start="361:11" pos:end="361:75">(<expr pos:start="361:12" pos:end="361:74"><name pos:start="361:12" pos:end="361:35"><name pos:start="361:12" pos:end="361:12">h</name><operator pos:start="361:13" pos:end="361:14">-&gt;</operator><name pos:start="361:15" pos:end="361:17">pps</name><operator pos:start="361:18" pos:end="361:18">.</operator><name pos:start="361:19" pos:end="361:35">pic_order_present</name></name><operator pos:start="361:36" pos:end="361:37">==</operator><literal type="number" pos:start="361:38" pos:end="361:38">1</literal> <operator pos:start="361:40" pos:end="361:41">&amp;&amp;</operator> <name pos:start="361:43" pos:end="361:62"><name pos:start="361:43" pos:end="361:43">s</name><operator pos:start="361:44" pos:end="361:45">-&gt;</operator><name pos:start="361:46" pos:end="361:62">picture_structure</name></name><operator pos:start="361:63" pos:end="361:64">==</operator><name pos:start="361:65" pos:end="361:74">PICT_FRAME</name></expr>)</condition><block pos:start="361:76" pos:end="365:9">{<block_content pos:start="363:13" pos:end="363:55">

            <expr_stmt pos:start="363:13" pos:end="363:55"><expr pos:start="363:13" pos:end="363:54"><name pos:start="363:13" pos:end="363:31"><name pos:start="363:13" pos:end="363:13">h</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:31">delta_poc_bottom</name></name><operator pos:start="363:32" pos:end="363:32">=</operator> <call pos:start="363:34" pos:end="363:54"><name pos:start="363:34" pos:end="363:46">get_se_golomb</name><argument_list pos:start="363:47" pos:end="363:54">(<argument pos:start="363:48" pos:end="363:53"><expr pos:start="363:48" pos:end="363:53"><operator pos:start="363:48" pos:end="363:48">&amp;</operator><name pos:start="363:49" pos:end="363:53"><name pos:start="363:49" pos:end="363:49">s</name><operator pos:start="363:50" pos:end="363:51">-&gt;</operator><name pos:start="363:52" pos:end="363:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="371:5" pos:end="381:5"><if pos:start="371:5" pos:end="381:5">if<condition pos:start="371:7" pos:end="371:70">(<expr pos:start="371:8" pos:end="371:69"><name pos:start="371:8" pos:end="371:22"><name pos:start="371:8" pos:end="371:8">h</name><operator pos:start="371:9" pos:end="371:10">-&gt;</operator><name pos:start="371:11" pos:end="371:13">sps</name><operator pos:start="371:14" pos:end="371:14">.</operator><name pos:start="371:15" pos:end="371:22">poc_type</name></name><operator pos:start="371:23" pos:end="371:24">==</operator><literal type="number" pos:start="371:25" pos:end="371:25">1</literal> <operator pos:start="371:27" pos:end="371:28">&amp;&amp;</operator> <operator pos:start="371:30" pos:end="371:30">!</operator><name pos:start="371:31" pos:end="371:69"><name pos:start="371:31" pos:end="371:31">h</name><operator pos:start="371:32" pos:end="371:33">-&gt;</operator><name pos:start="371:34" pos:end="371:36">sps</name><operator pos:start="371:37" pos:end="371:37">.</operator><name pos:start="371:38" pos:end="371:69">delta_pic_order_always_zero_flag</name></name></expr>)</condition><block pos:start="371:71" pos:end="381:5">{<block_content pos:start="373:9" pos:end="379:51">

        <expr_stmt pos:start="373:9" pos:end="373:47"><expr pos:start="373:9" pos:end="373:46"><name pos:start="373:9" pos:end="373:23"><name pos:start="373:9" pos:end="373:9">h</name><operator pos:start="373:10" pos:end="373:11">-&gt;</operator><name pos:start="373:12" pos:end="373:20">delta_poc</name><index pos:start="373:21" pos:end="373:23">[<expr pos:start="373:22" pos:end="373:22"><literal type="number" pos:start="373:22" pos:end="373:22">0</literal></expr>]</index></name><operator pos:start="373:24" pos:end="373:24">=</operator> <call pos:start="373:26" pos:end="373:46"><name pos:start="373:26" pos:end="373:38">get_se_golomb</name><argument_list pos:start="373:39" pos:end="373:46">(<argument pos:start="373:40" pos:end="373:45"><expr pos:start="373:40" pos:end="373:45"><operator pos:start="373:40" pos:end="373:40">&amp;</operator><name pos:start="373:41" pos:end="373:45"><name pos:start="373:41" pos:end="373:41">s</name><operator pos:start="373:42" pos:end="373:43">-&gt;</operator><name pos:start="373:44" pos:end="373:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="377:9" pos:end="379:51"><if pos:start="377:9" pos:end="379:51">if<condition pos:start="377:11" pos:end="377:75">(<expr pos:start="377:12" pos:end="377:74"><name pos:start="377:12" pos:end="377:35"><name pos:start="377:12" pos:end="377:12">h</name><operator pos:start="377:13" pos:end="377:14">-&gt;</operator><name pos:start="377:15" pos:end="377:17">pps</name><operator pos:start="377:18" pos:end="377:18">.</operator><name pos:start="377:19" pos:end="377:35">pic_order_present</name></name><operator pos:start="377:36" pos:end="377:37">==</operator><literal type="number" pos:start="377:38" pos:end="377:38">1</literal> <operator pos:start="377:40" pos:end="377:41">&amp;&amp;</operator> <name pos:start="377:43" pos:end="377:62"><name pos:start="377:43" pos:end="377:43">s</name><operator pos:start="377:44" pos:end="377:45">-&gt;</operator><name pos:start="377:46" pos:end="377:62">picture_structure</name></name><operator pos:start="377:63" pos:end="377:64">==</operator><name pos:start="377:65" pos:end="377:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="379:13" pos:end="379:51"><block_content pos:start="379:13" pos:end="379:51">

            <expr_stmt pos:start="379:13" pos:end="379:51"><expr pos:start="379:13" pos:end="379:50"><name pos:start="379:13" pos:end="379:27"><name pos:start="379:13" pos:end="379:13">h</name><operator pos:start="379:14" pos:end="379:15">-&gt;</operator><name pos:start="379:16" pos:end="379:24">delta_poc</name><index pos:start="379:25" pos:end="379:27">[<expr pos:start="379:26" pos:end="379:26"><literal type="number" pos:start="379:26" pos:end="379:26">1</literal></expr>]</index></name><operator pos:start="379:28" pos:end="379:28">=</operator> <call pos:start="379:30" pos:end="379:50"><name pos:start="379:30" pos:end="379:42">get_se_golomb</name><argument_list pos:start="379:43" pos:end="379:50">(<argument pos:start="379:44" pos:end="379:49"><expr pos:start="379:44" pos:end="379:49"><operator pos:start="379:44" pos:end="379:44">&amp;</operator><name pos:start="379:45" pos:end="379:49"><name pos:start="379:45" pos:end="379:45">s</name><operator pos:start="379:46" pos:end="379:47">-&gt;</operator><name pos:start="379:48" pos:end="379:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="385:5" pos:end="385:16"><expr pos:start="385:5" pos:end="385:15"><call pos:start="385:5" pos:end="385:15"><name pos:start="385:5" pos:end="385:12">init_poc</name><argument_list pos:start="385:13" pos:end="385:15">(<argument pos:start="385:14" pos:end="385:14"><expr pos:start="385:14" pos:end="385:14"><name pos:start="385:14" pos:end="385:14">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="389:5" pos:end="393:5"><if pos:start="389:5" pos:end="393:5">if<condition pos:start="389:7" pos:end="389:40">(<expr pos:start="389:8" pos:end="389:39"><name pos:start="389:8" pos:end="389:39"><name pos:start="389:8" pos:end="389:8">h</name><operator pos:start="389:9" pos:end="389:10">-&gt;</operator><name pos:start="389:11" pos:end="389:13">pps</name><operator pos:start="389:14" pos:end="389:14">.</operator><name pos:start="389:15" pos:end="389:39">redundant_pic_cnt_present</name></name></expr>)</condition><block pos:start="389:41" pos:end="393:5">{<block_content pos:start="391:9" pos:end="391:54">

        <expr_stmt pos:start="391:9" pos:end="391:54"><expr pos:start="391:9" pos:end="391:53"><name pos:start="391:9" pos:end="391:30"><name pos:start="391:9" pos:end="391:9">h</name><operator pos:start="391:10" pos:end="391:11">-&gt;</operator><name pos:start="391:12" pos:end="391:30">redundant_pic_count</name></name><operator pos:start="391:31" pos:end="391:31">=</operator> <call pos:start="391:33" pos:end="391:53"><name pos:start="391:33" pos:end="391:45">get_ue_golomb</name><argument_list pos:start="391:46" pos:end="391:53">(<argument pos:start="391:47" pos:end="391:52"><expr pos:start="391:47" pos:end="391:52"><operator pos:start="391:47" pos:end="391:47">&amp;</operator><name pos:start="391:48" pos:end="391:52"><name pos:start="391:48" pos:end="391:48">s</name><operator pos:start="391:49" pos:end="391:50">-&gt;</operator><name pos:start="391:51" pos:end="391:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="397:5" pos:end="397:55">//set defaults, might be overriden a few line later</comment>

    <expr_stmt pos:start="399:5" pos:end="399:41"><expr pos:start="399:5" pos:end="399:40"><name pos:start="399:5" pos:end="399:19"><name pos:start="399:5" pos:end="399:5">h</name><operator pos:start="399:6" pos:end="399:7">-&gt;</operator><name pos:start="399:8" pos:end="399:16">ref_count</name><index pos:start="399:17" pos:end="399:19">[<expr pos:start="399:18" pos:end="399:18"><literal type="number" pos:start="399:18" pos:end="399:18">0</literal></expr>]</index></name><operator pos:start="399:20" pos:end="399:20">=</operator> <name pos:start="399:22" pos:end="399:40"><name pos:start="399:22" pos:end="399:22">h</name><operator pos:start="399:23" pos:end="399:24">-&gt;</operator><name pos:start="399:25" pos:end="399:27">pps</name><operator pos:start="399:28" pos:end="399:28">.</operator><name pos:start="399:29" pos:end="399:37">ref_count</name><index pos:start="399:38" pos:end="399:40">[<expr pos:start="399:39" pos:end="399:39"><literal type="number" pos:start="399:39" pos:end="399:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="401:5" pos:end="401:41"><expr pos:start="401:5" pos:end="401:40"><name pos:start="401:5" pos:end="401:19"><name pos:start="401:5" pos:end="401:5">h</name><operator pos:start="401:6" pos:end="401:7">-&gt;</operator><name pos:start="401:8" pos:end="401:16">ref_count</name><index pos:start="401:17" pos:end="401:19">[<expr pos:start="401:18" pos:end="401:18"><literal type="number" pos:start="401:18" pos:end="401:18">1</literal></expr>]</index></name><operator pos:start="401:20" pos:end="401:20">=</operator> <name pos:start="401:22" pos:end="401:40"><name pos:start="401:22" pos:end="401:22">h</name><operator pos:start="401:23" pos:end="401:24">-&gt;</operator><name pos:start="401:25" pos:end="401:27">pps</name><operator pos:start="401:28" pos:end="401:28">.</operator><name pos:start="401:29" pos:end="401:37">ref_count</name><index pos:start="401:38" pos:end="401:40">[<expr pos:start="401:39" pos:end="401:39"><literal type="number" pos:start="401:39" pos:end="401:39">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="405:5" pos:end="441:5"><if pos:start="405:5" pos:end="441:5">if<condition pos:start="405:7" pos:end="405:86">(<expr pos:start="405:8" pos:end="405:85"><name pos:start="405:8" pos:end="405:20"><name pos:start="405:8" pos:end="405:8">h</name><operator pos:start="405:9" pos:end="405:10">-&gt;</operator><name pos:start="405:11" pos:end="405:20">slice_type</name></name> <operator pos:start="405:22" pos:end="405:23">==</operator> <name pos:start="405:25" pos:end="405:30">P_TYPE</name> <operator pos:start="405:32" pos:end="405:33">||</operator> <name pos:start="405:35" pos:end="405:47"><name pos:start="405:35" pos:end="405:35">h</name><operator pos:start="405:36" pos:end="405:37">-&gt;</operator><name pos:start="405:38" pos:end="405:47">slice_type</name></name> <operator pos:start="405:49" pos:end="405:50">==</operator> <name pos:start="405:52" pos:end="405:58">SP_TYPE</name> <operator pos:start="405:60" pos:end="405:61">||</operator> <name pos:start="405:63" pos:end="405:75"><name pos:start="405:63" pos:end="405:63">h</name><operator pos:start="405:64" pos:end="405:65">-&gt;</operator><name pos:start="405:66" pos:end="405:75">slice_type</name></name> <operator pos:start="405:77" pos:end="405:78">==</operator> <name pos:start="405:80" pos:end="405:85">B_TYPE</name></expr>)</condition><block pos:start="405:87" pos:end="441:5">{<block_content pos:start="407:9" pos:end="439:9">

        <if_stmt pos:start="407:9" pos:end="415:9"><if pos:start="407:9" pos:end="415:9">if<condition pos:start="407:11" pos:end="407:35">(<expr pos:start="407:12" pos:end="407:34"><name pos:start="407:12" pos:end="407:24"><name pos:start="407:12" pos:end="407:12">h</name><operator pos:start="407:13" pos:end="407:14">-&gt;</operator><name pos:start="407:15" pos:end="407:24">slice_type</name></name> <operator pos:start="407:26" pos:end="407:27">==</operator> <name pos:start="407:29" pos:end="407:34">B_TYPE</name></expr>)</condition><block pos:start="407:36" pos:end="415:9">{<block_content pos:start="409:13" pos:end="413:101">

            <expr_stmt pos:start="409:13" pos:end="409:57"><expr pos:start="409:13" pos:end="409:56"><name pos:start="409:13" pos:end="409:37"><name pos:start="409:13" pos:end="409:13">h</name><operator pos:start="409:14" pos:end="409:15">-&gt;</operator><name pos:start="409:16" pos:end="409:37">direct_spatial_mv_pred</name></name><operator pos:start="409:38" pos:end="409:38">=</operator> <call pos:start="409:40" pos:end="409:56"><name pos:start="409:40" pos:end="409:48">get_bits1</name><argument_list pos:start="409:49" pos:end="409:56">(<argument pos:start="409:50" pos:end="409:55"><expr pos:start="409:50" pos:end="409:55"><operator pos:start="409:50" pos:end="409:50">&amp;</operator><name pos:start="409:51" pos:end="409:55"><name pos:start="409:51" pos:end="409:51">s</name><operator pos:start="409:52" pos:end="409:53">-&gt;</operator><name pos:start="409:54" pos:end="409:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="411:13" pos:end="413:101"><if pos:start="411:13" pos:end="413:101">if<condition pos:start="411:15" pos:end="411:58">(<expr pos:start="411:16" pos:end="411:57"><name pos:start="411:16" pos:end="411:28"><name pos:start="411:16" pos:end="411:16">h</name><operator pos:start="411:17" pos:end="411:18">-&gt;</operator><name pos:start="411:19" pos:end="411:21">sps</name><operator pos:start="411:22" pos:end="411:22">.</operator><name pos:start="411:23" pos:end="411:28">mb_aff</name></name> <operator pos:start="411:30" pos:end="411:31">&amp;&amp;</operator> <name pos:start="411:33" pos:end="411:57"><name pos:start="411:33" pos:end="411:33">h</name><operator pos:start="411:34" pos:end="411:35">-&gt;</operator><name pos:start="411:36" pos:end="411:57">direct_spatial_mv_pred</name></name></expr>)</condition><block type="pseudo" pos:start="413:17" pos:end="413:101"><block_content pos:start="413:17" pos:end="413:101">

                <expr_stmt pos:start="413:17" pos:end="413:101"><expr pos:start="413:17" pos:end="413:100"><call pos:start="413:17" pos:end="413:100"><name pos:start="413:17" pos:end="413:22">av_log</name><argument_list pos:start="413:23" pos:end="413:100">(<argument pos:start="413:24" pos:end="413:33"><expr pos:start="413:24" pos:end="413:33"><name pos:start="413:24" pos:end="413:33"><name pos:start="413:24" pos:end="413:24">h</name><operator pos:start="413:25" pos:end="413:26">-&gt;</operator><name pos:start="413:27" pos:end="413:27">s</name><operator pos:start="413:28" pos:end="413:28">.</operator><name pos:start="413:29" pos:end="413:33">avctx</name></name></expr></argument>, <argument pos:start="413:36" pos:end="413:47"><expr pos:start="413:36" pos:end="413:47"><name pos:start="413:36" pos:end="413:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="413:50" pos:end="413:99"><expr pos:start="413:50" pos:end="413:99"><literal type="string" pos:start="413:50" pos:end="413:99">"MBAFF + spatial direct mode is not implemented\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:60"><expr pos:start="417:9" pos:end="417:59"><name pos:start="417:9" pos:end="417:40">num_ref_idx_active_override_flag</name><operator pos:start="417:41" pos:end="417:41">=</operator> <call pos:start="417:43" pos:end="417:59"><name pos:start="417:43" pos:end="417:51">get_bits1</name><argument_list pos:start="417:52" pos:end="417:59">(<argument pos:start="417:53" pos:end="417:58"><expr pos:start="417:53" pos:end="417:58"><operator pos:start="417:53" pos:end="417:53">&amp;</operator><name pos:start="417:54" pos:end="417:58"><name pos:start="417:54" pos:end="417:54">s</name><operator pos:start="417:55" pos:end="417:56">-&gt;</operator><name pos:start="417:57" pos:end="417:58">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="421:9" pos:end="439:9"><if pos:start="421:9" pos:end="439:9">if<condition pos:start="421:11" pos:end="421:44">(<expr pos:start="421:12" pos:end="421:43"><name pos:start="421:12" pos:end="421:43">num_ref_idx_active_override_flag</name></expr>)</condition><block pos:start="421:45" pos:end="439:9">{<block_content pos:start="423:13" pos:end="437:13">

            <expr_stmt pos:start="423:13" pos:end="423:55"><expr pos:start="423:13" pos:end="423:54"><name pos:start="423:13" pos:end="423:27"><name pos:start="423:13" pos:end="423:13">h</name><operator pos:start="423:14" pos:end="423:15">-&gt;</operator><name pos:start="423:16" pos:end="423:24">ref_count</name><index pos:start="423:25" pos:end="423:27">[<expr pos:start="423:26" pos:end="423:26"><literal type="number" pos:start="423:26" pos:end="423:26">0</literal></expr>]</index></name><operator pos:start="423:28" pos:end="423:28">=</operator> <call pos:start="423:30" pos:end="423:50"><name pos:start="423:30" pos:end="423:42">get_ue_golomb</name><argument_list pos:start="423:43" pos:end="423:50">(<argument pos:start="423:44" pos:end="423:49"><expr pos:start="423:44" pos:end="423:49"><operator pos:start="423:44" pos:end="423:44">&amp;</operator><name pos:start="423:45" pos:end="423:49"><name pos:start="423:45" pos:end="423:45">s</name><operator pos:start="423:46" pos:end="423:47">-&gt;</operator><name pos:start="423:48" pos:end="423:49">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="423:52" pos:end="423:52">+</operator> <literal type="number" pos:start="423:54" pos:end="423:54">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="425:13" pos:end="427:59"><if pos:start="425:13" pos:end="427:59">if<condition pos:start="425:15" pos:end="425:37">(<expr pos:start="425:16" pos:end="425:36"><name pos:start="425:16" pos:end="425:28"><name pos:start="425:16" pos:end="425:16">h</name><operator pos:start="425:17" pos:end="425:18">-&gt;</operator><name pos:start="425:19" pos:end="425:28">slice_type</name></name><operator pos:start="425:29" pos:end="425:30">==</operator><name pos:start="425:31" pos:end="425:36">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="427:17" pos:end="427:59"><block_content pos:start="427:17" pos:end="427:59">

                <expr_stmt pos:start="427:17" pos:end="427:59"><expr pos:start="427:17" pos:end="427:58"><name pos:start="427:17" pos:end="427:31"><name pos:start="427:17" pos:end="427:17">h</name><operator pos:start="427:18" pos:end="427:19">-&gt;</operator><name pos:start="427:20" pos:end="427:28">ref_count</name><index pos:start="427:29" pos:end="427:31">[<expr pos:start="427:30" pos:end="427:30"><literal type="number" pos:start="427:30" pos:end="427:30">1</literal></expr>]</index></name><operator pos:start="427:32" pos:end="427:32">=</operator> <call pos:start="427:34" pos:end="427:54"><name pos:start="427:34" pos:end="427:46">get_ue_golomb</name><argument_list pos:start="427:47" pos:end="427:54">(<argument pos:start="427:48" pos:end="427:53"><expr pos:start="427:48" pos:end="427:53"><operator pos:start="427:48" pos:end="427:48">&amp;</operator><name pos:start="427:49" pos:end="427:53"><name pos:start="427:49" pos:end="427:49">s</name><operator pos:start="427:50" pos:end="427:51">-&gt;</operator><name pos:start="427:52" pos:end="427:53">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="427:56" pos:end="427:56">+</operator> <literal type="number" pos:start="427:58" pos:end="427:58">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="431:13" pos:end="437:13"><if pos:start="431:13" pos:end="437:13">if<condition pos:start="431:15" pos:end="431:60">(<expr pos:start="431:16" pos:end="431:59"><name pos:start="431:16" pos:end="431:30"><name pos:start="431:16" pos:end="431:16">h</name><operator pos:start="431:17" pos:end="431:18">-&gt;</operator><name pos:start="431:19" pos:end="431:27">ref_count</name><index pos:start="431:28" pos:end="431:30">[<expr pos:start="431:29" pos:end="431:29"><literal type="number" pos:start="431:29" pos:end="431:29">0</literal></expr>]</index></name> <operator pos:start="431:32" pos:end="431:32">&gt;</operator> <literal type="number" pos:start="431:34" pos:end="431:35">32</literal> <operator pos:start="431:37" pos:end="431:38">||</operator> <name pos:start="431:40" pos:end="431:54"><name pos:start="431:40" pos:end="431:40">h</name><operator pos:start="431:41" pos:end="431:42">-&gt;</operator><name pos:start="431:43" pos:end="431:51">ref_count</name><index pos:start="431:52" pos:end="431:54">[<expr pos:start="431:53" pos:end="431:53"><literal type="number" pos:start="431:53" pos:end="431:53">1</literal></expr>]</index></name> <operator pos:start="431:56" pos:end="431:56">&gt;</operator> <literal type="number" pos:start="431:58" pos:end="431:59">32</literal></expr>)</condition><block pos:start="431:61" pos:end="437:13">{<block_content pos:start="433:17" pos:end="435:26">

                <expr_stmt pos:start="433:17" pos:end="433:73"><expr pos:start="433:17" pos:end="433:72"><call pos:start="433:17" pos:end="433:72"><name pos:start="433:17" pos:end="433:22">av_log</name><argument_list pos:start="433:23" pos:end="433:72">(<argument pos:start="433:24" pos:end="433:33"><expr pos:start="433:24" pos:end="433:33"><name pos:start="433:24" pos:end="433:33"><name pos:start="433:24" pos:end="433:24">h</name><operator pos:start="433:25" pos:end="433:26">-&gt;</operator><name pos:start="433:27" pos:end="433:27">s</name><operator pos:start="433:28" pos:end="433:28">.</operator><name pos:start="433:29" pos:end="433:33">avctx</name></name></expr></argument>, <argument pos:start="433:36" pos:end="433:47"><expr pos:start="433:36" pos:end="433:47"><name pos:start="433:36" pos:end="433:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="433:50" pos:end="433:71"><expr pos:start="433:50" pos:end="433:71"><literal type="string" pos:start="433:50" pos:end="433:71">"reference overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="435:17" pos:end="435:26">return <expr pos:start="435:24" pos:end="435:25"><operator pos:start="435:24" pos:end="435:24">-</operator><literal type="number" pos:start="435:25" pos:end="435:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="445:5" pos:end="449:5"><if pos:start="445:5" pos:end="449:5">if<condition pos:start="445:7" pos:end="445:30">(<expr pos:start="445:8" pos:end="445:29"><operator pos:start="445:8" pos:end="445:8">!</operator><name pos:start="445:9" pos:end="445:29">default_ref_list_done</name></expr>)</condition><block pos:start="445:31" pos:end="449:5">{<block_content pos:start="447:9" pos:end="447:33">

        <expr_stmt pos:start="447:9" pos:end="447:33"><expr pos:start="447:9" pos:end="447:32"><call pos:start="447:9" pos:end="447:32"><name pos:start="447:9" pos:end="447:29">fill_default_ref_list</name><argument_list pos:start="447:30" pos:end="447:32">(<argument pos:start="447:31" pos:end="447:31"><expr pos:start="447:31" pos:end="447:31"><name pos:start="447:31" pos:end="447:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="453:5" pos:end="455:18"><if pos:start="453:5" pos:end="455:18">if<condition pos:start="453:7" pos:end="453:45">(<expr pos:start="453:8" pos:end="453:44"><call pos:start="453:8" pos:end="453:40"><name pos:start="453:8" pos:end="453:37">decode_ref_pic_list_reordering</name><argument_list pos:start="453:38" pos:end="453:40">(<argument pos:start="453:39" pos:end="453:39"><expr pos:start="453:39" pos:end="453:39"><name pos:start="453:39" pos:end="453:39">h</name></expr></argument>)</argument_list></call> <operator pos:start="453:42" pos:end="453:42">&lt;</operator> <literal type="number" pos:start="453:44" pos:end="453:44">0</literal></expr>)</condition><block type="pseudo" pos:start="455:9" pos:end="455:18"><block_content pos:start="455:9" pos:end="455:18">

        <return pos:start="455:9" pos:end="455:18">return <expr pos:start="455:16" pos:end="455:17"><operator pos:start="455:16" pos:end="455:16">-</operator><literal type="number" pos:start="455:17" pos:end="455:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="471:26"><if pos:start="459:5" pos:end="463:29">if<condition pos:start="459:7" pos:end="461:69">(   <expr pos:start="459:11" pos:end="461:67"><operator pos:start="459:11" pos:end="459:11">(</operator><name pos:start="459:12" pos:end="459:31"><name pos:start="459:12" pos:end="459:12">h</name><operator pos:start="459:13" pos:end="459:14">-&gt;</operator><name pos:start="459:15" pos:end="459:17">pps</name><operator pos:start="459:18" pos:end="459:18">.</operator><name pos:start="459:19" pos:end="459:31">weighted_pred</name></name>          <operator pos:start="459:42" pos:end="459:43">&amp;&amp;</operator> <operator pos:start="459:45" pos:end="459:45">(</operator><name pos:start="459:46" pos:end="459:58"><name pos:start="459:46" pos:end="459:46">h</name><operator pos:start="459:47" pos:end="459:48">-&gt;</operator><name pos:start="459:49" pos:end="459:58">slice_type</name></name> <operator pos:start="459:60" pos:end="459:61">==</operator> <name pos:start="459:63" pos:end="459:68">P_TYPE</name> <operator pos:start="459:70" pos:end="459:71">||</operator> <name pos:start="459:73" pos:end="459:85"><name pos:start="459:73" pos:end="459:73">h</name><operator pos:start="459:74" pos:end="459:75">-&gt;</operator><name pos:start="459:76" pos:end="459:85">slice_type</name></name> <operator pos:start="459:87" pos:end="459:88">==</operator> <name pos:start="459:90" pos:end="459:96">SP_TYPE</name> <operator pos:start="459:98" pos:end="459:98">)</operator><operator pos:start="459:99" pos:end="459:99">)</operator>

       <operator pos:start="461:8" pos:end="461:9">||</operator> <operator pos:start="461:11" pos:end="461:11">(</operator><name pos:start="461:12" pos:end="461:37"><name pos:start="461:12" pos:end="461:12">h</name><operator pos:start="461:13" pos:end="461:14">-&gt;</operator><name pos:start="461:15" pos:end="461:17">pps</name><operator pos:start="461:18" pos:end="461:18">.</operator><name pos:start="461:19" pos:end="461:37">weighted_bipred_idc</name></name><operator pos:start="461:38" pos:end="461:39">==</operator><literal type="number" pos:start="461:40" pos:end="461:40">1</literal> <operator pos:start="461:42" pos:end="461:43">&amp;&amp;</operator> <name pos:start="461:45" pos:end="461:57"><name pos:start="461:45" pos:end="461:45">h</name><operator pos:start="461:46" pos:end="461:47">-&gt;</operator><name pos:start="461:48" pos:end="461:57">slice_type</name></name><operator pos:start="461:58" pos:end="461:59">==</operator><name pos:start="461:60" pos:end="461:65">B_TYPE</name> <operator pos:start="461:67" pos:end="461:67">)</operator></expr> )</condition><block type="pseudo" pos:start="463:9" pos:end="463:29"><block_content pos:start="463:9" pos:end="463:29">

        <expr_stmt pos:start="463:9" pos:end="463:29"><expr pos:start="463:9" pos:end="463:28"><call pos:start="463:9" pos:end="463:28"><name pos:start="463:9" pos:end="463:25">pred_weight_table</name><argument_list pos:start="463:26" pos:end="463:28">(<argument pos:start="463:27" pos:end="463:27"><expr pos:start="463:27" pos:end="463:27"><name pos:start="463:27" pos:end="463:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="465:5" pos:end="467:33">else if<condition pos:start="465:12" pos:end="465:67">(<expr pos:start="465:13" pos:end="465:66"><name pos:start="465:13" pos:end="465:38"><name pos:start="465:13" pos:end="465:13">h</name><operator pos:start="465:14" pos:end="465:15">-&gt;</operator><name pos:start="465:16" pos:end="465:18">pps</name><operator pos:start="465:19" pos:end="465:19">.</operator><name pos:start="465:20" pos:end="465:38">weighted_bipred_idc</name></name><operator pos:start="465:39" pos:end="465:40">==</operator><literal type="number" pos:start="465:41" pos:end="465:41">2</literal> <operator pos:start="465:43" pos:end="465:44">&amp;&amp;</operator> <name pos:start="465:46" pos:end="465:58"><name pos:start="465:46" pos:end="465:46">h</name><operator pos:start="465:47" pos:end="465:48">-&gt;</operator><name pos:start="465:49" pos:end="465:58">slice_type</name></name><operator pos:start="465:59" pos:end="465:60">==</operator><name pos:start="465:61" pos:end="465:66">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="467:9" pos:end="467:33"><block_content pos:start="467:9" pos:end="467:33">

        <expr_stmt pos:start="467:9" pos:end="467:33"><expr pos:start="467:9" pos:end="467:32"><call pos:start="467:9" pos:end="467:32"><name pos:start="467:9" pos:end="467:29">implicit_weight_table</name><argument_list pos:start="467:30" pos:end="467:32">(<argument pos:start="467:31" pos:end="467:31"><expr pos:start="467:31" pos:end="467:31"><name pos:start="467:31" pos:end="467:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="469:5" pos:end="471:26">else<block type="pseudo" pos:start="471:9" pos:end="471:26"><block_content pos:start="471:9" pos:end="471:26">

        <expr_stmt pos:start="471:9" pos:end="471:26"><expr pos:start="471:9" pos:end="471:25"><name pos:start="471:9" pos:end="471:21"><name pos:start="471:9" pos:end="471:9">h</name><operator pos:start="471:10" pos:end="471:11">-&gt;</operator><name pos:start="471:12" pos:end="471:21">use_weight</name></name> <operator pos:start="471:23" pos:end="471:23">=</operator> <literal type="number" pos:start="471:25" pos:end="471:25">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="475:5" pos:end="477:34"><if pos:start="475:5" pos:end="477:34">if<condition pos:start="475:7" pos:end="475:36">(<expr pos:start="475:8" pos:end="475:35"><name pos:start="475:8" pos:end="475:35"><name pos:start="475:8" pos:end="475:8">s</name><operator pos:start="475:9" pos:end="475:10">-&gt;</operator><name pos:start="475:11" pos:end="475:25">current_picture</name><operator pos:start="475:26" pos:end="475:26">.</operator><name pos:start="475:27" pos:end="475:35">reference</name></name></expr>)</condition><block type="pseudo" pos:start="477:9" pos:end="477:34"><block_content pos:start="477:9" pos:end="477:34">

        <expr_stmt pos:start="477:9" pos:end="477:34"><expr pos:start="477:9" pos:end="477:33"><call pos:start="477:9" pos:end="477:33"><name pos:start="477:9" pos:end="477:30">decode_ref_pic_marking</name><argument_list pos:start="477:31" pos:end="477:33">(<argument pos:start="477:32" pos:end="477:32"><expr pos:start="477:32" pos:end="477:32"><name pos:start="477:32" pos:end="477:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="481:5" pos:end="483:31"><if pos:start="481:5" pos:end="483:31">if<condition pos:start="481:7" pos:end="481:19">(<expr pos:start="481:8" pos:end="481:18"><name pos:start="481:8" pos:end="481:18">FRAME_MBAFF</name></expr>)</condition><block type="pseudo" pos:start="483:9" pos:end="483:31"><block_content pos:start="483:9" pos:end="483:31">

        <expr_stmt pos:start="483:9" pos:end="483:31"><expr pos:start="483:9" pos:end="483:30"><call pos:start="483:9" pos:end="483:30"><name pos:start="483:9" pos:end="483:27">fill_mbaff_ref_list</name><argument_list pos:start="483:28" pos:end="483:30">(<argument pos:start="483:29" pos:end="483:29"><expr pos:start="483:29" pos:end="483:29"><name pos:start="483:29" pos:end="483:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="487:5" pos:end="489:50"><if pos:start="487:5" pos:end="489:50">if<condition pos:start="487:7" pos:end="487:77">( <expr pos:start="487:9" pos:end="487:75"><name pos:start="487:9" pos:end="487:21"><name pos:start="487:9" pos:end="487:9">h</name><operator pos:start="487:10" pos:end="487:11">-&gt;</operator><name pos:start="487:12" pos:end="487:21">slice_type</name></name> <operator pos:start="487:23" pos:end="487:24">!=</operator> <name pos:start="487:26" pos:end="487:31">I_TYPE</name> <operator pos:start="487:33" pos:end="487:34">&amp;&amp;</operator> <name pos:start="487:36" pos:end="487:48"><name pos:start="487:36" pos:end="487:36">h</name><operator pos:start="487:37" pos:end="487:38">-&gt;</operator><name pos:start="487:39" pos:end="487:48">slice_type</name></name> <operator pos:start="487:50" pos:end="487:51">!=</operator> <name pos:start="487:53" pos:end="487:59">SI_TYPE</name> <operator pos:start="487:61" pos:end="487:62">&amp;&amp;</operator> <name pos:start="487:64" pos:end="487:75"><name pos:start="487:64" pos:end="487:64">h</name><operator pos:start="487:65" pos:end="487:66">-&gt;</operator><name pos:start="487:67" pos:end="487:69">pps</name><operator pos:start="487:70" pos:end="487:70">.</operator><name pos:start="487:71" pos:end="487:75">cabac</name></name></expr> )</condition><block type="pseudo" pos:start="489:9" pos:end="489:50"><block_content pos:start="489:9" pos:end="489:50">

        <expr_stmt pos:start="489:9" pos:end="489:50"><expr pos:start="489:9" pos:end="489:49"><name pos:start="489:9" pos:end="489:25"><name pos:start="489:9" pos:end="489:9">h</name><operator pos:start="489:10" pos:end="489:11">-&gt;</operator><name pos:start="489:12" pos:end="489:25">cabac_init_idc</name></name> <operator pos:start="489:27" pos:end="489:27">=</operator> <call pos:start="489:29" pos:end="489:49"><name pos:start="489:29" pos:end="489:41">get_ue_golomb</name><argument_list pos:start="489:42" pos:end="489:49">(<argument pos:start="489:43" pos:end="489:48"><expr pos:start="489:43" pos:end="489:48"><operator pos:start="489:43" pos:end="489:43">&amp;</operator><name pos:start="489:44" pos:end="489:48"><name pos:start="489:44" pos:end="489:44">s</name><operator pos:start="489:45" pos:end="489:46">-&gt;</operator><name pos:start="489:47" pos:end="489:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="493:5" pos:end="493:28"><expr pos:start="493:5" pos:end="493:27"><name pos:start="493:5" pos:end="493:23"><name pos:start="493:5" pos:end="493:5">h</name><operator pos:start="493:6" pos:end="493:7">-&gt;</operator><name pos:start="493:8" pos:end="493:23">last_qscale_diff</name></name> <operator pos:start="493:25" pos:end="493:25">=</operator> <literal type="number" pos:start="493:27" pos:end="493:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="495:5" pos:end="495:55"><expr pos:start="495:5" pos:end="495:54"><name pos:start="495:5" pos:end="495:13"><name pos:start="495:5" pos:end="495:5">s</name><operator pos:start="495:6" pos:end="495:7">-&gt;</operator><name pos:start="495:8" pos:end="495:13">qscale</name></name> <operator pos:start="495:15" pos:end="495:15">=</operator> <name pos:start="495:17" pos:end="495:30"><name pos:start="495:17" pos:end="495:17">h</name><operator pos:start="495:18" pos:end="495:19">-&gt;</operator><name pos:start="495:20" pos:end="495:22">pps</name><operator pos:start="495:23" pos:end="495:23">.</operator><name pos:start="495:24" pos:end="495:30">init_qp</name></name> <operator pos:start="495:32" pos:end="495:32">+</operator> <call pos:start="495:34" pos:end="495:54"><name pos:start="495:34" pos:end="495:46">get_se_golomb</name><argument_list pos:start="495:47" pos:end="495:54">(<argument pos:start="495:48" pos:end="495:53"><expr pos:start="495:48" pos:end="495:53"><operator pos:start="495:48" pos:end="495:48">&amp;</operator><name pos:start="495:49" pos:end="495:53"><name pos:start="495:49" pos:end="495:49">s</name><operator pos:start="495:50" pos:end="495:51">-&gt;</operator><name pos:start="495:52" pos:end="495:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="497:5" pos:end="503:5"><if pos:start="497:5" pos:end="503:5">if<condition pos:start="497:7" pos:end="497:35">(<expr pos:start="497:8" pos:end="497:34"><name pos:start="497:8" pos:end="497:16"><name pos:start="497:8" pos:end="497:8">s</name><operator pos:start="497:9" pos:end="497:10">-&gt;</operator><name pos:start="497:11" pos:end="497:16">qscale</name></name><operator pos:start="497:17" pos:end="497:17">&lt;</operator><literal type="number" pos:start="497:18" pos:end="497:18">0</literal> <operator pos:start="497:20" pos:end="497:21">||</operator> <name pos:start="497:23" pos:end="497:31"><name pos:start="497:23" pos:end="497:23">s</name><operator pos:start="497:24" pos:end="497:25">-&gt;</operator><name pos:start="497:26" pos:end="497:31">qscale</name></name><operator pos:start="497:32" pos:end="497:32">&gt;</operator><literal type="number" pos:start="497:33" pos:end="497:34">51</literal></expr>)</condition><block pos:start="497:36" pos:end="503:5">{<block_content pos:start="499:9" pos:end="501:18">

        <expr_stmt pos:start="499:9" pos:end="499:74"><expr pos:start="499:9" pos:end="499:73"><call pos:start="499:9" pos:end="499:73"><name pos:start="499:9" pos:end="499:14">av_log</name><argument_list pos:start="499:15" pos:end="499:73">(<argument pos:start="499:16" pos:end="499:23"><expr pos:start="499:16" pos:end="499:23"><name pos:start="499:16" pos:end="499:23"><name pos:start="499:16" pos:end="499:16">s</name><operator pos:start="499:17" pos:end="499:18">-&gt;</operator><name pos:start="499:19" pos:end="499:23">avctx</name></name></expr></argument>, <argument pos:start="499:26" pos:end="499:37"><expr pos:start="499:26" pos:end="499:37"><name pos:start="499:26" pos:end="499:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="499:40" pos:end="499:61"><expr pos:start="499:40" pos:end="499:61"><literal type="string" pos:start="499:40" pos:end="499:61">"QP %d out of range\n"</literal></expr></argument>, <argument pos:start="499:64" pos:end="499:72"><expr pos:start="499:64" pos:end="499:72"><name pos:start="499:64" pos:end="499:72"><name pos:start="499:64" pos:end="499:64">s</name><operator pos:start="499:65" pos:end="499:66">-&gt;</operator><name pos:start="499:67" pos:end="499:72">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="501:9" pos:end="501:18">return <expr pos:start="501:16" pos:end="501:17"><operator pos:start="501:16" pos:end="501:16">-</operator><literal type="number" pos:start="501:17" pos:end="501:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="505:5" pos:end="505:75"><expr pos:start="505:5" pos:end="505:74"><name pos:start="505:5" pos:end="505:16"><name pos:start="505:5" pos:end="505:5">h</name><operator pos:start="505:6" pos:end="505:7">-&gt;</operator><name pos:start="505:8" pos:end="505:16">chroma_qp</name></name> <operator pos:start="505:18" pos:end="505:18">=</operator> <call pos:start="505:20" pos:end="505:74"><name pos:start="505:20" pos:end="505:32">get_chroma_qp</name><argument_list pos:start="505:33" pos:end="505:74">(<argument pos:start="505:34" pos:end="505:62"><expr pos:start="505:34" pos:end="505:62"><name pos:start="505:34" pos:end="505:62"><name pos:start="505:34" pos:end="505:34">h</name><operator pos:start="505:35" pos:end="505:36">-&gt;</operator><name pos:start="505:37" pos:end="505:39">pps</name><operator pos:start="505:40" pos:end="505:40">.</operator><name pos:start="505:41" pos:end="505:62">chroma_qp_index_offset</name></name></expr></argument>, <argument pos:start="505:65" pos:end="505:73"><expr pos:start="505:65" pos:end="505:73"><name pos:start="505:65" pos:end="505:73"><name pos:start="505:65" pos:end="505:65">s</name><operator pos:start="505:66" pos:end="505:67">-&gt;</operator><name pos:start="505:68" pos:end="505:73">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="507:5" pos:end="507:33">//FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="509:5" pos:end="513:5"><if pos:start="509:5" pos:end="513:5">if<condition pos:start="509:7" pos:end="509:32">(<expr pos:start="509:8" pos:end="509:31"><name pos:start="509:8" pos:end="509:20"><name pos:start="509:8" pos:end="509:8">h</name><operator pos:start="509:9" pos:end="509:10">-&gt;</operator><name pos:start="509:11" pos:end="509:20">slice_type</name></name> <operator pos:start="509:22" pos:end="509:23">==</operator> <name pos:start="509:25" pos:end="509:31">SP_TYPE</name></expr>)</condition><block pos:start="509:33" pos:end="513:5">{<block_content pos:start="511:9" pos:end="511:26">

        <expr_stmt pos:start="511:9" pos:end="511:26"><expr pos:start="511:9" pos:end="511:25"><call pos:start="511:9" pos:end="511:25"><name pos:start="511:9" pos:end="511:17">get_bits1</name><argument_list pos:start="511:18" pos:end="511:25">(<argument pos:start="511:19" pos:end="511:24"><expr pos:start="511:19" pos:end="511:24"><operator pos:start="511:19" pos:end="511:19">&amp;</operator><name pos:start="511:20" pos:end="511:24"><name pos:start="511:20" pos:end="511:20">s</name><operator pos:start="511:21" pos:end="511:22">-&gt;</operator><name pos:start="511:23" pos:end="511:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="511:28" pos:end="511:51">/* sp_for_switch_flag */</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="515:5" pos:end="519:5"><if pos:start="515:5" pos:end="519:5">if<condition pos:start="515:7" pos:end="515:58">(<expr pos:start="515:8" pos:end="515:57"><name pos:start="515:8" pos:end="515:20"><name pos:start="515:8" pos:end="515:8">h</name><operator pos:start="515:9" pos:end="515:10">-&gt;</operator><name pos:start="515:11" pos:end="515:20">slice_type</name></name><operator pos:start="515:21" pos:end="515:22">==</operator><name pos:start="515:23" pos:end="515:29">SP_TYPE</name> <operator pos:start="515:31" pos:end="515:32">||</operator> <name pos:start="515:34" pos:end="515:46"><name pos:start="515:34" pos:end="515:34">h</name><operator pos:start="515:35" pos:end="515:36">-&gt;</operator><name pos:start="515:37" pos:end="515:46">slice_type</name></name> <operator pos:start="515:48" pos:end="515:49">==</operator> <name pos:start="515:51" pos:end="515:57">SI_TYPE</name></expr>)</condition><block pos:start="515:59" pos:end="519:5">{<block_content pos:start="517:9" pos:end="517:30">

        <expr_stmt pos:start="517:9" pos:end="517:30"><expr pos:start="517:9" pos:end="517:29"><call pos:start="517:9" pos:end="517:29"><name pos:start="517:9" pos:end="517:21">get_se_golomb</name><argument_list pos:start="517:22" pos:end="517:29">(<argument pos:start="517:23" pos:end="517:28"><expr pos:start="517:23" pos:end="517:28"><operator pos:start="517:23" pos:end="517:23">&amp;</operator><name pos:start="517:24" pos:end="517:28"><name pos:start="517:24" pos:end="517:24">s</name><operator pos:start="517:25" pos:end="517:26">-&gt;</operator><name pos:start="517:27" pos:end="517:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="517:32" pos:end="517:51">/* slice_qs_delta */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="523:5" pos:end="523:29"><expr pos:start="523:5" pos:end="523:28"><name pos:start="523:5" pos:end="523:24"><name pos:start="523:5" pos:end="523:5">h</name><operator pos:start="523:6" pos:end="523:7">-&gt;</operator><name pos:start="523:8" pos:end="523:24">deblocking_filter</name></name> <operator pos:start="523:26" pos:end="523:26">=</operator> <literal type="number" pos:start="523:28" pos:end="523:28">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:33"><expr pos:start="525:5" pos:end="525:32"><name pos:start="525:5" pos:end="525:28"><name pos:start="525:5" pos:end="525:5">h</name><operator pos:start="525:6" pos:end="525:7">-&gt;</operator><name pos:start="525:8" pos:end="525:28">slice_alpha_c0_offset</name></name> <operator pos:start="525:30" pos:end="525:30">=</operator> <literal type="number" pos:start="525:32" pos:end="525:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="527:5" pos:end="527:29"><expr pos:start="527:5" pos:end="527:28"><name pos:start="527:5" pos:end="527:24"><name pos:start="527:5" pos:end="527:5">h</name><operator pos:start="527:6" pos:end="527:7">-&gt;</operator><name pos:start="527:8" pos:end="527:24">slice_beta_offset</name></name> <operator pos:start="527:26" pos:end="527:26">=</operator> <literal type="number" pos:start="527:28" pos:end="527:28">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="529:5" pos:end="547:5"><if pos:start="529:5" pos:end="547:5">if<condition pos:start="529:7" pos:end="529:53">( <expr pos:start="529:9" pos:end="529:51"><name pos:start="529:9" pos:end="529:51"><name pos:start="529:9" pos:end="529:9">h</name><operator pos:start="529:10" pos:end="529:11">-&gt;</operator><name pos:start="529:12" pos:end="529:14">pps</name><operator pos:start="529:15" pos:end="529:15">.</operator><name pos:start="529:16" pos:end="529:51">deblocking_filter_parameters_present</name></name></expr> )</condition> <block pos:start="529:55" pos:end="547:5">{<block_content pos:start="531:9" pos:end="545:9">

        <expr_stmt pos:start="531:9" pos:end="531:52"><expr pos:start="531:9" pos:end="531:51"><name pos:start="531:9" pos:end="531:28"><name pos:start="531:9" pos:end="531:9">h</name><operator pos:start="531:10" pos:end="531:11">-&gt;</operator><name pos:start="531:12" pos:end="531:28">deblocking_filter</name></name><operator pos:start="531:29" pos:end="531:29">=</operator> <call pos:start="531:31" pos:end="531:51"><name pos:start="531:31" pos:end="531:43">get_ue_golomb</name><argument_list pos:start="531:44" pos:end="531:51">(<argument pos:start="531:45" pos:end="531:50"><expr pos:start="531:45" pos:end="531:50"><operator pos:start="531:45" pos:end="531:45">&amp;</operator><name pos:start="531:46" pos:end="531:50"><name pos:start="531:46" pos:end="531:46">s</name><operator pos:start="531:47" pos:end="531:48">-&gt;</operator><name pos:start="531:49" pos:end="531:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="533:9" pos:end="535:37"><if pos:start="533:9" pos:end="535:37">if<condition pos:start="533:11" pos:end="533:36">(<expr pos:start="533:12" pos:end="533:35"><name pos:start="533:12" pos:end="533:31"><name pos:start="533:12" pos:end="533:12">h</name><operator pos:start="533:13" pos:end="533:14">-&gt;</operator><name pos:start="533:15" pos:end="533:31">deblocking_filter</name></name> <operator pos:start="533:33" pos:end="533:33">&lt;</operator> <literal type="number" pos:start="533:35" pos:end="533:35">2</literal></expr>)</condition><block type="pseudo" pos:start="535:13" pos:end="535:37"><block_content pos:start="535:13" pos:end="535:37">

            <expr_stmt pos:start="535:13" pos:end="535:37"><expr pos:start="535:13" pos:end="535:36"><name pos:start="535:13" pos:end="535:32"><name pos:start="535:13" pos:end="535:13">h</name><operator pos:start="535:14" pos:end="535:15">-&gt;</operator><name pos:start="535:16" pos:end="535:32">deblocking_filter</name></name><operator pos:start="535:33" pos:end="535:34">^=</operator> <literal type="number" pos:start="535:36" pos:end="535:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="535:39" pos:end="535:46">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="539:9" pos:end="545:9"><if pos:start="539:9" pos:end="545:9">if<condition pos:start="539:11" pos:end="539:34">( <expr pos:start="539:13" pos:end="539:32"><name pos:start="539:13" pos:end="539:32"><name pos:start="539:13" pos:end="539:13">h</name><operator pos:start="539:14" pos:end="539:15">-&gt;</operator><name pos:start="539:16" pos:end="539:32">deblocking_filter</name></name></expr> )</condition> <block pos:start="539:36" pos:end="545:9">{<block_content pos:start="541:13" pos:end="543:62">

            <expr_stmt pos:start="541:13" pos:end="541:66"><expr pos:start="541:13" pos:end="541:65"><name pos:start="541:13" pos:end="541:36"><name pos:start="541:13" pos:end="541:13">h</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:36">slice_alpha_c0_offset</name></name> <operator pos:start="541:38" pos:end="541:38">=</operator> <call pos:start="541:40" pos:end="541:60"><name pos:start="541:40" pos:end="541:52">get_se_golomb</name><argument_list pos:start="541:53" pos:end="541:60">(<argument pos:start="541:54" pos:end="541:59"><expr pos:start="541:54" pos:end="541:59"><operator pos:start="541:54" pos:end="541:54">&amp;</operator><name pos:start="541:55" pos:end="541:59"><name pos:start="541:55" pos:end="541:55">s</name><operator pos:start="541:56" pos:end="541:57">-&gt;</operator><name pos:start="541:58" pos:end="541:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="541:62" pos:end="541:63">&lt;&lt;</operator> <literal type="number" pos:start="541:65" pos:end="541:65">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="543:13" pos:end="543:62"><expr pos:start="543:13" pos:end="543:61"><name pos:start="543:13" pos:end="543:32"><name pos:start="543:13" pos:end="543:13">h</name><operator pos:start="543:14" pos:end="543:15">-&gt;</operator><name pos:start="543:16" pos:end="543:32">slice_beta_offset</name></name> <operator pos:start="543:34" pos:end="543:34">=</operator> <call pos:start="543:36" pos:end="543:56"><name pos:start="543:36" pos:end="543:48">get_se_golomb</name><argument_list pos:start="543:49" pos:end="543:56">(<argument pos:start="543:50" pos:end="543:55"><expr pos:start="543:50" pos:end="543:55"><operator pos:start="543:50" pos:end="543:50">&amp;</operator><name pos:start="543:51" pos:end="543:55"><name pos:start="543:51" pos:end="543:51">s</name><operator pos:start="543:52" pos:end="543:53">-&gt;</operator><name pos:start="543:54" pos:end="543:55">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="543:58" pos:end="543:59">&lt;&lt;</operator> <literal type="number" pos:start="543:61" pos:end="543:61">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="549:5" pos:end="568:0"><if pos:start="549:5" pos:end="568:0">if<condition pos:start="549:7" pos:end="555:81">(   <expr pos:start="549:11" pos:end="555:80"><name pos:start="549:11" pos:end="549:36"><name pos:start="549:11" pos:end="549:11">s</name><operator pos:start="549:12" pos:end="549:13">-&gt;</operator><name pos:start="549:14" pos:end="549:18">avctx</name><operator pos:start="549:19" pos:end="549:20">-&gt;</operator><name pos:start="549:21" pos:end="549:36">skip_loop_filter</name></name> <operator pos:start="549:38" pos:end="549:39">&gt;=</operator> <name pos:start="549:41" pos:end="549:53">AVDISCARD_ALL</name>

       <operator pos:start="551:8" pos:end="551:9">||</operator><operator pos:start="551:10" pos:end="551:10">(</operator><name pos:start="551:11" pos:end="551:36"><name pos:start="551:11" pos:end="551:11">s</name><operator pos:start="551:12" pos:end="551:13">-&gt;</operator><name pos:start="551:14" pos:end="551:18">avctx</name><operator pos:start="551:19" pos:end="551:20">-&gt;</operator><name pos:start="551:21" pos:end="551:36">skip_loop_filter</name></name> <operator pos:start="551:38" pos:end="551:39">&gt;=</operator> <name pos:start="551:41" pos:end="551:56">AVDISCARD_NONKEY</name> <operator pos:start="551:58" pos:end="551:59">&amp;&amp;</operator> <name pos:start="551:61" pos:end="551:73"><name pos:start="551:61" pos:end="551:61">h</name><operator pos:start="551:62" pos:end="551:63">-&gt;</operator><name pos:start="551:64" pos:end="551:73">slice_type</name></name> <operator pos:start="551:75" pos:end="551:76">!=</operator> <name pos:start="551:78" pos:end="551:83">I_TYPE</name><operator pos:start="551:84" pos:end="551:84">)</operator>

       <operator pos:start="553:8" pos:end="553:9">||</operator><operator pos:start="553:10" pos:end="553:10">(</operator><name pos:start="553:11" pos:end="553:36"><name pos:start="553:11" pos:end="553:11">s</name><operator pos:start="553:12" pos:end="553:13">-&gt;</operator><name pos:start="553:14" pos:end="553:18">avctx</name><operator pos:start="553:19" pos:end="553:20">-&gt;</operator><name pos:start="553:21" pos:end="553:36">skip_loop_filter</name></name> <operator pos:start="553:38" pos:end="553:39">&gt;=</operator> <name pos:start="553:41" pos:end="553:55">AVDISCARD_BIDIR</name>  <operator pos:start="553:58" pos:end="553:59">&amp;&amp;</operator> <name pos:start="553:61" pos:end="553:73"><name pos:start="553:61" pos:end="553:61">h</name><operator pos:start="553:62" pos:end="553:63">-&gt;</operator><name pos:start="553:64" pos:end="553:73">slice_type</name></name> <operator pos:start="553:75" pos:end="553:76">==</operator> <name pos:start="553:78" pos:end="553:83">B_TYPE</name><operator pos:start="553:84" pos:end="553:84">)</operator>

       <operator pos:start="555:8" pos:end="555:9">||</operator><operator pos:start="555:10" pos:end="555:10">(</operator><name pos:start="555:11" pos:end="555:36"><name pos:start="555:11" pos:end="555:11">s</name><operator pos:start="555:12" pos:end="555:13">-&gt;</operator><name pos:start="555:14" pos:end="555:18">avctx</name><operator pos:start="555:19" pos:end="555:20">-&gt;</operator><name pos:start="555:21" pos:end="555:36">skip_loop_filter</name></name> <operator pos:start="555:38" pos:end="555:39">&gt;=</operator> <name pos:start="555:41" pos:end="555:56">AVDISCARD_NONREF</name> <operator pos:start="555:58" pos:end="555:59">&amp;&amp;</operator> <name pos:start="555:61" pos:end="555:74"><name pos:start="555:61" pos:end="555:61">h</name><operator pos:start="555:62" pos:end="555:63">-&gt;</operator><name pos:start="555:64" pos:end="555:74">nal_ref_idc</name></name> <operator pos:start="555:76" pos:end="555:77">==</operator> <literal type="number" pos:start="555:79" pos:end="555:79">0</literal><operator pos:start="555:80" pos:end="555:80">)</operator></expr>)</condition><block type="pseudo" pos:start="557:9" pos:end="568:0"><block_content pos:start="557:9" pos:end="568:0">

        <expr_stmt pos:start="557:9" pos:end="568:0"><expr pos:start="557:9" pos:end="557:31"><name pos:start="557:9" pos:end="557:28"><name pos:start="557:9" pos:end="557:9">h</name><operator pos:start="557:10" pos:end="557:11">-&gt;</operator><name pos:start="557:12" pos:end="557:28">deblocking_filter</name></name><operator pos:start="557:29" pos:end="557:29">=</operator> <literal type="number" pos:start="557:31" pos:end="557:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="561:1" pos:end="561:5">#<cpp:directive pos:start="561:2" pos:end="561:3">if</cpp:directive> <expr pos:start="561:5" pos:end="561:5"><literal type="number" pos:start="561:5" pos:end="561:5">0</literal></expr></cpp:if> <comment type="line" pos:start="561:7" pos:end="561:11">//FMO</comment>

    if( h-&gt;pps.num_slice_groups &gt; 1  &amp;&amp; h-&gt;pps.mb_slice_group_map_type &gt;= 3 &amp;&amp; h-&gt;pps.mb_slice_group_map_type &lt;= 5)

        slice_group_change_cycle= get_bits(&amp;s-&gt;gb, ?);

<cpp:endif pos:start="567:1" pos:end="567:6">#<cpp:directive pos:start="567:2" pos:end="567:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="571:5" pos:end="571:19"><expr pos:start="571:5" pos:end="571:18"><name pos:start="571:5" pos:end="571:16"><name pos:start="571:5" pos:end="571:5">h</name><operator pos:start="571:6" pos:end="571:7">-&gt;</operator><name pos:start="571:8" pos:end="571:16">slice_num</name></name><operator pos:start="571:17" pos:end="571:18">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="575:5" pos:end="575:63"><expr pos:start="575:5" pos:end="575:62"><name pos:start="575:5" pos:end="575:21"><name pos:start="575:5" pos:end="575:5">h</name><operator pos:start="575:6" pos:end="575:7">-&gt;</operator><name pos:start="575:8" pos:end="575:21">emu_edge_width</name></name><operator pos:start="575:22" pos:end="575:22">=</operator> <ternary pos:start="575:24" pos:end="575:62"><condition pos:start="575:24" pos:end="575:55"><expr pos:start="575:24" pos:end="575:53"><operator pos:start="575:24" pos:end="575:24">(</operator><name pos:start="575:25" pos:end="575:32"><name pos:start="575:25" pos:end="575:25">s</name><operator pos:start="575:26" pos:end="575:27">-&gt;</operator><name pos:start="575:28" pos:end="575:32">flags</name></name><operator pos:start="575:33" pos:end="575:33">&amp;</operator><name pos:start="575:34" pos:end="575:52">CODEC_FLAG_EMU_EDGE</name><operator pos:start="575:53" pos:end="575:53">)</operator></expr> ?</condition><then pos:start="575:57" pos:end="575:57"> <expr pos:start="575:57" pos:end="575:57"><literal type="number" pos:start="575:57" pos:end="575:57">0</literal></expr> </then><else pos:start="575:59" pos:end="575:62">: <expr pos:start="575:61" pos:end="575:62"><literal type="number" pos:start="575:61" pos:end="575:62">16</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="577:5" pos:end="577:60"><expr pos:start="577:5" pos:end="577:59"><name pos:start="577:5" pos:end="577:22"><name pos:start="577:5" pos:end="577:5">h</name><operator pos:start="577:6" pos:end="577:7">-&gt;</operator><name pos:start="577:8" pos:end="577:22">emu_edge_height</name></name><operator pos:start="577:23" pos:end="577:23">=</operator> <ternary pos:start="577:25" pos:end="577:59"><condition pos:start="577:25" pos:end="577:37"><expr pos:start="577:25" pos:end="577:35"><name pos:start="577:25" pos:end="577:35">FRAME_MBAFF</name></expr> ?</condition><then pos:start="577:39" pos:end="577:39"> <expr pos:start="577:39" pos:end="577:39"><literal type="number" pos:start="577:39" pos:end="577:39">0</literal></expr> </then><else pos:start="577:41" pos:end="577:59">: <expr pos:start="577:43" pos:end="577:59"><name pos:start="577:43" pos:end="577:59"><name pos:start="577:43" pos:end="577:43">h</name><operator pos:start="577:44" pos:end="577:45">-&gt;</operator><name pos:start="577:46" pos:end="577:59">emu_edge_width</name></name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="581:5" pos:end="609:5"><if pos:start="581:5" pos:end="609:5">if<condition pos:start="581:7" pos:end="581:42">(<expr pos:start="581:8" pos:end="581:41"><name pos:start="581:8" pos:end="581:22"><name pos:start="581:8" pos:end="581:8">s</name><operator pos:start="581:9" pos:end="581:10">-&gt;</operator><name pos:start="581:11" pos:end="581:15">avctx</name><operator pos:start="581:16" pos:end="581:17">-&gt;</operator><name pos:start="581:18" pos:end="581:22">debug</name></name><operator pos:start="581:23" pos:end="581:23">&amp;</operator><name pos:start="581:24" pos:end="581:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="581:43" pos:end="609:5">{<block_content pos:start="583:9" pos:end="607:17">

        <expr_stmt pos:start="583:9" pos:end="607:17"><expr pos:start="583:9" pos:end="607:16"><call pos:start="583:9" pos:end="607:16"><name pos:start="583:9" pos:end="583:14">av_log</name><argument_list pos:start="583:15" pos:end="607:16">(<argument pos:start="583:16" pos:end="583:25"><expr pos:start="583:16" pos:end="583:25"><name pos:start="583:16" pos:end="583:25"><name pos:start="583:16" pos:end="583:16">h</name><operator pos:start="583:17" pos:end="583:18">-&gt;</operator><name pos:start="583:19" pos:end="583:19">s</name><operator pos:start="583:20" pos:end="583:20">.</operator><name pos:start="583:21" pos:end="583:25">avctx</name></name></expr></argument>, <argument pos:start="583:28" pos:end="583:39"><expr pos:start="583:28" pos:end="583:39"><name pos:start="583:28" pos:end="583:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="583:42" pos:end="583:133"><expr pos:start="583:42" pos:end="583:133"><literal type="string" pos:start="583:42" pos:end="583:133">"slice:%d %s mb:%d %c pps:%d frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s\n"</literal></expr></argument>,

               <argument pos:start="585:16" pos:end="585:27"><expr pos:start="585:16" pos:end="585:27"><name pos:start="585:16" pos:end="585:27"><name pos:start="585:16" pos:end="585:16">h</name><operator pos:start="585:17" pos:end="585:18">-&gt;</operator><name pos:start="585:19" pos:end="585:27">slice_num</name></name></expr></argument>,

               <argument pos:start="587:16" pos:end="587:106"><expr pos:start="587:16" pos:end="587:106"><operator pos:start="587:16" pos:end="587:16">(</operator><ternary pos:start="587:17" pos:end="587:105"><condition pos:start="587:17" pos:end="587:50"><expr pos:start="587:17" pos:end="587:48"><name pos:start="587:17" pos:end="587:36"><name pos:start="587:17" pos:end="587:17">s</name><operator pos:start="587:18" pos:end="587:19">-&gt;</operator><name pos:start="587:20" pos:end="587:36">picture_structure</name></name><operator pos:start="587:37" pos:end="587:38">==</operator><name pos:start="587:39" pos:end="587:48">PICT_FRAME</name></expr> ?</condition><then pos:start="587:52" pos:end="587:54"> <expr pos:start="587:52" pos:end="587:54"><literal type="string" pos:start="587:52" pos:end="587:54">"F"</literal></expr> </then><else pos:start="587:56" pos:end="587:105">: <expr pos:start="587:58" pos:end="587:105"><ternary pos:start="587:58" pos:end="587:105"><condition pos:start="587:58" pos:end="587:95"><expr pos:start="587:58" pos:end="587:93"><name pos:start="587:58" pos:end="587:77"><name pos:start="587:58" pos:end="587:58">s</name><operator pos:start="587:59" pos:end="587:60">-&gt;</operator><name pos:start="587:61" pos:end="587:77">picture_structure</name></name><operator pos:start="587:78" pos:end="587:79">==</operator><name pos:start="587:80" pos:end="587:93">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="587:97" pos:end="587:99"> <expr pos:start="587:97" pos:end="587:99"><literal type="string" pos:start="587:97" pos:end="587:99">"T"</literal></expr> </then><else pos:start="587:101" pos:end="587:105">: <expr pos:start="587:103" pos:end="587:105"><literal type="string" pos:start="587:103" pos:end="587:105">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="587:106" pos:end="587:106">)</operator></expr></argument>,

               <argument pos:start="589:16" pos:end="589:32"><expr pos:start="589:16" pos:end="589:32"><name pos:start="589:16" pos:end="589:32">first_mb_in_slice</name></expr></argument>,

               <argument pos:start="591:16" pos:end="591:51"><expr pos:start="591:16" pos:end="591:51"><call pos:start="591:16" pos:end="591:51"><name pos:start="591:16" pos:end="591:36">av_get_pict_type_char</name><argument_list pos:start="591:37" pos:end="591:51">(<argument pos:start="591:38" pos:end="591:50"><expr pos:start="591:38" pos:end="591:50"><name pos:start="591:38" pos:end="591:50"><name pos:start="591:38" pos:end="591:38">h</name><operator pos:start="591:39" pos:end="591:40">-&gt;</operator><name pos:start="591:41" pos:end="591:50">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="593:16" pos:end="593:21"><expr pos:start="593:16" pos:end="593:21"><name pos:start="593:16" pos:end="593:21">pps_id</name></expr></argument>, <argument pos:start="593:24" pos:end="593:35"><expr pos:start="593:24" pos:end="593:35"><name pos:start="593:24" pos:end="593:35"><name pos:start="593:24" pos:end="593:24">h</name><operator pos:start="593:25" pos:end="593:26">-&gt;</operator><name pos:start="593:27" pos:end="593:35">frame_num</name></name></expr></argument>,

               <argument pos:start="595:16" pos:end="595:51"><expr pos:start="595:16" pos:end="595:51"><name pos:start="595:16" pos:end="595:51"><name pos:start="595:16" pos:end="595:16">s</name><operator pos:start="595:17" pos:end="595:18">-&gt;</operator><name pos:start="595:19" pos:end="595:37">current_picture_ptr</name><operator pos:start="595:38" pos:end="595:39">-&gt;</operator><name pos:start="595:40" pos:end="595:48">field_poc</name><index pos:start="595:49" pos:end="595:51">[<expr pos:start="595:50" pos:end="595:50"><literal type="number" pos:start="595:50" pos:end="595:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="595:54" pos:end="595:89"><expr pos:start="595:54" pos:end="595:89"><name pos:start="595:54" pos:end="595:89"><name pos:start="595:54" pos:end="595:54">s</name><operator pos:start="595:55" pos:end="595:56">-&gt;</operator><name pos:start="595:57" pos:end="595:75">current_picture_ptr</name><operator pos:start="595:76" pos:end="595:77">-&gt;</operator><name pos:start="595:78" pos:end="595:86">field_poc</name><index pos:start="595:87" pos:end="595:89">[<expr pos:start="595:88" pos:end="595:88"><literal type="number" pos:start="595:88" pos:end="595:88">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="597:16" pos:end="597:30"><expr pos:start="597:16" pos:end="597:30"><name pos:start="597:16" pos:end="597:30"><name pos:start="597:16" pos:end="597:16">h</name><operator pos:start="597:17" pos:end="597:18">-&gt;</operator><name pos:start="597:19" pos:end="597:27">ref_count</name><index pos:start="597:28" pos:end="597:30">[<expr pos:start="597:29" pos:end="597:29"><literal type="number" pos:start="597:29" pos:end="597:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="597:33" pos:end="597:47"><expr pos:start="597:33" pos:end="597:47"><name pos:start="597:33" pos:end="597:47"><name pos:start="597:33" pos:end="597:33">h</name><operator pos:start="597:34" pos:end="597:35">-&gt;</operator><name pos:start="597:36" pos:end="597:44">ref_count</name><index pos:start="597:45" pos:end="597:47">[<expr pos:start="597:46" pos:end="597:46"><literal type="number" pos:start="597:46" pos:end="597:46">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="599:16" pos:end="599:24"><expr pos:start="599:16" pos:end="599:24"><name pos:start="599:16" pos:end="599:24"><name pos:start="599:16" pos:end="599:16">s</name><operator pos:start="599:17" pos:end="599:18">-&gt;</operator><name pos:start="599:19" pos:end="599:24">qscale</name></name></expr></argument>,

               <argument pos:start="601:16" pos:end="601:35"><expr pos:start="601:16" pos:end="601:35"><name pos:start="601:16" pos:end="601:35"><name pos:start="601:16" pos:end="601:16">h</name><operator pos:start="601:17" pos:end="601:18">-&gt;</operator><name pos:start="601:19" pos:end="601:35">deblocking_filter</name></name></expr></argument>, <argument pos:start="601:38" pos:end="601:63"><expr pos:start="601:38" pos:end="601:63"><name pos:start="601:38" pos:end="601:61"><name pos:start="601:38" pos:end="601:38">h</name><operator pos:start="601:39" pos:end="601:40">-&gt;</operator><name pos:start="601:41" pos:end="601:61">slice_alpha_c0_offset</name></name><operator pos:start="601:62" pos:end="601:62">/</operator><literal type="number" pos:start="601:63" pos:end="601:63">2</literal></expr></argument>, <argument pos:start="601:66" pos:end="601:87"><expr pos:start="601:66" pos:end="601:87"><name pos:start="601:66" pos:end="601:85"><name pos:start="601:66" pos:end="601:66">h</name><operator pos:start="601:67" pos:end="601:68">-&gt;</operator><name pos:start="601:69" pos:end="601:85">slice_beta_offset</name></name><operator pos:start="601:86" pos:end="601:86">/</operator><literal type="number" pos:start="601:87" pos:end="601:87">2</literal></expr></argument>,

               <argument pos:start="603:16" pos:end="603:28"><expr pos:start="603:16" pos:end="603:28"><name pos:start="603:16" pos:end="603:28"><name pos:start="603:16" pos:end="603:16">h</name><operator pos:start="603:17" pos:end="603:18">-&gt;</operator><name pos:start="603:19" pos:end="603:28">use_weight</name></name></expr></argument>,

               <argument pos:start="605:16" pos:end="605:66"><expr pos:start="605:16" pos:end="605:66"><ternary pos:start="605:16" pos:end="605:66"><condition pos:start="605:16" pos:end="605:57"><expr pos:start="605:16" pos:end="605:55"><name pos:start="605:16" pos:end="605:28"><name pos:start="605:16" pos:end="605:16">h</name><operator pos:start="605:17" pos:end="605:18">-&gt;</operator><name pos:start="605:19" pos:end="605:28">use_weight</name></name><operator pos:start="605:29" pos:end="605:30">==</operator><literal type="number" pos:start="605:31" pos:end="605:31">1</literal> <operator pos:start="605:33" pos:end="605:34">&amp;&amp;</operator> <name pos:start="605:36" pos:end="605:55"><name pos:start="605:36" pos:end="605:36">h</name><operator pos:start="605:37" pos:end="605:38">-&gt;</operator><name pos:start="605:39" pos:end="605:55">use_weight_chroma</name></name></expr> ?</condition><then pos:start="605:59" pos:end="605:61"> <expr pos:start="605:59" pos:end="605:61"><literal type="string" pos:start="605:59" pos:end="605:61">"c"</literal></expr> </then><else pos:start="605:63" pos:end="605:66">: <expr pos:start="605:65" pos:end="605:66"><literal type="string" pos:start="605:65" pos:end="605:66">""</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="613:5" pos:end="625:5"><if pos:start="613:5" pos:end="619:5">if<condition pos:start="613:7" pos:end="613:78">(<expr pos:start="613:8" pos:end="613:77"><operator pos:start="613:8" pos:end="613:8">(</operator><name pos:start="613:9" pos:end="613:24"><name pos:start="613:9" pos:end="613:9">s</name><operator pos:start="613:10" pos:end="613:11">-&gt;</operator><name pos:start="613:12" pos:end="613:16">avctx</name><operator pos:start="613:17" pos:end="613:18">-&gt;</operator><name pos:start="613:19" pos:end="613:24">flags2</name></name> <operator pos:start="613:26" pos:end="613:26">&amp;</operator> <name pos:start="613:28" pos:end="613:43">CODEC_FLAG2_FAST</name><operator pos:start="613:44" pos:end="613:44">)</operator> <operator pos:start="613:46" pos:end="613:47">&amp;&amp;</operator> <operator pos:start="613:49" pos:end="613:49">!</operator><name pos:start="613:50" pos:end="613:77"><name pos:start="613:50" pos:end="613:50">s</name><operator pos:start="613:51" pos:end="613:52">-&gt;</operator><name pos:start="613:53" pos:end="613:67">current_picture</name><operator pos:start="613:68" pos:end="613:68">.</operator><name pos:start="613:69" pos:end="613:77">reference</name></name></expr>)</condition><block pos:start="613:79" pos:end="619:5">{<block_content pos:start="615:9" pos:end="617:56">

        <expr_stmt pos:start="615:9" pos:end="615:56"><expr pos:start="615:9" pos:end="615:55"><name pos:start="615:9" pos:end="615:22"><name pos:start="615:9" pos:end="615:9">s</name><operator pos:start="615:10" pos:end="615:11">-&gt;</operator><name pos:start="615:12" pos:end="615:13">me</name><operator pos:start="615:14" pos:end="615:14">.</operator><name pos:start="615:15" pos:end="615:22">qpel_put</name></name><operator pos:start="615:23" pos:end="615:23">=</operator> <name pos:start="615:25" pos:end="615:55"><name pos:start="615:25" pos:end="615:25">s</name><operator pos:start="615:26" pos:end="615:27">-&gt;</operator><name pos:start="615:28" pos:end="615:30">dsp</name><operator pos:start="615:31" pos:end="615:31">.</operator><name pos:start="615:32" pos:end="615:55">put_2tap_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="617:9" pos:end="617:56"><expr pos:start="617:9" pos:end="617:55"><name pos:start="617:9" pos:end="617:22"><name pos:start="617:9" pos:end="617:9">s</name><operator pos:start="617:10" pos:end="617:11">-&gt;</operator><name pos:start="617:12" pos:end="617:13">me</name><operator pos:start="617:14" pos:end="617:14">.</operator><name pos:start="617:15" pos:end="617:22">qpel_avg</name></name><operator pos:start="617:23" pos:end="617:23">=</operator> <name pos:start="617:25" pos:end="617:55"><name pos:start="617:25" pos:end="617:25">s</name><operator pos:start="617:26" pos:end="617:27">-&gt;</operator><name pos:start="617:28" pos:end="617:30">dsp</name><operator pos:start="617:31" pos:end="617:31">.</operator><name pos:start="617:32" pos:end="617:55">avg_2tap_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="619:6" pos:end="625:5">else<block pos:start="619:10" pos:end="625:5">{<block_content pos:start="621:9" pos:end="623:56">

        <expr_stmt pos:start="621:9" pos:end="621:56"><expr pos:start="621:9" pos:end="621:55"><name pos:start="621:9" pos:end="621:22"><name pos:start="621:9" pos:end="621:9">s</name><operator pos:start="621:10" pos:end="621:11">-&gt;</operator><name pos:start="621:12" pos:end="621:13">me</name><operator pos:start="621:14" pos:end="621:14">.</operator><name pos:start="621:15" pos:end="621:22">qpel_put</name></name><operator pos:start="621:23" pos:end="621:23">=</operator> <name pos:start="621:25" pos:end="621:55"><name pos:start="621:25" pos:end="621:25">s</name><operator pos:start="621:26" pos:end="621:27">-&gt;</operator><name pos:start="621:28" pos:end="621:30">dsp</name><operator pos:start="621:31" pos:end="621:31">.</operator><name pos:start="621:32" pos:end="621:55">put_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="623:9" pos:end="623:56"><expr pos:start="623:9" pos:end="623:55"><name pos:start="623:9" pos:end="623:22"><name pos:start="623:9" pos:end="623:9">s</name><operator pos:start="623:10" pos:end="623:11">-&gt;</operator><name pos:start="623:12" pos:end="623:13">me</name><operator pos:start="623:14" pos:end="623:14">.</operator><name pos:start="623:15" pos:end="623:22">qpel_avg</name></name><operator pos:start="623:23" pos:end="623:23">=</operator> <name pos:start="623:25" pos:end="623:55"><name pos:start="623:25" pos:end="623:25">s</name><operator pos:start="623:26" pos:end="623:27">-&gt;</operator><name pos:start="623:28" pos:end="623:30">dsp</name><operator pos:start="623:31" pos:end="623:31">.</operator><name pos:start="623:32" pos:end="623:55">avg_h264_qpel_pixels_tab</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="629:5" pos:end="629:13">return <expr pos:start="629:12" pos:end="629:12"><literal type="number" pos:start="629:12" pos:end="629:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
