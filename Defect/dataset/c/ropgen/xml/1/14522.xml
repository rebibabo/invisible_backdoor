<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14522.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ide_dev_initfn</name><parameter_list pos:start="1:26" pos:end="1:60">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:35">IDEDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:54">IDEDriveKind</name></type> <name pos:start="1:56" pos:end="1:59">kind</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="27:13">{<block_content pos:start="3:5" pos:end="27:13">
    <decl_stmt pos:start="3:5" pos:end="3:64"><decl pos:start="3:5" pos:end="3:63"><type pos:start="3:5" pos:end="3:12"><name pos:start="3:5" pos:end="3:10">IDEBus</name> <modifier pos:start="3:12" pos:end="3:12">*</modifier></type><name pos:start="3:13" pos:end="3:15">bus</name> <init pos:start="3:17" pos:end="3:63">= <expr pos:start="3:19" pos:end="3:63"><call pos:start="3:19" pos:end="3:63"><name pos:start="3:19" pos:end="3:27">DO_UPCAST</name><argument_list pos:start="3:28" pos:end="3:63">(<argument pos:start="3:29" pos:end="3:34"><expr pos:start="3:29" pos:end="3:34"><name pos:start="3:29" pos:end="3:34">IDEBus</name></expr></argument>, <argument pos:start="3:37" pos:end="3:40"><expr pos:start="3:37" pos:end="3:40"><name pos:start="3:37" pos:end="3:40">qbus</name></expr></argument>, <argument pos:start="3:43" pos:end="3:62"><expr pos:start="3:43" pos:end="3:62"><name pos:start="3:43" pos:end="3:62"><name pos:start="3:43" pos:end="3:45">dev</name><operator pos:start="3:46" pos:end="3:47">-&gt;</operator><name pos:start="3:48" pos:end="3:51">qdev</name><operator pos:start="3:52" pos:end="3:52">.</operator><name pos:start="3:53" pos:end="3:62">parent_bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:39"><decl pos:start="4:5" pos:end="4:38"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:12">IDEState</name> <modifier pos:start="4:14" pos:end="4:14">*</modifier></type><name pos:start="4:15" pos:end="4:15">s</name> <init pos:start="4:17" pos:end="4:38">= <expr pos:start="4:19" pos:end="4:38"><name pos:start="4:19" pos:end="4:26"><name pos:start="4:19" pos:end="4:21">bus</name><operator pos:start="4:22" pos:end="4:23">-&gt;</operator><name pos:start="4:24" pos:end="4:26">ifs</name></name> <operator pos:start="4:28" pos:end="4:28">+</operator> <name pos:start="4:30" pos:end="4:38"><name pos:start="4:30" pos:end="4:32">dev</name><operator pos:start="4:33" pos:end="4:34">-&gt;</operator><name pos:start="4:35" pos:end="4:38">unit</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:14">err</name> <init pos:start="5:16" pos:end="5:21">= <expr pos:start="5:18" pos:end="5:21"><name pos:start="5:18" pos:end="5:21">NULL</name></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="6:5" pos:end="27:13"><if pos:start="6:5" pos:end="8:5">if <condition pos:start="6:8" pos:end="6:44">(<expr pos:start="6:9" pos:end="6:43"><name pos:start="6:9" pos:end="6:37"><name pos:start="6:9" pos:end="6:11">dev</name><operator pos:start="6:12" pos:end="6:13">-&gt;</operator><name pos:start="6:14" pos:end="6:17">conf</name><operator pos:start="6:18" pos:end="6:18">.</operator><name pos:start="6:19" pos:end="6:37">discard_granularity</name></name> <operator pos:start="6:39" pos:end="6:40">==</operator> <operator pos:start="6:42" pos:end="6:42">-</operator><literal type="number" pos:start="6:43" pos:end="6:43">1</literal></expr>)</condition> <block pos:start="6:46" pos:end="8:5">{<block_content pos:start="7:9" pos:end="7:44">
        <expr_stmt pos:start="7:9" pos:end="7:44"><expr pos:start="7:9" pos:end="7:43"><name pos:start="7:9" pos:end="7:37"><name pos:start="7:9" pos:end="7:11">dev</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:17">conf</name><operator pos:start="7:18" pos:end="7:18">.</operator><name pos:start="7:19" pos:end="7:37">discard_granularity</name></name> <operator pos:start="7:39" pos:end="7:39">=</operator> <literal type="number" pos:start="7:41" pos:end="7:43">512</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <if type="elseif" pos:start="8:7" pos:end="27:13">else if <condition pos:start="8:15" pos:end="9:52">(<expr pos:start="8:16" pos:end="9:51"><name pos:start="8:16" pos:end="8:44"><name pos:start="8:16" pos:end="8:18">dev</name><operator pos:start="8:19" pos:end="8:20">-&gt;</operator><name pos:start="8:21" pos:end="8:24">conf</name><operator pos:start="8:25" pos:end="8:25">.</operator><name pos:start="8:26" pos:end="8:44">discard_granularity</name></name> <operator pos:start="8:46" pos:end="8:47">&amp;&amp;</operator>
               <name pos:start="9:16" pos:end="9:44"><name pos:start="9:16" pos:end="9:18">dev</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:24">conf</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:44">discard_granularity</name></name> <operator pos:start="9:46" pos:end="9:47">!=</operator> <literal type="number" pos:start="9:49" pos:end="9:51">512</literal></expr>)</condition> <block pos:start="9:54" pos:end="27:13">{<block_content pos:start="10:9" pos:end="27:13">
        <expr_stmt pos:start="10:9" pos:end="10:64"><expr pos:start="10:9" pos:end="10:63"><call pos:start="10:9" pos:end="10:63"><name pos:start="10:9" pos:end="10:20">error_report</name><argument_list pos:start="10:21" pos:end="10:63">(<argument pos:start="10:22" pos:end="10:62"><expr pos:start="10:22" pos:end="10:62"><literal type="string" pos:start="10:22" pos:end="10:62">"discard_granularity must be 512 for ide"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><call pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:18">blkconf_serial</name><argument_list pos:start="11:19" pos:end="11:44">(<argument pos:start="11:20" pos:end="11:29"><expr pos:start="11:20" pos:end="11:29"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:29"><name pos:start="11:21" pos:end="11:23">dev</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:29">conf</name></name></expr></argument>, <argument pos:start="11:32" pos:end="11:43"><expr pos:start="11:32" pos:end="11:43"><operator pos:start="11:32" pos:end="11:32">&amp;</operator><name pos:start="11:33" pos:end="11:43"><name pos:start="11:33" pos:end="11:35">dev</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:43">serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="12:5" pos:end="27:13"><if pos:start="12:5" pos:end="27:13">if <condition pos:start="12:8" pos:end="12:23">(<expr pos:start="12:9" pos:end="12:22"><name pos:start="12:9" pos:end="12:12">kind</name> <operator pos:start="12:14" pos:end="12:15">!=</operator> <name pos:start="12:17" pos:end="12:22">IDE_CD</name></expr>)</condition> <block pos:start="12:25" pos:end="27:13">{<block_content pos:start="13:9" pos:end="27:13">
        <expr_stmt pos:start="13:9" pos:end="13:76"><expr pos:start="13:9" pos:end="13:75"><call pos:start="13:9" pos:end="13:75"><name pos:start="13:9" pos:end="13:24">blkconf_geometry</name><argument_list pos:start="13:25" pos:end="13:75">(<argument pos:start="13:26" pos:end="13:35"><expr pos:start="13:26" pos:end="13:35"><operator pos:start="13:26" pos:end="13:26">&amp;</operator><name pos:start="13:27" pos:end="13:35"><name pos:start="13:27" pos:end="13:29">dev</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:35">conf</name></name></expr></argument>, <argument pos:start="13:38" pos:end="13:52"><expr pos:start="13:38" pos:end="13:52"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:52"><name pos:start="13:39" pos:end="13:41">dev</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:52">chs_trans</name></name></expr></argument>, <argument pos:start="13:55" pos:end="13:59"><expr pos:start="13:55" pos:end="13:59"><literal type="number" pos:start="13:55" pos:end="13:59">65536</literal></expr></argument>, <argument pos:start="13:62" pos:end="13:63"><expr pos:start="13:62" pos:end="13:63"><literal type="number" pos:start="13:62" pos:end="13:63">16</literal></expr></argument>, <argument pos:start="13:66" pos:end="13:68"><expr pos:start="13:66" pos:end="13:68"><literal type="number" pos:start="13:66" pos:end="13:68">255</literal></expr></argument>, <argument pos:start="13:71" pos:end="13:74"><expr pos:start="13:71" pos:end="13:74"><operator pos:start="13:71" pos:end="13:71">&amp;</operator><name pos:start="13:72" pos:end="13:74">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="14:9" pos:end="27:13"><if pos:start="14:9" pos:end="27:13">if <condition pos:start="14:12" pos:end="14:16">(<expr pos:start="14:13" pos:end="14:15"><name pos:start="14:13" pos:end="14:15">err</name></expr>)</condition> <block pos:start="14:18" pos:end="27:13">{<block_content pos:start="15:13" pos:end="27:13">
            <expr_stmt pos:start="15:13" pos:end="15:54"><expr pos:start="15:13" pos:end="15:53"><call pos:start="15:13" pos:end="15:53"><name pos:start="15:13" pos:end="15:24">error_report</name><argument_list pos:start="15:25" pos:end="15:53">(<argument pos:start="15:26" pos:end="15:29"><expr pos:start="15:26" pos:end="15:29"><literal type="string" pos:start="15:26" pos:end="15:29">"%s"</literal></expr></argument>, <argument pos:start="15:32" pos:end="15:52"><expr pos:start="15:32" pos:end="15:52"><call pos:start="15:32" pos:end="15:52"><name pos:start="15:32" pos:end="15:47">error_get_pretty</name><argument_list pos:start="15:48" pos:end="15:52">(<argument pos:start="15:49" pos:end="15:51"><expr pos:start="15:49" pos:end="15:51"><name pos:start="15:49" pos:end="15:51">err</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="16:13" pos:end="16:28"><expr pos:start="16:13" pos:end="16:27"><call pos:start="16:13" pos:end="16:27"><name pos:start="16:13" pos:end="16:22">error_free</name><argument_list pos:start="16:23" pos:end="16:27">(<argument pos:start="16:24" pos:end="16:26"><expr pos:start="16:24" pos:end="16:26"><name pos:start="16:24" pos:end="16:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="27:13"><if pos:start="17:5" pos:end="27:13">if <condition pos:start="17:8" pos:end="20:43">(<expr pos:start="17:9" pos:end="20:42"><call pos:start="17:9" pos:end="20:38"><name pos:start="17:9" pos:end="17:22">ide_init_drive</name><argument_list pos:start="17:23" pos:end="20:38">(<argument pos:start="17:24" pos:end="17:24"><expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">s</name></expr></argument>, <argument pos:start="17:27" pos:end="17:39"><expr pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:39"><name pos:start="17:27" pos:end="17:29">dev</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:35">conf</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:39">blk</name></name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">kind</name></expr></argument>,
                       <argument pos:start="18:24" pos:end="18:35"><expr pos:start="18:24" pos:end="18:35"><name pos:start="18:24" pos:end="18:35"><name pos:start="18:24" pos:end="18:26">dev</name><operator pos:start="18:27" pos:end="18:28">-&gt;</operator><name pos:start="18:29" pos:end="18:35">version</name></name></expr></argument>, <argument pos:start="18:38" pos:end="18:48"><expr pos:start="18:38" pos:end="18:48"><name pos:start="18:38" pos:end="18:48"><name pos:start="18:38" pos:end="18:40">dev</name><operator pos:start="18:41" pos:end="18:42">-&gt;</operator><name pos:start="18:43" pos:end="18:48">serial</name></name></expr></argument>, <argument pos:start="18:51" pos:end="18:60"><expr pos:start="18:51" pos:end="18:60"><name pos:start="18:51" pos:end="18:60"><name pos:start="18:51" pos:end="18:53">dev</name><operator pos:start="18:54" pos:end="18:55">-&gt;</operator><name pos:start="18:56" pos:end="18:60">model</name></name></expr></argument>, <argument pos:start="18:63" pos:end="18:70"><expr pos:start="18:63" pos:end="18:70"><name pos:start="18:63" pos:end="18:70"><name pos:start="18:63" pos:end="18:65">dev</name><operator pos:start="18:66" pos:end="18:67">-&gt;</operator><name pos:start="18:68" pos:end="18:70">wwn</name></name></expr></argument>,
                       <argument pos:start="19:24" pos:end="19:37"><expr pos:start="19:24" pos:end="19:37"><name pos:start="19:24" pos:end="19:37"><name pos:start="19:24" pos:end="19:26">dev</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:32">conf</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:37">cyls</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:54"><expr pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:54"><name pos:start="19:40" pos:end="19:42">dev</name><operator pos:start="19:43" pos:end="19:44">-&gt;</operator><name pos:start="19:45" pos:end="19:48">conf</name><operator pos:start="19:49" pos:end="19:49">.</operator><name pos:start="19:50" pos:end="19:54">heads</name></name></expr></argument>, <argument pos:start="19:57" pos:end="19:70"><expr pos:start="19:57" pos:end="19:70"><name pos:start="19:57" pos:end="19:70"><name pos:start="19:57" pos:end="19:59">dev</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:65">conf</name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:70">secs</name></name></expr></argument>,
                       <argument pos:start="20:24" pos:end="20:37"><expr pos:start="20:24" pos:end="20:37"><name pos:start="20:24" pos:end="20:37"><name pos:start="20:24" pos:end="20:26">dev</name><operator pos:start="20:27" pos:end="20:28">-&gt;</operator><name pos:start="20:29" pos:end="20:37">chs_trans</name></name></expr></argument>)</argument_list></call> <operator pos:start="20:40" pos:end="20:40">&lt;</operator> <literal type="number" pos:start="20:42" pos:end="20:42">0</literal></expr>)</condition> <block pos:start="20:45" pos:end="27:13">{<block_content pos:start="21:5" pos:end="27:13">
    <if_stmt pos:start="21:5" pos:end="27:13"><if pos:start="21:5" pos:end="27:13">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:12">dev</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:21">version</name></name></expr>)</condition> <block pos:start="21:24" pos:end="27:13">{<block_content pos:start="22:9" pos:end="27:13">
        <expr_stmt pos:start="22:9" pos:end="22:44"><expr pos:start="22:9" pos:end="22:43"><name pos:start="22:9" pos:end="22:20"><name pos:start="22:9" pos:end="22:11">dev</name><operator pos:start="22:12" pos:end="22:13">-&gt;</operator><name pos:start="22:14" pos:end="22:20">version</name></name> <operator pos:start="22:22" pos:end="22:22">=</operator> <call pos:start="22:24" pos:end="22:43"><name pos:start="22:24" pos:end="22:31">g_strdup</name><argument_list pos:start="22:32" pos:end="22:43">(<argument pos:start="22:33" pos:end="22:42"><expr pos:start="22:33" pos:end="22:42"><name pos:start="22:33" pos:end="22:42"><name pos:start="22:33" pos:end="22:33">s</name><operator pos:start="22:34" pos:end="22:35">-&gt;</operator><name pos:start="22:36" pos:end="22:42">version</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="23:5" pos:end="27:13"><if pos:start="23:5" pos:end="27:13">if <condition pos:start="23:8" pos:end="23:21">(<expr pos:start="23:9" pos:end="23:20"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:12">dev</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:20">serial</name></name></expr>)</condition> <block pos:start="23:23" pos:end="27:13">{<block_content pos:start="24:9" pos:end="27:13">
        <expr_stmt pos:start="24:9" pos:end="24:52"><expr pos:start="24:9" pos:end="24:51"><name pos:start="24:9" pos:end="24:19"><name pos:start="24:9" pos:end="24:11">dev</name><operator pos:start="24:12" pos:end="24:13">-&gt;</operator><name pos:start="24:14" pos:end="24:19">serial</name></name> <operator pos:start="24:21" pos:end="24:21">=</operator> <call pos:start="24:23" pos:end="24:51"><name pos:start="24:23" pos:end="24:30">g_strdup</name><argument_list pos:start="24:31" pos:end="24:51">(<argument pos:start="24:32" pos:end="24:50"><expr pos:start="24:32" pos:end="24:50"><name pos:start="24:32" pos:end="24:50"><name pos:start="24:32" pos:end="24:32">s</name><operator pos:start="24:33" pos:end="24:34">-&gt;</operator><name pos:start="24:35" pos:end="24:50">drive_serial_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="26:60"><expr pos:start="25:5" pos:end="26:59"><call pos:start="25:5" pos:end="26:59"><name pos:start="25:5" pos:end="25:24">add_boot_device_path</name><argument_list pos:start="25:25" pos:end="26:59">(<argument pos:start="25:26" pos:end="25:44"><expr pos:start="25:26" pos:end="25:44"><name pos:start="25:26" pos:end="25:44"><name pos:start="25:26" pos:end="25:28">dev</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">conf</name><operator pos:start="25:35" pos:end="25:35">.</operator><name pos:start="25:36" pos:end="25:44">bootindex</name></name></expr></argument>, <argument pos:start="25:47" pos:end="25:56"><expr pos:start="25:47" pos:end="25:56"><operator pos:start="25:47" pos:end="25:47">&amp;</operator><name pos:start="25:48" pos:end="25:56"><name pos:start="25:48" pos:end="25:50">dev</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:56">qdev</name></name></expr></argument>,
                         <argument pos:start="26:26" pos:end="26:58"><expr pos:start="26:26" pos:end="26:58"><ternary pos:start="26:26" pos:end="26:58"><condition pos:start="26:26" pos:end="26:36"><expr pos:start="26:26" pos:end="26:34"><name pos:start="26:26" pos:end="26:34"><name pos:start="26:26" pos:end="26:28">dev</name><operator pos:start="26:29" pos:end="26:30">-&gt;</operator><name pos:start="26:31" pos:end="26:34">unit</name></name></expr> ?</condition><then pos:start="26:38" pos:end="26:46"> <expr pos:start="26:38" pos:end="26:46"><literal type="string" pos:start="26:38" pos:end="26:46">"/disk@1"</literal></expr> </then><else pos:start="26:48" pos:end="26:58">: <expr pos:start="26:50" pos:end="26:58"><literal type="string" pos:start="26:50" pos:end="26:58">"/disk@0"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="27:5" pos:end="27:13">return <expr pos:start="27:12" pos:end="27:12"><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
