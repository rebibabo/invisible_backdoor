<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26866.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">usb_msd_copy_data</name><parameter_list pos:start="1:30" pos:end="1:42">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:38">MSDState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">len</name></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:7">len</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <name pos:start="7:11" pos:end="7:20"><name pos:start="7:11" pos:end="7:11">s</name><operator pos:start="7:12" pos:end="7:13">-&gt;</operator><name pos:start="7:14" pos:end="7:20">usb_len</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="11:26"><if pos:start="9:5" pos:end="11:26">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:11">len</name> <operator pos:start="9:13" pos:end="9:13">&gt;</operator> <name pos:start="9:15" pos:end="9:25"><name pos:start="9:15" pos:end="9:15">s</name><operator pos:start="9:16" pos:end="9:17">-&gt;</operator><name pos:start="9:18" pos:end="9:25">scsi_len</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:26"><block_content pos:start="11:9" pos:end="11:26">

        <expr_stmt pos:start="11:9" pos:end="11:26"><expr pos:start="11:9" pos:end="11:25"><name pos:start="11:9" pos:end="11:11">len</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:25"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:25">scsi_len</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:35">(<expr pos:start="13:9" pos:end="13:34"><name pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">mode</name></name> <operator pos:start="13:17" pos:end="13:18">==</operator> <name pos:start="13:20" pos:end="13:34">USB_MSDM_DATAIN</name></expr>)</condition> <block pos:start="13:37" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:45">

        <expr_stmt pos:start="15:9" pos:end="15:45"><expr pos:start="15:9" pos:end="15:44"><call pos:start="15:9" pos:end="15:44"><name pos:start="15:9" pos:end="15:14">memcpy</name><argument_list pos:start="15:15" pos:end="15:44">(<argument pos:start="15:16" pos:end="15:25"><expr pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:25"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:25">usb_buf</name></name></expr></argument>, <argument pos:start="15:28" pos:end="15:38"><expr pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:38"><name pos:start="15:28" pos:end="15:28">s</name><operator pos:start="15:29" pos:end="15:30">-&gt;</operator><name pos:start="15:31" pos:end="15:38">scsi_buf</name></name></expr></argument>, <argument pos:start="15:41" pos:end="15:43"><expr pos:start="15:41" pos:end="15:43"><name pos:start="15:41" pos:end="15:43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:45">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><call pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:14">memcpy</name><argument_list pos:start="19:15" pos:end="19:44">(<argument pos:start="19:16" pos:end="19:26"><expr pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:26"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:26">scsi_buf</name></name></expr></argument>, <argument pos:start="19:29" pos:end="19:38"><expr pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:38"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:38">usb_buf</name></name></expr></argument>, <argument pos:start="19:41" pos:end="19:43"><expr pos:start="19:41" pos:end="19:43"><name pos:start="19:41" pos:end="19:43">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:14">usb_len</name></name> <operator pos:start="23:16" pos:end="23:17">-=</operator> <name pos:start="23:19" pos:end="23:21">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">scsi_len</name></name> <operator pos:start="25:17" pos:end="25:18">-=</operator> <name pos:start="25:20" pos:end="25:22">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">usb_buf</name></name> <operator pos:start="27:16" pos:end="27:17">+=</operator> <name pos:start="27:19" pos:end="27:21">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:23"><expr pos:start="29:5" pos:end="29:22"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:15">scsi_buf</name></name> <operator pos:start="29:17" pos:end="29:18">+=</operator> <name pos:start="29:20" pos:end="29:22">len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">data_len</name></name> <operator pos:start="31:17" pos:end="31:18">-=</operator> <name pos:start="31:20" pos:end="31:22">len</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="45:5"><if pos:start="33:5" pos:end="45:5">if <condition pos:start="33:8" pos:end="33:45">(<expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:19">scsi_len</name></name> <operator pos:start="33:21" pos:end="33:22">==</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal> <operator pos:start="33:26" pos:end="33:27">||</operator> <name pos:start="33:29" pos:end="33:39"><name pos:start="33:29" pos:end="33:29">s</name><operator pos:start="33:30" pos:end="33:31">-&gt;</operator><name pos:start="33:32" pos:end="33:39">data_len</name></name> <operator pos:start="33:41" pos:end="33:42">==</operator> <literal type="number" pos:start="33:44" pos:end="33:44">0</literal></expr>)</condition> <block pos:start="33:47" pos:end="45:5">{<block_content pos:start="35:9" pos:end="43:9">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:39">(<expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:19"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:19">mode</name></name> <operator pos:start="35:21" pos:end="35:22">==</operator> <name pos:start="35:24" pos:end="35:38">USB_MSDM_DATAIN</name></expr>)</condition> <block pos:start="35:41" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:62">

            <expr_stmt pos:start="37:13" pos:end="37:62"><expr pos:start="37:13" pos:end="37:61"><call pos:start="37:13" pos:end="37:61"><name pos:start="37:13" pos:end="37:40"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">scsi_dev</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:29">info</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:40">read_data</name></name><argument_list pos:start="37:41" pos:end="37:61">(<argument pos:start="37:42" pos:end="37:52"><expr pos:start="37:42" pos:end="37:52"><name pos:start="37:42" pos:end="37:52"><name pos:start="37:42" pos:end="37:42">s</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:52">scsi_dev</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:60"><expr pos:start="37:55" pos:end="37:60"><name pos:start="37:55" pos:end="37:60"><name pos:start="37:55" pos:end="37:55">s</name><operator pos:start="37:56" pos:end="37:57">-&gt;</operator><name pos:start="37:58" pos:end="37:60">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="39:11" pos:end="43:9">else if <condition pos:start="39:19" pos:end="39:47">(<expr pos:start="39:20" pos:end="39:46"><name pos:start="39:20" pos:end="39:26"><name pos:start="39:20" pos:end="39:20">s</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:26">mode</name></name> <operator pos:start="39:28" pos:end="39:29">==</operator> <name pos:start="39:31" pos:end="39:46">USB_MSDM_DATAOUT</name></expr>)</condition> <block pos:start="39:49" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:63">

            <expr_stmt pos:start="41:13" pos:end="41:63"><expr pos:start="41:13" pos:end="41:62"><call pos:start="41:13" pos:end="41:62"><name pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:23">scsi_dev</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:29">info</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:41">write_data</name></name><argument_list pos:start="41:42" pos:end="41:62">(<argument pos:start="41:43" pos:end="41:53"><expr pos:start="41:43" pos:end="41:53"><name pos:start="41:43" pos:end="41:53"><name pos:start="41:43" pos:end="41:43">s</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:53">scsi_dev</name></name></expr></argument>, <argument pos:start="41:56" pos:end="41:61"><expr pos:start="41:56" pos:end="41:61"><name pos:start="41:56" pos:end="41:61"><name pos:start="41:56" pos:end="41:56">s</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:61">tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
