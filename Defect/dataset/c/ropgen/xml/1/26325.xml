<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26325.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="1:57">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:38">AVFormatContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:56"><decl pos:start="1:44" pos:end="1:56"><type pos:start="1:44" pos:end="1:56"><name pos:start="1:44" pos:end="1:51">AVPacket</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:21">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">PAFDemuxContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">p</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:15">AVIOContext</name>     <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">pb</name> <init pos:start="7:25" pos:end="7:31">= <expr pos:start="7:27" pos:end="7:31"><name pos:start="7:27" pos:end="7:31"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type>        <name pos:start="9:21" pos:end="9:25">count</name></decl>, <decl pos:start="9:28" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:28" pos:end="9:33">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type>             <name pos:start="11:21" pos:end="11:24">size</name></decl>, <decl pos:start="11:27" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:27" pos:end="11:27">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:9">p</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:24">current_frame</name></name> <operator pos:start="15:26" pos:end="15:27">&gt;=</operator> <name pos:start="15:29" pos:end="15:40"><name pos:start="15:29" pos:end="15:29">p</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:40">nb_frames</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <return pos:start="17:9" pos:end="17:27">return <expr pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:27"><if pos:start="21:5" pos:end="23:27">if <condition pos:start="21:8" pos:end="21:21">(<expr pos:start="21:9" pos:end="21:20"><call pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:16">url_feof</name><argument_list pos:start="21:17" pos:end="21:20">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:27"><block_content pos:start="23:9" pos:end="23:27">

        <return pos:start="23:9" pos:end="23:27">return <expr pos:start="23:16" pos:end="23:26"><name pos:start="23:16" pos:end="23:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="47:5"><if pos:start="27:5" pos:end="47:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">p</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">got_audio</name></name></expr>)</condition> <block pos:start="27:23" pos:end="47:5">{<block_content pos:start="29:9" pos:end="45:25">

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:50">(<expr pos:start="29:13" pos:end="29:49"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:25">av_new_packet</name><argument_list pos:start="29:26" pos:end="29:45">(<argument pos:start="29:27" pos:end="29:29"><expr pos:start="29:27" pos:end="29:29"><name pos:start="29:27" pos:end="29:29">pkt</name></expr></argument>, <argument pos:start="29:32" pos:end="29:44"><expr pos:start="29:32" pos:end="29:44"><name pos:start="29:32" pos:end="29:44"><name pos:start="29:32" pos:end="29:32">p</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:44">audio_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:47" pos:end="29:47">&lt;</operator> <literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <return pos:start="31:13" pos:end="31:35">return <expr pos:start="31:20" pos:end="31:34"><call pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:62"><expr pos:start="35:9" pos:end="35:61"><call pos:start="35:9" pos:end="35:61"><name pos:start="35:9" pos:end="35:14">memcpy</name><argument_list pos:start="35:15" pos:end="35:61">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:18">pkt</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:24">data</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:45"><expr pos:start="35:27" pos:end="35:45"><name pos:start="35:27" pos:end="35:45"><name pos:start="35:27" pos:end="35:27">p</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:45">temp_audio_frame</name></name></expr></argument>, <argument pos:start="35:48" pos:end="35:60"><expr pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:60"><name pos:start="35:48" pos:end="35:48">p</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:60">audio_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:87"><expr pos:start="37:9" pos:end="37:86"><name pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">pkt</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:21">duration</name></name>     <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:45">PAF_SOUND_SAMPLES</name> <operator pos:start="37:47" pos:end="37:47">*</operator> <operator pos:start="37:49" pos:end="37:49">(</operator><name pos:start="37:50" pos:end="37:62"><name pos:start="37:50" pos:end="37:50">p</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:62">audio_size</name></name> <operator pos:start="37:64" pos:end="37:64">/</operator> <name pos:start="37:66" pos:end="37:85">PAF_SOUND_FRAME_SIZE</name><operator pos:start="37:86" pos:end="37:86">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:11">pkt</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">flags</name></name>       <operator pos:start="39:26" pos:end="39:27">|=</operator> <name pos:start="39:29" pos:end="39:43">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:11">pkt</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:25">stream_index</name></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:9">p</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:20">got_audio</name></name>      <operator pos:start="43:27" pos:end="43:27">=</operator> <literal type="number" pos:start="43:29" pos:end="43:29">0</literal></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:25">return <expr pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:24"><name pos:start="45:16" pos:end="45:18">pkt</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:24">size</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:101"><expr pos:start="51:5" pos:end="51:100"><name pos:start="51:5" pos:end="51:9">count</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <ternary pos:start="51:13" pos:end="51:100"><condition pos:start="51:13" pos:end="51:37"><expr pos:start="51:13" pos:end="51:35"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:29"><name pos:start="51:14" pos:end="51:14">p</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:29">current_frame</name></name> <operator pos:start="51:31" pos:end="51:32">==</operator> <literal type="number" pos:start="51:34" pos:end="51:34">0</literal><operator pos:start="51:35" pos:end="51:35">)</operator></expr> ?</condition><then pos:start="51:39" pos:end="51:54"> <expr pos:start="51:39" pos:end="51:54"><name pos:start="51:39" pos:end="51:54"><name pos:start="51:39" pos:end="51:39">p</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:54">preload_count</name></name></expr> </then><else pos:start="51:56" pos:end="51:100">: <expr pos:start="51:58" pos:end="51:100"><name pos:start="51:58" pos:end="51:100"><name pos:start="51:58" pos:end="51:58">p</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:78">blocks_count_table</name><index pos:start="51:79" pos:end="51:100">[<expr pos:start="51:80" pos:end="51:99"><name pos:start="51:80" pos:end="51:95"><name pos:start="51:80" pos:end="51:80">p</name><operator pos:start="51:81" pos:end="51:82">-&gt;</operator><name pos:start="51:83" pos:end="51:95">current_frame</name></name> <operator pos:start="51:97" pos:end="51:97">-</operator> <literal type="number" pos:start="51:99" pos:end="51:99">1</literal></expr>]</index></name></expr></else></ternary></expr>;</expr_stmt>

    <for pos:start="53:5" pos:end="95:5">for <control pos:start="53:9" pos:end="53:31">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:25">count</name></expr>;</condition> <incr pos:start="53:28" pos:end="53:30"><expr pos:start="53:28" pos:end="53:30"><name pos:start="53:28" pos:end="53:28">i</name><operator pos:start="53:29" pos:end="53:30">++</operator></expr></incr>)</control> <block pos:start="53:33" pos:end="95:5">{<block_content pos:start="55:9" pos:end="93:33">

        <if_stmt pos:start="55:9" pos:end="57:39"><if pos:start="55:9" pos:end="57:39">if <condition pos:start="55:12" pos:end="55:52">(<expr pos:start="55:13" pos:end="55:51"><name pos:start="55:13" pos:end="55:34"><name pos:start="55:13" pos:end="55:13">p</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:34">current_frame_block</name></name> <operator pos:start="55:36" pos:end="55:37">&gt;=</operator> <name pos:start="55:39" pos:end="55:51"><name pos:start="55:39" pos:end="55:39">p</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:51">frame_blks</name></name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="57:39"><block_content pos:start="57:13" pos:end="57:39">

            <return pos:start="57:13" pos:end="57:39">return <expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:78"><expr pos:start="61:9" pos:end="61:77"><name pos:start="61:9" pos:end="61:14">offset</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:63"><name pos:start="61:18" pos:end="61:18">p</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:39">blocks_offset_table</name><index pos:start="61:40" pos:end="61:63">[<expr pos:start="61:41" pos:end="61:62"><name pos:start="61:41" pos:end="61:62"><name pos:start="61:41" pos:end="61:41">p</name><operator pos:start="61:42" pos:end="61:43">-&gt;</operator><name pos:start="61:44" pos:end="61:62">current_frame_block</name></name></expr>]</index></name> <operator pos:start="61:65" pos:end="61:65">&amp;</operator> <operator pos:start="61:67" pos:end="61:67">~</operator><operator pos:start="61:68" pos:end="61:68">(</operator><literal type="number" pos:start="61:69" pos:end="61:70">1U</literal> <operator pos:start="61:72" pos:end="61:73">&lt;&lt;</operator> <literal type="number" pos:start="61:75" pos:end="61:76">31</literal><operator pos:start="61:77" pos:end="61:77">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="63:9" pos:end="91:9"><if pos:start="63:9" pos:end="81:9">if <condition pos:start="63:12" pos:end="63:72">(<expr pos:start="63:13" pos:end="63:71"><name pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:13">p</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:34">blocks_offset_table</name><index pos:start="63:35" pos:end="63:58">[<expr pos:start="63:36" pos:end="63:57"><name pos:start="63:36" pos:end="63:57"><name pos:start="63:36" pos:end="63:36">p</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:57">current_frame_block</name></name></expr>]</index></name> <operator pos:start="63:60" pos:end="63:60">&amp;</operator> <operator pos:start="63:62" pos:end="63:62">(</operator><literal type="number" pos:start="63:63" pos:end="63:64">1U</literal> <operator pos:start="63:66" pos:end="63:67">&lt;&lt;</operator> <literal type="number" pos:start="63:69" pos:end="63:70">31</literal><operator pos:start="63:71" pos:end="63:71">)</operator></expr>)</condition> <block pos:start="63:74" pos:end="81:9">{<block_content pos:start="65:13" pos:end="79:13">

            <if_stmt pos:start="65:13" pos:end="67:43"><if pos:start="65:13" pos:end="67:43">if <condition pos:start="65:16" pos:end="65:56">(<expr pos:start="65:17" pos:end="65:55"><name pos:start="65:17" pos:end="65:22">offset</name> <operator pos:start="65:24" pos:end="65:24">&gt;</operator> <name pos:start="65:26" pos:end="65:38"><name pos:start="65:26" pos:end="65:26">p</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:38">audio_size</name></name> <operator pos:start="65:40" pos:end="65:40">-</operator> <name pos:start="65:42" pos:end="65:55"><name pos:start="65:42" pos:end="65:42">p</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:55">buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:43"><block_content pos:start="67:17" pos:end="67:43">

                <return pos:start="67:17" pos:end="67:43">return <expr pos:start="67:24" pos:end="67:42"><name pos:start="67:24" pos:end="67:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="71:13" pos:end="71:67"><expr pos:start="71:13" pos:end="71:66"><call pos:start="71:13" pos:end="71:66"><name pos:start="71:13" pos:end="71:21">avio_read</name><argument_list pos:start="71:22" pos:end="71:66">(<argument pos:start="71:23" pos:end="71:24"><expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">pb</name></expr></argument>, <argument pos:start="71:27" pos:end="71:49"><expr pos:start="71:27" pos:end="71:49"><name pos:start="71:27" pos:end="71:40"><name pos:start="71:27" pos:end="71:27">p</name><operator pos:start="71:28" pos:end="71:29">-&gt;</operator><name pos:start="71:30" pos:end="71:40">audio_frame</name></name> <operator pos:start="71:42" pos:end="71:42">+</operator> <name pos:start="71:44" pos:end="71:49">offset</name></expr></argument>, <argument pos:start="71:52" pos:end="71:65"><expr pos:start="71:52" pos:end="71:65"><name pos:start="71:52" pos:end="71:65"><name pos:start="71:52" pos:end="71:52">p</name><operator pos:start="71:53" pos:end="71:54">-&gt;</operator><name pos:start="71:55" pos:end="71:65">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:67">(<expr pos:start="73:17" pos:end="73:66"><name pos:start="73:17" pos:end="73:22">offset</name> <operator pos:start="73:24" pos:end="73:25">==</operator> <operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:44"><name pos:start="73:28" pos:end="73:28">p</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:44">max_audio_blks</name></name> <operator pos:start="73:46" pos:end="73:46">-</operator> <literal type="number" pos:start="73:48" pos:end="73:48">2</literal><operator pos:start="73:49" pos:end="73:49">)</operator> <operator pos:start="73:51" pos:end="73:51">*</operator> <name pos:start="73:53" pos:end="73:66"><name pos:start="73:53" pos:end="73:53">p</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:66">buffer_size</name></name></expr>)</condition> <block pos:start="73:69" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:33">

                <expr_stmt pos:start="75:17" pos:end="75:75"><expr pos:start="75:17" pos:end="75:74"><call pos:start="75:17" pos:end="75:74"><name pos:start="75:17" pos:end="75:22">memcpy</name><argument_list pos:start="75:23" pos:end="75:74">(<argument pos:start="75:24" pos:end="75:42"><expr pos:start="75:24" pos:end="75:42"><name pos:start="75:24" pos:end="75:42"><name pos:start="75:24" pos:end="75:24">p</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:42">temp_audio_frame</name></name></expr></argument>, <argument pos:start="75:45" pos:end="75:58"><expr pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:58"><name pos:start="75:45" pos:end="75:45">p</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:58">audio_frame</name></name></expr></argument>, <argument pos:start="75:61" pos:end="75:73"><expr pos:start="75:61" pos:end="75:73"><name pos:start="75:61" pos:end="75:73"><name pos:start="75:61" pos:end="75:61">p</name><operator pos:start="75:62" pos:end="75:63">-&gt;</operator><name pos:start="75:64" pos:end="75:73">audio_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:33"><expr pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:28"><name pos:start="77:17" pos:end="77:17">p</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:28">got_audio</name></name> <operator pos:start="77:30" pos:end="77:30">=</operator> <literal type="number" pos:start="77:32" pos:end="77:32">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="91:9">else <block pos:start="81:16" pos:end="91:9">{<block_content pos:start="83:13" pos:end="89:67">

            <if_stmt pos:start="83:13" pos:end="85:43"><if pos:start="83:13" pos:end="85:43">if <condition pos:start="83:16" pos:end="83:56">(<expr pos:start="83:17" pos:end="83:55"><name pos:start="83:17" pos:end="83:22">offset</name> <operator pos:start="83:24" pos:end="83:24">&gt;</operator> <name pos:start="83:26" pos:end="83:38"><name pos:start="83:26" pos:end="83:26">p</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:38">video_size</name></name> <operator pos:start="83:40" pos:end="83:40">-</operator> <name pos:start="83:42" pos:end="83:55"><name pos:start="83:42" pos:end="83:42">p</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:55">buffer_size</name></name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:43"><block_content pos:start="85:17" pos:end="85:43">

                <return pos:start="85:17" pos:end="85:43">return <expr pos:start="85:24" pos:end="85:42"><name pos:start="85:24" pos:end="85:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:67"><expr pos:start="89:13" pos:end="89:66"><call pos:start="89:13" pos:end="89:66"><name pos:start="89:13" pos:end="89:21">avio_read</name><argument_list pos:start="89:22" pos:end="89:66">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">pb</name></expr></argument>, <argument pos:start="89:27" pos:end="89:49"><expr pos:start="89:27" pos:end="89:49"><name pos:start="89:27" pos:end="89:40"><name pos:start="89:27" pos:end="89:27">p</name><operator pos:start="89:28" pos:end="89:29">-&gt;</operator><name pos:start="89:30" pos:end="89:40">video_frame</name></name> <operator pos:start="89:42" pos:end="89:42">+</operator> <name pos:start="89:44" pos:end="89:49">offset</name></expr></argument>, <argument pos:start="89:52" pos:end="89:65"><expr pos:start="89:52" pos:end="89:65"><name pos:start="89:52" pos:end="89:65"><name pos:start="89:52" pos:end="89:52">p</name><operator pos:start="89:53" pos:end="89:54">-&gt;</operator><name pos:start="89:55" pos:end="89:65">buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:9">p</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:30">current_frame_block</name></name><operator pos:start="93:31" pos:end="93:32">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="99:5" pos:end="99:68"><expr pos:start="99:5" pos:end="99:67"><name pos:start="99:5" pos:end="99:8">size</name> <operator pos:start="99:10" pos:end="99:10">=</operator> <name pos:start="99:12" pos:end="99:24"><name pos:start="99:12" pos:end="99:12">p</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:24">video_size</name></name> <operator pos:start="99:26" pos:end="99:26">-</operator> <name pos:start="99:28" pos:end="99:67"><name pos:start="99:28" pos:end="99:28">p</name><operator pos:start="99:29" pos:end="99:30">-&gt;</operator><name pos:start="99:31" pos:end="99:49">frames_offset_table</name><index pos:start="99:50" pos:end="99:67">[<expr pos:start="99:51" pos:end="99:66"><name pos:start="99:51" pos:end="99:66"><name pos:start="99:51" pos:end="99:51">p</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:66">current_frame</name></name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="103:35"><if pos:start="101:5" pos:end="103:35">if <condition pos:start="101:8" pos:end="101:17">(<expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:12">size</name> <operator pos:start="101:14" pos:end="101:14">&lt;</operator> <literal type="number" pos:start="101:16" pos:end="101:16">1</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:35"><block_content pos:start="103:9" pos:end="103:35">

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="109:31"><if pos:start="107:5" pos:end="109:31">if <condition pos:start="107:8" pos:end="107:37">(<expr pos:start="107:9" pos:end="107:36"><call pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:21">av_new_packet</name><argument_list pos:start="107:22" pos:end="107:32">(<argument pos:start="107:23" pos:end="107:25"><expr pos:start="107:23" pos:end="107:25"><name pos:start="107:23" pos:end="107:25">pkt</name></expr></argument>, <argument pos:start="107:28" pos:end="107:31"><expr pos:start="107:28" pos:end="107:31"><name pos:start="107:28" pos:end="107:31">size</name></expr></argument>)</argument_list></call> <operator pos:start="107:34" pos:end="107:34">&lt;</operator> <literal type="number" pos:start="107:36" pos:end="107:36">0</literal></expr>)</condition><block type="pseudo" pos:start="109:9" pos:end="109:31"><block_content pos:start="109:9" pos:end="109:31">

        <return pos:start="109:9" pos:end="109:31">return <expr pos:start="109:16" pos:end="109:30"><call pos:start="109:16" pos:end="109:30"><name pos:start="109:16" pos:end="109:22">AVERROR</name><argument_list pos:start="109:23" pos:end="109:30">(<argument pos:start="109:24" pos:end="109:29"><expr pos:start="109:24" pos:end="109:29"><name pos:start="109:24" pos:end="109:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:26"><expr pos:start="113:5" pos:end="113:25"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:7">pkt</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:21">stream_index</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <literal type="number" pos:start="113:25" pos:end="113:25">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:26"><expr pos:start="115:5" pos:end="115:25"><name pos:start="115:5" pos:end="115:17"><name pos:start="115:5" pos:end="115:7">pkt</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:17">duration</name></name>     <operator pos:start="115:23" pos:end="115:23">=</operator> <literal type="number" pos:start="115:25" pos:end="115:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:87"><expr pos:start="117:5" pos:end="117:86"><call pos:start="117:5" pos:end="117:86"><name pos:start="117:5" pos:end="117:10">memcpy</name><argument_list pos:start="117:11" pos:end="117:86">(<argument pos:start="117:12" pos:end="117:20"><expr pos:start="117:12" pos:end="117:20"><name pos:start="117:12" pos:end="117:20"><name pos:start="117:12" pos:end="117:14">pkt</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:20">data</name></name></expr></argument>, <argument pos:start="117:23" pos:end="117:79"><expr pos:start="117:23" pos:end="117:79"><name pos:start="117:23" pos:end="117:36"><name pos:start="117:23" pos:end="117:23">p</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:36">video_frame</name></name> <operator pos:start="117:38" pos:end="117:38">+</operator> <name pos:start="117:40" pos:end="117:79"><name pos:start="117:40" pos:end="117:40">p</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:61">frames_offset_table</name><index pos:start="117:62" pos:end="117:79">[<expr pos:start="117:63" pos:end="117:78"><name pos:start="117:63" pos:end="117:78"><name pos:start="117:63" pos:end="117:63">p</name><operator pos:start="117:64" pos:end="117:65">-&gt;</operator><name pos:start="117:66" pos:end="117:78">current_frame</name></name></expr>]</index></name></expr></argument>, <argument pos:start="117:82" pos:end="117:85"><expr pos:start="117:82" pos:end="117:85"><name pos:start="117:82" pos:end="117:85">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="121:40"><if pos:start="119:5" pos:end="121:40">if <condition pos:start="119:8" pos:end="119:28">(<expr pos:start="119:9" pos:end="119:27"><name pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:11">pkt</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:17">data</name><index pos:start="119:18" pos:end="119:20">[<expr pos:start="119:19" pos:end="119:19"><literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>]</index></name> <operator pos:start="119:22" pos:end="119:22">&amp;</operator> <literal type="number" pos:start="119:24" pos:end="119:27">0x20</literal></expr>)</condition><block type="pseudo" pos:start="121:9" pos:end="121:40"><block_content pos:start="121:9" pos:end="121:40">

        <expr_stmt pos:start="121:9" pos:end="121:40"><expr pos:start="121:9" pos:end="121:39"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:11">pkt</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:18">flags</name></name>   <operator pos:start="121:22" pos:end="121:23">|=</operator> <name pos:start="121:25" pos:end="121:39">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:23"><expr pos:start="123:5" pos:end="123:22"><name pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:5">p</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:20">current_frame</name></name><operator pos:start="123:21" pos:end="123:22">++</operator></expr>;</expr_stmt>



    <return pos:start="127:5" pos:end="127:21">return <expr pos:start="127:12" pos:end="127:20"><name pos:start="127:12" pos:end="127:20"><name pos:start="127:12" pos:end="127:14">pkt</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:20">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
