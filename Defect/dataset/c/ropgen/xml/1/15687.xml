<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15687.c" pos:tabs="8"><function pos:start="1:1" pos:end="217:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">vp9_raw_reorder_make_output</name><parameter_list pos:start="1:39" pos:end="5:66">(<parameter pos:start="1:40" pos:end="1:56"><decl pos:start="1:40" pos:end="1:56"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:51">AVBSFContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">bsf</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:43">AVPacket</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">out</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:65"><decl pos:start="5:36" pos:end="5:65"><type pos:start="5:36" pos:end="5:65"><name pos:start="5:36" pos:end="5:53">VP9RawReorderFrame</name> <modifier pos:start="5:55" pos:end="5:55">*</modifier></type><name pos:start="5:56" pos:end="5:65">last_frame</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="217:1">{<block_content pos:start="9:5" pos:end="215:13">

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">VP9RawReorderContext</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:29">ctx</name> <init pos:start="9:31" pos:end="9:46">= <expr pos:start="9:33" pos:end="9:46"><name pos:start="9:33" pos:end="9:46"><name pos:start="9:33" pos:end="9:35">bsf</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:57"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">VP9RawReorderFrame</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:35">next_output</name> <init pos:start="11:37" pos:end="11:48">= <expr pos:start="11:39" pos:end="11:48"><name pos:start="11:39" pos:end="11:48">last_frame</name></expr></init></decl>,

                      <decl pos:start="13:23" pos:end="13:48"><type ref="prev" pos:start="11:5" pos:end="11:24"><modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:35">next_display</name> <init pos:start="13:37" pos:end="13:48">= <expr pos:start="13:39" pos:end="13:48"><name pos:start="13:39" pos:end="13:48">last_frame</name></expr></init></decl>, <decl pos:start="13:51" pos:end="13:56"><type ref="prev" pos:start="11:5" pos:end="11:24"><modifier pos:start="13:51" pos:end="13:51">*</modifier></type><name pos:start="13:52" pos:end="13:56">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">s</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">err</name></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="39:5">for <control pos:start="19:9" pos:end="19:37">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">s</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:17">s</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:31">FRAME_SLOTS</name></expr>;</condition> <incr pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:34">s</name><operator pos:start="19:35" pos:end="19:36">++</operator></expr></incr>)</control> <block pos:start="19:39" pos:end="39:5">{<block_content pos:start="21:9" pos:end="37:33">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:13">frame</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:19">ctx</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:25">slot</name><index pos:start="21:26" pos:end="21:28">[<expr pos:start="21:27" pos:end="21:27"><name pos:start="21:27" pos:end="21:27">s</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:19">(<expr pos:start="23:13" pos:end="23:18"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:18">frame</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="27:9" pos:end="31:32"><if pos:start="27:9" pos:end="31:32">if <condition pos:start="27:12" pos:end="29:53">(<expr pos:start="27:13" pos:end="29:52"><name pos:start="27:13" pos:end="27:31"><name pos:start="27:13" pos:end="27:17">frame</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:31">needs_output</name></name> <operator pos:start="27:33" pos:end="27:34">&amp;&amp;</operator> <operator pos:start="27:36" pos:end="27:36">(</operator><operator pos:start="27:37" pos:end="27:37">!</operator><name pos:start="27:38" pos:end="27:48">next_output</name> <operator pos:start="27:50" pos:end="27:51">||</operator>

            <name pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:17">frame</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">sequence</name></name> <operator pos:start="29:29" pos:end="29:29">&lt;</operator> <name pos:start="29:31" pos:end="29:51"><name pos:start="29:31" pos:end="29:41">next_output</name><operator pos:start="29:42" pos:end="29:43">-&gt;</operator><name pos:start="29:44" pos:end="29:51">sequence</name></name><operator pos:start="29:52" pos:end="29:52">)</operator></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:32"><block_content pos:start="31:13" pos:end="31:32">

            <expr_stmt pos:start="31:13" pos:end="31:32"><expr pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:23">next_output</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:31">frame</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="37:33"><if pos:start="33:9" pos:end="37:33">if <condition pos:start="33:12" pos:end="35:44">(<expr pos:start="33:13" pos:end="35:43"><name pos:start="33:13" pos:end="33:32"><name pos:start="33:13" pos:end="33:17">frame</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:32">needs_display</name></name> <operator pos:start="33:34" pos:end="33:35">&amp;&amp;</operator> <operator pos:start="33:37" pos:end="33:37">(</operator><operator pos:start="33:38" pos:end="33:38">!</operator><name pos:start="33:39" pos:end="33:50">next_display</name> <operator pos:start="33:52" pos:end="33:53">||</operator>

            <name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:17">frame</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:22">pts</name></name> <operator pos:start="35:24" pos:end="35:24">&lt;</operator> <name pos:start="35:26" pos:end="35:42"><name pos:start="35:26" pos:end="35:37">next_display</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:42">pts</name></name><operator pos:start="35:43" pos:end="35:43">)</operator></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:33"><block_content pos:start="37:13" pos:end="37:33">

            <expr_stmt pos:start="37:13" pos:end="37:33"><expr pos:start="37:13" pos:end="37:32"><name pos:start="37:13" pos:end="37:24">next_display</name> <operator pos:start="37:26" pos:end="37:26">=</operator> <name pos:start="37:28" pos:end="37:32">frame</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="45:27"><if pos:start="43:5" pos:end="45:27">if <condition pos:start="43:8" pos:end="43:38">(<expr pos:start="43:9" pos:end="43:37"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:20">next_output</name> <operator pos:start="43:22" pos:end="43:23">&amp;&amp;</operator> <operator pos:start="43:25" pos:end="43:25">!</operator><name pos:start="43:26" pos:end="43:37">next_display</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:27"><block_content pos:start="45:9" pos:end="45:27">

        <return pos:start="45:9" pos:end="45:27">return <expr pos:start="45:16" pos:end="45:26"><name pos:start="45:16" pos:end="45:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="57:29"><if pos:start="49:5" pos:end="53:28">if <condition pos:start="49:8" pos:end="51:56">(<expr pos:start="49:9" pos:end="51:55"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:21">next_display</name> <operator pos:start="49:23" pos:end="49:24">||</operator> <operator pos:start="49:26" pos:end="49:26">(</operator><name pos:start="49:27" pos:end="49:37">next_output</name> <operator pos:start="49:39" pos:end="49:40">&amp;&amp;</operator>

        <name pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:19">next_output</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:29">sequence</name></name> <operator pos:start="51:31" pos:end="51:31">&lt;</operator> <name pos:start="51:33" pos:end="51:54"><name pos:start="51:33" pos:end="51:44">next_display</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:54">sequence</name></name><operator pos:start="51:55" pos:end="51:55">)</operator></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:28"><block_content pos:start="53:9" pos:end="53:28">

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:13">frame</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:27">next_output</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="55:5" pos:end="57:29">else<block type="pseudo" pos:start="57:9" pos:end="57:29"><block_content pos:start="57:9" pos:end="57:29">

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:13">frame</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:28">next_display</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="61:5" pos:end="211:5"><if pos:start="61:5" pos:end="79:5">if <condition pos:start="61:8" pos:end="63:36">(<expr pos:start="61:9" pos:end="63:35"><name pos:start="61:9" pos:end="61:27"><name pos:start="61:9" pos:end="61:13">frame</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:27">needs_output</name></name> <operator pos:start="61:29" pos:end="61:30">&amp;&amp;</operator> <name pos:start="61:32" pos:end="61:51"><name pos:start="61:32" pos:end="61:36">frame</name><operator pos:start="61:37" pos:end="61:38">-&gt;</operator><name pos:start="61:39" pos:end="61:51">needs_display</name></name> <operator pos:start="61:53" pos:end="61:54">&amp;&amp;</operator>

        <name pos:start="63:9" pos:end="63:19">next_output</name> <operator pos:start="63:21" pos:end="63:22">==</operator> <name pos:start="63:24" pos:end="63:35">next_display</name></expr>)</condition> <block pos:start="63:38" pos:end="79:5">{<block_content pos:start="65:9" pos:end="77:55">

        <expr_stmt pos:start="65:9" pos:end="69:44"><expr pos:start="65:9" pos:end="69:43"><call pos:start="65:9" pos:end="69:43"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="69:43">(<argument pos:start="65:16" pos:end="65:18"><expr pos:start="65:16" pos:end="65:18"><name pos:start="65:16" pos:end="65:18">bsf</name></expr></argument>, <argument pos:start="65:21" pos:end="65:32"><expr pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="65:35" pos:end="67:50"><expr pos:start="65:35" pos:end="67:50"><literal type="string" pos:start="65:35" pos:end="65:61">"Output and display frame "</literal>

               <literal type="string" pos:start="67:16" pos:end="67:18">"%"</literal><name pos:start="67:19" pos:end="67:24">PRId64</name><literal type="string" pos:start="67:25" pos:end="67:29">" (%"</literal><name pos:start="67:30" pos:end="67:35">PRId64</name><literal type="string" pos:start="67:36" pos:end="67:50">") in order.\n"</literal></expr></argument>,

               <argument pos:start="69:16" pos:end="69:30"><expr pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:20">frame</name><operator pos:start="69:21" pos:end="69:22">-&gt;</operator><name pos:start="69:23" pos:end="69:30">sequence</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:42"><expr pos:start="69:33" pos:end="69:42"><name pos:start="69:33" pos:end="69:42"><name pos:start="69:33" pos:end="69:37">frame</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:42">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><call pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:26">av_packet_move_ref</name><argument_list pos:start="73:27" pos:end="73:46">(<argument pos:start="73:28" pos:end="73:30"><expr pos:start="73:28" pos:end="73:30"><name pos:start="73:28" pos:end="73:30">out</name></expr></argument>, <argument pos:start="73:33" pos:end="73:45"><expr pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:45"><name pos:start="73:33" pos:end="73:37">frame</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:45">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:55"><expr pos:start="77:9" pos:end="77:54"><name pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:13">frame</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:27">needs_output</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:50"><name pos:start="77:31" pos:end="77:35">frame</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:50">needs_display</name></name> <operator pos:start="77:52" pos:end="77:52">=</operator> <literal type="number" pos:start="77:54" pos:end="77:54">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="109:5">else if <condition pos:start="79:15" pos:end="79:35">(<expr pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:20">frame</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:34">needs_output</name></name></expr>)</condition> <block pos:start="79:37" pos:end="109:5">{<block_content pos:start="81:9" pos:end="107:32">

        <if_stmt pos:start="81:9" pos:end="97:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="81:33">(<expr pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:32"><name pos:start="81:13" pos:end="81:17">frame</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:32">needs_display</name></name></expr>)</condition> <block pos:start="81:35" pos:end="89:9">{<block_content pos:start="83:13" pos:end="87:48">

            <expr_stmt pos:start="83:13" pos:end="87:48"><expr pos:start="83:13" pos:end="87:47"><call pos:start="83:13" pos:end="87:47"><name pos:start="83:13" pos:end="83:18">av_log</name><argument_list pos:start="83:19" pos:end="87:47">(<argument pos:start="83:20" pos:end="83:22"><expr pos:start="83:20" pos:end="83:22"><name pos:start="83:20" pos:end="83:22">bsf</name></expr></argument>, <argument pos:start="83:25" pos:end="83:36"><expr pos:start="83:25" pos:end="83:36"><name pos:start="83:25" pos:end="83:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="83:39" pos:end="85:53"><expr pos:start="83:39" pos:end="85:53"><literal type="string" pos:start="83:39" pos:end="83:54">"Output frame %"</literal><name pos:start="83:55" pos:end="83:60">PRId64</name><literal type="string" pos:start="83:61" pos:end="83:63">" "</literal>

                   <literal type="string" pos:start="85:20" pos:end="85:23">"(%"</literal><name pos:start="85:24" pos:end="85:29">PRId64</name><literal type="string" pos:start="85:30" pos:end="85:53">") for later display.\n"</literal></expr></argument>,

                   <argument pos:start="87:20" pos:end="87:34"><expr pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:34"><name pos:start="87:20" pos:end="87:24">frame</name><operator pos:start="87:25" pos:end="87:26">-&gt;</operator><name pos:start="87:27" pos:end="87:34">sequence</name></name></expr></argument>, <argument pos:start="87:37" pos:end="87:46"><expr pos:start="87:37" pos:end="87:46"><name pos:start="87:37" pos:end="87:46"><name pos:start="87:37" pos:end="87:41">frame</name><operator pos:start="87:42" pos:end="87:43">-&gt;</operator><name pos:start="87:44" pos:end="87:46">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="89:11" pos:end="97:9">else <block pos:start="89:16" pos:end="97:9">{<block_content pos:start="91:13" pos:end="95:48">

            <expr_stmt pos:start="91:13" pos:end="95:48"><expr pos:start="91:13" pos:end="95:47"><call pos:start="91:13" pos:end="95:47"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="95:47">(<argument pos:start="91:20" pos:end="91:22"><expr pos:start="91:20" pos:end="91:22"><name pos:start="91:20" pos:end="91:22">bsf</name></expr></argument>, <argument pos:start="91:25" pos:end="91:36"><expr pos:start="91:25" pos:end="91:36"><name pos:start="91:25" pos:end="91:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="91:39" pos:end="93:59"><expr pos:start="91:39" pos:end="93:59"><literal type="string" pos:start="91:39" pos:end="91:61">"Output unshown frame "</literal>

                   <literal type="string" pos:start="93:20" pos:end="93:22">"%"</literal><name pos:start="93:23" pos:end="93:28">PRId64</name><literal type="string" pos:start="93:29" pos:end="93:33">" (%"</literal><name pos:start="93:34" pos:end="93:39">PRId64</name><literal type="string" pos:start="93:40" pos:end="93:59">") to keep order.\n"</literal></expr></argument>,

                   <argument pos:start="95:20" pos:end="95:34"><expr pos:start="95:20" pos:end="95:34"><name pos:start="95:20" pos:end="95:34"><name pos:start="95:20" pos:end="95:24">frame</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">sequence</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:46"><expr pos:start="95:37" pos:end="95:46"><name pos:start="95:37" pos:end="95:46"><name pos:start="95:37" pos:end="95:41">frame</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:46">pts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:47"><expr pos:start="101:9" pos:end="101:46"><call pos:start="101:9" pos:end="101:46"><name pos:start="101:9" pos:end="101:26">av_packet_move_ref</name><argument_list pos:start="101:27" pos:end="101:46">(<argument pos:start="101:28" pos:end="101:30"><expr pos:start="101:28" pos:end="101:30"><name pos:start="101:28" pos:end="101:30">out</name></expr></argument>, <argument pos:start="101:33" pos:end="101:45"><expr pos:start="101:33" pos:end="101:45"><name pos:start="101:33" pos:end="101:45"><name pos:start="101:33" pos:end="101:37">frame</name><operator pos:start="101:38" pos:end="101:39">-&gt;</operator><name pos:start="101:40" pos:end="101:45">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:28"><expr pos:start="103:9" pos:end="103:27"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:11">out</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:16">pts</name></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:22">out</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:27">dts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:32"><expr pos:start="107:9" pos:end="107:31"><name pos:start="107:9" pos:end="107:27"><name pos:start="107:9" pos:end="107:13">frame</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:27">needs_output</name></name> <operator pos:start="107:29" pos:end="107:29">=</operator> <literal type="number" pos:start="107:31" pos:end="107:31">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="109:7" pos:end="211:5">else <block pos:start="109:12" pos:end="211:5">{<block_content pos:start="111:9" pos:end="209:33">

        <decl_stmt pos:start="111:9" pos:end="111:25"><decl pos:start="111:9" pos:end="111:24"><type pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:21">PutBitContext</name></type> <name pos:start="111:23" pos:end="111:24">pb</name></decl>;</decl_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:65"><expr pos:start="115:9" pos:end="115:64"><call pos:start="115:9" pos:end="115:64"><name pos:start="115:9" pos:end="115:18">av_assert0</name><argument_list pos:start="115:19" pos:end="115:64">(<argument pos:start="115:20" pos:end="115:63"><expr pos:start="115:20" pos:end="115:63"><operator pos:start="115:20" pos:end="115:20">!</operator><name pos:start="115:21" pos:end="115:39"><name pos:start="115:21" pos:end="115:25">frame</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:39">needs_output</name></name> <operator pos:start="115:41" pos:end="115:42">&amp;&amp;</operator> <name pos:start="115:44" pos:end="115:63"><name pos:start="115:44" pos:end="115:48">frame</name><operator pos:start="115:49" pos:end="115:50">-&gt;</operator><name pos:start="115:51" pos:end="115:63">needs_display</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="119:9" pos:end="129:9"><if pos:start="119:9" pos:end="129:9">if <condition pos:start="119:12" pos:end="119:30">(<expr pos:start="119:13" pos:end="119:29"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:17">frame</name><operator pos:start="119:18" pos:end="119:19">-&gt;</operator><name pos:start="119:20" pos:end="119:24">slots</name></name> <operator pos:start="119:26" pos:end="119:27">==</operator> <literal type="number" pos:start="119:29" pos:end="119:29">0</literal></expr>)</condition> <block pos:start="119:32" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:39">

            <expr_stmt pos:start="121:13" pos:end="123:54"><expr pos:start="121:13" pos:end="123:53"><call pos:start="121:13" pos:end="123:53"><name pos:start="121:13" pos:end="121:18">av_log</name><argument_list pos:start="121:19" pos:end="123:53">(<argument pos:start="121:20" pos:end="121:22"><expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">bsf</name></expr></argument>, <argument pos:start="121:25" pos:end="121:36"><expr pos:start="121:25" pos:end="121:36"><name pos:start="121:25" pos:end="121:36">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:39" pos:end="123:52"><expr pos:start="121:39" pos:end="123:52"><literal type="string" pos:start="121:39" pos:end="121:68">"Attempting to display frame "</literal>

                   <literal type="string" pos:start="123:20" pos:end="123:52">"which is no longer available?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:37"><expr pos:start="125:13" pos:end="125:36"><name pos:start="125:13" pos:end="125:32"><name pos:start="125:13" pos:end="125:17">frame</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:32">needs_display</name></name> <operator pos:start="125:34" pos:end="125:34">=</operator> <literal type="number" pos:start="125:36" pos:end="125:36">0</literal></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:39">return <expr pos:start="127:20" pos:end="127:38"><name pos:start="127:20" pos:end="127:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:33"><expr pos:start="133:9" pos:end="133:32"><name pos:start="133:9" pos:end="133:9">s</name> <operator pos:start="133:11" pos:end="133:11">=</operator> <call pos:start="133:13" pos:end="133:32"><name pos:start="133:13" pos:end="133:18">ff_ctz</name><argument_list pos:start="133:19" pos:end="133:32">(<argument pos:start="133:20" pos:end="133:31"><expr pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:31"><name pos:start="133:20" pos:end="133:24">frame</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:31">slots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:36"><expr pos:start="135:9" pos:end="135:35"><call pos:start="135:9" pos:end="135:35"><name pos:start="135:9" pos:end="135:18">av_assert0</name><argument_list pos:start="135:19" pos:end="135:35">(<argument pos:start="135:20" pos:end="135:34"><expr pos:start="135:20" pos:end="135:34"><name pos:start="135:20" pos:end="135:20">s</name> <operator pos:start="135:22" pos:end="135:22">&lt;</operator> <name pos:start="135:24" pos:end="135:34">FRAME_SLOTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="143:47"><expr pos:start="139:9" pos:end="143:46"><call pos:start="139:9" pos:end="143:46"><name pos:start="139:9" pos:end="139:14">av_log</name><argument_list pos:start="139:15" pos:end="143:46">(<argument pos:start="139:16" pos:end="139:18"><expr pos:start="139:16" pos:end="139:18"><name pos:start="139:16" pos:end="139:18">bsf</name></expr></argument>, <argument pos:start="139:21" pos:end="139:32"><expr pos:start="139:21" pos:end="139:32"><name pos:start="139:21" pos:end="139:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="139:35" pos:end="141:44"><expr pos:start="139:35" pos:end="141:44"><literal type="string" pos:start="139:35" pos:end="139:51">"Display frame %"</literal><name pos:start="139:52" pos:end="139:57">PRId64</name><literal type="string" pos:start="139:58" pos:end="139:60">" "</literal>

               <literal type="string" pos:start="141:16" pos:end="141:19">"(%"</literal><name pos:start="141:20" pos:end="141:25">PRId64</name><literal type="string" pos:start="141:26" pos:end="141:44">") from slot %d.\n"</literal></expr></argument>,

               <argument pos:start="143:16" pos:end="143:30"><expr pos:start="143:16" pos:end="143:30"><name pos:start="143:16" pos:end="143:30"><name pos:start="143:16" pos:end="143:20">frame</name><operator pos:start="143:21" pos:end="143:22">-&gt;</operator><name pos:start="143:23" pos:end="143:30">sequence</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:42"><expr pos:start="143:33" pos:end="143:42"><name pos:start="143:33" pos:end="143:42"><name pos:start="143:33" pos:end="143:37">frame</name><operator pos:start="143:38" pos:end="143:39">-&gt;</operator><name pos:start="143:40" pos:end="143:42">pts</name></name></expr></argument>, <argument pos:start="143:45" pos:end="143:45"><expr pos:start="143:45" pos:end="143:45"><name pos:start="143:45" pos:end="143:45">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="147:9" pos:end="147:42"><expr pos:start="147:9" pos:end="147:41"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:13">frame</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:21">packet</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <call pos:start="147:25" pos:end="147:41"><name pos:start="147:25" pos:end="147:39">av_packet_alloc</name><argument_list pos:start="147:40" pos:end="147:41">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:35"><if pos:start="149:9" pos:end="151:35">if <condition pos:start="149:12" pos:end="149:27">(<expr pos:start="149:13" pos:end="149:26"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:26"><name pos:start="149:14" pos:end="149:18">frame</name><operator pos:start="149:19" pos:end="149:20">-&gt;</operator><name pos:start="149:21" pos:end="149:26">packet</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:35"><block_content pos:start="151:13" pos:end="151:35">

            <return pos:start="151:13" pos:end="151:35">return <expr pos:start="151:20" pos:end="151:34"><call pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:26">AVERROR</name><argument_list pos:start="151:27" pos:end="151:34">(<argument pos:start="151:28" pos:end="151:33"><expr pos:start="151:28" pos:end="151:33"><name pos:start="151:28" pos:end="151:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:36"><expr pos:start="155:9" pos:end="155:35"><name pos:start="155:9" pos:end="155:11">err</name> <operator pos:start="155:13" pos:end="155:13">=</operator> <call pos:start="155:15" pos:end="155:35"><name pos:start="155:15" pos:end="155:27">av_new_packet</name><argument_list pos:start="155:28" pos:end="155:35">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">out</name></expr></argument>, <argument pos:start="155:34" pos:end="155:34"><expr pos:start="155:34" pos:end="155:34"><literal type="number" pos:start="155:34" pos:end="155:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="159:23"><if pos:start="157:9" pos:end="159:23">if <condition pos:start="157:12" pos:end="157:20">(<expr pos:start="157:13" pos:end="157:19"><name pos:start="157:13" pos:end="157:15">err</name> <operator pos:start="157:17" pos:end="157:17">&lt;</operator> <literal type="number" pos:start="157:19" pos:end="157:19">0</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:23"><block_content pos:start="159:13" pos:end="159:23">

            <return pos:start="159:13" pos:end="159:23">return <expr pos:start="159:20" pos:end="159:22"><name pos:start="159:20" pos:end="159:22">err</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:41"><expr pos:start="163:9" pos:end="163:40"><call pos:start="163:9" pos:end="163:40"><name pos:start="163:9" pos:end="163:21">init_put_bits</name><argument_list pos:start="163:22" pos:end="163:40">(<argument pos:start="163:23" pos:end="163:25"><expr pos:start="163:23" pos:end="163:25"><operator pos:start="163:23" pos:end="163:23">&amp;</operator><name pos:start="163:24" pos:end="163:25">pb</name></expr></argument>, <argument pos:start="163:28" pos:end="163:36"><expr pos:start="163:28" pos:end="163:36"><name pos:start="163:28" pos:end="163:36"><name pos:start="163:28" pos:end="163:30">out</name><operator pos:start="163:31" pos:end="163:32">-&gt;</operator><name pos:start="163:33" pos:end="163:36">data</name></name></expr></argument>, <argument pos:start="163:39" pos:end="163:39"><expr pos:start="163:39" pos:end="163:39"><literal type="number" pos:start="163:39" pos:end="163:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="167:9" pos:end="167:23">// frame_marker</comment>

        <expr_stmt pos:start="169:9" pos:end="169:28"><expr pos:start="169:9" pos:end="169:27"><call pos:start="169:9" pos:end="169:27"><name pos:start="169:9" pos:end="169:16">put_bits</name><argument_list pos:start="169:17" pos:end="169:27">(<argument pos:start="169:18" pos:end="169:20"><expr pos:start="169:18" pos:end="169:20"><operator pos:start="169:18" pos:end="169:18">&amp;</operator><name pos:start="169:19" pos:end="169:20">pb</name></expr></argument>, <argument pos:start="169:23" pos:end="169:23"><expr pos:start="169:23" pos:end="169:23"><literal type="number" pos:start="169:23" pos:end="169:23">2</literal></expr></argument>, <argument pos:start="169:26" pos:end="169:26"><expr pos:start="169:26" pos:end="169:26"><literal type="number" pos:start="169:26" pos:end="169:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="171:9" pos:end="171:26">// profile_low_bit</comment>

        <expr_stmt pos:start="173:9" pos:end="173:45"><expr pos:start="173:9" pos:end="173:44"><call pos:start="173:9" pos:end="173:44"><name pos:start="173:9" pos:end="173:16">put_bits</name><argument_list pos:start="173:17" pos:end="173:44">(<argument pos:start="173:18" pos:end="173:20"><expr pos:start="173:18" pos:end="173:20"><operator pos:start="173:18" pos:end="173:18">&amp;</operator><name pos:start="173:19" pos:end="173:20">pb</name></expr></argument>, <argument pos:start="173:23" pos:end="173:23"><expr pos:start="173:23" pos:end="173:23"><literal type="number" pos:start="173:23" pos:end="173:23">1</literal></expr></argument>, <argument pos:start="173:26" pos:end="173:43"><expr pos:start="173:26" pos:end="173:43"><name pos:start="173:26" pos:end="173:39"><name pos:start="173:26" pos:end="173:30">frame</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:39">profile</name></name> <operator pos:start="173:41" pos:end="173:41">&amp;</operator> <literal type="number" pos:start="173:43" pos:end="173:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="175:9" pos:end="175:27">// profile_high_bit</comment>

        <expr_stmt pos:start="177:9" pos:end="177:52"><expr pos:start="177:9" pos:end="177:51"><call pos:start="177:9" pos:end="177:51"><name pos:start="177:9" pos:end="177:16">put_bits</name><argument_list pos:start="177:17" pos:end="177:51">(<argument pos:start="177:18" pos:end="177:20"><expr pos:start="177:18" pos:end="177:20"><operator pos:start="177:18" pos:end="177:18">&amp;</operator><name pos:start="177:19" pos:end="177:20">pb</name></expr></argument>, <argument pos:start="177:23" pos:end="177:23"><expr pos:start="177:23" pos:end="177:23"><literal type="number" pos:start="177:23" pos:end="177:23">1</literal></expr></argument>, <argument pos:start="177:26" pos:end="177:50"><expr pos:start="177:26" pos:end="177:50"><operator pos:start="177:26" pos:end="177:26">(</operator><name pos:start="177:27" pos:end="177:40"><name pos:start="177:27" pos:end="177:31">frame</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:40">profile</name></name> <operator pos:start="177:42" pos:end="177:43">&gt;&gt;</operator> <literal type="number" pos:start="177:45" pos:end="177:45">1</literal><operator pos:start="177:46" pos:end="177:46">)</operator> <operator pos:start="177:48" pos:end="177:48">&amp;</operator> <literal type="number" pos:start="177:50" pos:end="177:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="179:9" pos:end="185:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:32">(<expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:26"><name pos:start="179:13" pos:end="179:17">frame</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:26">profile</name></name> <operator pos:start="179:28" pos:end="179:29">==</operator> <literal type="number" pos:start="179:31" pos:end="179:31">3</literal></expr>)</condition> <block pos:start="179:34" pos:end="185:9">{<block_content pos:start="183:13" pos:end="183:32">

            <comment type="line" pos:start="181:13" pos:end="181:28">// reserved_zero</comment>

            <expr_stmt pos:start="183:13" pos:end="183:32"><expr pos:start="183:13" pos:end="183:31"><call pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:20">put_bits</name><argument_list pos:start="183:21" pos:end="183:31">(<argument pos:start="183:22" pos:end="183:24"><expr pos:start="183:22" pos:end="183:24"><operator pos:start="183:22" pos:end="183:22">&amp;</operator><name pos:start="183:23" pos:end="183:24">pb</name></expr></argument>, <argument pos:start="183:27" pos:end="183:27"><expr pos:start="183:27" pos:end="183:27"><literal type="number" pos:start="183:27" pos:end="183:27">1</literal></expr></argument>, <argument pos:start="183:30" pos:end="183:30"><expr pos:start="183:30" pos:end="183:30"><literal type="number" pos:start="183:30" pos:end="183:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="line" pos:start="187:9" pos:end="187:30">// show_existing_frame</comment>

        <expr_stmt pos:start="189:9" pos:end="189:28"><expr pos:start="189:9" pos:end="189:27"><call pos:start="189:9" pos:end="189:27"><name pos:start="189:9" pos:end="189:16">put_bits</name><argument_list pos:start="189:17" pos:end="189:27">(<argument pos:start="189:18" pos:end="189:20"><expr pos:start="189:18" pos:end="189:20"><operator pos:start="189:18" pos:end="189:18">&amp;</operator><name pos:start="189:19" pos:end="189:20">pb</name></expr></argument>, <argument pos:start="189:23" pos:end="189:23"><expr pos:start="189:23" pos:end="189:23"><literal type="number" pos:start="189:23" pos:end="189:23">1</literal></expr></argument>, <argument pos:start="189:26" pos:end="189:26"><expr pos:start="189:26" pos:end="189:26"><literal type="number" pos:start="189:26" pos:end="189:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="191:9" pos:end="191:32">// frame_to_show_map_idx</comment>

        <expr_stmt pos:start="193:9" pos:end="193:28"><expr pos:start="193:9" pos:end="193:27"><call pos:start="193:9" pos:end="193:27"><name pos:start="193:9" pos:end="193:16">put_bits</name><argument_list pos:start="193:17" pos:end="193:27">(<argument pos:start="193:18" pos:end="193:20"><expr pos:start="193:18" pos:end="193:20"><operator pos:start="193:18" pos:end="193:18">&amp;</operator><name pos:start="193:19" pos:end="193:20">pb</name></expr></argument>, <argument pos:start="193:23" pos:end="193:23"><expr pos:start="193:23" pos:end="193:23"><literal type="number" pos:start="193:23" pos:end="193:23">3</literal></expr></argument>, <argument pos:start="193:26" pos:end="193:26"><expr pos:start="193:26" pos:end="193:26"><name pos:start="193:26" pos:end="193:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <while pos:start="197:9" pos:end="199:32">while <condition pos:start="197:15" pos:end="197:40">(<expr pos:start="197:16" pos:end="197:39"><call pos:start="197:16" pos:end="197:34"><name pos:start="197:16" pos:end="197:29">put_bits_count</name><argument_list pos:start="197:30" pos:end="197:34">(<argument pos:start="197:31" pos:end="197:33"><expr pos:start="197:31" pos:end="197:33"><operator pos:start="197:31" pos:end="197:31">&amp;</operator><name pos:start="197:32" pos:end="197:33">pb</name></expr></argument>)</argument_list></call> <operator pos:start="197:36" pos:end="197:36">&lt;</operator> <literal type="number" pos:start="197:38" pos:end="197:39">16</literal></expr>)</condition><block type="pseudo" pos:start="199:13" pos:end="199:32"><block_content pos:start="199:13" pos:end="199:32">

            <expr_stmt pos:start="199:13" pos:end="199:32"><expr pos:start="199:13" pos:end="199:31"><call pos:start="199:13" pos:end="199:31"><name pos:start="199:13" pos:end="199:20">put_bits</name><argument_list pos:start="199:21" pos:end="199:31">(<argument pos:start="199:22" pos:end="199:24"><expr pos:start="199:22" pos:end="199:24"><operator pos:start="199:22" pos:end="199:22">&amp;</operator><name pos:start="199:23" pos:end="199:24">pb</name></expr></argument>, <argument pos:start="199:27" pos:end="199:27"><expr pos:start="199:27" pos:end="199:27"><literal type="number" pos:start="199:27" pos:end="199:27">1</literal></expr></argument>, <argument pos:start="199:30" pos:end="199:30"><expr pos:start="199:30" pos:end="199:30"><literal type="number" pos:start="199:30" pos:end="199:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></while>



        <expr_stmt pos:start="203:9" pos:end="203:28"><expr pos:start="203:9" pos:end="203:27"><call pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:22">flush_put_bits</name><argument_list pos:start="203:23" pos:end="203:27">(<argument pos:start="203:24" pos:end="203:26"><expr pos:start="203:24" pos:end="203:26"><operator pos:start="203:24" pos:end="203:24">&amp;</operator><name pos:start="203:25" pos:end="203:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:41"><expr pos:start="205:9" pos:end="205:40"><name pos:start="205:9" pos:end="205:16"><name pos:start="205:9" pos:end="205:11">out</name><operator pos:start="205:12" pos:end="205:13">-&gt;</operator><name pos:start="205:14" pos:end="205:16">pts</name></name> <operator pos:start="205:18" pos:end="205:18">=</operator> <name pos:start="205:20" pos:end="205:27"><name pos:start="205:20" pos:end="205:22">out</name><operator pos:start="205:23" pos:end="205:24">-&gt;</operator><name pos:start="205:25" pos:end="205:27">dts</name></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <name pos:start="205:31" pos:end="205:40"><name pos:start="205:31" pos:end="205:35">frame</name><operator pos:start="205:36" pos:end="205:37">-&gt;</operator><name pos:start="205:38" pos:end="205:40">pts</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:33"><expr pos:start="209:9" pos:end="209:32"><name pos:start="209:9" pos:end="209:28"><name pos:start="209:9" pos:end="209:13">frame</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:28">needs_display</name></name> <operator pos:start="209:30" pos:end="209:30">=</operator> <literal type="number" pos:start="209:32" pos:end="209:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="215:5" pos:end="215:13">return <expr pos:start="215:12" pos:end="215:12"><literal type="number" pos:start="215:12" pos:end="215:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
