<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14647.c" pos:tabs="8"><function pos:start="1:1" pos:end="22:27"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">spapr_post_load</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:55"><decl pos:start="1:42" pos:end="1:55"><type pos:start="1:42" pos:end="1:55"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:55">version_id</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="22:27">{<block_content pos:start="3:5" pos:end="22:27">
    <decl_stmt pos:start="3:5" pos:end="3:59"><decl pos:start="3:5" pos:end="3:58"><type pos:start="3:5" pos:end="3:23"><name pos:start="3:5" pos:end="3:21">sPAPRMachineState</name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:28">spapr</name> <init pos:start="3:30" pos:end="3:58">= <expr pos:start="3:32" pos:end="3:58"><operator pos:start="3:32" pos:end="3:32">(</operator><name pos:start="3:33" pos:end="3:49">sPAPRMachineState</name> <operator pos:start="3:51" pos:end="3:51">*</operator><operator pos:start="3:52" pos:end="3:52">)</operator><name pos:start="3:53" pos:end="3:58">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:16"><decl pos:start="4:5" pos:end="4:15"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:11">err</name> <init pos:start="4:13" pos:end="4:15">= <expr pos:start="4:15" pos:end="4:15"><literal type="number" pos:start="4:15" pos:end="4:15">0</literal></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="5:5" pos:end="22:27"><if pos:start="5:5" pos:end="22:27">if <condition pos:start="5:8" pos:end="5:63">(<expr pos:start="5:9" pos:end="5:62"><operator pos:start="5:9" pos:end="5:9">!</operator><call pos:start="5:10" pos:end="5:62"><name pos:start="5:10" pos:end="5:28">object_dynamic_cast</name><argument_list pos:start="5:29" pos:end="5:62">(<argument pos:start="5:30" pos:end="5:47"><expr pos:start="5:30" pos:end="5:47"><call pos:start="5:30" pos:end="5:47"><name pos:start="5:30" pos:end="5:35">OBJECT</name><argument_list pos:start="5:36" pos:end="5:47">(<argument pos:start="5:37" pos:end="5:46"><expr pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:46"><name pos:start="5:37" pos:end="5:41">spapr</name><operator pos:start="5:42" pos:end="5:43">-&gt;</operator><name pos:start="5:44" pos:end="5:46">ics</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5:50" pos:end="5:61"><expr pos:start="5:50" pos:end="5:61"><name pos:start="5:50" pos:end="5:61">TYPE_ICS_KVM</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="5:65" pos:end="22:27">{<block_content pos:start="6:9" pos:end="22:27">
        <decl_stmt pos:start="6:9" pos:end="6:21"><decl pos:start="6:9" pos:end="6:20"><type pos:start="6:9" pos:end="6:18"><name pos:start="6:9" pos:end="6:16">CPUState</name> <modifier pos:start="6:18" pos:end="6:18">*</modifier></type><name pos:start="6:19" pos:end="6:20">cs</name></decl>;</decl_stmt>
        <macro pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:19">CPU_FOREACH</name><argument_list pos:start="7:20" pos:end="7:23">(<argument pos:start="7:21" pos:end="7:22">cs</argument>)</argument_list></macro> <block pos:start="7:25" pos:end="22:27">{<block_content pos:start="8:13" pos:end="22:27">
            <decl_stmt pos:start="8:13" pos:end="8:46"><decl pos:start="8:13" pos:end="8:45"><type pos:start="8:13" pos:end="8:24"><name pos:start="8:13" pos:end="8:22">PowerPCCPU</name> <modifier pos:start="8:24" pos:end="8:24">*</modifier></type><name pos:start="8:25" pos:end="8:27">cpu</name> <init pos:start="8:29" pos:end="8:45">= <expr pos:start="8:31" pos:end="8:45"><call pos:start="8:31" pos:end="8:45"><name pos:start="8:31" pos:end="8:41">POWERPC_CPU</name><argument_list pos:start="8:42" pos:end="8:45">(<argument pos:start="8:43" pos:end="8:44"><expr pos:start="8:43" pos:end="8:44"><name pos:start="8:43" pos:end="8:44">cs</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:39"><expr pos:start="9:13" pos:end="9:38"><call pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:22">icp_resend</name><argument_list pos:start="9:23" pos:end="9:38">(<argument pos:start="9:24" pos:end="9:37"><expr pos:start="9:24" pos:end="9:37"><call pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:26">ICP</name><argument_list pos:start="9:27" pos:end="9:37">(<argument pos:start="9:28" pos:end="9:36"><expr pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:30">cpu</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">intc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="13:35">/* In earlier versions, there was no separate qdev for the PAPR
     * RTC, so the RTC offset was stored directly in sPAPREnvironment.
     * So when migrating from those versions, poke the incoming offset
     * value into the RTC device */</comment>
    <if_stmt pos:start="14:5" pos:end="22:27"><if pos:start="14:5" pos:end="22:27">if <condition pos:start="14:8" pos:end="14:23">(<expr pos:start="14:9" pos:end="14:22"><name pos:start="14:9" pos:end="14:18">version_id</name> <operator pos:start="14:20" pos:end="14:20">&lt;</operator> <literal type="number" pos:start="14:22" pos:end="14:22">3</literal></expr>)</condition> <block pos:start="14:25" pos:end="22:27">{<block_content pos:start="15:9" pos:end="22:27">
        <expr_stmt pos:start="15:9" pos:end="15:70"><expr pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:69"><name pos:start="15:15" pos:end="15:37">spapr_rtc_import_offset</name><argument_list pos:start="15:38" pos:end="15:69">(<argument pos:start="15:39" pos:end="15:49"><expr pos:start="15:39" pos:end="15:49"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:49"><name pos:start="15:40" pos:end="15:44">spapr</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:49">rtc</name></name></expr></argument>, <argument pos:start="15:52" pos:end="15:68"><expr pos:start="15:52" pos:end="15:68"><name pos:start="15:52" pos:end="15:68"><name pos:start="15:52" pos:end="15:56">spapr</name><operator pos:start="15:57" pos:end="15:58">-&gt;</operator><name pos:start="15:59" pos:end="15:68">rtc_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="16:5" pos:end="22:27"><if pos:start="16:5" pos:end="22:27">if <condition pos:start="16:8" pos:end="16:43">(<expr pos:start="16:9" pos:end="16:42"><call pos:start="16:9" pos:end="16:21"><name pos:start="16:9" pos:end="16:19">kvm_enabled</name><argument_list pos:start="16:20" pos:end="16:21">()</argument_list></call> <operator pos:start="16:23" pos:end="16:24">&amp;&amp;</operator> <name pos:start="16:26" pos:end="16:42"><name pos:start="16:26" pos:end="16:30">spapr</name><operator pos:start="16:31" pos:end="16:32">-&gt;</operator><name pos:start="16:33" pos:end="16:42">patb_entry</name></name></expr>)</condition> <block pos:start="16:45" pos:end="22:27">{<block_content pos:start="17:9" pos:end="22:27">
        <decl_stmt pos:start="17:9" pos:end="17:49"><decl pos:start="17:9" pos:end="17:48"><type pos:start="17:9" pos:end="17:20"><name pos:start="17:9" pos:end="17:18">PowerPCCPU</name> <modifier pos:start="17:20" pos:end="17:20">*</modifier></type><name pos:start="17:21" pos:end="17:23">cpu</name> <init pos:start="17:25" pos:end="17:48">= <expr pos:start="17:27" pos:end="17:48"><call pos:start="17:27" pos:end="17:48"><name pos:start="17:27" pos:end="17:37">POWERPC_CPU</name><argument_list pos:start="17:38" pos:end="17:48">(<argument pos:start="17:39" pos:end="17:47"><expr pos:start="17:39" pos:end="17:47"><name pos:start="17:39" pos:end="17:47">first_cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="18:9" pos:end="18:55"><decl pos:start="18:9" pos:end="18:54"><type pos:start="18:9" pos:end="18:12"><name pos:start="18:9" pos:end="18:12">bool</name></type> <name pos:start="18:14" pos:end="18:18">radix</name> <init pos:start="18:20" pos:end="18:54">= <expr pos:start="18:22" pos:end="18:54"><operator pos:start="18:22" pos:end="18:22">!</operator><operator pos:start="18:23" pos:end="18:23">!</operator><operator pos:start="18:24" pos:end="18:24">(</operator><name pos:start="18:25" pos:end="18:41"><name pos:start="18:25" pos:end="18:29">spapr</name><operator pos:start="18:30" pos:end="18:31">-&gt;</operator><name pos:start="18:32" pos:end="18:41">patb_entry</name></name> <operator pos:start="18:43" pos:end="18:43">&amp;</operator> <name pos:start="18:45" pos:end="18:53">PATBE1_GR</name><operator pos:start="18:54" pos:end="18:54">)</operator></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="19:9" pos:end="19:59"><decl pos:start="19:9" pos:end="19:58"><type pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:12">bool</name></type> <name pos:start="19:14" pos:end="19:17">gtse</name> <init pos:start="19:19" pos:end="19:58">= <expr pos:start="19:21" pos:end="19:58"><operator pos:start="19:21" pos:end="19:21">!</operator><operator pos:start="19:22" pos:end="19:22">!</operator><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:45"><name pos:start="19:24" pos:end="19:26">cpu</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:31">env</name><operator pos:start="19:32" pos:end="19:32">.</operator><name pos:start="19:33" pos:end="19:35">spr</name><index pos:start="19:36" pos:end="19:45">[<expr pos:start="19:37" pos:end="19:44"><name pos:start="19:37" pos:end="19:44">SPR_LPCR</name></expr>]</index></name> <operator pos:start="19:47" pos:end="19:47">&amp;</operator> <name pos:start="19:49" pos:end="19:57">LPCR_GTSE</name><operator pos:start="19:58" pos:end="19:58">)</operator></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="20:9" pos:end="20:75"><expr pos:start="20:9" pos:end="20:74"><name pos:start="20:9" pos:end="20:11">err</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <call pos:start="20:15" pos:end="20:74"><name pos:start="20:15" pos:end="20:37">kvmppc_configure_v3_mmu</name><argument_list pos:start="20:38" pos:end="20:74">(<argument pos:start="20:39" pos:end="20:41"><expr pos:start="20:39" pos:end="20:41"><name pos:start="20:39" pos:end="20:41">cpu</name></expr></argument>, <argument pos:start="20:44" pos:end="20:48"><expr pos:start="20:44" pos:end="20:48"><name pos:start="20:44" pos:end="20:48">radix</name></expr></argument>, <argument pos:start="20:51" pos:end="20:54"><expr pos:start="20:51" pos:end="20:54"><name pos:start="20:51" pos:end="20:54">gtse</name></expr></argument>, <argument pos:start="20:57" pos:end="20:73"><expr pos:start="20:57" pos:end="20:73"><name pos:start="20:57" pos:end="20:73"><name pos:start="20:57" pos:end="20:61">spapr</name><operator pos:start="20:62" pos:end="20:63">-&gt;</operator><name pos:start="20:64" pos:end="20:73">patb_entry</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="21:13" pos:end="21:73"><expr pos:start="21:13" pos:end="21:72"><call pos:start="21:13" pos:end="21:72"><name pos:start="21:13" pos:end="21:24">error_report</name><argument_list pos:start="21:25" pos:end="21:72">(<argument pos:start="21:26" pos:end="21:71"><expr pos:start="21:26" pos:end="21:71"><literal type="string" pos:start="21:26" pos:end="21:71">"Process table config unsupported by the host"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <return pos:start="22:13" pos:end="22:27">return <expr pos:start="22:20" pos:end="22:26"><operator pos:start="22:20" pos:end="22:20">-</operator><name pos:start="22:21" pos:end="22:26">EINVAL</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></block_content></block></if></if_stmt></block_content></block></function></unit>
