<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10850.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:40"><name pos:start="1:1" pos:end="1:19">x11grab_read_header</name><argument_list pos:start="1:20" pos:end="1:40">(<argument pos:start="1:21" pos:end="1:39">AVFormatContext *s1</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="342:1">{<block_content pos:start="5:5" pos:end="340:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">x11_grab</name></name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:28">x11grab</name> <init pos:start="5:30" pos:end="5:44">= <expr pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:44"><name pos:start="5:32" pos:end="5:33">s1</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Display</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">dpy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:23"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:23">= <expr pos:start="9:20" pos:end="9:23"><name pos:start="9:20" pos:end="9:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:20">PixelFormat</name></name></type> <name pos:start="11:22" pos:end="11:33">input_pixfmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">XImage</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:17">image</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">x_off</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">y_off</name> <init pos:start="17:15" pos:end="17:17">= <expr pos:start="17:17" pos:end="17:17"><literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:15"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">screen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">use_shm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">char</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:15">param</name></decl>, <decl pos:start="23:18" pos:end="23:24"><type ref="prev" pos:start="23:5" pos:end="23:10"><modifier pos:start="23:18" pos:end="23:18">*</modifier></type><name pos:start="23:19" pos:end="23:24">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:16"><decl pos:start="25:5" pos:end="25:15"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">ret</name> <init pos:start="25:13" pos:end="25:15">= <expr pos:start="25:15" pos:end="25:15"><literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:14">AVRational</name></type> <name pos:start="27:16" pos:end="27:24">framerate</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:9">param</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <call pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:21">av_strdup</name><argument_list pos:start="31:22" pos:end="31:35">(<argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:24">s1</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:34">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:17"><if pos:start="33:5" pos:end="35:17">if <condition pos:start="33:8" pos:end="33:15">(<expr pos:start="33:9" pos:end="33:14"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:14">param</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">out</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:10">offset</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:31"><name pos:start="39:14" pos:end="39:19">strchr</name><argument_list pos:start="39:20" pos:end="39:31">(<argument pos:start="39:21" pos:end="39:25"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:25">param</name></expr></argument>, <argument pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><literal type="char" pos:start="39:28" pos:end="39:30">'+'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:14">offset</name></expr>)</condition> <block pos:start="41:17" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:19">

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><call pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:14">sscanf</name><argument_list pos:start="43:15" pos:end="43:47">(<argument pos:start="43:16" pos:end="43:21"><expr pos:start="43:16" pos:end="43:21"><name pos:start="43:16" pos:end="43:21">offset</name></expr></argument>, <argument pos:start="43:24" pos:end="43:30"><expr pos:start="43:24" pos:end="43:30"><literal type="string" pos:start="43:24" pos:end="43:30">"%d,%d"</literal></expr></argument>, <argument pos:start="43:33" pos:end="43:38"><expr pos:start="43:33" pos:end="43:38"><operator pos:start="43:33" pos:end="43:33">&amp;</operator><name pos:start="43:34" pos:end="43:38">x_off</name></expr></argument>, <argument pos:start="43:41" pos:end="43:46"><expr pos:start="43:41" pos:end="43:46"><operator pos:start="43:41" pos:end="43:41">&amp;</operator><name pos:start="43:42" pos:end="43:46">y_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:15">x11grab</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:27">draw_mouse</name></name> <operator pos:start="45:29" pos:end="45:29">=</operator> <operator pos:start="45:31" pos:end="45:31">!</operator><call pos:start="45:32" pos:end="45:56"><name pos:start="45:32" pos:end="45:37">strstr</name><argument_list pos:start="45:38" pos:end="45:56">(<argument pos:start="45:39" pos:end="45:44"><expr pos:start="45:39" pos:end="45:44"><name pos:start="45:39" pos:end="45:44">offset</name></expr></argument>, <argument pos:start="45:47" pos:end="45:55"><expr pos:start="45:47" pos:end="45:55"><literal type="string" pos:start="45:47" pos:end="45:55">"nomouse"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:19"><expr pos:start="47:9" pos:end="47:18"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:15">offset</name><operator pos:start="47:16" pos:end="47:16">=</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:96">(<expr pos:start="53:9" pos:end="53:95"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:12">ret</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:90"><name pos:start="53:16" pos:end="53:34">av_parse_video_size</name><argument_list pos:start="53:35" pos:end="53:90">(<argument pos:start="53:36" pos:end="53:50"><expr pos:start="53:36" pos:end="53:50"><operator pos:start="53:36" pos:end="53:36">&amp;</operator><name pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:43">x11grab</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:50">width</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:68"><expr pos:start="53:53" pos:end="53:68"><operator pos:start="53:53" pos:end="53:53">&amp;</operator><name pos:start="53:54" pos:end="53:68"><name pos:start="53:54" pos:end="53:60">x11grab</name><operator pos:start="53:61" pos:end="53:62">-&gt;</operator><name pos:start="53:63" pos:end="53:68">height</name></name></expr></argument>, <argument pos:start="53:71" pos:end="53:89"><expr pos:start="53:71" pos:end="53:89"><name pos:start="53:71" pos:end="53:89"><name pos:start="53:71" pos:end="53:77">x11grab</name><operator pos:start="53:78" pos:end="53:79">-&gt;</operator><name pos:start="53:80" pos:end="53:89">video_size</name></name></expr></argument>)</argument_list></call><operator pos:start="53:91" pos:end="53:91">)</operator> <operator pos:start="53:93" pos:end="53:93">&lt;</operator> <literal type="number" pos:start="53:95" pos:end="53:95">0</literal></expr>)</condition> <block pos:start="53:98" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:17">

        <expr_stmt pos:start="55:9" pos:end="55:65"><expr pos:start="55:9" pos:end="55:64"><call pos:start="55:9" pos:end="55:64"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:64">(<argument pos:start="55:16" pos:end="55:17"><expr pos:start="55:16" pos:end="55:17"><name pos:start="55:16" pos:end="55:17">s1</name></expr></argument>, <argument pos:start="55:20" pos:end="55:31"><expr pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:34" pos:end="55:63"><expr pos:start="55:34" pos:end="55:63"><literal type="string" pos:start="55:34" pos:end="55:63">"Couldn't parse video size.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:72">(<expr pos:start="61:9" pos:end="61:71"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:12">ret</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:66"><name pos:start="61:16" pos:end="61:34">av_parse_video_rate</name><argument_list pos:start="61:35" pos:end="61:66">(<argument pos:start="61:36" pos:end="61:45"><expr pos:start="61:36" pos:end="61:45"><operator pos:start="61:36" pos:end="61:36">&amp;</operator><name pos:start="61:37" pos:end="61:45">framerate</name></expr></argument>, <argument pos:start="61:48" pos:end="61:65"><expr pos:start="61:48" pos:end="61:65"><name pos:start="61:48" pos:end="61:65"><name pos:start="61:48" pos:end="61:54">x11grab</name><operator pos:start="61:55" pos:end="61:56">-&gt;</operator><name pos:start="61:57" pos:end="61:65">framerate</name></name></expr></argument>)</argument_list></call><operator pos:start="61:67" pos:end="61:67">)</operator> <operator pos:start="61:69" pos:end="61:69">&lt;</operator> <literal type="number" pos:start="61:71" pos:end="61:71">0</literal></expr>)</condition> <block pos:start="61:74" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:17">

        <expr_stmt pos:start="63:9" pos:end="63:89"><expr pos:start="63:9" pos:end="63:88"><call pos:start="63:9" pos:end="63:88"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:88">(<argument pos:start="63:16" pos:end="63:17"><expr pos:start="63:16" pos:end="63:17"><name pos:start="63:16" pos:end="63:17">s1</name></expr></argument>, <argument pos:start="63:20" pos:end="63:31"><expr pos:start="63:20" pos:end="63:31"><name pos:start="63:20" pos:end="63:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:34" pos:end="63:67"><expr pos:start="63:34" pos:end="63:67"><literal type="string" pos:start="63:34" pos:end="63:67">"Could not parse framerate: %s.\n"</literal></expr></argument>, <argument pos:start="63:70" pos:end="63:87"><expr pos:start="63:70" pos:end="63:87"><name pos:start="63:70" pos:end="63:87"><name pos:start="63:70" pos:end="63:76">x11grab</name><operator pos:start="63:77" pos:end="63:78">-&gt;</operator><name pos:start="63:79" pos:end="63:87">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="71:79"><expr pos:start="69:5" pos:end="71:78"><call pos:start="69:5" pos:end="71:78"><name pos:start="69:5" pos:end="69:10">av_log</name><argument_list pos:start="69:11" pos:end="71:78">(<argument pos:start="69:12" pos:end="69:13"><expr pos:start="69:12" pos:end="69:13"><name pos:start="69:12" pos:end="69:13">s1</name></expr></argument>, <argument pos:start="69:16" pos:end="69:26"><expr pos:start="69:16" pos:end="69:26"><name pos:start="69:16" pos:end="69:26">AV_LOG_INFO</name></expr></argument>, <argument pos:start="69:29" pos:end="69:90"><expr pos:start="69:29" pos:end="69:90"><literal type="string" pos:start="69:29" pos:end="69:90">"device: %s -&gt; display: %s x: %d y: %d width: %d height: %d\n"</literal></expr></argument>,

           <argument pos:start="71:12" pos:end="71:23"><expr pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:23"><name pos:start="71:12" pos:end="71:13">s1</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:23">filename</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:30"><expr pos:start="71:26" pos:end="71:30"><name pos:start="71:26" pos:end="71:30">param</name></expr></argument>, <argument pos:start="71:33" pos:end="71:37"><expr pos:start="71:33" pos:end="71:37"><name pos:start="71:33" pos:end="71:37">x_off</name></expr></argument>, <argument pos:start="71:40" pos:end="71:44"><expr pos:start="71:40" pos:end="71:44"><name pos:start="71:40" pos:end="71:44">y_off</name></expr></argument>, <argument pos:start="71:47" pos:end="71:60"><expr pos:start="71:47" pos:end="71:60"><name pos:start="71:47" pos:end="71:60"><name pos:start="71:47" pos:end="71:53">x11grab</name><operator pos:start="71:54" pos:end="71:55">-&gt;</operator><name pos:start="71:56" pos:end="71:60">width</name></name></expr></argument>, <argument pos:start="71:63" pos:end="71:77"><expr pos:start="71:63" pos:end="71:77"><name pos:start="71:63" pos:end="71:77"><name pos:start="71:63" pos:end="71:69">x11grab</name><operator pos:start="71:70" pos:end="71:71">-&gt;</operator><name pos:start="71:72" pos:end="71:77">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:30"><expr pos:start="75:5" pos:end="75:29"><name pos:start="75:5" pos:end="75:7">dpy</name> <operator pos:start="75:9" pos:end="75:9">=</operator> <call pos:start="75:11" pos:end="75:29"><name pos:start="75:11" pos:end="75:22">XOpenDisplay</name><argument_list pos:start="75:23" pos:end="75:29">(<argument pos:start="75:24" pos:end="75:28"><expr pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:28">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if<condition pos:start="77:7" pos:end="77:12">(<expr pos:start="77:8" pos:end="77:11"><operator pos:start="77:8" pos:end="77:8">!</operator><name pos:start="77:9" pos:end="77:11">dpy</name></expr>)</condition> <block pos:start="77:14" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:17">

        <expr_stmt pos:start="79:9" pos:end="79:64"><expr pos:start="79:9" pos:end="79:63"><call pos:start="79:9" pos:end="79:63"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:63">(<argument pos:start="79:16" pos:end="79:17"><expr pos:start="79:16" pos:end="79:17"><name pos:start="79:16" pos:end="79:17">s1</name></expr></argument>, <argument pos:start="79:20" pos:end="79:31"><expr pos:start="79:20" pos:end="79:31"><name pos:start="79:20" pos:end="79:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:34" pos:end="79:62"><expr pos:start="79:34" pos:end="79:62"><literal type="string" pos:start="79:34" pos:end="79:62">"Could not open X display.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:27"><expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:26"><name pos:start="81:15" pos:end="81:21">AVERROR</name><argument_list pos:start="81:22" pos:end="81:26">(<argument pos:start="81:23" pos:end="81:25"><expr pos:start="81:23" pos:end="81:25"><name pos:start="81:23" pos:end="81:25">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:39"><expr pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:6">st</name> <operator pos:start="89:8" pos:end="89:8">=</operator> <call pos:start="89:10" pos:end="89:38"><name pos:start="89:10" pos:end="89:28">avformat_new_stream</name><argument_list pos:start="89:29" pos:end="89:38">(<argument pos:start="89:30" pos:end="89:31"><expr pos:start="89:30" pos:end="89:31"><name pos:start="89:30" pos:end="89:31">s1</name></expr></argument>, <argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:12">(<expr pos:start="91:9" pos:end="91:11"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:11">st</name></expr>)</condition> <block pos:start="91:14" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:17">

        <expr_stmt pos:start="93:9" pos:end="93:30"><expr pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:29"><name pos:start="93:15" pos:end="93:21">AVERROR</name><argument_list pos:start="93:22" pos:end="93:29">(<argument pos:start="93:23" pos:end="93:28"><expr pos:start="93:23" pos:end="93:28"><name pos:start="93:23" pos:end="93:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="95:9" pos:end="95:17">goto <name pos:start="95:14" pos:end="95:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:44"><expr pos:start="99:5" pos:end="99:43"><call pos:start="99:5" pos:end="99:43"><name pos:start="99:5" pos:end="99:23">avpriv_set_pts_info</name><argument_list pos:start="99:24" pos:end="99:43">(<argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">st</name></expr></argument>, <argument pos:start="99:29" pos:end="99:30"><expr pos:start="99:29" pos:end="99:30"><literal type="number" pos:start="99:29" pos:end="99:30">64</literal></expr></argument>, <argument pos:start="99:33" pos:end="99:33"><expr pos:start="99:33" pos:end="99:33"><literal type="number" pos:start="99:33" pos:end="99:33">1</literal></expr></argument>, <argument pos:start="99:36" pos:end="99:42"><expr pos:start="99:36" pos:end="99:42"><literal type="number" pos:start="99:36" pos:end="99:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="99:46" pos:end="99:68">/* 64 bits pts in us */</comment>



    <expr_stmt pos:start="103:5" pos:end="103:32"><expr pos:start="103:5" pos:end="103:31"><name pos:start="103:5" pos:end="103:10">screen</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <call pos:start="103:14" pos:end="103:31"><name pos:start="103:14" pos:end="103:26">DefaultScreen</name><argument_list pos:start="103:27" pos:end="103:31">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">dpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="107:5" pos:end="131:5"><if pos:start="107:5" pos:end="131:5">if <condition pos:start="107:8" pos:end="107:30">(<expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:15">x11grab</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:29">follow_mouse</name></name></expr>)</condition> <block pos:start="107:32" pos:end="131:5">{<block_content pos:start="109:9" pos:end="129:116">

        <decl_stmt pos:start="109:9" pos:end="109:31"><decl pos:start="109:9" pos:end="109:20"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:20">screen_w</name></decl>, <decl pos:start="109:23" pos:end="109:30"><type ref="prev" pos:start="109:9" pos:end="109:11"/><name pos:start="109:23" pos:end="109:30">screen_h</name></decl>;</decl_stmt>

        <decl_stmt pos:start="111:9" pos:end="111:17"><decl pos:start="111:9" pos:end="111:16"><type pos:start="111:9" pos:end="111:14"><name pos:start="111:9" pos:end="111:14">Window</name></type> <name pos:start="111:16" pos:end="111:16">w</name></decl>;</decl_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:45"><expr pos:start="115:9" pos:end="115:44"><name pos:start="115:9" pos:end="115:16">screen_w</name> <operator pos:start="115:18" pos:end="115:18">=</operator> <call pos:start="115:20" pos:end="115:44"><name pos:start="115:20" pos:end="115:31">DisplayWidth</name><argument_list pos:start="115:32" pos:end="115:44">(<argument pos:start="115:33" pos:end="115:35"><expr pos:start="115:33" pos:end="115:35"><name pos:start="115:33" pos:end="115:35">dpy</name></expr></argument>, <argument pos:start="115:38" pos:end="115:43"><expr pos:start="115:38" pos:end="115:43"><name pos:start="115:38" pos:end="115:43">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:16">screen_h</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <call pos:start="117:20" pos:end="117:45"><name pos:start="117:20" pos:end="117:32">DisplayHeight</name><argument_list pos:start="117:33" pos:end="117:45">(<argument pos:start="117:34" pos:end="117:36"><expr pos:start="117:34" pos:end="117:36"><name pos:start="117:34" pos:end="117:36">dpy</name></expr></argument>, <argument pos:start="117:39" pos:end="117:44"><expr pos:start="117:39" pos:end="117:44"><name pos:start="117:39" pos:end="117:44">screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:94"><expr pos:start="119:9" pos:end="119:93"><call pos:start="119:9" pos:end="119:93"><name pos:start="119:9" pos:end="119:21">XQueryPointer</name><argument_list pos:start="119:22" pos:end="119:93">(<argument pos:start="119:23" pos:end="119:25"><expr pos:start="119:23" pos:end="119:25"><name pos:start="119:23" pos:end="119:25">dpy</name></expr></argument>, <argument pos:start="119:28" pos:end="119:50"><expr pos:start="119:28" pos:end="119:50"><call pos:start="119:28" pos:end="119:50"><name pos:start="119:28" pos:end="119:37">RootWindow</name><argument_list pos:start="119:38" pos:end="119:50">(<argument pos:start="119:39" pos:end="119:41"><expr pos:start="119:39" pos:end="119:41"><name pos:start="119:39" pos:end="119:41">dpy</name></expr></argument>, <argument pos:start="119:44" pos:end="119:49"><expr pos:start="119:44" pos:end="119:49"><name pos:start="119:44" pos:end="119:49">screen</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:53" pos:end="119:54"><expr pos:start="119:53" pos:end="119:54"><operator pos:start="119:53" pos:end="119:53">&amp;</operator><name pos:start="119:54" pos:end="119:54">w</name></expr></argument>, <argument pos:start="119:57" pos:end="119:58"><expr pos:start="119:57" pos:end="119:58"><operator pos:start="119:57" pos:end="119:57">&amp;</operator><name pos:start="119:58" pos:end="119:58">w</name></expr></argument>, <argument pos:start="119:61" pos:end="119:66"><expr pos:start="119:61" pos:end="119:66"><operator pos:start="119:61" pos:end="119:61">&amp;</operator><name pos:start="119:62" pos:end="119:66">x_off</name></expr></argument>, <argument pos:start="119:69" pos:end="119:74"><expr pos:start="119:69" pos:end="119:74"><operator pos:start="119:69" pos:end="119:69">&amp;</operator><name pos:start="119:70" pos:end="119:74">y_off</name></expr></argument>, <argument pos:start="119:77" pos:end="119:80"><expr pos:start="119:77" pos:end="119:80"><operator pos:start="119:77" pos:end="119:77">&amp;</operator><name pos:start="119:78" pos:end="119:80">ret</name></expr></argument>, <argument pos:start="119:83" pos:end="119:86"><expr pos:start="119:83" pos:end="119:86"><operator pos:start="119:83" pos:end="119:83">&amp;</operator><name pos:start="119:84" pos:end="119:86">ret</name></expr></argument>, <argument pos:start="119:89" pos:end="119:92"><expr pos:start="119:89" pos:end="119:92"><operator pos:start="119:89" pos:end="119:89">&amp;</operator><name pos:start="119:90" pos:end="119:92">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:36"><expr pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:13">x_off</name> <operator pos:start="121:15" pos:end="121:16">-=</operator> <name pos:start="121:18" pos:end="121:31"><name pos:start="121:18" pos:end="121:24">x11grab</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">width</name></name> <operator pos:start="121:33" pos:end="121:33">/</operator> <literal type="number" pos:start="121:35" pos:end="121:35">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:37"><expr pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:13">y_off</name> <operator pos:start="123:15" pos:end="123:16">-=</operator> <name pos:start="123:18" pos:end="123:32"><name pos:start="123:18" pos:end="123:24">x11grab</name><operator pos:start="123:25" pos:end="123:26">-&gt;</operator><name pos:start="123:27" pos:end="123:32">height</name></name> <operator pos:start="123:34" pos:end="123:34">/</operator> <literal type="number" pos:start="123:36" pos:end="123:36">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:66"><expr pos:start="125:9" pos:end="125:65"><name pos:start="125:9" pos:end="125:13">x_off</name> <operator pos:start="125:15" pos:end="125:15">=</operator> <call pos:start="125:17" pos:end="125:65"><name pos:start="125:17" pos:end="125:21">FFMIN</name><argument_list pos:start="125:22" pos:end="125:65">(<argument pos:start="125:23" pos:end="125:37"><expr pos:start="125:23" pos:end="125:37"><call pos:start="125:23" pos:end="125:37"><name pos:start="125:23" pos:end="125:27">FFMAX</name><argument_list pos:start="125:28" pos:end="125:37">(<argument pos:start="125:29" pos:end="125:33"><expr pos:start="125:29" pos:end="125:33"><name pos:start="125:29" pos:end="125:33">x_off</name></expr></argument>, <argument pos:start="125:36" pos:end="125:36"><expr pos:start="125:36" pos:end="125:36"><literal type="number" pos:start="125:36" pos:end="125:36">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:40" pos:end="125:64"><expr pos:start="125:40" pos:end="125:64"><name pos:start="125:40" pos:end="125:47">screen_w</name> <operator pos:start="125:49" pos:end="125:49">-</operator> <name pos:start="125:51" pos:end="125:64"><name pos:start="125:51" pos:end="125:57">x11grab</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:64">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:67"><expr pos:start="127:9" pos:end="127:66"><name pos:start="127:9" pos:end="127:13">y_off</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <call pos:start="127:17" pos:end="127:66"><name pos:start="127:17" pos:end="127:21">FFMIN</name><argument_list pos:start="127:22" pos:end="127:66">(<argument pos:start="127:23" pos:end="127:37"><expr pos:start="127:23" pos:end="127:37"><call pos:start="127:23" pos:end="127:37"><name pos:start="127:23" pos:end="127:27">FFMAX</name><argument_list pos:start="127:28" pos:end="127:37">(<argument pos:start="127:29" pos:end="127:33"><expr pos:start="127:29" pos:end="127:33"><name pos:start="127:29" pos:end="127:33">y_off</name></expr></argument>, <argument pos:start="127:36" pos:end="127:36"><expr pos:start="127:36" pos:end="127:36"><literal type="number" pos:start="127:36" pos:end="127:36">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:40" pos:end="127:65"><expr pos:start="127:40" pos:end="127:65"><name pos:start="127:40" pos:end="127:47">screen_h</name> <operator pos:start="127:49" pos:end="127:49">-</operator> <name pos:start="127:51" pos:end="127:65"><name pos:start="127:51" pos:end="127:57">x11grab</name><operator pos:start="127:58" pos:end="127:59">-&gt;</operator><name pos:start="127:60" pos:end="127:65">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:116"><expr pos:start="129:9" pos:end="129:115"><call pos:start="129:9" pos:end="129:115"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:115">(<argument pos:start="129:16" pos:end="129:17"><expr pos:start="129:16" pos:end="129:17"><name pos:start="129:16" pos:end="129:17">s1</name></expr></argument>, <argument pos:start="129:20" pos:end="129:30"><expr pos:start="129:20" pos:end="129:30"><name pos:start="129:20" pos:end="129:30">AV_LOG_INFO</name></expr></argument>, <argument pos:start="129:33" pos:end="129:100"><expr pos:start="129:33" pos:end="129:100"><literal type="string" pos:start="129:33" pos:end="129:100">"followmouse is enabled, resetting grabbing region to x: %d y: %d\n"</literal></expr></argument>, <argument pos:start="129:103" pos:end="129:107"><expr pos:start="129:103" pos:end="129:107"><name pos:start="129:103" pos:end="129:107">x_off</name></expr></argument>, <argument pos:start="129:110" pos:end="129:114"><expr pos:start="129:110" pos:end="129:114"><name pos:start="129:110" pos:end="129:114">y_off</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:38"><expr pos:start="135:5" pos:end="135:37"><name pos:start="135:5" pos:end="135:11">use_shm</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:37"><name pos:start="135:15" pos:end="135:32">XShmQueryExtension</name><argument_list pos:start="135:33" pos:end="135:37">(<argument pos:start="135:34" pos:end="135:36"><expr pos:start="135:34" pos:end="135:36"><name pos:start="135:34" pos:end="135:36">dpy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:88"><expr pos:start="137:5" pos:end="137:87"><call pos:start="137:5" pos:end="137:87"><name pos:start="137:5" pos:end="137:10">av_log</name><argument_list pos:start="137:11" pos:end="137:87">(<argument pos:start="137:12" pos:end="137:13"><expr pos:start="137:12" pos:end="137:13"><name pos:start="137:12" pos:end="137:13">s1</name></expr></argument>, <argument pos:start="137:16" pos:end="137:26"><expr pos:start="137:16" pos:end="137:26"><name pos:start="137:16" pos:end="137:26">AV_LOG_INFO</name></expr></argument>, <argument pos:start="137:29" pos:end="137:64"><expr pos:start="137:29" pos:end="137:64"><literal type="string" pos:start="137:29" pos:end="137:64">"shared memory extension %s found\n"</literal></expr></argument>, <argument pos:start="137:67" pos:end="137:86"><expr pos:start="137:67" pos:end="137:86"><ternary pos:start="137:67" pos:end="137:86"><condition pos:start="137:67" pos:end="137:75"><expr pos:start="137:67" pos:end="137:73"><name pos:start="137:67" pos:end="137:73">use_shm</name></expr> ?</condition><then pos:start="137:77" pos:end="137:78"> <expr pos:start="137:77" pos:end="137:78"><literal type="string" pos:start="137:77" pos:end="137:78">""</literal></expr> </then><else pos:start="137:80" pos:end="137:86">: <expr pos:start="137:82" pos:end="137:86"><literal type="string" pos:start="137:82" pos:end="137:86">"not"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="141:5" pos:end="203:5"><if pos:start="141:5" pos:end="193:5">if<condition pos:start="141:7" pos:end="141:15">(<expr pos:start="141:8" pos:end="141:14"><name pos:start="141:8" pos:end="141:14">use_shm</name></expr>)</condition> <block pos:start="141:17" pos:end="193:5">{<block_content pos:start="143:9" pos:end="191:9">

        <decl_stmt pos:start="143:9" pos:end="143:38"><decl pos:start="143:9" pos:end="143:37"><type pos:start="143:9" pos:end="143:11"><name pos:start="143:9" pos:end="143:11">int</name></type> <name pos:start="143:13" pos:end="143:15">scr</name> <init pos:start="143:17" pos:end="143:37">= <expr pos:start="143:19" pos:end="143:37"><call pos:start="143:19" pos:end="143:37"><name pos:start="143:19" pos:end="143:32">XDefaultScreen</name><argument_list pos:start="143:33" pos:end="143:37">(<argument pos:start="143:34" pos:end="143:36"><expr pos:start="143:34" pos:end="143:36"><name pos:start="143:34" pos:end="143:36">dpy</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="145:9" pos:end="157:65"><expr pos:start="145:9" pos:end="157:64"><name pos:start="145:9" pos:end="145:13">image</name> <operator pos:start="145:15" pos:end="145:15">=</operator> <call pos:start="145:17" pos:end="157:64"><name pos:start="145:17" pos:end="145:31">XShmCreateImage</name><argument_list pos:start="145:32" pos:end="157:64">(<argument pos:start="145:33" pos:end="145:35"><expr pos:start="145:33" pos:end="145:35"><name pos:start="145:33" pos:end="145:35">dpy</name></expr></argument>,

                                <argument pos:start="147:33" pos:end="147:55"><expr pos:start="147:33" pos:end="147:55"><call pos:start="147:33" pos:end="147:55"><name pos:start="147:33" pos:end="147:45">DefaultVisual</name><argument_list pos:start="147:46" pos:end="147:55">(<argument pos:start="147:47" pos:end="147:49"><expr pos:start="147:47" pos:end="147:49"><name pos:start="147:47" pos:end="147:49">dpy</name></expr></argument>, <argument pos:start="147:52" pos:end="147:54"><expr pos:start="147:52" pos:end="147:54"><name pos:start="147:52" pos:end="147:54">scr</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="149:33" pos:end="149:54"><expr pos:start="149:33" pos:end="149:54"><call pos:start="149:33" pos:end="149:54"><name pos:start="149:33" pos:end="149:44">DefaultDepth</name><argument_list pos:start="149:45" pos:end="149:54">(<argument pos:start="149:46" pos:end="149:48"><expr pos:start="149:46" pos:end="149:48"><name pos:start="149:46" pos:end="149:48">dpy</name></expr></argument>, <argument pos:start="149:51" pos:end="149:53"><expr pos:start="149:51" pos:end="149:53"><name pos:start="149:51" pos:end="149:53">scr</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="151:33" pos:end="151:39"><expr pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:39">ZPixmap</name></expr></argument>,

                                <argument pos:start="153:33" pos:end="153:36"><expr pos:start="153:33" pos:end="153:36"><name pos:start="153:33" pos:end="153:36">NULL</name></expr></argument>,

                                <argument pos:start="155:33" pos:end="155:49"><expr pos:start="155:33" pos:end="155:49"><operator pos:start="155:33" pos:end="155:33">&amp;</operator><name pos:start="155:34" pos:end="155:49"><name pos:start="155:34" pos:end="155:40">x11grab</name><operator pos:start="155:41" pos:end="155:42">-&gt;</operator><name pos:start="155:43" pos:end="155:49">shminfo</name></name></expr></argument>,

                                <argument pos:start="157:33" pos:end="157:46"><expr pos:start="157:33" pos:end="157:46"><name pos:start="157:33" pos:end="157:46"><name pos:start="157:33" pos:end="157:39">x11grab</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:46">width</name></name></expr></argument>, <argument pos:start="157:49" pos:end="157:63"><expr pos:start="157:49" pos:end="157:63"><name pos:start="157:49" pos:end="157:63"><name pos:start="157:49" pos:end="157:55">x11grab</name><operator pos:start="157:56" pos:end="157:57">-&gt;</operator><name pos:start="157:58" pos:end="157:63">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="163:56"><expr pos:start="159:9" pos:end="163:55"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:15">x11grab</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:24">shminfo</name><operator pos:start="159:25" pos:end="159:25">.</operator><name pos:start="159:26" pos:end="159:30">shmid</name></name> <operator pos:start="159:32" pos:end="159:32">=</operator> <call pos:start="159:34" pos:end="163:55"><name pos:start="159:34" pos:end="159:39">shmget</name><argument_list pos:start="159:40" pos:end="163:55">(<argument pos:start="159:41" pos:end="159:51"><expr pos:start="159:41" pos:end="159:51"><name pos:start="159:41" pos:end="159:51">IPC_PRIVATE</name></expr></argument>,

                                        <argument pos:start="161:41" pos:end="161:77"><expr pos:start="161:41" pos:end="161:77"><name pos:start="161:41" pos:end="161:61"><name pos:start="161:41" pos:end="161:45">image</name><operator pos:start="161:46" pos:end="161:47">-&gt;</operator><name pos:start="161:48" pos:end="161:61">bytes_per_line</name></name> <operator pos:start="161:63" pos:end="161:63">*</operator> <name pos:start="161:65" pos:end="161:77"><name pos:start="161:65" pos:end="161:69">image</name><operator pos:start="161:70" pos:end="161:71">-&gt;</operator><name pos:start="161:72" pos:end="161:77">height</name></name></expr></argument>,

                                        <argument pos:start="163:41" pos:end="163:54"><expr pos:start="163:41" pos:end="163:54"><name pos:start="163:41" pos:end="163:49">IPC_CREAT</name><operator pos:start="163:50" pos:end="163:50">|</operator><literal type="number" pos:start="163:51" pos:end="163:54">0777</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="173:9"><if pos:start="165:9" pos:end="173:9">if <condition pos:start="165:12" pos:end="165:41">(<expr pos:start="165:13" pos:end="165:40"><name pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:19">x11grab</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:28">shminfo</name><operator pos:start="165:29" pos:end="165:29">.</operator><name pos:start="165:30" pos:end="165:34">shmid</name></name> <operator pos:start="165:36" pos:end="165:37">==</operator> <operator pos:start="165:39" pos:end="165:39">-</operator><literal type="number" pos:start="165:40" pos:end="165:40">1</literal></expr>)</condition> <block pos:start="165:43" pos:end="173:9">{<block_content pos:start="167:13" pos:end="171:21">

            <expr_stmt pos:start="167:13" pos:end="167:74"><expr pos:start="167:13" pos:end="167:73"><call pos:start="167:13" pos:end="167:73"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="167:73">(<argument pos:start="167:20" pos:end="167:21"><expr pos:start="167:20" pos:end="167:21"><name pos:start="167:20" pos:end="167:21">s1</name></expr></argument>, <argument pos:start="167:24" pos:end="167:35"><expr pos:start="167:24" pos:end="167:35"><name pos:start="167:24" pos:end="167:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:38" pos:end="167:72"><expr pos:start="167:38" pos:end="167:72"><literal type="string" pos:start="167:38" pos:end="167:72">"Fatal: Can't get shared memory!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:34"><expr pos:start="169:13" pos:end="169:33"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:33"><name pos:start="169:19" pos:end="169:25">AVERROR</name><argument_list pos:start="169:26" pos:end="169:33">(<argument pos:start="169:27" pos:end="169:32"><expr pos:start="169:27" pos:end="169:32"><name pos:start="169:27" pos:end="169:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="171:13" pos:end="171:21">goto <name pos:start="171:18" pos:end="171:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:85"><expr pos:start="175:9" pos:end="175:84"><name pos:start="175:9" pos:end="175:32"><name pos:start="175:9" pos:end="175:15">x11grab</name><operator pos:start="175:16" pos:end="175:17">-&gt;</operator><name pos:start="175:18" pos:end="175:24">shminfo</name><operator pos:start="175:25" pos:end="175:25">.</operator><name pos:start="175:26" pos:end="175:32">shmaddr</name></name> <operator pos:start="175:34" pos:end="175:34">=</operator> <name pos:start="175:36" pos:end="175:46"><name pos:start="175:36" pos:end="175:40">image</name><operator pos:start="175:41" pos:end="175:42">-&gt;</operator><name pos:start="175:43" pos:end="175:46">data</name></name> <operator pos:start="175:48" pos:end="175:48">=</operator> <call pos:start="175:50" pos:end="175:84"><name pos:start="175:50" pos:end="175:54">shmat</name><argument_list pos:start="175:55" pos:end="175:84">(<argument pos:start="175:56" pos:end="175:77"><expr pos:start="175:56" pos:end="175:77"><name pos:start="175:56" pos:end="175:77"><name pos:start="175:56" pos:end="175:62">x11grab</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:71">shminfo</name><operator pos:start="175:72" pos:end="175:72">.</operator><name pos:start="175:73" pos:end="175:77">shmid</name></name></expr></argument>, <argument pos:start="175:80" pos:end="175:80"><expr pos:start="175:80" pos:end="175:80"><literal type="number" pos:start="175:80" pos:end="175:80">0</literal></expr></argument>, <argument pos:start="175:83" pos:end="175:83"><expr pos:start="175:83" pos:end="175:83"><literal type="number" pos:start="175:83" pos:end="175:83">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:42"><expr pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:33"><name pos:start="177:9" pos:end="177:15">x11grab</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:24">shminfo</name><operator pos:start="177:25" pos:end="177:25">.</operator><name pos:start="177:26" pos:end="177:33">readOnly</name></name> <operator pos:start="177:35" pos:end="177:35">=</operator> <name pos:start="177:37" pos:end="177:41">False</name></expr>;</expr_stmt>



        <if_stmt pos:start="181:9" pos:end="191:9"><if pos:start="181:9" pos:end="191:9">if <condition pos:start="181:12" pos:end="181:48">(<expr pos:start="181:13" pos:end="181:47"><operator pos:start="181:13" pos:end="181:13">!</operator><call pos:start="181:14" pos:end="181:47"><name pos:start="181:14" pos:end="181:23">XShmAttach</name><argument_list pos:start="181:24" pos:end="181:47">(<argument pos:start="181:25" pos:end="181:27"><expr pos:start="181:25" pos:end="181:27"><name pos:start="181:25" pos:end="181:27">dpy</name></expr></argument>, <argument pos:start="181:30" pos:end="181:46"><expr pos:start="181:30" pos:end="181:46"><operator pos:start="181:30" pos:end="181:30">&amp;</operator><name pos:start="181:31" pos:end="181:46"><name pos:start="181:31" pos:end="181:37">x11grab</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:46">shminfo</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:50" pos:end="191:9">{<block_content pos:start="183:13" pos:end="189:21">

            <expr_stmt pos:start="183:13" pos:end="183:81"><expr pos:start="183:13" pos:end="183:80"><call pos:start="183:13" pos:end="183:80"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:80">(<argument pos:start="183:20" pos:end="183:21"><expr pos:start="183:20" pos:end="183:21"><name pos:start="183:20" pos:end="183:21">s1</name></expr></argument>, <argument pos:start="183:24" pos:end="183:35"><expr pos:start="183:24" pos:end="183:35"><name pos:start="183:24" pos:end="183:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:38" pos:end="183:79"><expr pos:start="183:38" pos:end="183:79"><literal type="string" pos:start="183:38" pos:end="183:79">"Fatal: Failed to attach shared memory!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="185:13" pos:end="185:55">/* needs some better error subroutine :) */</comment>

            <expr_stmt pos:start="187:13" pos:end="187:31"><expr pos:start="187:13" pos:end="187:30"><name pos:start="187:13" pos:end="187:15">ret</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:30"><name pos:start="187:19" pos:end="187:25">AVERROR</name><argument_list pos:start="187:26" pos:end="187:30">(<argument pos:start="187:27" pos:end="187:29"><expr pos:start="187:27" pos:end="187:29"><name pos:start="187:27" pos:end="187:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="189:13" pos:end="189:21">goto <name pos:start="189:18" pos:end="189:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="203:5">else <block pos:start="193:12" pos:end="203:5">{<block_content pos:start="195:9" pos:end="201:46">

        <expr_stmt pos:start="195:9" pos:end="201:46"><expr pos:start="195:9" pos:end="201:45"><name pos:start="195:9" pos:end="195:13">image</name> <operator pos:start="195:15" pos:end="195:15">=</operator> <call pos:start="195:17" pos:end="201:45"><name pos:start="195:17" pos:end="195:25">XGetImage</name><argument_list pos:start="195:26" pos:end="201:45">(<argument pos:start="195:27" pos:end="195:29"><expr pos:start="195:27" pos:end="195:29"><name pos:start="195:27" pos:end="195:29">dpy</name></expr></argument>, <argument pos:start="195:32" pos:end="195:54"><expr pos:start="195:32" pos:end="195:54"><call pos:start="195:32" pos:end="195:54"><name pos:start="195:32" pos:end="195:41">RootWindow</name><argument_list pos:start="195:42" pos:end="195:54">(<argument pos:start="195:43" pos:end="195:45"><expr pos:start="195:43" pos:end="195:45"><name pos:start="195:43" pos:end="195:45">dpy</name></expr></argument>, <argument pos:start="195:48" pos:end="195:53"><expr pos:start="195:48" pos:end="195:53"><name pos:start="195:48" pos:end="195:53">screen</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="197:27" pos:end="197:31"><expr pos:start="197:27" pos:end="197:31"><name pos:start="197:27" pos:end="197:31">x_off</name></expr></argument>,<argument pos:start="197:33" pos:end="197:37"><expr pos:start="197:33" pos:end="197:37"><name pos:start="197:33" pos:end="197:37">y_off</name></expr></argument>,

                          <argument pos:start="199:27" pos:end="199:40"><expr pos:start="199:27" pos:end="199:40"><name pos:start="199:27" pos:end="199:40"><name pos:start="199:27" pos:end="199:33">x11grab</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:40">width</name></name></expr></argument>, <argument pos:start="199:43" pos:end="199:57"><expr pos:start="199:43" pos:end="199:57"><name pos:start="199:43" pos:end="199:57"><name pos:start="199:43" pos:end="199:49">x11grab</name><operator pos:start="199:50" pos:end="199:51">-&gt;</operator><name pos:start="199:52" pos:end="199:57">height</name></name></expr></argument>,

                          <argument pos:start="201:27" pos:end="201:35"><expr pos:start="201:27" pos:end="201:35"><name pos:start="201:27" pos:end="201:35">AllPlanes</name></expr></argument>, <argument pos:start="201:38" pos:end="201:44"><expr pos:start="201:38" pos:end="201:44"><name pos:start="201:38" pos:end="201:44">ZPixmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="207:5" pos:end="299:5">switch <condition pos:start="207:12" pos:end="207:34">(<expr pos:start="207:13" pos:end="207:33"><name pos:start="207:13" pos:end="207:33"><name pos:start="207:13" pos:end="207:17">image</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:33">bits_per_pixel</name></name></expr>)</condition> <block pos:start="207:36" pos:end="299:5">{<block_content pos:start="209:5" pos:end="297:17">

    <case pos:start="209:5" pos:end="209:11">case <expr pos:start="209:10" pos:end="209:10"><literal type="number" pos:start="209:10" pos:end="209:10">8</literal></expr>:</case>

        <expr_stmt pos:start="211:9" pos:end="211:53"><expr pos:start="211:9" pos:end="211:52"><call pos:start="211:9" pos:end="211:52"><name pos:start="211:9" pos:end="211:14">av_log</name> <argument_list pos:start="211:16" pos:end="211:52">(<argument pos:start="211:17" pos:end="211:18"><expr pos:start="211:17" pos:end="211:18"><name pos:start="211:17" pos:end="211:18">s1</name></expr></argument>, <argument pos:start="211:21" pos:end="211:32"><expr pos:start="211:21" pos:end="211:32"><name pos:start="211:21" pos:end="211:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="211:35" pos:end="211:51"><expr pos:start="211:35" pos:end="211:51"><literal type="string" pos:start="211:35" pos:end="211:51">"8 bit palette\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:36"><expr pos:start="213:9" pos:end="213:35"><name pos:start="213:9" pos:end="213:20">input_pixfmt</name> <operator pos:start="213:22" pos:end="213:22">=</operator> <name pos:start="213:24" pos:end="213:35">PIX_FMT_PAL8</name></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:12">case <expr pos:start="217:10" pos:end="217:11"><literal type="number" pos:start="217:10" pos:end="217:11">16</literal></expr>:</case>

        <if_stmt pos:start="219:9" pos:end="249:9"><if pos:start="219:9" pos:end="229:9">if <condition pos:start="219:12" pos:end="223:48">(       <expr pos:start="219:20" pos:end="223:46"><name pos:start="219:20" pos:end="219:34"><name pos:start="219:20" pos:end="219:24">image</name><operator pos:start="219:25" pos:end="219:26">-&gt;</operator><name pos:start="219:27" pos:end="219:34">red_mask</name></name>   <operator pos:start="219:38" pos:end="219:39">==</operator> <literal type="number" pos:start="219:41" pos:end="219:46">0xf800</literal> <operator pos:start="219:48" pos:end="219:49">&amp;&amp;</operator>

                   <name pos:start="221:20" pos:end="221:36"><name pos:start="221:20" pos:end="221:24">image</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:36">green_mask</name></name> <operator pos:start="221:38" pos:end="221:39">==</operator> <literal type="number" pos:start="221:41" pos:end="221:46">0x07e0</literal> <operator pos:start="221:48" pos:end="221:49">&amp;&amp;</operator>

                   <name pos:start="223:20" pos:end="223:35"><name pos:start="223:20" pos:end="223:24">image</name><operator pos:start="223:25" pos:end="223:26">-&gt;</operator><name pos:start="223:27" pos:end="223:35">blue_mask</name></name>  <operator pos:start="223:38" pos:end="223:39">==</operator> <literal type="number" pos:start="223:41" pos:end="223:46">0x001f</literal></expr> )</condition> <block pos:start="223:50" pos:end="229:9">{<block_content pos:start="225:13" pos:end="227:42">

            <expr_stmt pos:start="225:13" pos:end="225:57"><expr pos:start="225:13" pos:end="225:56"><call pos:start="225:13" pos:end="225:56"><name pos:start="225:13" pos:end="225:18">av_log</name> <argument_list pos:start="225:20" pos:end="225:56">(<argument pos:start="225:21" pos:end="225:22"><expr pos:start="225:21" pos:end="225:22"><name pos:start="225:21" pos:end="225:22">s1</name></expr></argument>, <argument pos:start="225:25" pos:end="225:36"><expr pos:start="225:25" pos:end="225:36"><name pos:start="225:25" pos:end="225:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="225:39" pos:end="225:55"><expr pos:start="225:39" pos:end="225:55"><literal type="string" pos:start="225:39" pos:end="225:55">"16 bit RGB565\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:42"><expr pos:start="227:13" pos:end="227:41"><name pos:start="227:13" pos:end="227:24">input_pixfmt</name> <operator pos:start="227:26" pos:end="227:26">=</operator> <name pos:start="227:28" pos:end="227:41">PIX_FMT_RGB565</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="229:11" pos:end="239:9">else if <condition pos:start="229:19" pos:end="233:48">(<expr pos:start="229:20" pos:end="233:46"><name pos:start="229:20" pos:end="229:34"><name pos:start="229:20" pos:end="229:24">image</name><operator pos:start="229:25" pos:end="229:26">-&gt;</operator><name pos:start="229:27" pos:end="229:34">red_mask</name></name>   <operator pos:start="229:38" pos:end="229:39">==</operator> <literal type="number" pos:start="229:41" pos:end="229:46">0x7c00</literal> <operator pos:start="229:48" pos:end="229:49">&amp;&amp;</operator>

                   <name pos:start="231:20" pos:end="231:36"><name pos:start="231:20" pos:end="231:24">image</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:36">green_mask</name></name> <operator pos:start="231:38" pos:end="231:39">==</operator> <literal type="number" pos:start="231:41" pos:end="231:46">0x03e0</literal> <operator pos:start="231:48" pos:end="231:49">&amp;&amp;</operator>

                   <name pos:start="233:20" pos:end="233:35"><name pos:start="233:20" pos:end="233:24">image</name><operator pos:start="233:25" pos:end="233:26">-&gt;</operator><name pos:start="233:27" pos:end="233:35">blue_mask</name></name>  <operator pos:start="233:38" pos:end="233:39">==</operator> <literal type="number" pos:start="233:41" pos:end="233:46">0x001f</literal></expr> )</condition> <block pos:start="233:50" pos:end="239:9">{<block_content pos:start="235:13" pos:end="237:42">

            <expr_stmt pos:start="235:13" pos:end="235:56"><expr pos:start="235:13" pos:end="235:55"><call pos:start="235:13" pos:end="235:55"><name pos:start="235:13" pos:end="235:18">av_log</name><argument_list pos:start="235:19" pos:end="235:55">(<argument pos:start="235:20" pos:end="235:21"><expr pos:start="235:20" pos:end="235:21"><name pos:start="235:20" pos:end="235:21">s1</name></expr></argument>, <argument pos:start="235:24" pos:end="235:35"><expr pos:start="235:24" pos:end="235:35"><name pos:start="235:24" pos:end="235:35">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="235:38" pos:end="235:54"><expr pos:start="235:38" pos:end="235:54"><literal type="string" pos:start="235:38" pos:end="235:54">"16 bit RGB555\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:42"><expr pos:start="237:13" pos:end="237:41"><name pos:start="237:13" pos:end="237:24">input_pixfmt</name> <operator pos:start="237:26" pos:end="237:26">=</operator> <name pos:start="237:28" pos:end="237:41">PIX_FMT_RGB555</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="239:11" pos:end="249:9">else <block pos:start="239:16" pos:end="249:9">{<block_content pos:start="241:13" pos:end="247:21">

            <expr_stmt pos:start="241:13" pos:end="241:123"><expr pos:start="241:13" pos:end="241:122"><call pos:start="241:13" pos:end="241:122"><name pos:start="241:13" pos:end="241:18">av_log</name><argument_list pos:start="241:19" pos:end="241:122">(<argument pos:start="241:20" pos:end="241:21"><expr pos:start="241:20" pos:end="241:21"><name pos:start="241:20" pos:end="241:21">s1</name></expr></argument>, <argument pos:start="241:24" pos:end="241:35"><expr pos:start="241:24" pos:end="241:35"><name pos:start="241:24" pos:end="241:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="241:38" pos:end="241:98"><expr pos:start="241:38" pos:end="241:98"><literal type="string" pos:start="241:38" pos:end="241:98">"RGB ordering at image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="241:101" pos:end="241:121"><expr pos:start="241:101" pos:end="241:121"><name pos:start="241:101" pos:end="241:121"><name pos:start="241:101" pos:end="241:105">image</name><operator pos:start="241:106" pos:end="241:107">-&gt;</operator><name pos:start="241:108" pos:end="241:121">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:139"><expr pos:start="243:13" pos:end="243:138"><call pos:start="243:13" pos:end="243:138"><name pos:start="243:13" pos:end="243:18">av_log</name><argument_list pos:start="243:19" pos:end="243:138">(<argument pos:start="243:20" pos:end="243:21"><expr pos:start="243:20" pos:end="243:21"><name pos:start="243:20" pos:end="243:21">s1</name></expr></argument>, <argument pos:start="243:24" pos:end="243:35"><expr pos:start="243:24" pos:end="243:35"><name pos:start="243:24" pos:end="243:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="243:38" pos:end="243:83"><expr pos:start="243:38" pos:end="243:83"><literal type="string" pos:start="243:38" pos:end="243:83">"color masks: r 0x%.6lx g 0x%.6lx b 0x%.6lx\n"</literal></expr></argument>, <argument pos:start="243:86" pos:end="243:100"><expr pos:start="243:86" pos:end="243:100"><name pos:start="243:86" pos:end="243:100"><name pos:start="243:86" pos:end="243:90">image</name><operator pos:start="243:91" pos:end="243:92">-&gt;</operator><name pos:start="243:93" pos:end="243:100">red_mask</name></name></expr></argument>, <argument pos:start="243:103" pos:end="243:119"><expr pos:start="243:103" pos:end="243:119"><name pos:start="243:103" pos:end="243:119"><name pos:start="243:103" pos:end="243:107">image</name><operator pos:start="243:108" pos:end="243:109">-&gt;</operator><name pos:start="243:110" pos:end="243:119">green_mask</name></name></expr></argument>, <argument pos:start="243:122" pos:end="243:137"><expr pos:start="243:122" pos:end="243:137"><name pos:start="243:122" pos:end="243:137"><name pos:start="243:122" pos:end="243:126">image</name><operator pos:start="243:127" pos:end="243:128">-&gt;</operator><name pos:start="243:129" pos:end="243:137">blue_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:31"><expr pos:start="245:13" pos:end="245:30"><name pos:start="245:13" pos:end="245:15">ret</name> <operator pos:start="245:17" pos:end="245:17">=</operator> <call pos:start="245:19" pos:end="245:30"><name pos:start="245:19" pos:end="245:25">AVERROR</name><argument_list pos:start="245:26" pos:end="245:30">(<argument pos:start="245:27" pos:end="245:29"><expr pos:start="245:27" pos:end="245:29"><name pos:start="245:27" pos:end="245:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="247:13" pos:end="247:21">goto <name pos:start="247:18" pos:end="247:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="251:9" pos:end="251:14">break;</break>

    <case pos:start="253:5" pos:end="253:12">case <expr pos:start="253:10" pos:end="253:11"><literal type="number" pos:start="253:10" pos:end="253:11">24</literal></expr>:</case>

        <if_stmt pos:start="255:9" pos:end="281:9"><if pos:start="255:9" pos:end="263:9">if <condition pos:start="255:12" pos:end="259:51">(        <expr pos:start="255:21" pos:end="259:49"><name pos:start="255:21" pos:end="255:35"><name pos:start="255:21" pos:end="255:25">image</name><operator pos:start="255:26" pos:end="255:27">-&gt;</operator><name pos:start="255:28" pos:end="255:35">red_mask</name></name>   <operator pos:start="255:39" pos:end="255:40">==</operator> <literal type="number" pos:start="255:42" pos:end="255:49">0xff0000</literal> <operator pos:start="255:51" pos:end="255:52">&amp;&amp;</operator>

                    <name pos:start="257:21" pos:end="257:37"><name pos:start="257:21" pos:end="257:25">image</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:37">green_mask</name></name> <operator pos:start="257:39" pos:end="257:40">==</operator> <literal type="number" pos:start="257:42" pos:end="257:49">0x00ff00</literal> <operator pos:start="257:51" pos:end="257:52">&amp;&amp;</operator>

                    <name pos:start="259:21" pos:end="259:36"><name pos:start="259:21" pos:end="259:25">image</name><operator pos:start="259:26" pos:end="259:27">-&gt;</operator><name pos:start="259:28" pos:end="259:36">blue_mask</name></name>  <operator pos:start="259:39" pos:end="259:40">==</operator> <literal type="number" pos:start="259:42" pos:end="259:49">0x0000ff</literal></expr> )</condition> <block pos:start="259:53" pos:end="263:9">{<block_content pos:start="261:13" pos:end="261:41">

            <expr_stmt pos:start="261:13" pos:end="261:41"><expr pos:start="261:13" pos:end="261:40"><name pos:start="261:13" pos:end="261:24">input_pixfmt</name> <operator pos:start="261:26" pos:end="261:26">=</operator> <name pos:start="261:28" pos:end="261:40">PIX_FMT_BGR24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="263:11" pos:end="271:9">else if <condition pos:start="263:19" pos:end="267:51">( <expr pos:start="263:21" pos:end="267:49"><name pos:start="263:21" pos:end="263:35"><name pos:start="263:21" pos:end="263:25">image</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:35">red_mask</name></name>   <operator pos:start="263:39" pos:end="263:40">==</operator> <literal type="number" pos:start="263:42" pos:end="263:49">0x0000ff</literal> <operator pos:start="263:51" pos:end="263:52">&amp;&amp;</operator>

                    <name pos:start="265:21" pos:end="265:37"><name pos:start="265:21" pos:end="265:25">image</name><operator pos:start="265:26" pos:end="265:27">-&gt;</operator><name pos:start="265:28" pos:end="265:37">green_mask</name></name> <operator pos:start="265:39" pos:end="265:40">==</operator> <literal type="number" pos:start="265:42" pos:end="265:49">0x00ff00</literal> <operator pos:start="265:51" pos:end="265:52">&amp;&amp;</operator>

                    <name pos:start="267:21" pos:end="267:36"><name pos:start="267:21" pos:end="267:25">image</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:36">blue_mask</name></name>  <operator pos:start="267:39" pos:end="267:40">==</operator> <literal type="number" pos:start="267:42" pos:end="267:49">0xff0000</literal></expr> )</condition> <block pos:start="267:53" pos:end="271:9">{<block_content pos:start="269:13" pos:end="269:41">

            <expr_stmt pos:start="269:13" pos:end="269:41"><expr pos:start="269:13" pos:end="269:40"><name pos:start="269:13" pos:end="269:24">input_pixfmt</name> <operator pos:start="269:26" pos:end="269:26">=</operator> <name pos:start="269:28" pos:end="269:40">PIX_FMT_RGB24</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="271:11" pos:end="281:9">else <block pos:start="271:16" pos:end="281:9">{<block_content pos:start="273:13" pos:end="279:21">

            <expr_stmt pos:start="273:13" pos:end="273:122"><expr pos:start="273:13" pos:end="273:121"><call pos:start="273:13" pos:end="273:121"><name pos:start="273:13" pos:end="273:18">av_log</name><argument_list pos:start="273:19" pos:end="273:121">(<argument pos:start="273:20" pos:end="273:21"><expr pos:start="273:20" pos:end="273:21"><name pos:start="273:20" pos:end="273:21">s1</name></expr></argument>, <argument pos:start="273:24" pos:end="273:35"><expr pos:start="273:24" pos:end="273:35"><name pos:start="273:24" pos:end="273:35">AV_LOG_ERROR</name></expr></argument>,<argument pos:start="273:37" pos:end="273:97"><expr pos:start="273:37" pos:end="273:97"><literal type="string" pos:start="273:37" pos:end="273:97">"rgb ordering at image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="273:100" pos:end="273:120"><expr pos:start="273:100" pos:end="273:120"><name pos:start="273:100" pos:end="273:120"><name pos:start="273:100" pos:end="273:104">image</name><operator pos:start="273:105" pos:end="273:106">-&gt;</operator><name pos:start="273:107" pos:end="273:120">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:139"><expr pos:start="275:13" pos:end="275:138"><call pos:start="275:13" pos:end="275:138"><name pos:start="275:13" pos:end="275:18">av_log</name><argument_list pos:start="275:19" pos:end="275:138">(<argument pos:start="275:20" pos:end="275:21"><expr pos:start="275:20" pos:end="275:21"><name pos:start="275:20" pos:end="275:21">s1</name></expr></argument>, <argument pos:start="275:24" pos:end="275:35"><expr pos:start="275:24" pos:end="275:35"><name pos:start="275:24" pos:end="275:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="275:38" pos:end="275:83"><expr pos:start="275:38" pos:end="275:83"><literal type="string" pos:start="275:38" pos:end="275:83">"color masks: r 0x%.6lx g 0x%.6lx b 0x%.6lx\n"</literal></expr></argument>, <argument pos:start="275:86" pos:end="275:100"><expr pos:start="275:86" pos:end="275:100"><name pos:start="275:86" pos:end="275:100"><name pos:start="275:86" pos:end="275:90">image</name><operator pos:start="275:91" pos:end="275:92">-&gt;</operator><name pos:start="275:93" pos:end="275:100">red_mask</name></name></expr></argument>, <argument pos:start="275:103" pos:end="275:119"><expr pos:start="275:103" pos:end="275:119"><name pos:start="275:103" pos:end="275:119"><name pos:start="275:103" pos:end="275:107">image</name><operator pos:start="275:108" pos:end="275:109">-&gt;</operator><name pos:start="275:110" pos:end="275:119">green_mask</name></name></expr></argument>, <argument pos:start="275:122" pos:end="275:137"><expr pos:start="275:122" pos:end="275:137"><name pos:start="275:122" pos:end="275:137"><name pos:start="275:122" pos:end="275:126">image</name><operator pos:start="275:127" pos:end="275:128">-&gt;</operator><name pos:start="275:129" pos:end="275:137">blue_mask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:31"><expr pos:start="277:13" pos:end="277:30"><name pos:start="277:13" pos:end="277:15">ret</name> <operator pos:start="277:17" pos:end="277:17">=</operator> <call pos:start="277:19" pos:end="277:30"><name pos:start="277:19" pos:end="277:25">AVERROR</name><argument_list pos:start="277:26" pos:end="277:30">(<argument pos:start="277:27" pos:end="277:29"><expr pos:start="277:27" pos:end="277:29"><name pos:start="277:27" pos:end="277:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="279:13" pos:end="279:21">goto <name pos:start="279:18" pos:end="279:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <break pos:start="283:9" pos:end="283:14">break;</break>

    <case pos:start="285:5" pos:end="285:12">case <expr pos:start="285:10" pos:end="285:11"><literal type="number" pos:start="285:10" pos:end="285:11">32</literal></expr>:</case>

        <expr_stmt pos:start="287:9" pos:end="287:37"><expr pos:start="287:9" pos:end="287:36"><name pos:start="287:9" pos:end="287:20">input_pixfmt</name> <operator pos:start="287:22" pos:end="287:22">=</operator> <name pos:start="287:24" pos:end="287:36">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        <break pos:start="289:9" pos:end="289:14">break;</break>

    <default pos:start="291:5" pos:end="291:12">default:</default>

        <expr_stmt pos:start="293:9" pos:end="293:103"><expr pos:start="293:9" pos:end="293:102"><call pos:start="293:9" pos:end="293:102"><name pos:start="293:9" pos:end="293:14">av_log</name><argument_list pos:start="293:15" pos:end="293:102">(<argument pos:start="293:16" pos:end="293:17"><expr pos:start="293:16" pos:end="293:17"><name pos:start="293:16" pos:end="293:17">s1</name></expr></argument>, <argument pos:start="293:20" pos:end="293:31"><expr pos:start="293:20" pos:end="293:31"><name pos:start="293:20" pos:end="293:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:34" pos:end="293:78"><expr pos:start="293:34" pos:end="293:78"><literal type="string" pos:start="293:34" pos:end="293:78">"image depth %i not supported ... aborting\n"</literal></expr></argument>, <argument pos:start="293:81" pos:end="293:101"><expr pos:start="293:81" pos:end="293:101"><name pos:start="293:81" pos:end="293:101"><name pos:start="293:81" pos:end="293:85">image</name><operator pos:start="293:86" pos:end="293:87">-&gt;</operator><name pos:start="293:88" pos:end="293:101">bits_per_pixel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="295:9" pos:end="295:30"><expr pos:start="295:9" pos:end="295:29"><name pos:start="295:9" pos:end="295:11">ret</name> <operator pos:start="295:13" pos:end="295:13">=</operator> <call pos:start="295:15" pos:end="295:29"><name pos:start="295:15" pos:end="295:21">AVERROR</name><argument_list pos:start="295:22" pos:end="295:29">(<argument pos:start="295:23" pos:end="295:28"><expr pos:start="295:23" pos:end="295:28"><name pos:start="295:23" pos:end="295:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="297:9" pos:end="297:17">goto <name pos:start="297:14" pos:end="297:16">out</name>;</goto>

    </block_content>}</block></switch>



    <expr_stmt pos:start="303:5" pos:end="303:85"><expr pos:start="303:5" pos:end="303:84"><name pos:start="303:5" pos:end="303:23"><name pos:start="303:5" pos:end="303:11">x11grab</name><operator pos:start="303:12" pos:end="303:13">-&gt;</operator><name pos:start="303:14" pos:end="303:23">frame_size</name></name> <operator pos:start="303:25" pos:end="303:25">=</operator> <name pos:start="303:27" pos:end="303:40"><name pos:start="303:27" pos:end="303:33">x11grab</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:40">width</name></name> <operator pos:start="303:42" pos:end="303:42">*</operator> <name pos:start="303:44" pos:end="303:58"><name pos:start="303:44" pos:end="303:50">x11grab</name><operator pos:start="303:51" pos:end="303:52">-&gt;</operator><name pos:start="303:53" pos:end="303:58">height</name></name> <operator pos:start="303:60" pos:end="303:60">*</operator> <name pos:start="303:62" pos:end="303:82"><name pos:start="303:62" pos:end="303:66">image</name><operator pos:start="303:67" pos:end="303:68">-&gt;</operator><name pos:start="303:69" pos:end="303:82">bits_per_pixel</name></name><operator pos:start="303:83" pos:end="303:83">/</operator><literal type="number" pos:start="303:84" pos:end="303:84">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:23"><expr pos:start="305:5" pos:end="305:22"><name pos:start="305:5" pos:end="305:16"><name pos:start="305:5" pos:end="305:11">x11grab</name><operator pos:start="305:12" pos:end="305:13">-&gt;</operator><name pos:start="305:14" pos:end="305:16">dpy</name></name> <operator pos:start="305:18" pos:end="305:18">=</operator> <name pos:start="305:20" pos:end="305:22">dpy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="307:5" pos:end="307:69"><expr pos:start="307:5" pos:end="307:68"><name pos:start="307:5" pos:end="307:22"><name pos:start="307:5" pos:end="307:11">x11grab</name><operator pos:start="307:12" pos:end="307:13">-&gt;</operator><name pos:start="307:14" pos:end="307:22">time_base</name></name>  <operator pos:start="307:25" pos:end="307:25">=</operator> <operator pos:start="307:27" pos:end="307:27">(</operator><name pos:start="307:28" pos:end="307:37">AVRational</name><operator pos:start="307:38" pos:end="307:38">)</operator><block pos:start="307:39" pos:end="307:68">{<expr pos:start="307:40" pos:end="307:52"><name pos:start="307:40" pos:end="307:52"><name pos:start="307:40" pos:end="307:48">framerate</name><operator pos:start="307:49" pos:end="307:49">.</operator><name pos:start="307:50" pos:end="307:52">den</name></name></expr>, <expr pos:start="307:55" pos:end="307:67"><name pos:start="307:55" pos:end="307:67"><name pos:start="307:55" pos:end="307:63">framerate</name><operator pos:start="307:64" pos:end="307:64">.</operator><name pos:start="307:65" pos:end="307:67">num</name></name></expr>}</block></expr>;</expr_stmt>

    <expr_stmt pos:start="309:5" pos:end="309:68"><expr pos:start="309:5" pos:end="309:67"><name pos:start="309:5" pos:end="309:23"><name pos:start="309:5" pos:end="309:11">x11grab</name><operator pos:start="309:12" pos:end="309:13">-&gt;</operator><name pos:start="309:14" pos:end="309:23">time_frame</name></name> <operator pos:start="309:25" pos:end="309:25">=</operator> <call pos:start="309:27" pos:end="309:38"><name pos:start="309:27" pos:end="309:36">av_gettime</name><argument_list pos:start="309:37" pos:end="309:38">()</argument_list></call> <operator pos:start="309:40" pos:end="309:40">/</operator> <call pos:start="309:42" pos:end="309:67"><name pos:start="309:42" pos:end="309:47">av_q2d</name><argument_list pos:start="309:48" pos:end="309:67">(<argument pos:start="309:49" pos:end="309:66"><expr pos:start="309:49" pos:end="309:66"><name pos:start="309:49" pos:end="309:66"><name pos:start="309:49" pos:end="309:55">x11grab</name><operator pos:start="309:56" pos:end="309:57">-&gt;</operator><name pos:start="309:58" pos:end="309:66">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="311:5" pos:end="311:27"><expr pos:start="311:5" pos:end="311:26"><name pos:start="311:5" pos:end="311:18"><name pos:start="311:5" pos:end="311:11">x11grab</name><operator pos:start="311:12" pos:end="311:13">-&gt;</operator><name pos:start="311:14" pos:end="311:18">x_off</name></name> <operator pos:start="311:20" pos:end="311:20">=</operator> <name pos:start="311:22" pos:end="311:26">x_off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="313:5" pos:end="313:27"><expr pos:start="313:5" pos:end="313:26"><name pos:start="313:5" pos:end="313:18"><name pos:start="313:5" pos:end="313:11">x11grab</name><operator pos:start="313:12" pos:end="313:13">-&gt;</operator><name pos:start="313:14" pos:end="313:18">y_off</name></name> <operator pos:start="313:20" pos:end="313:20">=</operator> <name pos:start="313:22" pos:end="313:26">y_off</name></expr>;</expr_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:27"><expr pos:start="315:5" pos:end="315:26"><name pos:start="315:5" pos:end="315:18"><name pos:start="315:5" pos:end="315:11">x11grab</name><operator pos:start="315:12" pos:end="315:13">-&gt;</operator><name pos:start="315:14" pos:end="315:18">image</name></name> <operator pos:start="315:20" pos:end="315:20">=</operator> <name pos:start="315:22" pos:end="315:26">image</name></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:31"><expr pos:start="317:5" pos:end="317:30"><name pos:start="317:5" pos:end="317:20"><name pos:start="317:5" pos:end="317:11">x11grab</name><operator pos:start="317:12" pos:end="317:13">-&gt;</operator><name pos:start="317:14" pos:end="317:20">use_shm</name></name> <operator pos:start="317:22" pos:end="317:22">=</operator> <name pos:start="317:24" pos:end="317:30">use_shm</name></expr>;</expr_stmt>



    <expr_stmt pos:start="321:5" pos:end="321:47"><expr pos:start="321:5" pos:end="321:46"><name pos:start="321:5" pos:end="321:25"><name pos:start="321:5" pos:end="321:6">st</name><operator pos:start="321:7" pos:end="321:8">-&gt;</operator><name pos:start="321:9" pos:end="321:13">codec</name><operator pos:start="321:14" pos:end="321:15">-&gt;</operator><name pos:start="321:16" pos:end="321:25">codec_type</name></name> <operator pos:start="321:27" pos:end="321:27">=</operator> <name pos:start="321:29" pos:end="321:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:44"><expr pos:start="323:5" pos:end="323:43"><name pos:start="323:5" pos:end="323:23"><name pos:start="323:5" pos:end="323:6">st</name><operator pos:start="323:7" pos:end="323:8">-&gt;</operator><name pos:start="323:9" pos:end="323:13">codec</name><operator pos:start="323:14" pos:end="323:15">-&gt;</operator><name pos:start="323:16" pos:end="323:23">codec_id</name></name> <operator pos:start="323:25" pos:end="323:25">=</operator> <name pos:start="323:27" pos:end="323:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:39"><expr pos:start="325:5" pos:end="325:38"><name pos:start="325:5" pos:end="325:20"><name pos:start="325:5" pos:end="325:6">st</name><operator pos:start="325:7" pos:end="325:8">-&gt;</operator><name pos:start="325:9" pos:end="325:13">codec</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:20">width</name></name>  <operator pos:start="325:23" pos:end="325:23">=</operator> <name pos:start="325:25" pos:end="325:38"><name pos:start="325:25" pos:end="325:31">x11grab</name><operator pos:start="325:32" pos:end="325:33">-&gt;</operator><name pos:start="325:34" pos:end="325:38">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:40"><expr pos:start="327:5" pos:end="327:39"><name pos:start="327:5" pos:end="327:21"><name pos:start="327:5" pos:end="327:6">st</name><operator pos:start="327:7" pos:end="327:8">-&gt;</operator><name pos:start="327:9" pos:end="327:13">codec</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:21">height</name></name> <operator pos:start="327:23" pos:end="327:23">=</operator> <name pos:start="327:25" pos:end="327:39"><name pos:start="327:25" pos:end="327:31">x11grab</name><operator pos:start="327:32" pos:end="327:33">-&gt;</operator><name pos:start="327:34" pos:end="327:39">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:38"><expr pos:start="329:5" pos:end="329:37"><name pos:start="329:5" pos:end="329:22"><name pos:start="329:5" pos:end="329:6">st</name><operator pos:start="329:7" pos:end="329:8">-&gt;</operator><name pos:start="329:9" pos:end="329:13">codec</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:22">pix_fmt</name></name> <operator pos:start="329:24" pos:end="329:24">=</operator> <name pos:start="329:26" pos:end="329:37">input_pixfmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:46"><expr pos:start="331:5" pos:end="331:45"><name pos:start="331:5" pos:end="331:24"><name pos:start="331:5" pos:end="331:6">st</name><operator pos:start="331:7" pos:end="331:8">-&gt;</operator><name pos:start="331:9" pos:end="331:13">codec</name><operator pos:start="331:14" pos:end="331:15">-&gt;</operator><name pos:start="331:16" pos:end="331:24">time_base</name></name> <operator pos:start="331:26" pos:end="331:26">=</operator> <name pos:start="331:28" pos:end="331:45"><name pos:start="331:28" pos:end="331:34">x11grab</name><operator pos:start="331:35" pos:end="331:36">-&gt;</operator><name pos:start="331:37" pos:end="331:45">time_base</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:81"><expr pos:start="333:5" pos:end="333:80"><name pos:start="333:5" pos:end="333:23"><name pos:start="333:5" pos:end="333:6">st</name><operator pos:start="333:7" pos:end="333:8">-&gt;</operator><name pos:start="333:9" pos:end="333:13">codec</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:23">bit_rate</name></name> <operator pos:start="333:25" pos:end="333:25">=</operator> <name pos:start="333:27" pos:end="333:45"><name pos:start="333:27" pos:end="333:33">x11grab</name><operator pos:start="333:34" pos:end="333:35">-&gt;</operator><name pos:start="333:36" pos:end="333:45">frame_size</name></name> <operator pos:start="333:47" pos:end="333:47">*</operator> <literal type="number" pos:start="333:49" pos:end="333:49">1</literal><operator pos:start="333:50" pos:end="333:50">/</operator><call pos:start="333:51" pos:end="333:76"><name pos:start="333:51" pos:end="333:56">av_q2d</name><argument_list pos:start="333:57" pos:end="333:76">(<argument pos:start="333:58" pos:end="333:75"><expr pos:start="333:58" pos:end="333:75"><name pos:start="333:58" pos:end="333:75"><name pos:start="333:58" pos:end="333:64">x11grab</name><operator pos:start="333:65" pos:end="333:66">-&gt;</operator><name pos:start="333:67" pos:end="333:75">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="333:78" pos:end="333:78">*</operator> <literal type="number" pos:start="333:80" pos:end="333:80">8</literal></expr>;</expr_stmt>



<label pos:start="337:1" pos:end="337:4"><name pos:start="337:1" pos:end="337:3">out</name>:</label>


    <return pos:start="340:5" pos:end="340:15">return <expr pos:start="340:12" pos:end="340:14"><name pos:start="340:12" pos:end="340:14">ret</name></expr>;</return>

</block_content>}</block></unit>
