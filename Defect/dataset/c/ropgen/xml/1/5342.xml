<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5342.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:48">qio_channel_websock_handshake_io</name><parameter_list pos:start="1:49" pos:end="5:68">(<parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:59">QIOChannel</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">ioc</name></decl></parameter>,

                                                 <parameter pos:start="3:50" pos:end="3:71"><decl pos:start="3:50" pos:end="3:71"><type pos:start="3:50" pos:end="3:71"><name pos:start="3:50" pos:end="3:61">GIOCondition</name></type> <name pos:start="3:63" pos:end="3:71">condition</name></decl></parameter>,

                                                 <parameter pos:start="5:50" pos:end="5:67"><decl pos:start="5:50" pos:end="5:67"><type pos:start="5:50" pos:end="5:67"><name pos:start="5:50" pos:end="5:57">gpointer</name></type> <name pos:start="5:59" pos:end="5:67">user_data</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="65:1">{<block_content pos:start="9:5" pos:end="63:17">

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">QIOTask</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">task</name> <init pos:start="9:19" pos:end="9:29">= <expr pos:start="9:21" pos:end="9:29"><name pos:start="9:21" pos:end="9:29">user_data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="13:35"><decl pos:start="11:5" pos:end="13:34"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">QIOChannelWebsock</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">wioc</name> <init pos:start="11:29" pos:end="13:34">= <expr pos:start="11:31" pos:end="13:34"><call pos:start="11:31" pos:end="13:34"><name pos:start="11:31" pos:end="11:49">QIO_CHANNEL_WEBSOCK</name><argument_list pos:start="11:50" pos:end="13:34">(

        <argument pos:start="13:9" pos:end="13:33"><expr pos:start="13:9" pos:end="13:33"><call pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:27">qio_task_get_source</name><argument_list pos:start="13:28" pos:end="13:33">(<argument pos:start="13:29" pos:end="13:32"><expr pos:start="13:29" pos:end="13:32"><name pos:start="13:29" pos:end="13:32">task</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:57"><expr pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:56"><name pos:start="21:11" pos:end="21:44">qio_channel_websock_handshake_read</name><argument_list pos:start="21:45" pos:end="21:56">(<argument pos:start="21:46" pos:end="21:49"><expr pos:start="21:46" pos:end="21:49"><name pos:start="21:46" pos:end="21:49">wioc</name></expr></argument>, <argument pos:start="21:52" pos:end="21:55"><expr pos:start="21:52" pos:end="21:55"><operator pos:start="21:52" pos:end="21:52">&amp;</operator><name pos:start="21:53" pos:end="21:55">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:21">

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><call pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:48">trace_qio_channel_websock_handshake_fail</name><argument_list pos:start="25:49" pos:end="25:53">(<argument pos:start="25:50" pos:end="25:52"><expr pos:start="25:50" pos:end="25:52"><name pos:start="25:50" pos:end="25:52">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><call pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:22">qio_task_abort</name><argument_list pos:start="27:23" pos:end="27:33">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">task</name></expr></argument>, <argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:18">error_free</name><argument_list pos:start="29:19" pos:end="29:23">(<argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:21">return <expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="35:17">(<expr pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:14">==</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>)</condition> <block pos:start="35:19" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:20">

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><call pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:51">trace_qio_channel_websock_handshake_pending</name><argument_list pos:start="37:52" pos:end="37:65">(<argument pos:start="37:53" pos:end="37:55"><expr pos:start="37:53" pos:end="37:55"><name pos:start="37:53" pos:end="37:55">ioc</name></expr></argument>, <argument pos:start="37:58" pos:end="37:64"><expr pos:start="37:58" pos:end="37:64"><name pos:start="37:58" pos:end="37:64">G_IO_IN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:34">/* need more data still */</comment>

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">TRUE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:29"><expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:14">object_ref</name><argument_list pos:start="47:15" pos:end="47:28">(<argument pos:start="47:16" pos:end="47:27"><expr pos:start="47:16" pos:end="47:27"><call pos:start="47:16" pos:end="47:27"><name pos:start="47:16" pos:end="47:21">OBJECT</name><argument_list pos:start="47:22" pos:end="47:27">(<argument pos:start="47:23" pos:end="47:26"><expr pos:start="47:23" pos:end="47:26"><name pos:start="47:23" pos:end="47:26">task</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><call pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:45">trace_qio_channel_websock_handshake_reply</name><argument_list pos:start="49:46" pos:end="49:50">(<argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:49">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="61:38"><expr pos:start="51:5" pos:end="61:37"><call pos:start="51:5" pos:end="61:37"><name pos:start="51:5" pos:end="51:25">qio_channel_add_watch</name><argument_list pos:start="51:26" pos:end="61:37">(

        <argument pos:start="53:9" pos:end="53:20"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:12">wioc</name><operator pos:start="53:13" pos:end="53:14">-&gt;</operator><name pos:start="53:15" pos:end="53:20">master</name></name></expr></argument>,

        <argument pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:16">G_IO_OUT</name></expr></argument>,

        <argument pos:start="57:9" pos:end="57:42"><expr pos:start="57:9" pos:end="57:42"><name pos:start="57:9" pos:end="57:42">qio_channel_websock_handshake_send</name></expr></argument>,

        <argument pos:start="59:9" pos:end="59:12"><expr pos:start="59:9" pos:end="59:12"><name pos:start="59:9" pos:end="59:12">task</name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:36"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:23">GDestroyNotify</name><operator pos:start="61:24" pos:end="61:24">)</operator><name pos:start="61:25" pos:end="61:36">object_unref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:17">return <expr pos:start="63:12" pos:end="63:16"><name pos:start="63:12" pos:end="63:16">FALSE</name></expr>;</return>

</block_content>}</block></function>
</unit>
