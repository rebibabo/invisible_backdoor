<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22490.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:19">qht_do_lookup</name><parameter_list pos:start="1:20" pos:end="3:53">(<parameter pos:start="1:21" pos:end="1:43"><decl pos:start="1:21" pos:end="1:43"><type pos:start="1:21" pos:end="1:43"><name pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:37">qht_bucket</name></name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">head</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:67"><decl pos:start="1:46" pos:end="1:67"><type pos:start="1:46" pos:end="1:67"><name pos:start="1:46" pos:end="1:62">qht_lookup_func_t</name></type> <name pos:start="1:64" pos:end="1:67">func</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:37"><decl pos:start="3:21" pos:end="3:37"><type pos:start="3:21" pos:end="3:37"><specifier pos:start="3:21" pos:end="3:25">const</specifier> <name pos:start="3:27" pos:end="3:30">void</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">userp</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">uint32_t</name></type> <name pos:start="3:49" pos:end="3:52">hash</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:16">

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">qht_bucket</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">b</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">head</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <do pos:start="13:5" pos:end="43:16">do <block pos:start="13:8" pos:end="43:5">{<block_content pos:start="15:9" pos:end="41:38">

        <for pos:start="15:9" pos:end="39:9">for <control pos:start="15:13" pos:end="15:48">(<init pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:18"><name pos:start="15:14" pos:end="15:14">i</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <literal type="number" pos:start="15:18" pos:end="15:18">0</literal></expr>;</init> <condition pos:start="15:21" pos:end="15:43"><expr pos:start="15:21" pos:end="15:42"><name pos:start="15:21" pos:end="15:21">i</name> <operator pos:start="15:23" pos:end="15:23">&lt;</operator> <name pos:start="15:25" pos:end="15:42">QHT_BUCKET_ENTRIES</name></expr>;</condition> <incr pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><name pos:start="15:45" pos:end="15:45">i</name><operator pos:start="15:46" pos:end="15:47">++</operator></expr></incr>)</control> <block pos:start="15:50" pos:end="39:9">{<block_content pos:start="17:13" pos:end="37:13">

            <if_stmt pos:start="17:13" pos:end="37:13"><if pos:start="17:13" pos:end="37:13">if <condition pos:start="17:16" pos:end="17:37">(<expr pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:28"><name pos:start="17:17" pos:end="17:17">b</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:25">hashes</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">i</name></expr>]</index></name> <operator pos:start="17:30" pos:end="17:31">==</operator> <name pos:start="17:33" pos:end="17:36">hash</name></expr>)</condition> <block pos:start="17:39" pos:end="37:13">{<block_content pos:start="27:17" pos:end="35:17">

                <comment type="block" pos:start="19:17" pos:end="25:19">/* The pointer is dereferenced before seqlock_read_retry,

                 * so (unlike qht_insert__locked) we need to use

                 * atomic_rcu_read here.

                 */</comment>

                <decl_stmt pos:start="27:17" pos:end="27:59"><decl pos:start="27:17" pos:end="27:58"><type pos:start="27:17" pos:end="27:22"><name pos:start="27:17" pos:end="27:20">void</name> <modifier pos:start="27:22" pos:end="27:22">*</modifier></type><name pos:start="27:23" pos:end="27:23">p</name> <init pos:start="27:25" pos:end="27:58">= <expr pos:start="27:27" pos:end="27:58"><call pos:start="27:27" pos:end="27:58"><name pos:start="27:27" pos:end="27:41">atomic_rcu_read</name><argument_list pos:start="27:42" pos:end="27:58">(<argument pos:start="27:43" pos:end="27:57"><expr pos:start="27:43" pos:end="27:57"><operator pos:start="27:43" pos:end="27:43">&amp;</operator><name pos:start="27:44" pos:end="27:57"><name pos:start="27:44" pos:end="27:44">b</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:54">pointers</name><index pos:start="27:55" pos:end="27:57">[<expr pos:start="27:56" pos:end="27:56"><name pos:start="27:56" pos:end="27:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="31:17" pos:end="35:17"><if pos:start="31:17" pos:end="35:17">if <condition pos:start="31:20" pos:end="31:56">(<expr pos:start="31:21" pos:end="31:55"><call pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:26">likely</name><argument_list pos:start="31:27" pos:end="31:29">(<argument pos:start="31:28" pos:end="31:28"><expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">p</name></expr></argument>)</argument_list></call> <operator pos:start="31:31" pos:end="31:32">&amp;&amp;</operator> <call pos:start="31:34" pos:end="31:55"><name pos:start="31:34" pos:end="31:39">likely</name><argument_list pos:start="31:40" pos:end="31:55">(<argument pos:start="31:41" pos:end="31:54"><expr pos:start="31:41" pos:end="31:54"><call pos:start="31:41" pos:end="31:54"><name pos:start="31:41" pos:end="31:44">func</name><argument_list pos:start="31:45" pos:end="31:54">(<argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><name pos:start="31:46" pos:end="31:46">p</name></expr></argument>, <argument pos:start="31:49" pos:end="31:53"><expr pos:start="31:49" pos:end="31:53"><name pos:start="31:49" pos:end="31:53">userp</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:58" pos:end="35:17">{<block_content pos:start="33:21" pos:end="33:29">

                    <return pos:start="33:21" pos:end="33:29">return <expr pos:start="33:28" pos:end="33:28"><name pos:start="33:28" pos:end="33:28">p</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:9">b</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:27">atomic_rcu_read</name><argument_list pos:start="41:28" pos:end="41:37">(<argument pos:start="41:29" pos:end="41:36"><expr pos:start="41:29" pos:end="41:36"><operator pos:start="41:29" pos:end="41:29">&amp;</operator><name pos:start="41:30" pos:end="41:36"><name pos:start="41:30" pos:end="41:30">b</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:36">next</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="43:13" pos:end="43:15">(<expr pos:start="43:14" pos:end="43:14"><name pos:start="43:14" pos:end="43:14">b</name></expr>)</condition>;</do>



    <return pos:start="47:5" pos:end="47:16">return <expr pos:start="47:12" pos:end="47:15"><name pos:start="47:12" pos:end="47:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
