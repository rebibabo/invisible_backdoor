<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13527.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">test_visitor_in_alternate</name><parameter_list pos:start="1:38" pos:end="3:57">(<parameter pos:start="1:39" pos:end="1:64"><decl pos:start="1:39" pos:end="1:64"><type pos:start="1:39" pos:end="1:64"><name pos:start="1:39" pos:end="1:58">TestInputVisitorData</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:56"><decl pos:start="3:39" pos:end="3:56"><type pos:start="3:39" pos:end="3:56"><specifier pos:start="3:39" pos:end="3:43">const</specifier> <name pos:start="3:45" pos:end="3:48">void</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:56">unused</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:36">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">Visitor</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:14">err</name> <init pos:start="9:16" pos:end="9:21">= <expr pos:start="9:18" pos:end="9:21"><name pos:start="9:18" pos:end="9:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">UserDefAlternate</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:25">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:44"><expr pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:5">v</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:31">visitor_input_test_init</name><argument_list pos:start="15:32" pos:end="15:43">(<argument pos:start="15:33" pos:end="15:36"><expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">data</name></expr></argument>, <argument pos:start="15:39" pos:end="15:42"><expr pos:start="15:39" pos:end="15:42"><literal type="string" pos:start="15:39" pos:end="15:42">"42"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:61"><expr pos:start="17:5" pos:end="17:60"><call pos:start="17:5" pos:end="17:60"><name pos:start="17:5" pos:end="17:31">visit_type_UserDefAlternate</name><argument_list pos:start="17:32" pos:end="17:60">(<argument pos:start="17:33" pos:end="17:33"><expr pos:start="17:33" pos:end="17:33"><name pos:start="17:33" pos:end="17:33">v</name></expr></argument>, <argument pos:start="17:36" pos:end="17:39"><expr pos:start="17:36" pos:end="17:39"><operator pos:start="17:36" pos:end="17:36">&amp;</operator><name pos:start="17:37" pos:end="17:39">tmp</name></expr></argument>, <argument pos:start="17:42" pos:end="17:45"><expr pos:start="17:42" pos:end="17:45"><name pos:start="17:42" pos:end="17:45">NULL</name></expr></argument>, <argument pos:start="17:48" pos:end="17:59"><expr pos:start="17:48" pos:end="17:59"><operator pos:start="17:48" pos:end="17:48">&amp;</operator><name pos:start="17:49" pos:end="17:59">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:62"><expr pos:start="19:5" pos:end="19:61"><call pos:start="19:5" pos:end="19:61"><name pos:start="19:5" pos:end="19:19">g_assert_cmpint</name><argument_list pos:start="19:20" pos:end="19:61">(<argument pos:start="19:21" pos:end="19:29"><expr pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:29"><name pos:start="19:21" pos:end="19:23">tmp</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:29">type</name></name></expr></argument>, <argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><operator pos:start="19:32" pos:end="19:33">==</operator></expr></argument>, <argument pos:start="19:36" pos:end="19:60"><expr pos:start="19:36" pos:end="19:60"><name pos:start="19:36" pos:end="19:60">USER_DEF_ALTERNATE_KIND_I</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:19">g_assert_cmpint</name><argument_list pos:start="21:20" pos:end="21:37">(<argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:28"><name pos:start="21:21" pos:end="21:23">tmp</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:26">u</name><operator pos:start="21:27" pos:end="21:27">.</operator><name pos:start="21:28" pos:end="21:28">i</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><operator pos:start="21:31" pos:end="21:32">==</operator></expr></argument>, <argument pos:start="21:35" pos:end="21:36"><expr pos:start="21:35" pos:end="21:36"><literal type="number" pos:start="21:35" pos:end="21:36">42</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:36"><expr pos:start="23:5" pos:end="23:35"><call pos:start="23:5" pos:end="23:35"><name pos:start="23:5" pos:end="23:30">qapi_free_UserDefAlternate</name><argument_list pos:start="23:31" pos:end="23:35">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:5">v</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:31">visitor_input_test_init</name><argument_list pos:start="27:32" pos:end="27:49">(<argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">data</name></expr></argument>, <argument pos:start="27:39" pos:end="27:48"><expr pos:start="27:39" pos:end="27:48"><literal type="string" pos:start="27:39" pos:end="27:48">"'string'"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:61"><expr pos:start="29:5" pos:end="29:60"><call pos:start="29:5" pos:end="29:60"><name pos:start="29:5" pos:end="29:31">visit_type_UserDefAlternate</name><argument_list pos:start="29:32" pos:end="29:60">(<argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><name pos:start="29:33" pos:end="29:33">v</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:39">tmp</name></expr></argument>, <argument pos:start="29:42" pos:end="29:45"><expr pos:start="29:42" pos:end="29:45"><name pos:start="29:42" pos:end="29:45">NULL</name></expr></argument>, <argument pos:start="29:48" pos:end="29:59"><expr pos:start="29:48" pos:end="29:59"><operator pos:start="29:48" pos:end="29:48">&amp;</operator><name pos:start="29:49" pos:end="29:59">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:19">g_assert_cmpint</name><argument_list pos:start="31:20" pos:end="31:61">(<argument pos:start="31:21" pos:end="31:29"><expr pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:29"><name pos:start="31:21" pos:end="31:23">tmp</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">type</name></name></expr></argument>, <argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><operator pos:start="31:32" pos:end="31:33">==</operator></expr></argument>, <argument pos:start="31:36" pos:end="31:60"><expr pos:start="31:36" pos:end="31:60"><name pos:start="31:36" pos:end="31:60">USER_DEF_ALTERNATE_KIND_S</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:44"><expr pos:start="33:5" pos:end="33:43"><call pos:start="33:5" pos:end="33:43"><name pos:start="33:5" pos:end="33:19">g_assert_cmpstr</name><argument_list pos:start="33:20" pos:end="33:43">(<argument pos:start="33:21" pos:end="33:28"><expr pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:28"><name pos:start="33:21" pos:end="33:23">tmp</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:26">u</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:28">s</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:32"><expr pos:start="33:31" pos:end="33:32"><operator pos:start="33:31" pos:end="33:32">==</operator></expr></argument>, <argument pos:start="33:35" pos:end="33:42"><expr pos:start="33:35" pos:end="33:42"><literal type="string" pos:start="33:35" pos:end="33:42">"string"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><call pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:30">qapi_free_UserDefAlternate</name><argument_list pos:start="35:31" pos:end="35:35">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:47"><expr pos:start="39:5" pos:end="39:46"><name pos:start="39:5" pos:end="39:5">v</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <call pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:31">visitor_input_test_init</name><argument_list pos:start="39:32" pos:end="39:46">(<argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">data</name></expr></argument>, <argument pos:start="39:39" pos:end="39:45"><expr pos:start="39:39" pos:end="39:45"><literal type="string" pos:start="39:39" pos:end="39:45">"false"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><call pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:31">visit_type_UserDefAlternate</name><argument_list pos:start="41:32" pos:end="41:52">(<argument pos:start="41:33" pos:end="41:33"><expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">v</name></expr></argument>, <argument pos:start="41:36" pos:end="41:39"><expr pos:start="41:36" pos:end="41:39"><operator pos:start="41:36" pos:end="41:36">&amp;</operator><name pos:start="41:37" pos:end="41:39">tmp</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><name pos:start="41:42" pos:end="41:45">NULL</name></expr></argument>, <argument pos:start="41:48" pos:end="41:51"><expr pos:start="41:48" pos:end="41:51"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:51">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><call pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:17">(<argument pos:start="43:14" pos:end="43:16"><expr pos:start="43:14" pos:end="43:16"><name pos:start="43:14" pos:end="43:16">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><call pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:14">error_free</name><argument_list pos:start="45:15" pos:end="45:19">(<argument pos:start="45:16" pos:end="45:18"><expr pos:start="45:16" pos:end="45:18"><name pos:start="45:16" pos:end="45:18">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:15"><expr pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:7">err</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <name pos:start="47:11" pos:end="47:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:30">qapi_free_UserDefAlternate</name><argument_list pos:start="49:31" pos:end="49:35">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
