<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8118.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">add_doubles_metadata</name><parameter_list pos:start="1:32" pos:end="5:47">(<parameter pos:start="1:33" pos:end="1:41"><decl pos:start="1:33" pos:end="1:41"><type pos:start="1:33" pos:end="1:41"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:41">count</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:48"><decl pos:start="3:33" pos:end="3:48"><type pos:start="3:33" pos:end="3:48"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:42">char</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:48">name</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:65"><decl pos:start="3:51" pos:end="3:65"><type pos:start="3:51" pos:end="3:65"><specifier pos:start="3:51" pos:end="3:55">const</specifier> <name pos:start="3:57" pos:end="3:60">char</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">sep</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:46"><decl pos:start="5:33" pos:end="5:46"><type pos:start="5:33" pos:end="5:46"><name pos:start="5:33" pos:end="5:43">TiffContext</name> <modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="51:1">{<block_content pos:start="9:5" pos:end="49:13">

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:12">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:10">double</name> <modifier pos:start="13:12" pos:end="13:12">*</modifier></type><name pos:start="13:13" pos:end="13:14">dp</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:35"><if pos:start="17:5" pos:end="19:35">if <condition pos:start="17:8" pos:end="17:57">(<expr pos:start="17:9" pos:end="17:56"><name pos:start="17:9" pos:end="17:13">count</name> <operator pos:start="17:15" pos:end="17:16">&gt;=</operator> <name pos:start="17:18" pos:end="17:24">INT_MAX</name> <operator pos:start="17:26" pos:end="17:26">/</operator> <sizeof pos:start="17:28" pos:end="17:42">sizeof<argument_list pos:start="17:34" pos:end="17:42">(<argument pos:start="17:35" pos:end="17:41"><expr pos:start="17:35" pos:end="17:41"><name pos:start="17:35" pos:end="17:41">int64_t</name></expr></argument>)</argument_list></sizeof> <operator pos:start="17:44" pos:end="17:45">||</operator> <name pos:start="17:47" pos:end="17:51">count</name> <operator pos:start="17:53" pos:end="17:54">&lt;=</operator> <literal type="number" pos:start="17:56" pos:end="17:56">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:35"><block_content pos:start="19:9" pos:end="19:35">

        <return pos:start="19:9" pos:end="19:35">return <expr pos:start="19:16" pos:end="19:34"><name pos:start="19:16" pos:end="19:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:69">(<expr pos:start="21:9" pos:end="21:68"><call pos:start="21:9" pos:end="21:42"><name pos:start="21:9" pos:end="21:34">bytestream2_get_bytes_left</name><argument_list pos:start="21:35" pos:end="21:42">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:41">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:44" pos:end="21:44">&lt;</operator> <name pos:start="21:46" pos:end="21:50">count</name> <operator pos:start="21:52" pos:end="21:52">*</operator> <sizeof pos:start="21:54" pos:end="21:68">sizeof<argument_list pos:start="21:60" pos:end="21:68">(<argument pos:start="21:61" pos:end="21:67"><expr pos:start="21:61" pos:end="21:67"><name pos:start="21:61" pos:end="21:67">int64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:6">dp</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:42"><name pos:start="27:10" pos:end="27:18">av_malloc</name><argument_list pos:start="27:19" pos:end="27:42">(<argument pos:start="27:20" pos:end="27:41"><expr pos:start="27:20" pos:end="27:41"><name pos:start="27:20" pos:end="27:24">count</name> <operator pos:start="27:26" pos:end="27:26">*</operator> <sizeof pos:start="27:28" pos:end="27:41">sizeof<argument_list pos:start="27:34" pos:end="27:41">(<argument pos:start="27:35" pos:end="27:40"><expr pos:start="27:35" pos:end="27:40"><name pos:start="27:35" pos:end="27:40">double</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:31"><if pos:start="29:5" pos:end="31:31">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:11">dp</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:31"><block_content pos:start="31:9" pos:end="31:31">

        <return pos:start="31:9" pos:end="31:31">return <expr pos:start="31:16" pos:end="31:30"><call pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:22">AVERROR</name><argument_list pos:start="31:23" pos:end="31:30">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <for pos:start="35:5" pos:end="37:43">for <control pos:start="35:9" pos:end="35:31">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:26"><expr pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:25">count</name></expr>;</condition> <incr pos:start="35:28" pos:end="35:30"><expr pos:start="35:28" pos:end="35:30"><name pos:start="35:28" pos:end="35:28">i</name><operator pos:start="35:29" pos:end="35:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="37:9" pos:end="37:43"><block_content pos:start="37:9" pos:end="37:43">

        <expr_stmt pos:start="37:9" pos:end="37:43"><expr pos:start="37:9" pos:end="37:42"><name pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:10">dp</name><index pos:start="37:11" pos:end="37:13">[<expr pos:start="37:12" pos:end="37:12"><name pos:start="37:12" pos:end="37:12">i</name></expr>]</index></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:42"><name pos:start="37:17" pos:end="37:27">tget_double</name><argument_list pos:start="37:28" pos:end="37:42">(<argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:34">gb</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:41"><expr pos:start="37:37" pos:end="37:41"><name pos:start="37:37" pos:end="37:41"><name pos:start="37:37" pos:end="37:37">s</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:41">le</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:6">ap</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:36"><name pos:start="39:10" pos:end="39:20">doubles2str</name><argument_list pos:start="39:21" pos:end="39:36">(<argument pos:start="39:22" pos:end="39:23"><expr pos:start="39:22" pos:end="39:23"><name pos:start="39:22" pos:end="39:23">dp</name></expr></argument>, <argument pos:start="39:26" pos:end="39:30"><expr pos:start="39:26" pos:end="39:30"><name pos:start="39:26" pos:end="39:30">count</name></expr></argument>, <argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">sep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:18"><expr pos:start="41:5" pos:end="41:17"><call pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:12">av_freep</name><argument_list pos:start="41:13" pos:end="41:17">(<argument pos:start="41:14" pos:end="41:16"><expr pos:start="41:14" pos:end="41:16"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:16">dp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:31"><if pos:start="43:5" pos:end="45:31">if <condition pos:start="43:8" pos:end="43:12">(<expr pos:start="43:9" pos:end="43:11"><operator pos:start="43:9" pos:end="43:9">!</operator><name pos:start="43:10" pos:end="43:11">ap</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:31"><block_content pos:start="45:9" pos:end="45:31">

        <return pos:start="45:9" pos:end="45:31">return <expr pos:start="45:16" pos:end="45:30"><call pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:92"><expr pos:start="47:5" pos:end="47:91"><call pos:start="47:5" pos:end="47:91"><name pos:start="47:5" pos:end="47:15">av_dict_set</name><argument_list pos:start="47:16" pos:end="47:91">(<argument pos:start="47:17" pos:end="47:55"><expr pos:start="47:17" pos:end="47:55"><call pos:start="47:17" pos:end="47:55"><name pos:start="47:17" pos:end="47:42">avpriv_frame_get_metadatap</name><argument_list pos:start="47:43" pos:end="47:55">(<argument pos:start="47:44" pos:end="47:54"><expr pos:start="47:44" pos:end="47:54"><operator pos:start="47:44" pos:end="47:44">&amp;</operator><name pos:start="47:45" pos:end="47:54"><name pos:start="47:45" pos:end="47:45">s</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:54">picture</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:58" pos:end="47:61"><expr pos:start="47:58" pos:end="47:61"><name pos:start="47:58" pos:end="47:61">name</name></expr></argument>, <argument pos:start="47:64" pos:end="47:65"><expr pos:start="47:64" pos:end="47:65"><name pos:start="47:64" pos:end="47:65">ap</name></expr></argument>, <argument pos:start="47:68" pos:end="47:90"><expr pos:start="47:68" pos:end="47:90"><name pos:start="47:68" pos:end="47:90">AV_DICT_DONT_STRDUP_VAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
