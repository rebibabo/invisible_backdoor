<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10856.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">pmp_header</name><parameter_list pos:start="1:22" pos:end="1:41">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:37">AVFormatContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="171:1">{<block_content pos:start="5:5" pos:end="169:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PMPContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">pmp</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">tb_num</name></decl>, <decl pos:start="9:17" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:22">tb_den</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:22">index_cnt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">audio_codec_id</name> <init pos:start="13:24" pos:end="13:41">= <expr pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:41">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">srate</name></decl>, <decl pos:start="15:16" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:23">channels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint64_t</name></type> <name pos:start="19:14" pos:end="19:16">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:34"><decl pos:start="21:5" pos:end="21:33"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">int64_t</name></type> <name pos:start="21:13" pos:end="21:17">fsize</name> <init pos:start="21:19" pos:end="21:33">= <expr pos:start="21:21" pos:end="21:33"><call pos:start="21:21" pos:end="21:33"><name pos:start="21:21" pos:end="21:29">avio_size</name><argument_list pos:start="21:30" pos:end="21:33">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="25:49"><decl pos:start="25:5" pos:end="25:48"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">AVStream</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:17">vst</name> <init pos:start="25:19" pos:end="25:48">= <expr pos:start="25:21" pos:end="25:48"><call pos:start="25:21" pos:end="25:48"><name pos:start="25:21" pos:end="25:39">avformat_new_stream</name><argument_list pos:start="25:40" pos:end="25:48">(<argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">s</name></expr></argument>, <argument pos:start="25:44" pos:end="25:47"><expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="27:5" pos:end="29:31"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">vst</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:7">vst</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:14">codec</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:26">codec_type</name></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:47">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><call pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:13">avio_skip</name><argument_list pos:start="33:14" pos:end="33:20">(<argument pos:start="33:15" pos:end="33:16"><expr pos:start="33:15" pos:end="33:16"><name pos:start="33:15" pos:end="33:16">pb</name></expr></argument>, <argument pos:start="33:19" pos:end="33:19"><expr pos:start="33:19" pos:end="33:19"><literal type="number" pos:start="33:19" pos:end="33:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="35:5" pos:end="55:5">switch <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><call pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:21">avio_rl32</name><argument_list pos:start="35:22" pos:end="35:25">(<argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><name pos:start="35:23" pos:end="35:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:28" pos:end="55:5">{<block_content pos:start="37:5" pos:end="53:14">

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">0</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:11">vst</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:18">codec</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:28">codec_id</name></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <name pos:start="39:32" pos:end="39:48">AV_CODEC_ID_MPEG4</name></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">1</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:48"><expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:11">vst</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:18">codec</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:28">codec_id</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:47">AV_CODEC_ID_H264</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <default pos:start="49:5" pos:end="49:12">default:</default>

        <expr_stmt pos:start="51:9" pos:end="51:62"><expr pos:start="51:9" pos:end="51:61"><call pos:start="51:9" pos:end="51:61"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:61">(<argument pos:start="51:16" pos:end="51:16"><expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">s</name></expr></argument>, <argument pos:start="51:19" pos:end="51:30"><expr pos:start="51:19" pos:end="51:30"><name pos:start="51:19" pos:end="51:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:33" pos:end="51:60"><expr pos:start="51:33" pos:end="51:60"><literal type="string" pos:start="51:33" pos:end="51:60">"Unsupported video format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:13">index_cnt</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:25">avio_rl32</name><argument_list pos:start="57:26" pos:end="57:29">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:7">vst</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:14">codec</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:21">width</name></name>  <operator pos:start="59:24" pos:end="59:24">=</operator> <call pos:start="59:26" pos:end="59:38"><name pos:start="59:26" pos:end="59:34">avio_rl32</name><argument_list pos:start="59:35" pos:end="59:38">(<argument pos:start="59:36" pos:end="59:37"><expr pos:start="59:36" pos:end="59:37"><name pos:start="59:36" pos:end="59:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:39"><expr pos:start="61:5" pos:end="61:38"><name pos:start="61:5" pos:end="61:22"><name pos:start="61:5" pos:end="61:7">vst</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:14">codec</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">height</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:38"><name pos:start="61:26" pos:end="61:34">avio_rl32</name><argument_list pos:start="61:35" pos:end="61:38">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:10">tb_num</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:22">avio_rl32</name><argument_list pos:start="65:23" pos:end="65:26">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:10">tb_den</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:26"><name pos:start="67:14" pos:end="67:22">avio_rl32</name><argument_list pos:start="67:23" pos:end="67:26">(<argument pos:start="67:24" pos:end="67:25"><expr pos:start="67:24" pos:end="67:25"><name pos:start="67:24" pos:end="67:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:49"><expr pos:start="69:5" pos:end="69:48"><call pos:start="69:5" pos:end="69:48"><name pos:start="69:5" pos:end="69:23">avpriv_set_pts_info</name><argument_list pos:start="69:24" pos:end="69:48">(<argument pos:start="69:25" pos:end="69:27"><expr pos:start="69:25" pos:end="69:27"><name pos:start="69:25" pos:end="69:27">vst</name></expr></argument>, <argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><literal type="number" pos:start="69:30" pos:end="69:31">32</literal></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><name pos:start="69:34" pos:end="69:39">tb_num</name></expr></argument>, <argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><name pos:start="69:42" pos:end="69:47">tb_den</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:18"><name pos:start="71:5" pos:end="71:7">vst</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:18">nb_frames</name></name> <operator pos:start="71:20" pos:end="71:20">=</operator> <name pos:start="71:22" pos:end="71:30">index_cnt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:17"><name pos:start="73:5" pos:end="73:7">vst</name><operator pos:start="73:8" pos:end="73:9">-&gt;</operator><name pos:start="73:10" pos:end="73:17">duration</name></name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:29">index_cnt</name></expr>;</expr_stmt>



    <switch pos:start="77:5" pos:end="99:5">switch <condition pos:start="77:12" pos:end="77:26">(<expr pos:start="77:13" pos:end="77:25"><call pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:21">avio_rl32</name><argument_list pos:start="77:22" pos:end="77:25">(<argument pos:start="77:23" pos:end="77:24"><expr pos:start="77:23" pos:end="77:24"><name pos:start="77:23" pos:end="77:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="77:28" pos:end="99:5">{<block_content pos:start="79:5" pos:end="97:14">

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">0</literal></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:22">audio_codec_id</name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:40">AV_CODEC_ID_MP3</name></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:11">case <expr pos:start="85:10" pos:end="85:10"><literal type="number" pos:start="85:10" pos:end="85:10">1</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:69"><expr pos:start="87:9" pos:end="87:68"><call pos:start="87:9" pos:end="87:68"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:68">(<argument pos:start="87:16" pos:end="87:16"><expr pos:start="87:16" pos:end="87:16"><name pos:start="87:16" pos:end="87:16">s</name></expr></argument>, <argument pos:start="87:19" pos:end="87:30"><expr pos:start="87:19" pos:end="87:30"><name pos:start="87:19" pos:end="87:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:33" pos:end="87:67"><expr pos:start="87:33" pos:end="87:67"><literal type="string" pos:start="87:33" pos:end="87:67">"AAC not yet correctly supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:22">audio_codec_id</name> <operator pos:start="89:24" pos:end="89:24">=</operator> <name pos:start="89:26" pos:end="89:40">AV_CODEC_ID_AAC</name></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <default pos:start="93:5" pos:end="93:12">default:</default>

        <expr_stmt pos:start="95:9" pos:end="95:62"><expr pos:start="95:9" pos:end="95:61"><call pos:start="95:9" pos:end="95:61"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:61">(<argument pos:start="95:16" pos:end="95:16"><expr pos:start="95:16" pos:end="95:16"><name pos:start="95:16" pos:end="95:16">s</name></expr></argument>, <argument pos:start="95:19" pos:end="95:30"><expr pos:start="95:19" pos:end="95:30"><name pos:start="95:19" pos:end="95:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:33" pos:end="95:60"><expr pos:start="95:33" pos:end="95:60"><literal type="string" pos:start="95:33" pos:end="95:60">"Unsupported audio format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:7">pmp</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:20">num_streams</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:32">avio_rl16</name><argument_list pos:start="101:33" pos:end="101:36">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">pb</name></expr></argument>)</argument_list></call> <operator pos:start="101:38" pos:end="101:38">+</operator> <literal type="number" pos:start="101:40" pos:end="101:40">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:22"><expr pos:start="103:5" pos:end="103:21"><call pos:start="103:5" pos:end="103:21"><name pos:start="103:5" pos:end="103:13">avio_skip</name><argument_list pos:start="103:14" pos:end="103:21">(<argument pos:start="103:15" pos:end="103:16"><expr pos:start="103:15" pos:end="103:16"><name pos:start="103:15" pos:end="103:16">pb</name></expr></argument>, <argument pos:start="103:19" pos:end="103:20"><expr pos:start="103:19" pos:end="103:20"><literal type="number" pos:start="103:19" pos:end="103:20">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:26"><expr pos:start="105:5" pos:end="105:25"><name pos:start="105:5" pos:end="105:9">srate</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <call pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:21">avio_rl32</name><argument_list pos:start="105:22" pos:end="105:25">(<argument pos:start="105:23" pos:end="105:24"><expr pos:start="105:23" pos:end="105:24"><name pos:start="105:23" pos:end="105:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:33"><expr pos:start="107:5" pos:end="107:32"><name pos:start="107:5" pos:end="107:12">channels</name> <operator pos:start="107:14" pos:end="107:14">=</operator> <call pos:start="107:16" pos:end="107:28"><name pos:start="107:16" pos:end="107:24">avio_rl32</name><argument_list pos:start="107:25" pos:end="107:28">(<argument pos:start="107:26" pos:end="107:27"><expr pos:start="107:26" pos:end="107:27"><name pos:start="107:26" pos:end="107:27">pb</name></expr></argument>)</argument_list></call> <operator pos:start="107:30" pos:end="107:30">+</operator> <literal type="number" pos:start="107:32" pos:end="107:32">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:38"><expr pos:start="109:5" pos:end="109:37"><name pos:start="109:5" pos:end="109:7">pos</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <call pos:start="109:11" pos:end="109:23"><name pos:start="109:11" pos:end="109:19">avio_tell</name><argument_list pos:start="109:20" pos:end="109:23">(<argument pos:start="109:21" pos:end="109:22"><expr pos:start="109:21" pos:end="109:22"><name pos:start="109:21" pos:end="109:22">pb</name></expr></argument>)</argument_list></call> <operator pos:start="109:25" pos:end="109:25">+</operator> <literal type="number" pos:start="109:27" pos:end="109:27">4</literal><operator pos:start="109:28" pos:end="109:28">*</operator><name pos:start="109:29" pos:end="109:37">index_cnt</name></expr>;</expr_stmt>

    <for pos:start="111:5" pos:end="147:5">for <control pos:start="111:9" pos:end="111:35">(<init pos:start="111:10" pos:end="111:15"><expr pos:start="111:10" pos:end="111:14"><name pos:start="111:10" pos:end="111:10">i</name> <operator pos:start="111:12" pos:end="111:12">=</operator> <literal type="number" pos:start="111:14" pos:end="111:14">0</literal></expr>;</init> <condition pos:start="111:17" pos:end="111:30"><expr pos:start="111:17" pos:end="111:29"><name pos:start="111:17" pos:end="111:17">i</name> <operator pos:start="111:19" pos:end="111:19">&lt;</operator> <name pos:start="111:21" pos:end="111:29">index_cnt</name></expr>;</condition> <incr pos:start="111:32" pos:end="111:34"><expr pos:start="111:32" pos:end="111:34"><name pos:start="111:32" pos:end="111:32">i</name><operator pos:start="111:33" pos:end="111:34">++</operator></expr></incr>)</control> <block pos:start="111:37" pos:end="147:5">{<block_content pos:start="113:9" pos:end="145:9">

        <decl_stmt pos:start="113:9" pos:end="113:38"><decl pos:start="113:9" pos:end="113:37"><type pos:start="113:9" pos:end="113:16"><name pos:start="113:9" pos:end="113:16">uint32_t</name></type> <name pos:start="113:18" pos:end="113:21">size</name> <init pos:start="113:23" pos:end="113:37">= <expr pos:start="113:25" pos:end="113:37"><call pos:start="113:25" pos:end="113:37"><name pos:start="113:25" pos:end="113:33">avio_rl32</name><argument_list pos:start="113:34" pos:end="113:37">(<argument pos:start="113:35" pos:end="113:36"><expr pos:start="113:35" pos:end="113:36"><name pos:start="113:35" pos:end="113:36">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="115:9" pos:end="115:52"><decl pos:start="115:9" pos:end="115:51"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:17">flags</name> <init pos:start="115:19" pos:end="115:51">= <expr pos:start="115:21" pos:end="115:51"><ternary pos:start="115:21" pos:end="115:51"><condition pos:start="115:21" pos:end="115:30"><expr pos:start="115:21" pos:end="115:28"><name pos:start="115:21" pos:end="115:24">size</name> <operator pos:start="115:26" pos:end="115:26">&amp;</operator> <literal type="number" pos:start="115:28" pos:end="115:28">1</literal></expr> ?</condition><then pos:start="115:32" pos:end="115:47"> <expr pos:start="115:32" pos:end="115:47"><name pos:start="115:32" pos:end="115:47">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="115:49" pos:end="115:51">: <expr pos:start="115:51" pos:end="115:51"><literal type="number" pos:start="115:51" pos:end="115:51">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:25">(<expr pos:start="117:13" pos:end="117:24"><call pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:20">url_feof</name><argument_list pos:start="117:21" pos:end="117:24">(<argument pos:start="117:22" pos:end="117:23"><expr pos:start="117:22" pos:end="117:23"><name pos:start="117:22" pos:end="117:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:27" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:39">

            <expr_stmt pos:start="119:13" pos:end="119:78"><expr pos:start="119:13" pos:end="119:77"><call pos:start="119:13" pos:end="119:77"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:77">(<argument pos:start="119:20" pos:end="119:20"><expr pos:start="119:20" pos:end="119:20"><name pos:start="119:20" pos:end="119:20">s</name></expr></argument>, <argument pos:start="119:23" pos:end="119:34"><expr pos:start="119:23" pos:end="119:34"><name pos:start="119:23" pos:end="119:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="119:37" pos:end="119:76"><expr pos:start="119:37" pos:end="119:76"><literal type="string" pos:start="119:37" pos:end="119:76">"Encountered EOF while reading index.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="121:13" pos:end="121:39">return <expr pos:start="121:20" pos:end="121:38"><name pos:start="121:20" pos:end="121:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:19"><expr pos:start="125:9" pos:end="125:18"><name pos:start="125:9" pos:end="125:12">size</name> <operator pos:start="125:14" pos:end="125:16">&gt;&gt;=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="127:9" pos:end="133:9"><if pos:start="127:9" pos:end="133:9">if <condition pos:start="127:12" pos:end="127:42">(<expr pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:16">size</name> <operator pos:start="127:18" pos:end="127:18">&lt;</operator> <literal type="number" pos:start="127:20" pos:end="127:22">9</literal> <operator pos:start="127:22" pos:end="127:22">+</operator> <literal type="number" pos:start="127:24" pos:end="127:24">4</literal><operator pos:start="127:25" pos:end="127:25">*</operator><name pos:start="127:26" pos:end="127:41"><name pos:start="127:26" pos:end="127:28">pmp</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:41">num_streams</name></name></expr>)</condition> <block pos:start="127:44" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:39">

            <expr_stmt pos:start="129:13" pos:end="129:58"><expr pos:start="129:13" pos:end="129:57"><call pos:start="129:13" pos:end="129:57"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="129:57">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">s</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:37" pos:end="129:56"><expr pos:start="129:37" pos:end="129:56"><literal type="string" pos:start="129:37" pos:end="129:56">"Packet too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="131:13" pos:end="131:39">return <expr pos:start="131:20" pos:end="131:38"><name pos:start="131:20" pos:end="131:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:56"><expr pos:start="135:9" pos:end="135:55"><call pos:start="135:9" pos:end="135:55"><name pos:start="135:9" pos:end="135:26">av_add_index_entry</name><argument_list pos:start="135:27" pos:end="135:55">(<argument pos:start="135:28" pos:end="135:30"><expr pos:start="135:28" pos:end="135:30"><name pos:start="135:28" pos:end="135:30">vst</name></expr></argument>, <argument pos:start="135:33" pos:end="135:35"><expr pos:start="135:33" pos:end="135:35"><name pos:start="135:33" pos:end="135:35">pos</name></expr></argument>, <argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">i</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">size</name></expr></argument>, <argument pos:start="135:47" pos:end="135:47"><expr pos:start="135:47" pos:end="135:47"><literal type="number" pos:start="135:47" pos:end="135:47">0</literal></expr></argument>, <argument pos:start="135:50" pos:end="135:54"><expr pos:start="135:50" pos:end="135:54"><name pos:start="135:50" pos:end="135:54">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:20"><expr pos:start="137:9" pos:end="137:19"><name pos:start="137:9" pos:end="137:11">pos</name> <operator pos:start="137:13" pos:end="137:14">+=</operator> <name pos:start="137:16" pos:end="137:19">size</name></expr>;</expr_stmt>

        <if_stmt pos:start="139:9" pos:end="145:9"><if pos:start="139:9" pos:end="145:9">if <condition pos:start="139:12" pos:end="139:47">(<expr pos:start="139:13" pos:end="139:46"><name pos:start="139:13" pos:end="139:17">fsize</name> <operator pos:start="139:19" pos:end="139:19">&gt;</operator> <literal type="number" pos:start="139:21" pos:end="139:21">0</literal> <operator pos:start="139:23" pos:end="139:24">&amp;&amp;</operator> <name pos:start="139:26" pos:end="139:26">i</name> <operator pos:start="139:28" pos:end="139:29">==</operator> <literal type="number" pos:start="139:31" pos:end="139:31">0</literal> <operator pos:start="139:33" pos:end="139:34">&amp;&amp;</operator> <name pos:start="139:36" pos:end="139:38">pos</name> <operator pos:start="139:40" pos:end="139:40">&gt;</operator> <name pos:start="139:42" pos:end="139:46">fsize</name></expr>)</condition> <block pos:start="139:49" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:39">

            <expr_stmt pos:start="141:13" pos:end="141:71"><expr pos:start="141:13" pos:end="141:70"><call pos:start="141:13" pos:end="141:70"><name pos:start="141:13" pos:end="141:18">av_log</name><argument_list pos:start="141:19" pos:end="141:70">(<argument pos:start="141:20" pos:end="141:20"><expr pos:start="141:20" pos:end="141:20"><name pos:start="141:20" pos:end="141:20">s</name></expr></argument>, <argument pos:start="141:23" pos:end="141:34"><expr pos:start="141:23" pos:end="141:34"><name pos:start="141:23" pos:end="141:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="141:37" pos:end="141:69"><expr pos:start="141:37" pos:end="141:69"><literal type="string" pos:start="141:37" pos:end="141:69">"File ends before first packet\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="143:13" pos:end="143:39">return <expr pos:start="143:20" pos:end="143:38"><name pos:start="143:20" pos:end="143:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <for pos:start="149:5" pos:end="167:5">for <control pos:start="149:9" pos:end="149:42">(<init pos:start="149:10" pos:end="149:15"><expr pos:start="149:10" pos:end="149:14"><name pos:start="149:10" pos:end="149:10">i</name> <operator pos:start="149:12" pos:end="149:12">=</operator> <literal type="number" pos:start="149:14" pos:end="149:14">1</literal></expr>;</init> <condition pos:start="149:17" pos:end="149:37"><expr pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:17">i</name> <operator pos:start="149:19" pos:end="149:19">&lt;</operator> <name pos:start="149:21" pos:end="149:36"><name pos:start="149:21" pos:end="149:23">pmp</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:36">num_streams</name></name></expr>;</condition> <incr pos:start="149:39" pos:end="149:41"><expr pos:start="149:39" pos:end="149:41"><name pos:start="149:39" pos:end="149:39">i</name><operator pos:start="149:40" pos:end="149:41">++</operator></expr></incr>)</control> <block pos:start="149:44" pos:end="167:5">{<block_content pos:start="151:9" pos:end="165:47">

        <decl_stmt pos:start="151:9" pos:end="151:53"><decl pos:start="151:9" pos:end="151:52"><type pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:16">AVStream</name> <modifier pos:start="151:18" pos:end="151:18">*</modifier></type><name pos:start="151:19" pos:end="151:21">ast</name> <init pos:start="151:23" pos:end="151:52">= <expr pos:start="151:25" pos:end="151:52"><call pos:start="151:25" pos:end="151:52"><name pos:start="151:25" pos:end="151:43">avformat_new_stream</name><argument_list pos:start="151:44" pos:end="151:52">(<argument pos:start="151:45" pos:end="151:45"><expr pos:start="151:45" pos:end="151:45"><name pos:start="151:45" pos:end="151:45">s</name></expr></argument>, <argument pos:start="151:48" pos:end="151:51"><expr pos:start="151:48" pos:end="151:51"><name pos:start="151:48" pos:end="151:51">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="153:9" pos:end="155:35"><if pos:start="153:9" pos:end="155:35">if <condition pos:start="153:12" pos:end="153:17">(<expr pos:start="153:13" pos:end="153:16"><operator pos:start="153:13" pos:end="153:13">!</operator><name pos:start="153:14" pos:end="153:16">ast</name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:35"><block_content pos:start="155:13" pos:end="155:35">

            <return pos:start="155:13" pos:end="155:35">return <expr pos:start="155:20" pos:end="155:34"><call pos:start="155:20" pos:end="155:34"><name pos:start="155:20" pos:end="155:26">AVERROR</name><argument_list pos:start="155:27" pos:end="155:34">(<argument pos:start="155:28" pos:end="155:33"><expr pos:start="155:28" pos:end="155:33"><name pos:start="155:28" pos:end="155:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:52"><expr pos:start="157:9" pos:end="157:51"><name pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:11">ast</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:18">codec</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:30">codec_type</name></name> <operator pos:start="157:32" pos:end="157:32">=</operator> <name pos:start="157:34" pos:end="157:51">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:46"><expr pos:start="159:9" pos:end="159:45"><name pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:11">ast</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:18">codec</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:28">codec_id</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:45">audio_codec_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:40"><expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:28"><name pos:start="161:9" pos:end="161:11">ast</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:18">codec</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:28">channels</name></name> <operator pos:start="161:30" pos:end="161:30">=</operator> <name pos:start="161:32" pos:end="161:39">channels</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:40"><expr pos:start="163:9" pos:end="163:39"><name pos:start="163:9" pos:end="163:31"><name pos:start="163:9" pos:end="163:11">ast</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:18">codec</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:31">sample_rate</name></name> <operator pos:start="163:33" pos:end="163:33">=</operator> <name pos:start="163:35" pos:end="163:39">srate</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:47"><expr pos:start="165:9" pos:end="165:46"><call pos:start="165:9" pos:end="165:46"><name pos:start="165:9" pos:end="165:27">avpriv_set_pts_info</name><argument_list pos:start="165:28" pos:end="165:46">(<argument pos:start="165:29" pos:end="165:31"><expr pos:start="165:29" pos:end="165:31"><name pos:start="165:29" pos:end="165:31">ast</name></expr></argument>, <argument pos:start="165:34" pos:end="165:35"><expr pos:start="165:34" pos:end="165:35"><literal type="number" pos:start="165:34" pos:end="165:35">32</literal></expr></argument>, <argument pos:start="165:38" pos:end="165:38"><expr pos:start="165:38" pos:end="165:38"><literal type="number" pos:start="165:38" pos:end="165:38">1</literal></expr></argument>, <argument pos:start="165:41" pos:end="165:45"><expr pos:start="165:41" pos:end="165:45"><name pos:start="165:41" pos:end="165:45">srate</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="169:5" pos:end="169:13">return <expr pos:start="169:12" pos:end="169:12"><literal type="number" pos:start="169:12" pos:end="169:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
