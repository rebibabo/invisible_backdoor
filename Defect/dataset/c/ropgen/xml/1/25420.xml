<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25420.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">machine_set_loadparm</name><parameter_list pos:start="1:33" pos:end="1:76">(<parameter pos:start="1:34" pos:end="1:44"><decl pos:start="1:34" pos:end="1:44"><type pos:start="1:34" pos:end="1:44"><name pos:start="1:34" pos:end="1:39">Object</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">obj</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">val</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:75"><decl pos:start="1:64" pos:end="1:75"><type pos:start="1:64" pos:end="1:75"><name pos:start="1:64" pos:end="1:68">Error</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier><modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">S390CcwMachineState</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:27">ms</name> <init pos:start="5:29" pos:end="5:51">= <expr pos:start="5:31" pos:end="5:51"><call pos:start="5:31" pos:end="5:51"><name pos:start="5:31" pos:end="5:46">S390_CCW_MACHINE</name><argument_list pos:start="5:47" pos:end="5:51">(<argument pos:start="5:48" pos:end="5:50"><expr pos:start="5:48" pos:end="5:50"><name pos:start="5:48" pos:end="5:50">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="33:5">for <control pos:start="11:9" pos:end="11:56">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:51"><expr pos:start="11:17" pos:end="11:50"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <sizeof pos:start="11:21" pos:end="11:40">sizeof<argument_list pos:start="11:27" pos:end="11:40">(<argument pos:start="11:28" pos:end="11:39"><expr pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:29">ms</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:39">loadparm</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="11:42" pos:end="11:43">&amp;&amp;</operator> <name pos:start="11:45" pos:end="11:50"><name pos:start="11:45" pos:end="11:47">val</name><index pos:start="11:48" pos:end="11:50">[<expr pos:start="11:49" pos:end="11:49"><name pos:start="11:49" pos:end="11:49">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="11:53" pos:end="11:55"><expr pos:start="11:53" pos:end="11:55"><name pos:start="11:53" pos:end="11:53">i</name><operator pos:start="11:54" pos:end="11:55">++</operator></expr></incr>)</control> <block pos:start="11:58" pos:end="33:5">{<block_content pos:start="13:9" pos:end="31:9">

        <decl_stmt pos:start="13:9" pos:end="13:36"><decl pos:start="13:9" pos:end="13:35"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">uint8_t</name></type> <name pos:start="13:17" pos:end="13:17">c</name> <init pos:start="13:19" pos:end="13:35">= <expr pos:start="13:21" pos:end="13:35"><call pos:start="13:21" pos:end="13:35"><name pos:start="13:21" pos:end="13:27">toupper</name><argument_list pos:start="13:28" pos:end="13:35">(<argument pos:start="13:29" pos:end="13:34"><expr pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:34"><name pos:start="13:29" pos:end="13:31">val</name><index pos:start="13:32" pos:end="13:34">[<expr pos:start="13:33" pos:end="13:33"><name pos:start="13:33" pos:end="13:33">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="13:38" pos:end="13:52">/* mimic HMC */</comment>



        <if_stmt pos:start="17:9" pos:end="31:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="19:23">(<expr pos:start="17:13" pos:end="19:22"><operator pos:start="17:13" pos:end="17:13">(</operator><literal type="char" pos:start="17:14" pos:end="17:16">'A'</literal> <operator pos:start="17:18" pos:end="17:19">&lt;=</operator> <name pos:start="17:21" pos:end="17:21">c</name> <operator pos:start="17:23" pos:end="17:24">&amp;&amp;</operator> <name pos:start="17:26" pos:end="17:26">c</name> <operator pos:start="17:28" pos:end="17:29">&lt;=</operator> <literal type="char" pos:start="17:31" pos:end="17:33">'Z'</literal><operator pos:start="17:34" pos:end="17:34">)</operator> <operator pos:start="17:36" pos:end="17:37">||</operator> <operator pos:start="17:39" pos:end="17:39">(</operator><literal type="char" pos:start="17:40" pos:end="17:42">'0'</literal> <operator pos:start="17:44" pos:end="17:45">&lt;=</operator> <name pos:start="17:47" pos:end="17:47">c</name> <operator pos:start="17:49" pos:end="17:50">&amp;&amp;</operator> <name pos:start="17:52" pos:end="17:52">c</name> <operator pos:start="17:54" pos:end="17:55">&lt;=</operator> <literal type="char" pos:start="17:57" pos:end="17:59">'9'</literal><operator pos:start="17:60" pos:end="17:60">)</operator> <operator pos:start="17:62" pos:end="17:63">||</operator> <operator pos:start="17:65" pos:end="17:65">(</operator><name pos:start="17:66" pos:end="17:66">c</name> <operator pos:start="17:68" pos:end="17:69">==</operator> <literal type="char" pos:start="17:71" pos:end="17:73">'.'</literal><operator pos:start="17:74" pos:end="17:74">)</operator> <operator pos:start="17:76" pos:end="17:77">||</operator>

            <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:14">c</name> <operator pos:start="19:16" pos:end="19:17">==</operator> <literal type="char" pos:start="19:19" pos:end="19:21">' '</literal><operator pos:start="19:22" pos:end="19:22">)</operator></expr>)</condition> <block pos:start="19:25" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:32">

            <expr_stmt pos:start="21:13" pos:end="21:32"><expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:14">ms</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:24">loadparm</name><index pos:start="21:25" pos:end="21:27">[<expr pos:start="21:26" pos:end="21:26"><name pos:start="21:26" pos:end="21:26">i</name></expr>]</index></name> <operator pos:start="21:29" pos:end="21:29">=</operator> <name pos:start="21:31" pos:end="21:31">c</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="23:11" pos:end="31:9">else <block pos:start="23:16" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:19">

            <expr_stmt pos:start="25:13" pos:end="27:29"><expr pos:start="25:13" pos:end="27:28"><call pos:start="25:13" pos:end="27:28"><name pos:start="25:13" pos:end="25:22">error_setg</name><argument_list pos:start="25:23" pos:end="27:28">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">errp</name></expr></argument>, <argument pos:start="25:30" pos:end="25:78"><expr pos:start="25:30" pos:end="25:78"><literal type="string" pos:start="25:30" pos:end="25:78">"LOADPARM: invalid character '%c' (ASCII 0x%02x)"</literal></expr></argument>,

                       <argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><name pos:start="27:24" pos:end="27:24">c</name></expr></argument>, <argument pos:start="27:27" pos:end="27:27"><expr pos:start="27:27" pos:end="27:27"><name pos:start="27:27" pos:end="27:27">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <for pos:start="37:5" pos:end="41:5">for <control pos:start="37:9" pos:end="37:41">(<init pos:start="37:10" pos:end="37:10">;</init> <condition pos:start="37:12" pos:end="37:36"><expr pos:start="37:12" pos:end="37:35"><name pos:start="37:12" pos:end="37:12">i</name> <operator pos:start="37:14" pos:end="37:14">&lt;</operator> <sizeof pos:start="37:16" pos:end="37:35">sizeof<argument_list pos:start="37:22" pos:end="37:35">(<argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:24">ms</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:34">loadparm</name></name></expr></argument>)</argument_list></sizeof></expr>;</condition> <incr pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:38">i</name><operator pos:start="37:39" pos:end="37:40">++</operator></expr></incr>)</control> <block pos:start="37:43" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:30">

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:10">ms</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">loadparm</name><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><name pos:start="39:22" pos:end="39:22">i</name></expr>]</index></name> <operator pos:start="39:25" pos:end="39:25">=</operator> <literal type="char" pos:start="39:27" pos:end="39:29">' '</literal></expr>;</expr_stmt> <comment type="block" pos:start="39:32" pos:end="39:58">/* pad right with spaces */</comment>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
