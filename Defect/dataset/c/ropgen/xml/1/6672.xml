<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6672.c" pos:tabs="8"><function pos:start="1:1" pos:end="333:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="9:69">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, 

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>, 

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:46"><decl pos:start="7:26" pos:end="7:46"><type pos:start="7:26" pos:end="7:46"><name pos:start="7:26" pos:end="7:34">AVPicture</name> <modifier pos:start="7:36" pos:end="7:36">*</modifier></type><name pos:start="7:37" pos:end="7:46">in_picture</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:40"><decl pos:start="9:26" pos:end="9:40"><type pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:28">int</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">frame_size</name></decl></parameter>, <parameter pos:start="9:43" pos:end="9:68"><decl pos:start="9:43" pos:end="9:68"><type pos:start="9:43" pos:end="9:68"><name pos:start="9:43" pos:end="9:56">AVOutputStream</name> <modifier pos:start="9:58" pos:end="9:58">*</modifier></type><name pos:start="9:59" pos:end="9:68">audio_sync</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="333:1">{<block_content pos:start="13:5" pos:end="331:18">

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">nb_frames</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AVPicture</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:28">final_picture</name></decl>, <decl pos:start="15:31" pos:end="15:48"><type ref="prev" pos:start="15:5" pos:end="15:15"><modifier pos:start="15:31" pos:end="15:31">*</modifier></type><name pos:start="15:32" pos:end="15:48">formatted_picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:53"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">AVPicture</name></type> <name pos:start="17:15" pos:end="17:33">picture_format_temp</name></decl>, <decl pos:start="17:36" pos:end="17:52"><type ref="prev" pos:start="17:5" pos:end="17:13"/><name pos:start="17:36" pos:end="17:52">picture_crop_temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:20"><specifier pos:start="19:5" pos:end="19:10">static</specifier> <name pos:start="19:12" pos:end="19:18">uint8_t</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:32">video_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:38"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">buf</name> <init pos:start="21:18" pos:end="21:23">= <expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">NULL</name></expr></init></decl>, <decl pos:start="21:26" pos:end="21:37"><type ref="prev" pos:start="21:5" pos:end="21:13"><modifier pos:start="21:26" pos:end="21:26">*</modifier></type><name pos:start="21:27" pos:end="21:30">buf1</name> <init pos:start="21:32" pos:end="21:37">= <expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="28:0"><decl pos:start="23:5" pos:end="23:23"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:18">AVCodecContext</name> <modifier pos:start="23:20" pos:end="23:20">*</modifier></type><name pos:start="23:21" pos:end="23:23">enc</name></decl>, <decl pos:start="23:26" pos:end="23:29"><type ref="prev" pos:start="23:5" pos:end="23:20"><modifier pos:start="23:26" pos:end="23:26">*</modifier></type><name pos:start="23:27" pos:end="23:29">dec</name></decl>;</decl_stmt>



<cpp:define pos:start="27:1" pos:end="27:37">#<cpp:directive pos:start="27:2" pos:end="27:7">define</cpp:directive> <cpp:macro pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:25">VIDEO_BUFFER_SIZE</name></cpp:macro> <cpp:value pos:start="27:27" pos:end="27:37">(1024*1024)</cpp:value></cpp:define>



    <expr_stmt pos:start="31:5" pos:end="31:26"><expr pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:7">enc</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <operator pos:start="31:11" pos:end="31:11">&amp;</operator><name pos:start="31:12" pos:end="31:25"><name pos:start="31:12" pos:end="31:14">ost</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">st</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:7">dec</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <operator pos:start="33:11" pos:end="33:11">&amp;</operator><name pos:start="33:12" pos:end="33:25"><name pos:start="33:12" pos:end="33:14">ist</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:18">st</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:25">codec</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:13">nb_frames</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><operator pos:start="43:5" pos:end="43:5">*</operator><name pos:start="43:6" pos:end="43:15">frame_size</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="47:5" pos:end="51:38">/* NOTE: the A/V sync is always done by considering the audio is

       the master clock. It is suffisant for transcoding or playing,

       but not for the general case */</comment>

    <if_stmt pos:start="53:5" pos:end="118:0"><if pos:start="53:5" pos:end="85:5">if <condition pos:start="53:8" pos:end="53:19">(<expr pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:18">audio_sync</name></expr>)</condition> <block pos:start="53:21" pos:end="85:5">{<block_content pos:start="57:9" pos:end="83:26">

        <comment type="block" pos:start="55:9" pos:end="55:73">/* compute the A-V delay and duplicate/remove frames if needed */</comment>

        <decl_stmt pos:start="57:9" pos:end="57:40"><decl pos:start="57:9" pos:end="57:21"><type pos:start="57:9" pos:end="57:14"><name pos:start="57:9" pos:end="57:14">double</name></type> <name pos:start="57:16" pos:end="57:21">adelta</name></decl>, <decl pos:start="57:24" pos:end="57:29"><type ref="prev" pos:start="57:9" pos:end="57:14"/><name pos:start="57:24" pos:end="57:29">vdelta</name></decl>, <decl pos:start="57:32" pos:end="57:39"><type ref="prev" pos:start="57:9" pos:end="57:14"/><name pos:start="57:32" pos:end="57:39">av_delay</name></decl>;</decl_stmt>



        <expr_stmt pos:start="61:9" pos:end="63:37"><expr pos:start="61:9" pos:end="63:36"><name pos:start="61:9" pos:end="61:14">adelta</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <name pos:start="61:18" pos:end="61:38"><name pos:start="61:18" pos:end="61:27">audio_sync</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:38">sync_ipts</name></name> <operator pos:start="61:40" pos:end="61:40">-</operator> <operator pos:start="61:42" pos:end="61:42">(</operator><operator pos:start="61:43" pos:end="61:43">(</operator><name pos:start="61:44" pos:end="61:49">double</name><operator pos:start="61:50" pos:end="61:50">)</operator><name pos:start="61:51" pos:end="61:71"><name pos:start="61:51" pos:end="61:60">audio_sync</name><operator pos:start="61:61" pos:end="61:62">-&gt;</operator><name pos:start="61:63" pos:end="61:71">sync_opts</name></name> <operator pos:start="61:73" pos:end="61:73">*</operator> 

            <name pos:start="63:13" pos:end="63:22"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:22">pts_num</name></name> <operator pos:start="63:24" pos:end="63:24">/</operator> <name pos:start="63:26" pos:end="63:35"><name pos:start="63:26" pos:end="63:26">s</name><operator pos:start="63:27" pos:end="63:28">-&gt;</operator><name pos:start="63:29" pos:end="63:35">pts_den</name></name><operator pos:start="63:36" pos:end="63:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="69:37"><expr pos:start="67:9" pos:end="69:36"><name pos:start="67:9" pos:end="67:14">vdelta</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <name pos:start="67:18" pos:end="67:31"><name pos:start="67:18" pos:end="67:20">ost</name><operator pos:start="67:21" pos:end="67:22">-&gt;</operator><name pos:start="67:23" pos:end="67:31">sync_ipts</name></name> <operator pos:start="67:33" pos:end="67:33">-</operator> <operator pos:start="67:35" pos:end="67:35">(</operator><operator pos:start="67:36" pos:end="67:36">(</operator><name pos:start="67:37" pos:end="67:42">double</name><operator pos:start="67:43" pos:end="67:43">)</operator><name pos:start="67:44" pos:end="67:57"><name pos:start="67:44" pos:end="67:46">ost</name><operator pos:start="67:47" pos:end="67:48">-&gt;</operator><name pos:start="67:49" pos:end="67:57">sync_opts</name></name> <operator pos:start="67:59" pos:end="67:59">*</operator>

            <name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:22">pts_num</name></name> <operator pos:start="69:24" pos:end="69:24">/</operator> <name pos:start="69:26" pos:end="69:35"><name pos:start="69:26" pos:end="69:26">s</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:35">pts_den</name></name><operator pos:start="69:36" pos:end="69:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:16">av_delay</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:25">adelta</name> <operator pos:start="73:27" pos:end="73:27">-</operator> <name pos:start="73:29" pos:end="73:34">vdelta</name></expr>;</expr_stmt>

        <comment type="line" pos:start="75:9" pos:end="75:53">//            printf("delay=%f\n", av_delay);</comment>

        <if_stmt pos:start="77:9" pos:end="83:26"><if pos:start="77:9" pos:end="79:26">if <condition pos:start="77:12" pos:end="77:37">(<expr pos:start="77:13" pos:end="77:36"><name pos:start="77:13" pos:end="77:20">av_delay</name> <operator pos:start="77:22" pos:end="77:22">&lt;</operator> <operator pos:start="77:24" pos:end="77:24">-</operator><name pos:start="77:25" pos:end="77:36">AV_DELAY_MAX</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:26"><block_content pos:start="79:13" pos:end="79:26">

            <expr_stmt pos:start="79:13" pos:end="79:26"><expr pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:21">nb_frames</name> <operator pos:start="79:23" pos:end="79:23">=</operator> <literal type="number" pos:start="79:25" pos:end="79:25">2</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="81:9" pos:end="83:26">else if <condition pos:start="81:17" pos:end="81:41">(<expr pos:start="81:18" pos:end="81:40"><name pos:start="81:18" pos:end="81:25">av_delay</name> <operator pos:start="81:27" pos:end="81:27">&gt;</operator> <name pos:start="81:29" pos:end="81:40">AV_DELAY_MAX</name></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:26"><block_content pos:start="83:13" pos:end="83:26">

            <expr_stmt pos:start="83:13" pos:end="83:26"><expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:21">nb_frames</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <literal type="number" pos:start="83:25" pos:end="83:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="85:7" pos:end="118:0">else <block pos:start="85:12" pos:end="118:0">{<block_content pos:start="87:9" pos:end="111:9">

        <decl_stmt pos:start="87:9" pos:end="87:22"><decl pos:start="87:9" pos:end="87:21"><type pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:14">double</name></type> <name pos:start="87:16" pos:end="87:21">vdelta</name></decl>;</decl_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:113"><expr pos:start="91:9" pos:end="91:112"><name pos:start="91:9" pos:end="91:14">vdelta</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <operator pos:start="91:18" pos:end="91:18">(</operator><name pos:start="91:19" pos:end="91:24">double</name><operator pos:start="91:25" pos:end="91:25">)</operator><operator pos:start="91:26" pos:end="91:26">(</operator><name pos:start="91:27" pos:end="91:42"><name pos:start="91:27" pos:end="91:29">ost</name><operator pos:start="91:30" pos:end="91:31">-&gt;</operator><name pos:start="91:32" pos:end="91:33">st</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:38">pts</name><operator pos:start="91:39" pos:end="91:39">.</operator><name pos:start="91:40" pos:end="91:42">val</name></name><operator pos:start="91:43" pos:end="91:43">)</operator> <operator pos:start="91:45" pos:end="91:45">*</operator> <name pos:start="91:47" pos:end="91:56"><name pos:start="91:47" pos:end="91:47">s</name><operator pos:start="91:48" pos:end="91:49">-&gt;</operator><name pos:start="91:50" pos:end="91:56">pts_num</name></name> <operator pos:start="91:58" pos:end="91:58">/</operator> <name pos:start="91:60" pos:end="91:69"><name pos:start="91:60" pos:end="91:60">s</name><operator pos:start="91:61" pos:end="91:62">-&gt;</operator><name pos:start="91:63" pos:end="91:69">pts_den</name></name> <operator pos:start="91:71" pos:end="91:71">-</operator> <operator pos:start="91:73" pos:end="91:73">(</operator><name pos:start="91:74" pos:end="91:87"><name pos:start="91:74" pos:end="91:76">ost</name><operator pos:start="91:77" pos:end="91:78">-&gt;</operator><name pos:start="91:79" pos:end="91:87">sync_ipts</name></name> <operator pos:start="91:89" pos:end="91:89">-</operator> <name pos:start="91:91" pos:end="91:111"><name pos:start="91:91" pos:end="91:93">ost</name><operator pos:start="91:94" pos:end="91:95">-&gt;</operator><name pos:start="91:96" pos:end="91:111">sync_ipts_offset</name></name><operator pos:start="91:112" pos:end="91:112">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="111:9"><if pos:start="93:9" pos:end="103:9">if <condition pos:start="93:12" pos:end="93:67">(<expr pos:start="93:13" pos:end="93:66"><name pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:18">vdelta</name> <argument_list type="generic" pos:start="93:20" pos:end="93:36">&lt; <argument pos:start="93:22" pos:end="93:34"><expr pos:start="93:22" pos:end="93:34"><literal type="number" pos:start="93:22" pos:end="93:24">100</literal> <operator pos:start="93:26" pos:end="93:27">&amp;&amp;</operator> <name pos:start="93:29" pos:end="93:34">vdelta</name></expr></argument> &gt;</argument_list></name> <operator pos:start="93:38" pos:end="93:38">-</operator><literal type="number" pos:start="93:39" pos:end="93:41">100</literal> <operator pos:start="93:43" pos:end="93:44">&amp;&amp;</operator> <name pos:start="93:46" pos:end="93:66"><name pos:start="93:46" pos:end="93:48">ost</name><operator pos:start="93:49" pos:end="93:50">-&gt;</operator><name pos:start="93:51" pos:end="93:66">sync_ipts_offset</name></name></expr>)</condition> <block pos:start="93:69" pos:end="103:9">{<block_content pos:start="95:13" pos:end="101:30">

            <if_stmt pos:start="95:13" pos:end="101:30"><if pos:start="95:13" pos:end="97:30">if <condition pos:start="95:16" pos:end="95:39">(<expr pos:start="95:17" pos:end="95:38"><name pos:start="95:17" pos:end="95:22">vdelta</name> <operator pos:start="95:24" pos:end="95:24">&lt;</operator> <operator pos:start="95:26" pos:end="95:26">-</operator><name pos:start="95:27" pos:end="95:38">AV_DELAY_MAX</name></expr>)</condition><block type="pseudo" pos:start="97:17" pos:end="97:30"><block_content pos:start="97:17" pos:end="97:30">

                <expr_stmt pos:start="97:17" pos:end="97:30"><expr pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:25">nb_frames</name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:29">2</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="99:13" pos:end="101:30">else if <condition pos:start="99:21" pos:end="99:43">(<expr pos:start="99:22" pos:end="99:42"><name pos:start="99:22" pos:end="99:27">vdelta</name> <operator pos:start="99:29" pos:end="99:29">&gt;</operator> <name pos:start="99:31" pos:end="99:42">AV_DELAY_MAX</name></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:30"><block_content pos:start="101:17" pos:end="101:30">

                <expr_stmt pos:start="101:17" pos:end="101:30"><expr pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:25">nb_frames</name> <operator pos:start="101:27" pos:end="101:27">=</operator> <literal type="number" pos:start="101:29" pos:end="101:29">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="103:11" pos:end="111:9">else <block pos:start="103:16" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:49">

            <expr_stmt pos:start="105:13" pos:end="105:44"><expr pos:start="105:13" pos:end="105:43"><name pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:15">ost</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:33">sync_ipts_offset</name></name> <operator pos:start="105:35" pos:end="105:36">-=</operator> <name pos:start="105:38" pos:end="105:43">vdelta</name></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:49"><if pos:start="107:13" pos:end="109:49">if <condition pos:start="107:16" pos:end="107:39">(<expr pos:start="107:17" pos:end="107:38"><operator pos:start="107:17" pos:end="107:17">!</operator><name pos:start="107:18" pos:end="107:38"><name pos:start="107:18" pos:end="107:20">ost</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:38">sync_ipts_offset</name></name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:49"><block_content pos:start="109:17" pos:end="109:49">

                <expr_stmt pos:start="109:17" pos:end="109:49"><expr pos:start="109:17" pos:end="109:48"><name pos:start="109:17" pos:end="109:37"><name pos:start="109:17" pos:end="109:19">ost</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:37">sync_ipts_offset</name></name> <operator pos:start="109:39" pos:end="109:39">=</operator> <literal type="number" pos:start="109:41" pos:end="109:48">0.000001</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="109:51" pos:end="109:71">/* one microsecond */</comment>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    

<cpp:if pos:start="117:1" pos:end="117:25">#<cpp:directive pos:start="117:2" pos:end="117:3">if</cpp:directive> <expr pos:start="117:5" pos:end="117:25"><call pos:start="117:5" pos:end="117:25"><name pos:start="117:5" pos:end="117:11">defined</name><argument_list pos:start="117:12" pos:end="117:25">(<argument pos:start="117:13" pos:end="117:24"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:24">AVSYNC_DEBUG</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <decl_stmt pos:start="119:5" pos:end="119:72"><decl pos:start="119:5" pos:end="119:71"><type pos:start="119:5" pos:end="119:17"><specifier pos:start="119:5" pos:end="119:10">static</specifier> <name pos:start="119:12" pos:end="119:15">char</name> <modifier pos:start="119:17" pos:end="119:17">*</modifier></type><name pos:start="119:18" pos:end="119:25"><name pos:start="119:18" pos:end="119:23">action</name><index pos:start="119:24" pos:end="119:25">[]</index></name> <init pos:start="119:27" pos:end="119:71">= <expr pos:start="119:29" pos:end="119:71"><block pos:start="119:29" pos:end="119:71">{ <expr pos:start="119:31" pos:end="119:42"><literal type="string" pos:start="119:31" pos:end="119:42">"drop frame"</literal></expr>, <expr pos:start="119:45" pos:end="119:56"><literal type="string" pos:start="119:45" pos:end="119:56">"copy frame"</literal></expr>, <expr pos:start="119:59" pos:end="119:69"><literal type="string" pos:start="119:59" pos:end="119:69">"dup frame"</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="121:5" pos:end="127:76"><if pos:start="121:5" pos:end="127:76">if <condition pos:start="121:8" pos:end="121:19">(<expr pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:18">audio_sync</name></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="127:76"><block_content pos:start="123:9" pos:end="127:76">

        <expr_stmt pos:start="123:9" pos:end="127:76"><expr pos:start="123:9" pos:end="127:75"><call pos:start="123:9" pos:end="127:75"><name pos:start="123:9" pos:end="123:15">fprintf</name><argument_list pos:start="123:16" pos:end="127:75">(<argument pos:start="123:17" pos:end="123:22"><expr pos:start="123:17" pos:end="123:22"><name pos:start="123:17" pos:end="123:22">stderr</name></expr></argument>, <argument pos:start="123:25" pos:end="123:65"><expr pos:start="123:25" pos:end="123:65"><literal type="string" pos:start="123:25" pos:end="123:65">"Input APTS %12.6f, output APTS %12.6f, "</literal></expr></argument>,

	        <argument pos:start="125:17" pos:end="125:46"><expr pos:start="125:17" pos:end="125:46"><operator pos:start="125:17" pos:end="125:17">(</operator><name pos:start="125:18" pos:end="125:23">double</name><operator pos:start="125:24" pos:end="125:24">)</operator> <name pos:start="125:26" pos:end="125:46"><name pos:start="125:26" pos:end="125:35">audio_sync</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:46">sync_ipts</name></name></expr></argument>, 

	        <argument pos:start="127:17" pos:end="127:74"><expr pos:start="127:17" pos:end="127:74"><operator pos:start="127:17" pos:end="127:17">(</operator><name pos:start="127:18" pos:end="127:23">double</name><operator pos:start="127:24" pos:end="127:24">)</operator> <name pos:start="127:26" pos:end="127:48"><name pos:start="127:26" pos:end="127:35">audio_sync</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:39">st</name><operator pos:start="127:40" pos:end="127:41">-&gt;</operator><name pos:start="127:42" pos:end="127:44">pts</name><operator pos:start="127:45" pos:end="127:45">.</operator><name pos:start="127:46" pos:end="127:48">val</name></name> <operator pos:start="127:50" pos:end="127:50">*</operator> <name pos:start="127:52" pos:end="127:61"><name pos:start="127:52" pos:end="127:52">s</name><operator pos:start="127:53" pos:end="127:54">-&gt;</operator><name pos:start="127:55" pos:end="127:61">pts_num</name></name> <operator pos:start="127:63" pos:end="127:63">/</operator> <name pos:start="127:65" pos:end="127:74"><name pos:start="127:65" pos:end="127:65">s</name><operator pos:start="127:66" pos:end="127:67">-&gt;</operator><name pos:start="127:68" pos:end="127:74">pts_den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="129:5" pos:end="138:0"><expr pos:start="129:5" pos:end="135:30"><call pos:start="129:5" pos:end="135:30"><name pos:start="129:5" pos:end="129:11">fprintf</name><argument_list pos:start="129:12" pos:end="135:30">(<argument pos:start="129:13" pos:end="129:18"><expr pos:start="129:13" pos:end="129:18"><name pos:start="129:13" pos:end="129:18">stderr</name></expr></argument>, <argument pos:start="129:21" pos:end="129:65"><expr pos:start="129:21" pos:end="129:65"><literal type="string" pos:start="129:21" pos:end="129:65">"Input VPTS %12.6f, output VPTS %12.6f: %s\n"</literal></expr></argument>,

            <argument pos:start="131:13" pos:end="131:35"><expr pos:start="131:13" pos:end="131:35"><operator pos:start="131:13" pos:end="131:13">(</operator><name pos:start="131:14" pos:end="131:19">double</name><operator pos:start="131:20" pos:end="131:20">)</operator> <name pos:start="131:22" pos:end="131:35"><name pos:start="131:22" pos:end="131:24">ost</name><operator pos:start="131:25" pos:end="131:26">-&gt;</operator><name pos:start="131:27" pos:end="131:35">sync_ipts</name></name></expr></argument>, 

  	    <argument pos:start="133:13" pos:end="133:63"><expr pos:start="133:13" pos:end="133:63"><operator pos:start="133:13" pos:end="133:13">(</operator><name pos:start="133:14" pos:end="133:19">double</name><operator pos:start="133:20" pos:end="133:20">)</operator> <name pos:start="133:22" pos:end="133:37"><name pos:start="133:22" pos:end="133:24">ost</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:28">st</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:33">pts</name><operator pos:start="133:34" pos:end="133:34">.</operator><name pos:start="133:35" pos:end="133:37">val</name></name> <operator pos:start="133:39" pos:end="133:39">*</operator> <name pos:start="133:41" pos:end="133:50"><name pos:start="133:41" pos:end="133:41">s</name><operator pos:start="133:42" pos:end="133:43">-&gt;</operator><name pos:start="133:44" pos:end="133:50">pts_num</name></name> <operator pos:start="133:52" pos:end="133:52">/</operator> <name pos:start="133:54" pos:end="133:63"><name pos:start="133:54" pos:end="133:54">s</name><operator pos:start="133:55" pos:end="133:56">-&gt;</operator><name pos:start="133:57" pos:end="133:63">pts_den</name></name></expr></argument>,

            <argument pos:start="135:13" pos:end="135:29"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:18">action</name><index pos:start="135:19" pos:end="135:29">[<expr pos:start="135:20" pos:end="135:28"><name pos:start="135:20" pos:end="135:28">nb_frames</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="141:5" pos:end="143:15"><if pos:start="141:5" pos:end="143:15">if <condition pos:start="141:8" pos:end="141:23">(<expr pos:start="141:9" pos:end="141:22"><name pos:start="141:9" pos:end="141:17">nb_frames</name> <operator pos:start="141:19" pos:end="141:20">&lt;=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:15"><block_content pos:start="143:9" pos:end="143:15"> 

        <return pos:start="143:9" pos:end="143:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="147:5" pos:end="149:52"><if pos:start="147:5" pos:end="149:52">if <condition pos:start="147:8" pos:end="147:22">(<expr pos:start="147:9" pos:end="147:21"><operator pos:start="147:9" pos:end="147:9">!</operator><name pos:start="147:10" pos:end="147:21">video_buffer</name></expr>)</condition><block type="pseudo" pos:start="149:9" pos:end="149:52"><block_content pos:start="149:9" pos:end="149:52">

        <expr_stmt pos:start="149:9" pos:end="149:52"><expr pos:start="149:9" pos:end="149:51"><name pos:start="149:9" pos:end="149:20">video_buffer</name> <operator pos:start="149:22" pos:end="149:22">=</operator> <call pos:start="149:24" pos:end="149:51"><name pos:start="149:24" pos:end="149:32">av_malloc</name><argument_list pos:start="149:33" pos:end="149:51">(<argument pos:start="149:34" pos:end="149:50"><expr pos:start="149:34" pos:end="149:50"><name pos:start="149:34" pos:end="149:50">VIDEO_BUFFER_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="151:5" pos:end="153:15"><if pos:start="151:5" pos:end="153:15">if <condition pos:start="151:8" pos:end="151:22">(<expr pos:start="151:9" pos:end="151:21"><operator pos:start="151:9" pos:end="151:9">!</operator><name pos:start="151:10" pos:end="151:21">video_buffer</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:15"><block_content pos:start="153:9" pos:end="153:15">

        <return pos:start="153:9" pos:end="153:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="157:5" pos:end="157:40">/* convert pixel format if needed */</comment>

    <if_stmt pos:start="159:5" pos:end="197:5"><if pos:start="159:5" pos:end="193:5">if <condition pos:start="159:8" pos:end="159:37">(<expr pos:start="159:9" pos:end="159:36"><name pos:start="159:9" pos:end="159:20"><name pos:start="159:9" pos:end="159:11">enc</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:20">pix_fmt</name></name> <operator pos:start="159:22" pos:end="159:23">!=</operator> <name pos:start="159:25" pos:end="159:36"><name pos:start="159:25" pos:end="159:27">dec</name><operator pos:start="159:28" pos:end="159:29">-&gt;</operator><name pos:start="159:30" pos:end="159:36">pix_fmt</name></name></expr>)</condition> <block pos:start="159:39" pos:end="193:5">{<block_content pos:start="161:9" pos:end="191:9">

        <decl_stmt pos:start="161:9" pos:end="161:17"><decl pos:start="161:9" pos:end="161:16"><type pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">int</name></type> <name pos:start="161:13" pos:end="161:16">size</name></decl>;</decl_stmt>



        <comment type="block" pos:start="165:9" pos:end="165:38">/* create temporary picture */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:73"><expr pos:start="167:9" pos:end="167:72"><name pos:start="167:9" pos:end="167:12">size</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <call pos:start="167:16" pos:end="167:72"><name pos:start="167:16" pos:end="167:33">avpicture_get_size</name><argument_list pos:start="167:34" pos:end="167:72">(<argument pos:start="167:35" pos:end="167:46"><expr pos:start="167:35" pos:end="167:46"><name pos:start="167:35" pos:end="167:46"><name pos:start="167:35" pos:end="167:37">enc</name><operator pos:start="167:38" pos:end="167:39">-&gt;</operator><name pos:start="167:40" pos:end="167:46">pix_fmt</name></name></expr></argument>, <argument pos:start="167:49" pos:end="167:58"><expr pos:start="167:49" pos:end="167:58"><name pos:start="167:49" pos:end="167:58"><name pos:start="167:49" pos:end="167:51">dec</name><operator pos:start="167:52" pos:end="167:53">-&gt;</operator><name pos:start="167:54" pos:end="167:58">width</name></name></expr></argument>, <argument pos:start="167:61" pos:end="167:71"><expr pos:start="167:61" pos:end="167:71"><name pos:start="167:61" pos:end="167:71"><name pos:start="167:61" pos:end="167:63">dec</name><operator pos:start="167:64" pos:end="167:65">-&gt;</operator><name pos:start="167:66" pos:end="167:71">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:30"><expr pos:start="169:9" pos:end="169:29"><name pos:start="169:9" pos:end="169:11">buf</name> <operator pos:start="169:13" pos:end="169:13">=</operator> <call pos:start="169:15" pos:end="169:29"><name pos:start="169:15" pos:end="169:23">av_malloc</name><argument_list pos:start="169:24" pos:end="169:29">(<argument pos:start="169:25" pos:end="169:28"><expr pos:start="169:25" pos:end="169:28"><name pos:start="169:25" pos:end="169:28">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="173:19"><if pos:start="171:9" pos:end="173:19">if <condition pos:start="171:12" pos:end="171:17">(<expr pos:start="171:13" pos:end="171:16"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:16">buf</name></expr>)</condition><block type="pseudo" pos:start="173:13" pos:end="173:19"><block_content pos:start="173:13" pos:end="173:19">

            <return pos:start="173:13" pos:end="173:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:49"><expr pos:start="175:9" pos:end="175:48"><name pos:start="175:9" pos:end="175:25">formatted_picture</name> <operator pos:start="175:27" pos:end="175:27">=</operator> <operator pos:start="175:29" pos:end="175:29">&amp;</operator><name pos:start="175:30" pos:end="175:48">picture_format_temp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:86"><expr pos:start="177:9" pos:end="177:85"><call pos:start="177:9" pos:end="177:85"><name pos:start="177:9" pos:end="177:22">avpicture_fill</name><argument_list pos:start="177:23" pos:end="177:85">(<argument pos:start="177:24" pos:end="177:40"><expr pos:start="177:24" pos:end="177:40"><name pos:start="177:24" pos:end="177:40">formatted_picture</name></expr></argument>, <argument pos:start="177:43" pos:end="177:45"><expr pos:start="177:43" pos:end="177:45"><name pos:start="177:43" pos:end="177:45">buf</name></expr></argument>, <argument pos:start="177:48" pos:end="177:59"><expr pos:start="177:48" pos:end="177:59"><name pos:start="177:48" pos:end="177:59"><name pos:start="177:48" pos:end="177:50">enc</name><operator pos:start="177:51" pos:end="177:52">-&gt;</operator><name pos:start="177:53" pos:end="177:59">pix_fmt</name></name></expr></argument>, <argument pos:start="177:62" pos:end="177:71"><expr pos:start="177:62" pos:end="177:71"><name pos:start="177:62" pos:end="177:71"><name pos:start="177:62" pos:end="177:64">dec</name><operator pos:start="177:65" pos:end="177:66">-&gt;</operator><name pos:start="177:67" pos:end="177:71">width</name></name></expr></argument>, <argument pos:start="177:74" pos:end="177:84"><expr pos:start="177:74" pos:end="177:84"><name pos:start="177:74" pos:end="177:84"><name pos:start="177:74" pos:end="177:76">dec</name><operator pos:start="177:77" pos:end="177:78">-&gt;</operator><name pos:start="177:79" pos:end="177:84">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="181:9" pos:end="191:9"><if pos:start="181:9" pos:end="191:9">if <condition pos:start="181:12" pos:end="185:53">(<expr pos:start="181:13" pos:end="185:52"><call pos:start="181:13" pos:end="185:48"><name pos:start="181:13" pos:end="181:23">img_convert</name><argument_list pos:start="181:24" pos:end="185:48">(<argument pos:start="181:25" pos:end="181:41"><expr pos:start="181:25" pos:end="181:41"><name pos:start="181:25" pos:end="181:41">formatted_picture</name></expr></argument>, <argument pos:start="181:44" pos:end="181:55"><expr pos:start="181:44" pos:end="181:55"><name pos:start="181:44" pos:end="181:55"><name pos:start="181:44" pos:end="181:46">enc</name><operator pos:start="181:47" pos:end="181:48">-&gt;</operator><name pos:start="181:49" pos:end="181:55">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="183:25" pos:end="183:34"><expr pos:start="183:25" pos:end="183:34"><name pos:start="183:25" pos:end="183:34">in_picture</name></expr></argument>, <argument pos:start="183:37" pos:end="183:48"><expr pos:start="183:37" pos:end="183:48"><name pos:start="183:37" pos:end="183:48"><name pos:start="183:37" pos:end="183:39">dec</name><operator pos:start="183:40" pos:end="183:41">-&gt;</operator><name pos:start="183:42" pos:end="183:48">pix_fmt</name></name></expr></argument>, 

                        <argument pos:start="185:25" pos:end="185:34"><expr pos:start="185:25" pos:end="185:34"><name pos:start="185:25" pos:end="185:34"><name pos:start="185:25" pos:end="185:27">dec</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:34">width</name></name></expr></argument>, <argument pos:start="185:37" pos:end="185:47"><expr pos:start="185:37" pos:end="185:47"><name pos:start="185:37" pos:end="185:47"><name pos:start="185:37" pos:end="185:39">dec</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:47">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="185:50" pos:end="185:50">&lt;</operator> <literal type="number" pos:start="185:52" pos:end="185:52">0</literal></expr>)</condition> <block pos:start="185:55" pos:end="191:9">{<block_content pos:start="187:13" pos:end="189:25">

            <expr_stmt pos:start="187:13" pos:end="187:69"><expr pos:start="187:13" pos:end="187:68"><call pos:start="187:13" pos:end="187:68"><name pos:start="187:13" pos:end="187:19">fprintf</name><argument_list pos:start="187:20" pos:end="187:68">(<argument pos:start="187:21" pos:end="187:26"><expr pos:start="187:21" pos:end="187:26"><name pos:start="187:21" pos:end="187:26">stderr</name></expr></argument>, <argument pos:start="187:29" pos:end="187:67"><expr pos:start="187:29" pos:end="187:67"><literal type="string" pos:start="187:29" pos:end="187:67">"pixel format conversion not handled\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="189:13" pos:end="189:25">goto <name pos:start="189:18" pos:end="189:24">the_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="193:7" pos:end="197:5">else <block pos:start="193:12" pos:end="197:5">{<block_content pos:start="195:9" pos:end="195:39">

        <expr_stmt pos:start="195:9" pos:end="195:39"><expr pos:start="195:9" pos:end="195:38"><name pos:start="195:9" pos:end="195:25">formatted_picture</name> <operator pos:start="195:27" pos:end="195:27">=</operator> <name pos:start="195:29" pos:end="195:38">in_picture</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="201:5" pos:end="203:33">/* XXX: resampling could be done before raw format convertion in

       some cases to go faster */</comment>

    <comment type="block" pos:start="205:5" pos:end="205:37">/* XXX: only works for YUV420P */</comment>

    <if_stmt pos:start="207:5" pos:end="249:5"><if pos:start="207:5" pos:end="213:5">if <condition pos:start="207:8" pos:end="207:28">(<expr pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:11">ost</name><operator pos:start="207:12" pos:end="207:13">-&gt;</operator><name pos:start="207:14" pos:end="207:27">video_resample</name></name></expr>)</condition> <block pos:start="207:30" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:78">

        <expr_stmt pos:start="209:9" pos:end="209:39"><expr pos:start="209:9" pos:end="209:38"><name pos:start="209:9" pos:end="209:21">final_picture</name> <operator pos:start="209:23" pos:end="209:23">=</operator> <operator pos:start="209:25" pos:end="209:25">&amp;</operator><name pos:start="209:26" pos:end="209:38"><name pos:start="209:26" pos:end="209:28">ost</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:38">pict_tmp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:78"><expr pos:start="211:9" pos:end="211:77"><call pos:start="211:9" pos:end="211:77"><name pos:start="211:9" pos:end="211:20">img_resample</name><argument_list pos:start="211:21" pos:end="211:77">(<argument pos:start="211:22" pos:end="211:42"><expr pos:start="211:22" pos:end="211:42"><name pos:start="211:22" pos:end="211:42"><name pos:start="211:22" pos:end="211:24">ost</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:42">img_resample_ctx</name></name></expr></argument>, <argument pos:start="211:45" pos:end="211:57"><expr pos:start="211:45" pos:end="211:57"><name pos:start="211:45" pos:end="211:57">final_picture</name></expr></argument>, <argument pos:start="211:60" pos:end="211:76"><expr pos:start="211:60" pos:end="211:76"><name pos:start="211:60" pos:end="211:76">formatted_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="213:7" pos:end="245:5">else if <condition pos:start="213:15" pos:end="213:31">(<expr pos:start="213:16" pos:end="213:30"><name pos:start="213:16" pos:end="213:30"><name pos:start="213:16" pos:end="213:18">ost</name><operator pos:start="213:19" pos:end="213:20">-&gt;</operator><name pos:start="213:21" pos:end="213:30">video_crop</name></name></expr>)</condition> <block pos:start="213:33" pos:end="245:5">{<block_content pos:start="215:9" pos:end="243:43">

        <expr_stmt pos:start="215:9" pos:end="217:80"><expr pos:start="215:9" pos:end="217:79"><name pos:start="215:9" pos:end="215:33"><name pos:start="215:9" pos:end="215:25">picture_crop_temp</name><operator pos:start="215:26" pos:end="215:26">.</operator><name pos:start="215:27" pos:end="215:30">data</name><index pos:start="215:31" pos:end="215:33">[<expr pos:start="215:32" pos:end="215:32"><literal type="number" pos:start="215:32" pos:end="215:32">0</literal></expr>]</index></name> <operator pos:start="215:35" pos:end="215:35">=</operator> <name pos:start="215:37" pos:end="215:62"><name pos:start="215:37" pos:end="215:53">formatted_picture</name><operator pos:start="215:54" pos:end="215:55">-&gt;</operator><name pos:start="215:56" pos:end="215:59">data</name><index pos:start="215:60" pos:end="215:62">[<expr pos:start="215:61" pos:end="215:61"><literal type="number" pos:start="215:61" pos:end="215:61">0</literal></expr>]</index></name> <operator pos:start="215:64" pos:end="215:64">+</operator>

                <operator pos:start="217:17" pos:end="217:17">(</operator><name pos:start="217:18" pos:end="217:29"><name pos:start="217:18" pos:end="217:20">ost</name><operator pos:start="217:21" pos:end="217:22">-&gt;</operator><name pos:start="217:23" pos:end="217:29">topBand</name></name> <operator pos:start="217:31" pos:end="217:31">*</operator> <name pos:start="217:33" pos:end="217:62"><name pos:start="217:33" pos:end="217:49">formatted_picture</name><operator pos:start="217:50" pos:end="217:51">-&gt;</operator><name pos:start="217:52" pos:end="217:59">linesize</name><index pos:start="217:60" pos:end="217:62">[<expr pos:start="217:61" pos:end="217:61"><literal type="number" pos:start="217:61" pos:end="217:61">0</literal></expr>]</index></name><operator pos:start="217:63" pos:end="217:63">)</operator> <operator pos:start="217:65" pos:end="217:65">+</operator> <name pos:start="217:67" pos:end="217:79"><name pos:start="217:67" pos:end="217:69">ost</name><operator pos:start="217:70" pos:end="217:71">-&gt;</operator><name pos:start="217:72" pos:end="217:79">leftBand</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="221:9" pos:end="225:37"><expr pos:start="221:9" pos:end="225:36"><name pos:start="221:9" pos:end="221:33"><name pos:start="221:9" pos:end="221:25">picture_crop_temp</name><operator pos:start="221:26" pos:end="221:26">.</operator><name pos:start="221:27" pos:end="221:30">data</name><index pos:start="221:31" pos:end="221:33">[<expr pos:start="221:32" pos:end="221:32"><literal type="number" pos:start="221:32" pos:end="221:32">1</literal></expr>]</index></name> <operator pos:start="221:35" pos:end="221:35">=</operator> <name pos:start="221:37" pos:end="221:62"><name pos:start="221:37" pos:end="221:53">formatted_picture</name><operator pos:start="221:54" pos:end="221:55">-&gt;</operator><name pos:start="221:56" pos:end="221:59">data</name><index pos:start="221:60" pos:end="221:62">[<expr pos:start="221:61" pos:end="221:61"><literal type="number" pos:start="221:61" pos:end="221:61">1</literal></expr>]</index></name> <operator pos:start="221:64" pos:end="221:64">+</operator>

                <operator pos:start="223:17" pos:end="223:17">(</operator><operator pos:start="223:18" pos:end="223:18">(</operator><name pos:start="223:19" pos:end="223:30"><name pos:start="223:19" pos:end="223:21">ost</name><operator pos:start="223:22" pos:end="223:23">-&gt;</operator><name pos:start="223:24" pos:end="223:30">topBand</name></name> <operator pos:start="223:32" pos:end="223:33">&gt;&gt;</operator> <literal type="number" pos:start="223:35" pos:end="223:35">1</literal><operator pos:start="223:36" pos:end="223:36">)</operator> <operator pos:start="223:38" pos:end="223:38">*</operator> <name pos:start="223:40" pos:end="223:69"><name pos:start="223:40" pos:end="223:56">formatted_picture</name><operator pos:start="223:57" pos:end="223:58">-&gt;</operator><name pos:start="223:59" pos:end="223:66">linesize</name><index pos:start="223:67" pos:end="223:69">[<expr pos:start="223:68" pos:end="223:68"><literal type="number" pos:start="223:68" pos:end="223:68">1</literal></expr>]</index></name><operator pos:start="223:70" pos:end="223:70">)</operator> <operator pos:start="223:72" pos:end="223:72">+</operator>

                <operator pos:start="225:17" pos:end="225:17">(</operator><name pos:start="225:18" pos:end="225:30"><name pos:start="225:18" pos:end="225:20">ost</name><operator pos:start="225:21" pos:end="225:22">-&gt;</operator><name pos:start="225:23" pos:end="225:30">leftBand</name></name> <operator pos:start="225:32" pos:end="225:33">&gt;&gt;</operator> <literal type="number" pos:start="225:35" pos:end="225:35">1</literal><operator pos:start="225:36" pos:end="225:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="229:9" pos:end="233:37"><expr pos:start="229:9" pos:end="233:36"><name pos:start="229:9" pos:end="229:33"><name pos:start="229:9" pos:end="229:25">picture_crop_temp</name><operator pos:start="229:26" pos:end="229:26">.</operator><name pos:start="229:27" pos:end="229:30">data</name><index pos:start="229:31" pos:end="229:33">[<expr pos:start="229:32" pos:end="229:32"><literal type="number" pos:start="229:32" pos:end="229:32">2</literal></expr>]</index></name> <operator pos:start="229:35" pos:end="229:35">=</operator> <name pos:start="229:37" pos:end="229:62"><name pos:start="229:37" pos:end="229:53">formatted_picture</name><operator pos:start="229:54" pos:end="229:55">-&gt;</operator><name pos:start="229:56" pos:end="229:59">data</name><index pos:start="229:60" pos:end="229:62">[<expr pos:start="229:61" pos:end="229:61"><literal type="number" pos:start="229:61" pos:end="229:61">2</literal></expr>]</index></name> <operator pos:start="229:64" pos:end="229:64">+</operator>

                <operator pos:start="231:17" pos:end="231:17">(</operator><operator pos:start="231:18" pos:end="231:18">(</operator><name pos:start="231:19" pos:end="231:30"><name pos:start="231:19" pos:end="231:21">ost</name><operator pos:start="231:22" pos:end="231:23">-&gt;</operator><name pos:start="231:24" pos:end="231:30">topBand</name></name> <operator pos:start="231:32" pos:end="231:33">&gt;&gt;</operator> <literal type="number" pos:start="231:35" pos:end="231:35">1</literal><operator pos:start="231:36" pos:end="231:36">)</operator> <operator pos:start="231:38" pos:end="231:38">*</operator> <name pos:start="231:40" pos:end="231:69"><name pos:start="231:40" pos:end="231:56">formatted_picture</name><operator pos:start="231:57" pos:end="231:58">-&gt;</operator><name pos:start="231:59" pos:end="231:66">linesize</name><index pos:start="231:67" pos:end="231:69">[<expr pos:start="231:68" pos:end="231:68"><literal type="number" pos:start="231:68" pos:end="231:68">2</literal></expr>]</index></name><operator pos:start="231:70" pos:end="231:70">)</operator> <operator pos:start="231:72" pos:end="231:72">+</operator>

                <operator pos:start="233:17" pos:end="233:17">(</operator><name pos:start="233:18" pos:end="233:30"><name pos:start="233:18" pos:end="233:20">ost</name><operator pos:start="233:21" pos:end="233:22">-&gt;</operator><name pos:start="233:23" pos:end="233:30">leftBand</name></name> <operator pos:start="233:32" pos:end="233:33">&gt;&gt;</operator> <literal type="number" pos:start="233:35" pos:end="233:35">1</literal><operator pos:start="233:36" pos:end="233:36">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="237:9" pos:end="237:71"><expr pos:start="237:9" pos:end="237:70"><name pos:start="237:9" pos:end="237:37"><name pos:start="237:9" pos:end="237:25">picture_crop_temp</name><operator pos:start="237:26" pos:end="237:26">.</operator><name pos:start="237:27" pos:end="237:34">linesize</name><index pos:start="237:35" pos:end="237:37">[<expr pos:start="237:36" pos:end="237:36"><literal type="number" pos:start="237:36" pos:end="237:36">0</literal></expr>]</index></name> <operator pos:start="237:39" pos:end="237:39">=</operator> <name pos:start="237:41" pos:end="237:70"><name pos:start="237:41" pos:end="237:57">formatted_picture</name><operator pos:start="237:58" pos:end="237:59">-&gt;</operator><name pos:start="237:60" pos:end="237:67">linesize</name><index pos:start="237:68" pos:end="237:70">[<expr pos:start="237:69" pos:end="237:69"><literal type="number" pos:start="237:69" pos:end="237:69">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:71"><expr pos:start="239:9" pos:end="239:70"><name pos:start="239:9" pos:end="239:37"><name pos:start="239:9" pos:end="239:25">picture_crop_temp</name><operator pos:start="239:26" pos:end="239:26">.</operator><name pos:start="239:27" pos:end="239:34">linesize</name><index pos:start="239:35" pos:end="239:37">[<expr pos:start="239:36" pos:end="239:36"><literal type="number" pos:start="239:36" pos:end="239:36">1</literal></expr>]</index></name> <operator pos:start="239:39" pos:end="239:39">=</operator> <name pos:start="239:41" pos:end="239:70"><name pos:start="239:41" pos:end="239:57">formatted_picture</name><operator pos:start="239:58" pos:end="239:59">-&gt;</operator><name pos:start="239:60" pos:end="239:67">linesize</name><index pos:start="239:68" pos:end="239:70">[<expr pos:start="239:69" pos:end="239:69"><literal type="number" pos:start="239:69" pos:end="239:69">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:71"><expr pos:start="241:9" pos:end="241:70"><name pos:start="241:9" pos:end="241:37"><name pos:start="241:9" pos:end="241:25">picture_crop_temp</name><operator pos:start="241:26" pos:end="241:26">.</operator><name pos:start="241:27" pos:end="241:34">linesize</name><index pos:start="241:35" pos:end="241:37">[<expr pos:start="241:36" pos:end="241:36"><literal type="number" pos:start="241:36" pos:end="241:36">2</literal></expr>]</index></name> <operator pos:start="241:39" pos:end="241:39">=</operator> <name pos:start="241:41" pos:end="241:70"><name pos:start="241:41" pos:end="241:57">formatted_picture</name><operator pos:start="241:58" pos:end="241:59">-&gt;</operator><name pos:start="241:60" pos:end="241:67">linesize</name><index pos:start="241:68" pos:end="241:70">[<expr pos:start="241:69" pos:end="241:69"><literal type="number" pos:start="241:69" pos:end="241:69">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:43"><expr pos:start="243:9" pos:end="243:42"><name pos:start="243:9" pos:end="243:21">final_picture</name> <operator pos:start="243:23" pos:end="243:23">=</operator> <operator pos:start="243:25" pos:end="243:25">&amp;</operator><name pos:start="243:26" pos:end="243:42">picture_crop_temp</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="245:7" pos:end="249:5">else <block pos:start="245:12" pos:end="249:5">{<block_content pos:start="247:9" pos:end="247:42">

        <expr_stmt pos:start="247:9" pos:end="247:42"><expr pos:start="247:9" pos:end="247:41"><name pos:start="247:9" pos:end="247:21">final_picture</name> <operator pos:start="247:23" pos:end="247:23">=</operator> <name pos:start="247:25" pos:end="247:41">formatted_picture</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="251:5" pos:end="251:36">/* duplicates frame if needed */</comment>

    <comment type="block" pos:start="253:5" pos:end="253:41">/* XXX: pb because no interleaving */</comment>

    <for pos:start="255:5" pos:end="325:5">for<control pos:start="255:8" pos:end="255:28">(<init pos:start="255:9" pos:end="255:12"><expr pos:start="255:9" pos:end="255:11"><name pos:start="255:9" pos:end="255:9">i</name><operator pos:start="255:10" pos:end="255:10">=</operator><literal type="number" pos:start="255:11" pos:end="255:11">0</literal></expr>;</init><condition pos:start="255:13" pos:end="255:24"><expr pos:start="255:13" pos:end="255:23"><name pos:start="255:13" pos:end="255:13">i</name><operator pos:start="255:14" pos:end="255:14">&lt;</operator><name pos:start="255:15" pos:end="255:23">nb_frames</name></expr>;</condition><incr pos:start="255:25" pos:end="255:27"><expr pos:start="255:25" pos:end="255:27"><name pos:start="255:25" pos:end="255:25">i</name><operator pos:start="255:26" pos:end="255:27">++</operator></expr></incr>)</control> <block pos:start="255:30" pos:end="325:5">{<block_content pos:start="257:9" pos:end="323:28">

        <if_stmt pos:start="257:9" pos:end="321:9"><if pos:start="257:9" pos:end="269:9">if <condition pos:start="257:12" pos:end="257:49">(<expr pos:start="257:13" pos:end="257:48"><name pos:start="257:13" pos:end="257:29"><name pos:start="257:13" pos:end="257:13">s</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:22">oformat</name><operator pos:start="257:23" pos:end="257:24">-&gt;</operator><name pos:start="257:25" pos:end="257:29">flags</name></name> <operator pos:start="257:31" pos:end="257:31">&amp;</operator> <name pos:start="257:33" pos:end="257:48">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="257:51" pos:end="269:9">{<block_content pos:start="265:13" pos:end="267:72">

            <comment type="block" pos:start="259:13" pos:end="263:25">/* raw pictures are written as AVPicture structure to

               avoid any copies. We support temorarily the older

               method. */</comment>

            <expr_stmt pos:start="265:13" pos:end="267:72"><expr pos:start="265:13" pos:end="267:71"><call pos:start="265:13" pos:end="267:71"><name pos:start="265:13" pos:end="265:26">av_write_frame</name><argument_list pos:start="265:27" pos:end="267:71">(<argument pos:start="265:28" pos:end="265:28"><expr pos:start="265:28" pos:end="265:28"><name pos:start="265:28" pos:end="265:28">s</name></expr></argument>, <argument pos:start="265:31" pos:end="265:40"><expr pos:start="265:31" pos:end="265:40"><name pos:start="265:31" pos:end="265:40"><name pos:start="265:31" pos:end="265:33">ost</name><operator pos:start="265:34" pos:end="265:35">-&gt;</operator><name pos:start="265:36" pos:end="265:40">index</name></name></expr></argument>, 

                           <argument pos:start="267:28" pos:end="267:51"><expr pos:start="267:28" pos:end="267:51"><operator pos:start="267:28" pos:end="267:28">(</operator><name pos:start="267:29" pos:end="267:35">uint8_t</name> <operator pos:start="267:37" pos:end="267:37">*</operator><operator pos:start="267:38" pos:end="267:38">)</operator><name pos:start="267:39" pos:end="267:51">final_picture</name></expr></argument>, <argument pos:start="267:54" pos:end="267:70"><expr pos:start="267:54" pos:end="267:70"><sizeof pos:start="267:54" pos:end="267:70">sizeof<argument_list pos:start="267:60" pos:end="267:70">(<argument pos:start="267:61" pos:end="267:69"><expr pos:start="267:61" pos:end="267:69"><name pos:start="267:61" pos:end="267:69">AVPicture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="269:11" pos:end="321:9">else <block pos:start="269:16" pos:end="321:9">{<block_content pos:start="271:13" pos:end="319:13">

            <decl_stmt pos:start="271:13" pos:end="271:32"><decl pos:start="271:13" pos:end="271:31"><type pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:19">AVFrame</name></type> <name pos:start="271:21" pos:end="271:31">big_picture</name></decl>;</decl_stmt>

            

            <expr_stmt pos:start="275:13" pos:end="275:53"><expr pos:start="275:13" pos:end="275:52"><call pos:start="275:13" pos:end="275:52"><name pos:start="275:13" pos:end="275:18">memset</name><argument_list pos:start="275:19" pos:end="275:52">(<argument pos:start="275:20" pos:end="275:31"><expr pos:start="275:20" pos:end="275:31"><operator pos:start="275:20" pos:end="275:20">&amp;</operator><name pos:start="275:21" pos:end="275:31">big_picture</name></expr></argument>, <argument pos:start="275:34" pos:end="275:34"><expr pos:start="275:34" pos:end="275:34"><literal type="number" pos:start="275:34" pos:end="275:34">0</literal></expr></argument>, <argument pos:start="275:37" pos:end="275:51"><expr pos:start="275:37" pos:end="275:51"><sizeof pos:start="275:37" pos:end="275:51">sizeof<argument_list pos:start="275:43" pos:end="275:51">(<argument pos:start="275:44" pos:end="275:50"><expr pos:start="275:44" pos:end="275:50"><name pos:start="275:44" pos:end="275:50">AVFrame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:54"><expr pos:start="277:13" pos:end="277:53"><operator pos:start="277:13" pos:end="277:13">*</operator><operator pos:start="277:14" pos:end="277:14">(</operator><name pos:start="277:15" pos:end="277:23">AVPicture</name><operator pos:start="277:24" pos:end="277:24">*</operator><operator pos:start="277:25" pos:end="277:25">)</operator><operator pos:start="277:26" pos:end="277:26">&amp;</operator><name pos:start="277:27" pos:end="277:37">big_picture</name><operator pos:start="277:38" pos:end="277:38">=</operator> <operator pos:start="277:40" pos:end="277:40">*</operator><name pos:start="277:41" pos:end="277:53">final_picture</name></expr>;</expr_stmt>

                        

            <comment type="block" pos:start="281:13" pos:end="283:40">/* handles sameq here. This is not correct because it may

               not be a global option */</comment>

            <if_stmt pos:start="285:13" pos:end="291:55"><if pos:start="285:13" pos:end="289:13">if <condition pos:start="285:16" pos:end="285:29">(<expr pos:start="285:17" pos:end="285:28"><name pos:start="285:17" pos:end="285:28">same_quality</name></expr>)</condition> <block pos:start="285:31" pos:end="289:13">{<block_content pos:start="287:17" pos:end="287:55">

                <expr_stmt pos:start="287:17" pos:end="287:55"><expr pos:start="287:17" pos:end="287:54"><name pos:start="287:17" pos:end="287:35"><name pos:start="287:17" pos:end="287:27">big_picture</name><operator pos:start="287:28" pos:end="287:28">.</operator><name pos:start="287:29" pos:end="287:35">quality</name></name> <operator pos:start="287:37" pos:end="287:37">=</operator> <name pos:start="287:39" pos:end="287:54"><name pos:start="287:39" pos:end="287:41">ist</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:45">st</name><operator pos:start="287:46" pos:end="287:47">-&gt;</operator><name pos:start="287:48" pos:end="287:54">quality</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="289:14" pos:end="291:55">else<block type="pseudo" pos:start="291:17" pos:end="291:55"><block_content pos:start="291:17" pos:end="291:55">

                <expr_stmt pos:start="291:17" pos:end="291:55"><expr pos:start="291:17" pos:end="291:54"><name pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:27">big_picture</name><operator pos:start="291:28" pos:end="291:28">.</operator><name pos:start="291:29" pos:end="291:35">quality</name></name> <operator pos:start="291:37" pos:end="291:37">=</operator> <name pos:start="291:39" pos:end="291:54"><name pos:start="291:39" pos:end="291:41">ost</name><operator pos:start="291:42" pos:end="291:43">-&gt;</operator><name pos:start="291:44" pos:end="291:45">st</name><operator pos:start="291:46" pos:end="291:47">-&gt;</operator><name pos:start="291:48" pos:end="291:54">quality</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            

            <expr_stmt pos:start="295:13" pos:end="299:53"><expr pos:start="295:13" pos:end="299:52"><name pos:start="295:13" pos:end="295:15">ret</name> <operator pos:start="295:17" pos:end="295:17">=</operator> <call pos:start="295:19" pos:end="299:52"><name pos:start="295:19" pos:end="295:38">avcodec_encode_video</name><argument_list pos:start="295:39" pos:end="299:52">(<argument pos:start="295:40" pos:end="295:42"><expr pos:start="295:40" pos:end="295:42"><name pos:start="295:40" pos:end="295:42">enc</name></expr></argument>, 

                                       <argument pos:start="297:40" pos:end="297:51"><expr pos:start="297:40" pos:end="297:51"><name pos:start="297:40" pos:end="297:51">video_buffer</name></expr></argument>, <argument pos:start="297:54" pos:end="297:70"><expr pos:start="297:54" pos:end="297:70"><name pos:start="297:54" pos:end="297:70">VIDEO_BUFFER_SIZE</name></expr></argument>,

                                       <argument pos:start="299:40" pos:end="299:51"><expr pos:start="299:40" pos:end="299:51"><operator pos:start="299:40" pos:end="299:40">&amp;</operator><name pos:start="299:41" pos:end="299:51">big_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="301:13" pos:end="301:53">//enc-&gt;frame_number = enc-&gt;real_pict_num;</comment>

            <expr_stmt pos:start="303:13" pos:end="303:61"><expr pos:start="303:13" pos:end="303:60"><call pos:start="303:13" pos:end="303:60"><name pos:start="303:13" pos:end="303:26">av_write_frame</name><argument_list pos:start="303:27" pos:end="303:60">(<argument pos:start="303:28" pos:end="303:28"><expr pos:start="303:28" pos:end="303:28"><name pos:start="303:28" pos:end="303:28">s</name></expr></argument>, <argument pos:start="303:31" pos:end="303:40"><expr pos:start="303:31" pos:end="303:40"><name pos:start="303:31" pos:end="303:40"><name pos:start="303:31" pos:end="303:33">ost</name><operator pos:start="303:34" pos:end="303:35">-&gt;</operator><name pos:start="303:36" pos:end="303:40">index</name></name></expr></argument>, <argument pos:start="303:43" pos:end="303:54"><expr pos:start="303:43" pos:end="303:54"><name pos:start="303:43" pos:end="303:54">video_buffer</name></expr></argument>, <argument pos:start="303:57" pos:end="303:59"><expr pos:start="303:57" pos:end="303:59"><name pos:start="303:57" pos:end="303:59">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:30"><expr pos:start="305:13" pos:end="305:29"><operator pos:start="305:13" pos:end="305:13">*</operator><name pos:start="305:14" pos:end="305:23">frame_size</name> <operator pos:start="305:25" pos:end="305:25">=</operator> <name pos:start="305:27" pos:end="305:29">ret</name></expr>;</expr_stmt>

            <comment type="line" pos:start="307:13" pos:end="307:67">//fprintf(stderr,"\nFrame: %3d %3d size: %5d type: %d",</comment>

            <comment type="line" pos:start="309:13" pos:end="309:67">//        enc-&gt;frame_number-1, enc-&gt;real_pict_num, ret,</comment>

            <comment type="line" pos:start="311:13" pos:end="311:38">//        enc-&gt;pict_type);</comment>

            <comment type="block" pos:start="313:13" pos:end="313:41">/* if two pass, output log */</comment>

            <if_stmt pos:start="315:13" pos:end="319:13"><if pos:start="315:13" pos:end="319:13">if <condition pos:start="315:16" pos:end="315:47">(<expr pos:start="315:17" pos:end="315:46"><name pos:start="315:17" pos:end="315:28"><name pos:start="315:17" pos:end="315:19">ost</name><operator pos:start="315:20" pos:end="315:21">-&gt;</operator><name pos:start="315:22" pos:end="315:28">logfile</name></name> <operator pos:start="315:30" pos:end="315:31">&amp;&amp;</operator> <name pos:start="315:33" pos:end="315:46"><name pos:start="315:33" pos:end="315:35">enc</name><operator pos:start="315:36" pos:end="315:37">-&gt;</operator><name pos:start="315:38" pos:end="315:46">stats_out</name></name></expr>)</condition> <block pos:start="315:49" pos:end="319:13">{<block_content pos:start="317:17" pos:end="317:60">

                <expr_stmt pos:start="317:17" pos:end="317:60"><expr pos:start="317:17" pos:end="317:59"><call pos:start="317:17" pos:end="317:59"><name pos:start="317:17" pos:end="317:23">fprintf</name><argument_list pos:start="317:24" pos:end="317:59">(<argument pos:start="317:25" pos:end="317:36"><expr pos:start="317:25" pos:end="317:36"><name pos:start="317:25" pos:end="317:36"><name pos:start="317:25" pos:end="317:27">ost</name><operator pos:start="317:28" pos:end="317:29">-&gt;</operator><name pos:start="317:30" pos:end="317:36">logfile</name></name></expr></argument>, <argument pos:start="317:39" pos:end="317:42"><expr pos:start="317:39" pos:end="317:42"><literal type="string" pos:start="317:39" pos:end="317:42">"%s"</literal></expr></argument>, <argument pos:start="317:45" pos:end="317:58"><expr pos:start="317:45" pos:end="317:58"><name pos:start="317:45" pos:end="317:58"><name pos:start="317:45" pos:end="317:47">enc</name><operator pos:start="317:48" pos:end="317:49">-&gt;</operator><name pos:start="317:50" pos:end="317:58">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="323:9" pos:end="323:28"><expr pos:start="323:9" pos:end="323:27"><name pos:start="323:9" pos:end="323:25"><name pos:start="323:9" pos:end="323:11">ost</name><operator pos:start="323:12" pos:end="323:13">-&gt;</operator><name pos:start="323:14" pos:end="323:25">frame_number</name></name><operator pos:start="323:26" pos:end="323:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

 <label pos:start="327:2" pos:end="327:9"><name pos:start="327:2" pos:end="327:8">the_end</name>:</label>

    <expr_stmt pos:start="329:5" pos:end="329:17"><expr pos:start="329:5" pos:end="329:16"><call pos:start="329:5" pos:end="329:16"><name pos:start="329:5" pos:end="329:11">av_free</name><argument_list pos:start="329:12" pos:end="329:16">(<argument pos:start="329:13" pos:end="329:15"><expr pos:start="329:13" pos:end="329:15"><name pos:start="329:13" pos:end="329:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:18"><expr pos:start="331:5" pos:end="331:17"><call pos:start="331:5" pos:end="331:17"><name pos:start="331:5" pos:end="331:11">av_free</name><argument_list pos:start="331:12" pos:end="331:17">(<argument pos:start="331:13" pos:end="331:16"><expr pos:start="331:13" pos:end="331:16"><name pos:start="331:13" pos:end="331:16">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
