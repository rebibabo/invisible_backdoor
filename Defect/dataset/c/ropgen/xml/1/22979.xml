<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22979.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decorrelate</name><parameter_list pos:start="1:23" pos:end="1:68">(<parameter pos:start="1:24" pos:end="1:39"><decl pos:start="1:24" pos:end="1:39"><type pos:start="1:24" pos:end="1:39"><name pos:start="1:24" pos:end="1:36">TAKDecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:47"><decl pos:start="1:42" pos:end="1:47"><type pos:start="1:42" pos:end="1:47"><name pos:start="1:42" pos:end="1:44">int</name></type> <name pos:start="1:46" pos:end="1:47">c1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:55"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">c2</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:67">length</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="231:1">{<block_content pos:start="5:5" pos:end="229:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">int32_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:15">p1</name>       <init pos:start="7:23" pos:end="7:42">= <expr pos:start="7:25" pos:end="7:42"><name pos:start="7:25" pos:end="7:38"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:34">decoded</name><index pos:start="7:35" pos:end="7:38">[<expr pos:start="7:36" pos:end="7:37"><name pos:start="7:36" pos:end="7:37">c1</name></expr>]</index></name> <operator pos:start="7:40" pos:end="7:40">+</operator> <literal type="number" pos:start="7:42" pos:end="7:42">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:43"><decl pos:start="9:5" pos:end="9:42"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">int32_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">p2</name>       <init pos:start="9:23" pos:end="9:42">= <expr pos:start="9:25" pos:end="9:42"><name pos:start="9:25" pos:end="9:38"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:34">decoded</name><index pos:start="9:35" pos:end="9:38">[<expr pos:start="9:36" pos:end="9:37"><name pos:start="9:36" pos:end="9:37">c2</name></expr>]</index></name> <operator pos:start="9:40" pos:end="9:40">+</operator> <literal type="number" pos:start="9:42" pos:end="9:42">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">dshift</name></decl>, <decl pos:start="13:17" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:23">dfactor</name></decl>;</decl_stmt>



    <switch pos:start="17:5" pos:end="225:5">switch <condition pos:start="17:12" pos:end="17:21">(<expr pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">dmode</name></name></expr>)</condition> <block pos:start="17:23" pos:end="225:5">{<block_content pos:start="19:5" pos:end="223:5">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case> <comment type="block" pos:start="19:13" pos:end="19:27">/* left/side */</comment>

        <for pos:start="21:9" pos:end="29:9">for <control pos:start="21:13" pos:end="21:36">(<init pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:14">i</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr>;</init> <condition pos:start="21:21" pos:end="21:31"><expr pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:21">i</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <name pos:start="21:25" pos:end="21:30">length</name></expr>;</condition> <incr pos:start="21:33" pos:end="21:35"><expr pos:start="21:33" pos:end="21:35"><name pos:start="21:33" pos:end="21:33">i</name><operator pos:start="21:34" pos:end="21:35">++</operator></expr></incr>)</control> <block pos:start="21:38" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:30">

            <decl_stmt pos:start="23:13" pos:end="23:30"><decl pos:start="23:13" pos:end="23:29"><type pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:19">int32_t</name></type> <name pos:start="23:21" pos:end="23:21">a</name> <init pos:start="23:23" pos:end="23:29">= <expr pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:29"><name pos:start="23:25" pos:end="23:26">p1</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:30"><decl pos:start="25:13" pos:end="25:29"><type pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:19">int32_t</name></type> <name pos:start="25:21" pos:end="25:21">b</name> <init pos:start="25:23" pos:end="25:29">= <expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:26">p2</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:17"><name pos:start="27:13" pos:end="27:14">p2</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><name pos:start="27:16" pos:end="27:16">i</name></expr>]</index></name>     <operator pos:start="27:23" pos:end="27:23">=</operator> <name pos:start="27:25" pos:end="27:25">a</name> <operator pos:start="27:27" pos:end="27:27">+</operator> <name pos:start="27:29" pos:end="27:29">b</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case> <comment type="block" pos:start="33:13" pos:end="33:28">/* side/right */</comment>

        <for pos:start="35:9" pos:end="43:9">for <control pos:start="35:13" pos:end="35:36">(<init pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:14">i</name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</init> <condition pos:start="35:21" pos:end="35:31"><expr pos:start="35:21" pos:end="35:30"><name pos:start="35:21" pos:end="35:21">i</name> <operator pos:start="35:23" pos:end="35:23">&lt;</operator> <name pos:start="35:25" pos:end="35:30">length</name></expr>;</condition> <incr pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:33">i</name><operator pos:start="35:34" pos:end="35:35">++</operator></expr></incr>)</control> <block pos:start="35:38" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:30">

            <decl_stmt pos:start="37:13" pos:end="37:30"><decl pos:start="37:13" pos:end="37:29"><type pos:start="37:13" pos:end="37:19"><name pos:start="37:13" pos:end="37:19">int32_t</name></type> <name pos:start="37:21" pos:end="37:21">a</name> <init pos:start="37:23" pos:end="37:29">= <expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:26">p1</name><index pos:start="37:27" pos:end="37:29">[<expr pos:start="37:28" pos:end="37:28"><name pos:start="37:28" pos:end="37:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="39:13" pos:end="39:30"><decl pos:start="39:13" pos:end="39:29"><type pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:19">int32_t</name></type> <name pos:start="39:21" pos:end="39:21">b</name> <init pos:start="39:23" pos:end="39:29">= <expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:26">p2</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:30"><expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:17"><name pos:start="41:13" pos:end="41:14">p1</name><index pos:start="41:15" pos:end="41:17">[<expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">i</name></expr>]</index></name>     <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:25">b</name> <operator pos:start="41:27" pos:end="41:27">-</operator> <name pos:start="41:29" pos:end="41:29">a</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:26">/* side/mid */</comment>

        <for pos:start="49:9" pos:end="61:9">for <control pos:start="49:13" pos:end="49:36">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:30">length</name></expr>;</condition> <incr pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:33">i</name><operator pos:start="49:34" pos:end="49:35">++</operator></expr></incr>)</control> <block pos:start="49:38" pos:end="61:9">{<block_content pos:start="51:13" pos:end="59:30">

            <decl_stmt pos:start="51:13" pos:end="51:30"><decl pos:start="51:13" pos:end="51:29"><type pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:19">int32_t</name></type> <name pos:start="51:21" pos:end="51:21">a</name> <init pos:start="51:23" pos:end="51:29">= <expr pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:26">p1</name><index pos:start="51:27" pos:end="51:29">[<expr pos:start="51:28" pos:end="51:28"><name pos:start="51:28" pos:end="51:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="53:13" pos:end="53:30"><decl pos:start="53:13" pos:end="53:29"><type pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:19">int32_t</name></type> <name pos:start="53:21" pos:end="53:21">b</name> <init pos:start="53:23" pos:end="53:29">= <expr pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:26">p2</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:31"><expr pos:start="55:13" pos:end="55:30"><name pos:start="55:13" pos:end="55:13">a</name>        <operator pos:start="55:22" pos:end="55:23">-=</operator> <name pos:start="55:25" pos:end="55:25">b</name> <operator pos:start="55:27" pos:end="55:28">&gt;&gt;</operator> <literal type="number" pos:start="55:30" pos:end="55:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:14">p1</name><index pos:start="57:15" pos:end="57:17">[<expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">i</name></expr>]</index></name>     <operator pos:start="57:23" pos:end="57:23">=</operator> <name pos:start="57:25" pos:end="57:25">a</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:17"><name pos:start="59:13" pos:end="59:14">p2</name><index pos:start="59:15" pos:end="59:17">[<expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">i</name></expr>]</index></name>     <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:25">a</name> <operator pos:start="59:27" pos:end="59:27">+</operator> <name pos:start="59:29" pos:end="59:29">b</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">4</literal></expr>:</case> <comment type="block" pos:start="65:13" pos:end="65:45">/* side/left with scale factor */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:33"><expr pos:start="67:9" pos:end="67:32"><call pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:14">FFSWAP</name><argument_list pos:start="67:15" pos:end="67:32">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:22">int32_t</name><operator pos:start="67:23" pos:end="67:23">*</operator></expr></argument>, <argument pos:start="67:26" pos:end="67:27"><expr pos:start="67:26" pos:end="67:27"><name pos:start="67:26" pos:end="67:27">p1</name></expr></argument>, <argument pos:start="67:30" pos:end="67:31"><expr pos:start="67:30" pos:end="67:31"><name pos:start="67:30" pos:end="67:31">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="69:5" pos:end="69:11">case <expr pos:start="69:10" pos:end="69:10"><literal type="number" pos:start="69:10" pos:end="69:10">5</literal></expr>:</case> <comment type="block" pos:start="69:13" pos:end="69:46">/* side/right with scale factor */</comment>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:14">dshift</name>  <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:35"><name pos:start="71:19" pos:end="71:31">get_bits_esc4</name><argument_list pos:start="71:32" pos:end="71:35">(<argument pos:start="71:33" pos:end="71:34"><expr pos:start="71:33" pos:end="71:34"><name pos:start="71:33" pos:end="71:34">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:36"><expr pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:15">dfactor</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:35"><name pos:start="73:19" pos:end="73:27">get_sbits</name><argument_list pos:start="73:28" pos:end="73:35">(<argument pos:start="73:29" pos:end="73:30"><expr pos:start="73:29" pos:end="73:30"><name pos:start="73:29" pos:end="73:30">gb</name></expr></argument>, <argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><literal type="number" pos:start="73:33" pos:end="73:34">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="85:9">for <control pos:start="75:13" pos:end="75:36">(<init pos:start="75:14" pos:end="75:19"><expr pos:start="75:14" pos:end="75:18"><name pos:start="75:14" pos:end="75:14">i</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">0</literal></expr>;</init> <condition pos:start="75:21" pos:end="75:31"><expr pos:start="75:21" pos:end="75:30"><name pos:start="75:21" pos:end="75:21">i</name> <operator pos:start="75:23" pos:end="75:23">&lt;</operator> <name pos:start="75:25" pos:end="75:30">length</name></expr>;</condition> <incr pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:33">i</name><operator pos:start="75:34" pos:end="75:35">++</operator></expr></incr>)</control> <block pos:start="75:38" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:30">

            <decl_stmt pos:start="77:13" pos:end="77:30"><decl pos:start="77:13" pos:end="77:29"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:19">int32_t</name></type> <name pos:start="77:21" pos:end="77:21">a</name> <init pos:start="77:23" pos:end="77:29">= <expr pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:29"><name pos:start="77:25" pos:end="77:26">p1</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><name pos:start="77:28" pos:end="77:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="79:13" pos:end="79:30"><decl pos:start="79:13" pos:end="79:29"><type pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:19">int32_t</name></type> <name pos:start="79:21" pos:end="79:21">b</name> <init pos:start="79:23" pos:end="79:29">= <expr pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:29"><name pos:start="79:25" pos:end="79:26">p2</name><index pos:start="79:27" pos:end="79:29">[<expr pos:start="79:28" pos:end="79:28"><name pos:start="79:28" pos:end="79:28">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:69"><expr pos:start="81:13" pos:end="81:68"><name pos:start="81:13" pos:end="81:13">b</name>         <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:31">dfactor</name> <operator pos:start="81:33" pos:end="81:33">*</operator> <operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:36">b</name> <operator pos:start="81:38" pos:end="81:39">&gt;&gt;</operator> <name pos:start="81:41" pos:end="81:46">dshift</name><operator pos:start="81:47" pos:end="81:47">)</operator> <operator pos:start="81:49" pos:end="81:49">+</operator> <literal type="number" pos:start="81:51" pos:end="81:53">128</literal> <operator pos:start="81:55" pos:end="81:56">&gt;&gt;</operator> <literal type="number" pos:start="81:58" pos:end="81:58">8</literal> <operator pos:start="81:60" pos:end="81:61">&lt;&lt;</operator> <name pos:start="81:63" pos:end="81:68">dshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:17"><name pos:start="83:13" pos:end="83:14">p1</name><index pos:start="83:15" pos:end="83:17">[<expr pos:start="83:16" pos:end="83:16"><name pos:start="83:16" pos:end="83:16">i</name></expr>]</index></name>     <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:25">b</name> <operator pos:start="83:27" pos:end="83:27">-</operator> <name pos:start="83:29" pos:end="83:29">a</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:11">case <expr pos:start="89:10" pos:end="89:10"><literal type="number" pos:start="89:10" pos:end="89:10">6</literal></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:33"><expr pos:start="91:9" pos:end="91:32"><call pos:start="91:9" pos:end="91:32"><name pos:start="91:9" pos:end="91:14">FFSWAP</name><argument_list pos:start="91:15" pos:end="91:32">(<argument pos:start="91:16" pos:end="91:23"><expr pos:start="91:16" pos:end="91:23"><name pos:start="91:16" pos:end="91:22">int32_t</name><operator pos:start="91:23" pos:end="91:23">*</operator></expr></argument>, <argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">p1</name></expr></argument>, <argument pos:start="91:30" pos:end="91:31"><expr pos:start="91:30" pos:end="91:31"><name pos:start="91:30" pos:end="91:31">p2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <case pos:start="93:5" pos:end="93:11">case <expr pos:start="93:10" pos:end="93:10"><literal type="number" pos:start="93:10" pos:end="93:10">7</literal></expr>:</case> <block pos:start="93:13" pos:end="223:5">{<block_content pos:start="95:9" pos:end="221:14">

        <decl_stmt pos:start="95:9" pos:end="95:60"><decl pos:start="95:9" pos:end="95:19"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:19">length2</name></decl>, <decl pos:start="95:22" pos:end="95:31"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:22" pos:end="95:31">order_half</name></decl>, <decl pos:start="95:34" pos:end="95:45"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:34" pos:end="95:45">filter_order</name></decl>, <decl pos:start="95:48" pos:end="95:52"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:48" pos:end="95:52">dval1</name></decl>, <decl pos:start="95:55" pos:end="95:59"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:55" pos:end="95:59">dval2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:30"><decl pos:start="97:9" pos:end="97:15"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:15">tmp</name></decl>, <decl pos:start="97:18" pos:end="97:18"><type ref="prev" pos:start="97:9" pos:end="97:11"/><name pos:start="97:18" pos:end="97:18">x</name></decl>, <decl pos:start="97:21" pos:end="97:29"><type ref="prev" pos:start="97:9" pos:end="97:11"/><name pos:start="97:21" pos:end="97:29">code_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="101:9" pos:end="103:39"><if pos:start="101:9" pos:end="103:39">if <condition pos:start="101:12" pos:end="101:25">(<expr pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:18">length</name> <operator pos:start="101:20" pos:end="101:20">&lt;</operator> <literal type="number" pos:start="101:22" pos:end="101:24">256</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:39"><block_content pos:start="103:13" pos:end="103:39">

            <return pos:start="103:13" pos:end="103:39">return <expr pos:start="103:20" pos:end="103:38"><name pos:start="103:20" pos:end="103:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:41"><expr pos:start="107:9" pos:end="107:40"><name pos:start="107:9" pos:end="107:14">dshift</name>       <operator pos:start="107:22" pos:end="107:22">=</operator> <call pos:start="107:24" pos:end="107:40"><name pos:start="107:24" pos:end="107:36">get_bits_esc4</name><argument_list pos:start="107:37" pos:end="107:40">(<argument pos:start="107:38" pos:end="107:39"><expr pos:start="107:38" pos:end="107:39"><name pos:start="107:38" pos:end="107:39">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:42"><expr pos:start="109:9" pos:end="109:41"><name pos:start="109:9" pos:end="109:20">filter_order</name> <operator pos:start="109:22" pos:end="109:22">=</operator> <literal type="number" pos:start="109:24" pos:end="109:24">8</literal> <operator pos:start="109:26" pos:end="109:27">&lt;&lt;</operator> <call pos:start="109:29" pos:end="109:41"><name pos:start="109:29" pos:end="109:37">get_bits1</name><argument_list pos:start="109:38" pos:end="109:41">(<argument pos:start="109:39" pos:end="109:40"><expr pos:start="109:39" pos:end="109:40"><name pos:start="109:39" pos:end="109:40">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:37"><expr pos:start="111:9" pos:end="111:36"><name pos:start="111:9" pos:end="111:13">dval1</name>        <operator pos:start="111:22" pos:end="111:22">=</operator> <call pos:start="111:24" pos:end="111:36"><name pos:start="111:24" pos:end="111:32">get_bits1</name><argument_list pos:start="111:33" pos:end="111:36">(<argument pos:start="111:34" pos:end="111:35"><expr pos:start="111:34" pos:end="111:35"><name pos:start="111:34" pos:end="111:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:13">dval2</name>        <operator pos:start="113:22" pos:end="113:22">=</operator> <call pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:32">get_bits1</name><argument_list pos:start="113:33" pos:end="113:36">(<argument pos:start="113:34" pos:end="113:35"><expr pos:start="113:34" pos:end="113:35"><name pos:start="113:34" pos:end="113:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><call pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:18">AV_ZERO128</name><argument_list pos:start="117:19" pos:end="117:33">(<argument pos:start="117:20" pos:end="117:32"><expr pos:start="117:20" pos:end="117:32"><name pos:start="117:20" pos:end="117:28"><name pos:start="117:20" pos:end="117:20">s</name><operator pos:start="117:21" pos:end="117:22">-&gt;</operator><name pos:start="117:23" pos:end="117:28">filter</name></name> <operator pos:start="117:30" pos:end="117:30">+</operator> <literal type="number" pos:start="117:32" pos:end="117:32">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="119:9" pos:end="127:9">for <control pos:start="119:13" pos:end="119:42">(<init pos:start="119:14" pos:end="119:19"><expr pos:start="119:14" pos:end="119:18"><name pos:start="119:14" pos:end="119:14">i</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>;</init> <condition pos:start="119:21" pos:end="119:37"><expr pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:21">i</name> <operator pos:start="119:23" pos:end="119:23">&lt;</operator> <name pos:start="119:25" pos:end="119:36">filter_order</name></expr>;</condition> <incr pos:start="119:39" pos:end="119:41"><expr pos:start="119:39" pos:end="119:41"><name pos:start="119:39" pos:end="119:39">i</name><operator pos:start="119:40" pos:end="119:41">++</operator></expr></incr>)</control> <block pos:start="119:44" pos:end="127:9">{<block_content pos:start="121:13" pos:end="125:52">

            <if_stmt pos:start="121:13" pos:end="123:49"><if pos:start="121:13" pos:end="123:49">if <condition pos:start="121:16" pos:end="121:25">(<expr pos:start="121:17" pos:end="121:24"><operator pos:start="121:17" pos:end="121:17">!</operator><operator pos:start="121:18" pos:end="121:18">(</operator><name pos:start="121:19" pos:end="121:19">i</name> <operator pos:start="121:21" pos:end="121:21">&amp;</operator> <literal type="number" pos:start="121:23" pos:end="121:23">3</literal><operator pos:start="121:24" pos:end="121:24">)</operator></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:49"><block_content pos:start="123:17" pos:end="123:49">

                <expr_stmt pos:start="123:17" pos:end="123:49"><expr pos:start="123:17" pos:end="123:48"><name pos:start="123:17" pos:end="123:25">code_size</name> <operator pos:start="123:27" pos:end="123:27">=</operator> <literal type="number" pos:start="123:29" pos:end="123:32">14</literal> <operator pos:start="123:32" pos:end="123:32">-</operator> <call pos:start="123:34" pos:end="123:48"><name pos:start="123:34" pos:end="123:41">get_bits</name><argument_list pos:start="123:42" pos:end="123:48">(<argument pos:start="123:43" pos:end="123:44"><expr pos:start="123:43" pos:end="123:44"><name pos:start="123:43" pos:end="123:44">gb</name></expr></argument>, <argument pos:start="123:47" pos:end="123:47"><expr pos:start="123:47" pos:end="123:47"><literal type="number" pos:start="123:47" pos:end="123:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:52"><expr pos:start="125:13" pos:end="125:51"><name pos:start="125:13" pos:end="125:24"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:21">filter</name><index pos:start="125:22" pos:end="125:24">[<expr pos:start="125:23" pos:end="125:23"><name pos:start="125:23" pos:end="125:23">i</name></expr>]</index></name> <operator pos:start="125:26" pos:end="125:26">=</operator> <call pos:start="125:28" pos:end="125:51"><name pos:start="125:28" pos:end="125:36">get_sbits</name><argument_list pos:start="125:37" pos:end="125:51">(<argument pos:start="125:38" pos:end="125:39"><expr pos:start="125:38" pos:end="125:39"><name pos:start="125:38" pos:end="125:39">gb</name></expr></argument>, <argument pos:start="125:42" pos:end="125:50"><expr pos:start="125:42" pos:end="125:50"><name pos:start="125:42" pos:end="125:50">code_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="131:9" pos:end="131:38"><expr pos:start="131:9" pos:end="131:37"><name pos:start="131:9" pos:end="131:18">order_half</name> <operator pos:start="131:20" pos:end="131:20">=</operator> <name pos:start="131:22" pos:end="131:33">filter_order</name> <operator pos:start="131:35" pos:end="131:35">/</operator> <literal type="number" pos:start="131:37" pos:end="131:37">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:49"><expr pos:start="133:9" pos:end="133:48"><name pos:start="133:9" pos:end="133:15">length2</name>    <operator pos:start="133:20" pos:end="133:20">=</operator> <name pos:start="133:22" pos:end="133:27">length</name> <operator pos:start="133:29" pos:end="133:29">-</operator> <operator pos:start="133:31" pos:end="133:31">(</operator><name pos:start="133:32" pos:end="133:43">filter_order</name> <operator pos:start="133:45" pos:end="133:45">-</operator> <literal type="number" pos:start="133:47" pos:end="133:47">1</literal><operator pos:start="133:48" pos:end="133:48">)</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="137:9" pos:end="137:43">/* decorrelate beginning samples */</comment>

        <if_stmt pos:start="139:9" pos:end="151:9"><if pos:start="139:9" pos:end="151:9">if <condition pos:start="139:12" pos:end="139:18">(<expr pos:start="139:13" pos:end="139:17"><name pos:start="139:13" pos:end="139:17">dval1</name></expr>)</condition> <block pos:start="139:20" pos:end="151:9">{<block_content pos:start="141:13" pos:end="149:13">

            <for pos:start="141:13" pos:end="149:13">for <control pos:start="141:17" pos:end="141:44">(<init pos:start="141:18" pos:end="141:23"><expr pos:start="141:18" pos:end="141:22"><name pos:start="141:18" pos:end="141:18">i</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:22">0</literal></expr>;</init> <condition pos:start="141:25" pos:end="141:39"><expr pos:start="141:25" pos:end="141:38"><name pos:start="141:25" pos:end="141:25">i</name> <operator pos:start="141:27" pos:end="141:27">&lt;</operator> <name pos:start="141:29" pos:end="141:38">order_half</name></expr>;</condition> <incr pos:start="141:41" pos:end="141:43"><expr pos:start="141:41" pos:end="141:43"><name pos:start="141:41" pos:end="141:41">i</name><operator pos:start="141:42" pos:end="141:43">++</operator></expr></incr>)</control> <block pos:start="141:46" pos:end="149:13">{<block_content pos:start="143:17" pos:end="147:34">

                <decl_stmt pos:start="143:17" pos:end="143:34"><decl pos:start="143:17" pos:end="143:33"><type pos:start="143:17" pos:end="143:23"><name pos:start="143:17" pos:end="143:23">int32_t</name></type> <name pos:start="143:25" pos:end="143:25">a</name> <init pos:start="143:27" pos:end="143:33">= <expr pos:start="143:29" pos:end="143:33"><name pos:start="143:29" pos:end="143:33"><name pos:start="143:29" pos:end="143:30">p1</name><index pos:start="143:31" pos:end="143:33">[<expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="145:17" pos:end="145:34"><decl pos:start="145:17" pos:end="145:33"><type pos:start="145:17" pos:end="145:23"><name pos:start="145:17" pos:end="145:23">int32_t</name></type> <name pos:start="145:25" pos:end="145:25">b</name> <init pos:start="145:27" pos:end="145:33">= <expr pos:start="145:29" pos:end="145:33"><name pos:start="145:29" pos:end="145:33"><name pos:start="145:29" pos:end="145:30">p2</name><index pos:start="145:31" pos:end="145:33">[<expr pos:start="145:32" pos:end="145:32"><name pos:start="145:32" pos:end="145:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:34"><expr pos:start="147:17" pos:end="147:33"><name pos:start="147:17" pos:end="147:21"><name pos:start="147:17" pos:end="147:18">p1</name><index pos:start="147:19" pos:end="147:21">[<expr pos:start="147:20" pos:end="147:20"><name pos:start="147:20" pos:end="147:20">i</name></expr>]</index></name>     <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:29">a</name> <operator pos:start="147:31" pos:end="147:31">+</operator> <name pos:start="147:33" pos:end="147:33">b</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="155:9" pos:end="155:40">/* decorrelate ending samples */</comment>

        <if_stmt pos:start="157:9" pos:end="169:9"><if pos:start="157:9" pos:end="169:9">if <condition pos:start="157:12" pos:end="157:18">(<expr pos:start="157:13" pos:end="157:17"><name pos:start="157:13" pos:end="157:17">dval2</name></expr>)</condition> <block pos:start="157:20" pos:end="169:9">{<block_content pos:start="159:13" pos:end="167:13">

            <for pos:start="159:13" pos:end="167:13">for <control pos:start="159:17" pos:end="159:59">(<init pos:start="159:18" pos:end="159:42"><expr pos:start="159:18" pos:end="159:41"><name pos:start="159:18" pos:end="159:18">i</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <name pos:start="159:22" pos:end="159:28">length2</name> <operator pos:start="159:30" pos:end="159:30">+</operator> <name pos:start="159:32" pos:end="159:41">order_half</name></expr>;</init> <condition pos:start="159:44" pos:end="159:54"><expr pos:start="159:44" pos:end="159:53"><name pos:start="159:44" pos:end="159:44">i</name> <operator pos:start="159:46" pos:end="159:46">&lt;</operator> <name pos:start="159:48" pos:end="159:53">length</name></expr>;</condition> <incr pos:start="159:56" pos:end="159:58"><expr pos:start="159:56" pos:end="159:58"><name pos:start="159:56" pos:end="159:56">i</name><operator pos:start="159:57" pos:end="159:58">++</operator></expr></incr>)</control> <block pos:start="159:61" pos:end="167:13">{<block_content pos:start="161:17" pos:end="165:34">

                <decl_stmt pos:start="161:17" pos:end="161:34"><decl pos:start="161:17" pos:end="161:33"><type pos:start="161:17" pos:end="161:23"><name pos:start="161:17" pos:end="161:23">int32_t</name></type> <name pos:start="161:25" pos:end="161:25">a</name> <init pos:start="161:27" pos:end="161:33">= <expr pos:start="161:29" pos:end="161:33"><name pos:start="161:29" pos:end="161:33"><name pos:start="161:29" pos:end="161:30">p1</name><index pos:start="161:31" pos:end="161:33">[<expr pos:start="161:32" pos:end="161:32"><name pos:start="161:32" pos:end="161:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="163:17" pos:end="163:34"><decl pos:start="163:17" pos:end="163:33"><type pos:start="163:17" pos:end="163:23"><name pos:start="163:17" pos:end="163:23">int32_t</name></type> <name pos:start="163:25" pos:end="163:25">b</name> <init pos:start="163:27" pos:end="163:33">= <expr pos:start="163:29" pos:end="163:33"><name pos:start="163:29" pos:end="163:33"><name pos:start="163:29" pos:end="163:30">p2</name><index pos:start="163:31" pos:end="163:33">[<expr pos:start="163:32" pos:end="163:32"><name pos:start="163:32" pos:end="163:32">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:34"><expr pos:start="165:17" pos:end="165:33"><name pos:start="165:17" pos:end="165:21"><name pos:start="165:17" pos:end="165:18">p1</name><index pos:start="165:19" pos:end="165:21">[<expr pos:start="165:20" pos:end="165:20"><name pos:start="165:20" pos:end="165:20">i</name></expr>]</index></name>     <operator pos:start="165:27" pos:end="165:27">=</operator> <name pos:start="165:29" pos:end="165:29">a</name> <operator pos:start="165:31" pos:end="165:31">+</operator> <name pos:start="165:33" pos:end="165:33">b</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>





        <for pos:start="175:9" pos:end="177:45">for <control pos:start="175:13" pos:end="175:42">(<init pos:start="175:14" pos:end="175:19"><expr pos:start="175:14" pos:end="175:18"><name pos:start="175:14" pos:end="175:14">i</name> <operator pos:start="175:16" pos:end="175:16">=</operator> <literal type="number" pos:start="175:18" pos:end="175:18">0</literal></expr>;</init> <condition pos:start="175:21" pos:end="175:37"><expr pos:start="175:21" pos:end="175:36"><name pos:start="175:21" pos:end="175:21">i</name> <operator pos:start="175:23" pos:end="175:23">&lt;</operator> <name pos:start="175:25" pos:end="175:36">filter_order</name></expr>;</condition> <incr pos:start="175:39" pos:end="175:41"><expr pos:start="175:39" pos:end="175:41"><name pos:start="175:39" pos:end="175:39">i</name><operator pos:start="175:40" pos:end="175:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:13" pos:end="177:45"><block_content pos:start="177:13" pos:end="177:45">

            <expr_stmt pos:start="177:13" pos:end="177:45"><expr pos:start="177:13" pos:end="177:44"><name pos:start="177:13" pos:end="177:26"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:23">residues</name><index pos:start="177:24" pos:end="177:26">[<expr pos:start="177:25" pos:end="177:25"><name pos:start="177:25" pos:end="177:25">i</name></expr>]</index></name> <operator pos:start="177:28" pos:end="177:28">=</operator> <operator pos:start="177:30" pos:end="177:30">*</operator><name pos:start="177:31" pos:end="177:32">p2</name><operator pos:start="177:33" pos:end="177:34">++</operator> <operator pos:start="177:36" pos:end="177:37">&gt;&gt;</operator> <name pos:start="177:39" pos:end="177:44">dshift</name></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="181:9" pos:end="181:25"><expr pos:start="181:9" pos:end="181:24"><name pos:start="181:9" pos:end="181:10">p1</name> <operator pos:start="181:12" pos:end="181:13">+=</operator> <name pos:start="181:15" pos:end="181:24">order_half</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:55"><expr pos:start="183:9" pos:end="183:54"><name pos:start="183:9" pos:end="183:9">x</name> <operator pos:start="183:11" pos:end="183:11">=</operator> <call pos:start="183:13" pos:end="183:39"><name pos:start="183:13" pos:end="183:26">FF_ARRAY_ELEMS</name><argument_list pos:start="183:27" pos:end="183:39">(<argument pos:start="183:28" pos:end="183:38"><expr pos:start="183:28" pos:end="183:38"><name pos:start="183:28" pos:end="183:38"><name pos:start="183:28" pos:end="183:28">s</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:38">residues</name></name></expr></argument>)</argument_list></call> <operator pos:start="183:41" pos:end="183:41">-</operator> <name pos:start="183:43" pos:end="183:54">filter_order</name></expr>;</expr_stmt>

        <for pos:start="185:9" pos:end="215:9">for <control pos:start="185:13" pos:end="185:43">(<init pos:start="185:14" pos:end="185:14">;</init> <condition pos:start="185:16" pos:end="185:27"><expr pos:start="185:16" pos:end="185:26"><name pos:start="185:16" pos:end="185:22">length2</name> <operator pos:start="185:24" pos:end="185:24">&gt;</operator> <literal type="number" pos:start="185:26" pos:end="185:26">0</literal></expr>;</condition> <incr pos:start="185:29" pos:end="185:42"><expr pos:start="185:29" pos:end="185:42"><name pos:start="185:29" pos:end="185:35">length2</name> <operator pos:start="185:37" pos:end="185:38">-=</operator> <name pos:start="185:40" pos:end="185:42">tmp</name></expr></incr>)</control> <block pos:start="185:45" pos:end="215:9">{<block_content pos:start="187:13" pos:end="213:69">

            <expr_stmt pos:start="187:13" pos:end="187:36"><expr pos:start="187:13" pos:end="187:35"><name pos:start="187:13" pos:end="187:15">tmp</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <call pos:start="187:19" pos:end="187:35"><name pos:start="187:19" pos:end="187:23">FFMIN</name><argument_list pos:start="187:24" pos:end="187:35">(<argument pos:start="187:25" pos:end="187:31"><expr pos:start="187:25" pos:end="187:31"><name pos:start="187:25" pos:end="187:31">length2</name></expr></argument>, <argument pos:start="187:34" pos:end="187:34"><expr pos:start="187:34" pos:end="187:34"><name pos:start="187:34" pos:end="187:34">x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="191:13" pos:end="193:64">for <control pos:start="191:17" pos:end="191:37">(<init pos:start="191:18" pos:end="191:23"><expr pos:start="191:18" pos:end="191:22"><name pos:start="191:18" pos:end="191:18">i</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr>;</init> <condition pos:start="191:25" pos:end="191:32"><expr pos:start="191:25" pos:end="191:31"><name pos:start="191:25" pos:end="191:25">i</name> <operator pos:start="191:27" pos:end="191:27">&lt;</operator> <name pos:start="191:29" pos:end="191:31">tmp</name></expr>;</condition> <incr pos:start="191:34" pos:end="191:36"><expr pos:start="191:34" pos:end="191:36"><name pos:start="191:34" pos:end="191:34">i</name><operator pos:start="191:35" pos:end="191:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="193:17" pos:end="193:64"><block_content pos:start="193:17" pos:end="193:64">

                <expr_stmt pos:start="193:17" pos:end="193:64"><expr pos:start="193:17" pos:end="193:63"><name pos:start="193:17" pos:end="193:45"><name pos:start="193:17" pos:end="193:17">s</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:27">residues</name><index pos:start="193:28" pos:end="193:45">[<expr pos:start="193:29" pos:end="193:44"><name pos:start="193:29" pos:end="193:40">filter_order</name> <operator pos:start="193:42" pos:end="193:42">+</operator> <name pos:start="193:44" pos:end="193:44">i</name></expr>]</index></name> <operator pos:start="193:47" pos:end="193:47">=</operator> <operator pos:start="193:49" pos:end="193:49">*</operator><name pos:start="193:50" pos:end="193:51">p2</name><operator pos:start="193:52" pos:end="193:53">++</operator> <operator pos:start="193:55" pos:end="193:56">&gt;&gt;</operator> <name pos:start="193:58" pos:end="193:63">dshift</name></expr>;</expr_stmt></block_content></block></for>



            <for pos:start="197:13" pos:end="209:13">for <control pos:start="197:17" pos:end="197:37">(<init pos:start="197:18" pos:end="197:23"><expr pos:start="197:18" pos:end="197:22"><name pos:start="197:18" pos:end="197:18">i</name> <operator pos:start="197:20" pos:end="197:20">=</operator> <literal type="number" pos:start="197:22" pos:end="197:22">0</literal></expr>;</init> <condition pos:start="197:25" pos:end="197:32"><expr pos:start="197:25" pos:end="197:31"><name pos:start="197:25" pos:end="197:25">i</name> <operator pos:start="197:27" pos:end="197:27">&lt;</operator> <name pos:start="197:29" pos:end="197:31">tmp</name></expr>;</condition> <incr pos:start="197:34" pos:end="197:36"><expr pos:start="197:34" pos:end="197:36"><name pos:start="197:34" pos:end="197:34">i</name><operator pos:start="197:35" pos:end="197:36">++</operator></expr></incr>)</control> <block pos:start="197:39" pos:end="209:13">{<block_content pos:start="199:17" pos:end="207:26">

                <decl_stmt pos:start="199:17" pos:end="199:31"><decl pos:start="199:17" pos:end="199:30"><type pos:start="199:17" pos:end="199:19"><name pos:start="199:17" pos:end="199:19">int</name></type> <name pos:start="199:21" pos:end="199:21">v</name> <init pos:start="199:23" pos:end="199:30">= <expr pos:start="199:25" pos:end="199:30"><literal type="number" pos:start="199:25" pos:end="199:25">1</literal> <operator pos:start="199:27" pos:end="199:28">&lt;&lt;</operator> <literal type="number" pos:start="199:30" pos:end="199:30">9</literal></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="203:17" pos:end="203:81"><expr pos:start="203:17" pos:end="203:80"><name pos:start="203:17" pos:end="203:17">v</name> <operator pos:start="203:19" pos:end="203:20">+=</operator> <call pos:start="203:22" pos:end="203:80"><name pos:start="203:22" pos:end="203:48"><name pos:start="203:22" pos:end="203:22">s</name><operator pos:start="203:23" pos:end="203:24">-&gt;</operator><name pos:start="203:25" pos:end="203:28">adsp</name><operator pos:start="203:29" pos:end="203:29">.</operator><name pos:start="203:30" pos:end="203:48">scalarproduct_int16</name></name><argument_list pos:start="203:49" pos:end="203:80">(<argument pos:start="203:50" pos:end="203:64"><expr pos:start="203:50" pos:end="203:64"><operator pos:start="203:50" pos:end="203:50">&amp;</operator><name pos:start="203:51" pos:end="203:64"><name pos:start="203:51" pos:end="203:51">s</name><operator pos:start="203:52" pos:end="203:53">-&gt;</operator><name pos:start="203:54" pos:end="203:61">residues</name><index pos:start="203:62" pos:end="203:64">[<expr pos:start="203:63" pos:end="203:63"><name pos:start="203:63" pos:end="203:63">i</name></expr>]</index></name></expr></argument>, <argument pos:start="203:67" pos:end="203:75"><expr pos:start="203:67" pos:end="203:75"><name pos:start="203:67" pos:end="203:75"><name pos:start="203:67" pos:end="203:67">s</name><operator pos:start="203:68" pos:end="203:69">-&gt;</operator><name pos:start="203:70" pos:end="203:75">filter</name></name></expr></argument>, <argument pos:start="203:78" pos:end="203:79"><expr pos:start="203:78" pos:end="203:79"><literal type="number" pos:start="203:78" pos:end="203:79">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:65"><expr pos:start="205:17" pos:end="205:64"><name pos:start="205:17" pos:end="205:17">v</name> <operator pos:start="205:19" pos:end="205:19">=</operator> <operator pos:start="205:21" pos:end="205:21">(</operator><call pos:start="205:22" pos:end="205:47"><name pos:start="205:22" pos:end="205:34">av_clip_intp2</name><argument_list pos:start="205:35" pos:end="205:47">(<argument pos:start="205:36" pos:end="205:42"><expr pos:start="205:36" pos:end="205:42"><name pos:start="205:36" pos:end="205:36">v</name> <operator pos:start="205:38" pos:end="205:39">&gt;&gt;</operator> <literal type="number" pos:start="205:41" pos:end="205:42">10</literal></expr></argument>, <argument pos:start="205:45" pos:end="205:46"><expr pos:start="205:45" pos:end="205:46"><literal type="number" pos:start="205:45" pos:end="205:46">13</literal></expr></argument>)</argument_list></call> <operator pos:start="205:49" pos:end="205:50">&lt;&lt;</operator> <name pos:start="205:52" pos:end="205:57">dshift</name><operator pos:start="205:58" pos:end="205:58">)</operator> <operator pos:start="205:60" pos:end="205:60">-</operator> <operator pos:start="205:62" pos:end="205:62">*</operator><name pos:start="205:63" pos:end="205:64">p1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:26"><expr pos:start="207:17" pos:end="207:25"><operator pos:start="207:17" pos:end="207:17">*</operator><name pos:start="207:18" pos:end="207:19">p1</name><operator pos:start="207:20" pos:end="207:21">++</operator> <operator pos:start="207:23" pos:end="207:23">=</operator> <name pos:start="207:25" pos:end="207:25">v</name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="213:13" pos:end="213:69"><expr pos:start="213:13" pos:end="213:68"><call pos:start="213:13" pos:end="213:68"><name pos:start="213:13" pos:end="213:18">memcpy</name><argument_list pos:start="213:19" pos:end="213:68">(<argument pos:start="213:20" pos:end="213:30"><expr pos:start="213:20" pos:end="213:30"><name pos:start="213:20" pos:end="213:30"><name pos:start="213:20" pos:end="213:20">s</name><operator pos:start="213:21" pos:end="213:22">-&gt;</operator><name pos:start="213:23" pos:end="213:30">residues</name></name></expr></argument>, <argument pos:start="213:33" pos:end="213:49"><expr pos:start="213:33" pos:end="213:49"><operator pos:start="213:33" pos:end="213:33">&amp;</operator><name pos:start="213:34" pos:end="213:49"><name pos:start="213:34" pos:end="213:34">s</name><operator pos:start="213:35" pos:end="213:36">-&gt;</operator><name pos:start="213:37" pos:end="213:44">residues</name><index pos:start="213:45" pos:end="213:49">[<expr pos:start="213:46" pos:end="213:48"><name pos:start="213:46" pos:end="213:48">tmp</name></expr>]</index></name></expr></argument>, <argument pos:start="213:52" pos:end="213:67"><expr pos:start="213:52" pos:end="213:67"><literal type="number" pos:start="213:52" pos:end="213:52">2</literal> <operator pos:start="213:54" pos:end="213:54">*</operator> <name pos:start="213:56" pos:end="213:67">filter_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="219:9" pos:end="219:17"><expr pos:start="219:9" pos:end="219:16"><call pos:start="219:9" pos:end="219:16"><name pos:start="219:9" pos:end="219:14">emms_c</name><argument_list pos:start="219:15" pos:end="219:16">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="221:9" pos:end="221:14">break;</break>

    </block_content>}</block>

    </block_content>}</block></switch>



    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
