<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12201.c" pos:tabs="8"><function pos:start="1:1" pos:end="9:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">get_slice_offset</name><parameter_list pos:start="1:28" pos:end="1:77">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><specifier pos:start="1:52" pos:end="1:56">const</specifier> <name pos:start="1:58" pos:end="1:64">uint8_t</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">buf</name></decl></parameter>, <parameter pos:start="1:72" pos:end="1:76"><decl pos:start="1:72" pos:end="1:76"><type pos:start="1:72" pos:end="1:76"><name pos:start="1:72" pos:end="1:74">int</name></type> <name pos:start="1:76" pos:end="1:76">n</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="9:1">{<block_content pos:start="5:5" pos:end="7:105">

    <if_stmt pos:start="5:5" pos:end="7:105"><if pos:start="5:5" pos:end="5:57">if<condition pos:start="5:7" pos:end="5:26">(<expr pos:start="5:8" pos:end="5:25"><name pos:start="5:8" pos:end="5:25"><name pos:start="5:8" pos:end="5:12">avctx</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:25">slice_count</name></name></expr>)</condition><block type="pseudo" pos:start="5:28" pos:end="5:57"><block_content pos:start="5:28" pos:end="5:57"> <return pos:start="5:28" pos:end="5:57">return <expr pos:start="5:35" pos:end="5:56"><name pos:start="5:35" pos:end="5:56"><name pos:start="5:35" pos:end="5:39">avctx</name><operator pos:start="5:40" pos:end="5:41">-&gt;</operator><name pos:start="5:42" pos:end="5:53">slice_offset</name><index pos:start="5:54" pos:end="5:56">[<expr pos:start="5:55" pos:end="5:55"><name pos:start="5:55" pos:end="5:55">n</name></expr>]</index></name></expr>;</return></block_content></block></if>

    <else pos:start="7:5" pos:end="7:105">else<block type="pseudo" pos:start="7:28" pos:end="7:105"><block_content pos:start="7:28" pos:end="7:105">                   <return pos:start="7:28" pos:end="7:105">return <expr pos:start="7:35" pos:end="7:104"><ternary pos:start="7:35" pos:end="7:104"><condition pos:start="7:35" pos:end="7:63"><expr pos:start="7:35" pos:end="7:61"><call pos:start="7:35" pos:end="7:56"><name pos:start="7:35" pos:end="7:41">AV_RL32</name><argument_list pos:start="7:42" pos:end="7:56">(<argument pos:start="7:43" pos:end="7:55"><expr pos:start="7:43" pos:end="7:55"><name pos:start="7:43" pos:end="7:45">buf</name> <operator pos:start="7:47" pos:end="7:47">+</operator> <name pos:start="7:49" pos:end="7:49">n</name><operator pos:start="7:50" pos:end="7:50">*</operator><literal type="number" pos:start="7:51" pos:end="7:53">8</literal> <operator pos:start="7:53" pos:end="7:53">-</operator> <literal type="number" pos:start="7:55" pos:end="7:55">4</literal></expr></argument>)</argument_list></call> <operator pos:start="7:58" pos:end="7:59">==</operator> <literal type="number" pos:start="7:61" pos:end="7:61">1</literal></expr> ?</condition><then pos:start="7:65" pos:end="7:82"> <expr pos:start="7:65" pos:end="7:82"><call pos:start="7:65" pos:end="7:82"><name pos:start="7:65" pos:end="7:71">AV_RL32</name><argument_list pos:start="7:72" pos:end="7:82">(<argument pos:start="7:73" pos:end="7:81"><expr pos:start="7:73" pos:end="7:81"><name pos:start="7:73" pos:end="7:75">buf</name> <operator pos:start="7:77" pos:end="7:77">+</operator> <name pos:start="7:79" pos:end="7:79">n</name><operator pos:start="7:80" pos:end="7:80">*</operator><literal type="number" pos:start="7:81" pos:end="7:81">8</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="7:84" pos:end="7:104">:  <expr pos:start="7:87" pos:end="7:104"><call pos:start="7:87" pos:end="7:104"><name pos:start="7:87" pos:end="7:93">AV_RB32</name><argument_list pos:start="7:94" pos:end="7:104">(<argument pos:start="7:95" pos:end="7:103"><expr pos:start="7:95" pos:end="7:103"><name pos:start="7:95" pos:end="7:97">buf</name> <operator pos:start="7:99" pos:end="7:99">+</operator> <name pos:start="7:101" pos:end="7:101">n</name><operator pos:start="7:102" pos:end="7:102">*</operator><literal type="number" pos:start="7:103" pos:end="7:103">8</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
