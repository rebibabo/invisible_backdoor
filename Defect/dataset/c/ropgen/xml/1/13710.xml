<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13710.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">vnc_write</name><parameter_list pos:start="1:15" pos:end="1:58">(<parameter pos:start="1:16" pos:end="1:27"><decl pos:start="1:16" pos:end="1:27"><type pos:start="1:16" pos:end="1:27"><name pos:start="1:16" pos:end="1:23">VncState</name> <modifier pos:start="1:25" pos:end="1:25">*</modifier></type><name pos:start="1:26" pos:end="1:27">vs</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">void</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">data</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:57"><decl pos:start="1:48" pos:end="1:57"><type pos:start="1:48" pos:end="1:57"><name pos:start="1:48" pos:end="1:53">size_t</name></type> <name pos:start="1:55" pos:end="1:57">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:42">

    <expr_stmt pos:start="5:5" pos:end="5:37"><expr pos:start="5:5" pos:end="5:36"><call pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:18">buffer_reserve</name><argument_list pos:start="5:19" pos:end="5:36">(<argument pos:start="5:20" pos:end="5:30"><expr pos:start="5:20" pos:end="5:30"><operator pos:start="5:20" pos:end="5:20">&amp;</operator><name pos:start="5:21" pos:end="5:30"><name pos:start="5:21" pos:end="5:22">vs</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:30">output</name></name></expr></argument>, <argument pos:start="5:33" pos:end="5:35"><expr pos:start="5:33" pos:end="5:35"><name pos:start="5:33" pos:end="5:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:34">(<expr pos:start="9:9" pos:end="9:33"><call pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:20">buffer_empty</name><argument_list pos:start="9:21" pos:end="9:33">(<argument pos:start="9:22" pos:end="9:32"><expr pos:start="9:22" pos:end="9:32"><operator pos:start="9:22" pos:end="9:22">&amp;</operator><name pos:start="9:23" pos:end="9:32"><name pos:start="9:23" pos:end="9:24">vs</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">output</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:36" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:85">

        <expr_stmt pos:start="11:9" pos:end="11:85"><expr pos:start="11:9" pos:end="11:84"><call pos:start="11:9" pos:end="11:84"><name pos:start="11:9" pos:end="11:28">qemu_set_fd_handler2</name><argument_list pos:start="11:29" pos:end="11:84">(<argument pos:start="11:30" pos:end="11:38"><expr pos:start="11:30" pos:end="11:38"><name pos:start="11:30" pos:end="11:38"><name pos:start="11:30" pos:end="11:31">vs</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:38">csock</name></name></expr></argument>, <argument pos:start="11:41" pos:end="11:44"><expr pos:start="11:41" pos:end="11:44"><name pos:start="11:41" pos:end="11:44">NULL</name></expr></argument>, <argument pos:start="11:47" pos:end="11:61"><expr pos:start="11:47" pos:end="11:61"><name pos:start="11:47" pos:end="11:61">vnc_client_read</name></expr></argument>, <argument pos:start="11:64" pos:end="11:79"><expr pos:start="11:64" pos:end="11:79"><name pos:start="11:64" pos:end="11:79">vnc_client_write</name></expr></argument>, <argument pos:start="11:82" pos:end="11:83"><expr pos:start="11:82" pos:end="11:83"><name pos:start="11:82" pos:end="11:83">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:17">buffer_append</name><argument_list pos:start="17:18" pos:end="17:41">(<argument pos:start="17:19" pos:end="17:29"><expr pos:start="17:19" pos:end="17:29"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:21">vs</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:29">output</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:35"><expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">data</name></expr></argument>, <argument pos:start="17:38" pos:end="17:40"><expr pos:start="17:38" pos:end="17:40"><name pos:start="17:38" pos:end="17:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
