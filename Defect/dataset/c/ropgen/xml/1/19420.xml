<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19420.c" pos:tabs="8"><function pos:start="1:1" pos:end="251:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">queue_picture</name><parameter_list pos:start="1:25" pos:end="1:86">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:39"><name pos:start="1:26" pos:end="1:35">VideoState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:39">is</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:48">AVFrame</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:59">src_frame</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">double</name></type> <name pos:start="1:69" pos:end="1:72">pts1</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:85"><decl pos:start="1:75" pos:end="1:85"><type pos:start="1:75" pos:end="1:85"><name pos:start="1:75" pos:end="1:81">int64_t</name></type> <name pos:start="1:83" pos:end="1:85">pos</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="251:13">{<block_content pos:start="5:5" pos:end="251:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">VideoPicture</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:20">vp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">double</name></type> <name pos:start="7:12" pos:end="7:22">frame_delay</name></decl>, <decl pos:start="7:25" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:10"/><name pos:start="7:25" pos:end="7:27">pts</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">pts1</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="13:55">/* compute the exact PTS for the picture if it is omitted in the stream

     * pts1 is the dts of the pkt / pts of the frame */</comment>

    <if_stmt pos:start="15:5" pos:end="251:13"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">pts</name> <operator pos:start="15:13" pos:end="15:14">!=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:30">

        <comment type="block" pos:start="17:9" pos:end="17:53">/* update video clock with pts, if present */</comment>

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:10">is</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:23">video_clock</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <name pos:start="19:27" pos:end="19:29">pts</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="251:13">else <block pos:start="21:12" pos:end="251:13">{<block_content pos:start="23:9" pos:end="251:13">

        <expr_stmt pos:start="23:9" pos:end="23:30"><expr pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:11">pts</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:29"><name pos:start="23:15" pos:end="23:16">is</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:29">video_clock</name></name></expr>;</expr_stmt>


    <comment type="block" pos:start="26:5" pos:end="26:43">/* update video clock for next frame */</comment>

    <expr_stmt pos:start="28:5" pos:end="28:57"><expr pos:start="28:5" pos:end="28:56"><name pos:start="28:5" pos:end="28:15">frame_delay</name> <operator pos:start="28:17" pos:end="28:17">=</operator> <call pos:start="28:19" pos:end="28:56"><name pos:start="28:19" pos:end="28:24">av_q2d</name><argument_list pos:start="28:25" pos:end="28:56">(<argument pos:start="28:26" pos:end="28:55"><expr pos:start="28:26" pos:end="28:55"><name pos:start="28:26" pos:end="28:55"><name pos:start="28:26" pos:end="28:27">is</name><operator pos:start="28:28" pos:end="28:29">-&gt;</operator><name pos:start="28:30" pos:end="28:37">video_st</name><operator pos:start="28:38" pos:end="28:39">-&gt;</operator><name pos:start="28:40" pos:end="28:44">codec</name><operator pos:start="28:45" pos:end="28:46">-&gt;</operator><name pos:start="28:47" pos:end="28:55">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="30:5" pos:end="32:27">/* for MPEG2, the frame can be repeated, so we update the

       clock accordingly */</comment>

    <expr_stmt pos:start="34:5" pos:end="34:64"><expr pos:start="34:5" pos:end="34:63"><name pos:start="34:5" pos:end="34:15">frame_delay</name> <operator pos:start="34:17" pos:end="34:18">+=</operator> <name pos:start="34:20" pos:end="34:41"><name pos:start="34:20" pos:end="34:28">src_frame</name><operator pos:start="34:29" pos:end="34:30">-&gt;</operator><name pos:start="34:31" pos:end="34:41">repeat_pict</name></name> <operator pos:start="34:43" pos:end="34:43">*</operator> <operator pos:start="34:45" pos:end="34:45">(</operator><name pos:start="34:46" pos:end="34:56">frame_delay</name> <operator pos:start="34:58" pos:end="34:58">*</operator> <literal type="number" pos:start="34:60" pos:end="34:62">0.5</literal><operator pos:start="34:63" pos:end="34:63">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="36:5" pos:end="41:0"><expr pos:start="36:5" pos:end="36:34"><name pos:start="36:5" pos:end="36:19"><name pos:start="36:5" pos:end="36:6">is</name><operator pos:start="36:7" pos:end="36:8">-&gt;</operator><name pos:start="36:9" pos:end="36:19">video_clock</name></name> <operator pos:start="36:21" pos:end="36:22">+=</operator> <name pos:start="36:24" pos:end="36:34">frame_delay</name></expr>;</expr_stmt>



<cpp:if pos:start="40:1" pos:end="40:28">#<cpp:directive pos:start="40:2" pos:end="40:3">if</cpp:directive> <expr pos:start="40:5" pos:end="40:28"><call pos:start="40:5" pos:end="40:23"><name pos:start="40:5" pos:end="40:11">defined</name><argument_list pos:start="40:12" pos:end="40:23">(<argument pos:start="40:13" pos:end="40:22"><expr pos:start="40:13" pos:end="40:22"><name pos:start="40:13" pos:end="40:22">DEBUG_SYNC</name></expr></argument>)</argument_list></call> <operator pos:start="40:25" pos:end="40:26">&amp;&amp;</operator> <literal type="number" pos:start="40:28" pos:end="40:28">0</literal></expr></cpp:if>

    <expr_stmt pos:start="42:5" pos:end="47:0"><expr pos:start="42:5" pos:end="44:69"><call pos:start="42:5" pos:end="44:69"><name pos:start="42:5" pos:end="42:10">printf</name><argument_list pos:start="42:11" pos:end="44:69">(<argument pos:start="42:12" pos:end="42:50"><expr pos:start="42:12" pos:end="42:50"><literal type="string" pos:start="42:12" pos:end="42:50">"frame_type=%c clock=%0.3f pts=%0.3f\n"</literal></expr></argument>,

           <argument pos:start="44:12" pos:end="44:57"><expr pos:start="44:12" pos:end="44:57"><call pos:start="44:12" pos:end="44:57"><name pos:start="44:12" pos:end="44:35">av_get_picture_type_char</name><argument_list pos:start="44:36" pos:end="44:57">(<argument pos:start="44:37" pos:end="44:56"><expr pos:start="44:37" pos:end="44:56"><name pos:start="44:37" pos:end="44:56"><name pos:start="44:37" pos:end="44:45">src_frame</name><operator pos:start="44:46" pos:end="44:47">-&gt;</operator><name pos:start="44:48" pos:end="44:56">pict_type</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="44:60" pos:end="44:62"><expr pos:start="44:60" pos:end="44:62"><name pos:start="44:60" pos:end="44:62">pts</name></expr></argument>, <argument pos:start="44:65" pos:end="44:68"><expr pos:start="44:65" pos:end="44:68"><name pos:start="44:65" pos:end="44:68">pts1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="46:1" pos:end="46:6">#<cpp:directive pos:start="46:2" pos:end="46:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="50:5" pos:end="50:55">/* wait until we have space to put a new picture */</comment>

    <expr_stmt pos:start="52:5" pos:end="52:35"><expr pos:start="52:5" pos:end="52:34"><call pos:start="52:5" pos:end="52:34"><name pos:start="52:5" pos:end="52:17">SDL_LockMutex</name><argument_list pos:start="52:18" pos:end="52:34">(<argument pos:start="52:19" pos:end="52:33"><expr pos:start="52:19" pos:end="52:33"><name pos:start="52:19" pos:end="52:33"><name pos:start="52:19" pos:end="52:20">is</name><operator pos:start="52:21" pos:end="52:22">-&gt;</operator><name pos:start="52:23" pos:end="52:33">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="56:5" pos:end="58:99"><if pos:start="56:5" pos:end="58:99">if<condition pos:start="56:7" pos:end="56:64">(<expr pos:start="56:8" pos:end="56:63"><name pos:start="56:8" pos:end="56:21"><name pos:start="56:8" pos:end="56:9">is</name><operator pos:start="56:10" pos:end="56:11">-&gt;</operator><name pos:start="56:12" pos:end="56:21">pictq_size</name></name><operator pos:start="56:22" pos:end="56:23">&gt;=</operator><name pos:start="56:24" pos:end="56:47">VIDEO_PICTURE_QUEUE_SIZE</name> <operator pos:start="56:49" pos:end="56:50">&amp;&amp;</operator> <operator pos:start="56:52" pos:end="56:52">!</operator><name pos:start="56:53" pos:end="56:63"><name pos:start="56:53" pos:end="56:54">is</name><operator pos:start="56:55" pos:end="56:56">-&gt;</operator><name pos:start="56:57" pos:end="56:63">refresh</name></name></expr>)</condition><block type="pseudo" pos:start="58:9" pos:end="58:99"><block_content pos:start="58:9" pos:end="58:99">

        <expr_stmt pos:start="58:9" pos:end="58:99"><expr pos:start="58:9" pos:end="58:98"><name pos:start="58:9" pos:end="58:23"><name pos:start="58:9" pos:end="58:10">is</name><operator pos:start="58:11" pos:end="58:12">-&gt;</operator><name pos:start="58:13" pos:end="58:23">skip_frames</name></name><operator pos:start="58:24" pos:end="58:24">=</operator> <call pos:start="58:26" pos:end="58:98"><name pos:start="58:26" pos:end="58:30">FFMAX</name><argument_list pos:start="58:31" pos:end="58:98">(<argument pos:start="58:32" pos:end="58:54"><expr pos:start="58:32" pos:end="58:54"><literal type="number" pos:start="58:32" pos:end="58:36">1.0</literal> <operator pos:start="58:36" pos:end="58:36">-</operator> <name pos:start="58:38" pos:end="58:54">FRAME_SKIP_FACTOR</name></expr></argument>, <argument pos:start="58:57" pos:end="58:97"><expr pos:start="58:57" pos:end="58:97"><name pos:start="58:57" pos:end="58:71"><name pos:start="58:57" pos:end="58:58">is</name><operator pos:start="58:59" pos:end="58:60">-&gt;</operator><name pos:start="58:61" pos:end="58:71">skip_frames</name></name> <operator pos:start="58:73" pos:end="58:73">*</operator> <operator pos:start="58:75" pos:end="58:75">(</operator><literal type="number" pos:start="58:76" pos:end="58:79">1.0</literal><operator pos:start="58:79" pos:end="58:79">-</operator><name pos:start="58:80" pos:end="58:96">FRAME_SKIP_FACTOR</name><operator pos:start="58:97" pos:end="58:97">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <while pos:start="62:5" pos:end="251:13">while <condition pos:start="62:11" pos:end="64:37">(<expr pos:start="62:12" pos:end="64:36"><name pos:start="62:12" pos:end="62:25"><name pos:start="62:12" pos:end="62:13">is</name><operator pos:start="62:14" pos:end="62:15">-&gt;</operator><name pos:start="62:16" pos:end="62:25">pictq_size</name></name> <operator pos:start="62:27" pos:end="62:28">&gt;=</operator> <name pos:start="62:30" pos:end="62:53">VIDEO_PICTURE_QUEUE_SIZE</name> <operator pos:start="62:55" pos:end="62:56">&amp;&amp;</operator>

           <operator pos:start="64:12" pos:end="64:12">!</operator><name pos:start="64:13" pos:end="64:36"><name pos:start="64:13" pos:end="64:14">is</name><operator pos:start="64:15" pos:end="64:16">-&gt;</operator><name pos:start="64:17" pos:end="64:22">videoq</name><operator pos:start="64:23" pos:end="64:23">.</operator><name pos:start="64:24" pos:end="64:36">abort_request</name></name></expr>)</condition> <block pos:start="64:39" pos:end="251:13">{<block_content pos:start="68:5" pos:end="251:13">



    <expr_stmt pos:start="68:5" pos:end="68:37"><expr pos:start="68:5" pos:end="68:36"><call pos:start="68:5" pos:end="68:36"><name pos:start="68:5" pos:end="68:19">SDL_UnlockMutex</name><argument_list pos:start="68:20" pos:end="68:36">(<argument pos:start="68:21" pos:end="68:35"><expr pos:start="68:21" pos:end="68:35"><name pos:start="68:21" pos:end="68:35"><name pos:start="68:21" pos:end="68:22">is</name><operator pos:start="68:23" pos:end="68:24">-&gt;</operator><name pos:start="68:25" pos:end="68:35">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="72:5" pos:end="74:18"><if pos:start="72:5" pos:end="74:18">if <condition pos:start="72:8" pos:end="72:33">(<expr pos:start="72:9" pos:end="72:32"><name pos:start="72:9" pos:end="72:32"><name pos:start="72:9" pos:end="72:10">is</name><operator pos:start="72:11" pos:end="72:12">-&gt;</operator><name pos:start="72:13" pos:end="72:18">videoq</name><operator pos:start="72:19" pos:end="72:19">.</operator><name pos:start="72:20" pos:end="72:32">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="74:9" pos:end="74:18"><block_content pos:start="74:9" pos:end="74:18">

        <return pos:start="74:9" pos:end="74:18">return <expr pos:start="74:16" pos:end="74:17"><operator pos:start="74:16" pos:end="74:16">-</operator><literal type="number" pos:start="74:17" pos:end="74:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="78:5" pos:end="78:38"><expr pos:start="78:5" pos:end="78:37"><name pos:start="78:5" pos:end="78:6">vp</name> <operator pos:start="78:8" pos:end="78:8">=</operator> <operator pos:start="78:10" pos:end="78:10">&amp;</operator><name pos:start="78:11" pos:end="78:37"><name pos:start="78:11" pos:end="78:12">is</name><operator pos:start="78:13" pos:end="78:14">-&gt;</operator><name pos:start="78:15" pos:end="78:19">pictq</name><index pos:start="78:20" pos:end="78:37">[<expr pos:start="78:21" pos:end="78:36"><name pos:start="78:21" pos:end="78:36"><name pos:start="78:21" pos:end="78:22">is</name><operator pos:start="78:23" pos:end="78:24">-&gt;</operator><name pos:start="78:25" pos:end="78:36">pictq_windex</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="82:5" pos:end="82:31"><expr pos:start="82:5" pos:end="82:30"><name pos:start="82:5" pos:end="82:16"><name pos:start="82:5" pos:end="82:6">vp</name><operator pos:start="82:7" pos:end="82:8">-&gt;</operator><name pos:start="82:9" pos:end="82:16">duration</name></name> <operator pos:start="82:18" pos:end="82:18">=</operator> <name pos:start="82:20" pos:end="82:30">frame_delay</name></expr>;</expr_stmt>



    <comment type="block" pos:start="86:5" pos:end="86:49">/* alloc or resize hardware picture buffer */</comment>

    <if_stmt pos:start="88:5" pos:end="251:13"><if pos:start="88:5" pos:end="251:13">if <condition pos:start="88:8" pos:end="94:57">(<expr pos:start="88:9" pos:end="94:56"><operator pos:start="88:9" pos:end="88:9">!</operator><name pos:start="88:10" pos:end="88:16"><name pos:start="88:10" pos:end="88:11">vp</name><operator pos:start="88:12" pos:end="88:13">-&gt;</operator><name pos:start="88:14" pos:end="88:16">bmp</name></name> <operator pos:start="88:18" pos:end="91:0">||</operator>

<cpp:if pos:start="90:1" pos:end="90:19">#<cpp:directive pos:start="90:2" pos:end="90:3">if</cpp:directive> <expr pos:start="90:5" pos:end="90:19"><name pos:start="90:5" pos:end="90:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <name pos:start="92:9" pos:end="92:17"><name pos:start="92:9" pos:end="92:10">vp</name><operator pos:start="92:11" pos:end="92:12">-&gt;</operator><name pos:start="92:13" pos:end="92:17">width</name></name>  <operator pos:start="92:20" pos:end="92:21">!=</operator> <name pos:start="92:23" pos:end="92:53"><name pos:start="92:23" pos:end="92:24">is</name><operator pos:start="92:25" pos:end="92:26">-&gt;</operator><name pos:start="92:27" pos:end="92:42">out_video_filter</name><operator pos:start="92:43" pos:end="92:44">-&gt;</operator><name pos:start="92:45" pos:end="92:50">inputs</name><index pos:start="92:51" pos:end="92:53">[<expr pos:start="92:52" pos:end="92:52"><literal type="number" pos:start="92:52" pos:end="92:52">0</literal></expr>]</index></name><operator pos:start="92:54" pos:end="92:55">-&gt;</operator><name pos:start="92:56" pos:end="92:56">w</name> <operator pos:start="92:58" pos:end="92:59">||</operator>

        <name pos:start="94:9" pos:end="94:18"><name pos:start="94:9" pos:end="94:10">vp</name><operator pos:start="94:11" pos:end="94:12">-&gt;</operator><name pos:start="94:13" pos:end="94:18">height</name></name> <operator pos:start="94:20" pos:end="94:21">!=</operator> <name pos:start="94:23" pos:end="94:53"><name pos:start="94:23" pos:end="94:24">is</name><operator pos:start="94:25" pos:end="94:26">-&gt;</operator><name pos:start="94:27" pos:end="94:42">out_video_filter</name><operator pos:start="94:43" pos:end="94:44">-&gt;</operator><name pos:start="94:45" pos:end="94:50">inputs</name><index pos:start="94:51" pos:end="94:53">[<expr pos:start="94:52" pos:end="94:52"><literal type="number" pos:start="94:52" pos:end="94:52">0</literal></expr>]</index></name><operator pos:start="94:54" pos:end="94:55">-&gt;</operator><name pos:start="94:56" pos:end="94:56">h</name></expr>)</condition> <block pos:start="94:59" pos:end="251:13">{<block_content pos:start="98:9" pos:end="100:50">

<cpp:else pos:start="96:1" pos:end="96:5">#<cpp:directive pos:start="96:2" pos:end="96:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="98:9" pos:end="100:49"><expr pos:start="98:9" pos:end="100:49"><name pos:start="98:9" pos:end="98:17"><name pos:start="98:9" pos:end="98:10">vp</name><operator pos:start="98:11" pos:end="98:12">-&gt;</operator><name pos:start="98:13" pos:end="98:17">width</name></name> <operator pos:start="98:19" pos:end="98:20">!=</operator> <name pos:start="98:22" pos:end="98:47"><name pos:start="98:22" pos:end="98:23">is</name><operator pos:start="98:24" pos:end="98:25">-&gt;</operator><name pos:start="98:26" pos:end="98:33">video_st</name><operator pos:start="98:34" pos:end="98:35">-&gt;</operator><name pos:start="98:36" pos:end="98:40">codec</name><operator pos:start="98:41" pos:end="98:42">-&gt;</operator><name pos:start="98:43" pos:end="98:47">width</name></name> <operator pos:start="98:49" pos:end="98:50">||</operator>

        <name pos:start="100:9" pos:end="100:18"><name pos:start="100:9" pos:end="100:10">vp</name><operator pos:start="100:11" pos:end="100:12">-&gt;</operator><name pos:start="100:13" pos:end="100:18">height</name></name> <operator pos:start="100:20" pos:end="100:21">!=</operator> <name pos:start="100:23" pos:end="100:49"><name pos:start="100:23" pos:end="100:24">is</name><operator pos:start="100:25" pos:end="100:26">-&gt;</operator><name pos:start="100:27" pos:end="100:34">video_st</name><operator pos:start="100:35" pos:end="100:36">-&gt;</operator><name pos:start="100:37" pos:end="100:41">codec</name><operator pos:start="100:42" pos:end="100:43">-&gt;</operator><name pos:start="100:44" pos:end="100:49">height</name></name></expr></expr_stmt>)</block_content> <block pos:start="100:52" pos:end="251:13">{<block_content pos:start="104:9" pos:end="251:13">

<cpp:endif pos:start="102:1" pos:end="102:6">#<cpp:directive pos:start="102:2" pos:end="102:6">endif</cpp:directive></cpp:endif>

        <decl_stmt pos:start="104:9" pos:end="104:24"><decl pos:start="104:9" pos:end="104:23"><type pos:start="104:9" pos:end="104:17"><name pos:start="104:9" pos:end="104:17">SDL_Event</name></type> <name pos:start="104:19" pos:end="104:23">event</name></decl>;</decl_stmt>



        <expr_stmt pos:start="108:9" pos:end="108:26"><expr pos:start="108:9" pos:end="108:25"><name pos:start="108:9" pos:end="108:21"><name pos:start="108:9" pos:end="108:10">vp</name><operator pos:start="108:11" pos:end="108:12">-&gt;</operator><name pos:start="108:13" pos:end="108:21">allocated</name></name> <operator pos:start="108:23" pos:end="108:23">=</operator> <literal type="number" pos:start="108:25" pos:end="108:25">0</literal></expr>;</expr_stmt>



        <comment type="block" pos:start="112:9" pos:end="114:30">/* the allocation must be done in the main thread to avoid

           locking problems */</comment>

        <expr_stmt pos:start="116:9" pos:end="116:36"><expr pos:start="116:9" pos:end="116:35"><name pos:start="116:9" pos:end="116:18"><name pos:start="116:9" pos:end="116:13">event</name><operator pos:start="116:14" pos:end="116:14">.</operator><name pos:start="116:15" pos:end="116:18">type</name></name> <operator pos:start="116:20" pos:end="116:20">=</operator> <name pos:start="116:22" pos:end="116:35">FF_ALLOC_EVENT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="118:9" pos:end="118:30"><expr pos:start="118:9" pos:end="118:29"><name pos:start="118:9" pos:end="118:24"><name pos:start="118:9" pos:end="118:13">event</name><operator pos:start="118:14" pos:end="118:14">.</operator><name pos:start="118:15" pos:end="118:18">user</name><operator pos:start="118:19" pos:end="118:19">.</operator><name pos:start="118:20" pos:end="118:24">data1</name></name> <operator pos:start="118:26" pos:end="118:26">=</operator> <name pos:start="118:28" pos:end="118:29">is</name></expr>;</expr_stmt>

        <expr_stmt pos:start="120:9" pos:end="120:30"><expr pos:start="120:9" pos:end="120:29"><call pos:start="120:9" pos:end="120:29"><name pos:start="120:9" pos:end="120:21">SDL_PushEvent</name><argument_list pos:start="120:22" pos:end="120:29">(<argument pos:start="120:23" pos:end="120:28"><expr pos:start="120:23" pos:end="120:28"><operator pos:start="120:23" pos:end="120:23">&amp;</operator><name pos:start="120:24" pos:end="120:28">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="124:9" pos:end="124:49">/* wait until the picture is allocated */</comment>

        <expr_stmt pos:start="126:9" pos:end="126:39"><expr pos:start="126:9" pos:end="126:38"><call pos:start="126:9" pos:end="126:38"><name pos:start="126:9" pos:end="126:21">SDL_LockMutex</name><argument_list pos:start="126:22" pos:end="126:38">(<argument pos:start="126:23" pos:end="126:37"><expr pos:start="126:23" pos:end="126:37"><name pos:start="126:23" pos:end="126:37"><name pos:start="126:23" pos:end="126:24">is</name><operator pos:start="126:25" pos:end="126:26">-&gt;</operator><name pos:start="126:27" pos:end="126:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="128:9" pos:end="251:13">while <condition pos:start="128:15" pos:end="128:59">(<expr pos:start="128:16" pos:end="128:58"><operator pos:start="128:16" pos:end="128:16">!</operator><name pos:start="128:17" pos:end="128:29"><name pos:start="128:17" pos:end="128:18">vp</name><operator pos:start="128:19" pos:end="128:20">-&gt;</operator><name pos:start="128:21" pos:end="128:29">allocated</name></name> <operator pos:start="128:31" pos:end="128:32">&amp;&amp;</operator> <operator pos:start="128:34" pos:end="128:34">!</operator><name pos:start="128:35" pos:end="128:58"><name pos:start="128:35" pos:end="128:36">is</name><operator pos:start="128:37" pos:end="128:38">-&gt;</operator><name pos:start="128:39" pos:end="128:44">videoq</name><operator pos:start="128:45" pos:end="128:45">.</operator><name pos:start="128:46" pos:end="128:58">abort_request</name></name></expr>)</condition> <block pos:start="128:61" pos:end="251:13">{<block_content pos:start="138:9" pos:end="251:13">









        <expr_stmt pos:start="138:9" pos:end="138:41"><expr pos:start="138:9" pos:end="138:40"><call pos:start="138:9" pos:end="138:40"><name pos:start="138:9" pos:end="138:23">SDL_UnlockMutex</name><argument_list pos:start="138:24" pos:end="138:40">(<argument pos:start="138:25" pos:end="138:39"><expr pos:start="138:25" pos:end="138:39"><name pos:start="138:25" pos:end="138:39"><name pos:start="138:25" pos:end="138:26">is</name><operator pos:start="138:27" pos:end="138:28">-&gt;</operator><name pos:start="138:29" pos:end="138:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="142:9" pos:end="144:22"><if pos:start="142:9" pos:end="144:22">if <condition pos:start="142:12" pos:end="142:37">(<expr pos:start="142:13" pos:end="142:36"><name pos:start="142:13" pos:end="142:36"><name pos:start="142:13" pos:end="142:14">is</name><operator pos:start="142:15" pos:end="142:16">-&gt;</operator><name pos:start="142:17" pos:end="142:22">videoq</name><operator pos:start="142:23" pos:end="142:23">.</operator><name pos:start="142:24" pos:end="142:36">abort_request</name></name></expr>)</condition><block type="pseudo" pos:start="144:13" pos:end="144:22"><block_content pos:start="144:13" pos:end="144:22">

            <return pos:start="144:13" pos:end="144:22">return <expr pos:start="144:20" pos:end="144:21"><operator pos:start="144:20" pos:end="144:20">-</operator><literal type="number" pos:start="144:21" pos:end="144:21">1</literal></expr>;</return></block_content></block></if></if_stmt>




    <comment type="block" pos:start="149:5" pos:end="149:54">/* if the frame is not skipped, then display it */</comment>

    <if_stmt pos:start="151:5" pos:end="251:13"><if pos:start="151:5" pos:end="251:13">if <condition pos:start="151:8" pos:end="151:16">(<expr pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:15"><name pos:start="151:9" pos:end="151:10">vp</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:15">bmp</name></name></expr>)</condition> <block pos:start="151:18" pos:end="251:13">{<block_content pos:start="153:9" pos:end="251:13">

        <decl_stmt pos:start="153:9" pos:end="156:0"><decl pos:start="153:9" pos:end="153:22"><type pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:17">AVPicture</name></type> <name pos:start="153:19" pos:end="153:22">pict</name></decl>;</decl_stmt>

<cpp:if pos:start="155:1" pos:end="155:19">#<cpp:directive pos:start="155:2" pos:end="155:3">if</cpp:directive> <expr pos:start="155:5" pos:end="155:19"><name pos:start="155:5" pos:end="155:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <if_stmt pos:start="157:9" pos:end="159:46"><if pos:start="157:9" pos:end="159:46">if<condition pos:start="157:11" pos:end="157:22">(<expr pos:start="157:12" pos:end="157:21"><name pos:start="157:12" pos:end="157:21"><name pos:start="157:12" pos:end="157:13">vp</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:21">picref</name></name></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:46"><block_content pos:start="159:13" pos:end="159:46">

            <expr_stmt pos:start="159:13" pos:end="159:46"><expr pos:start="159:13" pos:end="159:45"><call pos:start="159:13" pos:end="159:45"><name pos:start="159:13" pos:end="159:33">avfilter_unref_buffer</name><argument_list pos:start="159:34" pos:end="159:45">(<argument pos:start="159:35" pos:end="159:44"><expr pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:44"><name pos:start="159:35" pos:end="159:36">vp</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:44">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="161:9" pos:end="164:0"><expr pos:start="161:9" pos:end="161:38"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:10">vp</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:18">picref</name></name> <operator pos:start="161:20" pos:end="161:20">=</operator> <name pos:start="161:22" pos:end="161:38"><name pos:start="161:22" pos:end="161:30">src_frame</name><operator pos:start="161:31" pos:end="161:32">-&gt;</operator><name pos:start="161:33" pos:end="161:38">opaque</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="163:1" pos:end="163:6">#<cpp:directive pos:start="163:2" pos:end="163:6">endif</cpp:directive></cpp:endif>



        <comment type="block" pos:start="167:9" pos:end="167:41">/* get a pointer on the bitmap */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:37"><expr pos:start="169:9" pos:end="169:36"><call pos:start="169:9" pos:end="169:36"><name pos:start="169:9" pos:end="169:26">SDL_LockYUVOverlay</name> <argument_list pos:start="169:28" pos:end="169:36">(<argument pos:start="169:29" pos:end="169:35"><expr pos:start="169:29" pos:end="169:35"><name pos:start="169:29" pos:end="169:35"><name pos:start="169:29" pos:end="169:30">vp</name><operator pos:start="169:31" pos:end="169:32">-&gt;</operator><name pos:start="169:33" pos:end="169:35">bmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:42"><expr pos:start="173:9" pos:end="173:41"><call pos:start="173:9" pos:end="173:41"><name pos:start="173:9" pos:end="173:14">memset</name><argument_list pos:start="173:15" pos:end="173:41">(<argument pos:start="173:16" pos:end="173:20"><expr pos:start="173:16" pos:end="173:20"><operator pos:start="173:16" pos:end="173:16">&amp;</operator><name pos:start="173:17" pos:end="173:20">pict</name></expr></argument>,<argument pos:start="173:22" pos:end="173:22"><expr pos:start="173:22" pos:end="173:22"><literal type="number" pos:start="173:22" pos:end="173:22">0</literal></expr></argument>,<argument pos:start="173:24" pos:end="173:40"><expr pos:start="173:24" pos:end="173:40"><sizeof pos:start="173:24" pos:end="173:40">sizeof<argument_list pos:start="173:30" pos:end="173:40">(<argument pos:start="173:31" pos:end="173:39"><expr pos:start="173:31" pos:end="173:39"><name pos:start="173:31" pos:end="173:39">AVPicture</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:42"><expr pos:start="175:9" pos:end="175:41"><name pos:start="175:9" pos:end="175:20"><name pos:start="175:9" pos:end="175:12">pict</name><operator pos:start="175:13" pos:end="175:13">.</operator><name pos:start="175:14" pos:end="175:17">data</name><index pos:start="175:18" pos:end="175:20">[<expr pos:start="175:19" pos:end="175:19"><literal type="number" pos:start="175:19" pos:end="175:19">0</literal></expr>]</index></name> <operator pos:start="175:22" pos:end="175:22">=</operator> <name pos:start="175:24" pos:end="175:41"><name pos:start="175:24" pos:end="175:25">vp</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:30">bmp</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:38">pixels</name><index pos:start="175:39" pos:end="175:41">[<expr pos:start="175:40" pos:end="175:40"><literal type="number" pos:start="175:40" pos:end="175:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:42"><expr pos:start="177:9" pos:end="177:41"><name pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:12">pict</name><operator pos:start="177:13" pos:end="177:13">.</operator><name pos:start="177:14" pos:end="177:17">data</name><index pos:start="177:18" pos:end="177:20">[<expr pos:start="177:19" pos:end="177:19"><literal type="number" pos:start="177:19" pos:end="177:19">1</literal></expr>]</index></name> <operator pos:start="177:22" pos:end="177:22">=</operator> <name pos:start="177:24" pos:end="177:41"><name pos:start="177:24" pos:end="177:25">vp</name><operator pos:start="177:26" pos:end="177:27">-&gt;</operator><name pos:start="177:28" pos:end="177:30">bmp</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:38">pixels</name><index pos:start="177:39" pos:end="177:41">[<expr pos:start="177:40" pos:end="177:40"><literal type="number" pos:start="177:40" pos:end="177:40">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:42"><expr pos:start="179:9" pos:end="179:41"><name pos:start="179:9" pos:end="179:20"><name pos:start="179:9" pos:end="179:12">pict</name><operator pos:start="179:13" pos:end="179:13">.</operator><name pos:start="179:14" pos:end="179:17">data</name><index pos:start="179:18" pos:end="179:20">[<expr pos:start="179:19" pos:end="179:19"><literal type="number" pos:start="179:19" pos:end="179:19">2</literal></expr>]</index></name> <operator pos:start="179:22" pos:end="179:22">=</operator> <name pos:start="179:24" pos:end="179:41"><name pos:start="179:24" pos:end="179:25">vp</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:30">bmp</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:38">pixels</name><index pos:start="179:39" pos:end="179:41">[<expr pos:start="179:40" pos:end="179:40"><literal type="number" pos:start="179:40" pos:end="179:40">1</literal></expr>]</index></name></expr>;</expr_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:47"><expr pos:start="183:9" pos:end="183:46"><name pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:12">pict</name><operator pos:start="183:13" pos:end="183:13">.</operator><name pos:start="183:14" pos:end="183:21">linesize</name><index pos:start="183:22" pos:end="183:24">[<expr pos:start="183:23" pos:end="183:23"><literal type="number" pos:start="183:23" pos:end="183:23">0</literal></expr>]</index></name> <operator pos:start="183:26" pos:end="183:26">=</operator> <name pos:start="183:28" pos:end="183:46"><name pos:start="183:28" pos:end="183:29">vp</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:34">bmp</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:43">pitches</name><index pos:start="183:44" pos:end="183:46">[<expr pos:start="183:45" pos:end="183:45"><literal type="number" pos:start="183:45" pos:end="183:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:47"><expr pos:start="185:9" pos:end="185:46"><name pos:start="185:9" pos:end="185:24"><name pos:start="185:9" pos:end="185:12">pict</name><operator pos:start="185:13" pos:end="185:13">.</operator><name pos:start="185:14" pos:end="185:21">linesize</name><index pos:start="185:22" pos:end="185:24">[<expr pos:start="185:23" pos:end="185:23"><literal type="number" pos:start="185:23" pos:end="185:23">1</literal></expr>]</index></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:46"><name pos:start="185:28" pos:end="185:29">vp</name><operator pos:start="185:30" pos:end="185:31">-&gt;</operator><name pos:start="185:32" pos:end="185:34">bmp</name><operator pos:start="185:35" pos:end="185:36">-&gt;</operator><name pos:start="185:37" pos:end="185:43">pitches</name><index pos:start="185:44" pos:end="185:46">[<expr pos:start="185:45" pos:end="185:45"><literal type="number" pos:start="185:45" pos:end="185:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="192:0"><expr pos:start="187:9" pos:end="187:46"><name pos:start="187:9" pos:end="187:24"><name pos:start="187:9" pos:end="187:12">pict</name><operator pos:start="187:13" pos:end="187:13">.</operator><name pos:start="187:14" pos:end="187:21">linesize</name><index pos:start="187:22" pos:end="187:24">[<expr pos:start="187:23" pos:end="187:23"><literal type="number" pos:start="187:23" pos:end="187:23">2</literal></expr>]</index></name> <operator pos:start="187:26" pos:end="187:26">=</operator> <name pos:start="187:28" pos:end="187:46"><name pos:start="187:28" pos:end="187:29">vp</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:34">bmp</name><operator pos:start="187:35" pos:end="187:36">-&gt;</operator><name pos:start="187:37" pos:end="187:43">pitches</name><index pos:start="187:44" pos:end="187:46">[<expr pos:start="187:45" pos:end="187:45"><literal type="number" pos:start="187:45" pos:end="187:45">1</literal></expr>]</index></name></expr>;</expr_stmt>



<cpp:if pos:start="191:1" pos:end="191:19">#<cpp:directive pos:start="191:2" pos:end="191:3">if</cpp:directive> <expr pos:start="191:5" pos:end="191:19"><name pos:start="191:5" pos:end="191:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <comment type="line" pos:start="193:9" pos:end="193:36">//FIXME use direct rendering</comment>

        <expr_stmt pos:start="195:9" pos:end="200:0"><expr pos:start="195:9" pos:end="197:59"><call pos:start="195:9" pos:end="197:59"><name pos:start="195:9" pos:end="195:23">av_picture_copy</name><argument_list pos:start="195:24" pos:end="197:59">(<argument pos:start="195:25" pos:end="195:29"><expr pos:start="195:25" pos:end="195:29"><operator pos:start="195:25" pos:end="195:25">&amp;</operator><name pos:start="195:26" pos:end="195:29">pict</name></expr></argument>, <argument pos:start="195:32" pos:end="195:53"><expr pos:start="195:32" pos:end="195:53"><operator pos:start="195:32" pos:end="195:32">(</operator><name pos:start="195:33" pos:end="195:41">AVPicture</name> <operator pos:start="195:43" pos:end="195:43">*</operator><operator pos:start="195:44" pos:end="195:44">)</operator><name pos:start="195:45" pos:end="195:53">src_frame</name></expr></argument>,

                        <argument pos:start="197:25" pos:end="197:35"><expr pos:start="197:25" pos:end="197:35"><name pos:start="197:25" pos:end="197:35"><name pos:start="197:25" pos:end="197:26">vp</name><operator pos:start="197:27" pos:end="197:28">-&gt;</operator><name pos:start="197:29" pos:end="197:35">pix_fmt</name></name></expr></argument>, <argument pos:start="197:38" pos:end="197:46"><expr pos:start="197:38" pos:end="197:46"><name pos:start="197:38" pos:end="197:46"><name pos:start="197:38" pos:end="197:39">vp</name><operator pos:start="197:40" pos:end="197:41">-&gt;</operator><name pos:start="197:42" pos:end="197:46">width</name></name></expr></argument>, <argument pos:start="197:49" pos:end="197:58"><expr pos:start="197:49" pos:end="197:58"><name pos:start="197:49" pos:end="197:58"><name pos:start="197:49" pos:end="197:50">vp</name><operator pos:start="197:51" pos:end="197:52">-&gt;</operator><name pos:start="197:53" pos:end="197:58">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="199:1" pos:end="199:5">#<cpp:directive pos:start="199:2" pos:end="199:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="201:9" pos:end="201:60"><expr pos:start="201:9" pos:end="201:59"><name pos:start="201:9" pos:end="201:17">sws_flags</name> <operator pos:start="201:19" pos:end="201:19">=</operator> <call pos:start="201:21" pos:end="201:59"><name pos:start="201:21" pos:end="201:30">av_get_int</name><argument_list pos:start="201:31" pos:end="201:59">(<argument pos:start="201:32" pos:end="201:39"><expr pos:start="201:32" pos:end="201:39"><name pos:start="201:32" pos:end="201:39">sws_opts</name></expr></argument>, <argument pos:start="201:42" pos:end="201:52"><expr pos:start="201:42" pos:end="201:52"><literal type="string" pos:start="201:42" pos:end="201:52">"sws_flags"</literal></expr></argument>, <argument pos:start="201:55" pos:end="201:58"><expr pos:start="201:55" pos:end="201:58"><name pos:start="201:55" pos:end="201:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="207:58"><expr pos:start="203:9" pos:end="207:57"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:10">is</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:27">img_convert_ctx</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <call pos:start="203:31" pos:end="207:57"><name pos:start="203:31" pos:end="203:50">sws_getCachedContext</name><argument_list pos:start="203:51" pos:end="207:57">(<argument pos:start="203:52" pos:end="203:70"><expr pos:start="203:52" pos:end="203:70"><name pos:start="203:52" pos:end="203:70"><name pos:start="203:52" pos:end="203:53">is</name><operator pos:start="203:54" pos:end="203:55">-&gt;</operator><name pos:start="203:56" pos:end="203:70">img_convert_ctx</name></name></expr></argument>,

            <argument pos:start="205:13" pos:end="205:21"><expr pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:21"><name pos:start="205:13" pos:end="205:14">vp</name><operator pos:start="205:15" pos:end="205:16">-&gt;</operator><name pos:start="205:17" pos:end="205:21">width</name></name></expr></argument>, <argument pos:start="205:24" pos:end="205:33"><expr pos:start="205:24" pos:end="205:33"><name pos:start="205:24" pos:end="205:33"><name pos:start="205:24" pos:end="205:25">vp</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:33">height</name></name></expr></argument>, <argument pos:start="205:36" pos:end="205:46"><expr pos:start="205:36" pos:end="205:46"><name pos:start="205:36" pos:end="205:46"><name pos:start="205:36" pos:end="205:37">vp</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:46">pix_fmt</name></name></expr></argument>, <argument pos:start="205:49" pos:end="205:57"><expr pos:start="205:49" pos:end="205:57"><name pos:start="205:49" pos:end="205:57"><name pos:start="205:49" pos:end="205:50">vp</name><operator pos:start="205:51" pos:end="205:52">-&gt;</operator><name pos:start="205:53" pos:end="205:57">width</name></name></expr></argument>, <argument pos:start="205:60" pos:end="205:69"><expr pos:start="205:60" pos:end="205:69"><name pos:start="205:60" pos:end="205:69"><name pos:start="205:60" pos:end="205:61">vp</name><operator pos:start="205:62" pos:end="205:63">-&gt;</operator><name pos:start="205:64" pos:end="205:69">height</name></name></expr></argument>,

            <argument pos:start="207:13" pos:end="207:27"><expr pos:start="207:13" pos:end="207:27"><name pos:start="207:13" pos:end="207:27">PIX_FMT_YUV420P</name></expr></argument>, <argument pos:start="207:30" pos:end="207:38"><expr pos:start="207:30" pos:end="207:38"><name pos:start="207:30" pos:end="207:38">sws_flags</name></expr></argument>, <argument pos:start="207:41" pos:end="207:44"><expr pos:start="207:41" pos:end="207:44"><name pos:start="207:41" pos:end="207:44">NULL</name></expr></argument>, <argument pos:start="207:47" pos:end="207:50"><expr pos:start="207:47" pos:end="207:50"><name pos:start="207:47" pos:end="207:50">NULL</name></expr></argument>, <argument pos:start="207:53" pos:end="207:56"><expr pos:start="207:53" pos:end="207:56"><name pos:start="207:53" pos:end="207:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="251:13"><if pos:start="209:9" pos:end="251:13">if <condition pos:start="209:12" pos:end="209:40">(<expr pos:start="209:13" pos:end="209:39"><name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:14">is</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:31">img_convert_ctx</name></name> <operator pos:start="209:33" pos:end="209:34">==</operator> <name pos:start="209:36" pos:end="209:39">NULL</name></expr>)</condition> <block pos:start="209:42" pos:end="251:13">{<block_content pos:start="211:13" pos:end="251:13">

            <expr_stmt pos:start="211:13" pos:end="211:74"><expr pos:start="211:13" pos:end="211:73"><call pos:start="211:13" pos:end="211:73"><name pos:start="211:13" pos:end="211:19">fprintf</name><argument_list pos:start="211:20" pos:end="211:73">(<argument pos:start="211:21" pos:end="211:26"><expr pos:start="211:21" pos:end="211:26"><name pos:start="211:21" pos:end="211:26">stderr</name></expr></argument>, <argument pos:start="211:29" pos:end="211:72"><expr pos:start="211:29" pos:end="211:72"><literal type="string" pos:start="211:29" pos:end="211:72">"Cannot initialize the conversion context\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:20"><expr pos:start="213:13" pos:end="213:19"><call pos:start="213:13" pos:end="213:19"><name pos:start="213:13" pos:end="213:16">exit</name><argument_list pos:start="213:17" pos:end="213:19">(<argument pos:start="213:18" pos:end="213:18"><expr pos:start="213:18" pos:end="213:18"><literal type="number" pos:start="213:18" pos:end="213:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <expr_stmt pos:start="216:9" pos:end="221:0"><expr pos:start="216:9" pos:end="218:58"><call pos:start="216:9" pos:end="218:58"><name pos:start="216:9" pos:end="216:17">sws_scale</name><argument_list pos:start="216:18" pos:end="218:58">(<argument pos:start="216:19" pos:end="216:37"><expr pos:start="216:19" pos:end="216:37"><name pos:start="216:19" pos:end="216:37"><name pos:start="216:19" pos:end="216:20">is</name><operator pos:start="216:21" pos:end="216:22">-&gt;</operator><name pos:start="216:23" pos:end="216:37">img_convert_ctx</name></name></expr></argument>, <argument pos:start="216:40" pos:end="216:54"><expr pos:start="216:40" pos:end="216:54"><name pos:start="216:40" pos:end="216:54"><name pos:start="216:40" pos:end="216:48">src_frame</name><operator pos:start="216:49" pos:end="216:50">-&gt;</operator><name pos:start="216:51" pos:end="216:54">data</name></name></expr></argument>, <argument pos:start="216:57" pos:end="216:75"><expr pos:start="216:57" pos:end="216:75"><name pos:start="216:57" pos:end="216:75"><name pos:start="216:57" pos:end="216:65">src_frame</name><operator pos:start="216:66" pos:end="216:67">-&gt;</operator><name pos:start="216:68" pos:end="216:75">linesize</name></name></expr></argument>,

                  <argument pos:start="218:19" pos:end="218:19"><expr pos:start="218:19" pos:end="218:19"><literal type="number" pos:start="218:19" pos:end="218:19">0</literal></expr></argument>, <argument pos:start="218:22" pos:end="218:31"><expr pos:start="218:22" pos:end="218:31"><name pos:start="218:22" pos:end="218:31"><name pos:start="218:22" pos:end="218:23">vp</name><operator pos:start="218:24" pos:end="218:25">-&gt;</operator><name pos:start="218:26" pos:end="218:31">height</name></name></expr></argument>, <argument pos:start="218:34" pos:end="218:42"><expr pos:start="218:34" pos:end="218:42"><name pos:start="218:34" pos:end="218:42"><name pos:start="218:34" pos:end="218:37">pict</name><operator pos:start="218:38" pos:end="218:38">.</operator><name pos:start="218:39" pos:end="218:42">data</name></name></expr></argument>, <argument pos:start="218:45" pos:end="218:57"><expr pos:start="218:45" pos:end="218:57"><name pos:start="218:45" pos:end="218:57"><name pos:start="218:45" pos:end="218:48">pict</name><operator pos:start="218:49" pos:end="218:49">.</operator><name pos:start="218:50" pos:end="218:57">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="220:1" pos:end="220:6">#<cpp:directive pos:start="220:2" pos:end="220:6">endif</cpp:directive></cpp:endif>

        <comment type="block" pos:start="222:9" pos:end="222:39">/* update the bitmap content */</comment>

        <expr_stmt pos:start="224:9" pos:end="224:38"><expr pos:start="224:9" pos:end="224:37"><call pos:start="224:9" pos:end="224:37"><name pos:start="224:9" pos:end="224:28">SDL_UnlockYUVOverlay</name><argument_list pos:start="224:29" pos:end="224:37">(<argument pos:start="224:30" pos:end="224:36"><expr pos:start="224:30" pos:end="224:36"><name pos:start="224:30" pos:end="224:36"><name pos:start="224:30" pos:end="224:31">vp</name><operator pos:start="224:32" pos:end="224:33">-&gt;</operator><name pos:start="224:34" pos:end="224:36">bmp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="228:9" pos:end="228:22"><expr pos:start="228:9" pos:end="228:21"><name pos:start="228:9" pos:end="228:15"><name pos:start="228:9" pos:end="228:10">vp</name><operator pos:start="228:11" pos:end="228:12">-&gt;</operator><name pos:start="228:13" pos:end="228:15">pts</name></name> <operator pos:start="228:17" pos:end="228:17">=</operator> <name pos:start="228:19" pos:end="228:21">pts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="230:9" pos:end="230:22"><expr pos:start="230:9" pos:end="230:21"><name pos:start="230:9" pos:end="230:15"><name pos:start="230:9" pos:end="230:10">vp</name><operator pos:start="230:11" pos:end="230:12">-&gt;</operator><name pos:start="230:13" pos:end="230:15">pos</name></name> <operator pos:start="230:17" pos:end="230:17">=</operator> <name pos:start="230:19" pos:end="230:21">pos</name></expr>;</expr_stmt>



        <comment type="block" pos:start="234:9" pos:end="234:49">/* now we can update the picture count */</comment>

        <if_stmt pos:start="236:9" pos:end="238:33"><if pos:start="236:9" pos:end="238:33">if <condition pos:start="236:12" pos:end="236:59">(<expr pos:start="236:13" pos:end="236:58"><operator pos:start="236:13" pos:end="236:14">++</operator><name pos:start="236:15" pos:end="236:30"><name pos:start="236:15" pos:end="236:16">is</name><operator pos:start="236:17" pos:end="236:18">-&gt;</operator><name pos:start="236:19" pos:end="236:30">pictq_windex</name></name> <operator pos:start="236:32" pos:end="236:33">==</operator> <name pos:start="236:35" pos:end="236:58">VIDEO_PICTURE_QUEUE_SIZE</name></expr>)</condition><block type="pseudo" pos:start="238:13" pos:end="238:33"><block_content pos:start="238:13" pos:end="238:33">

            <expr_stmt pos:start="238:13" pos:end="238:33"><expr pos:start="238:13" pos:end="238:32"><name pos:start="238:13" pos:end="238:28"><name pos:start="238:13" pos:end="238:14">is</name><operator pos:start="238:15" pos:end="238:16">-&gt;</operator><name pos:start="238:17" pos:end="238:28">pictq_windex</name></name> <operator pos:start="238:30" pos:end="238:30">=</operator> <literal type="number" pos:start="238:32" pos:end="238:32">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="240:9" pos:end="240:39"><expr pos:start="240:9" pos:end="240:38"><call pos:start="240:9" pos:end="240:38"><name pos:start="240:9" pos:end="240:21">SDL_LockMutex</name><argument_list pos:start="240:22" pos:end="240:38">(<argument pos:start="240:23" pos:end="240:37"><expr pos:start="240:23" pos:end="240:37"><name pos:start="240:23" pos:end="240:37"><name pos:start="240:23" pos:end="240:24">is</name><operator pos:start="240:25" pos:end="240:26">-&gt;</operator><name pos:start="240:27" pos:end="240:37">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="242:9" pos:end="242:59"><expr pos:start="242:9" pos:end="242:58"><name pos:start="242:9" pos:end="242:24"><name pos:start="242:9" pos:end="242:10">vp</name><operator pos:start="242:11" pos:end="242:12">-&gt;</operator><name pos:start="242:13" pos:end="242:24">target_clock</name></name><operator pos:start="242:25" pos:end="242:25">=</operator> <call pos:start="242:27" pos:end="242:58"><name pos:start="242:27" pos:end="242:45">compute_target_time</name><argument_list pos:start="242:46" pos:end="242:58">(<argument pos:start="242:47" pos:end="242:53"><expr pos:start="242:47" pos:end="242:53"><name pos:start="242:47" pos:end="242:53"><name pos:start="242:47" pos:end="242:48">vp</name><operator pos:start="242:49" pos:end="242:50">-&gt;</operator><name pos:start="242:51" pos:end="242:53">pts</name></name></expr></argument>, <argument pos:start="242:56" pos:end="242:57"><expr pos:start="242:56" pos:end="242:57"><name pos:start="242:56" pos:end="242:57">is</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="246:9" pos:end="246:25"><expr pos:start="246:9" pos:end="246:24"><name pos:start="246:9" pos:end="246:22"><name pos:start="246:9" pos:end="246:10">is</name><operator pos:start="246:11" pos:end="246:12">-&gt;</operator><name pos:start="246:13" pos:end="246:22">pictq_size</name></name><operator pos:start="246:23" pos:end="246:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="248:9" pos:end="248:41"><expr pos:start="248:9" pos:end="248:40"><call pos:start="248:9" pos:end="248:40"><name pos:start="248:9" pos:end="248:23">SDL_UnlockMutex</name><argument_list pos:start="248:24" pos:end="248:40">(<argument pos:start="248:25" pos:end="248:39"><expr pos:start="248:25" pos:end="248:39"><name pos:start="248:25" pos:end="248:39"><name pos:start="248:25" pos:end="248:26">is</name><operator pos:start="248:27" pos:end="248:28">-&gt;</operator><name pos:start="248:29" pos:end="248:39">pictq_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></while></block_content></block></block></if></if_stmt></block_content></block></while></block_content></block></else></if_stmt></block_content></block></function>
</unit>
