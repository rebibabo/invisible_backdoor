<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9090.c" pos:tabs="8"><function pos:start="1:1" pos:end="90:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vfio_pci_size_rom</name><parameter_list pos:start="1:30" pos:end="1:47">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VFIODevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">vdev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="90:1">{<block_content pos:start="5:5" pos:end="87:30">

    <decl_stmt pos:start="5:5" pos:end="5:70"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">orig</name></decl>, <decl pos:start="5:20" pos:end="5:69"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:23">size</name> <init pos:start="5:25" pos:end="5:69">= <expr pos:start="5:27" pos:end="5:69"><call pos:start="5:27" pos:end="5:69"><name pos:start="5:27" pos:end="5:37">cpu_to_le32</name><argument_list pos:start="5:38" pos:end="5:69">(<argument pos:start="5:39" pos:end="5:68"><expr pos:start="5:39" pos:end="5:68"><operator pos:start="5:39" pos:end="5:39">(</operator><name pos:start="5:40" pos:end="5:47">uint32_t</name><operator pos:start="5:48" pos:end="5:48">)</operator><name pos:start="5:49" pos:end="5:68">PCI_ROM_ADDRESS_MASK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:57"><decl pos:start="7:5" pos:end="7:56"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">off_t</name></type> <name pos:start="7:11" pos:end="7:16">offset</name> <init pos:start="7:18" pos:end="7:56">= <expr pos:start="7:20" pos:end="7:56"><name pos:start="7:20" pos:end="7:38"><name pos:start="7:20" pos:end="7:23">vdev</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:38">config_offset</name></name> <operator pos:start="7:40" pos:end="7:40">+</operator> <name pos:start="7:42" pos:end="7:56">PCI_ROM_ADDRESS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">name</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">32</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:12">vdev</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:18">pdev</name><operator pos:start="13:19" pos:end="13:19">.</operator><name pos:start="13:20" pos:end="13:26">romfile</name></name> <operator pos:start="13:28" pos:end="13:29">||</operator> <operator pos:start="13:31" pos:end="13:31">!</operator><name pos:start="13:32" pos:end="13:49"><name pos:start="13:32" pos:end="13:35">vdev</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:41">pdev</name><operator pos:start="13:42" pos:end="13:42">.</operator><name pos:start="13:43" pos:end="13:49">rom_bar</name></name></expr>)</condition> <block pos:start="13:52" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="27:7">/*

     * Use the same size ROM BAR as the physical device.  The contents

     * will get filled in later when the guest tries to read it.

     */</comment>

    <if_stmt pos:start="29:5" pos:end="45:5"><if pos:start="29:5" pos:end="45:5">if <condition pos:start="29:8" pos:end="35:48">(<expr pos:start="29:9" pos:end="35:47"><call pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:13">pread</name><argument_list pos:start="29:14" pos:end="29:41">(<argument pos:start="29:15" pos:end="29:22"><expr pos:start="29:15" pos:end="29:22"><name pos:start="29:15" pos:end="29:22"><name pos:start="29:15" pos:end="29:18">vdev</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:22">fd</name></name></expr></argument>, <argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:29">orig</name></expr></argument>, <argument pos:start="29:32" pos:end="29:32"><expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">4</literal></expr></argument>, <argument pos:start="29:35" pos:end="29:40"><expr pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:40">offset</name></expr></argument>)</argument_list></call> <operator pos:start="29:43" pos:end="29:44">!=</operator> <literal type="number" pos:start="29:46" pos:end="29:46">4</literal> <operator pos:start="29:48" pos:end="29:49">||</operator>

        <call pos:start="31:9" pos:end="31:42"><name pos:start="31:9" pos:end="31:14">pwrite</name><argument_list pos:start="31:15" pos:end="31:42">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:19">vdev</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">fd</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:30"><expr pos:start="31:26" pos:end="31:30"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:30">size</name></expr></argument>, <argument pos:start="31:33" pos:end="31:33"><expr pos:start="31:33" pos:end="31:33"><literal type="number" pos:start="31:33" pos:end="31:33">4</literal></expr></argument>, <argument pos:start="31:36" pos:end="31:41"><expr pos:start="31:36" pos:end="31:41"><name pos:start="31:36" pos:end="31:41">offset</name></expr></argument>)</argument_list></call> <operator pos:start="31:44" pos:end="31:45">!=</operator> <literal type="number" pos:start="31:47" pos:end="31:47">4</literal> <operator pos:start="31:49" pos:end="31:50">||</operator>

        <call pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:13">pread</name><argument_list pos:start="33:14" pos:end="33:41">(<argument pos:start="33:15" pos:end="33:22"><expr pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:22"><name pos:start="33:15" pos:end="33:18">vdev</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:22">fd</name></name></expr></argument>, <argument pos:start="33:25" pos:end="33:29"><expr pos:start="33:25" pos:end="33:29"><operator pos:start="33:25" pos:end="33:25">&amp;</operator><name pos:start="33:26" pos:end="33:29">size</name></expr></argument>, <argument pos:start="33:32" pos:end="33:32"><expr pos:start="33:32" pos:end="33:32"><literal type="number" pos:start="33:32" pos:end="33:32">4</literal></expr></argument>, <argument pos:start="33:35" pos:end="33:40"><expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40">offset</name></expr></argument>)</argument_list></call> <operator pos:start="33:43" pos:end="33:44">!=</operator> <literal type="number" pos:start="33:46" pos:end="33:46">4</literal> <operator pos:start="33:48" pos:end="33:49">||</operator>

        <call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:14">pwrite</name><argument_list pos:start="35:15" pos:end="35:42">(<argument pos:start="35:16" pos:end="35:23"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:19">vdev</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:23">fd</name></name></expr></argument>, <argument pos:start="35:26" pos:end="35:30"><expr pos:start="35:26" pos:end="35:30"><operator pos:start="35:26" pos:end="35:26">&amp;</operator><name pos:start="35:27" pos:end="35:30">orig</name></expr></argument>, <argument pos:start="35:33" pos:end="35:33"><expr pos:start="35:33" pos:end="35:33"><literal type="number" pos:start="35:33" pos:end="35:33">4</literal></expr></argument>, <argument pos:start="35:36" pos:end="35:41"><expr pos:start="35:36" pos:end="35:41"><name pos:start="35:36" pos:end="35:41">offset</name></expr></argument>)</argument_list></call> <operator pos:start="35:44" pos:end="35:45">!=</operator> <literal type="number" pos:start="35:47" pos:end="35:47">4</literal></expr>)</condition> <block pos:start="35:50" pos:end="45:5">{<block_content pos:start="37:9" pos:end="43:15">

        <expr_stmt pos:start="37:9" pos:end="41:59"><expr pos:start="37:9" pos:end="41:58"><call pos:start="37:9" pos:end="41:58"><name pos:start="37:9" pos:end="37:20">error_report</name><argument_list pos:start="37:21" pos:end="41:58">(<argument pos:start="37:22" pos:end="37:55"><expr pos:start="37:22" pos:end="37:55"><literal type="string" pos:start="37:22" pos:end="37:55">"%s(%04x:%02x:%02x.%x) failed: %m"</literal></expr></argument>,

                     <argument pos:start="39:22" pos:end="39:29"><expr pos:start="39:22" pos:end="39:29"><name pos:start="39:22" pos:end="39:29">__func__</name></expr></argument>, <argument pos:start="39:32" pos:end="39:48"><expr pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:48"><name pos:start="39:32" pos:end="39:35">vdev</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:41">host</name><operator pos:start="39:42" pos:end="39:42">.</operator><name pos:start="39:43" pos:end="39:48">domain</name></name></expr></argument>, <argument pos:start="39:51" pos:end="39:64"><expr pos:start="39:51" pos:end="39:64"><name pos:start="39:51" pos:end="39:64"><name pos:start="39:51" pos:end="39:54">vdev</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:60">host</name><operator pos:start="39:61" pos:end="39:61">.</operator><name pos:start="39:62" pos:end="39:64">bus</name></name></expr></argument>,

                     <argument pos:start="41:22" pos:end="41:36"><expr pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:36"><name pos:start="41:22" pos:end="41:25">vdev</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:31">host</name><operator pos:start="41:32" pos:end="41:32">.</operator><name pos:start="41:33" pos:end="41:36">slot</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:57"><expr pos:start="41:39" pos:end="41:57"><name pos:start="41:39" pos:end="41:57"><name pos:start="41:39" pos:end="41:42">vdev</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:48">host</name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:57">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:59"><expr pos:start="49:5" pos:end="49:58"><name pos:start="49:5" pos:end="49:8">size</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <operator pos:start="49:12" pos:end="49:12">~</operator><operator pos:start="49:13" pos:end="49:13">(</operator><call pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:24">le32_to_cpu</name><argument_list pos:start="49:25" pos:end="49:30">(<argument pos:start="49:26" pos:end="49:29"><expr pos:start="49:26" pos:end="49:29"><name pos:start="49:26" pos:end="49:29">size</name></expr></argument>)</argument_list></call> <operator pos:start="49:32" pos:end="49:32">&amp;</operator> <name pos:start="49:34" pos:end="49:53">PCI_ROM_ADDRESS_MASK</name><operator pos:start="49:54" pos:end="49:54">)</operator> <operator pos:start="49:56" pos:end="49:56">+</operator> <literal type="number" pos:start="49:58" pos:end="49:58">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:14">(<expr pos:start="53:9" pos:end="53:13"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:13">size</name></expr>)</condition> <block pos:start="53:16" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:15">

        <return pos:start="55:9" pos:end="55:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:72"><expr pos:start="61:5" pos:end="63:71"><call pos:start="61:5" pos:end="63:71"><name pos:start="61:5" pos:end="61:11">DPRINTF</name><argument_list pos:start="61:12" pos:end="63:71">(<argument pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:47"><literal type="string" pos:start="61:13" pos:end="61:47">"%04x:%02x:%02x.%x ROM size 0x%x\n"</literal></expr></argument>, <argument pos:start="61:50" pos:end="61:66"><expr pos:start="61:50" pos:end="61:66"><name pos:start="61:50" pos:end="61:66"><name pos:start="61:50" pos:end="61:53">vdev</name><operator pos:start="61:54" pos:end="61:55">-&gt;</operator><name pos:start="61:56" pos:end="61:59">host</name><operator pos:start="61:60" pos:end="61:60">.</operator><name pos:start="61:61" pos:end="61:66">domain</name></name></expr></argument>,

            <argument pos:start="63:13" pos:end="63:26"><expr pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:16">vdev</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">host</name><operator pos:start="63:23" pos:end="63:23">.</operator><name pos:start="63:24" pos:end="63:26">bus</name></name></expr></argument>, <argument pos:start="63:29" pos:end="63:43"><expr pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:43"><name pos:start="63:29" pos:end="63:32">vdev</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:38">host</name><operator pos:start="63:39" pos:end="63:39">.</operator><name pos:start="63:40" pos:end="63:43">slot</name></name></expr></argument>, <argument pos:start="63:46" pos:end="63:64"><expr pos:start="63:46" pos:end="63:64"><name pos:start="63:46" pos:end="63:64"><name pos:start="63:46" pos:end="63:49">vdev</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:55">host</name><operator pos:start="63:56" pos:end="63:56">.</operator><name pos:start="63:57" pos:end="63:64">function</name></name></expr></argument>, <argument pos:start="63:67" pos:end="63:70"><expr pos:start="63:67" pos:end="63:70"><name pos:start="63:67" pos:end="63:70">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="71:34"><expr pos:start="67:5" pos:end="71:33"><call pos:start="67:5" pos:end="71:33"><name pos:start="67:5" pos:end="67:12">snprintf</name><argument_list pos:start="67:13" pos:end="71:33">(<argument pos:start="67:14" pos:end="67:17"><expr pos:start="67:14" pos:end="67:17"><name pos:start="67:14" pos:end="67:17">name</name></expr></argument>, <argument pos:start="67:20" pos:end="67:31"><expr pos:start="67:20" pos:end="67:31"><sizeof pos:start="67:20" pos:end="67:31">sizeof<argument_list pos:start="67:26" pos:end="67:31">(<argument pos:start="67:27" pos:end="67:30"><expr pos:start="67:27" pos:end="67:30"><name pos:start="67:27" pos:end="67:30">name</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="67:34" pos:end="67:62"><expr pos:start="67:34" pos:end="67:62"><literal type="string" pos:start="67:34" pos:end="67:62">"vfio[%04x:%02x:%02x.%x].rom"</literal></expr></argument>,

             <argument pos:start="69:14" pos:end="69:30"><expr pos:start="69:14" pos:end="69:30"><name pos:start="69:14" pos:end="69:30"><name pos:start="69:14" pos:end="69:17">vdev</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:23">host</name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:30">domain</name></name></expr></argument>, <argument pos:start="69:33" pos:end="69:46"><expr pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:46"><name pos:start="69:33" pos:end="69:36">vdev</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:42">host</name><operator pos:start="69:43" pos:end="69:43">.</operator><name pos:start="69:44" pos:end="69:46">bus</name></name></expr></argument>, <argument pos:start="69:49" pos:end="69:63"><expr pos:start="69:49" pos:end="69:63"><name pos:start="69:49" pos:end="69:63"><name pos:start="69:49" pos:end="69:52">vdev</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:58">host</name><operator pos:start="69:59" pos:end="69:59">.</operator><name pos:start="69:60" pos:end="69:63">slot</name></name></expr></argument>,

             <argument pos:start="71:14" pos:end="71:32"><expr pos:start="71:14" pos:end="71:32"><name pos:start="71:14" pos:end="71:32"><name pos:start="71:14" pos:end="71:17">vdev</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:23">host</name><operator pos:start="71:24" pos:end="71:24">.</operator><name pos:start="71:25" pos:end="71:32">function</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="77:59"><expr pos:start="75:5" pos:end="77:58"><call pos:start="75:5" pos:end="77:58"><name pos:start="75:5" pos:end="75:25">memory_region_init_io</name><argument_list pos:start="75:26" pos:end="77:58">(<argument pos:start="75:27" pos:end="75:41"><expr pos:start="75:27" pos:end="75:41"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:41"><name pos:start="75:28" pos:end="75:31">vdev</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:37">pdev</name><operator pos:start="75:38" pos:end="75:38">.</operator><name pos:start="75:39" pos:end="75:41">rom</name></name></expr></argument>, <argument pos:start="75:44" pos:end="75:55"><expr pos:start="75:44" pos:end="75:55"><call pos:start="75:44" pos:end="75:55"><name pos:start="75:44" pos:end="75:49">OBJECT</name><argument_list pos:start="75:50" pos:end="75:55">(<argument pos:start="75:51" pos:end="75:54"><expr pos:start="75:51" pos:end="75:54"><name pos:start="75:51" pos:end="75:54">vdev</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="77:27" pos:end="77:39"><expr pos:start="77:27" pos:end="77:39"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:39">vfio_rom_ops</name></expr></argument>, <argument pos:start="77:42" pos:end="77:45"><expr pos:start="77:42" pos:end="77:45"><name pos:start="77:42" pos:end="77:45">vdev</name></expr></argument>, <argument pos:start="77:48" pos:end="77:51"><expr pos:start="77:48" pos:end="77:51"><name pos:start="77:48" pos:end="77:51">name</name></expr></argument>, <argument pos:start="77:54" pos:end="77:57"><expr pos:start="77:54" pos:end="77:57"><name pos:start="77:54" pos:end="77:57">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:69"><expr pos:start="81:5" pos:end="83:68"><call pos:start="81:5" pos:end="83:68"><name pos:start="81:5" pos:end="81:20">pci_register_bar</name><argument_list pos:start="81:21" pos:end="83:68">(<argument pos:start="81:22" pos:end="81:32"><expr pos:start="81:22" pos:end="81:32"><operator pos:start="81:22" pos:end="81:22">&amp;</operator><name pos:start="81:23" pos:end="81:32"><name pos:start="81:23" pos:end="81:26">vdev</name><operator pos:start="81:27" pos:end="81:28">-&gt;</operator><name pos:start="81:29" pos:end="81:32">pdev</name></name></expr></argument>, <argument pos:start="81:35" pos:end="81:46"><expr pos:start="81:35" pos:end="81:46"><name pos:start="81:35" pos:end="81:46">PCI_ROM_SLOT</name></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:50"><expr pos:start="83:22" pos:end="83:50"><name pos:start="83:22" pos:end="83:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="83:53" pos:end="83:67"><expr pos:start="83:53" pos:end="83:67"><operator pos:start="83:53" pos:end="83:53">&amp;</operator><name pos:start="83:54" pos:end="83:67"><name pos:start="83:54" pos:end="83:57">vdev</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:63">pdev</name><operator pos:start="83:64" pos:end="83:64">.</operator><name pos:start="83:65" pos:end="83:67">rom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:30"><expr pos:start="87:5" pos:end="87:29"><name pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:8">vdev</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:14">pdev</name><operator pos:start="87:15" pos:end="87:15">.</operator><name pos:start="87:16" pos:end="87:22">has_rom</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <name pos:start="87:26" pos:end="87:29">true</name></expr>;</expr_stmt>


</block_content>}</block></function></unit>
