<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1948.c" pos:tabs="8"><function pos:start="1:1" pos:end="155:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">PCIDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:40">do_pci_register_device</name><parameter_list pos:start="1:41" pos:end="3:69">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:50">PCIDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">pci_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">PCIBus</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">bus</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:57"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">name</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:68"><decl pos:start="3:60" pos:end="3:68"><type pos:start="3:60" pos:end="3:68"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:68">devfn</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="155:1">{<block_content pos:start="7:5" pos:end="153:19">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">PCIDeviceClass</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">pc</name> <init pos:start="7:24" pos:end="7:54">= <expr pos:start="7:26" pos:end="7:54"><call pos:start="7:26" pos:end="7:54"><name pos:start="7:26" pos:end="7:45">PCI_DEVICE_GET_CLASS</name><argument_list pos:start="7:46" pos:end="7:54">(<argument pos:start="7:47" pos:end="7:53"><expr pos:start="7:47" pos:end="7:53"><name pos:start="7:47" pos:end="7:53">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">PCIConfigReadFunc</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:34">config_read</name> <init pos:start="9:36" pos:end="9:52">= <expr pos:start="9:38" pos:end="9:52"><name pos:start="9:38" pos:end="9:52"><name pos:start="9:38" pos:end="9:39">pc</name><operator pos:start="9:40" pos:end="9:41">-&gt;</operator><name pos:start="9:42" pos:end="9:52">config_read</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:55"><type pos:start="11:5" pos:end="11:24"><name pos:start="11:5" pos:end="11:22">PCIConfigWriteFunc</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:36">config_write</name> <init pos:start="11:38" pos:end="11:55">= <expr pos:start="11:40" pos:end="11:55"><name pos:start="11:40" pos:end="11:55"><name pos:start="11:40" pos:end="11:41">pc</name><operator pos:start="11:42" pos:end="11:43">-&gt;</operator><name pos:start="11:44" pos:end="11:55">config_write</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">AddressSpace</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:24">dma_as</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="43:5"><if pos:start="17:5" pos:end="35:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:13">devfn</name> <operator pos:start="17:15" pos:end="17:15">&lt;</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>)</condition> <block pos:start="17:20" pos:end="35:5">{<block_content pos:start="19:9" pos:end="33:12">

        <for pos:start="19:9" pos:end="27:9">for<control pos:start="19:12" pos:end="21:34">(<init pos:start="19:13" pos:end="19:36"><expr pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:17">devfn</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <name pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:23">bus</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">devfn_min</name></name></expr> ;</init> <condition pos:start="19:38" pos:end="19:70"><expr pos:start="19:38" pos:end="19:69"><name pos:start="19:38" pos:end="19:42">devfn</name> <operator pos:start="19:44" pos:end="19:44">&lt;</operator> <call pos:start="19:46" pos:end="19:69"><name pos:start="19:46" pos:end="19:55">ARRAY_SIZE</name><argument_list pos:start="19:56" pos:end="19:69">(<argument pos:start="19:57" pos:end="19:68"><expr pos:start="19:57" pos:end="19:68"><name pos:start="19:57" pos:end="19:68"><name pos:start="19:57" pos:end="19:59">bus</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:68">devices</name></name></expr></argument>)</argument_list></call></expr>;</condition>

            <incr pos:start="21:13" pos:end="21:33"><expr pos:start="21:13" pos:end="21:33"><name pos:start="21:13" pos:end="21:17">devfn</name> <operator pos:start="21:19" pos:end="21:20">+=</operator> <name pos:start="21:22" pos:end="21:33">PCI_FUNC_MAX</name></expr></incr>)</control> <block pos:start="21:36" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:27">

            <if_stmt pos:start="23:13" pos:end="25:27"><if pos:start="23:13" pos:end="25:27">if <condition pos:start="23:16" pos:end="23:37">(<expr pos:start="23:17" pos:end="23:36"><operator pos:start="23:17" pos:end="23:17">!</operator><name pos:start="23:18" pos:end="23:36"><name pos:start="23:18" pos:end="23:20">bus</name><operator pos:start="23:21" pos:end="23:22">-&gt;</operator><name pos:start="23:23" pos:end="23:29">devices</name><index pos:start="23:30" pos:end="23:36">[<expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:35">devfn</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:27"><block_content pos:start="25:17" pos:end="25:27">

                <goto pos:start="25:17" pos:end="25:27">goto <name pos:start="25:22" pos:end="25:26">found</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="29:9" pos:end="29:81"><expr pos:start="29:9" pos:end="29:80"><call pos:start="29:9" pos:end="29:80"><name pos:start="29:9" pos:end="29:20">error_report</name><argument_list pos:start="29:21" pos:end="29:80">(<argument pos:start="29:22" pos:end="29:73"><expr pos:start="29:22" pos:end="29:73"><literal type="string" pos:start="29:22" pos:end="29:73">"PCI: no slot/function available for %s, all in use"</literal></expr></argument>, <argument pos:start="29:76" pos:end="29:79"><expr pos:start="29:76" pos:end="29:79"><name pos:start="29:76" pos:end="29:79">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    <label pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:9">found</name>:</label> <empty_stmt pos:start="33:12" pos:end="33:12">;</empty_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="43:5">else if <condition pos:start="35:15" pos:end="35:35">(<expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:18">bus</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:27">devices</name><index pos:start="35:28" pos:end="35:34">[<expr pos:start="35:29" pos:end="35:33"><name pos:start="35:29" pos:end="35:33">devfn</name></expr>]</index></name></expr>)</condition> <block pos:start="35:37" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:20">

        <expr_stmt pos:start="37:9" pos:end="39:88"><expr pos:start="37:9" pos:end="39:87"><call pos:start="37:9" pos:end="39:87"><name pos:start="37:9" pos:end="37:20">error_report</name><argument_list pos:start="37:21" pos:end="39:87">(<argument pos:start="37:22" pos:end="37:82"><expr pos:start="37:22" pos:end="37:82"><literal type="string" pos:start="37:22" pos:end="37:82">"PCI: slot %d function %d not available for %s, in use by %s"</literal></expr></argument>,

                     <argument pos:start="39:22" pos:end="39:36"><expr pos:start="39:22" pos:end="39:36"><call pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:29">PCI_SLOT</name><argument_list pos:start="39:30" pos:end="39:36">(<argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">devfn</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:39" pos:end="39:53"><expr pos:start="39:39" pos:end="39:53"><call pos:start="39:39" pos:end="39:53"><name pos:start="39:39" pos:end="39:46">PCI_FUNC</name><argument_list pos:start="39:47" pos:end="39:53">(<argument pos:start="39:48" pos:end="39:52"><expr pos:start="39:48" pos:end="39:52"><name pos:start="39:48" pos:end="39:52">devfn</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:56" pos:end="39:59"><expr pos:start="39:56" pos:end="39:59"><name pos:start="39:56" pos:end="39:59">name</name></expr></argument>, <argument pos:start="39:62" pos:end="39:86"><expr pos:start="39:62" pos:end="39:86"><name pos:start="39:62" pos:end="39:80"><name pos:start="39:62" pos:end="39:64">bus</name><operator pos:start="39:65" pos:end="39:66">-&gt;</operator><name pos:start="39:67" pos:end="39:73">devices</name><index pos:start="39:74" pos:end="39:80">[<expr pos:start="39:75" pos:end="39:79"><name pos:start="39:75" pos:end="39:79">devfn</name></expr>]</index></name><operator pos:start="39:81" pos:end="39:82">-&gt;</operator><name pos:start="39:83" pos:end="39:86">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:11">pci_dev</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:16">bus</name></name> <operator pos:start="47:18" pos:end="47:18">=</operator> <name pos:start="47:20" pos:end="47:22">bus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:10">dma_as</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:52"><name pos:start="49:14" pos:end="49:43">pci_device_iommu_address_space</name><argument_list pos:start="49:44" pos:end="49:52">(<argument pos:start="49:45" pos:end="49:51"><expr pos:start="49:45" pos:end="49:51"><name pos:start="49:45" pos:end="49:51">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="57:80"><expr pos:start="53:5" pos:end="57:79"><call pos:start="53:5" pos:end="57:79"><name pos:start="53:5" pos:end="53:28">memory_region_init_alias</name><argument_list pos:start="53:29" pos:end="57:79">(<argument pos:start="53:30" pos:end="53:63"><expr pos:start="53:30" pos:end="53:63"><operator pos:start="53:30" pos:end="53:30">&amp;</operator><name pos:start="53:31" pos:end="53:63"><name pos:start="53:31" pos:end="53:37">pci_dev</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:63">bus_master_enable_region</name></name></expr></argument>,

                             <argument pos:start="55:30" pos:end="55:44"><expr pos:start="55:30" pos:end="55:44"><call pos:start="55:30" pos:end="55:44"><name pos:start="55:30" pos:end="55:35">OBJECT</name><argument_list pos:start="55:36" pos:end="55:44">(<argument pos:start="55:37" pos:end="55:43"><expr pos:start="55:37" pos:end="55:43"><name pos:start="55:37" pos:end="55:43">pci_dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:47" pos:end="55:58"><expr pos:start="55:47" pos:end="55:58"><literal type="string" pos:start="55:47" pos:end="55:58">"bus master"</literal></expr></argument>,

                             <argument pos:start="57:30" pos:end="57:41"><expr pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:41"><name pos:start="57:30" pos:end="57:35">dma_as</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:41">root</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">0</literal></expr></argument>, <argument pos:start="57:47" pos:end="57:78"><expr pos:start="57:47" pos:end="57:78"><call pos:start="57:47" pos:end="57:78"><name pos:start="57:47" pos:end="57:64">memory_region_size</name><argument_list pos:start="57:65" pos:end="57:78">(<argument pos:start="57:66" pos:end="57:77"><expr pos:start="57:66" pos:end="57:77"><name pos:start="57:66" pos:end="57:77"><name pos:start="57:66" pos:end="57:71">dma_as</name><operator pos:start="57:72" pos:end="57:73">-&gt;</operator><name pos:start="57:74" pos:end="57:77">root</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:73"><expr pos:start="59:5" pos:end="59:72"><call pos:start="59:5" pos:end="59:72"><name pos:start="59:5" pos:end="59:29">memory_region_set_enabled</name><argument_list pos:start="59:30" pos:end="59:72">(<argument pos:start="59:31" pos:end="59:64"><expr pos:start="59:31" pos:end="59:64"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:64"><name pos:start="59:32" pos:end="59:38">pci_dev</name><operator pos:start="59:39" pos:end="59:40">-&gt;</operator><name pos:start="59:41" pos:end="59:64">bus_master_enable_region</name></name></expr></argument>, <argument pos:start="59:67" pos:end="59:71"><expr pos:start="59:67" pos:end="59:71"><name pos:start="59:67" pos:end="59:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="63:29"><expr pos:start="61:5" pos:end="63:28"><call pos:start="61:5" pos:end="63:28"><name pos:start="61:5" pos:end="61:22">address_space_init</name><argument_list pos:start="61:23" pos:end="63:28">(<argument pos:start="61:24" pos:end="61:46"><expr pos:start="61:24" pos:end="61:46"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:31">pci_dev</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:46">bus_master_as</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:82"><expr pos:start="61:49" pos:end="61:82"><operator pos:start="61:49" pos:end="61:49">&amp;</operator><name pos:start="61:50" pos:end="61:82"><name pos:start="61:50" pos:end="61:56">pci_dev</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:82">bus_master_enable_region</name></name></expr></argument>,

                       <argument pos:start="63:24" pos:end="63:27"><expr pos:start="63:24" pos:end="63:27"><name pos:start="63:24" pos:end="63:27">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:27"><expr pos:start="67:5" pos:end="67:26"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:11">pci_dev</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">devfn</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:26">devfn</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:56"><expr pos:start="69:5" pos:end="69:55"><call pos:start="69:5" pos:end="69:55"><name pos:start="69:5" pos:end="69:11">pstrcpy</name><argument_list pos:start="69:12" pos:end="69:55">(<argument pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:19">pci_dev</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:25">name</name></name></expr></argument>, <argument pos:start="69:28" pos:end="69:48"><expr pos:start="69:28" pos:end="69:48"><sizeof pos:start="69:28" pos:end="69:48">sizeof<argument_list pos:start="69:34" pos:end="69:48">(<argument pos:start="69:35" pos:end="69:47"><expr pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:41">pci_dev</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:47">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="69:51" pos:end="69:54"><expr pos:start="69:51" pos:end="69:54"><name pos:start="69:51" pos:end="69:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:22"><name pos:start="71:5" pos:end="71:11">pci_dev</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:22">irq_state</name></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <literal type="number" pos:start="71:26" pos:end="71:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:30"><expr pos:start="73:5" pos:end="73:29"><call pos:start="73:5" pos:end="73:29"><name pos:start="73:5" pos:end="73:20">pci_config_alloc</name><argument_list pos:start="73:21" pos:end="73:29">(<argument pos:start="73:22" pos:end="73:28"><expr pos:start="73:22" pos:end="73:28"><name pos:start="73:22" pos:end="73:28">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:61"><expr pos:start="77:5" pos:end="77:60"><call pos:start="77:5" pos:end="77:60"><name pos:start="77:5" pos:end="77:28">pci_config_set_vendor_id</name><argument_list pos:start="77:29" pos:end="77:60">(<argument pos:start="77:30" pos:end="77:44"><expr pos:start="77:30" pos:end="77:44"><name pos:start="77:30" pos:end="77:44"><name pos:start="77:30" pos:end="77:36">pci_dev</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:44">config</name></name></expr></argument>, <argument pos:start="77:47" pos:end="77:59"><expr pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:59"><name pos:start="77:47" pos:end="77:48">pc</name><operator pos:start="77:49" pos:end="77:50">-&gt;</operator><name pos:start="77:51" pos:end="77:59">vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:61"><expr pos:start="79:5" pos:end="79:60"><call pos:start="79:5" pos:end="79:60"><name pos:start="79:5" pos:end="79:28">pci_config_set_device_id</name><argument_list pos:start="79:29" pos:end="79:60">(<argument pos:start="79:30" pos:end="79:44"><expr pos:start="79:30" pos:end="79:44"><name pos:start="79:30" pos:end="79:44"><name pos:start="79:30" pos:end="79:36">pci_dev</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:44">config</name></name></expr></argument>, <argument pos:start="79:47" pos:end="79:59"><expr pos:start="79:47" pos:end="79:59"><name pos:start="79:47" pos:end="79:59"><name pos:start="79:47" pos:end="79:48">pc</name><operator pos:start="79:49" pos:end="79:50">-&gt;</operator><name pos:start="79:51" pos:end="79:59">device_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:59"><expr pos:start="81:5" pos:end="81:58"><call pos:start="81:5" pos:end="81:58"><name pos:start="81:5" pos:end="81:27">pci_config_set_revision</name><argument_list pos:start="81:28" pos:end="81:58">(<argument pos:start="81:29" pos:end="81:43"><expr pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:43"><name pos:start="81:29" pos:end="81:35">pci_dev</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:43">config</name></name></expr></argument>, <argument pos:start="81:46" pos:end="81:57"><expr pos:start="81:46" pos:end="81:57"><name pos:start="81:46" pos:end="81:57"><name pos:start="81:46" pos:end="81:47">pc</name><operator pos:start="81:48" pos:end="81:49">-&gt;</operator><name pos:start="81:50" pos:end="81:57">revision</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:56"><expr pos:start="83:5" pos:end="83:55"><call pos:start="83:5" pos:end="83:55"><name pos:start="83:5" pos:end="83:24">pci_config_set_class</name><argument_list pos:start="83:25" pos:end="83:55">(<argument pos:start="83:26" pos:end="83:40"><expr pos:start="83:26" pos:end="83:40"><name pos:start="83:26" pos:end="83:40"><name pos:start="83:26" pos:end="83:32">pci_dev</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:40">config</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:54"><expr pos:start="83:43" pos:end="83:54"><name pos:start="83:43" pos:end="83:54"><name pos:start="83:43" pos:end="83:44">pc</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:54">class_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="113:5"><if pos:start="87:5" pos:end="105:5">if <condition pos:start="87:8" pos:end="87:23">(<expr pos:start="87:9" pos:end="87:22"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:11">pc</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:22">is_bridge</name></name></expr>)</condition> <block pos:start="87:25" pos:end="105:5">{<block_content pos:start="89:9" pos:end="103:9">

        <if_stmt pos:start="89:9" pos:end="103:9"><if pos:start="89:9" pos:end="99:9">if <condition pos:start="89:12" pos:end="89:56">(<expr pos:start="89:13" pos:end="89:55"><name pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:14">pc</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:35">subsystem_vendor_id</name></name> <operator pos:start="89:37" pos:end="89:38">||</operator> <name pos:start="89:40" pos:end="89:55"><name pos:start="89:40" pos:end="89:41">pc</name><operator pos:start="89:42" pos:end="89:43">-&gt;</operator><name pos:start="89:44" pos:end="89:55">subsystem_id</name></name></expr>)</condition> <block pos:start="89:58" pos:end="99:9">{<block_content pos:start="91:13" pos:end="97:43">

            <expr_stmt pos:start="91:13" pos:end="93:50"><expr pos:start="91:13" pos:end="93:49"><call pos:start="91:13" pos:end="93:49"><name pos:start="91:13" pos:end="91:24">pci_set_word</name><argument_list pos:start="91:25" pos:end="93:49">(<argument pos:start="91:26" pos:end="91:66"><expr pos:start="91:26" pos:end="91:66"><name pos:start="91:26" pos:end="91:40"><name pos:start="91:26" pos:end="91:32">pci_dev</name><operator pos:start="91:33" pos:end="91:34">-&gt;</operator><name pos:start="91:35" pos:end="91:40">config</name></name> <operator pos:start="91:42" pos:end="91:42">+</operator> <name pos:start="91:44" pos:end="91:66">PCI_SUBSYSTEM_VENDOR_ID</name></expr></argument>,

                         <argument pos:start="93:26" pos:end="93:48"><expr pos:start="93:26" pos:end="93:48"><name pos:start="93:26" pos:end="93:48"><name pos:start="93:26" pos:end="93:27">pc</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:48">subsystem_vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="97:43"><expr pos:start="95:13" pos:end="97:42"><call pos:start="95:13" pos:end="97:42"><name pos:start="95:13" pos:end="95:24">pci_set_word</name><argument_list pos:start="95:25" pos:end="97:42">(<argument pos:start="95:26" pos:end="95:59"><expr pos:start="95:26" pos:end="95:59"><name pos:start="95:26" pos:end="95:40"><name pos:start="95:26" pos:end="95:32">pci_dev</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:40">config</name></name> <operator pos:start="95:42" pos:end="95:42">+</operator> <name pos:start="95:44" pos:end="95:59">PCI_SUBSYSTEM_ID</name></expr></argument>,

                         <argument pos:start="97:26" pos:end="97:41"><expr pos:start="97:26" pos:end="97:41"><name pos:start="97:26" pos:end="97:41"><name pos:start="97:26" pos:end="97:27">pc</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:41">subsystem_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="99:11" pos:end="103:9">else <block pos:start="99:16" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:50">

            <expr_stmt pos:start="101:13" pos:end="101:50"><expr pos:start="101:13" pos:end="101:49"><call pos:start="101:13" pos:end="101:49"><name pos:start="101:13" pos:end="101:40">pci_set_default_subsystem_id</name><argument_list pos:start="101:41" pos:end="101:49">(<argument pos:start="101:42" pos:end="101:48"><expr pos:start="101:42" pos:end="101:48"><name pos:start="101:42" pos:end="101:48">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="105:7" pos:end="113:5">else <block pos:start="105:12" pos:end="113:5">{<block_content pos:start="109:9" pos:end="111:34">

        <comment type="block" pos:start="107:9" pos:end="107:73">/* subsystem_vendor_id/subsystem_id are only for header type 0 */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:41"><expr pos:start="109:9" pos:end="109:40"><call pos:start="109:9" pos:end="109:40"><name pos:start="109:9" pos:end="109:14">assert</name><argument_list pos:start="109:15" pos:end="109:40">(<argument pos:start="109:16" pos:end="109:39"><expr pos:start="109:16" pos:end="109:39"><operator pos:start="109:16" pos:end="109:16">!</operator><name pos:start="109:17" pos:end="109:39"><name pos:start="109:17" pos:end="109:18">pc</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:39">subsystem_vendor_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:34"><expr pos:start="111:9" pos:end="111:33"><call pos:start="111:9" pos:end="111:33"><name pos:start="111:9" pos:end="111:14">assert</name><argument_list pos:start="111:15" pos:end="111:33">(<argument pos:start="111:16" pos:end="111:32"><expr pos:start="111:16" pos:end="111:32"><operator pos:start="111:16" pos:end="111:16">!</operator><name pos:start="111:17" pos:end="111:32"><name pos:start="111:17" pos:end="111:18">pc</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:32">subsystem_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:28"><expr pos:start="115:5" pos:end="115:27"><call pos:start="115:5" pos:end="115:27"><name pos:start="115:5" pos:end="115:18">pci_init_cmask</name><argument_list pos:start="115:19" pos:end="115:27">(<argument pos:start="115:20" pos:end="115:26"><expr pos:start="115:20" pos:end="115:26"><name pos:start="115:20" pos:end="115:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:28"><expr pos:start="117:5" pos:end="117:27"><call pos:start="117:5" pos:end="117:27"><name pos:start="117:5" pos:end="117:18">pci_init_wmask</name><argument_list pos:start="117:19" pos:end="117:27">(<argument pos:start="117:20" pos:end="117:26"><expr pos:start="117:20" pos:end="117:26"><name pos:start="117:20" pos:end="117:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:30"><expr pos:start="119:5" pos:end="119:29"><call pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:20">pci_init_w1cmask</name><argument_list pos:start="119:21" pos:end="119:29">(<argument pos:start="119:22" pos:end="119:28"><expr pos:start="119:22" pos:end="119:28"><name pos:start="119:22" pos:end="119:28">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="125:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:22">(<expr pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:21"><name pos:start="121:9" pos:end="121:10">pc</name><operator pos:start="121:11" pos:end="121:12">-&gt;</operator><name pos:start="121:13" pos:end="121:21">is_bridge</name></name></expr>)</condition> <block pos:start="121:24" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:38">

        <expr_stmt pos:start="123:9" pos:end="123:38"><expr pos:start="123:9" pos:end="123:37"><call pos:start="123:9" pos:end="123:37"><name pos:start="123:9" pos:end="123:28">pci_init_mask_bridge</name><argument_list pos:start="123:29" pos:end="123:37">(<argument pos:start="123:30" pos:end="123:36"><expr pos:start="123:30" pos:end="123:36"><name pos:start="123:30" pos:end="123:36">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:45">(<expr pos:start="127:9" pos:end="127:44"><call pos:start="127:9" pos:end="127:44"><name pos:start="127:9" pos:end="127:30">pci_init_multifunction</name><argument_list pos:start="127:31" pos:end="127:44">(<argument pos:start="127:32" pos:end="127:34"><expr pos:start="127:32" pos:end="127:34"><name pos:start="127:32" pos:end="127:34">bus</name></expr></argument>, <argument pos:start="127:37" pos:end="127:43"><expr pos:start="127:37" pos:end="127:43"><name pos:start="127:37" pos:end="127:43">pci_dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:47" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:20">

        <expr_stmt pos:start="129:9" pos:end="129:33"><expr pos:start="129:9" pos:end="129:32"><call pos:start="129:9" pos:end="129:32"><name pos:start="129:9" pos:end="129:23">pci_config_free</name><argument_list pos:start="129:24" pos:end="129:32">(<argument pos:start="129:25" pos:end="129:31"><expr pos:start="129:25" pos:end="129:31"><name pos:start="129:25" pos:end="129:31">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:20">return <expr pos:start="131:16" pos:end="131:19"><name pos:start="131:16" pos:end="131:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="137:5" pos:end="139:46"><if pos:start="137:5" pos:end="139:46">if <condition pos:start="137:8" pos:end="137:21">(<expr pos:start="137:9" pos:end="137:20"><operator pos:start="137:9" pos:end="137:9">!</operator><name pos:start="137:10" pos:end="137:20">config_read</name></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:46"><block_content pos:start="139:9" pos:end="139:46">

        <expr_stmt pos:start="139:9" pos:end="139:46"><expr pos:start="139:9" pos:end="139:45"><name pos:start="139:9" pos:end="139:19">config_read</name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:45">pci_default_read_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="141:5" pos:end="143:48"><if pos:start="141:5" pos:end="143:48">if <condition pos:start="141:8" pos:end="141:22">(<expr pos:start="141:9" pos:end="141:21"><operator pos:start="141:9" pos:end="141:9">!</operator><name pos:start="141:10" pos:end="141:21">config_write</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:48"><block_content pos:start="143:9" pos:end="143:48">

        <expr_stmt pos:start="143:9" pos:end="143:48"><expr pos:start="143:9" pos:end="143:47"><name pos:start="143:9" pos:end="143:20">config_write</name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:47">pci_default_write_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:39"><expr pos:start="145:5" pos:end="145:38"><name pos:start="145:5" pos:end="145:24"><name pos:start="145:5" pos:end="145:11">pci_dev</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:24">config_read</name></name> <operator pos:start="145:26" pos:end="145:26">=</operator> <name pos:start="145:28" pos:end="145:38">config_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:41"><expr pos:start="147:5" pos:end="147:40"><name pos:start="147:5" pos:end="147:25"><name pos:start="147:5" pos:end="147:11">pci_dev</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:25">config_write</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:40">config_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:34"><expr pos:start="149:5" pos:end="149:33"><name pos:start="149:5" pos:end="149:23"><name pos:start="149:5" pos:end="149:7">bus</name><operator pos:start="149:8" pos:end="149:9">-&gt;</operator><name pos:start="149:10" pos:end="149:16">devices</name><index pos:start="149:17" pos:end="149:23">[<expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:22">devfn</name></expr>]</index></name> <operator pos:start="149:25" pos:end="149:25">=</operator> <name pos:start="149:27" pos:end="149:33">pci_dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:23"><name pos:start="151:5" pos:end="151:11">pci_dev</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:23">version_id</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <literal type="number" pos:start="151:27" pos:end="151:27">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="151:30" pos:end="151:69">/* Current pci device vmstate version */</comment>

    <return pos:start="153:5" pos:end="153:19">return <expr pos:start="153:12" pos:end="153:18"><name pos:start="153:12" pos:end="153:18">pci_dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
