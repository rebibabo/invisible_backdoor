<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22953.c" pos:tabs="8"><function pos:start="1:1" pos:end="240:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">ff_pnm_decode_header</name><parameter_list pos:start="1:25" pos:end="1:69">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:68"><decl pos:start="1:49" pos:end="1:68"><type pos:start="1:49" pos:end="1:68"><name pos:start="1:49" pos:end="1:58">PNMContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier> <specifier pos:start="1:62" pos:end="1:66">const</specifier></type> <name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="240:1">{<block_content pos:start="5:5" pos:end="238:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:17"><name pos:start="5:10" pos:end="5:13">buf1</name><index pos:start="5:14" pos:end="5:17">[<expr pos:start="5:15" pos:end="5:16"><literal type="number" pos:start="5:15" pos:end="5:16">32</literal></expr>]</index></name></decl>, <decl pos:start="5:20" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:20" pos:end="5:33"><name pos:start="5:20" pos:end="5:29">tuple_type</name><index pos:start="5:30" pos:end="5:33">[<expr pos:start="5:31" pos:end="5:32"><literal type="number" pos:start="5:31" pos:end="5:32">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">h</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">w</name></decl>, <decl pos:start="7:15" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">depth</name></decl>, <decl pos:start="7:22" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:27">maxval</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:35"><expr pos:start="11:5" pos:end="11:34"><call pos:start="11:5" pos:end="11:34"><name pos:start="11:5" pos:end="11:11">pnm_get</name><argument_list pos:start="11:12" pos:end="11:34">(<argument pos:start="11:13" pos:end="11:13"><expr pos:start="11:13" pos:end="11:13"><name pos:start="11:13" pos:end="11:13">s</name></expr></argument>, <argument pos:start="11:16" pos:end="11:19"><expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">buf1</name></expr></argument>, <argument pos:start="11:22" pos:end="11:33"><expr pos:start="11:22" pos:end="11:33"><sizeof pos:start="11:22" pos:end="11:33">sizeof<argument_list pos:start="11:28" pos:end="11:33">(<argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:11">type</name></name><operator pos:start="13:12" pos:end="13:12">=</operator> <name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:17">buf1</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">1</literal></expr>]</index></name><operator pos:start="13:21" pos:end="13:21">-</operator><literal type="char" pos:start="13:22" pos:end="13:24">'0'</literal></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if<condition pos:start="15:7" pos:end="15:22">(<expr pos:start="15:8" pos:end="15:21"><name pos:start="15:8" pos:end="15:14"><name pos:start="15:8" pos:end="15:11">buf1</name><index pos:start="15:12" pos:end="15:14">[<expr pos:start="15:13" pos:end="15:13"><literal type="number" pos:start="15:13" pos:end="15:13">0</literal></expr>]</index></name> <operator pos:start="15:16" pos:end="15:17">!=</operator> <literal type="char" pos:start="15:19" pos:end="15:21">'P'</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="154:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">type</name></name><operator pos:start="21:16" pos:end="21:17">==</operator><literal type="number" pos:start="21:18" pos:end="21:18">1</literal> <operator pos:start="21:20" pos:end="21:21">||</operator> <name pos:start="21:23" pos:end="21:29"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:29">type</name></name><operator pos:start="21:30" pos:end="21:31">==</operator><literal type="number" pos:start="21:32" pos:end="21:32">4</literal></expr>)</condition> <block pos:start="21:35" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:43">

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">pix_fmt</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:42">PIX_FMT_MONOWHITE</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="35:5">else if <condition pos:start="25:15" pos:end="25:40">(<expr pos:start="25:16" pos:end="25:39"><name pos:start="25:16" pos:end="25:22"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:22">type</name></name><operator pos:start="25:23" pos:end="25:24">==</operator><literal type="number" pos:start="25:25" pos:end="25:25">2</literal> <operator pos:start="25:27" pos:end="25:28">||</operator> <name pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:30">s</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:36">type</name></name><operator pos:start="25:37" pos:end="25:38">==</operator><literal type="number" pos:start="25:39" pos:end="25:39">5</literal></expr>)</condition> <block pos:start="25:42" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:43">

        <if_stmt pos:start="27:9" pos:end="33:43"><if pos:start="27:9" pos:end="29:45">if <condition pos:start="27:12" pos:end="27:47">(<expr pos:start="27:13" pos:end="27:46"><name pos:start="27:13" pos:end="27:27"><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">codec_id</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <name pos:start="27:32" pos:end="27:46">CODEC_ID_PGMYUV</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:45"><block_content pos:start="29:13" pos:end="29:45">

            <expr_stmt pos:start="29:13" pos:end="29:45"><expr pos:start="29:13" pos:end="29:44"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:17">avctx</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:26">pix_fmt</name></name> <operator pos:start="29:28" pos:end="29:28">=</operator> <name pos:start="29:30" pos:end="29:44">PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="31:9" pos:end="33:43">else<block type="pseudo" pos:start="33:13" pos:end="33:43"><block_content pos:start="33:13" pos:end="33:43">

            <expr_stmt pos:start="33:13" pos:end="33:43"><expr pos:start="33:13" pos:end="33:42"><name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:17">avctx</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:26">pix_fmt</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <name pos:start="33:30" pos:end="33:42">PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="35:7" pos:end="39:5">else if <condition pos:start="35:15" pos:end="35:40">(<expr pos:start="35:16" pos:end="35:39"><name pos:start="35:16" pos:end="35:22"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:22">type</name></name><operator pos:start="35:23" pos:end="35:24">==</operator><literal type="number" pos:start="35:25" pos:end="35:25">3</literal> <operator pos:start="35:27" pos:end="35:28">||</operator> <name pos:start="35:30" pos:end="35:36"><name pos:start="35:30" pos:end="35:30">s</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:36">type</name></name><operator pos:start="35:37" pos:end="35:38">==</operator><literal type="number" pos:start="35:39" pos:end="35:39">6</literal></expr>)</condition> <block pos:start="35:42" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:39">

        <expr_stmt pos:start="37:9" pos:end="37:39"><expr pos:start="37:9" pos:end="37:38"><name pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:13">avctx</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:22">pix_fmt</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <name pos:start="37:26" pos:end="37:38">PIX_FMT_RGB24</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="150:5">else if <condition pos:start="39:15" pos:end="39:26">(<expr pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:22"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:22">type</name></name><operator pos:start="39:23" pos:end="39:24">==</operator><literal type="number" pos:start="39:25" pos:end="39:25">7</literal></expr>)</condition> <block pos:start="39:28" pos:end="150:5">{<block_content pos:start="41:9" pos:end="148:17">

        <expr_stmt pos:start="41:9" pos:end="41:20"><expr pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">w</name>      <operator pos:start="41:16" pos:end="41:16">=</operator> <operator pos:start="41:18" pos:end="41:18">-</operator><literal type="number" pos:start="41:19" pos:end="41:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:20"><expr pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">h</name>      <operator pos:start="43:16" pos:end="43:16">=</operator> <operator pos:start="43:18" pos:end="43:18">-</operator><literal type="number" pos:start="43:19" pos:end="43:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:14">maxval</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <operator pos:start="45:18" pos:end="45:18">-</operator><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:20"><expr pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:13">depth</name>  <operator pos:start="47:16" pos:end="47:16">=</operator> <operator pos:start="47:18" pos:end="47:18">-</operator><literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:18">tuple_type</name><index pos:start="49:19" pos:end="49:21">[<expr pos:start="49:20" pos:end="49:20"><literal type="number" pos:start="49:20" pos:end="49:20">0</literal></expr>]</index></name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="char" pos:start="49:25" pos:end="49:28">'\0'</literal></expr>;</expr_stmt>

        <for pos:start="51:9" pos:end="97:9">for <control pos:start="51:13" pos:end="51:16">(<init pos:start="51:14" pos:end="51:14">;</init><condition pos:start="51:15" pos:end="51:15">;</condition><incr/>)</control> <block pos:start="51:18" pos:end="97:9">{<block_content pos:start="53:13" pos:end="95:13">

            <expr_stmt pos:start="53:13" pos:end="53:43"><expr pos:start="53:13" pos:end="53:42"><call pos:start="53:13" pos:end="53:42"><name pos:start="53:13" pos:end="53:19">pnm_get</name><argument_list pos:start="53:20" pos:end="53:42">(<argument pos:start="53:21" pos:end="53:21"><expr pos:start="53:21" pos:end="53:21"><name pos:start="53:21" pos:end="53:21">s</name></expr></argument>, <argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">buf1</name></expr></argument>, <argument pos:start="53:30" pos:end="53:41"><expr pos:start="53:30" pos:end="53:41"><sizeof pos:start="53:30" pos:end="53:41">sizeof<argument_list pos:start="53:36" pos:end="53:41">(<argument pos:start="53:37" pos:end="53:40"><expr pos:start="53:37" pos:end="53:40"><name pos:start="53:37" pos:end="53:40">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="55:13" pos:end="95:13"><if pos:start="55:13" pos:end="61:13">if <condition pos:start="55:16" pos:end="55:39">(<expr pos:start="55:17" pos:end="55:38"><operator pos:start="55:17" pos:end="55:17">!</operator><call pos:start="55:18" pos:end="55:38"><name pos:start="55:18" pos:end="55:23">strcmp</name><argument_list pos:start="55:24" pos:end="55:38">(<argument pos:start="55:25" pos:end="55:28"><expr pos:start="55:25" pos:end="55:28"><name pos:start="55:25" pos:end="55:28">buf1</name></expr></argument>, <argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><literal type="string" pos:start="55:31" pos:end="55:37">"WIDTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:41" pos:end="61:13">{<block_content pos:start="57:17" pos:end="59:43">

                <expr_stmt pos:start="57:17" pos:end="57:47"><expr pos:start="57:17" pos:end="57:46"><call pos:start="57:17" pos:end="57:46"><name pos:start="57:17" pos:end="57:23">pnm_get</name><argument_list pos:start="57:24" pos:end="57:46">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">s</name></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">buf1</name></expr></argument>, <argument pos:start="57:34" pos:end="57:45"><expr pos:start="57:34" pos:end="57:45"><sizeof pos:start="57:34" pos:end="57:45">sizeof<argument_list pos:start="57:40" pos:end="57:45">(<argument pos:start="57:41" pos:end="57:44"><expr pos:start="57:41" pos:end="57:44"><name pos:start="57:41" pos:end="57:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:43"><expr pos:start="59:17" pos:end="59:42"><name pos:start="59:17" pos:end="59:17">w</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <call pos:start="59:21" pos:end="59:42"><name pos:start="59:21" pos:end="59:26">strtol</name><argument_list pos:start="59:27" pos:end="59:42">(<argument pos:start="59:28" pos:end="59:31"><expr pos:start="59:28" pos:end="59:31"><name pos:start="59:28" pos:end="59:31">buf1</name></expr></argument>, <argument pos:start="59:34" pos:end="59:37"><expr pos:start="59:34" pos:end="59:37"><name pos:start="59:34" pos:end="59:37">NULL</name></expr></argument>, <argument pos:start="59:40" pos:end="59:41"><expr pos:start="59:40" pos:end="59:41"><literal type="number" pos:start="59:40" pos:end="59:41">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="61:15" pos:end="67:13">else if <condition pos:start="61:23" pos:end="61:47">(<expr pos:start="61:24" pos:end="61:46"><operator pos:start="61:24" pos:end="61:24">!</operator><call pos:start="61:25" pos:end="61:46"><name pos:start="61:25" pos:end="61:30">strcmp</name><argument_list pos:start="61:31" pos:end="61:46">(<argument pos:start="61:32" pos:end="61:35"><expr pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:35">buf1</name></expr></argument>, <argument pos:start="61:38" pos:end="61:45"><expr pos:start="61:38" pos:end="61:45"><literal type="string" pos:start="61:38" pos:end="61:45">"HEIGHT"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:49" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:43">

                <expr_stmt pos:start="63:17" pos:end="63:47"><expr pos:start="63:17" pos:end="63:46"><call pos:start="63:17" pos:end="63:46"><name pos:start="63:17" pos:end="63:23">pnm_get</name><argument_list pos:start="63:24" pos:end="63:46">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>, <argument pos:start="63:28" pos:end="63:31"><expr pos:start="63:28" pos:end="63:31"><name pos:start="63:28" pos:end="63:31">buf1</name></expr></argument>, <argument pos:start="63:34" pos:end="63:45"><expr pos:start="63:34" pos:end="63:45"><sizeof pos:start="63:34" pos:end="63:45">sizeof<argument_list pos:start="63:40" pos:end="63:45">(<argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:43"><expr pos:start="65:17" pos:end="65:42"><name pos:start="65:17" pos:end="65:17">h</name> <operator pos:start="65:19" pos:end="65:19">=</operator> <call pos:start="65:21" pos:end="65:42"><name pos:start="65:21" pos:end="65:26">strtol</name><argument_list pos:start="65:27" pos:end="65:42">(<argument pos:start="65:28" pos:end="65:31"><expr pos:start="65:28" pos:end="65:31"><name pos:start="65:28" pos:end="65:31">buf1</name></expr></argument>, <argument pos:start="65:34" pos:end="65:37"><expr pos:start="65:34" pos:end="65:37"><name pos:start="65:34" pos:end="65:37">NULL</name></expr></argument>, <argument pos:start="65:40" pos:end="65:41"><expr pos:start="65:40" pos:end="65:41"><literal type="number" pos:start="65:40" pos:end="65:41">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="67:15" pos:end="73:13">else if <condition pos:start="67:23" pos:end="67:46">(<expr pos:start="67:24" pos:end="67:45"><operator pos:start="67:24" pos:end="67:24">!</operator><call pos:start="67:25" pos:end="67:45"><name pos:start="67:25" pos:end="67:30">strcmp</name><argument_list pos:start="67:31" pos:end="67:45">(<argument pos:start="67:32" pos:end="67:35"><expr pos:start="67:32" pos:end="67:35"><name pos:start="67:32" pos:end="67:35">buf1</name></expr></argument>, <argument pos:start="67:38" pos:end="67:44"><expr pos:start="67:38" pos:end="67:44"><literal type="string" pos:start="67:38" pos:end="67:44">"DEPTH"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:48" pos:end="73:13">{<block_content pos:start="69:17" pos:end="71:47">

                <expr_stmt pos:start="69:17" pos:end="69:47"><expr pos:start="69:17" pos:end="69:46"><call pos:start="69:17" pos:end="69:46"><name pos:start="69:17" pos:end="69:23">pnm_get</name><argument_list pos:start="69:24" pos:end="69:46">(<argument pos:start="69:25" pos:end="69:25"><expr pos:start="69:25" pos:end="69:25"><name pos:start="69:25" pos:end="69:25">s</name></expr></argument>, <argument pos:start="69:28" pos:end="69:31"><expr pos:start="69:28" pos:end="69:31"><name pos:start="69:28" pos:end="69:31">buf1</name></expr></argument>, <argument pos:start="69:34" pos:end="69:45"><expr pos:start="69:34" pos:end="69:45"><sizeof pos:start="69:34" pos:end="69:45">sizeof<argument_list pos:start="69:40" pos:end="69:45">(<argument pos:start="69:41" pos:end="69:44"><expr pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:47"><expr pos:start="71:17" pos:end="71:46"><name pos:start="71:17" pos:end="71:21">depth</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:46"><name pos:start="71:25" pos:end="71:30">strtol</name><argument_list pos:start="71:31" pos:end="71:46">(<argument pos:start="71:32" pos:end="71:35"><expr pos:start="71:32" pos:end="71:35"><name pos:start="71:32" pos:end="71:35">buf1</name></expr></argument>, <argument pos:start="71:38" pos:end="71:41"><expr pos:start="71:38" pos:end="71:41"><name pos:start="71:38" pos:end="71:41">NULL</name></expr></argument>, <argument pos:start="71:44" pos:end="71:45"><expr pos:start="71:44" pos:end="71:45"><literal type="number" pos:start="71:44" pos:end="71:45">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="73:15" pos:end="79:13">else if <condition pos:start="73:23" pos:end="73:47">(<expr pos:start="73:24" pos:end="73:46"><operator pos:start="73:24" pos:end="73:24">!</operator><call pos:start="73:25" pos:end="73:46"><name pos:start="73:25" pos:end="73:30">strcmp</name><argument_list pos:start="73:31" pos:end="73:46">(<argument pos:start="73:32" pos:end="73:35"><expr pos:start="73:32" pos:end="73:35"><name pos:start="73:32" pos:end="73:35">buf1</name></expr></argument>, <argument pos:start="73:38" pos:end="73:45"><expr pos:start="73:38" pos:end="73:45"><literal type="string" pos:start="73:38" pos:end="73:45">"MAXVAL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:49" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:48">

                <expr_stmt pos:start="75:17" pos:end="75:47"><expr pos:start="75:17" pos:end="75:46"><call pos:start="75:17" pos:end="75:46"><name pos:start="75:17" pos:end="75:23">pnm_get</name><argument_list pos:start="75:24" pos:end="75:46">(<argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">s</name></expr></argument>, <argument pos:start="75:28" pos:end="75:31"><expr pos:start="75:28" pos:end="75:31"><name pos:start="75:28" pos:end="75:31">buf1</name></expr></argument>, <argument pos:start="75:34" pos:end="75:45"><expr pos:start="75:34" pos:end="75:45"><sizeof pos:start="75:34" pos:end="75:45">sizeof<argument_list pos:start="75:40" pos:end="75:45">(<argument pos:start="75:41" pos:end="75:44"><expr pos:start="75:41" pos:end="75:44"><name pos:start="75:41" pos:end="75:44">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:48"><expr pos:start="77:17" pos:end="77:47"><name pos:start="77:17" pos:end="77:22">maxval</name> <operator pos:start="77:24" pos:end="77:24">=</operator> <call pos:start="77:26" pos:end="77:47"><name pos:start="77:26" pos:end="77:31">strtol</name><argument_list pos:start="77:32" pos:end="77:47">(<argument pos:start="77:33" pos:end="77:36"><expr pos:start="77:33" pos:end="77:36"><name pos:start="77:33" pos:end="77:36">buf1</name></expr></argument>, <argument pos:start="77:39" pos:end="77:42"><expr pos:start="77:39" pos:end="77:42"><name pos:start="77:39" pos:end="77:42">NULL</name></expr></argument>, <argument pos:start="77:45" pos:end="77:46"><expr pos:start="77:45" pos:end="77:46"><literal type="number" pos:start="77:45" pos:end="77:46">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="79:15" pos:end="87:13">else if <condition pos:start="79:23" pos:end="83:50">(<expr pos:start="79:24" pos:end="83:49"><operator pos:start="79:24" pos:end="79:24">!</operator><call pos:start="79:25" pos:end="79:48"><name pos:start="79:25" pos:end="79:30">strcmp</name><argument_list pos:start="79:31" pos:end="79:48">(<argument pos:start="79:32" pos:end="79:35"><expr pos:start="79:32" pos:end="79:35"><name pos:start="79:32" pos:end="79:35">buf1</name></expr></argument>, <argument pos:start="79:38" pos:end="79:47"><expr pos:start="79:38" pos:end="79:47"><literal type="string" pos:start="79:38" pos:end="79:47">"TUPLTYPE"</literal></expr></argument>)</argument_list></call> <operator pos:start="79:50" pos:end="79:51">||</operator>

            <comment type="line" pos:start="81:13" pos:end="81:49">// FFmpeg used to write invalid files</comment>

                       <operator pos:start="83:24" pos:end="83:24">!</operator><call pos:start="83:25" pos:end="83:49"><name pos:start="83:25" pos:end="83:30">strcmp</name><argument_list pos:start="83:31" pos:end="83:49">(<argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">buf1</name></expr></argument>, <argument pos:start="83:38" pos:end="83:48"><expr pos:start="83:38" pos:end="83:48"><literal type="string" pos:start="83:38" pos:end="83:48">"TUPLETYPE"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:52" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:59">

                <expr_stmt pos:start="85:17" pos:end="85:59"><expr pos:start="85:17" pos:end="85:58"><call pos:start="85:17" pos:end="85:58"><name pos:start="85:17" pos:end="85:23">pnm_get</name><argument_list pos:start="85:24" pos:end="85:58">(<argument pos:start="85:25" pos:end="85:25"><expr pos:start="85:25" pos:end="85:25"><name pos:start="85:25" pos:end="85:25">s</name></expr></argument>, <argument pos:start="85:28" pos:end="85:37"><expr pos:start="85:28" pos:end="85:37"><name pos:start="85:28" pos:end="85:37">tuple_type</name></expr></argument>, <argument pos:start="85:40" pos:end="85:57"><expr pos:start="85:40" pos:end="85:57"><sizeof pos:start="85:40" pos:end="85:57">sizeof<argument_list pos:start="85:46" pos:end="85:57">(<argument pos:start="85:47" pos:end="85:56"><expr pos:start="85:47" pos:end="85:56"><name pos:start="85:47" pos:end="85:56">tuple_type</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="87:15" pos:end="91:13">else if <condition pos:start="87:23" pos:end="87:47">(<expr pos:start="87:24" pos:end="87:46"><operator pos:start="87:24" pos:end="87:24">!</operator><call pos:start="87:25" pos:end="87:46"><name pos:start="87:25" pos:end="87:30">strcmp</name><argument_list pos:start="87:31" pos:end="87:46">(<argument pos:start="87:32" pos:end="87:35"><expr pos:start="87:32" pos:end="87:35"><name pos:start="87:32" pos:end="87:35">buf1</name></expr></argument>, <argument pos:start="87:38" pos:end="87:45"><expr pos:start="87:38" pos:end="87:45"><literal type="string" pos:start="87:38" pos:end="87:45">"ENDHDR"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="87:49" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:22">

                <break pos:start="89:17" pos:end="89:22">break;</break>

            </block_content>}</block></if> <else pos:start="91:15" pos:end="95:13">else <block pos:start="91:20" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:26">

                <return pos:start="93:17" pos:end="93:26">return <expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

        <comment type="block" pos:start="99:9" pos:end="99:45">/* check that all tags are present */</comment>

        <if_stmt pos:start="101:9" pos:end="103:22"><if pos:start="101:9" pos:end="103:22">if <condition pos:start="101:12" pos:end="101:122">(<expr pos:start="101:13" pos:end="101:121"><name pos:start="101:13" pos:end="101:13">w</name> <operator pos:start="101:15" pos:end="101:16">&lt;=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal> <operator pos:start="101:20" pos:end="101:21">||</operator> <name pos:start="101:23" pos:end="101:23">h</name> <operator pos:start="101:25" pos:end="101:26">&lt;=</operator> <literal type="number" pos:start="101:28" pos:end="101:28">0</literal> <operator pos:start="101:30" pos:end="101:31">||</operator> <name pos:start="101:33" pos:end="101:38">maxval</name> <operator pos:start="101:40" pos:end="101:41">&lt;=</operator> <literal type="number" pos:start="101:43" pos:end="101:43">0</literal> <operator pos:start="101:45" pos:end="101:46">||</operator> <name pos:start="101:48" pos:end="101:52">depth</name> <operator pos:start="101:54" pos:end="101:55">&lt;=</operator> <literal type="number" pos:start="101:57" pos:end="101:57">0</literal> <operator pos:start="101:59" pos:end="101:60">||</operator> <name pos:start="101:62" pos:end="101:74"><name pos:start="101:62" pos:end="101:71">tuple_type</name><index pos:start="101:72" pos:end="101:74">[<expr pos:start="101:73" pos:end="101:73"><literal type="number" pos:start="101:73" pos:end="101:73">0</literal></expr>]</index></name> <operator pos:start="101:76" pos:end="101:77">==</operator> <literal type="char" pos:start="101:79" pos:end="101:82">'\0'</literal> <operator pos:start="101:84" pos:end="101:85">||</operator> <call pos:start="101:87" pos:end="101:121"><name pos:start="101:87" pos:end="101:105">av_image_check_size</name><argument_list pos:start="101:106" pos:end="101:121">(<argument pos:start="101:107" pos:end="101:107"><expr pos:start="101:107" pos:end="101:107"><name pos:start="101:107" pos:end="101:107">w</name></expr></argument>, <argument pos:start="101:110" pos:end="101:110"><expr pos:start="101:110" pos:end="101:110"><name pos:start="101:110" pos:end="101:110">h</name></expr></argument>, <argument pos:start="101:113" pos:end="101:113"><expr pos:start="101:113" pos:end="101:113"><literal type="number" pos:start="101:113" pos:end="101:113">0</literal></expr></argument>, <argument pos:start="101:116" pos:end="101:120"><expr pos:start="101:116" pos:end="101:120"><name pos:start="101:116" pos:end="101:120">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:22"><block_content pos:start="103:13" pos:end="103:22">

            <return pos:start="103:13" pos:end="103:22">return <expr pos:start="103:20" pos:end="103:21"><operator pos:start="103:20" pos:end="103:20">-</operator><literal type="number" pos:start="103:21" pos:end="103:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:26"><expr pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:13">avctx</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:20">width</name></name>  <operator pos:start="107:23" pos:end="107:23">=</operator> <name pos:start="107:25" pos:end="107:25">w</name></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:13">avctx</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:21">height</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:25">h</name></expr>;</expr_stmt>


        <if_stmt pos:start="112:9" pos:end="146:9"><if pos:start="112:9" pos:end="122:9">if <condition pos:start="112:12" pos:end="112:23">(<expr pos:start="112:13" pos:end="112:22"><name pos:start="112:13" pos:end="112:17">depth</name> <operator pos:start="112:19" pos:end="112:20">==</operator> <literal type="number" pos:start="112:22" pos:end="112:22">1</literal></expr>)</condition> <block pos:start="112:25" pos:end="122:9">{<block_content pos:start="114:13" pos:end="120:47">

            <if_stmt pos:start="114:13" pos:end="120:47"><if pos:start="114:13" pos:end="116:51">if <condition pos:start="114:16" pos:end="114:28">(<expr pos:start="114:17" pos:end="114:27"><name pos:start="114:17" pos:end="114:22">maxval</name> <operator pos:start="114:24" pos:end="114:25">==</operator> <literal type="number" pos:start="114:27" pos:end="114:27">1</literal></expr>)</condition><block type="pseudo" pos:start="116:17" pos:end="116:51"><block_content pos:start="116:17" pos:end="116:51">

                <expr_stmt pos:start="116:17" pos:end="116:51"><expr pos:start="116:17" pos:end="116:50"><name pos:start="116:17" pos:end="116:30"><name pos:start="116:17" pos:end="116:21">avctx</name><operator pos:start="116:22" pos:end="116:23">-&gt;</operator><name pos:start="116:24" pos:end="116:30">pix_fmt</name></name> <operator pos:start="116:32" pos:end="116:32">=</operator> <name pos:start="116:34" pos:end="116:50">PIX_FMT_MONOWHITE</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="118:13" pos:end="120:47">else<block type="pseudo" pos:start="120:17" pos:end="120:47"><block_content pos:start="120:17" pos:end="120:47">

                <expr_stmt pos:start="120:17" pos:end="120:47"><expr pos:start="120:17" pos:end="120:46"><name pos:start="120:17" pos:end="120:30"><name pos:start="120:17" pos:end="120:21">avctx</name><operator pos:start="120:22" pos:end="120:23">-&gt;</operator><name pos:start="120:24" pos:end="120:30">pix_fmt</name></name> <operator pos:start="120:32" pos:end="120:32">=</operator> <name pos:start="120:34" pos:end="120:46">PIX_FMT_GRAY8</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="122:11" pos:end="138:9">else if <condition pos:start="122:19" pos:end="122:30">(<expr pos:start="122:20" pos:end="122:29"><name pos:start="122:20" pos:end="122:24">depth</name> <operator pos:start="122:26" pos:end="122:27">==</operator> <literal type="number" pos:start="122:29" pos:end="122:29">3</literal></expr>)</condition> <block pos:start="122:32" pos:end="138:9">{<block_content pos:start="124:13" pos:end="136:13">

            <if_stmt pos:start="124:13" pos:end="136:13"><if pos:start="124:13" pos:end="128:13">if <condition pos:start="124:16" pos:end="124:29">(<expr pos:start="124:17" pos:end="124:28"><name pos:start="124:17" pos:end="124:22">maxval</name> <operator pos:start="124:24" pos:end="124:24">&lt;</operator> <literal type="number" pos:start="124:26" pos:end="124:28">256</literal></expr>)</condition> <block pos:start="124:31" pos:end="128:13">{<block_content pos:start="126:13" pos:end="126:43">

            <expr_stmt pos:start="126:13" pos:end="126:43"><expr pos:start="126:13" pos:end="126:42"><name pos:start="126:13" pos:end="126:26"><name pos:start="126:13" pos:end="126:17">avctx</name><operator pos:start="126:18" pos:end="126:19">-&gt;</operator><name pos:start="126:20" pos:end="126:26">pix_fmt</name></name> <operator pos:start="126:28" pos:end="126:28">=</operator> <name pos:start="126:30" pos:end="126:42">PIX_FMT_RGB24</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="128:15" pos:end="136:13">else <block pos:start="128:20" pos:end="136:13">{<block_content pos:start="130:17" pos:end="134:26">

                <expr_stmt pos:start="130:17" pos:end="130:100"><expr pos:start="130:17" pos:end="130:99"><call pos:start="130:17" pos:end="130:99"><name pos:start="130:17" pos:end="130:22">av_log</name><argument_list pos:start="130:23" pos:end="130:99">(<argument pos:start="130:24" pos:end="130:28"><expr pos:start="130:24" pos:end="130:28"><name pos:start="130:24" pos:end="130:28">avctx</name></expr></argument>, <argument pos:start="130:31" pos:end="130:42"><expr pos:start="130:31" pos:end="130:42"><name pos:start="130:31" pos:end="130:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="130:45" pos:end="130:98"><expr pos:start="130:45" pos:end="130:98"><literal type="string" pos:start="130:45" pos:end="130:98">"16-bit components are only supported for grayscale\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="132:17" pos:end="132:46"><expr pos:start="132:17" pos:end="132:45"><name pos:start="132:17" pos:end="132:30"><name pos:start="132:17" pos:end="132:21">avctx</name><operator pos:start="132:22" pos:end="132:23">-&gt;</operator><name pos:start="132:24" pos:end="132:30">pix_fmt</name></name> <operator pos:start="132:32" pos:end="132:32">=</operator> <name pos:start="132:34" pos:end="132:45">PIX_FMT_NONE</name></expr>;</expr_stmt>

                <return pos:start="134:17" pos:end="134:26">return <expr pos:start="134:24" pos:end="134:25"><operator pos:start="134:24" pos:end="134:24">-</operator><literal type="number" pos:start="134:25" pos:end="134:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="138:11" pos:end="142:9">else if <condition pos:start="138:19" pos:end="138:30">(<expr pos:start="138:20" pos:end="138:29"><name pos:start="138:20" pos:end="138:24">depth</name> <operator pos:start="138:26" pos:end="138:27">==</operator> <literal type="number" pos:start="138:29" pos:end="138:29">4</literal></expr>)</condition> <block pos:start="138:32" pos:end="142:9">{<block_content pos:start="140:13" pos:end="140:43">

            <expr_stmt pos:start="140:13" pos:end="140:43"><expr pos:start="140:13" pos:end="140:42"><name pos:start="140:13" pos:end="140:26"><name pos:start="140:13" pos:end="140:17">avctx</name><operator pos:start="140:18" pos:end="140:19">-&gt;</operator><name pos:start="140:20" pos:end="140:26">pix_fmt</name></name> <operator pos:start="140:28" pos:end="140:28">=</operator> <name pos:start="140:30" pos:end="140:42">PIX_FMT_RGB32</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="142:11" pos:end="146:9">else <block pos:start="142:16" pos:end="146:9">{<block_content pos:start="144:13" pos:end="144:22">

            <return pos:start="144:13" pos:end="144:22">return <expr pos:start="144:20" pos:end="144:21"><operator pos:start="144:20" pos:end="144:20">-</operator><literal type="number" pos:start="144:21" pos:end="144:21">1</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

        <return pos:start="148:9" pos:end="148:17">return <expr pos:start="148:16" pos:end="148:16"><literal type="number" pos:start="148:16" pos:end="148:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="150:7" pos:end="154:5">else <block pos:start="150:12" pos:end="154:5">{<block_content pos:start="152:9" pos:end="152:18">

        <return pos:start="152:9" pos:end="152:18">return <expr pos:start="152:16" pos:end="152:17"><operator pos:start="152:16" pos:end="152:16">-</operator><literal type="number" pos:start="152:17" pos:end="152:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="156:5" pos:end="156:35"><expr pos:start="156:5" pos:end="156:34"><call pos:start="156:5" pos:end="156:34"><name pos:start="156:5" pos:end="156:11">pnm_get</name><argument_list pos:start="156:12" pos:end="156:34">(<argument pos:start="156:13" pos:end="156:13"><expr pos:start="156:13" pos:end="156:13"><name pos:start="156:13" pos:end="156:13">s</name></expr></argument>, <argument pos:start="156:16" pos:end="156:19"><expr pos:start="156:16" pos:end="156:19"><name pos:start="156:16" pos:end="156:19">buf1</name></expr></argument>, <argument pos:start="156:22" pos:end="156:33"><expr pos:start="156:22" pos:end="156:33"><sizeof pos:start="156:22" pos:end="156:33">sizeof<argument_list pos:start="156:28" pos:end="156:33">(<argument pos:start="156:29" pos:end="156:32"><expr pos:start="156:29" pos:end="156:32"><name pos:start="156:29" pos:end="156:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="158:5" pos:end="158:30"><expr pos:start="158:5" pos:end="158:29"><name pos:start="158:5" pos:end="158:16"><name pos:start="158:5" pos:end="158:9">avctx</name><operator pos:start="158:10" pos:end="158:11">-&gt;</operator><name pos:start="158:12" pos:end="158:16">width</name></name> <operator pos:start="158:18" pos:end="158:18">=</operator> <call pos:start="158:20" pos:end="158:29"><name pos:start="158:20" pos:end="158:23">atoi</name><argument_list pos:start="158:24" pos:end="158:29">(<argument pos:start="158:25" pos:end="158:28"><expr pos:start="158:25" pos:end="158:28"><name pos:start="158:25" pos:end="158:28">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="160:5" pos:end="162:18"><if pos:start="160:5" pos:end="162:18">if <condition pos:start="160:8" pos:end="160:26">(<expr pos:start="160:9" pos:end="160:25"><name pos:start="160:9" pos:end="160:20"><name pos:start="160:9" pos:end="160:13">avctx</name><operator pos:start="160:14" pos:end="160:15">-&gt;</operator><name pos:start="160:16" pos:end="160:20">width</name></name> <operator pos:start="160:22" pos:end="160:23">&lt;=</operator> <literal type="number" pos:start="160:25" pos:end="160:25">0</literal></expr>)</condition><block type="pseudo" pos:start="162:9" pos:end="162:18"><block_content pos:start="162:9" pos:end="162:18">

        <return pos:start="162:9" pos:end="162:18">return <expr pos:start="162:16" pos:end="162:17"><operator pos:start="162:16" pos:end="162:16">-</operator><literal type="number" pos:start="162:17" pos:end="162:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="164:5" pos:end="164:35"><expr pos:start="164:5" pos:end="164:34"><call pos:start="164:5" pos:end="164:34"><name pos:start="164:5" pos:end="164:11">pnm_get</name><argument_list pos:start="164:12" pos:end="164:34">(<argument pos:start="164:13" pos:end="164:13"><expr pos:start="164:13" pos:end="164:13"><name pos:start="164:13" pos:end="164:13">s</name></expr></argument>, <argument pos:start="164:16" pos:end="164:19"><expr pos:start="164:16" pos:end="164:19"><name pos:start="164:16" pos:end="164:19">buf1</name></expr></argument>, <argument pos:start="164:22" pos:end="164:33"><expr pos:start="164:22" pos:end="164:33"><sizeof pos:start="164:22" pos:end="164:33">sizeof<argument_list pos:start="164:28" pos:end="164:33">(<argument pos:start="164:29" pos:end="164:32"><expr pos:start="164:29" pos:end="164:32"><name pos:start="164:29" pos:end="164:32">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="166:5" pos:end="166:31"><expr pos:start="166:5" pos:end="166:30"><name pos:start="166:5" pos:end="166:17"><name pos:start="166:5" pos:end="166:9">avctx</name><operator pos:start="166:10" pos:end="166:11">-&gt;</operator><name pos:start="166:12" pos:end="166:17">height</name></name> <operator pos:start="166:19" pos:end="166:19">=</operator> <call pos:start="166:21" pos:end="166:30"><name pos:start="166:21" pos:end="166:24">atoi</name><argument_list pos:start="166:25" pos:end="166:30">(<argument pos:start="166:26" pos:end="166:29"><expr pos:start="166:26" pos:end="166:29"><name pos:start="166:26" pos:end="166:29">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="168:5" pos:end="170:18"><if pos:start="168:5" pos:end="170:18">if<condition pos:start="168:7" pos:end="168:88">(<expr pos:start="168:8" pos:end="168:87"><name pos:start="168:8" pos:end="168:20"><name pos:start="168:8" pos:end="168:12">avctx</name><operator pos:start="168:13" pos:end="168:14">-&gt;</operator><name pos:start="168:15" pos:end="168:20">height</name></name> <operator pos:start="168:22" pos:end="168:23">&lt;=</operator> <literal type="number" pos:start="168:25" pos:end="168:25">0</literal> <operator pos:start="168:27" pos:end="168:28">||</operator> <call pos:start="168:30" pos:end="168:87"><name pos:start="168:30" pos:end="168:48">av_image_check_size</name><argument_list pos:start="168:49" pos:end="168:87">(<argument pos:start="168:50" pos:end="168:61"><expr pos:start="168:50" pos:end="168:61"><name pos:start="168:50" pos:end="168:61"><name pos:start="168:50" pos:end="168:54">avctx</name><operator pos:start="168:55" pos:end="168:56">-&gt;</operator><name pos:start="168:57" pos:end="168:61">width</name></name></expr></argument>, <argument pos:start="168:64" pos:end="168:76"><expr pos:start="168:64" pos:end="168:76"><name pos:start="168:64" pos:end="168:76"><name pos:start="168:64" pos:end="168:68">avctx</name><operator pos:start="168:69" pos:end="168:70">-&gt;</operator><name pos:start="168:71" pos:end="168:76">height</name></name></expr></argument>, <argument pos:start="168:79" pos:end="168:79"><expr pos:start="168:79" pos:end="168:79"><literal type="number" pos:start="168:79" pos:end="168:79">0</literal></expr></argument>, <argument pos:start="168:82" pos:end="168:86"><expr pos:start="168:82" pos:end="168:86"><name pos:start="168:82" pos:end="168:86">avctx</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="170:9" pos:end="170:18"><block_content pos:start="170:9" pos:end="170:18">

        <return pos:start="170:9" pos:end="170:18">return <expr pos:start="170:16" pos:end="170:17"><operator pos:start="170:16" pos:end="170:16">-</operator><literal type="number" pos:start="170:17" pos:end="170:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="172:5" pos:end="216:20"><if pos:start="172:5" pos:end="214:5">if <condition pos:start="172:8" pos:end="172:44">(<expr pos:start="172:9" pos:end="172:43"><name pos:start="172:9" pos:end="172:22"><name pos:start="172:9" pos:end="172:13">avctx</name><operator pos:start="172:14" pos:end="172:15">-&gt;</operator><name pos:start="172:16" pos:end="172:22">pix_fmt</name></name> <operator pos:start="172:24" pos:end="172:25">!=</operator> <name pos:start="172:27" pos:end="172:43">PIX_FMT_MONOWHITE</name></expr>)</condition> <block pos:start="172:46" pos:end="214:5">{<block_content pos:start="174:9" pos:end="212:9">

        <expr_stmt pos:start="174:9" pos:end="174:39"><expr pos:start="174:9" pos:end="174:38"><call pos:start="174:9" pos:end="174:38"><name pos:start="174:9" pos:end="174:15">pnm_get</name><argument_list pos:start="174:16" pos:end="174:38">(<argument pos:start="174:17" pos:end="174:17"><expr pos:start="174:17" pos:end="174:17"><name pos:start="174:17" pos:end="174:17">s</name></expr></argument>, <argument pos:start="174:20" pos:end="174:23"><expr pos:start="174:20" pos:end="174:23"><name pos:start="174:20" pos:end="174:23">buf1</name></expr></argument>, <argument pos:start="174:26" pos:end="174:37"><expr pos:start="174:26" pos:end="174:37"><sizeof pos:start="174:26" pos:end="174:37">sizeof<argument_list pos:start="174:32" pos:end="174:37">(<argument pos:start="174:33" pos:end="174:36"><expr pos:start="174:33" pos:end="174:36"><name pos:start="174:33" pos:end="174:36">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="176:9" pos:end="176:31"><expr pos:start="176:9" pos:end="176:30"><name pos:start="176:9" pos:end="176:17"><name pos:start="176:9" pos:end="176:9">s</name><operator pos:start="176:10" pos:end="176:11">-&gt;</operator><name pos:start="176:12" pos:end="176:17">maxval</name></name> <operator pos:start="176:19" pos:end="176:19">=</operator> <call pos:start="176:21" pos:end="176:30"><name pos:start="176:21" pos:end="176:24">atoi</name><argument_list pos:start="176:25" pos:end="176:30">(<argument pos:start="176:26" pos:end="176:29"><expr pos:start="176:26" pos:end="176:29"><name pos:start="176:26" pos:end="176:29">buf1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="178:9" pos:end="184:9"><if pos:start="178:9" pos:end="184:9">if <condition pos:start="178:12" pos:end="178:27">(<expr pos:start="178:13" pos:end="178:26"><name pos:start="178:13" pos:end="178:21"><name pos:start="178:13" pos:end="178:13">s</name><operator pos:start="178:14" pos:end="178:15">-&gt;</operator><name pos:start="178:16" pos:end="178:21">maxval</name></name> <operator pos:start="178:23" pos:end="178:24">&lt;=</operator> <literal type="number" pos:start="178:26" pos:end="178:26">0</literal></expr>)</condition> <block pos:start="178:29" pos:end="184:9">{<block_content pos:start="180:13" pos:end="182:28">

            <expr_stmt pos:start="180:13" pos:end="180:75"><expr pos:start="180:13" pos:end="180:74"><call pos:start="180:13" pos:end="180:74"><name pos:start="180:13" pos:end="180:18">av_log</name><argument_list pos:start="180:19" pos:end="180:74">(<argument pos:start="180:20" pos:end="180:24"><expr pos:start="180:20" pos:end="180:24"><name pos:start="180:20" pos:end="180:24">avctx</name></expr></argument>, <argument pos:start="180:27" pos:end="180:38"><expr pos:start="180:27" pos:end="180:38"><name pos:start="180:27" pos:end="180:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="180:41" pos:end="180:62"><expr pos:start="180:41" pos:end="180:62"><literal type="string" pos:start="180:41" pos:end="180:62">"Invalid maxval: %d\n"</literal></expr></argument>, <argument pos:start="180:65" pos:end="180:73"><expr pos:start="180:65" pos:end="180:73"><name pos:start="180:65" pos:end="180:73"><name pos:start="180:65" pos:end="180:65">s</name><operator pos:start="180:66" pos:end="180:67">-&gt;</operator><name pos:start="180:68" pos:end="180:73">maxval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="182:13" pos:end="182:28"><expr pos:start="182:13" pos:end="182:27"><name pos:start="182:13" pos:end="182:21"><name pos:start="182:13" pos:end="182:13">s</name><operator pos:start="182:14" pos:end="182:15">-&gt;</operator><name pos:start="182:16" pos:end="182:21">maxval</name></name> <operator pos:start="182:23" pos:end="182:23">=</operator> <literal type="number" pos:start="182:25" pos:end="182:27">255</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="186:9" pos:end="212:9"><if pos:start="186:9" pos:end="212:9">if <condition pos:start="186:12" pos:end="186:29">(<expr pos:start="186:13" pos:end="186:28"><name pos:start="186:13" pos:end="186:21"><name pos:start="186:13" pos:end="186:13">s</name><operator pos:start="186:14" pos:end="186:15">-&gt;</operator><name pos:start="186:16" pos:end="186:21">maxval</name></name> <operator pos:start="186:23" pos:end="186:24">&gt;=</operator> <literal type="number" pos:start="186:26" pos:end="186:28">256</literal></expr>)</condition> <block pos:start="186:31" pos:end="212:9">{<block_content pos:start="188:13" pos:end="210:13">

            <if_stmt pos:start="188:13" pos:end="210:13"><if pos:start="188:13" pos:end="196:13">if <condition pos:start="188:16" pos:end="188:48">(<expr pos:start="188:17" pos:end="188:47"><name pos:start="188:17" pos:end="188:30"><name pos:start="188:17" pos:end="188:21">avctx</name><operator pos:start="188:22" pos:end="188:23">-&gt;</operator><name pos:start="188:24" pos:end="188:30">pix_fmt</name></name> <operator pos:start="188:32" pos:end="188:33">==</operator> <name pos:start="188:35" pos:end="188:47">PIX_FMT_GRAY8</name></expr>)</condition> <block pos:start="188:50" pos:end="196:13">{<block_content pos:start="190:17" pos:end="194:52">

                <expr_stmt pos:start="190:17" pos:end="190:50"><expr pos:start="190:17" pos:end="190:49"><name pos:start="190:17" pos:end="190:30"><name pos:start="190:17" pos:end="190:21">avctx</name><operator pos:start="190:22" pos:end="190:23">-&gt;</operator><name pos:start="190:24" pos:end="190:30">pix_fmt</name></name> <operator pos:start="190:32" pos:end="190:32">=</operator> <name pos:start="190:34" pos:end="190:49">PIX_FMT_GRAY16BE</name></expr>;</expr_stmt>

                <if_stmt pos:start="192:17" pos:end="194:52"><if pos:start="192:17" pos:end="194:52">if <condition pos:start="192:20" pos:end="192:39">(<expr pos:start="192:21" pos:end="192:38"><name pos:start="192:21" pos:end="192:29"><name pos:start="192:21" pos:end="192:21">s</name><operator pos:start="192:22" pos:end="192:23">-&gt;</operator><name pos:start="192:24" pos:end="192:29">maxval</name></name> <operator pos:start="192:31" pos:end="192:32">!=</operator> <literal type="number" pos:start="192:34" pos:end="192:38">65535</literal></expr>)</condition><block type="pseudo" pos:start="194:21" pos:end="194:52"><block_content pos:start="194:21" pos:end="194:52">

                    <expr_stmt pos:start="194:21" pos:end="194:52"><expr pos:start="194:21" pos:end="194:51"><name pos:start="194:21" pos:end="194:34"><name pos:start="194:21" pos:end="194:25">avctx</name><operator pos:start="194:26" pos:end="194:27">-&gt;</operator><name pos:start="194:28" pos:end="194:34">pix_fmt</name></name> <operator pos:start="194:36" pos:end="194:36">=</operator> <name pos:start="194:38" pos:end="194:51">PIX_FMT_GRAY16</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="196:15" pos:end="202:13">else if <condition pos:start="196:23" pos:end="196:55">(<expr pos:start="196:24" pos:end="196:54"><name pos:start="196:24" pos:end="196:37"><name pos:start="196:24" pos:end="196:28">avctx</name><operator pos:start="196:29" pos:end="196:30">-&gt;</operator><name pos:start="196:31" pos:end="196:37">pix_fmt</name></name> <operator pos:start="196:39" pos:end="196:40">==</operator> <name pos:start="196:42" pos:end="196:54">PIX_FMT_RGB24</name></expr>)</condition> <block pos:start="196:57" pos:end="202:13">{<block_content pos:start="198:17" pos:end="200:53">

                <if_stmt pos:start="198:17" pos:end="200:53"><if pos:start="198:17" pos:end="200:53">if <condition pos:start="198:20" pos:end="198:36">(<expr pos:start="198:21" pos:end="198:35"><name pos:start="198:21" pos:end="198:29"><name pos:start="198:21" pos:end="198:21">s</name><operator pos:start="198:22" pos:end="198:23">-&gt;</operator><name pos:start="198:24" pos:end="198:29">maxval</name></name> <operator pos:start="198:31" pos:end="198:31">&gt;</operator> <literal type="number" pos:start="198:33" pos:end="198:35">255</literal></expr>)</condition><block type="pseudo" pos:start="200:21" pos:end="200:53"><block_content pos:start="200:21" pos:end="200:53">

                    <expr_stmt pos:start="200:21" pos:end="200:53"><expr pos:start="200:21" pos:end="200:52"><name pos:start="200:21" pos:end="200:34"><name pos:start="200:21" pos:end="200:25">avctx</name><operator pos:start="200:26" pos:end="200:27">-&gt;</operator><name pos:start="200:28" pos:end="200:34">pix_fmt</name></name> <operator pos:start="200:36" pos:end="200:36">=</operator> <name pos:start="200:38" pos:end="200:52">PIX_FMT_RGB48BE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="202:15" pos:end="210:13">else <block pos:start="202:20" pos:end="210:13">{<block_content pos:start="204:17" pos:end="208:26">

                <expr_stmt pos:start="204:17" pos:end="204:74"><expr pos:start="204:17" pos:end="204:73"><call pos:start="204:17" pos:end="204:73"><name pos:start="204:17" pos:end="204:22">av_log</name><argument_list pos:start="204:23" pos:end="204:73">(<argument pos:start="204:24" pos:end="204:28"><expr pos:start="204:24" pos:end="204:28"><name pos:start="204:24" pos:end="204:28">avctx</name></expr></argument>, <argument pos:start="204:31" pos:end="204:42"><expr pos:start="204:31" pos:end="204:42"><name pos:start="204:31" pos:end="204:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="204:45" pos:end="204:72"><expr pos:start="204:45" pos:end="204:72"><literal type="string" pos:start="204:45" pos:end="204:72">"Unsupported pixel format\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="206:17" pos:end="206:46"><expr pos:start="206:17" pos:end="206:45"><name pos:start="206:17" pos:end="206:30"><name pos:start="206:17" pos:end="206:21">avctx</name><operator pos:start="206:22" pos:end="206:23">-&gt;</operator><name pos:start="206:24" pos:end="206:30">pix_fmt</name></name> <operator pos:start="206:32" pos:end="206:32">=</operator> <name pos:start="206:34" pos:end="206:45">PIX_FMT_NONE</name></expr>;</expr_stmt>

                <return pos:start="208:17" pos:end="208:26">return <expr pos:start="208:24" pos:end="208:25"><operator pos:start="208:24" pos:end="208:24">-</operator><literal type="number" pos:start="208:25" pos:end="208:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="214:6" pos:end="216:20">else<block type="pseudo" pos:start="216:9" pos:end="216:20"><block_content pos:start="216:9" pos:end="216:20">

        <expr_stmt pos:start="216:9" pos:end="216:20"><expr pos:start="216:9" pos:end="216:19"><name pos:start="216:9" pos:end="216:17"><name pos:start="216:9" pos:end="216:9">s</name><operator pos:start="216:10" pos:end="216:11">-&gt;</operator><name pos:start="216:12" pos:end="216:17">maxval</name></name><operator pos:start="216:18" pos:end="216:18">=</operator><literal type="number" pos:start="216:19" pos:end="216:19">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <comment type="block" pos:start="218:5" pos:end="218:30">/* more check if YUV420 */</comment>

    <if_stmt pos:start="220:5" pos:end="236:5"><if pos:start="220:5" pos:end="236:5">if <condition pos:start="220:8" pos:end="220:42">(<expr pos:start="220:9" pos:end="220:41"><name pos:start="220:9" pos:end="220:22"><name pos:start="220:9" pos:end="220:13">avctx</name><operator pos:start="220:14" pos:end="220:15">-&gt;</operator><name pos:start="220:16" pos:end="220:22">pix_fmt</name></name> <operator pos:start="220:24" pos:end="220:25">==</operator> <name pos:start="220:27" pos:end="220:41">PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="220:44" pos:end="236:5">{<block_content pos:start="222:9" pos:end="234:26">

        <if_stmt pos:start="222:9" pos:end="224:22"><if pos:start="222:9" pos:end="224:22">if <condition pos:start="222:12" pos:end="222:36">(<expr pos:start="222:13" pos:end="222:35"><operator pos:start="222:13" pos:end="222:13">(</operator><name pos:start="222:14" pos:end="222:25"><name pos:start="222:14" pos:end="222:18">avctx</name><operator pos:start="222:19" pos:end="222:20">-&gt;</operator><name pos:start="222:21" pos:end="222:25">width</name></name> <operator pos:start="222:27" pos:end="222:27">&amp;</operator> <literal type="number" pos:start="222:29" pos:end="222:29">1</literal><operator pos:start="222:30" pos:end="222:30">)</operator> <operator pos:start="222:32" pos:end="222:33">!=</operator> <literal type="number" pos:start="222:35" pos:end="222:35">0</literal></expr>)</condition><block type="pseudo" pos:start="224:13" pos:end="224:22"><block_content pos:start="224:13" pos:end="224:22">

            <return pos:start="224:13" pos:end="224:22">return <expr pos:start="224:20" pos:end="224:21"><operator pos:start="224:20" pos:end="224:20">-</operator><literal type="number" pos:start="224:21" pos:end="224:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="226:9" pos:end="226:32"><expr pos:start="226:9" pos:end="226:31"><name pos:start="226:9" pos:end="226:9">h</name> <operator pos:start="226:11" pos:end="226:11">=</operator> <operator pos:start="226:13" pos:end="226:13">(</operator><name pos:start="226:14" pos:end="226:26"><name pos:start="226:14" pos:end="226:18">avctx</name><operator pos:start="226:19" pos:end="226:20">-&gt;</operator><name pos:start="226:21" pos:end="226:26">height</name></name> <operator pos:start="226:28" pos:end="226:28">*</operator> <literal type="number" pos:start="226:30" pos:end="226:30">2</literal><operator pos:start="226:31" pos:end="226:31">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="228:9" pos:end="230:22"><if pos:start="228:9" pos:end="230:22">if <condition pos:start="228:12" pos:end="228:25">(<expr pos:start="228:13" pos:end="228:24"><operator pos:start="228:13" pos:end="228:13">(</operator><name pos:start="228:14" pos:end="228:14">h</name> <operator pos:start="228:16" pos:end="228:16">%</operator> <literal type="number" pos:start="228:18" pos:end="228:18">3</literal><operator pos:start="228:19" pos:end="228:19">)</operator> <operator pos:start="228:21" pos:end="228:22">!=</operator> <literal type="number" pos:start="228:24" pos:end="228:24">0</literal></expr>)</condition><block type="pseudo" pos:start="230:13" pos:end="230:22"><block_content pos:start="230:13" pos:end="230:22">

            <return pos:start="230:13" pos:end="230:22">return <expr pos:start="230:20" pos:end="230:21"><operator pos:start="230:20" pos:end="230:20">-</operator><literal type="number" pos:start="230:21" pos:end="230:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="232:9" pos:end="232:15"><expr pos:start="232:9" pos:end="232:14"><name pos:start="232:9" pos:end="232:9">h</name> <operator pos:start="232:11" pos:end="232:12">/=</operator> <literal type="number" pos:start="232:14" pos:end="232:14">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="234:9" pos:end="234:26"><expr pos:start="234:9" pos:end="234:25"><name pos:start="234:9" pos:end="234:21"><name pos:start="234:9" pos:end="234:13">avctx</name><operator pos:start="234:14" pos:end="234:15">-&gt;</operator><name pos:start="234:16" pos:end="234:21">height</name></name> <operator pos:start="234:23" pos:end="234:23">=</operator> <name pos:start="234:25" pos:end="234:25">h</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="238:5" pos:end="238:13">return <expr pos:start="238:12" pos:end="238:12"><literal type="number" pos:start="238:12" pos:end="238:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
