<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14243.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">QemuOpts</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:26">qemu_opts_create</name><parameter_list pos:start="1:27" pos:end="1:82">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:39">QemuOptsList</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:45">list</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:61"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:57">char</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">id</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:81"><decl pos:start="1:64" pos:end="1:81"><type pos:start="1:64" pos:end="1:81"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:81">fail_if_exists</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:16">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">QemuOpts</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:18">opts</name> <init pos:start="5:20" pos:end="5:25">= <expr pos:start="5:22" pos:end="5:25"><name pos:start="5:22" pos:end="5:25">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="49:5"><if pos:start="9:5" pos:end="39:5">if <condition pos:start="9:8" pos:end="9:11">(<expr pos:start="9:9" pos:end="9:10"><name pos:start="9:9" pos:end="9:10">id</name></expr>)</condition> <block pos:start="9:13" pos:end="39:5">{<block_content pos:start="11:9" pos:end="37:9">

        <if_stmt pos:start="11:9" pos:end="19:9"><if pos:start="11:9" pos:end="19:9">if <condition pos:start="11:12" pos:end="11:31">(<expr pos:start="11:13" pos:end="11:30"><operator pos:start="11:13" pos:end="11:13">!</operator><call pos:start="11:14" pos:end="11:30"><name pos:start="11:14" pos:end="11:26">id_wellformed</name><argument_list pos:start="11:27" pos:end="11:30">(<argument pos:start="11:28" pos:end="11:29"><expr pos:start="11:28" pos:end="11:29"><name pos:start="11:28" pos:end="11:29">id</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:33" pos:end="19:9">{<block_content pos:start="13:13" pos:end="17:24">

            <expr_stmt pos:start="13:13" pos:end="13:79"><expr pos:start="13:13" pos:end="13:78"><call pos:start="13:13" pos:end="13:78"><name pos:start="13:13" pos:end="13:25">qerror_report</name><argument_list pos:start="13:26" pos:end="13:78">(<argument pos:start="13:27" pos:end="13:54"><expr pos:start="13:27" pos:end="13:54"><name pos:start="13:27" pos:end="13:54">QERR_INVALID_PARAMETER_VALUE</name></expr></argument>, <argument pos:start="13:57" pos:end="13:60"><expr pos:start="13:57" pos:end="13:60"><literal type="string" pos:start="13:57" pos:end="13:60">"id"</literal></expr></argument>, <argument pos:start="13:63" pos:end="13:77"><expr pos:start="13:63" pos:end="13:77"><literal type="string" pos:start="13:63" pos:end="13:77">"an identifier"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="15:120"><expr pos:start="15:13" pos:end="15:119"><call pos:start="15:13" pos:end="15:119"><name pos:start="15:13" pos:end="15:35">error_printf_unless_qmp</name><argument_list pos:start="15:36" pos:end="15:119">(<argument pos:start="15:37" pos:end="15:118"><expr pos:start="15:37" pos:end="15:118"><literal type="string" pos:start="15:37" pos:end="15:118">"Identifiers consist of letters, digits, '-', '.', '_', starting with a letter.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="17:13" pos:end="17:24">return <expr pos:start="17:20" pos:end="17:23"><name pos:start="17:20" pos:end="17:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:40"><expr pos:start="21:9" pos:end="21:39"><name pos:start="21:9" pos:end="21:12">opts</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:39"><name pos:start="21:16" pos:end="21:29">qemu_opts_find</name><argument_list pos:start="21:30" pos:end="21:39">(<argument pos:start="21:31" pos:end="21:34"><expr pos:start="21:31" pos:end="21:34"><name pos:start="21:31" pos:end="21:34">list</name></expr></argument>, <argument pos:start="21:37" pos:end="21:38"><expr pos:start="21:37" pos:end="21:38"><name pos:start="21:37" pos:end="21:38">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="37:9"><if pos:start="23:9" pos:end="37:9">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:16">opts</name> <operator pos:start="23:18" pos:end="23:19">!=</operator> <name pos:start="23:21" pos:end="23:24">NULL</name></expr>)</condition> <block pos:start="23:27" pos:end="37:9">{<block_content pos:start="25:13" pos:end="35:13">

            <if_stmt pos:start="25:13" pos:end="35:13"><if pos:start="25:13" pos:end="31:13">if <condition pos:start="25:16" pos:end="25:53">(<expr pos:start="25:17" pos:end="25:52"><name pos:start="25:17" pos:end="25:30">fail_if_exists</name> <operator pos:start="25:32" pos:end="25:33">&amp;&amp;</operator> <operator pos:start="25:35" pos:end="25:35">!</operator><name pos:start="25:36" pos:end="25:52"><name pos:start="25:36" pos:end="25:39">list</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:52">merge_lists</name></name></expr>)</condition> <block pos:start="25:55" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:28">

                <expr_stmt pos:start="27:17" pos:end="27:65"><expr pos:start="27:17" pos:end="27:64"><call pos:start="27:17" pos:end="27:64"><name pos:start="27:17" pos:end="27:29">qerror_report</name><argument_list pos:start="27:30" pos:end="27:64">(<argument pos:start="27:31" pos:end="27:47"><expr pos:start="27:31" pos:end="27:47"><name pos:start="27:31" pos:end="27:47">QERR_DUPLICATE_ID</name></expr></argument>, <argument pos:start="27:50" pos:end="27:51"><expr pos:start="27:50" pos:end="27:51"><name pos:start="27:50" pos:end="27:51">id</name></expr></argument>, <argument pos:start="27:54" pos:end="27:63"><expr pos:start="27:54" pos:end="27:63"><name pos:start="27:54" pos:end="27:63"><name pos:start="27:54" pos:end="27:57">list</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:63">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="29:17" pos:end="29:28">return <expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">NULL</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="35:13">else <block pos:start="31:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:28">

                <return pos:start="33:17" pos:end="33:28">return <expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:27">opts</name></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="39:7" pos:end="49:5">else if <condition pos:start="39:15" pos:end="39:33">(<expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:19">list</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:32">merge_lists</name></name></expr>)</condition> <block pos:start="39:35" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:9">

        <expr_stmt pos:start="41:9" pos:end="41:42"><expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:12">opts</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:41"><name pos:start="41:16" pos:end="41:29">qemu_opts_find</name><argument_list pos:start="41:30" pos:end="41:41">(<argument pos:start="41:31" pos:end="41:34"><expr pos:start="41:31" pos:end="41:34"><name pos:start="41:31" pos:end="41:34">list</name></expr></argument>, <argument pos:start="41:37" pos:end="41:40"><expr pos:start="41:37" pos:end="41:40"><name pos:start="41:37" pos:end="41:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:17">(<expr pos:start="43:13" pos:end="43:16"><name pos:start="43:13" pos:end="43:16">opts</name></expr>)</condition> <block pos:start="43:19" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:24">

            <return pos:start="45:13" pos:end="45:24">return <expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">opts</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:8">opts</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <call pos:start="51:12" pos:end="51:35"><name pos:start="51:12" pos:end="51:20">g_malloc0</name><argument_list pos:start="51:21" pos:end="51:35">(<argument pos:start="51:22" pos:end="51:34"><expr pos:start="51:22" pos:end="51:34"><sizeof pos:start="51:22" pos:end="51:34">sizeof<argument_list pos:start="51:28" pos:end="51:34">(<argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><operator pos:start="51:29" pos:end="51:29">*</operator><name pos:start="51:30" pos:end="51:33">opts</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:11">(<expr pos:start="53:9" pos:end="53:10"><name pos:start="53:9" pos:end="53:10">id</name></expr>)</condition> <block pos:start="53:13" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:32">

        <expr_stmt pos:start="55:9" pos:end="55:32"><expr pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:12">opts</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:16">id</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:31"><name pos:start="55:20" pos:end="55:27">g_strdup</name><argument_list pos:start="55:28" pos:end="55:31">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:8">opts</name><operator pos:start="59:9" pos:end="59:10">-&gt;</operator><name pos:start="59:11" pos:end="59:14">list</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:21">list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><call pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:12">loc_save</name><argument_list pos:start="61:13" pos:end="61:24">(<argument pos:start="61:14" pos:end="61:23"><expr pos:start="61:14" pos:end="61:23"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:23"><name pos:start="61:15" pos:end="61:18">opts</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:23">loc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><call pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:15">QTAILQ_INIT</name><argument_list pos:start="63:16" pos:end="63:28">(<argument pos:start="63:17" pos:end="63:27"><expr pos:start="63:17" pos:end="63:27"><operator pos:start="63:17" pos:end="63:17">&amp;</operator><name pos:start="63:18" pos:end="63:27"><name pos:start="63:18" pos:end="63:21">opts</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:27">head</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:48"><expr pos:start="65:5" pos:end="65:47"><call pos:start="65:5" pos:end="65:47"><name pos:start="65:5" pos:end="65:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="65:23" pos:end="65:47">(<argument pos:start="65:24" pos:end="65:34"><expr pos:start="65:24" pos:end="65:34"><operator pos:start="65:24" pos:end="65:24">&amp;</operator><name pos:start="65:25" pos:end="65:34"><name pos:start="65:25" pos:end="65:28">list</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:34">head</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:40"><expr pos:start="65:37" pos:end="65:40"><name pos:start="65:37" pos:end="65:40">opts</name></expr></argument>, <argument pos:start="65:43" pos:end="65:46"><expr pos:start="65:43" pos:end="65:46"><name pos:start="65:43" pos:end="65:46">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="67:5" pos:end="67:16">return <expr pos:start="67:12" pos:end="67:15"><name pos:start="67:12" pos:end="67:15">opts</name></expr>;</return>

</block_content>}</block></function>
</unit>
