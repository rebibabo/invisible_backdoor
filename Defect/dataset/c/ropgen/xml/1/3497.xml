<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3497.c" pos:tabs="8"><function pos:start="1:1" pos:end="186:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mxf_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="186:13">{<block_content pos:start="5:5" pos:end="186:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:49"><decl pos:start="9:5" pos:end="9:48"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:48">= <expr pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:48"><name pos:start="9:20" pos:end="9:20">s</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:29">streams</name><index pos:start="9:30" pos:end="9:48">[<expr pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:47"><name pos:start="9:31" pos:end="9:33">pkt</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:47">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">MXFStreamContext</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:24">sc</name> <init pos:start="11:26" pos:end="11:40">= <expr pos:start="11:28" pos:end="11:40"><name pos:start="11:28" pos:end="11:40"><name pos:start="11:28" pos:end="11:29">st</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:26"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:17">MXFIndexEntry</name></type> <name pos:start="13:19" pos:end="13:20">ie</name> <init pos:start="13:22" pos:end="13:26">= <expr pos:start="13:24" pos:end="13:26"><block pos:start="13:24" pos:end="13:26">{<expr pos:start="13:25" pos:end="13:25"><literal type="number" pos:start="13:25" pos:end="13:25">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="186:13"><if pos:start="19:5" pos:end="186:13">if <condition pos:start="19:8" pos:end="19:85">(<expr pos:start="19:9" pos:end="19:84"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:34"><name pos:start="19:10" pos:end="19:12">mxf</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:34">edit_unit_byte_count</name></name> <operator pos:start="19:36" pos:end="19:37">&amp;&amp;</operator> <operator pos:start="19:39" pos:end="19:39">!</operator><operator pos:start="19:40" pos:end="19:40">(</operator><name pos:start="19:41" pos:end="19:61"><name pos:start="19:41" pos:end="19:43">mxf</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:61">edit_units_count</name></name> <operator pos:start="19:63" pos:end="19:63">%</operator> <name pos:start="19:65" pos:end="19:83">EDIT_UNITS_PER_BODY</name><operator pos:start="19:84" pos:end="19:84">)</operator></expr>)</condition> <block pos:start="19:87" pos:end="186:13">{<block_content pos:start="21:9" pos:end="186:13">

        <if_stmt pos:start="21:9" pos:end="186:13"><if pos:start="21:9" pos:end="186:13">if <condition pos:start="21:12" pos:end="23:94">(<expr pos:start="21:13" pos:end="23:93"><operator pos:start="21:13" pos:end="21:13">(</operator><name pos:start="21:14" pos:end="21:16">err</name> <operator pos:start="21:18" pos:end="21:18">=</operator> <call pos:start="21:20" pos:end="23:88"><name pos:start="21:20" pos:end="21:36">av_reallocp_array</name><argument_list pos:start="21:37" pos:end="23:88">(<argument pos:start="21:38" pos:end="21:56"><expr pos:start="21:38" pos:end="21:56"><operator pos:start="21:38" pos:end="21:38">&amp;</operator><name pos:start="21:39" pos:end="21:56"><name pos:start="21:39" pos:end="21:41">mxf</name><operator pos:start="21:42" pos:end="21:43">-&gt;</operator><name pos:start="21:44" pos:end="21:56">index_entries</name></name></expr></argument>, <argument pos:start="21:59" pos:end="23:58"><expr pos:start="21:59" pos:end="23:58"><name pos:start="21:59" pos:end="21:79"><name pos:start="21:59" pos:end="21:61">mxf</name><operator pos:start="21:62" pos:end="21:63">-&gt;</operator><name pos:start="21:64" pos:end="21:79">edit_units_count</name></name>

                                     <operator pos:start="23:38" pos:end="23:38">+</operator> <name pos:start="23:40" pos:end="23:58">EDIT_UNITS_PER_BODY</name></expr></argument>, <argument pos:start="23:61" pos:end="23:87"><expr pos:start="23:61" pos:end="23:87"><sizeof pos:start="23:61" pos:end="23:87">sizeof<argument_list pos:start="23:67" pos:end="23:87">(<argument pos:start="23:68" pos:end="23:86"><expr pos:start="23:68" pos:end="23:86"><operator pos:start="23:68" pos:end="23:68">*</operator><name pos:start="23:69" pos:end="23:86"><name pos:start="23:69" pos:end="23:71">mxf</name><operator pos:start="23:72" pos:end="23:73">-&gt;</operator><name pos:start="23:74" pos:end="23:86">index_entries</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="23:89" pos:end="23:89">)</operator> <operator pos:start="23:91" pos:end="23:91">&lt;</operator> <literal type="number" pos:start="23:93" pos:end="23:93">0</literal></expr>)</condition> <block pos:start="23:96" pos:end="186:13">{<block_content pos:start="25:13" pos:end="186:13">

            <expr_stmt pos:start="25:13" pos:end="25:38"><expr pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:15">mxf</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:33">edit_units_count</name></name> <operator pos:start="25:35" pos:end="25:35">=</operator> <literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:74"><expr pos:start="27:13" pos:end="27:73"><call pos:start="27:13" pos:end="27:73"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="27:73">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:34"><expr pos:start="27:23" pos:end="27:34"><name pos:start="27:23" pos:end="27:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:37" pos:end="27:72"><expr pos:start="27:37" pos:end="27:72"><literal type="string" pos:start="27:37" pos:end="27:72">"could not allocate index entries\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">err</name></expr>;</return>





    <if_stmt pos:start="35:5" pos:end="186:13"><if pos:start="35:5" pos:end="186:13">if <condition pos:start="35:8" pos:end="35:54">(<expr pos:start="35:9" pos:end="35:53"><name pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:10">st</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">codec</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:27">codec_id</name></name> <operator pos:start="35:29" pos:end="35:30">==</operator> <name pos:start="35:32" pos:end="35:53">AV_CODEC_ID_MPEG2VIDEO</name></expr>)</condition> <block pos:start="35:56" pos:end="186:13">{<block_content pos:start="37:9" pos:end="186:13">

        <if_stmt pos:start="37:9" pos:end="186:13"><if pos:start="37:9" pos:end="44:5">if <condition pos:start="37:12" pos:end="37:52">(<expr pos:start="37:13" pos:end="37:51"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:51"><name pos:start="37:14" pos:end="37:34">mxf_parse_mpeg2_frame</name><argument_list pos:start="37:35" pos:end="37:51">(<argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><name pos:start="37:36" pos:end="37:36">s</name></expr></argument>, <argument pos:start="37:39" pos:end="37:40"><expr pos:start="37:39" pos:end="37:40"><name pos:start="37:39" pos:end="37:40">st</name></expr></argument>, <argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><name pos:start="37:43" pos:end="37:45">pkt</name></expr></argument>, <argument pos:start="37:48" pos:end="37:50"><expr pos:start="37:48" pos:end="37:50"><operator pos:start="37:48" pos:end="37:48">&amp;</operator><name pos:start="37:49" pos:end="37:50">ie</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:54" pos:end="44:5">{<block_content pos:start="39:13" pos:end="41:22">

            <expr_stmt pos:start="39:13" pos:end="39:79"><expr pos:start="39:13" pos:end="39:78"><call pos:start="39:13" pos:end="39:78"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:78">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><name pos:start="39:23" pos:end="39:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:37" pos:end="39:77"><expr pos:start="39:37" pos:end="39:77"><literal type="string" pos:start="39:37" pos:end="39:77">"could not get mpeg2 profile and level\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:22">return <expr pos:start="41:20" pos:end="41:21"><operator pos:start="41:20" pos:end="41:20">-</operator><literal type="number" pos:start="41:21" pos:end="41:21">1</literal></expr>;</return>


    </block_content>}</block></if> <if type="elseif" pos:start="44:7" pos:end="186:13">else if <condition pos:start="44:15" pos:end="44:56">(<expr pos:start="44:16" pos:end="44:55"><name pos:start="44:16" pos:end="44:34"><name pos:start="44:16" pos:end="44:17">st</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:24">codec</name><operator pos:start="44:25" pos:end="44:26">-&gt;</operator><name pos:start="44:27" pos:end="44:34">codec_id</name></name> <operator pos:start="44:36" pos:end="44:37">==</operator> <name pos:start="44:39" pos:end="44:55">AV_CODEC_ID_DNXHD</name></expr>)</condition> <block pos:start="44:58" pos:end="186:13">{<block_content pos:start="46:9" pos:end="186:13">

        <if_stmt pos:start="46:9" pos:end="186:13"><if pos:start="46:9" pos:end="53:5">if <condition pos:start="46:12" pos:end="46:47">(<expr pos:start="46:13" pos:end="46:46"><operator pos:start="46:13" pos:end="46:13">!</operator><call pos:start="46:14" pos:end="46:46"><name pos:start="46:14" pos:end="46:34">mxf_parse_dnxhd_frame</name><argument_list pos:start="46:35" pos:end="46:46">(<argument pos:start="46:36" pos:end="46:36"><expr pos:start="46:36" pos:end="46:36"><name pos:start="46:36" pos:end="46:36">s</name></expr></argument>, <argument pos:start="46:39" pos:end="46:40"><expr pos:start="46:39" pos:end="46:40"><name pos:start="46:39" pos:end="46:40">st</name></expr></argument>, <argument pos:start="46:43" pos:end="46:45"><expr pos:start="46:43" pos:end="46:45"><name pos:start="46:43" pos:end="46:45">pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="46:49" pos:end="53:5">{<block_content pos:start="48:13" pos:end="50:22">

            <expr_stmt pos:start="48:13" pos:end="48:69"><expr pos:start="48:13" pos:end="48:68"><call pos:start="48:13" pos:end="48:68"><name pos:start="48:13" pos:end="48:18">av_log</name><argument_list pos:start="48:19" pos:end="48:68">(<argument pos:start="48:20" pos:end="48:20"><expr pos:start="48:20" pos:end="48:20"><name pos:start="48:20" pos:end="48:20">s</name></expr></argument>, <argument pos:start="48:23" pos:end="48:34"><expr pos:start="48:23" pos:end="48:34"><name pos:start="48:23" pos:end="48:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="48:37" pos:end="48:67"><expr pos:start="48:37" pos:end="48:67"><literal type="string" pos:start="48:37" pos:end="48:67">"could not get dnxhd profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="50:13" pos:end="50:22">return <expr pos:start="50:20" pos:end="50:21"><operator pos:start="50:20" pos:end="50:20">-</operator><literal type="number" pos:start="50:21" pos:end="50:21">1</literal></expr>;</return>


    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="186:13">else if <condition pos:start="53:15" pos:end="53:58">(<expr pos:start="53:16" pos:end="53:57"><name pos:start="53:16" pos:end="53:34"><name pos:start="53:16" pos:end="53:17">st</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:24">codec</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:34">codec_id</name></name> <operator pos:start="53:36" pos:end="53:37">==</operator> <name pos:start="53:39" pos:end="53:57">AV_CODEC_ID_DVVIDEO</name></expr>)</condition> <block pos:start="53:60" pos:end="186:13">{<block_content pos:start="55:9" pos:end="186:13">

        <if_stmt pos:start="55:9" pos:end="186:13"><if pos:start="55:9" pos:end="62:5">if <condition pos:start="55:12" pos:end="55:44">(<expr pos:start="55:13" pos:end="55:43"><operator pos:start="55:13" pos:end="55:13">!</operator><call pos:start="55:14" pos:end="55:43"><name pos:start="55:14" pos:end="55:31">mxf_parse_dv_frame</name><argument_list pos:start="55:32" pos:end="55:43">(<argument pos:start="55:33" pos:end="55:33"><expr pos:start="55:33" pos:end="55:33"><name pos:start="55:33" pos:end="55:33">s</name></expr></argument>, <argument pos:start="55:36" pos:end="55:37"><expr pos:start="55:36" pos:end="55:37"><name pos:start="55:36" pos:end="55:37">st</name></expr></argument>, <argument pos:start="55:40" pos:end="55:42"><expr pos:start="55:40" pos:end="55:42"><name pos:start="55:40" pos:end="55:42">pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:46" pos:end="62:5">{<block_content pos:start="57:13" pos:end="59:22">

            <expr_stmt pos:start="57:13" pos:end="57:66"><expr pos:start="57:13" pos:end="57:65"><call pos:start="57:13" pos:end="57:65"><name pos:start="57:13" pos:end="57:18">av_log</name><argument_list pos:start="57:19" pos:end="57:65">(<argument pos:start="57:20" pos:end="57:20"><expr pos:start="57:20" pos:end="57:20"><name pos:start="57:20" pos:end="57:20">s</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><name pos:start="57:23" pos:end="57:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:37" pos:end="57:64"><expr pos:start="57:37" pos:end="57:64"><literal type="string" pos:start="57:37" pos:end="57:64">"could not get dv profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:22">return <expr pos:start="59:20" pos:end="59:21"><operator pos:start="59:20" pos:end="59:20">-</operator><literal type="number" pos:start="59:21" pos:end="59:21">1</literal></expr>;</return>


    </block_content>}</block></if> <if type="elseif" pos:start="62:7" pos:end="186:13">else if <condition pos:start="62:15" pos:end="62:55">(<expr pos:start="62:16" pos:end="62:54"><name pos:start="62:16" pos:end="62:34"><name pos:start="62:16" pos:end="62:17">st</name><operator pos:start="62:18" pos:end="62:19">-&gt;</operator><name pos:start="62:20" pos:end="62:24">codec</name><operator pos:start="62:25" pos:end="62:26">-&gt;</operator><name pos:start="62:27" pos:end="62:34">codec_id</name></name> <operator pos:start="62:36" pos:end="62:37">==</operator> <name pos:start="62:39" pos:end="62:54">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="62:57" pos:end="186:13">{<block_content pos:start="64:9" pos:end="186:13">

        <if_stmt pos:start="64:9" pos:end="186:13"><if pos:start="64:9" pos:end="186:13">if <condition pos:start="64:12" pos:end="64:51">(<expr pos:start="64:13" pos:end="64:50"><operator pos:start="64:13" pos:end="64:13">!</operator><call pos:start="64:14" pos:end="64:50"><name pos:start="64:14" pos:end="64:33">mxf_parse_h264_frame</name><argument_list pos:start="64:34" pos:end="64:50">(<argument pos:start="64:35" pos:end="64:35"><expr pos:start="64:35" pos:end="64:35"><name pos:start="64:35" pos:end="64:35">s</name></expr></argument>, <argument pos:start="64:38" pos:end="64:39"><expr pos:start="64:38" pos:end="64:39"><name pos:start="64:38" pos:end="64:39">st</name></expr></argument>, <argument pos:start="64:42" pos:end="64:44"><expr pos:start="64:42" pos:end="64:44"><name pos:start="64:42" pos:end="64:44">pkt</name></expr></argument>, <argument pos:start="64:47" pos:end="64:49"><expr pos:start="64:47" pos:end="64:49"><operator pos:start="64:47" pos:end="64:47">&amp;</operator><name pos:start="64:48" pos:end="64:49">ie</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="64:53" pos:end="186:13">{<block_content pos:start="66:13" pos:end="186:13">

            <expr_stmt pos:start="66:13" pos:end="66:68"><expr pos:start="66:13" pos:end="66:67"><call pos:start="66:13" pos:end="66:67"><name pos:start="66:13" pos:end="66:18">av_log</name><argument_list pos:start="66:19" pos:end="66:67">(<argument pos:start="66:20" pos:end="66:20"><expr pos:start="66:20" pos:end="66:20"><name pos:start="66:20" pos:end="66:20">s</name></expr></argument>, <argument pos:start="66:23" pos:end="66:34"><expr pos:start="66:23" pos:end="66:34"><name pos:start="66:23" pos:end="66:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="66:37" pos:end="66:66"><expr pos:start="66:37" pos:end="66:66"><literal type="string" pos:start="66:37" pos:end="66:66">"could not get h264 profile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="68:13" pos:end="68:22">return <expr pos:start="68:20" pos:end="68:21"><operator pos:start="68:20" pos:end="68:20">-</operator><literal type="number" pos:start="68:21" pos:end="68:21">1</literal></expr>;</return>





    <if_stmt pos:start="74:5" pos:end="76:52"><if pos:start="74:5" pos:end="76:52">if <condition pos:start="74:8" pos:end="74:43">(<expr pos:start="74:9" pos:end="74:42"><name pos:start="74:9" pos:end="74:18"><name pos:start="74:9" pos:end="74:9">s</name><operator pos:start="74:10" pos:end="74:11">-&gt;</operator><name pos:start="74:12" pos:end="74:18">oformat</name></name> <operator pos:start="74:20" pos:end="74:21">==</operator> <operator pos:start="74:23" pos:end="74:23">&amp;</operator><name pos:start="74:24" pos:end="74:42">ff_mxf_opatom_muxer</name></expr>)</condition><block type="pseudo" pos:start="76:9" pos:end="76:52"><block_content pos:start="76:9" pos:end="76:52">

        <return pos:start="76:9" pos:end="76:52">return <expr pos:start="76:16" pos:end="76:51"><call pos:start="76:16" pos:end="76:51"><name pos:start="76:16" pos:end="76:38">mxf_write_opatom_packet</name><argument_list pos:start="76:39" pos:end="76:51">(<argument pos:start="76:40" pos:end="76:40"><expr pos:start="76:40" pos:end="76:40"><name pos:start="76:40" pos:end="76:40">s</name></expr></argument>, <argument pos:start="76:43" pos:end="76:45"><expr pos:start="76:43" pos:end="76:45"><name pos:start="76:43" pos:end="76:45">pkt</name></expr></argument>, <argument pos:start="76:48" pos:end="76:50"><expr pos:start="76:48" pos:end="76:50"><operator pos:start="76:48" pos:end="76:48">&amp;</operator><name pos:start="76:49" pos:end="76:50">ie</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="80:5" pos:end="186:13"><if pos:start="80:5" pos:end="186:13">if <condition pos:start="80:8" pos:end="80:29">(<expr pos:start="80:9" pos:end="80:28"><operator pos:start="80:9" pos:end="80:9">!</operator><name pos:start="80:10" pos:end="80:28"><name pos:start="80:10" pos:end="80:12">mxf</name><operator pos:start="80:13" pos:end="80:14">-&gt;</operator><name pos:start="80:15" pos:end="80:28">header_written</name></name></expr>)</condition> <block pos:start="80:31" pos:end="186:13">{<block_content pos:start="82:9" pos:end="186:13">

        <if_stmt pos:start="82:9" pos:end="186:13"><if pos:start="82:9" pos:end="92:9">if <condition pos:start="82:12" pos:end="82:38">(<expr pos:start="82:13" pos:end="82:37"><name pos:start="82:13" pos:end="82:37"><name pos:start="82:13" pos:end="82:15">mxf</name><operator pos:start="82:16" pos:end="82:17">-&gt;</operator><name pos:start="82:18" pos:end="82:37">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="82:40" pos:end="92:9">{<block_content pos:start="84:13" pos:end="90:45">

            <if_stmt pos:start="84:13" pos:end="86:27"><if pos:start="84:13" pos:end="86:27">if <condition pos:start="84:16" pos:end="84:87">(<expr pos:start="84:17" pos:end="84:86"><operator pos:start="84:17" pos:end="84:17">(</operator><name pos:start="84:18" pos:end="84:20">err</name> <operator pos:start="84:22" pos:end="84:22">=</operator> <call pos:start="84:24" pos:end="84:81"><name pos:start="84:24" pos:end="84:42">mxf_write_partition</name><argument_list pos:start="84:43" pos:end="84:81">(<argument pos:start="84:44" pos:end="84:44"><expr pos:start="84:44" pos:end="84:44"><name pos:start="84:44" pos:end="84:44">s</name></expr></argument>, <argument pos:start="84:47" pos:end="84:47"><expr pos:start="84:47" pos:end="84:47"><literal type="number" pos:start="84:47" pos:end="84:47">1</literal></expr></argument>, <argument pos:start="84:50" pos:end="84:50"><expr pos:start="84:50" pos:end="84:50"><literal type="number" pos:start="84:50" pos:end="84:50">2</literal></expr></argument>, <argument pos:start="84:53" pos:end="84:77"><expr pos:start="84:53" pos:end="84:77"><name pos:start="84:53" pos:end="84:77">header_open_partition_key</name></expr></argument>, <argument pos:start="84:80" pos:end="84:80"><expr pos:start="84:80" pos:end="84:80"><literal type="number" pos:start="84:80" pos:end="84:80">1</literal></expr></argument>)</argument_list></call><operator pos:start="84:82" pos:end="84:82">)</operator> <operator pos:start="84:84" pos:end="84:84">&lt;</operator> <literal type="number" pos:start="84:86" pos:end="84:86">0</literal></expr>)</condition><block type="pseudo" pos:start="86:17" pos:end="86:27"><block_content pos:start="86:17" pos:end="86:27">

                <return pos:start="86:17" pos:end="86:27">return <expr pos:start="86:24" pos:end="86:26"><name pos:start="86:24" pos:end="86:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="88:13" pos:end="88:34"><expr pos:start="88:13" pos:end="88:33"><call pos:start="88:13" pos:end="88:33"><name pos:start="88:13" pos:end="88:30">mxf_write_klv_fill</name><argument_list pos:start="88:31" pos:end="88:33">(<argument pos:start="88:32" pos:end="88:32"><expr pos:start="88:32" pos:end="88:32"><name pos:start="88:32" pos:end="88:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="90:13" pos:end="90:45"><expr pos:start="90:13" pos:end="90:44"><call pos:start="90:13" pos:end="90:44"><name pos:start="90:13" pos:end="90:41">mxf_write_index_table_segment</name><argument_list pos:start="90:42" pos:end="90:44">(<argument pos:start="90:43" pos:end="90:43"><expr pos:start="90:43" pos:end="90:43"><name pos:start="90:43" pos:end="90:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="92:11" pos:end="186:13">else <block pos:start="92:16" pos:end="186:13">{<block_content pos:start="94:13" pos:end="186:13">

            <if_stmt pos:start="94:13" pos:end="96:27"><if pos:start="94:13" pos:end="96:27">if <condition pos:start="94:16" pos:end="94:87">(<expr pos:start="94:17" pos:end="94:86"><operator pos:start="94:17" pos:end="94:17">(</operator><name pos:start="94:18" pos:end="94:20">err</name> <operator pos:start="94:22" pos:end="94:22">=</operator> <call pos:start="94:24" pos:end="94:81"><name pos:start="94:24" pos:end="94:42">mxf_write_partition</name><argument_list pos:start="94:43" pos:end="94:81">(<argument pos:start="94:44" pos:end="94:44"><expr pos:start="94:44" pos:end="94:44"><name pos:start="94:44" pos:end="94:44">s</name></expr></argument>, <argument pos:start="94:47" pos:end="94:47"><expr pos:start="94:47" pos:end="94:47"><literal type="number" pos:start="94:47" pos:end="94:47">0</literal></expr></argument>, <argument pos:start="94:50" pos:end="94:50"><expr pos:start="94:50" pos:end="94:50"><literal type="number" pos:start="94:50" pos:end="94:50">0</literal></expr></argument>, <argument pos:start="94:53" pos:end="94:77"><expr pos:start="94:53" pos:end="94:77"><name pos:start="94:53" pos:end="94:77">header_open_partition_key</name></expr></argument>, <argument pos:start="94:80" pos:end="94:80"><expr pos:start="94:80" pos:end="94:80"><literal type="number" pos:start="94:80" pos:end="94:80">1</literal></expr></argument>)</argument_list></call><operator pos:start="94:82" pos:end="94:82">)</operator> <operator pos:start="94:84" pos:end="94:84">&lt;</operator> <literal type="number" pos:start="94:86" pos:end="94:86">0</literal></expr>)</condition><block type="pseudo" pos:start="96:17" pos:end="96:27"><block_content pos:start="96:17" pos:end="96:27">

                <return pos:start="96:17" pos:end="96:27">return <expr pos:start="96:24" pos:end="96:26"><name pos:start="96:24" pos:end="96:26">err</name></expr>;</return></block_content></block></if></if_stmt>


        <expr_stmt pos:start="99:9" pos:end="99:32"><expr pos:start="99:9" pos:end="99:31"><name pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:11">mxf</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:27">header_written</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <literal type="number" pos:start="99:31" pos:end="99:31">1</literal></expr>;</expr_stmt>




    <if_stmt pos:start="104:5" pos:end="186:13"><if pos:start="104:5" pos:end="186:13">if <condition pos:start="104:8" pos:end="104:23">(<expr pos:start="104:9" pos:end="104:22"><name pos:start="104:9" pos:end="104:17"><name pos:start="104:9" pos:end="104:10">st</name><operator pos:start="104:11" pos:end="104:12">-&gt;</operator><name pos:start="104:13" pos:end="104:17">index</name></name> <operator pos:start="104:19" pos:end="104:20">==</operator> <literal type="number" pos:start="104:22" pos:end="104:22">0</literal></expr>)</condition> <block pos:start="104:25" pos:end="186:13">{<block_content pos:start="106:9" pos:end="186:13">

        <if_stmt pos:start="106:9" pos:end="186:13"><if pos:start="106:9" pos:end="186:13">if <condition pos:start="106:12" pos:end="110:31">(<expr pos:start="106:13" pos:end="110:30"><operator pos:start="106:13" pos:end="106:13">!</operator><name pos:start="106:14" pos:end="106:38"><name pos:start="106:14" pos:end="106:16">mxf</name><operator pos:start="106:17" pos:end="106:18">-&gt;</operator><name pos:start="106:19" pos:end="106:38">edit_unit_byte_count</name></name> <operator pos:start="106:40" pos:end="106:41">&amp;&amp;</operator>

            <operator pos:start="108:13" pos:end="108:13">(</operator><operator pos:start="108:14" pos:end="108:14">!</operator><name pos:start="108:15" pos:end="108:35"><name pos:start="108:15" pos:end="108:17">mxf</name><operator pos:start="108:18" pos:end="108:19">-&gt;</operator><name pos:start="108:20" pos:end="108:35">edit_units_count</name></name> <operator pos:start="108:37" pos:end="108:38">||</operator> <name pos:start="108:40" pos:end="108:60"><name pos:start="108:40" pos:end="108:42">mxf</name><operator pos:start="108:43" pos:end="108:44">-&gt;</operator><name pos:start="108:45" pos:end="108:60">edit_units_count</name></name> <operator pos:start="108:62" pos:end="108:62">&gt;</operator> <name pos:start="108:64" pos:end="108:82">EDIT_UNITS_PER_BODY</name><operator pos:start="108:83" pos:end="108:83">)</operator> <operator pos:start="108:85" pos:end="108:86">&amp;&amp;</operator>

            <operator pos:start="110:13" pos:end="110:13">!</operator><operator pos:start="110:14" pos:end="110:14">(</operator><name pos:start="110:15" pos:end="110:22"><name pos:start="110:15" pos:end="110:16">ie</name><operator pos:start="110:17" pos:end="110:17">.</operator><name pos:start="110:18" pos:end="110:22">flags</name></name> <operator pos:start="110:24" pos:end="110:24">&amp;</operator> <literal type="number" pos:start="110:26" pos:end="110:29">0x33</literal><operator pos:start="110:30" pos:end="110:30">)</operator></expr>)</condition> <block pos:start="110:33" pos:end="186:13">{<block_content pos:start="112:13" pos:end="186:13"> <comment type="line" pos:start="110:35" pos:end="110:55">// I frame, Gop start</comment>

            <expr_stmt pos:start="112:13" pos:end="112:34"><expr pos:start="112:13" pos:end="112:33"><call pos:start="112:13" pos:end="112:33"><name pos:start="112:13" pos:end="112:30">mxf_write_klv_fill</name><argument_list pos:start="112:31" pos:end="112:33">(<argument pos:start="112:32" pos:end="112:32"><expr pos:start="112:32" pos:end="112:32"><name pos:start="112:32" pos:end="112:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="114:13" pos:end="116:27"><if pos:start="114:13" pos:end="116:27">if <condition pos:start="114:16" pos:end="114:80">(<expr pos:start="114:17" pos:end="114:79"><operator pos:start="114:17" pos:end="114:17">(</operator><name pos:start="114:18" pos:end="114:20">err</name> <operator pos:start="114:22" pos:end="114:22">=</operator> <call pos:start="114:24" pos:end="114:74"><name pos:start="114:24" pos:end="114:42">mxf_write_partition</name><argument_list pos:start="114:43" pos:end="114:74">(<argument pos:start="114:44" pos:end="114:44"><expr pos:start="114:44" pos:end="114:44"><name pos:start="114:44" pos:end="114:44">s</name></expr></argument>, <argument pos:start="114:47" pos:end="114:47"><expr pos:start="114:47" pos:end="114:47"><literal type="number" pos:start="114:47" pos:end="114:47">1</literal></expr></argument>, <argument pos:start="114:50" pos:end="114:50"><expr pos:start="114:50" pos:end="114:50"><literal type="number" pos:start="114:50" pos:end="114:50">2</literal></expr></argument>, <argument pos:start="114:53" pos:end="114:70"><expr pos:start="114:53" pos:end="114:70"><name pos:start="114:53" pos:end="114:70">body_partition_key</name></expr></argument>, <argument pos:start="114:73" pos:end="114:73"><expr pos:start="114:73" pos:end="114:73"><literal type="number" pos:start="114:73" pos:end="114:73">0</literal></expr></argument>)</argument_list></call><operator pos:start="114:75" pos:end="114:75">)</operator> <operator pos:start="114:77" pos:end="114:77">&lt;</operator> <literal type="number" pos:start="114:79" pos:end="114:79">0</literal></expr>)</condition><block type="pseudo" pos:start="116:17" pos:end="116:27"><block_content pos:start="116:17" pos:end="116:27">

                <return pos:start="116:17" pos:end="116:27">return <expr pos:start="116:24" pos:end="116:26"><name pos:start="116:24" pos:end="116:26">err</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="118:13" pos:end="118:34"><expr pos:start="118:13" pos:end="118:33"><call pos:start="118:13" pos:end="118:33"><name pos:start="118:13" pos:end="118:30">mxf_write_klv_fill</name><argument_list pos:start="118:31" pos:end="118:33">(<argument pos:start="118:32" pos:end="118:32"><expr pos:start="118:32" pos:end="118:32"><name pos:start="118:32" pos:end="118:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="120:13" pos:end="120:45"><expr pos:start="120:13" pos:end="120:44"><call pos:start="120:13" pos:end="120:44"><name pos:start="120:13" pos:end="120:41">mxf_write_index_table_segment</name><argument_list pos:start="120:42" pos:end="120:44">(<argument pos:start="120:43" pos:end="120:43"><expr pos:start="120:43" pos:end="120:43"><name pos:start="120:43" pos:end="120:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><call pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:26">mxf_write_klv_fill</name><argument_list pos:start="125:27" pos:end="125:29">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><name pos:start="125:28" pos:end="125:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:33"><expr pos:start="127:9" pos:end="127:32"><call pos:start="127:9" pos:end="127:32"><name pos:start="127:9" pos:end="127:29">mxf_write_system_item</name><argument_list pos:start="127:30" pos:end="127:32">(<argument pos:start="127:31" pos:end="127:31"><expr pos:start="127:31" pos:end="127:31"><name pos:start="127:31" pos:end="127:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="131:9" pos:end="186:13"><if pos:start="131:9" pos:end="144:5">if <condition pos:start="131:12" pos:end="131:39">(<expr pos:start="131:13" pos:end="131:38"><operator pos:start="131:13" pos:end="131:13">!</operator><name pos:start="131:14" pos:end="131:38"><name pos:start="131:14" pos:end="131:16">mxf</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:38">edit_unit_byte_count</name></name></expr>)</condition> <block pos:start="131:41" pos:end="144:5">{<block_content pos:start="133:13" pos:end="142:32">

            <expr_stmt pos:start="133:13" pos:end="133:80"><expr pos:start="133:13" pos:end="133:79"><name pos:start="133:13" pos:end="133:53"><name pos:start="133:13" pos:end="133:15">mxf</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:30">index_entries</name><index pos:start="133:31" pos:end="133:53">[<expr pos:start="133:32" pos:end="133:52"><name pos:start="133:32" pos:end="133:52"><name pos:start="133:32" pos:end="133:34">mxf</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:52">edit_units_count</name></name></expr>]</index></name><operator pos:start="133:54" pos:end="133:54">.</operator><name pos:start="133:55" pos:end="133:60">offset</name> <operator pos:start="133:62" pos:end="133:62">=</operator> <name pos:start="133:64" pos:end="133:79"><name pos:start="133:64" pos:end="133:66">mxf</name><operator pos:start="133:67" pos:end="133:68">-&gt;</operator><name pos:start="133:69" pos:end="133:79">body_offset</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:71"><expr pos:start="135:13" pos:end="135:70"><name pos:start="135:13" pos:end="135:53"><name pos:start="135:13" pos:end="135:15">mxf</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:30">index_entries</name><index pos:start="135:31" pos:end="135:53">[<expr pos:start="135:32" pos:end="135:52"><name pos:start="135:32" pos:end="135:52"><name pos:start="135:32" pos:end="135:34">mxf</name><operator pos:start="135:35" pos:end="135:36">-&gt;</operator><name pos:start="135:37" pos:end="135:52">edit_units_count</name></name></expr>]</index></name><operator pos:start="135:54" pos:end="135:54">.</operator><name pos:start="135:55" pos:end="135:59">flags</name> <operator pos:start="135:61" pos:end="135:61">=</operator> <name pos:start="135:63" pos:end="135:70"><name pos:start="135:63" pos:end="135:64">ie</name><operator pos:start="135:65" pos:end="135:65">.</operator><name pos:start="135:66" pos:end="135:70">flags</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:85"><expr pos:start="137:13" pos:end="137:84"><name pos:start="137:13" pos:end="137:53"><name pos:start="137:13" pos:end="137:15">mxf</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:30">index_entries</name><index pos:start="137:31" pos:end="137:53">[<expr pos:start="137:32" pos:end="137:52"><name pos:start="137:32" pos:end="137:52"><name pos:start="137:32" pos:end="137:34">mxf</name><operator pos:start="137:35" pos:end="137:36">-&gt;</operator><name pos:start="137:37" pos:end="137:52">edit_units_count</name></name></expr>]</index></name><operator pos:start="137:54" pos:end="137:54">.</operator><name pos:start="137:55" pos:end="137:66">temporal_ref</name> <operator pos:start="137:68" pos:end="137:68">=</operator> <name pos:start="137:70" pos:end="137:84"><name pos:start="137:70" pos:end="137:71">ie</name><operator pos:start="137:72" pos:end="137:72">.</operator><name pos:start="137:73" pos:end="137:84">temporal_ref</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:41"><expr pos:start="139:13" pos:end="139:40"><name pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:15">mxf</name><operator pos:start="139:16" pos:end="139:17">-&gt;</operator><name pos:start="139:18" pos:end="139:28">body_offset</name></name> <operator pos:start="139:30" pos:end="139:31">+=</operator> <name pos:start="139:33" pos:end="139:40">KAG_SIZE</name></expr>;</expr_stmt> <comment type="line" pos:start="139:43" pos:end="139:67">// size of system element</comment>


        <expr_stmt pos:start="142:9" pos:end="142:32"><expr pos:start="142:9" pos:end="142:31"><name pos:start="142:9" pos:end="142:29"><name pos:start="142:9" pos:end="142:11">mxf</name><operator pos:start="142:12" pos:end="142:13">-&gt;</operator><name pos:start="142:14" pos:end="142:29">edit_units_count</name></name><operator pos:start="142:30" pos:end="142:31">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="144:7" pos:end="186:13">else if <condition pos:start="144:15" pos:end="144:60">(<expr pos:start="144:16" pos:end="144:59"><operator pos:start="144:16" pos:end="144:16">!</operator><name pos:start="144:17" pos:end="144:41"><name pos:start="144:17" pos:end="144:19">mxf</name><operator pos:start="144:20" pos:end="144:21">-&gt;</operator><name pos:start="144:22" pos:end="144:41">edit_unit_byte_count</name></name> <operator pos:start="144:43" pos:end="144:44">&amp;&amp;</operator> <name pos:start="144:46" pos:end="144:54"><name pos:start="144:46" pos:end="144:47">st</name><operator pos:start="144:48" pos:end="144:49">-&gt;</operator><name pos:start="144:50" pos:end="144:54">index</name></name> <operator pos:start="144:56" pos:end="144:57">==</operator> <literal type="number" pos:start="144:59" pos:end="144:59">1</literal></expr>)</condition> <block pos:start="144:62" pos:end="186:13">{<block_content pos:start="150:9" pos:end="186:13">





        <expr_stmt pos:start="150:9" pos:end="152:82"><expr pos:start="150:9" pos:end="152:81"><name pos:start="150:9" pos:end="150:51"><name pos:start="150:9" pos:end="150:11">mxf</name><operator pos:start="150:12" pos:end="150:13">-&gt;</operator><name pos:start="150:14" pos:end="150:26">index_entries</name><index pos:start="150:27" pos:end="150:51">[<expr pos:start="150:28" pos:end="150:50"><name pos:start="150:28" pos:end="150:48"><name pos:start="150:28" pos:end="150:30">mxf</name><operator pos:start="150:31" pos:end="150:32">-&gt;</operator><name pos:start="150:33" pos:end="150:48">edit_units_count</name></name><operator pos:start="150:49" pos:end="150:49">-</operator><literal type="number" pos:start="150:50" pos:end="150:50">1</literal></expr>]</index></name><operator pos:start="150:52" pos:end="150:52">.</operator><name pos:start="150:53" pos:end="150:64">slice_offset</name> <operator pos:start="150:66" pos:end="150:66">=</operator>

            <name pos:start="152:13" pos:end="152:28"><name pos:start="152:13" pos:end="152:15">mxf</name><operator pos:start="152:16" pos:end="152:17">-&gt;</operator><name pos:start="152:18" pos:end="152:28">body_offset</name></name> <operator pos:start="152:30" pos:end="152:30">-</operator> <name pos:start="152:32" pos:end="152:74"><name pos:start="152:32" pos:end="152:34">mxf</name><operator pos:start="152:35" pos:end="152:36">-&gt;</operator><name pos:start="152:37" pos:end="152:49">index_entries</name><index pos:start="152:50" pos:end="152:74">[<expr pos:start="152:51" pos:end="152:73"><name pos:start="152:51" pos:end="152:71"><name pos:start="152:51" pos:end="152:53">mxf</name><operator pos:start="152:54" pos:end="152:55">-&gt;</operator><name pos:start="152:56" pos:end="152:71">edit_units_count</name></name><operator pos:start="152:72" pos:end="152:72">-</operator><literal type="number" pos:start="152:73" pos:end="152:73">1</literal></expr>]</index></name><operator pos:start="152:75" pos:end="152:75">.</operator><name pos:start="152:76" pos:end="152:81">offset</name></expr>;</expr_stmt>




    <expr_stmt pos:start="157:5" pos:end="157:26"><expr pos:start="157:5" pos:end="157:25"><call pos:start="157:5" pos:end="157:25"><name pos:start="157:5" pos:end="157:22">mxf_write_klv_fill</name><argument_list pos:start="157:23" pos:end="157:25">(<argument pos:start="157:24" pos:end="157:24"><expr pos:start="157:24" pos:end="157:24"><name pos:start="157:24" pos:end="157:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:54"><expr pos:start="159:5" pos:end="159:53"><call pos:start="159:5" pos:end="159:53"><name pos:start="159:5" pos:end="159:14">avio_write</name><argument_list pos:start="159:15" pos:end="159:53">(<argument pos:start="159:16" pos:end="159:17"><expr pos:start="159:16" pos:end="159:17"><name pos:start="159:16" pos:end="159:17">pb</name></expr></argument>, <argument pos:start="159:20" pos:end="159:48"><expr pos:start="159:20" pos:end="159:48"><name pos:start="159:20" pos:end="159:48"><name pos:start="159:20" pos:end="159:21">sc</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:48">track_essence_element_key</name></name></expr></argument>, <argument pos:start="159:51" pos:end="159:52"><expr pos:start="159:51" pos:end="159:52"><literal type="number" pos:start="159:51" pos:end="159:52">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="159:56" pos:end="159:67">// write key</comment>

    <if_stmt pos:start="161:5" pos:end="186:13"><if pos:start="161:5" pos:end="171:5">if <condition pos:start="161:8" pos:end="161:40">(<expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:18"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:18">oformat</name></name> <operator pos:start="161:20" pos:end="161:21">==</operator> <operator pos:start="161:23" pos:end="161:23">&amp;</operator><name pos:start="161:24" pos:end="161:39">ff_mxf_d10_muxer</name></expr>)</condition> <block pos:start="161:42" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:51">

        <if_stmt pos:start="163:9" pos:end="169:51"><if pos:start="163:9" pos:end="165:51">if <condition pos:start="163:12" pos:end="163:56">(<expr pos:start="163:13" pos:end="163:55"><name pos:start="163:13" pos:end="163:33"><name pos:start="163:13" pos:end="163:14">st</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:21">codec</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:33">codec_type</name></name> <operator pos:start="163:35" pos:end="163:36">==</operator> <name pos:start="163:38" pos:end="163:55">AVMEDIA_TYPE_VIDEO</name></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:51"><block_content pos:start="165:13" pos:end="165:51">

            <expr_stmt pos:start="165:13" pos:end="165:51"><expr pos:start="165:13" pos:end="165:50"><call pos:start="165:13" pos:end="165:50"><name pos:start="165:13" pos:end="165:38">mxf_write_d10_video_packet</name><argument_list pos:start="165:39" pos:end="165:50">(<argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><name pos:start="165:40" pos:end="165:40">s</name></expr></argument>, <argument pos:start="165:43" pos:end="165:44"><expr pos:start="165:43" pos:end="165:44"><name pos:start="165:43" pos:end="165:44">st</name></expr></argument>, <argument pos:start="165:47" pos:end="165:49"><expr pos:start="165:47" pos:end="165:49"><name pos:start="165:47" pos:end="165:49">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="167:9" pos:end="169:51">else<block type="pseudo" pos:start="169:13" pos:end="169:51"><block_content pos:start="169:13" pos:end="169:51">

            <expr_stmt pos:start="169:13" pos:end="169:51"><expr pos:start="169:13" pos:end="169:50"><call pos:start="169:13" pos:end="169:50"><name pos:start="169:13" pos:end="169:38">mxf_write_d10_audio_packet</name><argument_list pos:start="169:39" pos:end="169:50">(<argument pos:start="169:40" pos:end="169:40"><expr pos:start="169:40" pos:end="169:40"><name pos:start="169:40" pos:end="169:40">s</name></expr></argument>, <argument pos:start="169:43" pos:end="169:44"><expr pos:start="169:43" pos:end="169:44"><name pos:start="169:43" pos:end="169:44">st</name></expr></argument>, <argument pos:start="169:47" pos:end="169:49"><expr pos:start="169:47" pos:end="169:49"><name pos:start="169:47" pos:end="169:49">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="171:7" pos:end="186:13">else <block pos:start="171:12" pos:end="186:13">{<block_content pos:start="173:9" pos:end="186:13">

        <expr_stmt pos:start="173:9" pos:end="173:46"><expr pos:start="173:9" pos:end="173:45"><call pos:start="173:9" pos:end="173:45"><name pos:start="173:9" pos:end="173:30">klv_encode_ber4_length</name><argument_list pos:start="173:31" pos:end="173:45">(<argument pos:start="173:32" pos:end="173:33"><expr pos:start="173:32" pos:end="173:33"><name pos:start="173:32" pos:end="173:33">pb</name></expr></argument>, <argument pos:start="173:36" pos:end="173:44"><expr pos:start="173:36" pos:end="173:44"><name pos:start="173:36" pos:end="173:44"><name pos:start="173:36" pos:end="173:38">pkt</name><operator pos:start="173:39" pos:end="173:40">-&gt;</operator><name pos:start="173:41" pos:end="173:44">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="173:48" pos:end="173:62">// write length</comment>

        <expr_stmt pos:start="175:9" pos:end="175:45"><expr pos:start="175:9" pos:end="175:44"><call pos:start="175:9" pos:end="175:44"><name pos:start="175:9" pos:end="175:18">avio_write</name><argument_list pos:start="175:19" pos:end="175:44">(<argument pos:start="175:20" pos:end="175:21"><expr pos:start="175:20" pos:end="175:21"><name pos:start="175:20" pos:end="175:21">pb</name></expr></argument>, <argument pos:start="175:24" pos:end="175:32"><expr pos:start="175:24" pos:end="175:32"><name pos:start="175:24" pos:end="175:32"><name pos:start="175:24" pos:end="175:26">pkt</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:32">data</name></name></expr></argument>, <argument pos:start="175:35" pos:end="175:43"><expr pos:start="175:35" pos:end="175:43"><name pos:start="175:35" pos:end="175:43"><name pos:start="175:35" pos:end="175:37">pkt</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:75"><expr pos:start="177:9" pos:end="177:74"><name pos:start="177:9" pos:end="177:24"><name pos:start="177:9" pos:end="177:11">mxf</name><operator pos:start="177:12" pos:end="177:13">-&gt;</operator><name pos:start="177:14" pos:end="177:24">body_offset</name></name> <operator pos:start="177:26" pos:end="177:27">+=</operator> <literal type="number" pos:start="177:29" pos:end="177:31">16</literal><operator pos:start="177:31" pos:end="177:31">+</operator><literal type="number" pos:start="177:32" pos:end="177:33">4</literal><operator pos:start="177:33" pos:end="177:33">+</operator><name pos:start="177:34" pos:end="177:42"><name pos:start="177:34" pos:end="177:36">pkt</name><operator pos:start="177:37" pos:end="177:38">-&gt;</operator><name pos:start="177:39" pos:end="177:42">size</name></name> <operator pos:start="177:44" pos:end="177:44">+</operator> <call pos:start="177:46" pos:end="177:74"><name pos:start="177:46" pos:end="177:58">klv_fill_size</name><argument_list pos:start="177:59" pos:end="177:74">(<argument pos:start="177:60" pos:end="177:73"><expr pos:start="177:60" pos:end="177:73"><literal type="number" pos:start="177:60" pos:end="177:62">16</literal><operator pos:start="177:62" pos:end="177:62">+</operator><literal type="number" pos:start="177:63" pos:end="177:64">4</literal><operator pos:start="177:64" pos:end="177:64">+</operator><name pos:start="177:65" pos:end="177:73"><name pos:start="177:65" pos:end="177:67">pkt</name><operator pos:start="177:68" pos:end="177:69">-&gt;</operator><name pos:start="177:70" pos:end="177:73">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="182:5" pos:end="182:19"><expr pos:start="182:5" pos:end="182:18"><call pos:start="182:5" pos:end="182:18"><name pos:start="182:5" pos:end="182:14">avio_flush</name><argument_list pos:start="182:15" pos:end="182:18">(<argument pos:start="182:16" pos:end="182:17"><expr pos:start="182:16" pos:end="182:17"><name pos:start="182:16" pos:end="182:17">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="186:5" pos:end="186:13">return <expr pos:start="186:12" pos:end="186:12"><literal type="number" pos:start="186:12" pos:end="186:12">0</literal></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
