<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13315.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">m48t59_t</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:21">m48t59_init</name> <parameter_list pos:start="1:23" pos:end="5:32">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:31">qemu_irq</name></type> <name pos:start="1:33" pos:end="1:35">IRQ</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:64"><decl pos:start="1:38" pos:end="1:64"><type pos:start="1:38" pos:end="1:64"><name pos:start="1:38" pos:end="1:55">target_phys_addr_t</name></type> <name pos:start="1:57" pos:end="1:64">mem_base</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:39"><decl pos:start="3:24" pos:end="3:39"><type pos:start="3:24" pos:end="3:39"><name pos:start="3:24" pos:end="3:31">uint32_t</name></type> <name pos:start="3:33" pos:end="3:39">io_base</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:49">uint16_t</name></type> <name pos:start="3:51" pos:end="3:54">size</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:31"><decl pos:start="5:24" pos:end="5:31"><type pos:start="5:24" pos:end="5:31"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:31">type</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="53:1">{<block_content pos:start="9:5" pos:end="51:21">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">SysBusDevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:21">M48t59SysBusState</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:24">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:7">dev</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:37"><name pos:start="17:11" pos:end="17:21">qdev_create</name><argument_list pos:start="17:22" pos:end="17:37">(<argument pos:start="17:23" pos:end="17:26"><expr pos:start="17:23" pos:end="17:26"><name pos:start="17:23" pos:end="17:26">NULL</name></expr></argument>, <argument pos:start="17:29" pos:end="17:36"><expr pos:start="17:29" pos:end="17:36"><literal type="string" pos:start="17:29" pos:end="17:36">"m48t59"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><call pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:24">qdev_prop_set_uint32</name><argument_list pos:start="19:25" pos:end="19:43">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">dev</name></expr></argument>, <argument pos:start="19:31" pos:end="19:36"><expr pos:start="19:31" pos:end="19:36"><literal type="string" pos:start="19:31" pos:end="19:36">"type"</literal></expr></argument>, <argument pos:start="19:39" pos:end="19:42"><expr pos:start="19:39" pos:end="19:42"><name pos:start="19:39" pos:end="19:42">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:44"><expr pos:start="21:5" pos:end="21:43"><call pos:start="21:5" pos:end="21:43"><name pos:start="21:5" pos:end="21:24">qdev_prop_set_uint32</name><argument_list pos:start="21:25" pos:end="21:43">(<argument pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:28">dev</name></expr></argument>, <argument pos:start="21:31" pos:end="21:36"><expr pos:start="21:31" pos:end="21:36"><literal type="string" pos:start="21:31" pos:end="21:36">"size"</literal></expr></argument>, <argument pos:start="21:39" pos:end="21:42"><expr pos:start="21:39" pos:end="21:42"><name pos:start="21:39" pos:end="21:42">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:50"><expr pos:start="23:5" pos:end="23:49"><call pos:start="23:5" pos:end="23:49"><name pos:start="23:5" pos:end="23:24">qdev_prop_set_uint32</name><argument_list pos:start="23:25" pos:end="23:49">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">dev</name></expr></argument>, <argument pos:start="23:31" pos:end="23:39"><expr pos:start="23:31" pos:end="23:39"><literal type="string" pos:start="23:31" pos:end="23:39">"io_base"</literal></expr></argument>, <argument pos:start="23:42" pos:end="23:48"><expr pos:start="23:42" pos:end="23:48"><name pos:start="23:42" pos:end="23:48">io_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:19"><expr pos:start="25:5" pos:end="25:18"><call pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:13">qdev_init</name><argument_list pos:start="25:14" pos:end="25:18">(<argument pos:start="25:15" pos:end="25:17"><expr pos:start="25:15" pos:end="25:17"><name pos:start="25:15" pos:end="25:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:24">sysbus_from_qdev</name><argument_list pos:start="27:25" pos:end="27:29">(<argument pos:start="27:26" pos:end="27:28"><expr pos:start="27:26" pos:end="27:28"><name pos:start="27:26" pos:end="27:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><call pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:22">sysbus_connect_irq</name><argument_list pos:start="29:23" pos:end="29:33">(<argument pos:start="29:24" pos:end="29:24"><expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">s</name></expr></argument>, <argument pos:start="29:27" pos:end="29:27"><expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">IRQ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:21">(<expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:15">io_base</name> <operator pos:start="31:17" pos:end="31:18">!=</operator> <literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr>)</condition> <block pos:start="31:23" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:65">

        <expr_stmt pos:start="33:9" pos:end="33:63"><expr pos:start="33:9" pos:end="33:62"><call pos:start="33:9" pos:end="33:62"><name pos:start="33:9" pos:end="33:28">register_ioport_read</name><argument_list pos:start="33:29" pos:end="33:62">(<argument pos:start="33:30" pos:end="33:36"><expr pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:36">io_base</name></expr></argument>, <argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><literal type="number" pos:start="33:39" pos:end="33:42">0x04</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">1</literal></expr></argument>, <argument pos:start="33:48" pos:end="33:58"><expr pos:start="33:48" pos:end="33:58"><name pos:start="33:48" pos:end="33:58">NVRAM_readb</name></expr></argument>, <argument pos:start="33:61" pos:end="33:61"><expr pos:start="33:61" pos:end="33:61"><name pos:start="33:61" pos:end="33:61">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:65"><expr pos:start="35:9" pos:end="35:64"><call pos:start="35:9" pos:end="35:64"><name pos:start="35:9" pos:end="35:29">register_ioport_write</name><argument_list pos:start="35:30" pos:end="35:64">(<argument pos:start="35:31" pos:end="35:37"><expr pos:start="35:31" pos:end="35:37"><name pos:start="35:31" pos:end="35:37">io_base</name></expr></argument>, <argument pos:start="35:40" pos:end="35:43"><expr pos:start="35:40" pos:end="35:43"><literal type="number" pos:start="35:40" pos:end="35:43">0x04</literal></expr></argument>, <argument pos:start="35:46" pos:end="35:46"><expr pos:start="35:46" pos:end="35:46"><literal type="number" pos:start="35:46" pos:end="35:46">1</literal></expr></argument>, <argument pos:start="35:49" pos:end="35:60"><expr pos:start="35:49" pos:end="35:60"><name pos:start="35:49" pos:end="35:60">NVRAM_writeb</name></expr></argument>, <argument pos:start="35:63" pos:end="35:63"><expr pos:start="35:63" pos:end="35:63"><name pos:start="35:63" pos:end="35:63">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:22">(<expr pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:16">mem_base</name> <operator pos:start="39:18" pos:end="39:19">!=</operator> <literal type="number" pos:start="39:21" pos:end="39:21">0</literal></expr>)</condition> <block pos:start="39:24" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:40">

        <expr_stmt pos:start="41:9" pos:end="41:40"><expr pos:start="41:9" pos:end="41:39"><call pos:start="41:9" pos:end="41:39"><name pos:start="41:9" pos:end="41:23">sysbus_mmio_map</name><argument_list pos:start="41:24" pos:end="41:39">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">s</name></expr></argument>, <argument pos:start="41:28" pos:end="41:28"><expr pos:start="41:28" pos:end="41:28"><literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr></argument>, <argument pos:start="41:31" pos:end="41:38"><expr pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:38">mem_base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:5">d</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <call pos:start="47:9" pos:end="47:41"><name pos:start="47:9" pos:end="47:19">FROM_SYSBUS</name><argument_list pos:start="47:20" pos:end="47:41">(<argument pos:start="47:21" pos:end="47:37"><expr pos:start="47:21" pos:end="47:37"><name pos:start="47:21" pos:end="47:37">M48t59SysBusState</name></expr></argument>, <argument pos:start="47:40" pos:end="47:40"><expr pos:start="47:40" pos:end="47:40"><name pos:start="47:40" pos:end="47:40">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:21">return <expr pos:start="51:12" pos:end="51:20"><operator pos:start="51:12" pos:end="51:12">&amp;</operator><name pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:13">d</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:20">state</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
