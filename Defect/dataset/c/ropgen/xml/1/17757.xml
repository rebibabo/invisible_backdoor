<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17757.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:15">bdrv_commit</name><parameter_list pos:start="1:16" pos:end="1:37">(<parameter pos:start="1:17" pos:end="1:36"><decl pos:start="1:17" pos:end="1:36"><type pos:start="1:17" pos:end="1:34"><name pos:start="1:17" pos:end="1:32">BlockDriverState</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:36">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="139:1">{<block_content pos:start="5:5" pos:end="137:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">drv</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:30"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">drv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:18">sector</name></decl>, <decl pos:start="7:21" pos:end="7:33"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:33">total_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">n</name></decl>, <decl pos:start="9:12" pos:end="9:13"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:13">ro</name></decl>, <decl pos:start="9:16" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:25">open_flags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:23"><name pos:start="15:10" pos:end="15:17">filename</name><index pos:start="15:18" pos:end="15:23">[<expr pos:start="15:19" pos:end="15:22"><literal type="number" pos:start="15:19" pos:end="15:22">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:26"><if pos:start="19:5" pos:end="21:26">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">drv</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:26"><block_content pos:start="21:9" pos:end="21:26">

        <return pos:start="21:9" pos:end="21:26">return <expr pos:start="21:16" pos:end="21:25"><operator pos:start="21:16" pos:end="21:16">-</operator><name pos:start="21:17" pos:end="21:25">ENOMEDIUM</name></expr>;</return></block_content></block></if></if_stmt>

    

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:11">bs</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">backing_hd</name></name></expr>)</condition> <block pos:start="25:26" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:24">

        <return pos:start="27:9" pos:end="27:24">return <expr pos:start="27:16" pos:end="27:23"><operator pos:start="27:16" pos:end="27:16">-</operator><name pos:start="27:17" pos:end="27:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:55">(<expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">bdrv_in_use</name><argument_list pos:start="33:20" pos:end="33:23">(<argument pos:start="33:21" pos:end="33:22"><expr pos:start="33:21" pos:end="33:22"><name pos:start="33:21" pos:end="33:22">bs</name></expr></argument>)</argument_list></call> <operator pos:start="33:25" pos:end="33:26">||</operator> <call pos:start="33:28" pos:end="33:54"><name pos:start="33:28" pos:end="33:38">bdrv_in_use</name><argument_list pos:start="33:39" pos:end="33:54">(<argument pos:start="33:40" pos:end="33:53"><expr pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:53"><name pos:start="33:40" pos:end="33:41">bs</name><operator pos:start="33:42" pos:end="33:43">-&gt;</operator><name pos:start="33:44" pos:end="33:53">backing_hd</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:57" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:22">

        <return pos:start="35:9" pos:end="35:22">return <expr pos:start="35:16" pos:end="35:21"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:21">EBUSY</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:6">ro</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <name pos:start="41:10" pos:end="41:34"><name pos:start="41:10" pos:end="41:11">bs</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">backing_hd</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:34">read_only</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:66"><expr pos:start="43:5" pos:end="43:65"><call pos:start="43:5" pos:end="43:65"><name pos:start="43:5" pos:end="43:11">strncpy</name><argument_list pos:start="43:12" pos:end="43:65">(<argument pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">filename</name></expr></argument>, <argument pos:start="43:23" pos:end="43:46"><expr pos:start="43:23" pos:end="43:46"><name pos:start="43:23" pos:end="43:46"><name pos:start="43:23" pos:end="43:24">bs</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:36">backing_hd</name><operator pos:start="43:37" pos:end="43:38">-&gt;</operator><name pos:start="43:39" pos:end="43:46">filename</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:64"><expr pos:start="43:49" pos:end="43:64"><sizeof pos:start="43:49" pos:end="43:64">sizeof<argument_list pos:start="43:55" pos:end="43:64">(<argument pos:start="43:56" pos:end="43:63"><expr pos:start="43:56" pos:end="43:63"><name pos:start="43:56" pos:end="43:63">filename</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:14">open_flags</name> <operator pos:start="45:16" pos:end="45:16">=</operator>  <name pos:start="45:19" pos:end="45:44"><name pos:start="45:19" pos:end="45:20">bs</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:32">backing_hd</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:44">open_flags</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="57:5"><if pos:start="49:5" pos:end="57:5">if <condition pos:start="49:8" pos:end="49:11">(<expr pos:start="49:9" pos:end="49:10"><name pos:start="49:9" pos:end="49:10">ro</name></expr>)</condition> <block pos:start="49:13" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:9">

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:72">(<expr pos:start="51:13" pos:end="51:71"><call pos:start="51:13" pos:end="51:71"><name pos:start="51:13" pos:end="51:23">bdrv_reopen</name><argument_list pos:start="51:24" pos:end="51:71">(<argument pos:start="51:25" pos:end="51:38"><expr pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:26">bs</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:38">backing_hd</name></name></expr></argument>, <argument pos:start="51:41" pos:end="51:64"><expr pos:start="51:41" pos:end="51:64"><name pos:start="51:41" pos:end="51:50">open_flags</name> <operator pos:start="51:52" pos:end="51:52">|</operator> <name pos:start="51:54" pos:end="51:64">BDRV_O_RDWR</name></expr></argument>, <argument pos:start="51:67" pos:end="51:70"><expr pos:start="51:67" pos:end="51:70"><name pos:start="51:67" pos:end="51:70">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:74" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:27">

            <return pos:start="53:13" pos:end="53:27">return <expr pos:start="53:20" pos:end="53:26"><operator pos:start="53:20" pos:end="53:20">-</operator><name pos:start="53:21" pos:end="53:26">EACCES</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:59"><expr pos:start="61:5" pos:end="61:58"><name pos:start="61:5" pos:end="61:17">total_sectors</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:38"><name pos:start="61:21" pos:end="61:34">bdrv_getlength</name><argument_list pos:start="61:35" pos:end="61:38">(<argument pos:start="61:36" pos:end="61:37"><expr pos:start="61:36" pos:end="61:37"><name pos:start="61:36" pos:end="61:37">bs</name></expr></argument>)</argument_list></call> <operator pos:start="61:40" pos:end="61:41">&gt;&gt;</operator> <name pos:start="61:43" pos:end="61:58">BDRV_SECTOR_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:58"><expr pos:start="63:5" pos:end="63:57"><name pos:start="63:5" pos:end="63:7">buf</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:57"><name pos:start="63:11" pos:end="63:18">g_malloc</name><argument_list pos:start="63:19" pos:end="63:57">(<argument pos:start="63:20" pos:end="63:56"><expr pos:start="63:20" pos:end="63:56"><name pos:start="63:20" pos:end="63:37">COMMIT_BUF_SECTORS</name> <operator pos:start="63:39" pos:end="63:39">*</operator> <name pos:start="63:41" pos:end="63:56">BDRV_SECTOR_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="67:5" pos:end="93:5">for <control pos:start="67:9" pos:end="67:57">(<init pos:start="67:10" pos:end="67:20"><expr pos:start="67:10" pos:end="67:19"><name pos:start="67:10" pos:end="67:15">sector</name> <operator pos:start="67:17" pos:end="67:17">=</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>;</init> <condition pos:start="67:22" pos:end="67:44"><expr pos:start="67:22" pos:end="67:43"><name pos:start="67:22" pos:end="67:27">sector</name> <operator pos:start="67:29" pos:end="67:29">&lt;</operator> <name pos:start="67:31" pos:end="67:43">total_sectors</name></expr>;</condition> <incr pos:start="67:46" pos:end="67:56"><expr pos:start="67:46" pos:end="67:56"><name pos:start="67:46" pos:end="67:51">sector</name> <operator pos:start="67:53" pos:end="67:54">+=</operator> <name pos:start="67:56" pos:end="67:56">n</name></expr></incr>)</control> <block pos:start="67:59" pos:end="93:5">{<block_content pos:start="69:9" pos:end="91:9">

        <if_stmt pos:start="69:9" pos:end="91:9"><if pos:start="69:9" pos:end="91:9">if <condition pos:start="69:12" pos:end="69:66">(<expr pos:start="69:13" pos:end="69:65"><call pos:start="69:13" pos:end="69:65"><name pos:start="69:13" pos:end="69:29">bdrv_is_allocated</name><argument_list pos:start="69:30" pos:end="69:65">(<argument pos:start="69:31" pos:end="69:32"><expr pos:start="69:31" pos:end="69:32"><name pos:start="69:31" pos:end="69:32">bs</name></expr></argument>, <argument pos:start="69:35" pos:end="69:40"><expr pos:start="69:35" pos:end="69:40"><name pos:start="69:35" pos:end="69:40">sector</name></expr></argument>, <argument pos:start="69:43" pos:end="69:60"><expr pos:start="69:43" pos:end="69:60"><name pos:start="69:43" pos:end="69:60">COMMIT_BUF_SECTORS</name></expr></argument>, <argument pos:start="69:63" pos:end="69:64"><expr pos:start="69:63" pos:end="69:64"><operator pos:start="69:63" pos:end="69:63">&amp;</operator><name pos:start="69:64" pos:end="69:64">n</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:68" pos:end="91:9">{<block_content pos:start="73:13" pos:end="89:13">



            <if_stmt pos:start="73:13" pos:end="79:13"><if pos:start="73:13" pos:end="79:13">if <condition pos:start="73:16" pos:end="73:51">(<expr pos:start="73:17" pos:end="73:50"><call pos:start="73:17" pos:end="73:45"><name pos:start="73:17" pos:end="73:25">bdrv_read</name><argument_list pos:start="73:26" pos:end="73:45">(<argument pos:start="73:27" pos:end="73:28"><expr pos:start="73:27" pos:end="73:28"><name pos:start="73:27" pos:end="73:28">bs</name></expr></argument>, <argument pos:start="73:31" pos:end="73:36"><expr pos:start="73:31" pos:end="73:36"><name pos:start="73:31" pos:end="73:36">sector</name></expr></argument>, <argument pos:start="73:39" pos:end="73:41"><expr pos:start="73:39" pos:end="73:41"><name pos:start="73:39" pos:end="73:41">buf</name></expr></argument>, <argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">n</name></expr></argument>)</argument_list></call> <operator pos:start="73:47" pos:end="73:48">!=</operator> <literal type="number" pos:start="73:50" pos:end="73:50">0</literal></expr>)</condition> <block pos:start="73:53" pos:end="79:13">{<block_content pos:start="75:17" pos:end="77:32">

                <expr_stmt pos:start="75:17" pos:end="75:27"><expr pos:start="75:17" pos:end="75:26"><name pos:start="75:17" pos:end="75:19">ret</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <operator pos:start="75:23" pos:end="75:23">-</operator><name pos:start="75:24" pos:end="75:26">EIO</name></expr>;</expr_stmt>

                <goto pos:start="77:17" pos:end="77:32">goto <name pos:start="77:22" pos:end="77:31">ro_cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:64">(<expr pos:start="83:17" pos:end="83:63"><call pos:start="83:17" pos:end="83:58"><name pos:start="83:17" pos:end="83:26">bdrv_write</name><argument_list pos:start="83:27" pos:end="83:58">(<argument pos:start="83:28" pos:end="83:41"><expr pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:41"><name pos:start="83:28" pos:end="83:29">bs</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:41">backing_hd</name></name></expr></argument>, <argument pos:start="83:44" pos:end="83:49"><expr pos:start="83:44" pos:end="83:49"><name pos:start="83:44" pos:end="83:49">sector</name></expr></argument>, <argument pos:start="83:52" pos:end="83:54"><expr pos:start="83:52" pos:end="83:54"><name pos:start="83:52" pos:end="83:54">buf</name></expr></argument>, <argument pos:start="83:57" pos:end="83:57"><expr pos:start="83:57" pos:end="83:57"><name pos:start="83:57" pos:end="83:57">n</name></expr></argument>)</argument_list></call> <operator pos:start="83:60" pos:end="83:61">!=</operator> <literal type="number" pos:start="83:63" pos:end="83:63">0</literal></expr>)</condition> <block pos:start="83:66" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:32">

                <expr_stmt pos:start="85:17" pos:end="85:27"><expr pos:start="85:17" pos:end="85:26"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">-</operator><name pos:start="85:24" pos:end="85:26">EIO</name></expr>;</expr_stmt>

                <goto pos:start="87:17" pos:end="87:32">goto <name pos:start="87:22" pos:end="87:31">ro_cleanup</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="97:5" pos:end="103:5"><if pos:start="97:5" pos:end="103:5">if <condition pos:start="97:8" pos:end="97:29">(<expr pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:11">drv</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:28">bdrv_make_empty</name></name></expr>)</condition> <block pos:start="97:31" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:23">

        <expr_stmt pos:start="99:9" pos:end="99:39"><expr pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:38"><name pos:start="99:15" pos:end="99:34"><name pos:start="99:15" pos:end="99:17">drv</name><operator pos:start="99:18" pos:end="99:19">-&gt;</operator><name pos:start="99:20" pos:end="99:34">bdrv_make_empty</name></name><argument_list pos:start="99:35" pos:end="99:38">(<argument pos:start="99:36" pos:end="99:37"><expr pos:start="99:36" pos:end="99:37"><name pos:start="99:36" pos:end="99:37">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><call pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:18">bdrv_flush</name><argument_list pos:start="101:19" pos:end="101:22">(<argument pos:start="101:20" pos:end="101:21"><expr pos:start="101:20" pos:end="101:21"><name pos:start="101:20" pos:end="101:21">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="113:7">/*

     * Make sure all data we wrote to the backing device is actually

     * stable on disk.

     */</comment>

    <if_stmt pos:start="115:5" pos:end="117:35"><if pos:start="115:5" pos:end="117:35">if <condition pos:start="115:8" pos:end="115:23">(<expr pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:22"><name pos:start="115:9" pos:end="115:10">bs</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:22">backing_hd</name></name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:35"><block_content pos:start="117:9" pos:end="117:35">

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><call pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:18">bdrv_flush</name><argument_list pos:start="117:19" pos:end="117:34">(<argument pos:start="117:20" pos:end="117:33"><expr pos:start="117:20" pos:end="117:33"><name pos:start="117:20" pos:end="117:33"><name pos:start="117:20" pos:end="117:21">bs</name><operator pos:start="117:22" pos:end="117:23">-&gt;</operator><name pos:start="117:24" pos:end="117:33">backing_hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<label pos:start="121:1" pos:end="121:11"><name pos:start="121:1" pos:end="121:10">ro_cleanup</name>:</label>

    <expr_stmt pos:start="123:5" pos:end="123:16"><expr pos:start="123:5" pos:end="123:15"><call pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:10">g_free</name><argument_list pos:start="123:11" pos:end="123:15">(<argument pos:start="123:12" pos:end="123:14"><expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:11">(<expr pos:start="127:9" pos:end="127:10"><name pos:start="127:9" pos:end="127:10">ro</name></expr>)</condition> <block pos:start="127:13" pos:end="133:5">{<block_content pos:start="131:9" pos:end="131:69">

        <comment type="block" pos:start="129:9" pos:end="129:40">/* ignoring error return here */</comment>

        <expr_stmt pos:start="131:9" pos:end="131:69"><expr pos:start="131:9" pos:end="131:68"><call pos:start="131:9" pos:end="131:68"><name pos:start="131:9" pos:end="131:19">bdrv_reopen</name><argument_list pos:start="131:20" pos:end="131:68">(<argument pos:start="131:21" pos:end="131:34"><expr pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:34"><name pos:start="131:21" pos:end="131:22">bs</name><operator pos:start="131:23" pos:end="131:24">-&gt;</operator><name pos:start="131:25" pos:end="131:34">backing_hd</name></name></expr></argument>, <argument pos:start="131:37" pos:end="131:61"><expr pos:start="131:37" pos:end="131:61"><name pos:start="131:37" pos:end="131:46">open_flags</name> <operator pos:start="131:48" pos:end="131:48">&amp;</operator> <operator pos:start="131:50" pos:end="131:50">~</operator><name pos:start="131:51" pos:end="131:61">BDRV_O_RDWR</name></expr></argument>, <argument pos:start="131:64" pos:end="131:67"><expr pos:start="131:64" pos:end="131:67"><name pos:start="131:64" pos:end="131:67">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="137:5" pos:end="137:15">return <expr pos:start="137:12" pos:end="137:14"><name pos:start="137:12" pos:end="137:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
