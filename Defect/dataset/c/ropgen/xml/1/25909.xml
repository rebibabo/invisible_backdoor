<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25909.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">init_proc_750gx</name> <parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:40">CPUPPCState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="87:1">{<block_content pos:start="5:5" pos:end="85:25">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><call pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:18">gen_spr_ne_601</name><argument_list pos:start="5:19" pos:end="5:23">(<argument pos:start="5:20" pos:end="5:22"><expr pos:start="5:20" pos:end="5:22"><name pos:start="5:20" pos:end="5:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:21"><expr pos:start="7:5" pos:end="7:20"><call pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:15">gen_spr_7xx</name><argument_list pos:start="7:16" pos:end="7:20">(<argument pos:start="7:17" pos:end="7:19"><expr pos:start="7:17" pos:end="7:19"><name pos:start="7:17" pos:end="7:19">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:59">/* XXX : not implemented (XXX: different from 750fx) */</comment>

    <expr_stmt pos:start="11:5" pos:end="17:29"><expr pos:start="11:5" pos:end="17:28"><call pos:start="11:5" pos:end="17:28"><name pos:start="11:5" pos:end="11:16">spr_register</name><argument_list pos:start="11:17" pos:end="17:28">(<argument pos:start="11:18" pos:end="11:20"><expr pos:start="11:18" pos:end="11:20"><name pos:start="11:18" pos:end="11:20">env</name></expr></argument>, <argument pos:start="11:23" pos:end="11:30"><expr pos:start="11:23" pos:end="11:30"><name pos:start="11:23" pos:end="11:30">SPR_L2CR</name></expr></argument>, <argument pos:start="11:33" pos:end="11:38"><expr pos:start="11:33" pos:end="11:38"><literal type="string" pos:start="11:33" pos:end="11:38">"L2CR"</literal></expr></argument>,

                 <argument pos:start="13:18" pos:end="13:29"><expr pos:start="13:18" pos:end="13:29"><name pos:start="13:18" pos:end="13:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="13:32" pos:end="13:43"><expr pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="15:18" pos:end="15:34"><expr pos:start="15:18" pos:end="15:34"><operator pos:start="15:18" pos:end="15:18">&amp;</operator><name pos:start="15:19" pos:end="15:34">spr_read_generic</name></expr></argument>, <argument pos:start="15:37" pos:end="15:40"><expr pos:start="15:37" pos:end="15:40"><name pos:start="15:37" pos:end="15:40">NULL</name></expr></argument>,

                 <argument pos:start="17:18" pos:end="17:27"><expr pos:start="17:18" pos:end="17:27"><literal type="number" pos:start="17:18" pos:end="17:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:19">/* Time base */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><call pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:11">gen_tbl</name><argument_list pos:start="21:12" pos:end="21:16">(<argument pos:start="21:13" pos:end="21:15"><expr pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:28">/* Thermal management */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:16">gen_spr_thrm</name><argument_list pos:start="25:17" pos:end="25:21">(<argument pos:start="25:18" pos:end="25:20"><expr pos:start="25:18" pos:end="25:20"><name pos:start="25:18" pos:end="25:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="27:5" pos:end="27:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="29:5" pos:end="35:29"><expr pos:start="29:5" pos:end="35:28"><call pos:start="29:5" pos:end="35:28"><name pos:start="29:5" pos:end="29:16">spr_register</name><argument_list pos:start="29:17" pos:end="35:28">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">env</name></expr></argument>, <argument pos:start="29:23" pos:end="29:35"><expr pos:start="29:23" pos:end="29:35"><name pos:start="29:23" pos:end="29:35">SPR_750_THRM4</name></expr></argument>, <argument pos:start="29:38" pos:end="29:44"><expr pos:start="29:38" pos:end="29:44"><literal type="string" pos:start="29:38" pos:end="29:44">"THRM4"</literal></expr></argument>,

                 <argument pos:start="31:18" pos:end="31:29"><expr pos:start="31:18" pos:end="31:29"><name pos:start="31:18" pos:end="31:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="31:32" pos:end="31:43"><expr pos:start="31:32" pos:end="31:43"><name pos:start="31:32" pos:end="31:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="33:18" pos:end="33:34"><expr pos:start="33:18" pos:end="33:34"><operator pos:start="33:18" pos:end="33:18">&amp;</operator><name pos:start="33:19" pos:end="33:34">spr_read_generic</name></expr></argument>, <argument pos:start="33:37" pos:end="33:54"><expr pos:start="33:37" pos:end="33:54"><operator pos:start="33:37" pos:end="33:37">&amp;</operator><name pos:start="33:38" pos:end="33:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="35:18" pos:end="35:27"><expr pos:start="35:18" pos:end="35:27"><literal type="number" pos:start="35:18" pos:end="35:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:43">/* Hardware implementation registers */</comment>

    <comment type="block" pos:start="39:5" pos:end="39:59">/* XXX : not implemented (XXX: different from 750fx) */</comment>

    <expr_stmt pos:start="41:5" pos:end="47:29"><expr pos:start="41:5" pos:end="47:28"><call pos:start="41:5" pos:end="47:28"><name pos:start="41:5" pos:end="41:16">spr_register</name><argument_list pos:start="41:17" pos:end="47:28">(<argument pos:start="41:18" pos:end="41:20"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:20">env</name></expr></argument>, <argument pos:start="41:23" pos:end="41:30"><expr pos:start="41:23" pos:end="41:30"><name pos:start="41:23" pos:end="41:30">SPR_HID0</name></expr></argument>, <argument pos:start="41:33" pos:end="41:38"><expr pos:start="41:33" pos:end="41:38"><literal type="string" pos:start="41:33" pos:end="41:38">"HID0"</literal></expr></argument>,

                 <argument pos:start="43:18" pos:end="43:29"><expr pos:start="43:18" pos:end="43:29"><name pos:start="43:18" pos:end="43:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="43:32" pos:end="43:43"><expr pos:start="43:32" pos:end="43:43"><name pos:start="43:32" pos:end="43:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="45:18" pos:end="45:34"><expr pos:start="45:18" pos:end="45:34"><operator pos:start="45:18" pos:end="45:18">&amp;</operator><name pos:start="45:19" pos:end="45:34">spr_read_generic</name></expr></argument>, <argument pos:start="45:37" pos:end="45:54"><expr pos:start="45:37" pos:end="45:54"><operator pos:start="45:37" pos:end="45:37">&amp;</operator><name pos:start="45:38" pos:end="45:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="47:18" pos:end="47:27"><expr pos:start="47:18" pos:end="47:27"><literal type="number" pos:start="47:18" pos:end="47:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:31">/* XXX : not implemented */</comment>

    <expr_stmt pos:start="51:5" pos:end="57:29"><expr pos:start="51:5" pos:end="57:28"><call pos:start="51:5" pos:end="57:28"><name pos:start="51:5" pos:end="51:16">spr_register</name><argument_list pos:start="51:17" pos:end="57:28">(<argument pos:start="51:18" pos:end="51:20"><expr pos:start="51:18" pos:end="51:20"><name pos:start="51:18" pos:end="51:20">env</name></expr></argument>, <argument pos:start="51:23" pos:end="51:30"><expr pos:start="51:23" pos:end="51:30"><name pos:start="51:23" pos:end="51:30">SPR_HID1</name></expr></argument>, <argument pos:start="51:33" pos:end="51:38"><expr pos:start="51:33" pos:end="51:38"><literal type="string" pos:start="51:33" pos:end="51:38">"HID1"</literal></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:29"><expr pos:start="53:18" pos:end="53:29"><name pos:start="53:18" pos:end="53:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="53:32" pos:end="53:43"><expr pos:start="53:32" pos:end="53:43"><name pos:start="53:32" pos:end="53:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:34"><expr pos:start="55:18" pos:end="55:34"><operator pos:start="55:18" pos:end="55:18">&amp;</operator><name pos:start="55:19" pos:end="55:34">spr_read_generic</name></expr></argument>, <argument pos:start="55:37" pos:end="55:54"><expr pos:start="55:37" pos:end="55:54"><operator pos:start="55:37" pos:end="55:37">&amp;</operator><name pos:start="55:38" pos:end="55:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="57:18" pos:end="57:27"><expr pos:start="57:18" pos:end="57:27"><literal type="number" pos:start="57:18" pos:end="57:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:59">/* XXX : not implemented (XXX: different from 750fx) */</comment>

    <expr_stmt pos:start="61:5" pos:end="67:29"><expr pos:start="61:5" pos:end="67:28"><call pos:start="61:5" pos:end="67:28"><name pos:start="61:5" pos:end="61:16">spr_register</name><argument_list pos:start="61:17" pos:end="67:28">(<argument pos:start="61:18" pos:end="61:20"><expr pos:start="61:18" pos:end="61:20"><name pos:start="61:18" pos:end="61:20">env</name></expr></argument>, <argument pos:start="61:23" pos:end="61:36"><expr pos:start="61:23" pos:end="61:36"><name pos:start="61:23" pos:end="61:36">SPR_750FX_HID2</name></expr></argument>, <argument pos:start="61:39" pos:end="61:44"><expr pos:start="61:39" pos:end="61:44"><literal type="string" pos:start="61:39" pos:end="61:44">"HID2"</literal></expr></argument>,

                 <argument pos:start="63:18" pos:end="63:29"><expr pos:start="63:18" pos:end="63:29"><name pos:start="63:18" pos:end="63:29">SPR_NOACCESS</name></expr></argument>, <argument pos:start="63:32" pos:end="63:43"><expr pos:start="63:32" pos:end="63:43"><name pos:start="63:32" pos:end="63:43">SPR_NOACCESS</name></expr></argument>,

                 <argument pos:start="65:18" pos:end="65:34"><expr pos:start="65:18" pos:end="65:34"><operator pos:start="65:18" pos:end="65:18">&amp;</operator><name pos:start="65:19" pos:end="65:34">spr_read_generic</name></expr></argument>, <argument pos:start="65:37" pos:end="65:54"><expr pos:start="65:37" pos:end="65:54"><operator pos:start="65:37" pos:end="65:37">&amp;</operator><name pos:start="65:38" pos:end="65:54">spr_write_generic</name></expr></argument>,

                 <argument pos:start="67:18" pos:end="67:27"><expr pos:start="67:18" pos:end="67:27"><literal type="number" pos:start="67:18" pos:end="67:27">0x00000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:27">/* Memory management */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:22"><expr pos:start="71:5" pos:end="71:21"><call pos:start="71:5" pos:end="71:21"><name pos:start="71:5" pos:end="71:16">gen_low_BATs</name><argument_list pos:start="71:17" pos:end="71:21">(<argument pos:start="71:18" pos:end="71:20"><expr pos:start="71:18" pos:end="71:20"><name pos:start="71:18" pos:end="71:20">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:55">/* PowerPC 750fx &amp; 750gx has 8 DBATs and 8 IBATs */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:23"><expr pos:start="75:5" pos:end="75:22"><call pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:17">gen_high_BATs</name><argument_list pos:start="75:18" pos:end="75:22">(<argument pos:start="75:19" pos:end="75:21"><expr pos:start="75:19" pos:end="75:21"><name pos:start="75:19" pos:end="75:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><call pos:start="77:5" pos:end="77:22"><name pos:start="77:5" pos:end="77:17">init_excp_7x0</name><argument_list pos:start="77:18" pos:end="77:22">(<argument pos:start="77:19" pos:end="77:21"><expr pos:start="77:19" pos:end="77:21"><name pos:start="77:19" pos:end="77:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:7">env</name><operator pos:start="79:8" pos:end="79:9">-&gt;</operator><name pos:start="79:10" pos:end="79:25">dcache_line_size</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:30">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:31"><expr pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:25"><name pos:start="81:5" pos:end="81:7">env</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:25">icache_line_size</name></name> <operator pos:start="81:27" pos:end="81:27">=</operator> <literal type="number" pos:start="81:29" pos:end="81:30">32</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="83:5" pos:end="83:42">/* Allocate hardware IRQ controller */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:25"><expr pos:start="85:5" pos:end="85:24"><call pos:start="85:5" pos:end="85:24"><name pos:start="85:5" pos:end="85:19">ppc6xx_irq_init</name><argument_list pos:start="85:20" pos:end="85:24">(<argument pos:start="85:21" pos:end="85:23"><expr pos:start="85:21" pos:end="85:23"><name pos:start="85:21" pos:end="85:23">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
