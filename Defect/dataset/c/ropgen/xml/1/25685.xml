<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25685.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:26">pl011_read</name><parameter_list pos:start="1:27" pos:end="3:41">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:66"><decl pos:start="1:42" pos:end="1:66"><type pos:start="1:42" pos:end="1:66"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:66">offset</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:40"><decl pos:start="3:28" pos:end="3:40"><type pos:start="3:28" pos:end="3:40"><name pos:start="3:28" pos:end="3:35">unsigned</name></type> <name pos:start="3:37" pos:end="3:40">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="109:1">{<block_content pos:start="7:5" pos:end="107:5">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">pl011_state</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">s</name> <init pos:start="7:20" pos:end="7:42">= <expr pos:start="7:22" pos:end="7:42"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:33">pl011_state</name> <operator pos:start="7:35" pos:end="7:35">*</operator><operator pos:start="7:36" pos:end="7:36">)</operator><name pos:start="7:37" pos:end="7:42">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">c</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:43">(<expr pos:start="13:9" pos:end="13:42"><name pos:start="13:9" pos:end="13:14">offset</name> <operator pos:start="13:16" pos:end="13:17">&gt;=</operator> <literal type="number" pos:start="13:19" pos:end="13:23">0xfe0</literal> <operator pos:start="13:25" pos:end="13:26">&amp;&amp;</operator> <name pos:start="13:28" pos:end="13:33">offset</name> <operator pos:start="13:35" pos:end="13:35">&lt;</operator> <literal type="number" pos:start="13:37" pos:end="13:42">0x1000</literal></expr>)</condition> <block pos:start="13:45" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:44">

        <return pos:start="15:9" pos:end="15:44">return <expr pos:start="15:16" pos:end="15:43"><name pos:start="15:16" pos:end="15:43"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:20">id</name><index pos:start="15:21" pos:end="15:43">[<expr pos:start="15:22" pos:end="15:42"><operator pos:start="15:22" pos:end="15:22">(</operator><name pos:start="15:23" pos:end="15:28">offset</name> <operator pos:start="15:30" pos:end="15:30">-</operator> <literal type="number" pos:start="15:32" pos:end="15:36">0xfe0</literal><operator pos:start="15:37" pos:end="15:37">)</operator> <operator pos:start="15:39" pos:end="15:40">&gt;&gt;</operator> <literal type="number" pos:start="15:42" pos:end="15:42">2</literal></expr>]</index></name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="19:5" pos:end="107:5">switch <condition pos:start="19:12" pos:end="19:24">(<expr pos:start="19:13" pos:end="19:23"><name pos:start="19:13" pos:end="19:18">offset</name> <operator pos:start="19:20" pos:end="19:21">&gt;&gt;</operator> <literal type="number" pos:start="19:23" pos:end="19:23">2</literal></expr>)</condition> <block pos:start="19:26" pos:end="107:5">{<block_content pos:start="21:5" pos:end="105:17">

    <case pos:start="21:5" pos:end="21:11">case <expr pos:start="21:10" pos:end="21:10"><literal type="number" pos:start="21:10" pos:end="21:10">0</literal></expr>:</case> <comment type="block" pos:start="21:13" pos:end="21:24">/* UARTDR */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:37"><expr pos:start="23:9" pos:end="23:36"><name pos:start="23:9" pos:end="23:16"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:16">flags</name></name> <operator pos:start="23:18" pos:end="23:19">&amp;=</operator> <operator pos:start="23:21" pos:end="23:21">~</operator><name pos:start="23:22" pos:end="23:36">PL011_FLAG_RXFF</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:38"><expr pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:9">c</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <name pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:24">read_fifo</name><index pos:start="25:25" pos:end="25:37">[<expr pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:36"><name pos:start="25:26" pos:end="25:26">s</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:36">read_pos</name></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="35:9"><if pos:start="27:9" pos:end="35:9">if <condition pos:start="27:12" pos:end="27:30">(<expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:25">read_count</name></name> <operator pos:start="27:27" pos:end="27:27">&gt;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>)</condition> <block pos:start="27:32" pos:end="35:9">{<block_content pos:start="29:13" pos:end="33:32">

            <expr_stmt pos:start="29:13" pos:end="29:28"><expr pos:start="29:13" pos:end="29:27"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:25">read_count</name></name><operator pos:start="29:26" pos:end="29:27">--</operator></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="33:32"><if pos:start="31:13" pos:end="33:32">if <condition pos:start="31:16" pos:end="31:36">(<expr pos:start="31:17" pos:end="31:35"><operator pos:start="31:17" pos:end="31:18">++</operator><name pos:start="31:19" pos:end="31:29"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:29">read_pos</name></name> <operator pos:start="31:31" pos:end="31:32">==</operator> <literal type="number" pos:start="31:34" pos:end="31:35">16</literal></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:32"><block_content pos:start="33:17" pos:end="33:32">

                <expr_stmt pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:31"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:27">read_pos</name></name> <operator pos:start="33:29" pos:end="33:29">=</operator> <literal type="number" pos:start="33:31" pos:end="33:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:31">(<expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:25"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:25">read_count</name></name> <operator pos:start="37:27" pos:end="37:28">==</operator> <literal type="number" pos:start="37:30" pos:end="37:30">0</literal></expr>)</condition> <block pos:start="37:33" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:40">

            <expr_stmt pos:start="39:13" pos:end="39:40"><expr pos:start="39:13" pos:end="39:39"><name pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:20">flags</name></name> <operator pos:start="39:22" pos:end="39:23">|=</operator> <name pos:start="39:25" pos:end="39:39">PL011_FLAG_RXFE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="45:43"><if pos:start="43:9" pos:end="45:43">if <condition pos:start="43:12" pos:end="43:49">(<expr pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">read_count</name></name> <operator pos:start="43:27" pos:end="43:28">==</operator> <name pos:start="43:30" pos:end="43:44"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:44">read_trigger</name></name> <operator pos:start="43:46" pos:end="43:46">-</operator> <literal type="number" pos:start="43:48" pos:end="43:48">1</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:43"><block_content pos:start="45:13" pos:end="45:43">

            <expr_stmt pos:start="45:13" pos:end="45:43"><expr pos:start="45:13" pos:end="45:42"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:24">int_level</name></name> <operator pos:start="45:26" pos:end="45:27">&amp;=</operator> <operator pos:start="45:29" pos:end="45:29">~</operator> <name pos:start="45:31" pos:end="45:42">PL011_INT_RX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><call pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:20">pl011_update</name><argument_list pos:start="47:21" pos:end="47:23">(<argument pos:start="47:22" pos:end="47:22"><expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:38"><expr pos:start="49:9" pos:end="49:37"><call pos:start="49:9" pos:end="49:37"><name pos:start="49:9" pos:end="49:29">qemu_chr_accept_input</name><argument_list pos:start="49:30" pos:end="49:37">(<argument pos:start="49:31" pos:end="49:36"><expr pos:start="49:31" pos:end="49:36"><name pos:start="49:31" pos:end="49:36"><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:36">chr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><name pos:start="51:16" pos:end="51:16">c</name></expr>;</return>

    <case pos:start="53:5" pos:end="53:11">case <expr pos:start="53:10" pos:end="53:10"><literal type="number" pos:start="53:10" pos:end="53:10">1</literal></expr>:</case> <comment type="block" pos:start="53:13" pos:end="53:24">/* UARTCR */</comment>

        <return pos:start="55:9" pos:end="55:17">return <expr pos:start="55:16" pos:end="55:16"><literal type="number" pos:start="55:16" pos:end="55:16">0</literal></expr>;</return>

    <case pos:start="57:5" pos:end="57:11">case <expr pos:start="57:10" pos:end="57:10"><literal type="number" pos:start="57:10" pos:end="57:10">6</literal></expr>:</case> <comment type="block" pos:start="57:13" pos:end="57:24">/* UARTFR */</comment>

        <return pos:start="59:9" pos:end="59:24">return <expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">flags</name></name></expr>;</return>

    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">8</literal></expr>:</case> <comment type="block" pos:start="61:13" pos:end="61:26">/* UARTILPR */</comment>

        <return pos:start="63:9" pos:end="63:23">return <expr pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:22"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:22">ilpr</name></name></expr>;</return>

    <case pos:start="65:5" pos:end="65:11">case <expr pos:start="65:10" pos:end="65:10"><literal type="number" pos:start="65:10" pos:end="65:10">9</literal></expr>:</case> <comment type="block" pos:start="65:13" pos:end="65:26">/* UARTIBRD */</comment>

        <return pos:start="67:9" pos:end="67:23">return <expr pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:22"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:22">ibrd</name></name></expr>;</return>

    <case pos:start="69:5" pos:end="69:12">case <expr pos:start="69:10" pos:end="69:11"><literal type="number" pos:start="69:10" pos:end="69:11">10</literal></expr>:</case> <comment type="block" pos:start="69:14" pos:end="69:27">/* UARTFBRD */</comment>

        <return pos:start="71:9" pos:end="71:23">return <expr pos:start="71:16" pos:end="71:22"><name pos:start="71:16" pos:end="71:22"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:22">fbrd</name></name></expr>;</return>

    <case pos:start="73:5" pos:end="73:12">case <expr pos:start="73:10" pos:end="73:11"><literal type="number" pos:start="73:10" pos:end="73:11">11</literal></expr>:</case> <comment type="block" pos:start="73:14" pos:end="73:28">/* UARTLCR_H */</comment>

        <return pos:start="75:9" pos:end="75:22">return <expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:21">lcr</name></name></expr>;</return>

    <case pos:start="77:5" pos:end="77:12">case <expr pos:start="77:10" pos:end="77:11"><literal type="number" pos:start="77:10" pos:end="77:11">12</literal></expr>:</case> <comment type="block" pos:start="77:14" pos:end="77:25">/* UARTCR */</comment>

        <return pos:start="79:9" pos:end="79:21">return <expr pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:20"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:20">cr</name></name></expr>;</return>

    <case pos:start="81:5" pos:end="81:12">case <expr pos:start="81:10" pos:end="81:11"><literal type="number" pos:start="81:10" pos:end="81:11">13</literal></expr>:</case> <comment type="block" pos:start="81:14" pos:end="81:27">/* UARTIFLS */</comment>

        <return pos:start="83:9" pos:end="83:22">return <expr pos:start="83:16" pos:end="83:21"><name pos:start="83:16" pos:end="83:21"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:21">ifl</name></name></expr>;</return>

    <case pos:start="85:5" pos:end="85:12">case <expr pos:start="85:10" pos:end="85:11"><literal type="number" pos:start="85:10" pos:end="85:11">14</literal></expr>:</case> <comment type="block" pos:start="85:14" pos:end="85:27">/* UARTIMSC */</comment>

        <return pos:start="87:9" pos:end="87:30">return <expr pos:start="87:16" pos:end="87:29"><name pos:start="87:16" pos:end="87:29"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:29">int_enabled</name></name></expr>;</return>

    <case pos:start="89:5" pos:end="89:12">case <expr pos:start="89:10" pos:end="89:11"><literal type="number" pos:start="89:10" pos:end="89:11">15</literal></expr>:</case> <comment type="block" pos:start="89:14" pos:end="89:26">/* UARTRIS */</comment>

        <return pos:start="91:9" pos:end="91:28">return <expr pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:16">s</name><operator pos:start="91:17" pos:end="91:18">-&gt;</operator><name pos:start="91:19" pos:end="91:27">int_level</name></name></expr>;</return>

    <case pos:start="93:5" pos:end="93:12">case <expr pos:start="93:10" pos:end="93:11"><literal type="number" pos:start="93:10" pos:end="93:11">16</literal></expr>:</case> <comment type="block" pos:start="93:14" pos:end="93:26">/* UARTMIS */</comment>

        <return pos:start="95:9" pos:end="95:45">return <expr pos:start="95:16" pos:end="95:44"><name pos:start="95:16" pos:end="95:27"><name pos:start="95:16" pos:end="95:16">s</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:27">int_level</name></name> <operator pos:start="95:29" pos:end="95:29">&amp;</operator> <name pos:start="95:31" pos:end="95:44"><name pos:start="95:31" pos:end="95:31">s</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:44">int_enabled</name></name></expr>;</return>

    <case pos:start="97:5" pos:end="97:12">case <expr pos:start="97:10" pos:end="97:11"><literal type="number" pos:start="97:10" pos:end="97:11">18</literal></expr>:</case> <comment type="block" pos:start="97:14" pos:end="97:28">/* UARTDMACR */</comment>

        <return pos:start="99:9" pos:end="99:24">return <expr pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:23"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:23">dmacr</name></name></expr>;</return>

    <default pos:start="101:5" pos:end="101:12">default:</default>

        <expr_stmt pos:start="103:9" pos:end="103:61"><expr pos:start="103:9" pos:end="103:60"><call pos:start="103:9" pos:end="103:60"><name pos:start="103:9" pos:end="103:16">hw_error</name><argument_list pos:start="103:17" pos:end="103:60">(<argument pos:start="103:18" pos:end="103:46"><expr pos:start="103:18" pos:end="103:46"><literal type="string" pos:start="103:18" pos:end="103:46">"pl011_read: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="103:49" pos:end="103:59"><expr pos:start="103:49" pos:end="103:59"><operator pos:start="103:49" pos:end="103:49">(</operator><name pos:start="103:50" pos:end="103:52">int</name><operator pos:start="103:53" pos:end="103:53">)</operator><name pos:start="103:54" pos:end="103:59">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:17">return <expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
