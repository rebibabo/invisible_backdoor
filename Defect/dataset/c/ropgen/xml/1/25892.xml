<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25892.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">qcow_write_snapshots</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="141:1">{<block_content pos:start="5:5" pos:end="139:14">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">QCowSnapshot</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">QCowSnapshotHeader</name></type> <name pos:start="9:24" pos:end="9:24">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:50"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:20">name_size</name></decl>, <decl pos:start="11:23" pos:end="11:33"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:33">id_str_size</name></decl>, <decl pos:start="11:36" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:36" pos:end="11:49">snapshots_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:19">data64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:20"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:19">data32</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:18">offset</name></decl>, <decl pos:start="17:21" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:21" pos:end="17:36">snapshots_offset</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:43">/* compute the size of the snapshots */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:10">offset</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</expr_stmt>

    <for pos:start="25:5" pos:end="37:5">for<control pos:start="25:8" pos:end="25:40">(<init pos:start="25:9" pos:end="25:14"><expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">i</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</init> <condition pos:start="25:16" pos:end="25:35"><expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:16">i</name> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <name pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:34">nb_snapshots</name></name></expr>;</condition> <incr pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:37">i</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control> <block pos:start="25:42" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:35">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:10">sn</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:25">snapshots</name></name> <operator pos:start="27:27" pos:end="27:27">+</operator> <name pos:start="27:29" pos:end="27:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:41"><expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:14">offset</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:40"><name pos:start="29:18" pos:end="29:29">align_offset</name><argument_list pos:start="29:30" pos:end="29:40">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36">offset</name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:14">offset</name> <operator pos:start="31:16" pos:end="31:17">+=</operator> <sizeof pos:start="31:19" pos:end="31:27">sizeof<argument_list pos:start="31:25" pos:end="31:27">(<argument pos:start="31:26" pos:end="31:26"><expr pos:start="31:26" pos:end="31:26"><name pos:start="31:26" pos:end="31:26">h</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:14">offset</name> <operator pos:start="33:16" pos:end="33:17">+=</operator> <call pos:start="33:19" pos:end="33:36"><name pos:start="33:19" pos:end="33:24">strlen</name><argument_list pos:start="33:25" pos:end="33:36">(<argument pos:start="33:26" pos:end="33:35"><expr pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:27">sn</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:35">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:35"><expr pos:start="35:9" pos:end="35:34"><name pos:start="35:9" pos:end="35:14">offset</name> <operator pos:start="35:16" pos:end="35:17">+=</operator> <call pos:start="35:19" pos:end="35:34"><name pos:start="35:19" pos:end="35:24">strlen</name><argument_list pos:start="35:25" pos:end="35:34">(<argument pos:start="35:26" pos:end="35:33"><expr pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:33"><name pos:start="35:26" pos:end="35:27">sn</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="39:5" pos:end="39:28"><expr pos:start="39:5" pos:end="39:27"><name pos:start="39:5" pos:end="39:18">snapshots_size</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:27">offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:64"><expr pos:start="43:5" pos:end="43:63"><name pos:start="43:5" pos:end="43:20">snapshots_offset</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:63"><name pos:start="43:24" pos:end="43:43">qcow2_alloc_clusters</name><argument_list pos:start="43:44" pos:end="43:63">(<argument pos:start="43:45" pos:end="43:46"><expr pos:start="43:45" pos:end="43:46"><name pos:start="43:45" pos:end="43:46">bs</name></expr></argument>, <argument pos:start="43:49" pos:end="43:62"><expr pos:start="43:49" pos:end="43:62"><name pos:start="43:49" pos:end="43:62">snapshots_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:10">offset</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <name pos:start="45:14" pos:end="45:29">snapshots_offset</name></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:14">offset</name> <operator pos:start="47:16" pos:end="47:16">&lt;</operator> <literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>)</condition> <block pos:start="47:21" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:22">

        <return pos:start="49:9" pos:end="49:22">return <expr pos:start="49:16" pos:end="49:21"><name pos:start="49:16" pos:end="49:21">offset</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="55:5" pos:end="103:5">for<control pos:start="55:8" pos:end="55:40">(<init pos:start="55:9" pos:end="55:14"><expr pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:9">i</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <literal type="number" pos:start="55:13" pos:end="55:13">0</literal></expr>;</init> <condition pos:start="55:16" pos:end="55:35"><expr pos:start="55:16" pos:end="55:34"><name pos:start="55:16" pos:end="55:16">i</name> <operator pos:start="55:18" pos:end="55:18">&lt;</operator> <name pos:start="55:20" pos:end="55:34"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:34">nb_snapshots</name></name></expr>;</condition> <incr pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:37">i</name><operator pos:start="55:38" pos:end="55:39">++</operator></expr></incr>)</control> <block pos:start="55:42" pos:end="103:5">{<block_content pos:start="57:9" pos:end="101:28">

        <expr_stmt pos:start="57:9" pos:end="57:30"><expr pos:start="57:9" pos:end="57:29"><name pos:start="57:9" pos:end="57:10">sn</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <name pos:start="57:14" pos:end="57:25"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:25">snapshots</name></name> <operator pos:start="57:27" pos:end="57:27">+</operator> <name pos:start="57:29" pos:end="57:29">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:33"><expr pos:start="59:9" pos:end="59:32"><call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:14">memset</name><argument_list pos:start="59:15" pos:end="59:32">(<argument pos:start="59:16" pos:end="59:17"><expr pos:start="59:16" pos:end="59:17"><operator pos:start="59:16" pos:end="59:16">&amp;</operator><name pos:start="59:17" pos:end="59:17">h</name></expr></argument>, <argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr></argument>, <argument pos:start="59:23" pos:end="59:31"><expr pos:start="59:23" pos:end="59:31"><sizeof pos:start="59:23" pos:end="59:31">sizeof<argument_list pos:start="59:29" pos:end="59:31">(<argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><name pos:start="59:30" pos:end="59:30">h</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:61"><expr pos:start="61:9" pos:end="61:60"><name pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:9">h</name><operator pos:start="61:10" pos:end="61:10">.</operator><name pos:start="61:11" pos:end="61:25">l1_table_offset</name></name> <operator pos:start="61:27" pos:end="61:27">=</operator> <call pos:start="61:29" pos:end="61:60"><name pos:start="61:29" pos:end="61:39">cpu_to_be64</name><argument_list pos:start="61:40" pos:end="61:60">(<argument pos:start="61:41" pos:end="61:59"><expr pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:59"><name pos:start="61:41" pos:end="61:42">sn</name><operator pos:start="61:43" pos:end="61:44">-&gt;</operator><name pos:start="61:45" pos:end="61:59">l1_table_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:45"><expr pos:start="63:9" pos:end="63:44"><name pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:9">h</name><operator pos:start="63:10" pos:end="63:10">.</operator><name pos:start="63:11" pos:end="63:17">l1_size</name></name> <operator pos:start="63:19" pos:end="63:19">=</operator> <call pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:31">cpu_to_be32</name><argument_list pos:start="63:32" pos:end="63:44">(<argument pos:start="63:33" pos:end="63:43"><expr pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:43"><name pos:start="63:33" pos:end="63:34">sn</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:43">l1_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:57"><expr pos:start="65:9" pos:end="65:56"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:9">h</name><operator pos:start="65:10" pos:end="65:10">.</operator><name pos:start="65:11" pos:end="65:23">vm_state_size</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <call pos:start="65:27" pos:end="65:56"><name pos:start="65:27" pos:end="65:37">cpu_to_be32</name><argument_list pos:start="65:38" pos:end="65:56">(<argument pos:start="65:39" pos:end="65:55"><expr pos:start="65:39" pos:end="65:55"><name pos:start="65:39" pos:end="65:55"><name pos:start="65:39" pos:end="65:40">sn</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:55">vm_state_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:47"><expr pos:start="67:9" pos:end="67:46"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:9">h</name><operator pos:start="67:10" pos:end="67:10">.</operator><name pos:start="67:11" pos:end="67:18">date_sec</name></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:46"><name pos:start="67:22" pos:end="67:32">cpu_to_be32</name><argument_list pos:start="67:33" pos:end="67:46">(<argument pos:start="67:34" pos:end="67:45"><expr pos:start="67:34" pos:end="67:45"><name pos:start="67:34" pos:end="67:45"><name pos:start="67:34" pos:end="67:35">sn</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:45">date_sec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:49"><expr pos:start="69:9" pos:end="69:48"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:9">h</name><operator pos:start="69:10" pos:end="69:10">.</operator><name pos:start="69:11" pos:end="69:19">date_nsec</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:48"><name pos:start="69:23" pos:end="69:33">cpu_to_be32</name><argument_list pos:start="69:34" pos:end="69:48">(<argument pos:start="69:35" pos:end="69:47"><expr pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:47"><name pos:start="69:35" pos:end="69:36">sn</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:47">date_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:57"><expr pos:start="71:9" pos:end="71:56"><name pos:start="71:9" pos:end="71:23"><name pos:start="71:9" pos:end="71:9">h</name><operator pos:start="71:10" pos:end="71:10">.</operator><name pos:start="71:11" pos:end="71:23">vm_clock_nsec</name></name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:56"><name pos:start="71:27" pos:end="71:37">cpu_to_be64</name><argument_list pos:start="71:38" pos:end="71:56">(<argument pos:start="71:39" pos:end="71:55"><expr pos:start="71:39" pos:end="71:55"><name pos:start="71:39" pos:end="71:55"><name pos:start="71:39" pos:end="71:40">sn</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:55">vm_clock_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:41"><expr pos:start="75:9" pos:end="75:40"><name pos:start="75:9" pos:end="75:19">id_str_size</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:40"><name pos:start="75:23" pos:end="75:28">strlen</name><argument_list pos:start="75:29" pos:end="75:40">(<argument pos:start="75:30" pos:end="75:39"><expr pos:start="75:30" pos:end="75:39"><name pos:start="75:30" pos:end="75:39"><name pos:start="75:30" pos:end="75:31">sn</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:39">id_str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:17">name_size</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <call pos:start="77:21" pos:end="77:36"><name pos:start="77:21" pos:end="77:26">strlen</name><argument_list pos:start="77:27" pos:end="77:36">(<argument pos:start="77:28" pos:end="77:35"><expr pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:29">sn</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:35">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:49"><expr pos:start="79:9" pos:end="79:48"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:9">h</name><operator pos:start="79:10" pos:end="79:10">.</operator><name pos:start="79:11" pos:end="79:21">id_str_size</name></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <call pos:start="79:25" pos:end="79:48"><name pos:start="79:25" pos:end="79:35">cpu_to_be16</name><argument_list pos:start="79:36" pos:end="79:48">(<argument pos:start="79:37" pos:end="79:47"><expr pos:start="79:37" pos:end="79:47"><name pos:start="79:37" pos:end="79:47">id_str_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:45"><expr pos:start="81:9" pos:end="81:44"><name pos:start="81:9" pos:end="81:19"><name pos:start="81:9" pos:end="81:9">h</name><operator pos:start="81:10" pos:end="81:10">.</operator><name pos:start="81:11" pos:end="81:19">name_size</name></name> <operator pos:start="81:21" pos:end="81:21">=</operator> <call pos:start="81:23" pos:end="81:44"><name pos:start="81:23" pos:end="81:33">cpu_to_be16</name><argument_list pos:start="81:34" pos:end="81:44">(<argument pos:start="81:35" pos:end="81:43"><expr pos:start="81:35" pos:end="81:43"><name pos:start="81:35" pos:end="81:43">name_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:41"><expr pos:start="83:9" pos:end="83:40"><name pos:start="83:9" pos:end="83:14">offset</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:40"><name pos:start="83:18" pos:end="83:29">align_offset</name><argument_list pos:start="83:30" pos:end="83:40">(<argument pos:start="83:31" pos:end="83:36"><expr pos:start="83:31" pos:end="83:36"><name pos:start="83:31" pos:end="83:36">offset</name></expr></argument>, <argument pos:start="83:39" pos:end="83:39"><expr pos:start="83:39" pos:end="83:39"><literal type="number" pos:start="83:39" pos:end="83:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="87:22"><if pos:start="85:9" pos:end="87:22">if <condition pos:start="85:12" pos:end="85:70">(<expr pos:start="85:13" pos:end="85:69"><call pos:start="85:13" pos:end="85:56"><name pos:start="85:13" pos:end="85:23">bdrv_pwrite</name><argument_list pos:start="85:24" pos:end="85:56">(<argument pos:start="85:25" pos:end="85:32"><expr pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:32"><name pos:start="85:25" pos:end="85:26">bs</name><operator pos:start="85:27" pos:end="85:28">-&gt;</operator><name pos:start="85:29" pos:end="85:32">file</name></name></expr></argument>, <argument pos:start="85:35" pos:end="85:40"><expr pos:start="85:35" pos:end="85:40"><name pos:start="85:35" pos:end="85:40">offset</name></expr></argument>, <argument pos:start="85:43" pos:end="85:44"><expr pos:start="85:43" pos:end="85:44"><operator pos:start="85:43" pos:end="85:43">&amp;</operator><name pos:start="85:44" pos:end="85:44">h</name></expr></argument>, <argument pos:start="85:47" pos:end="85:55"><expr pos:start="85:47" pos:end="85:55"><sizeof pos:start="85:47" pos:end="85:55">sizeof<argument_list pos:start="85:53" pos:end="85:55">(<argument pos:start="85:54" pos:end="85:54"><expr pos:start="85:54" pos:end="85:54"><name pos:start="85:54" pos:end="85:54">h</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="85:58" pos:end="85:59">!=</operator> <sizeof pos:start="85:61" pos:end="85:69">sizeof<argument_list pos:start="85:67" pos:end="85:69">(<argument pos:start="85:68" pos:end="85:68"><expr pos:start="85:68" pos:end="85:68"><name pos:start="85:68" pos:end="85:68">h</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:22"><block_content pos:start="87:13" pos:end="87:22">

            <goto pos:start="87:13" pos:end="87:22">goto <name pos:start="87:18" pos:end="87:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:28"><expr pos:start="89:9" pos:end="89:27"><name pos:start="89:9" pos:end="89:14">offset</name> <operator pos:start="89:16" pos:end="89:17">+=</operator> <sizeof pos:start="89:19" pos:end="89:27">sizeof<argument_list pos:start="89:25" pos:end="89:27">(<argument pos:start="89:26" pos:end="89:26"><expr pos:start="89:26" pos:end="89:26"><name pos:start="89:26" pos:end="89:26">h</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:22"><if pos:start="91:9" pos:end="93:22">if <condition pos:start="91:12" pos:end="91:82">(<expr pos:start="91:13" pos:end="91:81"><call pos:start="91:13" pos:end="91:66"><name pos:start="91:13" pos:end="91:23">bdrv_pwrite</name><argument_list pos:start="91:24" pos:end="91:66">(<argument pos:start="91:25" pos:end="91:32"><expr pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:32"><name pos:start="91:25" pos:end="91:26">bs</name><operator pos:start="91:27" pos:end="91:28">-&gt;</operator><name pos:start="91:29" pos:end="91:32">file</name></name></expr></argument>, <argument pos:start="91:35" pos:end="91:40"><expr pos:start="91:35" pos:end="91:40"><name pos:start="91:35" pos:end="91:40">offset</name></expr></argument>, <argument pos:start="91:43" pos:end="91:52"><expr pos:start="91:43" pos:end="91:52"><name pos:start="91:43" pos:end="91:52"><name pos:start="91:43" pos:end="91:44">sn</name><operator pos:start="91:45" pos:end="91:46">-&gt;</operator><name pos:start="91:47" pos:end="91:52">id_str</name></name></expr></argument>, <argument pos:start="91:55" pos:end="91:65"><expr pos:start="91:55" pos:end="91:65"><name pos:start="91:55" pos:end="91:65">id_str_size</name></expr></argument>)</argument_list></call> <operator pos:start="91:68" pos:end="91:69">!=</operator> <name pos:start="91:71" pos:end="91:81">id_str_size</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:22"><block_content pos:start="93:13" pos:end="93:22">

            <goto pos:start="93:13" pos:end="93:22">goto <name pos:start="93:18" pos:end="93:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:30"><expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:14">offset</name> <operator pos:start="95:16" pos:end="95:17">+=</operator> <name pos:start="95:19" pos:end="95:29">id_str_size</name></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="99:22"><if pos:start="97:9" pos:end="99:22">if <condition pos:start="97:12" pos:end="97:76">(<expr pos:start="97:13" pos:end="97:75"><call pos:start="97:13" pos:end="97:62"><name pos:start="97:13" pos:end="97:23">bdrv_pwrite</name><argument_list pos:start="97:24" pos:end="97:62">(<argument pos:start="97:25" pos:end="97:32"><expr pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:26">bs</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:32">file</name></name></expr></argument>, <argument pos:start="97:35" pos:end="97:40"><expr pos:start="97:35" pos:end="97:40"><name pos:start="97:35" pos:end="97:40">offset</name></expr></argument>, <argument pos:start="97:43" pos:end="97:50"><expr pos:start="97:43" pos:end="97:50"><name pos:start="97:43" pos:end="97:50"><name pos:start="97:43" pos:end="97:44">sn</name><operator pos:start="97:45" pos:end="97:46">-&gt;</operator><name pos:start="97:47" pos:end="97:50">name</name></name></expr></argument>, <argument pos:start="97:53" pos:end="97:61"><expr pos:start="97:53" pos:end="97:61"><name pos:start="97:53" pos:end="97:61">name_size</name></expr></argument>)</argument_list></call> <operator pos:start="97:64" pos:end="97:65">!=</operator> <name pos:start="97:67" pos:end="97:75">name_size</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:22"><block_content pos:start="99:13" pos:end="99:22">

            <goto pos:start="99:13" pos:end="99:22">goto <name pos:start="99:18" pos:end="99:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:28"><expr pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:14">offset</name> <operator pos:start="101:16" pos:end="101:17">+=</operator> <name pos:start="101:19" pos:end="101:27">name_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="107:5" pos:end="107:42">/* update the various header fields */</comment>

    <expr_stmt pos:start="109:5" pos:end="109:43"><expr pos:start="109:5" pos:end="109:42"><name pos:start="109:5" pos:end="109:10">data64</name> <operator pos:start="109:12" pos:end="109:12">=</operator> <call pos:start="109:14" pos:end="109:42"><name pos:start="109:14" pos:end="109:24">cpu_to_be64</name><argument_list pos:start="109:25" pos:end="109:42">(<argument pos:start="109:26" pos:end="109:41"><expr pos:start="109:26" pos:end="109:41"><name pos:start="109:26" pos:end="109:41">snapshots_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="115:18"><if pos:start="111:5" pos:end="115:18">if <condition pos:start="111:8" pos:end="113:63">(<expr pos:start="111:9" pos:end="113:62"><call pos:start="111:9" pos:end="113:44"><name pos:start="111:9" pos:end="111:19">bdrv_pwrite</name><argument_list pos:start="111:20" pos:end="113:44">(<argument pos:start="111:21" pos:end="111:28"><expr pos:start="111:21" pos:end="111:28"><name pos:start="111:21" pos:end="111:28"><name pos:start="111:21" pos:end="111:22">bs</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:28">file</name></name></expr></argument>, <argument pos:start="111:31" pos:end="111:68"><expr pos:start="111:31" pos:end="111:68"><call pos:start="111:31" pos:end="111:68"><name pos:start="111:31" pos:end="111:38">offsetof</name><argument_list pos:start="111:39" pos:end="111:68">(<argument pos:start="111:40" pos:end="111:49"><expr pos:start="111:40" pos:end="111:49"><name pos:start="111:40" pos:end="111:49">QCowHeader</name></expr></argument>, <argument pos:start="111:52" pos:end="111:67"><expr pos:start="111:52" pos:end="111:67"><name pos:start="111:52" pos:end="111:67">snapshots_offset</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="113:21" pos:end="113:27"><expr pos:start="113:21" pos:end="113:27"><operator pos:start="113:21" pos:end="113:21">&amp;</operator><name pos:start="113:22" pos:end="113:27">data64</name></expr></argument>, <argument pos:start="113:30" pos:end="113:43"><expr pos:start="113:30" pos:end="113:43"><sizeof pos:start="113:30" pos:end="113:43">sizeof<argument_list pos:start="113:36" pos:end="113:43">(<argument pos:start="113:37" pos:end="113:42"><expr pos:start="113:37" pos:end="113:42"><name pos:start="113:37" pos:end="113:42">data64</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="113:46" pos:end="113:47">!=</operator> <sizeof pos:start="113:49" pos:end="113:62">sizeof<argument_list pos:start="113:55" pos:end="113:62">(<argument pos:start="113:56" pos:end="113:61"><expr pos:start="113:56" pos:end="113:61"><name pos:start="113:56" pos:end="113:61">data64</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:18"><block_content pos:start="115:9" pos:end="115:18">

        <goto pos:start="115:9" pos:end="115:18">goto <name pos:start="115:14" pos:end="115:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:42"><expr pos:start="117:5" pos:end="117:41"><name pos:start="117:5" pos:end="117:10">data32</name> <operator pos:start="117:12" pos:end="117:12">=</operator> <call pos:start="117:14" pos:end="117:41"><name pos:start="117:14" pos:end="117:24">cpu_to_be32</name><argument_list pos:start="117:25" pos:end="117:41">(<argument pos:start="117:26" pos:end="117:40"><expr pos:start="117:26" pos:end="117:40"><name pos:start="117:26" pos:end="117:40"><name pos:start="117:26" pos:end="117:26">s</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:40">nb_snapshots</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="119:5" pos:end="123:18"><if pos:start="119:5" pos:end="123:18">if <condition pos:start="119:8" pos:end="121:63">(<expr pos:start="119:9" pos:end="121:62"><call pos:start="119:9" pos:end="121:44"><name pos:start="119:9" pos:end="119:19">bdrv_pwrite</name><argument_list pos:start="119:20" pos:end="121:44">(<argument pos:start="119:21" pos:end="119:28"><expr pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:28"><name pos:start="119:21" pos:end="119:22">bs</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:28">file</name></name></expr></argument>, <argument pos:start="119:31" pos:end="119:64"><expr pos:start="119:31" pos:end="119:64"><call pos:start="119:31" pos:end="119:64"><name pos:start="119:31" pos:end="119:38">offsetof</name><argument_list pos:start="119:39" pos:end="119:64">(<argument pos:start="119:40" pos:end="119:49"><expr pos:start="119:40" pos:end="119:49"><name pos:start="119:40" pos:end="119:49">QCowHeader</name></expr></argument>, <argument pos:start="119:52" pos:end="119:63"><expr pos:start="119:52" pos:end="119:63"><name pos:start="119:52" pos:end="119:63">nb_snapshots</name></expr></argument>)</argument_list></call></expr></argument>,

                    <argument pos:start="121:21" pos:end="121:27"><expr pos:start="121:21" pos:end="121:27"><operator pos:start="121:21" pos:end="121:21">&amp;</operator><name pos:start="121:22" pos:end="121:27">data32</name></expr></argument>, <argument pos:start="121:30" pos:end="121:43"><expr pos:start="121:30" pos:end="121:43"><sizeof pos:start="121:30" pos:end="121:43">sizeof<argument_list pos:start="121:36" pos:end="121:43">(<argument pos:start="121:37" pos:end="121:42"><expr pos:start="121:37" pos:end="121:42"><name pos:start="121:37" pos:end="121:42">data32</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="121:46" pos:end="121:47">!=</operator> <sizeof pos:start="121:49" pos:end="121:62">sizeof<argument_list pos:start="121:55" pos:end="121:62">(<argument pos:start="121:56" pos:end="121:61"><expr pos:start="121:56" pos:end="121:61"><name pos:start="121:56" pos:end="121:61">data32</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:18"><block_content pos:start="123:9" pos:end="123:18">

        <goto pos:start="123:9" pos:end="123:18">goto <name pos:start="123:14" pos:end="123:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <comment type="block" pos:start="127:5" pos:end="127:37">/* free the old snapshot table */</comment>

    <expr_stmt pos:start="129:5" pos:end="129:68"><expr pos:start="129:5" pos:end="129:67"><call pos:start="129:5" pos:end="129:67"><name pos:start="129:5" pos:end="129:23">qcow2_free_clusters</name><argument_list pos:start="129:24" pos:end="129:67">(<argument pos:start="129:25" pos:end="129:26"><expr pos:start="129:25" pos:end="129:26"><name pos:start="129:25" pos:end="129:26">bs</name></expr></argument>, <argument pos:start="129:29" pos:end="129:47"><expr pos:start="129:29" pos:end="129:47"><name pos:start="129:29" pos:end="129:47"><name pos:start="129:29" pos:end="129:29">s</name><operator pos:start="129:30" pos:end="129:31">-&gt;</operator><name pos:start="129:32" pos:end="129:47">snapshots_offset</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:66"><expr pos:start="129:50" pos:end="129:66"><name pos:start="129:50" pos:end="129:66"><name pos:start="129:50" pos:end="129:50">s</name><operator pos:start="129:51" pos:end="129:52">-&gt;</operator><name pos:start="129:53" pos:end="129:66">snapshots_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:43"><expr pos:start="131:5" pos:end="131:42"><name pos:start="131:5" pos:end="131:23"><name pos:start="131:5" pos:end="131:5">s</name><operator pos:start="131:6" pos:end="131:7">-&gt;</operator><name pos:start="131:8" pos:end="131:23">snapshots_offset</name></name> <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:42">snapshots_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:39"><expr pos:start="133:5" pos:end="133:38"><name pos:start="133:5" pos:end="133:21"><name pos:start="133:5" pos:end="133:5">s</name><operator pos:start="133:6" pos:end="133:7">-&gt;</operator><name pos:start="133:8" pos:end="133:21">snapshots_size</name></name> <operator pos:start="133:23" pos:end="133:23">=</operator> <name pos:start="133:25" pos:end="133:38">snapshots_size</name></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

 <label pos:start="137:2" pos:end="137:6"><name pos:start="137:2" pos:end="137:5">fail</name>:</label>

    <return pos:start="139:5" pos:end="139:14">return <expr pos:start="139:12" pos:end="139:13"><operator pos:start="139:12" pos:end="139:12">-</operator><literal type="number" pos:start="139:13" pos:end="139:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
