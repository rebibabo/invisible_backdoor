<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22026.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">subband_scale</name><parameter_list pos:start="1:26" pos:end="1:77">(<parameter pos:start="1:27" pos:end="1:34"><decl pos:start="1:27" pos:end="1:34"><type pos:start="1:27" pos:end="1:34"><name pos:start="1:27" pos:end="1:29">int</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">dst</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:44"><decl pos:start="1:37" pos:end="1:44"><type pos:start="1:37" pos:end="1:44"><name pos:start="1:37" pos:end="1:39">int</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">src</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:55"><decl pos:start="1:47" pos:end="1:55"><type pos:start="1:47" pos:end="1:55"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:55">scale</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:67">offset</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:76"><decl pos:start="1:70" pos:end="1:76"><type pos:start="1:70" pos:end="1:76"><name pos:start="1:70" pos:end="1:72">int</name></type> <name pos:start="1:74" pos:end="1:76">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">ssign</name> <init pos:start="5:15" pos:end="5:34">= <expr pos:start="5:17" pos:end="5:34"><ternary pos:start="5:17" pos:end="5:34"><condition pos:start="5:17" pos:end="5:27"><expr pos:start="5:17" pos:end="5:25"><name pos:start="5:17" pos:end="5:21">scale</name> <operator pos:start="5:23" pos:end="5:23">&lt;</operator> <literal type="number" pos:start="5:25" pos:end="5:25">0</literal></expr> ?</condition><then pos:start="5:29" pos:end="5:30"> <expr pos:start="5:29" pos:end="5:30"><operator pos:start="5:29" pos:end="5:29">-</operator><literal type="number" pos:start="5:30" pos:end="5:30">1</literal></expr> </then><else pos:start="5:32" pos:end="5:34">: <expr pos:start="5:34" pos:end="5:34"><literal type="number" pos:start="5:34" pos:end="5:34">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">s</name> <init pos:start="7:11" pos:end="7:24">= <expr pos:start="7:13" pos:end="7:24"><call pos:start="7:13" pos:end="7:24"><name pos:start="7:13" pos:end="7:17">FFABS</name><argument_list pos:start="7:18" pos:end="7:24">(<argument pos:start="7:19" pos:end="7:23"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:23">scale</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:22">round</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">out</name></decl>, <decl pos:start="11:17" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:17">c</name> <init pos:start="11:19" pos:end="11:34">= <expr pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:34"><name pos:start="11:21" pos:end="11:27">exp2tab</name><index pos:start="11:28" pos:end="11:34">[<expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:29">s</name> <operator pos:start="11:31" pos:end="11:31">&amp;</operator> <literal type="number" pos:start="11:33" pos:end="11:33">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:5">s</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <name pos:start="15:9" pos:end="15:14">offset</name> <operator pos:start="15:16" pos:end="15:16">-</operator> <operator pos:start="15:18" pos:end="15:18">(</operator><name pos:start="15:19" pos:end="15:19">s</name> <operator pos:start="15:21" pos:end="15:22">&gt;&gt;</operator> <literal type="number" pos:start="15:24" pos:end="15:24">2</literal><operator pos:start="15:25" pos:end="15:25">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="55:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:15">(<expr pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">s</name> <operator pos:start="19:11" pos:end="19:11">&gt;</operator> <literal type="number" pos:start="19:13" pos:end="19:14">31</literal></expr>)</condition> <block pos:start="19:17" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:9">

        <for pos:start="21:9" pos:end="25:9">for <control pos:start="21:13" pos:end="21:29">(<init pos:start="21:14" pos:end="21:17"><expr pos:start="21:14" pos:end="21:16"><name pos:start="21:14" pos:end="21:14">i</name><operator pos:start="21:15" pos:end="21:15">=</operator><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</init> <condition pos:start="21:19" pos:end="21:24"><expr pos:start="21:19" pos:end="21:23"><name pos:start="21:19" pos:end="21:19">i</name><operator pos:start="21:20" pos:end="21:20">&lt;</operator><name pos:start="21:21" pos:end="21:23">len</name></expr>;</condition> <incr pos:start="21:26" pos:end="21:28"><expr pos:start="21:26" pos:end="21:28"><name pos:start="21:26" pos:end="21:26">i</name><operator pos:start="21:27" pos:end="21:28">++</operator></expr></incr>)</control> <block pos:start="21:31" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:23">

            <expr_stmt pos:start="23:13" pos:end="23:23"><expr pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">dst</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">i</name></expr>]</index></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="27:7" pos:end="39:5">else if <condition pos:start="27:15" pos:end="27:21">(<expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">s</name> <operator pos:start="27:18" pos:end="27:18">&gt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>)</condition> <block pos:start="27:23" pos:end="39:5">{<block_content pos:start="29:9" pos:end="37:9">

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:13">round</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <literal type="number" pos:start="29:17" pos:end="29:17">1</literal> <operator pos:start="29:19" pos:end="29:20">&lt;&lt;</operator> <operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:23">s</name><operator pos:start="29:24" pos:end="29:24">-</operator><literal type="number" pos:start="29:25" pos:end="29:25">1</literal><operator pos:start="29:26" pos:end="29:26">)</operator></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="37:9">for <control pos:start="31:13" pos:end="31:29">(<init pos:start="31:14" pos:end="31:17"><expr pos:start="31:14" pos:end="31:16"><name pos:start="31:14" pos:end="31:14">i</name><operator pos:start="31:15" pos:end="31:15">=</operator><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</init> <condition pos:start="31:19" pos:end="31:24"><expr pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">i</name><operator pos:start="31:20" pos:end="31:20">&lt;</operator><name pos:start="31:21" pos:end="31:23">len</name></expr>;</condition> <incr pos:start="31:26" pos:end="31:28"><expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:26">i</name><operator pos:start="31:27" pos:end="31:28">++</operator></expr></incr>)</control> <block pos:start="31:31" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:53">

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:15">out</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <operator pos:start="33:19" pos:end="33:19">(</operator><name pos:start="33:20" pos:end="33:22">int</name><operator pos:start="33:23" pos:end="33:23">)</operator><operator pos:start="33:24" pos:end="33:24">(</operator><operator pos:start="33:25" pos:end="33:25">(</operator><operator pos:start="33:26" pos:end="33:26">(</operator><name pos:start="33:27" pos:end="33:33">int64_t</name><operator pos:start="33:34" pos:end="33:34">)</operator><name pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:37">src</name><index pos:start="33:38" pos:end="33:40">[<expr pos:start="33:39" pos:end="33:39"><name pos:start="33:39" pos:end="33:39">i</name></expr>]</index></name> <operator pos:start="33:42" pos:end="33:42">*</operator> <name pos:start="33:44" pos:end="33:44">c</name><operator pos:start="33:45" pos:end="33:45">)</operator> <operator pos:start="33:47" pos:end="33:48">&gt;&gt;</operator> <literal type="number" pos:start="33:50" pos:end="33:51">32</literal><operator pos:start="33:52" pos:end="33:52">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:53"><expr pos:start="35:13" pos:end="35:52"><name pos:start="35:13" pos:end="35:18"><name pos:start="35:13" pos:end="35:15">dst</name><index pos:start="35:16" pos:end="35:18">[<expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">i</name></expr>]</index></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">(</operator><operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:26">int</name><operator pos:start="35:27" pos:end="35:27">)</operator><operator pos:start="35:28" pos:end="35:28">(</operator><name pos:start="35:29" pos:end="35:31">out</name><operator pos:start="35:32" pos:end="35:32">+</operator><name pos:start="35:33" pos:end="35:37">round</name><operator pos:start="35:38" pos:end="35:38">)</operator> <operator pos:start="35:40" pos:end="35:41">&gt;&gt;</operator> <name pos:start="35:43" pos:end="35:43">s</name><operator pos:start="35:44" pos:end="35:44">)</operator> <operator pos:start="35:46" pos:end="35:46">*</operator> <name pos:start="35:48" pos:end="35:52">ssign</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if>

    <else pos:start="41:5" pos:end="55:5">else <block pos:start="41:10" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:9">

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:9">s</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <name pos:start="43:13" pos:end="43:13">s</name> <operator pos:start="43:15" pos:end="43:15">+</operator> <literal type="number" pos:start="43:17" pos:end="43:18">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:13">round</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <literal type="number" pos:start="45:17" pos:end="45:18">1U</literal> <operator pos:start="45:20" pos:end="45:21">&lt;&lt;</operator> <operator pos:start="45:23" pos:end="45:23">(</operator><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:25">-</operator><literal type="number" pos:start="45:26" pos:end="45:26">1</literal><operator pos:start="45:27" pos:end="45:27">)</operator></expr>;</expr_stmt>

        <for pos:start="47:9" pos:end="53:9">for <control pos:start="47:13" pos:end="47:29">(<init pos:start="47:14" pos:end="47:17"><expr pos:start="47:14" pos:end="47:16"><name pos:start="47:14" pos:end="47:14">i</name><operator pos:start="47:15" pos:end="47:15">=</operator><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</init> <condition pos:start="47:19" pos:end="47:24"><expr pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">i</name><operator pos:start="47:20" pos:end="47:20">&lt;</operator><name pos:start="47:21" pos:end="47:23">len</name></expr>;</condition> <incr pos:start="47:26" pos:end="47:28"><expr pos:start="47:26" pos:end="47:28"><name pos:start="47:26" pos:end="47:26">i</name><operator pos:start="47:27" pos:end="47:28">++</operator></expr></incr>)</control> <block pos:start="47:31" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:33">

            <expr_stmt pos:start="49:13" pos:end="49:69"><expr pos:start="49:13" pos:end="49:68"><name pos:start="49:13" pos:end="49:15">out</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <operator pos:start="49:19" pos:end="49:19">(</operator><name pos:start="49:20" pos:end="49:22">int</name><operator pos:start="49:23" pos:end="49:23">)</operator><operator pos:start="49:24" pos:end="49:24">(</operator><operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:32">int64_t</name><operator pos:start="49:33" pos:end="49:33">)</operator><operator pos:start="49:34" pos:end="49:34">(</operator><operator pos:start="49:35" pos:end="49:35">(</operator><name pos:start="49:36" pos:end="49:42">int64_t</name><operator pos:start="49:43" pos:end="49:43">)</operator><name pos:start="49:44" pos:end="49:49"><name pos:start="49:44" pos:end="49:46">src</name><index pos:start="49:47" pos:end="49:49">[<expr pos:start="49:48" pos:end="49:48"><name pos:start="49:48" pos:end="49:48">i</name></expr>]</index></name> <operator pos:start="49:51" pos:end="49:51">*</operator> <name pos:start="49:53" pos:end="49:53">c</name> <operator pos:start="49:55" pos:end="49:55">+</operator> <name pos:start="49:57" pos:end="49:61">round</name><operator pos:start="49:62" pos:end="49:62">)</operator> <operator pos:start="49:64" pos:end="49:65">&gt;&gt;</operator> <name pos:start="49:67" pos:end="49:67">s</name><operator pos:start="49:68" pos:end="49:68">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:33"><expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:15">dst</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">i</name></expr>]</index></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:24">out</name> <operator pos:start="51:26" pos:end="51:26">*</operator> <name pos:start="51:28" pos:end="51:32">ssign</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
