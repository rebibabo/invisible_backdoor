<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14064.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:13">cpu_loop</name><parameter_list pos:start="1:14" pos:end="1:32">(<parameter pos:start="1:15" pos:end="1:31"><decl pos:start="1:15" pos:end="1:31"><type pos:start="1:15" pos:end="1:28"><name pos:start="1:15" pos:end="1:26">CPUM68KState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:5">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">CPUState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">cs</name> <init pos:start="5:18" pos:end="5:45">= <expr pos:start="5:20" pos:end="5:45"><call pos:start="5:20" pos:end="5:45"><name pos:start="5:20" pos:end="5:22">CPU</name><argument_list pos:start="5:23" pos:end="5:45">(<argument pos:start="5:24" pos:end="5:44"><expr pos:start="5:24" pos:end="5:44"><call pos:start="5:24" pos:end="5:44"><name pos:start="5:24" pos:end="5:39">m68k_env_get_cpu</name><argument_list pos:start="5:40" pos:end="5:44">(<argument pos:start="5:41" pos:end="5:43"><expr pos:start="5:41" pos:end="5:43"><name pos:start="5:41" pos:end="5:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">trapnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:18">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:20">target_siginfo_t</name></type> <name pos:start="11:22" pos:end="11:25">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">TaskState</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">ts</name> <init pos:start="13:19" pos:end="13:30">= <expr pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:30"><name pos:start="13:21" pos:end="13:22">cs</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:30">opaque</name></name></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="191:5">for<control pos:start="17:8" pos:end="17:11">(<init pos:start="17:9" pos:end="17:9">;</init><condition pos:start="17:10" pos:end="17:10">;</condition><incr/>)</control> <block pos:start="17:13" pos:end="191:5">{<block_content pos:start="19:9" pos:end="189:37">

        <expr_stmt pos:start="19:9" pos:end="19:27"><expr pos:start="19:9" pos:end="19:26"><call pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:22">cpu_exec_start</name><argument_list pos:start="19:23" pos:end="19:26">(<argument pos:start="19:24" pos:end="19:25"><expr pos:start="19:24" pos:end="19:25"><name pos:start="19:24" pos:end="19:25">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:14">trapnr</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <call pos:start="21:18" pos:end="21:29"><name pos:start="21:18" pos:end="21:25">cpu_exec</name><argument_list pos:start="21:26" pos:end="21:29">(<argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><name pos:start="21:27" pos:end="21:28">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:25"><expr pos:start="23:9" pos:end="23:24"><call pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:20">cpu_exec_end</name><argument_list pos:start="23:21" pos:end="23:24">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:36"><expr pos:start="25:9" pos:end="25:35"><call pos:start="25:9" pos:end="25:35"><name pos:start="25:9" pos:end="25:31">process_queued_cpu_work</name><argument_list pos:start="25:32" pos:end="25:35">(<argument pos:start="25:33" pos:end="25:34"><expr pos:start="25:33" pos:end="25:34"><name pos:start="25:33" pos:end="25:34">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="29:9" pos:end="187:9">switch<condition pos:start="29:15" pos:end="29:22">(<expr pos:start="29:16" pos:end="29:21"><name pos:start="29:16" pos:end="29:21">trapnr</name></expr>)</condition> <block pos:start="29:24" pos:end="187:9">{<block_content pos:start="31:9" pos:end="185:20">

        <case pos:start="31:9" pos:end="31:26">case <expr pos:start="31:14" pos:end="31:25"><name pos:start="31:14" pos:end="31:25">EXCP_ILLEGAL</name></expr>:</case>

            <block pos:start="33:13" pos:end="51:13">{<block_content pos:start="35:17" pos:end="49:17">

                <if_stmt pos:start="35:17" pos:end="49:17"><if pos:start="35:17" pos:end="45:17">if <condition pos:start="35:20" pos:end="35:37">(<expr pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:36"><name pos:start="35:21" pos:end="35:22">ts</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:36">sim_syscalls</name></name></expr>)</condition> <block pos:start="35:39" pos:end="45:17">{<block_content pos:start="37:21" pos:end="43:45">

                    <decl_stmt pos:start="37:21" pos:end="37:32"><decl pos:start="37:21" pos:end="37:31"><type pos:start="37:21" pos:end="37:28"><name pos:start="37:21" pos:end="37:28">uint16_t</name></type> <name pos:start="37:30" pos:end="37:31">nr</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="39:21" pos:end="39:50"><expr pos:start="39:21" pos:end="39:49"><call pos:start="39:21" pos:end="39:49"><name pos:start="39:21" pos:end="39:32">get_user_u16</name><argument_list pos:start="39:33" pos:end="39:49">(<argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><name pos:start="39:34" pos:end="39:35">nr</name></expr></argument>, <argument pos:start="39:38" pos:end="39:48"><expr pos:start="39:38" pos:end="39:48"><name pos:start="39:38" pos:end="39:44"><name pos:start="39:38" pos:end="39:40">env</name><operator pos:start="39:41" pos:end="39:42">-&gt;</operator><name pos:start="39:43" pos:end="39:44">pc</name></name> <operator pos:start="39:46" pos:end="39:46">+</operator> <literal type="number" pos:start="39:48" pos:end="39:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="41:21" pos:end="41:33"><expr pos:start="41:21" pos:end="41:32"><name pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:23">env</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:27">pc</name></name> <operator pos:start="41:29" pos:end="41:30">+=</operator> <literal type="number" pos:start="41:32" pos:end="41:32">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="43:21" pos:end="43:45"><expr pos:start="43:21" pos:end="43:44"><call pos:start="43:21" pos:end="43:44"><name pos:start="43:21" pos:end="43:35">do_m68k_simcall</name><argument_list pos:start="43:36" pos:end="43:44">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">env</name></expr></argument>, <argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><name pos:start="43:42" pos:end="43:43">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="45:19" pos:end="49:17">else <block pos:start="45:24" pos:end="49:17">{<block_content pos:start="47:21" pos:end="47:35">

                    <goto pos:start="47:21" pos:end="47:35">goto <name pos:start="47:26" pos:end="47:34">do_sigill</name>;</goto>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block>


        <case pos:start="54:9" pos:end="54:28">case <expr pos:start="54:14" pos:end="54:27"><name pos:start="54:14" pos:end="54:27">EXCP_HALT_INSN</name></expr>:</case>

            <comment type="block" pos:start="56:13" pos:end="56:38">/* Semihosing syscall.  */</comment>

            <expr_stmt pos:start="58:13" pos:end="58:25"><expr pos:start="58:13" pos:end="58:24"><name pos:start="58:13" pos:end="58:19"><name pos:start="58:13" pos:end="58:15">env</name><operator pos:start="58:16" pos:end="58:17">-&gt;</operator><name pos:start="58:18" pos:end="58:19">pc</name></name> <operator pos:start="58:21" pos:end="58:22">+=</operator> <literal type="number" pos:start="58:24" pos:end="58:24">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="60:13" pos:end="60:52"><expr pos:start="60:13" pos:end="60:51"><call pos:start="60:13" pos:end="60:51"><name pos:start="60:13" pos:end="60:31">do_m68k_semihosting</name><argument_list pos:start="60:32" pos:end="60:51">(<argument pos:start="60:33" pos:end="60:35"><expr pos:start="60:33" pos:end="60:35"><name pos:start="60:33" pos:end="60:35">env</name></expr></argument>, <argument pos:start="60:38" pos:end="60:50"><expr pos:start="60:38" pos:end="60:50"><name pos:start="60:38" pos:end="60:50"><name pos:start="60:38" pos:end="60:40">env</name><operator pos:start="60:41" pos:end="60:42">-&gt;</operator><name pos:start="60:43" pos:end="60:47">dregs</name><index pos:start="60:48" pos:end="60:50">[<expr pos:start="60:49" pos:end="60:49"><literal type="number" pos:start="60:49" pos:end="60:49">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <case pos:start="63:9" pos:end="63:24">case <expr pos:start="63:14" pos:end="63:23"><name pos:start="63:14" pos:end="63:23">EXCP_LINEA</name></expr>:</case>

        <case pos:start="65:9" pos:end="65:24">case <expr pos:start="65:14" pos:end="65:23"><name pos:start="65:14" pos:end="65:23">EXCP_LINEF</name></expr>:</case>

        <case pos:start="67:9" pos:end="67:30">case <expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">EXCP_UNSUPPORTED</name></expr>:</case>

        <label pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:17">do_sigill</name>:</label>

            <expr_stmt pos:start="71:13" pos:end="71:42"><expr pos:start="71:13" pos:end="71:41"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:16">info</name><operator pos:start="71:17" pos:end="71:17">.</operator><name pos:start="71:18" pos:end="71:25">si_signo</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:41">TARGET_SIGILL</name></expr>;</expr_stmt>


            <expr_stmt pos:start="74:13" pos:end="74:45"><expr pos:start="74:13" pos:end="74:44"><name pos:start="74:13" pos:end="74:24"><name pos:start="74:13" pos:end="74:16">info</name><operator pos:start="74:17" pos:end="74:17">.</operator><name pos:start="74:18" pos:end="74:24">si_code</name></name> <operator pos:start="74:26" pos:end="74:26">=</operator> <name pos:start="74:28" pos:end="74:44">TARGET_ILL_ILLOPN</name></expr>;</expr_stmt>











        <case pos:start="86:9" pos:end="86:24">case <expr pos:start="86:14" pos:end="86:23"><name pos:start="86:14" pos:end="86:23">EXCP_TRAP0</name></expr>:</case>

            <block pos:start="88:13" pos:end="126:13">{<block_content pos:start="90:17" pos:end="124:17">

                <decl_stmt pos:start="90:17" pos:end="90:29"><decl pos:start="90:17" pos:end="90:28"><type pos:start="90:17" pos:end="90:24"><name pos:start="90:17" pos:end="90:24">abi_long</name></type> <name pos:start="90:26" pos:end="90:28">ret</name></decl>;</decl_stmt>

                <expr_stmt pos:start="92:17" pos:end="92:37"><expr pos:start="92:17" pos:end="92:36"><name pos:start="92:17" pos:end="92:32"><name pos:start="92:17" pos:end="92:18">ts</name><operator pos:start="92:19" pos:end="92:20">-&gt;</operator><name pos:start="92:21" pos:end="92:32">sim_syscalls</name></name> <operator pos:start="92:34" pos:end="92:34">=</operator> <literal type="number" pos:start="92:36" pos:end="92:36">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="94:17" pos:end="94:34"><expr pos:start="94:17" pos:end="94:33"><name pos:start="94:17" pos:end="94:17">n</name> <operator pos:start="94:19" pos:end="94:19">=</operator> <name pos:start="94:21" pos:end="94:33"><name pos:start="94:21" pos:end="94:23">env</name><operator pos:start="94:24" pos:end="94:25">-&gt;</operator><name pos:start="94:26" pos:end="94:30">dregs</name><index pos:start="94:31" pos:end="94:33">[<expr pos:start="94:32" pos:end="94:32"><literal type="number" pos:start="94:32" pos:end="94:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="96:17" pos:end="96:29"><expr pos:start="96:17" pos:end="96:28"><name pos:start="96:17" pos:end="96:23"><name pos:start="96:17" pos:end="96:19">env</name><operator pos:start="96:20" pos:end="96:21">-&gt;</operator><name pos:start="96:22" pos:end="96:23">pc</name></name> <operator pos:start="96:25" pos:end="96:26">+=</operator> <literal type="number" pos:start="96:28" pos:end="96:28">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="98:17" pos:end="114:39"><expr pos:start="98:17" pos:end="114:38"><name pos:start="98:17" pos:end="98:19">ret</name> <operator pos:start="98:21" pos:end="98:21">=</operator> <call pos:start="98:23" pos:end="114:38"><name pos:start="98:23" pos:end="98:32">do_syscall</name><argument_list pos:start="98:33" pos:end="114:38">(<argument pos:start="98:34" pos:end="98:36"><expr pos:start="98:34" pos:end="98:36"><name pos:start="98:34" pos:end="98:36">env</name></expr></argument>,

                                 <argument pos:start="100:34" pos:end="100:34"><expr pos:start="100:34" pos:end="100:34"><name pos:start="100:34" pos:end="100:34">n</name></expr></argument>,

                                 <argument pos:start="102:34" pos:end="102:46"><expr pos:start="102:34" pos:end="102:46"><name pos:start="102:34" pos:end="102:46"><name pos:start="102:34" pos:end="102:36">env</name><operator pos:start="102:37" pos:end="102:38">-&gt;</operator><name pos:start="102:39" pos:end="102:43">dregs</name><index pos:start="102:44" pos:end="102:46">[<expr pos:start="102:45" pos:end="102:45"><literal type="number" pos:start="102:45" pos:end="102:45">1</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="104:34" pos:end="104:46"><expr pos:start="104:34" pos:end="104:46"><name pos:start="104:34" pos:end="104:46"><name pos:start="104:34" pos:end="104:36">env</name><operator pos:start="104:37" pos:end="104:38">-&gt;</operator><name pos:start="104:39" pos:end="104:43">dregs</name><index pos:start="104:44" pos:end="104:46">[<expr pos:start="104:45" pos:end="104:45"><literal type="number" pos:start="104:45" pos:end="104:45">2</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="106:34" pos:end="106:46"><expr pos:start="106:34" pos:end="106:46"><name pos:start="106:34" pos:end="106:46"><name pos:start="106:34" pos:end="106:36">env</name><operator pos:start="106:37" pos:end="106:38">-&gt;</operator><name pos:start="106:39" pos:end="106:43">dregs</name><index pos:start="106:44" pos:end="106:46">[<expr pos:start="106:45" pos:end="106:45"><literal type="number" pos:start="106:45" pos:end="106:45">3</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="108:34" pos:end="108:46"><expr pos:start="108:34" pos:end="108:46"><name pos:start="108:34" pos:end="108:46"><name pos:start="108:34" pos:end="108:36">env</name><operator pos:start="108:37" pos:end="108:38">-&gt;</operator><name pos:start="108:39" pos:end="108:43">dregs</name><index pos:start="108:44" pos:end="108:46">[<expr pos:start="108:45" pos:end="108:45"><literal type="number" pos:start="108:45" pos:end="108:45">4</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="110:34" pos:end="110:46"><expr pos:start="110:34" pos:end="110:46"><name pos:start="110:34" pos:end="110:46"><name pos:start="110:34" pos:end="110:36">env</name><operator pos:start="110:37" pos:end="110:38">-&gt;</operator><name pos:start="110:39" pos:end="110:43">dregs</name><index pos:start="110:44" pos:end="110:46">[<expr pos:start="110:45" pos:end="110:45"><literal type="number" pos:start="110:45" pos:end="110:45">5</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="112:34" pos:end="112:46"><expr pos:start="112:34" pos:end="112:46"><name pos:start="112:34" pos:end="112:46"><name pos:start="112:34" pos:end="112:36">env</name><operator pos:start="112:37" pos:end="112:38">-&gt;</operator><name pos:start="112:39" pos:end="112:43">aregs</name><index pos:start="112:44" pos:end="112:46">[<expr pos:start="112:45" pos:end="112:45"><literal type="number" pos:start="112:45" pos:end="112:45">0</literal></expr>]</index></name></expr></argument>,

                                 <argument pos:start="114:34" pos:end="114:34"><expr pos:start="114:34" pos:end="114:34"><literal type="number" pos:start="114:34" pos:end="114:34">0</literal></expr></argument>, <argument pos:start="114:37" pos:end="114:37"><expr pos:start="114:37" pos:end="114:37"><literal type="number" pos:start="114:37" pos:end="114:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="116:17" pos:end="124:17"><if pos:start="116:17" pos:end="120:17">if <condition pos:start="116:20" pos:end="116:47">(<expr pos:start="116:21" pos:end="116:46"><name pos:start="116:21" pos:end="116:23">ret</name> <operator pos:start="116:25" pos:end="116:26">==</operator> <operator pos:start="116:28" pos:end="116:28">-</operator><name pos:start="116:29" pos:end="116:46">TARGET_ERESTARTSYS</name></expr>)</condition> <block pos:start="116:49" pos:end="120:17">{<block_content pos:start="118:21" pos:end="118:33">

                    <expr_stmt pos:start="118:21" pos:end="118:33"><expr pos:start="118:21" pos:end="118:32"><name pos:start="118:21" pos:end="118:27"><name pos:start="118:21" pos:end="118:23">env</name><operator pos:start="118:24" pos:end="118:25">-&gt;</operator><name pos:start="118:26" pos:end="118:27">pc</name></name> <operator pos:start="118:29" pos:end="118:30">-=</operator> <literal type="number" pos:start="118:32" pos:end="118:32">2</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="120:19" pos:end="124:17">else if <condition pos:start="120:27" pos:end="120:58">(<expr pos:start="120:28" pos:end="120:57"><name pos:start="120:28" pos:end="120:30">ret</name> <operator pos:start="120:32" pos:end="120:33">!=</operator> <operator pos:start="120:35" pos:end="120:35">-</operator><name pos:start="120:36" pos:end="120:57">TARGET_QEMU_ESIGRETURN</name></expr>)</condition> <block pos:start="120:60" pos:end="124:17">{<block_content pos:start="122:21" pos:end="122:40">

                    <expr_stmt pos:start="122:21" pos:end="122:40"><expr pos:start="122:21" pos:end="122:39"><name pos:start="122:21" pos:end="122:33"><name pos:start="122:21" pos:end="122:23">env</name><operator pos:start="122:24" pos:end="122:25">-&gt;</operator><name pos:start="122:26" pos:end="122:30">dregs</name><index pos:start="122:31" pos:end="122:33">[<expr pos:start="122:32" pos:end="122:32"><literal type="number" pos:start="122:32" pos:end="122:32">0</literal></expr>]</index></name> <operator pos:start="122:35" pos:end="122:35">=</operator> <name pos:start="122:37" pos:end="122:39">ret</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>


        <case pos:start="129:9" pos:end="129:28">case <expr pos:start="129:14" pos:end="129:27"><name pos:start="129:14" pos:end="129:27">EXCP_INTERRUPT</name></expr>:</case>

            <comment type="block" pos:start="131:13" pos:end="131:67">/* just indicate that signals should be handled asap */</comment>


        <case pos:start="134:9" pos:end="134:25">case <expr pos:start="134:14" pos:end="134:24"><name pos:start="134:14" pos:end="134:24">EXCP_ACCESS</name></expr>:</case>

            <block pos:start="136:13" pos:end="148:13">{<block_content pos:start="138:17" pos:end="145:61">

                <expr_stmt pos:start="138:17" pos:end="138:47"><expr pos:start="138:17" pos:end="138:46"><name pos:start="138:17" pos:end="138:29"><name pos:start="138:17" pos:end="138:20">info</name><operator pos:start="138:21" pos:end="138:21">.</operator><name pos:start="138:22" pos:end="138:29">si_signo</name></name> <operator pos:start="138:31" pos:end="138:31">=</operator> <name pos:start="138:33" pos:end="138:46">TARGET_SIGSEGV</name></expr>;</expr_stmt>


                <comment type="block" pos:start="141:17" pos:end="141:48">/* XXX: check env-&gt;error_code */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:50"><expr pos:start="143:17" pos:end="143:49"><name pos:start="143:17" pos:end="143:28"><name pos:start="143:17" pos:end="143:20">info</name><operator pos:start="143:21" pos:end="143:21">.</operator><name pos:start="143:22" pos:end="143:28">si_code</name></name> <operator pos:start="143:30" pos:end="143:30">=</operator> <name pos:start="143:32" pos:end="143:49">TARGET_SEGV_MAPERR</name></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:61"><expr pos:start="145:17" pos:end="145:60"><name pos:start="145:17" pos:end="145:46"><name pos:start="145:17" pos:end="145:20">info</name><operator pos:start="145:21" pos:end="145:21">.</operator><name pos:start="145:22" pos:end="145:30">_sifields</name><operator pos:start="145:31" pos:end="145:31">.</operator><name pos:start="145:32" pos:end="145:40">_sigfault</name><operator pos:start="145:41" pos:end="145:41">.</operator><name pos:start="145:42" pos:end="145:46">_addr</name></name> <operator pos:start="145:48" pos:end="145:48">=</operator> <name pos:start="145:50" pos:end="145:60"><name pos:start="145:50" pos:end="145:52">env</name><operator pos:start="145:53" pos:end="145:54">-&gt;</operator><name pos:start="145:55" pos:end="145:57">mmu</name><operator pos:start="145:58" pos:end="145:58">.</operator><name pos:start="145:59" pos:end="145:60">ar</name></name></expr>;</expr_stmt>


            </block_content>}</block>


        <case pos:start="151:9" pos:end="151:24">case <expr pos:start="151:14" pos:end="151:23"><name pos:start="151:14" pos:end="151:23">EXCP_DEBUG</name></expr>:</case>

            <block pos:start="153:13" pos:end="173:13">{<block_content pos:start="155:17" pos:end="171:19">

                <decl_stmt pos:start="155:17" pos:end="155:24"><decl pos:start="155:17" pos:end="155:23"><type pos:start="155:17" pos:end="155:19"><name pos:start="155:17" pos:end="155:19">int</name></type> <name pos:start="155:21" pos:end="155:23">sig</name></decl>;</decl_stmt>



                <expr_stmt pos:start="159:17" pos:end="159:56"><expr pos:start="159:17" pos:end="159:55"><name pos:start="159:17" pos:end="159:19">sig</name> <operator pos:start="159:21" pos:end="159:21">=</operator> <call pos:start="159:23" pos:end="159:55"><name pos:start="159:23" pos:end="159:35">gdb_handlesig</name><argument_list pos:start="159:36" pos:end="159:55">(<argument pos:start="159:37" pos:end="159:38"><expr pos:start="159:37" pos:end="159:38"><name pos:start="159:37" pos:end="159:38">cs</name></expr></argument>, <argument pos:start="159:41" pos:end="159:54"><expr pos:start="159:41" pos:end="159:54"><name pos:start="159:41" pos:end="159:54">TARGET_SIGTRAP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="171:19"><if pos:start="161:17" pos:end="171:19">if <condition pos:start="161:20" pos:end="161:24">(<expr pos:start="161:21" pos:end="161:23"><name pos:start="161:21" pos:end="161:23">sig</name></expr>)</condition>

                  <block pos:start="163:19" pos:end="171:19">{<block_content pos:start="165:21" pos:end="168:53">

                    <expr_stmt pos:start="165:21" pos:end="165:40"><expr pos:start="165:21" pos:end="165:39"><name pos:start="165:21" pos:end="165:33"><name pos:start="165:21" pos:end="165:24">info</name><operator pos:start="165:25" pos:end="165:25">.</operator><name pos:start="165:26" pos:end="165:33">si_signo</name></name> <operator pos:start="165:35" pos:end="165:35">=</operator> <name pos:start="165:37" pos:end="165:39">sig</name></expr>;</expr_stmt>


                    <expr_stmt pos:start="168:21" pos:end="168:53"><expr pos:start="168:21" pos:end="168:52"><name pos:start="168:21" pos:end="168:32"><name pos:start="168:21" pos:end="168:24">info</name><operator pos:start="168:25" pos:end="168:25">.</operator><name pos:start="168:26" pos:end="168:32">si_code</name></name> <operator pos:start="168:34" pos:end="168:34">=</operator> <name pos:start="168:36" pos:end="168:52">TARGET_TRAP_BRKPT</name></expr>;</expr_stmt>


                  </block_content>}</block></if></if_stmt>

            </block_content>}</block>


        <case pos:start="176:9" pos:end="176:25">case <expr pos:start="176:14" pos:end="176:24"><name pos:start="176:14" pos:end="176:24">EXCP_ATOMIC</name></expr>:</case>

            <expr_stmt pos:start="178:13" pos:end="178:37"><expr pos:start="178:13" pos:end="178:36"><call pos:start="178:13" pos:end="178:36"><name pos:start="178:13" pos:end="178:32">cpu_exec_step_atomic</name><argument_list pos:start="178:33" pos:end="178:36">(<argument pos:start="178:34" pos:end="178:35"><expr pos:start="178:34" pos:end="178:35"><name pos:start="178:34" pos:end="178:35">cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


        <default pos:start="181:9" pos:end="181:16">default:</default>

            <expr_stmt pos:start="183:13" pos:end="183:86"><expr pos:start="183:13" pos:end="183:85"><call pos:start="183:13" pos:end="183:85"><name pos:start="183:13" pos:end="183:21">EXCP_DUMP</name><argument_list pos:start="183:22" pos:end="183:85">(<argument pos:start="183:23" pos:end="183:25"><expr pos:start="183:23" pos:end="183:25"><name pos:start="183:23" pos:end="183:25">env</name></expr></argument>, <argument pos:start="183:28" pos:end="183:76"><expr pos:start="183:28" pos:end="183:76"><literal type="string" pos:start="183:28" pos:end="183:76">"qemu: unhandled CPU exception 0x%x - aborting\n"</literal></expr></argument>, <argument pos:start="183:79" pos:end="183:84"><expr pos:start="183:79" pos:end="183:84"><name pos:start="183:79" pos:end="183:84">trapnr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:20"><expr pos:start="185:13" pos:end="185:19"><call pos:start="185:13" pos:end="185:19"><name pos:start="185:13" pos:end="185:17">abort</name><argument_list pos:start="185:18" pos:end="185:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

        <expr_stmt pos:start="189:9" pos:end="189:37"><expr pos:start="189:9" pos:end="189:36"><call pos:start="189:9" pos:end="189:36"><name pos:start="189:9" pos:end="189:31">process_pending_signals</name><argument_list pos:start="189:32" pos:end="189:36">(<argument pos:start="189:33" pos:end="189:35"><expr pos:start="189:33" pos:end="189:35"><name pos:start="189:33" pos:end="189:35">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function></unit>
