<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20044.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_frame_header</name><parameter_list pos:start="1:31" pos:end="3:67">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:41">NUTContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">nut</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:55">int64_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pts</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:65">int</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:76">stream_id</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:50"><decl pos:start="3:32" pos:end="3:50"><type pos:start="3:32" pos:end="3:50"><name pos:start="3:32" pos:end="3:38">uint8_t</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:50">header_idx</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:66"><decl pos:start="3:53" pos:end="3:66"><type pos:start="3:53" pos:end="3:66"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:66">frame_code</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="145:1">{<block_content pos:start="7:5" pos:end="143:16">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:22">s</name> <init pos:start="7:24" pos:end="7:33">= <expr pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:33"><name pos:start="7:26" pos:end="7:28">nut</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:33">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">bc</name>    <init pos:start="9:24" pos:end="9:30">= <expr pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">StreamContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:22">stc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:60"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name></decl>, <decl pos:start="13:15" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:19">flags</name></decl>, <decl pos:start="13:22" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:29">size_mul</name></decl>, <decl pos:start="13:32" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:40">pts_delta</name></decl>, <decl pos:start="13:43" pos:end="13:43"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:43" pos:end="13:43">i</name></decl>, <decl pos:start="13:46" pos:end="13:59"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:46" pos:end="13:59">reserved_count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:16">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:68">(<expr pos:start="19:9" pos:end="19:67"><call pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:17">avio_tell</name><argument_list pos:start="19:18" pos:end="19:21">(<argument pos:start="19:19" pos:end="19:20"><expr pos:start="19:19" pos:end="19:20"><name pos:start="19:19" pos:end="19:20">bc</name></expr></argument>)</argument_list></call> <operator pos:start="19:23" pos:end="19:23">&gt;</operator> <name pos:start="19:25" pos:end="19:47"><name pos:start="19:25" pos:end="19:27">nut</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:47">last_syncpoint_pos</name></name> <operator pos:start="19:49" pos:end="19:49">+</operator> <name pos:start="19:51" pos:end="19:67"><name pos:start="19:51" pos:end="19:53">nut</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:67">max_distance</name></name></expr>)</condition> <block pos:start="19:70" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:35">

        <expr_stmt pos:start="21:9" pos:end="25:74"><expr pos:start="21:9" pos:end="25:73"><call pos:start="21:9" pos:end="25:73"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="25:73">(<argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">s</name></expr></argument>, <argument pos:start="21:19" pos:end="21:30"><expr pos:start="21:19" pos:end="21:30"><name pos:start="21:19" pos:end="21:30">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:79"><expr pos:start="23:16" pos:end="23:79"><literal type="string" pos:start="23:16" pos:end="23:52">"Last frame must have been damaged %"</literal><name pos:start="23:53" pos:end="23:58">PRId64</name><literal type="string" pos:start="23:59" pos:end="23:64">" &gt; %"</literal><name pos:start="23:65" pos:end="23:70">PRId64</name><literal type="string" pos:start="23:71" pos:end="23:79">" + %d\n"</literal></expr></argument>,

               <argument pos:start="25:16" pos:end="25:28"><expr pos:start="25:16" pos:end="25:28"><call pos:start="25:16" pos:end="25:28"><name pos:start="25:16" pos:end="25:24">avio_tell</name><argument_list pos:start="25:25" pos:end="25:28">(<argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><name pos:start="25:26" pos:end="25:27">bc</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:31" pos:end="25:53"><expr pos:start="25:31" pos:end="25:53"><name pos:start="25:31" pos:end="25:53"><name pos:start="25:31" pos:end="25:33">nut</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:53">last_syncpoint_pos</name></name></expr></argument>, <argument pos:start="25:56" pos:end="25:72"><expr pos:start="25:56" pos:end="25:72"><name pos:start="25:56" pos:end="25:72"><name pos:start="25:56" pos:end="25:58">nut</name><operator pos:start="25:59" pos:end="25:60">-&gt;</operator><name pos:start="25:61" pos:end="25:72">max_distance</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:55"><expr pos:start="33:5" pos:end="33:54"><name pos:start="33:5" pos:end="33:9">flags</name>          <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:48"><name pos:start="33:22" pos:end="33:24">nut</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:36">frame_code</name><index pos:start="33:37" pos:end="33:48">[<expr pos:start="33:38" pos:end="33:47"><name pos:start="33:38" pos:end="33:47">frame_code</name></expr>]</index></name><operator pos:start="33:49" pos:end="33:49">.</operator><name pos:start="33:50" pos:end="33:54">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:58"><expr pos:start="35:5" pos:end="35:57"><name pos:start="35:5" pos:end="35:12">size_mul</name>       <operator pos:start="35:20" pos:end="35:20">=</operator> <name pos:start="35:22" pos:end="35:48"><name pos:start="35:22" pos:end="35:24">nut</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:36">frame_code</name><index pos:start="35:37" pos:end="35:48">[<expr pos:start="35:38" pos:end="35:47"><name pos:start="35:38" pos:end="35:47">frame_code</name></expr>]</index></name><operator pos:start="35:49" pos:end="35:49">.</operator><name pos:start="35:50" pos:end="35:57">size_mul</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:58"><expr pos:start="37:5" pos:end="37:57"><name pos:start="37:5" pos:end="37:8">size</name>           <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:48"><name pos:start="37:22" pos:end="37:24">nut</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:36">frame_code</name><index pos:start="37:37" pos:end="37:48">[<expr pos:start="37:38" pos:end="37:47"><name pos:start="37:38" pos:end="37:47">frame_code</name></expr>]</index></name><operator pos:start="37:49" pos:end="37:49">.</operator><name pos:start="37:50" pos:end="37:57">size_lsb</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:59"><expr pos:start="39:5" pos:end="39:58"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:14">stream_id</name>     <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:48"><name pos:start="39:22" pos:end="39:24">nut</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:36">frame_code</name><index pos:start="39:37" pos:end="39:48">[<expr pos:start="39:38" pos:end="39:47"><name pos:start="39:38" pos:end="39:47">frame_code</name></expr>]</index></name><operator pos:start="39:49" pos:end="39:49">.</operator><name pos:start="39:50" pos:end="39:58">stream_id</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:13">pts_delta</name>      <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:48"><name pos:start="41:22" pos:end="41:24">nut</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:36">frame_code</name><index pos:start="41:37" pos:end="41:48">[<expr pos:start="41:38" pos:end="41:47"><name pos:start="41:38" pos:end="41:47">frame_code</name></expr>]</index></name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:58">pts_delta</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:64"><expr pos:start="43:5" pos:end="43:63"><name pos:start="43:5" pos:end="43:18">reserved_count</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:48"><name pos:start="43:22" pos:end="43:24">nut</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:36">frame_code</name><index pos:start="43:37" pos:end="43:48">[<expr pos:start="43:38" pos:end="43:47"><name pos:start="43:38" pos:end="43:47">frame_code</name></expr>]</index></name><operator pos:start="43:49" pos:end="43:49">.</operator><name pos:start="43:50" pos:end="43:63">reserved_count</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:60"><expr pos:start="45:5" pos:end="45:59"><operator pos:start="45:5" pos:end="45:5">*</operator><name pos:start="45:6" pos:end="45:15">header_idx</name>    <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:48"><name pos:start="45:22" pos:end="45:24">nut</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:36">frame_code</name><index pos:start="45:37" pos:end="45:48">[<expr pos:start="45:38" pos:end="45:47"><name pos:start="45:38" pos:end="45:47">frame_code</name></expr>]</index></name><operator pos:start="45:49" pos:end="45:49">.</operator><name pos:start="45:50" pos:end="45:59">header_idx</name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:35"><if pos:start="49:5" pos:end="51:35">if <condition pos:start="49:8" pos:end="49:29">(<expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:13">flags</name> <operator pos:start="49:15" pos:end="49:15">&amp;</operator> <name pos:start="49:17" pos:end="49:28">FLAG_INVALID</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:35"><block_content pos:start="51:9" pos:end="51:35">

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:38"><if pos:start="53:5" pos:end="55:38">if <condition pos:start="53:8" pos:end="53:27">(<expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:13">flags</name> <operator pos:start="53:15" pos:end="53:15">&amp;</operator> <name pos:start="53:17" pos:end="53:26">FLAG_CODED</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:38"><block_content pos:start="55:9" pos:end="55:38">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:13">flags</name> <operator pos:start="55:15" pos:end="55:16">^=</operator> <call pos:start="55:18" pos:end="55:37"><name pos:start="55:18" pos:end="55:33">ffio_read_varlen</name><argument_list pos:start="55:34" pos:end="55:37">(<argument pos:start="55:35" pos:end="55:36"><expr pos:start="55:35" pos:end="55:36"><name pos:start="55:35" pos:end="55:36">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:31">(<expr pos:start="57:9" pos:end="57:30"><name pos:start="57:9" pos:end="57:13">flags</name> <operator pos:start="57:15" pos:end="57:15">&amp;</operator> <name pos:start="57:17" pos:end="57:30">FLAG_STREAM_ID</name></expr>)</condition> <block pos:start="57:33" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:47">

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><call pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:13">GET_V</name><argument_list pos:start="59:14" pos:end="59:46">(<argument pos:start="59:15" pos:end="59:24"><expr pos:start="59:15" pos:end="59:24"><operator pos:start="59:15" pos:end="59:15">*</operator><name pos:start="59:16" pos:end="59:24">stream_id</name></expr></argument>, <argument pos:start="59:27" pos:end="59:45"><expr pos:start="59:27" pos:end="59:45"><name pos:start="59:27" pos:end="59:29">tmp</name> <operator pos:start="59:31" pos:end="59:31">&lt;</operator> <name pos:start="59:33" pos:end="59:45"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:45">nb_streams</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:7">stc</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <operator pos:start="63:11" pos:end="63:11">&amp;</operator><name pos:start="63:12" pos:end="63:34"><name pos:start="63:12" pos:end="63:14">nut</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:22">stream</name><index pos:start="63:23" pos:end="63:34">[<expr pos:start="63:24" pos:end="63:33"><operator pos:start="63:24" pos:end="63:24">*</operator><name pos:start="63:25" pos:end="63:33">stream_id</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="81:41"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:31">(<expr pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:13">flags</name> <operator pos:start="65:15" pos:end="65:15">&amp;</operator> <name pos:start="65:17" pos:end="65:30">FLAG_CODED_PTS</name></expr>)</condition> <block pos:start="65:33" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:57">

        <decl_stmt pos:start="67:9" pos:end="67:45"><decl pos:start="67:9" pos:end="67:44"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:21">coded_pts</name> <init pos:start="67:23" pos:end="67:44">= <expr pos:start="67:25" pos:end="67:44"><call pos:start="67:25" pos:end="67:44"><name pos:start="67:25" pos:end="67:40">ffio_read_varlen</name><argument_list pos:start="67:41" pos:end="67:44">(<argument pos:start="67:42" pos:end="67:43"><expr pos:start="67:42" pos:end="67:43"><name pos:start="67:42" pos:end="67:43">bc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="69:9" pos:end="69:41">// FIXME check last_pts validity?</comment>

        <if_stmt pos:start="71:9" pos:end="77:57"><if pos:start="71:9" pos:end="75:9">if <condition pos:start="71:12" pos:end="71:50">(<expr pos:start="71:13" pos:end="71:49"><name pos:start="71:13" pos:end="71:21">coded_pts</name> <operator pos:start="71:23" pos:end="71:23">&lt;</operator> <operator pos:start="71:25" pos:end="71:25">(</operator><literal type="number" pos:start="71:26" pos:end="71:26">1</literal> <operator pos:start="71:28" pos:end="71:29">&lt;&lt;</operator> <name pos:start="71:31" pos:end="71:48"><name pos:start="71:31" pos:end="71:33">stc</name><operator pos:start="71:34" pos:end="71:35">-&gt;</operator><name pos:start="71:36" pos:end="71:48">msb_pts_shift</name></name><operator pos:start="71:49" pos:end="71:49">)</operator></expr>)</condition> <block pos:start="71:52" pos:end="75:9">{<block_content pos:start="73:13" pos:end="73:47">

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><operator pos:start="73:13" pos:end="73:13">*</operator><name pos:start="73:14" pos:end="73:16">pts</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:46"><name pos:start="73:20" pos:end="73:30">ff_lsb2full</name><argument_list pos:start="73:31" pos:end="73:46">(<argument pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:34">stc</name></expr></argument>, <argument pos:start="73:37" pos:end="73:45"><expr pos:start="73:37" pos:end="73:45"><name pos:start="73:37" pos:end="73:45">coded_pts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="77:57">else<block type="pseudo" pos:start="77:13" pos:end="77:57"><block_content pos:start="77:13" pos:end="77:57">

            <expr_stmt pos:start="77:13" pos:end="77:57"><expr pos:start="77:13" pos:end="77:56"><operator pos:start="77:13" pos:end="77:13">*</operator><name pos:start="77:14" pos:end="77:16">pts</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <name pos:start="77:20" pos:end="77:28">coded_pts</name> <operator pos:start="77:30" pos:end="77:30">-</operator> <operator pos:start="77:32" pos:end="77:32">(</operator><literal type="number" pos:start="77:33" pos:end="77:33">1</literal> <operator pos:start="77:35" pos:end="77:36">&lt;&lt;</operator> <name pos:start="77:38" pos:end="77:55"><name pos:start="77:38" pos:end="77:40">stc</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:55">msb_pts_shift</name></name><operator pos:start="77:56" pos:end="77:56">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="79:7" pos:end="81:41">else<block type="pseudo" pos:start="81:9" pos:end="81:41"><block_content pos:start="81:9" pos:end="81:41">

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><operator pos:start="81:9" pos:end="81:9">*</operator><name pos:start="81:10" pos:end="81:12">pts</name> <operator pos:start="81:14" pos:end="81:14">=</operator> <name pos:start="81:16" pos:end="81:28"><name pos:start="81:16" pos:end="81:18">stc</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:28">last_pts</name></name> <operator pos:start="81:30" pos:end="81:30">+</operator> <name pos:start="81:32" pos:end="81:40">pts_delta</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <if_stmt pos:start="83:5" pos:end="85:48"><if pos:start="83:5" pos:end="85:48">if <condition pos:start="83:8" pos:end="83:30">(<expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:13">flags</name> <operator pos:start="83:15" pos:end="83:15">&amp;</operator> <name pos:start="83:17" pos:end="83:29">FLAG_SIZE_MSB</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:48"><block_content pos:start="85:9" pos:end="85:48">

        <expr_stmt pos:start="85:9" pos:end="85:48"><expr pos:start="85:9" pos:end="85:47"><name pos:start="85:9" pos:end="85:12">size</name> <operator pos:start="85:14" pos:end="85:15">+=</operator> <name pos:start="85:17" pos:end="85:24">size_mul</name> <operator pos:start="85:26" pos:end="85:26">*</operator> <call pos:start="85:28" pos:end="85:47"><name pos:start="85:28" pos:end="85:43">ffio_read_varlen</name><argument_list pos:start="85:44" pos:end="85:47">(<argument pos:start="85:45" pos:end="85:46"><expr pos:start="85:45" pos:end="85:46"><name pos:start="85:45" pos:end="85:46">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="87:5" pos:end="89:18"><if pos:start="87:5" pos:end="89:18">if <condition pos:start="87:8" pos:end="87:32">(<expr pos:start="87:9" pos:end="87:31"><name pos:start="87:9" pos:end="87:13">flags</name> <operator pos:start="87:15" pos:end="87:15">&amp;</operator> <name pos:start="87:17" pos:end="87:31">FLAG_MATCH_TIME</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:18"><block_content pos:start="89:9" pos:end="89:18">

        <expr_stmt pos:start="89:9" pos:end="89:18"><expr pos:start="89:9" pos:end="89:17"><call pos:start="89:9" pos:end="89:17"><name pos:start="89:9" pos:end="89:13">get_s</name><argument_list pos:start="89:14" pos:end="89:17">(<argument pos:start="89:15" pos:end="89:16"><expr pos:start="89:15" pos:end="89:16"><name pos:start="89:15" pos:end="89:16">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:43"><if pos:start="91:5" pos:end="93:43">if <condition pos:start="91:8" pos:end="91:32">(<expr pos:start="91:9" pos:end="91:31"><name pos:start="91:9" pos:end="91:13">flags</name> <operator pos:start="91:15" pos:end="91:15">&amp;</operator> <name pos:start="91:17" pos:end="91:31">FLAG_HEADER_IDX</name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:43"><block_content pos:start="93:9" pos:end="93:43">

        <expr_stmt pos:start="93:9" pos:end="93:43"><expr pos:start="93:9" pos:end="93:42"><operator pos:start="93:9" pos:end="93:9">*</operator><name pos:start="93:10" pos:end="93:19">header_idx</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="93:42"><name pos:start="93:23" pos:end="93:38">ffio_read_varlen</name><argument_list pos:start="93:39" pos:end="93:42">(<argument pos:start="93:40" pos:end="93:41"><expr pos:start="93:40" pos:end="93:41"><name pos:start="93:40" pos:end="93:41">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="97:46"><if pos:start="95:5" pos:end="97:46">if <condition pos:start="95:8" pos:end="95:30">(<expr pos:start="95:9" pos:end="95:29"><name pos:start="95:9" pos:end="95:13">flags</name> <operator pos:start="95:15" pos:end="95:15">&amp;</operator> <name pos:start="95:17" pos:end="95:29">FLAG_RESERVED</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:46"><block_content pos:start="97:9" pos:end="97:46">

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:22">reserved_count</name> <operator pos:start="97:24" pos:end="97:24">=</operator> <call pos:start="97:26" pos:end="97:45"><name pos:start="97:26" pos:end="97:41">ffio_read_varlen</name><argument_list pos:start="97:42" pos:end="97:45">(<argument pos:start="97:43" pos:end="97:44"><expr pos:start="97:43" pos:end="97:44"><name pos:start="97:43" pos:end="97:44">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="99:5" pos:end="101:29">for <control pos:start="99:9" pos:end="99:40">(<init pos:start="99:10" pos:end="99:15"><expr pos:start="99:10" pos:end="99:14"><name pos:start="99:10" pos:end="99:10">i</name> <operator pos:start="99:12" pos:end="99:12">=</operator> <literal type="number" pos:start="99:14" pos:end="99:14">0</literal></expr>;</init> <condition pos:start="99:17" pos:end="99:35"><expr pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&lt;</operator> <name pos:start="99:21" pos:end="99:34">reserved_count</name></expr>;</condition> <incr pos:start="99:37" pos:end="99:39"><expr pos:start="99:37" pos:end="99:39"><name pos:start="99:37" pos:end="99:37">i</name><operator pos:start="99:38" pos:end="99:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="101:9" pos:end="101:29"><block_content pos:start="101:9" pos:end="101:29">

        <expr_stmt pos:start="101:9" pos:end="101:29"><expr pos:start="101:9" pos:end="101:28"><call pos:start="101:9" pos:end="101:28"><name pos:start="101:9" pos:end="101:24">ffio_read_varlen</name><argument_list pos:start="101:25" pos:end="101:28">(<argument pos:start="101:26" pos:end="101:27"><expr pos:start="101:26" pos:end="101:27"><name pos:start="101:26" pos:end="101:27">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:51">(<expr pos:start="105:9" pos:end="105:50"><operator pos:start="105:9" pos:end="105:9">*</operator><name pos:start="105:10" pos:end="105:19">header_idx</name> <operator pos:start="105:21" pos:end="105:22">&gt;=</operator> <operator pos:start="105:24" pos:end="105:24">(</operator><name pos:start="105:25" pos:end="105:32">unsigned</name><operator pos:start="105:33" pos:end="105:33">)</operator><name pos:start="105:34" pos:end="105:50"><name pos:start="105:34" pos:end="105:36">nut</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:50">header_count</name></name></expr>)</condition> <block pos:start="105:53" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:35">

        <expr_stmt pos:start="107:9" pos:end="107:56"><expr pos:start="107:9" pos:end="107:55"><call pos:start="107:9" pos:end="107:55"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="107:55">(<argument pos:start="107:16" pos:end="107:16"><expr pos:start="107:16" pos:end="107:16"><name pos:start="107:16" pos:end="107:16">s</name></expr></argument>, <argument pos:start="107:19" pos:end="107:30"><expr pos:start="107:19" pos:end="107:30"><name pos:start="107:19" pos:end="107:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:33" pos:end="107:54"><expr pos:start="107:33" pos:end="107:54"><literal type="string" pos:start="107:33" pos:end="107:54">"header_idx invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:35">return <expr pos:start="109:16" pos:end="109:34"><name pos:start="109:16" pos:end="109:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="113:5" pos:end="115:24"><if pos:start="113:5" pos:end="115:24">if <condition pos:start="113:8" pos:end="113:20">(<expr pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:12">size</name> <operator pos:start="113:14" pos:end="113:14">&gt;</operator> <literal type="number" pos:start="113:16" pos:end="113:19">4096</literal></expr>)</condition><block type="pseudo" pos:start="115:9" pos:end="115:24"><block_content pos:start="115:9" pos:end="115:24">

        <expr_stmt pos:start="115:9" pos:end="115:24"><expr pos:start="115:9" pos:end="115:23"><operator pos:start="115:9" pos:end="115:9">*</operator><name pos:start="115:10" pos:end="115:19">header_idx</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:41"><expr pos:start="117:5" pos:end="117:40"><name pos:start="117:5" pos:end="117:8">size</name> <operator pos:start="117:10" pos:end="117:11">-=</operator> <name pos:start="117:13" pos:end="117:40"><name pos:start="117:13" pos:end="117:15">nut</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:27">header_len</name><index pos:start="117:28" pos:end="117:40">[<expr pos:start="117:29" pos:end="117:39"><operator pos:start="117:29" pos:end="117:29">*</operator><name pos:start="117:30" pos:end="117:39">header_idx</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="121:5" pos:end="133:5"><if pos:start="121:5" pos:end="125:5">if <condition pos:start="121:8" pos:end="121:30">(<expr pos:start="121:9" pos:end="121:29"><name pos:start="121:9" pos:end="121:13">flags</name> <operator pos:start="121:15" pos:end="121:15">&amp;</operator> <name pos:start="121:17" pos:end="121:29">FLAG_CHECKSUM</name></expr>)</condition> <block pos:start="121:32" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:22">

        <expr_stmt pos:start="123:9" pos:end="123:22"><expr pos:start="123:9" pos:end="123:21"><call pos:start="123:9" pos:end="123:21"><name pos:start="123:9" pos:end="123:17">avio_rb32</name><argument_list pos:start="123:18" pos:end="123:21">(<argument pos:start="123:19" pos:end="123:20"><expr pos:start="123:19" pos:end="123:20"><name pos:start="123:19" pos:end="123:20">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="123:24" pos:end="123:42">// FIXME check this</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="133:5">else if <condition pos:start="125:15" pos:end="127:37">(<expr pos:start="125:16" pos:end="127:36"><name pos:start="125:16" pos:end="125:19">size</name> <operator pos:start="125:21" pos:end="125:21">&gt;</operator> <literal type="number" pos:start="125:23" pos:end="125:23">2</literal> <operator pos:start="125:25" pos:end="125:25">*</operator> <name pos:start="125:27" pos:end="125:43"><name pos:start="125:27" pos:end="125:29">nut</name><operator pos:start="125:30" pos:end="125:31">-&gt;</operator><name pos:start="125:32" pos:end="125:43">max_distance</name></name> <operator pos:start="125:45" pos:end="125:46">||</operator> <call pos:start="125:48" pos:end="125:74"><name pos:start="125:48" pos:end="125:52">FFABS</name><argument_list pos:start="125:53" pos:end="125:74">(<argument pos:start="125:54" pos:end="125:73"><expr pos:start="125:54" pos:end="125:73"><name pos:start="125:54" pos:end="125:66"><name pos:start="125:54" pos:end="125:56">stc</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:66">last_pts</name></name> <operator pos:start="125:68" pos:end="125:68">-</operator> <operator pos:start="125:70" pos:end="125:70">*</operator><name pos:start="125:71" pos:end="125:73">pts</name></expr></argument>)</argument_list></call> <operator pos:start="125:76" pos:end="125:76">&gt;</operator>

               <name pos:start="127:16" pos:end="127:36"><name pos:start="127:16" pos:end="127:18">stc</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:36">max_pts_distance</name></name></expr>)</condition> <block pos:start="127:39" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:35">

        <expr_stmt pos:start="129:9" pos:end="129:80"><expr pos:start="129:9" pos:end="129:79"><call pos:start="129:9" pos:end="129:79"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:79">(<argument pos:start="129:16" pos:end="129:16"><expr pos:start="129:16" pos:end="129:16"><name pos:start="129:16" pos:end="129:16">s</name></expr></argument>, <argument pos:start="129:19" pos:end="129:30"><expr pos:start="129:19" pos:end="129:30"><name pos:start="129:19" pos:end="129:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:33" pos:end="129:78"><expr pos:start="129:33" pos:end="129:78"><literal type="string" pos:start="129:33" pos:end="129:78">"frame size &gt; 2max_distance and no checksum\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:35">return <expr pos:start="131:16" pos:end="131:34"><name pos:start="131:16" pos:end="131:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:27"><expr pos:start="137:5" pos:end="137:26"><name pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:7">stc</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:17">last_pts</name></name>   <operator pos:start="137:21" pos:end="137:21">=</operator> <operator pos:start="137:23" pos:end="137:23">*</operator><name pos:start="137:24" pos:end="137:26">pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:28"><expr pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:7">stc</name><operator pos:start="139:8" pos:end="139:9">-&gt;</operator><name pos:start="139:10" pos:end="139:19">last_flags</name></name> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:27">flags</name></expr>;</expr_stmt>



    <return pos:start="143:5" pos:end="143:16">return <expr pos:start="143:12" pos:end="143:15"><name pos:start="143:12" pos:end="143:15">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
