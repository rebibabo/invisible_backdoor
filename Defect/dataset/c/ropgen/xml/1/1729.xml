<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1729.c" pos:tabs="8"><function pos:start="1:1" pos:end="295:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">vorbis_parse_audio_packet</name><parameter_list pos:start="1:37" pos:end="1:56">(<parameter pos:start="1:38" pos:end="1:55"><decl pos:start="1:38" pos:end="1:55"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">vorbis_context</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">vc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="295:1">{<block_content pos:start="5:5" pos:end="293:18">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:27">vc</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">FFTContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">mdct</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">unsigned</name></type> <name pos:start="9:14" pos:end="9:28">previous_window</name> <init pos:start="9:30" pos:end="9:50">= <expr pos:start="9:32" pos:end="9:50"><name pos:start="9:32" pos:end="9:50"><name pos:start="9:32" pos:end="9:33">vc</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:50">previous_window</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">unsigned</name></type> <name pos:start="11:14" pos:end="11:24">mode_number</name></decl>, <decl pos:start="11:27" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:27" pos:end="11:35">blockflag</name></decl>, <decl pos:start="11:38" pos:end="11:46"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:38" pos:end="11:46">blocksize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:28"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">uint8_t</name></type> <name pos:start="15:13" pos:end="15:27"><name pos:start="15:13" pos:end="15:22">no_residue</name><index pos:start="15:23" pos:end="15:27">[<expr pos:start="15:24" pos:end="15:26"><literal type="number" pos:start="15:24" pos:end="15:26">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:25">do_not_decode</name><index pos:start="17:26" pos:end="17:30">[<expr pos:start="17:27" pos:end="17:29"><literal type="number" pos:start="17:27" pos:end="17:29">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">vorbis_mapping</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:27">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:47"><decl pos:start="21:5" pos:end="21:46"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:9">float</name> <modifier pos:start="21:11" pos:end="21:11">*</modifier></type><name pos:start="21:12" pos:end="21:21">ch_res_ptr</name>   <init pos:start="21:25" pos:end="21:46">= <expr pos:start="21:27" pos:end="21:46"><name pos:start="21:27" pos:end="21:46"><name pos:start="21:27" pos:end="21:28">vc</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:46">channel_residues</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:45"><decl pos:start="23:5" pos:end="23:44"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:9">float</name> <modifier pos:start="23:11" pos:end="23:11">*</modifier></type><name pos:start="23:12" pos:end="23:23">ch_floor_ptr</name> <init pos:start="23:25" pos:end="23:44">= <expr pos:start="23:27" pos:end="23:44"><name pos:start="23:27" pos:end="23:44"><name pos:start="23:27" pos:end="23:28">vc</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:44">channel_floors</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:11">uint8_t</name></type> <name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:20">res_chan</name><index pos:start="25:21" pos:end="25:25">[<expr pos:start="25:22" pos:end="25:24"><literal type="number" pos:start="25:22" pos:end="25:24">255</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">unsigned</name></type> <name pos:start="27:14" pos:end="27:20">res_num</name> <init pos:start="27:22" pos:end="27:24">= <expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:20"><decl pos:start="29:5" pos:end="29:19"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:14">retlen</name>  <init pos:start="29:17" pos:end="29:19">= <expr pos:start="29:19" pos:end="29:19"><literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:37"><decl pos:start="31:5" pos:end="31:36"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:15">ch_left</name> <init pos:start="31:17" pos:end="31:36">= <expr pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:36"><name pos:start="31:19" pos:end="31:20">vc</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:36">audio_channels</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:22">(<expr pos:start="35:9" pos:end="35:21"><call pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:17">get_bits1</name><argument_list pos:start="35:18" pos:end="35:21">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:24" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:35">

        <expr_stmt pos:start="37:9" pos:end="37:79"><expr pos:start="37:9" pos:end="37:78"><call pos:start="37:9" pos:end="37:78"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:78">(<argument pos:start="37:16" pos:end="37:29"><expr pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:17">vc</name><operator pos:start="37:18" pos:end="37:19">-&gt;</operator><name pos:start="37:20" pos:end="37:29">avccontext</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:43"><expr pos:start="37:32" pos:end="37:43"><name pos:start="37:32" pos:end="37:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:46" pos:end="37:77"><expr pos:start="37:46" pos:end="37:77"><literal type="string" pos:start="37:46" pos:end="37:77">"Not a Vorbis I audio packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return> <comment type="line" pos:start="39:37" pos:end="39:60">// packet type not audio</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="53:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:28">(<expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:10">vc</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:22">mode_count</name></name> <operator pos:start="45:24" pos:end="45:25">==</operator> <literal type="number" pos:start="45:27" pos:end="45:27">1</literal></expr>)</condition> <block pos:start="45:30" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:24">

        <expr_stmt pos:start="47:9" pos:end="47:24"><expr pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:19">mode_number</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="53:5">else <block pos:start="49:12" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:80">

        <macro pos:start="51:9" pos:end="51:80"><name pos:start="51:9" pos:end="51:27">GET_VALIDATED_INDEX</name><argument_list pos:start="51:28" pos:end="51:80">(<argument pos:start="51:29" pos:end="51:39">mode_number</argument>, <argument pos:start="51:42" pos:end="51:63">ilog(vc-&gt;mode_count-<literal type="number" pos:start="51:62" pos:end="51:62">1</literal>)</argument>, <argument pos:start="51:66" pos:end="51:79">vc-&gt;mode_count</argument>)</argument_list></macro>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:34"><expr pos:start="55:5" pos:end="55:33"><name pos:start="55:5" pos:end="55:19"><name pos:start="55:5" pos:end="55:6">vc</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:19">mode_number</name></name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:33">mode_number</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:60"><expr pos:start="57:5" pos:end="57:59"><name pos:start="57:5" pos:end="57:11">mapping</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">&amp;</operator><name pos:start="57:16" pos:end="57:59"><name pos:start="57:16" pos:end="57:17">vc</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:27">mappings</name><index pos:start="57:28" pos:end="57:59">[<expr pos:start="57:29" pos:end="57:58"><name pos:start="57:29" pos:end="57:50"><name pos:start="57:29" pos:end="57:30">vc</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:37">modes</name><index pos:start="57:38" pos:end="57:50">[<expr pos:start="57:39" pos:end="57:49"><name pos:start="57:39" pos:end="57:49">mode_number</name></expr>]</index></name><operator pos:start="57:51" pos:end="57:51">.</operator><name pos:start="57:52" pos:end="57:58">mapping</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="63:78"><expr pos:start="61:5" pos:end="63:77"><call pos:start="61:5" pos:end="63:77"><name pos:start="61:5" pos:end="61:11">av_dlog</name><argument_list pos:start="61:12" pos:end="63:77">(<argument pos:start="61:13" pos:end="61:16"><expr pos:start="61:13" pos:end="61:16"><name pos:start="61:13" pos:end="61:16">NULL</name></expr></argument>, <argument pos:start="61:19" pos:end="61:67"><expr pos:start="61:19" pos:end="61:67"><literal type="string" pos:start="61:19" pos:end="61:67">" Mode number: %u , mapping: %d , blocktype %d\n"</literal></expr></argument>, <argument pos:start="61:70" pos:end="61:80"><expr pos:start="61:70" pos:end="61:80"><name pos:start="61:70" pos:end="61:80">mode_number</name></expr></argument>,

            <argument pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:14">vc</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:21">modes</name><index pos:start="63:22" pos:end="63:34">[<expr pos:start="63:23" pos:end="63:33"><name pos:start="63:23" pos:end="63:33">mode_number</name></expr>]</index></name><operator pos:start="63:35" pos:end="63:35">.</operator><name pos:start="63:36" pos:end="63:42">mapping</name></expr></argument>, <argument pos:start="63:45" pos:end="63:76"><expr pos:start="63:45" pos:end="63:76"><name pos:start="63:45" pos:end="63:66"><name pos:start="63:45" pos:end="63:46">vc</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:53">modes</name><index pos:start="63:54" pos:end="63:66">[<expr pos:start="63:55" pos:end="63:65"><name pos:start="63:55" pos:end="63:65">mode_number</name></expr>]</index></name><operator pos:start="63:67" pos:end="63:67">.</operator><name pos:start="63:68" pos:end="63:76">blockflag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:49"><expr pos:start="67:5" pos:end="67:48"><name pos:start="67:5" pos:end="67:13">blockflag</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <name pos:start="67:17" pos:end="67:38"><name pos:start="67:17" pos:end="67:18">vc</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:25">modes</name><index pos:start="67:26" pos:end="67:38">[<expr pos:start="67:27" pos:end="67:37"><name pos:start="67:27" pos:end="67:37">mode_number</name></expr>]</index></name><operator pos:start="67:39" pos:end="67:39">.</operator><name pos:start="67:40" pos:end="67:48">blockflag</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:13">blocksize</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:18">vc</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:29">blocksize</name><index pos:start="69:30" pos:end="69:40">[<expr pos:start="69:31" pos:end="69:39"><name pos:start="69:31" pos:end="69:39">blockflag</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:25"><if pos:start="71:5" pos:end="73:25">if <condition pos:start="71:8" pos:end="71:18">(<expr pos:start="71:9" pos:end="71:17"><name pos:start="71:9" pos:end="71:17">blockflag</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:25"><block_content pos:start="73:9" pos:end="73:25">

        <expr_stmt pos:start="73:9" pos:end="73:25"><expr pos:start="73:9" pos:end="73:24"><call pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:17">skip_bits</name><argument_list pos:start="73:18" pos:end="73:24">(<argument pos:start="73:19" pos:end="73:20"><expr pos:start="73:19" pos:end="73:20"><name pos:start="73:19" pos:end="73:20">gb</name></expr></argument>, <argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><literal type="number" pos:start="73:23" pos:end="73:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="73:27" pos:end="73:57">// previous_window, next_window</comment>



    <expr_stmt pos:start="77:5" pos:end="77:80"><expr pos:start="77:5" pos:end="77:79"><call pos:start="77:5" pos:end="77:79"><name pos:start="77:5" pos:end="77:10">memset</name><argument_list pos:start="77:11" pos:end="77:79">(<argument pos:start="77:12" pos:end="77:21"><expr pos:start="77:12" pos:end="77:21"><name pos:start="77:12" pos:end="77:21">ch_res_ptr</name></expr></argument>,   <argument pos:start="77:26" pos:end="77:26"><expr pos:start="77:26" pos:end="77:26"><literal type="number" pos:start="77:26" pos:end="77:26">0</literal></expr></argument>, <argument pos:start="77:29" pos:end="77:78"><expr pos:start="77:29" pos:end="77:78"><sizeof pos:start="77:29" pos:end="77:41">sizeof<argument_list pos:start="77:35" pos:end="77:41">(<argument pos:start="77:36" pos:end="77:40"><expr pos:start="77:36" pos:end="77:40"><name pos:start="77:36" pos:end="77:40">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="77:43" pos:end="77:43">*</operator> <name pos:start="77:45" pos:end="77:62"><name pos:start="77:45" pos:end="77:46">vc</name><operator pos:start="77:47" pos:end="77:48">-&gt;</operator><name pos:start="77:49" pos:end="77:62">audio_channels</name></name> <operator pos:start="77:64" pos:end="77:64">*</operator> <name pos:start="77:66" pos:end="77:74">blocksize</name> <operator pos:start="77:76" pos:end="77:76">/</operator> <literal type="number" pos:start="77:78" pos:end="77:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="77:82" pos:end="77:110">//FIXME can this be removed ?</comment>

    <expr_stmt pos:start="79:5" pos:end="79:80"><expr pos:start="79:5" pos:end="79:79"><call pos:start="79:5" pos:end="79:79"><name pos:start="79:5" pos:end="79:10">memset</name><argument_list pos:start="79:11" pos:end="79:79">(<argument pos:start="79:12" pos:end="79:23"><expr pos:start="79:12" pos:end="79:23"><name pos:start="79:12" pos:end="79:23">ch_floor_ptr</name></expr></argument>, <argument pos:start="79:26" pos:end="79:26"><expr pos:start="79:26" pos:end="79:26"><literal type="number" pos:start="79:26" pos:end="79:26">0</literal></expr></argument>, <argument pos:start="79:29" pos:end="79:78"><expr pos:start="79:29" pos:end="79:78"><sizeof pos:start="79:29" pos:end="79:41">sizeof<argument_list pos:start="79:35" pos:end="79:41">(<argument pos:start="79:36" pos:end="79:40"><expr pos:start="79:36" pos:end="79:40"><name pos:start="79:36" pos:end="79:40">float</name></expr></argument>)</argument_list></sizeof> <operator pos:start="79:43" pos:end="79:43">*</operator> <name pos:start="79:45" pos:end="79:62"><name pos:start="79:45" pos:end="79:46">vc</name><operator pos:start="79:47" pos:end="79:48">-&gt;</operator><name pos:start="79:49" pos:end="79:62">audio_channels</name></name> <operator pos:start="79:64" pos:end="79:64">*</operator> <name pos:start="79:66" pos:end="79:74">blocksize</name> <operator pos:start="79:76" pos:end="79:76">/</operator> <literal type="number" pos:start="79:78" pos:end="79:78">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="79:82" pos:end="79:110">//FIXME can this be removed ?</comment>



<comment type="line" pos:start="83:1" pos:end="83:15">// Decode floor</comment>



    <for pos:start="87:5" pos:end="121:5">for <control pos:start="87:9" pos:end="87:44">(<init pos:start="87:10" pos:end="87:15"><expr pos:start="87:10" pos:end="87:14"><name pos:start="87:10" pos:end="87:10">i</name> <operator pos:start="87:12" pos:end="87:12">=</operator> <literal type="number" pos:start="87:14" pos:end="87:14">0</literal></expr>;</init> <condition pos:start="87:17" pos:end="87:39"><expr pos:start="87:17" pos:end="87:38"><name pos:start="87:17" pos:end="87:17">i</name> <operator pos:start="87:19" pos:end="87:19">&lt;</operator> <name pos:start="87:21" pos:end="87:38"><name pos:start="87:21" pos:end="87:22">vc</name><operator pos:start="87:23" pos:end="87:24">-&gt;</operator><name pos:start="87:25" pos:end="87:38">audio_channels</name></name></expr>;</condition> <incr pos:start="87:41" pos:end="87:43"><expr pos:start="87:41" pos:end="87:43"><operator pos:start="87:41" pos:end="87:42">++</operator><name pos:start="87:43" pos:end="87:43">i</name></expr></incr>)</control> <block pos:start="87:46" pos:end="121:5">{<block_content pos:start="89:9" pos:end="119:38">

        <decl_stmt pos:start="89:9" pos:end="89:28"><decl pos:start="89:9" pos:end="89:27"><type pos:start="89:9" pos:end="89:22"><name pos:start="89:9" pos:end="89:20">vorbis_floor</name> <modifier pos:start="89:22" pos:end="89:22">*</modifier></type><name pos:start="89:23" pos:end="89:27">floor</name></decl>;</decl_stmt>

        <decl_stmt pos:start="91:9" pos:end="91:16"><decl pos:start="91:9" pos:end="91:15"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:15">ret</name></decl>;</decl_stmt>

        <if_stmt pos:start="93:9" pos:end="101:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:33">(<expr pos:start="93:13" pos:end="93:32"><name pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:19">mapping</name><operator pos:start="93:20" pos:end="93:21">-&gt;</operator><name pos:start="93:22" pos:end="93:28">submaps</name></name> <operator pos:start="93:30" pos:end="93:30">&gt;</operator> <literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>)</condition> <block pos:start="93:35" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:72">

            <expr_stmt pos:start="95:13" pos:end="95:72"><expr pos:start="95:13" pos:end="95:71"><name pos:start="95:13" pos:end="95:17">floor</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <operator pos:start="95:21" pos:end="95:21">&amp;</operator><name pos:start="95:22" pos:end="95:71"><name pos:start="95:22" pos:end="95:23">vc</name><operator pos:start="95:24" pos:end="95:25">-&gt;</operator><name pos:start="95:26" pos:end="95:31">floors</name><index pos:start="95:32" pos:end="95:71">[<expr pos:start="95:33" pos:end="95:70"><name pos:start="95:33" pos:end="95:70"><name pos:start="95:33" pos:end="95:39">mapping</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:53">submap_floor</name><index pos:start="95:54" pos:end="95:70">[<expr pos:start="95:55" pos:end="95:69"><name pos:start="95:55" pos:end="95:69"><name pos:start="95:55" pos:end="95:61">mapping</name><operator pos:start="95:62" pos:end="95:63">-&gt;</operator><name pos:start="95:64" pos:end="95:66">mux</name><index pos:start="95:67" pos:end="95:69">[<expr pos:start="95:68" pos:end="95:68"><name pos:start="95:68" pos:end="95:68">i</name></expr>]</index></name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="97:11" pos:end="101:9">else <block pos:start="97:16" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:58">

            <expr_stmt pos:start="99:13" pos:end="99:58"><expr pos:start="99:13" pos:end="99:57"><name pos:start="99:13" pos:end="99:17">floor</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <operator pos:start="99:21" pos:end="99:21">&amp;</operator><name pos:start="99:22" pos:end="99:57"><name pos:start="99:22" pos:end="99:23">vc</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:31">floors</name><index pos:start="99:32" pos:end="99:57">[<expr pos:start="99:33" pos:end="99:56"><name pos:start="99:33" pos:end="99:56"><name pos:start="99:33" pos:end="99:39">mapping</name><operator pos:start="99:40" pos:end="99:41">-&gt;</operator><name pos:start="99:42" pos:end="99:53">submap_floor</name><index pos:start="99:54" pos:end="99:56">[<expr pos:start="99:55" pos:end="99:55"><literal type="number" pos:start="99:55" pos:end="99:55">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:60"><expr pos:start="105:9" pos:end="105:59"><name pos:start="105:9" pos:end="105:11">ret</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:59"><name pos:start="105:15" pos:end="105:27"><name pos:start="105:15" pos:end="105:19">floor</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:27">decode</name></name><argument_list pos:start="105:28" pos:end="105:59">(<argument pos:start="105:29" pos:end="105:30"><expr pos:start="105:29" pos:end="105:30"><name pos:start="105:29" pos:end="105:30">vc</name></expr></argument>, <argument pos:start="105:33" pos:end="105:44"><expr pos:start="105:33" pos:end="105:44"><operator pos:start="105:33" pos:end="105:33">&amp;</operator><name pos:start="105:34" pos:end="105:44"><name pos:start="105:34" pos:end="105:38">floor</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:44">data</name></name></expr></argument>, <argument pos:start="105:47" pos:end="105:58"><expr pos:start="105:47" pos:end="105:58"><name pos:start="105:47" pos:end="105:58">ch_floor_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="109:9" pos:end="115:9"><if pos:start="109:9" pos:end="115:9">if <condition pos:start="109:12" pos:end="109:20">(<expr pos:start="109:13" pos:end="109:19"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">&lt;</operator> <literal type="number" pos:start="109:19" pos:end="109:19">0</literal></expr>)</condition> <block pos:start="109:22" pos:end="115:9">{<block_content pos:start="111:13" pos:end="113:39">

            <expr_stmt pos:start="111:13" pos:end="111:95"><expr pos:start="111:13" pos:end="111:94"><call pos:start="111:13" pos:end="111:94"><name pos:start="111:13" pos:end="111:18">av_log</name><argument_list pos:start="111:19" pos:end="111:94">(<argument pos:start="111:20" pos:end="111:33"><expr pos:start="111:20" pos:end="111:33"><name pos:start="111:20" pos:end="111:33"><name pos:start="111:20" pos:end="111:21">vc</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:33">avccontext</name></name></expr></argument>, <argument pos:start="111:36" pos:end="111:47"><expr pos:start="111:36" pos:end="111:47"><name pos:start="111:36" pos:end="111:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="111:50" pos:end="111:93"><expr pos:start="111:50" pos:end="111:93"><literal type="string" pos:start="111:50" pos:end="111:93">"Invalid codebook in vorbis_floor_decode.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:39">return <expr pos:start="113:20" pos:end="113:38"><name pos:start="113:20" pos:end="113:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:28"><expr pos:start="117:9" pos:end="117:27"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:18">no_residue</name><index pos:start="117:19" pos:end="117:21">[<expr pos:start="117:20" pos:end="117:20"><name pos:start="117:20" pos:end="117:20">i</name></expr>]</index></name> <operator pos:start="117:23" pos:end="117:23">=</operator> <name pos:start="117:25" pos:end="117:27">ret</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:38"><expr pos:start="119:9" pos:end="119:37"><name pos:start="119:9" pos:end="119:20">ch_floor_ptr</name> <operator pos:start="119:22" pos:end="119:23">+=</operator> <name pos:start="119:25" pos:end="119:33">blocksize</name> <operator pos:start="119:35" pos:end="119:35">/</operator> <literal type="number" pos:start="119:37" pos:end="119:37">2</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="125:1" pos:end="125:27">// Nonzero vector propagate</comment>



    <for pos:start="129:5" pos:end="139:5">for <control pos:start="129:9" pos:end="129:54">(<init pos:start="129:10" pos:end="129:41"><expr pos:start="129:10" pos:end="129:40"><name pos:start="129:10" pos:end="129:10">i</name> <operator pos:start="129:12" pos:end="129:12">=</operator> <name pos:start="129:14" pos:end="129:36"><name pos:start="129:14" pos:end="129:20">mapping</name><operator pos:start="129:21" pos:end="129:22">-&gt;</operator><name pos:start="129:23" pos:end="129:36">coupling_steps</name></name> <operator pos:start="129:38" pos:end="129:38">-</operator> <literal type="number" pos:start="129:40" pos:end="129:40">1</literal></expr>;</init> <condition pos:start="129:43" pos:end="129:49"><expr pos:start="129:43" pos:end="129:48"><name pos:start="129:43" pos:end="129:43">i</name> <operator pos:start="129:45" pos:end="129:46">&gt;=</operator> <literal type="number" pos:start="129:48" pos:end="129:48">0</literal></expr>;</condition> <incr pos:start="129:51" pos:end="129:53"><expr pos:start="129:51" pos:end="129:53"><operator pos:start="129:51" pos:end="129:52">--</operator><name pos:start="129:53" pos:end="129:53">i</name></expr></incr>)</control> <block pos:start="129:56" pos:end="139:5">{<block_content pos:start="131:9" pos:end="137:9">

        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:81">(<expr pos:start="131:13" pos:end="131:80"><operator pos:start="131:13" pos:end="131:13">!</operator><operator pos:start="131:14" pos:end="131:14">(</operator><name pos:start="131:15" pos:end="131:47"><name pos:start="131:15" pos:end="131:24">no_residue</name><index pos:start="131:25" pos:end="131:47">[<expr pos:start="131:26" pos:end="131:46"><name pos:start="131:26" pos:end="131:46"><name pos:start="131:26" pos:end="131:32">mapping</name><operator pos:start="131:33" pos:end="131:34">-&gt;</operator><name pos:start="131:35" pos:end="131:43">magnitude</name><index pos:start="131:44" pos:end="131:46">[<expr pos:start="131:45" pos:end="131:45"><name pos:start="131:45" pos:end="131:45">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="131:49" pos:end="131:49">&amp;</operator> <name pos:start="131:51" pos:end="131:79"><name pos:start="131:51" pos:end="131:60">no_residue</name><index pos:start="131:61" pos:end="131:79">[<expr pos:start="131:62" pos:end="131:78"><name pos:start="131:62" pos:end="131:78"><name pos:start="131:62" pos:end="131:68">mapping</name><operator pos:start="131:69" pos:end="131:70">-&gt;</operator><name pos:start="131:71" pos:end="131:75">angle</name><index pos:start="131:76" pos:end="131:78">[<expr pos:start="131:77" pos:end="131:77"><name pos:start="131:77" pos:end="131:77">i</name></expr>]</index></name></expr>]</index></name><operator pos:start="131:80" pos:end="131:80">)</operator></expr>)</condition> <block pos:start="131:83" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:50">

            <expr_stmt pos:start="133:13" pos:end="133:50"><expr pos:start="133:13" pos:end="133:49"><name pos:start="133:13" pos:end="133:45"><name pos:start="133:13" pos:end="133:22">no_residue</name><index pos:start="133:23" pos:end="133:45">[<expr pos:start="133:24" pos:end="133:44"><name pos:start="133:24" pos:end="133:44"><name pos:start="133:24" pos:end="133:30">mapping</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:41">magnitude</name><index pos:start="133:42" pos:end="133:44">[<expr pos:start="133:43" pos:end="133:43"><name pos:start="133:43" pos:end="133:43">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="133:47" pos:end="133:47">=</operator> <literal type="number" pos:start="133:49" pos:end="133:49">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:41"><name pos:start="135:13" pos:end="135:22">no_residue</name><index pos:start="135:23" pos:end="135:41">[<expr pos:start="135:24" pos:end="135:40"><name pos:start="135:24" pos:end="135:40"><name pos:start="135:24" pos:end="135:30">mapping</name><operator pos:start="135:31" pos:end="135:32">-&gt;</operator><name pos:start="135:33" pos:end="135:37">angle</name><index pos:start="135:38" pos:end="135:40">[<expr pos:start="135:39" pos:end="135:39"><name pos:start="135:39" pos:end="135:39">i</name></expr>]</index></name></expr>]</index></name>     <operator pos:start="135:47" pos:end="135:47">=</operator> <literal type="number" pos:start="135:49" pos:end="135:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="143:1" pos:end="143:17">// Decode residue</comment>



    <for pos:start="147:5" pos:end="197:5">for <control pos:start="147:9" pos:end="147:42">(<init pos:start="147:10" pos:end="147:15"><expr pos:start="147:10" pos:end="147:14"><name pos:start="147:10" pos:end="147:10">i</name> <operator pos:start="147:12" pos:end="147:12">=</operator> <literal type="number" pos:start="147:14" pos:end="147:14">0</literal></expr>;</init> <condition pos:start="147:17" pos:end="147:37"><expr pos:start="147:17" pos:end="147:36"><name pos:start="147:17" pos:end="147:17">i</name> <operator pos:start="147:19" pos:end="147:19">&lt;</operator> <name pos:start="147:21" pos:end="147:36"><name pos:start="147:21" pos:end="147:27">mapping</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:36">submaps</name></name></expr>;</condition> <incr pos:start="147:39" pos:end="147:41"><expr pos:start="147:39" pos:end="147:41"><operator pos:start="147:39" pos:end="147:40">++</operator><name pos:start="147:41" pos:end="147:41">i</name></expr></incr>)</control> <block pos:start="147:44" pos:end="197:5">{<block_content pos:start="149:9" pos:end="195:22">

        <decl_stmt pos:start="149:9" pos:end="149:32"><decl pos:start="149:9" pos:end="149:31"><type pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:22">vorbis_residue</name> <modifier pos:start="149:24" pos:end="149:24">*</modifier></type><name pos:start="149:25" pos:end="149:31">residue</name></decl>;</decl_stmt>

        <decl_stmt pos:start="151:9" pos:end="151:24"><decl pos:start="151:9" pos:end="151:23"><type pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:16">unsigned</name></type> <name pos:start="151:18" pos:end="151:19">ch</name> <init pos:start="151:21" pos:end="151:23">= <expr pos:start="151:23" pos:end="151:23"><literal type="number" pos:start="151:23" pos:end="151:23">0</literal></expr></init></decl>;</decl_stmt>



        <for pos:start="155:9" pos:end="177:9">for <control pos:start="155:13" pos:end="155:48">(<init pos:start="155:14" pos:end="155:19"><expr pos:start="155:14" pos:end="155:18"><name pos:start="155:14" pos:end="155:14">j</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">0</literal></expr>;</init> <condition pos:start="155:21" pos:end="155:43"><expr pos:start="155:21" pos:end="155:42"><name pos:start="155:21" pos:end="155:21">j</name> <operator pos:start="155:23" pos:end="155:23">&lt;</operator> <name pos:start="155:25" pos:end="155:42"><name pos:start="155:25" pos:end="155:26">vc</name><operator pos:start="155:27" pos:end="155:28">-&gt;</operator><name pos:start="155:29" pos:end="155:42">audio_channels</name></name></expr>;</condition> <incr pos:start="155:45" pos:end="155:47"><expr pos:start="155:45" pos:end="155:47"><operator pos:start="155:45" pos:end="155:46">++</operator><name pos:start="155:47" pos:end="155:47">j</name></expr></incr>)</control> <block pos:start="155:50" pos:end="177:9">{<block_content pos:start="157:13" pos:end="175:13">

            <if_stmt pos:start="157:13" pos:end="175:13"><if pos:start="157:13" pos:end="175:13">if <condition pos:start="157:16" pos:end="157:66">(<expr pos:start="157:17" pos:end="157:65"><operator pos:start="157:17" pos:end="157:17">(</operator><name pos:start="157:18" pos:end="157:33"><name pos:start="157:18" pos:end="157:24">mapping</name><operator pos:start="157:25" pos:end="157:26">-&gt;</operator><name pos:start="157:27" pos:end="157:33">submaps</name></name> <operator pos:start="157:35" pos:end="157:36">==</operator> <literal type="number" pos:start="157:38" pos:end="157:38">1</literal><operator pos:start="157:39" pos:end="157:39">)</operator> <operator pos:start="157:41" pos:end="157:42">||</operator> <operator pos:start="157:44" pos:end="157:44">(</operator><name pos:start="157:45" pos:end="157:45">i</name> <operator pos:start="157:47" pos:end="157:48">==</operator> <name pos:start="157:50" pos:end="157:64"><name pos:start="157:50" pos:end="157:56">mapping</name><operator pos:start="157:57" pos:end="157:58">-&gt;</operator><name pos:start="157:59" pos:end="157:61">mux</name><index pos:start="157:62" pos:end="157:64">[<expr pos:start="157:63" pos:end="157:63"><name pos:start="157:63" pos:end="157:63">j</name></expr>]</index></name><operator pos:start="157:65" pos:end="157:65">)</operator></expr>)</condition> <block pos:start="157:68" pos:end="175:13">{<block_content pos:start="159:17" pos:end="173:26">

                <expr_stmt pos:start="159:17" pos:end="159:38"><expr pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:27"><name pos:start="159:17" pos:end="159:24">res_chan</name><index pos:start="159:25" pos:end="159:27">[<expr pos:start="159:26" pos:end="159:26"><name pos:start="159:26" pos:end="159:26">j</name></expr>]</index></name> <operator pos:start="159:29" pos:end="159:29">=</operator> <name pos:start="159:31" pos:end="159:37">res_num</name></expr>;</expr_stmt>

                <if_stmt pos:start="161:17" pos:end="169:17"><if pos:start="161:17" pos:end="165:17">if <condition pos:start="161:20" pos:end="161:34">(<expr pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:33"><name pos:start="161:21" pos:end="161:30">no_residue</name><index pos:start="161:31" pos:end="161:33">[<expr pos:start="161:32" pos:end="161:32"><name pos:start="161:32" pos:end="161:32">j</name></expr>]</index></name></expr>)</condition> <block pos:start="161:36" pos:end="165:17">{<block_content pos:start="163:21" pos:end="163:42">

                    <expr_stmt pos:start="163:21" pos:end="163:42"><expr pos:start="163:21" pos:end="163:41"><name pos:start="163:21" pos:end="163:37"><name pos:start="163:21" pos:end="163:33">do_not_decode</name><index pos:start="163:34" pos:end="163:37">[<expr pos:start="163:35" pos:end="163:36"><name pos:start="163:35" pos:end="163:36">ch</name></expr>]</index></name> <operator pos:start="163:39" pos:end="163:39">=</operator> <literal type="number" pos:start="163:41" pos:end="163:41">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="165:19" pos:end="169:17">else <block pos:start="165:24" pos:end="169:17">{<block_content pos:start="167:21" pos:end="167:42">

                    <expr_stmt pos:start="167:21" pos:end="167:42"><expr pos:start="167:21" pos:end="167:41"><name pos:start="167:21" pos:end="167:37"><name pos:start="167:21" pos:end="167:33">do_not_decode</name><index pos:start="167:34" pos:end="167:37">[<expr pos:start="167:35" pos:end="167:36"><name pos:start="167:35" pos:end="167:36">ch</name></expr>]</index></name> <operator pos:start="167:39" pos:end="167:39">=</operator> <literal type="number" pos:start="167:41" pos:end="167:41">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:21"><expr pos:start="171:17" pos:end="171:20"><operator pos:start="171:17" pos:end="171:18">++</operator><name pos:start="171:19" pos:end="171:20">ch</name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:26"><expr pos:start="173:17" pos:end="173:25"><operator pos:start="173:17" pos:end="173:18">++</operator><name pos:start="173:19" pos:end="173:25">res_num</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="179:9" pos:end="179:60"><expr pos:start="179:9" pos:end="179:59"><name pos:start="179:9" pos:end="179:15">residue</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <operator pos:start="179:19" pos:end="179:19">&amp;</operator><name pos:start="179:20" pos:end="179:59"><name pos:start="179:20" pos:end="179:21">vc</name><operator pos:start="179:22" pos:end="179:23">-&gt;</operator><name pos:start="179:24" pos:end="179:31">residues</name><index pos:start="179:32" pos:end="179:59">[<expr pos:start="179:33" pos:end="179:58"><name pos:start="179:33" pos:end="179:58"><name pos:start="179:33" pos:end="179:39">mapping</name><operator pos:start="179:40" pos:end="179:41">-&gt;</operator><name pos:start="179:42" pos:end="179:55">submap_residue</name><index pos:start="179:56" pos:end="179:58">[<expr pos:start="179:57" pos:end="179:57"><name pos:start="179:57" pos:end="179:57">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:25">(<expr pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:19">ch_left</name> <operator pos:start="181:21" pos:end="181:21">&lt;</operator> <name pos:start="181:23" pos:end="181:24">ch</name></expr>)</condition> <block pos:start="181:27" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:22">

            <expr_stmt pos:start="183:13" pos:end="183:96"><expr pos:start="183:13" pos:end="183:95"><call pos:start="183:13" pos:end="183:95"><name pos:start="183:13" pos:end="183:18">av_log</name><argument_list pos:start="183:19" pos:end="183:95">(<argument pos:start="183:20" pos:end="183:33"><expr pos:start="183:20" pos:end="183:33"><name pos:start="183:20" pos:end="183:33"><name pos:start="183:20" pos:end="183:21">vc</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:33">avccontext</name></name></expr></argument>, <argument pos:start="183:36" pos:end="183:47"><expr pos:start="183:36" pos:end="183:47"><name pos:start="183:36" pos:end="183:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="183:50" pos:end="183:94"><expr pos:start="183:50" pos:end="183:94"><literal type="string" pos:start="183:50" pos:end="183:94">"Too many channels in vorbis_floor_decode.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="185:13" pos:end="185:22">return <expr pos:start="185:20" pos:end="185:21"><operator pos:start="185:20" pos:end="185:20">-</operator><literal type="number" pos:start="185:21" pos:end="185:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:87"><expr pos:start="189:9" pos:end="189:86"><call pos:start="189:9" pos:end="189:86"><name pos:start="189:9" pos:end="189:29">vorbis_residue_decode</name><argument_list pos:start="189:30" pos:end="189:86">(<argument pos:start="189:31" pos:end="189:32"><expr pos:start="189:31" pos:end="189:32"><name pos:start="189:31" pos:end="189:32">vc</name></expr></argument>, <argument pos:start="189:35" pos:end="189:41"><expr pos:start="189:35" pos:end="189:41"><name pos:start="189:35" pos:end="189:41">residue</name></expr></argument>, <argument pos:start="189:44" pos:end="189:45"><expr pos:start="189:44" pos:end="189:45"><name pos:start="189:44" pos:end="189:45">ch</name></expr></argument>, <argument pos:start="189:48" pos:end="189:60"><expr pos:start="189:48" pos:end="189:60"><name pos:start="189:48" pos:end="189:60">do_not_decode</name></expr></argument>, <argument pos:start="189:63" pos:end="189:72"><expr pos:start="189:63" pos:end="189:72"><name pos:start="189:63" pos:end="189:72">ch_res_ptr</name></expr></argument>, <argument pos:start="189:75" pos:end="189:85"><expr pos:start="189:75" pos:end="189:85"><name pos:start="189:75" pos:end="189:83">blocksize</name><operator pos:start="189:84" pos:end="189:84">/</operator><literal type="number" pos:start="189:85" pos:end="189:85">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="193:9" pos:end="193:41"><expr pos:start="193:9" pos:end="193:40"><name pos:start="193:9" pos:end="193:18">ch_res_ptr</name> <operator pos:start="193:20" pos:end="193:21">+=</operator> <name pos:start="193:23" pos:end="193:24">ch</name> <operator pos:start="193:26" pos:end="193:26">*</operator> <name pos:start="193:28" pos:end="193:36">blocksize</name> <operator pos:start="193:38" pos:end="193:38">/</operator> <literal type="number" pos:start="193:40" pos:end="193:40">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:22"><expr pos:start="195:9" pos:end="195:21"><name pos:start="195:9" pos:end="195:15">ch_left</name> <operator pos:start="195:17" pos:end="195:18">-=</operator> <name pos:start="195:20" pos:end="195:21">ch</name></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="201:1" pos:end="201:19">// Inverse coupling</comment>



    <for pos:start="205:5" pos:end="217:5">for <control pos:start="205:9" pos:end="205:54">(<init pos:start="205:10" pos:end="205:41"><expr pos:start="205:10" pos:end="205:40"><name pos:start="205:10" pos:end="205:10">i</name> <operator pos:start="205:12" pos:end="205:12">=</operator> <name pos:start="205:14" pos:end="205:36"><name pos:start="205:14" pos:end="205:20">mapping</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:36">coupling_steps</name></name> <operator pos:start="205:38" pos:end="205:38">-</operator> <literal type="number" pos:start="205:40" pos:end="205:40">1</literal></expr>;</init> <condition pos:start="205:43" pos:end="205:49"><expr pos:start="205:43" pos:end="205:48"><name pos:start="205:43" pos:end="205:43">i</name> <operator pos:start="205:45" pos:end="205:46">&gt;=</operator> <literal type="number" pos:start="205:48" pos:end="205:48">0</literal></expr>;</condition> <incr pos:start="205:51" pos:end="205:53"><expr pos:start="205:51" pos:end="205:53"><operator pos:start="205:51" pos:end="205:52">--</operator><name pos:start="205:53" pos:end="205:53">i</name></expr></incr>)</control> <block pos:start="205:56" pos:end="217:5">{<block_content pos:start="207:9" pos:end="215:65"> <comment type="line" pos:start="205:58" pos:end="205:86">//warning: i has to be signed</comment>

        <decl_stmt pos:start="207:9" pos:end="207:25"><decl pos:start="207:9" pos:end="207:18"><type pos:start="207:9" pos:end="207:15"><name pos:start="207:9" pos:end="207:13">float</name> <modifier pos:start="207:15" pos:end="207:15">*</modifier></type><name pos:start="207:16" pos:end="207:18">mag</name></decl>, <decl pos:start="207:21" pos:end="207:24"><type ref="prev" pos:start="207:9" pos:end="207:15"><modifier pos:start="207:21" pos:end="207:21">*</modifier></type><name pos:start="207:22" pos:end="207:24">ang</name></decl>;</decl_stmt>



        <expr_stmt pos:start="211:9" pos:end="211:83"><expr pos:start="211:9" pos:end="211:82"><name pos:start="211:9" pos:end="211:11">mag</name> <operator pos:start="211:13" pos:end="211:13">=</operator> <name pos:start="211:15" pos:end="211:34"><name pos:start="211:15" pos:end="211:16">vc</name><operator pos:start="211:17" pos:end="211:18">-&gt;</operator><name pos:start="211:19" pos:end="211:34">channel_residues</name></name><operator pos:start="211:35" pos:end="211:35">+</operator><name pos:start="211:36" pos:end="211:66"><name pos:start="211:36" pos:end="211:43">res_chan</name><index pos:start="211:44" pos:end="211:66">[<expr pos:start="211:45" pos:end="211:65"><name pos:start="211:45" pos:end="211:65"><name pos:start="211:45" pos:end="211:51">mapping</name><operator pos:start="211:52" pos:end="211:53">-&gt;</operator><name pos:start="211:54" pos:end="211:62">magnitude</name><index pos:start="211:63" pos:end="211:65">[<expr pos:start="211:64" pos:end="211:64"><name pos:start="211:64" pos:end="211:64">i</name></expr>]</index></name></expr>]</index></name> <operator pos:start="211:68" pos:end="211:68">*</operator> <name pos:start="211:70" pos:end="211:78">blocksize</name> <operator pos:start="211:80" pos:end="211:80">/</operator> <literal type="number" pos:start="211:82" pos:end="211:82">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:83"><expr pos:start="213:9" pos:end="213:82"><name pos:start="213:9" pos:end="213:11">ang</name> <operator pos:start="213:13" pos:end="213:13">=</operator> <name pos:start="213:15" pos:end="213:34"><name pos:start="213:15" pos:end="213:16">vc</name><operator pos:start="213:17" pos:end="213:18">-&gt;</operator><name pos:start="213:19" pos:end="213:34">channel_residues</name></name><operator pos:start="213:35" pos:end="213:35">+</operator><name pos:start="213:36" pos:end="213:62"><name pos:start="213:36" pos:end="213:43">res_chan</name><index pos:start="213:44" pos:end="213:62">[<expr pos:start="213:45" pos:end="213:61"><name pos:start="213:45" pos:end="213:61"><name pos:start="213:45" pos:end="213:51">mapping</name><operator pos:start="213:52" pos:end="213:53">-&gt;</operator><name pos:start="213:54" pos:end="213:58">angle</name><index pos:start="213:59" pos:end="213:61">[<expr pos:start="213:60" pos:end="213:60"><name pos:start="213:60" pos:end="213:60">i</name></expr>]</index></name></expr>]</index></name>     <operator pos:start="213:68" pos:end="213:68">*</operator> <name pos:start="213:70" pos:end="213:78">blocksize</name> <operator pos:start="213:80" pos:end="213:80">/</operator> <literal type="number" pos:start="213:82" pos:end="213:82">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:65"><expr pos:start="215:9" pos:end="215:64"><call pos:start="215:9" pos:end="215:64"><name pos:start="215:9" pos:end="215:39"><name pos:start="215:9" pos:end="215:10">vc</name><operator pos:start="215:11" pos:end="215:12">-&gt;</operator><name pos:start="215:13" pos:end="215:15">dsp</name><operator pos:start="215:16" pos:end="215:16">.</operator><name pos:start="215:17" pos:end="215:39">vorbis_inverse_coupling</name></name><argument_list pos:start="215:40" pos:end="215:64">(<argument pos:start="215:41" pos:end="215:43"><expr pos:start="215:41" pos:end="215:43"><name pos:start="215:41" pos:end="215:43">mag</name></expr></argument>, <argument pos:start="215:46" pos:end="215:48"><expr pos:start="215:46" pos:end="215:48"><name pos:start="215:46" pos:end="215:48">ang</name></expr></argument>, <argument pos:start="215:51" pos:end="215:63"><expr pos:start="215:51" pos:end="215:63"><name pos:start="215:51" pos:end="215:59">blocksize</name> <operator pos:start="215:61" pos:end="215:61">/</operator> <literal type="number" pos:start="215:63" pos:end="215:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="221:1" pos:end="221:19">// Dotproduct, MDCT</comment>



    <expr_stmt pos:start="225:5" pos:end="225:32"><expr pos:start="225:5" pos:end="225:31"><name pos:start="225:5" pos:end="225:8">mdct</name> <operator pos:start="225:10" pos:end="225:10">=</operator> <operator pos:start="225:12" pos:end="225:12">&amp;</operator><name pos:start="225:13" pos:end="225:31"><name pos:start="225:13" pos:end="225:14">vc</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:20">mdct</name><index pos:start="225:21" pos:end="225:31">[<expr pos:start="225:22" pos:end="225:30"><name pos:start="225:22" pos:end="225:30">blockflag</name></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="229:5" pos:end="239:5">for <control pos:start="229:9" pos:end="229:46">(<init pos:start="229:10" pos:end="229:34"><expr pos:start="229:10" pos:end="229:33"><name pos:start="229:10" pos:end="229:10">j</name> <operator pos:start="229:12" pos:end="229:12">=</operator> <name pos:start="229:14" pos:end="229:31"><name pos:start="229:14" pos:end="229:15">vc</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:31">audio_channels</name></name><operator pos:start="229:32" pos:end="229:32">-</operator><literal type="number" pos:start="229:33" pos:end="229:33">1</literal></expr>;</init><condition pos:start="229:35" pos:end="229:41"><expr pos:start="229:35" pos:end="229:40"><name pos:start="229:35" pos:end="229:35">j</name> <operator pos:start="229:37" pos:end="229:38">&gt;=</operator> <literal type="number" pos:start="229:40" pos:end="229:40">0</literal></expr>;</condition> <incr pos:start="229:43" pos:end="229:45"><expr pos:start="229:43" pos:end="229:45"><name pos:start="229:43" pos:end="229:43">j</name><operator pos:start="229:44" pos:end="229:45">--</operator></expr></incr>)</control> <block pos:start="229:48" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:57">

        <expr_stmt pos:start="231:9" pos:end="231:74"><expr pos:start="231:9" pos:end="231:73"><name pos:start="231:9" pos:end="231:20">ch_floor_ptr</name> <operator pos:start="231:22" pos:end="231:22">=</operator> <name pos:start="231:24" pos:end="231:41"><name pos:start="231:24" pos:end="231:25">vc</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:41">channel_floors</name></name>   <operator pos:start="231:45" pos:end="231:45">+</operator> <name pos:start="231:47" pos:end="231:47">j</name>           <operator pos:start="231:59" pos:end="231:59">*</operator> <name pos:start="231:61" pos:end="231:69">blocksize</name> <operator pos:start="231:71" pos:end="231:71">/</operator> <literal type="number" pos:start="231:73" pos:end="231:73">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:74"><expr pos:start="233:9" pos:end="233:73"><name pos:start="233:9" pos:end="233:18">ch_res_ptr</name>   <operator pos:start="233:22" pos:end="233:22">=</operator> <name pos:start="233:24" pos:end="233:43"><name pos:start="233:24" pos:end="233:25">vc</name><operator pos:start="233:26" pos:end="233:27">-&gt;</operator><name pos:start="233:28" pos:end="233:43">channel_residues</name></name> <operator pos:start="233:45" pos:end="233:45">+</operator> <name pos:start="233:47" pos:end="233:57"><name pos:start="233:47" pos:end="233:54">res_chan</name><index pos:start="233:55" pos:end="233:57">[<expr pos:start="233:56" pos:end="233:56"><name pos:start="233:56" pos:end="233:56">j</name></expr>]</index></name> <operator pos:start="233:59" pos:end="233:59">*</operator> <name pos:start="233:61" pos:end="233:69">blocksize</name> <operator pos:start="233:71" pos:end="233:71">/</operator> <literal type="number" pos:start="233:73" pos:end="233:73">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:83"><expr pos:start="235:9" pos:end="235:82"><call pos:start="235:9" pos:end="235:82"><name pos:start="235:9" pos:end="235:27"><name pos:start="235:9" pos:end="235:10">vc</name><operator pos:start="235:11" pos:end="235:12">-&gt;</operator><name pos:start="235:13" pos:end="235:15">dsp</name><operator pos:start="235:16" pos:end="235:16">.</operator><name pos:start="235:17" pos:end="235:27">vector_fmul</name></name><argument_list pos:start="235:28" pos:end="235:82">(<argument pos:start="235:29" pos:end="235:40"><expr pos:start="235:29" pos:end="235:40"><name pos:start="235:29" pos:end="235:40">ch_floor_ptr</name></expr></argument>, <argument pos:start="235:43" pos:end="235:54"><expr pos:start="235:43" pos:end="235:54"><name pos:start="235:43" pos:end="235:54">ch_floor_ptr</name></expr></argument>, <argument pos:start="235:57" pos:end="235:66"><expr pos:start="235:57" pos:end="235:66"><name pos:start="235:57" pos:end="235:66">ch_res_ptr</name></expr></argument>, <argument pos:start="235:69" pos:end="235:81"><expr pos:start="235:69" pos:end="235:81"><name pos:start="235:69" pos:end="235:77">blocksize</name> <operator pos:start="235:79" pos:end="235:79">/</operator> <literal type="number" pos:start="235:81" pos:end="235:81">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:57"><expr pos:start="237:9" pos:end="237:56"><call pos:start="237:9" pos:end="237:56"><name pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:12">mdct</name><operator pos:start="237:13" pos:end="237:14">-&gt;</operator><name pos:start="237:15" pos:end="237:24">imdct_half</name></name><argument_list pos:start="237:25" pos:end="237:56">(<argument pos:start="237:26" pos:end="237:29"><expr pos:start="237:26" pos:end="237:29"><name pos:start="237:26" pos:end="237:29">mdct</name></expr></argument>, <argument pos:start="237:32" pos:end="237:41"><expr pos:start="237:32" pos:end="237:41"><name pos:start="237:32" pos:end="237:41">ch_res_ptr</name></expr></argument>, <argument pos:start="237:44" pos:end="237:55"><expr pos:start="237:44" pos:end="237:55"><name pos:start="237:44" pos:end="237:55">ch_floor_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



<comment type="line" pos:start="243:1" pos:end="243:54">// Overlap/add, save data for next overlapping  FPMATH</comment>



    <expr_stmt pos:start="247:5" pos:end="247:62"><expr pos:start="247:5" pos:end="247:61"><name pos:start="247:5" pos:end="247:10">retlen</name> <operator pos:start="247:12" pos:end="247:12">=</operator> <operator pos:start="247:14" pos:end="247:14">(</operator><name pos:start="247:15" pos:end="247:23">blocksize</name> <operator pos:start="247:25" pos:end="247:25">+</operator> <name pos:start="247:27" pos:end="247:56"><name pos:start="247:27" pos:end="247:28">vc</name><operator pos:start="247:29" pos:end="247:30">-&gt;</operator><name pos:start="247:31" pos:end="247:39">blocksize</name><index pos:start="247:40" pos:end="247:56">[<expr pos:start="247:41" pos:end="247:55"><name pos:start="247:41" pos:end="247:55">previous_window</name></expr>]</index></name><operator pos:start="247:57" pos:end="247:57">)</operator> <operator pos:start="247:59" pos:end="247:59">/</operator> <literal type="number" pos:start="247:61" pos:end="247:61">4</literal></expr>;</expr_stmt>

    <for pos:start="249:5" pos:end="287:5">for <control pos:start="249:9" pos:end="249:44">(<init pos:start="249:10" pos:end="249:15"><expr pos:start="249:10" pos:end="249:14"><name pos:start="249:10" pos:end="249:10">j</name> <operator pos:start="249:12" pos:end="249:12">=</operator> <literal type="number" pos:start="249:14" pos:end="249:14">0</literal></expr>;</init> <condition pos:start="249:17" pos:end="249:39"><expr pos:start="249:17" pos:end="249:38"><name pos:start="249:17" pos:end="249:17">j</name> <operator pos:start="249:19" pos:end="249:19">&lt;</operator> <name pos:start="249:21" pos:end="249:38"><name pos:start="249:21" pos:end="249:22">vc</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:38">audio_channels</name></name></expr>;</condition> <incr pos:start="249:41" pos:end="249:43"><expr pos:start="249:41" pos:end="249:43"><name pos:start="249:41" pos:end="249:41">j</name><operator pos:start="249:42" pos:end="249:43">++</operator></expr></incr>)</control> <block pos:start="249:46" pos:end="287:5">{<block_content pos:start="251:9" pos:end="285:74">

        <decl_stmt pos:start="251:9" pos:end="251:40"><decl pos:start="251:9" pos:end="251:39"><type pos:start="251:9" pos:end="251:16"><name pos:start="251:9" pos:end="251:16">unsigned</name></type> <name pos:start="251:18" pos:end="251:20">bs0</name> <init pos:start="251:22" pos:end="251:39">= <expr pos:start="251:24" pos:end="251:39"><name pos:start="251:24" pos:end="251:39"><name pos:start="251:24" pos:end="251:25">vc</name><operator pos:start="251:26" pos:end="251:27">-&gt;</operator><name pos:start="251:28" pos:end="251:36">blocksize</name><index pos:start="251:37" pos:end="251:39">[<expr pos:start="251:38" pos:end="251:38"><literal type="number" pos:start="251:38" pos:end="251:38">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="253:9" pos:end="253:40"><decl pos:start="253:9" pos:end="253:39"><type pos:start="253:9" pos:end="253:16"><name pos:start="253:9" pos:end="253:16">unsigned</name></type> <name pos:start="253:18" pos:end="253:20">bs1</name> <init pos:start="253:22" pos:end="253:39">= <expr pos:start="253:24" pos:end="253:39"><name pos:start="253:24" pos:end="253:39"><name pos:start="253:24" pos:end="253:25">vc</name><operator pos:start="253:26" pos:end="253:27">-&gt;</operator><name pos:start="253:28" pos:end="253:36">blocksize</name><index pos:start="253:37" pos:end="253:39">[<expr pos:start="253:38" pos:end="253:38"><literal type="number" pos:start="253:38" pos:end="253:38">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="255:9" pos:end="255:79"><decl pos:start="255:9" pos:end="255:78"><type pos:start="255:9" pos:end="255:15"><name pos:start="255:9" pos:end="255:13">float</name> <modifier pos:start="255:15" pos:end="255:15">*</modifier></type><name pos:start="255:16" pos:end="255:22">residue</name>    <init pos:start="255:27" pos:end="255:78">= <expr pos:start="255:29" pos:end="255:78"><name pos:start="255:29" pos:end="255:48"><name pos:start="255:29" pos:end="255:30">vc</name><operator pos:start="255:31" pos:end="255:32">-&gt;</operator><name pos:start="255:33" pos:end="255:48">channel_residues</name></name> <operator pos:start="255:50" pos:end="255:50">+</operator> <name pos:start="255:52" pos:end="255:62"><name pos:start="255:52" pos:end="255:59">res_chan</name><index pos:start="255:60" pos:end="255:62">[<expr pos:start="255:61" pos:end="255:61"><name pos:start="255:61" pos:end="255:61">j</name></expr>]</index></name> <operator pos:start="255:64" pos:end="255:64">*</operator> <name pos:start="255:66" pos:end="255:74">blocksize</name> <operator pos:start="255:76" pos:end="255:76">/</operator> <literal type="number" pos:start="255:78" pos:end="255:78">2</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="257:9" pos:end="257:52"><decl pos:start="257:9" pos:end="257:51"><type pos:start="257:9" pos:end="257:15"><name pos:start="257:9" pos:end="257:13">float</name> <modifier pos:start="257:15" pos:end="257:15">*</modifier></type><name pos:start="257:16" pos:end="257:20">saved</name>      <init pos:start="257:27" pos:end="257:51">= <expr pos:start="257:29" pos:end="257:51"><name pos:start="257:29" pos:end="257:37"><name pos:start="257:29" pos:end="257:30">vc</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:37">saved</name></name> <operator pos:start="257:39" pos:end="257:39">+</operator> <name pos:start="257:41" pos:end="257:41">j</name> <operator pos:start="257:43" pos:end="257:43">*</operator> <name pos:start="257:45" pos:end="257:47">bs1</name> <operator pos:start="257:49" pos:end="257:49">/</operator> <literal type="number" pos:start="257:51" pos:end="257:51">4</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="259:9" pos:end="259:60"><decl pos:start="259:9" pos:end="259:59"><type pos:start="259:9" pos:end="259:15"><name pos:start="259:9" pos:end="259:13">float</name> <modifier pos:start="259:15" pos:end="259:15">*</modifier></type><name pos:start="259:16" pos:end="259:18">ret</name>        <init pos:start="259:27" pos:end="259:59">= <expr pos:start="259:29" pos:end="259:59"><name pos:start="259:29" pos:end="259:46"><name pos:start="259:29" pos:end="259:30">vc</name><operator pos:start="259:31" pos:end="259:32">-&gt;</operator><name pos:start="259:33" pos:end="259:46">channel_floors</name></name> <operator pos:start="259:48" pos:end="259:48">+</operator> <name pos:start="259:50" pos:end="259:50">j</name> <operator pos:start="259:52" pos:end="259:52">*</operator> <name pos:start="259:54" pos:end="259:59">retlen</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="261:9" pos:end="261:36"><decl pos:start="261:9" pos:end="261:35"><type pos:start="261:9" pos:end="261:15"><name pos:start="261:9" pos:end="261:13">float</name> <modifier pos:start="261:15" pos:end="261:15">*</modifier></type><name pos:start="261:16" pos:end="261:18">buf</name>        <init pos:start="261:27" pos:end="261:35">= <expr pos:start="261:29" pos:end="261:35"><name pos:start="261:29" pos:end="261:35">residue</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="263:9" pos:end="263:65"><decl pos:start="263:9" pos:end="263:64"><type pos:start="263:9" pos:end="263:21"><specifier pos:start="263:9" pos:end="263:13">const</specifier> <name pos:start="263:15" pos:end="263:19">float</name> <modifier pos:start="263:21" pos:end="263:21">*</modifier></type><name pos:start="263:22" pos:end="263:24">win</name>  <init pos:start="263:27" pos:end="263:64">= <expr pos:start="263:29" pos:end="263:64"><name pos:start="263:29" pos:end="263:64"><name pos:start="263:29" pos:end="263:30">vc</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:35">win</name><index pos:start="263:36" pos:end="263:64">[<expr pos:start="263:37" pos:end="263:63"><name pos:start="263:37" pos:end="263:45">blockflag</name> <operator pos:start="263:47" pos:end="263:47">&amp;</operator> <name pos:start="263:49" pos:end="263:63">previous_window</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="267:9" pos:end="283:9"><if pos:start="267:9" pos:end="271:9">if <condition pos:start="267:12" pos:end="267:41">(<expr pos:start="267:13" pos:end="267:40"><name pos:start="267:13" pos:end="267:21">blockflag</name> <operator pos:start="267:23" pos:end="267:24">==</operator> <name pos:start="267:26" pos:end="267:40">previous_window</name></expr>)</condition> <block pos:start="267:43" pos:end="271:9">{<block_content pos:start="269:13" pos:end="269:76">

            <expr_stmt pos:start="269:13" pos:end="269:76"><expr pos:start="269:13" pos:end="269:75"><call pos:start="269:13" pos:end="269:75"><name pos:start="269:13" pos:end="269:38"><name pos:start="269:13" pos:end="269:14">vc</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:19">dsp</name><operator pos:start="269:20" pos:end="269:20">.</operator><name pos:start="269:21" pos:end="269:38">vector_fmul_window</name></name><argument_list pos:start="269:39" pos:end="269:75">(<argument pos:start="269:40" pos:end="269:42"><expr pos:start="269:40" pos:end="269:42"><name pos:start="269:40" pos:end="269:42">ret</name></expr></argument>, <argument pos:start="269:45" pos:end="269:49"><expr pos:start="269:45" pos:end="269:49"><name pos:start="269:45" pos:end="269:49">saved</name></expr></argument>, <argument pos:start="269:52" pos:end="269:54"><expr pos:start="269:52" pos:end="269:54"><name pos:start="269:52" pos:end="269:54">buf</name></expr></argument>, <argument pos:start="269:57" pos:end="269:59"><expr pos:start="269:57" pos:end="269:59"><name pos:start="269:57" pos:end="269:59">win</name></expr></argument>, <argument pos:start="269:62" pos:end="269:74"><expr pos:start="269:62" pos:end="269:74"><name pos:start="269:62" pos:end="269:70">blocksize</name> <operator pos:start="269:72" pos:end="269:72">/</operator> <literal type="number" pos:start="269:74" pos:end="269:74">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="271:11" pos:end="277:9">else if <condition pos:start="271:19" pos:end="271:47">(<expr pos:start="271:20" pos:end="271:46"><name pos:start="271:20" pos:end="271:28">blockflag</name> <operator pos:start="271:30" pos:end="271:30">&gt;</operator> <name pos:start="271:32" pos:end="271:46">previous_window</name></expr>)</condition> <block pos:start="271:49" pos:end="277:9">{<block_content pos:start="273:13" pos:end="275:72">

            <expr_stmt pos:start="273:13" pos:end="273:70"><expr pos:start="273:13" pos:end="273:69"><call pos:start="273:13" pos:end="273:69"><name pos:start="273:13" pos:end="273:38"><name pos:start="273:13" pos:end="273:14">vc</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:19">dsp</name><operator pos:start="273:20" pos:end="273:20">.</operator><name pos:start="273:21" pos:end="273:38">vector_fmul_window</name></name><argument_list pos:start="273:39" pos:end="273:69">(<argument pos:start="273:40" pos:end="273:42"><expr pos:start="273:40" pos:end="273:42"><name pos:start="273:40" pos:end="273:42">ret</name></expr></argument>, <argument pos:start="273:45" pos:end="273:49"><expr pos:start="273:45" pos:end="273:49"><name pos:start="273:45" pos:end="273:49">saved</name></expr></argument>, <argument pos:start="273:52" pos:end="273:54"><expr pos:start="273:52" pos:end="273:54"><name pos:start="273:52" pos:end="273:54">buf</name></expr></argument>, <argument pos:start="273:57" pos:end="273:59"><expr pos:start="273:57" pos:end="273:59"><name pos:start="273:57" pos:end="273:59">win</name></expr></argument>, <argument pos:start="273:62" pos:end="273:68"><expr pos:start="273:62" pos:end="273:68"><name pos:start="273:62" pos:end="273:64">bs0</name> <operator pos:start="273:66" pos:end="273:66">/</operator> <literal type="number" pos:start="273:68" pos:end="273:68">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="275:13" pos:end="275:72"><expr pos:start="275:13" pos:end="275:71"><call pos:start="275:13" pos:end="275:71"><name pos:start="275:13" pos:end="275:18">memcpy</name><argument_list pos:start="275:19" pos:end="275:71">(<argument pos:start="275:20" pos:end="275:28"><expr pos:start="275:20" pos:end="275:28"><name pos:start="275:20" pos:end="275:22">ret</name><operator pos:start="275:23" pos:end="275:23">+</operator><name pos:start="275:24" pos:end="275:26">bs0</name><operator pos:start="275:27" pos:end="275:27">/</operator><literal type="number" pos:start="275:28" pos:end="275:28">2</literal></expr></argument>, <argument pos:start="275:31" pos:end="275:39"><expr pos:start="275:31" pos:end="275:39"><name pos:start="275:31" pos:end="275:33">buf</name><operator pos:start="275:34" pos:end="275:34">+</operator><name pos:start="275:35" pos:end="275:37">bs0</name><operator pos:start="275:38" pos:end="275:38">/</operator><literal type="number" pos:start="275:39" pos:end="275:39">4</literal></expr></argument>, <argument pos:start="275:42" pos:end="275:70"><expr pos:start="275:42" pos:end="275:70"><operator pos:start="275:42" pos:end="275:42">(</operator><operator pos:start="275:43" pos:end="275:43">(</operator><name pos:start="275:44" pos:end="275:46">bs1</name><operator pos:start="275:47" pos:end="275:47">-</operator><name pos:start="275:48" pos:end="275:50">bs0</name><operator pos:start="275:51" pos:end="275:51">)</operator><operator pos:start="275:52" pos:end="275:52">/</operator><literal type="number" pos:start="275:53" pos:end="275:53">4</literal><operator pos:start="275:54" pos:end="275:54">)</operator> <operator pos:start="275:56" pos:end="275:56">*</operator> <sizeof pos:start="275:58" pos:end="275:70">sizeof<argument_list pos:start="275:64" pos:end="275:70">(<argument pos:start="275:65" pos:end="275:69"><expr pos:start="275:65" pos:end="275:69"><name pos:start="275:65" pos:end="275:69">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="277:11" pos:end="283:9">else <block pos:start="277:16" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:106">

            <expr_stmt pos:start="279:13" pos:end="279:66"><expr pos:start="279:13" pos:end="279:65"><call pos:start="279:13" pos:end="279:65"><name pos:start="279:13" pos:end="279:18">memcpy</name><argument_list pos:start="279:19" pos:end="279:65">(<argument pos:start="279:20" pos:end="279:22"><expr pos:start="279:20" pos:end="279:22"><name pos:start="279:20" pos:end="279:22">ret</name></expr></argument>, <argument pos:start="279:25" pos:end="279:29"><expr pos:start="279:25" pos:end="279:29"><name pos:start="279:25" pos:end="279:29">saved</name></expr></argument>, <argument pos:start="279:32" pos:end="279:64"><expr pos:start="279:32" pos:end="279:64"><operator pos:start="279:32" pos:end="279:32">(</operator><operator pos:start="279:33" pos:end="279:33">(</operator><name pos:start="279:34" pos:end="279:36">bs1</name> <operator pos:start="279:38" pos:end="279:38">-</operator> <name pos:start="279:40" pos:end="279:42">bs0</name><operator pos:start="279:43" pos:end="279:43">)</operator> <operator pos:start="279:45" pos:end="279:45">/</operator> <literal type="number" pos:start="279:47" pos:end="279:47">4</literal><operator pos:start="279:48" pos:end="279:48">)</operator> <operator pos:start="279:50" pos:end="279:50">*</operator> <sizeof pos:start="279:52" pos:end="279:64">sizeof<argument_list pos:start="279:58" pos:end="279:64">(<argument pos:start="279:59" pos:end="279:63"><expr pos:start="279:59" pos:end="279:63"><name pos:start="279:59" pos:end="279:63">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="281:13" pos:end="281:106"><expr pos:start="281:13" pos:end="281:105"><call pos:start="281:13" pos:end="281:105"><name pos:start="281:13" pos:end="281:38"><name pos:start="281:13" pos:end="281:14">vc</name><operator pos:start="281:15" pos:end="281:16">-&gt;</operator><name pos:start="281:17" pos:end="281:19">dsp</name><operator pos:start="281:20" pos:end="281:20">.</operator><name pos:start="281:21" pos:end="281:38">vector_fmul_window</name></name><argument_list pos:start="281:39" pos:end="281:105">(<argument pos:start="281:40" pos:end="281:60"><expr pos:start="281:40" pos:end="281:60"><name pos:start="281:40" pos:end="281:42">ret</name> <operator pos:start="281:44" pos:end="281:44">+</operator> <operator pos:start="281:46" pos:end="281:46">(</operator><name pos:start="281:47" pos:end="281:49">bs1</name> <operator pos:start="281:51" pos:end="281:51">-</operator> <name pos:start="281:53" pos:end="281:55">bs0</name><operator pos:start="281:56" pos:end="281:56">)</operator> <operator pos:start="281:58" pos:end="281:58">/</operator> <literal type="number" pos:start="281:60" pos:end="281:60">4</literal></expr></argument>, <argument pos:start="281:63" pos:end="281:85"><expr pos:start="281:63" pos:end="281:85"><name pos:start="281:63" pos:end="281:67">saved</name> <operator pos:start="281:69" pos:end="281:69">+</operator> <operator pos:start="281:71" pos:end="281:71">(</operator><name pos:start="281:72" pos:end="281:74">bs1</name> <operator pos:start="281:76" pos:end="281:76">-</operator> <name pos:start="281:78" pos:end="281:80">bs0</name><operator pos:start="281:81" pos:end="281:81">)</operator> <operator pos:start="281:83" pos:end="281:83">/</operator> <literal type="number" pos:start="281:85" pos:end="281:85">4</literal></expr></argument>, <argument pos:start="281:88" pos:end="281:90"><expr pos:start="281:88" pos:end="281:90"><name pos:start="281:88" pos:end="281:90">buf</name></expr></argument>, <argument pos:start="281:93" pos:end="281:95"><expr pos:start="281:93" pos:end="281:95"><name pos:start="281:93" pos:end="281:95">win</name></expr></argument>, <argument pos:start="281:98" pos:end="281:104"><expr pos:start="281:98" pos:end="281:104"><name pos:start="281:98" pos:end="281:100">bs0</name> <operator pos:start="281:102" pos:end="281:102">/</operator> <literal type="number" pos:start="281:104" pos:end="281:104">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:74"><expr pos:start="285:9" pos:end="285:73"><call pos:start="285:9" pos:end="285:73"><name pos:start="285:9" pos:end="285:14">memcpy</name><argument_list pos:start="285:15" pos:end="285:73">(<argument pos:start="285:16" pos:end="285:20"><expr pos:start="285:16" pos:end="285:20"><name pos:start="285:16" pos:end="285:20">saved</name></expr></argument>, <argument pos:start="285:23" pos:end="285:41"><expr pos:start="285:23" pos:end="285:41"><name pos:start="285:23" pos:end="285:25">buf</name> <operator pos:start="285:27" pos:end="285:27">+</operator> <name pos:start="285:29" pos:end="285:37">blocksize</name> <operator pos:start="285:39" pos:end="285:39">/</operator> <literal type="number" pos:start="285:41" pos:end="285:41">4</literal></expr></argument>, <argument pos:start="285:44" pos:end="285:72"><expr pos:start="285:44" pos:end="285:72"><name pos:start="285:44" pos:end="285:52">blocksize</name> <operator pos:start="285:54" pos:end="285:54">/</operator> <literal type="number" pos:start="285:56" pos:end="285:56">4</literal> <operator pos:start="285:58" pos:end="285:58">*</operator> <sizeof pos:start="285:60" pos:end="285:72">sizeof<argument_list pos:start="285:66" pos:end="285:72">(<argument pos:start="285:67" pos:end="285:71"><expr pos:start="285:67" pos:end="285:71"><name pos:start="285:67" pos:end="285:71">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="291:5" pos:end="291:36"><expr pos:start="291:5" pos:end="291:35"><name pos:start="291:5" pos:end="291:23"><name pos:start="291:5" pos:end="291:6">vc</name><operator pos:start="291:7" pos:end="291:8">-&gt;</operator><name pos:start="291:9" pos:end="291:23">previous_window</name></name> <operator pos:start="291:25" pos:end="291:25">=</operator> <name pos:start="291:27" pos:end="291:35">blockflag</name></expr>;</expr_stmt>

    <return pos:start="293:5" pos:end="293:18">return <expr pos:start="293:12" pos:end="293:17"><name pos:start="293:12" pos:end="293:17">retlen</name></expr>;</return>

</block_content>}</block></function>
</unit>
