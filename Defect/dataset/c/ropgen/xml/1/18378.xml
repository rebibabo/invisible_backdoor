<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18378.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">genh_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:13">

    <decl_stmt pos:start="5:5" pos:end="5:66"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:25">start_offset</name></decl>, <decl pos:start="5:28" pos:end="5:38"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:28" pos:end="5:38">header_size</name></decl>, <decl pos:start="5:41" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:41" pos:end="5:45">codec</name></decl>, <decl pos:start="5:48" pos:end="5:56"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:48" pos:end="5:56">coef_type</name></decl>, <decl pos:start="5:59" pos:end="5:65"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:59" pos:end="5:65"><name pos:start="5:59" pos:end="5:62">coef</name><index pos:start="5:63" pos:end="5:65">[<expr pos:start="5:64" pos:end="5:64"><literal type="number" pos:start="5:64" pos:end="5:64">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">GENHDemuxContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">c</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:39"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:13">av_unused</name> <name pos:start="9:15" pos:end="9:22">unsigned</name></type> <name pos:start="9:24" pos:end="9:39"><name pos:start="9:24" pos:end="9:36">coef_splitted</name><index pos:start="9:37" pos:end="9:39">[<expr pos:start="9:38" pos:end="9:38"><literal type="number" pos:start="9:38" pos:end="9:38">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">align</name></decl>, <decl pos:start="11:16" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:17">ch</name></decl>, <decl pos:start="11:20" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:22">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:24"><expr pos:start="17:5" pos:end="17:23"><call pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:13">avio_skip</name><argument_list pos:start="17:14" pos:end="17:23">(<argument pos:start="17:15" pos:end="17:19"><expr pos:start="17:15" pos:end="17:19"><name pos:start="17:15" pos:end="17:19"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:19">pb</name></name></expr></argument>, <argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:37"><name pos:start="21:10" pos:end="21:28">avformat_new_stream</name><argument_list pos:start="21:29" pos:end="21:37">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">s</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:31"><if pos:start="23:5" pos:end="25:31">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:6">st</name><operator pos:start="29:7" pos:end="29:8">-&gt;</operator><name pos:start="29:9" pos:end="29:16">codecpar</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:28">codec_type</name></name>  <operator pos:start="29:31" pos:end="29:31">=</operator> <name pos:start="29:33" pos:end="29:50">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:6">st</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:16">codecpar</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:26">channels</name></name>    <operator pos:start="31:31" pos:end="31:31">=</operator> <call pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:41">avio_rl32</name><argument_list pos:start="31:42" pos:end="31:48">(<argument pos:start="31:43" pos:end="31:47"><expr pos:start="31:43" pos:end="31:47"><name pos:start="31:43" pos:end="31:47"><name pos:start="31:43" pos:end="31:43">s</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:47">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:35"><if pos:start="33:5" pos:end="35:35">if <condition pos:start="33:8" pos:end="33:36">(<expr pos:start="33:9" pos:end="33:35"><name pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:10">st</name><operator pos:start="33:11" pos:end="33:12">-&gt;</operator><name pos:start="33:13" pos:end="33:20">codecpar</name><operator pos:start="33:21" pos:end="33:22">-&gt;</operator><name pos:start="33:23" pos:end="33:30">channels</name></name> <operator pos:start="33:32" pos:end="33:33">&lt;=</operator> <literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:35"><block_content pos:start="35:9" pos:end="35:35">

        <return pos:start="35:9" pos:end="35:35">return <expr pos:start="35:16" pos:end="35:34"><name pos:start="35:16" pos:end="35:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="43:59"><if pos:start="37:5" pos:end="39:57">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:30"><name pos:start="37:9" pos:end="37:10">st</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:20">codecpar</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:30">channels</name></name> <operator pos:start="37:32" pos:end="37:33">==</operator> <literal type="number" pos:start="37:35" pos:end="37:35">1</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:57"><block_content pos:start="39:9" pos:end="39:57">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:10">st</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:20">codecpar</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:36">channel_layout</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <name pos:start="39:40" pos:end="39:56">AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="41:5" pos:end="43:59">else if <condition pos:start="41:13" pos:end="41:41">(<expr pos:start="41:14" pos:end="41:40"><name pos:start="41:14" pos:end="41:35"><name pos:start="41:14" pos:end="41:15">st</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:25">codecpar</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:35">channels</name></name> <operator pos:start="41:37" pos:end="41:38">==</operator> <literal type="number" pos:start="41:40" pos:end="41:40">2</literal></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:59"><block_content pos:start="43:9" pos:end="43:59">

        <expr_stmt pos:start="43:9" pos:end="43:59"><expr pos:start="43:9" pos:end="43:58"><name pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:10">st</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:20">codecpar</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:36">channel_layout</name></name> <operator pos:start="43:38" pos:end="43:38">=</operator> <name pos:start="43:40" pos:end="43:58">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="47:46"><expr pos:start="45:5" pos:end="47:45"><name pos:start="45:5" pos:end="45:9">align</name>                  <operator pos:start="45:28" pos:end="45:28">=</operator>

    <name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:5">c</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:22">interleave_size</name></name>     <operator pos:start="47:28" pos:end="47:28">=</operator> <call pos:start="47:30" pos:end="47:45"><name pos:start="47:30" pos:end="47:38">avio_rl32</name><argument_list pos:start="47:39" pos:end="47:45">(<argument pos:start="47:40" pos:end="47:44"><expr pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:44"><name pos:start="47:40" pos:end="47:40">s</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:44">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:35"><if pos:start="49:5" pos:end="51:35">if <condition pos:start="49:8" pos:end="49:62">(<expr pos:start="49:9" pos:end="49:61"><name pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:13">align</name> <argument_list type="generic" pos:start="49:15" pos:end="49:28">&lt; <argument pos:start="49:17" pos:end="49:26"><expr pos:start="49:17" pos:end="49:26"><literal type="number" pos:start="49:17" pos:end="49:17">0</literal> <operator pos:start="49:19" pos:end="49:20">||</operator> <name pos:start="49:22" pos:end="49:26">align</name></expr></argument> &gt;</argument_list></name> <name pos:start="49:30" pos:end="49:36">INT_MAX</name> <operator pos:start="49:38" pos:end="49:38">/</operator> <name pos:start="49:40" pos:end="49:61"><name pos:start="49:40" pos:end="49:41">st</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:51">codecpar</name><operator pos:start="49:52" pos:end="49:53">-&gt;</operator><name pos:start="49:54" pos:end="49:61">channels</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:35"><block_content pos:start="51:9" pos:end="51:35">

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:63"><expr pos:start="53:5" pos:end="53:62"><name pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:16">codecpar</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:29">block_align</name></name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:37">align</name> <operator pos:start="53:39" pos:end="53:39">*</operator> <name pos:start="53:41" pos:end="53:62"><name pos:start="53:41" pos:end="53:42">st</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:52">codecpar</name><operator pos:start="53:53" pos:end="53:54">-&gt;</operator><name pos:start="53:55" pos:end="53:62">channels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:49"><expr pos:start="55:5" pos:end="55:48"><name pos:start="55:5" pos:end="55:29"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:16">codecpar</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:29">sample_rate</name></name> <operator pos:start="55:31" pos:end="55:31">=</operator> <call pos:start="55:33" pos:end="55:48"><name pos:start="55:33" pos:end="55:41">avio_rl32</name><argument_list pos:start="55:42" pos:end="55:48">(<argument pos:start="55:43" pos:end="55:47"><expr pos:start="55:43" pos:end="55:47"><name pos:start="55:43" pos:end="55:47"><name pos:start="55:43" pos:end="55:43">s</name><operator pos:start="55:44" pos:end="55:45">-&gt;</operator><name pos:start="55:46" pos:end="55:47">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:13">avio_skip</name><argument_list pos:start="57:14" pos:end="57:23">(<argument pos:start="57:15" pos:end="57:19"><expr pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:19">pb</name></name></expr></argument>, <argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><literal type="number" pos:start="57:22" pos:end="57:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:36"><expr pos:start="59:5" pos:end="59:35"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:6">st</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:16">duration</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:35"><name pos:start="59:20" pos:end="59:28">avio_rl32</name><argument_list pos:start="59:29" pos:end="59:35">(<argument pos:start="59:30" pos:end="59:34"><expr pos:start="59:30" pos:end="59:34"><name pos:start="59:30" pos:end="59:34"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:9">codec</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:28"><name pos:start="63:13" pos:end="63:21">avio_rl32</name><argument_list pos:start="63:22" pos:end="63:28">(<argument pos:start="63:23" pos:end="63:27"><expr pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:27">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="65:5" pos:end="123:5">switch <condition pos:start="65:12" pos:end="65:18">(<expr pos:start="65:13" pos:end="65:17"><name pos:start="65:13" pos:end="65:17">codec</name></expr>)</condition> <block pos:start="65:20" pos:end="123:5">{<block_content pos:start="67:5" pos:end="121:41">

    <case pos:start="67:5" pos:end="67:12">case  <expr pos:start="67:11" pos:end="67:11"><literal type="number" pos:start="67:11" pos:end="67:11">0</literal></expr>:</case> <expr_stmt pos:start="67:14" pos:end="67:60"><expr pos:start="67:14" pos:end="67:59"><name pos:start="67:14" pos:end="67:35"><name pos:start="67:14" pos:end="67:15">st</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:25">codecpar</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:35">codec_id</name></name> <operator pos:start="67:37" pos:end="67:37">=</operator> <name pos:start="67:39" pos:end="67:59">AV_CODEC_ID_ADPCM_PSX</name></expr>;</expr_stmt>        <break pos:start="67:69" pos:end="67:74">break;</break>

    <case pos:start="69:5" pos:end="69:12">case  <expr pos:start="69:11" pos:end="69:11"><literal type="number" pos:start="69:11" pos:end="69:11">1</literal></expr>:</case>

    <case pos:start="71:5" pos:end="71:12">case <expr pos:start="71:10" pos:end="71:11"><literal type="number" pos:start="71:10" pos:end="71:11">11</literal></expr>:</case> <expr_stmt pos:start="71:14" pos:end="71:53"><expr pos:start="71:14" pos:end="71:52"><name pos:start="71:14" pos:end="71:48"><name pos:start="71:14" pos:end="71:15">st</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:25">codecpar</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:48">bits_per_coded_sample</name></name> <operator pos:start="71:50" pos:end="71:50">=</operator> <literal type="number" pos:start="71:52" pos:end="71:52">4</literal></expr>;</expr_stmt>

             <expr_stmt pos:start="73:14" pos:end="73:69"><expr pos:start="73:14" pos:end="73:68"><name pos:start="73:14" pos:end="73:38"><name pos:start="73:14" pos:end="73:15">st</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:25">codecpar</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:38">block_align</name></name> <operator pos:start="73:40" pos:end="73:40">=</operator> <literal type="number" pos:start="73:42" pos:end="73:43">36</literal> <operator pos:start="73:45" pos:end="73:45">*</operator> <name pos:start="73:47" pos:end="73:68"><name pos:start="73:47" pos:end="73:48">st</name><operator pos:start="73:49" pos:end="73:50">-&gt;</operator><name pos:start="73:51" pos:end="73:58">codecpar</name><operator pos:start="73:59" pos:end="73:60">-&gt;</operator><name pos:start="73:61" pos:end="73:68">channels</name></name></expr>;</expr_stmt>

             <expr_stmt pos:start="75:14" pos:end="75:64"><expr pos:start="75:14" pos:end="75:63"><name pos:start="75:14" pos:end="75:35"><name pos:start="75:14" pos:end="75:15">st</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:25">codecpar</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:35">codec_id</name></name> <operator pos:start="75:37" pos:end="75:37">=</operator> <name pos:start="75:39" pos:end="75:63">AV_CODEC_ID_ADPCM_IMA_WAV</name></expr>;</expr_stmt>    <break pos:start="75:69" pos:end="75:74">break;</break>

    <case pos:start="77:5" pos:end="77:12">case  <expr pos:start="77:11" pos:end="77:11"><literal type="number" pos:start="77:11" pos:end="77:11">2</literal></expr>:</case> <expr_stmt pos:start="77:14" pos:end="77:60"><expr pos:start="77:14" pos:end="77:59"><name pos:start="77:14" pos:end="77:35"><name pos:start="77:14" pos:end="77:15">st</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:25">codecpar</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:35">codec_id</name></name> <operator pos:start="77:37" pos:end="77:37">=</operator> <name pos:start="77:39" pos:end="77:59">AV_CODEC_ID_ADPCM_DTK</name></expr>;</expr_stmt>        <break pos:start="77:69" pos:end="77:74">break;</break>

    <case pos:start="79:5" pos:end="79:12">case  <expr pos:start="79:11" pos:end="79:11"><literal type="number" pos:start="79:11" pos:end="79:11">3</literal></expr>:</case> <expr_stmt pos:start="79:14" pos:end="83:57"><expr pos:start="79:14" pos:end="83:56"><name pos:start="79:14" pos:end="79:35"><name pos:start="79:14" pos:end="79:15">st</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:25">codecpar</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:35">codec_id</name></name> <operator pos:start="79:37" pos:end="79:37">=</operator> <ternary pos:start="79:39" pos:end="83:56"><condition pos:start="79:39" pos:end="79:69"><expr pos:start="79:39" pos:end="79:67"><name pos:start="79:39" pos:end="79:63"><name pos:start="79:39" pos:end="79:40">st</name><operator pos:start="79:41" pos:end="79:42">-&gt;</operator><name pos:start="79:43" pos:end="79:50">codecpar</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:63">block_align</name></name> <operator pos:start="79:65" pos:end="79:65">&gt;</operator> <literal type="number" pos:start="79:67" pos:end="79:67">0</literal></expr> ?</condition><then pos:start="81:36" pos:end="81:63">

                                   <expr pos:start="81:36" pos:end="81:63"><name pos:start="81:36" pos:end="81:63">AV_CODEC_ID_PCM_S16BE_PLANAR</name></expr> </then><else pos:start="81:65" pos:end="83:56">:

                                   <expr pos:start="83:36" pos:end="83:56"><name pos:start="83:36" pos:end="83:56">AV_CODEC_ID_PCM_S16BE</name></expr></else></ternary></expr>;</expr_stmt>        <break pos:start="83:66" pos:end="83:71">break;</break>

    <case pos:start="85:5" pos:end="85:12">case  <expr pos:start="85:11" pos:end="85:11"><literal type="number" pos:start="85:11" pos:end="85:11">4</literal></expr>:</case> <expr_stmt pos:start="85:14" pos:end="89:57"><expr pos:start="85:14" pos:end="89:56"><name pos:start="85:14" pos:end="85:35"><name pos:start="85:14" pos:end="85:15">st</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:25">codecpar</name><operator pos:start="85:26" pos:end="85:27">-&gt;</operator><name pos:start="85:28" pos:end="85:35">codec_id</name></name> <operator pos:start="85:37" pos:end="85:37">=</operator> <ternary pos:start="85:39" pos:end="89:56"><condition pos:start="85:39" pos:end="85:69"><expr pos:start="85:39" pos:end="85:67"><name pos:start="85:39" pos:end="85:63"><name pos:start="85:39" pos:end="85:40">st</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:50">codecpar</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:63">block_align</name></name> <operator pos:start="85:65" pos:end="85:65">&gt;</operator> <literal type="number" pos:start="85:67" pos:end="85:67">0</literal></expr> ?</condition><then pos:start="87:36" pos:end="87:63">

                                   <expr pos:start="87:36" pos:end="87:63"><name pos:start="87:36" pos:end="87:63">AV_CODEC_ID_PCM_S16LE_PLANAR</name></expr> </then><else pos:start="87:65" pos:end="89:56">:

                                   <expr pos:start="89:36" pos:end="89:56"><name pos:start="89:36" pos:end="89:56">AV_CODEC_ID_PCM_S16LE</name></expr></else></ternary></expr>;</expr_stmt>        <break pos:start="89:66" pos:end="89:71">break;</break>

    <case pos:start="91:5" pos:end="91:12">case  <expr pos:start="91:11" pos:end="91:11"><literal type="number" pos:start="91:11" pos:end="91:11">5</literal></expr>:</case> <expr_stmt pos:start="91:14" pos:end="95:54"><expr pos:start="91:14" pos:end="95:53"><name pos:start="91:14" pos:end="91:35"><name pos:start="91:14" pos:end="91:15">st</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:25">codecpar</name><operator pos:start="91:26" pos:end="91:27">-&gt;</operator><name pos:start="91:28" pos:end="91:35">codec_id</name></name> <operator pos:start="91:37" pos:end="91:37">=</operator> <ternary pos:start="91:39" pos:end="95:53"><condition pos:start="91:39" pos:end="91:69"><expr pos:start="91:39" pos:end="91:67"><name pos:start="91:39" pos:end="91:63"><name pos:start="91:39" pos:end="91:40">st</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:50">codecpar</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:63">block_align</name></name> <operator pos:start="91:65" pos:end="91:65">&gt;</operator> <literal type="number" pos:start="91:67" pos:end="91:67">0</literal></expr> ?</condition><then pos:start="93:36" pos:end="93:60">

                                   <expr pos:start="93:36" pos:end="93:60"><name pos:start="93:36" pos:end="93:60">AV_CODEC_ID_PCM_S8_PLANAR</name></expr> </then><else pos:start="93:62" pos:end="95:53">:

                                   <expr pos:start="95:36" pos:end="95:53"><name pos:start="95:36" pos:end="95:53">AV_CODEC_ID_PCM_S8</name></expr></else></ternary></expr>;</expr_stmt>           <break pos:start="95:66" pos:end="95:71">break;</break>

    <case pos:start="97:5" pos:end="97:12">case  <expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">6</literal></expr>:</case> <expr_stmt pos:start="97:14" pos:end="97:60"><expr pos:start="97:14" pos:end="97:59"><name pos:start="97:14" pos:end="97:35"><name pos:start="97:14" pos:end="97:15">st</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:25">codecpar</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:35">codec_id</name></name> <operator pos:start="97:37" pos:end="97:37">=</operator> <name pos:start="97:39" pos:end="97:59">AV_CODEC_ID_SDX2_DPCM</name></expr>;</expr_stmt>        <break pos:start="97:69" pos:end="97:74">break;</break>

    <case pos:start="99:5" pos:end="99:12">case  <expr pos:start="99:11" pos:end="99:11"><literal type="number" pos:start="99:11" pos:end="99:11">7</literal></expr>:</case> <expr_stmt pos:start="99:14" pos:end="99:55"><expr pos:start="99:14" pos:end="99:54"><name pos:start="99:14" pos:end="99:16">ret</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:54"><name pos:start="99:20" pos:end="99:37">ff_alloc_extradata</name><argument_list pos:start="99:38" pos:end="99:54">(<argument pos:start="99:39" pos:end="99:50"><expr pos:start="99:39" pos:end="99:50"><name pos:start="99:39" pos:end="99:50"><name pos:start="99:39" pos:end="99:40">st</name><operator pos:start="99:41" pos:end="99:42">-&gt;</operator><name pos:start="99:43" pos:end="99:50">codecpar</name></name></expr></argument>, <argument pos:start="99:53" pos:end="99:53"><expr pos:start="99:53" pos:end="99:53"><literal type="number" pos:start="99:53" pos:end="99:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <if_stmt pos:start="101:14" pos:end="103:28"><if pos:start="101:14" pos:end="103:28">if <condition pos:start="101:17" pos:end="101:25">(<expr pos:start="101:18" pos:end="101:24"><name pos:start="101:18" pos:end="101:20">ret</name> <operator pos:start="101:22" pos:end="101:22">&lt;</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>)</condition><block type="pseudo" pos:start="103:18" pos:end="103:28"><block_content pos:start="103:18" pos:end="103:28">

                 <return pos:start="103:18" pos:end="103:28">return <expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">ret</name></expr>;</return></block_content></block></if></if_stmt>

             <expr_stmt pos:start="105:14" pos:end="105:49"><expr pos:start="105:14" pos:end="105:48"><call pos:start="105:14" pos:end="105:48"><name pos:start="105:14" pos:end="105:20">AV_WL16</name><argument_list pos:start="105:21" pos:end="105:48">(<argument pos:start="105:22" pos:end="105:44"><expr pos:start="105:22" pos:end="105:44"><name pos:start="105:22" pos:end="105:44"><name pos:start="105:22" pos:end="105:23">st</name><operator pos:start="105:24" pos:end="105:25">-&gt;</operator><name pos:start="105:26" pos:end="105:33">codecpar</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:44">extradata</name></name></expr></argument>, <argument pos:start="105:47" pos:end="105:47"><expr pos:start="105:47" pos:end="105:47"><literal type="number" pos:start="105:47" pos:end="105:47">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <expr_stmt pos:start="107:14" pos:end="107:63"><expr pos:start="107:14" pos:end="107:62"><name pos:start="107:14" pos:end="107:35"><name pos:start="107:14" pos:end="107:15">st</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:25">codecpar</name><operator pos:start="107:26" pos:end="107:27">-&gt;</operator><name pos:start="107:28" pos:end="107:35">codec_id</name></name> <operator pos:start="107:37" pos:end="107:37">=</operator> <name pos:start="107:39" pos:end="107:62">AV_CODEC_ID_ADPCM_IMA_WS</name></expr>;</expr_stmt>     <break pos:start="107:69" pos:end="107:74">break;</break>

    <case pos:start="109:5" pos:end="109:12">case <expr pos:start="109:10" pos:end="109:11"><literal type="number" pos:start="109:10" pos:end="109:11">10</literal></expr>:</case> <expr_stmt pos:start="109:14" pos:end="109:61"><expr pos:start="109:14" pos:end="109:60"><name pos:start="109:14" pos:end="109:35"><name pos:start="109:14" pos:end="109:15">st</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:25">codecpar</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:35">codec_id</name></name> <operator pos:start="109:37" pos:end="109:37">=</operator> <name pos:start="109:39" pos:end="109:60">AV_CODEC_ID_ADPCM_AICA</name></expr>;</expr_stmt>       <break pos:start="109:69" pos:end="109:74">break;</break>

    <case pos:start="111:5" pos:end="111:12">case <expr pos:start="111:10" pos:end="111:11"><literal type="number" pos:start="111:10" pos:end="111:11">12</literal></expr>:</case> <expr_stmt pos:start="111:14" pos:end="111:60"><expr pos:start="111:14" pos:end="111:59"><name pos:start="111:14" pos:end="111:35"><name pos:start="111:14" pos:end="111:15">st</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:25">codecpar</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:35">codec_id</name></name> <operator pos:start="111:37" pos:end="111:37">=</operator> <name pos:start="111:39" pos:end="111:59">AV_CODEC_ID_ADPCM_THP</name></expr>;</expr_stmt>        <break pos:start="111:69" pos:end="111:74">break;</break>

    <case pos:start="113:5" pos:end="113:12">case <expr pos:start="113:10" pos:end="113:11"><literal type="number" pos:start="113:10" pos:end="113:11">13</literal></expr>:</case> <expr_stmt pos:start="113:14" pos:end="113:57"><expr pos:start="113:14" pos:end="113:56"><name pos:start="113:14" pos:end="113:35"><name pos:start="113:14" pos:end="113:15">st</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:25">codecpar</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:35">codec_id</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <name pos:start="113:39" pos:end="113:56">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>           <break pos:start="113:69" pos:end="113:74">break;</break>

    <case pos:start="115:5" pos:end="115:12">case <expr pos:start="115:10" pos:end="115:11"><literal type="number" pos:start="115:10" pos:end="115:11">17</literal></expr>:</case> <expr_stmt pos:start="115:14" pos:end="115:63"><expr pos:start="115:14" pos:end="115:62"><name pos:start="115:14" pos:end="115:35"><name pos:start="115:14" pos:end="115:15">st</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:25">codecpar</name><operator pos:start="115:26" pos:end="115:27">-&gt;</operator><name pos:start="115:28" pos:end="115:35">codec_id</name></name> <operator pos:start="115:37" pos:end="115:37">=</operator> <name pos:start="115:39" pos:end="115:62">AV_CODEC_ID_ADPCM_IMA_QT</name></expr>;</expr_stmt>     <break pos:start="115:69" pos:end="115:74">break;</break>

    <default pos:start="117:5" pos:end="117:12">default:</default>

             <expr_stmt pos:start="119:14" pos:end="119:57"><expr pos:start="119:14" pos:end="119:56"><call pos:start="119:14" pos:end="119:56"><name pos:start="119:14" pos:end="119:34">avpriv_request_sample</name><argument_list pos:start="119:35" pos:end="119:56">(<argument pos:start="119:36" pos:end="119:36"><expr pos:start="119:36" pos:end="119:36"><name pos:start="119:36" pos:end="119:36">s</name></expr></argument>, <argument pos:start="119:39" pos:end="119:48"><expr pos:start="119:39" pos:end="119:48"><literal type="string" pos:start="119:39" pos:end="119:48">"codec %d"</literal></expr></argument>, <argument pos:start="119:51" pos:end="119:55"><expr pos:start="119:51" pos:end="119:55"><name pos:start="119:51" pos:end="119:55">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <return pos:start="121:14" pos:end="121:41">return <expr pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:40">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:16">start_offset</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <call pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:28">avio_rl32</name><argument_list pos:start="127:29" pos:end="127:35">(<argument pos:start="127:30" pos:end="127:34"><expr pos:start="127:30" pos:end="127:34"><name pos:start="127:30" pos:end="127:34"><name pos:start="127:30" pos:end="127:30">s</name><operator pos:start="127:31" pos:end="127:32">-&gt;</operator><name pos:start="127:33" pos:end="127:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:36"><expr pos:start="129:5" pos:end="129:35"><name pos:start="129:5" pos:end="129:15">header_size</name>  <operator pos:start="129:18" pos:end="129:18">=</operator> <call pos:start="129:20" pos:end="129:35"><name pos:start="129:20" pos:end="129:28">avio_rl32</name><argument_list pos:start="129:29" pos:end="129:35">(<argument pos:start="129:30" pos:end="129:34"><expr pos:start="129:30" pos:end="129:34"><name pos:start="129:30" pos:end="129:34"><name pos:start="129:30" pos:end="129:30">s</name><operator pos:start="129:31" pos:end="129:32">-&gt;</operator><name pos:start="129:33" pos:end="129:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="133:5" pos:end="135:35"><if pos:start="133:5" pos:end="135:35">if <condition pos:start="133:8" pos:end="133:35">(<expr pos:start="133:9" pos:end="133:34"><name pos:start="133:9" pos:end="133:19">header_size</name> <operator pos:start="133:21" pos:end="133:21">&gt;</operator> <name pos:start="133:23" pos:end="133:34">start_offset</name></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:35"><block_content pos:start="135:9" pos:end="135:35">

        <return pos:start="135:9" pos:end="135:35">return <expr pos:start="135:16" pos:end="135:34"><name pos:start="135:16" pos:end="135:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="139:5" pos:end="141:29"><if pos:start="139:5" pos:end="141:29">if <condition pos:start="139:8" pos:end="139:25">(<expr pos:start="139:9" pos:end="139:24"><name pos:start="139:9" pos:end="139:19">header_size</name> <operator pos:start="139:21" pos:end="139:22">==</operator> <literal type="number" pos:start="139:24" pos:end="139:24">0</literal></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:29"><block_content pos:start="141:9" pos:end="141:29">

        <expr_stmt pos:start="141:9" pos:end="141:29"><expr pos:start="141:9" pos:end="141:28"><name pos:start="141:9" pos:end="141:20">start_offset</name> <operator pos:start="141:22" pos:end="141:22">=</operator> <literal type="number" pos:start="141:24" pos:end="141:28">0x800</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:40"><expr pos:start="145:5" pos:end="145:39"><name pos:start="145:5" pos:end="145:11"><name pos:start="145:5" pos:end="145:8">coef</name><index pos:start="145:9" pos:end="145:11">[<expr pos:start="145:10" pos:end="145:10"><literal type="number" pos:start="145:10" pos:end="145:10">0</literal></expr>]</index></name>          <operator pos:start="145:22" pos:end="145:22">=</operator> <call pos:start="145:24" pos:end="145:39"><name pos:start="145:24" pos:end="145:32">avio_rl32</name><argument_list pos:start="145:33" pos:end="145:39">(<argument pos:start="145:34" pos:end="145:38"><expr pos:start="145:34" pos:end="145:38"><name pos:start="145:34" pos:end="145:38"><name pos:start="145:34" pos:end="145:34">s</name><operator pos:start="145:35" pos:end="145:36">-&gt;</operator><name pos:start="145:37" pos:end="145:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:40"><expr pos:start="147:5" pos:end="147:39"><name pos:start="147:5" pos:end="147:11"><name pos:start="147:5" pos:end="147:8">coef</name><index pos:start="147:9" pos:end="147:11">[<expr pos:start="147:10" pos:end="147:10"><literal type="number" pos:start="147:10" pos:end="147:10">1</literal></expr>]</index></name>          <operator pos:start="147:22" pos:end="147:22">=</operator> <call pos:start="147:24" pos:end="147:39"><name pos:start="147:24" pos:end="147:32">avio_rl32</name><argument_list pos:start="147:33" pos:end="147:39">(<argument pos:start="147:34" pos:end="147:38"><expr pos:start="147:34" pos:end="147:38"><name pos:start="147:34" pos:end="147:38"><name pos:start="147:34" pos:end="147:34">s</name><operator pos:start="147:35" pos:end="147:36">-&gt;</operator><name pos:start="147:37" pos:end="147:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:40"><expr pos:start="149:5" pos:end="149:39"><name pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:5">c</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:19">dsp_int_type</name></name>  <operator pos:start="149:22" pos:end="149:22">=</operator> <call pos:start="149:24" pos:end="149:39"><name pos:start="149:24" pos:end="149:32">avio_rl32</name><argument_list pos:start="149:33" pos:end="149:39">(<argument pos:start="149:34" pos:end="149:38"><expr pos:start="149:34" pos:end="149:38"><name pos:start="149:34" pos:end="149:38"><name pos:start="149:34" pos:end="149:34">s</name><operator pos:start="149:35" pos:end="149:36">-&gt;</operator><name pos:start="149:37" pos:end="149:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:40"><expr pos:start="151:5" pos:end="151:39"><name pos:start="151:5" pos:end="151:13">coef_type</name>        <operator pos:start="151:22" pos:end="151:22">=</operator> <call pos:start="151:24" pos:end="151:39"><name pos:start="151:24" pos:end="151:32">avio_rl32</name><argument_list pos:start="151:33" pos:end="151:39">(<argument pos:start="151:34" pos:end="151:38"><expr pos:start="151:34" pos:end="151:38"><name pos:start="151:34" pos:end="151:38"><name pos:start="151:34" pos:end="151:34">s</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:40"><expr pos:start="153:5" pos:end="153:39"><name pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:17">coef_splitted</name><index pos:start="153:18" pos:end="153:20">[<expr pos:start="153:19" pos:end="153:19"><literal type="number" pos:start="153:19" pos:end="153:19">0</literal></expr>]</index></name> <operator pos:start="153:22" pos:end="153:22">=</operator> <call pos:start="153:24" pos:end="153:39"><name pos:start="153:24" pos:end="153:32">avio_rl32</name><argument_list pos:start="153:33" pos:end="153:39">(<argument pos:start="153:34" pos:end="153:38"><expr pos:start="153:34" pos:end="153:38"><name pos:start="153:34" pos:end="153:38"><name pos:start="153:34" pos:end="153:34">s</name><operator pos:start="153:35" pos:end="153:36">-&gt;</operator><name pos:start="153:37" pos:end="153:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:40"><expr pos:start="155:5" pos:end="155:39"><name pos:start="155:5" pos:end="155:20"><name pos:start="155:5" pos:end="155:17">coef_splitted</name><index pos:start="155:18" pos:end="155:20">[<expr pos:start="155:19" pos:end="155:19"><literal type="number" pos:start="155:19" pos:end="155:19">1</literal></expr>]</index></name> <operator pos:start="155:22" pos:end="155:22">=</operator> <call pos:start="155:24" pos:end="155:39"><name pos:start="155:24" pos:end="155:32">avio_rl32</name><argument_list pos:start="155:33" pos:end="155:39">(<argument pos:start="155:34" pos:end="155:38"><expr pos:start="155:34" pos:end="155:38"><name pos:start="155:34" pos:end="155:38"><name pos:start="155:34" pos:end="155:34">s</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:38">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="159:5" pos:end="207:5"><if pos:start="159:5" pos:end="207:5">if <condition pos:start="159:8" pos:end="159:56">(<expr pos:start="159:9" pos:end="159:55"><name pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:10">st</name><operator pos:start="159:11" pos:end="159:12">-&gt;</operator><name pos:start="159:13" pos:end="159:20">codecpar</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:30">codec_id</name></name> <operator pos:start="159:32" pos:end="159:33">==</operator> <name pos:start="159:35" pos:end="159:55">AV_CODEC_ID_ADPCM_THP</name></expr>)</condition> <block pos:start="159:58" pos:end="207:5">{<block_content pos:start="161:9" pos:end="205:9">

        <if_stmt pos:start="161:9" pos:end="167:9"><if pos:start="161:9" pos:end="167:9">if <condition pos:start="161:12" pos:end="161:39">(<expr pos:start="161:13" pos:end="161:38"><name pos:start="161:13" pos:end="161:34"><name pos:start="161:13" pos:end="161:14">st</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:24">codecpar</name><operator pos:start="161:25" pos:end="161:26">-&gt;</operator><name pos:start="161:27" pos:end="161:34">channels</name></name> <operator pos:start="161:36" pos:end="161:36">&gt;</operator> <literal type="number" pos:start="161:38" pos:end="161:38">2</literal></expr>)</condition> <block pos:start="161:41" pos:end="167:9">{<block_content pos:start="163:13" pos:end="165:40">

            <expr_stmt pos:start="163:13" pos:end="163:78"><expr pos:start="163:13" pos:end="163:77"><call pos:start="163:13" pos:end="163:77"><name pos:start="163:13" pos:end="163:33">avpriv_request_sample</name><argument_list pos:start="163:34" pos:end="163:77">(<argument pos:start="163:35" pos:end="163:35"><expr pos:start="163:35" pos:end="163:35"><name pos:start="163:35" pos:end="163:35">s</name></expr></argument>, <argument pos:start="163:38" pos:end="163:52"><expr pos:start="163:38" pos:end="163:52"><literal type="string" pos:start="163:38" pos:end="163:52">"channels %d&gt;2"</literal></expr></argument>, <argument pos:start="163:55" pos:end="163:76"><expr pos:start="163:55" pos:end="163:76"><name pos:start="163:55" pos:end="163:76"><name pos:start="163:55" pos:end="163:56">st</name><operator pos:start="163:57" pos:end="163:58">-&gt;</operator><name pos:start="163:59" pos:end="163:66">codecpar</name><operator pos:start="163:67" pos:end="163:68">-&gt;</operator><name pos:start="163:69" pos:end="163:76">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="165:13" pos:end="165:40">return <expr pos:start="165:20" pos:end="165:39"><name pos:start="165:20" pos:end="165:39">AVERROR_PATCHWELCOME</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:70"><expr pos:start="171:9" pos:end="171:69"><call pos:start="171:9" pos:end="171:69"><name pos:start="171:9" pos:end="171:26">ff_alloc_extradata</name><argument_list pos:start="171:27" pos:end="171:69">(<argument pos:start="171:28" pos:end="171:39"><expr pos:start="171:28" pos:end="171:39"><name pos:start="171:28" pos:end="171:39"><name pos:start="171:28" pos:end="171:29">st</name><operator pos:start="171:30" pos:end="171:31">-&gt;</operator><name pos:start="171:32" pos:end="171:39">codecpar</name></name></expr></argument>, <argument pos:start="171:42" pos:end="171:68"><expr pos:start="171:42" pos:end="171:68"><literal type="number" pos:start="171:42" pos:end="171:43">32</literal> <operator pos:start="171:45" pos:end="171:45">*</operator> <name pos:start="171:47" pos:end="171:68"><name pos:start="171:47" pos:end="171:48">st</name><operator pos:start="171:49" pos:end="171:50">-&gt;</operator><name pos:start="171:51" pos:end="171:58">codecpar</name><operator pos:start="171:59" pos:end="171:60">-&gt;</operator><name pos:start="171:61" pos:end="171:68">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="189:9">for <control pos:start="173:13" pos:end="173:55">(<init pos:start="173:14" pos:end="173:20"><expr pos:start="173:14" pos:end="173:19"><name pos:start="173:14" pos:end="173:15">ch</name> <operator pos:start="173:17" pos:end="173:17">=</operator> <literal type="number" pos:start="173:19" pos:end="173:19">0</literal></expr>;</init> <condition pos:start="173:22" pos:end="173:49"><expr pos:start="173:22" pos:end="173:48"><name pos:start="173:22" pos:end="173:23">ch</name> <operator pos:start="173:25" pos:end="173:25">&lt;</operator> <name pos:start="173:27" pos:end="173:48"><name pos:start="173:27" pos:end="173:28">st</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:38">codecpar</name><operator pos:start="173:39" pos:end="173:40">-&gt;</operator><name pos:start="173:41" pos:end="173:48">channels</name></name></expr>;</condition> <incr pos:start="173:51" pos:end="173:54"><expr pos:start="173:51" pos:end="173:54"><name pos:start="173:51" pos:end="173:52">ch</name><operator pos:start="173:53" pos:end="173:54">++</operator></expr></incr>)</control> <block pos:start="173:57" pos:end="189:9">{<block_content pos:start="175:13" pos:end="187:13">

            <if_stmt pos:start="175:13" pos:end="187:13"><if pos:start="175:13" pos:end="181:13">if <condition pos:start="175:16" pos:end="175:30">(<expr pos:start="175:17" pos:end="175:29"><name pos:start="175:17" pos:end="175:25">coef_type</name> <operator pos:start="175:27" pos:end="175:27">&amp;</operator> <literal type="number" pos:start="175:29" pos:end="175:29">1</literal></expr>)</condition> <block pos:start="175:32" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:44">

                <expr_stmt pos:start="177:17" pos:end="177:58"><expr pos:start="177:17" pos:end="177:57"><call pos:start="177:17" pos:end="177:57"><name pos:start="177:17" pos:end="177:37">avpriv_request_sample</name><argument_list pos:start="177:38" pos:end="177:57">(<argument pos:start="177:39" pos:end="177:39"><expr pos:start="177:39" pos:end="177:39"><name pos:start="177:39" pos:end="177:39">s</name></expr></argument>, <argument pos:start="177:42" pos:end="177:56"><expr pos:start="177:42" pos:end="177:56"><literal type="string" pos:start="177:42" pos:end="177:56">"coef_type &amp; 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="179:17" pos:end="179:44">return <expr pos:start="179:24" pos:end="179:43"><name pos:start="179:24" pos:end="179:43">AVERROR_PATCHWELCOME</name></expr>;</return>

            </block_content>}</block></if> <else pos:start="181:15" pos:end="187:13">else <block pos:start="181:20" pos:end="187:13">{<block_content pos:start="183:17" pos:end="185:72">

                <expr_stmt pos:start="183:17" pos:end="183:53"><expr pos:start="183:17" pos:end="183:52"><call pos:start="183:17" pos:end="183:52"><name pos:start="183:17" pos:end="183:25">avio_seek</name><argument_list pos:start="183:26" pos:end="183:52">(<argument pos:start="183:27" pos:end="183:31"><expr pos:start="183:27" pos:end="183:31"><name pos:start="183:27" pos:end="183:31"><name pos:start="183:27" pos:end="183:27">s</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:31">pb</name></name></expr></argument>, <argument pos:start="183:34" pos:end="183:41"><expr pos:start="183:34" pos:end="183:41"><name pos:start="183:34" pos:end="183:41"><name pos:start="183:34" pos:end="183:37">coef</name><index pos:start="183:38" pos:end="183:41">[<expr pos:start="183:39" pos:end="183:40"><name pos:start="183:39" pos:end="183:40">ch</name></expr>]</index></name></expr></argument>, <argument pos:start="183:44" pos:end="183:51"><expr pos:start="183:44" pos:end="183:51"><name pos:start="183:44" pos:end="183:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:72"><expr pos:start="185:17" pos:end="185:71"><call pos:start="185:17" pos:end="185:71"><name pos:start="185:17" pos:end="185:25">avio_read</name><argument_list pos:start="185:26" pos:end="185:71">(<argument pos:start="185:27" pos:end="185:31"><expr pos:start="185:27" pos:end="185:31"><name pos:start="185:27" pos:end="185:31"><name pos:start="185:27" pos:end="185:27">s</name><operator pos:start="185:28" pos:end="185:29">-&gt;</operator><name pos:start="185:30" pos:end="185:31">pb</name></name></expr></argument>, <argument pos:start="185:34" pos:end="185:66"><expr pos:start="185:34" pos:end="185:66"><name pos:start="185:34" pos:end="185:56"><name pos:start="185:34" pos:end="185:35">st</name><operator pos:start="185:36" pos:end="185:37">-&gt;</operator><name pos:start="185:38" pos:end="185:45">codecpar</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:56">extradata</name></name> <operator pos:start="185:58" pos:end="185:58">+</operator> <literal type="number" pos:start="185:60" pos:end="185:61">32</literal> <operator pos:start="185:63" pos:end="185:63">*</operator> <name pos:start="185:65" pos:end="185:66">ch</name></expr></argument>, <argument pos:start="185:69" pos:end="185:70"><expr pos:start="185:69" pos:end="185:70"><literal type="number" pos:start="185:69" pos:end="185:70">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="193:9" pos:end="205:9"><if pos:start="193:9" pos:end="205:9">if <condition pos:start="193:12" pos:end="193:33">(<expr pos:start="193:13" pos:end="193:32"><name pos:start="193:13" pos:end="193:27"><name pos:start="193:13" pos:end="193:13">c</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:27">dsp_int_type</name></name> <operator pos:start="193:29" pos:end="193:30">==</operator> <literal type="number" pos:start="193:32" pos:end="193:32">1</literal></expr>)</condition> <block pos:start="193:35" pos:end="205:9">{<block_content pos:start="195:13" pos:end="203:43">

            <expr_stmt pos:start="195:13" pos:end="195:67"><expr pos:start="195:13" pos:end="195:66"><name pos:start="195:13" pos:end="195:37"><name pos:start="195:13" pos:end="195:14">st</name><operator pos:start="195:15" pos:end="195:16">-&gt;</operator><name pos:start="195:17" pos:end="195:24">codecpar</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:37">block_align</name></name> <operator pos:start="195:39" pos:end="195:39">=</operator> <literal type="number" pos:start="195:41" pos:end="195:41">8</literal> <operator pos:start="195:43" pos:end="195:43">*</operator> <name pos:start="195:45" pos:end="195:66"><name pos:start="195:45" pos:end="195:46">st</name><operator pos:start="195:47" pos:end="195:48">-&gt;</operator><name pos:start="195:49" pos:end="195:56">codecpar</name><operator pos:start="195:57" pos:end="195:58">-&gt;</operator><name pos:start="195:59" pos:end="195:66">channels</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="197:13" pos:end="203:43"><if pos:start="197:13" pos:end="203:43">if <condition pos:start="197:16" pos:end="201:40">(<expr pos:start="197:17" pos:end="201:39"><name pos:start="197:17" pos:end="197:34"><name pos:start="197:17" pos:end="197:17">c</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:34">interleave_size</name></name> <operator pos:start="197:36" pos:end="197:37">!=</operator> <literal type="number" pos:start="197:39" pos:end="197:39">1</literal> <operator pos:start="197:41" pos:end="197:42">&amp;&amp;</operator>

                <name pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:17">c</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:34">interleave_size</name></name> <operator pos:start="199:36" pos:end="199:37">!=</operator> <literal type="number" pos:start="199:39" pos:end="199:39">2</literal> <operator pos:start="199:41" pos:end="199:42">&amp;&amp;</operator>

                <name pos:start="201:17" pos:end="201:34"><name pos:start="201:17" pos:end="201:17">c</name><operator pos:start="201:18" pos:end="201:19">-&gt;</operator><name pos:start="201:20" pos:end="201:34">interleave_size</name></name> <operator pos:start="201:36" pos:end="201:37">!=</operator> <literal type="number" pos:start="201:39" pos:end="201:39">4</literal></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:43"><block_content pos:start="203:17" pos:end="203:43">

                <return pos:start="203:17" pos:end="203:43">return <expr pos:start="203:24" pos:end="203:42"><name pos:start="203:24" pos:end="203:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="211:5" pos:end="211:54"><expr pos:start="211:5" pos:end="211:53"><call pos:start="211:5" pos:end="211:53"><name pos:start="211:5" pos:end="211:13">avio_skip</name><argument_list pos:start="211:14" pos:end="211:53">(<argument pos:start="211:15" pos:end="211:19"><expr pos:start="211:15" pos:end="211:19"><name pos:start="211:15" pos:end="211:19"><name pos:start="211:15" pos:end="211:15">s</name><operator pos:start="211:16" pos:end="211:17">-&gt;</operator><name pos:start="211:18" pos:end="211:19">pb</name></name></expr></argument>, <argument pos:start="211:22" pos:end="211:52"><expr pos:start="211:22" pos:end="211:52"><name pos:start="211:22" pos:end="211:33">start_offset</name> <operator pos:start="211:35" pos:end="211:35">-</operator> <call pos:start="211:37" pos:end="211:52"><name pos:start="211:37" pos:end="211:45">avio_tell</name><argument_list pos:start="211:46" pos:end="211:52">(<argument pos:start="211:47" pos:end="211:51"><expr pos:start="211:47" pos:end="211:51"><name pos:start="211:47" pos:end="211:51"><name pos:start="211:47" pos:end="211:47">s</name><operator pos:start="211:48" pos:end="211:49">-&gt;</operator><name pos:start="211:50" pos:end="211:51">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:62"><expr pos:start="215:5" pos:end="215:61"><call pos:start="215:5" pos:end="215:61"><name pos:start="215:5" pos:end="215:23">avpriv_set_pts_info</name><argument_list pos:start="215:24" pos:end="215:61">(<argument pos:start="215:25" pos:end="215:26"><expr pos:start="215:25" pos:end="215:26"><name pos:start="215:25" pos:end="215:26">st</name></expr></argument>, <argument pos:start="215:29" pos:end="215:30"><expr pos:start="215:29" pos:end="215:30"><literal type="number" pos:start="215:29" pos:end="215:30">64</literal></expr></argument>, <argument pos:start="215:33" pos:end="215:33"><expr pos:start="215:33" pos:end="215:33"><literal type="number" pos:start="215:33" pos:end="215:33">1</literal></expr></argument>, <argument pos:start="215:36" pos:end="215:60"><expr pos:start="215:36" pos:end="215:60"><name pos:start="215:36" pos:end="215:60"><name pos:start="215:36" pos:end="215:37">st</name><operator pos:start="215:38" pos:end="215:39">-&gt;</operator><name pos:start="215:40" pos:end="215:47">codecpar</name><operator pos:start="215:48" pos:end="215:49">-&gt;</operator><name pos:start="215:50" pos:end="215:60">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="219:5" pos:end="219:13">return <expr pos:start="219:12" pos:end="219:12"><literal type="number" pos:start="219:12" pos:end="219:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
