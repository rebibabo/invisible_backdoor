<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24576.c" pos:tabs="8"><function pos:start="1:1" pos:end="563:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:34">spapr_create_fdt_skel</name><parameter_list pos:start="1:35" pos:end="15:51">(<parameter pos:start="1:36" pos:end="1:56"><decl pos:start="1:36" pos:end="1:56"><type pos:start="1:36" pos:end="1:56"><specifier pos:start="1:36" pos:end="1:40">const</specifier> <name pos:start="1:42" pos:end="1:45">char</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:56">cpu_model</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:62"><decl pos:start="3:36" pos:end="3:62"><type pos:start="3:36" pos:end="3:62"><name pos:start="3:36" pos:end="3:53">target_phys_addr_t</name></type> <name pos:start="3:55" pos:end="3:62">rma_size</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:65"><decl pos:start="5:36" pos:end="5:65"><type pos:start="5:36" pos:end="5:65"><name pos:start="5:36" pos:end="5:53">target_phys_addr_t</name></type> <name pos:start="5:55" pos:end="5:65">initrd_base</name></decl></parameter>,

                                   <parameter pos:start="7:36" pos:end="7:65"><decl pos:start="7:36" pos:end="7:65"><type pos:start="7:36" pos:end="7:65"><name pos:start="7:36" pos:end="7:53">target_phys_addr_t</name></type> <name pos:start="7:55" pos:end="7:65">initrd_size</name></decl></parameter>,

                                   <parameter pos:start="9:36" pos:end="9:65"><decl pos:start="9:36" pos:end="9:65"><type pos:start="9:36" pos:end="9:65"><name pos:start="9:36" pos:end="9:53">target_phys_addr_t</name></type> <name pos:start="9:55" pos:end="9:65">kernel_size</name></decl></parameter>,

                                   <parameter pos:start="11:36" pos:end="11:58"><decl pos:start="11:36" pos:end="11:58"><type pos:start="11:36" pos:end="11:58"><specifier pos:start="11:36" pos:end="11:40">const</specifier> <name pos:start="11:42" pos:end="11:45">char</name> <modifier pos:start="11:47" pos:end="11:47">*</modifier></type><name pos:start="11:48" pos:end="11:58">boot_device</name></decl></parameter>,

                                   <parameter pos:start="13:36" pos:end="13:61"><decl pos:start="13:36" pos:end="13:61"><type pos:start="13:36" pos:end="13:61"><specifier pos:start="13:36" pos:end="13:40">const</specifier> <name pos:start="13:42" pos:end="13:45">char</name> <modifier pos:start="13:47" pos:end="13:47">*</modifier></type><name pos:start="13:48" pos:end="13:61">kernel_cmdline</name></decl></parameter>,

                                   <parameter pos:start="15:36" pos:end="15:50"><decl pos:start="15:36" pos:end="15:50"><type pos:start="15:36" pos:end="15:50"><name pos:start="15:36" pos:end="15:39">long</name></type> <name pos:start="15:41" pos:end="15:50">hash_shift</name></decl></parameter>)</parameter_list>

<block pos:start="17:1" pos:end="563:1">{<block_content pos:start="19:5" pos:end="561:15">

    <decl_stmt pos:start="19:5" pos:end="19:14"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:8">void</name> <modifier pos:start="19:10" pos:end="19:10">*</modifier></type><name pos:start="19:11" pos:end="19:13">fdt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:15">CPUPPCState</name> <modifier pos:start="21:17" pos:end="21:17">*</modifier></type><name pos:start="21:18" pos:end="21:20">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:12"><name pos:start="23:5" pos:end="23:12">uint64_t</name></type> <name pos:start="23:14" pos:end="23:32"><name pos:start="23:14" pos:end="23:29">mem_reg_property</name><index pos:start="23:30" pos:end="23:32">[<expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:51"><decl pos:start="25:5" pos:end="25:50"><type pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:12">uint32_t</name></type> <name pos:start="25:14" pos:end="25:23">start_prop</name> <init pos:start="25:25" pos:end="25:50">= <expr pos:start="25:27" pos:end="25:50"><call pos:start="25:27" pos:end="25:50"><name pos:start="25:27" pos:end="25:37">cpu_to_be32</name><argument_list pos:start="25:38" pos:end="25:50">(<argument pos:start="25:39" pos:end="25:49"><expr pos:start="25:39" pos:end="25:49"><name pos:start="25:39" pos:end="25:49">initrd_base</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:63"><decl pos:start="27:5" pos:end="27:62"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">uint32_t</name></type> <name pos:start="27:14" pos:end="27:21">end_prop</name> <init pos:start="27:23" pos:end="27:62">= <expr pos:start="27:25" pos:end="27:62"><call pos:start="27:25" pos:end="27:62"><name pos:start="27:25" pos:end="27:35">cpu_to_be32</name><argument_list pos:start="27:36" pos:end="27:62">(<argument pos:start="27:37" pos:end="27:61"><expr pos:start="27:37" pos:end="27:61"><name pos:start="27:37" pos:end="27:47">initrd_base</name> <operator pos:start="27:49" pos:end="27:49">+</operator> <name pos:start="27:51" pos:end="27:61">initrd_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:60"><decl pos:start="29:5" pos:end="29:59"><type pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:12">uint32_t</name></type> <name pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:26">pft_size_prop</name><index pos:start="29:27" pos:end="29:28">[]</index></name> <init pos:start="29:30" pos:end="29:59">= <expr pos:start="29:32" pos:end="29:59"><block pos:start="29:32" pos:end="29:59">{<expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">0</literal></expr>, <macro pos:start="29:36" pos:end="29:58"><name pos:start="29:36" pos:end="29:46">cpu_to_be32</name><argument_list pos:start="29:47" pos:end="29:58">(<argument pos:start="29:48" pos:end="29:57">hash_shift</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="33:59"><decl pos:start="31:5" pos:end="33:58"><type pos:start="31:5" pos:end="31:8"><name pos:start="31:5" pos:end="31:8">char</name></type> <name pos:start="31:10" pos:end="31:24"><name pos:start="31:10" pos:end="31:22">hypertas_prop</name><index pos:start="31:23" pos:end="31:24">[]</index></name> <init pos:start="31:26" pos:end="33:58">= <expr pos:start="31:28" pos:end="33:58"><literal type="string" pos:start="31:28" pos:end="31:79">"hcall-pft\0hcall-term\0hcall-dabr\0hcall-interrupt"</literal>

        <literal type="string" pos:start="33:9" pos:end="33:58">"\0hcall-tce\0hcall-vio\0hcall-splpar\0hcall-bulk"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:47"><decl pos:start="35:5" pos:end="35:46"><type pos:start="35:5" pos:end="35:8"><name pos:start="35:5" pos:end="35:8">char</name></type> <name pos:start="35:10" pos:end="35:29"><name pos:start="35:10" pos:end="35:27">qemu_hypertas_prop</name><index pos:start="35:28" pos:end="35:29">[]</index></name> <init pos:start="35:31" pos:end="35:46">= <expr pos:start="35:33" pos:end="35:46"><literal type="string" pos:start="35:33" pos:end="35:46">"hcall-memop1"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:73"><decl pos:start="37:5" pos:end="37:72"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">uint32_t</name></type> <name pos:start="37:14" pos:end="37:43"><name pos:start="37:14" pos:end="37:41">interrupt_server_ranges_prop</name><index pos:start="37:42" pos:end="37:43">[]</index></name> <init pos:start="37:45" pos:end="37:72">= <expr pos:start="37:47" pos:end="37:72"><block pos:start="37:47" pos:end="37:72">{<expr pos:start="37:48" pos:end="37:48"><literal type="number" pos:start="37:48" pos:end="37:48">0</literal></expr>, <macro pos:start="37:51" pos:end="37:71"><name pos:start="37:51" pos:end="37:61">cpu_to_be32</name><argument_list pos:start="37:62" pos:end="37:71">(<argument pos:start="37:63" pos:end="37:70">smp_cpus</argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:10"><decl pos:start="39:5" pos:end="39:9"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:20"><decl pos:start="41:5" pos:end="41:19"><type pos:start="41:5" pos:end="41:10"><name pos:start="41:5" pos:end="41:8">char</name> <modifier pos:start="41:10" pos:end="41:10">*</modifier></type><name pos:start="41:11" pos:end="41:19">modelname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:35"><decl pos:start="43:5" pos:end="43:34"><type pos:start="43:5" pos:end="43:7"><name pos:start="43:5" pos:end="43:7">int</name></type> <name pos:start="43:9" pos:end="43:11">smt</name> <init pos:start="43:13" pos:end="43:34">= <expr pos:start="43:15" pos:end="43:34"><call pos:start="43:15" pos:end="43:34"><name pos:start="43:15" pos:end="43:32">kvmppc_smt_threads</name><argument_list pos:start="43:33" pos:end="43:34">()</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:59"><decl pos:start="45:5" pos:end="45:58"><type pos:start="45:5" pos:end="45:17"><name pos:start="45:5" pos:end="45:12">unsigned</name> <name pos:start="45:14" pos:end="45:17">char</name></type> <name pos:start="45:19" pos:end="45:24"><name pos:start="45:19" pos:end="45:22">vec5</name><index pos:start="45:23" pos:end="45:24">[]</index></name> <init pos:start="45:26" pos:end="45:58">= <expr pos:start="45:28" pos:end="45:58"><block pos:start="45:28" pos:end="45:58">{<expr pos:start="45:29" pos:end="45:31"><literal type="number" pos:start="45:29" pos:end="45:31">0x0</literal></expr>, <expr pos:start="45:34" pos:end="45:36"><literal type="number" pos:start="45:34" pos:end="45:36">0x0</literal></expr>, <expr pos:start="45:39" pos:end="45:41"><literal type="number" pos:start="45:39" pos:end="45:41">0x0</literal></expr>, <expr pos:start="45:44" pos:end="45:46"><literal type="number" pos:start="45:44" pos:end="45:46">0x0</literal></expr>, <expr pos:start="45:49" pos:end="45:51"><literal type="number" pos:start="45:49" pos:end="45:51">0x0</literal></expr>, <expr pos:start="45:54" pos:end="45:57"><literal type="number" pos:start="45:54" pos:end="45:57">0x80</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:64"><decl pos:start="47:5" pos:end="47:63"><type pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:12">uint32_t</name></type> <name pos:start="47:14" pos:end="47:24"><name pos:start="47:14" pos:end="47:22">refpoints</name><index pos:start="47:23" pos:end="47:24">[]</index></name> <init pos:start="47:26" pos:end="47:63">= <expr pos:start="47:28" pos:end="47:63"><block pos:start="47:28" pos:end="47:63">{<expr pos:start="47:29" pos:end="47:44"><call pos:start="47:29" pos:end="47:44"><name pos:start="47:29" pos:end="47:39">cpu_to_be32</name><argument_list pos:start="47:40" pos:end="47:44">(<argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><literal type="number" pos:start="47:41" pos:end="47:43">0x4</literal></expr></argument>)</argument_list></call></expr>, <macro pos:start="47:47" pos:end="47:62"><name pos:start="47:47" pos:end="47:57">cpu_to_be32</name><argument_list pos:start="47:58" pos:end="47:62">(<argument pos:start="47:59" pos:end="47:61"><literal type="number" pos:start="47:59" pos:end="47:61">0x4</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="53:50"><decl pos:start="49:5" pos:end="53:49"><type pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:12">uint32_t</name></type> <name pos:start="49:14" pos:end="49:28"><name pos:start="49:14" pos:end="49:26">associativity</name><index pos:start="49:27" pos:end="49:28">[]</index></name> <init pos:start="49:30" pos:end="53:49">= <expr pos:start="49:32" pos:end="53:49"><block pos:start="49:32" pos:end="53:49">{<expr pos:start="49:33" pos:end="49:48"><call pos:start="49:33" pos:end="49:48"><name pos:start="49:33" pos:end="49:43">cpu_to_be32</name><argument_list pos:start="49:44" pos:end="49:48">(<argument pos:start="49:45" pos:end="49:47"><expr pos:start="49:45" pos:end="49:47"><literal type="number" pos:start="49:45" pos:end="49:47">0x4</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="49:51" pos:end="49:66"><call pos:start="49:51" pos:end="49:66"><name pos:start="49:51" pos:end="49:61">cpu_to_be32</name><argument_list pos:start="49:62" pos:end="49:66">(<argument pos:start="49:63" pos:end="49:65"><expr pos:start="49:63" pos:end="49:65"><literal type="number" pos:start="49:63" pos:end="49:65">0x0</literal></expr></argument>)</argument_list></call></expr>,

                                <expr pos:start="51:33" pos:end="51:48"><call pos:start="51:33" pos:end="51:48"><name pos:start="51:33" pos:end="51:43">cpu_to_be32</name><argument_list pos:start="51:44" pos:end="51:48">(<argument pos:start="51:45" pos:end="51:47"><expr pos:start="51:45" pos:end="51:47"><literal type="number" pos:start="51:45" pos:end="51:47">0x0</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="51:51" pos:end="51:66"><call pos:start="51:51" pos:end="51:66"><name pos:start="51:51" pos:end="51:61">cpu_to_be32</name><argument_list pos:start="51:62" pos:end="51:66">(<argument pos:start="51:63" pos:end="51:65"><expr pos:start="51:63" pos:end="51:65"><literal type="number" pos:start="51:63" pos:end="51:65">0x0</literal></expr></argument>)</argument_list></call></expr>,

                                <macro pos:start="53:33" pos:end="53:48"><name pos:start="53:33" pos:end="53:43">cpu_to_be32</name><argument_list pos:start="53:44" pos:end="53:48">(<argument pos:start="53:45" pos:end="53:47"><literal type="number" pos:start="53:45" pos:end="53:47">0x0</literal></argument>)</argument_list></macro>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="55:5" pos:end="55:22"><decl pos:start="55:5" pos:end="55:21"><type pos:start="55:5" pos:end="55:8"><name pos:start="55:5" pos:end="55:8">char</name></type> <name pos:start="55:10" pos:end="55:21"><name pos:start="55:10" pos:end="55:17">mem_name</name><index pos:start="55:18" pos:end="55:21">[<expr pos:start="55:19" pos:end="55:20"><literal type="number" pos:start="55:19" pos:end="55:20">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="78:0"><decl pos:start="57:5" pos:end="57:33"><type pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:22">target_phys_addr_t</name></type> <name pos:start="57:24" pos:end="57:33">node0_size</name></decl>, <decl pos:start="57:36" pos:end="57:44"><type ref="prev" pos:start="57:5" pos:end="57:22"/><name pos:start="57:36" pos:end="57:44">mem_start</name></decl>;</decl_stmt>



<cpp:define pos:start="61:1" pos:end="77:15">#<cpp:directive pos:start="61:2" pos:end="61:7">define</cpp:directive> <cpp:macro pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:12">_FDT</name><parameter_list pos:start="61:13" pos:end="61:17">(<parameter pos:start="61:14" pos:end="61:16"><type pos:start="61:14" pos:end="61:16"><name pos:start="61:14" pos:end="61:16">exp</name></type></parameter>)</parameter_list></cpp:macro> \

    <cpp:value pos:start="63:5" pos:end="77:15">do { \

        int ret = (exp);                                           \

        if (ret &lt; 0) {                                             \

            fprintf(stderr, "qemu: error creating device tree: %s: %s\n", \

                    #exp, fdt_strerror(ret));                      \

            exit(1);                                               \

        }                                                          \

    } while (0)</cpp:value></cpp:define>



    <expr_stmt pos:start="81:5" pos:end="81:34"><expr pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:7">fdt</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <call pos:start="81:11" pos:end="81:33"><name pos:start="81:11" pos:end="81:19">g_malloc0</name><argument_list pos:start="81:20" pos:end="81:33">(<argument pos:start="81:21" pos:end="81:32"><expr pos:start="81:21" pos:end="81:32"><name pos:start="81:21" pos:end="81:32">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><call pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:8">_FDT</name><argument_list pos:start="83:9" pos:end="83:41">(<argument pos:start="83:10" pos:end="83:40"><expr pos:start="83:10" pos:end="83:40"><operator pos:start="83:10" pos:end="83:10">(</operator><call pos:start="83:11" pos:end="83:39"><name pos:start="83:11" pos:end="83:20">fdt_create</name><argument_list pos:start="83:21" pos:end="83:39">(<argument pos:start="83:22" pos:end="83:24"><expr pos:start="83:22" pos:end="83:24"><name pos:start="83:22" pos:end="83:24">fdt</name></expr></argument>, <argument pos:start="83:27" pos:end="83:38"><expr pos:start="83:27" pos:end="83:38"><name pos:start="83:27" pos:end="83:38">FDT_MAX_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="83:40" pos:end="83:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="91:5"><if pos:start="87:5" pos:end="91:5">if <condition pos:start="87:8" pos:end="87:20">(<expr pos:start="87:9" pos:end="87:19"><name pos:start="87:9" pos:end="87:19">kernel_size</name></expr>)</condition> <block pos:start="87:22" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:77">

        <expr_stmt pos:start="89:9" pos:end="89:77"><expr pos:start="89:9" pos:end="89:76"><call pos:start="89:9" pos:end="89:76"><name pos:start="89:9" pos:end="89:12">_FDT</name><argument_list pos:start="89:13" pos:end="89:76">(<argument pos:start="89:14" pos:end="89:75"><expr pos:start="89:14" pos:end="89:75"><operator pos:start="89:14" pos:end="89:14">(</operator><call pos:start="89:15" pos:end="89:74"><name pos:start="89:15" pos:end="89:38">fdt_add_reservemap_entry</name><argument_list pos:start="89:39" pos:end="89:74">(<argument pos:start="89:40" pos:end="89:42"><expr pos:start="89:40" pos:end="89:42"><name pos:start="89:40" pos:end="89:42">fdt</name></expr></argument>, <argument pos:start="89:45" pos:end="89:60"><expr pos:start="89:45" pos:end="89:60"><name pos:start="89:45" pos:end="89:60">KERNEL_LOAD_ADDR</name></expr></argument>, <argument pos:start="89:63" pos:end="89:73"><expr pos:start="89:63" pos:end="89:73"><name pos:start="89:63" pos:end="89:73">kernel_size</name></expr></argument>)</argument_list></call><operator pos:start="89:75" pos:end="89:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:20">(<expr pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:19">initrd_size</name></expr>)</condition> <block pos:start="93:22" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:72">

        <expr_stmt pos:start="95:9" pos:end="95:72"><expr pos:start="95:9" pos:end="95:71"><call pos:start="95:9" pos:end="95:71"><name pos:start="95:9" pos:end="95:12">_FDT</name><argument_list pos:start="95:13" pos:end="95:71">(<argument pos:start="95:14" pos:end="95:70"><expr pos:start="95:14" pos:end="95:70"><operator pos:start="95:14" pos:end="95:14">(</operator><call pos:start="95:15" pos:end="95:69"><name pos:start="95:15" pos:end="95:38">fdt_add_reservemap_entry</name><argument_list pos:start="95:39" pos:end="95:69">(<argument pos:start="95:40" pos:end="95:42"><expr pos:start="95:40" pos:end="95:42"><name pos:start="95:40" pos:end="95:42">fdt</name></expr></argument>, <argument pos:start="95:45" pos:end="95:55"><expr pos:start="95:45" pos:end="95:55"><name pos:start="95:45" pos:end="95:55">initrd_base</name></expr></argument>, <argument pos:start="95:58" pos:end="95:68"><expr pos:start="95:58" pos:end="95:68"><name pos:start="95:58" pos:end="95:68">initrd_size</name></expr></argument>)</argument_list></call><operator pos:start="95:70" pos:end="95:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:39"><expr pos:start="99:5" pos:end="99:38"><call pos:start="99:5" pos:end="99:38"><name pos:start="99:5" pos:end="99:8">_FDT</name><argument_list pos:start="99:9" pos:end="99:38">(<argument pos:start="99:10" pos:end="99:37"><expr pos:start="99:10" pos:end="99:37"><operator pos:start="99:10" pos:end="99:10">(</operator><call pos:start="99:11" pos:end="99:36"><name pos:start="99:11" pos:end="99:31">fdt_finish_reservemap</name><argument_list pos:start="99:32" pos:end="99:36">(<argument pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:35">fdt</name></expr></argument>)</argument_list></call><operator pos:start="99:37" pos:end="99:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:19">/* Root node */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:36"><expr pos:start="105:5" pos:end="105:35"><call pos:start="105:5" pos:end="105:35"><name pos:start="105:5" pos:end="105:8">_FDT</name><argument_list pos:start="105:9" pos:end="105:35">(<argument pos:start="105:10" pos:end="105:34"><expr pos:start="105:10" pos:end="105:34"><operator pos:start="105:10" pos:end="105:10">(</operator><call pos:start="105:11" pos:end="105:33"><name pos:start="105:11" pos:end="105:24">fdt_begin_node</name><argument_list pos:start="105:25" pos:end="105:33">(<argument pos:start="105:26" pos:end="105:28"><expr pos:start="105:26" pos:end="105:28"><name pos:start="105:26" pos:end="105:28">fdt</name></expr></argument>, <argument pos:start="105:31" pos:end="105:32"><expr pos:start="105:31" pos:end="105:32"><literal type="string" pos:start="105:31" pos:end="105:32">""</literal></expr></argument>)</argument_list></call><operator pos:start="105:34" pos:end="105:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:60"><expr pos:start="107:5" pos:end="107:59"><call pos:start="107:5" pos:end="107:59"><name pos:start="107:5" pos:end="107:8">_FDT</name><argument_list pos:start="107:9" pos:end="107:59">(<argument pos:start="107:10" pos:end="107:58"><expr pos:start="107:10" pos:end="107:58"><operator pos:start="107:10" pos:end="107:10">(</operator><call pos:start="107:11" pos:end="107:57"><name pos:start="107:11" pos:end="107:29">fdt_property_string</name><argument_list pos:start="107:30" pos:end="107:57">(<argument pos:start="107:31" pos:end="107:33"><expr pos:start="107:31" pos:end="107:33"><name pos:start="107:31" pos:end="107:33">fdt</name></expr></argument>, <argument pos:start="107:36" pos:end="107:48"><expr pos:start="107:36" pos:end="107:48"><literal type="string" pos:start="107:36" pos:end="107:48">"device_type"</literal></expr></argument>, <argument pos:start="107:51" pos:end="107:56"><expr pos:start="107:51" pos:end="107:56"><literal type="string" pos:start="107:51" pos:end="107:56">"chrp"</literal></expr></argument>)</argument_list></call><operator pos:start="107:58" pos:end="107:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:80"><expr pos:start="109:5" pos:end="109:79"><call pos:start="109:5" pos:end="109:79"><name pos:start="109:5" pos:end="109:8">_FDT</name><argument_list pos:start="109:9" pos:end="109:79">(<argument pos:start="109:10" pos:end="109:78"><expr pos:start="109:10" pos:end="109:78"><operator pos:start="109:10" pos:end="109:10">(</operator><call pos:start="109:11" pos:end="109:77"><name pos:start="109:11" pos:end="109:29">fdt_property_string</name><argument_list pos:start="109:30" pos:end="109:77">(<argument pos:start="109:31" pos:end="109:33"><expr pos:start="109:31" pos:end="109:33"><name pos:start="109:31" pos:end="109:33">fdt</name></expr></argument>, <argument pos:start="109:36" pos:end="109:42"><expr pos:start="109:36" pos:end="109:42"><literal type="string" pos:start="109:36" pos:end="109:42">"model"</literal></expr></argument>, <argument pos:start="109:45" pos:end="109:76"><expr pos:start="109:45" pos:end="109:76"><literal type="string" pos:start="109:45" pos:end="109:76">"IBM pSeries (emulated by qemu)"</literal></expr></argument>)</argument_list></call><operator pos:start="109:78" pos:end="109:78">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="113:5" pos:end="113:58"><expr pos:start="113:5" pos:end="113:57"><call pos:start="113:5" pos:end="113:57"><name pos:start="113:5" pos:end="113:8">_FDT</name><argument_list pos:start="113:9" pos:end="113:57">(<argument pos:start="113:10" pos:end="113:56"><expr pos:start="113:10" pos:end="113:56"><operator pos:start="113:10" pos:end="113:10">(</operator><call pos:start="113:11" pos:end="113:55"><name pos:start="113:11" pos:end="113:27">fdt_property_cell</name><argument_list pos:start="113:28" pos:end="113:55">(<argument pos:start="113:29" pos:end="113:31"><expr pos:start="113:29" pos:end="113:31"><name pos:start="113:29" pos:end="113:31">fdt</name></expr></argument>, <argument pos:start="113:34" pos:end="113:49"><expr pos:start="113:34" pos:end="113:49"><literal type="string" pos:start="113:34" pos:end="113:49">"#address-cells"</literal></expr></argument>, <argument pos:start="113:52" pos:end="113:54"><expr pos:start="113:52" pos:end="113:54"><literal type="number" pos:start="113:52" pos:end="113:54">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="113:56" pos:end="113:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:55"><expr pos:start="115:5" pos:end="115:54"><call pos:start="115:5" pos:end="115:54"><name pos:start="115:5" pos:end="115:8">_FDT</name><argument_list pos:start="115:9" pos:end="115:54">(<argument pos:start="115:10" pos:end="115:53"><expr pos:start="115:10" pos:end="115:53"><operator pos:start="115:10" pos:end="115:10">(</operator><call pos:start="115:11" pos:end="115:52"><name pos:start="115:11" pos:end="115:27">fdt_property_cell</name><argument_list pos:start="115:28" pos:end="115:52">(<argument pos:start="115:29" pos:end="115:31"><expr pos:start="115:29" pos:end="115:31"><name pos:start="115:29" pos:end="115:31">fdt</name></expr></argument>, <argument pos:start="115:34" pos:end="115:46"><expr pos:start="115:34" pos:end="115:46"><literal type="string" pos:start="115:34" pos:end="115:46">"#size-cells"</literal></expr></argument>, <argument pos:start="115:49" pos:end="115:51"><expr pos:start="115:49" pos:end="115:51"><literal type="number" pos:start="115:49" pos:end="115:51">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="115:53" pos:end="115:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:17">/* /chosen */</comment>

    <expr_stmt pos:start="121:5" pos:end="121:42"><expr pos:start="121:5" pos:end="121:41"><call pos:start="121:5" pos:end="121:41"><name pos:start="121:5" pos:end="121:8">_FDT</name><argument_list pos:start="121:9" pos:end="121:41">(<argument pos:start="121:10" pos:end="121:40"><expr pos:start="121:10" pos:end="121:40"><operator pos:start="121:10" pos:end="121:10">(</operator><call pos:start="121:11" pos:end="121:39"><name pos:start="121:11" pos:end="121:24">fdt_begin_node</name><argument_list pos:start="121:25" pos:end="121:39">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">fdt</name></expr></argument>, <argument pos:start="121:31" pos:end="121:38"><expr pos:start="121:31" pos:end="121:38"><literal type="string" pos:start="121:31" pos:end="121:38">"chosen"</literal></expr></argument>)</argument_list></call><operator pos:start="121:40" pos:end="121:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="125:5" pos:end="125:28">/* Set Form1_affinity */</comment>

    <expr_stmt pos:start="127:5" pos:end="127:76"><expr pos:start="127:5" pos:end="127:75"><call pos:start="127:5" pos:end="127:75"><name pos:start="127:5" pos:end="127:8">_FDT</name><argument_list pos:start="127:9" pos:end="127:75">(<argument pos:start="127:10" pos:end="127:74"><expr pos:start="127:10" pos:end="127:74"><operator pos:start="127:10" pos:end="127:10">(</operator><call pos:start="127:11" pos:end="127:73"><name pos:start="127:11" pos:end="127:22">fdt_property</name><argument_list pos:start="127:23" pos:end="127:73">(<argument pos:start="127:24" pos:end="127:26"><expr pos:start="127:24" pos:end="127:26"><name pos:start="127:24" pos:end="127:26">fdt</name></expr></argument>, <argument pos:start="127:29" pos:end="127:52"><expr pos:start="127:29" pos:end="127:52"><literal type="string" pos:start="127:29" pos:end="127:52">"ibm,architecture-vec-5"</literal></expr></argument>, <argument pos:start="127:55" pos:end="127:58"><expr pos:start="127:55" pos:end="127:58"><name pos:start="127:55" pos:end="127:58">vec5</name></expr></argument>, <argument pos:start="127:61" pos:end="127:72"><expr pos:start="127:61" pos:end="127:72"><sizeof pos:start="127:61" pos:end="127:72">sizeof<argument_list pos:start="127:67" pos:end="127:72">(<argument pos:start="127:68" pos:end="127:71"><expr pos:start="127:68" pos:end="127:71"><name pos:start="127:68" pos:end="127:71">vec5</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="127:74" pos:end="127:74">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:65"><expr pos:start="131:5" pos:end="131:64"><call pos:start="131:5" pos:end="131:64"><name pos:start="131:5" pos:end="131:8">_FDT</name><argument_list pos:start="131:9" pos:end="131:64">(<argument pos:start="131:10" pos:end="131:63"><expr pos:start="131:10" pos:end="131:63"><operator pos:start="131:10" pos:end="131:10">(</operator><call pos:start="131:11" pos:end="131:62"><name pos:start="131:11" pos:end="131:29">fdt_property_string</name><argument_list pos:start="131:30" pos:end="131:62">(<argument pos:start="131:31" pos:end="131:33"><expr pos:start="131:31" pos:end="131:33"><name pos:start="131:31" pos:end="131:33">fdt</name></expr></argument>, <argument pos:start="131:36" pos:end="131:45"><expr pos:start="131:36" pos:end="131:45"><literal type="string" pos:start="131:36" pos:end="131:45">"bootargs"</literal></expr></argument>, <argument pos:start="131:48" pos:end="131:61"><expr pos:start="131:48" pos:end="131:61"><name pos:start="131:48" pos:end="131:61">kernel_cmdline</name></expr></argument>)</argument_list></call><operator pos:start="131:63" pos:end="131:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="135:58"><expr pos:start="133:5" pos:end="135:57"><call pos:start="133:5" pos:end="135:57"><name pos:start="133:5" pos:end="133:8">_FDT</name><argument_list pos:start="133:9" pos:end="135:57">(<argument pos:start="133:10" pos:end="135:56"><expr pos:start="133:10" pos:end="135:56"><operator pos:start="133:10" pos:end="133:10">(</operator><call pos:start="133:11" pos:end="135:55"><name pos:start="133:11" pos:end="133:22">fdt_property</name><argument_list pos:start="133:23" pos:end="135:55">(<argument pos:start="133:24" pos:end="133:26"><expr pos:start="133:24" pos:end="133:26"><name pos:start="133:24" pos:end="133:26">fdt</name></expr></argument>, <argument pos:start="133:29" pos:end="133:48"><expr pos:start="133:29" pos:end="133:48"><literal type="string" pos:start="133:29" pos:end="133:48">"linux,initrd-start"</literal></expr></argument>,

                       <argument pos:start="135:24" pos:end="135:34"><expr pos:start="135:24" pos:end="135:34"><operator pos:start="135:24" pos:end="135:24">&amp;</operator><name pos:start="135:25" pos:end="135:34">start_prop</name></expr></argument>, <argument pos:start="135:37" pos:end="135:54"><expr pos:start="135:37" pos:end="135:54"><sizeof pos:start="135:37" pos:end="135:54">sizeof<argument_list pos:start="135:43" pos:end="135:54">(<argument pos:start="135:44" pos:end="135:53"><expr pos:start="135:44" pos:end="135:53"><name pos:start="135:44" pos:end="135:53">start_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="135:56" pos:end="135:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="139:54"><expr pos:start="137:5" pos:end="139:53"><call pos:start="137:5" pos:end="139:53"><name pos:start="137:5" pos:end="137:8">_FDT</name><argument_list pos:start="137:9" pos:end="139:53">(<argument pos:start="137:10" pos:end="139:52"><expr pos:start="137:10" pos:end="139:52"><operator pos:start="137:10" pos:end="137:10">(</operator><call pos:start="137:11" pos:end="139:51"><name pos:start="137:11" pos:end="137:22">fdt_property</name><argument_list pos:start="137:23" pos:end="139:51">(<argument pos:start="137:24" pos:end="137:26"><expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:26">fdt</name></expr></argument>, <argument pos:start="137:29" pos:end="137:46"><expr pos:start="137:29" pos:end="137:46"><literal type="string" pos:start="137:29" pos:end="137:46">"linux,initrd-end"</literal></expr></argument>,

                       <argument pos:start="139:24" pos:end="139:32"><expr pos:start="139:24" pos:end="139:32"><operator pos:start="139:24" pos:end="139:24">&amp;</operator><name pos:start="139:25" pos:end="139:32">end_prop</name></expr></argument>, <argument pos:start="139:35" pos:end="139:50"><expr pos:start="139:35" pos:end="139:50"><sizeof pos:start="139:35" pos:end="139:50">sizeof<argument_list pos:start="139:41" pos:end="139:50">(<argument pos:start="139:42" pos:end="139:49"><expr pos:start="139:42" pos:end="139:49"><name pos:start="139:42" pos:end="139:49">end_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="139:52" pos:end="139:52">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="141:5" pos:end="151:5"><if pos:start="141:5" pos:end="151:5">if <condition pos:start="141:8" pos:end="141:20">(<expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:19">kernel_size</name></expr>)</condition> <block pos:start="141:22" pos:end="151:5">{<block_content pos:start="143:9" pos:end="149:77">

        <decl_stmt pos:start="143:9" pos:end="145:57"><decl pos:start="143:9" pos:end="145:56"><type pos:start="143:9" pos:end="143:16"><name pos:start="143:9" pos:end="143:16">uint64_t</name></type> <name pos:start="143:18" pos:end="143:25"><name pos:start="143:18" pos:end="143:22">kprop</name><index pos:start="143:23" pos:end="143:25">[<expr pos:start="143:24" pos:end="143:24"><literal type="number" pos:start="143:24" pos:end="143:24">2</literal></expr>]</index></name> <init pos:start="143:27" pos:end="145:56">= <expr pos:start="143:29" pos:end="145:56"><block pos:start="143:29" pos:end="145:56">{ <expr pos:start="143:31" pos:end="143:59"><call pos:start="143:31" pos:end="143:59"><name pos:start="143:31" pos:end="143:41">cpu_to_be64</name><argument_list pos:start="143:42" pos:end="143:59">(<argument pos:start="143:43" pos:end="143:58"><expr pos:start="143:43" pos:end="143:58"><name pos:start="143:43" pos:end="143:58">KERNEL_LOAD_ADDR</name></expr></argument>)</argument_list></call></expr>,

                              <macro pos:start="145:31" pos:end="145:54"><name pos:start="145:31" pos:end="145:41">cpu_to_be64</name><argument_list pos:start="145:42" pos:end="145:54">(<argument pos:start="145:43" pos:end="145:53">kernel_size</argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="149:9" pos:end="149:77"><expr pos:start="149:9" pos:end="149:76"><call pos:start="149:9" pos:end="149:76"><name pos:start="149:9" pos:end="149:12">_FDT</name><argument_list pos:start="149:13" pos:end="149:76">(<argument pos:start="149:14" pos:end="149:75"><expr pos:start="149:14" pos:end="149:75"><operator pos:start="149:14" pos:end="149:14">(</operator><call pos:start="149:15" pos:end="149:74"><name pos:start="149:15" pos:end="149:26">fdt_property</name><argument_list pos:start="149:27" pos:end="149:74">(<argument pos:start="149:28" pos:end="149:30"><expr pos:start="149:28" pos:end="149:30"><name pos:start="149:28" pos:end="149:30">fdt</name></expr></argument>, <argument pos:start="149:33" pos:end="149:50"><expr pos:start="149:33" pos:end="149:50"><literal type="string" pos:start="149:33" pos:end="149:50">"qemu,boot-kernel"</literal></expr></argument>, <argument pos:start="149:53" pos:end="149:58"><expr pos:start="149:53" pos:end="149:58"><operator pos:start="149:53" pos:end="149:53">&amp;</operator><name pos:start="149:54" pos:end="149:58">kprop</name></expr></argument>, <argument pos:start="149:61" pos:end="149:73"><expr pos:start="149:61" pos:end="149:73"><sizeof pos:start="149:61" pos:end="149:73">sizeof<argument_list pos:start="149:67" pos:end="149:73">(<argument pos:start="149:68" pos:end="149:72"><expr pos:start="149:68" pos:end="149:72"><name pos:start="149:68" pos:end="149:72">kprop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="149:75" pos:end="149:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:70"><expr pos:start="153:5" pos:end="153:69"><call pos:start="153:5" pos:end="153:69"><name pos:start="153:5" pos:end="153:8">_FDT</name><argument_list pos:start="153:9" pos:end="153:69">(<argument pos:start="153:10" pos:end="153:68"><expr pos:start="153:10" pos:end="153:68"><operator pos:start="153:10" pos:end="153:10">(</operator><call pos:start="153:11" pos:end="153:67"><name pos:start="153:11" pos:end="153:29">fdt_property_string</name><argument_list pos:start="153:30" pos:end="153:67">(<argument pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><name pos:start="153:31" pos:end="153:33">fdt</name></expr></argument>, <argument pos:start="153:36" pos:end="153:53"><expr pos:start="153:36" pos:end="153:53"><literal type="string" pos:start="153:36" pos:end="153:53">"qemu,boot-device"</literal></expr></argument>, <argument pos:start="153:56" pos:end="153:66"><expr pos:start="153:56" pos:end="153:66"><name pos:start="153:56" pos:end="153:66">boot_device</name></expr></argument>)</argument_list></call><operator pos:start="153:68" pos:end="153:68">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:72"><expr pos:start="155:5" pos:end="155:71"><call pos:start="155:5" pos:end="155:71"><name pos:start="155:5" pos:end="155:8">_FDT</name><argument_list pos:start="155:9" pos:end="155:71">(<argument pos:start="155:10" pos:end="155:70"><expr pos:start="155:10" pos:end="155:70"><operator pos:start="155:10" pos:end="155:10">(</operator><call pos:start="155:11" pos:end="155:69"><name pos:start="155:11" pos:end="155:27">fdt_property_cell</name><argument_list pos:start="155:28" pos:end="155:69">(<argument pos:start="155:29" pos:end="155:31"><expr pos:start="155:29" pos:end="155:31"><name pos:start="155:29" pos:end="155:31">fdt</name></expr></argument>, <argument pos:start="155:34" pos:end="155:53"><expr pos:start="155:34" pos:end="155:53"><literal type="string" pos:start="155:34" pos:end="155:53">"qemu,graphic-width"</literal></expr></argument>, <argument pos:start="155:56" pos:end="155:68"><expr pos:start="155:56" pos:end="155:68"><name pos:start="155:56" pos:end="155:68">graphic_width</name></expr></argument>)</argument_list></call><operator pos:start="155:70" pos:end="155:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:74"><expr pos:start="157:5" pos:end="157:73"><call pos:start="157:5" pos:end="157:73"><name pos:start="157:5" pos:end="157:8">_FDT</name><argument_list pos:start="157:9" pos:end="157:73">(<argument pos:start="157:10" pos:end="157:72"><expr pos:start="157:10" pos:end="157:72"><operator pos:start="157:10" pos:end="157:10">(</operator><call pos:start="157:11" pos:end="157:71"><name pos:start="157:11" pos:end="157:27">fdt_property_cell</name><argument_list pos:start="157:28" pos:end="157:71">(<argument pos:start="157:29" pos:end="157:31"><expr pos:start="157:29" pos:end="157:31"><name pos:start="157:29" pos:end="157:31">fdt</name></expr></argument>, <argument pos:start="157:34" pos:end="157:54"><expr pos:start="157:34" pos:end="157:54"><literal type="string" pos:start="157:34" pos:end="157:54">"qemu,graphic-height"</literal></expr></argument>, <argument pos:start="157:57" pos:end="157:70"><expr pos:start="157:57" pos:end="157:70"><name pos:start="157:57" pos:end="157:70">graphic_height</name></expr></argument>)</argument_list></call><operator pos:start="157:72" pos:end="157:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:72"><expr pos:start="159:5" pos:end="159:71"><call pos:start="159:5" pos:end="159:71"><name pos:start="159:5" pos:end="159:8">_FDT</name><argument_list pos:start="159:9" pos:end="159:71">(<argument pos:start="159:10" pos:end="159:70"><expr pos:start="159:10" pos:end="159:70"><operator pos:start="159:10" pos:end="159:10">(</operator><call pos:start="159:11" pos:end="159:69"><name pos:start="159:11" pos:end="159:27">fdt_property_cell</name><argument_list pos:start="159:28" pos:end="159:69">(<argument pos:start="159:29" pos:end="159:31"><expr pos:start="159:29" pos:end="159:31"><name pos:start="159:29" pos:end="159:31">fdt</name></expr></argument>, <argument pos:start="159:34" pos:end="159:53"><expr pos:start="159:34" pos:end="159:53"><literal type="string" pos:start="159:34" pos:end="159:53">"qemu,graphic-depth"</literal></expr></argument>, <argument pos:start="159:56" pos:end="159:68"><expr pos:start="159:56" pos:end="159:68"><name pos:start="159:56" pos:end="159:68">graphic_depth</name></expr></argument>)</argument_list></call><operator pos:start="159:70" pos:end="159:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="163:30"><expr pos:start="163:5" pos:end="163:29"><call pos:start="163:5" pos:end="163:29"><name pos:start="163:5" pos:end="163:8">_FDT</name><argument_list pos:start="163:9" pos:end="163:29">(<argument pos:start="163:10" pos:end="163:28"><expr pos:start="163:10" pos:end="163:28"><operator pos:start="163:10" pos:end="163:10">(</operator><call pos:start="163:11" pos:end="163:27"><name pos:start="163:11" pos:end="163:22">fdt_end_node</name><argument_list pos:start="163:23" pos:end="163:27">(<argument pos:start="163:24" pos:end="163:26"><expr pos:start="163:24" pos:end="163:26"><name pos:start="163:24" pos:end="163:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="163:28" pos:end="163:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="167:5" pos:end="167:24">/* memory node(s) */</comment>

    <expr_stmt pos:start="169:5" pos:end="169:62"><expr pos:start="169:5" pos:end="169:61"><name pos:start="169:5" pos:end="169:14">node0_size</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <ternary pos:start="169:18" pos:end="169:61"><condition pos:start="169:18" pos:end="169:38"><expr pos:start="169:18" pos:end="169:36"><operator pos:start="169:18" pos:end="169:18">(</operator><name pos:start="169:19" pos:end="169:31">nb_numa_nodes</name> <operator pos:start="169:33" pos:end="169:33">&gt;</operator> <literal type="number" pos:start="169:35" pos:end="169:35">1</literal><operator pos:start="169:36" pos:end="169:36">)</operator></expr> ?</condition><then pos:start="169:40" pos:end="169:50"> <expr pos:start="169:40" pos:end="169:50"><name pos:start="169:40" pos:end="169:50"><name pos:start="169:40" pos:end="169:47">node_mem</name><index pos:start="169:48" pos:end="169:50">[<expr pos:start="169:49" pos:end="169:49"><literal type="number" pos:start="169:49" pos:end="169:49">0</literal></expr>]</index></name></expr> </then><else pos:start="169:52" pos:end="169:61">: <expr pos:start="169:54" pos:end="169:61"><name pos:start="169:54" pos:end="169:61">ram_size</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="171:5" pos:end="175:5"><if pos:start="171:5" pos:end="175:5">if <condition pos:start="171:8" pos:end="171:30">(<expr pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:16">rma_size</name> <operator pos:start="171:18" pos:end="171:18">&gt;</operator> <name pos:start="171:20" pos:end="171:29">node0_size</name></expr>)</condition> <block pos:start="171:32" pos:end="175:5">{<block_content pos:start="173:9" pos:end="173:30">

        <expr_stmt pos:start="173:9" pos:end="173:30"><expr pos:start="173:9" pos:end="173:29"><name pos:start="173:9" pos:end="173:16">rma_size</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <name pos:start="173:20" pos:end="173:29">node0_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="179:5" pos:end="179:13">/* RMA */</comment>

    <expr_stmt pos:start="181:5" pos:end="181:28"><expr pos:start="181:5" pos:end="181:27"><name pos:start="181:5" pos:end="181:23"><name pos:start="181:5" pos:end="181:20">mem_reg_property</name><index pos:start="181:21" pos:end="181:23">[<expr pos:start="181:22" pos:end="181:22"><literal type="number" pos:start="181:22" pos:end="181:22">0</literal></expr>]</index></name> <operator pos:start="181:25" pos:end="181:25">=</operator> <literal type="number" pos:start="181:27" pos:end="181:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:48"><expr pos:start="183:5" pos:end="183:47"><name pos:start="183:5" pos:end="183:23"><name pos:start="183:5" pos:end="183:20">mem_reg_property</name><index pos:start="183:21" pos:end="183:23">[<expr pos:start="183:22" pos:end="183:22"><literal type="number" pos:start="183:22" pos:end="183:22">1</literal></expr>]</index></name> <operator pos:start="183:25" pos:end="183:25">=</operator> <call pos:start="183:27" pos:end="183:47"><name pos:start="183:27" pos:end="183:37">cpu_to_be64</name><argument_list pos:start="183:38" pos:end="183:47">(<argument pos:start="183:39" pos:end="183:46"><expr pos:start="183:39" pos:end="183:46"><name pos:start="183:39" pos:end="183:46">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:44"><expr pos:start="185:5" pos:end="185:43"><call pos:start="185:5" pos:end="185:43"><name pos:start="185:5" pos:end="185:8">_FDT</name><argument_list pos:start="185:9" pos:end="185:43">(<argument pos:start="185:10" pos:end="185:42"><expr pos:start="185:10" pos:end="185:42"><operator pos:start="185:10" pos:end="185:10">(</operator><call pos:start="185:11" pos:end="185:41"><name pos:start="185:11" pos:end="185:24">fdt_begin_node</name><argument_list pos:start="185:25" pos:end="185:41">(<argument pos:start="185:26" pos:end="185:28"><expr pos:start="185:26" pos:end="185:28"><name pos:start="185:26" pos:end="185:28">fdt</name></expr></argument>, <argument pos:start="185:31" pos:end="185:40"><expr pos:start="185:31" pos:end="185:40"><literal type="string" pos:start="185:31" pos:end="185:40">"memory@0"</literal></expr></argument>)</argument_list></call><operator pos:start="185:42" pos:end="185:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:62"><expr pos:start="187:5" pos:end="187:61"><call pos:start="187:5" pos:end="187:61"><name pos:start="187:5" pos:end="187:8">_FDT</name><argument_list pos:start="187:9" pos:end="187:61">(<argument pos:start="187:10" pos:end="187:60"><expr pos:start="187:10" pos:end="187:60"><operator pos:start="187:10" pos:end="187:10">(</operator><call pos:start="187:11" pos:end="187:59"><name pos:start="187:11" pos:end="187:29">fdt_property_string</name><argument_list pos:start="187:30" pos:end="187:59">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">fdt</name></expr></argument>, <argument pos:start="187:36" pos:end="187:48"><expr pos:start="187:36" pos:end="187:48"><literal type="string" pos:start="187:36" pos:end="187:48">"device_type"</literal></expr></argument>, <argument pos:start="187:51" pos:end="187:58"><expr pos:start="187:51" pos:end="187:58"><literal type="string" pos:start="187:51" pos:end="187:58">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="187:60" pos:end="187:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="189:5" pos:end="191:36"><expr pos:start="189:5" pos:end="191:35"><call pos:start="189:5" pos:end="191:35"><name pos:start="189:5" pos:end="189:8">_FDT</name><argument_list pos:start="189:9" pos:end="191:35">(<argument pos:start="189:10" pos:end="191:34"><expr pos:start="189:10" pos:end="191:34"><operator pos:start="189:10" pos:end="189:10">(</operator><call pos:start="189:11" pos:end="191:33"><name pos:start="189:11" pos:end="189:22">fdt_property</name><argument_list pos:start="189:23" pos:end="191:33">(<argument pos:start="189:24" pos:end="189:26"><expr pos:start="189:24" pos:end="189:26"><name pos:start="189:24" pos:end="189:26">fdt</name></expr></argument>, <argument pos:start="189:29" pos:end="189:33"><expr pos:start="189:29" pos:end="189:33"><literal type="string" pos:start="189:29" pos:end="189:33">"reg"</literal></expr></argument>, <argument pos:start="189:36" pos:end="189:51"><expr pos:start="189:36" pos:end="189:51"><name pos:start="189:36" pos:end="189:51">mem_reg_property</name></expr></argument>,

        <argument pos:start="191:9" pos:end="191:32"><expr pos:start="191:9" pos:end="191:32"><sizeof pos:start="191:9" pos:end="191:32">sizeof<argument_list pos:start="191:15" pos:end="191:32">(<argument pos:start="191:16" pos:end="191:31"><expr pos:start="191:16" pos:end="191:31"><name pos:start="191:16" pos:end="191:31">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="191:34" pos:end="191:34">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="195:33"><expr pos:start="193:5" pos:end="195:32"><call pos:start="193:5" pos:end="195:32"><name pos:start="193:5" pos:end="193:8">_FDT</name><argument_list pos:start="193:9" pos:end="195:32">(<argument pos:start="193:10" pos:end="195:31"><expr pos:start="193:10" pos:end="195:31"><operator pos:start="193:10" pos:end="193:10">(</operator><call pos:start="193:11" pos:end="195:30"><name pos:start="193:11" pos:end="193:22">fdt_property</name><argument_list pos:start="193:23" pos:end="195:30">(<argument pos:start="193:24" pos:end="193:26"><expr pos:start="193:24" pos:end="193:26"><name pos:start="193:24" pos:end="193:26">fdt</name></expr></argument>, <argument pos:start="193:29" pos:end="193:47"><expr pos:start="193:29" pos:end="193:47"><literal type="string" pos:start="193:29" pos:end="193:47">"ibm,associativity"</literal></expr></argument>, <argument pos:start="193:50" pos:end="193:62"><expr pos:start="193:50" pos:end="193:62"><name pos:start="193:50" pos:end="193:62">associativity</name></expr></argument>,

        <argument pos:start="195:9" pos:end="195:29"><expr pos:start="195:9" pos:end="195:29"><sizeof pos:start="195:9" pos:end="195:29">sizeof<argument_list pos:start="195:15" pos:end="195:29">(<argument pos:start="195:16" pos:end="195:28"><expr pos:start="195:16" pos:end="195:28"><name pos:start="195:16" pos:end="195:28">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="195:31" pos:end="195:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:30"><expr pos:start="197:5" pos:end="197:29"><call pos:start="197:5" pos:end="197:29"><name pos:start="197:5" pos:end="197:8">_FDT</name><argument_list pos:start="197:9" pos:end="197:29">(<argument pos:start="197:10" pos:end="197:28"><expr pos:start="197:10" pos:end="197:28"><operator pos:start="197:10" pos:end="197:10">(</operator><call pos:start="197:11" pos:end="197:27"><name pos:start="197:11" pos:end="197:22">fdt_end_node</name><argument_list pos:start="197:23" pos:end="197:27">(<argument pos:start="197:24" pos:end="197:26"><expr pos:start="197:24" pos:end="197:26"><name pos:start="197:24" pos:end="197:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="197:28" pos:end="197:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="201:5" pos:end="201:21">/* RAM: Node 0 */</comment>

    <if_stmt pos:start="203:5" pos:end="227:5"><if pos:start="203:5" pos:end="227:5">if <condition pos:start="203:8" pos:end="203:30">(<expr pos:start="203:9" pos:end="203:29"><name pos:start="203:9" pos:end="203:18">node0_size</name> <operator pos:start="203:20" pos:end="203:20">&gt;</operator> <name pos:start="203:22" pos:end="203:29">rma_size</name></expr>)</condition> <block pos:start="203:32" pos:end="227:5">{<block_content pos:start="205:9" pos:end="225:34">

        <expr_stmt pos:start="205:9" pos:end="205:52"><expr pos:start="205:9" pos:end="205:51"><name pos:start="205:9" pos:end="205:27"><name pos:start="205:9" pos:end="205:24">mem_reg_property</name><index pos:start="205:25" pos:end="205:27">[<expr pos:start="205:26" pos:end="205:26"><literal type="number" pos:start="205:26" pos:end="205:26">0</literal></expr>]</index></name> <operator pos:start="205:29" pos:end="205:29">=</operator> <call pos:start="205:31" pos:end="205:51"><name pos:start="205:31" pos:end="205:41">cpu_to_be64</name><argument_list pos:start="205:42" pos:end="205:51">(<argument pos:start="205:43" pos:end="205:50"><expr pos:start="205:43" pos:end="205:50"><name pos:start="205:43" pos:end="205:50">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:65"><expr pos:start="207:9" pos:end="207:64"><name pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:24">mem_reg_property</name><index pos:start="207:25" pos:end="207:27">[<expr pos:start="207:26" pos:end="207:26"><literal type="number" pos:start="207:26" pos:end="207:26">1</literal></expr>]</index></name> <operator pos:start="207:29" pos:end="207:29">=</operator> <call pos:start="207:31" pos:end="207:64"><name pos:start="207:31" pos:end="207:41">cpu_to_be64</name><argument_list pos:start="207:42" pos:end="207:64">(<argument pos:start="207:43" pos:end="207:63"><expr pos:start="207:43" pos:end="207:63"><name pos:start="207:43" pos:end="207:52">node0_size</name> <operator pos:start="207:54" pos:end="207:54">-</operator> <name pos:start="207:56" pos:end="207:63">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="211:9" pos:end="211:61"><expr pos:start="211:9" pos:end="211:60"><call pos:start="211:9" pos:end="211:60"><name pos:start="211:9" pos:end="211:15">sprintf</name><argument_list pos:start="211:16" pos:end="211:60">(<argument pos:start="211:17" pos:end="211:24"><expr pos:start="211:17" pos:end="211:24"><name pos:start="211:17" pos:end="211:24">mem_name</name></expr></argument>, <argument pos:start="211:27" pos:end="211:49"><expr pos:start="211:27" pos:end="211:49"><literal type="string" pos:start="211:27" pos:end="211:35">"memory@"</literal> <name pos:start="211:37" pos:end="211:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="211:52" pos:end="211:59"><expr pos:start="211:52" pos:end="211:59"><name pos:start="211:52" pos:end="211:59">rma_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:46"><expr pos:start="213:9" pos:end="213:45"><call pos:start="213:9" pos:end="213:45"><name pos:start="213:9" pos:end="213:12">_FDT</name><argument_list pos:start="213:13" pos:end="213:45">(<argument pos:start="213:14" pos:end="213:44"><expr pos:start="213:14" pos:end="213:44"><operator pos:start="213:14" pos:end="213:14">(</operator><call pos:start="213:15" pos:end="213:43"><name pos:start="213:15" pos:end="213:28">fdt_begin_node</name><argument_list pos:start="213:29" pos:end="213:43">(<argument pos:start="213:30" pos:end="213:32"><expr pos:start="213:30" pos:end="213:32"><name pos:start="213:30" pos:end="213:32">fdt</name></expr></argument>, <argument pos:start="213:35" pos:end="213:42"><expr pos:start="213:35" pos:end="213:42"><name pos:start="213:35" pos:end="213:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="213:44" pos:end="213:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:66"><expr pos:start="215:9" pos:end="215:65"><call pos:start="215:9" pos:end="215:65"><name pos:start="215:9" pos:end="215:12">_FDT</name><argument_list pos:start="215:13" pos:end="215:65">(<argument pos:start="215:14" pos:end="215:64"><expr pos:start="215:14" pos:end="215:64"><operator pos:start="215:14" pos:end="215:14">(</operator><call pos:start="215:15" pos:end="215:63"><name pos:start="215:15" pos:end="215:33">fdt_property_string</name><argument_list pos:start="215:34" pos:end="215:63">(<argument pos:start="215:35" pos:end="215:37"><expr pos:start="215:35" pos:end="215:37"><name pos:start="215:35" pos:end="215:37">fdt</name></expr></argument>, <argument pos:start="215:40" pos:end="215:52"><expr pos:start="215:40" pos:end="215:52"><literal type="string" pos:start="215:40" pos:end="215:52">"device_type"</literal></expr></argument>, <argument pos:start="215:55" pos:end="215:62"><expr pos:start="215:55" pos:end="215:62"><literal type="string" pos:start="215:55" pos:end="215:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="215:64" pos:end="215:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="219:55"><expr pos:start="217:9" pos:end="219:54"><call pos:start="217:9" pos:end="219:54"><name pos:start="217:9" pos:end="217:12">_FDT</name><argument_list pos:start="217:13" pos:end="219:54">(<argument pos:start="217:14" pos:end="219:53"><expr pos:start="217:14" pos:end="219:53"><operator pos:start="217:14" pos:end="217:14">(</operator><call pos:start="217:15" pos:end="219:52"><name pos:start="217:15" pos:end="217:26">fdt_property</name><argument_list pos:start="217:27" pos:end="219:52">(<argument pos:start="217:28" pos:end="217:30"><expr pos:start="217:28" pos:end="217:30"><name pos:start="217:28" pos:end="217:30">fdt</name></expr></argument>, <argument pos:start="217:33" pos:end="217:37"><expr pos:start="217:33" pos:end="217:37"><literal type="string" pos:start="217:33" pos:end="217:37">"reg"</literal></expr></argument>, <argument pos:start="217:40" pos:end="217:55"><expr pos:start="217:40" pos:end="217:55"><name pos:start="217:40" pos:end="217:55">mem_reg_property</name></expr></argument>,

                           <argument pos:start="219:28" pos:end="219:51"><expr pos:start="219:28" pos:end="219:51"><sizeof pos:start="219:28" pos:end="219:51">sizeof<argument_list pos:start="219:34" pos:end="219:51">(<argument pos:start="219:35" pos:end="219:50"><expr pos:start="219:35" pos:end="219:50"><name pos:start="219:35" pos:end="219:50">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="219:53" pos:end="219:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="223:52"><expr pos:start="221:9" pos:end="223:51"><call pos:start="221:9" pos:end="223:51"><name pos:start="221:9" pos:end="221:12">_FDT</name><argument_list pos:start="221:13" pos:end="223:51">(<argument pos:start="221:14" pos:end="223:50"><expr pos:start="221:14" pos:end="223:50"><operator pos:start="221:14" pos:end="221:14">(</operator><call pos:start="221:15" pos:end="223:49"><name pos:start="221:15" pos:end="221:26">fdt_property</name><argument_list pos:start="221:27" pos:end="223:49">(<argument pos:start="221:28" pos:end="221:30"><expr pos:start="221:28" pos:end="221:30"><name pos:start="221:28" pos:end="221:30">fdt</name></expr></argument>, <argument pos:start="221:33" pos:end="221:51"><expr pos:start="221:33" pos:end="221:51"><literal type="string" pos:start="221:33" pos:end="221:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="221:54" pos:end="221:66"><expr pos:start="221:54" pos:end="221:66"><name pos:start="221:54" pos:end="221:66">associativity</name></expr></argument>,

                           <argument pos:start="223:28" pos:end="223:48"><expr pos:start="223:28" pos:end="223:48"><sizeof pos:start="223:28" pos:end="223:48">sizeof<argument_list pos:start="223:34" pos:end="223:48">(<argument pos:start="223:35" pos:end="223:47"><expr pos:start="223:35" pos:end="223:47"><name pos:start="223:35" pos:end="223:47">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="223:50" pos:end="223:50">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:34"><expr pos:start="225:9" pos:end="225:33"><call pos:start="225:9" pos:end="225:33"><name pos:start="225:9" pos:end="225:12">_FDT</name><argument_list pos:start="225:13" pos:end="225:33">(<argument pos:start="225:14" pos:end="225:32"><expr pos:start="225:14" pos:end="225:32"><operator pos:start="225:14" pos:end="225:14">(</operator><call pos:start="225:15" pos:end="225:31"><name pos:start="225:15" pos:end="225:26">fdt_end_node</name><argument_list pos:start="225:27" pos:end="225:31">(<argument pos:start="225:28" pos:end="225:30"><expr pos:start="225:28" pos:end="225:30"><name pos:start="225:28" pos:end="225:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="225:32" pos:end="225:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="231:5" pos:end="231:32">/* RAM: Node 1 and beyond */</comment>

    <expr_stmt pos:start="233:5" pos:end="233:27"><expr pos:start="233:5" pos:end="233:26"><name pos:start="233:5" pos:end="233:13">mem_start</name> <operator pos:start="233:15" pos:end="233:15">=</operator> <name pos:start="233:17" pos:end="233:26">node0_size</name></expr>;</expr_stmt>

    <for pos:start="235:5" pos:end="261:5">for <control pos:start="235:9" pos:end="235:39">(<init pos:start="235:10" pos:end="235:15"><expr pos:start="235:10" pos:end="235:14"><name pos:start="235:10" pos:end="235:10">i</name> <operator pos:start="235:12" pos:end="235:12">=</operator> <literal type="number" pos:start="235:14" pos:end="235:14">1</literal></expr>;</init> <condition pos:start="235:17" pos:end="235:34"><expr pos:start="235:17" pos:end="235:33"><name pos:start="235:17" pos:end="235:17">i</name> <operator pos:start="235:19" pos:end="235:19">&lt;</operator> <name pos:start="235:21" pos:end="235:33">nb_numa_nodes</name></expr>;</condition> <incr pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:36">i</name><operator pos:start="235:37" pos:end="235:38">++</operator></expr></incr>)</control> <block pos:start="235:41" pos:end="261:5">{<block_content pos:start="237:9" pos:end="259:33">

        <expr_stmt pos:start="237:9" pos:end="237:53"><expr pos:start="237:9" pos:end="237:52"><name pos:start="237:9" pos:end="237:27"><name pos:start="237:9" pos:end="237:24">mem_reg_property</name><index pos:start="237:25" pos:end="237:27">[<expr pos:start="237:26" pos:end="237:26"><literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr>]</index></name> <operator pos:start="237:29" pos:end="237:29">=</operator> <call pos:start="237:31" pos:end="237:52"><name pos:start="237:31" pos:end="237:41">cpu_to_be64</name><argument_list pos:start="237:42" pos:end="237:52">(<argument pos:start="237:43" pos:end="237:51"><expr pos:start="237:43" pos:end="237:51"><name pos:start="237:43" pos:end="237:51">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:55"><expr pos:start="239:9" pos:end="239:54"><name pos:start="239:9" pos:end="239:27"><name pos:start="239:9" pos:end="239:24">mem_reg_property</name><index pos:start="239:25" pos:end="239:27">[<expr pos:start="239:26" pos:end="239:26"><literal type="number" pos:start="239:26" pos:end="239:26">1</literal></expr>]</index></name> <operator pos:start="239:29" pos:end="239:29">=</operator> <call pos:start="239:31" pos:end="239:54"><name pos:start="239:31" pos:end="239:41">cpu_to_be64</name><argument_list pos:start="239:42" pos:end="239:54">(<argument pos:start="239:43" pos:end="239:53"><expr pos:start="239:43" pos:end="239:53"><name pos:start="239:43" pos:end="239:53"><name pos:start="239:43" pos:end="239:50">node_mem</name><index pos:start="239:51" pos:end="239:53">[<expr pos:start="239:52" pos:end="239:52"><name pos:start="239:52" pos:end="239:52">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:61"><expr pos:start="241:9" pos:end="241:60"><name pos:start="241:9" pos:end="241:24"><name pos:start="241:9" pos:end="241:21">associativity</name><index pos:start="241:22" pos:end="241:24">[<expr pos:start="241:23" pos:end="241:23"><literal type="number" pos:start="241:23" pos:end="241:23">3</literal></expr>]</index></name> <operator pos:start="241:26" pos:end="241:26">=</operator> <name pos:start="241:28" pos:end="241:43"><name pos:start="241:28" pos:end="241:40">associativity</name><index pos:start="241:41" pos:end="241:43">[<expr pos:start="241:42" pos:end="241:42"><literal type="number" pos:start="241:42" pos:end="241:42">4</literal></expr>]</index></name> <operator pos:start="241:45" pos:end="241:45">=</operator> <call pos:start="241:47" pos:end="241:60"><name pos:start="241:47" pos:end="241:57">cpu_to_be32</name><argument_list pos:start="241:58" pos:end="241:60">(<argument pos:start="241:59" pos:end="241:59"><expr pos:start="241:59" pos:end="241:59"><name pos:start="241:59" pos:end="241:59">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:62"><expr pos:start="243:9" pos:end="243:61"><call pos:start="243:9" pos:end="243:61"><name pos:start="243:9" pos:end="243:15">sprintf</name><argument_list pos:start="243:16" pos:end="243:61">(<argument pos:start="243:17" pos:end="243:24"><expr pos:start="243:17" pos:end="243:24"><name pos:start="243:17" pos:end="243:24">mem_name</name></expr></argument>, <argument pos:start="243:27" pos:end="243:49"><expr pos:start="243:27" pos:end="243:49"><literal type="string" pos:start="243:27" pos:end="243:35">"memory@"</literal> <name pos:start="243:37" pos:end="243:49">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="243:52" pos:end="243:60"><expr pos:start="243:52" pos:end="243:60"><name pos:start="243:52" pos:end="243:60">mem_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="245:9" pos:end="245:46"><expr pos:start="245:9" pos:end="245:45"><call pos:start="245:9" pos:end="245:45"><name pos:start="245:9" pos:end="245:12">_FDT</name><argument_list pos:start="245:13" pos:end="245:45">(<argument pos:start="245:14" pos:end="245:44"><expr pos:start="245:14" pos:end="245:44"><operator pos:start="245:14" pos:end="245:14">(</operator><call pos:start="245:15" pos:end="245:43"><name pos:start="245:15" pos:end="245:28">fdt_begin_node</name><argument_list pos:start="245:29" pos:end="245:43">(<argument pos:start="245:30" pos:end="245:32"><expr pos:start="245:30" pos:end="245:32"><name pos:start="245:30" pos:end="245:32">fdt</name></expr></argument>, <argument pos:start="245:35" pos:end="245:42"><expr pos:start="245:35" pos:end="245:42"><name pos:start="245:35" pos:end="245:42">mem_name</name></expr></argument>)</argument_list></call><operator pos:start="245:44" pos:end="245:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:66"><expr pos:start="247:9" pos:end="247:65"><call pos:start="247:9" pos:end="247:65"><name pos:start="247:9" pos:end="247:12">_FDT</name><argument_list pos:start="247:13" pos:end="247:65">(<argument pos:start="247:14" pos:end="247:64"><expr pos:start="247:14" pos:end="247:64"><operator pos:start="247:14" pos:end="247:14">(</operator><call pos:start="247:15" pos:end="247:63"><name pos:start="247:15" pos:end="247:33">fdt_property_string</name><argument_list pos:start="247:34" pos:end="247:63">(<argument pos:start="247:35" pos:end="247:37"><expr pos:start="247:35" pos:end="247:37"><name pos:start="247:35" pos:end="247:37">fdt</name></expr></argument>, <argument pos:start="247:40" pos:end="247:52"><expr pos:start="247:40" pos:end="247:52"><literal type="string" pos:start="247:40" pos:end="247:52">"device_type"</literal></expr></argument>, <argument pos:start="247:55" pos:end="247:62"><expr pos:start="247:55" pos:end="247:62"><literal type="string" pos:start="247:55" pos:end="247:62">"memory"</literal></expr></argument>)</argument_list></call><operator pos:start="247:64" pos:end="247:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="251:40"><expr pos:start="249:9" pos:end="251:39"><call pos:start="249:9" pos:end="251:39"><name pos:start="249:9" pos:end="249:12">_FDT</name><argument_list pos:start="249:13" pos:end="251:39">(<argument pos:start="249:14" pos:end="251:38"><expr pos:start="249:14" pos:end="251:38"><operator pos:start="249:14" pos:end="249:14">(</operator><call pos:start="249:15" pos:end="251:37"><name pos:start="249:15" pos:end="249:26">fdt_property</name><argument_list pos:start="249:27" pos:end="251:37">(<argument pos:start="249:28" pos:end="249:30"><expr pos:start="249:28" pos:end="249:30"><name pos:start="249:28" pos:end="249:30">fdt</name></expr></argument>, <argument pos:start="249:33" pos:end="249:37"><expr pos:start="249:33" pos:end="249:37"><literal type="string" pos:start="249:33" pos:end="249:37">"reg"</literal></expr></argument>, <argument pos:start="249:40" pos:end="249:55"><expr pos:start="249:40" pos:end="249:55"><name pos:start="249:40" pos:end="249:55">mem_reg_property</name></expr></argument>,

            <argument pos:start="251:13" pos:end="251:36"><expr pos:start="251:13" pos:end="251:36"><sizeof pos:start="251:13" pos:end="251:36">sizeof<argument_list pos:start="251:19" pos:end="251:36">(<argument pos:start="251:20" pos:end="251:35"><expr pos:start="251:20" pos:end="251:35"><name pos:start="251:20" pos:end="251:35">mem_reg_property</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="251:38" pos:end="251:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="255:37"><expr pos:start="253:9" pos:end="255:36"><call pos:start="253:9" pos:end="255:36"><name pos:start="253:9" pos:end="253:12">_FDT</name><argument_list pos:start="253:13" pos:end="255:36">(<argument pos:start="253:14" pos:end="255:35"><expr pos:start="253:14" pos:end="255:35"><operator pos:start="253:14" pos:end="253:14">(</operator><call pos:start="253:15" pos:end="255:34"><name pos:start="253:15" pos:end="253:26">fdt_property</name><argument_list pos:start="253:27" pos:end="255:34">(<argument pos:start="253:28" pos:end="253:30"><expr pos:start="253:28" pos:end="253:30"><name pos:start="253:28" pos:end="253:30">fdt</name></expr></argument>, <argument pos:start="253:33" pos:end="253:51"><expr pos:start="253:33" pos:end="253:51"><literal type="string" pos:start="253:33" pos:end="253:51">"ibm,associativity"</literal></expr></argument>, <argument pos:start="253:54" pos:end="253:66"><expr pos:start="253:54" pos:end="253:66"><name pos:start="253:54" pos:end="253:66">associativity</name></expr></argument>,

            <argument pos:start="255:13" pos:end="255:33"><expr pos:start="255:13" pos:end="255:33"><sizeof pos:start="255:13" pos:end="255:33">sizeof<argument_list pos:start="255:19" pos:end="255:33">(<argument pos:start="255:20" pos:end="255:32"><expr pos:start="255:20" pos:end="255:32"><name pos:start="255:20" pos:end="255:32">associativity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="255:35" pos:end="255:35">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:34"><expr pos:start="257:9" pos:end="257:33"><call pos:start="257:9" pos:end="257:33"><name pos:start="257:9" pos:end="257:12">_FDT</name><argument_list pos:start="257:13" pos:end="257:33">(<argument pos:start="257:14" pos:end="257:32"><expr pos:start="257:14" pos:end="257:32"><operator pos:start="257:14" pos:end="257:14">(</operator><call pos:start="257:15" pos:end="257:31"><name pos:start="257:15" pos:end="257:26">fdt_end_node</name><argument_list pos:start="257:27" pos:end="257:31">(<argument pos:start="257:28" pos:end="257:30"><expr pos:start="257:28" pos:end="257:30"><name pos:start="257:28" pos:end="257:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="257:32" pos:end="257:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:33"><expr pos:start="259:9" pos:end="259:32"><name pos:start="259:9" pos:end="259:17">mem_start</name> <operator pos:start="259:19" pos:end="259:20">+=</operator> <name pos:start="259:22" pos:end="259:32"><name pos:start="259:22" pos:end="259:29">node_mem</name><index pos:start="259:30" pos:end="259:32">[<expr pos:start="259:31" pos:end="259:31"><name pos:start="259:31" pos:end="259:31">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="265:5" pos:end="265:14">/* cpus */</comment>

    <expr_stmt pos:start="267:5" pos:end="267:40"><expr pos:start="267:5" pos:end="267:39"><call pos:start="267:5" pos:end="267:39"><name pos:start="267:5" pos:end="267:8">_FDT</name><argument_list pos:start="267:9" pos:end="267:39">(<argument pos:start="267:10" pos:end="267:38"><expr pos:start="267:10" pos:end="267:38"><operator pos:start="267:10" pos:end="267:10">(</operator><call pos:start="267:11" pos:end="267:37"><name pos:start="267:11" pos:end="267:24">fdt_begin_node</name><argument_list pos:start="267:25" pos:end="267:37">(<argument pos:start="267:26" pos:end="267:28"><expr pos:start="267:26" pos:end="267:28"><name pos:start="267:26" pos:end="267:28">fdt</name></expr></argument>, <argument pos:start="267:31" pos:end="267:36"><expr pos:start="267:31" pos:end="267:36"><literal type="string" pos:start="267:31" pos:end="267:36">"cpus"</literal></expr></argument>)</argument_list></call><operator pos:start="267:38" pos:end="267:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="271:5" pos:end="271:58"><expr pos:start="271:5" pos:end="271:57"><call pos:start="271:5" pos:end="271:57"><name pos:start="271:5" pos:end="271:8">_FDT</name><argument_list pos:start="271:9" pos:end="271:57">(<argument pos:start="271:10" pos:end="271:56"><expr pos:start="271:10" pos:end="271:56"><operator pos:start="271:10" pos:end="271:10">(</operator><call pos:start="271:11" pos:end="271:55"><name pos:start="271:11" pos:end="271:27">fdt_property_cell</name><argument_list pos:start="271:28" pos:end="271:55">(<argument pos:start="271:29" pos:end="271:31"><expr pos:start="271:29" pos:end="271:31"><name pos:start="271:29" pos:end="271:31">fdt</name></expr></argument>, <argument pos:start="271:34" pos:end="271:49"><expr pos:start="271:34" pos:end="271:49"><literal type="string" pos:start="271:34" pos:end="271:49">"#address-cells"</literal></expr></argument>, <argument pos:start="271:52" pos:end="271:54"><expr pos:start="271:52" pos:end="271:54"><literal type="number" pos:start="271:52" pos:end="271:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="271:56" pos:end="271:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:55"><expr pos:start="273:5" pos:end="273:54"><call pos:start="273:5" pos:end="273:54"><name pos:start="273:5" pos:end="273:8">_FDT</name><argument_list pos:start="273:9" pos:end="273:54">(<argument pos:start="273:10" pos:end="273:53"><expr pos:start="273:10" pos:end="273:53"><operator pos:start="273:10" pos:end="273:10">(</operator><call pos:start="273:11" pos:end="273:52"><name pos:start="273:11" pos:end="273:27">fdt_property_cell</name><argument_list pos:start="273:28" pos:end="273:52">(<argument pos:start="273:29" pos:end="273:31"><expr pos:start="273:29" pos:end="273:31"><name pos:start="273:29" pos:end="273:31">fdt</name></expr></argument>, <argument pos:start="273:34" pos:end="273:46"><expr pos:start="273:34" pos:end="273:46"><literal type="string" pos:start="273:34" pos:end="273:46">"#size-cells"</literal></expr></argument>, <argument pos:start="273:49" pos:end="273:51"><expr pos:start="273:49" pos:end="273:51"><literal type="number" pos:start="273:49" pos:end="273:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="273:53" pos:end="273:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="277:5" pos:end="277:36"><expr pos:start="277:5" pos:end="277:35"><name pos:start="277:5" pos:end="277:13">modelname</name> <operator pos:start="277:15" pos:end="277:15">=</operator> <call pos:start="277:17" pos:end="277:35"><name pos:start="277:17" pos:end="277:24">g_strdup</name><argument_list pos:start="277:25" pos:end="277:35">(<argument pos:start="277:26" pos:end="277:34"><expr pos:start="277:26" pos:end="277:34"><name pos:start="277:26" pos:end="277:34">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="281:5" pos:end="285:5">for <control pos:start="281:9" pos:end="281:43">(<init pos:start="281:10" pos:end="281:15"><expr pos:start="281:10" pos:end="281:14"><name pos:start="281:10" pos:end="281:10">i</name> <operator pos:start="281:12" pos:end="281:12">=</operator> <literal type="number" pos:start="281:14" pos:end="281:14">0</literal></expr>;</init> <condition pos:start="281:17" pos:end="281:38"><expr pos:start="281:17" pos:end="281:37"><name pos:start="281:17" pos:end="281:17">i</name> <operator pos:start="281:19" pos:end="281:19">&lt;</operator> <call pos:start="281:21" pos:end="281:37"><name pos:start="281:21" pos:end="281:26">strlen</name><argument_list pos:start="281:27" pos:end="281:37">(<argument pos:start="281:28" pos:end="281:36"><expr pos:start="281:28" pos:end="281:36"><name pos:start="281:28" pos:end="281:36">modelname</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="281:40" pos:end="281:42"><expr pos:start="281:40" pos:end="281:42"><name pos:start="281:40" pos:end="281:40">i</name><operator pos:start="281:41" pos:end="281:42">++</operator></expr></incr>)</control> <block pos:start="281:45" pos:end="285:5">{<block_content pos:start="283:9" pos:end="283:45">

        <expr_stmt pos:start="283:9" pos:end="283:45"><expr pos:start="283:9" pos:end="283:44"><name pos:start="283:9" pos:end="283:20"><name pos:start="283:9" pos:end="283:17">modelname</name><index pos:start="283:18" pos:end="283:20">[<expr pos:start="283:19" pos:end="283:19"><name pos:start="283:19" pos:end="283:19">i</name></expr>]</index></name> <operator pos:start="283:22" pos:end="283:22">=</operator> <call pos:start="283:24" pos:end="283:44"><name pos:start="283:24" pos:end="283:30">toupper</name><argument_list pos:start="283:31" pos:end="283:44">(<argument pos:start="283:32" pos:end="283:43"><expr pos:start="283:32" pos:end="283:43"><name pos:start="283:32" pos:end="283:43"><name pos:start="283:32" pos:end="283:40">modelname</name><index pos:start="283:41" pos:end="283:43">[<expr pos:start="283:42" pos:end="283:42"><name pos:start="283:42" pos:end="283:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="289:5" pos:end="289:48">/* This is needed during FDT finalization */</comment>

    <expr_stmt pos:start="291:5" pos:end="291:43"><expr pos:start="291:5" pos:end="291:42"><name pos:start="291:5" pos:end="291:20"><name pos:start="291:5" pos:end="291:9">spapr</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:20">cpu_model</name></name> <operator pos:start="291:22" pos:end="291:22">=</operator> <call pos:start="291:24" pos:end="291:42"><name pos:start="291:24" pos:end="291:31">g_strdup</name><argument_list pos:start="291:32" pos:end="291:42">(<argument pos:start="291:33" pos:end="291:41"><expr pos:start="291:33" pos:end="291:41"><name pos:start="291:33" pos:end="291:41">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="295:5" pos:end="461:5">for <control pos:start="295:9" pos:end="295:59">(<init pos:start="295:10" pos:end="295:25"><expr pos:start="295:10" pos:end="295:24"><name pos:start="295:10" pos:end="295:12">env</name> <operator pos:start="295:14" pos:end="295:14">=</operator> <name pos:start="295:16" pos:end="295:24">first_cpu</name></expr>;</init> <condition pos:start="295:27" pos:end="295:38"><expr pos:start="295:27" pos:end="295:37"><name pos:start="295:27" pos:end="295:29">env</name> <operator pos:start="295:31" pos:end="295:32">!=</operator> <name pos:start="295:34" pos:end="295:37">NULL</name></expr>;</condition> <incr pos:start="295:40" pos:end="295:58"><expr pos:start="295:40" pos:end="295:58"><name pos:start="295:40" pos:end="295:42">env</name> <operator pos:start="295:44" pos:end="295:44">=</operator> <name pos:start="295:46" pos:end="295:58"><name pos:start="295:46" pos:end="295:48">env</name><operator pos:start="295:49" pos:end="295:50">-&gt;</operator><name pos:start="295:51" pos:end="295:58">next_cpu</name></name></expr></incr>)</control> <block pos:start="295:61" pos:end="461:5">{<block_content pos:start="297:9" pos:end="459:34">

        <decl_stmt pos:start="297:9" pos:end="297:35"><decl pos:start="297:9" pos:end="297:34"><type pos:start="297:9" pos:end="297:11"><name pos:start="297:9" pos:end="297:11">int</name></type> <name pos:start="297:13" pos:end="297:17">index</name> <init pos:start="297:19" pos:end="297:34">= <expr pos:start="297:21" pos:end="297:34"><name pos:start="297:21" pos:end="297:34"><name pos:start="297:21" pos:end="297:23">env</name><operator pos:start="297:24" pos:end="297:25">-&gt;</operator><name pos:start="297:26" pos:end="297:34">cpu_index</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="299:9" pos:end="299:43"><decl pos:start="299:9" pos:end="299:42"><type pos:start="299:9" pos:end="299:16"><name pos:start="299:9" pos:end="299:16">uint32_t</name></type> <name pos:start="299:18" pos:end="299:42"><name pos:start="299:18" pos:end="299:29">servers_prop</name><index pos:start="299:30" pos:end="299:42">[<expr pos:start="299:31" pos:end="299:41"><name pos:start="299:31" pos:end="299:41">smp_threads</name></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="301:9" pos:end="301:48"><decl pos:start="301:9" pos:end="301:47"><type pos:start="301:9" pos:end="301:16"><name pos:start="301:9" pos:end="301:16">uint32_t</name></type> <name pos:start="301:18" pos:end="301:47"><name pos:start="301:18" pos:end="301:30">gservers_prop</name><index pos:start="301:31" pos:end="301:47">[<expr pos:start="301:32" pos:end="301:46"><name pos:start="301:32" pos:end="301:42">smp_threads</name> <operator pos:start="301:44" pos:end="301:44">*</operator> <literal type="number" pos:start="301:46" pos:end="301:46">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="303:9" pos:end="303:23"><decl pos:start="303:9" pos:end="303:22"><type pos:start="303:9" pos:end="303:14"><name pos:start="303:9" pos:end="303:12">char</name> <modifier pos:start="303:14" pos:end="303:14">*</modifier></type><name pos:start="303:15" pos:end="303:22">nodename</name></decl>;</decl_stmt>

        <decl_stmt pos:start="305:9" pos:end="307:51"><decl pos:start="305:9" pos:end="307:50"><type pos:start="305:9" pos:end="305:16"><name pos:start="305:9" pos:end="305:16">uint32_t</name></type> <name pos:start="305:18" pos:end="305:23"><name pos:start="305:18" pos:end="305:21">segs</name><index pos:start="305:22" pos:end="305:23">[]</index></name> <init pos:start="305:25" pos:end="307:50">= <expr pos:start="305:27" pos:end="307:50"><block pos:start="305:27" pos:end="307:50">{<expr pos:start="305:28" pos:end="305:42"><call pos:start="305:28" pos:end="305:42"><name pos:start="305:28" pos:end="305:38">cpu_to_be32</name><argument_list pos:start="305:39" pos:end="305:42">(<argument pos:start="305:40" pos:end="305:41"><expr pos:start="305:40" pos:end="305:41"><literal type="number" pos:start="305:40" pos:end="305:41">28</literal></expr></argument>)</argument_list></call></expr>, <expr pos:start="305:45" pos:end="305:59"><call pos:start="305:45" pos:end="305:59"><name pos:start="305:45" pos:end="305:55">cpu_to_be32</name><argument_list pos:start="305:56" pos:end="305:59">(<argument pos:start="305:57" pos:end="305:58"><expr pos:start="305:57" pos:end="305:58"><literal type="number" pos:start="305:57" pos:end="305:58">40</literal></expr></argument>)</argument_list></call></expr>,

                           <expr pos:start="307:28" pos:end="307:37"><literal type="number" pos:start="307:28" pos:end="307:37">0xffffffff</literal></expr>, <expr pos:start="307:40" pos:end="307:49"><literal type="number" pos:start="307:40" pos:end="307:49">0xffffffff</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="309:9" pos:end="309:78"><decl pos:start="309:9" pos:end="309:77"><type pos:start="309:9" pos:end="309:16"><name pos:start="309:9" pos:end="309:16">uint32_t</name></type> <name pos:start="309:18" pos:end="309:23">tbfreq</name> <init pos:start="309:25" pos:end="309:77">= <expr pos:start="309:27" pos:end="309:77"><ternary pos:start="309:27" pos:end="309:77"><condition pos:start="309:27" pos:end="309:41"><expr pos:start="309:27" pos:end="309:39"><call pos:start="309:27" pos:end="309:39"><name pos:start="309:27" pos:end="309:37">kvm_enabled</name><argument_list pos:start="309:38" pos:end="309:39">()</argument_list></call></expr> ?</condition><then pos:start="309:43" pos:end="309:61"> <expr pos:start="309:43" pos:end="309:61"><call pos:start="309:43" pos:end="309:61"><name pos:start="309:43" pos:end="309:59">kvmppc_get_tbfreq</name><argument_list pos:start="309:60" pos:end="309:61">()</argument_list></call></expr> </then><else pos:start="309:63" pos:end="309:77">: <expr pos:start="309:65" pos:end="309:77"><name pos:start="309:65" pos:end="309:77">TIMEBASE_FREQ</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="311:9" pos:end="311:79"><decl pos:start="311:9" pos:end="311:78"><type pos:start="311:9" pos:end="311:16"><name pos:start="311:9" pos:end="311:16">uint32_t</name></type> <name pos:start="311:18" pos:end="311:24">cpufreq</name> <init pos:start="311:26" pos:end="311:78">= <expr pos:start="311:28" pos:end="311:78"><ternary pos:start="311:28" pos:end="311:78"><condition pos:start="311:28" pos:end="311:42"><expr pos:start="311:28" pos:end="311:40"><call pos:start="311:28" pos:end="311:40"><name pos:start="311:28" pos:end="311:38">kvm_enabled</name><argument_list pos:start="311:39" pos:end="311:40">()</argument_list></call></expr> ?</condition><then pos:start="311:44" pos:end="311:65"> <expr pos:start="311:44" pos:end="311:65"><call pos:start="311:44" pos:end="311:65"><name pos:start="311:44" pos:end="311:63">kvmppc_get_clockfreq</name><argument_list pos:start="311:64" pos:end="311:65">()</argument_list></call></expr> </then><else pos:start="311:67" pos:end="311:78">: <expr pos:start="311:69" pos:end="311:78"><literal type="number" pos:start="311:69" pos:end="311:78">1000000000</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="313:9" pos:end="313:37"><decl pos:start="313:9" pos:end="313:36"><type pos:start="313:9" pos:end="313:16"><name pos:start="313:9" pos:end="313:16">uint32_t</name></type> <name pos:start="313:18" pos:end="313:36"><name pos:start="313:18" pos:end="313:32">page_sizes_prop</name><index pos:start="313:33" pos:end="313:36">[<expr pos:start="313:34" pos:end="313:35"><literal type="number" pos:start="313:34" pos:end="313:35">64</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="315:9" pos:end="315:36"><decl pos:start="315:9" pos:end="315:35"><type pos:start="315:9" pos:end="315:14"><name pos:start="315:9" pos:end="315:14">size_t</name></type> <name pos:start="315:16" pos:end="315:35">page_sizes_prop_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="319:9" pos:end="323:9"><if pos:start="319:9" pos:end="323:9">if <condition pos:start="319:12" pos:end="319:31">(<expr pos:start="319:13" pos:end="319:30"><operator pos:start="319:13" pos:end="319:13">(</operator><name pos:start="319:14" pos:end="319:18">index</name> <operator pos:start="319:20" pos:end="319:20">%</operator> <name pos:start="319:22" pos:end="319:24">smt</name><operator pos:start="319:25" pos:end="319:25">)</operator> <operator pos:start="319:27" pos:end="319:28">!=</operator> <literal type="number" pos:start="319:30" pos:end="319:30">0</literal></expr>)</condition> <block pos:start="319:33" pos:end="323:9">{<block_content pos:start="321:13" pos:end="321:21">

            <continue pos:start="321:13" pos:end="321:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="327:9" pos:end="333:9"><if pos:start="327:9" pos:end="333:9">if <condition pos:start="327:12" pos:end="327:63">(<expr pos:start="327:13" pos:end="327:62"><call pos:start="327:13" pos:end="327:58"><name pos:start="327:13" pos:end="327:20">asprintf</name><argument_list pos:start="327:21" pos:end="327:58">(<argument pos:start="327:22" pos:end="327:30"><expr pos:start="327:22" pos:end="327:30"><operator pos:start="327:22" pos:end="327:22">&amp;</operator><name pos:start="327:23" pos:end="327:30">nodename</name></expr></argument>, <argument pos:start="327:33" pos:end="327:39"><expr pos:start="327:33" pos:end="327:39"><literal type="string" pos:start="327:33" pos:end="327:39">"%s@%x"</literal></expr></argument>, <argument pos:start="327:42" pos:end="327:50"><expr pos:start="327:42" pos:end="327:50"><name pos:start="327:42" pos:end="327:50">modelname</name></expr></argument>, <argument pos:start="327:53" pos:end="327:57"><expr pos:start="327:53" pos:end="327:57"><name pos:start="327:53" pos:end="327:57">index</name></expr></argument>)</argument_list></call> <operator pos:start="327:60" pos:end="327:60">&lt;</operator> <literal type="number" pos:start="327:62" pos:end="327:62">0</literal></expr>)</condition> <block pos:start="327:65" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:20">

            <expr_stmt pos:start="329:13" pos:end="329:52"><expr pos:start="329:13" pos:end="329:51"><call pos:start="329:13" pos:end="329:51"><name pos:start="329:13" pos:end="329:19">fprintf</name><argument_list pos:start="329:20" pos:end="329:51">(<argument pos:start="329:21" pos:end="329:26"><expr pos:start="329:21" pos:end="329:26"><name pos:start="329:21" pos:end="329:26">stderr</name></expr></argument>, <argument pos:start="329:29" pos:end="329:50"><expr pos:start="329:29" pos:end="329:50"><literal type="string" pos:start="329:29" pos:end="329:50">"Allocation failure\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:20"><expr pos:start="331:13" pos:end="331:19"><call pos:start="331:13" pos:end="331:19"><name pos:start="331:13" pos:end="331:16">exit</name><argument_list pos:start="331:17" pos:end="331:19">(<argument pos:start="331:18" pos:end="331:18"><expr pos:start="331:18" pos:end="331:18"><literal type="number" pos:start="331:18" pos:end="331:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="337:9" pos:end="337:46"><expr pos:start="337:9" pos:end="337:45"><call pos:start="337:9" pos:end="337:45"><name pos:start="337:9" pos:end="337:12">_FDT</name><argument_list pos:start="337:13" pos:end="337:45">(<argument pos:start="337:14" pos:end="337:44"><expr pos:start="337:14" pos:end="337:44"><operator pos:start="337:14" pos:end="337:14">(</operator><call pos:start="337:15" pos:end="337:43"><name pos:start="337:15" pos:end="337:28">fdt_begin_node</name><argument_list pos:start="337:29" pos:end="337:43">(<argument pos:start="337:30" pos:end="337:32"><expr pos:start="337:30" pos:end="337:32"><name pos:start="337:30" pos:end="337:32">fdt</name></expr></argument>, <argument pos:start="337:35" pos:end="337:42"><expr pos:start="337:35" pos:end="337:42"><name pos:start="337:35" pos:end="337:42">nodename</name></expr></argument>)</argument_list></call><operator pos:start="337:44" pos:end="337:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="341:9" pos:end="341:23"><expr pos:start="341:9" pos:end="341:22"><call pos:start="341:9" pos:end="341:22"><name pos:start="341:9" pos:end="341:12">free</name><argument_list pos:start="341:13" pos:end="341:22">(<argument pos:start="341:14" pos:end="341:21"><expr pos:start="341:14" pos:end="341:21"><name pos:start="341:14" pos:end="341:21">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="345:9" pos:end="345:53"><expr pos:start="345:9" pos:end="345:52"><call pos:start="345:9" pos:end="345:52"><name pos:start="345:9" pos:end="345:12">_FDT</name><argument_list pos:start="345:13" pos:end="345:52">(<argument pos:start="345:14" pos:end="345:51"><expr pos:start="345:14" pos:end="345:51"><operator pos:start="345:14" pos:end="345:14">(</operator><call pos:start="345:15" pos:end="345:50"><name pos:start="345:15" pos:end="345:31">fdt_property_cell</name><argument_list pos:start="345:32" pos:end="345:50">(<argument pos:start="345:33" pos:end="345:35"><expr pos:start="345:33" pos:end="345:35"><name pos:start="345:33" pos:end="345:35">fdt</name></expr></argument>, <argument pos:start="345:38" pos:end="345:42"><expr pos:start="345:38" pos:end="345:42"><literal type="string" pos:start="345:38" pos:end="345:42">"reg"</literal></expr></argument>, <argument pos:start="345:45" pos:end="345:49"><expr pos:start="345:45" pos:end="345:49"><name pos:start="345:45" pos:end="345:49">index</name></expr></argument>)</argument_list></call><operator pos:start="345:51" pos:end="345:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:63"><expr pos:start="347:9" pos:end="347:62"><call pos:start="347:9" pos:end="347:62"><name pos:start="347:9" pos:end="347:12">_FDT</name><argument_list pos:start="347:13" pos:end="347:62">(<argument pos:start="347:14" pos:end="347:61"><expr pos:start="347:14" pos:end="347:61"><operator pos:start="347:14" pos:end="347:14">(</operator><call pos:start="347:15" pos:end="347:60"><name pos:start="347:15" pos:end="347:33">fdt_property_string</name><argument_list pos:start="347:34" pos:end="347:60">(<argument pos:start="347:35" pos:end="347:37"><expr pos:start="347:35" pos:end="347:37"><name pos:start="347:35" pos:end="347:37">fdt</name></expr></argument>, <argument pos:start="347:40" pos:end="347:52"><expr pos:start="347:40" pos:end="347:52"><literal type="string" pos:start="347:40" pos:end="347:52">"device_type"</literal></expr></argument>, <argument pos:start="347:55" pos:end="347:59"><expr pos:start="347:55" pos:end="347:59"><literal type="string" pos:start="347:55" pos:end="347:59">"cpu"</literal></expr></argument>)</argument_list></call><operator pos:start="347:61" pos:end="347:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="351:9" pos:end="351:73"><expr pos:start="351:9" pos:end="351:72"><call pos:start="351:9" pos:end="351:72"><name pos:start="351:9" pos:end="351:12">_FDT</name><argument_list pos:start="351:13" pos:end="351:72">(<argument pos:start="351:14" pos:end="351:71"><expr pos:start="351:14" pos:end="351:71"><operator pos:start="351:14" pos:end="351:14">(</operator><call pos:start="351:15" pos:end="351:70"><name pos:start="351:15" pos:end="351:31">fdt_property_cell</name><argument_list pos:start="351:32" pos:end="351:70">(<argument pos:start="351:33" pos:end="351:35"><expr pos:start="351:33" pos:end="351:35"><name pos:start="351:33" pos:end="351:35">fdt</name></expr></argument>, <argument pos:start="351:38" pos:end="351:50"><expr pos:start="351:38" pos:end="351:50"><literal type="string" pos:start="351:38" pos:end="351:50">"cpu-version"</literal></expr></argument>, <argument pos:start="351:53" pos:end="351:69"><expr pos:start="351:53" pos:end="351:69"><name pos:start="351:53" pos:end="351:69"><name pos:start="351:53" pos:end="351:55">env</name><operator pos:start="351:56" pos:end="351:57">-&gt;</operator><name pos:start="351:58" pos:end="351:60">spr</name><index pos:start="351:61" pos:end="351:69">[<expr pos:start="351:62" pos:end="351:68"><name pos:start="351:62" pos:end="351:68">SPR_PVR</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="351:71" pos:end="351:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="355:57"><expr pos:start="353:9" pos:end="355:56"><call pos:start="353:9" pos:end="355:56"><name pos:start="353:9" pos:end="353:12">_FDT</name><argument_list pos:start="353:13" pos:end="355:56">(<argument pos:start="353:14" pos:end="355:55"><expr pos:start="353:14" pos:end="355:55"><operator pos:start="353:14" pos:end="353:14">(</operator><call pos:start="353:15" pos:end="355:54"><name pos:start="353:15" pos:end="353:31">fdt_property_cell</name><argument_list pos:start="353:32" pos:end="355:54">(<argument pos:start="353:33" pos:end="353:35"><expr pos:start="353:33" pos:end="353:35"><name pos:start="353:33" pos:end="353:35">fdt</name></expr></argument>, <argument pos:start="353:38" pos:end="353:56"><expr pos:start="353:38" pos:end="353:56"><literal type="string" pos:start="353:38" pos:end="353:56">"dcache-block-size"</literal></expr></argument>,

                                <argument pos:start="355:33" pos:end="355:53"><expr pos:start="355:33" pos:end="355:53"><name pos:start="355:33" pos:end="355:53"><name pos:start="355:33" pos:end="355:35">env</name><operator pos:start="355:36" pos:end="355:37">-&gt;</operator><name pos:start="355:38" pos:end="355:53">dcache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="355:55" pos:end="355:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="357:9" pos:end="359:57"><expr pos:start="357:9" pos:end="359:56"><call pos:start="357:9" pos:end="359:56"><name pos:start="357:9" pos:end="357:12">_FDT</name><argument_list pos:start="357:13" pos:end="359:56">(<argument pos:start="357:14" pos:end="359:55"><expr pos:start="357:14" pos:end="359:55"><operator pos:start="357:14" pos:end="357:14">(</operator><call pos:start="357:15" pos:end="359:54"><name pos:start="357:15" pos:end="357:31">fdt_property_cell</name><argument_list pos:start="357:32" pos:end="359:54">(<argument pos:start="357:33" pos:end="357:35"><expr pos:start="357:33" pos:end="357:35"><name pos:start="357:33" pos:end="357:35">fdt</name></expr></argument>, <argument pos:start="357:38" pos:end="357:56"><expr pos:start="357:38" pos:end="357:56"><literal type="string" pos:start="357:38" pos:end="357:56">"icache-block-size"</literal></expr></argument>,

                                <argument pos:start="359:33" pos:end="359:53"><expr pos:start="359:33" pos:end="359:53"><name pos:start="359:33" pos:end="359:53"><name pos:start="359:33" pos:end="359:35">env</name><operator pos:start="359:36" pos:end="359:37">-&gt;</operator><name pos:start="359:38" pos:end="359:53">icache_line_size</name></name></expr></argument>)</argument_list></call><operator pos:start="359:55" pos:end="359:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:69"><expr pos:start="361:9" pos:end="361:68"><call pos:start="361:9" pos:end="361:68"><name pos:start="361:9" pos:end="361:12">_FDT</name><argument_list pos:start="361:13" pos:end="361:68">(<argument pos:start="361:14" pos:end="361:67"><expr pos:start="361:14" pos:end="361:67"><operator pos:start="361:14" pos:end="361:14">(</operator><call pos:start="361:15" pos:end="361:66"><name pos:start="361:15" pos:end="361:31">fdt_property_cell</name><argument_list pos:start="361:32" pos:end="361:66">(<argument pos:start="361:33" pos:end="361:35"><expr pos:start="361:33" pos:end="361:35"><name pos:start="361:33" pos:end="361:35">fdt</name></expr></argument>, <argument pos:start="361:38" pos:end="361:57"><expr pos:start="361:38" pos:end="361:57"><literal type="string" pos:start="361:38" pos:end="361:57">"timebase-frequency"</literal></expr></argument>, <argument pos:start="361:60" pos:end="361:65"><expr pos:start="361:60" pos:end="361:65"><name pos:start="361:60" pos:end="361:65">tbfreq</name></expr></argument>)</argument_list></call><operator pos:start="361:67" pos:end="361:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:67"><expr pos:start="363:9" pos:end="363:66"><call pos:start="363:9" pos:end="363:66"><name pos:start="363:9" pos:end="363:12">_FDT</name><argument_list pos:start="363:13" pos:end="363:66">(<argument pos:start="363:14" pos:end="363:65"><expr pos:start="363:14" pos:end="363:65"><operator pos:start="363:14" pos:end="363:14">(</operator><call pos:start="363:15" pos:end="363:64"><name pos:start="363:15" pos:end="363:31">fdt_property_cell</name><argument_list pos:start="363:32" pos:end="363:64">(<argument pos:start="363:33" pos:end="363:35"><expr pos:start="363:33" pos:end="363:35"><name pos:start="363:33" pos:end="363:35">fdt</name></expr></argument>, <argument pos:start="363:38" pos:end="363:54"><expr pos:start="363:38" pos:end="363:54"><literal type="string" pos:start="363:38" pos:end="363:54">"clock-frequency"</literal></expr></argument>, <argument pos:start="363:57" pos:end="363:63"><expr pos:start="363:57" pos:end="363:63"><name pos:start="363:57" pos:end="363:63">cpufreq</name></expr></argument>)</argument_list></call><operator pos:start="363:65" pos:end="363:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:68"><expr pos:start="365:9" pos:end="365:67"><call pos:start="365:9" pos:end="365:67"><name pos:start="365:9" pos:end="365:12">_FDT</name><argument_list pos:start="365:13" pos:end="365:67">(<argument pos:start="365:14" pos:end="365:66"><expr pos:start="365:14" pos:end="365:66"><operator pos:start="365:14" pos:end="365:14">(</operator><call pos:start="365:15" pos:end="365:65"><name pos:start="365:15" pos:end="365:31">fdt_property_cell</name><argument_list pos:start="365:32" pos:end="365:65">(<argument pos:start="365:33" pos:end="365:35"><expr pos:start="365:33" pos:end="365:35"><name pos:start="365:33" pos:end="365:35">fdt</name></expr></argument>, <argument pos:start="365:38" pos:end="365:51"><expr pos:start="365:38" pos:end="365:51"><literal type="string" pos:start="365:38" pos:end="365:51">"ibm,slb-size"</literal></expr></argument>, <argument pos:start="365:54" pos:end="365:64"><expr pos:start="365:54" pos:end="365:64"><name pos:start="365:54" pos:end="365:64"><name pos:start="365:54" pos:end="365:56">env</name><operator pos:start="365:57" pos:end="365:58">-&gt;</operator><name pos:start="365:59" pos:end="365:64">slb_nr</name></name></expr></argument>)</argument_list></call><operator pos:start="365:66" pos:end="365:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="369:67"><expr pos:start="367:9" pos:end="369:66"><call pos:start="367:9" pos:end="369:66"><name pos:start="367:9" pos:end="367:12">_FDT</name><argument_list pos:start="367:13" pos:end="369:66">(<argument pos:start="367:14" pos:end="369:65"><expr pos:start="367:14" pos:end="369:65"><operator pos:start="367:14" pos:end="367:14">(</operator><call pos:start="367:15" pos:end="369:64"><name pos:start="367:15" pos:end="367:26">fdt_property</name><argument_list pos:start="367:27" pos:end="369:64">(<argument pos:start="367:28" pos:end="367:30"><expr pos:start="367:28" pos:end="367:30"><name pos:start="367:28" pos:end="367:30">fdt</name></expr></argument>, <argument pos:start="367:33" pos:end="367:46"><expr pos:start="367:33" pos:end="367:46"><literal type="string" pos:start="367:33" pos:end="367:46">"ibm,pft-size"</literal></expr></argument>,

                           <argument pos:start="369:28" pos:end="369:40"><expr pos:start="369:28" pos:end="369:40"><name pos:start="369:28" pos:end="369:40">pft_size_prop</name></expr></argument>, <argument pos:start="369:43" pos:end="369:63"><expr pos:start="369:43" pos:end="369:63"><sizeof pos:start="369:43" pos:end="369:63">sizeof<argument_list pos:start="369:49" pos:end="369:63">(<argument pos:start="369:50" pos:end="369:62"><expr pos:start="369:50" pos:end="369:62"><name pos:start="369:50" pos:end="369:62">pft_size_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="369:65" pos:end="369:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:59"><expr pos:start="371:9" pos:end="371:58"><call pos:start="371:9" pos:end="371:58"><name pos:start="371:9" pos:end="371:12">_FDT</name><argument_list pos:start="371:13" pos:end="371:58">(<argument pos:start="371:14" pos:end="371:57"><expr pos:start="371:14" pos:end="371:57"><operator pos:start="371:14" pos:end="371:14">(</operator><call pos:start="371:15" pos:end="371:56"><name pos:start="371:15" pos:end="371:33">fdt_property_string</name><argument_list pos:start="371:34" pos:end="371:56">(<argument pos:start="371:35" pos:end="371:37"><expr pos:start="371:35" pos:end="371:37"><name pos:start="371:35" pos:end="371:37">fdt</name></expr></argument>, <argument pos:start="371:40" pos:end="371:47"><expr pos:start="371:40" pos:end="371:47"><literal type="string" pos:start="371:40" pos:end="371:47">"status"</literal></expr></argument>, <argument pos:start="371:50" pos:end="371:55"><expr pos:start="371:50" pos:end="371:55"><literal type="string" pos:start="371:50" pos:end="371:55">"okay"</literal></expr></argument>)</argument_list></call><operator pos:start="371:57" pos:end="371:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:53"><expr pos:start="373:9" pos:end="373:52"><call pos:start="373:9" pos:end="373:52"><name pos:start="373:9" pos:end="373:12">_FDT</name><argument_list pos:start="373:13" pos:end="373:52">(<argument pos:start="373:14" pos:end="373:51"><expr pos:start="373:14" pos:end="373:51"><operator pos:start="373:14" pos:end="373:14">(</operator><call pos:start="373:15" pos:end="373:50"><name pos:start="373:15" pos:end="373:26">fdt_property</name><argument_list pos:start="373:27" pos:end="373:50">(<argument pos:start="373:28" pos:end="373:30"><expr pos:start="373:28" pos:end="373:30"><name pos:start="373:28" pos:end="373:30">fdt</name></expr></argument>, <argument pos:start="373:33" pos:end="373:40"><expr pos:start="373:33" pos:end="373:40"><literal type="string" pos:start="373:33" pos:end="373:40">"64-bit"</literal></expr></argument>, <argument pos:start="373:43" pos:end="373:46"><expr pos:start="373:43" pos:end="373:46"><name pos:start="373:43" pos:end="373:46">NULL</name></expr></argument>, <argument pos:start="373:49" pos:end="373:49"><expr pos:start="373:49" pos:end="373:49"><literal type="number" pos:start="373:49" pos:end="373:49">0</literal></expr></argument>)</argument_list></call><operator pos:start="373:51" pos:end="373:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="377:9" pos:end="377:61">/* Build interrupt servers and gservers properties */</comment>

        <for pos:start="379:9" pos:end="389:9">for <control pos:start="379:13" pos:end="379:41">(<init pos:start="379:14" pos:end="379:19"><expr pos:start="379:14" pos:end="379:18"><name pos:start="379:14" pos:end="379:14">i</name> <operator pos:start="379:16" pos:end="379:16">=</operator> <literal type="number" pos:start="379:18" pos:end="379:18">0</literal></expr>;</init> <condition pos:start="379:21" pos:end="379:36"><expr pos:start="379:21" pos:end="379:35"><name pos:start="379:21" pos:end="379:21">i</name> <operator pos:start="379:23" pos:end="379:23">&lt;</operator> <name pos:start="379:25" pos:end="379:35">smp_threads</name></expr>;</condition> <incr pos:start="379:38" pos:end="379:40"><expr pos:start="379:38" pos:end="379:40"><name pos:start="379:38" pos:end="379:38">i</name><operator pos:start="379:39" pos:end="379:40">++</operator></expr></incr>)</control> <block pos:start="379:43" pos:end="389:9">{<block_content pos:start="381:13" pos:end="387:39">

            <expr_stmt pos:start="381:13" pos:end="381:53"><expr pos:start="381:13" pos:end="381:52"><name pos:start="381:13" pos:end="381:27"><name pos:start="381:13" pos:end="381:24">servers_prop</name><index pos:start="381:25" pos:end="381:27">[<expr pos:start="381:26" pos:end="381:26"><name pos:start="381:26" pos:end="381:26">i</name></expr>]</index></name> <operator pos:start="381:29" pos:end="381:29">=</operator> <call pos:start="381:31" pos:end="381:52"><name pos:start="381:31" pos:end="381:41">cpu_to_be32</name><argument_list pos:start="381:42" pos:end="381:52">(<argument pos:start="381:43" pos:end="381:51"><expr pos:start="381:43" pos:end="381:51"><name pos:start="381:43" pos:end="381:47">index</name> <operator pos:start="381:49" pos:end="381:49">+</operator> <name pos:start="381:51" pos:end="381:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="383:13" pos:end="383:61">/* Hack, direct the group queues back to cpu 0 */</comment>

            <expr_stmt pos:start="385:13" pos:end="385:56"><expr pos:start="385:13" pos:end="385:55"><name pos:start="385:13" pos:end="385:30"><name pos:start="385:13" pos:end="385:25">gservers_prop</name><index pos:start="385:26" pos:end="385:30">[<expr pos:start="385:27" pos:end="385:29"><name pos:start="385:27" pos:end="385:27">i</name><operator pos:start="385:28" pos:end="385:28">*</operator><literal type="number" pos:start="385:29" pos:end="385:29">2</literal></expr>]</index></name> <operator pos:start="385:32" pos:end="385:32">=</operator> <call pos:start="385:34" pos:end="385:55"><name pos:start="385:34" pos:end="385:44">cpu_to_be32</name><argument_list pos:start="385:45" pos:end="385:55">(<argument pos:start="385:46" pos:end="385:54"><expr pos:start="385:46" pos:end="385:54"><name pos:start="385:46" pos:end="385:50">index</name> <operator pos:start="385:52" pos:end="385:52">+</operator> <name pos:start="385:54" pos:end="385:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="387:13" pos:end="387:39"><expr pos:start="387:13" pos:end="387:38"><name pos:start="387:13" pos:end="387:34"><name pos:start="387:13" pos:end="387:25">gservers_prop</name><index pos:start="387:26" pos:end="387:34">[<expr pos:start="387:27" pos:end="387:33"><name pos:start="387:27" pos:end="387:27">i</name><operator pos:start="387:28" pos:end="387:28">*</operator><literal type="number" pos:start="387:29" pos:end="387:29">2</literal> <operator pos:start="387:31" pos:end="387:31">+</operator> <literal type="number" pos:start="387:33" pos:end="387:33">1</literal></expr>]</index></name> <operator pos:start="387:36" pos:end="387:36">=</operator> <literal type="number" pos:start="387:38" pos:end="387:38">0</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="391:9" pos:end="393:65"><expr pos:start="391:9" pos:end="393:64"><call pos:start="391:9" pos:end="393:64"><name pos:start="391:9" pos:end="391:12">_FDT</name><argument_list pos:start="391:13" pos:end="393:64">(<argument pos:start="391:14" pos:end="393:63"><expr pos:start="391:14" pos:end="393:63"><operator pos:start="391:14" pos:end="391:14">(</operator><call pos:start="391:15" pos:end="393:62"><name pos:start="391:15" pos:end="391:26">fdt_property</name><argument_list pos:start="391:27" pos:end="393:62">(<argument pos:start="391:28" pos:end="391:30"><expr pos:start="391:28" pos:end="391:30"><name pos:start="391:28" pos:end="391:30">fdt</name></expr></argument>, <argument pos:start="391:33" pos:end="391:60"><expr pos:start="391:33" pos:end="391:60"><literal type="string" pos:start="391:33" pos:end="391:60">"ibm,ppc-interrupt-server#s"</literal></expr></argument>,

                           <argument pos:start="393:28" pos:end="393:39"><expr pos:start="393:28" pos:end="393:39"><name pos:start="393:28" pos:end="393:39">servers_prop</name></expr></argument>, <argument pos:start="393:42" pos:end="393:61"><expr pos:start="393:42" pos:end="393:61"><sizeof pos:start="393:42" pos:end="393:61">sizeof<argument_list pos:start="393:48" pos:end="393:61">(<argument pos:start="393:49" pos:end="393:60"><expr pos:start="393:49" pos:end="393:60"><name pos:start="393:49" pos:end="393:60">servers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="393:63" pos:end="393:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="395:9" pos:end="397:67"><expr pos:start="395:9" pos:end="397:66"><call pos:start="395:9" pos:end="397:66"><name pos:start="395:9" pos:end="395:12">_FDT</name><argument_list pos:start="395:13" pos:end="397:66">(<argument pos:start="395:14" pos:end="397:65"><expr pos:start="395:14" pos:end="397:65"><operator pos:start="395:14" pos:end="395:14">(</operator><call pos:start="395:15" pos:end="397:64"><name pos:start="395:15" pos:end="395:26">fdt_property</name><argument_list pos:start="395:27" pos:end="397:64">(<argument pos:start="395:28" pos:end="395:30"><expr pos:start="395:28" pos:end="395:30"><name pos:start="395:28" pos:end="395:30">fdt</name></expr></argument>, <argument pos:start="395:33" pos:end="395:61"><expr pos:start="395:33" pos:end="395:61"><literal type="string" pos:start="395:33" pos:end="395:61">"ibm,ppc-interrupt-gserver#s"</literal></expr></argument>,

                           <argument pos:start="397:28" pos:end="397:40"><expr pos:start="397:28" pos:end="397:40"><name pos:start="397:28" pos:end="397:40">gservers_prop</name></expr></argument>, <argument pos:start="397:43" pos:end="397:63"><expr pos:start="397:43" pos:end="397:63"><sizeof pos:start="397:43" pos:end="397:63">sizeof<argument_list pos:start="397:49" pos:end="397:63">(<argument pos:start="397:50" pos:end="397:62"><expr pos:start="397:50" pos:end="397:62"><name pos:start="397:50" pos:end="397:62">gservers_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="397:65" pos:end="397:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="401:9" pos:end="407:9"><if pos:start="401:9" pos:end="407:9">if <condition pos:start="401:12" pos:end="401:47">(<expr pos:start="401:13" pos:end="401:46"><name pos:start="401:13" pos:end="401:26"><name pos:start="401:13" pos:end="401:15">env</name><operator pos:start="401:16" pos:end="401:17">-&gt;</operator><name pos:start="401:18" pos:end="401:26">mmu_model</name></name> <operator pos:start="401:28" pos:end="401:28">&amp;</operator> <name pos:start="401:30" pos:end="401:46">POWERPC_MMU_1TSEG</name></expr>)</condition> <block pos:start="401:49" pos:end="407:9">{<block_content pos:start="403:13" pos:end="405:53">

            <expr_stmt pos:start="403:13" pos:end="405:53"><expr pos:start="403:13" pos:end="405:52"><call pos:start="403:13" pos:end="405:52"><name pos:start="403:13" pos:end="403:16">_FDT</name><argument_list pos:start="403:17" pos:end="405:52">(<argument pos:start="403:18" pos:end="405:51"><expr pos:start="403:18" pos:end="405:51"><operator pos:start="403:18" pos:end="403:18">(</operator><call pos:start="403:19" pos:end="405:50"><name pos:start="403:19" pos:end="403:30">fdt_property</name><argument_list pos:start="403:31" pos:end="405:50">(<argument pos:start="403:32" pos:end="403:34"><expr pos:start="403:32" pos:end="403:34"><name pos:start="403:32" pos:end="403:34">fdt</name></expr></argument>, <argument pos:start="403:37" pos:end="403:65"><expr pos:start="403:37" pos:end="403:65"><literal type="string" pos:start="403:37" pos:end="403:65">"ibm,processor-segment-sizes"</literal></expr></argument>,

                               <argument pos:start="405:32" pos:end="405:35"><expr pos:start="405:32" pos:end="405:35"><name pos:start="405:32" pos:end="405:35">segs</name></expr></argument>, <argument pos:start="405:38" pos:end="405:49"><expr pos:start="405:38" pos:end="405:49"><sizeof pos:start="405:38" pos:end="405:49">sizeof<argument_list pos:start="405:44" pos:end="405:49">(<argument pos:start="405:45" pos:end="405:48"><expr pos:start="405:45" pos:end="405:48"><name pos:start="405:45" pos:end="405:48">segs</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="405:51" pos:end="405:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="411:9" pos:end="417:48">/* Advertise VMX/VSX (vector extensions) if available

         *   0 / no property == no vector extensions

         *   1               == VMX / Altivec available

         *   2               == VSX available */</comment>

        <if_stmt pos:start="419:9" pos:end="427:9"><if pos:start="419:9" pos:end="427:9">if <condition pos:start="419:12" pos:end="419:43">(<expr pos:start="419:13" pos:end="419:42"><name pos:start="419:13" pos:end="419:28"><name pos:start="419:13" pos:end="419:15">env</name><operator pos:start="419:16" pos:end="419:17">-&gt;</operator><name pos:start="419:18" pos:end="419:28">insns_flags</name></name> <operator pos:start="419:30" pos:end="419:30">&amp;</operator> <name pos:start="419:32" pos:end="419:42">PPC_ALTIVEC</name></expr>)</condition> <block pos:start="419:45" pos:end="427:9">{<block_content pos:start="421:13" pos:end="425:59">

            <decl_stmt pos:start="421:13" pos:end="421:66"><decl pos:start="421:13" pos:end="421:65"><type pos:start="421:13" pos:end="421:20"><name pos:start="421:13" pos:end="421:20">uint32_t</name></type> <name pos:start="421:22" pos:end="421:24">vmx</name> <init pos:start="421:26" pos:end="421:65">= <expr pos:start="421:28" pos:end="421:65"><ternary pos:start="421:28" pos:end="421:65"><condition pos:start="421:28" pos:end="421:59"><expr pos:start="421:28" pos:end="421:57"><operator pos:start="421:28" pos:end="421:28">(</operator><name pos:start="421:29" pos:end="421:45"><name pos:start="421:29" pos:end="421:31">env</name><operator pos:start="421:32" pos:end="421:33">-&gt;</operator><name pos:start="421:34" pos:end="421:45">insns_flags2</name></name> <operator pos:start="421:47" pos:end="421:47">&amp;</operator> <name pos:start="421:49" pos:end="421:56">PPC2_VSX</name><operator pos:start="421:57" pos:end="421:57">)</operator></expr> ?</condition><then pos:start="421:61" pos:end="421:61"> <expr pos:start="421:61" pos:end="421:61"><literal type="number" pos:start="421:61" pos:end="421:61">2</literal></expr> </then><else pos:start="421:63" pos:end="421:65">: <expr pos:start="421:65" pos:end="421:65"><literal type="number" pos:start="421:65" pos:end="421:65">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="425:13" pos:end="425:59"><expr pos:start="425:13" pos:end="425:58"><call pos:start="425:13" pos:end="425:58"><name pos:start="425:13" pos:end="425:16">_FDT</name><argument_list pos:start="425:17" pos:end="425:58">(<argument pos:start="425:18" pos:end="425:57"><expr pos:start="425:18" pos:end="425:57"><operator pos:start="425:18" pos:end="425:18">(</operator><call pos:start="425:19" pos:end="425:56"><name pos:start="425:19" pos:end="425:35">fdt_property_cell</name><argument_list pos:start="425:36" pos:end="425:56">(<argument pos:start="425:37" pos:end="425:39"><expr pos:start="425:37" pos:end="425:39"><name pos:start="425:37" pos:end="425:39">fdt</name></expr></argument>, <argument pos:start="425:42" pos:end="425:50"><expr pos:start="425:42" pos:end="425:50"><literal type="string" pos:start="425:42" pos:end="425:50">"ibm,vmx"</literal></expr></argument>, <argument pos:start="425:53" pos:end="425:55"><expr pos:start="425:53" pos:end="425:55"><name pos:start="425:53" pos:end="425:55">vmx</name></expr></argument>)</argument_list></call><operator pos:start="425:57" pos:end="425:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="431:9" pos:end="435:48">/* Advertise DFP (Decimal Floating Point) if available

         *   0 / no property == no DFP

         *   1               == DFP available */</comment>

        <if_stmt pos:start="437:9" pos:end="441:9"><if pos:start="437:9" pos:end="441:9">if <condition pos:start="437:12" pos:end="437:41">(<expr pos:start="437:13" pos:end="437:40"><name pos:start="437:13" pos:end="437:29"><name pos:start="437:13" pos:end="437:15">env</name><operator pos:start="437:16" pos:end="437:17">-&gt;</operator><name pos:start="437:18" pos:end="437:29">insns_flags2</name></name> <operator pos:start="437:31" pos:end="437:31">&amp;</operator> <name pos:start="437:33" pos:end="437:40">PPC2_DFP</name></expr>)</condition> <block pos:start="437:43" pos:end="441:9">{<block_content pos:start="439:13" pos:end="439:57">

            <expr_stmt pos:start="439:13" pos:end="439:57"><expr pos:start="439:13" pos:end="439:56"><call pos:start="439:13" pos:end="439:56"><name pos:start="439:13" pos:end="439:16">_FDT</name><argument_list pos:start="439:17" pos:end="439:56">(<argument pos:start="439:18" pos:end="439:55"><expr pos:start="439:18" pos:end="439:55"><operator pos:start="439:18" pos:end="439:18">(</operator><call pos:start="439:19" pos:end="439:54"><name pos:start="439:19" pos:end="439:35">fdt_property_cell</name><argument_list pos:start="439:36" pos:end="439:54">(<argument pos:start="439:37" pos:end="439:39"><expr pos:start="439:37" pos:end="439:39"><name pos:start="439:37" pos:end="439:39">fdt</name></expr></argument>, <argument pos:start="439:42" pos:end="439:50"><expr pos:start="439:42" pos:end="439:50"><literal type="string" pos:start="439:42" pos:end="439:50">"ibm,dfp"</literal></expr></argument>, <argument pos:start="439:53" pos:end="439:53"><expr pos:start="439:53" pos:end="439:53"><literal type="number" pos:start="439:53" pos:end="439:53">1</literal></expr></argument>)</argument_list></call><operator pos:start="439:55" pos:end="439:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="445:9" pos:end="447:79"><expr pos:start="445:9" pos:end="447:78"><name pos:start="445:9" pos:end="445:28">page_sizes_prop_size</name> <operator pos:start="445:30" pos:end="445:30">=</operator> <call pos:start="445:32" pos:end="447:78"><name pos:start="445:32" pos:end="445:53">create_page_sizes_prop</name><argument_list pos:start="445:54" pos:end="447:78">(<argument pos:start="445:55" pos:end="445:57"><expr pos:start="445:55" pos:end="445:57"><name pos:start="445:55" pos:end="445:57">env</name></expr></argument>, <argument pos:start="445:60" pos:end="445:74"><expr pos:start="445:60" pos:end="445:74"><name pos:start="445:60" pos:end="445:74">page_sizes_prop</name></expr></argument>,

                                                      <argument pos:start="447:55" pos:end="447:77"><expr pos:start="447:55" pos:end="447:77"><sizeof pos:start="447:55" pos:end="447:77">sizeof<argument_list pos:start="447:61" pos:end="447:77">(<argument pos:start="447:62" pos:end="447:76"><expr pos:start="447:62" pos:end="447:76"><name pos:start="447:62" pos:end="447:76">page_sizes_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="449:9" pos:end="455:9"><if pos:start="449:9" pos:end="455:9">if <condition pos:start="449:12" pos:end="449:33">(<expr pos:start="449:13" pos:end="449:32"><name pos:start="449:13" pos:end="449:32">page_sizes_prop_size</name></expr>)</condition> <block pos:start="449:35" pos:end="455:9">{<block_content pos:start="451:13" pos:end="453:72">

            <expr_stmt pos:start="451:13" pos:end="453:72"><expr pos:start="451:13" pos:end="453:71"><call pos:start="451:13" pos:end="453:71"><name pos:start="451:13" pos:end="451:16">_FDT</name><argument_list pos:start="451:17" pos:end="453:71">(<argument pos:start="451:18" pos:end="453:70"><expr pos:start="451:18" pos:end="453:70"><operator pos:start="451:18" pos:end="451:18">(</operator><call pos:start="451:19" pos:end="453:69"><name pos:start="451:19" pos:end="451:30">fdt_property</name><argument_list pos:start="451:31" pos:end="453:69">(<argument pos:start="451:32" pos:end="451:34"><expr pos:start="451:32" pos:end="451:34"><name pos:start="451:32" pos:end="451:34">fdt</name></expr></argument>, <argument pos:start="451:37" pos:end="451:60"><expr pos:start="451:37" pos:end="451:60"><literal type="string" pos:start="451:37" pos:end="451:60">"ibm,segment-page-sizes"</literal></expr></argument>,

                               <argument pos:start="453:32" pos:end="453:46"><expr pos:start="453:32" pos:end="453:46"><name pos:start="453:32" pos:end="453:46">page_sizes_prop</name></expr></argument>, <argument pos:start="453:49" pos:end="453:68"><expr pos:start="453:49" pos:end="453:68"><name pos:start="453:49" pos:end="453:68">page_sizes_prop_size</name></expr></argument>)</argument_list></call><operator pos:start="453:70" pos:end="453:70">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="459:9" pos:end="459:34"><expr pos:start="459:9" pos:end="459:33"><call pos:start="459:9" pos:end="459:33"><name pos:start="459:9" pos:end="459:12">_FDT</name><argument_list pos:start="459:13" pos:end="459:33">(<argument pos:start="459:14" pos:end="459:32"><expr pos:start="459:14" pos:end="459:32"><operator pos:start="459:14" pos:end="459:14">(</operator><call pos:start="459:15" pos:end="459:31"><name pos:start="459:15" pos:end="459:26">fdt_end_node</name><argument_list pos:start="459:27" pos:end="459:31">(<argument pos:start="459:28" pos:end="459:30"><expr pos:start="459:28" pos:end="459:30"><name pos:start="459:28" pos:end="459:30">fdt</name></expr></argument>)</argument_list></call><operator pos:start="459:32" pos:end="459:32">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="465:5" pos:end="465:22"><expr pos:start="465:5" pos:end="465:21"><call pos:start="465:5" pos:end="465:21"><name pos:start="465:5" pos:end="465:10">g_free</name><argument_list pos:start="465:11" pos:end="465:21">(<argument pos:start="465:12" pos:end="465:20"><expr pos:start="465:12" pos:end="465:20"><name pos:start="465:12" pos:end="465:20">modelname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="469:5" pos:end="469:30"><expr pos:start="469:5" pos:end="469:29"><call pos:start="469:5" pos:end="469:29"><name pos:start="469:5" pos:end="469:8">_FDT</name><argument_list pos:start="469:9" pos:end="469:29">(<argument pos:start="469:10" pos:end="469:28"><expr pos:start="469:10" pos:end="469:28"><operator pos:start="469:10" pos:end="469:10">(</operator><call pos:start="469:11" pos:end="469:27"><name pos:start="469:11" pos:end="469:22">fdt_end_node</name><argument_list pos:start="469:23" pos:end="469:27">(<argument pos:start="469:24" pos:end="469:26"><expr pos:start="469:24" pos:end="469:26"><name pos:start="469:24" pos:end="469:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="469:28" pos:end="469:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="473:5" pos:end="473:14">/* RTAS */</comment>

    <expr_stmt pos:start="475:5" pos:end="475:40"><expr pos:start="475:5" pos:end="475:39"><call pos:start="475:5" pos:end="475:39"><name pos:start="475:5" pos:end="475:8">_FDT</name><argument_list pos:start="475:9" pos:end="475:39">(<argument pos:start="475:10" pos:end="475:38"><expr pos:start="475:10" pos:end="475:38"><operator pos:start="475:10" pos:end="475:10">(</operator><call pos:start="475:11" pos:end="475:37"><name pos:start="475:11" pos:end="475:24">fdt_begin_node</name><argument_list pos:start="475:25" pos:end="475:37">(<argument pos:start="475:26" pos:end="475:28"><expr pos:start="475:26" pos:end="475:28"><name pos:start="475:26" pos:end="475:28">fdt</name></expr></argument>, <argument pos:start="475:31" pos:end="475:36"><expr pos:start="475:31" pos:end="475:36"><literal type="string" pos:start="475:31" pos:end="475:36">"rtas"</literal></expr></argument>)</argument_list></call><operator pos:start="475:38" pos:end="475:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="479:5" pos:end="481:48"><expr pos:start="479:5" pos:end="481:47"><call pos:start="479:5" pos:end="481:47"><name pos:start="479:5" pos:end="479:8">_FDT</name><argument_list pos:start="479:9" pos:end="481:47">(<argument pos:start="479:10" pos:end="481:46"><expr pos:start="479:10" pos:end="481:46"><operator pos:start="479:10" pos:end="479:10">(</operator><call pos:start="479:11" pos:end="481:45"><name pos:start="479:11" pos:end="479:22">fdt_property</name><argument_list pos:start="479:23" pos:end="481:45">(<argument pos:start="479:24" pos:end="479:26"><expr pos:start="479:24" pos:end="479:26"><name pos:start="479:24" pos:end="479:26">fdt</name></expr></argument>, <argument pos:start="479:29" pos:end="479:52"><expr pos:start="479:29" pos:end="479:52"><literal type="string" pos:start="479:29" pos:end="479:52">"ibm,hypertas-functions"</literal></expr></argument>, <argument pos:start="479:55" pos:end="479:67"><expr pos:start="479:55" pos:end="479:67"><name pos:start="479:55" pos:end="479:67">hypertas_prop</name></expr></argument>,

                       <argument pos:start="481:24" pos:end="481:44"><expr pos:start="481:24" pos:end="481:44"><sizeof pos:start="481:24" pos:end="481:44">sizeof<argument_list pos:start="481:30" pos:end="481:44">(<argument pos:start="481:31" pos:end="481:43"><expr pos:start="481:31" pos:end="481:43"><name pos:start="481:31" pos:end="481:43">hypertas_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="481:46" pos:end="481:46">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="483:5" pos:end="485:53"><expr pos:start="483:5" pos:end="485:52"><call pos:start="483:5" pos:end="485:52"><name pos:start="483:5" pos:end="483:8">_FDT</name><argument_list pos:start="483:9" pos:end="485:52">(<argument pos:start="483:10" pos:end="485:51"><expr pos:start="483:10" pos:end="485:51"><operator pos:start="483:10" pos:end="483:10">(</operator><call pos:start="483:11" pos:end="485:50"><name pos:start="483:11" pos:end="483:22">fdt_property</name><argument_list pos:start="483:23" pos:end="485:50">(<argument pos:start="483:24" pos:end="483:26"><expr pos:start="483:24" pos:end="483:26"><name pos:start="483:24" pos:end="483:26">fdt</name></expr></argument>, <argument pos:start="483:29" pos:end="483:53"><expr pos:start="483:29" pos:end="483:53"><literal type="string" pos:start="483:29" pos:end="483:53">"qemu,hypertas-functions"</literal></expr></argument>, <argument pos:start="483:56" pos:end="483:73"><expr pos:start="483:56" pos:end="483:73"><name pos:start="483:56" pos:end="483:73">qemu_hypertas_prop</name></expr></argument>,

                       <argument pos:start="485:24" pos:end="485:49"><expr pos:start="485:24" pos:end="485:49"><sizeof pos:start="485:24" pos:end="485:49">sizeof<argument_list pos:start="485:30" pos:end="485:49">(<argument pos:start="485:31" pos:end="485:48"><expr pos:start="485:31" pos:end="485:48"><name pos:start="485:31" pos:end="485:48">qemu_hypertas_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="485:51" pos:end="485:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="489:5" pos:end="491:40"><expr pos:start="489:5" pos:end="491:39"><call pos:start="489:5" pos:end="491:39"><name pos:start="489:5" pos:end="489:8">_FDT</name><argument_list pos:start="489:9" pos:end="491:39">(<argument pos:start="489:10" pos:end="491:38"><expr pos:start="489:10" pos:end="491:38"><operator pos:start="489:10" pos:end="489:10">(</operator><call pos:start="489:11" pos:end="491:37"><name pos:start="489:11" pos:end="489:22">fdt_property</name><argument_list pos:start="489:23" pos:end="491:37">(<argument pos:start="489:24" pos:end="489:26"><expr pos:start="489:24" pos:end="489:26"><name pos:start="489:24" pos:end="489:26">fdt</name></expr></argument>, <argument pos:start="489:29" pos:end="489:64"><expr pos:start="489:29" pos:end="489:64"><literal type="string" pos:start="489:29" pos:end="489:64">"ibm,associativity-reference-points"</literal></expr></argument>,

        <argument pos:start="491:9" pos:end="491:17"><expr pos:start="491:9" pos:end="491:17"><name pos:start="491:9" pos:end="491:17">refpoints</name></expr></argument>, <argument pos:start="491:20" pos:end="491:36"><expr pos:start="491:20" pos:end="491:36"><sizeof pos:start="491:20" pos:end="491:36">sizeof<argument_list pos:start="491:26" pos:end="491:36">(<argument pos:start="491:27" pos:end="491:35"><expr pos:start="491:27" pos:end="491:35"><name pos:start="491:27" pos:end="491:35">refpoints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="491:38" pos:end="491:38">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="495:5" pos:end="495:30"><expr pos:start="495:5" pos:end="495:29"><call pos:start="495:5" pos:end="495:29"><name pos:start="495:5" pos:end="495:8">_FDT</name><argument_list pos:start="495:9" pos:end="495:29">(<argument pos:start="495:10" pos:end="495:28"><expr pos:start="495:10" pos:end="495:28"><operator pos:start="495:10" pos:end="495:10">(</operator><call pos:start="495:11" pos:end="495:27"><name pos:start="495:11" pos:end="495:22">fdt_end_node</name><argument_list pos:start="495:23" pos:end="495:27">(<argument pos:start="495:24" pos:end="495:26"><expr pos:start="495:24" pos:end="495:26"><name pos:start="495:24" pos:end="495:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="495:28" pos:end="495:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="499:5" pos:end="499:30">/* interrupt controller */</comment>

    <expr_stmt pos:start="501:5" pos:end="501:56"><expr pos:start="501:5" pos:end="501:55"><call pos:start="501:5" pos:end="501:55"><name pos:start="501:5" pos:end="501:8">_FDT</name><argument_list pos:start="501:9" pos:end="501:55">(<argument pos:start="501:10" pos:end="501:54"><expr pos:start="501:10" pos:end="501:54"><operator pos:start="501:10" pos:end="501:10">(</operator><call pos:start="501:11" pos:end="501:53"><name pos:start="501:11" pos:end="501:24">fdt_begin_node</name><argument_list pos:start="501:25" pos:end="501:53">(<argument pos:start="501:26" pos:end="501:28"><expr pos:start="501:26" pos:end="501:28"><name pos:start="501:26" pos:end="501:28">fdt</name></expr></argument>, <argument pos:start="501:31" pos:end="501:52"><expr pos:start="501:31" pos:end="501:52"><literal type="string" pos:start="501:31" pos:end="501:52">"interrupt-controller"</literal></expr></argument>)</argument_list></call><operator pos:start="501:54" pos:end="501:54">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="505:5" pos:end="507:75"><expr pos:start="505:5" pos:end="507:74"><call pos:start="505:5" pos:end="507:74"><name pos:start="505:5" pos:end="505:8">_FDT</name><argument_list pos:start="505:9" pos:end="507:74">(<argument pos:start="505:10" pos:end="507:73"><expr pos:start="505:10" pos:end="507:73"><operator pos:start="505:10" pos:end="505:10">(</operator><call pos:start="505:11" pos:end="507:72"><name pos:start="505:11" pos:end="505:29">fdt_property_string</name><argument_list pos:start="505:30" pos:end="507:72">(<argument pos:start="505:31" pos:end="505:33"><expr pos:start="505:31" pos:end="505:33"><name pos:start="505:31" pos:end="505:33">fdt</name></expr></argument>, <argument pos:start="505:36" pos:end="505:48"><expr pos:start="505:36" pos:end="505:48"><literal type="string" pos:start="505:36" pos:end="505:48">"device_type"</literal></expr></argument>,

                              <argument pos:start="507:31" pos:end="507:71"><expr pos:start="507:31" pos:end="507:71"><literal type="string" pos:start="507:31" pos:end="507:71">"PowerPC-External-Interrupt-Presentation"</literal></expr></argument>)</argument_list></call><operator pos:start="507:73" pos:end="507:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="509:5" pos:end="509:67"><expr pos:start="509:5" pos:end="509:66"><call pos:start="509:5" pos:end="509:66"><name pos:start="509:5" pos:end="509:8">_FDT</name><argument_list pos:start="509:9" pos:end="509:66">(<argument pos:start="509:10" pos:end="509:65"><expr pos:start="509:10" pos:end="509:65"><operator pos:start="509:10" pos:end="509:10">(</operator><call pos:start="509:11" pos:end="509:64"><name pos:start="509:11" pos:end="509:29">fdt_property_string</name><argument_list pos:start="509:30" pos:end="509:64">(<argument pos:start="509:31" pos:end="509:33"><expr pos:start="509:31" pos:end="509:33"><name pos:start="509:31" pos:end="509:33">fdt</name></expr></argument>, <argument pos:start="509:36" pos:end="509:47"><expr pos:start="509:36" pos:end="509:47"><literal type="string" pos:start="509:36" pos:end="509:47">"compatible"</literal></expr></argument>, <argument pos:start="509:50" pos:end="509:63"><expr pos:start="509:50" pos:end="509:63"><literal type="string" pos:start="509:50" pos:end="509:63">"IBM,ppc-xicp"</literal></expr></argument>)</argument_list></call><operator pos:start="509:65" pos:end="509:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="511:5" pos:end="511:63"><expr pos:start="511:5" pos:end="511:62"><call pos:start="511:5" pos:end="511:62"><name pos:start="511:5" pos:end="511:8">_FDT</name><argument_list pos:start="511:9" pos:end="511:62">(<argument pos:start="511:10" pos:end="511:61"><expr pos:start="511:10" pos:end="511:61"><operator pos:start="511:10" pos:end="511:10">(</operator><call pos:start="511:11" pos:end="511:60"><name pos:start="511:11" pos:end="511:22">fdt_property</name><argument_list pos:start="511:23" pos:end="511:60">(<argument pos:start="511:24" pos:end="511:26"><expr pos:start="511:24" pos:end="511:26"><name pos:start="511:24" pos:end="511:26">fdt</name></expr></argument>, <argument pos:start="511:29" pos:end="511:50"><expr pos:start="511:29" pos:end="511:50"><literal type="string" pos:start="511:29" pos:end="511:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="511:53" pos:end="511:56"><expr pos:start="511:53" pos:end="511:56"><name pos:start="511:53" pos:end="511:56">NULL</name></expr></argument>, <argument pos:start="511:59" pos:end="511:59"><expr pos:start="511:59" pos:end="511:59"><literal type="number" pos:start="511:59" pos:end="511:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="511:61" pos:end="511:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="513:5" pos:end="517:63"><expr pos:start="513:5" pos:end="517:62"><call pos:start="513:5" pos:end="517:62"><name pos:start="513:5" pos:end="513:8">_FDT</name><argument_list pos:start="513:9" pos:end="517:62">(<argument pos:start="513:10" pos:end="517:61"><expr pos:start="513:10" pos:end="517:61"><operator pos:start="513:10" pos:end="513:10">(</operator><call pos:start="513:11" pos:end="517:60"><name pos:start="513:11" pos:end="513:22">fdt_property</name><argument_list pos:start="513:23" pos:end="517:60">(<argument pos:start="513:24" pos:end="513:26"><expr pos:start="513:24" pos:end="513:26"><name pos:start="513:24" pos:end="513:26">fdt</name></expr></argument>, <argument pos:start="513:29" pos:end="513:57"><expr pos:start="513:29" pos:end="513:57"><literal type="string" pos:start="513:29" pos:end="513:57">"ibm,interrupt-server-ranges"</literal></expr></argument>,

                       <argument pos:start="515:24" pos:end="515:51"><expr pos:start="515:24" pos:end="515:51"><name pos:start="515:24" pos:end="515:51">interrupt_server_ranges_prop</name></expr></argument>,

                       <argument pos:start="517:24" pos:end="517:59"><expr pos:start="517:24" pos:end="517:59"><sizeof pos:start="517:24" pos:end="517:59">sizeof<argument_list pos:start="517:30" pos:end="517:59">(<argument pos:start="517:31" pos:end="517:58"><expr pos:start="517:31" pos:end="517:58"><name pos:start="517:31" pos:end="517:58">interrupt_server_ranges_prop</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="517:61" pos:end="517:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="519:5" pos:end="519:58"><expr pos:start="519:5" pos:end="519:57"><call pos:start="519:5" pos:end="519:57"><name pos:start="519:5" pos:end="519:8">_FDT</name><argument_list pos:start="519:9" pos:end="519:57">(<argument pos:start="519:10" pos:end="519:56"><expr pos:start="519:10" pos:end="519:56"><operator pos:start="519:10" pos:end="519:10">(</operator><call pos:start="519:11" pos:end="519:55"><name pos:start="519:11" pos:end="519:27">fdt_property_cell</name><argument_list pos:start="519:28" pos:end="519:55">(<argument pos:start="519:29" pos:end="519:31"><expr pos:start="519:29" pos:end="519:31"><name pos:start="519:29" pos:end="519:31">fdt</name></expr></argument>, <argument pos:start="519:34" pos:end="519:51"><expr pos:start="519:34" pos:end="519:51"><literal type="string" pos:start="519:34" pos:end="519:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="519:54" pos:end="519:54"><expr pos:start="519:54" pos:end="519:54"><literal type="number" pos:start="519:54" pos:end="519:54">2</literal></expr></argument>)</argument_list></call><operator pos:start="519:56" pos:end="519:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="521:5" pos:end="521:66"><expr pos:start="521:5" pos:end="521:65"><call pos:start="521:5" pos:end="521:65"><name pos:start="521:5" pos:end="521:8">_FDT</name><argument_list pos:start="521:9" pos:end="521:65">(<argument pos:start="521:10" pos:end="521:64"><expr pos:start="521:10" pos:end="521:64"><operator pos:start="521:10" pos:end="521:10">(</operator><call pos:start="521:11" pos:end="521:63"><name pos:start="521:11" pos:end="521:27">fdt_property_cell</name><argument_list pos:start="521:28" pos:end="521:63">(<argument pos:start="521:29" pos:end="521:31"><expr pos:start="521:29" pos:end="521:31"><name pos:start="521:29" pos:end="521:31">fdt</name></expr></argument>, <argument pos:start="521:34" pos:end="521:48"><expr pos:start="521:34" pos:end="521:48"><literal type="string" pos:start="521:34" pos:end="521:48">"linux,phandle"</literal></expr></argument>, <argument pos:start="521:51" pos:end="521:62"><expr pos:start="521:51" pos:end="521:62"><name pos:start="521:51" pos:end="521:62">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="521:64" pos:end="521:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="523:5" pos:end="523:60"><expr pos:start="523:5" pos:end="523:59"><call pos:start="523:5" pos:end="523:59"><name pos:start="523:5" pos:end="523:8">_FDT</name><argument_list pos:start="523:9" pos:end="523:59">(<argument pos:start="523:10" pos:end="523:58"><expr pos:start="523:10" pos:end="523:58"><operator pos:start="523:10" pos:end="523:10">(</operator><call pos:start="523:11" pos:end="523:57"><name pos:start="523:11" pos:end="523:27">fdt_property_cell</name><argument_list pos:start="523:28" pos:end="523:57">(<argument pos:start="523:29" pos:end="523:31"><expr pos:start="523:29" pos:end="523:31"><name pos:start="523:29" pos:end="523:31">fdt</name></expr></argument>, <argument pos:start="523:34" pos:end="523:42"><expr pos:start="523:34" pos:end="523:42"><literal type="string" pos:start="523:34" pos:end="523:42">"phandle"</literal></expr></argument>, <argument pos:start="523:45" pos:end="523:56"><expr pos:start="523:45" pos:end="523:56"><name pos:start="523:45" pos:end="523:56">PHANDLE_XICP</name></expr></argument>)</argument_list></call><operator pos:start="523:58" pos:end="523:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="527:5" pos:end="527:30"><expr pos:start="527:5" pos:end="527:29"><call pos:start="527:5" pos:end="527:29"><name pos:start="527:5" pos:end="527:8">_FDT</name><argument_list pos:start="527:9" pos:end="527:29">(<argument pos:start="527:10" pos:end="527:28"><expr pos:start="527:10" pos:end="527:28"><operator pos:start="527:10" pos:end="527:10">(</operator><call pos:start="527:11" pos:end="527:27"><name pos:start="527:11" pos:end="527:22">fdt_end_node</name><argument_list pos:start="527:23" pos:end="527:27">(<argument pos:start="527:24" pos:end="527:26"><expr pos:start="527:24" pos:end="527:26"><name pos:start="527:24" pos:end="527:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="527:28" pos:end="527:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="531:5" pos:end="531:17">/* vdevice */</comment>

    <expr_stmt pos:start="533:5" pos:end="533:43"><expr pos:start="533:5" pos:end="533:42"><call pos:start="533:5" pos:end="533:42"><name pos:start="533:5" pos:end="533:8">_FDT</name><argument_list pos:start="533:9" pos:end="533:42">(<argument pos:start="533:10" pos:end="533:41"><expr pos:start="533:10" pos:end="533:41"><operator pos:start="533:10" pos:end="533:10">(</operator><call pos:start="533:11" pos:end="533:40"><name pos:start="533:11" pos:end="533:24">fdt_begin_node</name><argument_list pos:start="533:25" pos:end="533:40">(<argument pos:start="533:26" pos:end="533:28"><expr pos:start="533:26" pos:end="533:28"><name pos:start="533:26" pos:end="533:28">fdt</name></expr></argument>, <argument pos:start="533:31" pos:end="533:39"><expr pos:start="533:31" pos:end="533:39"><literal type="string" pos:start="533:31" pos:end="533:39">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="533:41" pos:end="533:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="537:5" pos:end="537:63"><expr pos:start="537:5" pos:end="537:62"><call pos:start="537:5" pos:end="537:62"><name pos:start="537:5" pos:end="537:8">_FDT</name><argument_list pos:start="537:9" pos:end="537:62">(<argument pos:start="537:10" pos:end="537:61"><expr pos:start="537:10" pos:end="537:61"><operator pos:start="537:10" pos:end="537:10">(</operator><call pos:start="537:11" pos:end="537:60"><name pos:start="537:11" pos:end="537:29">fdt_property_string</name><argument_list pos:start="537:30" pos:end="537:60">(<argument pos:start="537:31" pos:end="537:33"><expr pos:start="537:31" pos:end="537:33"><name pos:start="537:31" pos:end="537:33">fdt</name></expr></argument>, <argument pos:start="537:36" pos:end="537:48"><expr pos:start="537:36" pos:end="537:48"><literal type="string" pos:start="537:36" pos:end="537:48">"device_type"</literal></expr></argument>, <argument pos:start="537:51" pos:end="537:59"><expr pos:start="537:51" pos:end="537:59"><literal type="string" pos:start="537:51" pos:end="537:59">"vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="537:61" pos:end="537:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="539:5" pos:end="539:66"><expr pos:start="539:5" pos:end="539:65"><call pos:start="539:5" pos:end="539:65"><name pos:start="539:5" pos:end="539:8">_FDT</name><argument_list pos:start="539:9" pos:end="539:65">(<argument pos:start="539:10" pos:end="539:64"><expr pos:start="539:10" pos:end="539:64"><operator pos:start="539:10" pos:end="539:10">(</operator><call pos:start="539:11" pos:end="539:63"><name pos:start="539:11" pos:end="539:29">fdt_property_string</name><argument_list pos:start="539:30" pos:end="539:63">(<argument pos:start="539:31" pos:end="539:33"><expr pos:start="539:31" pos:end="539:33"><name pos:start="539:31" pos:end="539:33">fdt</name></expr></argument>, <argument pos:start="539:36" pos:end="539:47"><expr pos:start="539:36" pos:end="539:47"><literal type="string" pos:start="539:36" pos:end="539:47">"compatible"</literal></expr></argument>, <argument pos:start="539:50" pos:end="539:62"><expr pos:start="539:50" pos:end="539:62"><literal type="string" pos:start="539:50" pos:end="539:62">"IBM,vdevice"</literal></expr></argument>)</argument_list></call><operator pos:start="539:64" pos:end="539:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="541:5" pos:end="541:58"><expr pos:start="541:5" pos:end="541:57"><call pos:start="541:5" pos:end="541:57"><name pos:start="541:5" pos:end="541:8">_FDT</name><argument_list pos:start="541:9" pos:end="541:57">(<argument pos:start="541:10" pos:end="541:56"><expr pos:start="541:10" pos:end="541:56"><operator pos:start="541:10" pos:end="541:10">(</operator><call pos:start="541:11" pos:end="541:55"><name pos:start="541:11" pos:end="541:27">fdt_property_cell</name><argument_list pos:start="541:28" pos:end="541:55">(<argument pos:start="541:29" pos:end="541:31"><expr pos:start="541:29" pos:end="541:31"><name pos:start="541:29" pos:end="541:31">fdt</name></expr></argument>, <argument pos:start="541:34" pos:end="541:49"><expr pos:start="541:34" pos:end="541:49"><literal type="string" pos:start="541:34" pos:end="541:49">"#address-cells"</literal></expr></argument>, <argument pos:start="541:52" pos:end="541:54"><expr pos:start="541:52" pos:end="541:54"><literal type="number" pos:start="541:52" pos:end="541:54">0x1</literal></expr></argument>)</argument_list></call><operator pos:start="541:56" pos:end="541:56">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="543:5" pos:end="543:55"><expr pos:start="543:5" pos:end="543:54"><call pos:start="543:5" pos:end="543:54"><name pos:start="543:5" pos:end="543:8">_FDT</name><argument_list pos:start="543:9" pos:end="543:54">(<argument pos:start="543:10" pos:end="543:53"><expr pos:start="543:10" pos:end="543:53"><operator pos:start="543:10" pos:end="543:10">(</operator><call pos:start="543:11" pos:end="543:52"><name pos:start="543:11" pos:end="543:27">fdt_property_cell</name><argument_list pos:start="543:28" pos:end="543:52">(<argument pos:start="543:29" pos:end="543:31"><expr pos:start="543:29" pos:end="543:31"><name pos:start="543:29" pos:end="543:31">fdt</name></expr></argument>, <argument pos:start="543:34" pos:end="543:46"><expr pos:start="543:34" pos:end="543:46"><literal type="string" pos:start="543:34" pos:end="543:46">"#size-cells"</literal></expr></argument>, <argument pos:start="543:49" pos:end="543:51"><expr pos:start="543:49" pos:end="543:51"><literal type="number" pos:start="543:49" pos:end="543:51">0x0</literal></expr></argument>)</argument_list></call><operator pos:start="543:53" pos:end="543:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="545:5" pos:end="545:60"><expr pos:start="545:5" pos:end="545:59"><call pos:start="545:5" pos:end="545:59"><name pos:start="545:5" pos:end="545:8">_FDT</name><argument_list pos:start="545:9" pos:end="545:59">(<argument pos:start="545:10" pos:end="545:58"><expr pos:start="545:10" pos:end="545:58"><operator pos:start="545:10" pos:end="545:10">(</operator><call pos:start="545:11" pos:end="545:57"><name pos:start="545:11" pos:end="545:27">fdt_property_cell</name><argument_list pos:start="545:28" pos:end="545:57">(<argument pos:start="545:29" pos:end="545:31"><expr pos:start="545:29" pos:end="545:31"><name pos:start="545:29" pos:end="545:31">fdt</name></expr></argument>, <argument pos:start="545:34" pos:end="545:51"><expr pos:start="545:34" pos:end="545:51"><literal type="string" pos:start="545:34" pos:end="545:51">"#interrupt-cells"</literal></expr></argument>, <argument pos:start="545:54" pos:end="545:56"><expr pos:start="545:54" pos:end="545:56"><literal type="number" pos:start="545:54" pos:end="545:56">0x2</literal></expr></argument>)</argument_list></call><operator pos:start="545:58" pos:end="545:58">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="547:5" pos:end="547:63"><expr pos:start="547:5" pos:end="547:62"><call pos:start="547:5" pos:end="547:62"><name pos:start="547:5" pos:end="547:8">_FDT</name><argument_list pos:start="547:9" pos:end="547:62">(<argument pos:start="547:10" pos:end="547:61"><expr pos:start="547:10" pos:end="547:61"><operator pos:start="547:10" pos:end="547:10">(</operator><call pos:start="547:11" pos:end="547:60"><name pos:start="547:11" pos:end="547:22">fdt_property</name><argument_list pos:start="547:23" pos:end="547:60">(<argument pos:start="547:24" pos:end="547:26"><expr pos:start="547:24" pos:end="547:26"><name pos:start="547:24" pos:end="547:26">fdt</name></expr></argument>, <argument pos:start="547:29" pos:end="547:50"><expr pos:start="547:29" pos:end="547:50"><literal type="string" pos:start="547:29" pos:end="547:50">"interrupt-controller"</literal></expr></argument>, <argument pos:start="547:53" pos:end="547:56"><expr pos:start="547:53" pos:end="547:56"><name pos:start="547:53" pos:end="547:56">NULL</name></expr></argument>, <argument pos:start="547:59" pos:end="547:59"><expr pos:start="547:59" pos:end="547:59"><literal type="number" pos:start="547:59" pos:end="547:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="547:61" pos:end="547:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="551:5" pos:end="551:30"><expr pos:start="551:5" pos:end="551:29"><call pos:start="551:5" pos:end="551:29"><name pos:start="551:5" pos:end="551:8">_FDT</name><argument_list pos:start="551:9" pos:end="551:29">(<argument pos:start="551:10" pos:end="551:28"><expr pos:start="551:10" pos:end="551:28"><operator pos:start="551:10" pos:end="551:10">(</operator><call pos:start="551:11" pos:end="551:27"><name pos:start="551:11" pos:end="551:22">fdt_end_node</name><argument_list pos:start="551:23" pos:end="551:27">(<argument pos:start="551:24" pos:end="551:26"><expr pos:start="551:24" pos:end="551:26"><name pos:start="551:24" pos:end="551:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="551:28" pos:end="551:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="555:5" pos:end="555:30"><expr pos:start="555:5" pos:end="555:29"><call pos:start="555:5" pos:end="555:29"><name pos:start="555:5" pos:end="555:8">_FDT</name><argument_list pos:start="555:9" pos:end="555:29">(<argument pos:start="555:10" pos:end="555:28"><expr pos:start="555:10" pos:end="555:28"><operator pos:start="555:10" pos:end="555:10">(</operator><call pos:start="555:11" pos:end="555:27"><name pos:start="555:11" pos:end="555:22">fdt_end_node</name><argument_list pos:start="555:23" pos:end="555:27">(<argument pos:start="555:24" pos:end="555:26"><expr pos:start="555:24" pos:end="555:26"><name pos:start="555:24" pos:end="555:26">fdt</name></expr></argument>)</argument_list></call><operator pos:start="555:28" pos:end="555:28">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="555:32" pos:end="555:52">/* close root node */</comment>

    <expr_stmt pos:start="557:5" pos:end="557:28"><expr pos:start="557:5" pos:end="557:27"><call pos:start="557:5" pos:end="557:27"><name pos:start="557:5" pos:end="557:8">_FDT</name><argument_list pos:start="557:9" pos:end="557:27">(<argument pos:start="557:10" pos:end="557:26"><expr pos:start="557:10" pos:end="557:26"><operator pos:start="557:10" pos:end="557:10">(</operator><call pos:start="557:11" pos:end="557:25"><name pos:start="557:11" pos:end="557:20">fdt_finish</name><argument_list pos:start="557:21" pos:end="557:25">(<argument pos:start="557:22" pos:end="557:24"><expr pos:start="557:22" pos:end="557:24"><name pos:start="557:22" pos:end="557:24">fdt</name></expr></argument>)</argument_list></call><operator pos:start="557:26" pos:end="557:26">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="561:5" pos:end="561:15">return <expr pos:start="561:12" pos:end="561:14"><name pos:start="561:12" pos:end="561:14">fdt</name></expr>;</return>

</block_content>}</block></function>
</unit>
