<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13786.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:22">ff_filter_samples</name><parameter_list pos:start="1:23" pos:end="1:73">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:41"><name pos:start="1:24" pos:end="1:35">AVFilterLink</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:41">link</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:72"><decl pos:start="1:44" pos:end="1:72"><type pos:start="1:44" pos:end="1:72"><name pos:start="1:44" pos:end="1:60">AVFilterBufferRef</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:72">samplesref</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:40">

    <function_decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">void</name></type> (<modifier pos:start="5:11" pos:end="5:11">*</modifier><name pos:start="5:12" pos:end="5:25">filter_samples</name>)<parameter_list pos:start="5:27" pos:end="5:63">(<parameter pos:start="5:28" pos:end="5:41"><decl pos:start="5:28" pos:end="5:41"><type pos:start="5:28" pos:end="5:41"><name pos:start="5:28" pos:end="5:39">AVFilterLink</name> <modifier pos:start="5:41" pos:end="5:41">*</modifier></type></decl></parameter>, <parameter pos:start="5:44" pos:end="5:62"><decl pos:start="5:44" pos:end="5:62"><type pos:start="5:44" pos:end="5:62"><name pos:start="5:44" pos:end="5:60">AVFilterBufferRef</name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type></decl></parameter>)</parameter_list>;</function_decl>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVFilterPad</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dst</name> <init pos:start="7:22" pos:end="7:35">= <expr pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:35"><name pos:start="7:24" pos:end="7:27">link</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:35">dstpad</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><call pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:20">FF_DPRINTF_START</name><argument_list pos:start="11:21" pos:end="11:42">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">NULL</name></expr></argument>, <argument pos:start="11:28" pos:end="11:41"><expr pos:start="11:28" pos:end="11:41"><name pos:start="11:28" pos:end="11:41">filter_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="11:45" pos:end="11:72"><expr pos:start="11:45" pos:end="11:71"><call pos:start="11:45" pos:end="11:71"><name pos:start="11:45" pos:end="11:56">ff_dlog_link</name><argument_list pos:start="11:57" pos:end="11:71">(<argument pos:start="11:58" pos:end="11:61"><expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">NULL</name></expr></argument>, <argument pos:start="11:64" pos:end="11:67"><expr pos:start="11:64" pos:end="11:67"><name pos:start="11:64" pos:end="11:67">link</name></expr></argument>, <argument pos:start="11:70" pos:end="11:70"><expr pos:start="11:70" pos:end="11:70"><literal type="number" pos:start="11:70" pos:end="11:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="17:51"><if pos:start="15:5" pos:end="17:51">if <condition pos:start="15:8" pos:end="15:48">(<expr pos:start="15:9" pos:end="15:47"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:24">filter_samples</name> <operator pos:start="15:26" pos:end="15:26">=</operator> <name pos:start="15:28" pos:end="15:46"><name pos:start="15:28" pos:end="15:30">dst</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:46">filter_samples</name></name><operator pos:start="15:47" pos:end="15:47">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:51"><block_content pos:start="17:9" pos:end="17:51">

        <expr_stmt pos:start="17:9" pos:end="17:51"><expr pos:start="17:9" pos:end="17:50"><name pos:start="17:9" pos:end="17:22">filter_samples</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <name pos:start="17:26" pos:end="17:50">ff_default_filter_samples</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:80">/* prepare to copy the samples if the buffer has insufficient permissions */</comment>

    <if_stmt pos:start="23:5" pos:end="65:35"><if pos:start="23:5" pos:end="63:5">if <condition pos:start="23:8" pos:end="25:43">(<expr pos:start="23:9" pos:end="25:42"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:23"><name pos:start="23:10" pos:end="23:12">dst</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:23">min_perms</name></name> <operator pos:start="23:25" pos:end="23:25">&amp;</operator> <name pos:start="23:27" pos:end="23:43"><name pos:start="23:27" pos:end="23:36">samplesref</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:43">perms</name></name><operator pos:start="23:44" pos:end="23:44">)</operator> <operator pos:start="23:46" pos:end="23:47">!=</operator> <name pos:start="23:49" pos:end="23:62"><name pos:start="23:49" pos:end="23:51">dst</name><operator pos:start="23:52" pos:end="23:53">-&gt;</operator><name pos:start="23:54" pos:end="23:62">min_perms</name></name> <operator pos:start="23:64" pos:end="23:65">||</operator>

        <name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:11">dst</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">rej_perms</name></name> <operator pos:start="25:24" pos:end="25:24">&amp;</operator> <name pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:35">samplesref</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:42">perms</name></name></expr>)</condition> <block pos:start="25:45" pos:end="63:5">{<block_content pos:start="27:9" pos:end="61:42">

        <decl_stmt pos:start="27:9" pos:end="27:69"><decl pos:start="27:9" pos:end="27:14"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type>  <name pos:start="27:14" pos:end="27:14">i</name></decl>, <decl pos:start="27:17" pos:end="27:68"><type ref="prev" pos:start="27:9" pos:end="27:11"/><name pos:start="27:17" pos:end="27:22">planar</name> <init pos:start="27:24" pos:end="27:68">= <expr pos:start="27:26" pos:end="27:68"><call pos:start="27:26" pos:end="27:68"><name pos:start="27:26" pos:end="27:48">av_sample_fmt_is_planar</name><argument_list pos:start="27:49" pos:end="27:68">(<argument pos:start="27:50" pos:end="27:67"><expr pos:start="27:50" pos:end="27:67"><name pos:start="27:50" pos:end="27:67"><name pos:start="27:50" pos:end="27:59">samplesref</name><operator pos:start="27:60" pos:end="27:61">-&gt;</operator><name pos:start="27:62" pos:end="27:67">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="31:90"><decl pos:start="29:9" pos:end="31:89"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:18">planes</name> <init pos:start="29:20" pos:end="31:89">= <expr pos:start="29:22" pos:end="31:89"><ternary pos:start="29:22" pos:end="31:89"><condition pos:start="29:22" pos:end="29:30"><expr pos:start="29:22" pos:end="29:28"><operator pos:start="29:22" pos:end="29:22">!</operator><name pos:start="29:23" pos:end="29:28">planar</name></expr> ?</condition><then pos:start="29:32" pos:end="29:32"> <expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">1</literal></expr></then><else pos:start="29:33" pos:end="31:89">:

                     <expr pos:start="31:22" pos:end="31:89"><call pos:start="31:22" pos:end="31:89"><name pos:start="31:22" pos:end="31:54">av_get_channel_layout_nb_channels</name><argument_list pos:start="31:55" pos:end="31:89">(<argument pos:start="31:56" pos:end="31:88"><expr pos:start="31:56" pos:end="31:88"><name pos:start="31:56" pos:end="31:88"><name pos:start="31:56" pos:end="31:65">samplesref</name><operator pos:start="31:66" pos:end="31:67">-&gt;</operator><name pos:start="31:68" pos:end="31:72">audio</name><operator pos:start="31:73" pos:end="31:74">-&gt;</operator><name pos:start="31:75" pos:end="31:88">channel_layout</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="35:9" pos:end="39:84"><expr pos:start="35:9" pos:end="39:83"><call pos:start="35:9" pos:end="39:83"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="39:83">(<argument pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:24"><name pos:start="35:16" pos:end="35:19">link</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">dst</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:85"><expr pos:start="37:16" pos:end="37:85"><literal type="string" pos:start="37:16" pos:end="37:85">"Copying audio data in avfilter (have perms %x, need %x, reject %x)\n"</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:32"><expr pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:32"><name pos:start="39:16" pos:end="39:25">samplesref</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:32">perms</name></name></expr></argument>, <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:38">link</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:46">dstpad</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:57">min_perms</name></name></expr></argument>, <argument pos:start="39:60" pos:end="39:82"><expr pos:start="39:60" pos:end="39:82"><name pos:start="39:60" pos:end="39:82"><name pos:start="39:60" pos:end="39:63">link</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:71">dstpad</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:82">rej_perms</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="45:83"><expr pos:start="43:9" pos:end="45:82"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:12">link</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:21">cur_buf</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <call pos:start="43:25" pos:end="45:82"><name pos:start="43:25" pos:end="43:51">ff_default_get_audio_buffer</name><argument_list pos:start="43:52" pos:end="45:82">(<argument pos:start="43:53" pos:end="43:56"><expr pos:start="43:53" pos:end="43:56"><name pos:start="43:53" pos:end="43:56">link</name></expr></argument>, <argument pos:start="43:59" pos:end="43:72"><expr pos:start="43:59" pos:end="43:72"><name pos:start="43:59" pos:end="43:72"><name pos:start="43:59" pos:end="43:61">dst</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:72">min_perms</name></name></expr></argument>,

                                                    <argument pos:start="45:53" pos:end="45:81"><expr pos:start="45:53" pos:end="45:81"><name pos:start="45:53" pos:end="45:81"><name pos:start="45:53" pos:end="45:62">samplesref</name><operator pos:start="45:63" pos:end="45:64">-&gt;</operator><name pos:start="45:65" pos:end="45:69">audio</name><operator pos:start="45:70" pos:end="45:71">-&gt;</operator><name pos:start="45:72" pos:end="45:81">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:60"><expr pos:start="47:9" pos:end="47:59"><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:12">link</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:21">cur_buf</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:26">pts</name></name>                <operator pos:start="47:43" pos:end="47:43">=</operator> <name pos:start="47:45" pos:end="47:59"><name pos:start="47:45" pos:end="47:54">samplesref</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:59">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:75"><expr pos:start="49:9" pos:end="49:74"><name pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:12">link</name><operator pos:start="49:13" pos:end="49:14">-&gt;</operator><name pos:start="49:15" pos:end="49:21">cur_buf</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">audio</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:41">sample_rate</name></name> <operator pos:start="49:43" pos:end="49:43">=</operator> <name pos:start="49:45" pos:end="49:74"><name pos:start="49:45" pos:end="49:54">samplesref</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:61">audio</name><operator pos:start="49:62" pos:end="49:63">-&gt;</operator><name pos:start="49:64" pos:end="49:74">sample_rate</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:54">/* Copy actual data into new samples buffer */</comment>

        <for pos:start="55:9" pos:end="57:107">for <control pos:start="55:13" pos:end="55:36">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:31"><expr pos:start="55:21" pos:end="55:30"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:30">planes</name></expr>;</condition> <incr pos:start="55:33" pos:end="55:35"><expr pos:start="55:33" pos:end="55:35"><name pos:start="55:33" pos:end="55:33">i</name><operator pos:start="55:34" pos:end="55:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="57:13" pos:end="57:107"><block_content pos:start="57:13" pos:end="57:107">

            <expr_stmt pos:start="57:13" pos:end="57:107"><expr pos:start="57:13" pos:end="57:106"><call pos:start="57:13" pos:end="57:106"><name pos:start="57:13" pos:end="57:18">memcpy</name><argument_list pos:start="57:19" pos:end="57:106">(<argument pos:start="57:20" pos:end="57:50"><expr pos:start="57:20" pos:end="57:50"><name pos:start="57:20" pos:end="57:50"><name pos:start="57:20" pos:end="57:23">link</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">cur_buf</name><operator pos:start="57:33" pos:end="57:34">-&gt;</operator><name pos:start="57:35" pos:end="57:47">extended_data</name><index pos:start="57:48" pos:end="57:50">[<expr pos:start="57:49" pos:end="57:49"><name pos:start="57:49" pos:end="57:49">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:53" pos:end="57:80"><expr pos:start="57:53" pos:end="57:80"><name pos:start="57:53" pos:end="57:80"><name pos:start="57:53" pos:end="57:62">samplesref</name><operator pos:start="57:63" pos:end="57:64">-&gt;</operator><name pos:start="57:65" pos:end="57:77">extended_data</name><index pos:start="57:78" pos:end="57:80">[<expr pos:start="57:79" pos:end="57:79"><name pos:start="57:79" pos:end="57:79">i</name></expr>]</index></name></expr></argument>, <argument pos:start="57:83" pos:end="57:105"><expr pos:start="57:83" pos:end="57:105"><name pos:start="57:83" pos:end="57:105"><name pos:start="57:83" pos:end="57:92">samplesref</name><operator pos:start="57:93" pos:end="57:94">-&gt;</operator><name pos:start="57:95" pos:end="57:102">linesize</name><index pos:start="57:103" pos:end="57:105">[<expr pos:start="57:104" pos:end="57:104"><literal type="number" pos:start="57:104" pos:end="57:104">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="61:9" pos:end="61:42"><expr pos:start="61:9" pos:end="61:41"><call pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:29">avfilter_unref_buffer</name><argument_list pos:start="61:30" pos:end="61:41">(<argument pos:start="61:31" pos:end="61:40"><expr pos:start="61:31" pos:end="61:40"><name pos:start="61:31" pos:end="61:40">samplesref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="63:7" pos:end="65:35">else<block type="pseudo" pos:start="65:9" pos:end="65:35"><block_content pos:start="65:9" pos:end="65:35">

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:12">link</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:21">cur_buf</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:34">samplesref</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:40"><expr pos:start="69:5" pos:end="69:39"><call pos:start="69:5" pos:end="69:39"><name pos:start="69:5" pos:end="69:18">filter_samples</name><argument_list pos:start="69:19" pos:end="69:39">(<argument pos:start="69:20" pos:end="69:23"><expr pos:start="69:20" pos:end="69:23"><name pos:start="69:20" pos:end="69:23">link</name></expr></argument>, <argument pos:start="69:26" pos:end="69:38"><expr pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:29">link</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:38">cur_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
