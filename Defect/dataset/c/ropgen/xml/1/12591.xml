<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12591.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:12">const</specifier> <name pos:start="1:14" pos:end="1:21">unsigned</name> <name pos:start="1:23" pos:end="1:26">char</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:42">seq_decode_op1</name><parameter_list pos:start="1:43" pos:end="1:110">(<parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><name pos:start="1:44" pos:end="1:58">SeqVideoContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">seq</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:89"><decl pos:start="1:66" pos:end="1:89"><type pos:start="1:66" pos:end="1:89"><specifier pos:start="1:66" pos:end="1:70">const</specifier> <name pos:start="1:72" pos:end="1:79">unsigned</name> <name pos:start="1:81" pos:end="1:84">char</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:89">src</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:109"><decl pos:start="1:92" pos:end="1:109"><type pos:start="1:92" pos:end="1:109"><name pos:start="1:92" pos:end="1:99">unsigned</name> <name pos:start="1:101" pos:end="1:104">char</name> <modifier pos:start="1:106" pos:end="1:106">*</modifier></type><name pos:start="1:107" pos:end="1:109">dst</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:15">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:25"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">unsigned</name> <name pos:start="5:20" pos:end="5:23">char</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:36">color_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">b</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">i</name></decl>, <decl pos:start="7:15" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:17">len</name></decl>, <decl pos:start="7:20" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:23">bits</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">char</name></type> <name pos:start="11:19" pos:end="11:30"><name pos:start="11:19" pos:end="11:23">block</name><index pos:start="11:24" pos:end="11:30">[<expr pos:start="11:25" pos:end="11:29"><literal type="number" pos:start="11:25" pos:end="11:25">8</literal> <operator pos:start="11:27" pos:end="11:27">*</operator> <literal type="number" pos:start="11:29" pos:end="11:29">8</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:7">len</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <operator pos:start="15:11" pos:end="15:11">*</operator><name pos:start="15:12" pos:end="15:14">src</name><operator pos:start="15:15" pos:end="15:16">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="73:5"><if pos:start="17:5" pos:end="53:5">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">&amp;</operator> <literal type="number" pos:start="17:15" pos:end="17:18">0x80</literal></expr>)</condition> <block pos:start="17:21" pos:end="53:5">{<block_content pos:start="19:9" pos:end="51:9">

        <switch pos:start="19:9" pos:end="51:9">switch <condition pos:start="19:16" pos:end="19:24">(<expr pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:19">len</name> <operator pos:start="19:21" pos:end="19:21">&amp;</operator> <literal type="number" pos:start="19:23" pos:end="19:23">3</literal></expr>)</condition> <block pos:start="19:26" pos:end="51:9">{<block_content pos:start="21:9" pos:end="49:18">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">1</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:66"><expr pos:start="23:13" pos:end="23:65"><name pos:start="23:13" pos:end="23:15">src</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:65"><name pos:start="23:19" pos:end="23:38">seq_unpack_rle_block</name><argument_list pos:start="23:39" pos:end="23:65">(<argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">src</name></expr></argument>, <argument pos:start="23:45" pos:end="23:49"><expr pos:start="23:45" pos:end="23:49"><name pos:start="23:45" pos:end="23:49">block</name></expr></argument>, <argument pos:start="23:52" pos:end="23:64"><expr pos:start="23:52" pos:end="23:64"><sizeof pos:start="23:52" pos:end="23:64">sizeof<argument_list pos:start="23:58" pos:end="23:64">(<argument pos:start="23:59" pos:end="23:63"><expr pos:start="23:59" pos:end="23:63"><name pos:start="23:59" pos:end="23:63">block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="25:13" pos:end="31:13">for <control pos:start="25:17" pos:end="25:35">(<init pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">b</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:30"><expr pos:start="25:25" pos:end="25:29"><name pos:start="25:25" pos:end="25:25">b</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <literal type="number" pos:start="25:29" pos:end="25:29">8</literal></expr>;</condition> <incr pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:32">b</name><operator pos:start="25:33" pos:end="25:34">++</operator></expr></incr>)</control> <block pos:start="25:37" pos:end="31:13">{<block_content pos:start="27:17" pos:end="29:46">

                <expr_stmt pos:start="27:17" pos:end="27:46"><expr pos:start="27:17" pos:end="27:45"><call pos:start="27:17" pos:end="27:45"><name pos:start="27:17" pos:end="27:22">memcpy</name><argument_list pos:start="27:23" pos:end="27:45">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">dst</name></expr></argument>, <argument pos:start="27:29" pos:end="27:41"><expr pos:start="27:29" pos:end="27:41"><operator pos:start="27:29" pos:end="27:29">&amp;</operator><name pos:start="27:30" pos:end="27:41"><name pos:start="27:30" pos:end="27:34">block</name><index pos:start="27:35" pos:end="27:41">[<expr pos:start="27:36" pos:end="27:40"><name pos:start="27:36" pos:end="27:36">b</name> <operator pos:start="27:38" pos:end="27:38">*</operator> <literal type="number" pos:start="27:40" pos:end="27:40">8</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:44" pos:end="27:44"><expr pos:start="27:44" pos:end="27:44"><literal type="number" pos:start="27:44" pos:end="27:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="29:17" pos:end="29:46"><expr pos:start="29:17" pos:end="29:45"><name pos:start="29:17" pos:end="29:19">dst</name> <operator pos:start="29:21" pos:end="29:22">+=</operator> <name pos:start="29:24" pos:end="29:45"><name pos:start="29:24" pos:end="29:26">seq</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:33">frame</name><operator pos:start="29:34" pos:end="29:34">.</operator><name pos:start="29:35" pos:end="29:42">linesize</name><index pos:start="29:43" pos:end="29:45">[<expr pos:start="29:44" pos:end="29:44"><literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:15">case <expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">2</literal></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:66"><expr pos:start="37:13" pos:end="37:65"><name pos:start="37:13" pos:end="37:15">src</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:65"><name pos:start="37:19" pos:end="37:38">seq_unpack_rle_block</name><argument_list pos:start="37:39" pos:end="37:65">(<argument pos:start="37:40" pos:end="37:42"><expr pos:start="37:40" pos:end="37:42"><name pos:start="37:40" pos:end="37:42">src</name></expr></argument>, <argument pos:start="37:45" pos:end="37:49"><expr pos:start="37:45" pos:end="37:49"><name pos:start="37:45" pos:end="37:49">block</name></expr></argument>, <argument pos:start="37:52" pos:end="37:64"><expr pos:start="37:52" pos:end="37:64"><sizeof pos:start="37:52" pos:end="37:64">sizeof<argument_list pos:start="37:58" pos:end="37:64">(<argument pos:start="37:59" pos:end="37:63"><expr pos:start="37:59" pos:end="37:63"><name pos:start="37:59" pos:end="37:63">block</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="39:13" pos:end="47:13">for <control pos:start="39:17" pos:end="39:35">(<init pos:start="39:18" pos:end="39:23"><expr pos:start="39:18" pos:end="39:22"><name pos:start="39:18" pos:end="39:18">i</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</init> <condition pos:start="39:25" pos:end="39:30"><expr pos:start="39:25" pos:end="39:29"><name pos:start="39:25" pos:end="39:25">i</name> <operator pos:start="39:27" pos:end="39:27">&lt;</operator> <literal type="number" pos:start="39:29" pos:end="39:29">8</literal></expr>;</condition> <incr pos:start="39:32" pos:end="39:34"><expr pos:start="39:32" pos:end="39:34"><name pos:start="39:32" pos:end="39:32">i</name><operator pos:start="39:33" pos:end="39:34">++</operator></expr></incr>)</control> <block pos:start="39:37" pos:end="47:13">{<block_content pos:start="41:17" pos:end="45:22">

                <for pos:start="41:17" pos:end="43:71">for <control pos:start="41:21" pos:end="41:39">(<init pos:start="41:22" pos:end="41:27"><expr pos:start="41:22" pos:end="41:26"><name pos:start="41:22" pos:end="41:22">b</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>;</init> <condition pos:start="41:29" pos:end="41:34"><expr pos:start="41:29" pos:end="41:33"><name pos:start="41:29" pos:end="41:29">b</name> <operator pos:start="41:31" pos:end="41:31">&lt;</operator> <literal type="number" pos:start="41:33" pos:end="41:33">8</literal></expr>;</condition> <incr pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><name pos:start="41:36" pos:end="41:36">b</name><operator pos:start="41:37" pos:end="41:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="43:21" pos:end="43:71"><block_content pos:start="43:21" pos:end="43:71">

                    <expr_stmt pos:start="43:21" pos:end="43:71"><expr pos:start="43:21" pos:end="43:70"><name pos:start="43:21" pos:end="43:51"><name pos:start="43:21" pos:end="43:23">dst</name><index pos:start="43:24" pos:end="43:51">[<expr pos:start="43:25" pos:end="43:50"><name pos:start="43:25" pos:end="43:25">b</name> <operator pos:start="43:27" pos:end="43:27">*</operator> <name pos:start="43:29" pos:end="43:50"><name pos:start="43:29" pos:end="43:31">seq</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:38">frame</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:47">linesize</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="43:53" pos:end="43:53">=</operator> <name pos:start="43:55" pos:end="43:70"><name pos:start="43:55" pos:end="43:59">block</name><index pos:start="43:60" pos:end="43:70">[<expr pos:start="43:61" pos:end="43:69"><name pos:start="43:61" pos:end="43:61">i</name> <operator pos:start="43:63" pos:end="43:63">*</operator> <literal type="number" pos:start="43:65" pos:end="43:67">8</literal> <operator pos:start="43:67" pos:end="43:67">+</operator> <name pos:start="43:69" pos:end="43:69">b</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:21"><operator pos:start="45:17" pos:end="45:18">++</operator><name pos:start="45:19" pos:end="45:21">dst</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="73:5">else <block pos:start="53:12" pos:end="73:5">{<block_content pos:start="55:9" pos:end="71:9">

        <expr_stmt pos:start="55:9" pos:end="55:26"><expr pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:19">color_table</name> <operator pos:start="55:21" pos:end="55:21">=</operator> <name pos:start="55:23" pos:end="55:25">src</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:19"><expr pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:11">src</name> <operator pos:start="57:13" pos:end="57:14">+=</operator> <name pos:start="57:16" pos:end="57:18">len</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:40"><expr pos:start="59:9" pos:end="59:39"><name pos:start="59:9" pos:end="59:12">bits</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:35"><name pos:start="59:16" pos:end="59:26">ff_log2_tab</name><index pos:start="59:27" pos:end="59:35">[<expr pos:start="59:28" pos:end="59:34"><name pos:start="59:28" pos:end="59:30">len</name> <operator pos:start="59:32" pos:end="59:32">-</operator> <literal type="number" pos:start="59:34" pos:end="59:34">1</literal></expr>]</index></name> <operator pos:start="59:37" pos:end="59:37">+</operator> <literal type="number" pos:start="59:39" pos:end="59:39">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><call pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:21">init_get_bits</name><argument_list pos:start="61:22" pos:end="61:45">(<argument pos:start="61:23" pos:end="61:25"><expr pos:start="61:23" pos:end="61:25"><operator pos:start="61:23" pos:end="61:23">&amp;</operator><name pos:start="61:24" pos:end="61:25">gb</name></expr></argument>, <argument pos:start="61:28" pos:end="61:30"><expr pos:start="61:28" pos:end="61:30"><name pos:start="61:28" pos:end="61:30">src</name></expr></argument>, <argument pos:start="61:33" pos:end="61:44"><expr pos:start="61:33" pos:end="61:44"><name pos:start="61:33" pos:end="61:36">bits</name> <operator pos:start="61:38" pos:end="61:38">*</operator> <literal type="number" pos:start="61:40" pos:end="61:40">8</literal> <operator pos:start="61:42" pos:end="61:42">*</operator> <literal type="number" pos:start="61:44" pos:end="61:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="61:48" pos:end="61:63"><expr pos:start="61:48" pos:end="61:62"><name pos:start="61:48" pos:end="61:50">src</name> <operator pos:start="61:52" pos:end="61:53">+=</operator> <name pos:start="61:55" pos:end="61:58">bits</name> <operator pos:start="61:60" pos:end="61:60">*</operator> <literal type="number" pos:start="61:62" pos:end="61:62">8</literal></expr>;</expr_stmt>

        <for pos:start="63:9" pos:end="71:9">for <control pos:start="63:13" pos:end="63:31">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">b</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:26"><expr pos:start="63:21" pos:end="63:25"><name pos:start="63:21" pos:end="63:21">b</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <literal type="number" pos:start="63:25" pos:end="63:25">8</literal></expr>;</condition> <incr pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:28">b</name><operator pos:start="63:29" pos:end="63:30">++</operator></expr></incr>)</control> <block pos:start="63:33" pos:end="71:9">{<block_content pos:start="65:13" pos:end="69:42">

            <for pos:start="65:13" pos:end="67:58">for <control pos:start="65:17" pos:end="65:35">(<init pos:start="65:18" pos:end="65:23"><expr pos:start="65:18" pos:end="65:22"><name pos:start="65:18" pos:end="65:18">i</name> <operator pos:start="65:20" pos:end="65:20">=</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>;</init> <condition pos:start="65:25" pos:end="65:30"><expr pos:start="65:25" pos:end="65:29"><name pos:start="65:25" pos:end="65:25">i</name> <operator pos:start="65:27" pos:end="65:27">&lt;</operator> <literal type="number" pos:start="65:29" pos:end="65:29">8</literal></expr>;</condition> <incr pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:32">i</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="67:17" pos:end="67:58"><block_content pos:start="67:17" pos:end="67:58">

                <expr_stmt pos:start="67:17" pos:end="67:58"><expr pos:start="67:17" pos:end="67:57"><name pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:19">dst</name><index pos:start="67:20" pos:end="67:22">[<expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">i</name></expr>]</index></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:57"><name pos:start="67:26" pos:end="67:36">color_table</name><index pos:start="67:37" pos:end="67:57">[<expr pos:start="67:38" pos:end="67:56"><call pos:start="67:38" pos:end="67:56"><name pos:start="67:38" pos:end="67:45">get_bits</name><argument_list pos:start="67:46" pos:end="67:56">(<argument pos:start="67:47" pos:end="67:49"><expr pos:start="67:47" pos:end="67:49"><operator pos:start="67:47" pos:end="67:47">&amp;</operator><name pos:start="67:48" pos:end="67:49">gb</name></expr></argument>, <argument pos:start="67:52" pos:end="67:55"><expr pos:start="67:52" pos:end="67:55"><name pos:start="67:52" pos:end="67:55">bits</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:15">dst</name> <operator pos:start="69:17" pos:end="69:18">+=</operator> <name pos:start="69:20" pos:end="69:41"><name pos:start="69:20" pos:end="69:22">seq</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:29">frame</name><operator pos:start="69:30" pos:end="69:30">.</operator><name pos:start="69:31" pos:end="69:38">linesize</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><literal type="number" pos:start="69:40" pos:end="69:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="77:5" pos:end="77:15">return <expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">src</name></expr>;</return>

</block_content>}</block></function>
</unit>
