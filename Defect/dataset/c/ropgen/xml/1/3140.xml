<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3140.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">init_report</name><parameter_list pos:start="1:23" pos:end="1:39">(<parameter pos:start="1:24" pos:end="1:38"><decl pos:start="1:24" pos:end="1:38"><type pos:start="1:24" pos:end="1:35"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:48"><decl pos:start="5:5" pos:end="5:47"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:33">filename_template</name> <init pos:start="5:35" pos:end="5:47">= <expr pos:start="5:37" pos:end="5:47"><literal type="string" pos:start="5:37" pos:end="5:47">"%p-%t.log"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">key</name></decl>, <decl pos:start="7:16" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:18">count</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">time_t</name></type> <name pos:start="11:12" pos:end="11:14">now</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:10">struct</name> <name pos:start="13:12" pos:end="13:13">tm</name></name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:17">tm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">AVBPrint</name></type> <name pos:start="15:14" pos:end="15:21">filename</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:17"><if pos:start="19:5" pos:end="21:17">if <condition pos:start="19:8" pos:end="19:20">(<expr pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:19">report_file</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:17"><block_content pos:start="21:9" pos:end="21:17"> <comment type="block" pos:start="19:22" pos:end="19:41">/* already opened */</comment>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:15"><expr pos:start="23:5" pos:end="23:14"><call pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:8">time</name><argument_list pos:start="23:9" pos:end="23:14">(<argument pos:start="23:10" pos:end="23:13"><expr pos:start="23:10" pos:end="23:13"><operator pos:start="23:10" pos:end="23:10">&amp;</operator><name pos:start="23:11" pos:end="23:13">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:6">tm</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:24"><name pos:start="25:10" pos:end="25:18">localtime</name><argument_list pos:start="25:19" pos:end="25:24">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:23">now</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="67:5">while <condition pos:start="29:11" pos:end="29:23">(<expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:14">env</name> <operator pos:start="29:16" pos:end="29:17">&amp;&amp;</operator> <operator pos:start="29:19" pos:end="29:19">*</operator><name pos:start="29:20" pos:end="29:22">env</name></expr>)</condition> <block pos:start="29:25" pos:end="67:5">{<block_content pos:start="31:9" pos:end="65:21">

        <if_stmt pos:start="31:9" pos:end="43:9"><if pos:start="31:9" pos:end="43:9">if <condition pos:start="31:12" pos:end="31:76">(<expr pos:start="31:13" pos:end="31:75"><operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:16">ret</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:70"><name pos:start="31:20" pos:end="31:39">av_opt_get_key_value</name><argument_list pos:start="31:40" pos:end="31:70">(<argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><operator pos:start="31:41" pos:end="31:41">&amp;</operator><name pos:start="31:42" pos:end="31:44">env</name></expr></argument>, <argument pos:start="31:47" pos:end="31:49"><expr pos:start="31:47" pos:end="31:49"><literal type="string" pos:start="31:47" pos:end="31:49">"="</literal></expr></argument>, <argument pos:start="31:52" pos:end="31:54"><expr pos:start="31:52" pos:end="31:54"><literal type="string" pos:start="31:52" pos:end="31:54">":"</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:57"><expr pos:start="31:57" pos:end="31:57"><literal type="number" pos:start="31:57" pos:end="31:57">0</literal></expr></argument>, <argument pos:start="31:60" pos:end="31:63"><expr pos:start="31:60" pos:end="31:63"><operator pos:start="31:60" pos:end="31:60">&amp;</operator><name pos:start="31:61" pos:end="31:63">key</name></expr></argument>, <argument pos:start="31:66" pos:end="31:69"><expr pos:start="31:66" pos:end="31:69"><operator pos:start="31:66" pos:end="31:66">&amp;</operator><name pos:start="31:67" pos:end="31:69">val</name></expr></argument>)</argument_list></call><operator pos:start="31:71" pos:end="31:71">)</operator> <operator pos:start="31:73" pos:end="31:73">&lt;</operator> <literal type="number" pos:start="31:75" pos:end="31:75">0</literal></expr>)</condition> <block pos:start="31:78" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:18">

            <if_stmt pos:start="33:13" pos:end="39:40"><if pos:start="33:13" pos:end="39:40">if <condition pos:start="33:16" pos:end="33:22">(<expr pos:start="33:17" pos:end="33:21"><name pos:start="33:17" pos:end="33:21">count</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="39:40"><block_content pos:start="35:17" pos:end="39:40">

                <expr_stmt pos:start="35:17" pos:end="39:40"><expr pos:start="35:17" pos:end="39:39"><call pos:start="35:17" pos:end="39:39"><name pos:start="35:17" pos:end="35:22">av_log</name><argument_list pos:start="35:23" pos:end="39:39">(<argument pos:start="35:24" pos:end="35:27"><expr pos:start="35:24" pos:end="35:27"><name pos:start="35:24" pos:end="35:27">NULL</name></expr></argument>, <argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:41">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="37:24" pos:end="37:76"><expr pos:start="37:24" pos:end="37:76"><literal type="string" pos:start="37:24" pos:end="37:76">"Failed to parse FFREPORT environment variable: %s\n"</literal></expr></argument>,

                       <argument pos:start="39:24" pos:end="39:38"><expr pos:start="39:24" pos:end="39:38"><call pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:33">av_err2str</name><argument_list pos:start="39:34" pos:end="39:38">(<argument pos:start="39:35" pos:end="39:37"><expr pos:start="39:35" pos:end="39:37"><name pos:start="39:35" pos:end="39:37">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="45:9" pos:end="47:18"><if pos:start="45:9" pos:end="47:18">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:16">env</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <expr_stmt pos:start="47:13" pos:end="47:18"><expr pos:start="47:13" pos:end="47:17"><name pos:start="47:13" pos:end="47:15">env</name><operator pos:start="47:16" pos:end="47:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:13">count</name><operator pos:start="49:14" pos:end="49:15">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:33">(<expr pos:start="51:13" pos:end="51:32"><operator pos:start="51:13" pos:end="51:13">!</operator><call pos:start="51:14" pos:end="51:32"><name pos:start="51:14" pos:end="51:19">strcmp</name><argument_list pos:start="51:20" pos:end="51:32">(<argument pos:start="51:21" pos:end="51:23"><expr pos:start="51:21" pos:end="51:23"><name pos:start="51:21" pos:end="51:23">key</name></expr></argument>, <argument pos:start="51:26" pos:end="51:31"><expr pos:start="51:26" pos:end="51:31"><literal type="string" pos:start="51:26" pos:end="51:31">"file"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:35" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:23">

            <expr_stmt pos:start="53:13" pos:end="53:36"><expr pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:29">filename_template</name> <operator pos:start="53:31" pos:end="53:31">=</operator> <name pos:start="53:33" pos:end="53:35">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:23"><expr pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:15">val</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:22">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="61:9">else <block pos:start="57:16" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:78">

            <expr_stmt pos:start="59:13" pos:end="59:78"><expr pos:start="59:13" pos:end="59:77"><call pos:start="59:13" pos:end="59:77"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:77">(<argument pos:start="59:20" pos:end="59:23"><expr pos:start="59:20" pos:end="59:23"><name pos:start="59:20" pos:end="59:23">NULL</name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:71"><expr pos:start="59:40" pos:end="59:71"><literal type="string" pos:start="59:40" pos:end="59:71">"Unknown key '%s' in FFREPORT\n"</literal></expr></argument>, <argument pos:start="59:74" pos:end="59:76"><expr pos:start="59:74" pos:end="59:76"><name pos:start="59:74" pos:end="59:76">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><call pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:15">av_free</name><argument_list pos:start="63:16" pos:end="63:20">(<argument pos:start="63:17" pos:end="63:19"><expr pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:21"><expr pos:start="65:9" pos:end="65:20"><call pos:start="65:9" pos:end="65:20"><name pos:start="65:9" pos:end="65:15">av_free</name><argument_list pos:start="65:16" pos:end="65:20">(<argument pos:start="65:17" pos:end="65:19"><expr pos:start="65:17" pos:end="65:19"><name pos:start="65:17" pos:end="65:19">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><call pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:18">av_bprint_init</name><argument_list pos:start="71:19" pos:end="71:35">(<argument pos:start="71:20" pos:end="71:28"><expr pos:start="71:20" pos:end="71:28"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:28">filename</name></expr></argument>, <argument pos:start="71:31" pos:end="71:31"><expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">0</literal></expr></argument>, <argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><literal type="number" pos:start="71:34" pos:end="71:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:63"><expr pos:start="73:5" pos:end="73:62"><call pos:start="73:5" pos:end="73:62"><name pos:start="73:5" pos:end="73:28">expand_filename_template</name><argument_list pos:start="73:29" pos:end="73:62">(<argument pos:start="73:30" pos:end="73:38"><expr pos:start="73:30" pos:end="73:38"><operator pos:start="73:30" pos:end="73:30">&amp;</operator><name pos:start="73:31" pos:end="73:38">filename</name></expr></argument>, <argument pos:start="73:41" pos:end="73:57"><expr pos:start="73:41" pos:end="73:57"><name pos:start="73:41" pos:end="73:57">filename_template</name></expr></argument>, <argument pos:start="73:60" pos:end="73:61"><expr pos:start="73:60" pos:end="73:61"><name pos:start="73:60" pos:end="73:61">tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:42">(<expr pos:start="75:9" pos:end="75:41"><operator pos:start="75:9" pos:end="75:9">!</operator><call pos:start="75:10" pos:end="75:41"><name pos:start="75:10" pos:end="75:30">av_bprint_is_complete</name><argument_list pos:start="75:31" pos:end="75:41">(<argument pos:start="75:32" pos:end="75:40"><expr pos:start="75:32" pos:end="75:40"><operator pos:start="75:32" pos:end="75:32">&amp;</operator><name pos:start="75:33" pos:end="75:40">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:44" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:31">

        <expr_stmt pos:start="77:9" pos:end="77:80"><expr pos:start="77:9" pos:end="77:79"><call pos:start="77:9" pos:end="77:79"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:79">(<argument pos:start="77:16" pos:end="77:19"><expr pos:start="77:16" pos:end="77:19"><name pos:start="77:16" pos:end="77:19">NULL</name></expr></argument>, <argument pos:start="77:22" pos:end="77:33"><expr pos:start="77:22" pos:end="77:33"><name pos:start="77:22" pos:end="77:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:36" pos:end="77:78"><expr pos:start="77:36" pos:end="77:78"><literal type="string" pos:start="77:36" pos:end="77:78">"Out of memory building report file name\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:31">return <expr pos:start="79:16" pos:end="79:30"><call pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:22">AVERROR</name><argument_list pos:start="79:23" pos:end="79:30">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:15">report_file</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:42"><name pos:start="85:19" pos:end="85:23">fopen</name><argument_list pos:start="85:24" pos:end="85:42">(<argument pos:start="85:25" pos:end="85:36"><expr pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:36"><name pos:start="85:25" pos:end="85:32">filename</name><operator pos:start="85:33" pos:end="85:33">.</operator><name pos:start="85:34" pos:end="85:36">str</name></name></expr></argument>, <argument pos:start="85:39" pos:end="85:41"><expr pos:start="85:39" pos:end="85:41"><literal type="string" pos:start="85:39" pos:end="85:41">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:21">(<expr pos:start="87:9" pos:end="87:20"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:20">report_file</name></expr>)</condition> <block pos:start="87:23" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:30">

        <expr_stmt pos:start="89:9" pos:end="91:46"><expr pos:start="89:9" pos:end="91:45"><call pos:start="89:9" pos:end="91:45"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="91:45">(<argument pos:start="89:16" pos:end="89:19"><expr pos:start="89:16" pos:end="89:19"><name pos:start="89:16" pos:end="89:19">NULL</name></expr></argument>, <argument pos:start="89:22" pos:end="89:33"><expr pos:start="89:22" pos:end="89:33"><name pos:start="89:22" pos:end="89:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:36" pos:end="89:71"><expr pos:start="89:36" pos:end="89:71"><literal type="string" pos:start="89:36" pos:end="89:71">"Failed to open report \"%s\": %s\n"</literal></expr></argument>,

               <argument pos:start="91:16" pos:end="91:27"><expr pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:27"><name pos:start="91:16" pos:end="91:23">filename</name><operator pos:start="91:24" pos:end="91:24">.</operator><name pos:start="91:25" pos:end="91:27">str</name></name></expr></argument>, <argument pos:start="91:30" pos:end="91:44"><expr pos:start="91:30" pos:end="91:44"><call pos:start="91:30" pos:end="91:44"><name pos:start="91:30" pos:end="91:37">strerror</name><argument_list pos:start="91:38" pos:end="91:44">(<argument pos:start="91:39" pos:end="91:43"><expr pos:start="91:39" pos:end="91:43"><name pos:start="91:39" pos:end="91:43">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:30">return <expr pos:start="93:16" pos:end="93:29"><call pos:start="93:16" pos:end="93:29"><name pos:start="93:16" pos:end="93:22">AVERROR</name><argument_list pos:start="93:23" pos:end="93:29">(<argument pos:start="93:24" pos:end="93:28"><expr pos:start="93:24" pos:end="93:28"><name pos:start="93:24" pos:end="93:28">errno</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:45"><expr pos:start="97:5" pos:end="97:44"><call pos:start="97:5" pos:end="97:44"><name pos:start="97:5" pos:end="97:23">av_log_set_callback</name><argument_list pos:start="97:24" pos:end="97:44">(<argument pos:start="97:25" pos:end="97:43"><expr pos:start="97:25" pos:end="97:43"><name pos:start="97:25" pos:end="97:43">log_callback_report</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="111:25"><expr pos:start="99:5" pos:end="111:24"><call pos:start="99:5" pos:end="111:24"><name pos:start="99:5" pos:end="99:10">av_log</name><argument_list pos:start="99:11" pos:end="111:24">(<argument pos:start="99:12" pos:end="99:15"><expr pos:start="99:12" pos:end="99:15"><name pos:start="99:12" pos:end="99:15">NULL</name></expr></argument>, <argument pos:start="99:18" pos:end="99:28"><expr pos:start="99:18" pos:end="99:28"><name pos:start="99:18" pos:end="99:28">AV_LOG_INFO</name></expr></argument>,

           <argument pos:start="101:12" pos:end="103:39"><expr pos:start="101:12" pos:end="103:39"><literal type="string" pos:start="101:12" pos:end="101:61">"%s started on %04d-%02d-%02d at %02d:%02d:%02d\n"</literal>

           <literal type="string" pos:start="103:12" pos:end="103:39">"Report written to \"%s\"\n"</literal></expr></argument>,

           <argument pos:start="105:12" pos:end="105:23"><expr pos:start="105:12" pos:end="105:23"><name pos:start="105:12" pos:end="105:23">program_name</name></expr></argument>,

           <argument pos:start="107:12" pos:end="107:29"><expr pos:start="107:12" pos:end="107:29"><name pos:start="107:12" pos:end="107:22"><name pos:start="107:12" pos:end="107:13">tm</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:22">tm_year</name></name> <operator pos:start="107:24" pos:end="107:24">+</operator> <literal type="number" pos:start="107:26" pos:end="107:29">1900</literal></expr></argument>, <argument pos:start="107:32" pos:end="107:45"><expr pos:start="107:32" pos:end="107:45"><name pos:start="107:32" pos:end="107:41"><name pos:start="107:32" pos:end="107:33">tm</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:41">tm_mon</name></name> <operator pos:start="107:43" pos:end="107:43">+</operator> <literal type="number" pos:start="107:45" pos:end="107:45">1</literal></expr></argument>, <argument pos:start="107:48" pos:end="107:58"><expr pos:start="107:48" pos:end="107:58"><name pos:start="107:48" pos:end="107:58"><name pos:start="107:48" pos:end="107:49">tm</name><operator pos:start="107:50" pos:end="107:51">-&gt;</operator><name pos:start="107:52" pos:end="107:58">tm_mday</name></name></expr></argument>,

           <argument pos:start="109:12" pos:end="109:22"><expr pos:start="109:12" pos:end="109:22"><name pos:start="109:12" pos:end="109:22"><name pos:start="109:12" pos:end="109:13">tm</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:22">tm_hour</name></name></expr></argument>, <argument pos:start="109:25" pos:end="109:34"><expr pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:34"><name pos:start="109:25" pos:end="109:26">tm</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:34">tm_min</name></name></expr></argument>, <argument pos:start="109:37" pos:end="109:46"><expr pos:start="109:37" pos:end="109:46"><name pos:start="109:37" pos:end="109:46"><name pos:start="109:37" pos:end="109:38">tm</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:46">tm_sec</name></name></expr></argument>,

           <argument pos:start="111:12" pos:end="111:23"><expr pos:start="111:12" pos:end="111:23"><name pos:start="111:12" pos:end="111:23"><name pos:start="111:12" pos:end="111:19">filename</name><operator pos:start="111:20" pos:end="111:20">.</operator><name pos:start="111:21" pos:end="111:23">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:64"><expr pos:start="113:5" pos:end="113:63"><call pos:start="113:5" pos:end="113:63"><name pos:start="113:5" pos:end="113:20">av_log_set_level</name><argument_list pos:start="113:21" pos:end="113:63">(<argument pos:start="113:22" pos:end="113:62"><expr pos:start="113:22" pos:end="113:62"><call pos:start="113:22" pos:end="113:62"><name pos:start="113:22" pos:end="113:26">FFMAX</name><argument_list pos:start="113:27" pos:end="113:62">(<argument pos:start="113:28" pos:end="113:45"><expr pos:start="113:28" pos:end="113:45"><call pos:start="113:28" pos:end="113:45"><name pos:start="113:28" pos:end="113:43">av_log_get_level</name><argument_list pos:start="113:44" pos:end="113:45">()</argument_list></call></expr></argument>, <argument pos:start="113:48" pos:end="113:61"><expr pos:start="113:48" pos:end="113:61"><name pos:start="113:48" pos:end="113:61">AV_LOG_VERBOSE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:40"><expr pos:start="115:5" pos:end="115:39"><call pos:start="115:5" pos:end="115:39"><name pos:start="115:5" pos:end="115:22">av_bprint_finalize</name><argument_list pos:start="115:23" pos:end="115:39">(<argument pos:start="115:24" pos:end="115:32"><expr pos:start="115:24" pos:end="115:32"><operator pos:start="115:24" pos:end="115:24">&amp;</operator><name pos:start="115:25" pos:end="115:32">filename</name></expr></argument>, <argument pos:start="115:35" pos:end="115:38"><expr pos:start="115:35" pos:end="115:38"><name pos:start="115:35" pos:end="115:38">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
