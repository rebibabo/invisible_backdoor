<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15625.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">oss_init_in</name> <parameter_list pos:start="1:24" pos:end="1:62">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:33">HWVoiceIn</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">hw</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:61"><decl pos:start="1:40" pos:end="1:61"><type pos:start="1:40" pos:end="1:61"><name pos:start="1:40" pos:end="1:57"><name pos:start="1:40" pos:end="1:45">struct</name> <name pos:start="1:47" pos:end="1:57">audsettings</name></name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">as</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="105:1">{<block_content pos:start="5:5" pos:end="103:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OSSVoiceIn</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">oss</name> <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><operator pos:start="5:23" pos:end="5:23">(</operator><name pos:start="5:24" pos:end="5:33">OSSVoiceIn</name> <operator pos:start="5:35" pos:end="5:35">*</operator><operator pos:start="5:36" pos:end="5:36">)</operator> <name pos:start="5:38" pos:end="5:39">hw</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">oss_params</name></name></type> <name pos:start="7:23" pos:end="7:25">req</name></decl>, <decl pos:start="7:28" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:21"/><name pos:start="7:28" pos:end="7:30">obt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">endianness</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:11"><decl pos:start="13:5" pos:end="13:10"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">audfmt_e</name></type> <name pos:start="15:14" pos:end="15:26">effective_fmt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:22">audsettings</name></name></type> <name pos:start="17:24" pos:end="17:29">obt_as</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:7">oss</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:11">fd</name></name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">-</operator><literal type="number" pos:start="21:16" pos:end="21:16">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:7">req</name><operator pos:start="25:8" pos:end="25:8">.</operator><name pos:start="25:9" pos:end="25:11">fmt</name></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:53"><name pos:start="25:15" pos:end="25:27">aud_to_ossfmt</name> <argument_list pos:start="25:29" pos:end="25:53">(<argument pos:start="25:30" pos:end="25:36"><expr pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:36"><name pos:start="25:30" pos:end="25:31">as</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:36">fmt</name></name></expr></argument>, <argument pos:start="25:39" pos:end="25:52"><expr pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:52"><name pos:start="25:39" pos:end="25:40">as</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:52">endianness</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">req</name><operator pos:start="27:8" pos:end="27:8">.</operator><name pos:start="27:9" pos:end="27:12">freq</name></name> <operator pos:start="27:14" pos:end="27:14">=</operator> <name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:17">as</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:23">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:7">req</name><operator pos:start="29:8" pos:end="29:8">.</operator><name pos:start="29:9" pos:end="29:17">nchannels</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:22">as</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:33">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">req</name><operator pos:start="31:8" pos:end="31:8">.</operator><name pos:start="31:9" pos:end="31:16">fragsize</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:23">conf</name><operator pos:start="31:24" pos:end="31:24">.</operator><name pos:start="31:25" pos:end="31:32">fragsize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:7">req</name><operator pos:start="33:8" pos:end="33:8">.</operator><name pos:start="33:9" pos:end="33:14">nfrags</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:28"><name pos:start="33:18" pos:end="33:21">conf</name><operator pos:start="33:22" pos:end="33:22">.</operator><name pos:start="33:23" pos:end="33:28">nfrags</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:38">(<expr pos:start="35:9" pos:end="35:37"><call pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:16">oss_open</name> <argument_list pos:start="35:18" pos:end="35:37">(<argument pos:start="35:19" pos:end="35:19"><expr pos:start="35:19" pos:end="35:19"><literal type="number" pos:start="35:19" pos:end="35:19">1</literal></expr></argument>, <argument pos:start="35:22" pos:end="35:25"><expr pos:start="35:22" pos:end="35:25"><operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:25">req</name></expr></argument>, <argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:31">obt</name></expr></argument>, <argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><operator pos:start="35:34" pos:end="35:34">&amp;</operator><name pos:start="35:35" pos:end="35:36">fd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:40" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:63"><expr pos:start="43:5" pos:end="43:62"><name pos:start="43:5" pos:end="43:7">err</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:62"><name pos:start="43:11" pos:end="43:23">oss_to_audfmt</name> <argument_list pos:start="43:25" pos:end="43:62">(<argument pos:start="43:26" pos:end="43:32"><expr pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:32"><name pos:start="43:26" pos:end="43:28">obt</name><operator pos:start="43:29" pos:end="43:29">.</operator><name pos:start="43:30" pos:end="43:32">fmt</name></name></expr></argument>, <argument pos:start="43:35" pos:end="43:48"><expr pos:start="43:35" pos:end="43:48"><operator pos:start="43:35" pos:end="43:35">&amp;</operator><name pos:start="43:36" pos:end="43:48">effective_fmt</name></expr></argument>, <argument pos:start="43:51" pos:end="43:61"><expr pos:start="43:51" pos:end="43:61"><operator pos:start="43:51" pos:end="43:51">&amp;</operator><name pos:start="43:52" pos:end="43:61">endianness</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">err</name></expr>)</condition> <block pos:start="45:14" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:18">

        <expr_stmt pos:start="47:9" pos:end="47:29"><expr pos:start="47:9" pos:end="47:28"><call pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:22">oss_anal_close</name> <argument_list pos:start="47:24" pos:end="47:28">(<argument pos:start="47:25" pos:end="47:27"><expr pos:start="47:25" pos:end="47:27"><operator pos:start="47:25" pos:end="47:25">&amp;</operator><name pos:start="47:26" pos:end="47:27">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:27"><expr pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:15"><name pos:start="55:5" pos:end="55:10">obt_as</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:15">freq</name></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:26"><name pos:start="55:19" pos:end="55:21">obt</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:26">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:10">obt_as</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:20">nchannels</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:36"><name pos:start="57:24" pos:end="57:26">obt</name><operator pos:start="57:27" pos:end="57:27">.</operator><name pos:start="57:28" pos:end="57:36">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:31"><expr pos:start="59:5" pos:end="59:30"><name pos:start="59:5" pos:end="59:14"><name pos:start="59:5" pos:end="59:10">obt_as</name><operator pos:start="59:11" pos:end="59:11">.</operator><name pos:start="59:12" pos:end="59:14">fmt</name></name> <operator pos:start="59:16" pos:end="59:16">=</operator> <name pos:start="59:18" pos:end="59:30">effective_fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:10">obt_as</name><operator pos:start="61:11" pos:end="61:11">.</operator><name pos:start="61:12" pos:end="61:21">endianness</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:34">endianness</name></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:45"><expr pos:start="65:5" pos:end="65:44"><call pos:start="65:5" pos:end="65:44"><name pos:start="65:5" pos:end="65:23">audio_pcm_init_info</name> <argument_list pos:start="65:25" pos:end="65:44">(<argument pos:start="65:26" pos:end="65:34"><expr pos:start="65:26" pos:end="65:34"><operator pos:start="65:26" pos:end="65:26">&amp;</operator><name pos:start="65:27" pos:end="65:34"><name pos:start="65:27" pos:end="65:28">hw</name><operator pos:start="65:29" pos:end="65:30">-&gt;</operator><name pos:start="65:31" pos:end="65:34">info</name></name></expr></argument>, <argument pos:start="65:37" pos:end="65:43"><expr pos:start="65:37" pos:end="65:43"><operator pos:start="65:37" pos:end="65:37">&amp;</operator><name pos:start="65:38" pos:end="65:43">obt_as</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:29"><expr pos:start="67:5" pos:end="67:28"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:7">oss</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:15">nfrags</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:28"><name pos:start="67:19" pos:end="67:21">obt</name><operator pos:start="67:22" pos:end="67:22">.</operator><name pos:start="67:23" pos:end="67:28">nfrags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:7">oss</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:17">fragsize</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:23">obt</name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:32">fragsize</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:51">(<expr pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:11">obt</name><operator pos:start="73:12" pos:end="73:12">.</operator><name pos:start="73:13" pos:end="73:18">nfrags</name></name> <operator pos:start="73:20" pos:end="73:20">*</operator> <name pos:start="73:22" pos:end="73:33"><name pos:start="73:22" pos:end="73:24">obt</name><operator pos:start="73:25" pos:end="73:25">.</operator><name pos:start="73:26" pos:end="73:33">fragsize</name></name> <operator pos:start="73:35" pos:end="73:35">&amp;</operator> <name pos:start="73:37" pos:end="73:50"><name pos:start="73:37" pos:end="73:38">hw</name><operator pos:start="73:39" pos:end="73:40">-&gt;</operator><name pos:start="73:41" pos:end="73:44">info</name><operator pos:start="73:45" pos:end="73:45">.</operator><name pos:start="73:46" pos:end="73:50">align</name></name></expr>)</condition> <block pos:start="73:53" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:62">

        <expr_stmt pos:start="75:9" pos:end="77:62"><expr pos:start="75:9" pos:end="77:61"><call pos:start="75:9" pos:end="77:61"><name pos:start="75:9" pos:end="75:13">dolog</name> <argument_list pos:start="75:15" pos:end="77:61">(<argument pos:start="75:16" pos:end="75:72"><expr pos:start="75:16" pos:end="75:72"><literal type="string" pos:start="75:16" pos:end="75:72">"warning: Misaligned ADC buffer, size %d, alignment %d\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:40"><expr pos:start="77:16" pos:end="77:40"><name pos:start="77:16" pos:end="77:25"><name pos:start="77:16" pos:end="77:18">obt</name><operator pos:start="77:19" pos:end="77:19">.</operator><name pos:start="77:20" pos:end="77:25">nfrags</name></name> <operator pos:start="77:27" pos:end="77:27">*</operator> <name pos:start="77:29" pos:end="77:40"><name pos:start="77:29" pos:end="77:31">obt</name><operator pos:start="77:32" pos:end="77:32">.</operator><name pos:start="77:33" pos:end="77:40">fragsize</name></name></expr></argument>, <argument pos:start="77:43" pos:end="77:60"><expr pos:start="77:43" pos:end="77:60"><name pos:start="77:43" pos:end="77:56"><name pos:start="77:43" pos:end="77:44">hw</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:50">info</name><operator pos:start="77:51" pos:end="77:51">.</operator><name pos:start="77:52" pos:end="77:56">align</name></name> <operator pos:start="77:58" pos:end="77:58">+</operator> <literal type="number" pos:start="77:60" pos:end="77:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:64"><expr pos:start="83:5" pos:end="83:63"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:6">hw</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:15">samples</name></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <operator pos:start="83:19" pos:end="83:19">(</operator><name pos:start="83:20" pos:end="83:29"><name pos:start="83:20" pos:end="83:22">obt</name><operator pos:start="83:23" pos:end="83:23">.</operator><name pos:start="83:24" pos:end="83:29">nfrags</name></name> <operator pos:start="83:31" pos:end="83:31">*</operator> <name pos:start="83:33" pos:end="83:44"><name pos:start="83:33" pos:end="83:35">obt</name><operator pos:start="83:36" pos:end="83:36">.</operator><name pos:start="83:37" pos:end="83:44">fragsize</name></name><operator pos:start="83:45" pos:end="83:45">)</operator> <operator pos:start="83:47" pos:end="83:48">&gt;&gt;</operator> <name pos:start="83:50" pos:end="83:63"><name pos:start="83:50" pos:end="83:51">hw</name><operator pos:start="83:52" pos:end="83:53">-&gt;</operator><name pos:start="83:54" pos:end="83:57">info</name><operator pos:start="83:58" pos:end="83:58">.</operator><name pos:start="83:59" pos:end="83:63">shift</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:79"><expr pos:start="85:5" pos:end="85:78"><name pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:7">oss</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:16">pcm_buf</name></name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:78"><name pos:start="85:20" pos:end="85:31">audio_calloc</name> <argument_list pos:start="85:33" pos:end="85:78">(<argument pos:start="85:34" pos:end="85:43"><expr pos:start="85:34" pos:end="85:43"><name pos:start="85:34" pos:end="85:43">AUDIO_FUNC</name></expr></argument>, <argument pos:start="85:46" pos:end="85:56"><expr pos:start="85:46" pos:end="85:56"><name pos:start="85:46" pos:end="85:56"><name pos:start="85:46" pos:end="85:47">hw</name><operator pos:start="85:48" pos:end="85:49">-&gt;</operator><name pos:start="85:50" pos:end="85:56">samples</name></name></expr></argument>, <argument pos:start="85:59" pos:end="85:77"><expr pos:start="85:59" pos:end="85:77"><literal type="number" pos:start="85:59" pos:end="85:59">1</literal> <operator pos:start="85:61" pos:end="85:62">&lt;&lt;</operator> <name pos:start="85:64" pos:end="85:77"><name pos:start="85:64" pos:end="85:65">hw</name><operator pos:start="85:66" pos:end="85:67">-&gt;</operator><name pos:start="85:68" pos:end="85:71">info</name><operator pos:start="85:72" pos:end="85:72">.</operator><name pos:start="85:73" pos:end="85:77">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="97:5"><if pos:start="87:5" pos:end="97:5">if <condition pos:start="87:8" pos:end="87:22">(<expr pos:start="87:9" pos:end="87:21"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:21"><name pos:start="87:10" pos:end="87:12">oss</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:21">pcm_buf</name></name></expr>)</condition> <block pos:start="87:24" pos:end="97:5">{<block_content pos:start="89:9" pos:end="95:18">

        <expr_stmt pos:start="89:9" pos:end="91:49"><expr pos:start="89:9" pos:end="91:48"><call pos:start="89:9" pos:end="91:48"><name pos:start="89:9" pos:end="89:13">dolog</name> <argument_list pos:start="89:15" pos:end="91:48">(<argument pos:start="89:16" pos:end="89:76"><expr pos:start="89:16" pos:end="89:76"><literal type="string" pos:start="89:16" pos:end="89:76">"Could not allocate ADC buffer (%d samples, each %d bytes)\n"</literal></expr></argument>,

               <argument pos:start="91:16" pos:end="91:26"><expr pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:26"><name pos:start="91:16" pos:end="91:17">hw</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">samples</name></name></expr></argument>, <argument pos:start="91:29" pos:end="91:47"><expr pos:start="91:29" pos:end="91:47"><literal type="number" pos:start="91:29" pos:end="91:29">1</literal> <operator pos:start="91:31" pos:end="91:32">&lt;&lt;</operator> <name pos:start="91:34" pos:end="91:47"><name pos:start="91:34" pos:end="91:35">hw</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:41">info</name><operator pos:start="91:42" pos:end="91:42">.</operator><name pos:start="91:43" pos:end="91:47">shift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:29"><expr pos:start="93:9" pos:end="93:28"><call pos:start="93:9" pos:end="93:28"><name pos:start="93:9" pos:end="93:22">oss_anal_close</name> <argument_list pos:start="93:24" pos:end="93:28">(<argument pos:start="93:25" pos:end="93:27"><expr pos:start="93:25" pos:end="93:27"><operator pos:start="93:25" pos:end="93:25">&amp;</operator><name pos:start="93:26" pos:end="93:27">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:17"><expr pos:start="101:5" pos:end="101:16"><name pos:start="101:5" pos:end="101:11"><name pos:start="101:5" pos:end="101:7">oss</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:11">fd</name></name> <operator pos:start="101:13" pos:end="101:13">=</operator> <name pos:start="101:15" pos:end="101:16">fd</name></expr>;</expr_stmt>

    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
