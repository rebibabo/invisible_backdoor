<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3143.c" pos:tabs="8"><function pos:start="1:1" pos:end="130:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vnc_connect</name><parameter_list pos:start="1:24" pos:end="1:64">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:34">VncDisplay</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vd</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:49"><decl pos:start="1:41" pos:end="1:49"><type pos:start="1:41" pos:end="1:49"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:49">csock</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:63">skipauth</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="130:1">{<block_content pos:start="5:5" pos:end="124:23">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">VncState</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">vs</name> <init pos:start="5:18" pos:end="5:46">= <expr pos:start="5:20" pos:end="5:46"><call pos:start="5:20" pos:end="5:46"><name pos:start="5:20" pos:end="5:28">g_malloc0</name><argument_list pos:start="5:29" pos:end="5:46">(<argument pos:start="5:30" pos:end="5:45"><expr pos:start="5:30" pos:end="5:45"><sizeof pos:start="5:30" pos:end="5:45">sizeof<argument_list pos:start="5:36" pos:end="5:45">(<argument pos:start="5:37" pos:end="5:44"><expr pos:start="5:37" pos:end="5:44"><name pos:start="5:37" pos:end="5:44">VncState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:6">vs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:13">csock</name></name> <operator pos:start="11:15" pos:end="11:15">=</operator> <name pos:start="11:17" pos:end="11:21">csock</name></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="35:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:16">skipauth</name></expr>)</condition> <block pos:start="15:19" pos:end="25:5">{<block_content pos:start="17:9" pos:end="24:0">

	<expr_stmt pos:start="17:9" pos:end="20:0"><expr pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:10">vs</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:16">auth</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:32">VNC_AUTH_NONE</name></expr>;</expr_stmt>

<cpp:ifdef pos:start="19:1" pos:end="19:21">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:21">CONFIG_VNC_TLS</name></cpp:ifdef>

	<expr_stmt pos:start="21:9" pos:end="24:0"><expr pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:19"><name pos:start="21:9" pos:end="21:10">vs</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:19">subauth</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <name pos:start="21:23" pos:end="21:38">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="35:5">else <block pos:start="25:12" pos:end="35:5">{<block_content pos:start="27:9" pos:end="34:0">

	<expr_stmt pos:start="27:9" pos:end="30:0"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:10">vs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:16">auth</name></name> <operator pos:start="27:18" pos:end="27:18">=</operator> <name pos:start="27:20" pos:end="27:27"><name pos:start="27:20" pos:end="27:21">vd</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:27">auth</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="29:1" pos:end="29:21">#<cpp:directive pos:start="29:2" pos:end="29:6">ifdef</cpp:directive> <name pos:start="29:8" pos:end="29:21">CONFIG_VNC_TLS</name></cpp:ifdef>

	<expr_stmt pos:start="31:9" pos:end="34:0"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:19"><name pos:start="31:9" pos:end="31:10">vs</name><operator pos:start="31:11" pos:end="31:12">-&gt;</operator><name pos:start="31:13" pos:end="31:19">subauth</name></name> <operator pos:start="31:21" pos:end="31:21">=</operator> <name pos:start="31:23" pos:end="31:33"><name pos:start="31:23" pos:end="31:24">vd</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:33">subauth</name></name></expr>;</expr_stmt>

<cpp:endif pos:start="33:1" pos:end="33:6">#<cpp:directive pos:start="33:2" pos:end="33:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:73"><expr pos:start="39:5" pos:end="39:72"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:6">vs</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:18">lossy_rect</name></name> <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:72"><name pos:start="39:22" pos:end="39:30">g_malloc0</name><argument_list pos:start="39:31" pos:end="39:72">(<argument pos:start="39:32" pos:end="39:71"><expr pos:start="39:32" pos:end="39:71"><name pos:start="39:32" pos:end="39:44">VNC_STAT_ROWS</name> <operator pos:start="39:46" pos:end="39:46">*</operator> <sizeof pos:start="39:48" pos:end="39:71">sizeof <argument_list pos:start="39:55" pos:end="39:71">(<argument pos:start="39:56" pos:end="39:70"><expr pos:start="39:56" pos:end="39:70"><operator pos:start="39:56" pos:end="39:56">*</operator><name pos:start="39:57" pos:end="39:70"><name pos:start="39:57" pos:end="39:58">vs</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:70">lossy_rect</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="41:5" pos:end="45:5">for <control pos:start="41:9" pos:end="41:39">(<init pos:start="41:10" pos:end="41:15"><expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:10">i</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>;</init> <condition pos:start="41:17" pos:end="41:34"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:17">i</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="41:36" pos:end="41:38"><expr pos:start="41:36" pos:end="41:38"><operator pos:start="41:36" pos:end="41:37">++</operator><name pos:start="41:38" pos:end="41:38">i</name></expr></incr>)</control> <block pos:start="41:41" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:72">

        <expr_stmt pos:start="43:9" pos:end="43:72"><expr pos:start="43:9" pos:end="43:71"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:10">vs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:22">lossy_rect</name><index pos:start="43:23" pos:end="43:25">[<expr pos:start="43:24" pos:end="43:24"><name pos:start="43:24" pos:end="43:24">i</name></expr>]</index></name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:71"><name pos:start="43:29" pos:end="43:37">g_malloc0</name><argument_list pos:start="43:38" pos:end="43:71">(<argument pos:start="43:39" pos:end="43:70"><expr pos:start="43:39" pos:end="43:70"><name pos:start="43:39" pos:end="43:51">VNC_STAT_COLS</name> <operator pos:start="43:53" pos:end="43:53">*</operator> <sizeof pos:start="43:55" pos:end="43:70">sizeof <argument_list pos:start="43:62" pos:end="43:70">(<argument pos:start="43:63" pos:end="43:69"><expr pos:start="43:63" pos:end="43:69"><name pos:start="43:63" pos:end="43:69">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="49:5" pos:end="49:50"><expr pos:start="49:5" pos:end="49:49"><call pos:start="49:5" pos:end="49:49"><name pos:start="49:5" pos:end="49:13">VNC_DEBUG</name><argument_list pos:start="49:14" pos:end="49:49">(<argument pos:start="49:15" pos:end="49:41"><expr pos:start="49:15" pos:end="49:41"><literal type="string" pos:start="49:15" pos:end="49:41">"New client on socket %d\n"</literal></expr></argument>, <argument pos:start="49:44" pos:end="49:48"><expr pos:start="49:44" pos:end="49:48"><name pos:start="49:44" pos:end="49:48">csock</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:7">dcl</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:13">idle</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:35"><expr pos:start="53:5" pos:end="53:34"><call pos:start="53:5" pos:end="53:34"><name pos:start="53:5" pos:end="53:23">socket_set_nonblock</name><argument_list pos:start="53:24" pos:end="53:34">(<argument pos:start="53:25" pos:end="53:33"><expr pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:33"><name pos:start="53:25" pos:end="53:26">vs</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:33">csock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:69"><expr pos:start="55:5" pos:end="55:68"><call pos:start="55:5" pos:end="55:68"><name pos:start="55:5" pos:end="55:24">qemu_set_fd_handler2</name><argument_list pos:start="55:25" pos:end="55:68">(<argument pos:start="55:26" pos:end="55:34"><expr pos:start="55:26" pos:end="55:34"><name pos:start="55:26" pos:end="55:34"><name pos:start="55:26" pos:end="55:27">vs</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:34">csock</name></name></expr></argument>, <argument pos:start="55:37" pos:end="55:40"><expr pos:start="55:37" pos:end="55:40"><name pos:start="55:37" pos:end="55:40">NULL</name></expr></argument>, <argument pos:start="55:43" pos:end="55:57"><expr pos:start="55:43" pos:end="55:57"><name pos:start="55:43" pos:end="55:57">vnc_client_read</name></expr></argument>, <argument pos:start="55:60" pos:end="55:63"><expr pos:start="55:60" pos:end="55:63"><name pos:start="55:60" pos:end="55:63">NULL</name></expr></argument>, <argument pos:start="55:66" pos:end="55:67"><expr pos:start="55:66" pos:end="55:67"><name pos:start="55:66" pos:end="55:67">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><call pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:25">vnc_client_cache_addr</name><argument_list pos:start="59:26" pos:end="59:29">(<argument pos:start="59:27" pos:end="59:28"><expr pos:start="59:27" pos:end="59:28"><name pos:start="59:27" pos:end="59:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><call pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:17">vnc_qmp_event</name><argument_list pos:start="61:18" pos:end="61:43">(<argument pos:start="61:19" pos:end="61:20"><expr pos:start="61:19" pos:end="61:20"><name pos:start="61:19" pos:end="61:20">vs</name></expr></argument>, <argument pos:start="61:23" pos:end="61:42"><expr pos:start="61:23" pos:end="61:42"><name pos:start="61:23" pos:end="61:42">QEVENT_VNC_CONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><call pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:22">vnc_set_share_mode</name><argument_list pos:start="63:23" pos:end="63:53">(<argument pos:start="63:24" pos:end="63:25"><expr pos:start="63:24" pos:end="63:25"><name pos:start="63:24" pos:end="63:25">vs</name></expr></argument>, <argument pos:start="63:28" pos:end="63:52"><expr pos:start="63:28" pos:end="63:52"><name pos:start="63:28" pos:end="63:52">VNC_SHARE_MODE_CONNECTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:16"><expr pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:10"><name pos:start="67:5" pos:end="67:6">vs</name><operator pos:start="67:7" pos:end="67:8">-&gt;</operator><name pos:start="67:9" pos:end="67:10">vd</name></name> <operator pos:start="67:12" pos:end="67:12">=</operator> <name pos:start="67:14" pos:end="67:15">vd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:20"><expr pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:10"><name pos:start="69:5" pos:end="69:6">vs</name><operator pos:start="69:7" pos:end="69:8">-&gt;</operator><name pos:start="69:9" pos:end="69:10">ds</name></name> <operator pos:start="69:12" pos:end="69:12">=</operator> <name pos:start="69:14" pos:end="69:19"><name pos:start="69:14" pos:end="69:15">vd</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">ds</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:6">vs</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:14">last_x</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <operator pos:start="71:18" pos:end="71:18">-</operator><literal type="number" pos:start="71:19" pos:end="71:19">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:20"><expr pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:14"><name pos:start="73:5" pos:end="73:6">vs</name><operator pos:start="73:7" pos:end="73:8">-&gt;</operator><name pos:start="73:9" pos:end="73:14">last_y</name></name> <operator pos:start="73:16" pos:end="73:16">=</operator> <operator pos:start="73:18" pos:end="73:18">-</operator><literal type="number" pos:start="73:19" pos:end="73:19">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:15"><name pos:start="77:5" pos:end="77:6">vs</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:10">as</name><operator pos:start="77:11" pos:end="77:11">.</operator><name pos:start="77:12" pos:end="77:15">freq</name></name> <operator pos:start="77:17" pos:end="77:17">=</operator> <literal type="number" pos:start="77:19" pos:end="77:23">44100</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:25"><expr pos:start="79:5" pos:end="79:24"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:6">vs</name><operator pos:start="79:7" pos:end="79:8">-&gt;</operator><name pos:start="79:9" pos:end="79:10">as</name><operator pos:start="79:11" pos:end="79:11">.</operator><name pos:start="79:12" pos:end="79:20">nchannels</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:14"><name pos:start="81:5" pos:end="81:6">vs</name><operator pos:start="81:7" pos:end="81:8">-&gt;</operator><name pos:start="81:9" pos:end="81:10">as</name><operator pos:start="81:11" pos:end="81:11">.</operator><name pos:start="81:12" pos:end="81:14">fmt</name></name> <operator pos:start="81:16" pos:end="81:16">=</operator> <name pos:start="81:18" pos:end="81:28">AUD_FMT_S16</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="88:0"><expr pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:21"><name pos:start="83:5" pos:end="83:6">vs</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:10">as</name><operator pos:start="83:11" pos:end="83:11">.</operator><name pos:start="83:12" pos:end="83:21">endianness</name></name> <operator pos:start="83:23" pos:end="83:23">=</operator> <literal type="number" pos:start="83:25" pos:end="83:25">0</literal></expr>;</expr_stmt>



<cpp:ifdef pos:start="87:1" pos:end="87:24">#<cpp:directive pos:start="87:2" pos:end="87:6">ifdef</cpp:directive> <name pos:start="87:8" pos:end="87:24">CONFIG_VNC_THREAD</name></cpp:ifdef>

    <expr_stmt pos:start="89:5" pos:end="93:0"><expr pos:start="89:5" pos:end="89:38"><call pos:start="89:5" pos:end="89:38"><name pos:start="89:5" pos:end="89:19">qemu_mutex_init</name><argument_list pos:start="89:20" pos:end="89:38">(<argument pos:start="89:21" pos:end="89:37"><expr pos:start="89:21" pos:end="89:37"><operator pos:start="89:21" pos:end="89:21">&amp;</operator><name pos:start="89:22" pos:end="89:37"><name pos:start="89:22" pos:end="89:23">vs</name><operator pos:start="89:24" pos:end="89:25">-&gt;</operator><name pos:start="89:26" pos:end="89:37">output_mutex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


<cpp:endif pos:start="92:1" pos:end="92:6">#<cpp:directive pos:start="92:2" pos:end="92:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="96:5" pos:end="96:47"><expr pos:start="96:5" pos:end="96:46"><call pos:start="96:5" pos:end="96:46"><name pos:start="96:5" pos:end="96:22">QTAILQ_INSERT_HEAD</name><argument_list pos:start="96:23" pos:end="96:46">(<argument pos:start="96:24" pos:end="96:35"><expr pos:start="96:24" pos:end="96:35"><operator pos:start="96:24" pos:end="96:24">&amp;</operator><name pos:start="96:25" pos:end="96:35"><name pos:start="96:25" pos:end="96:26">vd</name><operator pos:start="96:27" pos:end="96:28">-&gt;</operator><name pos:start="96:29" pos:end="96:35">clients</name></name></expr></argument>, <argument pos:start="96:38" pos:end="96:39"><expr pos:start="96:38" pos:end="96:39"><name pos:start="96:38" pos:end="96:39">vs</name></expr></argument>, <argument pos:start="96:42" pos:end="96:45"><expr pos:start="96:42" pos:end="96:45"><name pos:start="96:42" pos:end="96:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="100:5" pos:end="100:20"><expr pos:start="100:5" pos:end="100:19"><call pos:start="100:5" pos:end="100:19"><name pos:start="100:5" pos:end="100:17">vga_hw_update</name><argument_list pos:start="100:18" pos:end="100:19">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="104:5" pos:end="104:39"><expr pos:start="104:5" pos:end="104:38"><call pos:start="104:5" pos:end="104:38"><name pos:start="104:5" pos:end="104:13">vnc_write</name><argument_list pos:start="104:14" pos:end="104:38">(<argument pos:start="104:15" pos:end="104:16"><expr pos:start="104:15" pos:end="104:16"><name pos:start="104:15" pos:end="104:16">vs</name></expr></argument>, <argument pos:start="104:19" pos:end="104:33"><expr pos:start="104:19" pos:end="104:33"><literal type="string" pos:start="104:19" pos:end="104:33">"RFB 003.008\n"</literal></expr></argument>, <argument pos:start="104:36" pos:end="104:37"><expr pos:start="104:36" pos:end="104:37"><literal type="number" pos:start="104:36" pos:end="104:37">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="106:5" pos:end="106:18"><expr pos:start="106:5" pos:end="106:17"><call pos:start="106:5" pos:end="106:17"><name pos:start="106:5" pos:end="106:13">vnc_flush</name><argument_list pos:start="106:14" pos:end="106:17">(<argument pos:start="106:15" pos:end="106:16"><expr pos:start="106:15" pos:end="106:16"><name pos:start="106:15" pos:end="106:16">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="108:5" pos:end="108:44"><expr pos:start="108:5" pos:end="108:43"><call pos:start="108:5" pos:end="108:43"><name pos:start="108:5" pos:end="108:17">vnc_read_when</name><argument_list pos:start="108:18" pos:end="108:43">(<argument pos:start="108:19" pos:end="108:20"><expr pos:start="108:19" pos:end="108:20"><name pos:start="108:19" pos:end="108:20">vs</name></expr></argument>, <argument pos:start="108:23" pos:end="108:38"><expr pos:start="108:23" pos:end="108:38"><name pos:start="108:23" pos:end="108:38">protocol_version</name></expr></argument>, <argument pos:start="108:41" pos:end="108:42"><expr pos:start="108:41" pos:end="108:42"><literal type="number" pos:start="108:41" pos:end="108:42">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="110:5" pos:end="110:19"><expr pos:start="110:5" pos:end="110:18"><call pos:start="110:5" pos:end="110:18"><name pos:start="110:5" pos:end="110:14">reset_keys</name><argument_list pos:start="110:15" pos:end="110:18">(<argument pos:start="110:16" pos:end="110:17"><expr pos:start="110:16" pos:end="110:17"><name pos:start="110:16" pos:end="110:17">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="112:5" pos:end="114:59"><if pos:start="112:5" pos:end="114:59">if <condition pos:start="112:8" pos:end="112:30">(<expr pos:start="112:9" pos:end="112:29"><name pos:start="112:9" pos:end="112:29"><name pos:start="112:9" pos:end="112:10">vs</name><operator pos:start="112:11" pos:end="112:12">-&gt;</operator><name pos:start="112:13" pos:end="112:14">vd</name><operator pos:start="112:15" pos:end="112:16">-&gt;</operator><name pos:start="112:17" pos:end="112:29">lock_key_sync</name></name></expr>)</condition><block type="pseudo" pos:start="114:9" pos:end="114:59"><block_content pos:start="114:9" pos:end="114:59">

        <expr_stmt pos:start="114:9" pos:end="114:59"><expr pos:start="114:9" pos:end="114:58"><name pos:start="114:9" pos:end="114:15"><name pos:start="114:9" pos:end="114:10">vs</name><operator pos:start="114:11" pos:end="114:12">-&gt;</operator><name pos:start="114:13" pos:end="114:15">led</name></name> <operator pos:start="114:17" pos:end="114:17">=</operator> <call pos:start="114:19" pos:end="114:58"><name pos:start="114:19" pos:end="114:44">qemu_add_led_event_handler</name><argument_list pos:start="114:45" pos:end="114:58">(<argument pos:start="114:46" pos:end="114:53"><expr pos:start="114:46" pos:end="114:53"><name pos:start="114:46" pos:end="114:53">kbd_leds</name></expr></argument>, <argument pos:start="114:56" pos:end="114:57"><expr pos:start="114:56" pos:end="114:57"><name pos:start="114:56" pos:end="114:57">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="118:5" pos:end="118:63"><expr pos:start="118:5" pos:end="118:62"><name pos:start="118:5" pos:end="118:34"><name pos:start="118:5" pos:end="118:6">vs</name><operator pos:start="118:7" pos:end="118:8">-&gt;</operator><name pos:start="118:9" pos:end="118:27">mouse_mode_notifier</name><operator pos:start="118:28" pos:end="118:28">.</operator><name pos:start="118:29" pos:end="118:34">notify</name></name> <operator pos:start="118:36" pos:end="118:36">=</operator> <name pos:start="118:38" pos:end="118:62">check_pointer_type_change</name></expr>;</expr_stmt>

    <expr_stmt pos:start="120:5" pos:end="120:66"><expr pos:start="120:5" pos:end="120:65"><call pos:start="120:5" pos:end="120:65"><name pos:start="120:5" pos:end="120:39">qemu_add_mouse_mode_change_notifier</name><argument_list pos:start="120:40" pos:end="120:65">(<argument pos:start="120:41" pos:end="120:64"><expr pos:start="120:41" pos:end="120:64"><operator pos:start="120:41" pos:end="120:41">&amp;</operator><name pos:start="120:42" pos:end="120:64"><name pos:start="120:42" pos:end="120:43">vs</name><operator pos:start="120:44" pos:end="120:45">-&gt;</operator><name pos:start="120:46" pos:end="120:64">mouse_mode_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="124:5" pos:end="124:23"><expr pos:start="124:5" pos:end="124:22"><call pos:start="124:5" pos:end="124:22"><name pos:start="124:5" pos:end="124:18">vnc_init_timer</name><argument_list pos:start="124:19" pos:end="124:22">(<argument pos:start="124:20" pos:end="124:21"><expr pos:start="124:20" pos:end="124:21"><name pos:start="124:20" pos:end="124:21">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="128:5" pos:end="128:35">/* vs might be free()ed here */</comment>

</block_content>}</block></function></unit>
