<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24363.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">dec_sl</name><parameter_list pos:start="1:19" pos:end="1:36">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:33"><name pos:start="1:20" pos:end="1:31">DisasContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:18">format</name></name> <operator pos:start="5:20" pos:end="5:21">==</operator> <name pos:start="5:23" pos:end="5:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="5:34" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:64">

        <expr_stmt pos:start="7:9" pos:end="7:64"><expr pos:start="7:9" pos:end="7:63"><call pos:start="7:9" pos:end="7:63"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:63">(<argument pos:start="7:17" pos:end="7:36"><expr pos:start="7:17" pos:end="7:36"><literal type="string" pos:start="7:17" pos:end="7:36">"sli r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="7:39" pos:end="7:44"><expr pos:start="7:39" pos:end="7:44"><name pos:start="7:39" pos:end="7:44"><name pos:start="7:39" pos:end="7:40">dc</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:44">r1</name></name></expr></argument>, <argument pos:start="7:47" pos:end="7:52"><expr pos:start="7:47" pos:end="7:52"><name pos:start="7:47" pos:end="7:52"><name pos:start="7:47" pos:end="7:48">dc</name><operator pos:start="7:49" pos:end="7:50">-&gt;</operator><name pos:start="7:51" pos:end="7:52">r0</name></name></expr></argument>, <argument pos:start="7:55" pos:end="7:62"><expr pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:56">dc</name><operator pos:start="7:57" pos:end="7:58">-&gt;</operator><name pos:start="7:59" pos:end="7:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="13:5">else <block pos:start="9:12" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:62">

        <expr_stmt pos:start="11:9" pos:end="11:62"><expr pos:start="11:9" pos:end="11:61"><call pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:61">(<argument pos:start="11:17" pos:end="11:36"><expr pos:start="11:17" pos:end="11:36"><literal type="string" pos:start="11:17" pos:end="11:36">"sl r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="11:39" pos:end="11:44"><expr pos:start="11:39" pos:end="11:44"><name pos:start="11:39" pos:end="11:44"><name pos:start="11:39" pos:end="11:40">dc</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:44">r2</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:52"><expr pos:start="11:47" pos:end="11:52"><name pos:start="11:47" pos:end="11:52"><name pos:start="11:47" pos:end="11:48">dc</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:52">r0</name></name></expr></argument>, <argument pos:start="11:55" pos:end="11:60"><expr pos:start="11:55" pos:end="11:60"><name pos:start="11:55" pos:end="11:60"><name pos:start="11:55" pos:end="11:56">dc</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:60">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:50">(<expr pos:start="17:9" pos:end="17:49"><operator pos:start="17:9" pos:end="17:9">!</operator><operator pos:start="17:10" pos:end="17:10">(</operator><name pos:start="17:11" pos:end="17:27"><name pos:start="17:11" pos:end="17:12">dc</name><operator pos:start="17:13" pos:end="17:14">-&gt;</operator><name pos:start="17:15" pos:end="17:17">env</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:27">features</name></name> <operator pos:start="17:29" pos:end="17:29">&amp;</operator> <name pos:start="17:31" pos:end="17:48">LM32_FEATURE_SHIFT</name><operator pos:start="17:49" pos:end="17:49">)</operator></expr>)</condition> <block pos:start="17:52" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:66">

        <expr_stmt pos:start="19:9" pos:end="19:66"><expr pos:start="19:9" pos:end="19:65"><call pos:start="19:9" pos:end="19:65"><name pos:start="19:9" pos:end="19:17">cpu_abort</name><argument_list pos:start="19:18" pos:end="19:65">(<argument pos:start="19:19" pos:end="19:25"><expr pos:start="19:19" pos:end="19:25"><name pos:start="19:19" pos:end="19:25"><name pos:start="19:19" pos:end="19:20">dc</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:25">env</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:64"><expr pos:start="19:28" pos:end="19:64"><literal type="string" pos:start="19:28" pos:end="19:64">"hardware shifter is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="39:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:10">dc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:18">format</name></name> <operator pos:start="25:20" pos:end="25:21">==</operator> <name pos:start="25:23" pos:end="25:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="25:34" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:64">

        <expr_stmt pos:start="27:9" pos:end="27:64"><expr pos:start="27:9" pos:end="27:63"><call pos:start="27:9" pos:end="27:63"><name pos:start="27:9" pos:end="27:23">tcg_gen_shli_tl</name><argument_list pos:start="27:24" pos:end="27:63">(<argument pos:start="27:25" pos:end="27:37"><expr pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:37"><name pos:start="27:25" pos:end="27:29">cpu_R</name><index pos:start="27:30" pos:end="27:37">[<expr pos:start="27:31" pos:end="27:36"><name pos:start="27:31" pos:end="27:36"><name pos:start="27:31" pos:end="27:32">dc</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:36">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="27:40" pos:end="27:52"><expr pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:52"><name pos:start="27:40" pos:end="27:44">cpu_R</name><index pos:start="27:45" pos:end="27:52">[<expr pos:start="27:46" pos:end="27:51"><name pos:start="27:46" pos:end="27:51"><name pos:start="27:46" pos:end="27:47">dc</name><operator pos:start="27:48" pos:end="27:49">-&gt;</operator><name pos:start="27:50" pos:end="27:51">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="27:55" pos:end="27:62"><expr pos:start="27:55" pos:end="27:62"><name pos:start="27:55" pos:end="27:62"><name pos:start="27:55" pos:end="27:56">dc</name><operator pos:start="27:57" pos:end="27:58">-&gt;</operator><name pos:start="27:59" pos:end="27:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="39:5">else <block pos:start="29:12" pos:end="39:5">{<block_content pos:start="31:9" pos:end="37:26">

        <decl_stmt pos:start="31:9" pos:end="31:33"><decl pos:start="31:9" pos:end="31:32"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:12">TCGv</name></type> <name pos:start="31:14" pos:end="31:15">t0</name> <init pos:start="31:17" pos:end="31:32">= <expr pos:start="31:19" pos:end="31:32"><call pos:start="31:19" pos:end="31:32"><name pos:start="31:19" pos:end="31:30">tcg_temp_new</name><argument_list pos:start="31:31" pos:end="31:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><call pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:23">tcg_gen_andi_tl</name><argument_list pos:start="33:24" pos:end="33:48">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">t0</name></expr></argument>, <argument pos:start="33:29" pos:end="33:41"><expr pos:start="33:29" pos:end="33:41"><name pos:start="33:29" pos:end="33:41"><name pos:start="33:29" pos:end="33:33">cpu_R</name><index pos:start="33:34" pos:end="33:41">[<expr pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:40"><name pos:start="33:35" pos:end="33:36">dc</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:40">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="33:44" pos:end="33:47"><expr pos:start="33:44" pos:end="33:47"><literal type="number" pos:start="33:44" pos:end="33:47">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:57"><expr pos:start="35:9" pos:end="35:56"><call pos:start="35:9" pos:end="35:56"><name pos:start="35:9" pos:end="35:22">tcg_gen_shl_tl</name><argument_list pos:start="35:23" pos:end="35:56">(<argument pos:start="35:24" pos:end="35:36"><expr pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:36"><name pos:start="35:24" pos:end="35:28">cpu_R</name><index pos:start="35:29" pos:end="35:36">[<expr pos:start="35:30" pos:end="35:35"><name pos:start="35:30" pos:end="35:35"><name pos:start="35:30" pos:end="35:31">dc</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:39" pos:end="35:51"><expr pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:51"><name pos:start="35:39" pos:end="35:43">cpu_R</name><index pos:start="35:44" pos:end="35:51">[<expr pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:50"><name pos:start="35:45" pos:end="35:46">dc</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:50">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:54" pos:end="35:55"><expr pos:start="35:54" pos:end="35:55"><name pos:start="35:54" pos:end="35:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><call pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:21">tcg_temp_free</name><argument_list pos:start="37:22" pos:end="37:25">(<argument pos:start="37:23" pos:end="37:24"><expr pos:start="37:23" pos:end="37:24"><name pos:start="37:23" pos:end="37:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
