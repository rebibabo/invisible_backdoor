<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1340.c" pos:tabs="8"><function pos:start="1:1" pos:end="419:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:39">sdp_write_media_attributes</name><parameter_list pos:start="1:40" pos:end="1:120">(<parameter pos:start="1:41" pos:end="1:50"><decl pos:start="1:41" pos:end="1:50"><type pos:start="1:41" pos:end="1:50"><name pos:start="1:41" pos:end="1:44">char</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">buff</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:60"><decl pos:start="1:53" pos:end="1:60"><type pos:start="1:53" pos:end="1:60"><name pos:start="1:53" pos:end="1:55">int</name></type> <name pos:start="1:57" pos:end="1:60">size</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:79"><decl pos:start="1:63" pos:end="1:79"><type pos:start="1:63" pos:end="1:79"><name pos:start="1:63" pos:end="1:76">AVCodecContext</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:79">c</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:97"><decl pos:start="1:82" pos:end="1:97"><type pos:start="1:82" pos:end="1:97"><name pos:start="1:82" pos:end="1:84">int</name></type> <name pos:start="1:86" pos:end="1:97">payload_type</name></decl></parameter>, <parameter pos:start="1:100" pos:end="1:119"><decl pos:start="1:100" pos:end="1:119"><type pos:start="1:100" pos:end="1:119"><name pos:start="1:100" pos:end="1:114">AVFormatContext</name> <modifier pos:start="1:116" pos:end="1:116">*</modifier></type><name pos:start="1:117" pos:end="1:119">fmt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="419:1">{<block_content pos:start="5:5" pos:end="417:16">

    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:16">config</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">NULL</name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="409:5">switch <condition pos:start="9:12" pos:end="9:24">(<expr pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:23"><name pos:start="9:13" pos:end="9:13">c</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:23">codec_id</name></name></expr>)</condition> <block pos:start="9:26" pos:end="409:5">{<block_content pos:start="11:9" pos:end="407:18">

        <case pos:start="11:9" pos:end="11:30">case <expr pos:start="11:14" pos:end="11:29"><name pos:start="11:14" pos:end="11:29">AV_CODEC_ID_H264</name></expr>:</case> <block pos:start="11:32" pos:end="37:9">{<block_content pos:start="13:13" pos:end="35:18">

            <decl_stmt pos:start="13:13" pos:end="13:25"><decl pos:start="13:13" pos:end="13:24"><type pos:start="13:13" pos:end="13:15"><name pos:start="13:13" pos:end="13:15">int</name></type> <name pos:start="13:17" pos:end="13:20">mode</name> <init pos:start="13:22" pos:end="13:24">= <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">1</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="15:13" pos:end="19:25"><if pos:start="15:13" pos:end="19:25">if <condition pos:start="15:16" pos:end="17:77">(<expr pos:start="15:17" pos:end="17:76"><name pos:start="15:17" pos:end="15:19">fmt</name> <operator pos:start="15:21" pos:end="15:22">&amp;&amp;</operator> <name pos:start="15:24" pos:end="15:35"><name pos:start="15:24" pos:end="15:26">fmt</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:35">oformat</name></name> <operator pos:start="15:37" pos:end="15:38">&amp;&amp;</operator> <name pos:start="15:40" pos:end="15:63"><name pos:start="15:40" pos:end="15:42">fmt</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:51">oformat</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:63">priv_class</name></name> <operator pos:start="15:65" pos:end="15:66">&amp;&amp;</operator>

                <call pos:start="17:17" pos:end="17:76"><name pos:start="17:17" pos:end="17:34">av_opt_flag_is_set</name><argument_list pos:start="17:35" pos:end="17:76">(<argument pos:start="17:36" pos:end="17:49"><expr pos:start="17:36" pos:end="17:49"><name pos:start="17:36" pos:end="17:49"><name pos:start="17:36" pos:end="17:38">fmt</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">priv_data</name></name></expr></argument>, <argument pos:start="17:52" pos:end="17:61"><expr pos:start="17:52" pos:end="17:61"><literal type="string" pos:start="17:52" pos:end="17:61">"rtpflags"</literal></expr></argument>, <argument pos:start="17:64" pos:end="17:75"><expr pos:start="17:64" pos:end="17:75"><literal type="string" pos:start="17:64" pos:end="17:75">"h264_mode0"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:25"><block_content pos:start="19:17" pos:end="19:25">

                <expr_stmt pos:start="19:17" pos:end="19:25"><expr pos:start="19:17" pos:end="19:24"><name pos:start="19:17" pos:end="19:20">mode</name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="21:13" pos:end="25:13"><if pos:start="21:13" pos:end="25:13">if <condition pos:start="21:16" pos:end="21:34">(<expr pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:33"><name pos:start="21:17" pos:end="21:17">c</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:33">extradata_size</name></name></expr>)</condition> <block pos:start="21:36" pos:end="25:13">{<block_content pos:start="23:17" pos:end="23:44">

                <expr_stmt pos:start="23:17" pos:end="23:44"><expr pos:start="23:17" pos:end="23:43"><name pos:start="23:17" pos:end="23:22">config</name> <operator pos:start="23:24" pos:end="23:24">=</operator> <call pos:start="23:26" pos:end="23:43"><name pos:start="23:26" pos:end="23:40">extradata2psets</name><argument_list pos:start="23:41" pos:end="23:43">(<argument pos:start="23:42" pos:end="23:42"><expr pos:start="23:42" pos:end="23:42"><name pos:start="23:42" pos:end="23:42">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="33:79"><expr pos:start="27:13" pos:end="33:78"><call pos:start="27:13" pos:end="33:78"><name pos:start="27:13" pos:end="27:23">av_strlcatf</name><argument_list pos:start="27:24" pos:end="33:78">(<argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">buff</name></expr></argument>, <argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><name pos:start="27:31" pos:end="27:34">size</name></expr></argument>, <argument pos:start="27:37" pos:end="29:75"><expr pos:start="27:37" pos:end="29:75"><literal type="string" pos:start="27:37" pos:end="27:64">"a=rtpmap:%d H264/90000\r\n"</literal>

                                    <literal type="string" pos:start="29:37" pos:end="29:75">"a=fmtp:%d packetization-mode=%d%s\r\n"</literal></expr></argument>,

                                     <argument pos:start="31:38" pos:end="31:49"><expr pos:start="31:38" pos:end="31:49"><name pos:start="31:38" pos:end="31:49">payload_type</name></expr></argument>,

                                     <argument pos:start="33:38" pos:end="33:49"><expr pos:start="33:38" pos:end="33:49"><name pos:start="33:38" pos:end="33:49">payload_type</name></expr></argument>, <argument pos:start="33:52" pos:end="33:55"><expr pos:start="33:52" pos:end="33:55"><name pos:start="33:52" pos:end="33:55">mode</name></expr></argument>, <argument pos:start="33:58" pos:end="33:77"><expr pos:start="33:58" pos:end="33:77"><ternary pos:start="33:58" pos:end="33:77"><condition pos:start="33:58" pos:end="33:65"><expr pos:start="33:58" pos:end="33:63"><name pos:start="33:58" pos:end="33:63">config</name></expr> ?</condition><then pos:start="33:67" pos:end="33:72"> <expr pos:start="33:67" pos:end="33:72"><name pos:start="33:67" pos:end="33:72">config</name></expr> </then><else pos:start="33:74" pos:end="33:77">: <expr pos:start="33:76" pos:end="33:77"><literal type="string" pos:start="33:76" pos:end="33:77">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block>

        <case pos:start="39:9" pos:end="39:30">case <expr pos:start="39:14" pos:end="39:29"><name pos:start="39:14" pos:end="39:29">AV_CODEC_ID_H263</name></expr>:</case>

        <case pos:start="41:9" pos:end="41:31">case <expr pos:start="41:14" pos:end="41:30"><name pos:start="41:14" pos:end="41:30">AV_CODEC_ID_H263P</name></expr>:</case>

            <comment type="block" pos:start="43:13" pos:end="49:50">/* a=framesize is required by 3GPP TS 26.234 (PSS). It

             * actually specifies the maximum video size, but we only know

             * the current size. This is required for playback on Android

             * stagefright and on Samsung bada. */</comment>

            <if_stmt pos:start="51:13" pos:end="63:71"><if pos:start="51:13" pos:end="63:71">if <condition pos:start="51:16" pos:end="55:49">(<expr pos:start="51:17" pos:end="55:48"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:20">fmt</name> <operator pos:start="51:22" pos:end="51:23">||</operator> <operator pos:start="51:25" pos:end="51:25">!</operator><name pos:start="51:26" pos:end="51:49"><name pos:start="51:26" pos:end="51:28">fmt</name><operator pos:start="51:29" pos:end="51:30">-&gt;</operator><name pos:start="51:31" pos:end="51:37">oformat</name><operator pos:start="51:38" pos:end="51:39">-&gt;</operator><name pos:start="51:40" pos:end="51:49">priv_class</name></name> <operator pos:start="51:51" pos:end="51:52">||</operator>

                <operator pos:start="53:17" pos:end="53:17">!</operator><call pos:start="53:18" pos:end="53:74"><name pos:start="53:18" pos:end="53:35">av_opt_flag_is_set</name><argument_list pos:start="53:36" pos:end="53:74">(<argument pos:start="53:37" pos:end="53:50"><expr pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:50"><name pos:start="53:37" pos:end="53:39">fmt</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:50">priv_data</name></name></expr></argument>, <argument pos:start="53:53" pos:end="53:62"><expr pos:start="53:53" pos:end="53:62"><literal type="string" pos:start="53:53" pos:end="53:62">"rtpflags"</literal></expr></argument>, <argument pos:start="53:65" pos:end="53:73"><expr pos:start="53:65" pos:end="53:73"><literal type="string" pos:start="53:65" pos:end="53:73">"rfc2190"</literal></expr></argument>)</argument_list></call> <operator pos:start="53:76" pos:end="53:77">||</operator>

                <name pos:start="55:17" pos:end="55:27"><name pos:start="55:17" pos:end="55:17">c</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:27">codec_id</name></name> <operator pos:start="55:29" pos:end="55:30">==</operator> <name pos:start="55:32" pos:end="55:48">AV_CODEC_ID_H263P</name></expr>)</condition><block type="pseudo" pos:start="57:13" pos:end="63:71"><block_content pos:start="57:13" pos:end="63:71">

            <expr_stmt pos:start="57:13" pos:end="63:71"><expr pos:start="57:13" pos:end="63:70"><call pos:start="57:13" pos:end="63:70"><name pos:start="57:13" pos:end="57:23">av_strlcatf</name><argument_list pos:start="57:24" pos:end="63:70">(<argument pos:start="57:25" pos:end="57:28"><expr pos:start="57:25" pos:end="57:28"><name pos:start="57:25" pos:end="57:28">buff</name></expr></argument>, <argument pos:start="57:31" pos:end="57:34"><expr pos:start="57:31" pos:end="57:34"><name pos:start="57:31" pos:end="57:34">size</name></expr></argument>, <argument pos:start="57:37" pos:end="59:62"><expr pos:start="57:37" pos:end="59:62"><literal type="string" pos:start="57:37" pos:end="57:69">"a=rtpmap:%d H263-2000/90000\r\n"</literal>

                                    <literal type="string" pos:start="59:37" pos:end="59:62">"a=framesize:%d %d-%d\r\n"</literal></expr></argument>,

                                    <argument pos:start="61:37" pos:end="61:48"><expr pos:start="61:37" pos:end="61:48"><name pos:start="61:37" pos:end="61:48">payload_type</name></expr></argument>,

                                    <argument pos:start="63:37" pos:end="63:48"><expr pos:start="63:37" pos:end="63:48"><name pos:start="63:37" pos:end="63:48">payload_type</name></expr></argument>, <argument pos:start="63:51" pos:end="63:58"><expr pos:start="63:51" pos:end="63:58"><name pos:start="63:51" pos:end="63:58"><name pos:start="63:51" pos:end="63:51">c</name><operator pos:start="63:52" pos:end="63:53">-&gt;</operator><name pos:start="63:54" pos:end="63:58">width</name></name></expr></argument>, <argument pos:start="63:61" pos:end="63:69"><expr pos:start="63:61" pos:end="63:69"><name pos:start="63:61" pos:end="63:69"><name pos:start="63:61" pos:end="63:61">c</name><operator pos:start="63:62" pos:end="63:63">-&gt;</operator><name pos:start="63:64" pos:end="63:69">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:30">case <expr pos:start="67:14" pos:end="67:29"><name pos:start="67:14" pos:end="67:29">AV_CODEC_ID_HEVC</name></expr>:</case>

            <if_stmt pos:start="69:13" pos:end="73:78"><if pos:start="69:13" pos:end="73:78">if <condition pos:start="69:16" pos:end="69:34">(<expr pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:17">c</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:33">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="71:17" pos:end="73:78"><block_content pos:start="71:17" pos:end="73:78">

                <expr_stmt pos:start="71:17" pos:end="73:78"><expr pos:start="71:17" pos:end="73:77"><call pos:start="71:17" pos:end="73:77"><name pos:start="71:17" pos:end="71:22">av_log</name><argument_list pos:start="71:23" pos:end="73:77">(<argument pos:start="71:24" pos:end="71:27"><expr pos:start="71:24" pos:end="71:27"><name pos:start="71:24" pos:end="71:27">NULL</name></expr></argument>, <argument pos:start="71:30" pos:end="71:43"><expr pos:start="71:30" pos:end="71:43"><name pos:start="71:30" pos:end="71:43">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="71:46" pos:end="73:76"><expr pos:start="71:46" pos:end="73:76"><literal type="string" pos:start="71:46" pos:end="71:76">"HEVC extradata not currently "</literal>

                                             <literal type="string" pos:start="73:46" pos:end="73:76">"passed properly through SDP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:80"><expr pos:start="75:13" pos:end="75:79"><call pos:start="75:13" pos:end="75:79"><name pos:start="75:13" pos:end="75:23">av_strlcatf</name><argument_list pos:start="75:24" pos:end="75:79">(<argument pos:start="75:25" pos:end="75:28"><expr pos:start="75:25" pos:end="75:28"><name pos:start="75:25" pos:end="75:28">buff</name></expr></argument>, <argument pos:start="75:31" pos:end="75:34"><expr pos:start="75:31" pos:end="75:34"><name pos:start="75:31" pos:end="75:34">size</name></expr></argument>, <argument pos:start="75:37" pos:end="75:64"><expr pos:start="75:37" pos:end="75:64"><literal type="string" pos:start="75:37" pos:end="75:64">"a=rtpmap:%d H265/90000\r\n"</literal></expr></argument>, <argument pos:start="75:67" pos:end="75:78"><expr pos:start="75:67" pos:end="75:78"><name pos:start="75:67" pos:end="75:78">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:31">case <expr pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:30">AV_CODEC_ID_MPEG4</name></expr>:</case>

            <if_stmt pos:start="81:13" pos:end="85:13"><if pos:start="81:13" pos:end="85:13">if <condition pos:start="81:16" pos:end="81:34">(<expr pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:17">c</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:33">extradata_size</name></name></expr>)</condition> <block pos:start="81:36" pos:end="85:13">{<block_content pos:start="83:17" pos:end="83:45">

                <expr_stmt pos:start="83:17" pos:end="83:45"><expr pos:start="83:17" pos:end="83:44"><name pos:start="83:17" pos:end="83:22">config</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <call pos:start="83:26" pos:end="83:44"><name pos:start="83:26" pos:end="83:41">extradata2config</name><argument_list pos:start="83:42" pos:end="83:44">(<argument pos:start="83:43" pos:end="83:43"><expr pos:start="83:43" pos:end="83:43"><name pos:start="83:43" pos:end="83:43">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="93:73"><expr pos:start="87:13" pos:end="93:72"><call pos:start="87:13" pos:end="93:72"><name pos:start="87:13" pos:end="87:23">av_strlcatf</name><argument_list pos:start="87:24" pos:end="93:72">(<argument pos:start="87:25" pos:end="87:28"><expr pos:start="87:25" pos:end="87:28"><name pos:start="87:25" pos:end="87:28">buff</name></expr></argument>, <argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><name pos:start="87:31" pos:end="87:34">size</name></expr></argument>, <argument pos:start="87:37" pos:end="89:72"><expr pos:start="87:37" pos:end="89:72"><literal type="string" pos:start="87:37" pos:end="87:67">"a=rtpmap:%d MP4V-ES/90000\r\n"</literal>

                                    <literal type="string" pos:start="89:37" pos:end="89:72">"a=fmtp:%d profile-level-id=1%s\r\n"</literal></expr></argument>,

                                     <argument pos:start="91:38" pos:end="91:49"><expr pos:start="91:38" pos:end="91:49"><name pos:start="91:38" pos:end="91:49">payload_type</name></expr></argument>,

                                     <argument pos:start="93:38" pos:end="93:49"><expr pos:start="93:38" pos:end="93:49"><name pos:start="93:38" pos:end="93:49">payload_type</name></expr></argument>, <argument pos:start="93:52" pos:end="93:71"><expr pos:start="93:52" pos:end="93:71"><ternary pos:start="93:52" pos:end="93:71"><condition pos:start="93:52" pos:end="93:59"><expr pos:start="93:52" pos:end="93:57"><name pos:start="93:52" pos:end="93:57">config</name></expr> ?</condition><then pos:start="93:61" pos:end="93:66"> <expr pos:start="93:61" pos:end="93:66"><name pos:start="93:61" pos:end="93:66">config</name></expr> </then><else pos:start="93:68" pos:end="93:71">: <expr pos:start="93:70" pos:end="93:71"><literal type="string" pos:start="93:70" pos:end="93:71">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:29">case <expr pos:start="97:14" pos:end="97:28"><name pos:start="97:14" pos:end="97:28">AV_CODEC_ID_AAC</name></expr>:</case>

            <if_stmt pos:start="99:13" pos:end="155:13"><if pos:start="99:13" pos:end="117:13">if <condition pos:start="99:16" pos:end="101:71">(<expr pos:start="99:17" pos:end="101:70"><name pos:start="99:17" pos:end="99:19">fmt</name> <operator pos:start="99:21" pos:end="99:22">&amp;&amp;</operator> <name pos:start="99:24" pos:end="99:47"><name pos:start="99:24" pos:end="99:26">fmt</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:35">oformat</name><operator pos:start="99:36" pos:end="99:37">-&gt;</operator><name pos:start="99:38" pos:end="99:47">priv_class</name></name> <operator pos:start="99:49" pos:end="99:50">&amp;&amp;</operator>

                <call pos:start="101:17" pos:end="101:70"><name pos:start="101:17" pos:end="101:34">av_opt_flag_is_set</name><argument_list pos:start="101:35" pos:end="101:70">(<argument pos:start="101:36" pos:end="101:49"><expr pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:49"><name pos:start="101:36" pos:end="101:38">fmt</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:49">priv_data</name></name></expr></argument>, <argument pos:start="101:52" pos:end="101:61"><expr pos:start="101:52" pos:end="101:61"><literal type="string" pos:start="101:52" pos:end="101:61">"rtpflags"</literal></expr></argument>, <argument pos:start="101:64" pos:end="101:69"><expr pos:start="101:64" pos:end="101:69"><literal type="string" pos:start="101:64" pos:end="101:69">"latm"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:73" pos:end="117:13">{<block_content pos:start="103:17" pos:end="115:93">

                <expr_stmt pos:start="103:17" pos:end="103:48"><expr pos:start="103:17" pos:end="103:47"><name pos:start="103:17" pos:end="103:22">config</name> <operator pos:start="103:24" pos:end="103:24">=</operator> <call pos:start="103:26" pos:end="103:47"><name pos:start="103:26" pos:end="103:44">latm_context2config</name><argument_list pos:start="103:45" pos:end="103:47">(<argument pos:start="103:46" pos:end="103:46"><expr pos:start="103:46" pos:end="103:46"><name pos:start="103:46" pos:end="103:46">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="107:32"><if pos:start="105:17" pos:end="107:32">if <condition pos:start="105:20" pos:end="105:28">(<expr pos:start="105:21" pos:end="105:27"><operator pos:start="105:21" pos:end="105:21">!</operator><name pos:start="105:22" pos:end="105:27">config</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:32"><block_content pos:start="107:21" pos:end="107:32">

                    <return pos:start="107:21" pos:end="107:32">return <expr pos:start="107:28" pos:end="107:31"><name pos:start="107:28" pos:end="107:31">NULL</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="109:17" pos:end="115:93"><expr pos:start="109:17" pos:end="115:92"><call pos:start="109:17" pos:end="115:92"><name pos:start="109:17" pos:end="109:27">av_strlcatf</name><argument_list pos:start="109:28" pos:end="115:92">(<argument pos:start="109:29" pos:end="109:32"><expr pos:start="109:29" pos:end="109:32"><name pos:start="109:29" pos:end="109:32">buff</name></expr></argument>, <argument pos:start="109:35" pos:end="109:38"><expr pos:start="109:35" pos:end="109:38"><name pos:start="109:35" pos:end="109:38">size</name></expr></argument>, <argument pos:start="109:41" pos:end="111:96"><expr pos:start="109:41" pos:end="111:96"><literal type="string" pos:start="109:41" pos:end="109:73">"a=rtpmap:%d MP4A-LATM/%d/%d\r\n"</literal>

                                        <literal type="string" pos:start="111:41" pos:end="111:96">"a=fmtp:%d profile-level-id=%d;cpresent=0;config=%s\r\n"</literal></expr></argument>,

                                         <argument pos:start="113:42" pos:end="113:53"><expr pos:start="113:42" pos:end="113:53"><name pos:start="113:42" pos:end="113:53">payload_type</name></expr></argument>, <argument pos:start="113:56" pos:end="113:69"><expr pos:start="113:56" pos:end="113:69"><name pos:start="113:56" pos:end="113:69"><name pos:start="113:56" pos:end="113:56">c</name><operator pos:start="113:57" pos:end="113:58">-&gt;</operator><name pos:start="113:59" pos:end="113:69">sample_rate</name></name></expr></argument>, <argument pos:start="113:72" pos:end="113:82"><expr pos:start="113:72" pos:end="113:82"><name pos:start="113:72" pos:end="113:82"><name pos:start="113:72" pos:end="113:72">c</name><operator pos:start="113:73" pos:end="113:74">-&gt;</operator><name pos:start="113:75" pos:end="113:82">channels</name></name></expr></argument>,

                                         <argument pos:start="115:42" pos:end="115:53"><expr pos:start="115:42" pos:end="115:53"><name pos:start="115:42" pos:end="115:53">payload_type</name></expr></argument>, <argument pos:start="115:56" pos:end="115:83"><expr pos:start="115:56" pos:end="115:83"><call pos:start="115:56" pos:end="115:83"><name pos:start="115:56" pos:end="115:80">latm_context2profilelevel</name><argument_list pos:start="115:81" pos:end="115:83">(<argument pos:start="115:82" pos:end="115:82"><expr pos:start="115:82" pos:end="115:82"><name pos:start="115:82" pos:end="115:82">c</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="115:86" pos:end="115:91"><expr pos:start="115:86" pos:end="115:91"><name pos:start="115:86" pos:end="115:91">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="117:15" pos:end="155:13">else <block pos:start="117:20" pos:end="155:13">{<block_content pos:start="119:17" pos:end="153:63">

                <if_stmt pos:start="119:17" pos:end="135:17"><if pos:start="119:17" pos:end="123:17">if <condition pos:start="119:20" pos:end="119:38">(<expr pos:start="119:21" pos:end="119:37"><name pos:start="119:21" pos:end="119:37"><name pos:start="119:21" pos:end="119:21">c</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:37">extradata_size</name></name></expr>)</condition> <block pos:start="119:40" pos:end="123:17">{<block_content pos:start="121:21" pos:end="121:49">

                    <expr_stmt pos:start="121:21" pos:end="121:49"><expr pos:start="121:21" pos:end="121:48"><name pos:start="121:21" pos:end="121:26">config</name> <operator pos:start="121:28" pos:end="121:28">=</operator> <call pos:start="121:30" pos:end="121:48"><name pos:start="121:30" pos:end="121:45">extradata2config</name><argument_list pos:start="121:46" pos:end="121:48">(<argument pos:start="121:47" pos:end="121:47"><expr pos:start="121:47" pos:end="121:47"><name pos:start="121:47" pos:end="121:47">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="123:19" pos:end="135:17">else <block pos:start="123:24" pos:end="135:17">{<block_content pos:start="131:21" pos:end="133:32">

                    <comment type="block" pos:start="125:21" pos:end="129:23">/* FIXME: maybe we can forge config information based on the

                     *        codec parameters...

                     */</comment>

                    <expr_stmt pos:start="131:21" pos:end="131:104"><expr pos:start="131:21" pos:end="131:103"><call pos:start="131:21" pos:end="131:103"><name pos:start="131:21" pos:end="131:26">av_log</name><argument_list pos:start="131:27" pos:end="131:103">(<argument pos:start="131:28" pos:end="131:28"><expr pos:start="131:28" pos:end="131:28"><name pos:start="131:28" pos:end="131:28">c</name></expr></argument>, <argument pos:start="131:31" pos:end="131:42"><expr pos:start="131:31" pos:end="131:42"><name pos:start="131:31" pos:end="131:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:45" pos:end="131:102"><expr pos:start="131:45" pos:end="131:102"><literal type="string" pos:start="131:45" pos:end="131:102">"AAC with no global headers is currently not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="133:21" pos:end="133:32">return <expr pos:start="133:28" pos:end="133:31"><name pos:start="133:28" pos:end="133:31">NULL</name></expr>;</return>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="137:17" pos:end="141:17"><if pos:start="137:17" pos:end="141:17">if <condition pos:start="137:20" pos:end="137:28">(<expr pos:start="137:21" pos:end="137:27"><operator pos:start="137:21" pos:end="137:21">!</operator><name pos:start="137:22" pos:end="137:27">config</name></expr>)</condition> <block pos:start="137:30" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:32">

                    <return pos:start="139:21" pos:end="139:32">return <expr pos:start="139:28" pos:end="139:31"><name pos:start="139:28" pos:end="139:31">NULL</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="143:17" pos:end="153:63"><expr pos:start="143:17" pos:end="153:62"><call pos:start="143:17" pos:end="153:62"><name pos:start="143:17" pos:end="143:27">av_strlcatf</name><argument_list pos:start="143:28" pos:end="153:62">(<argument pos:start="143:29" pos:end="143:32"><expr pos:start="143:29" pos:end="143:32"><name pos:start="143:29" pos:end="143:32">buff</name></expr></argument>, <argument pos:start="143:35" pos:end="143:38"><expr pos:start="143:35" pos:end="143:38"><name pos:start="143:35" pos:end="143:38">size</name></expr></argument>, <argument pos:start="143:41" pos:end="149:66"><expr pos:start="143:41" pos:end="149:66"><literal type="string" pos:start="143:41" pos:end="143:77">"a=rtpmap:%d MPEG4-GENERIC/%d/%d\r\n"</literal>

                                        <literal type="string" pos:start="145:41" pos:end="145:71">"a=fmtp:%d profile-level-id=1;"</literal>

                                        <literal type="string" pos:start="147:41" pos:end="147:83">"mode=AAC-hbr;sizelength=13;indexlength=3;"</literal>

                                        <literal type="string" pos:start="149:41" pos:end="149:66">"indexdeltalength=3%s\r\n"</literal></expr></argument>,

                                         <argument pos:start="151:42" pos:end="151:53"><expr pos:start="151:42" pos:end="151:53"><name pos:start="151:42" pos:end="151:53">payload_type</name></expr></argument>, <argument pos:start="151:56" pos:end="151:69"><expr pos:start="151:56" pos:end="151:69"><name pos:start="151:56" pos:end="151:69"><name pos:start="151:56" pos:end="151:56">c</name><operator pos:start="151:57" pos:end="151:58">-&gt;</operator><name pos:start="151:59" pos:end="151:69">sample_rate</name></name></expr></argument>, <argument pos:start="151:72" pos:end="151:82"><expr pos:start="151:72" pos:end="151:82"><name pos:start="151:72" pos:end="151:82"><name pos:start="151:72" pos:end="151:72">c</name><operator pos:start="151:73" pos:end="151:74">-&gt;</operator><name pos:start="151:75" pos:end="151:82">channels</name></name></expr></argument>,

                                         <argument pos:start="153:42" pos:end="153:53"><expr pos:start="153:42" pos:end="153:53"><name pos:start="153:42" pos:end="153:53">payload_type</name></expr></argument>, <argument pos:start="153:56" pos:end="153:61"><expr pos:start="153:56" pos:end="153:61"><name pos:start="153:56" pos:end="153:61">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="157:13" pos:end="157:18">break;</break>

        <case pos:start="159:9" pos:end="159:35">case <expr pos:start="159:14" pos:end="159:34"><name pos:start="159:14" pos:end="159:34">AV_CODEC_ID_PCM_S16BE</name></expr>:</case>

            <if_stmt pos:start="161:13" pos:end="167:70"><if pos:start="161:13" pos:end="167:70">if <condition pos:start="161:16" pos:end="161:47">(<expr pos:start="161:17" pos:end="161:46"><name pos:start="161:17" pos:end="161:28">payload_type</name> <operator pos:start="161:30" pos:end="161:31">&gt;=</operator> <name pos:start="161:33" pos:end="161:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="167:70"><block_content pos:start="163:17" pos:end="167:70">

                <expr_stmt pos:start="163:17" pos:end="167:70"><expr pos:start="163:17" pos:end="167:69"><call pos:start="163:17" pos:end="167:69"><name pos:start="163:17" pos:end="163:27">av_strlcatf</name><argument_list pos:start="163:28" pos:end="167:69">(<argument pos:start="163:29" pos:end="163:32"><expr pos:start="163:29" pos:end="163:32"><name pos:start="163:29" pos:end="163:32">buff</name></expr></argument>, <argument pos:start="163:35" pos:end="163:38"><expr pos:start="163:35" pos:end="163:38"><name pos:start="163:35" pos:end="163:38">size</name></expr></argument>, <argument pos:start="163:41" pos:end="163:67"><expr pos:start="163:41" pos:end="163:67"><literal type="string" pos:start="163:41" pos:end="163:67">"a=rtpmap:%d L16/%d/%d\r\n"</literal></expr></argument>,

                                         <argument pos:start="165:42" pos:end="165:53"><expr pos:start="165:42" pos:end="165:53"><name pos:start="165:42" pos:end="165:53">payload_type</name></expr></argument>,

                                         <argument pos:start="167:42" pos:end="167:55"><expr pos:start="167:42" pos:end="167:55"><name pos:start="167:42" pos:end="167:55"><name pos:start="167:42" pos:end="167:42">c</name><operator pos:start="167:43" pos:end="167:44">-&gt;</operator><name pos:start="167:45" pos:end="167:55">sample_rate</name></name></expr></argument>, <argument pos:start="167:58" pos:end="167:68"><expr pos:start="167:58" pos:end="167:68"><name pos:start="167:58" pos:end="167:68"><name pos:start="167:58" pos:end="167:58">c</name><operator pos:start="167:59" pos:end="167:60">-&gt;</operator><name pos:start="167:61" pos:end="167:68">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="169:13" pos:end="169:18">break;</break>

        <case pos:start="171:9" pos:end="171:35">case <expr pos:start="171:14" pos:end="171:34"><name pos:start="171:14" pos:end="171:34">AV_CODEC_ID_PCM_MULAW</name></expr>:</case>

            <if_stmt pos:start="173:13" pos:end="179:70"><if pos:start="173:13" pos:end="179:70">if <condition pos:start="173:16" pos:end="173:47">(<expr pos:start="173:17" pos:end="173:46"><name pos:start="173:17" pos:end="173:28">payload_type</name> <operator pos:start="173:30" pos:end="173:31">&gt;=</operator> <name pos:start="173:33" pos:end="173:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="179:70"><block_content pos:start="175:17" pos:end="179:70">

                <expr_stmt pos:start="175:17" pos:end="179:70"><expr pos:start="175:17" pos:end="179:69"><call pos:start="175:17" pos:end="179:69"><name pos:start="175:17" pos:end="175:27">av_strlcatf</name><argument_list pos:start="175:28" pos:end="179:69">(<argument pos:start="175:29" pos:end="175:32"><expr pos:start="175:29" pos:end="175:32"><name pos:start="175:29" pos:end="175:32">buff</name></expr></argument>, <argument pos:start="175:35" pos:end="175:38"><expr pos:start="175:35" pos:end="175:38"><name pos:start="175:35" pos:end="175:38">size</name></expr></argument>, <argument pos:start="175:41" pos:end="175:68"><expr pos:start="175:41" pos:end="175:68"><literal type="string" pos:start="175:41" pos:end="175:68">"a=rtpmap:%d PCMU/%d/%d\r\n"</literal></expr></argument>,

                                         <argument pos:start="177:42" pos:end="177:53"><expr pos:start="177:42" pos:end="177:53"><name pos:start="177:42" pos:end="177:53">payload_type</name></expr></argument>,

                                         <argument pos:start="179:42" pos:end="179:55"><expr pos:start="179:42" pos:end="179:55"><name pos:start="179:42" pos:end="179:55"><name pos:start="179:42" pos:end="179:42">c</name><operator pos:start="179:43" pos:end="179:44">-&gt;</operator><name pos:start="179:45" pos:end="179:55">sample_rate</name></name></expr></argument>, <argument pos:start="179:58" pos:end="179:68"><expr pos:start="179:58" pos:end="179:68"><name pos:start="179:58" pos:end="179:68"><name pos:start="179:58" pos:end="179:58">c</name><operator pos:start="179:59" pos:end="179:60">-&gt;</operator><name pos:start="179:61" pos:end="179:68">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <case pos:start="183:9" pos:end="183:34">case <expr pos:start="183:14" pos:end="183:33"><name pos:start="183:14" pos:end="183:33">AV_CODEC_ID_PCM_ALAW</name></expr>:</case>

            <if_stmt pos:start="185:13" pos:end="191:70"><if pos:start="185:13" pos:end="191:70">if <condition pos:start="185:16" pos:end="185:47">(<expr pos:start="185:17" pos:end="185:46"><name pos:start="185:17" pos:end="185:28">payload_type</name> <operator pos:start="185:30" pos:end="185:31">&gt;=</operator> <name pos:start="185:33" pos:end="185:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="191:70"><block_content pos:start="187:17" pos:end="191:70">

                <expr_stmt pos:start="187:17" pos:end="191:70"><expr pos:start="187:17" pos:end="191:69"><call pos:start="187:17" pos:end="191:69"><name pos:start="187:17" pos:end="187:27">av_strlcatf</name><argument_list pos:start="187:28" pos:end="191:69">(<argument pos:start="187:29" pos:end="187:32"><expr pos:start="187:29" pos:end="187:32"><name pos:start="187:29" pos:end="187:32">buff</name></expr></argument>, <argument pos:start="187:35" pos:end="187:38"><expr pos:start="187:35" pos:end="187:38"><name pos:start="187:35" pos:end="187:38">size</name></expr></argument>, <argument pos:start="187:41" pos:end="187:68"><expr pos:start="187:41" pos:end="187:68"><literal type="string" pos:start="187:41" pos:end="187:68">"a=rtpmap:%d PCMA/%d/%d\r\n"</literal></expr></argument>,

                                         <argument pos:start="189:42" pos:end="189:53"><expr pos:start="189:42" pos:end="189:53"><name pos:start="189:42" pos:end="189:53">payload_type</name></expr></argument>,

                                         <argument pos:start="191:42" pos:end="191:55"><expr pos:start="191:42" pos:end="191:55"><name pos:start="191:42" pos:end="191:55"><name pos:start="191:42" pos:end="191:42">c</name><operator pos:start="191:43" pos:end="191:44">-&gt;</operator><name pos:start="191:45" pos:end="191:55">sample_rate</name></name></expr></argument>, <argument pos:start="191:58" pos:end="191:68"><expr pos:start="191:58" pos:end="191:68"><name pos:start="191:58" pos:end="191:68"><name pos:start="191:58" pos:end="191:58">c</name><operator pos:start="191:59" pos:end="191:60">-&gt;</operator><name pos:start="191:61" pos:end="191:68">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:32">case <expr pos:start="195:14" pos:end="195:31"><name pos:start="195:14" pos:end="195:31">AV_CODEC_ID_AMR_NB</name></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="203:51"><expr pos:start="197:13" pos:end="203:50"><call pos:start="197:13" pos:end="203:50"><name pos:start="197:13" pos:end="197:23">av_strlcatf</name><argument_list pos:start="197:24" pos:end="203:50">(<argument pos:start="197:25" pos:end="197:28"><expr pos:start="197:25" pos:end="197:28"><name pos:start="197:25" pos:end="197:28">buff</name></expr></argument>, <argument pos:start="197:31" pos:end="197:34"><expr pos:start="197:31" pos:end="197:34"><name pos:start="197:31" pos:end="197:34">size</name></expr></argument>, <argument pos:start="197:37" pos:end="199:65"><expr pos:start="197:37" pos:end="199:65"><literal type="string" pos:start="197:37" pos:end="197:63">"a=rtpmap:%d AMR/%d/%d\r\n"</literal>

                                    <literal type="string" pos:start="199:37" pos:end="199:65">"a=fmtp:%d octet-align=1\r\n"</literal></expr></argument>,

                                     <argument pos:start="201:38" pos:end="201:49"><expr pos:start="201:38" pos:end="201:49"><name pos:start="201:38" pos:end="201:49">payload_type</name></expr></argument>, <argument pos:start="201:52" pos:end="201:65"><expr pos:start="201:52" pos:end="201:65"><name pos:start="201:52" pos:end="201:65"><name pos:start="201:52" pos:end="201:52">c</name><operator pos:start="201:53" pos:end="201:54">-&gt;</operator><name pos:start="201:55" pos:end="201:65">sample_rate</name></name></expr></argument>, <argument pos:start="201:68" pos:end="201:78"><expr pos:start="201:68" pos:end="201:78"><name pos:start="201:68" pos:end="201:78"><name pos:start="201:68" pos:end="201:68">c</name><operator pos:start="201:69" pos:end="201:70">-&gt;</operator><name pos:start="201:71" pos:end="201:78">channels</name></name></expr></argument>,

                                     <argument pos:start="203:38" pos:end="203:49"><expr pos:start="203:38" pos:end="203:49"><name pos:start="203:38" pos:end="203:49">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:32">case <expr pos:start="207:14" pos:end="207:31"><name pos:start="207:14" pos:end="207:31">AV_CODEC_ID_AMR_WB</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="215:51"><expr pos:start="209:13" pos:end="215:50"><call pos:start="209:13" pos:end="215:50"><name pos:start="209:13" pos:end="209:23">av_strlcatf</name><argument_list pos:start="209:24" pos:end="215:50">(<argument pos:start="209:25" pos:end="209:28"><expr pos:start="209:25" pos:end="209:28"><name pos:start="209:25" pos:end="209:28">buff</name></expr></argument>, <argument pos:start="209:31" pos:end="209:34"><expr pos:start="209:31" pos:end="209:34"><name pos:start="209:31" pos:end="209:34">size</name></expr></argument>, <argument pos:start="209:37" pos:end="211:65"><expr pos:start="209:37" pos:end="211:65"><literal type="string" pos:start="209:37" pos:end="209:66">"a=rtpmap:%d AMR-WB/%d/%d\r\n"</literal>

                                    <literal type="string" pos:start="211:37" pos:end="211:65">"a=fmtp:%d octet-align=1\r\n"</literal></expr></argument>,

                                     <argument pos:start="213:38" pos:end="213:49"><expr pos:start="213:38" pos:end="213:49"><name pos:start="213:38" pos:end="213:49">payload_type</name></expr></argument>, <argument pos:start="213:52" pos:end="213:65"><expr pos:start="213:52" pos:end="213:65"><name pos:start="213:52" pos:end="213:65"><name pos:start="213:52" pos:end="213:52">c</name><operator pos:start="213:53" pos:end="213:54">-&gt;</operator><name pos:start="213:55" pos:end="213:65">sample_rate</name></name></expr></argument>, <argument pos:start="213:68" pos:end="213:78"><expr pos:start="213:68" pos:end="213:78"><name pos:start="213:68" pos:end="213:78"><name pos:start="213:68" pos:end="213:68">c</name><operator pos:start="213:69" pos:end="213:70">-&gt;</operator><name pos:start="213:71" pos:end="213:78">channels</name></name></expr></argument>,

                                     <argument pos:start="215:38" pos:end="215:49"><expr pos:start="215:38" pos:end="215:49"><name pos:start="215:38" pos:end="215:49">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:32">case <expr pos:start="219:14" pos:end="219:31"><name pos:start="219:14" pos:end="219:31">AV_CODEC_ID_VORBIS</name></expr>:</case>

            <if_stmt pos:start="221:13" pos:end="227:79"><if pos:start="221:13" pos:end="223:50">if <condition pos:start="221:16" pos:end="221:34">(<expr pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:33"><name pos:start="221:17" pos:end="221:17">c</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:33">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="223:50"><block_content pos:start="223:17" pos:end="223:50">

                <expr_stmt pos:start="223:17" pos:end="223:50"><expr pos:start="223:17" pos:end="223:49"><name pos:start="223:17" pos:end="223:22">config</name> <operator pos:start="223:24" pos:end="223:24">=</operator> <call pos:start="223:26" pos:end="223:49"><name pos:start="223:26" pos:end="223:46">xiph_extradata2config</name><argument_list pos:start="223:47" pos:end="223:49">(<argument pos:start="223:48" pos:end="223:48"><expr pos:start="223:48" pos:end="223:48"><name pos:start="223:48" pos:end="223:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="225:13" pos:end="227:79">else<block type="pseudo" pos:start="227:17" pos:end="227:79"><block_content pos:start="227:17" pos:end="227:79">

                <expr_stmt pos:start="227:17" pos:end="227:79"><expr pos:start="227:17" pos:end="227:78"><call pos:start="227:17" pos:end="227:78"><name pos:start="227:17" pos:end="227:22">av_log</name><argument_list pos:start="227:23" pos:end="227:78">(<argument pos:start="227:24" pos:end="227:24"><expr pos:start="227:24" pos:end="227:24"><name pos:start="227:24" pos:end="227:24">c</name></expr></argument>, <argument pos:start="227:27" pos:end="227:38"><expr pos:start="227:27" pos:end="227:38"><name pos:start="227:27" pos:end="227:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="227:41" pos:end="227:77"><expr pos:start="227:41" pos:end="227:77"><literal type="string" pos:start="227:41" pos:end="227:77">"Vorbis configuration info missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="229:13" pos:end="231:28"><if pos:start="229:13" pos:end="231:28">if <condition pos:start="229:16" pos:end="229:24">(<expr pos:start="229:17" pos:end="229:23"><operator pos:start="229:17" pos:end="229:17">!</operator><name pos:start="229:18" pos:end="229:23">config</name></expr>)</condition><block type="pseudo" pos:start="231:17" pos:end="231:28"><block_content pos:start="231:17" pos:end="231:28">

                <return pos:start="231:17" pos:end="231:28">return <expr pos:start="231:24" pos:end="231:27"><name pos:start="231:24" pos:end="231:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="235:13" pos:end="241:58"><expr pos:start="235:13" pos:end="241:57"><call pos:start="235:13" pos:end="241:57"><name pos:start="235:13" pos:end="235:23">av_strlcatf</name><argument_list pos:start="235:24" pos:end="241:57">(<argument pos:start="235:25" pos:end="235:28"><expr pos:start="235:25" pos:end="235:28"><name pos:start="235:25" pos:end="235:28">buff</name></expr></argument>, <argument pos:start="235:31" pos:end="235:34"><expr pos:start="235:31" pos:end="235:34"><name pos:start="235:31" pos:end="235:34">size</name></expr></argument>, <argument pos:start="235:37" pos:end="237:68"><expr pos:start="235:37" pos:end="237:68"><literal type="string" pos:start="235:37" pos:end="235:66">"a=rtpmap:%d vorbis/%d/%d\r\n"</literal>

                                    <literal type="string" pos:start="237:37" pos:end="237:68">"a=fmtp:%d configuration=%s\r\n"</literal></expr></argument>,

                                    <argument pos:start="239:37" pos:end="239:48"><expr pos:start="239:37" pos:end="239:48"><name pos:start="239:37" pos:end="239:48">payload_type</name></expr></argument>, <argument pos:start="239:51" pos:end="239:64"><expr pos:start="239:51" pos:end="239:64"><name pos:start="239:51" pos:end="239:64"><name pos:start="239:51" pos:end="239:51">c</name><operator pos:start="239:52" pos:end="239:53">-&gt;</operator><name pos:start="239:54" pos:end="239:64">sample_rate</name></name></expr></argument>, <argument pos:start="239:67" pos:end="239:77"><expr pos:start="239:67" pos:end="239:77"><name pos:start="239:67" pos:end="239:77"><name pos:start="239:67" pos:end="239:67">c</name><operator pos:start="239:68" pos:end="239:69">-&gt;</operator><name pos:start="239:70" pos:end="239:77">channels</name></name></expr></argument>,

                                    <argument pos:start="241:37" pos:end="241:48"><expr pos:start="241:37" pos:end="241:48"><name pos:start="241:37" pos:end="241:48">payload_type</name></expr></argument>, <argument pos:start="241:51" pos:end="241:56"><expr pos:start="241:51" pos:end="241:56"><name pos:start="241:51" pos:end="241:56">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="243:13" pos:end="243:18">break;</break>

        <case pos:start="245:9" pos:end="245:32">case <expr pos:start="245:14" pos:end="245:31"><name pos:start="245:14" pos:end="245:31">AV_CODEC_ID_THEORA</name></expr>:</case> <block pos:start="245:34" pos:end="307:9">{<block_content pos:start="247:13" pos:end="305:18">

            <decl_stmt pos:start="247:13" pos:end="247:32"><decl pos:start="247:13" pos:end="247:31"><type pos:start="247:13" pos:end="247:24"><specifier pos:start="247:13" pos:end="247:17">const</specifier> <name pos:start="247:19" pos:end="247:22">char</name> <modifier pos:start="247:24" pos:end="247:24">*</modifier></type><name pos:start="247:25" pos:end="247:31">pix_fmt</name></decl>;</decl_stmt>

            <switch pos:start="249:13" pos:end="275:13">switch <condition pos:start="249:20" pos:end="249:31">(<expr pos:start="249:21" pos:end="249:30"><name pos:start="249:21" pos:end="249:30"><name pos:start="249:21" pos:end="249:21">c</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:30">pix_fmt</name></name></expr>)</condition> <block pos:start="249:33" pos:end="275:13">{<block_content pos:start="251:13" pos:end="273:28">

            <case pos:start="251:13" pos:end="251:36">case <expr pos:start="251:18" pos:end="251:35"><name pos:start="251:18" pos:end="251:35">AV_PIX_FMT_YUV420P</name></expr>:</case>

                <expr_stmt pos:start="253:17" pos:end="253:40"><expr pos:start="253:17" pos:end="253:39"><name pos:start="253:17" pos:end="253:23">pix_fmt</name> <operator pos:start="253:25" pos:end="253:25">=</operator> <literal type="string" pos:start="253:27" pos:end="253:39">"YCbCr-4:2:0"</literal></expr>;</expr_stmt>

                <break pos:start="255:17" pos:end="255:22">break;</break>

            <case pos:start="257:13" pos:end="257:36">case <expr pos:start="257:18" pos:end="257:35"><name pos:start="257:18" pos:end="257:35">AV_PIX_FMT_YUV422P</name></expr>:</case>

                <expr_stmt pos:start="259:17" pos:end="259:40"><expr pos:start="259:17" pos:end="259:39"><name pos:start="259:17" pos:end="259:23">pix_fmt</name> <operator pos:start="259:25" pos:end="259:25">=</operator> <literal type="string" pos:start="259:27" pos:end="259:39">"YCbCr-4:2:2"</literal></expr>;</expr_stmt>

                <break pos:start="261:17" pos:end="261:22">break;</break>

            <case pos:start="263:13" pos:end="263:36">case <expr pos:start="263:18" pos:end="263:35"><name pos:start="263:18" pos:end="263:35">AV_PIX_FMT_YUV444P</name></expr>:</case>

                <expr_stmt pos:start="265:17" pos:end="265:40"><expr pos:start="265:17" pos:end="265:39"><name pos:start="265:17" pos:end="265:23">pix_fmt</name> <operator pos:start="265:25" pos:end="265:25">=</operator> <literal type="string" pos:start="265:27" pos:end="265:39">"YCbCr-4:4:4"</literal></expr>;</expr_stmt>

                <break pos:start="267:17" pos:end="267:22">break;</break>

            <default pos:start="269:13" pos:end="269:20">default:</default>

                <expr_stmt pos:start="271:17" pos:end="271:71"><expr pos:start="271:17" pos:end="271:70"><call pos:start="271:17" pos:end="271:70"><name pos:start="271:17" pos:end="271:22">av_log</name><argument_list pos:start="271:23" pos:end="271:70">(<argument pos:start="271:24" pos:end="271:24"><expr pos:start="271:24" pos:end="271:24"><name pos:start="271:24" pos:end="271:24">c</name></expr></argument>, <argument pos:start="271:27" pos:end="271:38"><expr pos:start="271:27" pos:end="271:38"><name pos:start="271:27" pos:end="271:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="271:41" pos:end="271:69"><expr pos:start="271:41" pos:end="271:69"><literal type="string" pos:start="271:41" pos:end="271:69">"Unsupported pixel format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="273:17" pos:end="273:28">return <expr pos:start="273:24" pos:end="273:27"><name pos:start="273:24" pos:end="273:27">NULL</name></expr>;</return>

            </block_content>}</block></switch>



            <if_stmt pos:start="279:13" pos:end="285:78"><if pos:start="279:13" pos:end="281:50">if <condition pos:start="279:16" pos:end="279:34">(<expr pos:start="279:17" pos:end="279:33"><name pos:start="279:17" pos:end="279:33"><name pos:start="279:17" pos:end="279:17">c</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:33">extradata_size</name></name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:50"><block_content pos:start="281:17" pos:end="281:50">

                <expr_stmt pos:start="281:17" pos:end="281:50"><expr pos:start="281:17" pos:end="281:49"><name pos:start="281:17" pos:end="281:22">config</name> <operator pos:start="281:24" pos:end="281:24">=</operator> <call pos:start="281:26" pos:end="281:49"><name pos:start="281:26" pos:end="281:46">xiph_extradata2config</name><argument_list pos:start="281:47" pos:end="281:49">(<argument pos:start="281:48" pos:end="281:48"><expr pos:start="281:48" pos:end="281:48"><name pos:start="281:48" pos:end="281:48">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="283:13" pos:end="285:78">else<block type="pseudo" pos:start="285:17" pos:end="285:78"><block_content pos:start="285:17" pos:end="285:78">

                <expr_stmt pos:start="285:17" pos:end="285:78"><expr pos:start="285:17" pos:end="285:77"><call pos:start="285:17" pos:end="285:77"><name pos:start="285:17" pos:end="285:22">av_log</name><argument_list pos:start="285:23" pos:end="285:77">(<argument pos:start="285:24" pos:end="285:24"><expr pos:start="285:24" pos:end="285:24"><name pos:start="285:24" pos:end="285:24">c</name></expr></argument>, <argument pos:start="285:27" pos:end="285:38"><expr pos:start="285:27" pos:end="285:38"><name pos:start="285:27" pos:end="285:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="285:41" pos:end="285:76"><expr pos:start="285:41" pos:end="285:76"><literal type="string" pos:start="285:41" pos:end="285:76">"Theora configuation info missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="287:13" pos:end="289:28"><if pos:start="287:13" pos:end="289:28">if <condition pos:start="287:16" pos:end="287:24">(<expr pos:start="287:17" pos:end="287:23"><operator pos:start="287:17" pos:end="287:17">!</operator><name pos:start="287:18" pos:end="287:23">config</name></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:28"><block_content pos:start="289:17" pos:end="289:28">

                <return pos:start="289:17" pos:end="289:28">return <expr pos:start="289:24" pos:end="289:27"><name pos:start="289:24" pos:end="289:27">NULL</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="293:13" pos:end="303:74"><expr pos:start="293:13" pos:end="303:73"><call pos:start="293:13" pos:end="303:73"><name pos:start="293:13" pos:end="293:23">av_strlcatf</name><argument_list pos:start="293:24" pos:end="303:73">(<argument pos:start="293:25" pos:end="293:28"><expr pos:start="293:25" pos:end="293:28"><name pos:start="293:25" pos:end="293:28">buff</name></expr></argument>, <argument pos:start="293:31" pos:end="293:34"><expr pos:start="293:31" pos:end="293:34"><name pos:start="293:31" pos:end="293:34">size</name></expr></argument>, <argument pos:start="293:37" pos:end="299:58"><expr pos:start="293:37" pos:end="299:58"><literal type="string" pos:start="293:37" pos:end="293:66">"a=rtpmap:%d theora/90000\r\n"</literal>

                                    <literal type="string" pos:start="295:37" pos:end="295:72">"a=fmtp:%d delivery-method=inline; "</literal>

                                    <literal type="string" pos:start="297:37" pos:end="297:72">"width=%d; height=%d; sampling=%s; "</literal>

                                    <literal type="string" pos:start="299:37" pos:end="299:58">"configuration=%s\r\n"</literal></expr></argument>,

                                    <argument pos:start="301:37" pos:end="301:48"><expr pos:start="301:37" pos:end="301:48"><name pos:start="301:37" pos:end="301:48">payload_type</name></expr></argument>, <argument pos:start="301:51" pos:end="301:62"><expr pos:start="301:51" pos:end="301:62"><name pos:start="301:51" pos:end="301:62">payload_type</name></expr></argument>,

                                    <argument pos:start="303:37" pos:end="303:44"><expr pos:start="303:37" pos:end="303:44"><name pos:start="303:37" pos:end="303:44"><name pos:start="303:37" pos:end="303:37">c</name><operator pos:start="303:38" pos:end="303:39">-&gt;</operator><name pos:start="303:40" pos:end="303:44">width</name></name></expr></argument>, <argument pos:start="303:47" pos:end="303:55"><expr pos:start="303:47" pos:end="303:55"><name pos:start="303:47" pos:end="303:55"><name pos:start="303:47" pos:end="303:47">c</name><operator pos:start="303:48" pos:end="303:49">-&gt;</operator><name pos:start="303:50" pos:end="303:55">height</name></name></expr></argument>, <argument pos:start="303:58" pos:end="303:64"><expr pos:start="303:58" pos:end="303:64"><name pos:start="303:58" pos:end="303:64">pix_fmt</name></expr></argument>, <argument pos:start="303:67" pos:end="303:72"><expr pos:start="303:67" pos:end="303:72"><name pos:start="303:67" pos:end="303:72">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="305:13" pos:end="305:18">break;</break>

        </block_content>}</block>

        <case pos:start="309:9" pos:end="309:29">case <expr pos:start="309:14" pos:end="309:28"><name pos:start="309:14" pos:end="309:28">AV_CODEC_ID_VP8</name></expr>:</case>

            <expr_stmt pos:start="311:13" pos:end="313:51"><expr pos:start="311:13" pos:end="313:50"><call pos:start="311:13" pos:end="313:50"><name pos:start="311:13" pos:end="311:23">av_strlcatf</name><argument_list pos:start="311:24" pos:end="313:50">(<argument pos:start="311:25" pos:end="311:28"><expr pos:start="311:25" pos:end="311:28"><name pos:start="311:25" pos:end="311:28">buff</name></expr></argument>, <argument pos:start="311:31" pos:end="311:34"><expr pos:start="311:31" pos:end="311:34"><name pos:start="311:31" pos:end="311:34">size</name></expr></argument>, <argument pos:start="311:37" pos:end="311:63"><expr pos:start="311:37" pos:end="311:63"><literal type="string" pos:start="311:37" pos:end="311:63">"a=rtpmap:%d VP8/90000\r\n"</literal></expr></argument>,

                                     <argument pos:start="313:38" pos:end="313:49"><expr pos:start="313:38" pos:end="313:49"><name pos:start="313:38" pos:end="313:49">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="315:13" pos:end="315:18">break;</break>

        <case pos:start="317:9" pos:end="317:31">case <expr pos:start="317:14" pos:end="317:30"><name pos:start="317:14" pos:end="317:30">AV_CODEC_ID_MJPEG</name></expr>:</case>

            <if_stmt pos:start="319:13" pos:end="323:55"><if pos:start="319:13" pos:end="323:55">if <condition pos:start="319:16" pos:end="319:47">(<expr pos:start="319:17" pos:end="319:46"><name pos:start="319:17" pos:end="319:28">payload_type</name> <operator pos:start="319:30" pos:end="319:31">&gt;=</operator> <name pos:start="319:33" pos:end="319:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="321:17" pos:end="323:55"><block_content pos:start="321:17" pos:end="323:55">

                <expr_stmt pos:start="321:17" pos:end="323:55"><expr pos:start="321:17" pos:end="323:54"><call pos:start="321:17" pos:end="323:54"><name pos:start="321:17" pos:end="321:27">av_strlcatf</name><argument_list pos:start="321:28" pos:end="323:54">(<argument pos:start="321:29" pos:end="321:32"><expr pos:start="321:29" pos:end="321:32"><name pos:start="321:29" pos:end="321:32">buff</name></expr></argument>, <argument pos:start="321:35" pos:end="321:38"><expr pos:start="321:35" pos:end="321:38"><name pos:start="321:35" pos:end="321:38">size</name></expr></argument>, <argument pos:start="321:41" pos:end="321:68"><expr pos:start="321:41" pos:end="321:68"><literal type="string" pos:start="321:41" pos:end="321:68">"a=rtpmap:%d JPEG/90000\r\n"</literal></expr></argument>,

                                         <argument pos:start="323:42" pos:end="323:53"><expr pos:start="323:42" pos:end="323:53"><name pos:start="323:42" pos:end="323:53">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="325:13" pos:end="325:18">break;</break>

        <case pos:start="327:9" pos:end="327:36">case <expr pos:start="327:14" pos:end="327:35"><name pos:start="327:14" pos:end="327:35">AV_CODEC_ID_ADPCM_G722</name></expr>:</case>

            <if_stmt pos:start="329:13" pos:end="335:60"><if pos:start="329:13" pos:end="335:60">if <condition pos:start="329:16" pos:end="329:47">(<expr pos:start="329:17" pos:end="329:46"><name pos:start="329:17" pos:end="329:28">payload_type</name> <operator pos:start="329:30" pos:end="329:31">&gt;=</operator> <name pos:start="329:33" pos:end="329:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="331:17" pos:end="335:60"><block_content pos:start="331:17" pos:end="335:60">

                <expr_stmt pos:start="331:17" pos:end="335:60"><expr pos:start="331:17" pos:end="335:59"><call pos:start="331:17" pos:end="335:59"><name pos:start="331:17" pos:end="331:27">av_strlcatf</name><argument_list pos:start="331:28" pos:end="335:59">(<argument pos:start="331:29" pos:end="331:32"><expr pos:start="331:29" pos:end="331:32"><name pos:start="331:29" pos:end="331:32">buff</name></expr></argument>, <argument pos:start="331:35" pos:end="331:38"><expr pos:start="331:35" pos:end="331:38"><name pos:start="331:35" pos:end="331:38">size</name></expr></argument>, <argument pos:start="331:41" pos:end="331:68"><expr pos:start="331:41" pos:end="331:68"><literal type="string" pos:start="331:41" pos:end="331:68">"a=rtpmap:%d G722/%d/%d\r\n"</literal></expr></argument>,

                                         <argument pos:start="333:42" pos:end="333:53"><expr pos:start="333:42" pos:end="333:53"><name pos:start="333:42" pos:end="333:53">payload_type</name></expr></argument>,

                                         <argument pos:start="335:42" pos:end="335:45"><expr pos:start="335:42" pos:end="335:45"><literal type="number" pos:start="335:42" pos:end="335:45">8000</literal></expr></argument>, <argument pos:start="335:48" pos:end="335:58"><expr pos:start="335:48" pos:end="335:58"><name pos:start="335:48" pos:end="335:58"><name pos:start="335:48" pos:end="335:48">c</name><operator pos:start="335:49" pos:end="335:50">-&gt;</operator><name pos:start="335:51" pos:end="335:58">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="337:13" pos:end="337:18">break;</break>

        <case pos:start="339:9" pos:end="339:36">case <expr pos:start="339:14" pos:end="339:35"><name pos:start="339:14" pos:end="339:35">AV_CODEC_ID_ADPCM_G726</name></expr>:</case> <block pos:start="339:38" pos:end="353:9">{<block_content pos:start="341:13" pos:end="351:18">

            <if_stmt pos:start="341:13" pos:end="349:57"><if pos:start="341:13" pos:end="349:57">if <condition pos:start="341:16" pos:end="341:47">(<expr pos:start="341:17" pos:end="341:46"><name pos:start="341:17" pos:end="341:28">payload_type</name> <operator pos:start="341:30" pos:end="341:31">&gt;=</operator> <name pos:start="341:33" pos:end="341:46">RTP_PT_PRIVATE</name></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="349:57"><block_content pos:start="343:17" pos:end="349:57">

                <expr_stmt pos:start="343:17" pos:end="349:57"><expr pos:start="343:17" pos:end="349:56"><call pos:start="343:17" pos:end="349:56"><name pos:start="343:17" pos:end="343:27">av_strlcatf</name><argument_list pos:start="343:28" pos:end="349:56">(<argument pos:start="343:29" pos:end="343:32"><expr pos:start="343:29" pos:end="343:32"><name pos:start="343:29" pos:end="343:32">buff</name></expr></argument>, <argument pos:start="343:35" pos:end="343:38"><expr pos:start="343:35" pos:end="343:38"><name pos:start="343:35" pos:end="343:38">size</name></expr></argument>, <argument pos:start="343:41" pos:end="343:68"><expr pos:start="343:41" pos:end="343:68"><literal type="string" pos:start="343:41" pos:end="343:68">"a=rtpmap:%d G726-%d/%d\r\n"</literal></expr></argument>,

                                         <argument pos:start="345:42" pos:end="345:53"><expr pos:start="345:42" pos:end="345:53"><name pos:start="345:42" pos:end="345:53">payload_type</name></expr></argument>,

                                         <argument pos:start="347:42" pos:end="347:67"><expr pos:start="347:42" pos:end="347:67"><name pos:start="347:42" pos:end="347:65"><name pos:start="347:42" pos:end="347:42">c</name><operator pos:start="347:43" pos:end="347:44">-&gt;</operator><name pos:start="347:45" pos:end="347:65">bits_per_coded_sample</name></name><operator pos:start="347:66" pos:end="347:66">*</operator><literal type="number" pos:start="347:67" pos:end="347:67">8</literal></expr></argument>,

                                         <argument pos:start="349:42" pos:end="349:55"><expr pos:start="349:42" pos:end="349:55"><name pos:start="349:42" pos:end="349:55"><name pos:start="349:42" pos:end="349:42">c</name><operator pos:start="349:43" pos:end="349:44">-&gt;</operator><name pos:start="349:45" pos:end="349:55">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="351:13" pos:end="351:18">break;</break>

        </block_content>}</block>

        <case pos:start="355:9" pos:end="355:30">case <expr pos:start="355:14" pos:end="355:29"><name pos:start="355:14" pos:end="355:29">AV_CODEC_ID_ILBC</name></expr>:</case>

            <expr_stmt pos:start="357:13" pos:end="363:83"><expr pos:start="357:13" pos:end="363:82"><call pos:start="357:13" pos:end="363:82"><name pos:start="357:13" pos:end="357:23">av_strlcatf</name><argument_list pos:start="357:24" pos:end="363:82">(<argument pos:start="357:25" pos:end="357:28"><expr pos:start="357:25" pos:end="357:28"><name pos:start="357:25" pos:end="357:28">buff</name></expr></argument>, <argument pos:start="357:31" pos:end="357:34"><expr pos:start="357:31" pos:end="357:34"><name pos:start="357:31" pos:end="357:34">size</name></expr></argument>, <argument pos:start="357:37" pos:end="359:59"><expr pos:start="357:37" pos:end="359:59"><literal type="string" pos:start="357:37" pos:end="357:61">"a=rtpmap:%d iLBC/%d\r\n"</literal>

                                    <literal type="string" pos:start="359:37" pos:end="359:59">"a=fmtp:%d mode=%d\r\n"</literal></expr></argument>,

                                     <argument pos:start="361:38" pos:end="361:49"><expr pos:start="361:38" pos:end="361:49"><name pos:start="361:38" pos:end="361:49">payload_type</name></expr></argument>, <argument pos:start="361:52" pos:end="361:65"><expr pos:start="361:52" pos:end="361:65"><name pos:start="361:52" pos:end="361:65"><name pos:start="361:52" pos:end="361:52">c</name><operator pos:start="361:53" pos:end="361:54">-&gt;</operator><name pos:start="361:55" pos:end="361:65">sample_rate</name></name></expr></argument>,

                                     <argument pos:start="363:38" pos:end="363:49"><expr pos:start="363:38" pos:end="363:49"><name pos:start="363:38" pos:end="363:49">payload_type</name></expr></argument>, <argument pos:start="363:52" pos:end="363:81"><expr pos:start="363:52" pos:end="363:81"><ternary pos:start="363:52" pos:end="363:81"><condition pos:start="363:52" pos:end="363:73"><expr pos:start="363:52" pos:end="363:71"><name pos:start="363:52" pos:end="363:65"><name pos:start="363:52" pos:end="363:52">c</name><operator pos:start="363:53" pos:end="363:54">-&gt;</operator><name pos:start="363:55" pos:end="363:65">block_align</name></name> <operator pos:start="363:67" pos:end="363:68">==</operator> <literal type="number" pos:start="363:70" pos:end="363:71">38</literal></expr> ?</condition><then pos:start="363:75" pos:end="363:76"> <expr pos:start="363:75" pos:end="363:76"><literal type="number" pos:start="363:75" pos:end="363:76">20</literal></expr> </then><else pos:start="363:78" pos:end="363:81">: <expr pos:start="363:80" pos:end="363:81"><literal type="number" pos:start="363:80" pos:end="363:81">30</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="365:13" pos:end="365:18">break;</break>

        <case pos:start="367:9" pos:end="367:31">case <expr pos:start="367:14" pos:end="367:30"><name pos:start="367:14" pos:end="367:30">AV_CODEC_ID_SPEEX</name></expr>:</case>

            <expr_stmt pos:start="369:13" pos:end="371:67"><expr pos:start="369:13" pos:end="371:66"><call pos:start="369:13" pos:end="371:66"><name pos:start="369:13" pos:end="369:23">av_strlcatf</name><argument_list pos:start="369:24" pos:end="371:66">(<argument pos:start="369:25" pos:end="369:28"><expr pos:start="369:25" pos:end="369:28"><name pos:start="369:25" pos:end="369:28">buff</name></expr></argument>, <argument pos:start="369:31" pos:end="369:34"><expr pos:start="369:31" pos:end="369:34"><name pos:start="369:31" pos:end="369:34">size</name></expr></argument>, <argument pos:start="369:37" pos:end="369:62"><expr pos:start="369:37" pos:end="369:62"><literal type="string" pos:start="369:37" pos:end="369:62">"a=rtpmap:%d speex/%d\r\n"</literal></expr></argument>,

                                     <argument pos:start="371:38" pos:end="371:49"><expr pos:start="371:38" pos:end="371:49"><name pos:start="371:38" pos:end="371:49">payload_type</name></expr></argument>, <argument pos:start="371:52" pos:end="371:65"><expr pos:start="371:52" pos:end="371:65"><name pos:start="371:52" pos:end="371:65"><name pos:start="371:52" pos:end="371:52">c</name><operator pos:start="371:53" pos:end="371:54">-&gt;</operator><name pos:start="371:55" pos:end="371:65">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="373:13" pos:end="373:18">break;</break>

        <case pos:start="375:9" pos:end="375:30">case <expr pos:start="375:14" pos:end="375:29"><name pos:start="375:14" pos:end="375:29">AV_CODEC_ID_OPUS</name></expr>:</case>

            <comment type="block" pos:start="377:13" pos:end="387:79">/* The opus RTP draft says that all opus streams MUST be declared

               as stereo, to avoid negotiation failures. The actual number of

               channels can change on a packet-by-packet basis. The number of

               channels a receiver prefers to receive or a sender plans to send

               can be declared via fmtp parameters (both default to mono), but

               receivers MUST be able to receive and process stereo packets. */</comment>

            <expr_stmt pos:start="389:13" pos:end="391:51"><expr pos:start="389:13" pos:end="391:50"><call pos:start="389:13" pos:end="391:50"><name pos:start="389:13" pos:end="389:23">av_strlcatf</name><argument_list pos:start="389:24" pos:end="391:50">(<argument pos:start="389:25" pos:end="389:28"><expr pos:start="389:25" pos:end="389:28"><name pos:start="389:25" pos:end="389:28">buff</name></expr></argument>, <argument pos:start="389:31" pos:end="389:34"><expr pos:start="389:31" pos:end="389:34"><name pos:start="389:31" pos:end="389:34">size</name></expr></argument>, <argument pos:start="389:37" pos:end="389:66"><expr pos:start="389:37" pos:end="389:66"><literal type="string" pos:start="389:37" pos:end="389:66">"a=rtpmap:%d opus/48000/2\r\n"</literal></expr></argument>,

                                     <argument pos:start="391:38" pos:end="391:49"><expr pos:start="391:38" pos:end="391:49"><name pos:start="391:38" pos:end="391:49">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="393:13" pos:end="399:13"><if pos:start="393:13" pos:end="399:13">if <condition pos:start="393:16" pos:end="393:33">(<expr pos:start="393:17" pos:end="393:32"><name pos:start="393:17" pos:end="393:27"><name pos:start="393:17" pos:end="393:17">c</name><operator pos:start="393:18" pos:end="393:19">-&gt;</operator><name pos:start="393:20" pos:end="393:27">channels</name></name> <operator pos:start="393:29" pos:end="393:30">==</operator> <literal type="number" pos:start="393:32" pos:end="393:32">2</literal></expr>)</condition> <block pos:start="393:35" pos:end="399:13">{<block_content pos:start="395:17" pos:end="397:55">

                <expr_stmt pos:start="395:17" pos:end="397:55"><expr pos:start="395:17" pos:end="397:54"><call pos:start="395:17" pos:end="397:54"><name pos:start="395:17" pos:end="395:27">av_strlcatf</name><argument_list pos:start="395:28" pos:end="397:54">(<argument pos:start="395:29" pos:end="395:32"><expr pos:start="395:29" pos:end="395:32"><name pos:start="395:29" pos:end="395:32">buff</name></expr></argument>, <argument pos:start="395:35" pos:end="395:38"><expr pos:start="395:35" pos:end="395:38"><name pos:start="395:35" pos:end="395:38">size</name></expr></argument>, <argument pos:start="395:41" pos:end="395:70"><expr pos:start="395:41" pos:end="395:70"><literal type="string" pos:start="395:41" pos:end="395:70">"a=fmtp:%d sprop-stereo:1\r\n"</literal></expr></argument>,

                                         <argument pos:start="397:42" pos:end="397:53"><expr pos:start="397:42" pos:end="397:53"><name pos:start="397:42" pos:end="397:53">payload_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="401:13" pos:end="401:18">break;</break>

        <default pos:start="403:9" pos:end="403:16">default:</default>

            <comment type="block" pos:start="405:13" pos:end="405:47">/* Nothing special to do here... */</comment>

            <break pos:start="407:13" pos:end="407:18">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="413:5" pos:end="413:20"><expr pos:start="413:5" pos:end="413:19"><call pos:start="413:5" pos:end="413:19"><name pos:start="413:5" pos:end="413:11">av_free</name><argument_list pos:start="413:12" pos:end="413:19">(<argument pos:start="413:13" pos:end="413:18"><expr pos:start="413:13" pos:end="413:18"><name pos:start="413:13" pos:end="413:18">config</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="417:5" pos:end="417:16">return <expr pos:start="417:12" pos:end="417:15"><name pos:start="417:12" pos:end="417:15">buff</name></expr>;</return>

</block_content>}</block></function>
</unit>
