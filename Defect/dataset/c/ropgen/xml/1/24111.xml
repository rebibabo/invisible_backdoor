<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24111.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:23"><name pos:start="1:1" pos:end="1:3">int</name> <name pos:start="1:5" pos:end="1:23">attribute_align_arg</name></type> <name pos:start="1:25" pos:end="1:42">avresample_convert</name><parameter_list pos:start="1:43" pos:end="7:77">(<parameter pos:start="1:44" pos:end="1:70"><decl pos:start="1:44" pos:end="1:70"><type pos:start="1:44" pos:end="1:70"><name pos:start="1:44" pos:end="1:65">AVAudioResampleContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">avr</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:59"><decl pos:start="3:44" pos:end="3:59"><type pos:start="3:44" pos:end="3:59"><name pos:start="3:44" pos:end="3:50">uint8_t</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:59">output</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:79"><decl pos:start="3:62" pos:end="3:79"><type pos:start="3:62" pos:end="3:79"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:79">out_plane_size</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:58"><decl pos:start="5:44" pos:end="5:58"><type pos:start="5:44" pos:end="5:58"><name pos:start="5:44" pos:end="5:46">int</name></type> <name pos:start="5:48" pos:end="5:58">out_samples</name></decl></parameter>, <parameter pos:start="5:61" pos:end="5:75"><decl pos:start="5:61" pos:end="5:75"><type pos:start="5:61" pos:end="5:75"><name pos:start="5:61" pos:end="5:67">uint8_t</name> <modifier pos:start="5:69" pos:end="5:69">*</modifier><modifier pos:start="5:70" pos:end="5:70">*</modifier></type><name pos:start="5:71" pos:end="5:75">input</name></decl></parameter>,

                                           <parameter pos:start="7:44" pos:end="7:60"><decl pos:start="7:44" pos:end="7:60"><type pos:start="7:44" pos:end="7:60"><name pos:start="7:44" pos:end="7:46">int</name></type> <name pos:start="7:48" pos:end="7:60">in_plane_size</name></decl></parameter>, <parameter pos:start="7:63" pos:end="7:76"><decl pos:start="7:63" pos:end="7:76"><type pos:start="7:63" pos:end="7:76"><name pos:start="7:63" pos:end="7:65">int</name></type> <name pos:start="7:67" pos:end="7:76">in_samples</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="343:1">{<block_content pos:start="11:5" pos:end="341:50">

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">AudioData</name></type> <name pos:start="11:15" pos:end="11:26">input_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">AudioData</name></type> <name pos:start="13:15" pos:end="13:27">output_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">AudioData</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:29">current_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>, <decl pos:start="17:14" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:14" pos:end="17:26">direct_output</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:32">/* reset internal buffers */</comment>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:23">(<expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:11">avr</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">in_buffer</name></name></expr>)</condition> <block pos:start="23:25" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:71">

        <expr_stmt pos:start="25:9" pos:end="25:39"><expr pos:start="25:9" pos:end="25:38"><name pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:11">avr</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:22">in_buffer</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:34">nb_samples</name></name> <operator pos:start="25:36" pos:end="25:36">=</operator> <literal type="number" pos:start="25:38" pos:end="25:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="29:71"><expr pos:start="27:9" pos:end="29:70"><call pos:start="27:9" pos:end="29:70"><name pos:start="27:9" pos:end="27:34">ff_audio_data_set_channels</name><argument_list pos:start="27:35" pos:end="29:70">(<argument pos:start="27:36" pos:end="27:49"><expr pos:start="27:36" pos:end="27:49"><name pos:start="27:36" pos:end="27:49"><name pos:start="27:36" pos:end="27:38">avr</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:49">in_buffer</name></name></expr></argument>,

                                   <argument pos:start="29:36" pos:end="29:69"><expr pos:start="29:36" pos:end="29:69"><name pos:start="29:36" pos:end="29:69"><name pos:start="29:36" pos:end="29:38">avr</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:49">in_buffer</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:69">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:33">(<expr pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:32"><name pos:start="33:9" pos:end="33:11">avr</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:32">resample_out_buffer</name></name></expr>)</condition> <block pos:start="33:35" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:81">

        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:44"><name pos:start="35:9" pos:end="35:11">avr</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:32">resample_out_buffer</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">nb_samples</name></name> <operator pos:start="35:46" pos:end="35:46">=</operator> <literal type="number" pos:start="35:48" pos:end="35:48">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="39:81"><expr pos:start="37:9" pos:end="39:80"><call pos:start="37:9" pos:end="39:80"><name pos:start="37:9" pos:end="37:34">ff_audio_data_set_channels</name><argument_list pos:start="37:35" pos:end="39:80">(<argument pos:start="37:36" pos:end="37:59"><expr pos:start="37:36" pos:end="37:59"><name pos:start="37:36" pos:end="37:59"><name pos:start="37:36" pos:end="37:38">avr</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:59">resample_out_buffer</name></name></expr></argument>,

                                   <argument pos:start="39:36" pos:end="39:79"><expr pos:start="39:36" pos:end="39:79"><name pos:start="39:36" pos:end="39:79"><name pos:start="39:36" pos:end="39:38">avr</name><operator pos:start="39:39" pos:end="39:40">-&gt;</operator><name pos:start="39:41" pos:end="39:59">resample_out_buffer</name><operator pos:start="39:60" pos:end="39:61">-&gt;</operator><name pos:start="39:62" pos:end="39:79">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:24">(<expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">avr</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:23">out_buffer</name></name></expr>)</condition> <block pos:start="43:26" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:72">

        <expr_stmt pos:start="45:9" pos:end="45:40"><expr pos:start="45:9" pos:end="45:39"><name pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:11">avr</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:23">out_buffer</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:35">nb_samples</name></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <literal type="number" pos:start="45:39" pos:end="45:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="49:72"><expr pos:start="47:9" pos:end="49:71"><call pos:start="47:9" pos:end="49:71"><name pos:start="47:9" pos:end="47:34">ff_audio_data_set_channels</name><argument_list pos:start="47:35" pos:end="49:71">(<argument pos:start="47:36" pos:end="47:50"><expr pos:start="47:36" pos:end="47:50"><name pos:start="47:36" pos:end="47:50"><name pos:start="47:36" pos:end="47:38">avr</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:50">out_buffer</name></name></expr></argument>,

                                   <argument pos:start="49:36" pos:end="49:70"><expr pos:start="49:36" pos:end="49:70"><name pos:start="49:36" pos:end="49:70"><name pos:start="49:36" pos:end="49:38">avr</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:50">out_buffer</name><operator pos:start="49:51" pos:end="49:52">-&gt;</operator><name pos:start="49:53" pos:end="49:70">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:41"><expr pos:start="55:5" pos:end="55:40"><call pos:start="55:5" pos:end="55:40"><name pos:start="55:5" pos:end="55:11">av_dlog</name><argument_list pos:start="55:12" pos:end="55:40">(<argument pos:start="55:13" pos:end="55:15"><expr pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">avr</name></expr></argument>, <argument pos:start="55:18" pos:end="55:39"><expr pos:start="55:18" pos:end="55:39"><literal type="string" pos:start="55:18" pos:end="55:39">"[start conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="59:5" pos:end="59:51">/* initialize output_buffer with output data */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:69"><expr pos:start="61:5" pos:end="61:68"><name pos:start="61:5" pos:end="61:17">direct_output</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:26">output</name> <operator pos:start="61:28" pos:end="61:29">&amp;&amp;</operator> <call pos:start="61:31" pos:end="61:63"><name pos:start="61:31" pos:end="61:48">av_audio_fifo_size</name><argument_list pos:start="61:49" pos:end="61:63">(<argument pos:start="61:50" pos:end="61:62"><expr pos:start="61:50" pos:end="61:62"><name pos:start="61:50" pos:end="61:62"><name pos:start="61:50" pos:end="61:52">avr</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:62">out_fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:65" pos:end="61:66">==</operator> <literal type="number" pos:start="61:68" pos:end="61:68">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="77:5"><if pos:start="63:5" pos:end="77:5">if <condition pos:start="63:8" pos:end="63:15">(<expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:14">output</name></expr>)</condition> <block pos:start="63:17" pos:end="77:5">{<block_content pos:start="65:9" pos:end="75:37">

        <expr_stmt pos:start="65:9" pos:end="69:67"><expr pos:start="65:9" pos:end="69:66"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="69:66"><name pos:start="65:15" pos:end="65:32">ff_audio_data_init</name><argument_list pos:start="65:33" pos:end="69:66">(<argument pos:start="65:34" pos:end="65:47"><expr pos:start="65:34" pos:end="65:47"><operator pos:start="65:34" pos:end="65:34">&amp;</operator><name pos:start="65:35" pos:end="65:47">output_buffer</name></expr></argument>, <argument pos:start="65:50" pos:end="65:55"><expr pos:start="65:50" pos:end="65:55"><name pos:start="65:50" pos:end="65:55">output</name></expr></argument>, <argument pos:start="65:58" pos:end="65:71"><expr pos:start="65:58" pos:end="65:71"><name pos:start="65:58" pos:end="65:71">out_plane_size</name></expr></argument>,

                                 <argument pos:start="67:34" pos:end="67:50"><expr pos:start="67:34" pos:end="67:50"><name pos:start="67:34" pos:end="67:50"><name pos:start="67:34" pos:end="67:36">avr</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:50">out_channels</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:63"><expr pos:start="67:53" pos:end="67:63"><name pos:start="67:53" pos:end="67:63">out_samples</name></expr></argument>,

                                 <argument pos:start="69:34" pos:end="69:52"><expr pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:52"><name pos:start="69:34" pos:end="69:36">avr</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:52">out_sample_fmt</name></name></expr></argument>, <argument pos:start="69:55" pos:end="69:55"><expr pos:start="69:55" pos:end="69:55"><literal type="number" pos:start="69:55" pos:end="69:55">0</literal></expr></argument>, <argument pos:start="69:58" pos:end="69:65"><expr pos:start="69:58" pos:end="69:65"><literal type="string" pos:start="69:58" pos:end="69:65">"output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:23"><if pos:start="71:9" pos:end="73:23">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">&lt;</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:37"><expr pos:start="75:9" pos:end="75:36"><name pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:21">output_buffer</name><operator pos:start="75:22" pos:end="75:22">.</operator><name pos:start="75:23" pos:end="75:32">nb_samples</name></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <literal type="number" pos:start="75:36" pos:end="75:36">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="81:5" pos:end="215:5"><if pos:start="81:5" pos:end="203:5">if <condition pos:start="81:8" pos:end="81:14">(<expr pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:13">input</name></expr>)</condition> <block pos:start="81:16" pos:end="203:5">{<block_content pos:start="85:9" pos:end="201:9">

        <comment type="block" pos:start="83:9" pos:end="83:53">/* initialize input_buffer with input data */</comment>

        <expr_stmt pos:start="85:9" pos:end="89:65"><expr pos:start="85:9" pos:end="89:64"><name pos:start="85:9" pos:end="85:11">ret</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="89:64"><name pos:start="85:15" pos:end="85:32">ff_audio_data_init</name><argument_list pos:start="85:33" pos:end="89:64">(<argument pos:start="85:34" pos:end="85:46"><expr pos:start="85:34" pos:end="85:46"><operator pos:start="85:34" pos:end="85:34">&amp;</operator><name pos:start="85:35" pos:end="85:46">input_buffer</name></expr></argument>, <argument pos:start="85:49" pos:end="85:53"><expr pos:start="85:49" pos:end="85:53"><name pos:start="85:49" pos:end="85:53">input</name></expr></argument>, <argument pos:start="85:56" pos:end="85:68"><expr pos:start="85:56" pos:end="85:68"><name pos:start="85:56" pos:end="85:68">in_plane_size</name></expr></argument>,

                                 <argument pos:start="87:34" pos:end="87:49"><expr pos:start="87:34" pos:end="87:49"><name pos:start="87:34" pos:end="87:49"><name pos:start="87:34" pos:end="87:36">avr</name><operator pos:start="87:37" pos:end="87:38">-&gt;</operator><name pos:start="87:39" pos:end="87:49">in_channels</name></name></expr></argument>, <argument pos:start="87:52" pos:end="87:61"><expr pos:start="87:52" pos:end="87:61"><name pos:start="87:52" pos:end="87:61">in_samples</name></expr></argument>,

                                 <argument pos:start="89:34" pos:end="89:51"><expr pos:start="89:34" pos:end="89:51"><name pos:start="89:34" pos:end="89:51"><name pos:start="89:34" pos:end="89:36">avr</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:51">in_sample_fmt</name></name></expr></argument>, <argument pos:start="89:54" pos:end="89:54"><expr pos:start="89:54" pos:end="89:54"><literal type="number" pos:start="89:54" pos:end="89:54">1</literal></expr></argument>, <argument pos:start="89:57" pos:end="89:63"><expr pos:start="89:57" pos:end="89:63"><literal type="string" pos:start="89:57" pos:end="89:63">"input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="91:9" pos:end="93:23"><if pos:start="91:9" pos:end="93:23">if <condition pos:start="91:12" pos:end="91:20">(<expr pos:start="91:13" pos:end="91:19"><name pos:start="91:13" pos:end="91:15">ret</name> <operator pos:start="91:17" pos:end="91:17">&lt;</operator> <literal type="number" pos:start="91:19" pos:end="91:19">0</literal></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:23"><block_content pos:start="93:13" pos:end="93:23">

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:39"><expr pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:22">current_buffer</name> <operator pos:start="95:24" pos:end="95:24">=</operator> <operator pos:start="95:26" pos:end="95:26">&amp;</operator><name pos:start="95:27" pos:end="95:38">input_buffer</name></expr>;</expr_stmt>



        <if_stmt pos:start="99:9" pos:end="201:9"><if pos:start="99:9" pos:end="121:9">if <condition pos:start="99:12" pos:end="101:83">(<expr pos:start="99:13" pos:end="101:82"><name pos:start="99:13" pos:end="99:29"><name pos:start="99:13" pos:end="99:15">avr</name><operator pos:start="99:16" pos:end="99:17">-&gt;</operator><name pos:start="99:18" pos:end="99:29">upmix_needed</name></name> <operator pos:start="99:31" pos:end="99:32">&amp;&amp;</operator> <operator pos:start="99:34" pos:end="99:34">!</operator><name pos:start="99:35" pos:end="99:56"><name pos:start="99:35" pos:end="99:37">avr</name><operator pos:start="99:38" pos:end="99:39">-&gt;</operator><name pos:start="99:40" pos:end="99:56">in_convert_needed</name></name> <operator pos:start="99:58" pos:end="99:59">&amp;&amp;</operator> <operator pos:start="99:61" pos:end="99:61">!</operator><name pos:start="99:62" pos:end="99:81"><name pos:start="99:62" pos:end="99:64">avr</name><operator pos:start="99:65" pos:end="99:66">-&gt;</operator><name pos:start="99:67" pos:end="99:81">resample_needed</name></name> <operator pos:start="99:83" pos:end="99:84">&amp;&amp;</operator>

            <operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:36"><name pos:start="101:14" pos:end="101:16">avr</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:36">out_convert_needed</name></name> <operator pos:start="101:38" pos:end="101:39">&amp;&amp;</operator> <name pos:start="101:41" pos:end="101:53">direct_output</name> <operator pos:start="101:55" pos:end="101:56">&amp;&amp;</operator> <name pos:start="101:58" pos:end="101:68">out_samples</name> <operator pos:start="101:70" pos:end="101:71">&gt;=</operator> <name pos:start="101:73" pos:end="101:82">in_samples</name></expr>)</condition> <block pos:start="101:85" pos:end="121:9">{<block_content pos:start="107:13" pos:end="119:44">

            <comment type="block" pos:start="103:13" pos:end="105:47">/* in some rare cases we can copy input to output and upmix

               directly in the output buffer */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:72"><expr pos:start="107:13" pos:end="107:71"><call pos:start="107:13" pos:end="107:71"><name pos:start="107:13" pos:end="107:19">av_dlog</name><argument_list pos:start="107:20" pos:end="107:71">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">avr</name></expr></argument>, <argument pos:start="107:26" pos:end="107:48"><expr pos:start="107:26" pos:end="107:48"><literal type="string" pos:start="107:26" pos:end="107:48">"[copy] %s to output\n"</literal></expr></argument>, <argument pos:start="107:51" pos:end="107:70"><expr pos:start="107:51" pos:end="107:70"><name pos:start="107:51" pos:end="107:70"><name pos:start="107:51" pos:end="107:64">current_buffer</name><operator pos:start="107:65" pos:end="107:66">-&gt;</operator><name pos:start="107:67" pos:end="107:70">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="113:63"><expr pos:start="109:13" pos:end="113:62"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="113:62"><name pos:start="109:19" pos:end="109:36">ff_audio_data_copy</name><argument_list pos:start="109:37" pos:end="113:62">(<argument pos:start="109:38" pos:end="109:51"><expr pos:start="109:38" pos:end="109:51"><operator pos:start="109:38" pos:end="109:38">&amp;</operator><name pos:start="109:39" pos:end="109:51">output_buffer</name></expr></argument>, <argument pos:start="109:54" pos:end="109:67"><expr pos:start="109:54" pos:end="109:67"><name pos:start="109:54" pos:end="109:67">current_buffer</name></expr></argument>,

                                     <argument pos:start="111:38" pos:end="113:61"><expr pos:start="111:38" pos:end="113:61"><ternary pos:start="111:38" pos:end="113:61"><condition pos:start="111:38" pos:end="111:73"><expr pos:start="111:38" pos:end="111:71"><name pos:start="111:38" pos:end="111:53"><name pos:start="111:38" pos:end="111:40">avr</name><operator pos:start="111:41" pos:end="111:42">-&gt;</operator><name pos:start="111:43" pos:end="111:53">remap_point</name></name> <operator pos:start="111:55" pos:end="111:56">==</operator> <name pos:start="111:58" pos:end="111:71">REMAP_OUT_COPY</name></expr> ?</condition><then pos:start="113:38" pos:end="113:54">

                                     <expr pos:start="113:38" pos:end="113:54"><operator pos:start="113:38" pos:end="113:38">&amp;</operator><name pos:start="113:39" pos:end="113:54"><name pos:start="113:39" pos:end="113:41">avr</name><operator pos:start="113:42" pos:end="113:43">-&gt;</operator><name pos:start="113:44" pos:end="113:54">ch_map_info</name></name></expr> </then><else pos:start="113:56" pos:end="113:61">: <expr pos:start="113:58" pos:end="113:61"><name pos:start="113:58" pos:end="113:61">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="117:27"><if pos:start="115:13" pos:end="117:27">if <condition pos:start="115:16" pos:end="115:24">(<expr pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:19">ret</name> <operator pos:start="115:21" pos:end="115:21">&lt;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">0</literal></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:27"><block_content pos:start="117:17" pos:end="117:27">

                <return pos:start="117:17" pos:end="117:27">return <expr pos:start="117:24" pos:end="117:26"><name pos:start="117:24" pos:end="117:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:44"><expr pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:26">current_buffer</name> <operator pos:start="119:28" pos:end="119:28">=</operator> <operator pos:start="119:30" pos:end="119:30">&amp;</operator><name pos:start="119:31" pos:end="119:43">output_buffer</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="121:11" pos:end="143:9">else if <condition pos:start="121:19" pos:end="123:64">(<expr pos:start="121:20" pos:end="123:63"><name pos:start="121:20" pos:end="121:35"><name pos:start="121:20" pos:end="121:22">avr</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:35">remap_point</name></name> <operator pos:start="121:37" pos:end="121:38">==</operator> <name pos:start="121:40" pos:end="121:53">REMAP_OUT_COPY</name> <operator pos:start="121:55" pos:end="121:56">&amp;&amp;</operator>

                   <operator pos:start="123:20" pos:end="123:20">(</operator><operator pos:start="123:21" pos:end="123:21">!</operator><name pos:start="123:22" pos:end="123:34">direct_output</name> <operator pos:start="123:36" pos:end="123:37">||</operator> <name pos:start="123:39" pos:end="123:49">out_samples</name> <operator pos:start="123:51" pos:end="123:51">&lt;</operator> <name pos:start="123:53" pos:end="123:62">in_samples</name><operator pos:start="123:63" pos:end="123:63">)</operator></expr>)</condition> <block pos:start="123:66" pos:end="143:9">{<block_content pos:start="131:13" pos:end="141:45">

            <comment type="block" pos:start="125:13" pos:end="129:44">/* if remapping channels during output copy, we may need to

             * use an intermediate buffer in order to remap before adding

             * samples to the output fifo */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:76"><expr pos:start="131:13" pos:end="131:75"><call pos:start="131:13" pos:end="131:75"><name pos:start="131:13" pos:end="131:19">av_dlog</name><argument_list pos:start="131:20" pos:end="131:75">(<argument pos:start="131:21" pos:end="131:23"><expr pos:start="131:21" pos:end="131:23"><name pos:start="131:21" pos:end="131:23">avr</name></expr></argument>, <argument pos:start="131:26" pos:end="131:52"><expr pos:start="131:26" pos:end="131:52"><literal type="string" pos:start="131:26" pos:end="131:52">"[copy] %s to out_buffer\n"</literal></expr></argument>, <argument pos:start="131:55" pos:end="131:74"><expr pos:start="131:55" pos:end="131:74"><name pos:start="131:55" pos:end="131:74"><name pos:start="131:55" pos:end="131:68">current_buffer</name><operator pos:start="131:69" pos:end="131:70">-&gt;</operator><name pos:start="131:71" pos:end="131:74">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="135:56"><expr pos:start="133:13" pos:end="135:55"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <call pos:start="133:19" pos:end="135:55"><name pos:start="133:19" pos:end="133:36">ff_audio_data_copy</name><argument_list pos:start="133:37" pos:end="135:55">(<argument pos:start="133:38" pos:end="133:52"><expr pos:start="133:38" pos:end="133:52"><name pos:start="133:38" pos:end="133:52"><name pos:start="133:38" pos:end="133:40">avr</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:52">out_buffer</name></name></expr></argument>, <argument pos:start="133:55" pos:end="133:68"><expr pos:start="133:55" pos:end="133:68"><name pos:start="133:55" pos:end="133:68">current_buffer</name></expr></argument>,

                                     <argument pos:start="135:38" pos:end="135:54"><expr pos:start="135:38" pos:end="135:54"><operator pos:start="135:38" pos:end="135:38">&amp;</operator><name pos:start="135:39" pos:end="135:54"><name pos:start="135:39" pos:end="135:41">avr</name><operator pos:start="135:42" pos:end="135:43">-&gt;</operator><name pos:start="135:44" pos:end="135:54">ch_map_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="139:27"><if pos:start="137:13" pos:end="139:27">if <condition pos:start="137:16" pos:end="137:24">(<expr pos:start="137:17" pos:end="137:23"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:27"><block_content pos:start="139:17" pos:end="139:27">

                <return pos:start="139:17" pos:end="139:27">return <expr pos:start="139:24" pos:end="139:26"><name pos:start="139:24" pos:end="139:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:45"><expr pos:start="141:13" pos:end="141:44"><name pos:start="141:13" pos:end="141:26">current_buffer</name> <operator pos:start="141:28" pos:end="141:28">=</operator> <name pos:start="141:30" pos:end="141:44"><name pos:start="141:30" pos:end="141:32">avr</name><operator pos:start="141:33" pos:end="141:34">-&gt;</operator><name pos:start="141:35" pos:end="141:44">out_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="143:11" pos:end="201:9">else if <condition pos:start="143:19" pos:end="143:65">(<expr pos:start="143:20" pos:end="143:64"><name pos:start="143:20" pos:end="143:38"><name pos:start="143:20" pos:end="143:22">avr</name><operator pos:start="143:23" pos:end="143:24">-&gt;</operator><name pos:start="143:25" pos:end="143:38">in_copy_needed</name></name> <operator pos:start="143:40" pos:end="143:41">||</operator> <name pos:start="143:43" pos:end="143:64"><name pos:start="143:43" pos:end="143:45">avr</name><operator pos:start="143:46" pos:end="143:47">-&gt;</operator><name pos:start="143:48" pos:end="143:64">in_convert_needed</name></name></expr>)</condition> <block pos:start="143:67" pos:end="201:9">{<block_content pos:start="149:13" pos:end="199:44">

            <comment type="block" pos:start="145:13" pos:end="147:28">/* if needed, copy or convert input to in_buffer, and downmix if

               applicable */</comment>

            <if_stmt pos:start="149:13" pos:end="183:13"><if pos:start="149:13" pos:end="169:13">if <condition pos:start="149:16" pos:end="149:39">(<expr pos:start="149:17" pos:end="149:38"><name pos:start="149:17" pos:end="149:38"><name pos:start="149:17" pos:end="149:19">avr</name><operator pos:start="149:20" pos:end="149:21">-&gt;</operator><name pos:start="149:22" pos:end="149:38">in_convert_needed</name></name></expr>)</condition> <block pos:start="149:41" pos:end="169:13">{<block_content pos:start="151:17" pos:end="167:31">

                <expr_stmt pos:start="151:17" pos:end="153:72"><expr pos:start="151:17" pos:end="153:71"><name pos:start="151:17" pos:end="151:19">ret</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <call pos:start="151:23" pos:end="153:71"><name pos:start="151:23" pos:end="151:43">ff_audio_data_realloc</name><argument_list pos:start="151:44" pos:end="153:71">(<argument pos:start="151:45" pos:end="151:58"><expr pos:start="151:45" pos:end="151:58"><name pos:start="151:45" pos:end="151:58"><name pos:start="151:45" pos:end="151:47">avr</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:58">in_buffer</name></name></expr></argument>,

                                            <argument pos:start="153:45" pos:end="153:70"><expr pos:start="153:45" pos:end="153:70"><name pos:start="153:45" pos:end="153:70"><name pos:start="153:45" pos:end="153:58">current_buffer</name><operator pos:start="153:59" pos:end="153:60">-&gt;</operator><name pos:start="153:61" pos:end="153:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="157:31"><if pos:start="155:17" pos:end="157:31">if <condition pos:start="155:20" pos:end="155:28">(<expr pos:start="155:21" pos:end="155:27"><name pos:start="155:21" pos:end="155:23">ret</name> <operator pos:start="155:25" pos:end="155:25">&lt;</operator> <literal type="number" pos:start="155:27" pos:end="155:27">0</literal></expr>)</condition><block type="pseudo" pos:start="157:21" pos:end="157:31"><block_content pos:start="157:21" pos:end="157:31">

                    <return pos:start="157:21" pos:end="157:31">return <expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="159:17" pos:end="159:82"><expr pos:start="159:17" pos:end="159:81"><call pos:start="159:17" pos:end="159:81"><name pos:start="159:17" pos:end="159:23">av_dlog</name><argument_list pos:start="159:24" pos:end="159:81">(<argument pos:start="159:25" pos:end="159:27"><expr pos:start="159:25" pos:end="159:27"><name pos:start="159:25" pos:end="159:27">avr</name></expr></argument>, <argument pos:start="159:30" pos:end="159:58"><expr pos:start="159:30" pos:end="159:58"><literal type="string" pos:start="159:30" pos:end="159:58">"[convert] %s to in_buffer\n"</literal></expr></argument>, <argument pos:start="159:61" pos:end="159:80"><expr pos:start="159:61" pos:end="159:80"><name pos:start="159:61" pos:end="159:80"><name pos:start="159:61" pos:end="159:74">current_buffer</name><operator pos:start="159:75" pos:end="159:76">-&gt;</operator><name pos:start="159:77" pos:end="159:80">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="163:55"><expr pos:start="161:17" pos:end="163:54"><name pos:start="161:17" pos:end="161:19">ret</name> <operator pos:start="161:21" pos:end="161:21">=</operator> <call pos:start="161:23" pos:end="163:54"><name pos:start="161:23" pos:end="161:38">ff_audio_convert</name><argument_list pos:start="161:39" pos:end="163:54">(<argument pos:start="161:40" pos:end="161:49"><expr pos:start="161:40" pos:end="161:49"><name pos:start="161:40" pos:end="161:49"><name pos:start="161:40" pos:end="161:42">avr</name><operator pos:start="161:43" pos:end="161:44">-&gt;</operator><name pos:start="161:45" pos:end="161:49">ac_in</name></name></expr></argument>, <argument pos:start="161:52" pos:end="161:65"><expr pos:start="161:52" pos:end="161:65"><name pos:start="161:52" pos:end="161:65"><name pos:start="161:52" pos:end="161:54">avr</name><operator pos:start="161:55" pos:end="161:56">-&gt;</operator><name pos:start="161:57" pos:end="161:65">in_buffer</name></name></expr></argument>,

                                       <argument pos:start="163:40" pos:end="163:53"><expr pos:start="163:40" pos:end="163:53"><name pos:start="163:40" pos:end="163:53">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="165:17" pos:end="167:31"><if pos:start="165:17" pos:end="167:31">if <condition pos:start="165:20" pos:end="165:28">(<expr pos:start="165:21" pos:end="165:27"><name pos:start="165:21" pos:end="165:23">ret</name> <operator pos:start="165:25" pos:end="165:25">&lt;</operator> <literal type="number" pos:start="165:27" pos:end="165:27">0</literal></expr>)</condition><block type="pseudo" pos:start="167:21" pos:end="167:31"><block_content pos:start="167:21" pos:end="167:31">

                    <return pos:start="167:21" pos:end="167:31">return <expr pos:start="167:28" pos:end="167:30"><name pos:start="167:28" pos:end="167:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="169:15" pos:end="183:13">else <block pos:start="169:20" pos:end="183:13">{<block_content pos:start="171:17" pos:end="181:31">

                <expr_stmt pos:start="171:17" pos:end="171:79"><expr pos:start="171:17" pos:end="171:78"><call pos:start="171:17" pos:end="171:78"><name pos:start="171:17" pos:end="171:23">av_dlog</name><argument_list pos:start="171:24" pos:end="171:78">(<argument pos:start="171:25" pos:end="171:27"><expr pos:start="171:25" pos:end="171:27"><name pos:start="171:25" pos:end="171:27">avr</name></expr></argument>, <argument pos:start="171:30" pos:end="171:55"><expr pos:start="171:30" pos:end="171:55"><literal type="string" pos:start="171:30" pos:end="171:55">"[copy] %s to in_buffer\n"</literal></expr></argument>, <argument pos:start="171:58" pos:end="171:77"><expr pos:start="171:58" pos:end="171:77"><name pos:start="171:58" pos:end="171:77"><name pos:start="171:58" pos:end="171:71">current_buffer</name><operator pos:start="171:72" pos:end="171:73">-&gt;</operator><name pos:start="171:74" pos:end="171:77">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="177:67"><expr pos:start="173:17" pos:end="177:66"><name pos:start="173:17" pos:end="173:19">ret</name> <operator pos:start="173:21" pos:end="173:21">=</operator> <call pos:start="173:23" pos:end="177:66"><name pos:start="173:23" pos:end="173:40">ff_audio_data_copy</name><argument_list pos:start="173:41" pos:end="177:66">(<argument pos:start="173:42" pos:end="173:55"><expr pos:start="173:42" pos:end="173:55"><name pos:start="173:42" pos:end="173:55"><name pos:start="173:42" pos:end="173:44">avr</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:55">in_buffer</name></name></expr></argument>, <argument pos:start="173:58" pos:end="173:71"><expr pos:start="173:58" pos:end="173:71"><name pos:start="173:58" pos:end="173:71">current_buffer</name></expr></argument>,

                                         <argument pos:start="175:42" pos:end="177:65"><expr pos:start="175:42" pos:end="177:65"><ternary pos:start="175:42" pos:end="177:65"><condition pos:start="175:42" pos:end="175:76"><expr pos:start="175:42" pos:end="175:74"><name pos:start="175:42" pos:end="175:57"><name pos:start="175:42" pos:end="175:44">avr</name><operator pos:start="175:45" pos:end="175:46">-&gt;</operator><name pos:start="175:47" pos:end="175:57">remap_point</name></name> <operator pos:start="175:59" pos:end="175:60">==</operator> <name pos:start="175:62" pos:end="175:74">REMAP_IN_COPY</name></expr> ?</condition><then pos:start="177:42" pos:end="177:58">

                                         <expr pos:start="177:42" pos:end="177:58"><operator pos:start="177:42" pos:end="177:42">&amp;</operator><name pos:start="177:43" pos:end="177:58"><name pos:start="177:43" pos:end="177:45">avr</name><operator pos:start="177:46" pos:end="177:47">-&gt;</operator><name pos:start="177:48" pos:end="177:58">ch_map_info</name></name></expr> </then><else pos:start="177:60" pos:end="177:65">: <expr pos:start="177:62" pos:end="177:65"><name pos:start="177:62" pos:end="177:65">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="179:17" pos:end="181:31"><if pos:start="179:17" pos:end="181:31">if <condition pos:start="179:20" pos:end="179:28">(<expr pos:start="179:21" pos:end="179:27"><name pos:start="179:21" pos:end="179:23">ret</name> <operator pos:start="179:25" pos:end="179:25">&lt;</operator> <literal type="number" pos:start="179:27" pos:end="179:27">0</literal></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:31"><block_content pos:start="181:21" pos:end="181:31">

                    <return pos:start="181:21" pos:end="181:31">return <expr pos:start="181:28" pos:end="181:30"><name pos:start="181:28" pos:end="181:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:73"><expr pos:start="185:13" pos:end="185:72"><call pos:start="185:13" pos:end="185:72"><name pos:start="185:13" pos:end="185:38">ff_audio_data_set_channels</name><argument_list pos:start="185:39" pos:end="185:72">(<argument pos:start="185:40" pos:end="185:53"><expr pos:start="185:40" pos:end="185:53"><name pos:start="185:40" pos:end="185:53"><name pos:start="185:40" pos:end="185:42">avr</name><operator pos:start="185:43" pos:end="185:44">-&gt;</operator><name pos:start="185:45" pos:end="185:53">in_buffer</name></name></expr></argument>, <argument pos:start="185:56" pos:end="185:71"><expr pos:start="185:56" pos:end="185:71"><name pos:start="185:56" pos:end="185:71"><name pos:start="185:56" pos:end="185:58">avr</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:71">in_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="187:13" pos:end="197:13"><if pos:start="187:13" pos:end="197:13">if <condition pos:start="187:16" pos:end="187:36">(<expr pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:19">avr</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:35">downmix_needed</name></name></expr>)</condition> <block pos:start="187:38" pos:end="197:13">{<block_content pos:start="189:17" pos:end="195:31">

                <expr_stmt pos:start="189:17" pos:end="189:54"><expr pos:start="189:17" pos:end="189:53"><call pos:start="189:17" pos:end="189:53"><name pos:start="189:17" pos:end="189:23">av_dlog</name><argument_list pos:start="189:24" pos:end="189:53">(<argument pos:start="189:25" pos:end="189:27"><expr pos:start="189:25" pos:end="189:27"><name pos:start="189:25" pos:end="189:27">avr</name></expr></argument>, <argument pos:start="189:30" pos:end="189:52"><expr pos:start="189:30" pos:end="189:52"><literal type="string" pos:start="189:30" pos:end="189:52">"[downmix] in_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:60"><expr pos:start="191:17" pos:end="191:59"><name pos:start="191:17" pos:end="191:19">ret</name> <operator pos:start="191:21" pos:end="191:21">=</operator> <call pos:start="191:23" pos:end="191:59"><name pos:start="191:23" pos:end="191:34">ff_audio_mix</name><argument_list pos:start="191:35" pos:end="191:59">(<argument pos:start="191:36" pos:end="191:42"><expr pos:start="191:36" pos:end="191:42"><name pos:start="191:36" pos:end="191:42"><name pos:start="191:36" pos:end="191:38">avr</name><operator pos:start="191:39" pos:end="191:40">-&gt;</operator><name pos:start="191:41" pos:end="191:42">am</name></name></expr></argument>, <argument pos:start="191:45" pos:end="191:58"><expr pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:58"><name pos:start="191:45" pos:end="191:47">avr</name><operator pos:start="191:48" pos:end="191:49">-&gt;</operator><name pos:start="191:50" pos:end="191:58">in_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="195:31"><if pos:start="193:17" pos:end="195:31">if <condition pos:start="193:20" pos:end="193:28">(<expr pos:start="193:21" pos:end="193:27"><name pos:start="193:21" pos:end="193:23">ret</name> <operator pos:start="193:25" pos:end="193:25">&lt;</operator> <literal type="number" pos:start="193:27" pos:end="193:27">0</literal></expr>)</condition><block type="pseudo" pos:start="195:21" pos:end="195:31"><block_content pos:start="195:21" pos:end="195:31">

                    <return pos:start="195:21" pos:end="195:31">return <expr pos:start="195:28" pos:end="195:30"><name pos:start="195:28" pos:end="195:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:44"><expr pos:start="199:13" pos:end="199:43"><name pos:start="199:13" pos:end="199:26">current_buffer</name> <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:43"><name pos:start="199:30" pos:end="199:32">avr</name><operator pos:start="199:33" pos:end="199:34">-&gt;</operator><name pos:start="199:35" pos:end="199:43">in_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="203:7" pos:end="215:5">else <block pos:start="203:12" pos:end="215:5">{<block_content pos:start="207:9" pos:end="213:30">

        <comment type="block" pos:start="205:9" pos:end="205:73">/* flush resampling buffer and/or output FIFO if input is NULL */</comment>

        <if_stmt pos:start="207:9" pos:end="211:48"><if pos:start="207:9" pos:end="211:48">if <condition pos:start="207:12" pos:end="207:34">(<expr pos:start="207:13" pos:end="207:33"><operator pos:start="207:13" pos:end="207:13">!</operator><name pos:start="207:14" pos:end="207:33"><name pos:start="207:14" pos:end="207:16">avr</name><operator pos:start="207:17" pos:end="207:18">-&gt;</operator><name pos:start="207:19" pos:end="207:33">resample_needed</name></name></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="211:48"><block_content pos:start="209:13" pos:end="211:48">

            <return pos:start="209:13" pos:end="211:48">return <expr pos:start="209:20" pos:end="211:47"><call pos:start="209:20" pos:end="211:47"><name pos:start="209:20" pos:end="209:41">handle_buffered_output</name><argument_list pos:start="209:42" pos:end="211:47">(<argument pos:start="209:43" pos:end="209:45"><expr pos:start="209:43" pos:end="209:45"><name pos:start="209:43" pos:end="209:45">avr</name></expr></argument>, <argument pos:start="209:48" pos:end="209:77"><expr pos:start="209:48" pos:end="209:77"><ternary pos:start="209:48" pos:end="209:77"><condition pos:start="209:48" pos:end="209:55"><expr pos:start="209:48" pos:end="209:53"><name pos:start="209:48" pos:end="209:53">output</name></expr> ?</condition><then pos:start="209:57" pos:end="209:70"> <expr pos:start="209:57" pos:end="209:70"><operator pos:start="209:57" pos:end="209:57">&amp;</operator><name pos:start="209:58" pos:end="209:70">output_buffer</name></expr> </then><else pos:start="209:72" pos:end="209:77">: <expr pos:start="209:74" pos:end="209:77"><name pos:start="209:74" pos:end="209:77">NULL</name></expr></else></ternary></expr></argument>,

                                          <argument pos:start="211:43" pos:end="211:46"><expr pos:start="211:43" pos:end="211:46"><name pos:start="211:43" pos:end="211:46">NULL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:22">current_buffer</name> <operator pos:start="213:24" pos:end="213:24">=</operator> <name pos:start="213:26" pos:end="213:29">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="219:5" pos:end="261:5"><if pos:start="219:5" pos:end="261:5">if <condition pos:start="219:8" pos:end="219:29">(<expr pos:start="219:9" pos:end="219:28"><name pos:start="219:9" pos:end="219:28"><name pos:start="219:9" pos:end="219:11">avr</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:28">resample_needed</name></name></expr>)</condition> <block pos:start="219:31" pos:end="261:5">{<block_content pos:start="221:9" pos:end="259:38">

        <decl_stmt pos:start="221:9" pos:end="221:32"><decl pos:start="221:9" pos:end="221:31"><type pos:start="221:9" pos:end="221:19"><name pos:start="221:9" pos:end="221:17">AudioData</name> <modifier pos:start="221:19" pos:end="221:19">*</modifier></type><name pos:start="221:20" pos:end="221:31">resample_out</name></decl>;</decl_stmt>



        <if_stmt pos:start="225:9" pos:end="231:52"><if pos:start="225:9" pos:end="227:42">if <condition pos:start="225:12" pos:end="225:73">(<expr pos:start="225:13" pos:end="225:72"><operator pos:start="225:13" pos:end="225:13">!</operator><name pos:start="225:14" pos:end="225:36"><name pos:start="225:14" pos:end="225:16">avr</name><operator pos:start="225:17" pos:end="225:18">-&gt;</operator><name pos:start="225:19" pos:end="225:36">out_convert_needed</name></name> <operator pos:start="225:38" pos:end="225:39">&amp;&amp;</operator> <name pos:start="225:41" pos:end="225:53">direct_output</name> <operator pos:start="225:55" pos:end="225:56">&amp;&amp;</operator> <name pos:start="225:58" pos:end="225:68">out_samples</name> <operator pos:start="225:70" pos:end="225:70">&gt;</operator> <literal type="number" pos:start="225:72" pos:end="225:72">0</literal></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:42"><block_content pos:start="227:13" pos:end="227:42">

            <expr_stmt pos:start="227:13" pos:end="227:42"><expr pos:start="227:13" pos:end="227:41"><name pos:start="227:13" pos:end="227:24">resample_out</name> <operator pos:start="227:26" pos:end="227:26">=</operator> <operator pos:start="227:28" pos:end="227:28">&amp;</operator><name pos:start="227:29" pos:end="227:41">output_buffer</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="229:9" pos:end="231:52">else<block type="pseudo" pos:start="231:13" pos:end="231:52"><block_content pos:start="231:13" pos:end="231:52">

            <expr_stmt pos:start="231:13" pos:end="231:52"><expr pos:start="231:13" pos:end="231:51"><name pos:start="231:13" pos:end="231:24">resample_out</name> <operator pos:start="231:26" pos:end="231:26">=</operator> <name pos:start="231:28" pos:end="231:51"><name pos:start="231:28" pos:end="231:30">avr</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:51">resample_out_buffer</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="235:36"><expr pos:start="233:9" pos:end="235:35"><call pos:start="233:9" pos:end="235:35"><name pos:start="233:9" pos:end="233:15">av_dlog</name><argument_list pos:start="233:16" pos:end="235:35">(<argument pos:start="233:17" pos:end="233:19"><expr pos:start="233:17" pos:end="233:19"><name pos:start="233:17" pos:end="233:19">avr</name></expr></argument>, <argument pos:start="233:22" pos:end="233:44"><expr pos:start="233:22" pos:end="233:44"><literal type="string" pos:start="233:22" pos:end="233:44">"[resample] %s to %s\n"</literal></expr></argument>, <argument pos:start="233:47" pos:end="233:66"><expr pos:start="233:47" pos:end="233:66"><name pos:start="233:47" pos:end="233:66"><name pos:start="233:47" pos:end="233:60">current_buffer</name><operator pos:start="233:61" pos:end="233:62">-&gt;</operator><name pos:start="233:63" pos:end="233:66">name</name></name></expr></argument>,

                <argument pos:start="235:17" pos:end="235:34"><expr pos:start="235:17" pos:end="235:34"><name pos:start="235:17" pos:end="235:34"><name pos:start="235:17" pos:end="235:28">resample_out</name><operator pos:start="235:29" pos:end="235:30">-&gt;</operator><name pos:start="235:31" pos:end="235:34">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="239:48"><expr pos:start="237:9" pos:end="239:47"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="239:47"><name pos:start="237:15" pos:end="237:31">ff_audio_resample</name><argument_list pos:start="237:32" pos:end="239:47">(<argument pos:start="237:33" pos:end="237:45"><expr pos:start="237:33" pos:end="237:45"><name pos:start="237:33" pos:end="237:45"><name pos:start="237:33" pos:end="237:35">avr</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:45">resample</name></name></expr></argument>, <argument pos:start="237:48" pos:end="237:59"><expr pos:start="237:48" pos:end="237:59"><name pos:start="237:48" pos:end="237:59">resample_out</name></expr></argument>,

                                <argument pos:start="239:33" pos:end="239:46"><expr pos:start="239:33" pos:end="239:46"><name pos:start="239:33" pos:end="239:46">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="241:9" pos:end="243:23"><if pos:start="241:9" pos:end="243:23">if <condition pos:start="241:12" pos:end="241:20">(<expr pos:start="241:13" pos:end="241:19"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:17">&lt;</operator> <literal type="number" pos:start="241:19" pos:end="241:19">0</literal></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:23"><block_content pos:start="243:13" pos:end="243:23">

            <return pos:start="243:13" pos:end="243:23">return <expr pos:start="243:20" pos:end="243:22"><name pos:start="243:20" pos:end="243:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="247:9" pos:end="247:70">/* if resampling did not produce any samples, just return 0 */</comment>

        <if_stmt pos:start="249:9" pos:end="255:9"><if pos:start="249:9" pos:end="255:9">if <condition pos:start="249:12" pos:end="249:42">(<expr pos:start="249:13" pos:end="249:41"><name pos:start="249:13" pos:end="249:36"><name pos:start="249:13" pos:end="249:24">resample_out</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:36">nb_samples</name></name> <operator pos:start="249:38" pos:end="249:39">==</operator> <literal type="number" pos:start="249:41" pos:end="249:41">0</literal></expr>)</condition> <block pos:start="249:44" pos:end="255:9">{<block_content pos:start="251:13" pos:end="253:21">

            <expr_stmt pos:start="251:13" pos:end="251:47"><expr pos:start="251:13" pos:end="251:46"><call pos:start="251:13" pos:end="251:46"><name pos:start="251:13" pos:end="251:19">av_dlog</name><argument_list pos:start="251:20" pos:end="251:46">(<argument pos:start="251:21" pos:end="251:23"><expr pos:start="251:21" pos:end="251:23"><name pos:start="251:21" pos:end="251:23">avr</name></expr></argument>, <argument pos:start="251:26" pos:end="251:45"><expr pos:start="251:26" pos:end="251:45"><literal type="string" pos:start="251:26" pos:end="251:45">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="253:13" pos:end="253:21">return <expr pos:start="253:20" pos:end="253:20"><literal type="number" pos:start="253:20" pos:end="253:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="259:9" pos:end="259:38"><expr pos:start="259:9" pos:end="259:37"><name pos:start="259:9" pos:end="259:22">current_buffer</name> <operator pos:start="259:24" pos:end="259:24">=</operator> <name pos:start="259:26" pos:end="259:37">resample_out</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="265:5" pos:end="275:5"><if pos:start="265:5" pos:end="275:5">if <condition pos:start="265:8" pos:end="265:26">(<expr pos:start="265:9" pos:end="265:25"><name pos:start="265:9" pos:end="265:25"><name pos:start="265:9" pos:end="265:11">avr</name><operator pos:start="265:12" pos:end="265:13">-&gt;</operator><name pos:start="265:14" pos:end="265:25">upmix_needed</name></name></expr>)</condition> <block pos:start="265:28" pos:end="275:5">{<block_content pos:start="267:9" pos:end="273:23">

        <expr_stmt pos:start="267:9" pos:end="267:59"><expr pos:start="267:9" pos:end="267:58"><call pos:start="267:9" pos:end="267:58"><name pos:start="267:9" pos:end="267:15">av_dlog</name><argument_list pos:start="267:16" pos:end="267:58">(<argument pos:start="267:17" pos:end="267:19"><expr pos:start="267:17" pos:end="267:19"><name pos:start="267:17" pos:end="267:19">avr</name></expr></argument>, <argument pos:start="267:22" pos:end="267:35"><expr pos:start="267:22" pos:end="267:35"><literal type="string" pos:start="267:22" pos:end="267:35">"[upmix] %s\n"</literal></expr></argument>, <argument pos:start="267:38" pos:end="267:57"><expr pos:start="267:38" pos:end="267:57"><name pos:start="267:38" pos:end="267:57"><name pos:start="267:38" pos:end="267:51">current_buffer</name><operator pos:start="267:52" pos:end="267:53">-&gt;</operator><name pos:start="267:54" pos:end="267:57">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="269:9" pos:end="269:52"><expr pos:start="269:9" pos:end="269:51"><name pos:start="269:9" pos:end="269:11">ret</name> <operator pos:start="269:13" pos:end="269:13">=</operator> <call pos:start="269:15" pos:end="269:51"><name pos:start="269:15" pos:end="269:26">ff_audio_mix</name><argument_list pos:start="269:27" pos:end="269:51">(<argument pos:start="269:28" pos:end="269:34"><expr pos:start="269:28" pos:end="269:34"><name pos:start="269:28" pos:end="269:34"><name pos:start="269:28" pos:end="269:30">avr</name><operator pos:start="269:31" pos:end="269:32">-&gt;</operator><name pos:start="269:33" pos:end="269:34">am</name></name></expr></argument>, <argument pos:start="269:37" pos:end="269:50"><expr pos:start="269:37" pos:end="269:50"><name pos:start="269:37" pos:end="269:50">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="273:23"><if pos:start="271:9" pos:end="273:23">if <condition pos:start="271:12" pos:end="271:20">(<expr pos:start="271:13" pos:end="271:19"><name pos:start="271:13" pos:end="271:15">ret</name> <operator pos:start="271:17" pos:end="271:17">&lt;</operator> <literal type="number" pos:start="271:19" pos:end="271:19">0</literal></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:23"><block_content pos:start="273:13" pos:end="273:23">

            <return pos:start="273:13" pos:end="273:23">return <expr pos:start="273:20" pos:end="273:22"><name pos:start="273:20" pos:end="273:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="279:5" pos:end="279:68">/* if we resampled or upmixed directly to output, return here */</comment>

    <if_stmt pos:start="281:5" pos:end="287:5"><if pos:start="281:5" pos:end="287:5">if <condition pos:start="281:8" pos:end="281:41">(<expr pos:start="281:9" pos:end="281:40"><name pos:start="281:9" pos:end="281:22">current_buffer</name> <operator pos:start="281:24" pos:end="281:25">==</operator> <operator pos:start="281:27" pos:end="281:27">&amp;</operator><name pos:start="281:28" pos:end="281:40">output_buffer</name></expr>)</condition> <block pos:start="281:43" pos:end="287:5">{<block_content pos:start="283:9" pos:end="285:42">

        <expr_stmt pos:start="283:9" pos:end="283:43"><expr pos:start="283:9" pos:end="283:42"><call pos:start="283:9" pos:end="283:42"><name pos:start="283:9" pos:end="283:15">av_dlog</name><argument_list pos:start="283:16" pos:end="283:42">(<argument pos:start="283:17" pos:end="283:19"><expr pos:start="283:17" pos:end="283:19"><name pos:start="283:17" pos:end="283:19">avr</name></expr></argument>, <argument pos:start="283:22" pos:end="283:41"><expr pos:start="283:22" pos:end="283:41"><literal type="string" pos:start="283:22" pos:end="283:41">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="285:9" pos:end="285:42">return <expr pos:start="285:16" pos:end="285:41"><name pos:start="285:16" pos:end="285:41"><name pos:start="285:16" pos:end="285:29">current_buffer</name><operator pos:start="285:30" pos:end="285:31">-&gt;</operator><name pos:start="285:32" pos:end="285:41">nb_samples</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="291:5" pos:end="335:5"><if pos:start="291:5" pos:end="335:5">if <condition pos:start="291:8" pos:end="291:32">(<expr pos:start="291:9" pos:end="291:31"><name pos:start="291:9" pos:end="291:31"><name pos:start="291:9" pos:end="291:11">avr</name><operator pos:start="291:12" pos:end="291:13">-&gt;</operator><name pos:start="291:14" pos:end="291:31">out_convert_needed</name></name></expr>)</condition> <block pos:start="291:34" pos:end="335:5">{<block_content pos:start="293:9" pos:end="333:9">

        <if_stmt pos:start="293:9" pos:end="333:9"><if pos:start="293:9" pos:end="311:9">if <condition pos:start="293:12" pos:end="293:71">(<expr pos:start="293:13" pos:end="293:70"><name pos:start="293:13" pos:end="293:25">direct_output</name> <operator pos:start="293:27" pos:end="293:28">&amp;&amp;</operator> <name pos:start="293:30" pos:end="293:40">out_samples</name> <operator pos:start="293:42" pos:end="293:43">&gt;=</operator> <name pos:start="293:45" pos:end="293:70"><name pos:start="293:45" pos:end="293:58">current_buffer</name><operator pos:start="293:59" pos:end="293:60">-&gt;</operator><name pos:start="293:61" pos:end="293:70">nb_samples</name></name></expr>)</condition> <block pos:start="293:73" pos:end="311:9">{<block_content pos:start="297:13" pos:end="309:44">

            <comment type="block" pos:start="295:13" pos:end="295:44">/* convert directly to output */</comment>

            <expr_stmt pos:start="297:13" pos:end="297:75"><expr pos:start="297:13" pos:end="297:74"><call pos:start="297:13" pos:end="297:74"><name pos:start="297:13" pos:end="297:19">av_dlog</name><argument_list pos:start="297:20" pos:end="297:74">(<argument pos:start="297:21" pos:end="297:23"><expr pos:start="297:21" pos:end="297:23"><name pos:start="297:21" pos:end="297:23">avr</name></expr></argument>, <argument pos:start="297:26" pos:end="297:51"><expr pos:start="297:26" pos:end="297:51"><literal type="string" pos:start="297:26" pos:end="297:51">"[convert] %s to output\n"</literal></expr></argument>, <argument pos:start="297:54" pos:end="297:73"><expr pos:start="297:54" pos:end="297:73"><name pos:start="297:54" pos:end="297:73"><name pos:start="297:54" pos:end="297:67">current_buffer</name><operator pos:start="297:68" pos:end="297:69">-&gt;</operator><name pos:start="297:70" pos:end="297:73">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:80"><expr pos:start="299:13" pos:end="299:79"><name pos:start="299:13" pos:end="299:15">ret</name> <operator pos:start="299:17" pos:end="299:17">=</operator> <call pos:start="299:19" pos:end="299:79"><name pos:start="299:19" pos:end="299:34">ff_audio_convert</name><argument_list pos:start="299:35" pos:end="299:79">(<argument pos:start="299:36" pos:end="299:46"><expr pos:start="299:36" pos:end="299:46"><name pos:start="299:36" pos:end="299:46"><name pos:start="299:36" pos:end="299:38">avr</name><operator pos:start="299:39" pos:end="299:40">-&gt;</operator><name pos:start="299:41" pos:end="299:46">ac_out</name></name></expr></argument>, <argument pos:start="299:49" pos:end="299:62"><expr pos:start="299:49" pos:end="299:62"><operator pos:start="299:49" pos:end="299:49">&amp;</operator><name pos:start="299:50" pos:end="299:62">output_buffer</name></expr></argument>, <argument pos:start="299:65" pos:end="299:78"><expr pos:start="299:65" pos:end="299:78"><name pos:start="299:65" pos:end="299:78">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="301:13" pos:end="303:27"><if pos:start="301:13" pos:end="303:27">if <condition pos:start="301:16" pos:end="301:24">(<expr pos:start="301:17" pos:end="301:23"><name pos:start="301:17" pos:end="301:19">ret</name> <operator pos:start="301:21" pos:end="301:21">&lt;</operator> <literal type="number" pos:start="301:23" pos:end="301:23">0</literal></expr>)</condition><block type="pseudo" pos:start="303:17" pos:end="303:27"><block_content pos:start="303:17" pos:end="303:27">

                <return pos:start="303:17" pos:end="303:27">return <expr pos:start="303:24" pos:end="303:26"><name pos:start="303:24" pos:end="303:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="307:13" pos:end="307:47"><expr pos:start="307:13" pos:end="307:46"><call pos:start="307:13" pos:end="307:46"><name pos:start="307:13" pos:end="307:19">av_dlog</name><argument_list pos:start="307:20" pos:end="307:46">(<argument pos:start="307:21" pos:end="307:23"><expr pos:start="307:21" pos:end="307:23"><name pos:start="307:21" pos:end="307:23">avr</name></expr></argument>, <argument pos:start="307:26" pos:end="307:45"><expr pos:start="307:26" pos:end="307:45"><literal type="string" pos:start="307:26" pos:end="307:45">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="309:13" pos:end="309:44">return <expr pos:start="309:20" pos:end="309:43"><name pos:start="309:20" pos:end="309:43"><name pos:start="309:20" pos:end="309:32">output_buffer</name><operator pos:start="309:33" pos:end="309:33">.</operator><name pos:start="309:34" pos:end="309:43">nb_samples</name></name></expr>;</return>

        </block_content>}</block></if> <else pos:start="311:11" pos:end="333:9">else <block pos:start="311:16" pos:end="333:9">{<block_content pos:start="313:13" pos:end="331:45">

            <expr_stmt pos:start="313:13" pos:end="315:68"><expr pos:start="313:13" pos:end="315:67"><name pos:start="313:13" pos:end="313:15">ret</name> <operator pos:start="313:17" pos:end="313:17">=</operator> <call pos:start="313:19" pos:end="315:67"><name pos:start="313:19" pos:end="313:39">ff_audio_data_realloc</name><argument_list pos:start="313:40" pos:end="315:67">(<argument pos:start="313:41" pos:end="313:55"><expr pos:start="313:41" pos:end="313:55"><name pos:start="313:41" pos:end="313:55"><name pos:start="313:41" pos:end="313:43">avr</name><operator pos:start="313:44" pos:end="313:45">-&gt;</operator><name pos:start="313:46" pos:end="313:55">out_buffer</name></name></expr></argument>,

                                        <argument pos:start="315:41" pos:end="315:66"><expr pos:start="315:41" pos:end="315:66"><name pos:start="315:41" pos:end="315:66"><name pos:start="315:41" pos:end="315:54">current_buffer</name><operator pos:start="315:55" pos:end="315:56">-&gt;</operator><name pos:start="315:57" pos:end="315:66">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="317:13" pos:end="319:27"><if pos:start="317:13" pos:end="319:27">if <condition pos:start="317:16" pos:end="317:24">(<expr pos:start="317:17" pos:end="317:23"><name pos:start="317:17" pos:end="317:19">ret</name> <operator pos:start="317:21" pos:end="317:21">&lt;</operator> <literal type="number" pos:start="317:23" pos:end="317:23">0</literal></expr>)</condition><block type="pseudo" pos:start="319:17" pos:end="319:27"><block_content pos:start="319:17" pos:end="319:27">

                <return pos:start="319:17" pos:end="319:27">return <expr pos:start="319:24" pos:end="319:26"><name pos:start="319:24" pos:end="319:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="321:13" pos:end="321:79"><expr pos:start="321:13" pos:end="321:78"><call pos:start="321:13" pos:end="321:78"><name pos:start="321:13" pos:end="321:19">av_dlog</name><argument_list pos:start="321:20" pos:end="321:78">(<argument pos:start="321:21" pos:end="321:23"><expr pos:start="321:21" pos:end="321:23"><name pos:start="321:21" pos:end="321:23">avr</name></expr></argument>, <argument pos:start="321:26" pos:end="321:55"><expr pos:start="321:26" pos:end="321:55"><literal type="string" pos:start="321:26" pos:end="321:55">"[convert] %s to out_buffer\n"</literal></expr></argument>, <argument pos:start="321:58" pos:end="321:77"><expr pos:start="321:58" pos:end="321:77"><name pos:start="321:58" pos:end="321:77"><name pos:start="321:58" pos:end="321:71">current_buffer</name><operator pos:start="321:72" pos:end="321:73">-&gt;</operator><name pos:start="321:74" pos:end="321:77">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="325:51"><expr pos:start="323:13" pos:end="325:50"><name pos:start="323:13" pos:end="323:15">ret</name> <operator pos:start="323:17" pos:end="323:17">=</operator> <call pos:start="323:19" pos:end="325:50"><name pos:start="323:19" pos:end="323:34">ff_audio_convert</name><argument_list pos:start="323:35" pos:end="325:50">(<argument pos:start="323:36" pos:end="323:46"><expr pos:start="323:36" pos:end="323:46"><name pos:start="323:36" pos:end="323:46"><name pos:start="323:36" pos:end="323:38">avr</name><operator pos:start="323:39" pos:end="323:40">-&gt;</operator><name pos:start="323:41" pos:end="323:46">ac_out</name></name></expr></argument>, <argument pos:start="323:49" pos:end="323:63"><expr pos:start="323:49" pos:end="323:63"><name pos:start="323:49" pos:end="323:63"><name pos:start="323:49" pos:end="323:51">avr</name><operator pos:start="323:52" pos:end="323:53">-&gt;</operator><name pos:start="323:54" pos:end="323:63">out_buffer</name></name></expr></argument>,

                                   <argument pos:start="325:36" pos:end="325:49"><expr pos:start="325:36" pos:end="325:49"><name pos:start="325:36" pos:end="325:49">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="327:13" pos:end="329:27"><if pos:start="327:13" pos:end="329:27">if <condition pos:start="327:16" pos:end="327:24">(<expr pos:start="327:17" pos:end="327:23"><name pos:start="327:17" pos:end="327:19">ret</name> <operator pos:start="327:21" pos:end="327:21">&lt;</operator> <literal type="number" pos:start="327:23" pos:end="327:23">0</literal></expr>)</condition><block type="pseudo" pos:start="329:17" pos:end="329:27"><block_content pos:start="329:17" pos:end="329:27">

                <return pos:start="329:17" pos:end="329:27">return <expr pos:start="329:24" pos:end="329:26"><name pos:start="329:24" pos:end="329:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:45"><expr pos:start="331:13" pos:end="331:44"><name pos:start="331:13" pos:end="331:26">current_buffer</name> <operator pos:start="331:28" pos:end="331:28">=</operator> <name pos:start="331:30" pos:end="331:44"><name pos:start="331:30" pos:end="331:32">avr</name><operator pos:start="331:33" pos:end="331:34">-&gt;</operator><name pos:start="331:35" pos:end="331:44">out_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="339:5" pos:end="341:50">return <expr pos:start="339:12" pos:end="341:49"><call pos:start="339:12" pos:end="341:49"><name pos:start="339:12" pos:end="339:33">handle_buffered_output</name><argument_list pos:start="339:34" pos:end="341:49">(<argument pos:start="339:35" pos:end="339:37"><expr pos:start="339:35" pos:end="339:37"><name pos:start="339:35" pos:end="339:37">avr</name></expr></argument>, <argument pos:start="339:40" pos:end="339:69"><expr pos:start="339:40" pos:end="339:69"><ternary pos:start="339:40" pos:end="339:69"><condition pos:start="339:40" pos:end="339:47"><expr pos:start="339:40" pos:end="339:45"><name pos:start="339:40" pos:end="339:45">output</name></expr> ?</condition><then pos:start="339:49" pos:end="339:62"> <expr pos:start="339:49" pos:end="339:62"><operator pos:start="339:49" pos:end="339:49">&amp;</operator><name pos:start="339:50" pos:end="339:62">output_buffer</name></expr> </then><else pos:start="339:64" pos:end="339:69">: <expr pos:start="339:66" pos:end="339:69"><name pos:start="339:66" pos:end="339:69">NULL</name></expr></else></ternary></expr></argument>,

                                  <argument pos:start="341:35" pos:end="341:48"><expr pos:start="341:35" pos:end="341:48"><name pos:start="341:35" pos:end="341:48">current_buffer</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
