<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26446.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">mpsub_probe</name><parameter_list pos:start="1:23" pos:end="1:38">(<parameter pos:start="1:24" pos:end="1:37"><decl pos:start="1:24" pos:end="1:37"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:34">AVProbeData</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">ptr</name>     <init pos:start="5:25" pos:end="5:32">= <expr pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:32"><name pos:start="5:27" pos:end="5:27">p</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:32">buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:23">ptr_end</name> <init pos:start="7:25" pos:end="7:46">= <expr pos:start="7:27" pos:end="7:46"><name pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:27">p</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:32">buf</name></name> <operator pos:start="7:34" pos:end="7:34">+</operator> <name pos:start="7:36" pos:end="7:46"><name pos:start="7:36" pos:end="7:36">p</name><operator pos:start="7:37" pos:end="7:38">-&gt;</operator><name pos:start="7:39" pos:end="7:46">buf_size</name></name></expr></init></decl>;</decl_stmt>



    <while pos:start="11:5" pos:end="23:5">while <condition pos:start="11:11" pos:end="11:25">(<expr pos:start="11:12" pos:end="11:24"><name pos:start="11:12" pos:end="11:14">ptr</name> <operator pos:start="11:16" pos:end="11:16">&lt;</operator> <name pos:start="11:18" pos:end="11:24">ptr_end</name></expr>)</condition> <block pos:start="11:27" pos:end="23:5">{<block_content pos:start="13:9" pos:end="21:38">

        <if_stmt pos:start="13:9" pos:end="15:43"><if pos:start="13:9" pos:end="15:43">if <condition pos:start="13:12" pos:end="13:44">(<expr pos:start="13:13" pos:end="13:43"><operator pos:start="13:13" pos:end="13:13">!</operator><call pos:start="13:14" pos:end="13:43"><name pos:start="13:14" pos:end="13:19">memcmp</name><argument_list pos:start="13:20" pos:end="13:43">(<argument pos:start="13:21" pos:end="13:23"><expr pos:start="13:21" pos:end="13:23"><name pos:start="13:21" pos:end="13:23">ptr</name></expr></argument>, <argument pos:start="13:26" pos:end="13:38"><expr pos:start="13:26" pos:end="13:38"><literal type="string" pos:start="13:26" pos:end="13:38">"FORMAT=TIME"</literal></expr></argument>, <argument pos:start="13:41" pos:end="13:42"><expr pos:start="13:41" pos:end="13:42"><literal type="number" pos:start="13:41" pos:end="13:42">11</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:43"><block_content pos:start="15:13" pos:end="15:43">

            <return pos:start="15:13" pos:end="15:43">return <expr pos:start="15:20" pos:end="15:42"><name pos:start="15:20" pos:end="15:42">AVPROBE_SCORE_EXTENSION</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="19:47"><if pos:start="17:9" pos:end="19:47">if <condition pos:start="17:12" pos:end="17:39">(<expr pos:start="17:13" pos:end="17:38"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:38"><name pos:start="17:14" pos:end="17:19">memcmp</name><argument_list pos:start="17:20" pos:end="17:38">(<argument pos:start="17:21" pos:end="17:23"><expr pos:start="17:21" pos:end="17:23"><name pos:start="17:21" pos:end="17:23">ptr</name></expr></argument>, <argument pos:start="17:26" pos:end="17:34"><expr pos:start="17:26" pos:end="17:34"><literal type="string" pos:start="17:26" pos:end="17:34">"FORMAT="</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:37"><expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">7</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:47"><block_content pos:start="19:13" pos:end="19:47">

            <return pos:start="19:13" pos:end="19:47">return <expr pos:start="19:20" pos:end="19:46"><name pos:start="19:20" pos:end="19:42">AVPROBE_SCORE_EXTENSION</name> <operator pos:start="19:44" pos:end="19:44">/</operator> <literal type="number" pos:start="19:46" pos:end="19:46">3</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:38"><expr pos:start="21:9" pos:end="21:37"><name pos:start="21:9" pos:end="21:11">ptr</name> <operator pos:start="21:13" pos:end="21:14">+=</operator> <call pos:start="21:16" pos:end="21:33"><name pos:start="21:16" pos:end="21:22">strcspn</name><argument_list pos:start="21:23" pos:end="21:33">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">ptr</name></expr></argument>, <argument pos:start="21:29" pos:end="21:32"><expr pos:start="21:29" pos:end="21:32"><literal type="string" pos:start="21:29" pos:end="21:32">"\n"</literal></expr></argument>)</argument_list></call> <operator pos:start="21:35" pos:end="21:35">+</operator> <literal type="number" pos:start="21:37" pos:end="21:37">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="25:5" pos:end="25:13">return <expr pos:start="25:12" pos:end="25:12"><literal type="number" pos:start="25:12" pos:end="25:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
