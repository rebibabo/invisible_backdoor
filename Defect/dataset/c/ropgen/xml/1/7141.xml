<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7141.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">nprobe</name><parameter_list pos:start="1:18" pos:end="3:39">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><name pos:start="1:19" pos:end="1:33">AVFormatContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:45">uint8_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:57">enc_header</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:67"><decl pos:start="1:60" pos:end="1:67"><type pos:start="1:60" pos:end="1:67"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:67">size</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:38"><decl pos:start="3:19" pos:end="3:38"><type pos:start="3:19" pos:end="3:38"><specifier pos:start="3:19" pos:end="3:23">const</specifier> <name pos:start="3:25" pos:end="3:31">uint8_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:38">n_val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:14">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">OMAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">oc</name> <init pos:start="7:20" pos:end="7:33">= <expr pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">pos</name></decl>, <decl pos:start="9:19" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:24">taglen</name></decl>, <decl pos:start="9:27" pos:end="9:33"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:27" pos:end="9:33">datalen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:16">AVDES</name></name></type> <name pos:start="11:18" pos:end="11:23">av_des</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:30">(<expr pos:start="15:9" pos:end="15:29"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19">enc_header</name> <operator pos:start="15:21" pos:end="15:22">||</operator> <operator pos:start="15:24" pos:end="15:24">!</operator><name pos:start="15:25" pos:end="15:29">n_val</name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:7">pos</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:29">OMA_ENC_HEADER_SIZE</name> <operator pos:start="21:31" pos:end="21:31">+</operator> <name pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:34">oc</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:42">k_size</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:45">(<expr pos:start="23:9" pos:end="23:44"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:44"><name pos:start="23:10" pos:end="23:15">memcmp</name><argument_list pos:start="23:16" pos:end="23:44">(<argument pos:start="23:17" pos:end="23:32"><expr pos:start="23:17" pos:end="23:32"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:32"><name pos:start="23:18" pos:end="23:27">enc_header</name><index pos:start="23:28" pos:end="23:32">[<expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="23:35" pos:end="23:40"><expr pos:start="23:35" pos:end="23:40"><literal type="string" pos:start="23:35" pos:end="23:40">"EKB "</literal></expr></argument>, <argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><literal type="number" pos:start="23:43" pos:end="23:43">4</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <expr_stmt pos:start="25:9" pos:end="25:18"><expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:11">pos</name> <operator pos:start="25:13" pos:end="25:14">+=</operator> <literal type="number" pos:start="25:16" pos:end="25:17">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:53"><if pos:start="29:5" pos:end="31:53">if <condition pos:start="29:8" pos:end="29:45">(<expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:15">AV_RB32</name><argument_list pos:start="29:16" pos:end="29:33">(<argument pos:start="29:17" pos:end="29:32"><expr pos:start="29:17" pos:end="29:32"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:32"><name pos:start="29:18" pos:end="29:27">enc_header</name><index pos:start="29:28" pos:end="29:32">[<expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">pos</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="29:35" pos:end="29:36">!=</operator> <name pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:39">oc</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:44">rid</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:53"><block_content pos:start="31:9" pos:end="31:53">

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><call pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:52">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="31:33" pos:end="31:51"><expr pos:start="31:33" pos:end="31:51"><literal type="string" pos:start="31:33" pos:end="31:51">"Mismatching RID\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:45"><expr pos:start="35:5" pos:end="35:44"><name pos:start="35:5" pos:end="35:10">taglen</name>  <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:44"><name pos:start="35:15" pos:end="35:21">AV_RB32</name><argument_list pos:start="35:22" pos:end="35:44">(<argument pos:start="35:23" pos:end="35:43"><expr pos:start="35:23" pos:end="35:43"><operator pos:start="35:23" pos:end="35:23">&amp;</operator><name pos:start="35:24" pos:end="35:43"><name pos:start="35:24" pos:end="35:33">enc_header</name><index pos:start="35:34" pos:end="35:43">[<expr pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:37">pos</name> <operator pos:start="35:39" pos:end="35:39">+</operator> <literal type="number" pos:start="35:41" pos:end="35:42">32</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:11">datalen</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:44"><name pos:start="37:15" pos:end="37:21">AV_RB32</name><argument_list pos:start="37:22" pos:end="37:44">(<argument pos:start="37:23" pos:end="37:43"><expr pos:start="37:23" pos:end="37:43"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:43"><name pos:start="37:24" pos:end="37:33">enc_header</name><index pos:start="37:34" pos:end="37:43">[<expr pos:start="37:35" pos:end="37:42"><name pos:start="37:35" pos:end="37:37">pos</name> <operator pos:start="37:39" pos:end="37:39">+</operator> <literal type="number" pos:start="37:41" pos:end="37:42">36</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="37:46" pos:end="37:47">&gt;&gt;</operator> <literal type="number" pos:start="37:49" pos:end="37:49">4</literal></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="43:18"><if pos:start="41:5" pos:end="43:18">if <condition pos:start="41:8" pos:end="41:56">(<expr pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:14">taglen</name> <operator pos:start="41:16" pos:end="41:16">+</operator> <operator pos:start="41:18" pos:end="41:18">(</operator><operator pos:start="41:19" pos:end="41:19">(</operator><operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:28">uint64_t</name><operator pos:start="41:29" pos:end="41:29">)</operator><name pos:start="41:30" pos:end="41:36">datalen</name><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:40">&lt;&lt;</operator> <literal type="number" pos:start="41:42" pos:end="41:42">4</literal><operator pos:start="41:43" pos:end="41:43">)</operator> <operator pos:start="41:45" pos:end="41:45">+</operator> <literal type="number" pos:start="41:47" pos:end="41:48">44</literal> <operator pos:start="41:50" pos:end="41:50">&gt;</operator> <name pos:start="41:52" pos:end="41:55">size</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:18"><block_content pos:start="43:9" pos:end="43:18">

        <return pos:start="43:9" pos:end="43:18">return <expr pos:start="43:16" pos:end="43:17"><operator pos:start="43:16" pos:end="43:16">-</operator><literal type="number" pos:start="43:17" pos:end="43:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:23"><expr pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:7">pos</name> <operator pos:start="47:9" pos:end="47:10">+=</operator> <literal type="number" pos:start="47:12" pos:end="47:15">44</literal> <operator pos:start="47:15" pos:end="47:15">+</operator> <name pos:start="47:17" pos:end="47:22">taglen</name></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><call pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:15">av_des_init</name><argument_list pos:start="51:16" pos:end="51:39">(<argument pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:23"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:23">av_des</name></expr></argument>, <argument pos:start="51:26" pos:end="51:30"><expr pos:start="51:26" pos:end="51:30"><name pos:start="51:26" pos:end="51:30">n_val</name></expr></argument>, <argument pos:start="51:33" pos:end="51:35"><expr pos:start="51:33" pos:end="51:35"><literal type="number" pos:start="51:33" pos:end="51:35">192</literal></expr></argument>, <argument pos:start="51:38" pos:end="51:38"><expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="53:5" pos:end="65:5">while <condition pos:start="53:11" pos:end="53:25">(<expr pos:start="53:12" pos:end="53:24"><name pos:start="53:12" pos:end="53:18">datalen</name><operator pos:start="53:19" pos:end="53:20">--</operator> <operator pos:start="53:22" pos:end="53:22">&gt;</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>)</condition> <block pos:start="53:27" pos:end="65:5">{<block_content pos:start="55:9" pos:end="63:18">

        <expr_stmt pos:start="55:9" pos:end="55:71"><expr pos:start="55:9" pos:end="55:70"><call pos:start="55:9" pos:end="55:70"><name pos:start="55:9" pos:end="55:20">av_des_crypt</name><argument_list pos:start="55:21" pos:end="55:70">(<argument pos:start="55:22" pos:end="55:28"><expr pos:start="55:22" pos:end="55:28"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:28">av_des</name></expr></argument>, <argument pos:start="55:31" pos:end="55:39"><expr pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:39"><name pos:start="55:31" pos:end="55:32">oc</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:39">r_val</name></name></expr></argument>, <argument pos:start="55:42" pos:end="55:57"><expr pos:start="55:42" pos:end="55:57"><operator pos:start="55:42" pos:end="55:42">&amp;</operator><name pos:start="55:43" pos:end="55:57"><name pos:start="55:43" pos:end="55:52">enc_header</name><index pos:start="55:53" pos:end="55:57">[<expr pos:start="55:54" pos:end="55:56"><name pos:start="55:54" pos:end="55:56">pos</name></expr>]</index></name></expr></argument>, <argument pos:start="55:60" pos:end="55:60"><expr pos:start="55:60" pos:end="55:60"><literal type="number" pos:start="55:60" pos:end="55:60">2</literal></expr></argument>, <argument pos:start="55:63" pos:end="55:66"><expr pos:start="55:63" pos:end="55:66"><name pos:start="55:63" pos:end="55:66">NULL</name></expr></argument>, <argument pos:start="55:69" pos:end="55:69"><expr pos:start="55:69" pos:end="55:69"><literal type="number" pos:start="55:69" pos:end="55:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:12">kset</name><argument_list pos:start="57:13" pos:end="57:36">(<argument pos:start="57:14" pos:end="57:14"><expr pos:start="57:14" pos:end="57:14"><name pos:start="57:14" pos:end="57:14">s</name></expr></argument>, <argument pos:start="57:17" pos:end="57:25"><expr pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:25"><name pos:start="57:17" pos:end="57:18">oc</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:25">r_val</name></name></expr></argument>, <argument pos:start="57:28" pos:end="57:31"><expr pos:start="57:28" pos:end="57:31"><name pos:start="57:28" pos:end="57:31">NULL</name></expr></argument>, <argument pos:start="57:34" pos:end="57:35"><expr pos:start="57:34" pos:end="57:35"><literal type="number" pos:start="57:34" pos:end="57:35">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:21"><if pos:start="59:9" pos:end="61:21">if <condition pos:start="59:12" pos:end="59:46">(<expr pos:start="59:13" pos:end="59:45"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:45"><name pos:start="59:14" pos:end="59:19">rprobe</name><argument_list pos:start="59:20" pos:end="59:45">(<argument pos:start="59:21" pos:end="59:21"><expr pos:start="59:21" pos:end="59:21"><name pos:start="59:21" pos:end="59:21">s</name></expr></argument>, <argument pos:start="59:24" pos:end="59:33"><expr pos:start="59:24" pos:end="59:33"><name pos:start="59:24" pos:end="59:33">enc_header</name></expr></argument>, <argument pos:start="59:36" pos:end="59:44"><expr pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:37">oc</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:44">r_val</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:21"><block_content pos:start="61:13" pos:end="61:21">

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:18"><expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:11">pos</name> <operator pos:start="63:13" pos:end="63:14">+=</operator> <literal type="number" pos:start="63:16" pos:end="63:17">16</literal></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="69:5" pos:end="69:14">return <expr pos:start="69:12" pos:end="69:13"><operator pos:start="69:12" pos:end="69:12">-</operator><literal type="number" pos:start="69:13" pos:end="69:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
