<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17490.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">vmstate_subsection_load</name><parameter_list pos:start="1:35" pos:end="3:48">(<parameter pos:start="1:36" pos:end="1:46"><decl pos:start="1:36" pos:end="1:46"><type pos:start="1:36" pos:end="1:46"><name pos:start="1:36" pos:end="1:43">QEMUFile</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">f</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:78"><decl pos:start="1:49" pos:end="1:78"><type pos:start="1:49" pos:end="1:78"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:72">VMStateDescription</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:78">vmsd</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:47"><decl pos:start="3:36" pos:end="3:47"><type pos:start="3:36" pos:end="3:47"><name pos:start="3:36" pos:end="3:39">void</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:47">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:13">

    <while pos:start="7:5" pos:end="75:5">while <condition pos:start="7:11" pos:end="7:54">(<expr pos:start="7:12" pos:end="7:53"><call pos:start="7:12" pos:end="7:31"><name pos:start="7:12" pos:end="7:25">qemu_peek_byte</name><argument_list pos:start="7:26" pos:end="7:31">(<argument pos:start="7:27" pos:end="7:27"><expr pos:start="7:27" pos:end="7:27"><name pos:start="7:27" pos:end="7:27">f</name></expr></argument>, <argument pos:start="7:30" pos:end="7:30"><expr pos:start="7:30" pos:end="7:30"><literal type="number" pos:start="7:30" pos:end="7:30">0</literal></expr></argument>)</argument_list></call> <operator pos:start="7:33" pos:end="7:34">==</operator> <name pos:start="7:36" pos:end="7:53">QEMU_VM_SUBSECTION</name></expr>)</condition> <block pos:start="7:56" pos:end="75:5">{<block_content pos:start="9:9" pos:end="73:9">

        <decl_stmt pos:start="9:9" pos:end="9:24"><decl pos:start="9:9" pos:end="9:23"><type pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">char</name></type> <name pos:start="9:14" pos:end="9:23"><name pos:start="9:14" pos:end="9:18">idstr</name><index pos:start="9:19" pos:end="9:23">[<expr pos:start="9:20" pos:end="9:22"><literal type="number" pos:start="9:20" pos:end="9:22">256</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:16"><decl pos:start="11:9" pos:end="11:15"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">ret</name></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:38"><decl pos:start="13:9" pos:end="13:26"><type pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:15">uint8_t</name></type> <name pos:start="13:17" pos:end="13:26">version_id</name></decl>, <decl pos:start="13:29" pos:end="13:31"><type ref="prev" pos:start="13:9" pos:end="13:15"/><name pos:start="13:29" pos:end="13:31">len</name></decl>, <decl pos:start="13:34" pos:end="13:37"><type ref="prev" pos:start="13:9" pos:end="13:15"/><name pos:start="13:34" pos:end="13:37">size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:43"><decl pos:start="15:9" pos:end="15:42"><type pos:start="15:9" pos:end="15:34"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:32">VMStateDescription</name> <modifier pos:start="15:34" pos:end="15:34">*</modifier></type><name pos:start="15:35" pos:end="15:42">sub_vmsd</name></decl>;</decl_stmt>



        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:11">len</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:34"><name pos:start="19:15" pos:end="19:28">qemu_peek_byte</name><argument_list pos:start="19:29" pos:end="19:34">(<argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">f</name></expr></argument>, <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><literal type="number" pos:start="19:33" pos:end="19:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <call pos:start="21:19" pos:end="21:36"><name pos:start="21:19" pos:end="21:24">strlen</name><argument_list pos:start="21:25" pos:end="21:36">(<argument pos:start="21:26" pos:end="21:35"><expr pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:35"><name pos:start="21:26" pos:end="21:29">vmsd</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:35">name</name></name></expr></argument>)</argument_list></call> <operator pos:start="21:38" pos:end="21:38">+</operator> <literal type="number" pos:start="21:40" pos:end="21:40">1</literal></expr>)</condition> <block pos:start="21:43" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:21">

            <comment type="block" pos:start="23:13" pos:end="23:60">/* subsection name has be be "section_name/a" */</comment>

            <return pos:start="25:13" pos:end="25:21">return <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:61"><expr pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:60"><name pos:start="29:16" pos:end="29:31">qemu_peek_buffer</name><argument_list pos:start="29:32" pos:end="29:60">(<argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><name pos:start="29:33" pos:end="29:33">f</name></expr></argument>, <argument pos:start="29:36" pos:end="29:51"><expr pos:start="29:36" pos:end="29:51"><operator pos:start="29:36" pos:end="29:36">(</operator><name pos:start="29:37" pos:end="29:43">uint8_t</name> <operator pos:start="29:45" pos:end="29:45">*</operator><operator pos:start="29:46" pos:end="29:46">)</operator><name pos:start="29:47" pos:end="29:51">idstr</name></expr></argument>, <argument pos:start="29:54" pos:end="29:56"><expr pos:start="29:54" pos:end="29:56"><name pos:start="29:54" pos:end="29:56">len</name></expr></argument>, <argument pos:start="29:59" pos:end="29:59"><expr pos:start="29:59" pos:end="29:59"><literal type="number" pos:start="29:59" pos:end="29:59">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:24">(<expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:16">size</name> <operator pos:start="31:18" pos:end="31:19">!=</operator> <name pos:start="31:21" pos:end="31:23">len</name></expr>)</condition> <block pos:start="31:26" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:13">idstr</name><index pos:start="37:14" pos:end="37:19">[<expr pos:start="37:15" pos:end="37:18"><name pos:start="37:15" pos:end="37:18">size</name></expr>]</index></name> <operator pos:start="37:21" pos:end="37:21">=</operator> <literal type="number" pos:start="37:23" pos:end="37:23">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:64">(<expr pos:start="41:13" pos:end="41:63"><call pos:start="41:13" pos:end="41:58"><name pos:start="41:13" pos:end="41:19">strncmp</name><argument_list pos:start="41:20" pos:end="41:58">(<argument pos:start="41:21" pos:end="41:30"><expr pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:30"><name pos:start="41:21" pos:end="41:24">vmsd</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:30">name</name></name></expr></argument>, <argument pos:start="41:33" pos:end="41:37"><expr pos:start="41:33" pos:end="41:37"><name pos:start="41:33" pos:end="41:37">idstr</name></expr></argument>, <argument pos:start="41:40" pos:end="41:57"><expr pos:start="41:40" pos:end="41:57"><call pos:start="41:40" pos:end="41:57"><name pos:start="41:40" pos:end="41:45">strlen</name><argument_list pos:start="41:46" pos:end="41:57">(<argument pos:start="41:47" pos:end="41:56"><expr pos:start="41:47" pos:end="41:56"><name pos:start="41:47" pos:end="41:56"><name pos:start="41:47" pos:end="41:50">vmsd</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:56">name</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="41:60" pos:end="41:61">!=</operator> <literal type="number" pos:start="41:63" pos:end="41:63">0</literal></expr>)</condition> <block pos:start="41:66" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:21">

            <comment type="block" pos:start="43:13" pos:end="43:55">/* it don't have a valid subsection name */</comment>

            <return pos:start="45:13" pos:end="45:21">return <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:68"><expr pos:start="49:9" pos:end="49:67"><name pos:start="49:9" pos:end="49:16">sub_vmsd</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <call pos:start="49:20" pos:end="49:67"><name pos:start="49:20" pos:end="49:41">vmstate_get_subsection</name><argument_list pos:start="49:42" pos:end="49:67">(<argument pos:start="49:43" pos:end="49:59"><expr pos:start="49:43" pos:end="49:59"><name pos:start="49:43" pos:end="49:59"><name pos:start="49:43" pos:end="49:46">vmsd</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:59">subsections</name></name></expr></argument>, <argument pos:start="49:62" pos:end="49:66"><expr pos:start="49:62" pos:end="49:66"><name pos:start="49:62" pos:end="49:66">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:20">sub_vmsd</name> <operator pos:start="51:22" pos:end="51:23">==</operator> <name pos:start="51:25" pos:end="51:28">NULL</name></expr>)</condition> <block pos:start="51:31" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:27">

            <return pos:start="53:13" pos:end="53:27">return <expr pos:start="53:20" pos:end="53:26"><operator pos:start="53:20" pos:end="53:20">-</operator><name pos:start="53:21" pos:end="53:26">ENOENT</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><call pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:22">qemu_file_skip</name><argument_list pos:start="57:23" pos:end="57:28">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">f</name></expr></argument>, <argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:31" pos:end="57:46">/* subsection */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:29"><expr pos:start="59:9" pos:end="59:28"><call pos:start="59:9" pos:end="59:28"><name pos:start="59:9" pos:end="59:22">qemu_file_skip</name><argument_list pos:start="59:23" pos:end="59:28">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">f</name></expr></argument>, <argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><literal type="number" pos:start="59:27" pos:end="59:27">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:31" pos:end="59:39">/* len */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:22">qemu_file_skip</name><argument_list pos:start="61:23" pos:end="61:30">(<argument pos:start="61:24" pos:end="61:24"><expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">f</name></expr></argument>, <argument pos:start="61:27" pos:end="61:29"><expr pos:start="61:27" pos:end="61:29"><name pos:start="61:27" pos:end="61:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:33" pos:end="61:43">/* idstr */</comment>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><name pos:start="63:9" pos:end="63:18">version_id</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:34">qemu_get_be32</name><argument_list pos:start="63:35" pos:end="63:37">(<argument pos:start="63:36" pos:end="63:36"><expr pos:start="63:36" pos:end="63:36"><name pos:start="63:36" pos:end="63:36">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:66"><expr pos:start="67:9" pos:end="67:65"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:65"><name pos:start="67:15" pos:end="67:32">vmstate_load_state</name><argument_list pos:start="67:33" pos:end="67:65">(<argument pos:start="67:34" pos:end="67:34"><expr pos:start="67:34" pos:end="67:34"><name pos:start="67:34" pos:end="67:34">f</name></expr></argument>, <argument pos:start="67:37" pos:end="67:44"><expr pos:start="67:37" pos:end="67:44"><name pos:start="67:37" pos:end="67:44">sub_vmsd</name></expr></argument>, <argument pos:start="67:47" pos:end="67:52"><expr pos:start="67:47" pos:end="67:52"><name pos:start="67:47" pos:end="67:52">opaque</name></expr></argument>, <argument pos:start="67:55" pos:end="67:64"><expr pos:start="67:55" pos:end="67:64"><name pos:start="67:55" pos:end="67:64">version_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="73:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:16">(<expr pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">ret</name></expr>)</condition> <block pos:start="69:18" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="77:5" pos:end="77:13">return <expr pos:start="77:12" pos:end="77:12"><literal type="number" pos:start="77:12" pos:end="77:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
