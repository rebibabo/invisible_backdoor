<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6890.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ehci_process_itd</name><parameter_list pos:start="1:28" pos:end="5:42">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:37">EHCIState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">ehci</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:35">EHCIitd</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">itd</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:41"><decl pos:start="5:29" pos:end="5:41"><type pos:start="5:29" pos:end="5:41"><name pos:start="5:29" pos:end="5:36">uint32_t</name></type> <name pos:start="5:38" pos:end="5:41">addr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="203:1">{<block_content pos:start="9:5" pos:end="201:13">

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">USBDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">USBEndpoint</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">ep</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:14">i</name></decl>, <decl pos:start="13:17" pos:end="13:19"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:17" pos:end="13:19">len</name></decl>, <decl pos:start="13:22" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:22" pos:end="13:24">pid</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:27" pos:end="13:29">dir</name></decl>, <decl pos:start="13:32" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:32" pos:end="13:38">devaddr</name></decl>, <decl pos:start="13:41" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:41" pos:end="13:44">endp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:44"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">pg</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:20">off</name></decl>, <decl pos:start="15:23" pos:end="15:26"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:23" pos:end="15:26">ptr1</name></decl>, <decl pos:start="15:29" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:29" pos:end="15:32">ptr2</name></decl>, <decl pos:start="15:35" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:35" pos:end="15:37">max</name></decl>, <decl pos:start="15:40" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:40" pos:end="15:43">mult</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:8">ehci</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:31">periodic_sched_active</name></name> <operator pos:start="19:33" pos:end="19:33">=</operator> <name pos:start="19:35" pos:end="19:49">PERIODIC_ACTIVE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:49"><expr pos:start="23:5" pos:end="23:48"><name pos:start="23:5" pos:end="23:7">dir</name> <operator pos:start="23:9" pos:end="23:9">=</operator><operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:24"><name pos:start="23:11" pos:end="23:13">itd</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">bufptr</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">1</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">&amp;</operator> <name pos:start="23:28" pos:end="23:47">ITD_BUFPTR_DIRECTION</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:11">devaddr</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:59"><name pos:start="25:15" pos:end="25:23">get_field</name><argument_list pos:start="25:24" pos:end="25:59">(<argument pos:start="25:25" pos:end="25:38"><expr pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:38"><name pos:start="25:25" pos:end="25:27">itd</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:35">bufptr</name><index pos:start="25:36" pos:end="25:38">[<expr pos:start="25:37" pos:end="25:37"><literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:41" pos:end="25:58"><expr pos:start="25:41" pos:end="25:58"><name pos:start="25:41" pos:end="25:58">ITD_BUFPTR_DEVADDR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:8">endp</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:51"><name pos:start="27:12" pos:end="27:20">get_field</name><argument_list pos:start="27:21" pos:end="27:51">(<argument pos:start="27:22" pos:end="27:35"><expr pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:35"><name pos:start="27:22" pos:end="27:24">itd</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:32">bufptr</name><index pos:start="27:33" pos:end="27:35">[<expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:38" pos:end="27:50"><expr pos:start="27:38" pos:end="27:50"><name pos:start="27:38" pos:end="27:50">ITD_BUFPTR_EP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:7">max</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:54"><name pos:start="29:11" pos:end="29:19">get_field</name><argument_list pos:start="29:20" pos:end="29:54">(<argument pos:start="29:21" pos:end="29:34"><expr pos:start="29:21" pos:end="29:34"><name pos:start="29:21" pos:end="29:34"><name pos:start="29:21" pos:end="29:23">itd</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:31">bufptr</name><index pos:start="29:32" pos:end="29:34">[<expr pos:start="29:33" pos:end="29:33"><literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:37" pos:end="29:53"><expr pos:start="29:37" pos:end="29:53"><name pos:start="29:37" pos:end="29:53">ITD_BUFPTR_MAXPKT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:8">mult</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:53"><name pos:start="31:12" pos:end="31:20">get_field</name><argument_list pos:start="31:21" pos:end="31:53">(<argument pos:start="31:22" pos:end="31:35"><expr pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:24">itd</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:32">bufptr</name><index pos:start="31:33" pos:end="31:35">[<expr pos:start="31:34" pos:end="31:34"><literal type="number" pos:start="31:34" pos:end="31:34">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="31:38" pos:end="31:52"><expr pos:start="31:38" pos:end="31:52"><name pos:start="31:38" pos:end="31:52">ITD_BUFPTR_MULT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="35:5" pos:end="199:5">for<control pos:start="35:8" pos:end="35:26">(<init pos:start="35:9" pos:end="35:14"><expr pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">i</name> <operator pos:start="35:11" pos:end="35:11">=</operator> <literal type="number" pos:start="35:13" pos:end="35:13">0</literal></expr>;</init> <condition pos:start="35:16" pos:end="35:21"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <literal type="number" pos:start="35:20" pos:end="35:20">8</literal></expr>;</condition> <incr pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:23">i</name><operator pos:start="35:24" pos:end="35:25">++</operator></expr></incr>)</control> <block pos:start="35:28" pos:end="199:5">{<block_content pos:start="37:9" pos:end="197:9">

        <if_stmt pos:start="37:9" pos:end="197:9"><if pos:start="37:9" pos:end="197:9">if <condition pos:start="37:12" pos:end="37:47">(<expr pos:start="37:13" pos:end="37:46"><name pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:15">itd</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:25">transact</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">i</name></expr>]</index></name> <operator pos:start="37:30" pos:end="37:30">&amp;</operator> <name pos:start="37:32" pos:end="37:46">ITD_XACT_ACTIVE</name></expr>)</condition> <block pos:start="37:49" pos:end="197:9">{<block_content pos:start="39:13" pos:end="195:49">

            <expr_stmt pos:start="39:13" pos:end="39:63"><expr pos:start="39:13" pos:end="39:62"><name pos:start="39:13" pos:end="39:14">pg</name>   <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:62"><name pos:start="39:20" pos:end="39:28">get_field</name><argument_list pos:start="39:29" pos:end="39:62">(<argument pos:start="39:30" pos:end="39:45"><expr pos:start="39:30" pos:end="39:45"><name pos:start="39:30" pos:end="39:45"><name pos:start="39:30" pos:end="39:32">itd</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:42">transact</name><index pos:start="39:43" pos:end="39:45">[<expr pos:start="39:44" pos:end="39:44"><name pos:start="39:44" pos:end="39:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:48" pos:end="39:61"><expr pos:start="39:48" pos:end="39:61"><name pos:start="39:48" pos:end="39:61">ITD_XACT_PGSEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:59"><expr pos:start="41:13" pos:end="41:58"><name pos:start="41:13" pos:end="41:15">off</name>  <operator pos:start="41:18" pos:end="41:18">=</operator> <name pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:22">itd</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:32">transact</name><index pos:start="41:33" pos:end="41:35">[<expr pos:start="41:34" pos:end="41:34"><name pos:start="41:34" pos:end="41:34">i</name></expr>]</index></name> <operator pos:start="41:37" pos:end="41:37">&amp;</operator> <name pos:start="41:39" pos:end="41:58">ITD_XACT_OFFSET_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:64"><expr pos:start="43:13" pos:end="43:63"><name pos:start="43:13" pos:end="43:15">len</name>  <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="43:63"><name pos:start="43:20" pos:end="43:28">get_field</name><argument_list pos:start="43:29" pos:end="43:63">(<argument pos:start="43:30" pos:end="43:45"><expr pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:45"><name pos:start="43:30" pos:end="43:32">itd</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:42">transact</name><index pos:start="43:43" pos:end="43:45">[<expr pos:start="43:44" pos:end="43:44"><name pos:start="43:44" pos:end="43:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="43:48" pos:end="43:62"><expr pos:start="43:48" pos:end="43:62"><name pos:start="43:48" pos:end="43:62">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="47:13" pos:end="51:13"><if pos:start="47:13" pos:end="51:13">if <condition pos:start="47:16" pos:end="47:33">(<expr pos:start="47:17" pos:end="47:32"><name pos:start="47:17" pos:end="47:19">len</name> <operator pos:start="47:21" pos:end="47:21">&gt;</operator> <name pos:start="47:23" pos:end="47:25">max</name> <operator pos:start="47:27" pos:end="47:27">*</operator> <name pos:start="47:29" pos:end="47:32">mult</name></expr>)</condition> <block pos:start="47:35" pos:end="51:13">{<block_content pos:start="49:17" pos:end="49:33">

                <expr_stmt pos:start="49:17" pos:end="49:33"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:19">len</name> <operator pos:start="49:21" pos:end="49:21">=</operator> <name pos:start="49:23" pos:end="49:25">max</name> <operator pos:start="49:27" pos:end="49:27">*</operator> <name pos:start="49:29" pos:end="49:32">mult</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="53:13" pos:end="57:13"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:42">(<expr pos:start="53:17" pos:end="53:41"><name pos:start="53:17" pos:end="53:19">len</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <name pos:start="53:23" pos:end="53:31">BUFF_SIZE</name> <operator pos:start="53:33" pos:end="53:34">||</operator> <name pos:start="53:36" pos:end="53:37">pg</name> <operator pos:start="53:39" pos:end="53:39">&gt;</operator> <literal type="number" pos:start="53:41" pos:end="53:41">6</literal></expr>)</condition> <block pos:start="53:44" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:26">

                <return pos:start="55:17" pos:end="55:26">return <expr pos:start="55:24" pos:end="55:25"><operator pos:start="55:24" pos:end="55:24">-</operator><literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="61:13" pos:end="61:55"><expr pos:start="61:13" pos:end="61:54"><name pos:start="61:13" pos:end="61:16">ptr1</name> <operator pos:start="61:18" pos:end="61:18">=</operator> <operator pos:start="61:20" pos:end="61:20">(</operator><name pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:23">itd</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:31">bufptr</name><index pos:start="61:32" pos:end="61:35">[<expr pos:start="61:33" pos:end="61:34"><name pos:start="61:33" pos:end="61:34">pg</name></expr>]</index></name> <operator pos:start="61:37" pos:end="61:37">&amp;</operator> <name pos:start="61:39" pos:end="61:53">ITD_BUFPTR_MASK</name><operator pos:start="61:54" pos:end="61:54">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:69"><expr pos:start="63:13" pos:end="63:68"><call pos:start="63:13" pos:end="63:68"><name pos:start="63:13" pos:end="63:28">qemu_sglist_init</name><argument_list pos:start="63:29" pos:end="63:68">(<argument pos:start="63:30" pos:end="63:40"><expr pos:start="63:30" pos:end="63:40"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:40"><name pos:start="63:31" pos:end="63:34">ehci</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:40">isgl</name></name></expr></argument>, <argument pos:start="63:43" pos:end="63:54"><expr pos:start="63:43" pos:end="63:54"><name pos:start="63:43" pos:end="63:54"><name pos:start="63:43" pos:end="63:46">ehci</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:54">device</name></name></expr></argument>, <argument pos:start="63:57" pos:end="63:57"><expr pos:start="63:57" pos:end="63:57"><literal type="number" pos:start="63:57" pos:end="63:57">2</literal></expr></argument>, <argument pos:start="63:60" pos:end="63:67"><expr pos:start="63:60" pos:end="63:67"><name pos:start="63:60" pos:end="63:67"><name pos:start="63:60" pos:end="63:63">ehci</name><operator pos:start="63:64" pos:end="63:65">-&gt;</operator><name pos:start="63:66" pos:end="63:67">as</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="90:13"><if pos:start="65:13" pos:end="86:13">if <condition pos:start="65:16" pos:end="65:33">(<expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:19">off</name> <operator pos:start="65:21" pos:end="65:21">+</operator> <name pos:start="65:23" pos:end="65:25">len</name> <operator pos:start="65:27" pos:end="65:27">&gt;</operator> <literal type="number" pos:start="65:29" pos:end="65:32">4096</literal></expr>)</condition> <block pos:start="65:35" pos:end="86:13">{<block_content pos:start="69:17" pos:end="84:57">

                <comment type="block" pos:start="67:17" pos:end="67:50">/* transfer crosses page border */</comment>

                <if_stmt pos:start="69:17" pos:end="74:17"><if pos:start="69:17" pos:end="74:17">if <condition pos:start="69:20" pos:end="69:28">(<expr pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:22">pg</name> <operator pos:start="69:24" pos:end="69:25">==</operator> <literal type="number" pos:start="69:27" pos:end="69:27">6</literal></expr>)</condition> <block pos:start="69:30" pos:end="74:17">{<block_content pos:start="72:21" pos:end="72:30">


                    <return pos:start="72:21" pos:end="72:30">return <expr pos:start="72:28" pos:end="72:29"><operator pos:start="72:28" pos:end="72:28">-</operator><literal type="number" pos:start="72:29" pos:end="72:29">1</literal></expr>;</return>  <comment type="block" pos:start="72:33" pos:end="72:55">/* avoid page pg + 1 */</comment>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="76:17" pos:end="76:63"><expr pos:start="76:17" pos:end="76:62"><name pos:start="76:17" pos:end="76:20">ptr2</name> <operator pos:start="76:22" pos:end="76:22">=</operator> <operator pos:start="76:24" pos:end="76:24">(</operator><name pos:start="76:25" pos:end="76:43"><name pos:start="76:25" pos:end="76:27">itd</name><operator pos:start="76:28" pos:end="76:29">-&gt;</operator><name pos:start="76:30" pos:end="76:35">bufptr</name><index pos:start="76:36" pos:end="76:43">[<expr pos:start="76:37" pos:end="76:42"><name pos:start="76:37" pos:end="76:38">pg</name> <operator pos:start="76:40" pos:end="76:40">+</operator> <literal type="number" pos:start="76:42" pos:end="76:42">1</literal></expr>]</index></name> <operator pos:start="76:45" pos:end="76:45">&amp;</operator> <name pos:start="76:47" pos:end="76:61">ITD_BUFPTR_MASK</name><operator pos:start="76:62" pos:end="76:62">)</operator></expr>;</expr_stmt>

                <decl_stmt pos:start="78:17" pos:end="78:49"><decl pos:start="78:17" pos:end="78:48"><type pos:start="78:17" pos:end="78:24"><name pos:start="78:17" pos:end="78:24">uint32_t</name></type> <name pos:start="78:26" pos:end="78:29">len2</name> <init pos:start="78:31" pos:end="78:48">= <expr pos:start="78:33" pos:end="78:48"><name pos:start="78:33" pos:end="78:35">off</name> <operator pos:start="78:37" pos:end="78:37">+</operator> <name pos:start="78:39" pos:end="78:41">len</name> <operator pos:start="78:43" pos:end="78:43">-</operator> <literal type="number" pos:start="78:45" pos:end="78:48">4096</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="80:17" pos:end="80:43"><decl pos:start="80:17" pos:end="80:42"><type pos:start="80:17" pos:end="80:24"><name pos:start="80:17" pos:end="80:24">uint32_t</name></type> <name pos:start="80:26" pos:end="80:29">len1</name> <init pos:start="80:31" pos:end="80:42">= <expr pos:start="80:33" pos:end="80:42"><name pos:start="80:33" pos:end="80:35">len</name> <operator pos:start="80:37" pos:end="80:37">-</operator> <name pos:start="80:39" pos:end="80:42">len2</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="82:17" pos:end="82:63"><expr pos:start="82:17" pos:end="82:62"><call pos:start="82:17" pos:end="82:62"><name pos:start="82:17" pos:end="82:31">qemu_sglist_add</name><argument_list pos:start="82:32" pos:end="82:62">(<argument pos:start="82:33" pos:end="82:43"><expr pos:start="82:33" pos:end="82:43"><operator pos:start="82:33" pos:end="82:33">&amp;</operator><name pos:start="82:34" pos:end="82:43"><name pos:start="82:34" pos:end="82:37">ehci</name><operator pos:start="82:38" pos:end="82:39">-&gt;</operator><name pos:start="82:40" pos:end="82:43">isgl</name></name></expr></argument>, <argument pos:start="82:46" pos:end="82:55"><expr pos:start="82:46" pos:end="82:55"><name pos:start="82:46" pos:end="82:49">ptr1</name> <operator pos:start="82:51" pos:end="82:51">+</operator> <name pos:start="82:53" pos:end="82:55">off</name></expr></argument>, <argument pos:start="82:58" pos:end="82:61"><expr pos:start="82:58" pos:end="82:61"><name pos:start="82:58" pos:end="82:61">len1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="84:17" pos:end="84:57"><expr pos:start="84:17" pos:end="84:56"><call pos:start="84:17" pos:end="84:56"><name pos:start="84:17" pos:end="84:31">qemu_sglist_add</name><argument_list pos:start="84:32" pos:end="84:56">(<argument pos:start="84:33" pos:end="84:43"><expr pos:start="84:33" pos:end="84:43"><operator pos:start="84:33" pos:end="84:33">&amp;</operator><name pos:start="84:34" pos:end="84:43"><name pos:start="84:34" pos:end="84:37">ehci</name><operator pos:start="84:38" pos:end="84:39">-&gt;</operator><name pos:start="84:40" pos:end="84:43">isgl</name></name></expr></argument>, <argument pos:start="84:46" pos:end="84:49"><expr pos:start="84:46" pos:end="84:49"><name pos:start="84:46" pos:end="84:49">ptr2</name></expr></argument>, <argument pos:start="84:52" pos:end="84:55"><expr pos:start="84:52" pos:end="84:55"><name pos:start="84:52" pos:end="84:55">len2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="86:15" pos:end="90:13">else <block pos:start="86:20" pos:end="90:13">{<block_content pos:start="88:17" pos:end="88:62">

                <expr_stmt pos:start="88:17" pos:end="88:62"><expr pos:start="88:17" pos:end="88:61"><call pos:start="88:17" pos:end="88:61"><name pos:start="88:17" pos:end="88:31">qemu_sglist_add</name><argument_list pos:start="88:32" pos:end="88:61">(<argument pos:start="88:33" pos:end="88:43"><expr pos:start="88:33" pos:end="88:43"><operator pos:start="88:33" pos:end="88:33">&amp;</operator><name pos:start="88:34" pos:end="88:43"><name pos:start="88:34" pos:end="88:37">ehci</name><operator pos:start="88:38" pos:end="88:39">-&gt;</operator><name pos:start="88:40" pos:end="88:43">isgl</name></name></expr></argument>, <argument pos:start="88:46" pos:end="88:55"><expr pos:start="88:46" pos:end="88:55"><name pos:start="88:46" pos:end="88:49">ptr1</name> <operator pos:start="88:51" pos:end="88:51">+</operator> <name pos:start="88:53" pos:end="88:55">off</name></expr></argument>, <argument pos:start="88:58" pos:end="88:60"><expr pos:start="88:58" pos:end="88:60"><name pos:start="88:58" pos:end="88:60">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="94:13" pos:end="94:53"><expr pos:start="94:13" pos:end="94:52"><name pos:start="94:13" pos:end="94:15">pid</name> <operator pos:start="94:17" pos:end="94:17">=</operator> <ternary pos:start="94:19" pos:end="94:52"><condition pos:start="94:19" pos:end="94:23"><expr pos:start="94:19" pos:end="94:21"><name pos:start="94:19" pos:end="94:21">dir</name></expr> ?</condition><then pos:start="94:25" pos:end="94:36"> <expr pos:start="94:25" pos:end="94:36"><name pos:start="94:25" pos:end="94:36">USB_TOKEN_IN</name></expr> </then><else pos:start="94:38" pos:end="94:52">: <expr pos:start="94:40" pos:end="94:52"><name pos:start="94:40" pos:end="94:52">USB_TOKEN_OUT</name></expr></else></ternary></expr>;</expr_stmt>



            <expr_stmt pos:start="98:13" pos:end="98:50"><expr pos:start="98:13" pos:end="98:49"><name pos:start="98:13" pos:end="98:15">dev</name> <operator pos:start="98:17" pos:end="98:17">=</operator> <call pos:start="98:19" pos:end="98:49"><name pos:start="98:19" pos:end="98:34">ehci_find_device</name><argument_list pos:start="98:35" pos:end="98:49">(<argument pos:start="98:36" pos:end="98:39"><expr pos:start="98:36" pos:end="98:39"><name pos:start="98:36" pos:end="98:39">ehci</name></expr></argument>, <argument pos:start="98:42" pos:end="98:48"><expr pos:start="98:42" pos:end="98:48"><name pos:start="98:42" pos:end="98:48">devaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="100:13" pos:end="100:44"><expr pos:start="100:13" pos:end="100:43"><name pos:start="100:13" pos:end="100:14">ep</name> <operator pos:start="100:16" pos:end="100:16">=</operator> <call pos:start="100:18" pos:end="100:43"><name pos:start="100:18" pos:end="100:27">usb_ep_get</name><argument_list pos:start="100:28" pos:end="100:43">(<argument pos:start="100:29" pos:end="100:31"><expr pos:start="100:29" pos:end="100:31"><name pos:start="100:29" pos:end="100:31">dev</name></expr></argument>, <argument pos:start="100:34" pos:end="100:36"><expr pos:start="100:34" pos:end="100:36"><name pos:start="100:34" pos:end="100:36">pid</name></expr></argument>, <argument pos:start="100:39" pos:end="100:42"><expr pos:start="100:39" pos:end="100:42"><name pos:start="100:39" pos:end="100:42">endp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="102:13" pos:end="122:13"><if pos:start="102:13" pos:end="114:13">if <condition pos:start="102:16" pos:end="102:57">(<expr pos:start="102:17" pos:end="102:56"><name pos:start="102:17" pos:end="102:18">ep</name> <operator pos:start="102:20" pos:end="102:21">&amp;&amp;</operator> <name pos:start="102:23" pos:end="102:30"><name pos:start="102:23" pos:end="102:24">ep</name><operator pos:start="102:25" pos:end="102:26">-&gt;</operator><name pos:start="102:27" pos:end="102:30">type</name></name> <operator pos:start="102:32" pos:end="102:33">==</operator> <name pos:start="102:35" pos:end="102:56">USB_ENDPOINT_XFER_ISOC</name></expr>)</condition> <block pos:start="102:59" pos:end="114:13">{<block_content pos:start="104:17" pos:end="112:62">

                <expr_stmt pos:start="104:17" pos:end="106:73"><expr pos:start="104:17" pos:end="106:72"><call pos:start="104:17" pos:end="106:72"><name pos:start="104:17" pos:end="104:32">usb_packet_setup</name><argument_list pos:start="104:33" pos:end="106:72">(<argument pos:start="104:34" pos:end="104:47"><expr pos:start="104:34" pos:end="104:47"><operator pos:start="104:34" pos:end="104:34">&amp;</operator><name pos:start="104:35" pos:end="104:47"><name pos:start="104:35" pos:end="104:38">ehci</name><operator pos:start="104:39" pos:end="104:40">-&gt;</operator><name pos:start="104:41" pos:end="104:47">ipacket</name></name></expr></argument>, <argument pos:start="104:50" pos:end="104:52"><expr pos:start="104:50" pos:end="104:52"><name pos:start="104:50" pos:end="104:52">pid</name></expr></argument>, <argument pos:start="104:55" pos:end="104:56"><expr pos:start="104:55" pos:end="104:56"><name pos:start="104:55" pos:end="104:56">ep</name></expr></argument>, <argument pos:start="104:59" pos:end="104:59"><expr pos:start="104:59" pos:end="104:59"><literal type="number" pos:start="104:59" pos:end="104:59">0</literal></expr></argument>, <argument pos:start="104:62" pos:end="104:65"><expr pos:start="104:62" pos:end="104:65"><name pos:start="104:62" pos:end="104:65">addr</name></expr></argument>, <argument pos:start="104:68" pos:end="104:72"><expr pos:start="104:68" pos:end="104:72"><name pos:start="104:68" pos:end="104:72">false</name></expr></argument>,

                                 <argument pos:start="106:34" pos:end="106:71"><expr pos:start="106:34" pos:end="106:71"><operator pos:start="106:34" pos:end="106:34">(</operator><name pos:start="106:35" pos:end="106:50"><name pos:start="106:35" pos:end="106:37">itd</name><operator pos:start="106:38" pos:end="106:39">-&gt;</operator><name pos:start="106:40" pos:end="106:47">transact</name><index pos:start="106:48" pos:end="106:50">[<expr pos:start="106:49" pos:end="106:49"><name pos:start="106:49" pos:end="106:49">i</name></expr>]</index></name> <operator pos:start="106:52" pos:end="106:52">&amp;</operator> <name pos:start="106:54" pos:end="106:65">ITD_XACT_IOC</name><operator pos:start="106:66" pos:end="106:66">)</operator> <operator pos:start="106:68" pos:end="106:69">!=</operator> <literal type="number" pos:start="106:71" pos:end="106:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="108:17" pos:end="108:60"><expr pos:start="108:17" pos:end="108:59"><call pos:start="108:17" pos:end="108:59"><name pos:start="108:17" pos:end="108:30">usb_packet_map</name><argument_list pos:start="108:31" pos:end="108:59">(<argument pos:start="108:32" pos:end="108:45"><expr pos:start="108:32" pos:end="108:45"><operator pos:start="108:32" pos:end="108:32">&amp;</operator><name pos:start="108:33" pos:end="108:45"><name pos:start="108:33" pos:end="108:36">ehci</name><operator pos:start="108:37" pos:end="108:38">-&gt;</operator><name pos:start="108:39" pos:end="108:45">ipacket</name></name></expr></argument>, <argument pos:start="108:48" pos:end="108:58"><expr pos:start="108:48" pos:end="108:58"><operator pos:start="108:48" pos:end="108:48">&amp;</operator><name pos:start="108:49" pos:end="108:58"><name pos:start="108:49" pos:end="108:52">ehci</name><operator pos:start="108:53" pos:end="108:54">-&gt;</operator><name pos:start="108:55" pos:end="108:58">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="110:17" pos:end="110:55"><expr pos:start="110:17" pos:end="110:54"><call pos:start="110:17" pos:end="110:54"><name pos:start="110:17" pos:end="110:33">usb_handle_packet</name><argument_list pos:start="110:34" pos:end="110:54">(<argument pos:start="110:35" pos:end="110:37"><expr pos:start="110:35" pos:end="110:37"><name pos:start="110:35" pos:end="110:37">dev</name></expr></argument>, <argument pos:start="110:40" pos:end="110:53"><expr pos:start="110:40" pos:end="110:53"><operator pos:start="110:40" pos:end="110:40">&amp;</operator><name pos:start="110:41" pos:end="110:53"><name pos:start="110:41" pos:end="110:44">ehci</name><operator pos:start="110:45" pos:end="110:46">-&gt;</operator><name pos:start="110:47" pos:end="110:53">ipacket</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="112:17" pos:end="112:62"><expr pos:start="112:17" pos:end="112:61"><call pos:start="112:17" pos:end="112:61"><name pos:start="112:17" pos:end="112:32">usb_packet_unmap</name><argument_list pos:start="112:33" pos:end="112:61">(<argument pos:start="112:34" pos:end="112:47"><expr pos:start="112:34" pos:end="112:47"><operator pos:start="112:34" pos:end="112:34">&amp;</operator><name pos:start="112:35" pos:end="112:47"><name pos:start="112:35" pos:end="112:38">ehci</name><operator pos:start="112:39" pos:end="112:40">-&gt;</operator><name pos:start="112:41" pos:end="112:47">ipacket</name></name></expr></argument>, <argument pos:start="112:50" pos:end="112:60"><expr pos:start="112:50" pos:end="112:60"><operator pos:start="112:50" pos:end="112:50">&amp;</operator><name pos:start="112:51" pos:end="112:60"><name pos:start="112:51" pos:end="112:54">ehci</name><operator pos:start="112:55" pos:end="112:56">-&gt;</operator><name pos:start="112:57" pos:end="112:60">isgl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="114:15" pos:end="122:13">else <block pos:start="114:20" pos:end="122:13">{<block_content pos:start="116:17" pos:end="120:48">

                <expr_stmt pos:start="116:17" pos:end="116:71"><expr pos:start="116:17" pos:end="116:70"><call pos:start="116:17" pos:end="116:70"><name pos:start="116:17" pos:end="116:23">DPRINTF</name><argument_list pos:start="116:24" pos:end="116:70">(<argument pos:start="116:25" pos:end="116:69"><expr pos:start="116:25" pos:end="116:69"><literal type="string" pos:start="116:25" pos:end="116:69">"ISOCH: attempt to addess non-iso endpoint\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="118:17" pos:end="118:51"><expr pos:start="118:17" pos:end="118:50"><name pos:start="118:17" pos:end="118:36"><name pos:start="118:17" pos:end="118:20">ehci</name><operator pos:start="118:21" pos:end="118:22">-&gt;</operator><name pos:start="118:23" pos:end="118:29">ipacket</name><operator pos:start="118:30" pos:end="118:30">.</operator><name pos:start="118:31" pos:end="118:36">status</name></name> <operator pos:start="118:38" pos:end="118:38">=</operator> <name pos:start="118:40" pos:end="118:50">USB_RET_NAK</name></expr>;</expr_stmt>

                <expr_stmt pos:start="120:17" pos:end="120:48"><expr pos:start="120:17" pos:end="120:47"><name pos:start="120:17" pos:end="120:43"><name pos:start="120:17" pos:end="120:20">ehci</name><operator pos:start="120:21" pos:end="120:22">-&gt;</operator><name pos:start="120:23" pos:end="120:29">ipacket</name><operator pos:start="120:30" pos:end="120:30">.</operator><name pos:start="120:31" pos:end="120:43">actual_length</name></name> <operator pos:start="120:45" pos:end="120:45">=</operator> <literal type="number" pos:start="120:47" pos:end="120:47">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>




            <switch pos:start="127:13" pos:end="173:13">switch <condition pos:start="127:20" pos:end="127:41">(<expr pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:40"><name pos:start="127:21" pos:end="127:24">ehci</name><operator pos:start="127:25" pos:end="127:26">-&gt;</operator><name pos:start="127:27" pos:end="127:33">ipacket</name><operator pos:start="127:34" pos:end="127:34">.</operator><name pos:start="127:35" pos:end="127:40">status</name></name></expr>)</condition> <block pos:start="127:43" pos:end="173:13">{<block_content pos:start="129:13" pos:end="171:22">

            <case pos:start="129:13" pos:end="129:33">case <expr pos:start="129:18" pos:end="129:32"><name pos:start="129:18" pos:end="129:32">USB_RET_SUCCESS</name></expr>:</case>

                <break pos:start="131:17" pos:end="131:22">break;</break>

            <default pos:start="133:13" pos:end="133:20">default:</default>

                <expr_stmt pos:start="135:17" pos:end="137:46"><expr pos:start="135:17" pos:end="137:45"><call pos:start="135:17" pos:end="137:45"><name pos:start="135:17" pos:end="135:23">fprintf</name><argument_list pos:start="135:24" pos:end="137:45">(<argument pos:start="135:25" pos:end="135:30"><expr pos:start="135:25" pos:end="135:30"><name pos:start="135:25" pos:end="135:30">stderr</name></expr></argument>, <argument pos:start="135:33" pos:end="135:65"><expr pos:start="135:33" pos:end="135:65"><literal type="string" pos:start="135:33" pos:end="135:65">"Unexpected iso usb result: %d\n"</literal></expr></argument>,

                        <argument pos:start="137:25" pos:end="137:44"><expr pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:28">ehci</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:37">ipacket</name><operator pos:start="137:38" pos:end="137:38">.</operator><name pos:start="137:39" pos:end="137:44">status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="139:17" pos:end="139:34">/* Fall through */</comment>

            <case pos:start="141:13" pos:end="141:33">case <expr pos:start="141:18" pos:end="141:32"><name pos:start="141:18" pos:end="141:32">USB_RET_IOERROR</name></expr>:</case>

            <case pos:start="143:13" pos:end="143:31">case <expr pos:start="143:18" pos:end="143:30"><name pos:start="143:18" pos:end="143:30">USB_RET_NODEV</name></expr>:</case>

                <comment type="block" pos:start="145:17" pos:end="145:71">/* 3.3.2: XACTERR is only allowed on IN transactions */</comment>

                <if_stmt pos:start="147:17" pos:end="153:17"><if pos:start="147:17" pos:end="153:17">if <condition pos:start="147:20" pos:end="147:24">(<expr pos:start="147:21" pos:end="147:23"><name pos:start="147:21" pos:end="147:23">dir</name></expr>)</condition> <block pos:start="147:26" pos:end="153:17">{<block_content pos:start="149:21" pos:end="151:56">

                    <expr_stmt pos:start="149:21" pos:end="149:57"><expr pos:start="149:21" pos:end="149:56"><name pos:start="149:21" pos:end="149:36"><name pos:start="149:21" pos:end="149:23">itd</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:33">transact</name><index pos:start="149:34" pos:end="149:36">[<expr pos:start="149:35" pos:end="149:35"><name pos:start="149:35" pos:end="149:35">i</name></expr>]</index></name> <operator pos:start="149:38" pos:end="149:39">|=</operator> <name pos:start="149:41" pos:end="149:56">ITD_XACT_XACTERR</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:56"><expr pos:start="151:21" pos:end="151:55"><call pos:start="151:21" pos:end="151:55"><name pos:start="151:21" pos:end="151:34">ehci_raise_irq</name><argument_list pos:start="151:35" pos:end="151:55">(<argument pos:start="151:36" pos:end="151:39"><expr pos:start="151:36" pos:end="151:39"><name pos:start="151:36" pos:end="151:39">ehci</name></expr></argument>, <argument pos:start="151:42" pos:end="151:54"><expr pos:start="151:42" pos:end="151:54"><name pos:start="151:42" pos:end="151:54">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="155:17" pos:end="155:22">break;</break>

            <case pos:start="157:13" pos:end="157:32">case <expr pos:start="157:18" pos:end="157:31"><name pos:start="157:18" pos:end="157:31">USB_RET_BABBLE</name></expr>:</case>

                <expr_stmt pos:start="159:17" pos:end="159:52"><expr pos:start="159:17" pos:end="159:51"><name pos:start="159:17" pos:end="159:32"><name pos:start="159:17" pos:end="159:19">itd</name><operator pos:start="159:20" pos:end="159:21">-&gt;</operator><name pos:start="159:22" pos:end="159:29">transact</name><index pos:start="159:30" pos:end="159:32">[<expr pos:start="159:31" pos:end="159:31"><name pos:start="159:31" pos:end="159:31">i</name></expr>]</index></name> <operator pos:start="159:34" pos:end="159:35">|=</operator> <name pos:start="159:37" pos:end="159:51">ITD_XACT_BABBLE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:52"><expr pos:start="161:17" pos:end="161:51"><call pos:start="161:17" pos:end="161:51"><name pos:start="161:17" pos:end="161:30">ehci_raise_irq</name><argument_list pos:start="161:31" pos:end="161:51">(<argument pos:start="161:32" pos:end="161:35"><expr pos:start="161:32" pos:end="161:35"><name pos:start="161:32" pos:end="161:35">ehci</name></expr></argument>, <argument pos:start="161:38" pos:end="161:50"><expr pos:start="161:38" pos:end="161:50"><name pos:start="161:38" pos:end="161:50">USBSTS_ERRINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            <case pos:start="165:13" pos:end="165:29">case <expr pos:start="165:18" pos:end="165:28"><name pos:start="165:18" pos:end="165:28">USB_RET_NAK</name></expr>:</case>

                <comment type="block" pos:start="167:17" pos:end="167:66">/* no data for us, so do a zero-length transfer */</comment>

                <expr_stmt pos:start="169:17" pos:end="169:48"><expr pos:start="169:17" pos:end="169:47"><name pos:start="169:17" pos:end="169:43"><name pos:start="169:17" pos:end="169:20">ehci</name><operator pos:start="169:21" pos:end="169:22">-&gt;</operator><name pos:start="169:23" pos:end="169:29">ipacket</name><operator pos:start="169:30" pos:end="169:30">.</operator><name pos:start="169:31" pos:end="169:43">actual_length</name></name> <operator pos:start="169:45" pos:end="169:45">=</operator> <literal type="number" pos:start="169:47" pos:end="169:47">0</literal></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            </block_content>}</block></switch>

            <if_stmt pos:start="175:13" pos:end="187:13"><if pos:start="175:13" pos:end="181:13">if <condition pos:start="175:16" pos:end="175:21">(<expr pos:start="175:17" pos:end="175:20"><operator pos:start="175:17" pos:end="175:17">!</operator><name pos:start="175:18" pos:end="175:20">dir</name></expr>)</condition> <block pos:start="175:23" pos:end="181:13">{<block_content pos:start="177:17" pos:end="179:43">

                <expr_stmt pos:start="177:17" pos:end="179:43"><expr pos:start="177:17" pos:end="179:42"><call pos:start="177:17" pos:end="179:42"><name pos:start="177:17" pos:end="177:25">set_field</name><argument_list pos:start="177:26" pos:end="179:42">(<argument pos:start="177:27" pos:end="177:43"><expr pos:start="177:27" pos:end="177:43"><operator pos:start="177:27" pos:end="177:27">&amp;</operator><name pos:start="177:28" pos:end="177:43"><name pos:start="177:28" pos:end="177:30">itd</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:40">transact</name><index pos:start="177:41" pos:end="177:43">[<expr pos:start="177:42" pos:end="177:42"><name pos:start="177:42" pos:end="177:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="177:46" pos:end="177:78"><expr pos:start="177:46" pos:end="177:78"><name pos:start="177:46" pos:end="177:48">len</name> <operator pos:start="177:50" pos:end="177:50">-</operator> <name pos:start="177:52" pos:end="177:78"><name pos:start="177:52" pos:end="177:55">ehci</name><operator pos:start="177:56" pos:end="177:57">-&gt;</operator><name pos:start="177:58" pos:end="177:64">ipacket</name><operator pos:start="177:65" pos:end="177:65">.</operator><name pos:start="177:66" pos:end="177:78">actual_length</name></name></expr></argument>,

                          <argument pos:start="179:27" pos:end="179:41"><expr pos:start="179:27" pos:end="179:41"><name pos:start="179:27" pos:end="179:41">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="179:45" pos:end="179:53">/* OUT */</comment>

            </block_content>}</block></if> <else pos:start="181:15" pos:end="187:13">else <block pos:start="181:20" pos:end="187:13">{<block_content pos:start="183:17" pos:end="185:43">

                <expr_stmt pos:start="183:17" pos:end="185:43"><expr pos:start="183:17" pos:end="185:42"><call pos:start="183:17" pos:end="185:42"><name pos:start="183:17" pos:end="183:25">set_field</name><argument_list pos:start="183:26" pos:end="185:42">(<argument pos:start="183:27" pos:end="183:43"><expr pos:start="183:27" pos:end="183:43"><operator pos:start="183:27" pos:end="183:27">&amp;</operator><name pos:start="183:28" pos:end="183:43"><name pos:start="183:28" pos:end="183:30">itd</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:40">transact</name><index pos:start="183:41" pos:end="183:43">[<expr pos:start="183:42" pos:end="183:42"><name pos:start="183:42" pos:end="183:42">i</name></expr>]</index></name></expr></argument>, <argument pos:start="183:46" pos:end="183:72"><expr pos:start="183:46" pos:end="183:72"><name pos:start="183:46" pos:end="183:72"><name pos:start="183:46" pos:end="183:49">ehci</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:58">ipacket</name><operator pos:start="183:59" pos:end="183:59">.</operator><name pos:start="183:60" pos:end="183:72">actual_length</name></name></expr></argument>,

                          <argument pos:start="185:27" pos:end="185:41"><expr pos:start="185:27" pos:end="185:41"><name pos:start="185:27" pos:end="185:41">ITD_XACT_LENGTH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="185:45" pos:end="185:52">/* IN */</comment>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="189:13" pos:end="193:13"><if pos:start="189:13" pos:end="193:13">if <condition pos:start="189:16" pos:end="189:48">(<expr pos:start="189:17" pos:end="189:47"><name pos:start="189:17" pos:end="189:32"><name pos:start="189:17" pos:end="189:19">itd</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:29">transact</name><index pos:start="189:30" pos:end="189:32">[<expr pos:start="189:31" pos:end="189:31"><name pos:start="189:31" pos:end="189:31">i</name></expr>]</index></name> <operator pos:start="189:34" pos:end="189:34">&amp;</operator> <name pos:start="189:36" pos:end="189:47">ITD_XACT_IOC</name></expr>)</condition> <block pos:start="189:50" pos:end="193:13">{<block_content pos:start="191:17" pos:end="191:49">

                <expr_stmt pos:start="191:17" pos:end="191:49"><expr pos:start="191:17" pos:end="191:48"><call pos:start="191:17" pos:end="191:48"><name pos:start="191:17" pos:end="191:30">ehci_raise_irq</name><argument_list pos:start="191:31" pos:end="191:48">(<argument pos:start="191:32" pos:end="191:35"><expr pos:start="191:32" pos:end="191:35"><name pos:start="191:32" pos:end="191:35">ehci</name></expr></argument>, <argument pos:start="191:38" pos:end="191:47"><expr pos:start="191:38" pos:end="191:47"><name pos:start="191:38" pos:end="191:47">USBSTS_INT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:49"><expr pos:start="195:13" pos:end="195:48"><name pos:start="195:13" pos:end="195:28"><name pos:start="195:13" pos:end="195:15">itd</name><operator pos:start="195:16" pos:end="195:17">-&gt;</operator><name pos:start="195:18" pos:end="195:25">transact</name><index pos:start="195:26" pos:end="195:28">[<expr pos:start="195:27" pos:end="195:27"><name pos:start="195:27" pos:end="195:27">i</name></expr>]</index></name> <operator pos:start="195:30" pos:end="195:31">&amp;=</operator> <operator pos:start="195:33" pos:end="195:33">~</operator><name pos:start="195:34" pos:end="195:48">ITD_XACT_ACTIVE</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><literal type="number" pos:start="201:12" pos:end="201:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
