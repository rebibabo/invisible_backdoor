<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6666.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">fdk_aac_decode_frame</name><parameter_list pos:start="1:32" pos:end="3:68">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:59">void</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">data</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:50"><decl pos:start="3:33" pos:end="3:50"><type pos:start="3:33" pos:end="3:50"><name pos:start="3:33" pos:end="3:35">int</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:50">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:67"><decl pos:start="3:53" pos:end="3:67"><type pos:start="3:53" pos:end="3:67"><name pos:start="3:53" pos:end="3:60">AVPacket</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:67">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:15">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">FDKAACDecContext</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:21">AAC_DECODER_ERROR</name></type> <name pos:start="13:23" pos:end="13:25">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:28"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">UINT</name></type> <name pos:start="15:10" pos:end="15:14">valid</name> <init pos:start="15:16" pos:end="15:28">= <expr pos:start="15:18" pos:end="15:28"><name pos:start="15:18" pos:end="15:28"><name pos:start="15:18" pos:end="15:22">avpkt</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:28">size</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:73"><expr pos:start="19:5" pos:end="19:72"><name pos:start="19:5" pos:end="19:7">err</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:72"><name pos:start="19:11" pos:end="19:25">aacDecoder_Fill</name><argument_list pos:start="19:26" pos:end="19:72">(<argument pos:start="19:27" pos:end="19:35"><expr pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:35"><name pos:start="19:27" pos:end="19:27">s</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:35">handle</name></name></expr></argument>, <argument pos:start="19:38" pos:end="19:49"><expr pos:start="19:38" pos:end="19:49"><operator pos:start="19:38" pos:end="19:38">&amp;</operator><name pos:start="19:39" pos:end="19:49"><name pos:start="19:39" pos:end="19:43">avpkt</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:49">data</name></name></expr></argument>, <argument pos:start="19:52" pos:end="19:63"><expr pos:start="19:52" pos:end="19:63"><operator pos:start="19:52" pos:end="19:52">&amp;</operator><name pos:start="19:53" pos:end="19:63"><name pos:start="19:53" pos:end="19:57">avpkt</name><operator pos:start="19:58" pos:end="19:59">-&gt;</operator><name pos:start="19:60" pos:end="19:63">size</name></name></expr></argument>, <argument pos:start="19:66" pos:end="19:71"><expr pos:start="19:66" pos:end="19:71"><operator pos:start="19:66" pos:end="19:66">&amp;</operator><name pos:start="19:67" pos:end="19:71">valid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="27:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">err</name> <operator pos:start="21:13" pos:end="21:14">!=</operator> <name pos:start="21:16" pos:end="21:25">AAC_DEC_OK</name></expr>)</condition> <block pos:start="21:28" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:35">

        <expr_stmt pos:start="23:9" pos:end="23:75"><expr pos:start="23:9" pos:end="23:74"><call pos:start="23:9" pos:end="23:74"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="23:74">(<argument pos:start="23:16" pos:end="23:20"><expr pos:start="23:16" pos:end="23:20"><name pos:start="23:16" pos:end="23:20">avctx</name></expr></argument>, <argument pos:start="23:23" pos:end="23:34"><expr pos:start="23:23" pos:end="23:34"><name pos:start="23:23" pos:end="23:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="23:37" pos:end="23:68"><expr pos:start="23:37" pos:end="23:68"><literal type="string" pos:start="23:37" pos:end="23:68">"aacDecoder_Fill() failed: %x\n"</literal></expr></argument>, <argument pos:start="23:71" pos:end="23:73"><expr pos:start="23:71" pos:end="23:73"><name pos:start="23:71" pos:end="23:73">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:35">return <expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:102"><expr pos:start="31:5" pos:end="31:101"><name pos:start="31:5" pos:end="31:7">err</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:101"><name pos:start="31:11" pos:end="31:32">aacDecoder_DecodeFrame</name><argument_list pos:start="31:33" pos:end="31:101">(<argument pos:start="31:34" pos:end="31:42"><expr pos:start="31:34" pos:end="31:42"><name pos:start="31:34" pos:end="31:42"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:42">handle</name></name></expr></argument>, <argument pos:start="31:45" pos:end="31:73"><expr pos:start="31:45" pos:end="31:73"><operator pos:start="31:45" pos:end="31:45">(</operator><name pos:start="31:46" pos:end="31:52">INT_PCM</name> <operator pos:start="31:54" pos:end="31:54">*</operator><operator pos:start="31:55" pos:end="31:55">)</operator> <name pos:start="31:57" pos:end="31:73"><name pos:start="31:57" pos:end="31:57">s</name><operator pos:start="31:58" pos:end="31:59">-&gt;</operator><name pos:start="31:60" pos:end="31:73">decoder_buffer</name></name></expr></argument>, <argument pos:start="31:76" pos:end="31:97"><expr pos:start="31:76" pos:end="31:97"><name pos:start="31:76" pos:end="31:97"><name pos:start="31:76" pos:end="31:76">s</name><operator pos:start="31:77" pos:end="31:78">-&gt;</operator><name pos:start="31:79" pos:end="31:97">decoder_buffer_size</name></name></expr></argument>, <argument pos:start="31:100" pos:end="31:100"><expr pos:start="31:100" pos:end="31:100"><literal type="number" pos:start="31:100" pos:end="31:100">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:39">(<expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:14">==</operator> <name pos:start="33:16" pos:end="33:38">AAC_DEC_NOT_ENOUGH_BITS</name></expr>)</condition> <block pos:start="33:41" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:25"><name pos:start="35:15" pos:end="35:19">avpkt</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">size</name></name> <operator pos:start="35:27" pos:end="35:27">-</operator> <name pos:start="35:29" pos:end="35:33">valid</name></expr>;</expr_stmt>

        <goto pos:start="37:9" pos:end="37:17">goto <name pos:start="37:14" pos:end="37:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:26">(<expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:11">err</name> <operator pos:start="41:13" pos:end="41:14">!=</operator> <name pos:start="41:16" pos:end="41:25">AAC_DEC_OK</name></expr>)</condition> <block pos:start="41:28" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:17">

        <expr_stmt pos:start="43:9" pos:end="45:61"><expr pos:start="43:9" pos:end="45:60"><call pos:start="43:9" pos:end="45:60"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="45:60">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:34"><expr pos:start="43:23" pos:end="43:34"><name pos:start="43:23" pos:end="43:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="45:16" pos:end="45:54"><expr pos:start="45:16" pos:end="45:54"><literal type="string" pos:start="45:16" pos:end="45:54">"aacDecoder_DecodeFrame() failed: %x\n"</literal></expr></argument>, <argument pos:start="45:57" pos:end="45:59"><expr pos:start="45:57" pos:end="45:59"><name pos:start="45:57" pos:end="45:59">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:30"><expr pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <name pos:start="47:15" pos:end="47:29">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

        <goto pos:start="49:9" pos:end="49:17">goto <name pos:start="49:14" pos:end="49:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="57:17"><if pos:start="55:5" pos:end="57:17">if <condition pos:start="55:8" pos:end="55:43">(<expr pos:start="55:9" pos:end="55:42"><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:12">ret</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:37"><name pos:start="55:16" pos:end="55:30">get_stream_info</name><argument_list pos:start="55:31" pos:end="55:37">(<argument pos:start="55:32" pos:end="55:36"><expr pos:start="55:32" pos:end="55:36"><name pos:start="55:32" pos:end="55:36">avctx</name></expr></argument>)</argument_list></call><operator pos:start="55:38" pos:end="55:38">)</operator> <operator pos:start="55:40" pos:end="55:40">&lt;</operator> <literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <goto pos:start="57:9" pos:end="57:17">goto <name pos:start="57:14" pos:end="57:16">end</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:9">frame</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:21">nb_samples</name></name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:29">avctx</name><operator pos:start="59:30" pos:end="59:31">-&gt;</operator><name pos:start="59:32" pos:end="59:41">frame_size</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="63:5" pos:end="65:17"><if pos:start="63:5" pos:end="65:17">if <condition pos:start="63:8" pos:end="63:51">(<expr pos:start="63:9" pos:end="63:50"><operator pos:start="63:9" pos:end="63:9">(</operator><name pos:start="63:10" pos:end="63:12">ret</name> <operator pos:start="63:14" pos:end="63:14">=</operator> <call pos:start="63:16" pos:end="63:45"><name pos:start="63:16" pos:end="63:28">ff_get_buffer</name><argument_list pos:start="63:29" pos:end="63:45">(<argument pos:start="63:30" pos:end="63:34"><expr pos:start="63:30" pos:end="63:34"><name pos:start="63:30" pos:end="63:34">avctx</name></expr></argument>, <argument pos:start="63:37" pos:end="63:41"><expr pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:41">frame</name></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><literal type="number" pos:start="63:44" pos:end="63:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="63:46" pos:end="63:46">)</operator> <operator pos:start="63:48" pos:end="63:48">&lt;</operator> <literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:17"><block_content pos:start="65:9" pos:end="65:17">

        <goto pos:start="65:9" pos:end="65:17">goto <name pos:start="65:14" pos:end="65:16">end</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="73:55"><expr pos:start="69:5" pos:end="73:54"><call pos:start="69:5" pos:end="73:54"><name pos:start="69:5" pos:end="69:10">memcpy</name><argument_list pos:start="69:11" pos:end="73:54">(<argument pos:start="69:12" pos:end="69:34"><expr pos:start="69:12" pos:end="69:34"><name pos:start="69:12" pos:end="69:34"><name pos:start="69:12" pos:end="69:16">frame</name><operator pos:start="69:17" pos:end="69:18">-&gt;</operator><name pos:start="69:19" pos:end="69:31">extended_data</name><index pos:start="69:32" pos:end="69:34">[<expr pos:start="69:33" pos:end="69:33"><literal type="number" pos:start="69:33" pos:end="69:33">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:37" pos:end="69:53"><expr pos:start="69:37" pos:end="69:53"><name pos:start="69:37" pos:end="69:53"><name pos:start="69:37" pos:end="69:37">s</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:53">decoder_buffer</name></name></expr></argument>,

           <argument pos:start="71:12" pos:end="73:53"><expr pos:start="71:12" pos:end="73:53"><name pos:start="71:12" pos:end="71:26"><name pos:start="71:12" pos:end="71:16">avctx</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:26">channels</name></name> <operator pos:start="71:28" pos:end="71:28">*</operator> <name pos:start="71:30" pos:end="71:46"><name pos:start="71:30" pos:end="71:34">avctx</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:46">frame_size</name></name> <operator pos:start="71:48" pos:end="71:48">*</operator>

           <call pos:start="73:12" pos:end="73:53"><name pos:start="73:12" pos:end="73:34">av_get_bytes_per_sample</name><argument_list pos:start="73:35" pos:end="73:53">(<argument pos:start="73:36" pos:end="73:52"><expr pos:start="73:36" pos:end="73:52"><name pos:start="73:36" pos:end="73:52"><name pos:start="73:36" pos:end="73:40">avctx</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:52">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:23"><expr pos:start="77:5" pos:end="77:22"><operator pos:start="77:5" pos:end="77:5">*</operator><name pos:start="77:6" pos:end="77:18">got_frame_ptr</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:30"><expr pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:7">ret</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <name pos:start="79:11" pos:end="79:21"><name pos:start="79:11" pos:end="79:15">avpkt</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:21">size</name></name> <operator pos:start="79:23" pos:end="79:23">-</operator> <name pos:start="79:25" pos:end="79:29">valid</name></expr>;</expr_stmt>



<label pos:start="83:1" pos:end="83:4"><name pos:start="83:1" pos:end="83:3">end</name>:</label>

    <return pos:start="85:5" pos:end="85:15">return <expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
