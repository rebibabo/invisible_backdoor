<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20419.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mov_write_udta_tag</name><parameter_list pos:start="1:30" pos:end="3:49">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:43">ByteIOContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">pb</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:59">MOVContext</name><modifier pos:start="1:60" pos:end="1:60">*</modifier></type> <name pos:start="1:62" pos:end="1:64">mov</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:48"><decl pos:start="3:31" pos:end="3:48"><type pos:start="3:31" pos:end="3:48"><name pos:start="3:31" pos:end="3:45">AVFormatContext</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="151:1">{<block_content pos:start="7:5" pos:end="149:31">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">pos</name> <init pos:start="7:13" pos:end="7:27">= <expr pos:start="7:15" pos:end="7:27"><call pos:start="7:15" pos:end="7:27"><name pos:start="7:15" pos:end="7:23">url_ftell</name><argument_list pos:start="7:24" pos:end="7:27">(<argument pos:start="7:25" pos:end="7:26"><expr pos:start="7:25" pos:end="7:26"><name pos:start="7:25" pos:end="7:26">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><call pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12">put_be32</name><argument_list pos:start="13:13" pos:end="13:19">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">pb</name></expr></argument>, <argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="13:22" pos:end="13:31">/* size */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:11">put_tag</name><argument_list pos:start="15:12" pos:end="15:23">(<argument pos:start="15:13" pos:end="15:14"><expr pos:start="15:13" pos:end="15:14"><name pos:start="15:13" pos:end="15:14">pb</name></expr></argument>, <argument pos:start="15:17" pos:end="15:22"><expr pos:start="15:17" pos:end="15:22"><literal type="string" pos:start="15:17" pos:end="15:22">"udta"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:26">/* iTunes meta data */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:35"><expr pos:start="21:5" pos:end="21:34"><call pos:start="21:5" pos:end="21:34"><name pos:start="21:5" pos:end="21:22">mov_write_meta_tag</name><argument_list pos:start="21:23" pos:end="21:34">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">pb</name></expr></argument>, <argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">mov</name></expr></argument>, <argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:22">/* Requirements */</comment>

    <for pos:start="27:5" pos:end="55:5">for <control pos:start="27:9" pos:end="27:33">(<init pos:start="27:10" pos:end="27:13"><expr pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:10">i</name><operator pos:start="27:11" pos:end="27:11">=</operator><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</init> <condition pos:start="27:15" pos:end="27:28"><expr pos:start="27:15" pos:end="27:27"><name pos:start="27:15" pos:end="27:15">i</name><operator pos:start="27:16" pos:end="27:16">&lt;</operator><name pos:start="27:17" pos:end="27:27">MAX_STREAMS</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:30">i</name><operator pos:start="27:31" pos:end="27:32">++</operator></expr></incr>)</control> <block pos:start="27:35" pos:end="55:5">{<block_content pos:start="29:9" pos:end="53:9">

        <if_stmt pos:start="29:9" pos:end="29:47"><if pos:start="29:9" pos:end="29:47">if<condition pos:start="29:11" pos:end="29:37">(<expr pos:start="29:12" pos:end="29:36"><name pos:start="29:12" pos:end="29:25"><name pos:start="29:12" pos:end="29:14">mov</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:22">tracks</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><name pos:start="29:24" pos:end="29:24">i</name></expr>]</index></name><operator pos:start="29:26" pos:end="29:26">.</operator><name pos:start="29:27" pos:end="29:31">entry</name> <operator pos:start="29:33" pos:end="29:34">&lt;=</operator> <literal type="number" pos:start="29:36" pos:end="29:36">0</literal></expr>)</condition><block type="pseudo" pos:start="29:39" pos:end="29:47"><block_content pos:start="29:39" pos:end="29:47"> <continue pos:start="29:39" pos:end="29:47">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="31:9" pos:end="53:9"><if pos:start="31:9" pos:end="53:9">if <condition pos:start="31:12" pos:end="33:59">(<expr pos:start="31:13" pos:end="33:58"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:15">mov</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:23">tracks</name><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><name pos:start="31:25" pos:end="31:25">i</name></expr>]</index></name><operator pos:start="31:27" pos:end="31:27">.</operator><name pos:start="31:28" pos:end="31:40"><name pos:start="31:28" pos:end="31:30">enc</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:40">codec_id</name></name> <operator pos:start="31:42" pos:end="31:43">==</operator> <name pos:start="31:45" pos:end="31:56">CODEC_ID_AAC</name> <operator pos:start="31:58" pos:end="31:59">||</operator>

            <name pos:start="33:13" pos:end="33:26"><name pos:start="33:13" pos:end="33:15">mov</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:23">tracks</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">i</name></expr>]</index></name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:40"><name pos:start="33:28" pos:end="33:30">enc</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:40">codec_id</name></name> <operator pos:start="33:42" pos:end="33:43">==</operator> <name pos:start="33:45" pos:end="33:58">CODEC_ID_MPEG4</name></expr>)</condition> <block pos:start="33:61" pos:end="53:9">{<block_content pos:start="35:13" pos:end="51:18">

            <decl_stmt pos:start="35:13" pos:end="35:36"><decl pos:start="35:13" pos:end="35:35"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:19">pos</name> <init pos:start="35:21" pos:end="35:35">= <expr pos:start="35:23" pos:end="35:35"><call pos:start="35:23" pos:end="35:35"><name pos:start="35:23" pos:end="35:31">url_ftell</name><argument_list pos:start="35:32" pos:end="35:35">(<argument pos:start="35:33" pos:end="35:34"><expr pos:start="35:33" pos:end="35:34"><name pos:start="35:33" pos:end="35:34">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:28"><expr pos:start="37:13" pos:end="37:27"><call pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:20">put_be32</name><argument_list pos:start="37:21" pos:end="37:27">(<argument pos:start="37:22" pos:end="37:23"><expr pos:start="37:22" pos:end="37:23"><name pos:start="37:22" pos:end="37:23">pb</name></expr></argument>, <argument pos:start="37:26" pos:end="37:26"><expr pos:start="37:26" pos:end="37:26"><literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:30" pos:end="37:39">/* size */</comment>

            <expr_stmt pos:start="39:13" pos:end="39:35"><expr pos:start="39:13" pos:end="39:34"><call pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:19">put_tag</name><argument_list pos:start="39:20" pos:end="39:34">(<argument pos:start="39:21" pos:end="39:22"><expr pos:start="39:21" pos:end="39:22"><name pos:start="39:21" pos:end="39:22">pb</name></expr></argument>, <argument pos:start="39:25" pos:end="39:33"><expr pos:start="39:25" pos:end="39:33"><literal type="string" pos:start="39:25" pos:end="39:33">"\251req"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:65"><expr pos:start="41:13" pos:end="41:64"><call pos:start="41:13" pos:end="41:64"><name pos:start="41:13" pos:end="41:20">put_be16</name><argument_list pos:start="41:21" pos:end="41:64">(<argument pos:start="41:22" pos:end="41:23"><expr pos:start="41:22" pos:end="41:23"><name pos:start="41:22" pos:end="41:23">pb</name></expr></argument>, <argument pos:start="41:26" pos:end="41:63"><expr pos:start="41:26" pos:end="41:63"><sizeof pos:start="41:26" pos:end="41:59">sizeof<argument_list pos:start="41:32" pos:end="41:59">(<argument pos:start="41:33" pos:end="41:58"><expr pos:start="41:33" pos:end="41:58"><literal type="string" pos:start="41:33" pos:end="41:58">"QuickTime 6.0 or greater"</literal></expr></argument>)</argument_list></sizeof> <operator pos:start="41:61" pos:end="41:61">-</operator> <literal type="number" pos:start="41:63" pos:end="41:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:27"><call pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:20">put_be16</name><argument_list pos:start="43:21" pos:end="43:27">(<argument pos:start="43:22" pos:end="43:23"><expr pos:start="43:22" pos:end="43:23"><name pos:start="43:22" pos:end="43:23">pb</name></expr></argument>, <argument pos:start="43:26" pos:end="43:26"><expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="47:63"><expr pos:start="45:13" pos:end="47:62"><call pos:start="45:13" pos:end="47:62"><name pos:start="45:13" pos:end="45:22">put_buffer</name><argument_list pos:start="45:23" pos:end="47:62">(<argument pos:start="45:24" pos:end="45:25"><expr pos:start="45:24" pos:end="45:25"><name pos:start="45:24" pos:end="45:25">pb</name></expr></argument>, <argument pos:start="45:28" pos:end="45:53"><expr pos:start="45:28" pos:end="45:53"><literal type="string" pos:start="45:28" pos:end="45:53">"QuickTime 6.0 or greater"</literal></expr></argument>,

                       <argument pos:start="47:24" pos:end="47:61"><expr pos:start="47:24" pos:end="47:61"><sizeof pos:start="47:24" pos:end="47:57">sizeof<argument_list pos:start="47:30" pos:end="47:57">(<argument pos:start="47:31" pos:end="47:56"><expr pos:start="47:31" pos:end="47:56"><literal type="string" pos:start="47:31" pos:end="47:56">"QuickTime 6.0 or greater"</literal></expr></argument>)</argument_list></sizeof> <operator pos:start="47:59" pos:end="47:59">-</operator> <literal type="number" pos:start="47:61" pos:end="47:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:32"><expr pos:start="49:13" pos:end="49:31"><call pos:start="49:13" pos:end="49:31"><name pos:start="49:13" pos:end="49:22">updateSize</name><argument_list pos:start="49:23" pos:end="49:31">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">pb</name></expr></argument>, <argument pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:30">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="59:5" pos:end="59:17">/* Encoder */</comment>

    <if_stmt pos:start="61:5" pos:end="79:5"><if pos:start="61:5" pos:end="79:5">if<condition pos:start="61:7" pos:end="61:58">(<expr pos:start="61:8" pos:end="61:57"><operator pos:start="61:8" pos:end="61:8">!</operator><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:23"><name pos:start="61:10" pos:end="61:12">mov</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:20">tracks</name><index pos:start="61:21" pos:end="61:23">[<expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>]</index></name><operator pos:start="61:24" pos:end="61:24">.</operator><name pos:start="61:25" pos:end="61:34"><name pos:start="61:25" pos:end="61:27">enc</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:34">flags</name></name> <operator pos:start="61:36" pos:end="61:36">&amp;</operator> <name pos:start="61:38" pos:end="61:56">CODEC_FLAG_BITEXACT</name><operator pos:start="61:57" pos:end="61:57">)</operator></expr>)</condition>

    <block pos:start="63:5" pos:end="79:5">{<block_content pos:start="65:9" pos:end="77:28">

        <decl_stmt pos:start="65:9" pos:end="65:32"><decl pos:start="65:9" pos:end="65:31"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:15">pos</name> <init pos:start="65:17" pos:end="65:31">= <expr pos:start="65:19" pos:end="65:31"><call pos:start="65:19" pos:end="65:31"><name pos:start="65:19" pos:end="65:27">url_ftell</name><argument_list pos:start="65:28" pos:end="65:31">(<argument pos:start="65:29" pos:end="65:30"><expr pos:start="65:29" pos:end="65:30"><name pos:start="65:29" pos:end="65:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><call pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:16">put_be32</name><argument_list pos:start="67:17" pos:end="67:23">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">pb</name></expr></argument>, <argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="67:26" pos:end="67:35">/* size */</comment>

        <expr_stmt pos:start="69:9" pos:end="69:31"><expr pos:start="69:9" pos:end="69:30"><call pos:start="69:9" pos:end="69:30"><name pos:start="69:9" pos:end="69:15">put_tag</name><argument_list pos:start="69:16" pos:end="69:30">(<argument pos:start="69:17" pos:end="69:18"><expr pos:start="69:17" pos:end="69:18"><name pos:start="69:17" pos:end="69:18">pb</name></expr></argument>, <argument pos:start="69:21" pos:end="69:29"><expr pos:start="69:21" pos:end="69:29"><literal type="string" pos:start="69:21" pos:end="69:29">"\251enc"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><call pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:16">put_be16</name><argument_list pos:start="71:17" pos:end="71:51">(<argument pos:start="71:18" pos:end="71:19"><expr pos:start="71:18" pos:end="71:19"><name pos:start="71:18" pos:end="71:19">pb</name></expr></argument>, <argument pos:start="71:22" pos:end="71:50"><expr pos:start="71:22" pos:end="71:50"><sizeof pos:start="71:22" pos:end="71:46">sizeof<argument_list pos:start="71:28" pos:end="71:46">(<argument pos:start="71:29" pos:end="71:45"><expr pos:start="71:29" pos:end="71:45"><name pos:start="71:29" pos:end="71:45">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></sizeof> <operator pos:start="71:48" pos:end="71:48">-</operator> <literal type="number" pos:start="71:50" pos:end="71:50">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:54" pos:end="71:72">/* string length */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:24"><expr pos:start="73:9" pos:end="73:23"><call pos:start="73:9" pos:end="73:23"><name pos:start="73:9" pos:end="73:16">put_be16</name><argument_list pos:start="73:17" pos:end="73:23">(<argument pos:start="73:18" pos:end="73:19"><expr pos:start="73:18" pos:end="73:19"><name pos:start="73:18" pos:end="73:19">pb</name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:73"><expr pos:start="75:9" pos:end="75:72"><call pos:start="75:9" pos:end="75:72"><name pos:start="75:9" pos:end="75:18">put_buffer</name><argument_list pos:start="75:19" pos:end="75:72">(<argument pos:start="75:20" pos:end="75:21"><expr pos:start="75:20" pos:end="75:21"><name pos:start="75:20" pos:end="75:21">pb</name></expr></argument>, <argument pos:start="75:24" pos:end="75:40"><expr pos:start="75:24" pos:end="75:40"><name pos:start="75:24" pos:end="75:40">LIBAVFORMAT_IDENT</name></expr></argument>, <argument pos:start="75:43" pos:end="75:71"><expr pos:start="75:43" pos:end="75:71"><sizeof pos:start="75:43" pos:end="75:67">sizeof<argument_list pos:start="75:49" pos:end="75:67">(<argument pos:start="75:50" pos:end="75:66"><expr pos:start="75:50" pos:end="75:66"><name pos:start="75:50" pos:end="75:66">LIBAVFORMAT_IDENT</name></expr></argument>)</argument_list></sizeof> <operator pos:start="75:69" pos:end="75:69">-</operator> <literal type="number" pos:start="75:71" pos:end="75:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><call pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:18">updateSize</name><argument_list pos:start="77:19" pos:end="77:27">(<argument pos:start="77:20" pos:end="77:21"><expr pos:start="77:20" pos:end="77:21"><name pos:start="77:20" pos:end="77:21">pb</name></expr></argument>, <argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="101:5"><if pos:start="83:5" pos:end="101:5">if<condition pos:start="83:7" pos:end="83:21">( <expr pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:16">title</name><index pos:start="83:17" pos:end="83:19">[<expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>]</index></name></expr> )</condition>

    <block pos:start="85:5" pos:end="101:5">{<block_content pos:start="87:9" pos:end="99:28">

        <decl_stmt pos:start="87:9" pos:end="87:32"><decl pos:start="87:9" pos:end="87:31"><type pos:start="87:9" pos:end="87:11"><name pos:start="87:9" pos:end="87:11">int</name></type> <name pos:start="87:13" pos:end="87:15">pos</name> <init pos:start="87:17" pos:end="87:31">= <expr pos:start="87:19" pos:end="87:31"><call pos:start="87:19" pos:end="87:31"><name pos:start="87:19" pos:end="87:27">url_ftell</name><argument_list pos:start="87:28" pos:end="87:31">(<argument pos:start="87:29" pos:end="87:30"><expr pos:start="87:29" pos:end="87:30"><name pos:start="87:29" pos:end="87:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:24"><expr pos:start="89:9" pos:end="89:23"><call pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:16">put_be32</name><argument_list pos:start="89:17" pos:end="89:23">(<argument pos:start="89:18" pos:end="89:19"><expr pos:start="89:18" pos:end="89:19"><name pos:start="89:18" pos:end="89:19">pb</name></expr></argument>, <argument pos:start="89:22" pos:end="89:22"><expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:26" pos:end="89:35">/* size */</comment>

        <expr_stmt pos:start="91:9" pos:end="91:31"><expr pos:start="91:9" pos:end="91:30"><call pos:start="91:9" pos:end="91:30"><name pos:start="91:9" pos:end="91:15">put_tag</name><argument_list pos:start="91:16" pos:end="91:30">(<argument pos:start="91:17" pos:end="91:18"><expr pos:start="91:17" pos:end="91:18"><name pos:start="91:17" pos:end="91:18">pb</name></expr></argument>, <argument pos:start="91:21" pos:end="91:29"><expr pos:start="91:21" pos:end="91:29"><literal type="string" pos:start="91:21" pos:end="91:29">"\251nam"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:39"><expr pos:start="93:9" pos:end="93:38"><call pos:start="93:9" pos:end="93:38"><name pos:start="93:9" pos:end="93:16">put_be16</name><argument_list pos:start="93:17" pos:end="93:38">(<argument pos:start="93:18" pos:end="93:19"><expr pos:start="93:18" pos:end="93:19"><name pos:start="93:18" pos:end="93:19">pb</name></expr></argument>, <argument pos:start="93:22" pos:end="93:37"><expr pos:start="93:22" pos:end="93:37"><call pos:start="93:22" pos:end="93:37"><name pos:start="93:22" pos:end="93:27">strlen</name><argument_list pos:start="93:28" pos:end="93:37">(<argument pos:start="93:29" pos:end="93:36"><expr pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:36"><name pos:start="93:29" pos:end="93:29">s</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:36">title</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:41" pos:end="93:59">/* string length */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:24"><expr pos:start="95:9" pos:end="95:23"><call pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:16">put_be16</name><argument_list pos:start="95:17" pos:end="95:23">(<argument pos:start="95:18" pos:end="95:19"><expr pos:start="95:18" pos:end="95:19"><name pos:start="95:18" pos:end="95:19">pb</name></expr></argument>, <argument pos:start="95:22" pos:end="95:22"><expr pos:start="95:22" pos:end="95:22"><literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:51"><expr pos:start="97:9" pos:end="97:50"><call pos:start="97:9" pos:end="97:50"><name pos:start="97:9" pos:end="97:18">put_buffer</name><argument_list pos:start="97:19" pos:end="97:50">(<argument pos:start="97:20" pos:end="97:21"><expr pos:start="97:20" pos:end="97:21"><name pos:start="97:20" pos:end="97:21">pb</name></expr></argument>, <argument pos:start="97:24" pos:end="97:31"><expr pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:31"><name pos:start="97:24" pos:end="97:24">s</name><operator pos:start="97:25" pos:end="97:26">-&gt;</operator><name pos:start="97:27" pos:end="97:31">title</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:49"><expr pos:start="97:34" pos:end="97:49"><call pos:start="97:34" pos:end="97:49"><name pos:start="97:34" pos:end="97:39">strlen</name><argument_list pos:start="97:40" pos:end="97:49">(<argument pos:start="97:41" pos:end="97:48"><expr pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:41">s</name><operator pos:start="97:42" pos:end="97:43">-&gt;</operator><name pos:start="97:44" pos:end="97:48">title</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><call pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:18">updateSize</name><argument_list pos:start="99:19" pos:end="99:27">(<argument pos:start="99:20" pos:end="99:21"><expr pos:start="99:20" pos:end="99:21"><name pos:start="99:20" pos:end="99:21">pb</name></expr></argument>, <argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="123:5"><if pos:start="105:5" pos:end="123:5">if<condition pos:start="105:7" pos:end="105:22">( <expr pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:17">author</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>]</index></name></expr> )</condition>

    <block pos:start="107:5" pos:end="123:5">{<block_content pos:start="109:9" pos:end="121:28">

        <decl_stmt pos:start="109:9" pos:end="109:32"><decl pos:start="109:9" pos:end="109:31"><type pos:start="109:9" pos:end="109:11"><name pos:start="109:9" pos:end="109:11">int</name></type> <name pos:start="109:13" pos:end="109:15">pos</name> <init pos:start="109:17" pos:end="109:31">= <expr pos:start="109:19" pos:end="109:31"><call pos:start="109:19" pos:end="109:31"><name pos:start="109:19" pos:end="109:27">url_ftell</name><argument_list pos:start="109:28" pos:end="109:31">(<argument pos:start="109:29" pos:end="109:30"><expr pos:start="109:29" pos:end="109:30"><name pos:start="109:29" pos:end="109:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><call pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:16">put_be32</name><argument_list pos:start="111:17" pos:end="111:23">(<argument pos:start="111:18" pos:end="111:19"><expr pos:start="111:18" pos:end="111:19"><name pos:start="111:18" pos:end="111:19">pb</name></expr></argument>, <argument pos:start="111:22" pos:end="111:22"><expr pos:start="111:22" pos:end="111:22"><literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="111:26" pos:end="111:35">/* size */</comment>

        <expr_stmt pos:start="113:9" pos:end="113:46"><expr pos:start="113:9" pos:end="113:45"><call pos:start="113:9" pos:end="113:45"><name pos:start="113:9" pos:end="113:15">put_tag</name><argument_list pos:start="113:16" pos:end="113:45">(<argument pos:start="113:17" pos:end="113:18"><expr pos:start="113:17" pos:end="113:18"><name pos:start="113:17" pos:end="113:18">pb</name></expr></argument>, <comment type="block" pos:start="113:21" pos:end="113:33">/*"\251aut"*/</comment> <argument pos:start="113:35" pos:end="113:43"><expr pos:start="113:35" pos:end="113:43"><literal type="string" pos:start="113:35" pos:end="113:43">"\251day"</literal></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:16">put_be16</name><argument_list pos:start="115:17" pos:end="115:39">(<argument pos:start="115:18" pos:end="115:19"><expr pos:start="115:18" pos:end="115:19"><name pos:start="115:18" pos:end="115:19">pb</name></expr></argument>, <argument pos:start="115:22" pos:end="115:38"><expr pos:start="115:22" pos:end="115:38"><call pos:start="115:22" pos:end="115:38"><name pos:start="115:22" pos:end="115:27">strlen</name><argument_list pos:start="115:28" pos:end="115:38">(<argument pos:start="115:29" pos:end="115:37"><expr pos:start="115:29" pos:end="115:37"><name pos:start="115:29" pos:end="115:37"><name pos:start="115:29" pos:end="115:29">s</name><operator pos:start="115:30" pos:end="115:31">-&gt;</operator><name pos:start="115:32" pos:end="115:37">author</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="115:42" pos:end="115:60">/* string length */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:24"><expr pos:start="117:9" pos:end="117:23"><call pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:16">put_be16</name><argument_list pos:start="117:17" pos:end="117:23">(<argument pos:start="117:18" pos:end="117:19"><expr pos:start="117:18" pos:end="117:19"><name pos:start="117:18" pos:end="117:19">pb</name></expr></argument>, <argument pos:start="117:22" pos:end="117:22"><expr pos:start="117:22" pos:end="117:22"><literal type="number" pos:start="117:22" pos:end="117:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:53"><expr pos:start="119:9" pos:end="119:52"><call pos:start="119:9" pos:end="119:52"><name pos:start="119:9" pos:end="119:18">put_buffer</name><argument_list pos:start="119:19" pos:end="119:52">(<argument pos:start="119:20" pos:end="119:21"><expr pos:start="119:20" pos:end="119:21"><name pos:start="119:20" pos:end="119:21">pb</name></expr></argument>, <argument pos:start="119:24" pos:end="119:32"><expr pos:start="119:24" pos:end="119:32"><name pos:start="119:24" pos:end="119:32"><name pos:start="119:24" pos:end="119:24">s</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:32">author</name></name></expr></argument>, <argument pos:start="119:35" pos:end="119:51"><expr pos:start="119:35" pos:end="119:51"><call pos:start="119:35" pos:end="119:51"><name pos:start="119:35" pos:end="119:40">strlen</name><argument_list pos:start="119:41" pos:end="119:51">(<argument pos:start="119:42" pos:end="119:50"><expr pos:start="119:42" pos:end="119:50"><name pos:start="119:42" pos:end="119:50"><name pos:start="119:42" pos:end="119:42">s</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:50">author</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:28"><expr pos:start="121:9" pos:end="121:27"><call pos:start="121:9" pos:end="121:27"><name pos:start="121:9" pos:end="121:18">updateSize</name><argument_list pos:start="121:19" pos:end="121:27">(<argument pos:start="121:20" pos:end="121:21"><expr pos:start="121:20" pos:end="121:21"><name pos:start="121:20" pos:end="121:21">pb</name></expr></argument>, <argument pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:26">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="127:5" pos:end="145:5"><if pos:start="127:5" pos:end="145:5">if<condition pos:start="127:7" pos:end="127:23">( <expr pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:21"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:18">comment</name><index pos:start="127:19" pos:end="127:21">[<expr pos:start="127:20" pos:end="127:20"><literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr>]</index></name></expr> )</condition>

    <block pos:start="129:5" pos:end="145:5">{<block_content pos:start="131:9" pos:end="143:28">

        <decl_stmt pos:start="131:9" pos:end="131:32"><decl pos:start="131:9" pos:end="131:31"><type pos:start="131:9" pos:end="131:11"><name pos:start="131:9" pos:end="131:11">int</name></type> <name pos:start="131:13" pos:end="131:15">pos</name> <init pos:start="131:17" pos:end="131:31">= <expr pos:start="131:19" pos:end="131:31"><call pos:start="131:19" pos:end="131:31"><name pos:start="131:19" pos:end="131:27">url_ftell</name><argument_list pos:start="131:28" pos:end="131:31">(<argument pos:start="131:29" pos:end="131:30"><expr pos:start="131:29" pos:end="131:30"><name pos:start="131:29" pos:end="131:30">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:24"><expr pos:start="133:9" pos:end="133:23"><call pos:start="133:9" pos:end="133:23"><name pos:start="133:9" pos:end="133:16">put_be32</name><argument_list pos:start="133:17" pos:end="133:23">(<argument pos:start="133:18" pos:end="133:19"><expr pos:start="133:18" pos:end="133:19"><name pos:start="133:18" pos:end="133:19">pb</name></expr></argument>, <argument pos:start="133:22" pos:end="133:22"><expr pos:start="133:22" pos:end="133:22"><literal type="number" pos:start="133:22" pos:end="133:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="133:26" pos:end="133:35">/* size */</comment>

        <expr_stmt pos:start="135:9" pos:end="135:31"><expr pos:start="135:9" pos:end="135:30"><call pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:15">put_tag</name><argument_list pos:start="135:16" pos:end="135:30">(<argument pos:start="135:17" pos:end="135:18"><expr pos:start="135:17" pos:end="135:18"><name pos:start="135:17" pos:end="135:18">pb</name></expr></argument>, <argument pos:start="135:21" pos:end="135:29"><expr pos:start="135:21" pos:end="135:29"><literal type="string" pos:start="135:21" pos:end="135:29">"\251des"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:41"><expr pos:start="137:9" pos:end="137:40"><call pos:start="137:9" pos:end="137:40"><name pos:start="137:9" pos:end="137:16">put_be16</name><argument_list pos:start="137:17" pos:end="137:40">(<argument pos:start="137:18" pos:end="137:19"><expr pos:start="137:18" pos:end="137:19"><name pos:start="137:18" pos:end="137:19">pb</name></expr></argument>, <argument pos:start="137:22" pos:end="137:39"><expr pos:start="137:22" pos:end="137:39"><call pos:start="137:22" pos:end="137:39"><name pos:start="137:22" pos:end="137:27">strlen</name><argument_list pos:start="137:28" pos:end="137:39">(<argument pos:start="137:29" pos:end="137:38"><expr pos:start="137:29" pos:end="137:38"><name pos:start="137:29" pos:end="137:38"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:38">comment</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:43" pos:end="137:61">/* string length */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:24"><expr pos:start="139:9" pos:end="139:23"><call pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:16">put_be16</name><argument_list pos:start="139:17" pos:end="139:23">(<argument pos:start="139:18" pos:end="139:19"><expr pos:start="139:18" pos:end="139:19"><name pos:start="139:18" pos:end="139:19">pb</name></expr></argument>, <argument pos:start="139:22" pos:end="139:22"><expr pos:start="139:22" pos:end="139:22"><literal type="number" pos:start="139:22" pos:end="139:22">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:55"><expr pos:start="141:9" pos:end="141:54"><call pos:start="141:9" pos:end="141:54"><name pos:start="141:9" pos:end="141:18">put_buffer</name><argument_list pos:start="141:19" pos:end="141:54">(<argument pos:start="141:20" pos:end="141:21"><expr pos:start="141:20" pos:end="141:21"><name pos:start="141:20" pos:end="141:21">pb</name></expr></argument>, <argument pos:start="141:24" pos:end="141:33"><expr pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:33"><name pos:start="141:24" pos:end="141:24">s</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:33">comment</name></name></expr></argument>, <argument pos:start="141:36" pos:end="141:53"><expr pos:start="141:36" pos:end="141:53"><call pos:start="141:36" pos:end="141:53"><name pos:start="141:36" pos:end="141:41">strlen</name><argument_list pos:start="141:42" pos:end="141:53">(<argument pos:start="141:43" pos:end="141:52"><expr pos:start="141:43" pos:end="141:52"><name pos:start="141:43" pos:end="141:52"><name pos:start="141:43" pos:end="141:43">s</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:52">comment</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:28"><expr pos:start="143:9" pos:end="143:27"><call pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:18">updateSize</name><argument_list pos:start="143:19" pos:end="143:27">(<argument pos:start="143:20" pos:end="143:21"><expr pos:start="143:20" pos:end="143:21"><name pos:start="143:20" pos:end="143:21">pb</name></expr></argument>, <argument pos:start="143:24" pos:end="143:26"><expr pos:start="143:24" pos:end="143:26"><name pos:start="143:24" pos:end="143:26">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="149:5" pos:end="149:31">return <expr pos:start="149:12" pos:end="149:30"><call pos:start="149:12" pos:end="149:30"><name pos:start="149:12" pos:end="149:21">updateSize</name><argument_list pos:start="149:22" pos:end="149:30">(<argument pos:start="149:23" pos:end="149:24"><expr pos:start="149:23" pos:end="149:24"><name pos:start="149:23" pos:end="149:24">pb</name></expr></argument>, <argument pos:start="149:27" pos:end="149:29"><expr pos:start="149:27" pos:end="149:29"><name pos:start="149:27" pos:end="149:29">pos</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
