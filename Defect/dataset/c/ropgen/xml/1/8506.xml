<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8506.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">ff_lpc_calc_coefs</name><parameter_list pos:start="1:22" pos:end="11:65">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">LPCContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">s</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:44"><decl pos:start="3:23" pos:end="3:44"><type pos:start="3:23" pos:end="3:44"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">int32_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:44">samples</name></decl></parameter>, <parameter pos:start="3:47" pos:end="3:59"><decl pos:start="3:47" pos:end="3:59"><type pos:start="3:47" pos:end="3:59"><name pos:start="3:47" pos:end="3:49">int</name></type> <name pos:start="3:51" pos:end="3:59">blocksize</name></decl></parameter>, <parameter pos:start="3:62" pos:end="3:74"><decl pos:start="3:62" pos:end="3:74"><type pos:start="3:62" pos:end="3:74"><name pos:start="3:62" pos:end="3:64">int</name></type> <name pos:start="3:66" pos:end="3:74">min_order</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:35"><decl pos:start="5:23" pos:end="5:35"><type pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:25">int</name></type> <name pos:start="5:27" pos:end="5:35">max_order</name></decl></parameter>, <parameter pos:start="5:38" pos:end="5:50"><decl pos:start="5:38" pos:end="5:50"><type pos:start="5:38" pos:end="5:50"><name pos:start="5:38" pos:end="5:40">int</name></type> <name pos:start="5:42" pos:end="5:50">precision</name></decl></parameter>,

                      <parameter pos:start="7:23" pos:end="7:52"><decl pos:start="7:23" pos:end="7:52"><type pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:29">int32_t</name></type> <name pos:start="7:31" pos:end="7:52"><name pos:start="7:31" pos:end="7:35">coefs</name><index pos:start="7:36" pos:end="7:37">[]</index><index pos:start="7:38" pos:end="7:52">[<expr pos:start="7:39" pos:end="7:51"><name pos:start="7:39" pos:end="7:51">MAX_LPC_ORDER</name></expr>]</index></name></decl></parameter>, <parameter pos:start="7:55" pos:end="7:64"><decl pos:start="7:55" pos:end="7:64"><type pos:start="7:55" pos:end="7:64"><name pos:start="7:55" pos:end="7:57">int</name> <modifier pos:start="7:59" pos:end="7:59">*</modifier></type><name pos:start="7:60" pos:end="7:64">shift</name></decl></parameter>,

                      <parameter pos:start="9:23" pos:end="9:45"><decl pos:start="9:23" pos:end="9:45"><type pos:start="9:23" pos:end="9:45"><name pos:start="9:23" pos:end="9:36"><name pos:start="9:23" pos:end="9:26">enum</name> <name pos:start="9:28" pos:end="9:36">FFLPCType</name></name></type> <name pos:start="9:38" pos:end="9:45">lpc_type</name></decl></parameter>, <parameter pos:start="9:48" pos:end="9:61"><decl pos:start="9:48" pos:end="9:61"><type pos:start="9:48" pos:end="9:61"><name pos:start="9:48" pos:end="9:50">int</name></type> <name pos:start="9:52" pos:end="9:61">lpc_passes</name></decl></parameter>,

                      <parameter pos:start="11:23" pos:end="11:33"><decl pos:start="11:23" pos:end="11:33"><type pos:start="11:23" pos:end="11:33"><name pos:start="11:23" pos:end="11:25">int</name></type> <name pos:start="11:27" pos:end="11:33">omethod</name></decl></parameter>, <parameter pos:start="11:36" pos:end="11:48"><decl pos:start="11:36" pos:end="11:48"><type pos:start="11:36" pos:end="11:48"><name pos:start="11:36" pos:end="11:38">int</name></type> <name pos:start="11:40" pos:end="11:48">max_shift</name></decl></parameter>, <parameter pos:start="11:51" pos:end="11:64"><decl pos:start="11:51" pos:end="11:64"><type pos:start="11:51" pos:end="11:64"><name pos:start="11:51" pos:end="11:53">int</name></type> <name pos:start="11:55" pos:end="11:64">zero_shift</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="191:1">{<block_content pos:start="15:5" pos:end="189:21">

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:33"><name pos:start="15:12" pos:end="15:16">autoc</name><index pos:start="15:17" pos:end="15:33">[<expr pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:30">MAX_LPC_ORDER</name><operator pos:start="15:31" pos:end="15:31">+</operator><literal type="number" pos:start="15:32" pos:end="15:32">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:30"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:10">double</name></type> <name pos:start="17:12" pos:end="17:29"><name pos:start="17:12" pos:end="17:14">ref</name><index pos:start="17:15" pos:end="17:29">[<expr pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:28">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:45"><decl pos:start="19:5" pos:end="19:44"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:44"><name pos:start="19:12" pos:end="19:14">lpc</name><index pos:start="19:15" pos:end="19:29">[<expr pos:start="19:16" pos:end="19:28"><name pos:start="19:16" pos:end="19:28">MAX_LPC_ORDER</name></expr>]</index><index pos:start="19:30" pos:end="19:44">[<expr pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:43">MAX_LPC_ORDER</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:9"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:9">i</name></decl>, <decl pos:start="21:12" pos:end="21:12"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:12" pos:end="21:12">j</name></decl>, <decl pos:start="21:15" pos:end="21:22"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:15" pos:end="21:18">pass</name> <init pos:start="21:20" pos:end="21:22">= <expr pos:start="21:22" pos:end="21:22"><literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:18"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:17">opt_order</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:41"><expr pos:start="27:5" pos:end="29:40"><call pos:start="27:5" pos:end="29:40"><name pos:start="27:5" pos:end="27:14">av_assert2</name><argument_list pos:start="27:15" pos:end="29:40">(<argument pos:start="27:16" pos:end="29:39"><expr pos:start="27:16" pos:end="29:39"><name pos:start="27:16" pos:end="27:24">max_order</name> <operator pos:start="27:26" pos:end="27:27">&gt;=</operator> <name pos:start="27:29" pos:end="27:41">MIN_LPC_ORDER</name> <operator pos:start="27:43" pos:end="27:44">&amp;&amp;</operator> <name pos:start="27:46" pos:end="27:54">max_order</name> <operator pos:start="27:56" pos:end="27:57">&lt;=</operator> <name pos:start="27:59" pos:end="27:71">MAX_LPC_ORDER</name> <operator pos:start="27:73" pos:end="27:74">&amp;&amp;</operator>

           <name pos:start="29:12" pos:end="29:19">lpc_type</name> <operator pos:start="29:21" pos:end="29:21">&gt;</operator> <name pos:start="29:23" pos:end="29:39">FF_LPC_TYPE_FIXED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:55">/* reinit LPC context if parameters have changed */</comment>

    <if_stmt pos:start="35:5" pos:end="43:5"><if pos:start="35:5" pos:end="43:5">if <condition pos:start="35:8" pos:end="37:33">(<expr pos:start="35:9" pos:end="37:32"><name pos:start="35:9" pos:end="35:17">blocksize</name> <operator pos:start="35:19" pos:end="35:20">!=</operator> <name pos:start="35:22" pos:end="35:33"><name pos:start="35:22" pos:end="35:22">s</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:33">blocksize</name></name> <operator pos:start="35:35" pos:end="35:36">||</operator> <name pos:start="35:38" pos:end="35:46">max_order</name> <operator pos:start="35:48" pos:end="35:49">!=</operator> <name pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:51">s</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:62">max_order</name></name> <operator pos:start="35:64" pos:end="35:65">||</operator>

        <name pos:start="37:9" pos:end="37:16">lpc_type</name>  <operator pos:start="37:19" pos:end="37:20">!=</operator> <name pos:start="37:22" pos:end="37:32"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:32">lpc_type</name></name></expr>)</condition> <block pos:start="37:35" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:55">

        <expr_stmt pos:start="39:9" pos:end="39:22"><expr pos:start="39:9" pos:end="39:21"><call pos:start="39:9" pos:end="39:21"><name pos:start="39:9" pos:end="39:18">ff_lpc_end</name><argument_list pos:start="39:19" pos:end="39:21">(<argument pos:start="39:20" pos:end="39:20"><expr pos:start="39:20" pos:end="39:20"><name pos:start="39:20" pos:end="39:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:55"><expr pos:start="41:9" pos:end="41:54"><call pos:start="41:9" pos:end="41:54"><name pos:start="41:9" pos:end="41:19">ff_lpc_init</name><argument_list pos:start="41:20" pos:end="41:54">(<argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><name pos:start="41:21" pos:end="41:21">s</name></expr></argument>, <argument pos:start="41:24" pos:end="41:32"><expr pos:start="41:24" pos:end="41:32"><name pos:start="41:24" pos:end="41:32">blocksize</name></expr></argument>, <argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:43">max_order</name></expr></argument>, <argument pos:start="41:46" pos:end="41:53"><expr pos:start="41:46" pos:end="41:53"><name pos:start="41:46" pos:end="41:53">lpc_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="49:23"><if pos:start="47:5" pos:end="49:23">if<condition pos:start="47:7" pos:end="47:23">(<expr pos:start="47:8" pos:end="47:22"><name pos:start="47:8" pos:end="47:17">lpc_passes</name> <operator pos:start="47:19" pos:end="47:20">&lt;=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:23"><block_content pos:start="49:9" pos:end="49:23">

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:18">lpc_passes</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="53:5" pos:end="75:5"><if pos:start="53:5" pos:end="75:5">if <condition pos:start="53:8" pos:end="53:97">(<expr pos:start="53:9" pos:end="53:96"><name pos:start="53:9" pos:end="53:16">lpc_type</name> <operator pos:start="53:18" pos:end="53:19">==</operator> <name pos:start="53:21" pos:end="53:40">FF_LPC_TYPE_LEVINSON</name> <operator pos:start="53:42" pos:end="53:43">||</operator> <operator pos:start="53:45" pos:end="53:45">(</operator><name pos:start="53:46" pos:end="53:53">lpc_type</name> <operator pos:start="53:55" pos:end="53:56">==</operator> <name pos:start="53:58" pos:end="53:77">FF_LPC_TYPE_CHOLESKY</name> <operator pos:start="53:79" pos:end="53:80">&amp;&amp;</operator> <name pos:start="53:82" pos:end="53:91">lpc_passes</name> <operator pos:start="53:93" pos:end="53:93">&gt;</operator> <literal type="number" pos:start="53:95" pos:end="53:95">1</literal><operator pos:start="53:96" pos:end="53:96">)</operator></expr>)</condition> <block pos:start="53:99" pos:end="75:5">{<block_content pos:start="55:9" pos:end="73:15">

        <expr_stmt pos:start="55:9" pos:end="55:75"><expr pos:start="55:9" pos:end="55:74"><call pos:start="55:9" pos:end="55:74"><name pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:33">lpc_apply_welch_window</name></name><argument_list pos:start="55:34" pos:end="55:74">(<argument pos:start="55:35" pos:end="55:41"><expr pos:start="55:35" pos:end="55:41"><name pos:start="55:35" pos:end="55:41">samples</name></expr></argument>, <argument pos:start="55:44" pos:end="55:52"><expr pos:start="55:44" pos:end="55:52"><name pos:start="55:44" pos:end="55:52">blocksize</name></expr></argument>, <argument pos:start="55:55" pos:end="55:73"><expr pos:start="55:55" pos:end="55:73"><name pos:start="55:55" pos:end="55:73"><name pos:start="55:55" pos:end="55:55">s</name><operator pos:start="55:56" pos:end="55:57">-&gt;</operator><name pos:start="55:58" pos:end="55:73">windowed_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:82"><expr pos:start="59:9" pos:end="59:81"><call pos:start="59:9" pos:end="59:81"><name pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:31">lpc_compute_autocorr</name></name><argument_list pos:start="59:32" pos:end="59:81">(<argument pos:start="59:33" pos:end="59:51"><expr pos:start="59:33" pos:end="59:51"><name pos:start="59:33" pos:end="59:51"><name pos:start="59:33" pos:end="59:33">s</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:51">windowed_samples</name></name></expr></argument>, <argument pos:start="59:54" pos:end="59:62"><expr pos:start="59:54" pos:end="59:62"><name pos:start="59:54" pos:end="59:62">blocksize</name></expr></argument>, <argument pos:start="59:65" pos:end="59:73"><expr pos:start="59:65" pos:end="59:73"><name pos:start="59:65" pos:end="59:73">max_order</name></expr></argument>, <argument pos:start="59:76" pos:end="59:80"><expr pos:start="59:76" pos:end="59:80"><name pos:start="59:76" pos:end="59:80">autoc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:77"><expr pos:start="63:9" pos:end="63:76"><call pos:start="63:9" pos:end="63:76"><name pos:start="63:9" pos:end="63:25">compute_lpc_coefs</name><argument_list pos:start="63:26" pos:end="63:76">(<argument pos:start="63:27" pos:end="63:31"><expr pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:31">autoc</name></expr></argument>, <argument pos:start="63:34" pos:end="63:42"><expr pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:42">max_order</name></expr></argument>, <argument pos:start="63:45" pos:end="63:54"><expr pos:start="63:45" pos:end="63:54"><operator pos:start="63:45" pos:end="63:45">&amp;</operator><name pos:start="63:46" pos:end="63:54"><name pos:start="63:46" pos:end="63:48">lpc</name><index pos:start="63:49" pos:end="63:51">[<expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr>]</index><index pos:start="63:52" pos:end="63:54">[<expr pos:start="63:53" pos:end="63:53"><literal type="number" pos:start="63:53" pos:end="63:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:57" pos:end="63:69"><expr pos:start="63:57" pos:end="63:69"><name pos:start="63:57" pos:end="63:69">MAX_LPC_ORDER</name></expr></argument>, <argument pos:start="63:72" pos:end="63:72"><expr pos:start="63:72" pos:end="63:72"><literal type="number" pos:start="63:72" pos:end="63:72">0</literal></expr></argument>, <argument pos:start="63:75" pos:end="63:75"><expr pos:start="63:75" pos:end="63:75"><literal type="number" pos:start="63:75" pos:end="63:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="67:9" pos:end="69:37">for<control pos:start="67:12" pos:end="67:34">(<init pos:start="67:13" pos:end="67:16"><expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:13">i</name><operator pos:start="67:14" pos:end="67:14">=</operator><literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>;</init> <condition pos:start="67:18" pos:end="67:29"><expr pos:start="67:18" pos:end="67:28"><name pos:start="67:18" pos:end="67:18">i</name><operator pos:start="67:19" pos:end="67:19">&lt;</operator><name pos:start="67:20" pos:end="67:28">max_order</name></expr>;</condition> <incr pos:start="67:31" pos:end="67:33"><expr pos:start="67:31" pos:end="67:33"><name pos:start="67:31" pos:end="67:31">i</name><operator pos:start="67:32" pos:end="67:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:13" pos:end="69:37"><block_content pos:start="69:13" pos:end="69:37">

            <expr_stmt pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:36"><name pos:start="69:13" pos:end="69:18"><name pos:start="69:13" pos:end="69:15">ref</name><index pos:start="69:16" pos:end="69:18">[<expr pos:start="69:17" pos:end="69:17"><name pos:start="69:17" pos:end="69:17">i</name></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:36"><name pos:start="69:22" pos:end="69:25">fabs</name><argument_list pos:start="69:26" pos:end="69:36">(<argument pos:start="69:27" pos:end="69:35"><expr pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:29">lpc</name><index pos:start="69:30" pos:end="69:32">[<expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">i</name></expr>]</index><index pos:start="69:33" pos:end="69:35">[<expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="73:9" pos:end="73:15"><expr pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:12">pass</name><operator pos:start="73:13" pos:end="73:14">++</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="161:5"><if pos:start="79:5" pos:end="161:5">if <condition pos:start="79:8" pos:end="79:41">(<expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:16">lpc_type</name> <operator pos:start="79:18" pos:end="79:19">==</operator> <name pos:start="79:21" pos:end="79:40">FF_LPC_TYPE_CHOLESKY</name></expr>)</condition> <block pos:start="79:43" pos:end="161:5">{<block_content pos:start="81:9" pos:end="159:39">

        <decl_stmt pos:start="81:9" pos:end="81:22"><decl pos:start="81:9" pos:end="81:21"><type pos:start="81:9" pos:end="81:16"><name pos:start="81:9" pos:end="81:16">LLSModel</name></type> <name pos:start="81:18" pos:end="81:21"><name pos:start="81:18" pos:end="81:18">m</name><index pos:start="81:19" pos:end="81:21">[<expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">2</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:69"><expr pos:start="83:9" pos:end="83:68"><call pos:start="83:9" pos:end="83:68"><name pos:start="83:9" pos:end="83:21">LOCAL_ALIGNED</name><argument_list pos:start="83:22" pos:end="83:68">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><literal type="number" pos:start="83:23" pos:end="83:24">32</literal></expr></argument>, <argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:32">double</name></expr></argument>, <argument pos:start="83:35" pos:end="83:37"><expr pos:start="83:35" pos:end="83:37"><name pos:start="83:35" pos:end="83:37">var</name></expr></argument>, <argument pos:start="83:40" pos:end="83:67"><expr pos:start="83:40" pos:end="83:67"><index pos:start="83:40" pos:end="83:67">[<expr pos:start="83:41" pos:end="83:66"><call pos:start="83:41" pos:end="83:66"><name pos:start="83:41" pos:end="83:47">FFALIGN</name><argument_list pos:start="83:48" pos:end="83:66">(<argument pos:start="83:49" pos:end="83:63"><expr pos:start="83:49" pos:end="83:63"><name pos:start="83:49" pos:end="83:61">MAX_LPC_ORDER</name><operator pos:start="83:62" pos:end="83:62">+</operator><literal type="number" pos:start="83:63" pos:end="83:63">1</literal></expr></argument>,<argument pos:start="83:65" pos:end="83:65"><expr pos:start="83:65" pos:end="83:65"><literal type="number" pos:start="83:65" pos:end="83:65">4</literal></expr></argument>)</argument_list></call></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:33"><decl pos:start="85:9" pos:end="85:32"><type pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:14">double</name></type> <name pos:start="85:16" pos:end="85:24">av_uninit</name><argument_list pos:start="85:25" pos:end="85:32">(<argument pos:start="85:26" pos:end="85:31"><expr pos:start="85:26" pos:end="85:31"><name pos:start="85:26" pos:end="85:31">weight</name></expr></argument>)</argument_list></decl>;</decl_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:64"><expr pos:start="87:9" pos:end="87:63"><call pos:start="87:9" pos:end="87:63"><name pos:start="87:9" pos:end="87:14">memset</name><argument_list pos:start="87:15" pos:end="87:63">(<argument pos:start="87:16" pos:end="87:18"><expr pos:start="87:16" pos:end="87:18"><name pos:start="87:16" pos:end="87:18">var</name></expr></argument>, <argument pos:start="87:21" pos:end="87:21"><expr pos:start="87:21" pos:end="87:21"><literal type="number" pos:start="87:21" pos:end="87:21">0</literal></expr></argument>, <argument pos:start="87:24" pos:end="87:62"><expr pos:start="87:24" pos:end="87:62"><call pos:start="87:24" pos:end="87:49"><name pos:start="87:24" pos:end="87:30">FFALIGN</name><argument_list pos:start="87:31" pos:end="87:49">(<argument pos:start="87:32" pos:end="87:46"><expr pos:start="87:32" pos:end="87:46"><name pos:start="87:32" pos:end="87:44">MAX_LPC_ORDER</name><operator pos:start="87:45" pos:end="87:45">+</operator><literal type="number" pos:start="87:46" pos:end="87:46">1</literal></expr></argument>,<argument pos:start="87:48" pos:end="87:48"><expr pos:start="87:48" pos:end="87:48"><literal type="number" pos:start="87:48" pos:end="87:48">4</literal></expr></argument>)</argument_list></call><operator pos:start="87:50" pos:end="87:50">*</operator><sizeof pos:start="87:51" pos:end="87:62">sizeof<argument_list pos:start="87:57" pos:end="87:62">(<argument pos:start="87:58" pos:end="87:61"><expr pos:start="87:58" pos:end="87:61"><operator pos:start="87:58" pos:end="87:58">*</operator><name pos:start="87:59" pos:end="87:61">var</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="91:9" pos:end="93:62">for<control pos:start="91:12" pos:end="91:34">(<init pos:start="91:13" pos:end="91:16"><expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:13">j</name><operator pos:start="91:14" pos:end="91:14">=</operator><literal type="number" pos:start="91:15" pos:end="91:15">0</literal></expr>;</init> <condition pos:start="91:18" pos:end="91:29"><expr pos:start="91:18" pos:end="91:28"><name pos:start="91:18" pos:end="91:18">j</name><operator pos:start="91:19" pos:end="91:19">&lt;</operator><name pos:start="91:20" pos:end="91:28">max_order</name></expr>;</condition> <incr pos:start="91:31" pos:end="91:33"><expr pos:start="91:31" pos:end="91:33"><name pos:start="91:31" pos:end="91:31">j</name><operator pos:start="91:32" pos:end="91:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="93:13" pos:end="93:62"><block_content pos:start="93:13" pos:end="93:62">

            <expr_stmt pos:start="93:13" pos:end="93:62"><expr pos:start="93:13" pos:end="93:61"><name pos:start="93:13" pos:end="93:16"><name pos:start="93:13" pos:end="93:13">m</name><index pos:start="93:14" pos:end="93:16">[<expr pos:start="93:15" pos:end="93:15"><literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>]</index></name><operator pos:start="93:17" pos:end="93:17">.</operator><name pos:start="93:18" pos:end="93:38"><name pos:start="93:18" pos:end="93:22">coeff</name><index pos:start="93:23" pos:end="93:35">[<expr pos:start="93:24" pos:end="93:34"><name pos:start="93:24" pos:end="93:32">max_order</name><operator pos:start="93:33" pos:end="93:33">-</operator><literal type="number" pos:start="93:34" pos:end="93:34">1</literal></expr>]</index><index pos:start="93:36" pos:end="93:38">[<expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">j</name></expr>]</index></name> <operator pos:start="93:40" pos:end="93:40">=</operator> <operator pos:start="93:42" pos:end="93:42">-</operator><name pos:start="93:43" pos:end="93:61"><name pos:start="93:43" pos:end="93:45">lpc</name><index pos:start="93:46" pos:end="93:58">[<expr pos:start="93:47" pos:end="93:57"><name pos:start="93:47" pos:end="93:55">max_order</name><operator pos:start="93:56" pos:end="93:56">-</operator><literal type="number" pos:start="93:57" pos:end="93:57">1</literal></expr>]</index><index pos:start="93:59" pos:end="93:61">[<expr pos:start="93:60" pos:end="93:60"><name pos:start="93:60" pos:end="93:60">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="97:9" pos:end="143:9">for<control pos:start="97:12" pos:end="97:38">(<init pos:start="97:13" pos:end="97:13">;</init> <condition pos:start="97:15" pos:end="97:30"><expr pos:start="97:15" pos:end="97:29"><name pos:start="97:15" pos:end="97:18">pass</name><operator pos:start="97:19" pos:end="97:19">&lt;</operator><name pos:start="97:20" pos:end="97:29">lpc_passes</name></expr>;</condition> <incr pos:start="97:32" pos:end="97:37"><expr pos:start="97:32" pos:end="97:37"><name pos:start="97:32" pos:end="97:35">pass</name><operator pos:start="97:36" pos:end="97:37">++</operator></expr></incr>)</control><block pos:start="97:39" pos:end="143:9">{<block_content pos:start="99:13" pos:end="141:51">

            <expr_stmt pos:start="99:13" pos:end="99:51"><expr pos:start="99:13" pos:end="99:50"><call pos:start="99:13" pos:end="99:50"><name pos:start="99:13" pos:end="99:27">avpriv_init_lls</name><argument_list pos:start="99:28" pos:end="99:50">(<argument pos:start="99:29" pos:end="99:38"><expr pos:start="99:29" pos:end="99:38"><operator pos:start="99:29" pos:end="99:29">&amp;</operator><name pos:start="99:30" pos:end="99:38"><name pos:start="99:30" pos:end="99:30">m</name><index pos:start="99:31" pos:end="99:38">[<expr pos:start="99:32" pos:end="99:37"><name pos:start="99:32" pos:end="99:35">pass</name><operator pos:start="99:36" pos:end="99:36">&amp;</operator><literal type="number" pos:start="99:37" pos:end="99:37">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:41" pos:end="99:49"><expr pos:start="99:41" pos:end="99:49"><name pos:start="99:41" pos:end="99:49">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="103:13" pos:end="103:21"><expr pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:18">weight</name><operator pos:start="103:19" pos:end="103:19">=</operator><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</expr_stmt>

            <for pos:start="105:13" pos:end="139:13">for<control pos:start="105:16" pos:end="105:46">(<init pos:start="105:17" pos:end="105:28"><expr pos:start="105:17" pos:end="105:27"><name pos:start="105:17" pos:end="105:17">i</name><operator pos:start="105:18" pos:end="105:18">=</operator><name pos:start="105:19" pos:end="105:27">max_order</name></expr>;</init> <condition pos:start="105:30" pos:end="105:41"><expr pos:start="105:30" pos:end="105:40"><name pos:start="105:30" pos:end="105:30">i</name><operator pos:start="105:31" pos:end="105:31">&lt;</operator><name pos:start="105:32" pos:end="105:40">blocksize</name></expr>;</condition> <incr pos:start="105:43" pos:end="105:45"><expr pos:start="105:43" pos:end="105:45"><name pos:start="105:43" pos:end="105:43">i</name><operator pos:start="105:44" pos:end="105:45">++</operator></expr></incr>)</control><block pos:start="105:47" pos:end="139:13">{<block_content pos:start="107:17" pos:end="137:54">

                <for pos:start="107:17" pos:end="109:41">for<control pos:start="107:20" pos:end="107:43">(<init pos:start="107:21" pos:end="107:24"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:21">j</name><operator pos:start="107:22" pos:end="107:22">=</operator><literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>;</init> <condition pos:start="107:26" pos:end="107:38"><expr pos:start="107:26" pos:end="107:37"><name pos:start="107:26" pos:end="107:26">j</name><operator pos:start="107:27" pos:end="107:28">&lt;=</operator><name pos:start="107:29" pos:end="107:37">max_order</name></expr>;</condition> <incr pos:start="107:40" pos:end="107:42"><expr pos:start="107:40" pos:end="107:42"><name pos:start="107:40" pos:end="107:40">j</name><operator pos:start="107:41" pos:end="107:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="109:21" pos:end="109:41"><block_content pos:start="109:21" pos:end="109:41">

                    <expr_stmt pos:start="109:21" pos:end="109:41"><expr pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:26"><name pos:start="109:21" pos:end="109:23">var</name><index pos:start="109:24" pos:end="109:26">[<expr pos:start="109:25" pos:end="109:25"><name pos:start="109:25" pos:end="109:25">j</name></expr>]</index></name><operator pos:start="109:27" pos:end="109:27">=</operator> <name pos:start="109:29" pos:end="109:40"><name pos:start="109:29" pos:end="109:35">samples</name><index pos:start="109:36" pos:end="109:40">[<expr pos:start="109:37" pos:end="109:39"><name pos:start="109:37" pos:end="109:37">i</name><operator pos:start="109:38" pos:end="109:38">-</operator><name pos:start="109:39" pos:end="109:39">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                <if_stmt pos:start="113:17" pos:end="133:29"><if pos:start="113:17" pos:end="131:17">if<condition pos:start="113:19" pos:end="113:24">(<expr pos:start="113:20" pos:end="113:23"><name pos:start="113:20" pos:end="113:23">pass</name></expr>)</condition><block pos:start="113:25" pos:end="131:17">{<block_content pos:start="115:21" pos:end="129:34">

                    <decl_stmt pos:start="115:21" pos:end="115:43"><decl pos:start="115:21" pos:end="115:31"><type pos:start="115:21" pos:end="115:26"><name pos:start="115:21" pos:end="115:26">double</name></type> <name pos:start="115:28" pos:end="115:31">eval</name></decl>, <decl pos:start="115:34" pos:end="115:36"><type ref="prev" pos:start="115:21" pos:end="115:26"/><name pos:start="115:34" pos:end="115:36">inv</name></decl>, <decl pos:start="115:39" pos:end="115:42"><type ref="prev" pos:start="115:21" pos:end="115:26"/><name pos:start="115:39" pos:end="115:42">rinv</name></decl>;</decl_stmt>

                    <expr_stmt pos:start="117:21" pos:end="117:89"><expr pos:start="117:21" pos:end="117:88"><name pos:start="117:21" pos:end="117:24">eval</name><operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:39"><name pos:start="117:27" pos:end="117:27">m</name><index pos:start="117:28" pos:end="117:39">[<expr pos:start="117:29" pos:end="117:38"><operator pos:start="117:29" pos:end="117:29">(</operator><name pos:start="117:30" pos:end="117:33">pass</name><operator pos:start="117:34" pos:end="117:34">-</operator><literal type="number" pos:start="117:35" pos:end="117:35">1</literal><operator pos:start="117:36" pos:end="117:36">)</operator><operator pos:start="117:37" pos:end="117:37">&amp;</operator><literal type="number" pos:start="117:38" pos:end="117:38">1</literal></expr>]</index></name><operator pos:start="117:40" pos:end="117:40">.</operator><call pos:start="117:41" pos:end="117:88"><name pos:start="117:41" pos:end="117:52">evaluate_lls</name><argument_list pos:start="117:53" pos:end="117:88">(<argument pos:start="117:54" pos:end="117:67"><expr pos:start="117:54" pos:end="117:67"><operator pos:start="117:54" pos:end="117:54">&amp;</operator><name pos:start="117:55" pos:end="117:67"><name pos:start="117:55" pos:end="117:55">m</name><index pos:start="117:56" pos:end="117:67">[<expr pos:start="117:57" pos:end="117:66"><operator pos:start="117:57" pos:end="117:57">(</operator><name pos:start="117:58" pos:end="117:61">pass</name><operator pos:start="117:62" pos:end="117:62">-</operator><literal type="number" pos:start="117:63" pos:end="117:63">1</literal><operator pos:start="117:64" pos:end="117:64">)</operator><operator pos:start="117:65" pos:end="117:65">&amp;</operator><literal type="number" pos:start="117:66" pos:end="117:66">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="117:70" pos:end="117:74"><expr pos:start="117:70" pos:end="117:74"><name pos:start="117:70" pos:end="117:72">var</name><operator pos:start="117:73" pos:end="117:73">+</operator><literal type="number" pos:start="117:74" pos:end="117:74">1</literal></expr></argument>, <argument pos:start="117:77" pos:end="117:87"><expr pos:start="117:77" pos:end="117:87"><name pos:start="117:77" pos:end="117:85">max_order</name><operator pos:start="117:86" pos:end="117:86">-</operator><literal type="number" pos:start="117:87" pos:end="117:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="119:21" pos:end="119:60"><expr pos:start="119:21" pos:end="119:59"><name pos:start="119:21" pos:end="119:24">eval</name><operator pos:start="119:25" pos:end="119:25">=</operator> <operator pos:start="119:27" pos:end="119:27">(</operator><literal type="number" pos:start="119:28" pos:end="119:30">512</literal><operator pos:start="119:31" pos:end="119:32">&gt;&gt;</operator><name pos:start="119:33" pos:end="119:36">pass</name><operator pos:start="119:37" pos:end="119:37">)</operator> <operator pos:start="119:39" pos:end="119:39">+</operator> <call pos:start="119:41" pos:end="119:59"><name pos:start="119:41" pos:end="119:44">fabs</name><argument_list pos:start="119:45" pos:end="119:59">(<argument pos:start="119:46" pos:end="119:58"><expr pos:start="119:46" pos:end="119:58"><name pos:start="119:46" pos:end="119:49">eval</name> <operator pos:start="119:51" pos:end="119:51">-</operator> <name pos:start="119:53" pos:end="119:58"><name pos:start="119:53" pos:end="119:55">var</name><index pos:start="119:56" pos:end="119:58">[<expr pos:start="119:57" pos:end="119:57"><literal type="number" pos:start="119:57" pos:end="119:57">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:33"><expr pos:start="121:21" pos:end="121:32"><name pos:start="121:21" pos:end="121:23">inv</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <literal type="number" pos:start="121:27" pos:end="121:27">1</literal><operator pos:start="121:28" pos:end="121:28">/</operator><name pos:start="121:29" pos:end="121:32">eval</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:37"><expr pos:start="123:21" pos:end="123:36"><name pos:start="123:21" pos:end="123:24">rinv</name> <operator pos:start="123:26" pos:end="123:26">=</operator> <call pos:start="123:28" pos:end="123:36"><name pos:start="123:28" pos:end="123:31">sqrt</name><argument_list pos:start="123:32" pos:end="123:36">(<argument pos:start="123:33" pos:end="123:35"><expr pos:start="123:33" pos:end="123:35"><name pos:start="123:33" pos:end="123:35">inv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <for pos:start="125:21" pos:end="127:39">for<control pos:start="125:24" pos:end="125:47">(<init pos:start="125:25" pos:end="125:28"><expr pos:start="125:25" pos:end="125:27"><name pos:start="125:25" pos:end="125:25">j</name><operator pos:start="125:26" pos:end="125:26">=</operator><literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr>;</init> <condition pos:start="125:30" pos:end="125:42"><expr pos:start="125:30" pos:end="125:41"><name pos:start="125:30" pos:end="125:30">j</name><operator pos:start="125:31" pos:end="125:32">&lt;=</operator><name pos:start="125:33" pos:end="125:41">max_order</name></expr>;</condition> <incr pos:start="125:44" pos:end="125:46"><expr pos:start="125:44" pos:end="125:46"><name pos:start="125:44" pos:end="125:44">j</name><operator pos:start="125:45" pos:end="125:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:25" pos:end="127:39"><block_content pos:start="127:25" pos:end="127:39">

                        <expr_stmt pos:start="127:25" pos:end="127:39"><expr pos:start="127:25" pos:end="127:38"><name pos:start="127:25" pos:end="127:30"><name pos:start="127:25" pos:end="127:27">var</name><index pos:start="127:28" pos:end="127:30">[<expr pos:start="127:29" pos:end="127:29"><name pos:start="127:29" pos:end="127:29">j</name></expr>]</index></name> <operator pos:start="127:32" pos:end="127:33">*=</operator> <name pos:start="127:35" pos:end="127:38">rinv</name></expr>;</expr_stmt></block_content></block></for>

                    <expr_stmt pos:start="129:21" pos:end="129:34"><expr pos:start="129:21" pos:end="129:33"><name pos:start="129:21" pos:end="129:26">weight</name> <operator pos:start="129:28" pos:end="129:29">+=</operator> <name pos:start="129:31" pos:end="129:33">inv</name></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="131:18" pos:end="133:29">else<block type="pseudo" pos:start="133:21" pos:end="133:29"><block_content pos:start="133:21" pos:end="133:29">

                    <expr_stmt pos:start="133:21" pos:end="133:29"><expr pos:start="133:21" pos:end="133:28"><name pos:start="133:21" pos:end="133:26">weight</name><operator pos:start="133:27" pos:end="133:28">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="137:17" pos:end="137:54"><expr pos:start="137:17" pos:end="137:53"><name pos:start="137:17" pos:end="137:25"><name pos:start="137:17" pos:end="137:17">m</name><index pos:start="137:18" pos:end="137:25">[<expr pos:start="137:19" pos:end="137:24"><name pos:start="137:19" pos:end="137:22">pass</name><operator pos:start="137:23" pos:end="137:23">&amp;</operator><literal type="number" pos:start="137:24" pos:end="137:24">1</literal></expr>]</index></name><operator pos:start="137:26" pos:end="137:26">.</operator><call pos:start="137:27" pos:end="137:53"><name pos:start="137:27" pos:end="137:36">update_lls</name><argument_list pos:start="137:37" pos:end="137:53">(<argument pos:start="137:38" pos:end="137:47"><expr pos:start="137:38" pos:end="137:47"><operator pos:start="137:38" pos:end="137:38">&amp;</operator><name pos:start="137:39" pos:end="137:47"><name pos:start="137:39" pos:end="137:39">m</name><index pos:start="137:40" pos:end="137:47">[<expr pos:start="137:41" pos:end="137:46"><name pos:start="137:41" pos:end="137:44">pass</name><operator pos:start="137:45" pos:end="137:45">&amp;</operator><literal type="number" pos:start="137:46" pos:end="137:46">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="137:50" pos:end="137:52"><expr pos:start="137:50" pos:end="137:52"><name pos:start="137:50" pos:end="137:52">var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="141:13" pos:end="141:51"><expr pos:start="141:13" pos:end="141:50"><call pos:start="141:13" pos:end="141:50"><name pos:start="141:13" pos:end="141:28">avpriv_solve_lls</name><argument_list pos:start="141:29" pos:end="141:50">(<argument pos:start="141:30" pos:end="141:39"><expr pos:start="141:30" pos:end="141:39"><operator pos:start="141:30" pos:end="141:30">&amp;</operator><name pos:start="141:31" pos:end="141:39"><name pos:start="141:31" pos:end="141:31">m</name><index pos:start="141:32" pos:end="141:39">[<expr pos:start="141:33" pos:end="141:38"><name pos:start="141:33" pos:end="141:36">pass</name><operator pos:start="141:37" pos:end="141:37">&amp;</operator><literal type="number" pos:start="141:38" pos:end="141:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:42" pos:end="141:46"><expr pos:start="141:42" pos:end="141:46"><literal type="number" pos:start="141:42" pos:end="141:46">0.001</literal></expr></argument>, <argument pos:start="141:49" pos:end="141:49"><expr pos:start="141:49" pos:end="141:49"><literal type="number" pos:start="141:49" pos:end="141:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="147:9" pos:end="155:9">for<control pos:start="147:12" pos:end="147:34">(<init pos:start="147:13" pos:end="147:16"><expr pos:start="147:13" pos:end="147:15"><name pos:start="147:13" pos:end="147:13">i</name><operator pos:start="147:14" pos:end="147:14">=</operator><literal type="number" pos:start="147:15" pos:end="147:15">0</literal></expr>;</init> <condition pos:start="147:18" pos:end="147:29"><expr pos:start="147:18" pos:end="147:28"><name pos:start="147:18" pos:end="147:18">i</name><operator pos:start="147:19" pos:end="147:19">&lt;</operator><name pos:start="147:20" pos:end="147:28">max_order</name></expr>;</condition> <incr pos:start="147:31" pos:end="147:33"><expr pos:start="147:31" pos:end="147:33"><name pos:start="147:31" pos:end="147:31">i</name><operator pos:start="147:32" pos:end="147:33">++</operator></expr></incr>)</control><block pos:start="147:35" pos:end="155:9">{<block_content pos:start="149:13" pos:end="153:94">

            <for pos:start="149:13" pos:end="151:53">for<control pos:start="149:16" pos:end="149:38">(<init pos:start="149:17" pos:end="149:20"><expr pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:17">j</name><operator pos:start="149:18" pos:end="149:18">=</operator><literal type="number" pos:start="149:19" pos:end="149:19">0</literal></expr>;</init> <condition pos:start="149:22" pos:end="149:33"><expr pos:start="149:22" pos:end="149:32"><name pos:start="149:22" pos:end="149:22">j</name><operator pos:start="149:23" pos:end="149:23">&lt;</operator><name pos:start="149:24" pos:end="149:32">max_order</name></expr>;</condition> <incr pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><name pos:start="149:35" pos:end="149:35">j</name><operator pos:start="149:36" pos:end="149:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:17" pos:end="151:53"><block_content pos:start="151:17" pos:end="151:53">

                <expr_stmt pos:start="151:17" pos:end="151:53"><expr pos:start="151:17" pos:end="151:52"><name pos:start="151:17" pos:end="151:25"><name pos:start="151:17" pos:end="151:19">lpc</name><index pos:start="151:20" pos:end="151:22">[<expr pos:start="151:21" pos:end="151:21"><name pos:start="151:21" pos:end="151:21">i</name></expr>]</index><index pos:start="151:23" pos:end="151:25">[<expr pos:start="151:24" pos:end="151:24"><name pos:start="151:24" pos:end="151:24">j</name></expr>]</index></name><operator pos:start="151:26" pos:end="151:26">=</operator><operator pos:start="151:27" pos:end="151:27">-</operator><name pos:start="151:28" pos:end="151:40"><name pos:start="151:28" pos:end="151:28">m</name><index pos:start="151:29" pos:end="151:40">[<expr pos:start="151:30" pos:end="151:39"><operator pos:start="151:30" pos:end="151:30">(</operator><name pos:start="151:31" pos:end="151:34">pass</name><operator pos:start="151:35" pos:end="151:35">-</operator><literal type="number" pos:start="151:36" pos:end="151:36">1</literal><operator pos:start="151:37" pos:end="151:37">)</operator><operator pos:start="151:38" pos:end="151:38">&amp;</operator><literal type="number" pos:start="151:39" pos:end="151:39">1</literal></expr>]</index></name><operator pos:start="151:41" pos:end="151:41">.</operator><name pos:start="151:42" pos:end="151:52"><name pos:start="151:42" pos:end="151:46">coeff</name><index pos:start="151:47" pos:end="151:49">[<expr pos:start="151:48" pos:end="151:48"><name pos:start="151:48" pos:end="151:48">i</name></expr>]</index><index pos:start="151:50" pos:end="151:52">[<expr pos:start="151:51" pos:end="151:51"><name pos:start="151:51" pos:end="151:51">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="153:13" pos:end="153:94"><expr pos:start="153:13" pos:end="153:93"><name pos:start="153:13" pos:end="153:18"><name pos:start="153:13" pos:end="153:15">ref</name><index pos:start="153:16" pos:end="153:18">[<expr pos:start="153:17" pos:end="153:17"><name pos:start="153:17" pos:end="153:17">i</name></expr>]</index></name><operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="153:60"><name pos:start="153:21" pos:end="153:24">sqrt</name><argument_list pos:start="153:25" pos:end="153:60">(<argument pos:start="153:26" pos:end="153:59"><expr pos:start="153:26" pos:end="153:59"><name pos:start="153:26" pos:end="153:38"><name pos:start="153:26" pos:end="153:26">m</name><index pos:start="153:27" pos:end="153:38">[<expr pos:start="153:28" pos:end="153:37"><operator pos:start="153:28" pos:end="153:28">(</operator><name pos:start="153:29" pos:end="153:32">pass</name><operator pos:start="153:33" pos:end="153:33">-</operator><literal type="number" pos:start="153:34" pos:end="153:34">1</literal><operator pos:start="153:35" pos:end="153:35">)</operator><operator pos:start="153:36" pos:end="153:36">&amp;</operator><literal type="number" pos:start="153:37" pos:end="153:37">1</literal></expr>]</index></name><operator pos:start="153:39" pos:end="153:39">.</operator><name pos:start="153:40" pos:end="153:50"><name pos:start="153:40" pos:end="153:47">variance</name><index pos:start="153:48" pos:end="153:50">[<expr pos:start="153:49" pos:end="153:49"><name pos:start="153:49" pos:end="153:49">i</name></expr>]</index></name> <operator pos:start="153:52" pos:end="153:52">/</operator> <name pos:start="153:54" pos:end="153:59">weight</name></expr></argument>)</argument_list></call> <operator pos:start="153:62" pos:end="153:62">*</operator> <operator pos:start="153:64" pos:end="153:64">(</operator><name pos:start="153:65" pos:end="153:73">blocksize</name> <operator pos:start="153:75" pos:end="153:75">-</operator> <name pos:start="153:77" pos:end="153:85">max_order</name><operator pos:start="153:86" pos:end="153:86">)</operator> <operator pos:start="153:88" pos:end="153:88">/</operator> <literal type="number" pos:start="153:90" pos:end="153:93">4000</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="157:9" pos:end="159:39">for<control pos:start="157:12" pos:end="157:36">(<init pos:start="157:13" pos:end="157:26"><expr pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:13">i</name><operator pos:start="157:14" pos:end="157:14">=</operator><name pos:start="157:15" pos:end="157:23">max_order</name><operator pos:start="157:24" pos:end="157:24">-</operator><literal type="number" pos:start="157:25" pos:end="157:25">1</literal></expr>;</init> <condition pos:start="157:28" pos:end="157:31"><expr pos:start="157:28" pos:end="157:30"><name pos:start="157:28" pos:end="157:28">i</name><operator pos:start="157:29" pos:end="157:29">&gt;</operator><literal type="number" pos:start="157:30" pos:end="157:30">0</literal></expr>;</condition> <incr pos:start="157:33" pos:end="157:35"><expr pos:start="157:33" pos:end="157:35"><name pos:start="157:33" pos:end="157:33">i</name><operator pos:start="157:34" pos:end="157:35">--</operator></expr></incr>)</control><block type="pseudo" pos:start="159:13" pos:end="159:39"><block_content pos:start="159:13" pos:end="159:39">

            <expr_stmt pos:start="159:13" pos:end="159:39"><expr pos:start="159:13" pos:end="159:38"><name pos:start="159:13" pos:end="159:18"><name pos:start="159:13" pos:end="159:15">ref</name><index pos:start="159:16" pos:end="159:18">[<expr pos:start="159:17" pos:end="159:17"><name pos:start="159:17" pos:end="159:17">i</name></expr>]</index></name> <operator pos:start="159:20" pos:end="159:20">=</operator> <name pos:start="159:22" pos:end="159:29"><name pos:start="159:22" pos:end="159:24">ref</name><index pos:start="159:25" pos:end="159:29">[<expr pos:start="159:26" pos:end="159:28"><name pos:start="159:26" pos:end="159:26">i</name><operator pos:start="159:27" pos:end="159:27">-</operator><literal type="number" pos:start="159:28" pos:end="159:28">1</literal></expr>]</index></name> <operator pos:start="159:31" pos:end="159:31">-</operator> <name pos:start="159:33" pos:end="159:38"><name pos:start="159:33" pos:end="159:35">ref</name><index pos:start="159:36" pos:end="159:38">[<expr pos:start="159:37" pos:end="159:37"><name pos:start="159:37" pos:end="159:37">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="165:5" pos:end="165:26"><expr pos:start="165:5" pos:end="165:25"><name pos:start="165:5" pos:end="165:13">opt_order</name> <operator pos:start="165:15" pos:end="165:15">=</operator> <name pos:start="165:17" pos:end="165:25">max_order</name></expr>;</expr_stmt>



    <if_stmt pos:start="169:5" pos:end="185:5"><if pos:start="169:5" pos:end="177:5">if<condition pos:start="169:7" pos:end="169:35">(<expr pos:start="169:8" pos:end="169:34"><name pos:start="169:8" pos:end="169:14">omethod</name> <operator pos:start="169:16" pos:end="169:17">==</operator> <name pos:start="169:19" pos:end="169:34">ORDER_METHOD_EST</name></expr>)</condition> <block pos:start="169:37" pos:end="177:5">{<block_content pos:start="171:9" pos:end="175:95">

        <expr_stmt pos:start="171:9" pos:end="171:67"><expr pos:start="171:9" pos:end="171:66"><name pos:start="171:9" pos:end="171:17">opt_order</name> <operator pos:start="171:19" pos:end="171:19">=</operator> <call pos:start="171:21" pos:end="171:66"><name pos:start="171:21" pos:end="171:39">estimate_best_order</name><argument_list pos:start="171:40" pos:end="171:66">(<argument pos:start="171:41" pos:end="171:43"><expr pos:start="171:41" pos:end="171:43"><name pos:start="171:41" pos:end="171:43">ref</name></expr></argument>, <argument pos:start="171:46" pos:end="171:54"><expr pos:start="171:46" pos:end="171:54"><name pos:start="171:46" pos:end="171:54">min_order</name></expr></argument>, <argument pos:start="171:57" pos:end="171:65"><expr pos:start="171:57" pos:end="171:65"><name pos:start="171:57" pos:end="171:65">max_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:24"><expr pos:start="173:9" pos:end="173:23"><name pos:start="173:9" pos:end="173:9">i</name> <operator pos:start="173:11" pos:end="173:11">=</operator> <name pos:start="173:13" pos:end="173:21">opt_order</name><operator pos:start="173:22" pos:end="173:22">-</operator><literal type="number" pos:start="173:23" pos:end="173:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:95"><expr pos:start="175:9" pos:end="175:94"><call pos:start="175:9" pos:end="175:94"><name pos:start="175:9" pos:end="175:26">quantize_lpc_coefs</name><argument_list pos:start="175:27" pos:end="175:94">(<argument pos:start="175:28" pos:end="175:33"><expr pos:start="175:28" pos:end="175:33"><name pos:start="175:28" pos:end="175:33"><name pos:start="175:28" pos:end="175:30">lpc</name><index pos:start="175:31" pos:end="175:33">[<expr pos:start="175:32" pos:end="175:32"><name pos:start="175:32" pos:end="175:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:36">i</name><operator pos:start="175:37" pos:end="175:37">+</operator><literal type="number" pos:start="175:38" pos:end="175:38">1</literal></expr></argument>, <argument pos:start="175:41" pos:end="175:49"><expr pos:start="175:41" pos:end="175:49"><name pos:start="175:41" pos:end="175:49">precision</name></expr></argument>, <argument pos:start="175:52" pos:end="175:59"><expr pos:start="175:52" pos:end="175:59"><name pos:start="175:52" pos:end="175:59"><name pos:start="175:52" pos:end="175:56">coefs</name><index pos:start="175:57" pos:end="175:59">[<expr pos:start="175:58" pos:end="175:58"><name pos:start="175:58" pos:end="175:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:62" pos:end="175:70"><expr pos:start="175:62" pos:end="175:70"><operator pos:start="175:62" pos:end="175:62">&amp;</operator><name pos:start="175:63" pos:end="175:70"><name pos:start="175:63" pos:end="175:67">shift</name><index pos:start="175:68" pos:end="175:70">[<expr pos:start="175:69" pos:end="175:69"><name pos:start="175:69" pos:end="175:69">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:73" pos:end="175:81"><expr pos:start="175:73" pos:end="175:81"><name pos:start="175:73" pos:end="175:81">max_shift</name></expr></argument>, <argument pos:start="175:84" pos:end="175:93"><expr pos:start="175:84" pos:end="175:93"><name pos:start="175:84" pos:end="175:93">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="177:7" pos:end="185:5">else <block pos:start="177:12" pos:end="185:5">{<block_content pos:start="179:9" pos:end="183:9">

        <for pos:start="179:9" pos:end="183:9">for<control pos:start="179:12" pos:end="179:44">(<init pos:start="179:13" pos:end="179:26"><expr pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:13">i</name><operator pos:start="179:14" pos:end="179:14">=</operator><name pos:start="179:15" pos:end="179:23">min_order</name><operator pos:start="179:24" pos:end="179:24">-</operator><literal type="number" pos:start="179:25" pos:end="179:25">1</literal></expr>;</init> <condition pos:start="179:28" pos:end="179:39"><expr pos:start="179:28" pos:end="179:38"><name pos:start="179:28" pos:end="179:28">i</name><operator pos:start="179:29" pos:end="179:29">&lt;</operator><name pos:start="179:30" pos:end="179:38">max_order</name></expr>;</condition> <incr pos:start="179:41" pos:end="179:43"><expr pos:start="179:41" pos:end="179:43"><name pos:start="179:41" pos:end="179:41">i</name><operator pos:start="179:42" pos:end="179:43">++</operator></expr></incr>)</control> <block pos:start="179:46" pos:end="183:9">{<block_content pos:start="181:13" pos:end="181:99">

            <expr_stmt pos:start="181:13" pos:end="181:99"><expr pos:start="181:13" pos:end="181:98"><call pos:start="181:13" pos:end="181:98"><name pos:start="181:13" pos:end="181:30">quantize_lpc_coefs</name><argument_list pos:start="181:31" pos:end="181:98">(<argument pos:start="181:32" pos:end="181:37"><expr pos:start="181:32" pos:end="181:37"><name pos:start="181:32" pos:end="181:37"><name pos:start="181:32" pos:end="181:34">lpc</name><index pos:start="181:35" pos:end="181:37">[<expr pos:start="181:36" pos:end="181:36"><name pos:start="181:36" pos:end="181:36">i</name></expr>]</index></name></expr></argument>, <argument pos:start="181:40" pos:end="181:42"><expr pos:start="181:40" pos:end="181:42"><name pos:start="181:40" pos:end="181:40">i</name><operator pos:start="181:41" pos:end="181:41">+</operator><literal type="number" pos:start="181:42" pos:end="181:42">1</literal></expr></argument>, <argument pos:start="181:45" pos:end="181:53"><expr pos:start="181:45" pos:end="181:53"><name pos:start="181:45" pos:end="181:53">precision</name></expr></argument>, <argument pos:start="181:56" pos:end="181:63"><expr pos:start="181:56" pos:end="181:63"><name pos:start="181:56" pos:end="181:63"><name pos:start="181:56" pos:end="181:60">coefs</name><index pos:start="181:61" pos:end="181:63">[<expr pos:start="181:62" pos:end="181:62"><name pos:start="181:62" pos:end="181:62">i</name></expr>]</index></name></expr></argument>, <argument pos:start="181:66" pos:end="181:74"><expr pos:start="181:66" pos:end="181:74"><operator pos:start="181:66" pos:end="181:66">&amp;</operator><name pos:start="181:67" pos:end="181:74"><name pos:start="181:67" pos:end="181:71">shift</name><index pos:start="181:72" pos:end="181:74">[<expr pos:start="181:73" pos:end="181:73"><name pos:start="181:73" pos:end="181:73">i</name></expr>]</index></name></expr></argument>, <argument pos:start="181:77" pos:end="181:85"><expr pos:start="181:77" pos:end="181:85"><name pos:start="181:77" pos:end="181:85">max_shift</name></expr></argument>, <argument pos:start="181:88" pos:end="181:97"><expr pos:start="181:88" pos:end="181:97"><name pos:start="181:88" pos:end="181:97">zero_shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <return pos:start="189:5" pos:end="189:21">return <expr pos:start="189:12" pos:end="189:20"><name pos:start="189:12" pos:end="189:20">opt_order</name></expr>;</return>

</block_content>}</block></function>
</unit>
