<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6724.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">iothread_set_poll_max_ns</name><parameter_list pos:start="1:37" pos:end="3:53">(<parameter pos:start="1:38" pos:end="1:48"><decl pos:start="1:38" pos:end="1:48"><type pos:start="1:38" pos:end="1:48"><name pos:start="1:38" pos:end="1:43">Object</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">obj</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:57">Visitor</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">v</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:24"><decl pos:start="3:9" pos:end="3:24"><type pos:start="3:9" pos:end="3:24"><specifier pos:start="3:9" pos:end="3:13">const</specifier> <name pos:start="3:15" pos:end="3:18">char</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:24">name</name></decl></parameter>, <parameter pos:start="3:27" pos:end="3:38"><decl pos:start="3:27" pos:end="3:38"><type pos:start="3:27" pos:end="3:38"><name pos:start="3:27" pos:end="3:30">void</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:38">opaque</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:45">Error</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier><modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:37">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">IOThread</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:22">iothread</name> <init pos:start="7:24" pos:end="7:38">= <expr pos:start="7:26" pos:end="7:38"><call pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:33">IOTHREAD</name><argument_list pos:start="7:34" pos:end="7:38">(<argument pos:start="7:35" pos:end="7:37"><expr pos:start="7:35" pos:end="7:37"><name pos:start="7:35" pos:end="7:37">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:17">value</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><call pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:20">visit_type_int64</name><argument_list pos:start="15:21" pos:end="15:49">(<argument pos:start="15:22" pos:end="15:22"><expr pos:start="15:22" pos:end="15:22"><name pos:start="15:22" pos:end="15:22">v</name></expr></argument>, <argument pos:start="15:25" pos:end="15:28"><expr pos:start="15:25" pos:end="15:28"><name pos:start="15:25" pos:end="15:28">name</name></expr></argument>, <argument pos:start="15:31" pos:end="15:36"><expr pos:start="15:31" pos:end="15:36"><operator pos:start="15:31" pos:end="15:31">&amp;</operator><name pos:start="15:32" pos:end="15:36">value</name></expr></argument>, <argument pos:start="15:39" pos:end="15:48"><expr pos:start="15:39" pos:end="15:48"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:48">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:18">(<expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:17">local_err</name></expr>)</condition> <block pos:start="17:20" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <goto pos:start="19:9" pos:end="19:17">goto <name pos:start="19:14" pos:end="19:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:18">(<expr pos:start="25:9" pos:end="25:17"><name pos:start="25:9" pos:end="25:13">value</name> <operator pos:start="25:15" pos:end="25:15">&lt;</operator> <literal type="number" pos:start="25:17" pos:end="25:17">0</literal></expr>)</condition> <block pos:start="25:20" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:17">

        <expr_stmt pos:start="27:9" pos:end="29:48"><expr pos:start="27:9" pos:end="29:47"><call pos:start="27:9" pos:end="29:47"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="29:47">(<argument pos:start="27:20" pos:end="27:29"><expr pos:start="27:20" pos:end="27:29"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:29">local_err</name></expr></argument>, <argument pos:start="27:32" pos:end="29:35"><expr pos:start="27:32" pos:end="29:35"><literal type="string" pos:start="27:32" pos:end="27:68">"poll_max_ns value must be in range "</literal>

                   <literal type="string" pos:start="29:20" pos:end="29:26">"[0, %"</literal><name pos:start="29:27" pos:end="29:32">PRId64</name><literal type="string" pos:start="29:33" pos:end="29:35">"]"</literal></expr></argument>, <argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:46">INT64_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:12">iothread</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">poll_max_ns</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <name pos:start="37:29" pos:end="37:33">value</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:22">(<expr pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:16">iothread</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:21">ctx</name></name></expr>)</condition> <block pos:start="41:24" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:70">

        <expr_stmt pos:start="43:9" pos:end="43:70"><expr pos:start="43:9" pos:end="43:69"><call pos:start="43:9" pos:end="43:69"><name pos:start="43:9" pos:end="43:35">aio_context_set_poll_params</name><argument_list pos:start="43:36" pos:end="43:69">(<argument pos:start="43:37" pos:end="43:49"><expr pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:49"><name pos:start="43:37" pos:end="43:44">iothread</name><operator pos:start="43:45" pos:end="43:46">-&gt;</operator><name pos:start="43:47" pos:end="43:49">ctx</name></name></expr></argument>, <argument pos:start="43:52" pos:end="43:56"><expr pos:start="43:52" pos:end="43:56"><name pos:start="43:52" pos:end="43:56">value</name></expr></argument>, <argument pos:start="43:59" pos:end="43:68"><expr pos:start="43:59" pos:end="43:68"><operator pos:start="43:59" pos:end="43:59">&amp;</operator><name pos:start="43:60" pos:end="43:68">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="49:1" pos:end="49:4"><name pos:start="49:1" pos:end="49:3">out</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><call pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:19">error_propagate</name><argument_list pos:start="51:20" pos:end="51:36">(<argument pos:start="51:21" pos:end="51:24"><expr pos:start="51:21" pos:end="51:24"><name pos:start="51:21" pos:end="51:24">errp</name></expr></argument>, <argument pos:start="51:27" pos:end="51:35"><expr pos:start="51:27" pos:end="51:35"><name pos:start="51:27" pos:end="51:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
