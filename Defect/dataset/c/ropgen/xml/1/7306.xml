<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7306.c" pos:tabs="8"><function pos:start="1:1" pos:end="120:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">qdm2_parse_packet</name><parameter_list pos:start="1:29" pos:end="7:68">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:68"><decl pos:start="1:50" pos:end="1:68"><type pos:start="1:50" pos:end="1:68"><name pos:start="1:50" pos:end="1:63">PayloadContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">qdm</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">AVStream</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:41">st</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">AVPacket</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:56">pkt</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:48"><decl pos:start="5:30" pos:end="5:48"><type pos:start="5:30" pos:end="5:48"><name pos:start="5:30" pos:end="5:37">uint32_t</name> <modifier pos:start="5:39" pos:end="5:39">*</modifier></type><name pos:start="5:40" pos:end="5:48">timestamp</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:47"><decl pos:start="7:30" pos:end="7:47"><type pos:start="7:30" pos:end="7:47"><specifier pos:start="7:30" pos:end="7:34">const</specifier> <name pos:start="7:36" pos:end="7:42">uint8_t</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:47">buf</name></decl></parameter>, <parameter pos:start="7:50" pos:end="7:56"><decl pos:start="7:50" pos:end="7:56"><type pos:start="7:50" pos:end="7:56"><name pos:start="7:50" pos:end="7:52">int</name></type> <name pos:start="7:54" pos:end="7:56">len</name></decl></parameter>, <parameter pos:start="7:59" pos:end="7:67"><decl pos:start="7:59" pos:end="7:67"><type pos:start="7:59" pos:end="7:67"><name pos:start="7:59" pos:end="7:61">int</name></type> <name pos:start="7:63" pos:end="7:67">flags</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="120:1">{<block_content pos:start="11:5" pos:end="118:36">

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">res</name> <init pos:start="11:13" pos:end="11:33">= <expr pos:start="11:15" pos:end="11:33"><name pos:start="11:15" pos:end="11:33">AVERROR_INVALIDDATA</name></expr></init></decl>, <decl pos:start="11:36" pos:end="11:36"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:36" pos:end="11:36">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:22">end</name> <init pos:start="13:24" pos:end="13:34">= <expr pos:start="13:26" pos:end="13:34"><name pos:start="13:26" pos:end="13:28">buf</name> <operator pos:start="13:30" pos:end="13:30">+</operator> <name pos:start="13:32" pos:end="13:34">len</name></expr></init></decl>, <decl pos:start="13:37" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:38">p</name> <init pos:start="13:40" pos:end="13:44">= <expr pos:start="13:42" pos:end="13:44"><name pos:start="13:42" pos:end="13:44">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="96:5"><if pos:start="17:5" pos:end="96:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">len</name> <operator pos:start="17:13" pos:end="17:13">&gt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition> <block pos:start="17:18" pos:end="96:5">{<block_content pos:start="19:9" pos:end="94:29">

        <if_stmt pos:start="19:9" pos:end="21:39"><if pos:start="19:9" pos:end="21:39">if <condition pos:start="19:12" pos:end="19:20">(<expr pos:start="19:13" pos:end="19:19"><name pos:start="19:13" pos:end="19:15">len</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:19">2</literal></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:39"><block_content pos:start="21:13" pos:end="21:39">

            <return pos:start="21:13" pos:end="21:39">return <expr pos:start="21:20" pos:end="21:38"><name pos:start="21:20" pos:end="21:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="25:9" pos:end="25:33">/* configuration block */</comment>

        <if_stmt pos:start="27:9" pos:end="63:9"><if pos:start="27:9" pos:end="63:9">if <condition pos:start="27:12" pos:end="27:23">(<expr pos:start="27:13" pos:end="27:22"><operator pos:start="27:13" pos:end="27:13">*</operator><name pos:start="27:14" pos:end="27:14">p</name> <operator pos:start="27:16" pos:end="27:17">==</operator> <literal type="number" pos:start="27:19" pos:end="27:22">0xff</literal></expr>)</condition> <block pos:start="27:25" pos:end="63:9">{<block_content pos:start="29:13" pos:end="61:48">

            <if_stmt pos:start="29:13" pos:end="39:13"><if pos:start="29:13" pos:end="39:13">if <condition pos:start="29:16" pos:end="29:32">(<expr pos:start="29:17" pos:end="29:31"><name pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:19">qdm</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:27">n_pkts</name></name> <operator pos:start="29:29" pos:end="29:29">&gt;</operator> <literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr>)</condition> <block pos:start="29:34" pos:end="39:13">{<block_content pos:start="31:17" pos:end="37:54">

                <expr_stmt pos:start="31:17" pos:end="33:68"><expr pos:start="31:17" pos:end="33:67"><call pos:start="31:17" pos:end="33:67"><name pos:start="31:17" pos:end="31:22">av_log</name><argument_list pos:start="31:23" pos:end="33:67">(<argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><name pos:start="31:24" pos:end="31:24">s</name></expr></argument>, <argument pos:start="31:27" pos:end="31:40"><expr pos:start="31:27" pos:end="31:40"><name pos:start="31:27" pos:end="31:40">AV_LOG_WARNING</name></expr></argument>,

                       <argument pos:start="33:24" pos:end="33:66"><expr pos:start="33:24" pos:end="33:66"><literal type="string" pos:start="33:24" pos:end="33:66">"Out of sequence config - dropping queue\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:32"><expr pos:start="35:17" pos:end="35:31"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:19">qdm</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:27">n_pkts</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:54"><expr pos:start="37:17" pos:end="37:53"><call pos:start="37:17" pos:end="37:53"><name pos:start="37:17" pos:end="37:22">memset</name><argument_list pos:start="37:23" pos:end="37:53">(<argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:31"><name pos:start="37:24" pos:end="37:26">qdm</name><operator pos:start="37:27" pos:end="37:28">-&gt;</operator><name pos:start="37:29" pos:end="37:31">len</name></name></expr></argument>, <argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><literal type="number" pos:start="37:34" pos:end="37:34">0</literal></expr></argument>, <argument pos:start="37:37" pos:end="37:52"><expr pos:start="37:37" pos:end="37:52"><sizeof pos:start="37:37" pos:end="37:52">sizeof<argument_list pos:start="37:43" pos:end="37:52">(<argument pos:start="37:44" pos:end="37:51"><expr pos:start="37:44" pos:end="37:51"><name pos:start="37:44" pos:end="37:51"><name pos:start="37:44" pos:end="37:46">qdm</name><operator pos:start="37:47" pos:end="37:48">-&gt;</operator><name pos:start="37:49" pos:end="37:51">len</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="43:13" pos:end="45:27"><if pos:start="43:13" pos:end="45:27">if <condition pos:start="43:16" pos:end="43:65">(<expr pos:start="43:17" pos:end="43:64"><operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:20">res</name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:59"><name pos:start="43:24" pos:end="43:40">qdm2_parse_config</name><argument_list pos:start="43:41" pos:end="43:59">(<argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">qdm</name></expr></argument>, <argument pos:start="43:47" pos:end="43:48"><expr pos:start="43:47" pos:end="43:48"><name pos:start="43:47" pos:end="43:48">st</name></expr></argument>, <argument pos:start="43:51" pos:end="43:53"><expr pos:start="43:51" pos:end="43:53"><operator pos:start="43:51" pos:end="43:52">++</operator><name pos:start="43:53" pos:end="43:53">p</name></expr></argument>, <argument pos:start="43:56" pos:end="43:58"><expr pos:start="43:56" pos:end="43:58"><name pos:start="43:56" pos:end="43:58">end</name></expr></argument>)</argument_list></call><operator pos:start="43:60" pos:end="43:60">)</operator> <operator pos:start="43:62" pos:end="43:62">&lt;</operator> <literal type="number" pos:start="43:64" pos:end="43:64">0</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:27"><block_content pos:start="45:17" pos:end="45:27">

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">p</name> <operator pos:start="47:15" pos:end="47:16">+=</operator> <name pos:start="47:18" pos:end="47:20">res</name></expr>;</expr_stmt>



            <comment type="block" pos:start="51:13" pos:end="59:61">/* We set codec_id to CODEC_ID_NONE initially to

             * delay decoder initialization since extradata is

             * carried within the RTP stream, not SDP. Here,

             * by setting codec_id to CODEC_ID_QDM2, we are signalling

             * to the decoder that it is OK to initialize. */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:48"><expr pos:start="61:13" pos:end="61:47"><name pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:14">st</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:21">codec</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:31">codec_id</name></name> <operator pos:start="61:33" pos:end="61:33">=</operator> <name pos:start="61:35" pos:end="61:47">CODEC_ID_QDM2</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>





        <comment type="block" pos:start="69:9" pos:end="69:24">/* subpackets */</comment>

        <while pos:start="71:9" pos:end="79:9">while <condition pos:start="71:15" pos:end="71:28">(<expr pos:start="71:16" pos:end="71:27"><name pos:start="71:16" pos:end="71:18">end</name> <operator pos:start="71:20" pos:end="71:20">-</operator> <name pos:start="71:22" pos:end="71:22">p</name> <operator pos:start="71:24" pos:end="71:25">&gt;=</operator> <literal type="number" pos:start="71:27" pos:end="71:27">4</literal></expr>)</condition> <block pos:start="71:30" pos:end="79:9">{<block_content pos:start="73:13" pos:end="77:21">

            <if_stmt pos:start="73:13" pos:end="75:27"><if pos:start="73:13" pos:end="75:27">if <condition pos:start="73:16" pos:end="73:66">(<expr pos:start="73:17" pos:end="73:65"><operator pos:start="73:17" pos:end="73:17">(</operator><name pos:start="73:18" pos:end="73:20">res</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <call pos:start="73:24" pos:end="73:60"><name pos:start="73:24" pos:end="73:43">qdm2_parse_subpacket</name><argument_list pos:start="73:44" pos:end="73:60">(<argument pos:start="73:45" pos:end="73:47"><expr pos:start="73:45" pos:end="73:47"><name pos:start="73:45" pos:end="73:47">qdm</name></expr></argument>, <argument pos:start="73:50" pos:end="73:51"><expr pos:start="73:50" pos:end="73:51"><name pos:start="73:50" pos:end="73:51">st</name></expr></argument>, <argument pos:start="73:54" pos:end="73:54"><expr pos:start="73:54" pos:end="73:54"><name pos:start="73:54" pos:end="73:54">p</name></expr></argument>, <argument pos:start="73:57" pos:end="73:59"><expr pos:start="73:57" pos:end="73:59"><name pos:start="73:57" pos:end="73:59">end</name></expr></argument>)</argument_list></call><operator pos:start="73:61" pos:end="73:61">)</operator> <operator pos:start="73:63" pos:end="73:63">&lt;</operator> <literal type="number" pos:start="73:65" pos:end="73:65">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:27"><block_content pos:start="75:17" pos:end="75:27">

                <return pos:start="75:17" pos:end="75:27">return <expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">res</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:21"><expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:13">p</name> <operator pos:start="77:15" pos:end="77:16">+=</operator> <name pos:start="77:18" pos:end="77:20">res</name></expr>;</expr_stmt>

        </block_content>}</block></while>



        <expr_stmt pos:start="83:9" pos:end="83:36"><expr pos:start="83:9" pos:end="83:35"><name pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:11">qdm</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:22">timestamp</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <operator pos:start="83:26" pos:end="83:26">*</operator><name pos:start="83:27" pos:end="83:35">timestamp</name></expr>;</expr_stmt>

        <if_stmt pos:start="85:9" pos:end="88:23"><if pos:start="85:9" pos:end="88:23">if <condition pos:start="85:12" pos:end="85:51">(<expr pos:start="85:13" pos:end="85:50"><operator pos:start="85:13" pos:end="85:14">++</operator><name pos:start="85:15" pos:end="85:25"><name pos:start="85:15" pos:end="85:17">qdm</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:25">n_pkts</name></name> <operator pos:start="85:27" pos:end="85:27">&lt;</operator> <name pos:start="85:29" pos:end="85:50"><name pos:start="85:29" pos:end="85:31">qdm</name><operator pos:start="85:32" pos:end="85:33">-&gt;</operator><name pos:start="85:34" pos:end="85:50">subpkts_per_block</name></name></expr>)</condition><block type="pseudo" pos:start="88:9" pos:end="88:23"><block_content pos:start="88:9" pos:end="88:23">


        <expr_stmt pos:start="88:9" pos:end="88:23"><expr pos:start="88:9" pos:end="88:22"><name pos:start="88:9" pos:end="88:18"><name pos:start="88:9" pos:end="88:11">qdm</name><operator pos:start="88:12" pos:end="88:13">-&gt;</operator><name pos:start="88:14" pos:end="88:18">cache</name></name> <operator pos:start="88:20" pos:end="88:20">=</operator> <literal type="number" pos:start="88:22" pos:end="88:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <for pos:start="90:9" pos:end="94:29">for <control pos:start="90:13" pos:end="90:34">(<init pos:start="90:14" pos:end="90:19"><expr pos:start="90:14" pos:end="90:18"><name pos:start="90:14" pos:end="90:14">n</name> <operator pos:start="90:16" pos:end="90:16">=</operator> <literal type="number" pos:start="90:18" pos:end="90:18">0</literal></expr>;</init> <condition pos:start="90:21" pos:end="90:29"><expr pos:start="90:21" pos:end="90:28"><name pos:start="90:21" pos:end="90:21">n</name> <operator pos:start="90:23" pos:end="90:23">&lt;</operator> <literal type="number" pos:start="90:25" pos:end="90:28">0x80</literal></expr>;</condition> <incr pos:start="90:31" pos:end="90:33"><expr pos:start="90:31" pos:end="90:33"><name pos:start="90:31" pos:end="90:31">n</name><operator pos:start="90:32" pos:end="90:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="92:13" pos:end="94:29"><block_content pos:start="92:13" pos:end="94:29">

            <if_stmt pos:start="92:13" pos:end="94:29"><if pos:start="92:13" pos:end="94:29">if <condition pos:start="92:16" pos:end="92:32">(<expr pos:start="92:17" pos:end="92:31"><name pos:start="92:17" pos:end="92:27"><name pos:start="92:17" pos:end="92:19">qdm</name><operator pos:start="92:20" pos:end="92:21">-&gt;</operator><name pos:start="92:22" pos:end="92:24">len</name><index pos:start="92:25" pos:end="92:27">[<expr pos:start="92:26" pos:end="92:26"><name pos:start="92:26" pos:end="92:26">n</name></expr>]</index></name> <operator pos:start="92:29" pos:end="92:29">&gt;</operator> <literal type="number" pos:start="92:31" pos:end="92:31">0</literal></expr>)</condition><block type="pseudo" pos:start="94:17" pos:end="94:29"><block_content pos:start="94:17" pos:end="94:29">

                <expr_stmt pos:start="94:17" pos:end="94:29"><expr pos:start="94:17" pos:end="94:28"><name pos:start="94:17" pos:end="94:26"><name pos:start="94:17" pos:end="94:19">qdm</name><operator pos:start="94:20" pos:end="94:21">-&gt;</operator><name pos:start="94:22" pos:end="94:26">cache</name></name><operator pos:start="94:27" pos:end="94:28">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="100:5" pos:end="100:74">/* output the subpackets into freshly created superblock structures */</comment>

    <if_stmt pos:start="102:5" pos:end="104:19"><if pos:start="102:5" pos:end="104:19">if <condition pos:start="102:8" pos:end="102:68">(<expr pos:start="102:9" pos:end="102:67"><operator pos:start="102:9" pos:end="102:9">!</operator><name pos:start="102:10" pos:end="102:19"><name pos:start="102:10" pos:end="102:12">qdm</name><operator pos:start="102:13" pos:end="102:14">-&gt;</operator><name pos:start="102:15" pos:end="102:19">cache</name></name> <operator pos:start="102:21" pos:end="102:22">||</operator> <operator pos:start="102:24" pos:end="102:24">(</operator><name pos:start="102:25" pos:end="102:27">res</name> <operator pos:start="102:29" pos:end="102:29">=</operator> <call pos:start="102:31" pos:end="102:62"><name pos:start="102:31" pos:end="102:48">qdm2_restore_block</name><argument_list pos:start="102:49" pos:end="102:62">(<argument pos:start="102:50" pos:end="102:52"><expr pos:start="102:50" pos:end="102:52"><name pos:start="102:50" pos:end="102:52">qdm</name></expr></argument>, <argument pos:start="102:55" pos:end="102:56"><expr pos:start="102:55" pos:end="102:56"><name pos:start="102:55" pos:end="102:56">st</name></expr></argument>, <argument pos:start="102:59" pos:end="102:61"><expr pos:start="102:59" pos:end="102:61"><name pos:start="102:59" pos:end="102:61">pkt</name></expr></argument>)</argument_list></call><operator pos:start="102:63" pos:end="102:63">)</operator> <operator pos:start="102:65" pos:end="102:65">&lt;</operator> <literal type="number" pos:start="102:67" pos:end="102:67">0</literal></expr>)</condition><block type="pseudo" pos:start="104:9" pos:end="104:19"><block_content pos:start="104:9" pos:end="104:19">

        <return pos:start="104:9" pos:end="104:19">return <expr pos:start="104:16" pos:end="104:18"><name pos:start="104:16" pos:end="104:18">res</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="106:5" pos:end="108:24"><if pos:start="106:5" pos:end="108:24">if <condition pos:start="106:8" pos:end="106:26">(<expr pos:start="106:9" pos:end="106:25"><operator pos:start="106:9" pos:end="106:10">--</operator><name pos:start="106:11" pos:end="106:20"><name pos:start="106:11" pos:end="106:13">qdm</name><operator pos:start="106:14" pos:end="106:15">-&gt;</operator><name pos:start="106:16" pos:end="106:20">cache</name></name> <operator pos:start="106:22" pos:end="106:23">==</operator> <literal type="number" pos:start="106:25" pos:end="106:25">0</literal></expr>)</condition><block type="pseudo" pos:start="108:9" pos:end="108:24"><block_content pos:start="108:9" pos:end="108:24">

        <expr_stmt pos:start="108:9" pos:end="108:24"><expr pos:start="108:9" pos:end="108:23"><name pos:start="108:9" pos:end="108:19"><name pos:start="108:9" pos:end="108:11">qdm</name><operator pos:start="108:12" pos:end="108:13">-&gt;</operator><name pos:start="108:14" pos:end="108:19">n_pkts</name></name> <operator pos:start="108:21" pos:end="108:21">=</operator> <literal type="number" pos:start="108:23" pos:end="108:23">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="112:5" pos:end="112:32"><expr pos:start="112:5" pos:end="112:31"><operator pos:start="112:5" pos:end="112:5">*</operator><name pos:start="112:6" pos:end="112:14">timestamp</name> <operator pos:start="112:16" pos:end="112:16">=</operator> <name pos:start="112:18" pos:end="112:31"><name pos:start="112:18" pos:end="112:20">qdm</name><operator pos:start="112:21" pos:end="112:22">-&gt;</operator><name pos:start="112:23" pos:end="112:31">timestamp</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="114:5" pos:end="114:36"><expr pos:start="114:5" pos:end="114:35"><name pos:start="114:5" pos:end="114:18"><name pos:start="114:5" pos:end="114:7">qdm</name><operator pos:start="114:8" pos:end="114:9">-&gt;</operator><name pos:start="114:10" pos:end="114:18">timestamp</name></name> <operator pos:start="114:20" pos:end="114:20">=</operator> <name pos:start="114:22" pos:end="114:35">RTP_NOTS_VALUE</name></expr>;</expr_stmt>



    <return pos:start="118:5" pos:end="118:36">return <expr pos:start="118:12" pos:end="118:35"><ternary pos:start="118:12" pos:end="118:35"><condition pos:start="118:12" pos:end="118:29"><expr pos:start="118:12" pos:end="118:27"><operator pos:start="118:12" pos:end="118:12">(</operator><name pos:start="118:13" pos:end="118:22"><name pos:start="118:13" pos:end="118:15">qdm</name><operator pos:start="118:16" pos:end="118:17">-&gt;</operator><name pos:start="118:18" pos:end="118:22">cache</name></name> <operator pos:start="118:24" pos:end="118:24">&gt;</operator> <literal type="number" pos:start="118:26" pos:end="118:26">0</literal><operator pos:start="118:27" pos:end="118:27">)</operator></expr> ?</condition><then pos:start="118:31" pos:end="118:31"> <expr pos:start="118:31" pos:end="118:31"><literal type="number" pos:start="118:31" pos:end="118:31">1</literal></expr> </then><else pos:start="118:33" pos:end="118:35">: <expr pos:start="118:35" pos:end="118:35"><literal type="number" pos:start="118:35" pos:end="118:35">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function></unit>
