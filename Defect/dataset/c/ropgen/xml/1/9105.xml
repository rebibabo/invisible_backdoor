<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9105.c" pos:tabs="8"><function pos:start="1:1" pos:end="302:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="3:63">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:62"><decl pos:start="1:46" pos:end="1:62"><type pos:start="1:46" pos:end="1:62"><name pos:start="1:46" pos:end="1:57">OutputStream</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">ost</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><name pos:start="3:26" pos:end="3:36">InputStream</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">ist</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:62"><decl pos:start="3:44" pos:end="3:62"><type pos:start="3:44" pos:end="3:62"><name pos:start="3:44" pos:end="3:50">AVFrame</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:62">in_picture</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="302:1">{<block_content pos:start="7:5" pos:end="300:75">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:17">nb_frames</name></decl>, <decl pos:start="7:20" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:20">i</name></decl>, <decl pos:start="7:23" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:25">ret</name></decl>, <decl pos:start="7:28" pos:end="7:44"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:28" pos:end="7:44">format_video_sync</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:26">final_picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">AVCodecContext</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:23">enc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:10">double</name></type> <name pos:start="13:12" pos:end="13:20">sync_ipts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">double</name></type> <name pos:start="15:12" pos:end="15:19">duration</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:18">frame_size</name> <init pos:start="17:20" pos:end="17:22">= <expr pos:start="17:22" pos:end="17:22"><literal type="number" pos:start="17:22" pos:end="17:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="21:64"><decl pos:start="19:5" pos:end="21:63"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">float</name></type> <name pos:start="19:11" pos:end="19:17">quality</name> <init pos:start="19:19" pos:end="21:63">= <expr pos:start="19:21" pos:end="21:63"><ternary pos:start="19:21" pos:end="21:63"><condition pos:start="19:21" pos:end="19:32"><expr pos:start="19:21" pos:end="19:30"><name pos:start="19:21" pos:end="19:30">same_quant</name></expr> ?</condition><then pos:start="19:34" pos:end="19:52"> <expr pos:start="19:34" pos:end="19:52"><name pos:start="19:34" pos:end="19:52"><name pos:start="19:34" pos:end="19:43">in_picture</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:52">quality</name></name></expr>

                               </then><else pos:start="21:32" pos:end="21:63">: <expr pos:start="21:34" pos:end="21:63"><name pos:start="21:34" pos:end="21:63"><name pos:start="21:34" pos:end="21:36">ost</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">st</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:47">codec</name><operator pos:start="21:48" pos:end="21:49">-&gt;</operator><name pos:start="21:50" pos:end="21:63">global_quality</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:25"><expr pos:start="25:5" pos:end="25:24"><name pos:start="25:5" pos:end="25:7">enc</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:24"><name pos:start="25:11" pos:end="25:13">ost</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">st</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:24">codec</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="41:5"><if pos:start="29:5" pos:end="41:5">if <condition pos:start="29:8" pos:end="29:86">(<expr pos:start="29:9" pos:end="29:85"><name pos:start="29:9" pos:end="29:27"><name pos:start="29:9" pos:end="29:11">ist</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:15">st</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:27">start_time</name></name> <operator pos:start="29:29" pos:end="29:30">!=</operator> <name pos:start="29:32" pos:end="29:45">AV_NOPTS_VALUE</name> <operator pos:start="29:47" pos:end="29:48">&amp;&amp;</operator> <name pos:start="29:50" pos:end="29:67"><name pos:start="29:50" pos:end="29:52">ist</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:56">st</name><operator pos:start="29:57" pos:end="29:58">-&gt;</operator><name pos:start="29:59" pos:end="29:67">first_dts</name></name> <operator pos:start="29:69" pos:end="29:70">!=</operator> <name pos:start="29:72" pos:end="29:85">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="29:88" pos:end="41:5">{<block_content pos:start="31:9" pos:end="39:43">

        <expr_stmt pos:start="31:9" pos:end="31:88"><expr pos:start="31:9" pos:end="31:87"><name pos:start="31:9" pos:end="31:16">duration</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:87"><name pos:start="31:20" pos:end="31:24">FFMAX</name><argument_list pos:start="31:25" pos:end="31:87">(<argument pos:start="31:26" pos:end="31:51"><expr pos:start="31:26" pos:end="31:51"><call pos:start="31:26" pos:end="31:51"><name pos:start="31:26" pos:end="31:31">av_q2d</name><argument_list pos:start="31:32" pos:end="31:51">(<argument pos:start="31:33" pos:end="31:50"><expr pos:start="31:33" pos:end="31:50"><name pos:start="31:33" pos:end="31:50"><name pos:start="31:33" pos:end="31:35">ist</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:39">st</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:50">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:54" pos:end="31:86"><expr pos:start="31:54" pos:end="31:86"><call pos:start="31:54" pos:end="31:86"><name pos:start="31:54" pos:end="31:59">av_q2d</name><argument_list pos:start="31:60" pos:end="31:86">(<argument pos:start="31:61" pos:end="31:85"><expr pos:start="31:61" pos:end="31:85"><name pos:start="31:61" pos:end="31:85"><name pos:start="31:61" pos:end="31:63">ist</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:67">st</name><operator pos:start="31:68" pos:end="31:69">-&gt;</operator><name pos:start="31:70" pos:end="31:74">codec</name><operator pos:start="31:75" pos:end="31:76">-&gt;</operator><name pos:start="31:77" pos:end="31:85">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:73"><if pos:start="33:9" pos:end="35:73">if<condition pos:start="33:11" pos:end="33:39">(<expr pos:start="33:12" pos:end="33:38"><name pos:start="33:12" pos:end="33:38"><name pos:start="33:12" pos:end="33:14">ist</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:18">st</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:34">avg_frame_rate</name><operator pos:start="33:35" pos:end="33:35">.</operator><name pos:start="33:36" pos:end="33:38">num</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:73"><block_content pos:start="35:13" pos:end="35:73">

            <expr_stmt pos:start="35:13" pos:end="35:73"><expr pos:start="35:13" pos:end="35:72"><name pos:start="35:13" pos:end="35:20">duration</name><operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:72"><name pos:start="35:23" pos:end="35:27">FFMAX</name><argument_list pos:start="35:28" pos:end="35:72">(<argument pos:start="35:29" pos:end="35:36"><expr pos:start="35:29" pos:end="35:36"><name pos:start="35:29" pos:end="35:36">duration</name></expr></argument>, <argument pos:start="35:39" pos:end="35:71"><expr pos:start="35:39" pos:end="35:71"><literal type="number" pos:start="35:39" pos:end="35:39">1</literal><operator pos:start="35:40" pos:end="35:40">/</operator><call pos:start="35:41" pos:end="35:71"><name pos:start="35:41" pos:end="35:46">av_q2d</name><argument_list pos:start="35:47" pos:end="35:71">(<argument pos:start="35:48" pos:end="35:70"><expr pos:start="35:48" pos:end="35:70"><name pos:start="35:48" pos:end="35:70"><name pos:start="35:48" pos:end="35:50">ist</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:54">st</name><operator pos:start="35:55" pos:end="35:56">-&gt;</operator><name pos:start="35:57" pos:end="35:70">avg_frame_rate</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:16">duration</name> <operator pos:start="39:18" pos:end="39:19">/=</operator> <call pos:start="39:21" pos:end="39:42"><name pos:start="39:21" pos:end="39:26">av_q2d</name><argument_list pos:start="39:27" pos:end="39:42">(<argument pos:start="39:28" pos:end="39:41"><expr pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:41"><name pos:start="39:28" pos:end="39:30">enc</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:41">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:77"><expr pos:start="45:5" pos:end="45:76"><name pos:start="45:5" pos:end="45:13">sync_ipts</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <call pos:start="45:17" pos:end="45:51"><name pos:start="45:17" pos:end="45:29">get_sync_ipts</name><argument_list pos:start="45:30" pos:end="45:51">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">ost</name></expr></argument>, <argument pos:start="45:36" pos:end="45:50"><expr pos:start="45:36" pos:end="45:50"><name pos:start="45:36" pos:end="45:50"><name pos:start="45:36" pos:end="45:45">in_picture</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:50">pts</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:53" pos:end="45:53">/</operator> <call pos:start="45:55" pos:end="45:76"><name pos:start="45:55" pos:end="45:60">av_q2d</name><argument_list pos:start="45:61" pos:end="45:76">(<argument pos:start="45:62" pos:end="45:75"><expr pos:start="45:62" pos:end="45:75"><name pos:start="45:62" pos:end="45:75"><name pos:start="45:62" pos:end="45:64">enc</name><operator pos:start="45:65" pos:end="45:66">-&gt;</operator><name pos:start="45:67" pos:end="45:75">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:18"><expr pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:13">nb_frames</name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:21">format_video_sync</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <name pos:start="55:25" pos:end="55:41">video_sync_method</name></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:150"><if pos:start="57:5" pos:end="59:150">if <condition pos:start="57:8" pos:end="57:40">(<expr pos:start="57:9" pos:end="57:39"><name pos:start="57:9" pos:end="57:25">format_video_sync</name> <operator pos:start="57:27" pos:end="57:28">==</operator> <name pos:start="57:30" pos:end="57:39">VSYNC_AUTO</name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:150"><block_content pos:start="59:9" pos:end="59:150">

        <expr_stmt pos:start="59:9" pos:end="59:150"><expr pos:start="59:9" pos:end="59:149"><name pos:start="59:9" pos:end="59:25">format_video_sync</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <ternary pos:start="59:29" pos:end="59:149"><condition pos:start="59:29" pos:end="59:70"><expr pos:start="59:29" pos:end="59:68"><operator pos:start="59:29" pos:end="59:29">(</operator><name pos:start="59:30" pos:end="59:46"><name pos:start="59:30" pos:end="59:30">s</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:39">oformat</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:46">flags</name></name> <operator pos:start="59:48" pos:end="59:48">&amp;</operator> <name pos:start="59:50" pos:end="59:67">AVFMT_VARIABLE_FPS</name><operator pos:start="59:68" pos:end="59:68">)</operator></expr> ?</condition><then pos:start="59:72" pos:end="59:145"> <expr pos:start="59:72" pos:end="59:145"><operator pos:start="59:72" pos:end="59:72">(</operator><ternary pos:start="59:73" pos:end="59:144"><condition pos:start="59:73" pos:end="59:114"><expr pos:start="59:73" pos:end="59:112"><operator pos:start="59:73" pos:end="59:73">(</operator><name pos:start="59:74" pos:end="59:90"><name pos:start="59:74" pos:end="59:74">s</name><operator pos:start="59:75" pos:end="59:76">-&gt;</operator><name pos:start="59:77" pos:end="59:83">oformat</name><operator pos:start="59:84" pos:end="59:85">-&gt;</operator><name pos:start="59:86" pos:end="59:90">flags</name></name> <operator pos:start="59:92" pos:end="59:92">&amp;</operator> <name pos:start="59:94" pos:end="59:111">AVFMT_NOTIMESTAMPS</name><operator pos:start="59:112" pos:end="59:112">)</operator></expr> ?</condition><then pos:start="59:116" pos:end="59:132"> <expr pos:start="59:116" pos:end="59:132"><name pos:start="59:116" pos:end="59:132">VSYNC_PASSTHROUGH</name></expr> </then><else pos:start="59:134" pos:end="59:144">: <expr pos:start="59:136" pos:end="59:144"><name pos:start="59:136" pos:end="59:144">VSYNC_VFR</name></expr></else></ternary><operator pos:start="59:145" pos:end="59:145">)</operator></expr> </then><else pos:start="59:147" pos:end="59:149">: <expr pos:start="59:149" pos:end="59:149"><literal type="number" pos:start="59:149" pos:end="59:149">1</literal></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="103:43"><if pos:start="63:5" pos:end="101:5">if <condition pos:start="63:8" pos:end="63:82">(<expr pos:start="63:9" pos:end="63:81"><name pos:start="63:9" pos:end="63:25">format_video_sync</name> <operator pos:start="63:27" pos:end="63:28">!=</operator> <name pos:start="63:30" pos:end="63:46">VSYNC_PASSTHROUGH</name> <operator pos:start="63:48" pos:end="63:49">&amp;&amp;</operator> <name pos:start="63:51" pos:end="63:67">format_video_sync</name> <operator pos:start="63:69" pos:end="63:70">!=</operator> <name pos:start="63:72" pos:end="63:81">VSYNC_DROP</name></expr>)</condition> <block pos:start="63:84" pos:end="101:5">{<block_content pos:start="65:9" pos:end="99:9">

        <decl_stmt pos:start="65:9" pos:end="65:62"><decl pos:start="65:9" pos:end="65:61"><type pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:14">double</name></type> <name pos:start="65:16" pos:end="65:21">vdelta</name> <init pos:start="65:23" pos:end="65:61">= <expr pos:start="65:25" pos:end="65:61"><name pos:start="65:25" pos:end="65:33">sync_ipts</name> <operator pos:start="65:35" pos:end="65:35">-</operator> <name pos:start="65:37" pos:end="65:50"><name pos:start="65:37" pos:end="65:39">ost</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:50">sync_opts</name></name> <operator pos:start="65:52" pos:end="65:52">+</operator> <name pos:start="65:54" pos:end="65:61">duration</name></expr></init></decl>;</decl_stmt>

        <comment type="line" pos:start="67:9" pos:end="67:75">// FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>

        <if_stmt pos:start="69:9" pos:end="85:39"><if pos:start="69:9" pos:end="71:26">if <condition pos:start="69:12" pos:end="69:26">(<expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:18">vdelta</name> <operator pos:start="69:20" pos:end="69:20">&lt;</operator> <operator pos:start="69:22" pos:end="69:22">-</operator><literal type="number" pos:start="69:23" pos:end="69:25">1.1</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:26"><block_content pos:start="71:13" pos:end="71:26">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:21">nb_frames</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="73:9" pos:end="83:9">else if <condition pos:start="73:17" pos:end="73:48">(<expr pos:start="73:18" pos:end="73:47"><name pos:start="73:18" pos:end="73:34">format_video_sync</name> <operator pos:start="73:36" pos:end="73:37">==</operator> <name pos:start="73:39" pos:end="73:47">VSYNC_VFR</name></expr>)</condition> <block pos:start="73:50" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:51">

            <if_stmt pos:start="75:13" pos:end="81:51"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:31">(<expr pos:start="75:17" pos:end="75:30"><name pos:start="75:17" pos:end="75:22">vdelta</name> <operator pos:start="75:24" pos:end="75:25">&lt;=</operator> <operator pos:start="75:27" pos:end="75:27">-</operator><literal type="number" pos:start="75:28" pos:end="75:30">0.6</literal></expr>)</condition> <block pos:start="75:33" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:30">

                <expr_stmt pos:start="77:17" pos:end="77:30"><expr pos:start="77:17" pos:end="77:29"><name pos:start="77:17" pos:end="77:25">nb_frames</name> <operator pos:start="77:27" pos:end="77:27">=</operator> <literal type="number" pos:start="77:29" pos:end="77:29">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="79:15" pos:end="81:51">else if <condition pos:start="79:23" pos:end="79:36">(<expr pos:start="79:24" pos:end="79:35"><name pos:start="79:24" pos:end="79:29">vdelta</name> <operator pos:start="79:31" pos:end="79:31">&gt;</operator> <literal type="number" pos:start="79:33" pos:end="79:35">0.6</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:51"><block_content pos:start="81:17" pos:end="81:51">

                <expr_stmt pos:start="81:17" pos:end="81:51"><expr pos:start="81:17" pos:end="81:50"><name pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:19">ost</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:30">sync_opts</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <call pos:start="81:34" pos:end="81:50"><name pos:start="81:34" pos:end="81:39">lrintf</name><argument_list pos:start="81:40" pos:end="81:50">(<argument pos:start="81:41" pos:end="81:49"><expr pos:start="81:41" pos:end="81:49"><name pos:start="81:41" pos:end="81:49">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="83:11" pos:end="85:39">else if <condition pos:start="83:19" pos:end="83:32">(<expr pos:start="83:20" pos:end="83:31"><name pos:start="83:20" pos:end="83:25">vdelta</name> <operator pos:start="83:27" pos:end="83:27">&gt;</operator> <literal type="number" pos:start="83:29" pos:end="83:31">1.1</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:39"><block_content pos:start="85:13" pos:end="85:39">

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:21">nb_frames</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:38"><name pos:start="85:25" pos:end="85:30">lrintf</name><argument_list pos:start="85:31" pos:end="85:38">(<argument pos:start="85:32" pos:end="85:37"><expr pos:start="85:32" pos:end="85:37"><name pos:start="85:32" pos:end="85:37">vdelta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="99:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:21">nb_frames</name> <operator pos:start="87:23" pos:end="87:24">==</operator> <literal type="number" pos:start="87:26" pos:end="87:26">0</literal></expr>)</condition> <block pos:start="87:29" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:56">

            <expr_stmt pos:start="89:13" pos:end="89:29"><expr pos:start="89:13" pos:end="89:28"><operator pos:start="89:13" pos:end="89:14">++</operator><name pos:start="89:15" pos:end="89:28">nb_frames_drop</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:56"><expr pos:start="91:13" pos:end="91:55"><call pos:start="91:13" pos:end="91:55"><name pos:start="91:13" pos:end="91:18">av_log</name><argument_list pos:start="91:19" pos:end="91:55">(<argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><name pos:start="91:20" pos:end="91:23">NULL</name></expr></argument>, <argument pos:start="91:26" pos:end="91:39"><expr pos:start="91:26" pos:end="91:39"><name pos:start="91:26" pos:end="91:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="91:42" pos:end="91:54"><expr pos:start="91:42" pos:end="91:54"><literal type="string" pos:start="91:42" pos:end="91:54">"*** drop!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="93:11" pos:end="99:9">else if <condition pos:start="93:19" pos:end="93:33">(<expr pos:start="93:20" pos:end="93:32"><name pos:start="93:20" pos:end="93:28">nb_frames</name> <operator pos:start="93:30" pos:end="93:30">&gt;</operator> <literal type="number" pos:start="93:32" pos:end="93:32">1</literal></expr>)</condition> <block pos:start="93:35" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:73">

            <expr_stmt pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:42"><name pos:start="95:13" pos:end="95:25">nb_frames_dup</name> <operator pos:start="95:27" pos:end="95:28">+=</operator> <name pos:start="95:30" pos:end="95:38">nb_frames</name> <operator pos:start="95:40" pos:end="95:40">-</operator> <literal type="number" pos:start="95:42" pos:end="95:42">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:73"><expr pos:start="97:13" pos:end="97:72"><call pos:start="97:13" pos:end="97:72"><name pos:start="97:13" pos:end="97:18">av_log</name><argument_list pos:start="97:19" pos:end="97:72">(<argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">NULL</name></expr></argument>, <argument pos:start="97:26" pos:end="97:39"><expr pos:start="97:26" pos:end="97:39"><name pos:start="97:26" pos:end="97:39">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="97:42" pos:end="97:56"><expr pos:start="97:42" pos:end="97:56"><literal type="string" pos:start="97:42" pos:end="97:56">"*** %d dup!\n"</literal></expr></argument>, <argument pos:start="97:59" pos:end="97:71"><expr pos:start="97:59" pos:end="97:71"><name pos:start="97:59" pos:end="97:67">nb_frames</name> <operator pos:start="97:69" pos:end="97:69">-</operator> <literal type="number" pos:start="97:71" pos:end="97:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="101:7" pos:end="103:43">else<block type="pseudo" pos:start="103:9" pos:end="103:43"><block_content pos:start="103:9" pos:end="103:43">

        <expr_stmt pos:start="103:9" pos:end="103:43"><expr pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:22"><name pos:start="103:9" pos:end="103:11">ost</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:22">sync_opts</name></name> <operator pos:start="103:24" pos:end="103:24">=</operator> <call pos:start="103:26" pos:end="103:42"><name pos:start="103:26" pos:end="103:31">lrintf</name><argument_list pos:start="103:32" pos:end="103:42">(<argument pos:start="103:33" pos:end="103:41"><expr pos:start="103:33" pos:end="103:41"><name pos:start="103:33" pos:end="103:41">sync_ipts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:70"><expr pos:start="107:5" pos:end="107:69"><name pos:start="107:5" pos:end="107:13">nb_frames</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <call pos:start="107:17" pos:end="107:69"><name pos:start="107:17" pos:end="107:21">FFMIN</name><argument_list pos:start="107:22" pos:end="107:69">(<argument pos:start="107:23" pos:end="107:31"><expr pos:start="107:23" pos:end="107:31"><name pos:start="107:23" pos:end="107:31">nb_frames</name></expr></argument>, <argument pos:start="107:34" pos:end="107:68"><expr pos:start="107:34" pos:end="107:68"><name pos:start="107:34" pos:end="107:48"><name pos:start="107:34" pos:end="107:36">ost</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:48">max_frames</name></name> <operator pos:start="107:50" pos:end="107:50">-</operator> <name pos:start="107:52" pos:end="107:68"><name pos:start="107:52" pos:end="107:54">ost</name><operator pos:start="107:55" pos:end="107:56">-&gt;</operator><name pos:start="107:57" pos:end="107:68">frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="111:15"><if pos:start="109:5" pos:end="111:15">if <condition pos:start="109:8" pos:end="109:23">(<expr pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:17">nb_frames</name> <operator pos:start="109:19" pos:end="109:20">&lt;=</operator> <literal type="number" pos:start="109:22" pos:end="109:22">0</literal></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:15"><block_content pos:start="111:9" pos:end="111:15">

        <return pos:start="111:9" pos:end="111:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:60"><expr pos:start="115:5" pos:end="115:59"><call pos:start="115:5" pos:end="115:59"><name pos:start="115:5" pos:end="115:21">do_video_resample</name><argument_list pos:start="115:22" pos:end="115:59">(<argument pos:start="115:23" pos:end="115:25"><expr pos:start="115:23" pos:end="115:25"><name pos:start="115:23" pos:end="115:25">ost</name></expr></argument>, <argument pos:start="115:28" pos:end="115:30"><expr pos:start="115:28" pos:end="115:30"><name pos:start="115:28" pos:end="115:30">ist</name></expr></argument>, <argument pos:start="115:33" pos:end="115:42"><expr pos:start="115:33" pos:end="115:42"><name pos:start="115:33" pos:end="115:42">in_picture</name></expr></argument>, <argument pos:start="115:45" pos:end="115:58"><expr pos:start="115:45" pos:end="115:58"><operator pos:start="115:45" pos:end="115:45">&amp;</operator><name pos:start="115:46" pos:end="115:58">final_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:36">/* duplicates frame if needed */</comment>

    <for pos:start="121:5" pos:end="296:5">for <control pos:start="121:9" pos:end="121:35">(<init pos:start="121:10" pos:end="121:15"><expr pos:start="121:10" pos:end="121:14"><name pos:start="121:10" pos:end="121:10">i</name> <operator pos:start="121:12" pos:end="121:12">=</operator> <literal type="number" pos:start="121:14" pos:end="121:14">0</literal></expr>;</init> <condition pos:start="121:17" pos:end="121:30"><expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:17">i</name> <operator pos:start="121:19" pos:end="121:19">&lt;</operator> <name pos:start="121:21" pos:end="121:29">nb_frames</name></expr>;</condition> <incr pos:start="121:32" pos:end="121:34"><expr pos:start="121:32" pos:end="121:34"><name pos:start="121:32" pos:end="121:32">i</name><operator pos:start="121:33" pos:end="121:34">++</operator></expr></incr>)</control> <block pos:start="121:37" pos:end="296:5">{<block_content pos:start="123:9" pos:end="294:28">

        <decl_stmt pos:start="123:9" pos:end="123:21"><decl pos:start="123:9" pos:end="123:20"><type pos:start="123:9" pos:end="123:16"><name pos:start="123:9" pos:end="123:16">AVPacket</name></type> <name pos:start="123:18" pos:end="123:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:29"><expr pos:start="125:9" pos:end="125:28"><call pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:22">av_init_packet</name><argument_list pos:start="125:23" pos:end="125:28">(<argument pos:start="125:24" pos:end="125:27"><expr pos:start="125:24" pos:end="125:27"><operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:24"><expr pos:start="127:9" pos:end="127:23"><name pos:start="127:9" pos:end="127:16"><name pos:start="127:9" pos:end="127:11">pkt</name><operator pos:start="127:12" pos:end="127:12">.</operator><name pos:start="127:13" pos:end="127:16">data</name></name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:23">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:21"><expr pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:16"><name pos:start="129:9" pos:end="129:11">pkt</name><operator pos:start="129:12" pos:end="129:12">.</operator><name pos:start="129:13" pos:end="129:16">size</name></name> <operator pos:start="129:18" pos:end="129:18">=</operator> <literal type="number" pos:start="129:20" pos:end="129:20">0</literal></expr>;</expr_stmt>



        <if_stmt pos:start="133:9" pos:end="280:9"><if pos:start="133:9" pos:end="159:9">if <condition pos:start="133:12" pos:end="135:48">(<expr pos:start="133:13" pos:end="135:47"><name pos:start="133:13" pos:end="133:29"><name pos:start="133:13" pos:end="133:13">s</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:22">oformat</name><operator pos:start="133:23" pos:end="133:24">-&gt;</operator><name pos:start="133:25" pos:end="133:29">flags</name></name> <operator pos:start="133:31" pos:end="133:31">&amp;</operator> <name pos:start="133:33" pos:end="133:48">AVFMT_RAWPICTURE</name> <operator pos:start="133:50" pos:end="133:51">&amp;&amp;</operator>

            <name pos:start="135:13" pos:end="135:26"><name pos:start="135:13" pos:end="135:15">enc</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:22">codec</name><operator pos:start="135:23" pos:end="135:24">-&gt;</operator><name pos:start="135:25" pos:end="135:26">id</name></name> <operator pos:start="135:28" pos:end="135:29">==</operator> <name pos:start="135:31" pos:end="135:47">CODEC_ID_RAWVIDEO</name></expr>)</condition> <block pos:start="135:50" pos:end="159:9">{<block_content pos:start="143:13" pos:end="157:38">

            <comment type="block" pos:start="137:13" pos:end="141:25">/* raw pictures are written as AVPicture structure to

               avoid any copies. We support temporarily the older

               method. */</comment>

            <expr_stmt pos:start="143:13" pos:end="143:78"><expr pos:start="143:13" pos:end="143:77"><name pos:start="143:13" pos:end="143:46"><name pos:start="143:13" pos:end="143:15">enc</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:28">coded_frame</name><operator pos:start="143:29" pos:end="143:30">-&gt;</operator><name pos:start="143:31" pos:end="143:46">interlaced_frame</name></name> <operator pos:start="143:48" pos:end="143:48">=</operator> <name pos:start="143:50" pos:end="143:77"><name pos:start="143:50" pos:end="143:59">in_picture</name><operator pos:start="143:60" pos:end="143:61">-&gt;</operator><name pos:start="143:62" pos:end="143:77">interlaced_frame</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:77"><expr pos:start="145:13" pos:end="145:76"><name pos:start="145:13" pos:end="145:45"><name pos:start="145:13" pos:end="145:15">enc</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:28">coded_frame</name><operator pos:start="145:29" pos:end="145:30">-&gt;</operator><name pos:start="145:31" pos:end="145:45">top_field_first</name></name>  <operator pos:start="145:48" pos:end="145:48">=</operator> <name pos:start="145:50" pos:end="145:76"><name pos:start="145:50" pos:end="145:59">in_picture</name><operator pos:start="145:60" pos:end="145:61">-&gt;</operator><name pos:start="145:62" pos:end="145:76">top_field_first</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:50"><expr pos:start="147:13" pos:end="147:49"><name pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:15">pkt</name><operator pos:start="147:16" pos:end="147:16">.</operator><name pos:start="147:17" pos:end="147:20">data</name></name>   <operator pos:start="147:24" pos:end="147:24">=</operator> <operator pos:start="147:26" pos:end="147:26">(</operator><name pos:start="147:27" pos:end="147:33">uint8_t</name> <operator pos:start="147:35" pos:end="147:35">*</operator><operator pos:start="147:36" pos:end="147:36">)</operator><name pos:start="147:37" pos:end="147:49">final_picture</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:44"><expr pos:start="149:13" pos:end="149:43"><name pos:start="149:13" pos:end="149:20"><name pos:start="149:13" pos:end="149:15">pkt</name><operator pos:start="149:16" pos:end="149:16">.</operator><name pos:start="149:17" pos:end="149:20">size</name></name>   <operator pos:start="149:24" pos:end="149:24">=</operator>  <sizeof pos:start="149:27" pos:end="149:43">sizeof<argument_list pos:start="149:33" pos:end="149:43">(<argument pos:start="149:34" pos:end="149:42"><expr pos:start="149:34" pos:end="149:42"><name pos:start="149:34" pos:end="149:42">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:90"><expr pos:start="151:13" pos:end="151:89"><name pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:15">pkt</name><operator pos:start="151:16" pos:end="151:16">.</operator><name pos:start="151:17" pos:end="151:19">pts</name></name>    <operator pos:start="151:24" pos:end="151:24">=</operator> <call pos:start="151:26" pos:end="151:89"><name pos:start="151:26" pos:end="151:37">av_rescale_q</name><argument_list pos:start="151:38" pos:end="151:89">(<argument pos:start="151:39" pos:end="151:52"><expr pos:start="151:39" pos:end="151:52"><name pos:start="151:39" pos:end="151:52"><name pos:start="151:39" pos:end="151:41">ost</name><operator pos:start="151:42" pos:end="151:43">-&gt;</operator><name pos:start="151:44" pos:end="151:52">sync_opts</name></name></expr></argument>, <argument pos:start="151:55" pos:end="151:68"><expr pos:start="151:55" pos:end="151:68"><name pos:start="151:55" pos:end="151:68"><name pos:start="151:55" pos:end="151:57">enc</name><operator pos:start="151:58" pos:end="151:59">-&gt;</operator><name pos:start="151:60" pos:end="151:68">time_base</name></name></expr></argument>, <argument pos:start="151:71" pos:end="151:88"><expr pos:start="151:71" pos:end="151:88"><name pos:start="151:71" pos:end="151:88"><name pos:start="151:71" pos:end="151:73">ost</name><operator pos:start="151:74" pos:end="151:75">-&gt;</operator><name pos:start="151:76" pos:end="151:77">st</name><operator pos:start="151:78" pos:end="151:79">-&gt;</operator><name pos:start="151:80" pos:end="151:88">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:21"><name pos:start="153:13" pos:end="153:15">pkt</name><operator pos:start="153:16" pos:end="153:16">.</operator><name pos:start="153:17" pos:end="153:21">flags</name></name> <operator pos:start="153:23" pos:end="153:24">|=</operator> <name pos:start="153:26" pos:end="153:40">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:38"><expr pos:start="157:13" pos:end="157:37"><call pos:start="157:13" pos:end="157:37"><name pos:start="157:13" pos:end="157:23">write_frame</name><argument_list pos:start="157:24" pos:end="157:37">(<argument pos:start="157:25" pos:end="157:25"><expr pos:start="157:25" pos:end="157:25"><name pos:start="157:25" pos:end="157:25">s</name></expr></argument>, <argument pos:start="157:28" pos:end="157:31"><expr pos:start="157:28" pos:end="157:31"><operator pos:start="157:28" pos:end="157:28">&amp;</operator><name pos:start="157:29" pos:end="157:31">pkt</name></expr></argument>, <argument pos:start="157:34" pos:end="157:36"><expr pos:start="157:34" pos:end="157:36"><name pos:start="157:34" pos:end="157:36">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="280:9">else <block pos:start="159:16" pos:end="280:9">{<block_content pos:start="161:13" pos:end="278:13">

            <decl_stmt pos:start="161:13" pos:end="161:27"><decl pos:start="161:13" pos:end="161:26"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:26">got_packet</name></decl>;</decl_stmt>

            <decl_stmt pos:start="163:13" pos:end="163:32"><decl pos:start="163:13" pos:end="163:31"><type pos:start="163:13" pos:end="163:19"><name pos:start="163:13" pos:end="163:19">AVFrame</name></type> <name pos:start="163:21" pos:end="163:31">big_picture</name></decl>;</decl_stmt>



            <expr_stmt pos:start="167:13" pos:end="167:41"><expr pos:start="167:13" pos:end="167:40"><name pos:start="167:13" pos:end="167:23">big_picture</name> <operator pos:start="167:25" pos:end="167:25">=</operator> <operator pos:start="167:27" pos:end="167:27">*</operator><name pos:start="167:28" pos:end="167:40">final_picture</name></expr>;</expr_stmt>

            <comment type="block" pos:start="169:13" pos:end="171:26">/* better than nothing: use input picture interlaced

               settings */</comment>

            <expr_stmt pos:start="173:13" pos:end="173:72"><expr pos:start="173:13" pos:end="173:71"><name pos:start="173:13" pos:end="173:40"><name pos:start="173:13" pos:end="173:23">big_picture</name><operator pos:start="173:24" pos:end="173:24">.</operator><name pos:start="173:25" pos:end="173:40">interlaced_frame</name></name> <operator pos:start="173:42" pos:end="173:42">=</operator> <name pos:start="173:44" pos:end="173:71"><name pos:start="173:44" pos:end="173:53">in_picture</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:71">interlaced_frame</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="185:13"><if pos:start="175:13" pos:end="185:13">if <condition pos:start="175:16" pos:end="175:93">(<expr pos:start="175:17" pos:end="175:92"><name pos:start="175:17" pos:end="175:37"><name pos:start="175:17" pos:end="175:19">ost</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:23">st</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:30">codec</name><operator pos:start="175:31" pos:end="175:32">-&gt;</operator><name pos:start="175:33" pos:end="175:37">flags</name></name> <operator pos:start="175:39" pos:end="175:39">&amp;</operator> <operator pos:start="175:41" pos:end="175:41">(</operator><name pos:start="175:42" pos:end="175:66">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="175:67" pos:end="175:67">|</operator><name pos:start="175:68" pos:end="175:91">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="175:92" pos:end="175:92">)</operator></expr>)</condition> <block pos:start="175:95" pos:end="185:13">{<block_content pos:start="177:17" pos:end="183:73">

                <if_stmt pos:start="177:17" pos:end="183:73"><if pos:start="177:17" pos:end="179:78">if <condition pos:start="177:20" pos:end="177:47">(<expr pos:start="177:21" pos:end="177:46"><name pos:start="177:21" pos:end="177:40"><name pos:start="177:21" pos:end="177:23">ost</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:40">top_field_first</name></name> <operator pos:start="177:42" pos:end="177:43">==</operator> <operator pos:start="177:45" pos:end="177:45">-</operator><literal type="number" pos:start="177:46" pos:end="177:46">1</literal></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:78"><block_content pos:start="179:21" pos:end="179:78">

                    <expr_stmt pos:start="179:21" pos:end="179:78"><expr pos:start="179:21" pos:end="179:77"><name pos:start="179:21" pos:end="179:47"><name pos:start="179:21" pos:end="179:31">big_picture</name><operator pos:start="179:32" pos:end="179:32">.</operator><name pos:start="179:33" pos:end="179:47">top_field_first</name></name> <operator pos:start="179:49" pos:end="179:49">=</operator> <name pos:start="179:51" pos:end="179:77"><name pos:start="179:51" pos:end="179:60">in_picture</name><operator pos:start="179:61" pos:end="179:62">-&gt;</operator><name pos:start="179:63" pos:end="179:77">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="181:17" pos:end="183:73">else<block type="pseudo" pos:start="183:21" pos:end="183:73"><block_content pos:start="183:21" pos:end="183:73">

                    <expr_stmt pos:start="183:21" pos:end="183:73"><expr pos:start="183:21" pos:end="183:72"><name pos:start="183:21" pos:end="183:47"><name pos:start="183:21" pos:end="183:31">big_picture</name><operator pos:start="183:32" pos:end="183:32">.</operator><name pos:start="183:33" pos:end="183:47">top_field_first</name></name> <operator pos:start="183:49" pos:end="183:49">=</operator> <operator pos:start="183:51" pos:end="183:51">!</operator><operator pos:start="183:52" pos:end="183:52">!</operator><name pos:start="183:53" pos:end="183:72"><name pos:start="183:53" pos:end="183:55">ost</name><operator pos:start="183:56" pos:end="183:57">-&gt;</operator><name pos:start="183:58" pos:end="183:72">top_field_first</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="189:13" pos:end="191:40">/* handles same_quant here. This is not correct because it may

               not be a global option */</comment>

            <expr_stmt pos:start="193:13" pos:end="193:42"><expr pos:start="193:13" pos:end="193:41"><name pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:23">big_picture</name><operator pos:start="193:24" pos:end="193:24">.</operator><name pos:start="193:25" pos:end="193:31">quality</name></name> <operator pos:start="193:33" pos:end="193:33">=</operator> <name pos:start="193:35" pos:end="193:41">quality</name></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="197:42"><if pos:start="195:13" pos:end="197:42">if <condition pos:start="195:16" pos:end="195:35">(<expr pos:start="195:17" pos:end="195:34"><operator pos:start="195:17" pos:end="195:17">!</operator><name pos:start="195:18" pos:end="195:34"><name pos:start="195:18" pos:end="195:20">enc</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:34">me_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="197:17" pos:end="197:42"><block_content pos:start="197:17" pos:end="197:42">

                <expr_stmt pos:start="197:17" pos:end="197:42"><expr pos:start="197:17" pos:end="197:41"><name pos:start="197:17" pos:end="197:37"><name pos:start="197:17" pos:end="197:27">big_picture</name><operator pos:start="197:28" pos:end="197:28">.</operator><name pos:start="197:29" pos:end="197:37">pict_type</name></name> <operator pos:start="197:39" pos:end="197:39">=</operator> <literal type="number" pos:start="197:41" pos:end="197:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:45"><expr pos:start="199:13" pos:end="199:44"><name pos:start="199:13" pos:end="199:27"><name pos:start="199:13" pos:end="199:23">big_picture</name><operator pos:start="199:24" pos:end="199:24">.</operator><name pos:start="199:25" pos:end="199:27">pts</name></name> <operator pos:start="199:29" pos:end="199:29">=</operator> <name pos:start="199:31" pos:end="199:44"><name pos:start="199:31" pos:end="199:33">ost</name><operator pos:start="199:34" pos:end="199:35">-&gt;</operator><name pos:start="199:36" pos:end="199:44">sync_opts</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="209:13"><if pos:start="201:13" pos:end="209:13">if <condition pos:start="201:16" pos:end="203:76">(<expr pos:start="201:17" pos:end="203:75"><name pos:start="201:17" pos:end="201:36"><name pos:start="201:17" pos:end="201:19">ost</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:36">forced_kf_index</name></name> <operator pos:start="201:38" pos:end="201:38">&lt;</operator> <name pos:start="201:40" pos:end="201:59"><name pos:start="201:40" pos:end="201:42">ost</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:59">forced_kf_count</name></name> <operator pos:start="201:61" pos:end="201:62">&amp;&amp;</operator>

                <name pos:start="203:17" pos:end="203:31"><name pos:start="203:17" pos:end="203:27">big_picture</name><operator pos:start="203:28" pos:end="203:28">.</operator><name pos:start="203:29" pos:end="203:31">pts</name></name> <operator pos:start="203:33" pos:end="203:34">&gt;=</operator> <name pos:start="203:36" pos:end="203:75"><name pos:start="203:36" pos:end="203:38">ost</name><operator pos:start="203:39" pos:end="203:40">-&gt;</operator><name pos:start="203:41" pos:end="203:53">forced_kf_pts</name><index pos:start="203:54" pos:end="203:75">[<expr pos:start="203:55" pos:end="203:74"><name pos:start="203:55" pos:end="203:74"><name pos:start="203:55" pos:end="203:57">ost</name><operator pos:start="203:58" pos:end="203:59">-&gt;</operator><name pos:start="203:60" pos:end="203:74">forced_kf_index</name></name></expr>]</index></name></expr>)</condition> <block pos:start="203:78" pos:end="209:13">{<block_content pos:start="205:17" pos:end="207:39">

                <expr_stmt pos:start="205:17" pos:end="205:58"><expr pos:start="205:17" pos:end="205:57"><name pos:start="205:17" pos:end="205:37"><name pos:start="205:17" pos:end="205:27">big_picture</name><operator pos:start="205:28" pos:end="205:28">.</operator><name pos:start="205:29" pos:end="205:37">pict_type</name></name> <operator pos:start="205:39" pos:end="205:39">=</operator> <name pos:start="205:41" pos:end="205:57">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:39"><expr pos:start="207:17" pos:end="207:38"><name pos:start="207:17" pos:end="207:36"><name pos:start="207:17" pos:end="207:19">ost</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:36">forced_kf_index</name></name><operator pos:start="207:37" pos:end="207:38">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:78"><expr pos:start="211:13" pos:end="211:77"><name pos:start="211:13" pos:end="211:15">ret</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <call pos:start="211:19" pos:end="211:77"><name pos:start="211:19" pos:end="211:39">avcodec_encode_video2</name><argument_list pos:start="211:40" pos:end="211:77">(<argument pos:start="211:41" pos:end="211:43"><expr pos:start="211:41" pos:end="211:43"><name pos:start="211:41" pos:end="211:43">enc</name></expr></argument>, <argument pos:start="211:46" pos:end="211:49"><expr pos:start="211:46" pos:end="211:49"><operator pos:start="211:46" pos:end="211:46">&amp;</operator><name pos:start="211:47" pos:end="211:49">pkt</name></expr></argument>, <argument pos:start="211:52" pos:end="211:63"><expr pos:start="211:52" pos:end="211:63"><operator pos:start="211:52" pos:end="211:52">&amp;</operator><name pos:start="211:53" pos:end="211:63">big_picture</name></expr></argument>, <argument pos:start="211:66" pos:end="211:76"><expr pos:start="211:66" pos:end="211:76"><operator pos:start="211:66" pos:end="211:66">&amp;</operator><name pos:start="211:67" pos:end="211:76">got_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="213:13" pos:end="219:13"><if pos:start="213:13" pos:end="219:13">if <condition pos:start="213:16" pos:end="213:24">(<expr pos:start="213:17" pos:end="213:23"><name pos:start="213:17" pos:end="213:19">ret</name> <operator pos:start="213:21" pos:end="213:21">&lt;</operator> <literal type="number" pos:start="213:23" pos:end="213:23">0</literal></expr>)</condition> <block pos:start="213:26" pos:end="219:13">{<block_content pos:start="215:17" pos:end="217:32">

                <expr_stmt pos:start="215:17" pos:end="215:70"><expr pos:start="215:17" pos:end="215:69"><call pos:start="215:17" pos:end="215:69"><name pos:start="215:17" pos:end="215:22">av_log</name><argument_list pos:start="215:23" pos:end="215:69">(<argument pos:start="215:24" pos:end="215:27"><expr pos:start="215:24" pos:end="215:27"><name pos:start="215:24" pos:end="215:27">NULL</name></expr></argument>, <argument pos:start="215:30" pos:end="215:41"><expr pos:start="215:30" pos:end="215:41"><name pos:start="215:30" pos:end="215:41">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="215:44" pos:end="215:68"><expr pos:start="215:44" pos:end="215:68"><literal type="string" pos:start="215:44" pos:end="215:68">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:32"><expr pos:start="217:17" pos:end="217:31"><call pos:start="217:17" pos:end="217:31"><name pos:start="217:17" pos:end="217:28">exit_program</name><argument_list pos:start="217:29" pos:end="217:31">(<argument pos:start="217:30" pos:end="217:30"><expr pos:start="217:30" pos:end="217:30"><literal type="number" pos:start="217:30" pos:end="217:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="223:13" pos:end="278:13"><if pos:start="223:13" pos:end="278:13">if <condition pos:start="223:16" pos:end="223:27">(<expr pos:start="223:17" pos:end="223:26"><name pos:start="223:17" pos:end="223:26">got_packet</name></expr>)</condition> <block pos:start="223:29" pos:end="278:13">{<block_content pos:start="225:17" pos:end="276:17">

                <if_stmt pos:start="225:17" pos:end="227:45"><if pos:start="225:17" pos:end="227:45">if <condition pos:start="225:20" pos:end="225:95">(<expr pos:start="225:21" pos:end="225:94"><name pos:start="225:21" pos:end="225:27"><name pos:start="225:21" pos:end="225:23">pkt</name><operator pos:start="225:24" pos:end="225:24">.</operator><name pos:start="225:25" pos:end="225:27">pts</name></name> <operator pos:start="225:29" pos:end="225:30">==</operator> <name pos:start="225:32" pos:end="225:45">AV_NOPTS_VALUE</name> <operator pos:start="225:47" pos:end="225:48">&amp;&amp;</operator> <operator pos:start="225:50" pos:end="225:50">!</operator><operator pos:start="225:51" pos:end="225:51">(</operator><name pos:start="225:52" pos:end="225:75"><name pos:start="225:52" pos:end="225:54">enc</name><operator pos:start="225:55" pos:end="225:56">-&gt;</operator><name pos:start="225:57" pos:end="225:61">codec</name><operator pos:start="225:62" pos:end="225:63">-&gt;</operator><name pos:start="225:64" pos:end="225:75">capabilities</name></name> <operator pos:start="225:77" pos:end="225:77">&amp;</operator> <name pos:start="225:79" pos:end="225:93">CODEC_CAP_DELAY</name><operator pos:start="225:94" pos:end="225:94">)</operator></expr>)</condition><block type="pseudo" pos:start="227:21" pos:end="227:45"><block_content pos:start="227:21" pos:end="227:45">

                    <expr_stmt pos:start="227:21" pos:end="227:45"><expr pos:start="227:21" pos:end="227:44"><name pos:start="227:21" pos:end="227:27"><name pos:start="227:21" pos:end="227:23">pkt</name><operator pos:start="227:24" pos:end="227:24">.</operator><name pos:start="227:25" pos:end="227:27">pts</name></name> <operator pos:start="227:29" pos:end="227:29">=</operator> <name pos:start="227:31" pos:end="227:44"><name pos:start="227:31" pos:end="227:33">ost</name><operator pos:start="227:34" pos:end="227:35">-&gt;</operator><name pos:start="227:36" pos:end="227:44">sync_opts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="231:17" pos:end="233:88"><if pos:start="231:17" pos:end="233:88">if <condition pos:start="231:20" pos:end="231:46">(<expr pos:start="231:21" pos:end="231:45"><name pos:start="231:21" pos:end="231:27"><name pos:start="231:21" pos:end="231:23">pkt</name><operator pos:start="231:24" pos:end="231:24">.</operator><name pos:start="231:25" pos:end="231:27">pts</name></name> <operator pos:start="231:29" pos:end="231:30">!=</operator> <name pos:start="231:32" pos:end="231:45">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="233:21" pos:end="233:88"><block_content pos:start="233:21" pos:end="233:88">

                    <expr_stmt pos:start="233:21" pos:end="233:88"><expr pos:start="233:21" pos:end="233:87"><name pos:start="233:21" pos:end="233:27"><name pos:start="233:21" pos:end="233:23">pkt</name><operator pos:start="233:24" pos:end="233:24">.</operator><name pos:start="233:25" pos:end="233:27">pts</name></name> <operator pos:start="233:29" pos:end="233:29">=</operator> <call pos:start="233:31" pos:end="233:87"><name pos:start="233:31" pos:end="233:42">av_rescale_q</name><argument_list pos:start="233:43" pos:end="233:87">(<argument pos:start="233:44" pos:end="233:50"><expr pos:start="233:44" pos:end="233:50"><name pos:start="233:44" pos:end="233:50"><name pos:start="233:44" pos:end="233:46">pkt</name><operator pos:start="233:47" pos:end="233:47">.</operator><name pos:start="233:48" pos:end="233:50">pts</name></name></expr></argument>, <argument pos:start="233:53" pos:end="233:66"><expr pos:start="233:53" pos:end="233:66"><name pos:start="233:53" pos:end="233:66"><name pos:start="233:53" pos:end="233:55">enc</name><operator pos:start="233:56" pos:end="233:57">-&gt;</operator><name pos:start="233:58" pos:end="233:66">time_base</name></name></expr></argument>, <argument pos:start="233:69" pos:end="233:86"><expr pos:start="233:69" pos:end="233:86"><name pos:start="233:69" pos:end="233:86"><name pos:start="233:69" pos:end="233:71">ost</name><operator pos:start="233:72" pos:end="233:73">-&gt;</operator><name pos:start="233:74" pos:end="233:75">st</name><operator pos:start="233:76" pos:end="233:77">-&gt;</operator><name pos:start="233:78" pos:end="233:86">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="235:17" pos:end="237:88"><if pos:start="235:17" pos:end="237:88">if <condition pos:start="235:20" pos:end="235:46">(<expr pos:start="235:21" pos:end="235:45"><name pos:start="235:21" pos:end="235:27"><name pos:start="235:21" pos:end="235:23">pkt</name><operator pos:start="235:24" pos:end="235:24">.</operator><name pos:start="235:25" pos:end="235:27">dts</name></name> <operator pos:start="235:29" pos:end="235:30">!=</operator> <name pos:start="235:32" pos:end="235:45">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="237:21" pos:end="237:88"><block_content pos:start="237:21" pos:end="237:88">

                    <expr_stmt pos:start="237:21" pos:end="237:88"><expr pos:start="237:21" pos:end="237:87"><name pos:start="237:21" pos:end="237:27"><name pos:start="237:21" pos:end="237:23">pkt</name><operator pos:start="237:24" pos:end="237:24">.</operator><name pos:start="237:25" pos:end="237:27">dts</name></name> <operator pos:start="237:29" pos:end="237:29">=</operator> <call pos:start="237:31" pos:end="237:87"><name pos:start="237:31" pos:end="237:42">av_rescale_q</name><argument_list pos:start="237:43" pos:end="237:87">(<argument pos:start="237:44" pos:end="237:50"><expr pos:start="237:44" pos:end="237:50"><name pos:start="237:44" pos:end="237:50"><name pos:start="237:44" pos:end="237:46">pkt</name><operator pos:start="237:47" pos:end="237:47">.</operator><name pos:start="237:48" pos:end="237:50">dts</name></name></expr></argument>, <argument pos:start="237:53" pos:end="237:66"><expr pos:start="237:53" pos:end="237:66"><name pos:start="237:53" pos:end="237:66"><name pos:start="237:53" pos:end="237:55">enc</name><operator pos:start="237:56" pos:end="237:57">-&gt;</operator><name pos:start="237:58" pos:end="237:66">time_base</name></name></expr></argument>, <argument pos:start="237:69" pos:end="237:86"><expr pos:start="237:69" pos:end="237:86"><name pos:start="237:69" pos:end="237:86"><name pos:start="237:69" pos:end="237:71">ost</name><operator pos:start="237:72" pos:end="237:73">-&gt;</operator><name pos:start="237:74" pos:end="237:75">st</name><operator pos:start="237:76" pos:end="237:77">-&gt;</operator><name pos:start="237:78" pos:end="237:86">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <if_stmt pos:start="241:17" pos:end="251:17"><if pos:start="241:17" pos:end="251:17">if <condition pos:start="241:20" pos:end="241:29">(<expr pos:start="241:21" pos:end="241:28"><name pos:start="241:21" pos:end="241:28">debug_ts</name></expr>)</condition> <block pos:start="241:31" pos:end="251:17">{<block_content pos:start="243:21" pos:end="249:92">

                    <expr_stmt pos:start="243:21" pos:end="249:92"><expr pos:start="243:21" pos:end="249:91"><call pos:start="243:21" pos:end="249:91"><name pos:start="243:21" pos:end="243:26">av_log</name><argument_list pos:start="243:27" pos:end="249:91">(<argument pos:start="243:28" pos:end="243:31"><expr pos:start="243:28" pos:end="243:31"><name pos:start="243:28" pos:end="243:31">NULL</name></expr></argument>, <argument pos:start="243:34" pos:end="243:44"><expr pos:start="243:34" pos:end="243:44"><name pos:start="243:34" pos:end="243:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="243:47" pos:end="245:84"><expr pos:start="243:47" pos:end="245:84"><literal type="string" pos:start="243:47" pos:end="243:70">"encoder -&gt; type:video "</literal>

                           <literal type="string" pos:start="245:28" pos:end="245:84">"pkt_pts:%s pkt_pts_time:%s pkt_dts:%s pkt_dts_time:%s\n"</literal></expr></argument>,

                           <argument pos:start="247:28" pos:end="247:45"><expr pos:start="247:28" pos:end="247:45"><call pos:start="247:28" pos:end="247:45"><name pos:start="247:28" pos:end="247:36">av_ts2str</name><argument_list pos:start="247:37" pos:end="247:45">(<argument pos:start="247:38" pos:end="247:44"><expr pos:start="247:38" pos:end="247:44"><name pos:start="247:38" pos:end="247:44"><name pos:start="247:38" pos:end="247:40">pkt</name><operator pos:start="247:41" pos:end="247:41">.</operator><name pos:start="247:42" pos:end="247:44">pts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="247:48" pos:end="247:90"><expr pos:start="247:48" pos:end="247:90"><call pos:start="247:48" pos:end="247:90"><name pos:start="247:48" pos:end="247:60">av_ts2timestr</name><argument_list pos:start="247:61" pos:end="247:90">(<argument pos:start="247:62" pos:end="247:68"><expr pos:start="247:62" pos:end="247:68"><name pos:start="247:62" pos:end="247:68"><name pos:start="247:62" pos:end="247:64">pkt</name><operator pos:start="247:65" pos:end="247:65">.</operator><name pos:start="247:66" pos:end="247:68">pts</name></name></expr></argument>, <argument pos:start="247:71" pos:end="247:89"><expr pos:start="247:71" pos:end="247:89"><operator pos:start="247:71" pos:end="247:71">&amp;</operator><name pos:start="247:72" pos:end="247:89"><name pos:start="247:72" pos:end="247:74">ost</name><operator pos:start="247:75" pos:end="247:76">-&gt;</operator><name pos:start="247:77" pos:end="247:78">st</name><operator pos:start="247:79" pos:end="247:80">-&gt;</operator><name pos:start="247:81" pos:end="247:89">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>,

                           <argument pos:start="249:28" pos:end="249:45"><expr pos:start="249:28" pos:end="249:45"><call pos:start="249:28" pos:end="249:45"><name pos:start="249:28" pos:end="249:36">av_ts2str</name><argument_list pos:start="249:37" pos:end="249:45">(<argument pos:start="249:38" pos:end="249:44"><expr pos:start="249:38" pos:end="249:44"><name pos:start="249:38" pos:end="249:44"><name pos:start="249:38" pos:end="249:40">pkt</name><operator pos:start="249:41" pos:end="249:41">.</operator><name pos:start="249:42" pos:end="249:44">dts</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="249:48" pos:end="249:90"><expr pos:start="249:48" pos:end="249:90"><call pos:start="249:48" pos:end="249:90"><name pos:start="249:48" pos:end="249:60">av_ts2timestr</name><argument_list pos:start="249:61" pos:end="249:90">(<argument pos:start="249:62" pos:end="249:68"><expr pos:start="249:62" pos:end="249:68"><name pos:start="249:62" pos:end="249:68"><name pos:start="249:62" pos:end="249:64">pkt</name><operator pos:start="249:65" pos:end="249:65">.</operator><name pos:start="249:66" pos:end="249:68">dts</name></name></expr></argument>, <argument pos:start="249:71" pos:end="249:89"><expr pos:start="249:71" pos:end="249:89"><operator pos:start="249:71" pos:end="249:71">&amp;</operator><name pos:start="249:72" pos:end="249:89"><name pos:start="249:72" pos:end="249:74">ost</name><operator pos:start="249:75" pos:end="249:76">-&gt;</operator><name pos:start="249:77" pos:end="249:78">st</name><operator pos:start="249:79" pos:end="249:80">-&gt;</operator><name pos:start="249:81" pos:end="249:89">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="255:17" pos:end="257:55"><if pos:start="255:17" pos:end="257:55">if <condition pos:start="255:20" pos:end="255:52">(<expr pos:start="255:21" pos:end="255:51"><name pos:start="255:21" pos:end="255:37">format_video_sync</name> <operator pos:start="255:39" pos:end="255:40">==</operator> <name pos:start="255:42" pos:end="255:51">VSYNC_DROP</name></expr>)</condition><block type="pseudo" pos:start="257:21" pos:end="257:55"><block_content pos:start="257:21" pos:end="257:55">

                    <expr_stmt pos:start="257:21" pos:end="257:55"><expr pos:start="257:21" pos:end="257:54"><name pos:start="257:21" pos:end="257:27"><name pos:start="257:21" pos:end="257:23">pkt</name><operator pos:start="257:24" pos:end="257:24">.</operator><name pos:start="257:25" pos:end="257:27">pts</name></name> <operator pos:start="257:29" pos:end="257:29">=</operator> <name pos:start="257:31" pos:end="257:37"><name pos:start="257:31" pos:end="257:33">pkt</name><operator pos:start="257:34" pos:end="257:34">.</operator><name pos:start="257:35" pos:end="257:37">dts</name></name> <operator pos:start="257:39" pos:end="257:39">=</operator> <name pos:start="257:41" pos:end="257:54">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="261:17" pos:end="261:42"><expr pos:start="261:17" pos:end="261:41"><call pos:start="261:17" pos:end="261:41"><name pos:start="261:17" pos:end="261:27">write_frame</name><argument_list pos:start="261:28" pos:end="261:41">(<argument pos:start="261:29" pos:end="261:29"><expr pos:start="261:29" pos:end="261:29"><name pos:start="261:29" pos:end="261:29">s</name></expr></argument>, <argument pos:start="261:32" pos:end="261:35"><expr pos:start="261:32" pos:end="261:35"><operator pos:start="261:32" pos:end="261:32">&amp;</operator><name pos:start="261:33" pos:end="261:35">pkt</name></expr></argument>, <argument pos:start="261:38" pos:end="261:40"><expr pos:start="261:38" pos:end="261:40"><name pos:start="261:38" pos:end="261:40">ost</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="263:17" pos:end="263:38"><expr pos:start="263:17" pos:end="263:37"><name pos:start="263:17" pos:end="263:26">frame_size</name> <operator pos:start="263:28" pos:end="263:28">=</operator> <name pos:start="263:30" pos:end="263:37"><name pos:start="263:30" pos:end="263:32">pkt</name><operator pos:start="263:33" pos:end="263:33">.</operator><name pos:start="263:34" pos:end="263:37">size</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:39"><expr pos:start="265:17" pos:end="265:38"><name pos:start="265:17" pos:end="265:26">video_size</name> <operator pos:start="265:28" pos:end="265:29">+=</operator> <name pos:start="265:31" pos:end="265:38"><name pos:start="265:31" pos:end="265:33">pkt</name><operator pos:start="265:34" pos:end="265:34">.</operator><name pos:start="265:35" pos:end="265:38">size</name></name></expr>;</expr_stmt>




                <comment type="block" pos:start="270:17" pos:end="270:45">/* if two pass, output log */</comment>

                <if_stmt pos:start="272:17" pos:end="276:17"><if pos:start="272:17" pos:end="276:17">if <condition pos:start="272:20" pos:end="272:51">(<expr pos:start="272:21" pos:end="272:50"><name pos:start="272:21" pos:end="272:32"><name pos:start="272:21" pos:end="272:23">ost</name><operator pos:start="272:24" pos:end="272:25">-&gt;</operator><name pos:start="272:26" pos:end="272:32">logfile</name></name> <operator pos:start="272:34" pos:end="272:35">&amp;&amp;</operator> <name pos:start="272:37" pos:end="272:50"><name pos:start="272:37" pos:end="272:39">enc</name><operator pos:start="272:40" pos:end="272:41">-&gt;</operator><name pos:start="272:42" pos:end="272:50">stats_out</name></name></expr>)</condition> <block pos:start="272:53" pos:end="276:17">{<block_content pos:start="274:21" pos:end="274:64">

                    <expr_stmt pos:start="274:21" pos:end="274:64"><expr pos:start="274:21" pos:end="274:63"><call pos:start="274:21" pos:end="274:63"><name pos:start="274:21" pos:end="274:27">fprintf</name><argument_list pos:start="274:28" pos:end="274:63">(<argument pos:start="274:29" pos:end="274:40"><expr pos:start="274:29" pos:end="274:40"><name pos:start="274:29" pos:end="274:40"><name pos:start="274:29" pos:end="274:31">ost</name><operator pos:start="274:32" pos:end="274:33">-&gt;</operator><name pos:start="274:34" pos:end="274:40">logfile</name></name></expr></argument>, <argument pos:start="274:43" pos:end="274:46"><expr pos:start="274:43" pos:end="274:46"><literal type="string" pos:start="274:43" pos:end="274:46">"%s"</literal></expr></argument>, <argument pos:start="274:49" pos:end="274:62"><expr pos:start="274:49" pos:end="274:62"><name pos:start="274:49" pos:end="274:62"><name pos:start="274:49" pos:end="274:51">enc</name><operator pos:start="274:52" pos:end="274:53">-&gt;</operator><name pos:start="274:54" pos:end="274:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="282:9" pos:end="282:25"><expr pos:start="282:9" pos:end="282:24"><name pos:start="282:9" pos:end="282:22"><name pos:start="282:9" pos:end="282:11">ost</name><operator pos:start="282:12" pos:end="282:13">-&gt;</operator><name pos:start="282:14" pos:end="282:22">sync_opts</name></name><operator pos:start="282:23" pos:end="282:24">++</operator></expr>;</expr_stmt>

        <comment type="block" pos:start="284:9" pos:end="292:11">/*

         * For video, number of frames in == number of packets out.

         * But there may be reordering, so we can't throw away frames on encoder

         * flush, we need to limit them here, before they go into encoder.

         */</comment>

        <expr_stmt pos:start="294:9" pos:end="294:28"><expr pos:start="294:9" pos:end="294:27"><name pos:start="294:9" pos:end="294:25"><name pos:start="294:9" pos:end="294:11">ost</name><operator pos:start="294:12" pos:end="294:13">-&gt;</operator><name pos:start="294:14" pos:end="294:25">frame_number</name></name><operator pos:start="294:26" pos:end="294:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="298:5" pos:end="300:75"><if pos:start="298:5" pos:end="300:75">if <condition pos:start="298:8" pos:end="298:38">(<expr pos:start="298:9" pos:end="298:37"><name pos:start="298:9" pos:end="298:23">vstats_filename</name> <operator pos:start="298:25" pos:end="298:26">&amp;&amp;</operator> <name pos:start="298:28" pos:end="298:37">frame_size</name></expr>)</condition><block type="pseudo" pos:start="300:9" pos:end="300:75"><block_content pos:start="300:9" pos:end="300:75">

        <expr_stmt pos:start="300:9" pos:end="300:75"><expr pos:start="300:9" pos:end="300:74"><call pos:start="300:9" pos:end="300:74"><name pos:start="300:9" pos:end="300:22">do_video_stats</name><argument_list pos:start="300:23" pos:end="300:74">(<argument pos:start="300:24" pos:end="300:56"><expr pos:start="300:24" pos:end="300:56"><name pos:start="300:24" pos:end="300:52"><name pos:start="300:24" pos:end="300:35">output_files</name><index pos:start="300:36" pos:end="300:52">[<expr pos:start="300:37" pos:end="300:51"><name pos:start="300:37" pos:end="300:51"><name pos:start="300:37" pos:end="300:39">ost</name><operator pos:start="300:40" pos:end="300:41">-&gt;</operator><name pos:start="300:42" pos:end="300:51">file_index</name></name></expr>]</index></name><operator pos:start="300:53" pos:end="300:53">.</operator><name pos:start="300:54" pos:end="300:56">ctx</name></expr></argument>, <argument pos:start="300:59" pos:end="300:61"><expr pos:start="300:59" pos:end="300:61"><name pos:start="300:59" pos:end="300:61">ost</name></expr></argument>, <argument pos:start="300:64" pos:end="300:73"><expr pos:start="300:64" pos:end="300:73"><name pos:start="300:64" pos:end="300:73">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function></unit>
