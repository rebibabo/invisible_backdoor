<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3281.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:37">vu9_to_vu12</name>)<parameter_list pos:start="1:39" pos:end="9:70">(<parameter pos:start="1:40" pos:end="1:58"><decl pos:start="1:40" pos:end="1:58"><type pos:start="1:40" pos:end="1:58"><specifier pos:start="1:40" pos:end="1:44">const</specifier> <name pos:start="1:46" pos:end="1:52">uint8_t</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">src1</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:79"><decl pos:start="1:61" pos:end="1:79"><type pos:start="1:61" pos:end="1:79"><specifier pos:start="1:61" pos:end="1:65">const</specifier> <name pos:start="1:67" pos:end="1:73">uint8_t</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">src2</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:46">uint8_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">dst1</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:67"><decl pos:start="3:55" pos:end="3:67"><type pos:start="3:55" pos:end="3:67"><name pos:start="3:55" pos:end="3:61">uint8_t</name> <modifier pos:start="3:63" pos:end="3:63">*</modifier></type><name pos:start="3:64" pos:end="3:67">dst2</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:48"><decl pos:start="5:40" pos:end="5:48"><type pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:48">width</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:60"><decl pos:start="5:51" pos:end="5:60"><type pos:start="5:51" pos:end="5:60"><name pos:start="5:51" pos:end="5:53">int</name></type> <name pos:start="5:55" pos:end="5:60">height</name></decl></parameter>,

                                       <parameter pos:start="7:40" pos:end="7:53"><decl pos:start="7:40" pos:end="7:53"><type pos:start="7:40" pos:end="7:53"><name pos:start="7:40" pos:end="7:42">int</name></type> <name pos:start="7:44" pos:end="7:53">srcStride1</name></decl></parameter>, <parameter pos:start="7:56" pos:end="7:69"><decl pos:start="7:56" pos:end="7:69"><type pos:start="7:56" pos:end="7:69"><name pos:start="7:56" pos:end="7:58">int</name></type> <name pos:start="7:60" pos:end="7:69">srcStride2</name></decl></parameter>,

                                       <parameter pos:start="9:40" pos:end="9:53"><decl pos:start="9:40" pos:end="9:53"><type pos:start="9:40" pos:end="9:53"><name pos:start="9:40" pos:end="9:42">int</name></type> <name pos:start="9:44" pos:end="9:53">dstStride1</name></decl></parameter>, <parameter pos:start="9:56" pos:end="9:69"><decl pos:start="9:56" pos:end="9:69"><type pos:start="9:56" pos:end="9:69"><name pos:start="9:56" pos:end="9:58">int</name></type> <name pos:start="9:60" pos:end="9:69">dstStride2</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="185:1">{<block_content pos:start="13:5" pos:end="183:10">

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">x86_reg</name></type> <name pos:start="13:13" pos:end="13:13">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">x</name></decl>,<decl pos:start="15:11" pos:end="15:11"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:11" pos:end="15:11">w</name></decl>,<decl pos:start="15:13" pos:end="15:13"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:13">h</name></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:14"><expr pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:5">w</name><operator pos:start="17:6" pos:end="17:6">=</operator><name pos:start="17:7" pos:end="17:11">width</name><operator pos:start="17:12" pos:end="17:12">/</operator><literal type="number" pos:start="17:13" pos:end="17:13">2</literal></expr>;</expr_stmt> <expr_stmt pos:start="17:16" pos:end="17:26"><expr pos:start="17:16" pos:end="17:25"><name pos:start="17:16" pos:end="17:16">h</name><operator pos:start="17:17" pos:end="17:17">=</operator><name pos:start="17:18" pos:end="17:23">height</name><operator pos:start="17:24" pos:end="17:24">/</operator><literal type="number" pos:start="17:25" pos:end="17:25">2</literal></expr>;</expr_stmt>

    <asm pos:start="19:5" pos:end="25:68">__asm__ <specifier pos:start="19:13" pos:end="19:20">volatile</specifier>(

        PREFETCH" %0    \n\t"

        PREFETCH" %1    \n\t"

        ::"m"(*(src1+srcStride1)),"m"(*(src2+srcStride2)):"memory");</asm>

    <for pos:start="27:5" pos:end="99:5">for <control pos:start="27:9" pos:end="27:21">(<init pos:start="27:10" pos:end="27:13"><expr pos:start="27:10" pos:end="27:12"><name pos:start="27:10" pos:end="27:10">y</name><operator pos:start="27:11" pos:end="27:11">=</operator><literal type="number" pos:start="27:12" pos:end="27:12">0</literal></expr>;</init><condition pos:start="27:14" pos:end="27:17"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:14">y</name><operator pos:start="27:15" pos:end="27:15">&lt;</operator><name pos:start="27:16" pos:end="27:16">h</name></expr>;</condition><incr pos:start="27:18" pos:end="27:20"><expr pos:start="27:18" pos:end="27:20"><name pos:start="27:18" pos:end="27:18">y</name><operator pos:start="27:19" pos:end="27:20">++</operator></expr></incr>)</control> <block pos:start="27:23" pos:end="99:5">{<block_content pos:start="29:9" pos:end="97:45">

        <decl_stmt pos:start="29:9" pos:end="29:49"><decl pos:start="29:9" pos:end="29:48"><type pos:start="29:9" pos:end="29:22"><specifier pos:start="29:9" pos:end="29:13">const</specifier> <name pos:start="29:15" pos:end="29:21">uint8_t</name><modifier pos:start="29:22" pos:end="29:22">*</modifier></type> <name pos:start="29:24" pos:end="29:25">s1</name><init pos:start="29:26" pos:end="29:48">=<expr pos:start="29:27" pos:end="29:48"><name pos:start="29:27" pos:end="29:30">src1</name><operator pos:start="29:31" pos:end="29:31">+</operator><name pos:start="29:32" pos:end="29:41">srcStride1</name><operator pos:start="29:42" pos:end="29:42">*</operator><operator pos:start="29:43" pos:end="29:43">(</operator><name pos:start="29:44" pos:end="29:44">y</name><operator pos:start="29:45" pos:end="29:46">&gt;&gt;</operator><literal type="number" pos:start="29:47" pos:end="29:47">1</literal><operator pos:start="29:48" pos:end="29:48">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="31:9" pos:end="31:37"><decl pos:start="31:9" pos:end="31:36"><type pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:15">uint8_t</name><modifier pos:start="31:16" pos:end="31:16">*</modifier></type> <name pos:start="31:18" pos:end="31:18">d</name><init pos:start="31:19" pos:end="31:36">=<expr pos:start="31:20" pos:end="31:36"><name pos:start="31:20" pos:end="31:23">dst1</name><operator pos:start="31:24" pos:end="31:24">+</operator><name pos:start="31:25" pos:end="31:34">dstStride1</name><operator pos:start="31:35" pos:end="31:35">*</operator><name pos:start="31:36" pos:end="31:36">y</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">x</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</expr_stmt>

        <for pos:start="35:9" pos:end="95:9">for <control pos:start="35:13" pos:end="35:27">(<init pos:start="35:14" pos:end="35:14">;</init><condition pos:start="35:15" pos:end="35:21"><expr pos:start="35:15" pos:end="35:20"><name pos:start="35:15" pos:end="35:15">x</name><operator pos:start="35:16" pos:end="35:16">&lt;</operator><name pos:start="35:17" pos:end="35:17">w</name><operator pos:start="35:18" pos:end="35:18">-</operator><literal type="number" pos:start="35:19" pos:end="35:20">31</literal></expr>;</condition><incr pos:start="35:22" pos:end="35:26"><expr pos:start="35:22" pos:end="35:26"><name pos:start="35:22" pos:end="35:22">x</name><operator pos:start="35:23" pos:end="35:24">+=</operator><literal type="number" pos:start="35:25" pos:end="35:26">32</literal></expr></incr>)</control> <block pos:start="35:29" pos:end="95:9">{<block_content pos:start="37:13" pos:end="93:27">

            <asm pos:start="37:13" pos:end="93:27">__asm__ <specifier pos:start="37:21" pos:end="37:28">volatile</specifier>(

                PREFETCH"   32%1        \n\t"

                "movq         %1, %%mm0 \n\t"

                "movq        8%1, %%mm2 \n\t"

                "movq       16%1, %%mm4 \n\t"

                "movq       24%1, %%mm6 \n\t"

                "movq      %%mm0, %%mm1 \n\t"

                "movq      %%mm2, %%mm3 \n\t"

                "movq      %%mm4, %%mm5 \n\t"

                "movq      %%mm6, %%mm7 \n\t"

                "punpcklbw %%mm0, %%mm0 \n\t"

                "punpckhbw %%mm1, %%mm1 \n\t"

                "punpcklbw %%mm2, %%mm2 \n\t"

                "punpckhbw %%mm3, %%mm3 \n\t"

                "punpcklbw %%mm4, %%mm4 \n\t"

                "punpckhbw %%mm5, %%mm5 \n\t"

                "punpcklbw %%mm6, %%mm6 \n\t"

                "punpckhbw %%mm7, %%mm7 \n\t"

                MOVNTQ"    %%mm0,   %0  \n\t"

                MOVNTQ"    %%mm1,  8%0  \n\t"

                MOVNTQ"    %%mm2, 16%0  \n\t"

                MOVNTQ"    %%mm3, 24%0  \n\t"

                MOVNTQ"    %%mm4, 32%0  \n\t"

                MOVNTQ"    %%mm5, 40%0  \n\t"

                MOVNTQ"    %%mm6, 48%0  \n\t"

                MOVNTQ"    %%mm7, 56%0"

                :"=m"(d[2*x])

                :"m"(s1[x])

                :"memory");</asm>

        </block_content>}</block></for>

        <for pos:start="97:9" pos:end="97:45">for <control pos:start="97:13" pos:end="97:22">(<init pos:start="97:14" pos:end="97:14">;</init><condition pos:start="97:15" pos:end="97:18"><expr pos:start="97:15" pos:end="97:17"><name pos:start="97:15" pos:end="97:15">x</name><operator pos:start="97:16" pos:end="97:16">&lt;</operator><name pos:start="97:17" pos:end="97:17">w</name></expr>;</condition><incr pos:start="97:19" pos:end="97:21"><expr pos:start="97:19" pos:end="97:21"><name pos:start="97:19" pos:end="97:19">x</name><operator pos:start="97:20" pos:end="97:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="97:24" pos:end="97:45"><block_content pos:start="97:24" pos:end="97:45"> <expr_stmt pos:start="97:24" pos:end="97:45"><expr pos:start="97:24" pos:end="97:44"><name pos:start="97:24" pos:end="97:29"><name pos:start="97:24" pos:end="97:24">d</name><index pos:start="97:25" pos:end="97:29">[<expr pos:start="97:26" pos:end="97:28"><literal type="number" pos:start="97:26" pos:end="97:26">2</literal><operator pos:start="97:27" pos:end="97:27">*</operator><name pos:start="97:28" pos:end="97:28">x</name></expr>]</index></name><operator pos:start="97:30" pos:end="97:30">=</operator><name pos:start="97:31" pos:end="97:38"><name pos:start="97:31" pos:end="97:31">d</name><index pos:start="97:32" pos:end="97:38">[<expr pos:start="97:33" pos:end="97:37"><literal type="number" pos:start="97:33" pos:end="97:33">2</literal><operator pos:start="97:34" pos:end="97:34">*</operator><name pos:start="97:35" pos:end="97:35">x</name><operator pos:start="97:36" pos:end="97:36">+</operator><literal type="number" pos:start="97:37" pos:end="97:37">1</literal></expr>]</index></name><operator pos:start="97:39" pos:end="97:39">=</operator><name pos:start="97:40" pos:end="97:44"><name pos:start="97:40" pos:end="97:41">s1</name><index pos:start="97:42" pos:end="97:44">[<expr pos:start="97:43" pos:end="97:43"><name pos:start="97:43" pos:end="97:43">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

    <for pos:start="101:5" pos:end="173:5">for <control pos:start="101:9" pos:end="101:21">(<init pos:start="101:10" pos:end="101:13"><expr pos:start="101:10" pos:end="101:12"><name pos:start="101:10" pos:end="101:10">y</name><operator pos:start="101:11" pos:end="101:11">=</operator><literal type="number" pos:start="101:12" pos:end="101:12">0</literal></expr>;</init><condition pos:start="101:14" pos:end="101:17"><expr pos:start="101:14" pos:end="101:16"><name pos:start="101:14" pos:end="101:14">y</name><operator pos:start="101:15" pos:end="101:15">&lt;</operator><name pos:start="101:16" pos:end="101:16">h</name></expr>;</condition><incr pos:start="101:18" pos:end="101:20"><expr pos:start="101:18" pos:end="101:20"><name pos:start="101:18" pos:end="101:18">y</name><operator pos:start="101:19" pos:end="101:20">++</operator></expr></incr>)</control> <block pos:start="101:23" pos:end="173:5">{<block_content pos:start="103:9" pos:end="171:45">

        <decl_stmt pos:start="103:9" pos:end="103:49"><decl pos:start="103:9" pos:end="103:48"><type pos:start="103:9" pos:end="103:22"><specifier pos:start="103:9" pos:end="103:13">const</specifier> <name pos:start="103:15" pos:end="103:21">uint8_t</name><modifier pos:start="103:22" pos:end="103:22">*</modifier></type> <name pos:start="103:24" pos:end="103:25">s2</name><init pos:start="103:26" pos:end="103:48">=<expr pos:start="103:27" pos:end="103:48"><name pos:start="103:27" pos:end="103:30">src2</name><operator pos:start="103:31" pos:end="103:31">+</operator><name pos:start="103:32" pos:end="103:41">srcStride2</name><operator pos:start="103:42" pos:end="103:42">*</operator><operator pos:start="103:43" pos:end="103:43">(</operator><name pos:start="103:44" pos:end="103:44">y</name><operator pos:start="103:45" pos:end="103:46">&gt;&gt;</operator><literal type="number" pos:start="103:47" pos:end="103:47">1</literal><operator pos:start="103:48" pos:end="103:48">)</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:37"><decl pos:start="105:9" pos:end="105:36"><type pos:start="105:9" pos:end="105:16"><name pos:start="105:9" pos:end="105:15">uint8_t</name><modifier pos:start="105:16" pos:end="105:16">*</modifier></type> <name pos:start="105:18" pos:end="105:18">d</name><init pos:start="105:19" pos:end="105:36">=<expr pos:start="105:20" pos:end="105:36"><name pos:start="105:20" pos:end="105:23">dst2</name><operator pos:start="105:24" pos:end="105:24">+</operator><name pos:start="105:25" pos:end="105:34">dstStride2</name><operator pos:start="105:35" pos:end="105:35">*</operator><name pos:start="105:36" pos:end="105:36">y</name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:12"><expr pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:9">x</name><operator pos:start="107:10" pos:end="107:10">=</operator><literal type="number" pos:start="107:11" pos:end="107:11">0</literal></expr>;</expr_stmt>

        <for pos:start="109:9" pos:end="169:9">for <control pos:start="109:13" pos:end="109:27">(<init pos:start="109:14" pos:end="109:14">;</init><condition pos:start="109:15" pos:end="109:21"><expr pos:start="109:15" pos:end="109:20"><name pos:start="109:15" pos:end="109:15">x</name><operator pos:start="109:16" pos:end="109:16">&lt;</operator><name pos:start="109:17" pos:end="109:17">w</name><operator pos:start="109:18" pos:end="109:18">-</operator><literal type="number" pos:start="109:19" pos:end="109:20">31</literal></expr>;</condition><incr pos:start="109:22" pos:end="109:26"><expr pos:start="109:22" pos:end="109:26"><name pos:start="109:22" pos:end="109:22">x</name><operator pos:start="109:23" pos:end="109:24">+=</operator><literal type="number" pos:start="109:25" pos:end="109:26">32</literal></expr></incr>)</control> <block pos:start="109:29" pos:end="169:9">{<block_content pos:start="111:13" pos:end="167:27">

            <asm pos:start="111:13" pos:end="167:27">__asm__ <specifier pos:start="111:21" pos:end="111:28">volatile</specifier>(

                PREFETCH"   32%1        \n\t"

                "movq         %1, %%mm0 \n\t"

                "movq        8%1, %%mm2 \n\t"

                "movq       16%1, %%mm4 \n\t"

                "movq       24%1, %%mm6 \n\t"

                "movq      %%mm0, %%mm1 \n\t"

                "movq      %%mm2, %%mm3 \n\t"

                "movq      %%mm4, %%mm5 \n\t"

                "movq      %%mm6, %%mm7 \n\t"

                "punpcklbw %%mm0, %%mm0 \n\t"

                "punpckhbw %%mm1, %%mm1 \n\t"

                "punpcklbw %%mm2, %%mm2 \n\t"

                "punpckhbw %%mm3, %%mm3 \n\t"

                "punpcklbw %%mm4, %%mm4 \n\t"

                "punpckhbw %%mm5, %%mm5 \n\t"

                "punpcklbw %%mm6, %%mm6 \n\t"

                "punpckhbw %%mm7, %%mm7 \n\t"

                MOVNTQ"    %%mm0,   %0  \n\t"

                MOVNTQ"    %%mm1,  8%0  \n\t"

                MOVNTQ"    %%mm2, 16%0  \n\t"

                MOVNTQ"    %%mm3, 24%0  \n\t"

                MOVNTQ"    %%mm4, 32%0  \n\t"

                MOVNTQ"    %%mm5, 40%0  \n\t"

                MOVNTQ"    %%mm6, 48%0  \n\t"

                MOVNTQ"    %%mm7, 56%0"

                :"=m"(d[2*x])

                :"m"(s2[x])

                :"memory");</asm>

        </block_content>}</block></for>

        <for pos:start="171:9" pos:end="171:45">for <control pos:start="171:13" pos:end="171:22">(<init pos:start="171:14" pos:end="171:14">;</init><condition pos:start="171:15" pos:end="171:18"><expr pos:start="171:15" pos:end="171:17"><name pos:start="171:15" pos:end="171:15">x</name><operator pos:start="171:16" pos:end="171:16">&lt;</operator><name pos:start="171:17" pos:end="171:17">w</name></expr>;</condition><incr pos:start="171:19" pos:end="171:21"><expr pos:start="171:19" pos:end="171:21"><name pos:start="171:19" pos:end="171:19">x</name><operator pos:start="171:20" pos:end="171:21">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:24" pos:end="171:45"><block_content pos:start="171:24" pos:end="171:45"> <expr_stmt pos:start="171:24" pos:end="171:45"><expr pos:start="171:24" pos:end="171:44"><name pos:start="171:24" pos:end="171:29"><name pos:start="171:24" pos:end="171:24">d</name><index pos:start="171:25" pos:end="171:29">[<expr pos:start="171:26" pos:end="171:28"><literal type="number" pos:start="171:26" pos:end="171:26">2</literal><operator pos:start="171:27" pos:end="171:27">*</operator><name pos:start="171:28" pos:end="171:28">x</name></expr>]</index></name><operator pos:start="171:30" pos:end="171:30">=</operator><name pos:start="171:31" pos:end="171:38"><name pos:start="171:31" pos:end="171:31">d</name><index pos:start="171:32" pos:end="171:38">[<expr pos:start="171:33" pos:end="171:37"><literal type="number" pos:start="171:33" pos:end="171:33">2</literal><operator pos:start="171:34" pos:end="171:34">*</operator><name pos:start="171:35" pos:end="171:35">x</name><operator pos:start="171:36" pos:end="171:36">+</operator><literal type="number" pos:start="171:37" pos:end="171:37">1</literal></expr>]</index></name><operator pos:start="171:39" pos:end="171:39">=</operator><name pos:start="171:40" pos:end="171:44"><name pos:start="171:40" pos:end="171:41">s2</name><index pos:start="171:42" pos:end="171:44">[<expr pos:start="171:43" pos:end="171:43"><name pos:start="171:43" pos:end="171:43">x</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

    <asm pos:start="175:5" pos:end="183:10">__asm__(

            EMMS"       \n\t"

            SFENCE"     \n\t"

            ::: "memory"

        );</asm>

</block_content>}</block></function>
</unit>
