<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3958.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">window</name><parameter_list pos:start="1:18" pos:end="1:75">(<parameter pos:start="1:19" pos:end="1:39"><decl pos:start="1:19" pos:end="1:39"><type pos:start="1:19" pos:end="1:39"><name pos:start="1:19" pos:end="1:32">venc_context_t</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type> <name pos:start="1:36" pos:end="1:39">venc</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:61"><decl pos:start="1:42" pos:end="1:61"><type pos:start="1:42" pos:end="1:61"><name pos:start="1:42" pos:end="1:47">signed</name> <name pos:start="1:49" pos:end="1:53">short</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:61">audio</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:74"><decl pos:start="1:64" pos:end="1:74"><type pos:start="1:64" pos:end="1:74"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:74">samples</name></decl></parameter>)</parameter_list> <block pos:start="1:77" pos:end="97:1">{<block_content pos:start="3:5" pos:end="95:13">

    <decl_stmt pos:start="3:5" pos:end="3:22"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>, <decl pos:start="3:15" pos:end="3:21"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:21">channel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:15">float</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type> <name pos:start="5:19" pos:end="5:21">win</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:28">venc</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:33">win</name><index pos:start="5:34" pos:end="5:36">[<expr pos:start="5:35" pos:end="5:35"><literal type="number" pos:start="5:35" pos:end="5:35">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:50"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">window_len</name> <init pos:start="7:20" pos:end="7:50">= <expr pos:start="7:22" pos:end="7:50"><literal type="number" pos:start="7:22" pos:end="7:22">1</literal> <operator pos:start="7:24" pos:end="7:25">&lt;&lt;</operator> <operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:45"><name pos:start="7:28" pos:end="7:31">venc</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">blocksize</name><index pos:start="7:43" pos:end="7:45">[<expr pos:start="7:44" pos:end="7:44"><literal type="number" pos:start="7:44" pos:end="7:44">0</literal></expr>]</index></name> <operator pos:start="7:47" pos:end="7:47">-</operator> <literal type="number" pos:start="7:49" pos:end="7:49">1</literal><operator pos:start="7:50" pos:end="7:50">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:9">float</name></type> <name pos:start="9:11" pos:end="9:11">n</name> <init pos:start="9:13" pos:end="9:51">= <expr pos:start="9:15" pos:end="9:51"><operator pos:start="9:15" pos:end="9:15">(</operator><name pos:start="9:16" pos:end="9:20">float</name><operator pos:start="9:21" pos:end="9:21">)</operator><operator pos:start="9:22" pos:end="9:22">(</operator><literal type="number" pos:start="9:23" pos:end="9:23">1</literal> <operator pos:start="9:25" pos:end="9:26">&lt;&lt;</operator> <name pos:start="9:28" pos:end="9:45"><name pos:start="9:28" pos:end="9:31">venc</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:42">blocksize</name><index pos:start="9:43" pos:end="9:45">[<expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr>]</index></name><operator pos:start="9:46" pos:end="9:46">)</operator> <operator pos:start="9:48" pos:end="9:48">/</operator> <literal type="number" pos:start="9:50" pos:end="9:51">4.</literal></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="11:5" pos:end="11:20">// FIXME use dsp</comment>



    <if_stmt pos:start="15:5" pos:end="15:48"><if pos:start="15:5" pos:end="15:48">if <condition pos:start="15:8" pos:end="15:38">(<expr pos:start="15:9" pos:end="15:37"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:25"><name pos:start="15:10" pos:end="15:13">venc</name><operator pos:start="15:14" pos:end="15:15">-&gt;</operator><name pos:start="15:16" pos:end="15:25">have_saved</name></name> <operator pos:start="15:27" pos:end="15:28">&amp;&amp;</operator> <operator pos:start="15:30" pos:end="15:30">!</operator><name pos:start="15:31" pos:end="15:37">samples</name></expr>)</condition><block type="pseudo" pos:start="15:40" pos:end="15:48"><block_content pos:start="15:40" pos:end="15:48"> <return pos:start="15:40" pos:end="15:48">return <expr pos:start="15:47" pos:end="15:47"><literal type="number" pos:start="15:47" pos:end="15:47">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="35:5"><if pos:start="19:5" pos:end="27:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:12">venc</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:24">have_saved</name></name></expr>)</condition> <block pos:start="19:27" pos:end="27:5">{<block_content pos:start="21:9" pos:end="25:9">

        <for pos:start="21:9" pos:end="25:9">for <control pos:start="21:13" pos:end="21:62">(<init pos:start="21:14" pos:end="21:25"><expr pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:20">channel</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</init> <condition pos:start="21:27" pos:end="21:51"><expr pos:start="21:27" pos:end="21:50"><name pos:start="21:27" pos:end="21:33">channel</name> <operator pos:start="21:35" pos:end="21:35">&lt;</operator> <name pos:start="21:37" pos:end="21:50"><name pos:start="21:37" pos:end="21:40">venc</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:50">channels</name></name></expr>;</condition> <incr pos:start="21:53" pos:end="21:61"><expr pos:start="21:53" pos:end="21:61"><name pos:start="21:53" pos:end="21:59">channel</name><operator pos:start="21:60" pos:end="21:61">++</operator></expr></incr>)</control> <block pos:start="21:64" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:117">

            <expr_stmt pos:start="23:13" pos:end="23:117"><expr pos:start="23:13" pos:end="23:116"><call pos:start="23:13" pos:end="23:116"><name pos:start="23:13" pos:end="23:18">memcpy</name><argument_list pos:start="23:19" pos:end="23:116">(<argument pos:start="23:20" pos:end="23:55"><expr pos:start="23:20" pos:end="23:55"><name pos:start="23:20" pos:end="23:32"><name pos:start="23:20" pos:end="23:23">venc</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:32">samples</name></name> <operator pos:start="23:34" pos:end="23:34">+</operator> <name pos:start="23:36" pos:end="23:42">channel</name><operator pos:start="23:43" pos:end="23:43">*</operator><name pos:start="23:44" pos:end="23:53">window_len</name><operator pos:start="23:54" pos:end="23:54">*</operator><literal type="number" pos:start="23:55" pos:end="23:55">2</literal></expr></argument>, <argument pos:start="23:58" pos:end="23:89"><expr pos:start="23:58" pos:end="23:89"><name pos:start="23:58" pos:end="23:68"><name pos:start="23:58" pos:end="23:61">venc</name><operator pos:start="23:62" pos:end="23:63">-&gt;</operator><name pos:start="23:64" pos:end="23:68">saved</name></name> <operator pos:start="23:70" pos:end="23:70">+</operator> <name pos:start="23:72" pos:end="23:78">channel</name><operator pos:start="23:79" pos:end="23:79">*</operator><name pos:start="23:80" pos:end="23:89">window_len</name></expr></argument>, <argument pos:start="23:92" pos:end="23:115"><expr pos:start="23:92" pos:end="23:115"><sizeof pos:start="23:92" pos:end="23:104">sizeof<argument_list pos:start="23:98" pos:end="23:104">(<argument pos:start="23:99" pos:end="23:103"><expr pos:start="23:99" pos:end="23:103"><name pos:start="23:99" pos:end="23:103">float</name></expr></argument>)</argument_list></sizeof><operator pos:start="23:105" pos:end="23:105">*</operator><name pos:start="23:106" pos:end="23:115">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:9">

        <for pos:start="29:9" pos:end="33:9">for <control pos:start="29:13" pos:end="29:62">(<init pos:start="29:14" pos:end="29:25"><expr pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:20">channel</name> <operator pos:start="29:22" pos:end="29:22">=</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>;</init> <condition pos:start="29:27" pos:end="29:51"><expr pos:start="29:27" pos:end="29:50"><name pos:start="29:27" pos:end="29:33">channel</name> <operator pos:start="29:35" pos:end="29:35">&lt;</operator> <name pos:start="29:37" pos:end="29:50"><name pos:start="29:37" pos:end="29:40">venc</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:50">channels</name></name></expr>;</condition> <incr pos:start="29:53" pos:end="29:61"><expr pos:start="29:53" pos:end="29:61"><name pos:start="29:53" pos:end="29:59">channel</name><operator pos:start="29:60" pos:end="29:61">++</operator></expr></incr>)</control> <block pos:start="29:64" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:86">

            <expr_stmt pos:start="31:13" pos:end="31:86"><expr pos:start="31:13" pos:end="31:85"><call pos:start="31:13" pos:end="31:85"><name pos:start="31:13" pos:end="31:18">memset</name><argument_list pos:start="31:19" pos:end="31:85">(<argument pos:start="31:20" pos:end="31:55"><expr pos:start="31:20" pos:end="31:55"><name pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:23">venc</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:32">samples</name></name> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:42">channel</name><operator pos:start="31:43" pos:end="31:43">*</operator><name pos:start="31:44" pos:end="31:53">window_len</name><operator pos:start="31:54" pos:end="31:54">*</operator><literal type="number" pos:start="31:55" pos:end="31:55">2</literal></expr></argument>, <argument pos:start="31:58" pos:end="31:58"><expr pos:start="31:58" pos:end="31:58"><literal type="number" pos:start="31:58" pos:end="31:58">0</literal></expr></argument>, <argument pos:start="31:61" pos:end="31:84"><expr pos:start="31:61" pos:end="31:84"><sizeof pos:start="31:61" pos:end="31:73">sizeof<argument_list pos:start="31:67" pos:end="31:73">(<argument pos:start="31:68" pos:end="31:72"><expr pos:start="31:68" pos:end="31:72"><name pos:start="31:68" pos:end="31:72">float</name></expr></argument>)</argument_list></sizeof><operator pos:start="31:74" pos:end="31:74">*</operator><name pos:start="31:75" pos:end="31:84">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="53:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:15">samples</name></expr>)</condition> <block pos:start="39:18" pos:end="53:5">{<block_content pos:start="41:9" pos:end="51:9">

        <for pos:start="41:9" pos:end="51:9">for <control pos:start="41:13" pos:end="41:62">(<init pos:start="41:14" pos:end="41:25"><expr pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:20">channel</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <literal type="number" pos:start="41:24" pos:end="41:24">0</literal></expr>;</init> <condition pos:start="41:27" pos:end="41:51"><expr pos:start="41:27" pos:end="41:50"><name pos:start="41:27" pos:end="41:33">channel</name> <operator pos:start="41:35" pos:end="41:35">&lt;</operator> <name pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:40">venc</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:50">channels</name></name></expr>;</condition> <incr pos:start="41:53" pos:end="41:61"><expr pos:start="41:53" pos:end="41:61"><name pos:start="41:53" pos:end="41:59">channel</name><operator pos:start="41:60" pos:end="41:61">++</operator></expr></incr>)</control> <block pos:start="41:64" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:72">

            <decl_stmt pos:start="43:13" pos:end="43:79"><decl pos:start="43:13" pos:end="43:78"><type pos:start="43:13" pos:end="43:19"><name pos:start="43:13" pos:end="43:17">float</name> <modifier pos:start="43:19" pos:end="43:19">*</modifier></type> <name pos:start="43:21" pos:end="43:26">offset</name> <init pos:start="43:28" pos:end="43:78">= <expr pos:start="43:30" pos:end="43:78"><name pos:start="43:30" pos:end="43:42"><name pos:start="43:30" pos:end="43:33">venc</name><operator pos:start="43:34" pos:end="43:35">-&gt;</operator><name pos:start="43:36" pos:end="43:42">samples</name></name> <operator pos:start="43:44" pos:end="43:44">+</operator> <name pos:start="43:46" pos:end="43:52">channel</name><operator pos:start="43:53" pos:end="43:53">*</operator><name pos:start="43:54" pos:end="43:63">window_len</name><operator pos:start="43:64" pos:end="43:64">*</operator><literal type="number" pos:start="43:65" pos:end="43:67">2</literal> <operator pos:start="43:67" pos:end="43:67">+</operator> <name pos:start="43:69" pos:end="43:78">window_len</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:24"><expr pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:13">j</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:23">channel</name></expr>;</expr_stmt>

            <for pos:start="47:13" pos:end="49:72">for <control pos:start="47:17" pos:end="47:62">(<init pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:22"><name pos:start="47:18" pos:end="47:18">i</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</init> <condition pos:start="47:25" pos:end="47:36"><expr pos:start="47:25" pos:end="47:35"><name pos:start="47:25" pos:end="47:25">i</name> <operator pos:start="47:27" pos:end="47:27">&lt;</operator> <name pos:start="47:29" pos:end="47:35">samples</name></expr>;</condition> <incr pos:start="47:38" pos:end="47:61"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:38">i</name><operator pos:start="47:39" pos:end="47:40">++</operator></expr><operator pos:start="47:41" pos:end="47:41">,</operator> <expr pos:start="47:43" pos:end="47:61"><name pos:start="47:43" pos:end="47:43">j</name> <operator pos:start="47:45" pos:end="47:46">+=</operator> <name pos:start="47:48" pos:end="47:61"><name pos:start="47:48" pos:end="47:51">venc</name><operator pos:start="47:52" pos:end="47:53">-&gt;</operator><name pos:start="47:54" pos:end="47:61">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="49:17" pos:end="49:72"><block_content pos:start="49:17" pos:end="49:72">

                <expr_stmt pos:start="49:17" pos:end="49:72"><expr pos:start="49:17" pos:end="49:71"><name pos:start="49:17" pos:end="49:25"><name pos:start="49:17" pos:end="49:22">offset</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><name pos:start="49:24" pos:end="49:24">i</name></expr>]</index></name> <operator pos:start="49:27" pos:end="49:27">=</operator> <name pos:start="49:29" pos:end="49:36"><name pos:start="49:29" pos:end="49:33">audio</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><name pos:start="49:35" pos:end="49:35">j</name></expr>]</index></name> <operator pos:start="49:38" pos:end="49:38">/</operator> <literal type="number" pos:start="49:40" pos:end="49:45">32768.</literal> <operator pos:start="49:47" pos:end="49:47">*</operator> <name pos:start="49:49" pos:end="49:67"><name pos:start="49:49" pos:end="49:51">win</name><index pos:start="49:52" pos:end="49:67">[<expr pos:start="49:53" pos:end="49:66"><name pos:start="49:53" pos:end="49:62">window_len</name> <operator pos:start="49:64" pos:end="49:64">-</operator> <name pos:start="49:66" pos:end="49:66">i</name></expr>]</index></name> <operator pos:start="49:69" pos:end="49:69">/</operator> <name pos:start="49:71" pos:end="49:71">n</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="61:5">else <block pos:start="53:12" pos:end="61:5">{<block_content pos:start="55:9" pos:end="59:9">

        <for pos:start="55:9" pos:end="59:9">for <control pos:start="55:13" pos:end="55:62">(<init pos:start="55:14" pos:end="55:25"><expr pos:start="55:14" pos:end="55:24"><name pos:start="55:14" pos:end="55:20">channel</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <literal type="number" pos:start="55:24" pos:end="55:24">0</literal></expr>;</init> <condition pos:start="55:27" pos:end="55:51"><expr pos:start="55:27" pos:end="55:50"><name pos:start="55:27" pos:end="55:33">channel</name> <operator pos:start="55:35" pos:end="55:35">&lt;</operator> <name pos:start="55:37" pos:end="55:50"><name pos:start="55:37" pos:end="55:40">venc</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:50">channels</name></name></expr>;</condition> <incr pos:start="55:53" pos:end="55:61"><expr pos:start="55:53" pos:end="55:61"><name pos:start="55:53" pos:end="55:59">channel</name><operator pos:start="55:60" pos:end="55:61">++</operator></expr></incr>)</control> <block pos:start="55:64" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:99">

            <expr_stmt pos:start="57:13" pos:end="57:99"><expr pos:start="57:13" pos:end="57:98"><call pos:start="57:13" pos:end="57:98"><name pos:start="57:13" pos:end="57:18">memset</name><argument_list pos:start="57:19" pos:end="57:98">(<argument pos:start="57:20" pos:end="57:68"><expr pos:start="57:20" pos:end="57:68"><name pos:start="57:20" pos:end="57:32"><name pos:start="57:20" pos:end="57:23">venc</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:32">samples</name></name> <operator pos:start="57:34" pos:end="57:34">+</operator> <name pos:start="57:36" pos:end="57:42">channel</name><operator pos:start="57:43" pos:end="57:43">*</operator><name pos:start="57:44" pos:end="57:53">window_len</name><operator pos:start="57:54" pos:end="57:54">*</operator><literal type="number" pos:start="57:55" pos:end="57:57">2</literal> <operator pos:start="57:57" pos:end="57:57">+</operator> <name pos:start="57:59" pos:end="57:68">window_len</name></expr></argument>, <argument pos:start="57:71" pos:end="57:71"><expr pos:start="57:71" pos:end="57:71"><literal type="number" pos:start="57:71" pos:end="57:71">0</literal></expr></argument>, <argument pos:start="57:74" pos:end="57:97"><expr pos:start="57:74" pos:end="57:97"><sizeof pos:start="57:74" pos:end="57:86">sizeof<argument_list pos:start="57:80" pos:end="57:86">(<argument pos:start="57:81" pos:end="57:85"><expr pos:start="57:81" pos:end="57:85"><name pos:start="57:81" pos:end="57:85">float</name></expr></argument>)</argument_list></sizeof><operator pos:start="57:87" pos:end="57:87">*</operator><name pos:start="57:88" pos:end="57:97">window_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>



    <for pos:start="65:5" pos:end="69:5">for <control pos:start="65:9" pos:end="65:58">(<init pos:start="65:10" pos:end="65:21"><expr pos:start="65:10" pos:end="65:20"><name pos:start="65:10" pos:end="65:16">channel</name> <operator pos:start="65:18" pos:end="65:18">=</operator> <literal type="number" pos:start="65:20" pos:end="65:20">0</literal></expr>;</init> <condition pos:start="65:23" pos:end="65:47"><expr pos:start="65:23" pos:end="65:46"><name pos:start="65:23" pos:end="65:29">channel</name> <operator pos:start="65:31" pos:end="65:31">&lt;</operator> <name pos:start="65:33" pos:end="65:46"><name pos:start="65:33" pos:end="65:36">venc</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:46">channels</name></name></expr>;</condition> <incr pos:start="65:49" pos:end="65:57"><expr pos:start="65:49" pos:end="65:57"><name pos:start="65:49" pos:end="65:55">channel</name><operator pos:start="65:56" pos:end="65:57">++</operator></expr></incr>)</control> <block pos:start="65:60" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:130">

        <expr_stmt pos:start="67:9" pos:end="67:130"><expr pos:start="67:9" pos:end="67:129"><call pos:start="67:9" pos:end="67:129"><name pos:start="67:9" pos:end="67:20">ff_mdct_calc</name><argument_list pos:start="67:21" pos:end="67:129">(<argument pos:start="67:22" pos:end="67:35"><expr pos:start="67:22" pos:end="67:35"><operator pos:start="67:22" pos:end="67:22">&amp;</operator><name pos:start="67:23" pos:end="67:35"><name pos:start="67:23" pos:end="67:26">venc</name><operator pos:start="67:27" pos:end="67:28">-&gt;</operator><name pos:start="67:29" pos:end="67:32">mdct</name><index pos:start="67:33" pos:end="67:35">[<expr pos:start="67:34" pos:end="67:34"><literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:38" pos:end="67:70"><expr pos:start="67:38" pos:end="67:70"><name pos:start="67:38" pos:end="67:49"><name pos:start="67:38" pos:end="67:41">venc</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:49">coeffs</name></name> <operator pos:start="67:51" pos:end="67:51">+</operator> <name pos:start="67:53" pos:end="67:59">channel</name><operator pos:start="67:60" pos:end="67:60">*</operator><name pos:start="67:61" pos:end="67:70">window_len</name></expr></argument>, <argument pos:start="67:73" pos:end="67:108"><expr pos:start="67:73" pos:end="67:108"><name pos:start="67:73" pos:end="67:85"><name pos:start="67:73" pos:end="67:76">venc</name><operator pos:start="67:77" pos:end="67:78">-&gt;</operator><name pos:start="67:79" pos:end="67:85">samples</name></name> <operator pos:start="67:87" pos:end="67:87">+</operator> <name pos:start="67:89" pos:end="67:95">channel</name><operator pos:start="67:96" pos:end="67:96">*</operator><name pos:start="67:97" pos:end="67:106">window_len</name><operator pos:start="67:107" pos:end="67:107">*</operator><literal type="number" pos:start="67:108" pos:end="67:108">2</literal></expr></argument>, <argument pos:start="67:111" pos:end="67:121"><expr pos:start="67:111" pos:end="67:121"><name pos:start="67:111" pos:end="67:121"><name pos:start="67:111" pos:end="67:114">venc</name><operator pos:start="67:115" pos:end="67:116">-&gt;</operator><name pos:start="67:117" pos:end="67:121">floor</name></name></expr></argument><comment type="block" pos:start="67:122" pos:end="67:128">/*tmp*/</comment>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="73:5" pos:end="93:5"><if pos:start="73:5" pos:end="89:5">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:15">samples</name></expr>)</condition> <block pos:start="73:18" pos:end="89:5">{<block_content pos:start="75:9" pos:end="87:29">

        <for pos:start="75:9" pos:end="85:9">for <control pos:start="75:13" pos:end="75:62">(<init pos:start="75:14" pos:end="75:25"><expr pos:start="75:14" pos:end="75:24"><name pos:start="75:14" pos:end="75:20">channel</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <literal type="number" pos:start="75:24" pos:end="75:24">0</literal></expr>;</init> <condition pos:start="75:27" pos:end="75:51"><expr pos:start="75:27" pos:end="75:50"><name pos:start="75:27" pos:end="75:33">channel</name> <operator pos:start="75:35" pos:end="75:35">&lt;</operator> <name pos:start="75:37" pos:end="75:50"><name pos:start="75:37" pos:end="75:40">venc</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:50">channels</name></name></expr>;</condition> <incr pos:start="75:53" pos:end="75:61"><expr pos:start="75:53" pos:end="75:61"><name pos:start="75:53" pos:end="75:59">channel</name><operator pos:start="75:60" pos:end="75:61">++</operator></expr></incr>)</control> <block pos:start="75:64" pos:end="85:9">{<block_content pos:start="77:13" pos:end="83:59">

            <decl_stmt pos:start="77:13" pos:end="77:62"><decl pos:start="77:13" pos:end="77:61"><type pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:17">float</name> <modifier pos:start="77:19" pos:end="77:19">*</modifier></type> <name pos:start="77:21" pos:end="77:26">offset</name> <init pos:start="77:28" pos:end="77:61">= <expr pos:start="77:30" pos:end="77:61"><name pos:start="77:30" pos:end="77:40"><name pos:start="77:30" pos:end="77:33">venc</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:40">saved</name></name> <operator pos:start="77:42" pos:end="77:42">+</operator> <name pos:start="77:44" pos:end="77:50">channel</name><operator pos:start="77:51" pos:end="77:51">*</operator><name pos:start="77:52" pos:end="77:61">window_len</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:24"><expr pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:13">j</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <name pos:start="79:17" pos:end="79:23">channel</name></expr>;</expr_stmt>

            <for pos:start="81:13" pos:end="83:59">for <control pos:start="81:17" pos:end="81:62">(<init pos:start="81:18" pos:end="81:23"><expr pos:start="81:18" pos:end="81:22"><name pos:start="81:18" pos:end="81:18">i</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:36"><expr pos:start="81:25" pos:end="81:35"><name pos:start="81:25" pos:end="81:25">i</name> <operator pos:start="81:27" pos:end="81:27">&lt;</operator> <name pos:start="81:29" pos:end="81:35">samples</name></expr>;</condition> <incr pos:start="81:38" pos:end="81:61"><expr pos:start="81:38" pos:end="81:40"><name pos:start="81:38" pos:end="81:38">i</name><operator pos:start="81:39" pos:end="81:40">++</operator></expr><operator pos:start="81:41" pos:end="81:41">,</operator> <expr pos:start="81:43" pos:end="81:61"><name pos:start="81:43" pos:end="81:43">j</name> <operator pos:start="81:45" pos:end="81:46">+=</operator> <name pos:start="81:48" pos:end="81:61"><name pos:start="81:48" pos:end="81:51">venc</name><operator pos:start="81:52" pos:end="81:53">-&gt;</operator><name pos:start="81:54" pos:end="81:61">channels</name></name></expr></incr>)</control><block type="pseudo" pos:start="83:17" pos:end="83:59"><block_content pos:start="83:17" pos:end="83:59">

                <expr_stmt pos:start="83:17" pos:end="83:59"><expr pos:start="83:17" pos:end="83:58"><name pos:start="83:17" pos:end="83:25"><name pos:start="83:17" pos:end="83:22">offset</name><index pos:start="83:23" pos:end="83:25">[<expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">i</name></expr>]</index></name> <operator pos:start="83:27" pos:end="83:27">=</operator> <name pos:start="83:29" pos:end="83:36"><name pos:start="83:29" pos:end="83:33">audio</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">j</name></expr>]</index></name> <operator pos:start="83:38" pos:end="83:38">/</operator> <literal type="number" pos:start="83:40" pos:end="83:45">32768.</literal> <operator pos:start="83:47" pos:end="83:47">*</operator> <name pos:start="83:49" pos:end="83:54"><name pos:start="83:49" pos:end="83:51">win</name><index pos:start="83:52" pos:end="83:54">[<expr pos:start="83:53" pos:end="83:53"><name pos:start="83:53" pos:end="83:53">i</name></expr>]</index></name> <operator pos:start="83:56" pos:end="83:56">/</operator> <name pos:start="83:58" pos:end="83:58">n</name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:12">venc</name><operator pos:start="87:13" pos:end="87:14">-&gt;</operator><name pos:start="87:15" pos:end="87:24">have_saved</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="93:5">else <block pos:start="89:12" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:29">

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:12">venc</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:24">have_saved</name></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <literal type="number" pos:start="91:28" pos:end="91:28">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="95:5" pos:end="95:13">return <expr pos:start="95:12" pos:end="95:12"><literal type="number" pos:start="95:12" pos:end="95:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
