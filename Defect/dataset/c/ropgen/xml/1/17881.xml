<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17881.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">v4l2_read_header</name><parameter_list pos:start="1:28" pos:end="1:48">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="291:1">{<block_content pos:start="5:5" pos:end="289:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">res</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:27">desired_format</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:46"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:8">enum</name> <name pos:start="13:10" pos:end="13:18">AVCodecID</name></name></type> <name pos:start="13:20" pos:end="13:27">codec_id</name> <init pos:start="13:29" pos:end="13:46">= <expr pos:start="13:31" pos:end="13:46"><name pos:start="13:31" pos:end="13:46">AV_CODEC_ID_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:49"><decl pos:start="15:5" pos:end="15:48"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:8">enum</name> <name pos:start="15:10" pos:end="15:22">AVPixelFormat</name></name></type> <name pos:start="15:24" pos:end="15:30">pix_fmt</name> <init pos:start="15:32" pos:end="15:48">= <expr pos:start="15:34" pos:end="15:48"><name pos:start="15:34" pos:end="15:48">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:21">v4l2_input</name></name></type> <name pos:start="17:23" pos:end="17:27">input</name> <init pos:start="17:29" pos:end="17:35">= <expr pos:start="17:31" pos:end="17:35"><block pos:start="17:31" pos:end="17:35">{ <expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:6">st</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:28">avformat_new_stream</name><argument_list pos:start="21:29" pos:end="21:38">(<argument pos:start="21:30" pos:end="21:31"><expr pos:start="21:30" pos:end="21:31"><name pos:start="21:30" pos:end="21:31">s1</name></expr></argument>, <argument pos:start="21:34" pos:end="21:37"><expr pos:start="21:34" pos:end="21:37"><name pos:start="21:34" pos:end="21:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="30:0"><if pos:start="23:5" pos:end="30:0">if <condition pos:start="23:8" pos:end="23:12">(<expr pos:start="23:9" pos:end="23:11"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:11">st</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="30:0"><block_content pos:start="25:9" pos:end="30:0">

        <return pos:start="25:9" pos:end="30:0">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



<cpp:if pos:start="29:1" pos:end="29:18">#<cpp:directive pos:start="29:2" pos:end="29:3">if</cpp:directive> <expr pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:18">CONFIG_LIBV4L2</name></expr></cpp:if>

    <comment type="block" pos:start="31:5" pos:end="33:44">/* silence libv4l2 logging. if fopen() fails v4l2_log_file will be NULL

       and errors will get sent to stderr */</comment>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:43"><name pos:start="35:5" pos:end="35:17">v4l2_log_file</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:43"><name pos:start="35:21" pos:end="35:25">fopen</name><argument_list pos:start="35:26" pos:end="35:43">(<argument pos:start="35:27" pos:end="35:37"><expr pos:start="35:27" pos:end="35:37"><literal type="string" pos:start="35:27" pos:end="35:37">"/dev/null"</literal></expr></argument>, <argument pos:start="35:40" pos:end="35:42"><expr pos:start="35:40" pos:end="35:42"><literal type="string" pos:start="35:40" pos:end="35:42">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="41:5" pos:end="41:28"><expr pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">fd</name></name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="41:27"><name pos:start="41:13" pos:end="41:23">device_open</name><argument_list pos:start="41:24" pos:end="41:27">(<argument pos:start="41:25" pos:end="41:26"><expr pos:start="41:25" pos:end="41:26"><name pos:start="41:25" pos:end="41:26">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="45:21"><if pos:start="43:5" pos:end="45:21">if <condition pos:start="43:8" pos:end="43:18">(<expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:13">fd</name></name> <operator pos:start="43:15" pos:end="43:15">&lt;</operator> <literal type="number" pos:start="43:17" pos:end="43:17">0</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:21"><block_content pos:start="45:9" pos:end="45:21">

        <return pos:start="45:9" pos:end="45:21">return <expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:20">fd</name></name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="79:5"><if pos:start="49:5" pos:end="65:5">if <condition pos:start="49:8" pos:end="49:25">(<expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:18">channel</name></name> <operator pos:start="49:20" pos:end="49:21">!=</operator> <operator pos:start="49:23" pos:end="49:23">-</operator><literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>)</condition> <block pos:start="49:27" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:9">

        <comment type="block" pos:start="51:9" pos:end="51:29">/* set video input */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:78"><expr pos:start="53:9" pos:end="53:77"><call pos:start="53:9" pos:end="53:77"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:77">(<argument pos:start="53:16" pos:end="53:17"><expr pos:start="53:16" pos:end="53:17"><name pos:start="53:16" pos:end="53:17">s1</name></expr></argument>, <argument pos:start="53:20" pos:end="53:31"><expr pos:start="53:20" pos:end="53:31"><name pos:start="53:20" pos:end="53:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="53:34" pos:end="53:64"><expr pos:start="53:34" pos:end="53:64"><literal type="string" pos:start="53:34" pos:end="53:64">"Selecting input_channel: %d\n"</literal></expr></argument>, <argument pos:start="53:67" pos:end="53:76"><expr pos:start="53:67" pos:end="53:76"><name pos:start="53:67" pos:end="53:76"><name pos:start="53:67" pos:end="53:67">s</name><operator pos:start="53:68" pos:end="53:69">-&gt;</operator><name pos:start="53:70" pos:end="53:76">channel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="63:9"><if pos:start="55:9" pos:end="63:9">if <condition pos:start="55:12" pos:end="55:63">(<expr pos:start="55:13" pos:end="55:62"><call pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:22">v4l2_ioctl</name><argument_list pos:start="55:23" pos:end="55:58">(<argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">fd</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:44"><expr pos:start="55:31" pos:end="55:44"><name pos:start="55:31" pos:end="55:44">VIDIOC_S_INPUT</name></expr></argument>, <argument pos:start="55:47" pos:end="55:57"><expr pos:start="55:47" pos:end="55:57"><operator pos:start="55:47" pos:end="55:47">&amp;</operator><name pos:start="55:48" pos:end="55:57"><name pos:start="55:48" pos:end="55:48">s</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:57">channel</name></name></expr></argument>)</argument_list></call> <operator pos:start="55:60" pos:end="55:60">&lt;</operator> <literal type="number" pos:start="55:62" pos:end="55:62">0</literal></expr>)</condition> <block pos:start="55:65" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:23">

            <expr_stmt pos:start="57:13" pos:end="57:33"><expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:15">res</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <call pos:start="57:19" pos:end="57:32"><name pos:start="57:19" pos:end="57:25">AVERROR</name><argument_list pos:start="57:26" pos:end="57:32">(<argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:85"><expr pos:start="59:13" pos:end="59:84"><call pos:start="59:13" pos:end="59:84"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:84">(<argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><name pos:start="59:20" pos:end="59:21">s1</name></expr></argument>, <argument pos:start="59:24" pos:end="59:35"><expr pos:start="59:24" pos:end="59:35"><name pos:start="59:24" pos:end="59:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:38" pos:end="59:66"><expr pos:start="59:38" pos:end="59:66"><literal type="string" pos:start="59:38" pos:end="59:66">"ioctl(VIDIOC_S_INPUT): %s\n"</literal></expr></argument>, <argument pos:start="59:69" pos:end="59:83"><expr pos:start="59:69" pos:end="59:83"><call pos:start="59:69" pos:end="59:83"><name pos:start="59:69" pos:end="59:78">av_err2str</name><argument_list pos:start="59:79" pos:end="59:83">(<argument pos:start="59:80" pos:end="59:82"><expr pos:start="59:80" pos:end="59:82"><name pos:start="59:80" pos:end="59:82">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="79:5">else <block pos:start="65:12" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:9">

        <comment type="block" pos:start="67:9" pos:end="67:37">/* get current video input */</comment>

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="77:9">if <condition pos:start="69:12" pos:end="69:63">(<expr pos:start="69:13" pos:end="69:62"><call pos:start="69:13" pos:end="69:58"><name pos:start="69:13" pos:end="69:22">v4l2_ioctl</name><argument_list pos:start="69:23" pos:end="69:58">(<argument pos:start="69:24" pos:end="69:28"><expr pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:28"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:28">fd</name></name></expr></argument>, <argument pos:start="69:31" pos:end="69:44"><expr pos:start="69:31" pos:end="69:44"><name pos:start="69:31" pos:end="69:44">VIDIOC_G_INPUT</name></expr></argument>, <argument pos:start="69:47" pos:end="69:57"><expr pos:start="69:47" pos:end="69:57"><operator pos:start="69:47" pos:end="69:47">&amp;</operator><name pos:start="69:48" pos:end="69:57"><name pos:start="69:48" pos:end="69:48">s</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:57">channel</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:60" pos:end="69:60">&lt;</operator> <literal type="number" pos:start="69:62" pos:end="69:62">0</literal></expr>)</condition> <block pos:start="69:65" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:23">

            <expr_stmt pos:start="71:13" pos:end="71:33"><expr pos:start="71:13" pos:end="71:32"><name pos:start="71:13" pos:end="71:15">res</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:32"><name pos:start="71:19" pos:end="71:25">AVERROR</name><argument_list pos:start="71:26" pos:end="71:32">(<argument pos:start="71:27" pos:end="71:31"><expr pos:start="71:27" pos:end="71:31"><name pos:start="71:27" pos:end="71:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:85"><expr pos:start="73:13" pos:end="73:84"><call pos:start="73:13" pos:end="73:84"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:84">(<argument pos:start="73:20" pos:end="73:21"><expr pos:start="73:20" pos:end="73:21"><name pos:start="73:20" pos:end="73:21">s1</name></expr></argument>, <argument pos:start="73:24" pos:end="73:35"><expr pos:start="73:24" pos:end="73:35"><name pos:start="73:24" pos:end="73:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:38" pos:end="73:66"><expr pos:start="73:38" pos:end="73:66"><literal type="string" pos:start="73:38" pos:end="73:66">"ioctl(VIDIOC_G_INPUT): %s\n"</literal></expr></argument>, <argument pos:start="73:69" pos:end="73:83"><expr pos:start="73:69" pos:end="73:83"><call pos:start="73:69" pos:end="73:83"><name pos:start="73:69" pos:end="73:78">av_err2str</name><argument_list pos:start="73:79" pos:end="73:83">(<argument pos:start="73:80" pos:end="73:82"><expr pos:start="73:80" pos:end="73:82"><name pos:start="73:80" pos:end="73:82">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:20">/* enum input */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:29"><expr pos:start="85:5" pos:end="85:28"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:9">input</name><operator pos:start="85:10" pos:end="85:10">.</operator><name pos:start="85:11" pos:end="85:15">index</name></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:28"><name pos:start="85:19" pos:end="85:19">s</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:28">channel</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:56">(<expr pos:start="87:9" pos:end="87:55"><call pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:18">v4l2_ioctl</name><argument_list pos:start="87:19" pos:end="87:51">(<argument pos:start="87:20" pos:end="87:24"><expr pos:start="87:20" pos:end="87:24"><name pos:start="87:20" pos:end="87:24"><name pos:start="87:20" pos:end="87:20">s</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:24">fd</name></name></expr></argument>, <argument pos:start="87:27" pos:end="87:42"><expr pos:start="87:27" pos:end="87:42"><name pos:start="87:27" pos:end="87:42">VIDIOC_ENUMINPUT</name></expr></argument>, <argument pos:start="87:45" pos:end="87:50"><expr pos:start="87:45" pos:end="87:50"><operator pos:start="87:45" pos:end="87:45">&amp;</operator><name pos:start="87:46" pos:end="87:50">input</name></expr></argument>)</argument_list></call> <operator pos:start="87:53" pos:end="87:53">&lt;</operator> <literal type="number" pos:start="87:55" pos:end="87:55">0</literal></expr>)</condition> <block pos:start="87:58" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:19">

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:11">res</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="89:28"><name pos:start="89:15" pos:end="89:21">AVERROR</name><argument_list pos:start="89:22" pos:end="89:28">(<argument pos:start="89:23" pos:end="89:27"><expr pos:start="89:23" pos:end="89:27"><name pos:start="89:23" pos:end="89:27">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:83"><expr pos:start="91:9" pos:end="91:82"><call pos:start="91:9" pos:end="91:82"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="91:82">(<argument pos:start="91:16" pos:end="91:17"><expr pos:start="91:16" pos:end="91:17"><name pos:start="91:16" pos:end="91:17">s1</name></expr></argument>, <argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="91:34" pos:end="91:64"><expr pos:start="91:34" pos:end="91:64"><literal type="string" pos:start="91:34" pos:end="91:64">"ioctl(VIDIOC_ENUMINPUT): %s\n"</literal></expr></argument>, <argument pos:start="91:67" pos:end="91:81"><expr pos:start="91:67" pos:end="91:81"><call pos:start="91:67" pos:end="91:81"><name pos:start="91:67" pos:end="91:76">av_err2str</name><argument_list pos:start="91:77" pos:end="91:81">(<argument pos:start="91:78" pos:end="91:80"><expr pos:start="91:78" pos:end="91:80"><name pos:start="91:78" pos:end="91:80">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:19">return <expr pos:start="93:16" pos:end="93:18"><name pos:start="93:16" pos:end="93:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:26"><expr pos:start="97:5" pos:end="97:25"><name pos:start="97:5" pos:end="97:13"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:13">std_id</name></name> <operator pos:start="97:15" pos:end="97:15">=</operator> <name pos:start="97:17" pos:end="97:25"><name pos:start="97:17" pos:end="97:21">input</name><operator pos:start="97:22" pos:end="97:22">.</operator><name pos:start="97:23" pos:end="97:25">std</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="101:35"><expr pos:start="99:5" pos:end="101:34"><call pos:start="99:5" pos:end="101:34"><name pos:start="99:5" pos:end="99:10">av_log</name><argument_list pos:start="99:11" pos:end="101:34">(<argument pos:start="99:12" pos:end="99:13"><expr pos:start="99:12" pos:end="99:13"><name pos:start="99:12" pos:end="99:13">s1</name></expr></argument>, <argument pos:start="99:16" pos:end="99:27"><expr pos:start="99:16" pos:end="99:27"><name pos:start="99:16" pos:end="99:27">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="99:30" pos:end="99:74"><expr pos:start="99:30" pos:end="99:74"><literal type="string" pos:start="99:30" pos:end="99:74">"Current input_channel: %d, input_name: %s\n"</literal></expr></argument>,

           <argument pos:start="101:12" pos:end="101:21"><expr pos:start="101:12" pos:end="101:21"><name pos:start="101:12" pos:end="101:21"><name pos:start="101:12" pos:end="101:12">s</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:21">channel</name></name></expr></argument>, <argument pos:start="101:24" pos:end="101:33"><expr pos:start="101:24" pos:end="101:33"><name pos:start="101:24" pos:end="101:33"><name pos:start="101:24" pos:end="101:28">input</name><operator pos:start="101:29" pos:end="101:29">.</operator><name pos:start="101:30" pos:end="101:33">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:23">(<expr pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:9">s</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:22">list_format</name></name></expr>)</condition> <block pos:start="105:25" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:28">

        <expr_stmt pos:start="107:9" pos:end="107:48"><expr pos:start="107:9" pos:end="107:47"><call pos:start="107:9" pos:end="107:47"><name pos:start="107:9" pos:end="107:20">list_formats</name><argument_list pos:start="107:21" pos:end="107:47">(<argument pos:start="107:22" pos:end="107:23"><expr pos:start="107:22" pos:end="107:23"><name pos:start="107:22" pos:end="107:23">s1</name></expr></argument>, <argument pos:start="107:26" pos:end="107:30"><expr pos:start="107:26" pos:end="107:30"><name pos:start="107:26" pos:end="107:30"><name pos:start="107:26" pos:end="107:26">s</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:30">fd</name></name></expr></argument>, <argument pos:start="107:33" pos:end="107:46"><expr pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:33">s</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:46">list_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="109:9" pos:end="109:28">return <expr pos:start="109:16" pos:end="109:27"><name pos:start="109:16" pos:end="109:27">AVERROR_EXIT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:25">(<expr pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:24"><name pos:start="115:9" pos:end="115:9">s</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:24">list_standard</name></name></expr>)</condition> <block pos:start="115:27" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:28">

        <expr_stmt pos:start="117:9" pos:end="117:27"><expr pos:start="117:9" pos:end="117:26"><call pos:start="117:9" pos:end="117:26"><name pos:start="117:9" pos:end="117:22">list_standards</name><argument_list pos:start="117:23" pos:end="117:26">(<argument pos:start="117:24" pos:end="117:25"><expr pos:start="117:24" pos:end="117:25"><name pos:start="117:24" pos:end="117:25">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:28">return <expr pos:start="119:16" pos:end="119:27"><name pos:start="119:16" pos:end="119:27">AVERROR_EXIT</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:44"><expr pos:start="125:5" pos:end="125:43"><call pos:start="125:5" pos:end="125:43"><name pos:start="125:5" pos:end="125:23">avpriv_set_pts_info</name><argument_list pos:start="125:24" pos:end="125:43">(<argument pos:start="125:25" pos:end="125:26"><expr pos:start="125:25" pos:end="125:26"><name pos:start="125:25" pos:end="125:26">st</name></expr></argument>, <argument pos:start="125:29" pos:end="125:30"><expr pos:start="125:29" pos:end="125:30"><literal type="number" pos:start="125:29" pos:end="125:30">64</literal></expr></argument>, <argument pos:start="125:33" pos:end="125:33"><expr pos:start="125:33" pos:end="125:33"><literal type="number" pos:start="125:33" pos:end="125:33">1</literal></expr></argument>, <argument pos:start="125:36" pos:end="125:42"><expr pos:start="125:36" pos:end="125:42"><literal type="number" pos:start="125:36" pos:end="125:42">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:46" pos:end="125:68">/* 64 bits pts in us */</comment>



    <if_stmt pos:start="129:5" pos:end="157:5"><if pos:start="129:5" pos:end="157:5">if <condition pos:start="129:8" pos:end="129:24">(<expr pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:23">pixel_format</name></name></expr>)</condition> <block pos:start="129:26" pos:end="157:5">{<block_content pos:start="131:9" pos:end="155:9">

        <decl_stmt pos:start="131:9" pos:end="131:71"><decl pos:start="131:9" pos:end="131:70"><type pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:15">AVCodec</name> <modifier pos:start="131:17" pos:end="131:17">*</modifier></type><name pos:start="131:18" pos:end="131:22">codec</name> <init pos:start="131:24" pos:end="131:70">= <expr pos:start="131:26" pos:end="131:70"><call pos:start="131:26" pos:end="131:70"><name pos:start="131:26" pos:end="131:53">avcodec_find_decoder_by_name</name><argument_list pos:start="131:54" pos:end="131:70">(<argument pos:start="131:55" pos:end="131:69"><expr pos:start="131:55" pos:end="131:69"><name pos:start="131:55" pos:end="131:69"><name pos:start="131:55" pos:end="131:55">s</name><operator pos:start="131:56" pos:end="131:57">-&gt;</operator><name pos:start="131:58" pos:end="131:69">pixel_format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="135:9" pos:end="137:43"><if pos:start="135:9" pos:end="137:43">if <condition pos:start="135:12" pos:end="135:18">(<expr pos:start="135:13" pos:end="135:17"><name pos:start="135:13" pos:end="135:17">codec</name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:43"><block_content pos:start="137:13" pos:end="137:43">

            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:14">s1</name><operator pos:start="137:15" pos:end="137:16">-&gt;</operator><name pos:start="137:17" pos:end="137:30">video_codec_id</name></name> <operator pos:start="137:32" pos:end="137:32">=</operator> <name pos:start="137:34" pos:end="137:42"><name pos:start="137:34" pos:end="137:38">codec</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:42">id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:50"><expr pos:start="141:9" pos:end="141:49"><name pos:start="141:9" pos:end="141:15">pix_fmt</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:49"><name pos:start="141:19" pos:end="141:32">av_get_pix_fmt</name><argument_list pos:start="141:33" pos:end="141:49">(<argument pos:start="141:34" pos:end="141:48"><expr pos:start="141:34" pos:end="141:48"><name pos:start="141:34" pos:end="141:48"><name pos:start="141:34" pos:end="141:34">s</name><operator pos:start="141:35" pos:end="141:36">-&gt;</operator><name pos:start="141:37" pos:end="141:48">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="145:9" pos:end="155:9"><if pos:start="145:9" pos:end="155:9">if <condition pos:start="145:12" pos:end="145:49">(<expr pos:start="145:13" pos:end="145:48"><name pos:start="145:13" pos:end="145:19">pix_fmt</name> <operator pos:start="145:21" pos:end="145:22">==</operator> <name pos:start="145:24" pos:end="145:38">AV_PIX_FMT_NONE</name> <operator pos:start="145:40" pos:end="145:41">&amp;&amp;</operator> <operator pos:start="145:43" pos:end="145:43">!</operator><name pos:start="145:44" pos:end="145:48">codec</name></expr>)</condition> <block pos:start="145:51" pos:end="155:9">{<block_content pos:start="147:13" pos:end="153:35">

            <expr_stmt pos:start="147:13" pos:end="149:36"><expr pos:start="147:13" pos:end="149:35"><call pos:start="147:13" pos:end="149:35"><name pos:start="147:13" pos:end="147:18">av_log</name><argument_list pos:start="147:19" pos:end="149:35">(<argument pos:start="147:20" pos:end="147:21"><expr pos:start="147:20" pos:end="147:21"><name pos:start="147:20" pos:end="147:21">s1</name></expr></argument>, <argument pos:start="147:24" pos:end="147:35"><expr pos:start="147:24" pos:end="147:35"><name pos:start="147:24" pos:end="147:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="147:38" pos:end="147:66"><expr pos:start="147:38" pos:end="147:66"><literal type="string" pos:start="147:38" pos:end="147:66">"No such input format: %s.\n"</literal></expr></argument>,

                   <argument pos:start="149:20" pos:end="149:34"><expr pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:34"><name pos:start="149:20" pos:end="149:20">s</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:34">pixel_format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <return pos:start="153:13" pos:end="153:35">return <expr pos:start="153:20" pos:end="153:34"><call pos:start="153:20" pos:end="153:34"><name pos:start="153:20" pos:end="153:26">AVERROR</name><argument_list pos:start="153:27" pos:end="153:34">(<argument pos:start="153:28" pos:end="153:33"><expr pos:start="153:28" pos:end="153:33"><name pos:start="153:28" pos:end="153:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="193:5"><if pos:start="161:5" pos:end="193:5">if <condition pos:start="161:8" pos:end="161:32">(<expr pos:start="161:9" pos:end="161:31"><operator pos:start="161:9" pos:end="161:9">!</operator><name pos:start="161:10" pos:end="161:17"><name pos:start="161:10" pos:end="161:10">s</name><operator pos:start="161:11" pos:end="161:12">-&gt;</operator><name pos:start="161:13" pos:end="161:17">width</name></name> <operator pos:start="161:19" pos:end="161:20">&amp;&amp;</operator> <operator pos:start="161:22" pos:end="161:22">!</operator><name pos:start="161:23" pos:end="161:31"><name pos:start="161:23" pos:end="161:23">s</name><operator pos:start="161:24" pos:end="161:25">-&gt;</operator><name pos:start="161:26" pos:end="161:31">height</name></name></expr>)</condition> <block pos:start="161:34" pos:end="193:5">{<block_content pos:start="163:9" pos:end="191:69">

        <decl_stmt pos:start="163:9" pos:end="163:31"><decl pos:start="163:9" pos:end="163:30"><type pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:14">struct</name> <name pos:start="163:16" pos:end="163:26">v4l2_format</name></name></type> <name pos:start="163:28" pos:end="163:30">fmt</name></decl>;</decl_stmt>



        <expr_stmt pos:start="167:9" pos:end="169:67"><expr pos:start="167:9" pos:end="169:66"><call pos:start="167:9" pos:end="169:66"><name pos:start="167:9" pos:end="167:14">av_log</name><argument_list pos:start="167:15" pos:end="169:66">(<argument pos:start="167:16" pos:end="167:17"><expr pos:start="167:16" pos:end="167:17"><name pos:start="167:16" pos:end="167:17">s1</name></expr></argument>, <argument pos:start="167:20" pos:end="167:33"><expr pos:start="167:20" pos:end="167:33"><name pos:start="167:20" pos:end="167:33">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="169:16" pos:end="169:65"><expr pos:start="169:16" pos:end="169:65"><literal type="string" pos:start="169:16" pos:end="169:65">"Querying the device for the current frame size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:47"><expr pos:start="171:9" pos:end="171:46"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:11">fmt</name><operator pos:start="171:12" pos:end="171:12">.</operator><name pos:start="171:13" pos:end="171:16">type</name></name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:46">V4L2_BUF_TYPE_VIDEO_CAPTURE</name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="181:9"><if pos:start="173:9" pos:end="181:9">if <condition pos:start="173:12" pos:end="173:54">(<expr pos:start="173:13" pos:end="173:53"><call pos:start="173:13" pos:end="173:49"><name pos:start="173:13" pos:end="173:22">v4l2_ioctl</name><argument_list pos:start="173:23" pos:end="173:49">(<argument pos:start="173:24" pos:end="173:28"><expr pos:start="173:24" pos:end="173:28"><name pos:start="173:24" pos:end="173:28"><name pos:start="173:24" pos:end="173:24">s</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:28">fd</name></name></expr></argument>, <argument pos:start="173:31" pos:end="173:42"><expr pos:start="173:31" pos:end="173:42"><name pos:start="173:31" pos:end="173:42">VIDIOC_G_FMT</name></expr></argument>, <argument pos:start="173:45" pos:end="173:48"><expr pos:start="173:45" pos:end="173:48"><operator pos:start="173:45" pos:end="173:45">&amp;</operator><name pos:start="173:46" pos:end="173:48">fmt</name></expr></argument>)</argument_list></call> <operator pos:start="173:51" pos:end="173:51">&lt;</operator> <literal type="number" pos:start="173:53" pos:end="173:53">0</literal></expr>)</condition> <block pos:start="173:56" pos:end="181:9">{<block_content pos:start="175:13" pos:end="179:23">

            <expr_stmt pos:start="175:13" pos:end="175:33"><expr pos:start="175:13" pos:end="175:32"><name pos:start="175:13" pos:end="175:15">res</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:32"><name pos:start="175:19" pos:end="175:25">AVERROR</name><argument_list pos:start="175:26" pos:end="175:32">(<argument pos:start="175:27" pos:end="175:31"><expr pos:start="175:27" pos:end="175:31"><name pos:start="175:27" pos:end="175:31">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:83"><expr pos:start="177:13" pos:end="177:82"><call pos:start="177:13" pos:end="177:82"><name pos:start="177:13" pos:end="177:18">av_log</name><argument_list pos:start="177:19" pos:end="177:82">(<argument pos:start="177:20" pos:end="177:21"><expr pos:start="177:20" pos:end="177:21"><name pos:start="177:20" pos:end="177:21">s1</name></expr></argument>, <argument pos:start="177:24" pos:end="177:35"><expr pos:start="177:24" pos:end="177:35"><name pos:start="177:24" pos:end="177:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="177:38" pos:end="177:64"><expr pos:start="177:38" pos:end="177:64"><literal type="string" pos:start="177:38" pos:end="177:64">"ioctl(VIDIOC_G_FMT): %s\n"</literal></expr></argument>, <argument pos:start="177:67" pos:end="177:81"><expr pos:start="177:67" pos:end="177:81"><call pos:start="177:67" pos:end="177:81"><name pos:start="177:67" pos:end="177:76">av_err2str</name><argument_list pos:start="177:77" pos:end="177:81">(<argument pos:start="177:78" pos:end="177:80"><expr pos:start="177:78" pos:end="177:80"><name pos:start="177:78" pos:end="177:80">res</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="179:13" pos:end="179:23">return <expr pos:start="179:20" pos:end="179:22"><name pos:start="179:20" pos:end="179:22">res</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="185:9" pos:end="185:38"><expr pos:start="185:9" pos:end="185:37"><name pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:9">s</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:16">width</name></name>  <operator pos:start="185:19" pos:end="185:19">=</operator> <name pos:start="185:21" pos:end="185:37"><name pos:start="185:21" pos:end="185:23">fmt</name><operator pos:start="185:24" pos:end="185:24">.</operator><name pos:start="185:25" pos:end="185:27">fmt</name><operator pos:start="185:28" pos:end="185:28">.</operator><name pos:start="185:29" pos:end="185:31">pix</name><operator pos:start="185:32" pos:end="185:32">.</operator><name pos:start="185:33" pos:end="185:37">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:39"><expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:17"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:17">height</name></name> <operator pos:start="187:19" pos:end="187:19">=</operator> <name pos:start="187:21" pos:end="187:38"><name pos:start="187:21" pos:end="187:23">fmt</name><operator pos:start="187:24" pos:end="187:24">.</operator><name pos:start="187:25" pos:end="187:27">fmt</name><operator pos:start="187:28" pos:end="187:28">.</operator><name pos:start="187:29" pos:end="187:31">pix</name><operator pos:start="187:32" pos:end="187:32">.</operator><name pos:start="187:33" pos:end="187:38">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="191:69"><expr pos:start="189:9" pos:end="191:68"><call pos:start="189:9" pos:end="191:68"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="191:68">(<argument pos:start="189:16" pos:end="189:17"><expr pos:start="189:16" pos:end="189:17"><name pos:start="189:16" pos:end="189:17">s1</name></expr></argument>, <argument pos:start="189:20" pos:end="189:33"><expr pos:start="189:20" pos:end="189:33"><name pos:start="189:20" pos:end="189:33">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="191:16" pos:end="191:46"><expr pos:start="191:16" pos:end="191:46"><literal type="string" pos:start="191:16" pos:end="191:46">"Setting frame size to %dx%d\n"</literal></expr></argument>, <argument pos:start="191:49" pos:end="191:56"><expr pos:start="191:49" pos:end="191:56"><name pos:start="191:49" pos:end="191:56"><name pos:start="191:49" pos:end="191:49">s</name><operator pos:start="191:50" pos:end="191:51">-&gt;</operator><name pos:start="191:52" pos:end="191:56">width</name></name></expr></argument>, <argument pos:start="191:59" pos:end="191:67"><expr pos:start="191:59" pos:end="191:67"><name pos:start="191:59" pos:end="191:67"><name pos:start="191:59" pos:end="191:59">s</name><operator pos:start="191:60" pos:end="191:61">-&gt;</operator><name pos:start="191:62" pos:end="191:67">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:90"><expr pos:start="197:5" pos:end="197:89"><name pos:start="197:5" pos:end="197:7">res</name> <operator pos:start="197:9" pos:end="197:9">=</operator> <call pos:start="197:11" pos:end="197:89"><name pos:start="197:11" pos:end="197:25">device_try_init</name><argument_list pos:start="197:26" pos:end="197:89">(<argument pos:start="197:27" pos:end="197:28"><expr pos:start="197:27" pos:end="197:28"><name pos:start="197:27" pos:end="197:28">s1</name></expr></argument>, <argument pos:start="197:31" pos:end="197:37"><expr pos:start="197:31" pos:end="197:37"><name pos:start="197:31" pos:end="197:37">pix_fmt</name></expr></argument>, <argument pos:start="197:40" pos:end="197:48"><expr pos:start="197:40" pos:end="197:48"><operator pos:start="197:40" pos:end="197:40">&amp;</operator><name pos:start="197:41" pos:end="197:48"><name pos:start="197:41" pos:end="197:41">s</name><operator pos:start="197:42" pos:end="197:43">-&gt;</operator><name pos:start="197:44" pos:end="197:48">width</name></name></expr></argument>, <argument pos:start="197:51" pos:end="197:60"><expr pos:start="197:51" pos:end="197:60"><operator pos:start="197:51" pos:end="197:51">&amp;</operator><name pos:start="197:52" pos:end="197:60"><name pos:start="197:52" pos:end="197:52">s</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:60">height</name></name></expr></argument>, <argument pos:start="197:63" pos:end="197:77"><expr pos:start="197:63" pos:end="197:77"><operator pos:start="197:63" pos:end="197:63">&amp;</operator><name pos:start="197:64" pos:end="197:77">desired_format</name></expr></argument>, <argument pos:start="197:80" pos:end="197:88"><expr pos:start="197:80" pos:end="197:88"><operator pos:start="197:80" pos:end="197:80">&amp;</operator><name pos:start="197:81" pos:end="197:88">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="205:5"><if pos:start="199:5" pos:end="205:5">if <condition pos:start="199:8" pos:end="199:16">(<expr pos:start="199:9" pos:end="199:15"><name pos:start="199:9" pos:end="199:11">res</name> <operator pos:start="199:13" pos:end="199:13">&lt;</operator> <literal type="number" pos:start="199:15" pos:end="199:15">0</literal></expr>)</condition> <block pos:start="199:18" pos:end="205:5">{<block_content pos:start="201:9" pos:end="203:19">

        <expr_stmt pos:start="201:9" pos:end="201:26"><expr pos:start="201:9" pos:end="201:25"><call pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:18">v4l2_close</name><argument_list pos:start="201:19" pos:end="201:25">(<argument pos:start="201:20" pos:end="201:24"><expr pos:start="201:20" pos:end="201:24"><name pos:start="201:20" pos:end="201:24"><name pos:start="201:20" pos:end="201:20">s</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:24">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="203:9" pos:end="203:19">return <expr pos:start="203:16" pos:end="203:18"><name pos:start="203:16" pos:end="203:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="209:5" pos:end="215:7">/* If no pixel_format was specified, the codec_id was not known up

     * until now. Set video_codec_id in the context, as codec_id will

     * not be available outside this function

     */</comment>

    <if_stmt pos:start="217:5" pos:end="219:38"><if pos:start="217:5" pos:end="219:38">if <condition pos:start="217:8" pos:end="217:79">(<expr pos:start="217:9" pos:end="217:78"><name pos:start="217:9" pos:end="217:16">codec_id</name> <operator pos:start="217:18" pos:end="217:19">!=</operator> <name pos:start="217:21" pos:end="217:36">AV_CODEC_ID_NONE</name> <operator pos:start="217:38" pos:end="217:39">&amp;&amp;</operator> <name pos:start="217:41" pos:end="217:58"><name pos:start="217:41" pos:end="217:42">s1</name><operator pos:start="217:43" pos:end="217:44">-&gt;</operator><name pos:start="217:45" pos:end="217:58">video_codec_id</name></name> <operator pos:start="217:60" pos:end="217:61">==</operator> <name pos:start="217:63" pos:end="217:78">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="219:9" pos:end="219:38"><block_content pos:start="219:9" pos:end="219:38">

        <expr_stmt pos:start="219:9" pos:end="219:38"><expr pos:start="219:9" pos:end="219:37"><name pos:start="219:9" pos:end="219:26"><name pos:start="219:9" pos:end="219:10">s1</name><operator pos:start="219:11" pos:end="219:12">-&gt;</operator><name pos:start="219:13" pos:end="219:26">video_codec_id</name></name> <operator pos:start="219:28" pos:end="219:28">=</operator> <name pos:start="219:30" pos:end="219:37">codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="223:5" pos:end="225:19"><if pos:start="223:5" pos:end="225:19">if <condition pos:start="223:8" pos:end="223:68">(<expr pos:start="223:9" pos:end="223:67"><operator pos:start="223:9" pos:end="223:9">(</operator><name pos:start="223:10" pos:end="223:12">res</name> <operator pos:start="223:14" pos:end="223:14">=</operator> <call pos:start="223:16" pos:end="223:62"><name pos:start="223:16" pos:end="223:34">av_image_check_size</name><argument_list pos:start="223:35" pos:end="223:62">(<argument pos:start="223:36" pos:end="223:43"><expr pos:start="223:36" pos:end="223:43"><name pos:start="223:36" pos:end="223:43"><name pos:start="223:36" pos:end="223:36">s</name><operator pos:start="223:37" pos:end="223:38">-&gt;</operator><name pos:start="223:39" pos:end="223:43">width</name></name></expr></argument>, <argument pos:start="223:46" pos:end="223:54"><expr pos:start="223:46" pos:end="223:54"><name pos:start="223:46" pos:end="223:54"><name pos:start="223:46" pos:end="223:46">s</name><operator pos:start="223:47" pos:end="223:48">-&gt;</operator><name pos:start="223:49" pos:end="223:54">height</name></name></expr></argument>, <argument pos:start="223:57" pos:end="223:57"><expr pos:start="223:57" pos:end="223:57"><literal type="number" pos:start="223:57" pos:end="223:57">0</literal></expr></argument>, <argument pos:start="223:60" pos:end="223:61"><expr pos:start="223:60" pos:end="223:61"><name pos:start="223:60" pos:end="223:61">s1</name></expr></argument>)</argument_list></call><operator pos:start="223:63" pos:end="223:63">)</operator> <operator pos:start="223:65" pos:end="223:65">&lt;</operator> <literal type="number" pos:start="223:67" pos:end="223:67">0</literal></expr>)</condition><block type="pseudo" pos:start="225:9" pos:end="225:19"><block_content pos:start="225:9" pos:end="225:19">

        <return pos:start="225:9" pos:end="225:19">return <expr pos:start="225:16" pos:end="225:18"><name pos:start="225:16" pos:end="225:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:37"><expr pos:start="229:5" pos:end="229:36"><name pos:start="229:5" pos:end="229:19"><name pos:start="229:5" pos:end="229:5">s</name><operator pos:start="229:6" pos:end="229:7">-&gt;</operator><name pos:start="229:8" pos:end="229:19">frame_format</name></name> <operator pos:start="229:21" pos:end="229:21">=</operator> <name pos:start="229:23" pos:end="229:36">desired_format</name></expr>;</expr_stmt>



    <if_stmt pos:start="233:5" pos:end="235:19"><if pos:start="233:5" pos:end="235:19">if <condition pos:start="233:8" pos:end="233:44">(<expr pos:start="233:9" pos:end="233:43"><operator pos:start="233:9" pos:end="233:9">(</operator><name pos:start="233:10" pos:end="233:12">res</name> <operator pos:start="233:14" pos:end="233:14">=</operator> <call pos:start="233:16" pos:end="233:38"><name pos:start="233:16" pos:end="233:34">v4l2_set_parameters</name><argument_list pos:start="233:35" pos:end="233:38">(<argument pos:start="233:36" pos:end="233:37"><expr pos:start="233:36" pos:end="233:37"><name pos:start="233:36" pos:end="233:37">s1</name></expr></argument>)</argument_list></call><operator pos:start="233:39" pos:end="233:39">)</operator> <operator pos:start="233:41" pos:end="233:41">&lt;</operator> <literal type="number" pos:start="233:43" pos:end="233:43">0</literal></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:19"><block_content pos:start="235:9" pos:end="235:19">

        <return pos:start="235:9" pos:end="235:19">return <expr pos:start="235:16" pos:end="235:18"><name pos:start="235:16" pos:end="235:18">res</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:62"><expr pos:start="239:5" pos:end="239:61"><name pos:start="239:5" pos:end="239:22"><name pos:start="239:5" pos:end="239:6">st</name><operator pos:start="239:7" pos:end="239:8">-&gt;</operator><name pos:start="239:9" pos:end="239:13">codec</name><operator pos:start="239:14" pos:end="239:15">-&gt;</operator><name pos:start="239:16" pos:end="239:22">pix_fmt</name></name> <operator pos:start="239:24" pos:end="239:24">=</operator> <call pos:start="239:26" pos:end="239:61"><name pos:start="239:26" pos:end="239:35">fmt_v4l2ff</name><argument_list pos:start="239:36" pos:end="239:61">(<argument pos:start="239:37" pos:end="239:50"><expr pos:start="239:37" pos:end="239:50"><name pos:start="239:37" pos:end="239:50">desired_format</name></expr></argument>, <argument pos:start="239:53" pos:end="239:60"><expr pos:start="239:53" pos:end="239:60"><name pos:start="239:53" pos:end="239:60">codec_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="243:68"><expr pos:start="241:5" pos:end="243:67"><name pos:start="241:5" pos:end="241:17"><name pos:start="241:5" pos:end="241:5">s</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:17">frame_size</name></name> <operator pos:start="241:19" pos:end="241:19">=</operator>

        <call pos:start="243:9" pos:end="243:67"><name pos:start="243:9" pos:end="243:26">avpicture_get_size</name><argument_list pos:start="243:27" pos:end="243:67">(<argument pos:start="243:28" pos:end="243:45"><expr pos:start="243:28" pos:end="243:45"><name pos:start="243:28" pos:end="243:45"><name pos:start="243:28" pos:end="243:29">st</name><operator pos:start="243:30" pos:end="243:31">-&gt;</operator><name pos:start="243:32" pos:end="243:36">codec</name><operator pos:start="243:37" pos:end="243:38">-&gt;</operator><name pos:start="243:39" pos:end="243:45">pix_fmt</name></name></expr></argument>, <argument pos:start="243:48" pos:end="243:55"><expr pos:start="243:48" pos:end="243:55"><name pos:start="243:48" pos:end="243:55"><name pos:start="243:48" pos:end="243:48">s</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:55">width</name></name></expr></argument>, <argument pos:start="243:58" pos:end="243:66"><expr pos:start="243:58" pos:end="243:66"><name pos:start="243:58" pos:end="243:66"><name pos:start="243:58" pos:end="243:58">s</name><operator pos:start="243:59" pos:end="243:60">-&gt;</operator><name pos:start="243:61" pos:end="243:66">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="247:5" pos:end="255:5"><if pos:start="247:5" pos:end="255:5">if <condition pos:start="247:8" pos:end="249:35">(<expr pos:start="247:9" pos:end="249:34"><operator pos:start="247:9" pos:end="247:9">(</operator><name pos:start="247:10" pos:end="247:12">res</name> <operator pos:start="247:14" pos:end="247:14">=</operator> <call pos:start="247:16" pos:end="247:28"><name pos:start="247:16" pos:end="247:24">mmap_init</name><argument_list pos:start="247:25" pos:end="247:28">(<argument pos:start="247:26" pos:end="247:27"><expr pos:start="247:26" pos:end="247:27"><name pos:start="247:26" pos:end="247:27">s1</name></expr></argument>)</argument_list></call><operator pos:start="247:29" pos:end="247:29">)</operator> <operator pos:start="247:31" pos:end="247:32">||</operator>

        <operator pos:start="249:9" pos:end="249:9">(</operator><name pos:start="249:10" pos:end="249:12">res</name> <operator pos:start="249:14" pos:end="249:14">=</operator> <call pos:start="249:16" pos:end="249:29"><name pos:start="249:16" pos:end="249:25">mmap_start</name><argument_list pos:start="249:26" pos:end="249:29">(<argument pos:start="249:27" pos:end="249:28"><expr pos:start="249:27" pos:end="249:28"><name pos:start="249:27" pos:end="249:28">s1</name></expr></argument>)</argument_list></call><operator pos:start="249:30" pos:end="249:30">)</operator> <operator pos:start="249:32" pos:end="249:32">&lt;</operator> <literal type="number" pos:start="249:34" pos:end="249:34">0</literal></expr>)</condition> <block pos:start="249:37" pos:end="255:5">{<block_content pos:start="251:9" pos:end="253:19">

        <expr_stmt pos:start="251:9" pos:end="251:26"><expr pos:start="251:9" pos:end="251:25"><call pos:start="251:9" pos:end="251:25"><name pos:start="251:9" pos:end="251:18">v4l2_close</name><argument_list pos:start="251:19" pos:end="251:25">(<argument pos:start="251:20" pos:end="251:24"><expr pos:start="251:20" pos:end="251:24"><name pos:start="251:20" pos:end="251:24"><name pos:start="251:20" pos:end="251:20">s</name><operator pos:start="251:21" pos:end="251:22">-&gt;</operator><name pos:start="251:23" pos:end="251:24">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="253:9" pos:end="253:19">return <expr pos:start="253:16" pos:end="253:18"><name pos:start="253:16" pos:end="253:18">res</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="259:44"><expr pos:start="259:5" pos:end="259:43"><name pos:start="259:5" pos:end="259:22"><name pos:start="259:5" pos:end="259:5">s</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:22">top_field_first</name></name> <operator pos:start="259:24" pos:end="259:24">=</operator> <call pos:start="259:26" pos:end="259:43"><name pos:start="259:26" pos:end="259:36">first_field</name><argument_list pos:start="259:37" pos:end="259:43">(<argument pos:start="259:38" pos:end="259:42"><expr pos:start="259:38" pos:end="259:42"><name pos:start="259:38" pos:end="259:42"><name pos:start="259:38" pos:end="259:38">s</name><operator pos:start="259:39" pos:end="259:40">-&gt;</operator><name pos:start="259:41" pos:end="259:42">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="263:5" pos:end="263:47"><expr pos:start="263:5" pos:end="263:46"><name pos:start="263:5" pos:end="263:25"><name pos:start="263:5" pos:end="263:6">st</name><operator pos:start="263:7" pos:end="263:8">-&gt;</operator><name pos:start="263:9" pos:end="263:13">codec</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:25">codec_type</name></name> <operator pos:start="263:27" pos:end="263:27">=</operator> <name pos:start="263:29" pos:end="263:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:35"><expr pos:start="265:5" pos:end="265:34"><name pos:start="265:5" pos:end="265:23"><name pos:start="265:5" pos:end="265:6">st</name><operator pos:start="265:7" pos:end="265:8">-&gt;</operator><name pos:start="265:9" pos:end="265:13">codec</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:23">codec_id</name></name> <operator pos:start="265:25" pos:end="265:25">=</operator> <name pos:start="265:27" pos:end="265:34">codec_id</name></expr>;</expr_stmt>

    <if_stmt pos:start="267:5" pos:end="271:61"><if pos:start="267:5" pos:end="271:61">if <condition pos:start="267:8" pos:end="267:41">(<expr pos:start="267:9" pos:end="267:40"><name pos:start="267:9" pos:end="267:16">codec_id</name> <operator pos:start="267:18" pos:end="267:19">==</operator> <name pos:start="267:21" pos:end="267:40">AV_CODEC_ID_RAWVIDEO</name></expr>)</condition><block type="pseudo" pos:start="269:9" pos:end="271:61"><block_content pos:start="269:9" pos:end="271:61">

        <expr_stmt pos:start="269:9" pos:end="271:61"><expr pos:start="269:9" pos:end="271:60"><name pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:10">st</name><operator pos:start="269:11" pos:end="269:12">-&gt;</operator><name pos:start="269:13" pos:end="269:17">codec</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:28">codec_tag</name></name> <operator pos:start="269:30" pos:end="269:30">=</operator>

            <call pos:start="271:13" pos:end="271:60"><name pos:start="271:13" pos:end="271:40">avcodec_pix_fmt_to_codec_tag</name><argument_list pos:start="271:41" pos:end="271:60">(<argument pos:start="271:42" pos:end="271:59"><expr pos:start="271:42" pos:end="271:59"><name pos:start="271:42" pos:end="271:59"><name pos:start="271:42" pos:end="271:43">st</name><operator pos:start="271:44" pos:end="271:45">-&gt;</operator><name pos:start="271:46" pos:end="271:50">codec</name><operator pos:start="271:51" pos:end="271:52">-&gt;</operator><name pos:start="271:53" pos:end="271:59">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="273:5" pos:end="279:57"><if pos:start="273:5" pos:end="275:57">if <condition pos:start="273:8" pos:end="273:46">(<expr pos:start="273:9" pos:end="273:45"><name pos:start="273:9" pos:end="273:22">desired_format</name> <operator pos:start="273:24" pos:end="273:25">==</operator> <name pos:start="273:27" pos:end="273:45">V4L2_PIX_FMT_YVU420</name></expr>)</condition><block type="pseudo" pos:start="275:9" pos:end="275:57"><block_content pos:start="275:9" pos:end="275:57">

        <expr_stmt pos:start="275:9" pos:end="275:57"><expr pos:start="275:9" pos:end="275:56"><name pos:start="275:9" pos:end="275:28"><name pos:start="275:9" pos:end="275:10">st</name><operator pos:start="275:11" pos:end="275:12">-&gt;</operator><name pos:start="275:13" pos:end="275:17">codec</name><operator pos:start="275:18" pos:end="275:19">-&gt;</operator><name pos:start="275:20" pos:end="275:28">codec_tag</name></name> <operator pos:start="275:30" pos:end="275:30">=</operator> <call pos:start="275:32" pos:end="275:56"><name pos:start="275:32" pos:end="275:36">MKTAG</name><argument_list pos:start="275:37" pos:end="275:56">(<argument pos:start="275:38" pos:end="275:40"><expr pos:start="275:38" pos:end="275:40"><literal type="char" pos:start="275:38" pos:end="275:40">'Y'</literal></expr></argument>, <argument pos:start="275:43" pos:end="275:45"><expr pos:start="275:43" pos:end="275:45"><literal type="char" pos:start="275:43" pos:end="275:45">'V'</literal></expr></argument>, <argument pos:start="275:48" pos:end="275:50"><expr pos:start="275:48" pos:end="275:50"><literal type="char" pos:start="275:48" pos:end="275:50">'1'</literal></expr></argument>, <argument pos:start="275:53" pos:end="275:55"><expr pos:start="275:53" pos:end="275:55"><literal type="char" pos:start="275:53" pos:end="275:55">'2'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="277:5" pos:end="279:57">else if <condition pos:start="277:13" pos:end="277:51">(<expr pos:start="277:14" pos:end="277:50"><name pos:start="277:14" pos:end="277:27">desired_format</name> <operator pos:start="277:29" pos:end="277:30">==</operator> <name pos:start="277:32" pos:end="277:50">V4L2_PIX_FMT_YVU410</name></expr>)</condition><block type="pseudo" pos:start="279:9" pos:end="279:57"><block_content pos:start="279:9" pos:end="279:57">

        <expr_stmt pos:start="279:9" pos:end="279:57"><expr pos:start="279:9" pos:end="279:56"><name pos:start="279:9" pos:end="279:28"><name pos:start="279:9" pos:end="279:10">st</name><operator pos:start="279:11" pos:end="279:12">-&gt;</operator><name pos:start="279:13" pos:end="279:17">codec</name><operator pos:start="279:18" pos:end="279:19">-&gt;</operator><name pos:start="279:20" pos:end="279:28">codec_tag</name></name> <operator pos:start="279:30" pos:end="279:30">=</operator> <call pos:start="279:32" pos:end="279:56"><name pos:start="279:32" pos:end="279:36">MKTAG</name><argument_list pos:start="279:37" pos:end="279:56">(<argument pos:start="279:38" pos:end="279:40"><expr pos:start="279:38" pos:end="279:40"><literal type="char" pos:start="279:38" pos:end="279:40">'Y'</literal></expr></argument>, <argument pos:start="279:43" pos:end="279:45"><expr pos:start="279:43" pos:end="279:45"><literal type="char" pos:start="279:43" pos:end="279:45">'V'</literal></expr></argument>, <argument pos:start="279:48" pos:end="279:50"><expr pos:start="279:48" pos:end="279:50"><literal type="char" pos:start="279:48" pos:end="279:50">'U'</literal></expr></argument>, <argument pos:start="279:53" pos:end="279:55"><expr pos:start="279:53" pos:end="279:55"><literal type="char" pos:start="279:53" pos:end="279:55">'9'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:32"><expr pos:start="281:5" pos:end="281:31"><name pos:start="281:5" pos:end="281:20"><name pos:start="281:5" pos:end="281:6">st</name><operator pos:start="281:7" pos:end="281:8">-&gt;</operator><name pos:start="281:9" pos:end="281:13">codec</name><operator pos:start="281:14" pos:end="281:15">-&gt;</operator><name pos:start="281:16" pos:end="281:20">width</name></name> <operator pos:start="281:22" pos:end="281:22">=</operator> <name pos:start="281:24" pos:end="281:31"><name pos:start="281:24" pos:end="281:24">s</name><operator pos:start="281:25" pos:end="281:26">-&gt;</operator><name pos:start="281:27" pos:end="281:31">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:34"><expr pos:start="283:5" pos:end="283:33"><name pos:start="283:5" pos:end="283:21"><name pos:start="283:5" pos:end="283:6">st</name><operator pos:start="283:7" pos:end="283:8">-&gt;</operator><name pos:start="283:9" pos:end="283:13">codec</name><operator pos:start="283:14" pos:end="283:15">-&gt;</operator><name pos:start="283:16" pos:end="283:21">height</name></name> <operator pos:start="283:23" pos:end="283:23">=</operator> <name pos:start="283:25" pos:end="283:33"><name pos:start="283:25" pos:end="283:25">s</name><operator pos:start="283:26" pos:end="283:27">-&gt;</operator><name pos:start="283:28" pos:end="283:33">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="285:5" pos:end="285:73"><expr pos:start="285:5" pos:end="285:72"><name pos:start="285:5" pos:end="285:23"><name pos:start="285:5" pos:end="285:6">st</name><operator pos:start="285:7" pos:end="285:8">-&gt;</operator><name pos:start="285:9" pos:end="285:13">codec</name><operator pos:start="285:14" pos:end="285:15">-&gt;</operator><name pos:start="285:16" pos:end="285:23">bit_rate</name></name> <operator pos:start="285:25" pos:end="285:25">=</operator> <name pos:start="285:27" pos:end="285:39"><name pos:start="285:27" pos:end="285:27">s</name><operator pos:start="285:28" pos:end="285:29">-&gt;</operator><name pos:start="285:30" pos:end="285:39">frame_size</name></name> <operator pos:start="285:41" pos:end="285:41">*</operator> <call pos:start="285:43" pos:end="285:68"><name pos:start="285:43" pos:end="285:48">av_q2d</name><argument_list pos:start="285:49" pos:end="285:68">(<argument pos:start="285:50" pos:end="285:67"><expr pos:start="285:50" pos:end="285:67"><name pos:start="285:50" pos:end="285:67"><name pos:start="285:50" pos:end="285:51">st</name><operator pos:start="285:52" pos:end="285:53">-&gt;</operator><name pos:start="285:54" pos:end="285:67">avg_frame_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="285:70" pos:end="285:70">*</operator> <literal type="number" pos:start="285:72" pos:end="285:72">8</literal></expr>;</expr_stmt>



    <return pos:start="289:5" pos:end="289:13">return <expr pos:start="289:12" pos:end="289:12"><literal type="number" pos:start="289:12" pos:end="289:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
