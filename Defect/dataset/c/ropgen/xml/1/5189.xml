<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5189.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">ivr_read_header</name><parameter_list pos:start="1:27" pos:end="1:46">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="267:1">{<block_content pos:start="5:5" pos:end="265:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">unsigned</name></type> <name pos:start="5:14" pos:end="5:16">tag</name></decl>, <decl pos:start="5:19" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:22">type</name></decl>, <decl pos:start="5:25" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:25" pos:end="5:27">len</name></decl>, <decl pos:start="5:30" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:30" pos:end="5:33">tlen</name></decl>, <decl pos:start="5:36" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:36" pos:end="5:40">value</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">n</name></decl>, <decl pos:start="7:18" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:22">count</name></decl>, <decl pos:start="7:25" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:25" pos:end="7:34">nb_streams</name></decl>, <decl pos:start="7:37" pos:end="7:39"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:37" pos:end="7:39">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:20"><name pos:start="9:13" pos:end="9:15">key</name><index pos:start="9:16" pos:end="9:20">[<expr pos:start="9:17" pos:end="9:19"><literal type="number" pos:start="9:17" pos:end="9:19">256</literal></expr>]</index></name></decl>, <decl pos:start="9:23" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:11"/><name pos:start="9:23" pos:end="9:30"><name pos:start="9:23" pos:end="9:25">val</name><index pos:start="9:26" pos:end="9:30">[<expr pos:start="9:27" pos:end="9:29"><literal type="number" pos:start="9:27" pos:end="9:29">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:27">= <expr pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">AVStream</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">pos</name></decl>, <decl pos:start="15:18" pos:end="15:23"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:18" pos:end="15:23">offset</name></decl>, <decl pos:start="15:26" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:26" pos:end="15:29">temp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:7">pos</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:23"><name pos:start="19:11" pos:end="19:19">avio_tell</name><argument_list pos:start="19:20" pos:end="19:23">(<argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:24"><expr pos:start="21:5" pos:end="21:23"><name pos:start="21:5" pos:end="21:7">tag</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:23"><name pos:start="21:11" pos:end="21:19">avio_rl32</name><argument_list pos:start="21:20" pos:end="21:23">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="69:5"><if pos:start="23:5" pos:end="69:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:11">tag</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <call pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:20">MKTAG</name><argument_list pos:start="23:21" pos:end="23:37">(<argument pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><literal type="char" pos:start="23:22" pos:end="23:24">'.'</literal></expr></argument>,<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><literal type="char" pos:start="23:26" pos:end="23:28">'R'</literal></expr></argument>,<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><literal type="char" pos:start="23:30" pos:end="23:32">'1'</literal></expr></argument>,<argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><literal type="char" pos:start="23:34" pos:end="23:36">'M'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:40" pos:end="69:5">{<block_content pos:start="25:9" pos:end="67:28">

        <if_stmt pos:start="25:9" pos:end="27:39"><if pos:start="25:9" pos:end="27:39">if <condition pos:start="25:12" pos:end="25:31">(<expr pos:start="25:13" pos:end="25:30"><call pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:21">avio_rb16</name><argument_list pos:start="25:22" pos:end="25:25">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="25:27" pos:end="25:28">!=</operator> <literal type="number" pos:start="25:30" pos:end="25:30">1</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:39"><block_content pos:start="27:13" pos:end="27:39">

            <return pos:start="27:13" pos:end="27:39">return <expr pos:start="27:20" pos:end="27:38"><name pos:start="27:20" pos:end="27:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="31:39"><if pos:start="29:9" pos:end="31:39">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><call pos:start="29:13" pos:end="29:23"><name pos:start="29:13" pos:end="29:19">avio_r8</name><argument_list pos:start="29:20" pos:end="29:23">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">pb</name></expr></argument>)</argument_list></call> <operator pos:start="29:25" pos:end="29:26">!=</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:39"><block_content pos:start="31:13" pos:end="31:39">

            <return pos:start="31:13" pos:end="31:39">return <expr pos:start="31:20" pos:end="31:38"><name pos:start="31:20" pos:end="31:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:28"><expr pos:start="33:9" pos:end="33:27"><name pos:start="33:9" pos:end="33:11">len</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:27"><name pos:start="33:15" pos:end="33:23">avio_rb32</name><argument_list pos:start="33:24" pos:end="33:27">(<argument pos:start="33:25" pos:end="33:26"><expr pos:start="33:25" pos:end="33:26"><name pos:start="33:25" pos:end="33:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:27"><expr pos:start="35:9" pos:end="35:26"><call pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:17">avio_skip</name><argument_list pos:start="35:18" pos:end="35:26">(<argument pos:start="35:19" pos:end="35:20"><expr pos:start="35:19" pos:end="35:20"><name pos:start="35:19" pos:end="35:20">pb</name></expr></argument>, <argument pos:start="35:23" pos:end="35:25"><expr pos:start="35:23" pos:end="35:25"><name pos:start="35:23" pos:end="35:25">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><call pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:17">avio_skip</name><argument_list pos:start="37:18" pos:end="37:24">(<argument pos:start="37:19" pos:end="37:20"><expr pos:start="37:19" pos:end="37:20"><name pos:start="37:19" pos:end="37:20">pb</name></expr></argument>, <argument pos:start="37:23" pos:end="37:23"><expr pos:start="37:23" pos:end="37:23"><literal type="number" pos:start="37:23" pos:end="37:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:29"><expr pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:12">temp</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:28"><name pos:start="39:16" pos:end="39:24">avio_rb64</name><argument_list pos:start="39:25" pos:end="39:28">(<argument pos:start="39:26" pos:end="39:27"><expr pos:start="39:26" pos:end="39:27"><name pos:start="39:26" pos:end="39:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="41:9" pos:end="47:9">while <condition pos:start="41:15" pos:end="41:38">(<expr pos:start="41:16" pos:end="41:37"><operator pos:start="41:16" pos:end="41:16">!</operator><call pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:25">avio_feof</name><argument_list pos:start="41:26" pos:end="41:29">(<argument pos:start="41:27" pos:end="41:28"><expr pos:start="41:27" pos:end="41:28"><name pos:start="41:27" pos:end="41:28">pb</name></expr></argument>)</argument_list></call> <operator pos:start="41:31" pos:end="41:32">&amp;&amp;</operator> <name pos:start="41:34" pos:end="41:37">temp</name></expr>)</condition> <block pos:start="41:40" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:33">

            <expr_stmt pos:start="43:13" pos:end="43:26"><expr pos:start="43:13" pos:end="43:25"><name pos:start="43:13" pos:end="43:18">offset</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <name pos:start="43:22" pos:end="43:25">temp</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:33"><expr pos:start="45:13" pos:end="45:32"><name pos:start="45:13" pos:end="45:16">temp</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <call pos:start="45:20" pos:end="45:32"><name pos:start="45:20" pos:end="45:28">avio_rb64</name><argument_list pos:start="45:29" pos:end="45:32">(<argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><name pos:start="45:30" pos:end="45:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:17">avio_skip</name><argument_list pos:start="49:18" pos:end="49:45">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">pb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:44"><expr pos:start="49:23" pos:end="49:44"><name pos:start="49:23" pos:end="49:28">offset</name> <operator pos:start="49:30" pos:end="49:30">-</operator> <call pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:40">avio_tell</name><argument_list pos:start="49:41" pos:end="49:44">(<argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="53:39"><if pos:start="51:9" pos:end="53:39">if <condition pos:start="51:12" pos:end="51:29">(<expr pos:start="51:13" pos:end="51:28"><call pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:19">avio_r8</name><argument_list pos:start="51:20" pos:end="51:23">(<argument pos:start="51:21" pos:end="51:22"><expr pos:start="51:21" pos:end="51:22"><name pos:start="51:21" pos:end="51:22">pb</name></expr></argument>)</argument_list></call> <operator pos:start="51:25" pos:end="51:26">!=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">1</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="53:39"><block_content pos:start="53:13" pos:end="53:39">

            <return pos:start="53:13" pos:end="53:39">return <expr pos:start="53:20" pos:end="53:38"><name pos:start="53:20" pos:end="53:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:28"><expr pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:27"><name pos:start="55:15" pos:end="55:23">avio_rb32</name><argument_list pos:start="55:24" pos:end="55:27">(<argument pos:start="55:25" pos:end="55:26"><expr pos:start="55:25" pos:end="55:26"><name pos:start="55:25" pos:end="55:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><call pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:17">avio_skip</name><argument_list pos:start="57:18" pos:end="57:26">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>, <argument pos:start="57:23" pos:end="57:25"><expr pos:start="57:23" pos:end="57:25"><name pos:start="57:23" pos:end="57:25">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:39"><if pos:start="59:9" pos:end="61:39">if <condition pos:start="59:12" pos:end="59:29">(<expr pos:start="59:13" pos:end="59:28"><call pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:19">avio_r8</name><argument_list pos:start="59:20" pos:end="59:23">(<argument pos:start="59:21" pos:end="59:22"><expr pos:start="59:21" pos:end="59:22"><name pos:start="59:21" pos:end="59:22">pb</name></expr></argument>)</argument_list></call> <operator pos:start="59:25" pos:end="59:26">!=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">2</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:39"><block_content pos:start="61:13" pos:end="61:39">

            <return pos:start="61:13" pos:end="61:39">return <expr pos:start="61:20" pos:end="61:38"><name pos:start="61:20" pos:end="61:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><call pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:17">avio_skip</name><argument_list pos:start="63:18" pos:end="63:25">(<argument pos:start="63:19" pos:end="63:20"><expr pos:start="63:19" pos:end="63:20"><name pos:start="63:19" pos:end="63:20">pb</name></expr></argument>, <argument pos:start="63:23" pos:end="63:24"><expr pos:start="63:23" pos:end="63:24"><literal type="number" pos:start="63:23" pos:end="63:24">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:11">pos</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <call pos:start="65:15" pos:end="65:27"><name pos:start="65:15" pos:end="65:23">avio_tell</name><argument_list pos:start="65:24" pos:end="65:27">(<argument pos:start="65:25" pos:end="65:26"><expr pos:start="65:25" pos:end="65:26"><name pos:start="65:25" pos:end="65:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:28"><expr pos:start="67:9" pos:end="67:27"><name pos:start="67:9" pos:end="67:11">tag</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:27"><name pos:start="67:15" pos:end="67:23">avio_rl32</name><argument_list pos:start="67:24" pos:end="67:27">(<argument pos:start="67:25" pos:end="67:26"><expr pos:start="67:25" pos:end="67:26"><name pos:start="67:25" pos:end="67:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="75:35"><if pos:start="73:5" pos:end="75:35">if <condition pos:start="73:8" pos:end="73:38">(<expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:11">tag</name> <operator pos:start="73:13" pos:end="73:14">!=</operator> <call pos:start="73:16" pos:end="73:37"><name pos:start="73:16" pos:end="73:20">MKTAG</name><argument_list pos:start="73:21" pos:end="73:37">(<argument pos:start="73:22" pos:end="73:24"><expr pos:start="73:22" pos:end="73:24"><literal type="char" pos:start="73:22" pos:end="73:24">'.'</literal></expr></argument>,<argument pos:start="73:26" pos:end="73:28"><expr pos:start="73:26" pos:end="73:28"><literal type="char" pos:start="73:26" pos:end="73:28">'R'</literal></expr></argument>,<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><literal type="char" pos:start="73:30" pos:end="73:32">'E'</literal></expr></argument>,<argument pos:start="73:34" pos:end="73:36"><expr pos:start="73:34" pos:end="73:36"><literal type="char" pos:start="73:34" pos:end="73:36">'C'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:35"><block_content pos:start="75:9" pos:end="75:35">

        <return pos:start="75:9" pos:end="75:35">return <expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="81:35"><if pos:start="79:5" pos:end="81:35">if <condition pos:start="79:8" pos:end="79:25">(<expr pos:start="79:9" pos:end="79:24"><call pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:15">avio_r8</name><argument_list pos:start="79:16" pos:end="79:19">(<argument pos:start="79:17" pos:end="79:18"><expr pos:start="79:17" pos:end="79:18"><name pos:start="79:17" pos:end="79:18">pb</name></expr></argument>)</argument_list></call> <operator pos:start="79:21" pos:end="79:22">!=</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>)</condition><block type="pseudo" pos:start="81:9" pos:end="81:35"><block_content pos:start="81:9" pos:end="81:35">

        <return pos:start="81:9" pos:end="81:35">return <expr pos:start="81:16" pos:end="81:34"><name pos:start="81:16" pos:end="81:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:9">count</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <call pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:21">avio_rb32</name><argument_list pos:start="83:22" pos:end="83:25">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="135:5">for <control pos:start="85:9" pos:end="85:31">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:26"><expr pos:start="85:17" pos:end="85:25"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:25">count</name></expr>;</condition> <incr pos:start="85:28" pos:end="85:30"><expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:28">i</name><operator pos:start="85:29" pos:end="85:30">++</operator></expr></incr>)</control> <block pos:start="85:33" pos:end="135:5">{<block_content pos:start="87:9" pos:end="133:9">

        <if_stmt pos:start="87:9" pos:end="89:39"><if pos:start="87:9" pos:end="89:39">if <condition pos:start="87:12" pos:end="87:26">(<expr pos:start="87:13" pos:end="87:25"><call pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:21">avio_feof</name><argument_list pos:start="87:22" pos:end="87:25">(<argument pos:start="87:23" pos:end="87:24"><expr pos:start="87:23" pos:end="87:24"><name pos:start="87:23" pos:end="87:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:39"><block_content pos:start="89:13" pos:end="89:39">

            <return pos:start="89:13" pos:end="89:39">return <expr pos:start="89:20" pos:end="89:38"><name pos:start="89:20" pos:end="89:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:27"><expr pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:12">type</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <call pos:start="93:16" pos:end="93:26"><name pos:start="93:16" pos:end="93:22">avio_r8</name><argument_list pos:start="93:23" pos:end="93:26">(<argument pos:start="93:24" pos:end="93:25"><expr pos:start="93:24" pos:end="93:25"><name pos:start="93:24" pos:end="93:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:29"><expr pos:start="95:9" pos:end="95:28"><name pos:start="95:9" pos:end="95:12">tlen</name> <operator pos:start="95:14" pos:end="95:14">=</operator> <call pos:start="95:16" pos:end="95:28"><name pos:start="95:16" pos:end="95:24">avio_rb32</name><argument_list pos:start="95:25" pos:end="95:28">(<argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><name pos:start="95:26" pos:end="95:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:49"><expr pos:start="97:9" pos:end="97:48"><call pos:start="97:9" pos:end="97:48"><name pos:start="97:9" pos:end="97:20">avio_get_str</name><argument_list pos:start="97:21" pos:end="97:48">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">pb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:29"><expr pos:start="97:26" pos:end="97:29"><name pos:start="97:26" pos:end="97:29">tlen</name></expr></argument>, <argument pos:start="97:32" pos:end="97:34"><expr pos:start="97:32" pos:end="97:34"><name pos:start="97:32" pos:end="97:34">key</name></expr></argument>, <argument pos:start="97:37" pos:end="97:47"><expr pos:start="97:37" pos:end="97:47"><sizeof pos:start="97:37" pos:end="97:47">sizeof<argument_list pos:start="97:43" pos:end="97:47">(<argument pos:start="97:44" pos:end="97:46"><expr pos:start="97:44" pos:end="97:46"><name pos:start="97:44" pos:end="97:46">key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:28"><expr pos:start="99:9" pos:end="99:27"><name pos:start="99:9" pos:end="99:11">len</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:27"><name pos:start="99:15" pos:end="99:23">avio_rb32</name><argument_list pos:start="99:24" pos:end="99:27">(<argument pos:start="99:25" pos:end="99:26"><expr pos:start="99:25" pos:end="99:26"><name pos:start="99:25" pos:end="99:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="133:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:22">(<expr pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:16">type</name> <operator pos:start="101:18" pos:end="101:19">==</operator> <literal type="number" pos:start="101:21" pos:end="101:21">5</literal></expr>)</condition> <block pos:start="101:24" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:61">

            <expr_stmt pos:start="103:13" pos:end="103:52"><expr pos:start="103:13" pos:end="103:51"><call pos:start="103:13" pos:end="103:51"><name pos:start="103:13" pos:end="103:24">avio_get_str</name><argument_list pos:start="103:25" pos:end="103:51">(<argument pos:start="103:26" pos:end="103:27"><expr pos:start="103:26" pos:end="103:27"><name pos:start="103:26" pos:end="103:27">pb</name></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">len</name></expr></argument>, <argument pos:start="103:35" pos:end="103:37"><expr pos:start="103:35" pos:end="103:37"><name pos:start="103:35" pos:end="103:37">val</name></expr></argument>, <argument pos:start="103:40" pos:end="103:50"><expr pos:start="103:40" pos:end="103:50"><sizeof pos:start="103:40" pos:end="103:50">sizeof<argument_list pos:start="103:46" pos:end="103:50">(<argument pos:start="103:47" pos:end="103:49"><expr pos:start="103:47" pos:end="103:49"><name pos:start="103:47" pos:end="103:49">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:61"><expr pos:start="105:13" pos:end="105:60"><call pos:start="105:13" pos:end="105:60"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="105:60">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="105:37" pos:end="105:49"><expr pos:start="105:37" pos:end="105:49"><literal type="string" pos:start="105:37" pos:end="105:49">"%s = '%s'\n"</literal></expr></argument>, <argument pos:start="105:52" pos:end="105:54"><expr pos:start="105:52" pos:end="105:54"><name pos:start="105:52" pos:end="105:54">key</name></expr></argument>, <argument pos:start="105:57" pos:end="105:59"><expr pos:start="105:57" pos:end="105:59"><name pos:start="105:57" pos:end="105:59">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="107:11" pos:end="117:9">else if <condition pos:start="107:19" pos:end="107:29">(<expr pos:start="107:20" pos:end="107:28"><name pos:start="107:20" pos:end="107:23">type</name> <operator pos:start="107:25" pos:end="107:26">==</operator> <literal type="number" pos:start="107:28" pos:end="107:28">4</literal></expr>)</condition> <block pos:start="107:31" pos:end="117:9">{<block_content pos:start="109:13" pos:end="115:43">

            <expr_stmt pos:start="109:13" pos:end="109:53"><expr pos:start="109:13" pos:end="109:52"><call pos:start="109:13" pos:end="109:52"><name pos:start="109:13" pos:end="109:18">av_log</name><argument_list pos:start="109:19" pos:end="109:52">(<argument pos:start="109:20" pos:end="109:20"><expr pos:start="109:20" pos:end="109:20"><name pos:start="109:20" pos:end="109:20">s</name></expr></argument>, <argument pos:start="109:23" pos:end="109:34"><expr pos:start="109:23" pos:end="109:34"><name pos:start="109:23" pos:end="109:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:37" pos:end="109:46"><expr pos:start="109:37" pos:end="109:46"><literal type="string" pos:start="109:37" pos:end="109:46">"%s = '0x"</literal></expr></argument>, <argument pos:start="109:49" pos:end="109:51"><expr pos:start="109:49" pos:end="109:51"><name pos:start="109:49" pos:end="109:51">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="111:13" pos:end="113:59">for <control pos:start="111:17" pos:end="111:37">(<init pos:start="111:18" pos:end="111:23"><expr pos:start="111:18" pos:end="111:22"><name pos:start="111:18" pos:end="111:18">j</name> <operator pos:start="111:20" pos:end="111:20">=</operator> <literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>;</init> <condition pos:start="111:25" pos:end="111:32"><expr pos:start="111:25" pos:end="111:31"><name pos:start="111:25" pos:end="111:25">j</name> <operator pos:start="111:27" pos:end="111:27">&lt;</operator> <name pos:start="111:29" pos:end="111:31">len</name></expr>;</condition> <incr pos:start="111:34" pos:end="111:36"><expr pos:start="111:34" pos:end="111:36"><name pos:start="111:34" pos:end="111:34">j</name><operator pos:start="111:35" pos:end="111:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="113:17" pos:end="113:59"><block_content pos:start="113:17" pos:end="113:59">

                <expr_stmt pos:start="113:17" pos:end="113:59"><expr pos:start="113:17" pos:end="113:58"><call pos:start="113:17" pos:end="113:58"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:58">(<argument pos:start="113:24" pos:end="113:24"><expr pos:start="113:24" pos:end="113:24"><name pos:start="113:24" pos:end="113:24">s</name></expr></argument>, <argument pos:start="113:27" pos:end="113:38"><expr pos:start="113:27" pos:end="113:38"><name pos:start="113:27" pos:end="113:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="113:41" pos:end="113:44"><expr pos:start="113:41" pos:end="113:44"><literal type="string" pos:start="113:41" pos:end="113:44">"%X"</literal></expr></argument>, <argument pos:start="113:47" pos:end="113:57"><expr pos:start="113:47" pos:end="113:57"><call pos:start="113:47" pos:end="113:57"><name pos:start="113:47" pos:end="113:53">avio_r8</name><argument_list pos:start="113:54" pos:end="113:57">(<argument pos:start="113:55" pos:end="113:56"><expr pos:start="113:55" pos:end="113:56"><name pos:start="113:55" pos:end="113:56">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="115:13" pos:end="115:43"><expr pos:start="115:13" pos:end="115:42"><call pos:start="115:13" pos:end="115:42"><name pos:start="115:13" pos:end="115:18">av_log</name><argument_list pos:start="115:19" pos:end="115:42">(<argument pos:start="115:20" pos:end="115:20"><expr pos:start="115:20" pos:end="115:20"><name pos:start="115:20" pos:end="115:20">s</name></expr></argument>, <argument pos:start="115:23" pos:end="115:34"><expr pos:start="115:23" pos:end="115:34"><name pos:start="115:23" pos:end="115:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="115:37" pos:end="115:41"><expr pos:start="115:37" pos:end="115:41"><literal type="string" pos:start="115:37" pos:end="115:41">"'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="117:11" pos:end="121:9">else if <condition pos:start="117:19" pos:end="117:79">(<expr pos:start="117:20" pos:end="117:78"><name pos:start="117:20" pos:end="117:22">len</name> <operator pos:start="117:24" pos:end="117:25">==</operator> <literal type="number" pos:start="117:27" pos:end="117:27">4</literal> <operator pos:start="117:29" pos:end="117:30">&amp;&amp;</operator> <name pos:start="117:32" pos:end="117:35">type</name> <operator pos:start="117:37" pos:end="117:38">==</operator> <literal type="number" pos:start="117:40" pos:end="117:40">3</literal> <operator pos:start="117:42" pos:end="117:43">&amp;&amp;</operator> <operator pos:start="117:45" pos:end="117:45">!</operator><call pos:start="117:46" pos:end="117:78"><name pos:start="117:46" pos:end="117:52">strncmp</name><argument_list pos:start="117:53" pos:end="117:78">(<argument pos:start="117:54" pos:end="117:56"><expr pos:start="117:54" pos:end="117:56"><name pos:start="117:54" pos:end="117:56">key</name></expr></argument>, <argument pos:start="117:59" pos:end="117:71"><expr pos:start="117:59" pos:end="117:71"><literal type="string" pos:start="117:59" pos:end="117:71">"StreamCount"</literal></expr></argument>, <argument pos:start="117:74" pos:end="117:77"><expr pos:start="117:74" pos:end="117:77"><name pos:start="117:74" pos:end="117:77">tlen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:81" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:47">

            <expr_stmt pos:start="119:13" pos:end="119:47"><expr pos:start="119:13" pos:end="119:46"><name pos:start="119:13" pos:end="119:22">nb_streams</name> <operator pos:start="119:24" pos:end="119:24">=</operator> <name pos:start="119:26" pos:end="119:30">value</name> <operator pos:start="119:32" pos:end="119:32">=</operator> <call pos:start="119:34" pos:end="119:46"><name pos:start="119:34" pos:end="119:42">avio_rb32</name><argument_list pos:start="119:43" pos:end="119:46">(<argument pos:start="119:44" pos:end="119:45"><expr pos:start="119:44" pos:end="119:45"><name pos:start="119:44" pos:end="119:45">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="121:11" pos:end="127:9">else if <condition pos:start="121:19" pos:end="121:41">(<expr pos:start="121:20" pos:end="121:40"><name pos:start="121:20" pos:end="121:22">len</name> <operator pos:start="121:24" pos:end="121:25">==</operator> <literal type="number" pos:start="121:27" pos:end="121:27">4</literal> <operator pos:start="121:29" pos:end="121:30">&amp;&amp;</operator> <name pos:start="121:32" pos:end="121:35">type</name> <operator pos:start="121:37" pos:end="121:38">==</operator> <literal type="number" pos:start="121:40" pos:end="121:40">3</literal></expr>)</condition> <block pos:start="121:43" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:61">

            <expr_stmt pos:start="123:13" pos:end="123:34"><expr pos:start="123:13" pos:end="123:33"><name pos:start="123:13" pos:end="123:17">value</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:33"><name pos:start="123:21" pos:end="123:29">avio_rb32</name><argument_list pos:start="123:30" pos:end="123:33">(<argument pos:start="123:31" pos:end="123:32"><expr pos:start="123:31" pos:end="123:32"><name pos:start="123:31" pos:end="123:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:61"><expr pos:start="125:13" pos:end="125:60"><call pos:start="125:13" pos:end="125:60"><name pos:start="125:13" pos:end="125:18">av_log</name><argument_list pos:start="125:19" pos:end="125:60">(<argument pos:start="125:20" pos:end="125:20"><expr pos:start="125:20" pos:end="125:20"><name pos:start="125:20" pos:end="125:20">s</name></expr></argument>, <argument pos:start="125:23" pos:end="125:34"><expr pos:start="125:23" pos:end="125:34"><name pos:start="125:23" pos:end="125:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="125:37" pos:end="125:47"><expr pos:start="125:37" pos:end="125:47"><literal type="string" pos:start="125:37" pos:end="125:47">"%s = %d\n"</literal></expr></argument>, <argument pos:start="125:50" pos:end="125:52"><expr pos:start="125:50" pos:end="125:52"><name pos:start="125:50" pos:end="125:52">key</name></expr></argument>, <argument pos:start="125:55" pos:end="125:59"><expr pos:start="125:55" pos:end="125:59"><name pos:start="125:55" pos:end="125:59">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="127:11" pos:end="133:9">else <block pos:start="127:16" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:31">

            <expr_stmt pos:start="129:13" pos:end="129:75"><expr pos:start="129:13" pos:end="129:74"><call pos:start="129:13" pos:end="129:74"><name pos:start="129:13" pos:end="129:18">av_log</name><argument_list pos:start="129:19" pos:end="129:74">(<argument pos:start="129:20" pos:end="129:20"><expr pos:start="129:20" pos:end="129:20"><name pos:start="129:20" pos:end="129:20">s</name></expr></argument>, <argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="129:37" pos:end="129:68"><expr pos:start="129:37" pos:end="129:68"><literal type="string" pos:start="129:37" pos:end="129:68">"Skipping unsupported key: %s\n"</literal></expr></argument>, <argument pos:start="129:71" pos:end="129:73"><expr pos:start="129:71" pos:end="129:73"><name pos:start="129:71" pos:end="129:73">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:31"><expr pos:start="131:13" pos:end="131:30"><call pos:start="131:13" pos:end="131:30"><name pos:start="131:13" pos:end="131:21">avio_skip</name><argument_list pos:start="131:22" pos:end="131:30">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">pb</name></expr></argument>, <argument pos:start="131:27" pos:end="131:29"><expr pos:start="131:27" pos:end="131:29"><name pos:start="131:27" pos:end="131:29">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <for pos:start="139:5" pos:end="245:5">for <control pos:start="139:9" pos:end="139:36">(<init pos:start="139:10" pos:end="139:15"><expr pos:start="139:10" pos:end="139:14"><name pos:start="139:10" pos:end="139:10">n</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <literal type="number" pos:start="139:14" pos:end="139:14">0</literal></expr>;</init> <condition pos:start="139:17" pos:end="139:31"><expr pos:start="139:17" pos:end="139:30"><name pos:start="139:17" pos:end="139:17">n</name> <operator pos:start="139:19" pos:end="139:19">&lt;</operator> <name pos:start="139:21" pos:end="139:30">nb_streams</name></expr>;</condition> <incr pos:start="139:33" pos:end="139:35"><expr pos:start="139:33" pos:end="139:35"><name pos:start="139:33" pos:end="139:33">n</name><operator pos:start="139:34" pos:end="139:35">++</operator></expr></incr>)</control> <block pos:start="139:38" pos:end="245:5">{<block_content pos:start="141:9" pos:end="243:9">

        <expr_stmt pos:start="141:9" pos:end="141:42"><expr pos:start="141:9" pos:end="141:41"><name pos:start="141:9" pos:end="141:10">st</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <call pos:start="141:14" pos:end="141:41"><name pos:start="141:14" pos:end="141:32">avformat_new_stream</name><argument_list pos:start="141:33" pos:end="141:41">(<argument pos:start="141:34" pos:end="141:34"><expr pos:start="141:34" pos:end="141:34"><name pos:start="141:34" pos:end="141:34">s</name></expr></argument>, <argument pos:start="141:37" pos:end="141:40"><expr pos:start="141:37" pos:end="141:40"><name pos:start="141:37" pos:end="141:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="143:9" pos:end="145:35"><if pos:start="143:9" pos:end="145:35">if <condition pos:start="143:12" pos:end="143:16">(<expr pos:start="143:13" pos:end="143:15"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:15">st</name></expr>)</condition><block type="pseudo" pos:start="145:13" pos:end="145:35"><block_content pos:start="145:13" pos:end="145:35">

            <return pos:start="145:13" pos:end="145:35">return <expr pos:start="145:20" pos:end="145:34"><call pos:start="145:20" pos:end="145:34"><name pos:start="145:20" pos:end="145:26">AVERROR</name><argument_list pos:start="145:27" pos:end="145:34">(<argument pos:start="145:28" pos:end="145:33"><expr pos:start="145:28" pos:end="145:33"><name pos:start="145:28" pos:end="145:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:47"><expr pos:start="147:9" pos:end="147:46"><name pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:10">st</name><operator pos:start="147:11" pos:end="147:12">-&gt;</operator><name pos:start="147:13" pos:end="147:21">priv_data</name></name> <operator pos:start="147:23" pos:end="147:23">=</operator> <call pos:start="147:25" pos:end="147:46"><name pos:start="147:25" pos:end="147:44">ff_rm_alloc_rmstream</name><argument_list pos:start="147:45" pos:end="147:46">()</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="149:9" pos:end="151:35"><if pos:start="149:9" pos:end="151:35">if <condition pos:start="149:12" pos:end="149:27">(<expr pos:start="149:13" pos:end="149:26"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:26"><name pos:start="149:14" pos:end="149:15">st</name><operator pos:start="149:16" pos:end="149:17">-&gt;</operator><name pos:start="149:18" pos:end="149:26">priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:35"><block_content pos:start="151:13" pos:end="151:35">

            <return pos:start="151:13" pos:end="151:35">return <expr pos:start="151:20" pos:end="151:34"><call pos:start="151:20" pos:end="151:34"><name pos:start="151:20" pos:end="151:26">AVERROR</name><argument_list pos:start="151:27" pos:end="151:34">(<argument pos:start="151:28" pos:end="151:33"><expr pos:start="151:28" pos:end="151:33"><name pos:start="151:28" pos:end="151:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="155:9" pos:end="157:39"><if pos:start="155:9" pos:end="157:39">if <condition pos:start="155:12" pos:end="155:29">(<expr pos:start="155:13" pos:end="155:28"><call pos:start="155:13" pos:end="155:23"><name pos:start="155:13" pos:end="155:19">avio_r8</name><argument_list pos:start="155:20" pos:end="155:23">(<argument pos:start="155:21" pos:end="155:22"><expr pos:start="155:21" pos:end="155:22"><name pos:start="155:21" pos:end="155:22">pb</name></expr></argument>)</argument_list></call> <operator pos:start="155:25" pos:end="155:26">!=</operator> <literal type="number" pos:start="155:28" pos:end="155:28">1</literal></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:39"><block_content pos:start="157:13" pos:end="157:39">

            <return pos:start="157:13" pos:end="157:39">return <expr pos:start="157:20" pos:end="157:38"><name pos:start="157:20" pos:end="157:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="161:9" pos:end="161:30"><expr pos:start="161:9" pos:end="161:29"><name pos:start="161:9" pos:end="161:13">count</name> <operator pos:start="161:15" pos:end="161:15">=</operator> <call pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:25">avio_rb32</name><argument_list pos:start="161:26" pos:end="161:29">(<argument pos:start="161:27" pos:end="161:28"><expr pos:start="161:27" pos:end="161:28"><name pos:start="161:27" pos:end="161:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="163:9" pos:end="243:9">for <control pos:start="163:13" pos:end="163:35">(<init pos:start="163:14" pos:end="163:19"><expr pos:start="163:14" pos:end="163:18"><name pos:start="163:14" pos:end="163:14">i</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <literal type="number" pos:start="163:18" pos:end="163:18">0</literal></expr>;</init> <condition pos:start="163:21" pos:end="163:30"><expr pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:21">i</name> <operator pos:start="163:23" pos:end="163:23">&lt;</operator> <name pos:start="163:25" pos:end="163:29">count</name></expr>;</condition> <incr pos:start="163:32" pos:end="163:34"><expr pos:start="163:32" pos:end="163:34"><name pos:start="163:32" pos:end="163:32">i</name><operator pos:start="163:33" pos:end="163:34">++</operator></expr></incr>)</control> <block pos:start="163:37" pos:end="243:9">{<block_content pos:start="165:13" pos:end="241:13">

            <if_stmt pos:start="165:13" pos:end="167:43"><if pos:start="165:13" pos:end="167:43">if <condition pos:start="165:16" pos:end="165:30">(<expr pos:start="165:17" pos:end="165:29"><call pos:start="165:17" pos:end="165:29"><name pos:start="165:17" pos:end="165:25">avio_feof</name><argument_list pos:start="165:26" pos:end="165:29">(<argument pos:start="165:27" pos:end="165:28"><expr pos:start="165:27" pos:end="165:28"><name pos:start="165:27" pos:end="165:28">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:43"><block_content pos:start="167:17" pos:end="167:43">

                <return pos:start="167:17" pos:end="167:43">return <expr pos:start="167:24" pos:end="167:42"><name pos:start="167:24" pos:end="167:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="171:13" pos:end="171:31"><expr pos:start="171:13" pos:end="171:30"><name pos:start="171:13" pos:end="171:16">type</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <call pos:start="171:20" pos:end="171:30"><name pos:start="171:20" pos:end="171:26">avio_r8</name><argument_list pos:start="171:27" pos:end="171:30">(<argument pos:start="171:28" pos:end="171:29"><expr pos:start="171:28" pos:end="171:29"><name pos:start="171:28" pos:end="171:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:34"><expr pos:start="173:13" pos:end="173:33"><name pos:start="173:13" pos:end="173:16">tlen</name>  <operator pos:start="173:19" pos:end="173:19">=</operator> <call pos:start="173:21" pos:end="173:33"><name pos:start="173:21" pos:end="173:29">avio_rb32</name><argument_list pos:start="173:30" pos:end="173:33">(<argument pos:start="173:31" pos:end="173:32"><expr pos:start="173:31" pos:end="173:32"><name pos:start="173:31" pos:end="173:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:53"><expr pos:start="175:13" pos:end="175:52"><call pos:start="175:13" pos:end="175:52"><name pos:start="175:13" pos:end="175:24">avio_get_str</name><argument_list pos:start="175:25" pos:end="175:52">(<argument pos:start="175:26" pos:end="175:27"><expr pos:start="175:26" pos:end="175:27"><name pos:start="175:26" pos:end="175:27">pb</name></expr></argument>, <argument pos:start="175:30" pos:end="175:33"><expr pos:start="175:30" pos:end="175:33"><name pos:start="175:30" pos:end="175:33">tlen</name></expr></argument>, <argument pos:start="175:36" pos:end="175:38"><expr pos:start="175:36" pos:end="175:38"><name pos:start="175:36" pos:end="175:38">key</name></expr></argument>, <argument pos:start="175:41" pos:end="175:51"><expr pos:start="175:41" pos:end="175:51"><sizeof pos:start="175:41" pos:end="175:51">sizeof<argument_list pos:start="175:47" pos:end="175:51">(<argument pos:start="175:48" pos:end="175:50"><expr pos:start="175:48" pos:end="175:50"><name pos:start="175:48" pos:end="175:50">key</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:33"><expr pos:start="177:13" pos:end="177:32"><name pos:start="177:13" pos:end="177:15">len</name>  <operator pos:start="177:18" pos:end="177:18">=</operator> <call pos:start="177:20" pos:end="177:32"><name pos:start="177:20" pos:end="177:28">avio_rb32</name><argument_list pos:start="177:29" pos:end="177:32">(<argument pos:start="177:30" pos:end="177:31"><expr pos:start="177:30" pos:end="177:31"><name pos:start="177:30" pos:end="177:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="179:13" pos:end="241:13"><if pos:start="179:13" pos:end="185:13">if <condition pos:start="179:16" pos:end="179:26">(<expr pos:start="179:17" pos:end="179:25"><name pos:start="179:17" pos:end="179:20">type</name> <operator pos:start="179:22" pos:end="179:23">==</operator> <literal type="number" pos:start="179:25" pos:end="179:25">5</literal></expr>)</condition> <block pos:start="179:28" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:65">

                <expr_stmt pos:start="181:17" pos:end="181:56"><expr pos:start="181:17" pos:end="181:55"><call pos:start="181:17" pos:end="181:55"><name pos:start="181:17" pos:end="181:28">avio_get_str</name><argument_list pos:start="181:29" pos:end="181:55">(<argument pos:start="181:30" pos:end="181:31"><expr pos:start="181:30" pos:end="181:31"><name pos:start="181:30" pos:end="181:31">pb</name></expr></argument>, <argument pos:start="181:34" pos:end="181:36"><expr pos:start="181:34" pos:end="181:36"><name pos:start="181:34" pos:end="181:36">len</name></expr></argument>, <argument pos:start="181:39" pos:end="181:41"><expr pos:start="181:39" pos:end="181:41"><name pos:start="181:39" pos:end="181:41">val</name></expr></argument>, <argument pos:start="181:44" pos:end="181:54"><expr pos:start="181:44" pos:end="181:54"><sizeof pos:start="181:44" pos:end="181:54">sizeof<argument_list pos:start="181:50" pos:end="181:54">(<argument pos:start="181:51" pos:end="181:53"><expr pos:start="181:51" pos:end="181:53"><name pos:start="181:51" pos:end="181:53">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:65"><expr pos:start="183:17" pos:end="183:64"><call pos:start="183:17" pos:end="183:64"><name pos:start="183:17" pos:end="183:22">av_log</name><argument_list pos:start="183:23" pos:end="183:64">(<argument pos:start="183:24" pos:end="183:24"><expr pos:start="183:24" pos:end="183:24"><name pos:start="183:24" pos:end="183:24">s</name></expr></argument>, <argument pos:start="183:27" pos:end="183:38"><expr pos:start="183:27" pos:end="183:38"><name pos:start="183:27" pos:end="183:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="183:41" pos:end="183:53"><expr pos:start="183:41" pos:end="183:53"><literal type="string" pos:start="183:41" pos:end="183:53">"%s = '%s'\n"</literal></expr></argument>, <argument pos:start="183:56" pos:end="183:58"><expr pos:start="183:56" pos:end="183:58"><name pos:start="183:56" pos:end="183:58">key</name></expr></argument>, <argument pos:start="183:61" pos:end="183:63"><expr pos:start="183:61" pos:end="183:63"><name pos:start="183:61" pos:end="183:63">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="185:15" pos:end="211:13">else if <condition pos:start="185:23" pos:end="185:70">(<expr pos:start="185:24" pos:end="185:69"><name pos:start="185:24" pos:end="185:27">type</name> <operator pos:start="185:29" pos:end="185:30">==</operator> <literal type="number" pos:start="185:32" pos:end="185:32">4</literal> <operator pos:start="185:34" pos:end="185:35">&amp;&amp;</operator> <operator pos:start="185:37" pos:end="185:37">!</operator><call pos:start="185:38" pos:end="185:69"><name pos:start="185:38" pos:end="185:44">strncmp</name><argument_list pos:start="185:45" pos:end="185:69">(<argument pos:start="185:46" pos:end="185:48"><expr pos:start="185:46" pos:end="185:48"><name pos:start="185:46" pos:end="185:48">key</name></expr></argument>, <argument pos:start="185:51" pos:end="185:62"><expr pos:start="185:51" pos:end="185:62"><literal type="string" pos:start="185:51" pos:end="185:62">"OpaqueData"</literal></expr></argument>, <argument pos:start="185:65" pos:end="185:68"><expr pos:start="185:65" pos:end="185:68"><name pos:start="185:65" pos:end="185:68">tlen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:72" pos:end="211:13">{<block_content pos:start="187:17" pos:end="209:31">

                <expr_stmt pos:start="187:17" pos:end="187:50"><expr pos:start="187:17" pos:end="187:49"><name pos:start="187:17" pos:end="187:19">ret</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:49"><name pos:start="187:23" pos:end="187:42">ffio_ensure_seekback</name><argument_list pos:start="187:43" pos:end="187:49">(<argument pos:start="187:44" pos:end="187:45"><expr pos:start="187:44" pos:end="187:45"><name pos:start="187:44" pos:end="187:45">pb</name></expr></argument>, <argument pos:start="187:48" pos:end="187:48"><expr pos:start="187:48" pos:end="187:48"><literal type="number" pos:start="187:48" pos:end="187:48">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="189:17" pos:end="191:31"><if pos:start="189:17" pos:end="191:31">if <condition pos:start="189:20" pos:end="189:28">(<expr pos:start="189:21" pos:end="189:27"><name pos:start="189:21" pos:end="189:23">ret</name> <operator pos:start="189:25" pos:end="189:25">&lt;</operator> <literal type="number" pos:start="189:27" pos:end="189:27">0</literal></expr>)</condition><block type="pseudo" pos:start="191:21" pos:end="191:31"><block_content pos:start="191:21" pos:end="191:31">

                    <return pos:start="191:21" pos:end="191:31">return <expr pos:start="191:28" pos:end="191:30"><name pos:start="191:28" pos:end="191:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <if_stmt pos:start="193:17" pos:end="203:17"><if pos:start="193:17" pos:end="197:17">if <condition pos:start="193:20" pos:end="193:65">(<expr pos:start="193:21" pos:end="193:64"><call pos:start="193:21" pos:end="193:33"><name pos:start="193:21" pos:end="193:29">avio_rb32</name><argument_list pos:start="193:30" pos:end="193:33">(<argument pos:start="193:31" pos:end="193:32"><expr pos:start="193:31" pos:end="193:32"><name pos:start="193:31" pos:end="193:32">pb</name></expr></argument>)</argument_list></call> <operator pos:start="193:35" pos:end="193:36">==</operator> <call pos:start="193:38" pos:end="193:64"><name pos:start="193:38" pos:end="193:44">MKBETAG</name><argument_list pos:start="193:45" pos:end="193:64">(<argument pos:start="193:46" pos:end="193:48"><expr pos:start="193:46" pos:end="193:48"><literal type="char" pos:start="193:46" pos:end="193:48">'M'</literal></expr></argument>, <argument pos:start="193:51" pos:end="193:53"><expr pos:start="193:51" pos:end="193:53"><literal type="char" pos:start="193:51" pos:end="193:53">'L'</literal></expr></argument>, <argument pos:start="193:56" pos:end="193:58"><expr pos:start="193:56" pos:end="193:58"><literal type="char" pos:start="193:56" pos:end="193:58">'T'</literal></expr></argument>, <argument pos:start="193:61" pos:end="193:63"><expr pos:start="193:61" pos:end="193:63"><literal type="char" pos:start="193:61" pos:end="193:63">'I'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="193:67" pos:end="197:17">{<block_content pos:start="195:21" pos:end="195:57">

                    <expr_stmt pos:start="195:21" pos:end="195:57"><expr pos:start="195:21" pos:end="195:56"><name pos:start="195:21" pos:end="195:23">ret</name> <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="195:56"><name pos:start="195:27" pos:end="195:39">rm_read_multi</name><argument_list pos:start="195:40" pos:end="195:56">(<argument pos:start="195:41" pos:end="195:41"><expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">s</name></expr></argument>, <argument pos:start="195:44" pos:end="195:45"><expr pos:start="195:44" pos:end="195:45"><name pos:start="195:44" pos:end="195:45">pb</name></expr></argument>, <argument pos:start="195:48" pos:end="195:49"><expr pos:start="195:48" pos:end="195:49"><name pos:start="195:48" pos:end="195:49">st</name></expr></argument>, <argument pos:start="195:52" pos:end="195:55"><expr pos:start="195:52" pos:end="195:55"><name pos:start="195:52" pos:end="195:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="197:19" pos:end="203:17">else <block pos:start="197:24" pos:end="203:17">{<block_content pos:start="199:21" pos:end="201:89">

                    <expr_stmt pos:start="199:21" pos:end="199:48"><expr pos:start="199:21" pos:end="199:47"><call pos:start="199:21" pos:end="199:47"><name pos:start="199:21" pos:end="199:29">avio_seek</name><argument_list pos:start="199:30" pos:end="199:47">(<argument pos:start="199:31" pos:end="199:32"><expr pos:start="199:31" pos:end="199:32"><name pos:start="199:31" pos:end="199:32">pb</name></expr></argument>, <argument pos:start="199:35" pos:end="199:36"><expr pos:start="199:35" pos:end="199:36"><operator pos:start="199:35" pos:end="199:35">-</operator><literal type="number" pos:start="199:36" pos:end="199:36">4</literal></expr></argument>, <argument pos:start="199:39" pos:end="199:46"><expr pos:start="199:39" pos:end="199:46"><name pos:start="199:39" pos:end="199:46">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:89"><expr pos:start="201:21" pos:end="201:88"><name pos:start="201:21" pos:end="201:23">ret</name> <operator pos:start="201:25" pos:end="201:25">=</operator> <call pos:start="201:27" pos:end="201:88"><name pos:start="201:27" pos:end="201:51">ff_rm_read_mdpr_codecdata</name><argument_list pos:start="201:52" pos:end="201:88">(<argument pos:start="201:53" pos:end="201:53"><expr pos:start="201:53" pos:end="201:53"><name pos:start="201:53" pos:end="201:53">s</name></expr></argument>, <argument pos:start="201:56" pos:end="201:57"><expr pos:start="201:56" pos:end="201:57"><name pos:start="201:56" pos:end="201:57">pb</name></expr></argument>, <argument pos:start="201:60" pos:end="201:61"><expr pos:start="201:60" pos:end="201:61"><name pos:start="201:60" pos:end="201:61">st</name></expr></argument>, <argument pos:start="201:64" pos:end="201:76"><expr pos:start="201:64" pos:end="201:76"><name pos:start="201:64" pos:end="201:76"><name pos:start="201:64" pos:end="201:65">st</name><operator pos:start="201:66" pos:end="201:67">-&gt;</operator><name pos:start="201:68" pos:end="201:76">priv_data</name></name></expr></argument>, <argument pos:start="201:79" pos:end="201:81"><expr pos:start="201:79" pos:end="201:81"><name pos:start="201:79" pos:end="201:81">len</name></expr></argument>, <argument pos:start="201:84" pos:end="201:87"><expr pos:start="201:84" pos:end="201:87"><name pos:start="201:84" pos:end="201:87">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <if_stmt pos:start="207:17" pos:end="209:31"><if pos:start="207:17" pos:end="209:31">if <condition pos:start="207:20" pos:end="207:28">(<expr pos:start="207:21" pos:end="207:27"><name pos:start="207:21" pos:end="207:23">ret</name> <operator pos:start="207:25" pos:end="207:25">&lt;</operator> <literal type="number" pos:start="207:27" pos:end="207:27">0</literal></expr>)</condition><block type="pseudo" pos:start="209:21" pos:end="209:31"><block_content pos:start="209:21" pos:end="209:31">

                    <return pos:start="209:21" pos:end="209:31">return <expr pos:start="209:28" pos:end="209:30"><name pos:start="209:28" pos:end="209:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="211:15" pos:end="225:13">else if <condition pos:start="211:23" pos:end="211:33">(<expr pos:start="211:24" pos:end="211:32"><name pos:start="211:24" pos:end="211:27">type</name> <operator pos:start="211:29" pos:end="211:30">==</operator> <literal type="number" pos:start="211:32" pos:end="211:32">4</literal></expr>)</condition> <block pos:start="211:35" pos:end="225:13">{<block_content pos:start="213:17" pos:end="223:47">

                <decl_stmt pos:start="213:17" pos:end="213:22"><decl pos:start="213:17" pos:end="213:21"><type pos:start="213:17" pos:end="213:19"><name pos:start="213:17" pos:end="213:19">int</name></type> <name pos:start="213:21" pos:end="213:21">j</name></decl>;</decl_stmt>



                <expr_stmt pos:start="217:17" pos:end="217:57"><expr pos:start="217:17" pos:end="217:56"><call pos:start="217:17" pos:end="217:56"><name pos:start="217:17" pos:end="217:22">av_log</name><argument_list pos:start="217:23" pos:end="217:56">(<argument pos:start="217:24" pos:end="217:24"><expr pos:start="217:24" pos:end="217:24"><name pos:start="217:24" pos:end="217:24">s</name></expr></argument>, <argument pos:start="217:27" pos:end="217:38"><expr pos:start="217:27" pos:end="217:38"><name pos:start="217:27" pos:end="217:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="217:41" pos:end="217:50"><expr pos:start="217:41" pos:end="217:50"><literal type="string" pos:start="217:41" pos:end="217:50">"%s = '0x"</literal></expr></argument>, <argument pos:start="217:53" pos:end="217:55"><expr pos:start="217:53" pos:end="217:55"><name pos:start="217:53" pos:end="217:55">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="219:17" pos:end="221:63">for <control pos:start="219:21" pos:end="219:41">(<init pos:start="219:22" pos:end="219:27"><expr pos:start="219:22" pos:end="219:26"><name pos:start="219:22" pos:end="219:22">j</name> <operator pos:start="219:24" pos:end="219:24">=</operator> <literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>;</init> <condition pos:start="219:29" pos:end="219:36"><expr pos:start="219:29" pos:end="219:35"><name pos:start="219:29" pos:end="219:29">j</name> <operator pos:start="219:31" pos:end="219:31">&lt;</operator> <name pos:start="219:33" pos:end="219:35">len</name></expr>;</condition> <incr pos:start="219:38" pos:end="219:40"><expr pos:start="219:38" pos:end="219:40"><name pos:start="219:38" pos:end="219:38">j</name><operator pos:start="219:39" pos:end="219:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="221:21" pos:end="221:63"><block_content pos:start="221:21" pos:end="221:63">

                    <expr_stmt pos:start="221:21" pos:end="221:63"><expr pos:start="221:21" pos:end="221:62"><call pos:start="221:21" pos:end="221:62"><name pos:start="221:21" pos:end="221:26">av_log</name><argument_list pos:start="221:27" pos:end="221:62">(<argument pos:start="221:28" pos:end="221:28"><expr pos:start="221:28" pos:end="221:28"><name pos:start="221:28" pos:end="221:28">s</name></expr></argument>, <argument pos:start="221:31" pos:end="221:42"><expr pos:start="221:31" pos:end="221:42"><name pos:start="221:31" pos:end="221:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="221:45" pos:end="221:48"><expr pos:start="221:45" pos:end="221:48"><literal type="string" pos:start="221:45" pos:end="221:48">"%X"</literal></expr></argument>, <argument pos:start="221:51" pos:end="221:61"><expr pos:start="221:51" pos:end="221:61"><call pos:start="221:51" pos:end="221:61"><name pos:start="221:51" pos:end="221:57">avio_r8</name><argument_list pos:start="221:58" pos:end="221:61">(<argument pos:start="221:59" pos:end="221:60"><expr pos:start="221:59" pos:end="221:60"><name pos:start="221:59" pos:end="221:60">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="223:17" pos:end="223:47"><expr pos:start="223:17" pos:end="223:46"><call pos:start="223:17" pos:end="223:46"><name pos:start="223:17" pos:end="223:22">av_log</name><argument_list pos:start="223:23" pos:end="223:46">(<argument pos:start="223:24" pos:end="223:24"><expr pos:start="223:24" pos:end="223:24"><name pos:start="223:24" pos:end="223:24">s</name></expr></argument>, <argument pos:start="223:27" pos:end="223:38"><expr pos:start="223:27" pos:end="223:38"><name pos:start="223:27" pos:end="223:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="223:41" pos:end="223:45"><expr pos:start="223:41" pos:end="223:45"><literal type="string" pos:start="223:41" pos:end="223:45">"'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="225:15" pos:end="229:13">else if <condition pos:start="225:23" pos:end="225:80">(<expr pos:start="225:24" pos:end="225:79"><name pos:start="225:24" pos:end="225:26">len</name> <operator pos:start="225:28" pos:end="225:29">==</operator> <literal type="number" pos:start="225:31" pos:end="225:31">4</literal> <operator pos:start="225:33" pos:end="225:34">&amp;&amp;</operator> <name pos:start="225:36" pos:end="225:39">type</name> <operator pos:start="225:41" pos:end="225:42">==</operator> <literal type="number" pos:start="225:44" pos:end="225:44">3</literal> <operator pos:start="225:46" pos:end="225:47">&amp;&amp;</operator> <operator pos:start="225:49" pos:end="225:49">!</operator><call pos:start="225:50" pos:end="225:79"><name pos:start="225:50" pos:end="225:56">strncmp</name><argument_list pos:start="225:57" pos:end="225:79">(<argument pos:start="225:58" pos:end="225:60"><expr pos:start="225:58" pos:end="225:60"><name pos:start="225:58" pos:end="225:60">key</name></expr></argument>, <argument pos:start="225:63" pos:end="225:72"><expr pos:start="225:63" pos:end="225:72"><literal type="string" pos:start="225:63" pos:end="225:72">"Duration"</literal></expr></argument>, <argument pos:start="225:75" pos:end="225:78"><expr pos:start="225:75" pos:end="225:78"><name pos:start="225:75" pos:end="225:78">tlen</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:82" pos:end="229:13">{<block_content pos:start="227:17" pos:end="227:45">

                <expr_stmt pos:start="227:17" pos:end="227:45"><expr pos:start="227:17" pos:end="227:44"><name pos:start="227:17" pos:end="227:28"><name pos:start="227:17" pos:end="227:18">st</name><operator pos:start="227:19" pos:end="227:20">-&gt;</operator><name pos:start="227:21" pos:end="227:28">duration</name></name> <operator pos:start="227:30" pos:end="227:30">=</operator> <call pos:start="227:32" pos:end="227:44"><name pos:start="227:32" pos:end="227:40">avio_rb32</name><argument_list pos:start="227:41" pos:end="227:44">(<argument pos:start="227:42" pos:end="227:43"><expr pos:start="227:42" pos:end="227:43"><name pos:start="227:42" pos:end="227:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="229:15" pos:end="235:13">else if <condition pos:start="229:23" pos:end="229:45">(<expr pos:start="229:24" pos:end="229:44"><name pos:start="229:24" pos:end="229:26">len</name> <operator pos:start="229:28" pos:end="229:29">==</operator> <literal type="number" pos:start="229:31" pos:end="229:31">4</literal> <operator pos:start="229:33" pos:end="229:34">&amp;&amp;</operator> <name pos:start="229:36" pos:end="229:39">type</name> <operator pos:start="229:41" pos:end="229:42">==</operator> <literal type="number" pos:start="229:44" pos:end="229:44">3</literal></expr>)</condition> <block pos:start="229:47" pos:end="235:13">{<block_content pos:start="231:17" pos:end="233:65">

                <expr_stmt pos:start="231:17" pos:end="231:38"><expr pos:start="231:17" pos:end="231:37"><name pos:start="231:17" pos:end="231:21">value</name> <operator pos:start="231:23" pos:end="231:23">=</operator> <call pos:start="231:25" pos:end="231:37"><name pos:start="231:25" pos:end="231:33">avio_rb32</name><argument_list pos:start="231:34" pos:end="231:37">(<argument pos:start="231:35" pos:end="231:36"><expr pos:start="231:35" pos:end="231:36"><name pos:start="231:35" pos:end="231:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:65"><expr pos:start="233:17" pos:end="233:64"><call pos:start="233:17" pos:end="233:64"><name pos:start="233:17" pos:end="233:22">av_log</name><argument_list pos:start="233:23" pos:end="233:64">(<argument pos:start="233:24" pos:end="233:24"><expr pos:start="233:24" pos:end="233:24"><name pos:start="233:24" pos:end="233:24">s</name></expr></argument>, <argument pos:start="233:27" pos:end="233:38"><expr pos:start="233:27" pos:end="233:38"><name pos:start="233:27" pos:end="233:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="233:41" pos:end="233:51"><expr pos:start="233:41" pos:end="233:51"><literal type="string" pos:start="233:41" pos:end="233:51">"%s = %d\n"</literal></expr></argument>, <argument pos:start="233:54" pos:end="233:56"><expr pos:start="233:54" pos:end="233:56"><name pos:start="233:54" pos:end="233:56">key</name></expr></argument>, <argument pos:start="233:59" pos:end="233:63"><expr pos:start="233:59" pos:end="233:63"><name pos:start="233:59" pos:end="233:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="235:15" pos:end="241:13">else <block pos:start="235:20" pos:end="241:13">{<block_content pos:start="237:17" pos:end="239:35">

                <expr_stmt pos:start="237:17" pos:end="237:79"><expr pos:start="237:17" pos:end="237:78"><call pos:start="237:17" pos:end="237:78"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="237:78">(<argument pos:start="237:24" pos:end="237:24"><expr pos:start="237:24" pos:end="237:24"><name pos:start="237:24" pos:end="237:24">s</name></expr></argument>, <argument pos:start="237:27" pos:end="237:38"><expr pos:start="237:27" pos:end="237:38"><name pos:start="237:27" pos:end="237:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="237:41" pos:end="237:72"><expr pos:start="237:41" pos:end="237:72"><literal type="string" pos:start="237:41" pos:end="237:72">"Skipping unsupported key: %s\n"</literal></expr></argument>, <argument pos:start="237:75" pos:end="237:77"><expr pos:start="237:75" pos:end="237:77"><name pos:start="237:75" pos:end="237:77">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="239:17" pos:end="239:35"><expr pos:start="239:17" pos:end="239:34"><call pos:start="239:17" pos:end="239:34"><name pos:start="239:17" pos:end="239:25">avio_skip</name><argument_list pos:start="239:26" pos:end="239:34">(<argument pos:start="239:27" pos:end="239:28"><expr pos:start="239:27" pos:end="239:28"><name pos:start="239:27" pos:end="239:28">pb</name></expr></argument>, <argument pos:start="239:31" pos:end="239:33"><expr pos:start="239:31" pos:end="239:33"><name pos:start="239:31" pos:end="239:33">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="249:5" pos:end="251:35"><if pos:start="249:5" pos:end="251:35">if <condition pos:start="249:8" pos:end="249:25">(<expr pos:start="249:9" pos:end="249:24"><call pos:start="249:9" pos:end="249:19"><name pos:start="249:9" pos:end="249:15">avio_r8</name><argument_list pos:start="249:16" pos:end="249:19">(<argument pos:start="249:17" pos:end="249:18"><expr pos:start="249:17" pos:end="249:18"><name pos:start="249:17" pos:end="249:18">pb</name></expr></argument>)</argument_list></call> <operator pos:start="249:21" pos:end="249:22">!=</operator> <literal type="number" pos:start="249:24" pos:end="249:24">6</literal></expr>)</condition><block type="pseudo" pos:start="251:9" pos:end="251:35"><block_content pos:start="251:9" pos:end="251:35">

        <return pos:start="251:9" pos:end="251:35">return <expr pos:start="251:16" pos:end="251:34"><name pos:start="251:16" pos:end="251:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:22"><expr pos:start="253:5" pos:end="253:21"><call pos:start="253:5" pos:end="253:21"><name pos:start="253:5" pos:end="253:13">avio_skip</name><argument_list pos:start="253:14" pos:end="253:21">(<argument pos:start="253:15" pos:end="253:16"><expr pos:start="253:15" pos:end="253:16"><name pos:start="253:15" pos:end="253:16">pb</name></expr></argument>, <argument pos:start="253:19" pos:end="253:20"><expr pos:start="253:19" pos:end="253:20"><literal type="number" pos:start="253:19" pos:end="253:20">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:58"><expr pos:start="255:5" pos:end="255:57"><call pos:start="255:5" pos:end="255:57"><name pos:start="255:5" pos:end="255:13">avio_skip</name><argument_list pos:start="255:14" pos:end="255:57">(<argument pos:start="255:15" pos:end="255:16"><expr pos:start="255:15" pos:end="255:16"><name pos:start="255:15" pos:end="255:16">pb</name></expr></argument>, <argument pos:start="255:19" pos:end="255:56"><expr pos:start="255:19" pos:end="255:56"><call pos:start="255:19" pos:end="255:31"><name pos:start="255:19" pos:end="255:27">avio_rb64</name><argument_list pos:start="255:28" pos:end="255:31">(<argument pos:start="255:29" pos:end="255:30"><expr pos:start="255:29" pos:end="255:30"><name pos:start="255:29" pos:end="255:30">pb</name></expr></argument>)</argument_list></call> <operator pos:start="255:33" pos:end="255:33">+</operator> <name pos:start="255:35" pos:end="255:37">pos</name> <operator pos:start="255:39" pos:end="255:39">-</operator> <call pos:start="255:41" pos:end="255:56"><name pos:start="255:41" pos:end="255:49">avio_tell</name><argument_list pos:start="255:50" pos:end="255:56">(<argument pos:start="255:51" pos:end="255:55"><expr pos:start="255:51" pos:end="255:55"><name pos:start="255:51" pos:end="255:55"><name pos:start="255:51" pos:end="255:51">s</name><operator pos:start="255:52" pos:end="255:53">-&gt;</operator><name pos:start="255:54" pos:end="255:55">pb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="257:5" pos:end="259:35"><if pos:start="257:5" pos:end="259:35">if <condition pos:start="257:8" pos:end="257:25">(<expr pos:start="257:9" pos:end="257:24"><call pos:start="257:9" pos:end="257:19"><name pos:start="257:9" pos:end="257:15">avio_r8</name><argument_list pos:start="257:16" pos:end="257:19">(<argument pos:start="257:17" pos:end="257:18"><expr pos:start="257:17" pos:end="257:18"><name pos:start="257:17" pos:end="257:18">pb</name></expr></argument>)</argument_list></call> <operator pos:start="257:21" pos:end="257:22">!=</operator> <literal type="number" pos:start="257:24" pos:end="257:24">8</literal></expr>)</condition><block type="pseudo" pos:start="259:9" pos:end="259:35"><block_content pos:start="259:9" pos:end="259:35">

        <return pos:start="259:9" pos:end="259:35">return <expr pos:start="259:16" pos:end="259:34"><name pos:start="259:16" pos:end="259:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:21"><expr pos:start="261:5" pos:end="261:20"><call pos:start="261:5" pos:end="261:20"><name pos:start="261:5" pos:end="261:13">avio_skip</name><argument_list pos:start="261:14" pos:end="261:20">(<argument pos:start="261:15" pos:end="261:16"><expr pos:start="261:15" pos:end="261:16"><name pos:start="261:15" pos:end="261:16">pb</name></expr></argument>, <argument pos:start="261:19" pos:end="261:19"><expr pos:start="261:19" pos:end="261:19"><literal type="number" pos:start="261:19" pos:end="261:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="265:5" pos:end="265:13">return <expr pos:start="265:12" pos:end="265:12"><literal type="number" pos:start="265:12" pos:end="265:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
