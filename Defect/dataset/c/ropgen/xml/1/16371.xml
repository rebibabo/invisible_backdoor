<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16371.c" pos:tabs="8"><function pos:start="1:1" pos:end="146:1"><type pos:start="1:1" pos:end="1:18"><name pos:start="1:1" pos:end="1:16">BlockDriverState</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:41">bdrv_find_backing_image</name><parameter_list pos:start="1:42" pos:end="3:33">(<parameter pos:start="1:43" pos:end="1:62"><decl pos:start="1:43" pos:end="1:62"><type pos:start="1:43" pos:end="1:62"><name pos:start="1:43" pos:end="1:58">BlockDriverState</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">bs</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:32"><decl pos:start="3:9" pos:end="3:32"><type pos:start="3:9" pos:end="3:32"><specifier pos:start="3:9" pos:end="3:13">const</specifier> <name pos:start="3:15" pos:end="3:18">char</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:32">backing_file</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="146:1">{<block_content pos:start="7:5" pos:end="144:18">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:23">filename_full</name> <init pos:start="7:25" pos:end="7:30">= <expr pos:start="7:27" pos:end="7:30"><name pos:start="7:27" pos:end="7:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:27">backing_file_full</name> <init pos:start="9:29" pos:end="9:34">= <expr pos:start="9:31" pos:end="9:34"><name pos:start="9:31" pos:end="9:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:22">filename_tmp</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">is_protocol</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:37"><decl pos:start="15:5" pos:end="15:36"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:29">curr_bs</name> <init pos:start="15:31" pos:end="15:36">= <expr pos:start="15:33" pos:end="15:36"><name pos:start="15:33" pos:end="15:36">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:36"><decl pos:start="17:5" pos:end="17:35"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:20">BlockDriverState</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:28">retval</name> <init pos:start="17:30" pos:end="17:35">= <expr pos:start="17:32" pos:end="17:35"><name pos:start="17:32" pos:end="17:35">NULL</name></expr></init></decl>;</decl_stmt>




    <if_stmt pos:start="22:5" pos:end="26:5"><if pos:start="22:5" pos:end="26:5">if <condition pos:start="22:8" pos:end="22:41">(<expr pos:start="22:9" pos:end="22:40"><operator pos:start="22:9" pos:end="22:9">!</operator><name pos:start="22:10" pos:end="22:11">bs</name> <operator pos:start="22:13" pos:end="22:14">||</operator> <operator pos:start="22:16" pos:end="22:16">!</operator><name pos:start="22:17" pos:end="22:23"><name pos:start="22:17" pos:end="22:18">bs</name><operator pos:start="22:19" pos:end="22:20">-&gt;</operator><name pos:start="22:21" pos:end="22:23">drv</name></name> <operator pos:start="22:25" pos:end="22:26">||</operator> <operator pos:start="22:28" pos:end="22:28">!</operator><name pos:start="22:29" pos:end="22:40">backing_file</name></expr>)</condition> <block pos:start="22:43" pos:end="26:5">{<block_content pos:start="24:9" pos:end="24:20">

        <return pos:start="24:9" pos:end="24:20">return <expr pos:start="24:16" pos:end="24:19"><name pos:start="24:16" pos:end="24:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="30:5" pos:end="30:43"><expr pos:start="30:5" pos:end="30:42"><name pos:start="30:5" pos:end="30:17">filename_full</name>     <operator pos:start="30:23" pos:end="30:23">=</operator> <call pos:start="30:25" pos:end="30:42"><name pos:start="30:25" pos:end="30:32">g_malloc</name><argument_list pos:start="30:33" pos:end="30:42">(<argument pos:start="30:34" pos:end="30:41"><expr pos:start="30:34" pos:end="30:41"><name pos:start="30:34" pos:end="30:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="32:5" pos:end="32:43"><expr pos:start="32:5" pos:end="32:42"><name pos:start="32:5" pos:end="32:21">backing_file_full</name> <operator pos:start="32:23" pos:end="32:23">=</operator> <call pos:start="32:25" pos:end="32:42"><name pos:start="32:25" pos:end="32:32">g_malloc</name><argument_list pos:start="32:33" pos:end="32:42">(<argument pos:start="32:34" pos:end="32:41"><expr pos:start="32:34" pos:end="32:41"><name pos:start="32:34" pos:end="32:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="34:5" pos:end="34:43"><expr pos:start="34:5" pos:end="34:42"><name pos:start="34:5" pos:end="34:16">filename_tmp</name>      <operator pos:start="34:23" pos:end="34:23">=</operator> <call pos:start="34:25" pos:end="34:42"><name pos:start="34:25" pos:end="34:32">g_malloc</name><argument_list pos:start="34:33" pos:end="34:42">(<argument pos:start="34:34" pos:end="34:41"><expr pos:start="34:34" pos:end="34:41"><name pos:start="34:34" pos:end="34:41">PATH_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="38:5" pos:end="38:50"><expr pos:start="38:5" pos:end="38:49"><name pos:start="38:5" pos:end="38:15">is_protocol</name> <operator pos:start="38:17" pos:end="38:17">=</operator> <call pos:start="38:19" pos:end="38:49"><name pos:start="38:19" pos:end="38:35">path_has_protocol</name><argument_list pos:start="38:36" pos:end="38:49">(<argument pos:start="38:37" pos:end="38:48"><expr pos:start="38:37" pos:end="38:48"><name pos:start="38:37" pos:end="38:48">backing_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="42:5" pos:end="134:5">for <control pos:start="42:9" pos:end="42:72">(<init pos:start="42:10" pos:end="42:22"><expr pos:start="42:10" pos:end="42:21"><name pos:start="42:10" pos:end="42:16">curr_bs</name> <operator pos:start="42:18" pos:end="42:18">=</operator> <name pos:start="42:20" pos:end="42:21">bs</name></expr>;</init> <condition pos:start="42:24" pos:end="42:40"><expr pos:start="42:24" pos:end="42:39"><name pos:start="42:24" pos:end="42:39"><name pos:start="42:24" pos:end="42:30">curr_bs</name><operator pos:start="42:31" pos:end="42:32">-&gt;</operator><name pos:start="42:33" pos:end="42:39">backing</name></name></expr>;</condition> <incr pos:start="42:42" pos:end="42:71"><expr pos:start="42:42" pos:end="42:71"><name pos:start="42:42" pos:end="42:48">curr_bs</name> <operator pos:start="42:50" pos:end="42:50">=</operator> <name pos:start="42:52" pos:end="42:71"><name pos:start="42:52" pos:end="42:58">curr_bs</name><operator pos:start="42:59" pos:end="42:60">-&gt;</operator><name pos:start="42:61" pos:end="42:67">backing</name><operator pos:start="42:68" pos:end="42:69">-&gt;</operator><name pos:start="42:70" pos:end="42:71">bs</name></name></expr></incr>)</control> <block pos:start="42:74" pos:end="134:5">{<block_content pos:start="50:9" pos:end="132:9">



        <comment type="block" pos:start="46:9" pos:end="48:69">/* If either of the filename paths is actually a protocol, then

         * compare unmodified paths; otherwise make paths relative */</comment>

        <if_stmt pos:start="50:9" pos:end="132:9"><if pos:start="50:9" pos:end="84:9">if <condition pos:start="50:12" pos:end="50:68">(<expr pos:start="50:13" pos:end="50:67"><name pos:start="50:13" pos:end="50:23">is_protocol</name> <operator pos:start="50:25" pos:end="50:26">||</operator> <call pos:start="50:28" pos:end="50:67"><name pos:start="50:28" pos:end="50:44">path_has_protocol</name><argument_list pos:start="50:45" pos:end="50:67">(<argument pos:start="50:46" pos:end="50:66"><expr pos:start="50:46" pos:end="50:66"><name pos:start="50:46" pos:end="50:66"><name pos:start="50:46" pos:end="50:52">curr_bs</name><operator pos:start="50:53" pos:end="50:54">-&gt;</operator><name pos:start="50:55" pos:end="50:66">backing_file</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="50:70" pos:end="84:9">{<block_content pos:start="52:13" pos:end="82:13">

            <if_stmt pos:start="52:13" pos:end="58:13"><if pos:start="52:13" pos:end="58:13">if <condition pos:start="52:16" pos:end="52:65">(<expr pos:start="52:17" pos:end="52:64"><call pos:start="52:17" pos:end="52:59"><name pos:start="52:17" pos:end="52:22">strcmp</name><argument_list pos:start="52:23" pos:end="52:59">(<argument pos:start="52:24" pos:end="52:35"><expr pos:start="52:24" pos:end="52:35"><name pos:start="52:24" pos:end="52:35">backing_file</name></expr></argument>, <argument pos:start="52:38" pos:end="52:58"><expr pos:start="52:38" pos:end="52:58"><name pos:start="52:38" pos:end="52:58"><name pos:start="52:38" pos:end="52:44">curr_bs</name><operator pos:start="52:45" pos:end="52:46">-&gt;</operator><name pos:start="52:47" pos:end="52:58">backing_file</name></name></expr></argument>)</argument_list></call> <operator pos:start="52:61" pos:end="52:62">==</operator> <literal type="number" pos:start="52:64" pos:end="52:64">0</literal></expr>)</condition> <block pos:start="52:67" pos:end="58:13">{<block_content pos:start="54:17" pos:end="56:22">

                <expr_stmt pos:start="54:17" pos:end="54:46"><expr pos:start="54:17" pos:end="54:45"><name pos:start="54:17" pos:end="54:22">retval</name> <operator pos:start="54:24" pos:end="54:24">=</operator> <name pos:start="54:26" pos:end="54:45"><name pos:start="54:26" pos:end="54:32">curr_bs</name><operator pos:start="54:33" pos:end="54:34">-&gt;</operator><name pos:start="54:35" pos:end="54:41">backing</name><operator pos:start="54:42" pos:end="54:43">-&gt;</operator><name pos:start="54:44" pos:end="54:45">bs</name></name></expr>;</expr_stmt>

                <break pos:start="56:17" pos:end="56:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="60:13" pos:end="60:76">/* Also check against the full backing filename for the image */</comment>

            <expr_stmt pos:start="62:13" pos:end="64:57"><expr pos:start="62:13" pos:end="64:56"><call pos:start="62:13" pos:end="64:56"><name pos:start="62:13" pos:end="62:42">bdrv_get_full_backing_filename</name><argument_list pos:start="62:43" pos:end="64:56">(<argument pos:start="62:44" pos:end="62:50"><expr pos:start="62:44" pos:end="62:50"><name pos:start="62:44" pos:end="62:50">curr_bs</name></expr></argument>, <argument pos:start="62:53" pos:end="62:69"><expr pos:start="62:53" pos:end="62:69"><name pos:start="62:53" pos:end="62:69">backing_file_full</name></expr></argument>, <argument pos:start="62:72" pos:end="62:79"><expr pos:start="62:72" pos:end="62:79"><name pos:start="62:72" pos:end="62:79">PATH_MAX</name></expr></argument>,

                                           <argument pos:start="64:44" pos:end="64:55"><expr pos:start="64:44" pos:end="64:55"><operator pos:start="64:44" pos:end="64:44">&amp;</operator><name pos:start="64:45" pos:end="64:55">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="66:13" pos:end="82:13"><if pos:start="66:13" pos:end="76:13">if <condition pos:start="66:16" pos:end="66:36">(<expr pos:start="66:17" pos:end="66:35"><name pos:start="66:17" pos:end="66:27">local_error</name> <operator pos:start="66:29" pos:end="66:30">==</operator> <name pos:start="66:32" pos:end="66:35">NULL</name></expr>)</condition> <block pos:start="66:38" pos:end="76:13">{<block_content pos:start="68:17" pos:end="74:17">

                <if_stmt pos:start="68:17" pos:end="74:17"><if pos:start="68:17" pos:end="74:17">if <condition pos:start="68:20" pos:end="68:65">(<expr pos:start="68:21" pos:end="68:64"><call pos:start="68:21" pos:end="68:59"><name pos:start="68:21" pos:end="68:26">strcmp</name><argument_list pos:start="68:27" pos:end="68:59">(<argument pos:start="68:28" pos:end="68:39"><expr pos:start="68:28" pos:end="68:39"><name pos:start="68:28" pos:end="68:39">backing_file</name></expr></argument>, <argument pos:start="68:42" pos:end="68:58"><expr pos:start="68:42" pos:end="68:58"><name pos:start="68:42" pos:end="68:58">backing_file_full</name></expr></argument>)</argument_list></call> <operator pos:start="68:61" pos:end="68:62">==</operator> <literal type="number" pos:start="68:64" pos:end="68:64">0</literal></expr>)</condition> <block pos:start="68:67" pos:end="74:17">{<block_content pos:start="70:21" pos:end="72:26">

                    <expr_stmt pos:start="70:21" pos:end="70:50"><expr pos:start="70:21" pos:end="70:49"><name pos:start="70:21" pos:end="70:26">retval</name> <operator pos:start="70:28" pos:end="70:28">=</operator> <name pos:start="70:30" pos:end="70:49"><name pos:start="70:30" pos:end="70:36">curr_bs</name><operator pos:start="70:37" pos:end="70:38">-&gt;</operator><name pos:start="70:39" pos:end="70:45">backing</name><operator pos:start="70:46" pos:end="70:47">-&gt;</operator><name pos:start="70:48" pos:end="70:49">bs</name></name></expr>;</expr_stmt>

                    <break pos:start="72:21" pos:end="72:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="76:15" pos:end="82:13">else <block pos:start="76:20" pos:end="82:13">{<block_content pos:start="78:17" pos:end="80:35">

                <expr_stmt pos:start="78:17" pos:end="78:40"><expr pos:start="78:17" pos:end="78:39"><call pos:start="78:17" pos:end="78:39"><name pos:start="78:17" pos:end="78:26">error_free</name><argument_list pos:start="78:27" pos:end="78:39">(<argument pos:start="78:28" pos:end="78:38"><expr pos:start="78:28" pos:end="78:38"><name pos:start="78:28" pos:end="78:38">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="80:17" pos:end="80:35"><expr pos:start="80:17" pos:end="80:34"><name pos:start="80:17" pos:end="80:27">local_error</name> <operator pos:start="80:29" pos:end="80:29">=</operator> <name pos:start="80:31" pos:end="80:34">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="84:11" pos:end="132:9">else <block pos:start="84:16" pos:end="132:9">{<block_content pos:start="90:13" pos:end="130:13">

            <comment type="block" pos:start="86:13" pos:end="88:39">/* If not an absolute filename path, make it relative to the current

             * image's filename path */</comment>

            <expr_stmt pos:start="90:13" pos:end="92:39"><expr pos:start="90:13" pos:end="92:38"><call pos:start="90:13" pos:end="92:38"><name pos:start="90:13" pos:end="90:24">path_combine</name><argument_list pos:start="90:25" pos:end="92:38">(<argument pos:start="90:26" pos:end="90:37"><expr pos:start="90:26" pos:end="90:37"><name pos:start="90:26" pos:end="90:37">filename_tmp</name></expr></argument>, <argument pos:start="90:40" pos:end="90:47"><expr pos:start="90:40" pos:end="90:47"><name pos:start="90:40" pos:end="90:47">PATH_MAX</name></expr></argument>, <argument pos:start="90:50" pos:end="90:66"><expr pos:start="90:50" pos:end="90:66"><name pos:start="90:50" pos:end="90:66"><name pos:start="90:50" pos:end="90:56">curr_bs</name><operator pos:start="90:57" pos:end="90:58">-&gt;</operator><name pos:start="90:59" pos:end="90:66">filename</name></name></expr></argument>,

                         <argument pos:start="92:26" pos:end="92:37"><expr pos:start="92:26" pos:end="92:37"><name pos:start="92:26" pos:end="92:37">backing_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="96:13" pos:end="96:60">/* We are going to compare absolute pathnames */</comment>

            <if_stmt pos:start="98:13" pos:end="102:13"><if pos:start="98:13" pos:end="102:13">if <condition pos:start="98:16" pos:end="98:55">(<expr pos:start="98:17" pos:end="98:54"><operator pos:start="98:17" pos:end="98:17">!</operator><call pos:start="98:18" pos:end="98:54"><name pos:start="98:18" pos:end="98:25">realpath</name><argument_list pos:start="98:26" pos:end="98:54">(<argument pos:start="98:27" pos:end="98:38"><expr pos:start="98:27" pos:end="98:38"><name pos:start="98:27" pos:end="98:38">filename_tmp</name></expr></argument>, <argument pos:start="98:41" pos:end="98:53"><expr pos:start="98:41" pos:end="98:53"><name pos:start="98:41" pos:end="98:53">filename_full</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="98:57" pos:end="102:13">{<block_content pos:start="100:17" pos:end="100:25">

                <continue pos:start="100:17" pos:end="100:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="106:13" pos:end="108:73">/* We need to make sure the backing filename we are comparing against

             * is relative to the current image filename (or absolute) */</comment>

            <expr_stmt pos:start="110:13" pos:end="112:48"><expr pos:start="110:13" pos:end="112:47"><call pos:start="110:13" pos:end="112:47"><name pos:start="110:13" pos:end="110:24">path_combine</name><argument_list pos:start="110:25" pos:end="112:47">(<argument pos:start="110:26" pos:end="110:37"><expr pos:start="110:26" pos:end="110:37"><name pos:start="110:26" pos:end="110:37">filename_tmp</name></expr></argument>, <argument pos:start="110:40" pos:end="110:47"><expr pos:start="110:40" pos:end="110:47"><name pos:start="110:40" pos:end="110:47">PATH_MAX</name></expr></argument>, <argument pos:start="110:50" pos:end="110:66"><expr pos:start="110:50" pos:end="110:66"><name pos:start="110:50" pos:end="110:66"><name pos:start="110:50" pos:end="110:56">curr_bs</name><operator pos:start="110:57" pos:end="110:58">-&gt;</operator><name pos:start="110:59" pos:end="110:66">filename</name></name></expr></argument>,

                         <argument pos:start="112:26" pos:end="112:46"><expr pos:start="112:26" pos:end="112:46"><name pos:start="112:26" pos:end="112:46"><name pos:start="112:26" pos:end="112:32">curr_bs</name><operator pos:start="112:33" pos:end="112:34">-&gt;</operator><name pos:start="112:35" pos:end="112:46">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="116:13" pos:end="120:13"><if pos:start="116:13" pos:end="120:13">if <condition pos:start="116:16" pos:end="116:59">(<expr pos:start="116:17" pos:end="116:58"><operator pos:start="116:17" pos:end="116:17">!</operator><call pos:start="116:18" pos:end="116:58"><name pos:start="116:18" pos:end="116:25">realpath</name><argument_list pos:start="116:26" pos:end="116:58">(<argument pos:start="116:27" pos:end="116:38"><expr pos:start="116:27" pos:end="116:38"><name pos:start="116:27" pos:end="116:38">filename_tmp</name></expr></argument>, <argument pos:start="116:41" pos:end="116:57"><expr pos:start="116:41" pos:end="116:57"><name pos:start="116:41" pos:end="116:57">backing_file_full</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="116:61" pos:end="120:13">{<block_content pos:start="118:17" pos:end="118:25">

                <continue pos:start="118:17" pos:end="118:25">continue;</continue>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="124:13" pos:end="130:13"><if pos:start="124:13" pos:end="130:13">if <condition pos:start="124:16" pos:end="124:62">(<expr pos:start="124:17" pos:end="124:61"><call pos:start="124:17" pos:end="124:56"><name pos:start="124:17" pos:end="124:22">strcmp</name><argument_list pos:start="124:23" pos:end="124:56">(<argument pos:start="124:24" pos:end="124:40"><expr pos:start="124:24" pos:end="124:40"><name pos:start="124:24" pos:end="124:40">backing_file_full</name></expr></argument>, <argument pos:start="124:43" pos:end="124:55"><expr pos:start="124:43" pos:end="124:55"><name pos:start="124:43" pos:end="124:55">filename_full</name></expr></argument>)</argument_list></call> <operator pos:start="124:58" pos:end="124:59">==</operator> <literal type="number" pos:start="124:61" pos:end="124:61">0</literal></expr>)</condition> <block pos:start="124:64" pos:end="130:13">{<block_content pos:start="126:17" pos:end="128:22">

                <expr_stmt pos:start="126:17" pos:end="126:46"><expr pos:start="126:17" pos:end="126:45"><name pos:start="126:17" pos:end="126:22">retval</name> <operator pos:start="126:24" pos:end="126:24">=</operator> <name pos:start="126:26" pos:end="126:45"><name pos:start="126:26" pos:end="126:32">curr_bs</name><operator pos:start="126:33" pos:end="126:34">-&gt;</operator><name pos:start="126:35" pos:end="126:41">backing</name><operator pos:start="126:42" pos:end="126:43">-&gt;</operator><name pos:start="126:44" pos:end="126:45">bs</name></name></expr>;</expr_stmt>

                <break pos:start="128:17" pos:end="128:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="138:5" pos:end="138:26"><expr pos:start="138:5" pos:end="138:25"><call pos:start="138:5" pos:end="138:25"><name pos:start="138:5" pos:end="138:10">g_free</name><argument_list pos:start="138:11" pos:end="138:25">(<argument pos:start="138:12" pos:end="138:24"><expr pos:start="138:12" pos:end="138:24"><name pos:start="138:12" pos:end="138:24">filename_full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="140:5" pos:end="140:30"><expr pos:start="140:5" pos:end="140:29"><call pos:start="140:5" pos:end="140:29"><name pos:start="140:5" pos:end="140:10">g_free</name><argument_list pos:start="140:11" pos:end="140:29">(<argument pos:start="140:12" pos:end="140:28"><expr pos:start="140:12" pos:end="140:28"><name pos:start="140:12" pos:end="140:28">backing_file_full</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="142:5" pos:end="142:25"><expr pos:start="142:5" pos:end="142:24"><call pos:start="142:5" pos:end="142:24"><name pos:start="142:5" pos:end="142:10">g_free</name><argument_list pos:start="142:11" pos:end="142:24">(<argument pos:start="142:12" pos:end="142:23"><expr pos:start="142:12" pos:end="142:23"><name pos:start="142:12" pos:end="142:23">filename_tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="144:5" pos:end="144:18">return <expr pos:start="144:12" pos:end="144:17"><name pos:start="144:12" pos:end="144:17">retval</name></expr>;</return>

</block_content>}</block></function></unit>
