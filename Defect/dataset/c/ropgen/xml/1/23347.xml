<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23347.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">usb_bt_handle_control</name><parameter_list pos:start="1:33" pos:end="3:76">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">USBDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>,

               <parameter pos:start="3:16" pos:end="3:26"><decl pos:start="3:16" pos:end="3:26"><type pos:start="3:16" pos:end="3:26"><name pos:start="3:16" pos:end="3:18">int</name></type> <name pos:start="3:20" pos:end="3:26">request</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:37"><decl pos:start="3:29" pos:end="3:37"><type pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:37">value</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:48"><decl pos:start="3:40" pos:end="3:48"><type pos:start="3:40" pos:end="3:48"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:48">index</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:60"><decl pos:start="3:51" pos:end="3:60"><type pos:start="3:51" pos:end="3:60"><name pos:start="3:51" pos:end="3:53">int</name></type> <name pos:start="3:55" pos:end="3:60">length</name></decl></parameter>, <parameter pos:start="3:63" pos:end="3:75"><decl pos:start="3:63" pos:end="3:75"><type pos:start="3:63" pos:end="3:75"><name pos:start="3:63" pos:end="3:69">uint8_t</name> <modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:75">data</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="137:1">{<block_content pos:start="7:5" pos:end="135:15">

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:60"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">USBBtState</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:60">= <expr pos:start="7:28" pos:end="7:60"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">USBBtState</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:60"><name pos:start="7:50" pos:end="7:52">dev</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:60">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:79"><expr pos:start="13:5" pos:end="13:78"><name pos:start="13:5" pos:end="13:7">ret</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:78"><name pos:start="13:11" pos:end="13:33">usb_desc_handle_control</name><argument_list pos:start="13:34" pos:end="13:78">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">dev</name></expr></argument>, <argument pos:start="13:40" pos:end="13:40"><expr pos:start="13:40" pos:end="13:40"><name pos:start="13:40" pos:end="13:40">p</name></expr></argument>, <argument pos:start="13:43" pos:end="13:49"><expr pos:start="13:43" pos:end="13:49"><name pos:start="13:43" pos:end="13:49">request</name></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">value</name></expr></argument>, <argument pos:start="13:59" pos:end="13:63"><expr pos:start="13:59" pos:end="13:63"><name pos:start="13:59" pos:end="13:63">index</name></expr></argument>, <argument pos:start="13:66" pos:end="13:71"><expr pos:start="13:66" pos:end="13:71"><name pos:start="13:66" pos:end="13:71">length</name></expr></argument>, <argument pos:start="13:74" pos:end="13:77"><expr pos:start="13:74" pos:end="13:77"><name pos:start="13:74" pos:end="13:77">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="41:5"><if pos:start="15:5" pos:end="41:5">if <condition pos:start="15:8" pos:end="15:17">(<expr pos:start="15:9" pos:end="15:16"><name pos:start="15:9" pos:end="15:11">ret</name> <operator pos:start="15:13" pos:end="15:14">&gt;=</operator> <literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>)</condition> <block pos:start="15:19" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:19">

        <switch pos:start="17:9" pos:end="37:9">switch <condition pos:start="17:16" pos:end="17:24">(<expr pos:start="17:17" pos:end="17:23"><name pos:start="17:17" pos:end="17:23">request</name></expr>)</condition> <block pos:start="17:26" pos:end="37:9">{<block_content pos:start="19:9" pos:end="35:18">

        <case pos:start="19:9" pos:end="19:55">case <expr pos:start="19:14" pos:end="19:54"><name pos:start="19:14" pos:end="19:26">DeviceRequest</name> <operator pos:start="19:28" pos:end="19:28">|</operator> <name pos:start="19:30" pos:end="19:54">USB_REQ_GET_CONFIGURATION</name></expr>:</case>

            <expr_stmt pos:start="21:13" pos:end="21:26"><expr pos:start="21:13" pos:end="21:25"><name pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:21">config</name></name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">0</literal></expr>;</expr_stmt>

            <break pos:start="23:13" pos:end="23:18">break;</break>

        <case pos:start="25:9" pos:end="25:58">case <expr pos:start="25:14" pos:end="25:57"><name pos:start="25:14" pos:end="25:29">DeviceOutRequest</name> <operator pos:start="25:31" pos:end="25:31">|</operator> <name pos:start="25:33" pos:end="25:57">USB_REQ_SET_CONFIGURATION</name></expr>:</case>

            <expr_stmt pos:start="27:13" pos:end="27:26"><expr pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:21"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:21">config</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:39"><expr pos:start="29:13" pos:end="29:38"><call pos:start="29:13" pos:end="29:38"><name pos:start="29:13" pos:end="29:29">usb_bt_fifo_reset</name><argument_list pos:start="29:30" pos:end="29:38">(<argument pos:start="29:31" pos:end="29:37"><expr pos:start="29:31" pos:end="29:37"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:32">s</name><operator pos:start="29:33" pos:end="29:34">-&gt;</operator><name pos:start="29:35" pos:end="29:37">evt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:39"><expr pos:start="31:13" pos:end="31:38"><call pos:start="31:13" pos:end="31:38"><name pos:start="31:13" pos:end="31:29">usb_bt_fifo_reset</name><argument_list pos:start="31:30" pos:end="31:38">(<argument pos:start="31:31" pos:end="31:37"><expr pos:start="31:31" pos:end="31:37"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:37"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:37">acl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:39"><expr pos:start="33:13" pos:end="33:38"><call pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:29">usb_bt_fifo_reset</name><argument_list pos:start="33:30" pos:end="33:38">(<argument pos:start="33:31" pos:end="33:37"><expr pos:start="33:31" pos:end="33:37"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:37"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:37">sco</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></switch>

        <return pos:start="39:9" pos:end="39:19">return <expr pos:start="39:16" pos:end="39:18"><name pos:start="39:16" pos:end="39:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:12"><expr pos:start="45:5" pos:end="45:11"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <literal type="number" pos:start="45:11" pos:end="45:11">0</literal></expr>;</expr_stmt>

    <switch pos:start="47:5" pos:end="133:5">switch <condition pos:start="47:12" pos:end="47:20">(<expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:19">request</name></expr>)</condition> <block pos:start="47:22" pos:end="133:5">{<block_content pos:start="49:5" pos:end="131:14">

    <case pos:start="49:5" pos:end="49:47">case <expr pos:start="49:10" pos:end="49:46"><name pos:start="49:10" pos:end="49:25">InterfaceRequest</name> <operator pos:start="49:27" pos:end="49:27">|</operator> <name pos:start="49:29" pos:end="49:46">USB_REQ_GET_STATUS</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:46">case <expr pos:start="51:10" pos:end="51:45"><name pos:start="51:10" pos:end="51:24">EndpointRequest</name> <operator pos:start="51:26" pos:end="51:26">|</operator> <name pos:start="51:28" pos:end="51:45">USB_REQ_GET_STATUS</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:23"><expr pos:start="53:9" pos:end="53:22"><name pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:12">data</name><index pos:start="53:13" pos:end="53:15">[<expr pos:start="53:14" pos:end="53:14"><literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>]</index></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <literal type="number" pos:start="53:19" pos:end="53:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:23"><expr pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">data</name><index pos:start="55:13" pos:end="55:15">[<expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">1</literal></expr>]</index></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <literal type="number" pos:start="55:19" pos:end="55:22">0x00</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:16"><expr pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <literal type="number" pos:start="57:15" pos:end="57:15">2</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:53">case <expr pos:start="61:10" pos:end="61:52"><name pos:start="61:10" pos:end="61:28">InterfaceOutRequest</name> <operator pos:start="61:30" pos:end="61:30">|</operator> <name pos:start="61:32" pos:end="61:52">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

    <case pos:start="63:5" pos:end="63:52">case <expr pos:start="63:10" pos:end="63:51"><name pos:start="63:10" pos:end="63:27">EndpointOutRequest</name> <operator pos:start="63:29" pos:end="63:29">|</operator> <name pos:start="63:31" pos:end="63:51">USB_REQ_CLEAR_FEATURE</name></expr>:</case>

        <goto pos:start="65:9" pos:end="65:18">goto <name pos:start="65:14" pos:end="65:17">fail</name>;</goto>

    <case pos:start="67:5" pos:end="67:51">case <expr pos:start="67:10" pos:end="67:50"><name pos:start="67:10" pos:end="67:28">InterfaceOutRequest</name> <operator pos:start="67:30" pos:end="67:30">|</operator> <name pos:start="67:32" pos:end="67:50">USB_REQ_SET_FEATURE</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:50">case <expr pos:start="69:10" pos:end="69:49"><name pos:start="69:10" pos:end="69:27">EndpointOutRequest</name> <operator pos:start="69:29" pos:end="69:29">|</operator> <name pos:start="69:31" pos:end="69:49">USB_REQ_SET_FEATURE</name></expr>:</case>

        <goto pos:start="71:9" pos:end="71:18">goto <name pos:start="71:14" pos:end="71:17">fail</name>;</goto>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:50">case <expr pos:start="75:10" pos:end="75:49"><name pos:start="75:10" pos:end="75:25">InterfaceRequest</name> <operator pos:start="75:27" pos:end="75:27">|</operator> <name pos:start="75:29" pos:end="75:49">USB_REQ_GET_INTERFACE</name></expr>:</case>

        <if_stmt pos:start="77:9" pos:end="79:22"><if pos:start="77:9" pos:end="79:22">if <condition pos:start="77:12" pos:end="77:54">(<expr pos:start="77:13" pos:end="77:53"><name pos:start="77:13" pos:end="77:17">value</name> <operator pos:start="77:19" pos:end="77:20">!=</operator> <literal type="number" pos:start="77:22" pos:end="77:22">0</literal> <operator pos:start="77:24" pos:end="77:25">||</operator> <operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:32">index</name> <operator pos:start="77:34" pos:end="77:34">&amp;</operator> <operator pos:start="77:36" pos:end="77:36">~</operator><literal type="number" pos:start="77:37" pos:end="77:37">1</literal><operator pos:start="77:38" pos:end="77:38">)</operator> <operator pos:start="77:40" pos:end="77:41">||</operator> <name pos:start="77:43" pos:end="77:48">length</name> <operator pos:start="77:50" pos:end="77:51">!=</operator> <literal type="number" pos:start="77:53" pos:end="77:53">1</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <goto pos:start="79:13" pos:end="79:22">goto <name pos:start="79:18" pos:end="79:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="81:9" pos:end="87:24"><if pos:start="81:9" pos:end="83:36">if <condition pos:start="81:12" pos:end="81:23">(<expr pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:17">index</name> <operator pos:start="81:19" pos:end="81:20">==</operator> <literal type="number" pos:start="81:22" pos:end="81:22">1</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:36"><block_content pos:start="83:13" pos:end="83:36">

            <expr_stmt pos:start="83:13" pos:end="83:36"><expr pos:start="83:13" pos:end="83:35"><name pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:16">data</name><index pos:start="83:17" pos:end="83:19">[<expr pos:start="83:18" pos:end="83:18"><literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>]</index></name> <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:35"><name pos:start="83:23" pos:end="83:23">s</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:35">altsetting</name></name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="85:9" pos:end="87:24">else<block type="pseudo" pos:start="87:13" pos:end="87:24"><block_content pos:start="87:13" pos:end="87:24">

            <expr_stmt pos:start="87:13" pos:end="87:24"><expr pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:16">data</name><index pos:start="87:17" pos:end="87:19">[<expr pos:start="87:18" pos:end="87:18"><literal type="number" pos:start="87:18" pos:end="87:18">0</literal></expr>]</index></name> <operator pos:start="87:21" pos:end="87:21">=</operator> <literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:16"><expr pos:start="89:9" pos:end="89:15"><name pos:start="89:9" pos:end="89:11">ret</name> <operator pos:start="89:13" pos:end="89:13">=</operator> <literal type="number" pos:start="89:15" pos:end="89:15">1</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:53">case <expr pos:start="93:10" pos:end="93:52"><name pos:start="93:10" pos:end="93:28">InterfaceOutRequest</name> <operator pos:start="93:30" pos:end="93:30">|</operator> <name pos:start="93:32" pos:end="93:52">USB_REQ_SET_INTERFACE</name></expr>:</case>

        <if_stmt pos:start="95:9" pos:end="107:9"><if pos:start="95:9" pos:end="107:9">if <condition pos:start="95:12" pos:end="99:51">(<expr pos:start="95:13" pos:end="99:50"><operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:18">index</name> <operator pos:start="95:20" pos:end="95:20">&amp;</operator> <operator pos:start="95:22" pos:end="95:22">~</operator><literal type="number" pos:start="95:23" pos:end="95:23">1</literal><operator pos:start="95:24" pos:end="95:24">)</operator> <operator pos:start="95:26" pos:end="95:27">||</operator> <name pos:start="95:29" pos:end="95:34">length</name> <operator pos:start="95:36" pos:end="95:37">!=</operator> <literal type="number" pos:start="95:39" pos:end="95:39">0</literal> <operator pos:start="95:41" pos:end="95:42">||</operator>

                        <operator pos:start="97:25" pos:end="97:25">(</operator><name pos:start="97:26" pos:end="97:30">index</name> <operator pos:start="97:32" pos:end="97:33">==</operator> <literal type="number" pos:start="97:35" pos:end="97:35">1</literal> <operator pos:start="97:37" pos:end="97:38">&amp;&amp;</operator> <operator pos:start="97:40" pos:end="97:40">(</operator><name pos:start="97:41" pos:end="97:60"><name pos:start="97:41" pos:end="97:45">value</name> <argument_list type="generic" pos:start="97:47" pos:end="97:60">&lt; <argument pos:start="97:49" pos:end="97:58"><expr pos:start="97:49" pos:end="97:58"><literal type="number" pos:start="97:49" pos:end="97:49">0</literal> <operator pos:start="97:51" pos:end="97:52">||</operator> <name pos:start="97:54" pos:end="97:58">value</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="97:62" pos:end="97:62">4</literal><operator pos:start="97:63" pos:end="97:63">)</operator><operator pos:start="97:64" pos:end="97:64">)</operator> <operator pos:start="97:66" pos:end="97:67">||</operator>

                        <operator pos:start="99:25" pos:end="99:25">(</operator><name pos:start="99:26" pos:end="99:30">index</name> <operator pos:start="99:32" pos:end="99:33">==</operator> <literal type="number" pos:start="99:35" pos:end="99:35">0</literal> <operator pos:start="99:37" pos:end="99:38">&amp;&amp;</operator> <name pos:start="99:40" pos:end="99:44">value</name> <operator pos:start="99:46" pos:end="99:47">!=</operator> <literal type="number" pos:start="99:49" pos:end="99:49">0</literal><operator pos:start="99:50" pos:end="99:50">)</operator></expr>)</condition> <block pos:start="99:53" pos:end="107:9">{<block_content pos:start="101:13" pos:end="105:22">

            <expr_stmt pos:start="101:13" pos:end="103:56"><expr pos:start="101:13" pos:end="103:55"><call pos:start="101:13" pos:end="103:55"><name pos:start="101:13" pos:end="101:18">printf</name><argument_list pos:start="101:19" pos:end="103:55">(<argument pos:start="101:20" pos:end="101:63"><expr pos:start="101:20" pos:end="101:63"><literal type="string" pos:start="101:20" pos:end="101:63">"%s: Wrong SET_INTERFACE request (%i, %i)\n"</literal></expr></argument>,

                            <argument pos:start="103:29" pos:end="103:40"><expr pos:start="103:29" pos:end="103:40"><name pos:start="103:29" pos:end="103:40">__FUNCTION__</name></expr></argument>, <argument pos:start="103:43" pos:end="103:47"><expr pos:start="103:43" pos:end="103:47"><name pos:start="103:43" pos:end="103:47">index</name></expr></argument>, <argument pos:start="103:50" pos:end="103:54"><expr pos:start="103:50" pos:end="103:54"><name pos:start="103:50" pos:end="103:54">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="105:13" pos:end="105:22">goto <name pos:start="105:18" pos:end="105:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:21">altsetting</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <name pos:start="109:25" pos:end="109:29">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:16"><expr pos:start="111:9" pos:end="111:15"><name pos:start="111:9" pos:end="111:11">ret</name> <operator pos:start="111:13" pos:end="111:13">=</operator> <literal type="number" pos:start="111:15" pos:end="111:15">0</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:66">case <expr pos:start="115:10" pos:end="115:65"><operator pos:start="115:10" pos:end="115:10">(</operator><operator pos:start="115:11" pos:end="115:11">(</operator><name pos:start="115:12" pos:end="115:22">USB_DIR_OUT</name> <operator pos:start="115:24" pos:end="115:24">|</operator> <name pos:start="115:26" pos:end="115:39">USB_TYPE_CLASS</name> <operator pos:start="115:41" pos:end="115:41">|</operator> <name pos:start="115:43" pos:end="115:58">USB_RECIP_DEVICE</name><operator pos:start="115:59" pos:end="115:59">)</operator> <operator pos:start="115:61" pos:end="115:62">&lt;&lt;</operator> <literal type="number" pos:start="115:64" pos:end="115:64">8</literal><operator pos:start="115:65" pos:end="115:65">)</operator></expr>:</case>

        <if_stmt pos:start="117:9" pos:end="121:67"><if pos:start="117:9" pos:end="121:67">if <condition pos:start="117:12" pos:end="117:22">(<expr pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:21">config</name></name></expr>)</condition><block type="pseudo" pos:start="119:13" pos:end="121:67"><block_content pos:start="119:13" pos:end="121:67">

            <expr_stmt pos:start="119:13" pos:end="121:67"><expr pos:start="119:13" pos:end="121:66"><call pos:start="119:13" pos:end="121:66"><name pos:start="119:13" pos:end="119:35">usb_bt_fifo_out_enqueue</name><argument_list pos:start="119:36" pos:end="121:66">(<argument pos:start="119:37" pos:end="119:37"><expr pos:start="119:37" pos:end="119:37"><name pos:start="119:37" pos:end="119:37">s</name></expr></argument>, <argument pos:start="119:40" pos:end="119:49"><expr pos:start="119:40" pos:end="119:49"><operator pos:start="119:40" pos:end="119:40">&amp;</operator><name pos:start="119:41" pos:end="119:49"><name pos:start="119:41" pos:end="119:41">s</name><operator pos:start="119:42" pos:end="119:43">-&gt;</operator><name pos:start="119:44" pos:end="119:49">outcmd</name></name></expr></argument>, <argument pos:start="119:52" pos:end="119:67"><expr pos:start="119:52" pos:end="119:67"><name pos:start="119:52" pos:end="119:67"><name pos:start="119:52" pos:end="119:52">s</name><operator pos:start="119:53" pos:end="119:54">-&gt;</operator><name pos:start="119:55" pos:end="119:57">hci</name><operator pos:start="119:58" pos:end="119:59">-&gt;</operator><name pos:start="119:60" pos:end="119:67">cmd_send</name></name></expr></argument>,

                            <argument pos:start="121:29" pos:end="121:51"><expr pos:start="121:29" pos:end="121:51"><name pos:start="121:29" pos:end="121:51">usb_bt_hci_cmd_complete</name></expr></argument>, <argument pos:start="121:54" pos:end="121:57"><expr pos:start="121:54" pos:end="121:57"><name pos:start="121:54" pos:end="121:57">data</name></expr></argument>, <argument pos:start="121:60" pos:end="121:65"><expr pos:start="121:60" pos:end="121:65"><name pos:start="121:60" pos:end="121:65">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <default pos:start="125:5" pos:end="125:12">default:</default>

    <label pos:start="127:5" pos:end="127:9"><name pos:start="127:5" pos:end="127:8">fail</name>:</label>

        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <name pos:start="129:15" pos:end="129:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="135:5" pos:end="135:15">return <expr pos:start="135:12" pos:end="135:14"><name pos:start="135:12" pos:end="135:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
