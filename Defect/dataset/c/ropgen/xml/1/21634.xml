<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21634.c" pos:tabs="8"><function pos:start="1:1" pos:end="243:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">xhci_process_commands</name><parameter_list pos:start="1:34" pos:end="1:50">(<parameter pos:start="1:35" pos:end="1:49"><decl pos:start="1:35" pos:end="1:49"><type pos:start="1:35" pos:end="1:45"><name pos:start="1:35" pos:end="1:43">XHCIState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:49">xhci</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="243:1">{<block_content pos:start="5:5" pos:end="241:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">XHCITRB</name></type> <name pos:start="5:13" pos:end="5:15">trb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">TRBType</name></type> <name pos:start="7:13" pos:end="7:16">type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">XHCIEvent</name></type> <name pos:start="9:15" pos:end="9:19">event</name> <init pos:start="9:21" pos:end="9:55">= <expr pos:start="9:23" pos:end="9:55"><block pos:start="9:23" pos:end="9:55">{<expr pos:start="9:24" pos:end="9:42"><name pos:start="9:24" pos:end="9:42">ER_COMMAND_COMPLETE</name></expr>, <expr pos:start="9:45" pos:end="9:54"><name pos:start="9:45" pos:end="9:54">CC_SUCCESS</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">dma_addr_t</name></type> <name pos:start="11:16" pos:end="11:19">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">i</name></decl>, <decl pos:start="13:21" pos:end="13:30"><type ref="prev" pos:start="13:5" pos:end="13:16"/><name pos:start="13:21" pos:end="13:26">slotid</name> <init pos:start="13:28" pos:end="13:30">= <expr pos:start="13:30" pos:end="13:30"><literal type="number" pos:start="13:30" pos:end="13:30">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:41"><expr pos:start="17:5" pos:end="17:40"><call pos:start="17:5" pos:end="17:40"><name pos:start="17:5" pos:end="17:11">DPRINTF</name><argument_list pos:start="17:12" pos:end="17:40">(<argument pos:start="17:13" pos:end="17:39"><expr pos:start="17:13" pos:end="17:39"><literal type="string" pos:start="17:13" pos:end="17:39">"xhci_process_commands()\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:28">(<expr pos:start="19:9" pos:end="19:27"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:27"><name pos:start="19:10" pos:end="19:21">xhci_running</name><argument_list pos:start="19:22" pos:end="19:27">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">xhci</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:30" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:15">

        <expr_stmt pos:start="21:9" pos:end="21:80"><expr pos:start="21:9" pos:end="21:79"><call pos:start="21:9" pos:end="21:79"><name pos:start="21:9" pos:end="21:15">DPRINTF</name><argument_list pos:start="21:16" pos:end="21:79">(<argument pos:start="21:17" pos:end="21:78"><expr pos:start="21:17" pos:end="21:78"><literal type="string" pos:start="21:17" pos:end="21:78">"xhci_process_commands() called while xHC stopped or paused\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:31"><expr pos:start="29:5" pos:end="29:30"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:8">xhci</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:18">crcr_low</name></name> <operator pos:start="29:20" pos:end="29:21">|=</operator> <name pos:start="29:23" pos:end="29:30">CRCR_CRR</name></expr>;</expr_stmt>



    <while pos:start="33:5" pos:end="241:5">while <condition pos:start="33:11" pos:end="33:72">(<expr pos:start="33:12" pos:end="33:71"><operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:16">type</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <call pos:start="33:20" pos:end="33:70"><name pos:start="33:20" pos:end="33:34">xhci_ring_fetch</name><argument_list pos:start="33:35" pos:end="33:70">(<argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><name pos:start="33:36" pos:end="33:39">xhci</name></expr></argument>, <argument pos:start="33:42" pos:end="33:56"><expr pos:start="33:42" pos:end="33:56"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:56"><name pos:start="33:43" pos:end="33:46">xhci</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:56">cmd_ring</name></name></expr></argument>, <argument pos:start="33:59" pos:end="33:62"><expr pos:start="33:59" pos:end="33:62"><operator pos:start="33:59" pos:end="33:59">&amp;</operator><name pos:start="33:60" pos:end="33:62">trb</name></expr></argument>, <argument pos:start="33:65" pos:end="33:69"><expr pos:start="33:65" pos:end="33:69"><operator pos:start="33:65" pos:end="33:65">&amp;</operator><name pos:start="33:66" pos:end="33:69">addr</name></expr></argument>)</argument_list></call><operator pos:start="33:71" pos:end="33:71">)</operator></expr>)</condition> <block pos:start="33:74" pos:end="241:5">{<block_content pos:start="35:9" pos:end="239:36">

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:13">event</name><operator pos:start="35:14" pos:end="35:14">.</operator><name pos:start="35:15" pos:end="35:17">ptr</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:24">addr</name></expr>;</expr_stmt>

        <switch pos:start="37:9" pos:end="235:9">switch <condition pos:start="37:16" pos:end="37:21">(<expr pos:start="37:17" pos:end="37:20"><name pos:start="37:17" pos:end="37:20">type</name></expr>)</condition> <block pos:start="37:23" pos:end="235:9">{<block_content pos:start="39:9" pos:end="233:18">

        <case pos:start="39:9" pos:end="39:28">case <expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:27">CR_ENABLE_SLOT</name></expr>:</case>

            <for pos:start="41:13" pos:end="49:13">for <control pos:start="41:17" pos:end="41:48">(<init pos:start="41:18" pos:end="41:23"><expr pos:start="41:18" pos:end="41:22"><name pos:start="41:18" pos:end="41:18">i</name> <operator pos:start="41:20" pos:end="41:20">=</operator> <literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>;</init> <condition pos:start="41:25" pos:end="41:43"><expr pos:start="41:25" pos:end="41:42"><name pos:start="41:25" pos:end="41:25">i</name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <name pos:start="41:29" pos:end="41:42"><name pos:start="41:29" pos:end="41:32">xhci</name><operator pos:start="41:33" pos:end="41:34">-&gt;</operator><name pos:start="41:35" pos:end="41:42">numslots</name></name></expr>;</condition> <incr pos:start="41:45" pos:end="41:47"><expr pos:start="41:45" pos:end="41:47"><name pos:start="41:45" pos:end="41:45">i</name><operator pos:start="41:46" pos:end="41:47">++</operator></expr></incr>)</control> <block pos:start="41:50" pos:end="49:13">{<block_content pos:start="43:17" pos:end="47:17">

                <if_stmt pos:start="43:17" pos:end="47:17"><if pos:start="43:17" pos:end="47:17">if <condition pos:start="43:20" pos:end="43:44">(<expr pos:start="43:21" pos:end="43:43"><operator pos:start="43:21" pos:end="43:21">!</operator><name pos:start="43:22" pos:end="43:35"><name pos:start="43:22" pos:end="43:25">xhci</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:32">slots</name><index pos:start="43:33" pos:end="43:35">[<expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">i</name></expr>]</index></name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:43">enabled</name></expr>)</condition> <block pos:start="43:46" pos:end="47:17">{<block_content pos:start="45:21" pos:end="45:26">

                    <break pos:start="45:21" pos:end="45:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="51:13" pos:end="63:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:36">(<expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:20">&gt;=</operator> <name pos:start="51:22" pos:end="51:35"><name pos:start="51:22" pos:end="51:25">xhci</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:35">numslots</name></name></expr>)</condition> <block pos:start="51:38" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:48">

                <expr_stmt pos:start="53:17" pos:end="53:61"><expr pos:start="53:17" pos:end="53:60"><call pos:start="53:17" pos:end="53:60"><name pos:start="53:17" pos:end="53:23">DPRINTF</name><argument_list pos:start="53:24" pos:end="53:60">(<argument pos:start="53:25" pos:end="53:59"><expr pos:start="53:25" pos:end="53:59"><literal type="string" pos:start="53:25" pos:end="53:59">"xhci: no device slots available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:48"><expr pos:start="55:17" pos:end="55:47"><name pos:start="55:17" pos:end="55:27"><name pos:start="55:17" pos:end="55:21">event</name><operator pos:start="55:22" pos:end="55:22">.</operator><name pos:start="55:23" pos:end="55:27">ccode</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:47">CC_NO_SLOTS_ERROR</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="57:15" pos:end="63:13">else <block pos:start="57:20" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:61">

                <expr_stmt pos:start="59:17" pos:end="59:29"><expr pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:22">slotid</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:26">i</name><operator pos:start="59:27" pos:end="59:27">+</operator><literal type="number" pos:start="59:28" pos:end="59:28">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:61"><expr pos:start="61:17" pos:end="61:60"><name pos:start="61:17" pos:end="61:27"><name pos:start="61:17" pos:end="61:21">event</name><operator pos:start="61:22" pos:end="61:22">.</operator><name pos:start="61:23" pos:end="61:27">ccode</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:60"><name pos:start="61:31" pos:end="61:46">xhci_enable_slot</name><argument_list pos:start="61:47" pos:end="61:60">(<argument pos:start="61:48" pos:end="61:51"><expr pos:start="61:48" pos:end="61:51"><name pos:start="61:48" pos:end="61:51">xhci</name></expr></argument>, <argument pos:start="61:54" pos:end="61:59"><expr pos:start="61:54" pos:end="61:59"><name pos:start="61:54" pos:end="61:59">slotid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="65:13" pos:end="65:18">break;</break>

        <case pos:start="67:9" pos:end="67:29">case <expr pos:start="67:14" pos:end="67:28"><name pos:start="67:14" pos:end="67:28">CR_DISABLE_SLOT</name></expr>:</case>

            <expr_stmt pos:start="69:13" pos:end="69:55"><expr pos:start="69:13" pos:end="69:54"><name pos:start="69:13" pos:end="69:18">slotid</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:54"><name pos:start="69:22" pos:end="69:34">xhci_get_slot</name><argument_list pos:start="69:35" pos:end="69:54">(<argument pos:start="69:36" pos:end="69:39"><expr pos:start="69:36" pos:end="69:39"><name pos:start="69:36" pos:end="69:39">xhci</name></expr></argument>, <argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><operator pos:start="69:42" pos:end="69:42">&amp;</operator><name pos:start="69:43" pos:end="69:47">event</name></expr></argument>, <argument pos:start="69:50" pos:end="69:53"><expr pos:start="69:50" pos:end="69:53"><operator pos:start="69:50" pos:end="69:50">&amp;</operator><name pos:start="69:51" pos:end="69:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="75:13"><if pos:start="71:13" pos:end="75:13">if <condition pos:start="71:16" pos:end="71:23">(<expr pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:22">slotid</name></expr>)</condition> <block pos:start="71:25" pos:end="75:13">{<block_content pos:start="73:17" pos:end="73:62">

                <expr_stmt pos:start="73:17" pos:end="73:62"><expr pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:21">event</name><operator pos:start="73:22" pos:end="73:22">.</operator><name pos:start="73:23" pos:end="73:27">ccode</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <call pos:start="73:31" pos:end="73:61"><name pos:start="73:31" pos:end="73:47">xhci_disable_slot</name><argument_list pos:start="73:48" pos:end="73:61">(<argument pos:start="73:49" pos:end="73:52"><expr pos:start="73:49" pos:end="73:52"><name pos:start="73:49" pos:end="73:52">xhci</name></expr></argument>, <argument pos:start="73:55" pos:end="73:60"><expr pos:start="73:55" pos:end="73:60"><name pos:start="73:55" pos:end="73:60">slotid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:31">case <expr pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:30">CR_ADDRESS_DEVICE</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:55"><expr pos:start="81:13" pos:end="81:54"><name pos:start="81:13" pos:end="81:18">slotid</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:54"><name pos:start="81:22" pos:end="81:34">xhci_get_slot</name><argument_list pos:start="81:35" pos:end="81:54">(<argument pos:start="81:36" pos:end="81:39"><expr pos:start="81:36" pos:end="81:39"><name pos:start="81:36" pos:end="81:39">xhci</name></expr></argument>, <argument pos:start="81:42" pos:end="81:47"><expr pos:start="81:42" pos:end="81:47"><operator pos:start="81:42" pos:end="81:42">&amp;</operator><name pos:start="81:43" pos:end="81:47">event</name></expr></argument>, <argument pos:start="81:50" pos:end="81:53"><expr pos:start="81:50" pos:end="81:53"><operator pos:start="81:50" pos:end="81:50">&amp;</operator><name pos:start="81:51" pos:end="81:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="89:13"><if pos:start="83:13" pos:end="89:13">if <condition pos:start="83:16" pos:end="83:23">(<expr pos:start="83:17" pos:end="83:22"><name pos:start="83:17" pos:end="83:22">slotid</name></expr>)</condition> <block pos:start="83:25" pos:end="89:13">{<block_content pos:start="85:17" pos:end="87:74">

                <expr_stmt pos:start="85:17" pos:end="87:74"><expr pos:start="85:17" pos:end="87:73"><name pos:start="85:17" pos:end="85:27"><name pos:start="85:17" pos:end="85:21">event</name><operator pos:start="85:22" pos:end="85:22">.</operator><name pos:start="85:23" pos:end="85:27">ccode</name></name> <operator pos:start="85:29" pos:end="85:29">=</operator> <call pos:start="85:31" pos:end="87:73"><name pos:start="85:31" pos:end="85:47">xhci_address_slot</name><argument_list pos:start="85:48" pos:end="87:73">(<argument pos:start="85:49" pos:end="85:52"><expr pos:start="85:49" pos:end="85:52"><name pos:start="85:49" pos:end="85:52">xhci</name></expr></argument>, <argument pos:start="85:55" pos:end="85:60"><expr pos:start="85:55" pos:end="85:60"><name pos:start="85:55" pos:end="85:60">slotid</name></expr></argument>, <argument pos:start="85:63" pos:end="85:75"><expr pos:start="85:63" pos:end="85:75"><name pos:start="85:63" pos:end="85:75"><name pos:start="85:63" pos:end="85:65">trb</name><operator pos:start="85:66" pos:end="85:66">.</operator><name pos:start="85:67" pos:end="85:75">parameter</name></name></expr></argument>,

                                                <argument pos:start="87:49" pos:end="87:72"><expr pos:start="87:49" pos:end="87:72"><name pos:start="87:49" pos:end="87:59"><name pos:start="87:49" pos:end="87:51">trb</name><operator pos:start="87:52" pos:end="87:52">.</operator><name pos:start="87:53" pos:end="87:59">control</name></name> <operator pos:start="87:61" pos:end="87:61">&amp;</operator> <name pos:start="87:63" pos:end="87:72">TRB_CR_BSR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="91:13" pos:end="91:18">break;</break>

        <case pos:start="93:9" pos:end="93:35">case <expr pos:start="93:14" pos:end="93:34"><name pos:start="93:14" pos:end="93:34">CR_CONFIGURE_ENDPOINT</name></expr>:</case>

            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:18">slotid</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <call pos:start="95:22" pos:end="95:54"><name pos:start="95:22" pos:end="95:34">xhci_get_slot</name><argument_list pos:start="95:35" pos:end="95:54">(<argument pos:start="95:36" pos:end="95:39"><expr pos:start="95:36" pos:end="95:39"><name pos:start="95:36" pos:end="95:39">xhci</name></expr></argument>, <argument pos:start="95:42" pos:end="95:47"><expr pos:start="95:42" pos:end="95:47"><operator pos:start="95:42" pos:end="95:42">&amp;</operator><name pos:start="95:43" pos:end="95:47">event</name></expr></argument>, <argument pos:start="95:50" pos:end="95:53"><expr pos:start="95:50" pos:end="95:53"><operator pos:start="95:50" pos:end="95:50">&amp;</operator><name pos:start="95:51" pos:end="95:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:23">(<expr pos:start="97:17" pos:end="97:22"><name pos:start="97:17" pos:end="97:22">slotid</name></expr>)</condition> <block pos:start="97:25" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:75">

                <expr_stmt pos:start="99:17" pos:end="101:75"><expr pos:start="99:17" pos:end="101:74"><name pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:21">event</name><operator pos:start="99:22" pos:end="99:22">.</operator><name pos:start="99:23" pos:end="99:27">ccode</name></name> <operator pos:start="99:29" pos:end="99:29">=</operator> <call pos:start="99:31" pos:end="101:74"><name pos:start="99:31" pos:end="99:49">xhci_configure_slot</name><argument_list pos:start="99:50" pos:end="101:74">(<argument pos:start="99:51" pos:end="99:54"><expr pos:start="99:51" pos:end="99:54"><name pos:start="99:51" pos:end="99:54">xhci</name></expr></argument>, <argument pos:start="99:57" pos:end="99:62"><expr pos:start="99:57" pos:end="99:62"><name pos:start="99:57" pos:end="99:62">slotid</name></expr></argument>, <argument pos:start="99:65" pos:end="99:77"><expr pos:start="99:65" pos:end="99:77"><name pos:start="99:65" pos:end="99:77"><name pos:start="99:65" pos:end="99:67">trb</name><operator pos:start="99:68" pos:end="99:68">.</operator><name pos:start="99:69" pos:end="99:77">parameter</name></name></expr></argument>,

                                                  <argument pos:start="101:51" pos:end="101:73"><expr pos:start="101:51" pos:end="101:73"><name pos:start="101:51" pos:end="101:61"><name pos:start="101:51" pos:end="101:53">trb</name><operator pos:start="101:54" pos:end="101:54">.</operator><name pos:start="101:55" pos:end="101:61">control</name></name> <operator pos:start="101:63" pos:end="101:63">&amp;</operator> <name pos:start="101:65" pos:end="101:73">TRB_CR_DC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:33">case <expr pos:start="107:14" pos:end="107:32"><name pos:start="107:14" pos:end="107:32">CR_EVALUATE_CONTEXT</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:55"><expr pos:start="109:13" pos:end="109:54"><name pos:start="109:13" pos:end="109:18">slotid</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <call pos:start="109:22" pos:end="109:54"><name pos:start="109:22" pos:end="109:34">xhci_get_slot</name><argument_list pos:start="109:35" pos:end="109:54">(<argument pos:start="109:36" pos:end="109:39"><expr pos:start="109:36" pos:end="109:39"><name pos:start="109:36" pos:end="109:39">xhci</name></expr></argument>, <argument pos:start="109:42" pos:end="109:47"><expr pos:start="109:42" pos:end="109:47"><operator pos:start="109:42" pos:end="109:42">&amp;</operator><name pos:start="109:43" pos:end="109:47">event</name></expr></argument>, <argument pos:start="109:50" pos:end="109:53"><expr pos:start="109:50" pos:end="109:53"><operator pos:start="109:50" pos:end="109:50">&amp;</operator><name pos:start="109:51" pos:end="109:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="115:13"><if pos:start="111:13" pos:end="115:13">if <condition pos:start="111:16" pos:end="111:23">(<expr pos:start="111:17" pos:end="111:22"><name pos:start="111:17" pos:end="111:22">slotid</name></expr>)</condition> <block pos:start="111:25" pos:end="115:13">{<block_content pos:start="113:17" pos:end="113:78">

                <expr_stmt pos:start="113:17" pos:end="113:78"><expr pos:start="113:17" pos:end="113:77"><name pos:start="113:17" pos:end="113:27"><name pos:start="113:17" pos:end="113:21">event</name><operator pos:start="113:22" pos:end="113:22">.</operator><name pos:start="113:23" pos:end="113:27">ccode</name></name> <operator pos:start="113:29" pos:end="113:29">=</operator> <call pos:start="113:31" pos:end="113:77"><name pos:start="113:31" pos:end="113:48">xhci_evaluate_slot</name><argument_list pos:start="113:49" pos:end="113:77">(<argument pos:start="113:50" pos:end="113:53"><expr pos:start="113:50" pos:end="113:53"><name pos:start="113:50" pos:end="113:53">xhci</name></expr></argument>, <argument pos:start="113:56" pos:end="113:61"><expr pos:start="113:56" pos:end="113:61"><name pos:start="113:56" pos:end="113:61">slotid</name></expr></argument>, <argument pos:start="113:64" pos:end="113:76"><expr pos:start="113:64" pos:end="113:76"><name pos:start="113:64" pos:end="113:76"><name pos:start="113:64" pos:end="113:66">trb</name><operator pos:start="113:67" pos:end="113:67">.</operator><name pos:start="113:68" pos:end="113:76">parameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:30">case <expr pos:start="119:14" pos:end="119:29"><name pos:start="119:14" pos:end="119:29">CR_STOP_ENDPOINT</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:55"><expr pos:start="121:13" pos:end="121:54"><name pos:start="121:13" pos:end="121:18">slotid</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <call pos:start="121:22" pos:end="121:54"><name pos:start="121:22" pos:end="121:34">xhci_get_slot</name><argument_list pos:start="121:35" pos:end="121:54">(<argument pos:start="121:36" pos:end="121:39"><expr pos:start="121:36" pos:end="121:39"><name pos:start="121:36" pos:end="121:39">xhci</name></expr></argument>, <argument pos:start="121:42" pos:end="121:47"><expr pos:start="121:42" pos:end="121:47"><operator pos:start="121:42" pos:end="121:42">&amp;</operator><name pos:start="121:43" pos:end="121:47">event</name></expr></argument>, <argument pos:start="121:50" pos:end="121:53"><expr pos:start="121:50" pos:end="121:53"><operator pos:start="121:50" pos:end="121:50">&amp;</operator><name pos:start="121:51" pos:end="121:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="131:13"><if pos:start="123:13" pos:end="131:13">if <condition pos:start="123:16" pos:end="123:23">(<expr pos:start="123:17" pos:end="123:22"><name pos:start="123:17" pos:end="123:22">slotid</name></expr>)</condition> <block pos:start="123:25" pos:end="131:13">{<block_content pos:start="125:17" pos:end="129:63">

                <decl_stmt pos:start="125:17" pos:end="127:39"><decl pos:start="125:17" pos:end="127:38"><type pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:24">unsigned</name> <name pos:start="125:26" pos:end="125:28">int</name></type> <name pos:start="125:30" pos:end="125:33">epid</name> <init pos:start="125:35" pos:end="127:38">= <expr pos:start="125:37" pos:end="127:38"><operator pos:start="125:37" pos:end="125:37">(</operator><name pos:start="125:38" pos:end="125:48"><name pos:start="125:38" pos:end="125:40">trb</name><operator pos:start="125:41" pos:end="125:41">.</operator><name pos:start="125:42" pos:end="125:48">control</name></name> <operator pos:start="125:50" pos:end="125:51">&gt;&gt;</operator> <name pos:start="125:53" pos:end="125:69">TRB_CR_EPID_SHIFT</name><operator pos:start="125:70" pos:end="125:70">)</operator>

                    <operator pos:start="127:21" pos:end="127:21">&amp;</operator> <name pos:start="127:23" pos:end="127:38">TRB_CR_EPID_MASK</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:63"><expr pos:start="129:17" pos:end="129:62"><name pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:21">event</name><operator pos:start="129:22" pos:end="129:22">.</operator><name pos:start="129:23" pos:end="129:27">ccode</name></name> <operator pos:start="129:29" pos:end="129:29">=</operator> <call pos:start="129:31" pos:end="129:62"><name pos:start="129:31" pos:end="129:42">xhci_stop_ep</name><argument_list pos:start="129:43" pos:end="129:62">(<argument pos:start="129:44" pos:end="129:47"><expr pos:start="129:44" pos:end="129:47"><name pos:start="129:44" pos:end="129:47">xhci</name></expr></argument>, <argument pos:start="129:50" pos:end="129:55"><expr pos:start="129:50" pos:end="129:55"><name pos:start="129:50" pos:end="129:55">slotid</name></expr></argument>, <argument pos:start="129:58" pos:end="129:61"><expr pos:start="129:58" pos:end="129:61"><name pos:start="129:58" pos:end="129:61">epid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="133:13" pos:end="133:18">break;</break>

        <case pos:start="135:9" pos:end="135:31">case <expr pos:start="135:14" pos:end="135:30"><name pos:start="135:14" pos:end="135:30">CR_RESET_ENDPOINT</name></expr>:</case>

            <expr_stmt pos:start="137:13" pos:end="137:55"><expr pos:start="137:13" pos:end="137:54"><name pos:start="137:13" pos:end="137:18">slotid</name> <operator pos:start="137:20" pos:end="137:20">=</operator> <call pos:start="137:22" pos:end="137:54"><name pos:start="137:22" pos:end="137:34">xhci_get_slot</name><argument_list pos:start="137:35" pos:end="137:54">(<argument pos:start="137:36" pos:end="137:39"><expr pos:start="137:36" pos:end="137:39"><name pos:start="137:36" pos:end="137:39">xhci</name></expr></argument>, <argument pos:start="137:42" pos:end="137:47"><expr pos:start="137:42" pos:end="137:47"><operator pos:start="137:42" pos:end="137:42">&amp;</operator><name pos:start="137:43" pos:end="137:47">event</name></expr></argument>, <argument pos:start="137:50" pos:end="137:53"><expr pos:start="137:50" pos:end="137:53"><operator pos:start="137:50" pos:end="137:50">&amp;</operator><name pos:start="137:51" pos:end="137:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="147:13"><if pos:start="139:13" pos:end="147:13">if <condition pos:start="139:16" pos:end="139:23">(<expr pos:start="139:17" pos:end="139:22"><name pos:start="139:17" pos:end="139:22">slotid</name></expr>)</condition> <block pos:start="139:25" pos:end="147:13">{<block_content pos:start="141:17" pos:end="145:64">

                <decl_stmt pos:start="141:17" pos:end="143:39"><decl pos:start="141:17" pos:end="143:38"><type pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:24">unsigned</name> <name pos:start="141:26" pos:end="141:28">int</name></type> <name pos:start="141:30" pos:end="141:33">epid</name> <init pos:start="141:35" pos:end="143:38">= <expr pos:start="141:37" pos:end="143:38"><operator pos:start="141:37" pos:end="141:37">(</operator><name pos:start="141:38" pos:end="141:48"><name pos:start="141:38" pos:end="141:40">trb</name><operator pos:start="141:41" pos:end="141:41">.</operator><name pos:start="141:42" pos:end="141:48">control</name></name> <operator pos:start="141:50" pos:end="141:51">&gt;&gt;</operator> <name pos:start="141:53" pos:end="141:69">TRB_CR_EPID_SHIFT</name><operator pos:start="141:70" pos:end="141:70">)</operator>

                    <operator pos:start="143:21" pos:end="143:21">&amp;</operator> <name pos:start="143:23" pos:end="143:38">TRB_CR_EPID_MASK</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:64"><expr pos:start="145:17" pos:end="145:63"><name pos:start="145:17" pos:end="145:27"><name pos:start="145:17" pos:end="145:21">event</name><operator pos:start="145:22" pos:end="145:22">.</operator><name pos:start="145:23" pos:end="145:27">ccode</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <call pos:start="145:31" pos:end="145:63"><name pos:start="145:31" pos:end="145:43">xhci_reset_ep</name><argument_list pos:start="145:44" pos:end="145:63">(<argument pos:start="145:45" pos:end="145:48"><expr pos:start="145:45" pos:end="145:48"><name pos:start="145:45" pos:end="145:48">xhci</name></expr></argument>, <argument pos:start="145:51" pos:end="145:56"><expr pos:start="145:51" pos:end="145:56"><name pos:start="145:51" pos:end="145:56">slotid</name></expr></argument>, <argument pos:start="145:59" pos:end="145:62"><expr pos:start="145:59" pos:end="145:62"><name pos:start="145:59" pos:end="145:62">epid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:31">case <expr pos:start="151:14" pos:end="151:30"><name pos:start="151:14" pos:end="151:30">CR_SET_TR_DEQUEUE</name></expr>:</case>

            <expr_stmt pos:start="153:13" pos:end="153:55"><expr pos:start="153:13" pos:end="153:54"><name pos:start="153:13" pos:end="153:18">slotid</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <call pos:start="153:22" pos:end="153:54"><name pos:start="153:22" pos:end="153:34">xhci_get_slot</name><argument_list pos:start="153:35" pos:end="153:54">(<argument pos:start="153:36" pos:end="153:39"><expr pos:start="153:36" pos:end="153:39"><name pos:start="153:36" pos:end="153:39">xhci</name></expr></argument>, <argument pos:start="153:42" pos:end="153:47"><expr pos:start="153:42" pos:end="153:47"><operator pos:start="153:42" pos:end="153:42">&amp;</operator><name pos:start="153:43" pos:end="153:47">event</name></expr></argument>, <argument pos:start="153:50" pos:end="153:53"><expr pos:start="153:50" pos:end="153:53"><operator pos:start="153:50" pos:end="153:50">&amp;</operator><name pos:start="153:51" pos:end="153:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="169:13"><if pos:start="155:13" pos:end="169:13">if <condition pos:start="155:16" pos:end="155:23">(<expr pos:start="155:17" pos:end="155:22"><name pos:start="155:17" pos:end="155:22">slotid</name></expr>)</condition> <block pos:start="155:25" pos:end="169:13">{<block_content pos:start="157:17" pos:end="167:65">

                <decl_stmt pos:start="157:17" pos:end="159:39"><decl pos:start="157:17" pos:end="159:38"><type pos:start="157:17" pos:end="157:28"><name pos:start="157:17" pos:end="157:24">unsigned</name> <name pos:start="157:26" pos:end="157:28">int</name></type> <name pos:start="157:30" pos:end="157:33">epid</name> <init pos:start="157:35" pos:end="159:38">= <expr pos:start="157:37" pos:end="159:38"><operator pos:start="157:37" pos:end="157:37">(</operator><name pos:start="157:38" pos:end="157:48"><name pos:start="157:38" pos:end="157:40">trb</name><operator pos:start="157:41" pos:end="157:41">.</operator><name pos:start="157:42" pos:end="157:48">control</name></name> <operator pos:start="157:50" pos:end="157:51">&gt;&gt;</operator> <name pos:start="157:53" pos:end="157:69">TRB_CR_EPID_SHIFT</name><operator pos:start="157:70" pos:end="157:70">)</operator>

                    <operator pos:start="159:21" pos:end="159:21">&amp;</operator> <name pos:start="159:23" pos:end="159:38">TRB_CR_EPID_MASK</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="161:17" pos:end="161:68"><decl pos:start="161:17" pos:end="161:67"><type pos:start="161:17" pos:end="161:28"><name pos:start="161:17" pos:end="161:24">unsigned</name> <name pos:start="161:26" pos:end="161:28">int</name></type> <name pos:start="161:30" pos:end="161:37">streamid</name> <init pos:start="161:39" pos:end="161:67">= <expr pos:start="161:41" pos:end="161:67"><operator pos:start="161:41" pos:end="161:41">(</operator><name pos:start="161:42" pos:end="161:51"><name pos:start="161:42" pos:end="161:44">trb</name><operator pos:start="161:45" pos:end="161:45">.</operator><name pos:start="161:46" pos:end="161:51">status</name></name> <operator pos:start="161:53" pos:end="161:54">&gt;&gt;</operator> <literal type="number" pos:start="161:56" pos:end="161:57">16</literal><operator pos:start="161:58" pos:end="161:58">)</operator> <operator pos:start="161:60" pos:end="161:60">&amp;</operator> <literal type="number" pos:start="161:62" pos:end="161:67">0xffff</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="163:17" pos:end="167:65"><expr pos:start="163:17" pos:end="167:64"><name pos:start="163:17" pos:end="163:27"><name pos:start="163:17" pos:end="163:21">event</name><operator pos:start="163:22" pos:end="163:22">.</operator><name pos:start="163:23" pos:end="163:27">ccode</name></name> <operator pos:start="163:29" pos:end="163:29">=</operator> <call pos:start="163:31" pos:end="167:64"><name pos:start="163:31" pos:end="163:49">xhci_set_ep_dequeue</name><argument_list pos:start="163:50" pos:end="167:64">(<argument pos:start="163:51" pos:end="163:54"><expr pos:start="163:51" pos:end="163:54"><name pos:start="163:51" pos:end="163:54">xhci</name></expr></argument>, <argument pos:start="163:57" pos:end="163:62"><expr pos:start="163:57" pos:end="163:62"><name pos:start="163:57" pos:end="163:62">slotid</name></expr></argument>,

                                                  <argument pos:start="165:51" pos:end="165:54"><expr pos:start="165:51" pos:end="165:54"><name pos:start="165:51" pos:end="165:54">epid</name></expr></argument>, <argument pos:start="165:57" pos:end="165:64"><expr pos:start="165:57" pos:end="165:64"><name pos:start="165:57" pos:end="165:64">streamid</name></expr></argument>,

                                                  <argument pos:start="167:51" pos:end="167:63"><expr pos:start="167:51" pos:end="167:63"><name pos:start="167:51" pos:end="167:63"><name pos:start="167:51" pos:end="167:53">trb</name><operator pos:start="167:54" pos:end="167:54">.</operator><name pos:start="167:55" pos:end="167:63">parameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:29">case <expr pos:start="173:14" pos:end="173:28"><name pos:start="173:14" pos:end="173:28">CR_RESET_DEVICE</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:55"><expr pos:start="175:13" pos:end="175:54"><name pos:start="175:13" pos:end="175:18">slotid</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <call pos:start="175:22" pos:end="175:54"><name pos:start="175:22" pos:end="175:34">xhci_get_slot</name><argument_list pos:start="175:35" pos:end="175:54">(<argument pos:start="175:36" pos:end="175:39"><expr pos:start="175:36" pos:end="175:39"><name pos:start="175:36" pos:end="175:39">xhci</name></expr></argument>, <argument pos:start="175:42" pos:end="175:47"><expr pos:start="175:42" pos:end="175:47"><operator pos:start="175:42" pos:end="175:42">&amp;</operator><name pos:start="175:43" pos:end="175:47">event</name></expr></argument>, <argument pos:start="175:50" pos:end="175:53"><expr pos:start="175:50" pos:end="175:53"><operator pos:start="175:50" pos:end="175:50">&amp;</operator><name pos:start="175:51" pos:end="175:53">trb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="177:13" pos:end="181:13"><if pos:start="177:13" pos:end="181:13">if <condition pos:start="177:16" pos:end="177:23">(<expr pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:22">slotid</name></expr>)</condition> <block pos:start="177:25" pos:end="181:13">{<block_content pos:start="179:17" pos:end="179:60">

                <expr_stmt pos:start="179:17" pos:end="179:60"><expr pos:start="179:17" pos:end="179:59"><name pos:start="179:17" pos:end="179:27"><name pos:start="179:17" pos:end="179:21">event</name><operator pos:start="179:22" pos:end="179:22">.</operator><name pos:start="179:23" pos:end="179:27">ccode</name></name> <operator pos:start="179:29" pos:end="179:29">=</operator> <call pos:start="179:31" pos:end="179:59"><name pos:start="179:31" pos:end="179:45">xhci_reset_slot</name><argument_list pos:start="179:46" pos:end="179:59">(<argument pos:start="179:47" pos:end="179:50"><expr pos:start="179:47" pos:end="179:50"><name pos:start="179:47" pos:end="179:50">xhci</name></expr></argument>, <argument pos:start="179:53" pos:end="179:58"><expr pos:start="179:53" pos:end="179:58"><name pos:start="179:53" pos:end="179:58">slotid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        <case pos:start="185:9" pos:end="185:35">case <expr pos:start="185:14" pos:end="185:34"><name pos:start="185:14" pos:end="185:34">CR_GET_PORT_BANDWIDTH</name></expr>:</case>

            <expr_stmt pos:start="187:13" pos:end="187:71"><expr pos:start="187:13" pos:end="187:70"><name pos:start="187:13" pos:end="187:23"><name pos:start="187:13" pos:end="187:17">event</name><operator pos:start="187:18" pos:end="187:18">.</operator><name pos:start="187:19" pos:end="187:23">ccode</name></name> <operator pos:start="187:25" pos:end="187:25">=</operator> <call pos:start="187:27" pos:end="187:70"><name pos:start="187:27" pos:end="187:49">xhci_get_port_bandwidth</name><argument_list pos:start="187:50" pos:end="187:70">(<argument pos:start="187:51" pos:end="187:54"><expr pos:start="187:51" pos:end="187:54"><name pos:start="187:51" pos:end="187:54">xhci</name></expr></argument>, <argument pos:start="187:57" pos:end="187:69"><expr pos:start="187:57" pos:end="187:69"><name pos:start="187:57" pos:end="187:69"><name pos:start="187:57" pos:end="187:59">trb</name><operator pos:start="187:60" pos:end="187:60">.</operator><name pos:start="187:61" pos:end="187:69">parameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="189:13" pos:end="189:18">break;</break>

        <case pos:start="191:9" pos:end="191:46">case <expr pos:start="191:14" pos:end="191:45"><name pos:start="191:14" pos:end="191:45">CR_VENDOR_VIA_CHALLENGE_RESPONSE</name></expr>:</case>

            <expr_stmt pos:start="193:13" pos:end="193:52"><expr pos:start="193:13" pos:end="193:51"><call pos:start="193:13" pos:end="193:51"><name pos:start="193:13" pos:end="193:30">xhci_via_challenge</name><argument_list pos:start="193:31" pos:end="193:51">(<argument pos:start="193:32" pos:end="193:35"><expr pos:start="193:32" pos:end="193:35"><name pos:start="193:32" pos:end="193:35">xhci</name></expr></argument>, <argument pos:start="193:38" pos:end="193:50"><expr pos:start="193:38" pos:end="193:50"><name pos:start="193:38" pos:end="193:50"><name pos:start="193:38" pos:end="193:40">trb</name><operator pos:start="193:41" pos:end="193:41">.</operator><name pos:start="193:42" pos:end="193:50">parameter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:45">case <expr pos:start="197:14" pos:end="197:44"><name pos:start="197:14" pos:end="197:44">CR_VENDOR_NEC_FIRMWARE_REVISION</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:28"><expr pos:start="199:13" pos:end="199:27"><name pos:start="199:13" pos:end="199:22"><name pos:start="199:13" pos:end="199:17">event</name><operator pos:start="199:18" pos:end="199:18">.</operator><name pos:start="199:19" pos:end="199:22">type</name></name> <operator pos:start="199:24" pos:end="199:24">=</operator> <literal type="number" pos:start="199:26" pos:end="199:27">48</literal></expr>;</expr_stmt> <comment type="block" pos:start="199:30" pos:end="199:44">/* NEC reply */</comment>

            <expr_stmt pos:start="201:13" pos:end="201:34"><expr pos:start="201:13" pos:end="201:33"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:17">event</name><operator pos:start="201:18" pos:end="201:18">.</operator><name pos:start="201:19" pos:end="201:24">length</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <literal type="number" pos:start="201:28" pos:end="201:33">0x3025</literal></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:46">case <expr pos:start="205:14" pos:end="205:45"><name pos:start="205:14" pos:end="205:45">CR_VENDOR_NEC_CHALLENGE_RESPONSE</name></expr>:</case>

        <block pos:start="207:9" pos:end="223:9">{<block_content pos:start="209:13" pos:end="221:28">

            <decl_stmt pos:start="209:13" pos:end="209:47"><decl pos:start="209:13" pos:end="209:46"><type pos:start="209:13" pos:end="209:20"><name pos:start="209:13" pos:end="209:20">uint32_t</name></type> <name pos:start="209:22" pos:end="209:24">chi</name> <init pos:start="209:26" pos:end="209:46">= <expr pos:start="209:28" pos:end="209:46"><name pos:start="209:28" pos:end="209:40"><name pos:start="209:28" pos:end="209:30">trb</name><operator pos:start="209:31" pos:end="209:31">.</operator><name pos:start="209:32" pos:end="209:40">parameter</name></name> <operator pos:start="209:42" pos:end="209:43">&gt;&gt;</operator> <literal type="number" pos:start="209:45" pos:end="209:46">32</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="211:13" pos:end="211:41"><decl pos:start="211:13" pos:end="211:40"><type pos:start="211:13" pos:end="211:20"><name pos:start="211:13" pos:end="211:20">uint32_t</name></type> <name pos:start="211:22" pos:end="211:24">clo</name> <init pos:start="211:26" pos:end="211:40">= <expr pos:start="211:28" pos:end="211:40"><name pos:start="211:28" pos:end="211:40"><name pos:start="211:28" pos:end="211:30">trb</name><operator pos:start="211:31" pos:end="211:31">.</operator><name pos:start="211:32" pos:end="211:40">parameter</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="213:13" pos:end="213:56"><decl pos:start="213:13" pos:end="213:55"><type pos:start="213:13" pos:end="213:20"><name pos:start="213:13" pos:end="213:20">uint32_t</name></type> <name pos:start="213:22" pos:end="213:24">val</name> <init pos:start="213:26" pos:end="213:55">= <expr pos:start="213:28" pos:end="213:55"><call pos:start="213:28" pos:end="213:55"><name pos:start="213:28" pos:end="213:45">xhci_nec_challenge</name><argument_list pos:start="213:46" pos:end="213:55">(<argument pos:start="213:47" pos:end="213:49"><expr pos:start="213:47" pos:end="213:49"><name pos:start="213:47" pos:end="213:49">chi</name></expr></argument>, <argument pos:start="213:52" pos:end="213:54"><expr pos:start="213:52" pos:end="213:54"><name pos:start="213:52" pos:end="213:54">clo</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:40"><expr pos:start="215:13" pos:end="215:39"><name pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:17">event</name><operator pos:start="215:18" pos:end="215:18">.</operator><name pos:start="215:19" pos:end="215:24">length</name></name> <operator pos:start="215:26" pos:end="215:26">=</operator> <name pos:start="215:28" pos:end="215:30">val</name> <operator pos:start="215:32" pos:end="215:32">&amp;</operator> <literal type="number" pos:start="215:34" pos:end="215:39">0xFFFF</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:35"><expr pos:start="217:13" pos:end="217:34"><name pos:start="217:13" pos:end="217:22"><name pos:start="217:13" pos:end="217:17">event</name><operator pos:start="217:18" pos:end="217:18">.</operator><name pos:start="217:19" pos:end="217:22">epid</name></name> <operator pos:start="217:24" pos:end="217:24">=</operator> <name pos:start="217:26" pos:end="217:28">val</name> <operator pos:start="217:30" pos:end="217:31">&gt;&gt;</operator> <literal type="number" pos:start="217:33" pos:end="217:34">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:31"><expr pos:start="219:13" pos:end="219:30"><name pos:start="219:13" pos:end="219:18">slotid</name> <operator pos:start="219:20" pos:end="219:20">=</operator> <name pos:start="219:22" pos:end="219:24">val</name> <operator pos:start="219:26" pos:end="219:27">&gt;&gt;</operator> <literal type="number" pos:start="219:29" pos:end="219:30">24</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:28"><expr pos:start="221:13" pos:end="221:27"><name pos:start="221:13" pos:end="221:22"><name pos:start="221:13" pos:end="221:17">event</name><operator pos:start="221:18" pos:end="221:18">.</operator><name pos:start="221:19" pos:end="221:22">type</name></name> <operator pos:start="221:24" pos:end="221:24">=</operator> <literal type="number" pos:start="221:26" pos:end="221:27">48</literal></expr>;</expr_stmt> <comment type="block" pos:start="221:30" pos:end="221:44">/* NEC reply */</comment>

        </block_content>}</block>

        <break pos:start="225:9" pos:end="225:14">break;</break>

        <default pos:start="227:9" pos:end="227:16">default:</default>

            <expr_stmt pos:start="229:13" pos:end="229:58"><expr pos:start="229:13" pos:end="229:57"><call pos:start="229:13" pos:end="229:57"><name pos:start="229:13" pos:end="229:40">trace_usb_xhci_unimplemented</name><argument_list pos:start="229:41" pos:end="229:57">(<argument pos:start="229:42" pos:end="229:50"><expr pos:start="229:42" pos:end="229:50"><literal type="string" pos:start="229:42" pos:end="229:50">"command"</literal></expr></argument>, <argument pos:start="229:53" pos:end="229:56"><expr pos:start="229:53" pos:end="229:56"><name pos:start="229:53" pos:end="229:56">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:39"><expr pos:start="231:13" pos:end="231:38"><name pos:start="231:13" pos:end="231:23"><name pos:start="231:13" pos:end="231:17">event</name><operator pos:start="231:18" pos:end="231:18">.</operator><name pos:start="231:19" pos:end="231:23">ccode</name></name> <operator pos:start="231:25" pos:end="231:25">=</operator> <name pos:start="231:27" pos:end="231:38">CC_TRB_ERROR</name></expr>;</expr_stmt>

            <break pos:start="233:13" pos:end="233:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="237:9" pos:end="237:30"><expr pos:start="237:9" pos:end="237:29"><name pos:start="237:9" pos:end="237:20"><name pos:start="237:9" pos:end="237:13">event</name><operator pos:start="237:14" pos:end="237:14">.</operator><name pos:start="237:15" pos:end="237:20">slotid</name></name> <operator pos:start="237:22" pos:end="237:22">=</operator> <name pos:start="237:24" pos:end="237:29">slotid</name></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:36"><expr pos:start="239:9" pos:end="239:35"><call pos:start="239:9" pos:end="239:35"><name pos:start="239:9" pos:end="239:18">xhci_event</name><argument_list pos:start="239:19" pos:end="239:35">(<argument pos:start="239:20" pos:end="239:23"><expr pos:start="239:20" pos:end="239:23"><name pos:start="239:20" pos:end="239:23">xhci</name></expr></argument>, <argument pos:start="239:26" pos:end="239:31"><expr pos:start="239:26" pos:end="239:31"><operator pos:start="239:26" pos:end="239:26">&amp;</operator><name pos:start="239:27" pos:end="239:31">event</name></expr></argument>, <argument pos:start="239:34" pos:end="239:34"><expr pos:start="239:34" pos:end="239:34"><literal type="number" pos:start="239:34" pos:end="239:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
