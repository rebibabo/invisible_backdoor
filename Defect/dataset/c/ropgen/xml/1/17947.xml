<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17947.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vmdk_parent_open</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:71"><decl pos:start="1:51" pos:end="1:71"><type pos:start="1:51" pos:end="1:71"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type> <name pos:start="1:64" pos:end="1:71">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVVmdkState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:16">p_name</name></decl>;</decl_stmt> 

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:13">desc</name><index pos:start="9:14" pos:end="9:24">[<expr pos:start="9:15" pos:end="9:23"><name pos:start="9:15" pos:end="9:23">DESC_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:30"><name pos:start="11:10" pos:end="11:24">parent_img_name</name><index pos:start="11:25" pos:end="11:30">[<expr pos:start="11:26" pos:end="11:29"><literal type="number" pos:start="11:26" pos:end="11:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:39">/* the descriptor offset = 0x200 */</comment>

    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:63">(<expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:49"><name pos:start="17:9" pos:end="17:18">bdrv_pread</name><argument_list pos:start="17:19" pos:end="17:49">(<argument pos:start="17:20" pos:end="17:24"><expr pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:24"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:24">hd</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><literal type="number" pos:start="17:27" pos:end="17:31">0x200</literal></expr></argument>, <argument pos:start="17:34" pos:end="17:37"><expr pos:start="17:34" pos:end="17:37"><name pos:start="17:34" pos:end="17:37">desc</name></expr></argument>, <argument pos:start="17:40" pos:end="17:48"><expr pos:start="17:40" pos:end="17:48"><name pos:start="17:40" pos:end="17:48">DESC_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="17:51" pos:end="17:52">!=</operator> <name pos:start="17:54" pos:end="17:62">DESC_SIZE</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="71:5"><if pos:start="23:5" pos:end="71:5">if <condition pos:start="23:8" pos:end="23:58">(<expr pos:start="23:9" pos:end="23:57"><operator pos:start="23:9" pos:end="23:9">(</operator><name pos:start="23:10" pos:end="23:15">p_name</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:51"><name pos:start="23:19" pos:end="23:24">strstr</name><argument_list pos:start="23:25" pos:end="23:51">(<argument pos:start="23:26" pos:end="23:29"><expr pos:start="23:26" pos:end="23:29"><name pos:start="23:26" pos:end="23:29">desc</name></expr></argument>,<argument pos:start="23:31" pos:end="23:50"><expr pos:start="23:31" pos:end="23:50"><literal type="string" pos:start="23:31" pos:end="23:50">"parentFileNameHint"</literal></expr></argument>)</argument_list></call><operator pos:start="23:52" pos:end="23:52">)</operator> <operator pos:start="23:54" pos:end="23:55">!=</operator> <literal type="number" pos:start="23:57" pos:end="23:57">0</literal></expr>)</condition> <block pos:start="23:60" pos:end="71:5">{<block_content pos:start="25:9" pos:end="69:25">

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:22"><type pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:12">char</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:22">end_name</name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:29"><decl pos:start="27:9" pos:end="27:28"><type pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:19"><name pos:start="27:9" pos:end="27:14">struct</name> <name pos:start="27:16" pos:end="27:19">stat</name></name></type> <name pos:start="27:21" pos:end="27:28">file_buf</name></decl>;</decl_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:51"><expr pos:start="31:9" pos:end="31:50"><name pos:start="31:9" pos:end="31:14">p_name</name> <operator pos:start="31:16" pos:end="31:17">+=</operator> <sizeof pos:start="31:19" pos:end="31:46">sizeof<argument_list pos:start="31:25" pos:end="31:46">(<argument pos:start="31:26" pos:end="31:45"><expr pos:start="31:26" pos:end="31:45"><literal type="string" pos:start="31:26" pos:end="31:45">"parentFileNameHint"</literal></expr></argument>)</argument_list></sizeof> <operator pos:start="31:48" pos:end="31:48">+</operator> <literal type="number" pos:start="31:50" pos:end="31:50">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:22"><if pos:start="33:9" pos:end="35:22">if <condition pos:start="33:12" pos:end="33:50">(<expr pos:start="33:13" pos:end="33:49"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:21">end_name</name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:43"><name pos:start="33:25" pos:end="33:30">strchr</name><argument_list pos:start="33:31" pos:end="33:43">(<argument pos:start="33:32" pos:end="33:37"><expr pos:start="33:32" pos:end="33:37"><name pos:start="33:32" pos:end="33:37">p_name</name></expr></argument>,<argument pos:start="33:39" pos:end="33:42"><expr pos:start="33:39" pos:end="33:42"><literal type="char" pos:start="33:39" pos:end="33:42">'\"'</literal></expr></argument>)</argument_list></call><operator pos:start="33:44" pos:end="33:44">)</operator> <operator pos:start="33:46" pos:end="33:47">==</operator> <literal type="number" pos:start="33:49" pos:end="33:49">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:22"><block_content pos:start="35:13" pos:end="35:22">

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

                

        <expr_stmt pos:start="39:9" pos:end="39:64"><expr pos:start="39:9" pos:end="39:63"><call pos:start="39:9" pos:end="39:63"><name pos:start="39:9" pos:end="39:15">strncpy</name><argument_list pos:start="39:16" pos:end="39:63">(<argument pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:21">hd</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:35">backing_file</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:43"><expr pos:start="39:38" pos:end="39:43"><name pos:start="39:38" pos:end="39:43">p_name</name></expr></argument>, <argument pos:start="39:46" pos:end="39:62"><expr pos:start="39:46" pos:end="39:62"><name pos:start="39:46" pos:end="39:53">end_name</name> <operator pos:start="39:55" pos:end="39:55">-</operator> <name pos:start="39:57" pos:end="39:62">p_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="51:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:54">(<expr pos:start="41:13" pos:end="41:53"><call pos:start="41:13" pos:end="41:48"><name pos:start="41:13" pos:end="41:16">stat</name><argument_list pos:start="41:17" pos:end="41:48">(<argument pos:start="41:18" pos:end="41:36"><expr pos:start="41:18" pos:end="41:36"><name pos:start="41:18" pos:end="41:36"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:22">hd</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:36">backing_file</name></name></expr></argument>, <argument pos:start="41:39" pos:end="41:47"><expr pos:start="41:39" pos:end="41:47"><operator pos:start="41:39" pos:end="41:39">&amp;</operator><name pos:start="41:40" pos:end="41:47">file_buf</name></expr></argument>)</argument_list></call> <operator pos:start="41:50" pos:end="41:51">!=</operator> <literal type="number" pos:start="41:53" pos:end="41:53">0</literal></expr>)</condition> <block pos:start="41:56" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:56">

            <expr_stmt pos:start="43:13" pos:end="45:56"><expr pos:start="43:13" pos:end="45:55"><call pos:start="43:13" pos:end="45:55"><name pos:start="43:13" pos:end="43:24">path_combine</name><argument_list pos:start="43:25" pos:end="45:55">(<argument pos:start="43:26" pos:end="43:40"><expr pos:start="43:26" pos:end="43:40"><name pos:start="43:26" pos:end="43:40">parent_img_name</name></expr></argument>, <argument pos:start="43:43" pos:end="43:65"><expr pos:start="43:43" pos:end="43:65"><sizeof pos:start="43:43" pos:end="43:65">sizeof<argument_list pos:start="43:49" pos:end="43:65">(<argument pos:start="43:50" pos:end="43:64"><expr pos:start="43:50" pos:end="43:64"><name pos:start="43:50" pos:end="43:64">parent_img_name</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                         <argument pos:start="45:26" pos:end="45:33"><expr pos:start="45:26" pos:end="45:33"><name pos:start="45:26" pos:end="45:33">filename</name></expr></argument>, <argument pos:start="45:36" pos:end="45:54"><expr pos:start="45:36" pos:end="45:54"><name pos:start="45:36" pos:end="45:54"><name pos:start="45:36" pos:end="45:36">s</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:40">hd</name><operator pos:start="45:41" pos:end="45:42">-&gt;</operator><name pos:start="45:43" pos:end="45:54">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="51:9">else <block pos:start="47:16" pos:end="51:9">{<block_content pos:start="49:13" pos:end="49:57">

            <expr_stmt pos:start="49:13" pos:end="49:57"><expr pos:start="49:13" pos:end="49:56"><call pos:start="49:13" pos:end="49:56"><name pos:start="49:13" pos:end="49:18">strcpy</name><argument_list pos:start="49:19" pos:end="49:56">(<argument pos:start="49:20" pos:end="49:34"><expr pos:start="49:20" pos:end="49:34"><name pos:start="49:20" pos:end="49:34">parent_img_name</name></expr></argument>, <argument pos:start="49:37" pos:end="49:55"><expr pos:start="49:37" pos:end="49:55"><name pos:start="49:37" pos:end="49:55"><name pos:start="49:37" pos:end="49:37">s</name><operator pos:start="49:38" pos:end="49:39">-&gt;</operator><name pos:start="49:40" pos:end="49:41">hd</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:55">backing_file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:25"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:13">hd</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:25">backing_hd</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:40"><name pos:start="55:29" pos:end="55:36">bdrv_new</name><argument_list pos:start="55:37" pos:end="55:40">(<argument pos:start="55:38" pos:end="55:39"><expr pos:start="55:38" pos:end="55:39"><literal type="string" pos:start="55:38" pos:end="55:39">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="57:31">(<expr pos:start="57:13" pos:end="57:30"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:30"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:18">hd</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:30">backing_hd</name></name></expr>)</condition> <block pos:start="57:33" pos:end="65:9">{<block_content pos:start="59:13" pos:end="63:22">

            <label pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:19">failure</name>:</label>

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><call pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:22">bdrv_close</name><argument_list pos:start="61:23" pos:end="61:29">(<argument pos:start="61:24" pos:end="61:28"><expr pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:28"><name pos:start="61:24" pos:end="61:24">s</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:28">hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:22">return <expr pos:start="63:20" pos:end="63:21"><operator pos:start="63:20" pos:end="63:20">-</operator><literal type="number" pos:start="63:21" pos:end="63:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="69:25"><if pos:start="67:9" pos:end="69:25">if <condition pos:start="67:12" pos:end="67:65">(<expr pos:start="67:13" pos:end="67:64"><call pos:start="67:13" pos:end="67:60"><name pos:start="67:13" pos:end="67:21">bdrv_open</name><argument_list pos:start="67:22" pos:end="67:60">(<argument pos:start="67:23" pos:end="67:39"><expr pos:start="67:23" pos:end="67:39"><name pos:start="67:23" pos:end="67:39"><name pos:start="67:23" pos:end="67:23">s</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:27">hd</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:39">backing_hd</name></name></expr></argument>, <argument pos:start="67:42" pos:end="67:56"><expr pos:start="67:42" pos:end="67:56"><name pos:start="67:42" pos:end="67:56">parent_img_name</name></expr></argument>, <argument pos:start="67:59" pos:end="67:59"><expr pos:start="67:59" pos:end="67:59"><literal type="number" pos:start="67:59" pos:end="67:59">0</literal></expr></argument>)</argument_list></call> <operator pos:start="67:62" pos:end="67:62">&lt;</operator> <literal type="number" pos:start="67:64" pos:end="67:64">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:25"><block_content pos:start="69:13" pos:end="69:25">

            <goto pos:start="69:13" pos:end="69:25">goto <name pos:start="69:18" pos:end="69:24">failure</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="75:5" pos:end="75:13">return <expr pos:start="75:12" pos:end="75:12"><literal type="number" pos:start="75:12" pos:end="75:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
