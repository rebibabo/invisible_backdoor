<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13093.c" pos:tabs="8"><function pos:start="1:1" pos:end="18:69"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">BlockAIOCB</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:33">hdev_aio_ioctl</name><parameter_list pos:start="1:34" pos:end="3:46">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:50">BlockDriverState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">bs</name></decl></parameter>,
        <parameter pos:start="2:9" pos:end="2:29"><decl pos:start="2:9" pos:end="2:29"><type pos:start="2:9" pos:end="2:29"><name pos:start="2:9" pos:end="2:16">unsigned</name> <name pos:start="2:18" pos:end="2:21">long</name> <name pos:start="2:23" pos:end="2:25">int</name></type> <name pos:start="2:27" pos:end="2:29">req</name></decl></parameter>, <parameter pos:start="2:32" pos:end="2:40"><decl pos:start="2:32" pos:end="2:40"><type pos:start="2:32" pos:end="2:40"><name pos:start="2:32" pos:end="2:35">void</name> <modifier pos:start="2:37" pos:end="2:37">*</modifier></type><name pos:start="2:38" pos:end="2:40">buf</name></decl></parameter>,
        <parameter pos:start="3:9" pos:end="3:31"><decl pos:start="3:9" pos:end="3:31"><type pos:start="3:9" pos:end="3:31"><name pos:start="3:9" pos:end="3:27">BlockCompletionFunc</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:31">cb</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:37">void</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:45">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="18:69">{<block_content pos:start="5:5" pos:end="18:69">
    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:25"><decl pos:start="6:5" pos:end="6:24"><type pos:start="6:5" pos:end="6:21"><name pos:start="6:5" pos:end="6:19">RawPosixAIOData</name> <modifier pos:start="6:21" pos:end="6:21">*</modifier></type><name pos:start="6:22" pos:end="6:24">acb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ThreadPool</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">pool</name></decl>;</decl_stmt>
    <if_stmt pos:start="8:5" pos:end="9:20"><if pos:start="8:5" pos:end="9:20">if <condition pos:start="8:8" pos:end="8:24">(<expr pos:start="8:9" pos:end="8:23"><call pos:start="8:9" pos:end="8:19"><name pos:start="8:9" pos:end="8:15">fd_open</name><argument_list pos:start="8:16" pos:end="8:19">(<argument pos:start="8:17" pos:end="8:18"><expr pos:start="8:17" pos:end="8:18"><name pos:start="8:17" pos:end="8:18">bs</name></expr></argument>)</argument_list></call> <operator pos:start="8:21" pos:end="8:21">&lt;</operator> <literal type="number" pos:start="8:23" pos:end="8:23">0</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:20"><block_content pos:start="9:9" pos:end="9:20">
        <return pos:start="9:9" pos:end="9:20">return <expr pos:start="9:16" pos:end="9:19"><name pos:start="9:16" pos:end="9:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:36"><expr pos:start="10:5" pos:end="10:35"><name pos:start="10:5" pos:end="10:7">acb</name> <operator pos:start="10:9" pos:end="10:9">=</operator> <call pos:start="10:11" pos:end="10:35"><name pos:start="10:11" pos:end="10:15">g_new</name><argument_list pos:start="10:16" pos:end="10:35">(<argument pos:start="10:17" pos:end="10:31"><expr pos:start="10:17" pos:end="10:31"><name pos:start="10:17" pos:end="10:31">RawPosixAIOData</name></expr></argument>, <argument pos:start="10:34" pos:end="10:34"><expr pos:start="10:34" pos:end="10:34"><literal type="number" pos:start="10:34" pos:end="10:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:7">acb</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:11">bs</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:16">bs</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:35"><expr pos:start="12:5" pos:end="12:34"><name pos:start="12:5" pos:end="12:17"><name pos:start="12:5" pos:end="12:7">acb</name><operator pos:start="12:8" pos:end="12:9">-&gt;</operator><name pos:start="12:10" pos:end="12:17">aio_type</name></name> <operator pos:start="12:19" pos:end="12:19">=</operator> <name pos:start="12:21" pos:end="12:34">QEMU_AIO_IOCTL</name></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:7">acb</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:19">aio_fildes</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:27">fd</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:24"><expr pos:start="14:5" pos:end="14:23"><name pos:start="14:5" pos:end="14:19"><name pos:start="14:5" pos:end="14:7">acb</name><operator pos:start="14:8" pos:end="14:9">-&gt;</operator><name pos:start="14:10" pos:end="14:19">aio_offset</name></name> <operator pos:start="14:21" pos:end="14:21">=</operator> <literal type="number" pos:start="14:23" pos:end="14:23">0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:7">acb</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:22">aio_ioctl_buf</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <name pos:start="15:26" pos:end="15:28">buf</name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:29"><expr pos:start="16:5" pos:end="16:28"><name pos:start="16:5" pos:end="16:22"><name pos:start="16:5" pos:end="16:7">acb</name><operator pos:start="16:8" pos:end="16:9">-&gt;</operator><name pos:start="16:10" pos:end="16:22">aio_ioctl_cmd</name></name> <operator pos:start="16:24" pos:end="16:24">=</operator> <name pos:start="16:26" pos:end="16:28">req</name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:57"><expr pos:start="17:5" pos:end="17:56"><name pos:start="17:5" pos:end="17:8">pool</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:56"><name pos:start="17:12" pos:end="17:30">aio_get_thread_pool</name><argument_list pos:start="17:31" pos:end="17:56">(<argument pos:start="17:32" pos:end="17:55"><expr pos:start="17:32" pos:end="17:55"><call pos:start="17:32" pos:end="17:55"><name pos:start="17:32" pos:end="17:51">bdrv_get_aio_context</name><argument_list pos:start="17:52" pos:end="17:55">(<argument pos:start="17:53" pos:end="17:54"><expr pos:start="17:53" pos:end="17:54"><name pos:start="17:53" pos:end="17:54">bs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="18:5" pos:end="18:69">return <expr pos:start="18:12" pos:end="18:68"><call pos:start="18:12" pos:end="18:68"><name pos:start="18:12" pos:end="18:33">thread_pool_submit_aio</name><argument_list pos:start="18:34" pos:end="18:68">(<argument pos:start="18:35" pos:end="18:38"><expr pos:start="18:35" pos:end="18:38"><name pos:start="18:35" pos:end="18:38">pool</name></expr></argument>, <argument pos:start="18:41" pos:end="18:50"><expr pos:start="18:41" pos:end="18:50"><name pos:start="18:41" pos:end="18:50">aio_worker</name></expr></argument>, <argument pos:start="18:53" pos:end="18:55"><expr pos:start="18:53" pos:end="18:55"><name pos:start="18:53" pos:end="18:55">acb</name></expr></argument>, <argument pos:start="18:58" pos:end="18:59"><expr pos:start="18:58" pos:end="18:59"><name pos:start="18:58" pos:end="18:59">cb</name></expr></argument>, <argument pos:start="18:62" pos:end="18:67"><expr pos:start="18:62" pos:end="18:67"><name pos:start="18:62" pos:end="18:67">opaque</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></function></unit>
