<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1722.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_block</name><parameter_list pos:start="1:24" pos:end="1:61">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:37">ALSDecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><name pos:start="1:45" pos:end="1:56">ALSBlockData</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:60">bd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:20">smp</name></decl>;</decl_stmt>



    <comment type="line" pos:start="9:5" pos:end="9:60">// read block type flag and read the samples accordingly</comment>

    <if_stmt pos:start="11:5" pos:end="17:18"><if pos:start="11:5" pos:end="13:41">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><operator pos:start="11:9" pos:end="11:9">*</operator><name pos:start="11:10" pos:end="11:24"><name pos:start="11:10" pos:end="11:11">bd</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:24">const_block</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:41"><block_content pos:start="13:9" pos:end="13:41">

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><call pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:31">decode_const_block_data</name><argument_list pos:start="13:32" pos:end="13:40">(<argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">ctx</name></expr></argument>, <argument pos:start="13:38" pos:end="13:39"><expr pos:start="13:38" pos:end="13:39"><name pos:start="13:38" pos:end="13:39">bd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="15:5" pos:end="17:18">else if <condition pos:start="15:13" pos:end="15:44">(<expr pos:start="15:14" pos:end="15:43"><call pos:start="15:14" pos:end="15:43"><name pos:start="15:14" pos:end="15:34">decode_var_block_data</name><argument_list pos:start="15:35" pos:end="15:43">(<argument pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><name pos:start="15:36" pos:end="15:38">ctx</name></expr></argument>, <argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><name pos:start="15:41" pos:end="15:42">bd</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:39">// TODO: read RLSLMS extension data</comment>



    <if_stmt pos:start="25:5" pos:end="29:53"><if pos:start="25:5" pos:end="29:53">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:23"><name pos:start="25:10" pos:end="25:11">bd</name><operator pos:start="25:12" pos:end="25:13">-&gt;</operator><name pos:start="25:14" pos:end="25:23">shift_lsbs</name></name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="29:53"><block_content pos:start="27:9" pos:end="29:53">

        <for pos:start="27:9" pos:end="29:53">for <control pos:start="27:13" pos:end="27:52">(<init pos:start="27:14" pos:end="27:21"><expr pos:start="27:14" pos:end="27:20"><name pos:start="27:14" pos:end="27:16">smp</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr>;</init> <condition pos:start="27:23" pos:end="27:45"><expr pos:start="27:23" pos:end="27:44"><name pos:start="27:23" pos:end="27:25">smp</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <name pos:start="27:29" pos:end="27:44"><name pos:start="27:29" pos:end="27:30">bd</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:44">block_length</name></name></expr>;</condition> <incr pos:start="27:47" pos:end="27:51"><expr pos:start="27:47" pos:end="27:51"><name pos:start="27:47" pos:end="27:49">smp</name><operator pos:start="27:50" pos:end="27:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="29:13" pos:end="29:53"><block_content pos:start="29:13" pos:end="29:53">

            <expr_stmt pos:start="29:13" pos:end="29:53"><expr pos:start="29:13" pos:end="29:52"><name pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:14">bd</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:27">raw_samples</name><index pos:start="29:28" pos:end="29:32">[<expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">smp</name></expr>]</index></name> <operator pos:start="29:34" pos:end="29:36">&lt;&lt;=</operator> <operator pos:start="29:38" pos:end="29:38">*</operator><name pos:start="29:39" pos:end="29:52"><name pos:start="29:39" pos:end="29:40">bd</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:52">shift_lsbs</name></name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
