<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16111.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">decode_q_branch</name><parameter_list pos:start="1:27" pos:end="1:67">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:38">SnowContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:52"><decl pos:start="1:44" pos:end="1:52"><type pos:start="1:44" pos:end="1:52"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:52">level</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:59"><decl pos:start="1:55" pos:end="1:59"><type pos:start="1:55" pos:end="1:59"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:59">x</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:66"><decl pos:start="1:62" pos:end="1:66"><type pos:start="1:62" pos:end="1:66"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:66">y</name></decl></parameter>)</parameter_list><block pos:start="1:68" pos:end="113:1">{<block_content pos:start="3:5" pos:end="111:13">

    <decl_stmt pos:start="3:5" pos:end="3:50"><decl pos:start="3:5" pos:end="3:49"><type pos:start="3:5" pos:end="3:13"><specifier pos:start="3:5" pos:end="3:9">const</specifier> <name pos:start="3:11" pos:end="3:13">int</name></type> <name pos:start="3:15" pos:end="3:15">w</name><init pos:start="3:16" pos:end="3:49">= <expr pos:start="3:18" pos:end="3:49"><name pos:start="3:18" pos:end="3:27"><name pos:start="3:18" pos:end="3:18">s</name><operator pos:start="3:19" pos:end="3:20">-&gt;</operator><name pos:start="3:21" pos:end="3:27">b_width</name></name> <operator pos:start="3:29" pos:end="3:30">&lt;&lt;</operator> <name pos:start="3:32" pos:end="3:49"><name pos:start="3:32" pos:end="3:32">s</name><operator pos:start="3:33" pos:end="3:34">-&gt;</operator><name pos:start="3:35" pos:end="3:49">block_max_depth</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:23">rem_depth</name><init pos:start="5:24" pos:end="5:51">= <expr pos:start="5:26" pos:end="5:51"><name pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:43">block_max_depth</name></name> <operator pos:start="5:45" pos:end="5:45">-</operator> <name pos:start="5:47" pos:end="5:51">level</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:19">index</name><init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><operator pos:start="7:22" pos:end="7:22">(</operator><name pos:start="7:23" pos:end="7:23">x</name> <operator pos:start="7:25" pos:end="7:25">+</operator> <name pos:start="7:27" pos:end="7:27">y</name><operator pos:start="7:28" pos:end="7:28">*</operator><name pos:start="7:29" pos:end="7:29">w</name><operator pos:start="7:30" pos:end="7:30">)</operator> <operator pos:start="7:32" pos:end="7:33">&lt;&lt;</operator> <name pos:start="7:35" pos:end="7:43">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">trx</name><init pos:start="9:12" pos:end="9:29">= <expr pos:start="9:14" pos:end="9:29"><operator pos:start="9:14" pos:end="9:14">(</operator><name pos:start="9:15" pos:end="9:15">x</name><operator pos:start="9:16" pos:end="9:16">+</operator><literal type="number" pos:start="9:17" pos:end="9:17">1</literal><operator pos:start="9:18" pos:end="9:18">)</operator><operator pos:start="9:19" pos:end="9:20">&lt;&lt;</operator><name pos:start="9:21" pos:end="9:29">rem_depth</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19">BlockNode</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:25">left</name>  <init pos:start="11:28" pos:end="11:65">= <expr pos:start="11:30" pos:end="11:65"><ternary pos:start="11:30" pos:end="11:65"><condition pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:30"><name pos:start="11:30" pos:end="11:30">x</name></expr> ?</condition><then pos:start="11:34" pos:end="11:51"> <expr pos:start="11:34" pos:end="11:51"><operator pos:start="11:34" pos:end="11:34">&amp;</operator><name pos:start="11:35" pos:end="11:51"><name pos:start="11:35" pos:end="11:35">s</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:42">block</name><index pos:start="11:43" pos:end="11:51">[<expr pos:start="11:44" pos:end="11:50"><name pos:start="11:44" pos:end="11:48">index</name><operator pos:start="11:49" pos:end="11:49">-</operator><literal type="number" pos:start="11:50" pos:end="11:50">1</literal></expr>]</index></name></expr> </then><else pos:start="11:53" pos:end="11:65">: <expr pos:start="11:55" pos:end="11:65"><operator pos:start="11:55" pos:end="11:55">&amp;</operator><name pos:start="11:56" pos:end="11:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:66"><decl pos:start="13:5" pos:end="13:65"><type pos:start="13:5" pos:end="13:21"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:19">BlockNode</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">top</name>   <init pos:start="13:28" pos:end="13:65">= <expr pos:start="13:30" pos:end="13:65"><ternary pos:start="13:30" pos:end="13:65"><condition pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:30"><name pos:start="13:30" pos:end="13:30">y</name></expr> ?</condition><then pos:start="13:34" pos:end="13:51"> <expr pos:start="13:34" pos:end="13:51"><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:51"><name pos:start="13:35" pos:end="13:35">s</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:42">block</name><index pos:start="13:43" pos:end="13:51">[<expr pos:start="13:44" pos:end="13:50"><name pos:start="13:44" pos:end="13:48">index</name><operator pos:start="13:49" pos:end="13:49">-</operator><name pos:start="13:50" pos:end="13:50">w</name></expr>]</index></name></expr> </then><else pos:start="13:53" pos:end="13:65">: <expr pos:start="13:55" pos:end="13:65"><operator pos:start="13:55" pos:end="13:55">&amp;</operator><name pos:start="13:56" pos:end="13:65">null_block</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:21"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:19">BlockNode</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:23">tl</name>    <init pos:start="15:28" pos:end="15:65">= <expr pos:start="15:30" pos:end="15:65"><ternary pos:start="15:30" pos:end="15:65"><condition pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:30">y</name> <operator pos:start="15:32" pos:end="15:33">&amp;&amp;</operator> <name pos:start="15:35" pos:end="15:35">x</name></expr> ?</condition><then pos:start="15:39" pos:end="15:58"> <expr pos:start="15:39" pos:end="15:58"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:58"><name pos:start="15:40" pos:end="15:40">s</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:47">block</name><index pos:start="15:48" pos:end="15:58">[<expr pos:start="15:49" pos:end="15:57"><name pos:start="15:49" pos:end="15:53">index</name><operator pos:start="15:54" pos:end="15:54">-</operator><name pos:start="15:55" pos:end="15:55">w</name><operator pos:start="15:56" pos:end="15:56">-</operator><literal type="number" pos:start="15:57" pos:end="15:57">1</literal></expr>]</index></name></expr> </then><else pos:start="15:60" pos:end="15:65">: <expr pos:start="15:62" pos:end="15:65"><name pos:start="15:62" pos:end="15:65">left</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:107"><decl pos:start="17:5" pos:end="17:106"><type pos:start="17:5" pos:end="17:21"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:19">BlockNode</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:23">tr</name>    <init pos:start="17:28" pos:end="17:106">= <expr pos:start="17:30" pos:end="17:106"><ternary pos:start="17:30" pos:end="17:106"><condition pos:start="17:30" pos:end="17:67"><expr pos:start="17:30" pos:end="17:65"><name pos:start="17:30" pos:end="17:30">y</name> <operator pos:start="17:32" pos:end="17:33">&amp;&amp;</operator> <name pos:start="17:35" pos:end="17:37">trx</name><operator pos:start="17:38" pos:end="17:38">&lt;</operator><name pos:start="17:39" pos:end="17:39">w</name> <operator pos:start="17:41" pos:end="17:42">&amp;&amp;</operator> <operator pos:start="17:44" pos:end="17:44">(</operator><operator pos:start="17:45" pos:end="17:45">(</operator><name pos:start="17:46" pos:end="17:46">x</name><operator pos:start="17:47" pos:end="17:47">&amp;</operator><literal type="number" pos:start="17:48" pos:end="17:48">1</literal><operator pos:start="17:49" pos:end="17:49">)</operator><operator pos:start="17:50" pos:end="17:51">==</operator><literal type="number" pos:start="17:52" pos:end="17:52">0</literal> <operator pos:start="17:54" pos:end="17:55">||</operator> <name pos:start="17:57" pos:end="17:61">level</name><operator pos:start="17:62" pos:end="17:63">==</operator><literal type="number" pos:start="17:64" pos:end="17:64">0</literal><operator pos:start="17:65" pos:end="17:65">)</operator></expr> ?</condition><then pos:start="17:69" pos:end="17:101"> <expr pos:start="17:69" pos:end="17:101"><operator pos:start="17:69" pos:end="17:69">&amp;</operator><name pos:start="17:70" pos:end="17:101"><name pos:start="17:70" pos:end="17:70">s</name><operator pos:start="17:71" pos:end="17:72">-&gt;</operator><name pos:start="17:73" pos:end="17:77">block</name><index pos:start="17:78" pos:end="17:101">[<expr pos:start="17:79" pos:end="17:100"><name pos:start="17:79" pos:end="17:83">index</name><operator pos:start="17:84" pos:end="17:84">-</operator><name pos:start="17:85" pos:end="17:85">w</name><operator pos:start="17:86" pos:end="17:86">+</operator><operator pos:start="17:87" pos:end="17:87">(</operator><literal type="number" pos:start="17:88" pos:end="17:88">1</literal><operator pos:start="17:89" pos:end="17:90">&lt;&lt;</operator><name pos:start="17:91" pos:end="17:99">rem_depth</name><operator pos:start="17:100" pos:end="17:100">)</operator></expr>]</index></name></expr> </then><else pos:start="17:103" pos:end="17:106">: <expr pos:start="17:105" pos:end="17:106"><name pos:start="17:105" pos:end="17:106">tl</name></expr></else></ternary></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="17:109" pos:end="17:122">//FIXME use lt</comment>

    <decl_stmt pos:start="19:5" pos:end="19:72"><decl pos:start="19:5" pos:end="19:71"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">s_context</name><init pos:start="19:18" pos:end="19:71">= <expr pos:start="19:20" pos:end="19:71"><literal type="number" pos:start="19:20" pos:end="19:20">2</literal><operator pos:start="19:21" pos:end="19:21">*</operator><name pos:start="19:22" pos:end="19:32"><name pos:start="19:22" pos:end="19:25">left</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:32">level</name></name> <operator pos:start="19:34" pos:end="19:34">+</operator> <literal type="number" pos:start="19:36" pos:end="19:36">2</literal><operator pos:start="19:37" pos:end="19:37">*</operator><name pos:start="19:38" pos:end="19:47"><name pos:start="19:38" pos:end="19:40">top</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:47">level</name></name> <operator pos:start="19:49" pos:end="19:49">+</operator> <name pos:start="19:51" pos:end="19:59"><name pos:start="19:51" pos:end="19:52">tl</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:59">level</name></name> <operator pos:start="19:61" pos:end="19:61">+</operator> <name pos:start="19:63" pos:end="19:71"><name pos:start="19:63" pos:end="19:64">tr</name><operator pos:start="19:65" pos:end="19:66">-&gt;</operator><name pos:start="19:67" pos:end="19:71">level</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">res</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if<condition pos:start="25:7" pos:end="25:19">(<expr pos:start="25:8" pos:end="25:18"><name pos:start="25:8" pos:end="25:18"><name pos:start="25:8" pos:end="25:8">s</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:18">keyframe</name></name></expr>)</condition><block pos:start="25:20" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:17">

        <expr_stmt pos:start="27:9" pos:end="27:157"><expr pos:start="27:9" pos:end="27:156"><call pos:start="27:9" pos:end="27:156"><name pos:start="27:9" pos:end="27:18">set_blocks</name><argument_list pos:start="27:19" pos:end="27:156">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">s</name></expr></argument>, <argument pos:start="27:23" pos:end="27:27"><expr pos:start="27:23" pos:end="27:27"><name pos:start="27:23" pos:end="27:27">level</name></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">x</name></expr></argument>, <argument pos:start="27:33" pos:end="27:33"><expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">y</name></expr></argument>, <argument pos:start="27:36" pos:end="27:54"><expr pos:start="27:36" pos:end="27:54"><name pos:start="27:36" pos:end="27:54"><name pos:start="27:36" pos:end="27:45">null_block</name><operator pos:start="27:46" pos:end="27:46">.</operator><name pos:start="27:47" pos:end="27:51">color</name><index pos:start="27:52" pos:end="27:54">[<expr pos:start="27:53" pos:end="27:53"><literal type="number" pos:start="27:53" pos:end="27:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:57" pos:end="27:75"><expr pos:start="27:57" pos:end="27:75"><name pos:start="27:57" pos:end="27:75"><name pos:start="27:57" pos:end="27:66">null_block</name><operator pos:start="27:67" pos:end="27:67">.</operator><name pos:start="27:68" pos:end="27:72">color</name><index pos:start="27:73" pos:end="27:75">[<expr pos:start="27:74" pos:end="27:74"><literal type="number" pos:start="27:74" pos:end="27:74">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:78" pos:end="27:96"><expr pos:start="27:78" pos:end="27:96"><name pos:start="27:78" pos:end="27:96"><name pos:start="27:78" pos:end="27:87">null_block</name><operator pos:start="27:88" pos:end="27:88">.</operator><name pos:start="27:89" pos:end="27:93">color</name><index pos:start="27:94" pos:end="27:96">[<expr pos:start="27:95" pos:end="27:95"><literal type="number" pos:start="27:95" pos:end="27:95">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="27:99" pos:end="27:111"><expr pos:start="27:99" pos:end="27:111"><name pos:start="27:99" pos:end="27:111"><name pos:start="27:99" pos:end="27:108">null_block</name><operator pos:start="27:109" pos:end="27:109">.</operator><name pos:start="27:110" pos:end="27:111">mx</name></name></expr></argument>, <argument pos:start="27:114" pos:end="27:126"><expr pos:start="27:114" pos:end="27:126"><name pos:start="27:114" pos:end="27:126"><name pos:start="27:114" pos:end="27:123">null_block</name><operator pos:start="27:124" pos:end="27:124">.</operator><name pos:start="27:125" pos:end="27:126">my</name></name></expr></argument>, <argument pos:start="27:129" pos:end="27:142"><expr pos:start="27:129" pos:end="27:142"><name pos:start="27:129" pos:end="27:142"><name pos:start="27:129" pos:end="27:138">null_block</name><operator pos:start="27:139" pos:end="27:139">.</operator><name pos:start="27:140" pos:end="27:142">ref</name></name></expr></argument>, <argument pos:start="27:145" pos:end="27:155"><expr pos:start="27:145" pos:end="27:155"><name pos:start="27:145" pos:end="27:155">BLOCK_INTRA</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:17">return <expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="35:5" pos:end="109:5"><if pos:start="35:5" pos:end="97:5">if<condition pos:start="35:7" pos:end="35:83">(<expr pos:start="35:8" pos:end="35:82"><name pos:start="35:8" pos:end="35:12">level</name><operator pos:start="35:13" pos:end="35:14">==</operator><name pos:start="35:15" pos:end="35:32"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:32">block_max_depth</name></name> <operator pos:start="35:34" pos:end="35:35">||</operator> <call pos:start="35:37" pos:end="35:82"><name pos:start="35:37" pos:end="35:43">get_rac</name><argument_list pos:start="35:44" pos:end="35:82">(<argument pos:start="35:45" pos:end="35:49"><expr pos:start="35:45" pos:end="35:49"><operator pos:start="35:45" pos:end="35:45">&amp;</operator><name pos:start="35:46" pos:end="35:49"><name pos:start="35:46" pos:end="35:46">s</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:49">c</name></name></expr></argument>, <argument pos:start="35:52" pos:end="35:81"><expr pos:start="35:52" pos:end="35:81"><operator pos:start="35:52" pos:end="35:52">&amp;</operator><name pos:start="35:53" pos:end="35:81"><name pos:start="35:53" pos:end="35:53">s</name><operator pos:start="35:54" pos:end="35:55">-&gt;</operator><name pos:start="35:56" pos:end="35:66">block_state</name><index pos:start="35:67" pos:end="35:81">[<expr pos:start="35:68" pos:end="35:80"><literal type="number" pos:start="35:68" pos:end="35:70">4</literal> <operator pos:start="35:70" pos:end="35:70">+</operator> <name pos:start="35:72" pos:end="35:80">s_context</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="35:84" pos:end="97:5">{<block_content pos:start="37:9" pos:end="95:65">

        <decl_stmt pos:start="37:9" pos:end="37:25"><decl pos:start="37:9" pos:end="37:16"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:16">type</name></decl>, <decl pos:start="37:19" pos:end="37:20"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:19" pos:end="37:20">mx</name></decl>, <decl pos:start="37:23" pos:end="37:24"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:23" pos:end="37:24">my</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:31"><decl pos:start="39:9" pos:end="39:30"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">l</name> <init pos:start="39:15" pos:end="39:30">= <expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:20">left</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:27">color</name><index pos:start="39:28" pos:end="39:30">[<expr pos:start="39:29" pos:end="39:29"><literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:31"><decl pos:start="41:9" pos:end="41:30"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:14">cb</name><init pos:start="41:15" pos:end="41:30">= <expr pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:20">left</name><operator pos:start="41:21" pos:end="41:22">-&gt;</operator><name pos:start="41:23" pos:end="41:27">color</name><index pos:start="41:28" pos:end="41:30">[<expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:31"><decl pos:start="43:9" pos:end="43:30"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:14">cr</name><init pos:start="43:15" pos:end="43:30">= <expr pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:30"><name pos:start="43:17" pos:end="43:20">left</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:27">color</name><index pos:start="43:28" pos:end="43:30">[<expr pos:start="43:29" pos:end="43:29"><literal type="number" pos:start="43:29" pos:end="43:29">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:25"><decl pos:start="45:9" pos:end="45:24"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">unsigned</name></type> <name pos:start="45:18" pos:end="45:20">ref</name> <init pos:start="45:22" pos:end="45:24">= <expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:68"><decl pos:start="47:9" pos:end="47:67"><type pos:start="47:9" pos:end="47:11"><name pos:start="47:9" pos:end="47:11">int</name></type> <name pos:start="47:13" pos:end="47:23">ref_context</name><init pos:start="47:24" pos:end="47:67">= <expr pos:start="47:26" pos:end="47:67"><call pos:start="47:26" pos:end="47:45"><name pos:start="47:26" pos:end="47:32">av_log2</name><argument_list pos:start="47:33" pos:end="47:45">(<argument pos:start="47:34" pos:end="47:44"><expr pos:start="47:34" pos:end="47:44"><literal type="number" pos:start="47:34" pos:end="47:34">2</literal><operator pos:start="47:35" pos:end="47:35">*</operator><name pos:start="47:36" pos:end="47:44"><name pos:start="47:36" pos:end="47:39">left</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:44">ref</name></name></expr></argument>)</argument_list></call> <operator pos:start="47:47" pos:end="47:47">+</operator> <call pos:start="47:49" pos:end="47:67"><name pos:start="47:49" pos:end="47:55">av_log2</name><argument_list pos:start="47:56" pos:end="47:67">(<argument pos:start="47:57" pos:end="47:66"><expr pos:start="47:57" pos:end="47:66"><literal type="number" pos:start="47:57" pos:end="47:57">2</literal><operator pos:start="47:58" pos:end="47:58">*</operator><name pos:start="47:59" pos:end="47:66"><name pos:start="47:59" pos:end="47:61">top</name><operator pos:start="47:62" pos:end="47:63">-&gt;</operator><name pos:start="47:64" pos:end="47:66">ref</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:100"><decl pos:start="49:9" pos:end="49:99"><type pos:start="49:9" pos:end="49:11"><name pos:start="49:9" pos:end="49:11">int</name></type> <name pos:start="49:13" pos:end="49:22">mx_context</name><init pos:start="49:23" pos:end="49:99">= <expr pos:start="49:25" pos:end="49:99"><call pos:start="49:25" pos:end="49:60"><name pos:start="49:25" pos:end="49:31">av_log2</name><argument_list pos:start="49:32" pos:end="49:60">(<argument pos:start="49:33" pos:end="49:59"><expr pos:start="49:33" pos:end="49:59"><literal type="number" pos:start="49:33" pos:end="49:33">2</literal><operator pos:start="49:34" pos:end="49:34">*</operator><call pos:start="49:35" pos:end="49:59"><name pos:start="49:35" pos:end="49:39">FFABS</name><argument_list pos:start="49:40" pos:end="49:59">(<argument pos:start="49:41" pos:end="49:58"><expr pos:start="49:41" pos:end="49:58"><name pos:start="49:41" pos:end="49:48"><name pos:start="49:41" pos:end="49:44">left</name><operator pos:start="49:45" pos:end="49:46">-&gt;</operator><name pos:start="49:47" pos:end="49:48">mx</name></name> <operator pos:start="49:50" pos:end="49:50">-</operator> <name pos:start="49:52" pos:end="49:58"><name pos:start="49:52" pos:end="49:54">top</name><operator pos:start="49:55" pos:end="49:56">-&gt;</operator><name pos:start="49:57" pos:end="49:58">mx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="49:62" pos:end="49:62">+</operator> <literal type="number" pos:start="49:64" pos:end="49:64">0</literal><operator pos:start="49:65" pos:end="49:65">*</operator><call pos:start="49:66" pos:end="49:99"><name pos:start="49:66" pos:end="49:72">av_log2</name><argument_list pos:start="49:73" pos:end="49:99">(<argument pos:start="49:74" pos:end="49:98"><expr pos:start="49:74" pos:end="49:98"><literal type="number" pos:start="49:74" pos:end="49:74">2</literal><operator pos:start="49:75" pos:end="49:75">*</operator><call pos:start="49:76" pos:end="49:98"><name pos:start="49:76" pos:end="49:80">FFABS</name><argument_list pos:start="49:81" pos:end="49:98">(<argument pos:start="49:82" pos:end="49:97"><expr pos:start="49:82" pos:end="49:97"><name pos:start="49:82" pos:end="49:87"><name pos:start="49:82" pos:end="49:83">tr</name><operator pos:start="49:84" pos:end="49:85">-&gt;</operator><name pos:start="49:86" pos:end="49:87">mx</name></name> <operator pos:start="49:89" pos:end="49:89">-</operator> <name pos:start="49:91" pos:end="49:97"><name pos:start="49:91" pos:end="49:93">top</name><operator pos:start="49:94" pos:end="49:95">-&gt;</operator><name pos:start="49:96" pos:end="49:97">mx</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:100"><decl pos:start="51:9" pos:end="51:99"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:22">my_context</name><init pos:start="51:23" pos:end="51:99">= <expr pos:start="51:25" pos:end="51:99"><call pos:start="51:25" pos:end="51:60"><name pos:start="51:25" pos:end="51:31">av_log2</name><argument_list pos:start="51:32" pos:end="51:60">(<argument pos:start="51:33" pos:end="51:59"><expr pos:start="51:33" pos:end="51:59"><literal type="number" pos:start="51:33" pos:end="51:33">2</literal><operator pos:start="51:34" pos:end="51:34">*</operator><call pos:start="51:35" pos:end="51:59"><name pos:start="51:35" pos:end="51:39">FFABS</name><argument_list pos:start="51:40" pos:end="51:59">(<argument pos:start="51:41" pos:end="51:58"><expr pos:start="51:41" pos:end="51:58"><name pos:start="51:41" pos:end="51:48"><name pos:start="51:41" pos:end="51:44">left</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:48">my</name></name> <operator pos:start="51:50" pos:end="51:50">-</operator> <name pos:start="51:52" pos:end="51:58"><name pos:start="51:52" pos:end="51:54">top</name><operator pos:start="51:55" pos:end="51:56">-&gt;</operator><name pos:start="51:57" pos:end="51:58">my</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="51:62" pos:end="51:62">+</operator> <literal type="number" pos:start="51:64" pos:end="51:64">0</literal><operator pos:start="51:65" pos:end="51:65">*</operator><call pos:start="51:66" pos:end="51:99"><name pos:start="51:66" pos:end="51:72">av_log2</name><argument_list pos:start="51:73" pos:end="51:99">(<argument pos:start="51:74" pos:end="51:98"><expr pos:start="51:74" pos:end="51:98"><literal type="number" pos:start="51:74" pos:end="51:74">2</literal><operator pos:start="51:75" pos:end="51:75">*</operator><call pos:start="51:76" pos:end="51:98"><name pos:start="51:76" pos:end="51:80">FFABS</name><argument_list pos:start="51:81" pos:end="51:98">(<argument pos:start="51:82" pos:end="51:97"><expr pos:start="51:82" pos:end="51:97"><name pos:start="51:82" pos:end="51:87"><name pos:start="51:82" pos:end="51:83">tr</name><operator pos:start="51:84" pos:end="51:85">-&gt;</operator><name pos:start="51:86" pos:end="51:87">my</name></name> <operator pos:start="51:89" pos:end="51:89">-</operator> <name pos:start="51:91" pos:end="51:97"><name pos:start="51:91" pos:end="51:93">top</name><operator pos:start="51:94" pos:end="51:95">-&gt;</operator><name pos:start="51:96" pos:end="51:97">my</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:92"><expr pos:start="55:9" pos:end="55:91"><name pos:start="55:9" pos:end="55:12">type</name><operator pos:start="55:13" pos:end="55:13">=</operator> <ternary pos:start="55:15" pos:end="55:91"><condition pos:start="55:15" pos:end="55:75"><expr pos:start="55:15" pos:end="55:73"><call pos:start="55:15" pos:end="55:73"><name pos:start="55:15" pos:end="55:21">get_rac</name><argument_list pos:start="55:22" pos:end="55:73">(<argument pos:start="55:23" pos:end="55:27"><expr pos:start="55:23" pos:end="55:27"><operator pos:start="55:23" pos:end="55:23">&amp;</operator><name pos:start="55:24" pos:end="55:27"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:27">c</name></name></expr></argument>, <argument pos:start="55:30" pos:end="55:72"><expr pos:start="55:30" pos:end="55:72"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:72"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:44">block_state</name><index pos:start="55:45" pos:end="55:72">[<expr pos:start="55:46" pos:end="55:71"><literal type="number" pos:start="55:46" pos:end="55:48">1</literal> <operator pos:start="55:48" pos:end="55:48">+</operator> <name pos:start="55:50" pos:end="55:59"><name pos:start="55:50" pos:end="55:53">left</name><operator pos:start="55:54" pos:end="55:55">-&gt;</operator><name pos:start="55:56" pos:end="55:59">type</name></name> <operator pos:start="55:61" pos:end="55:61">+</operator> <name pos:start="55:63" pos:end="55:71"><name pos:start="55:63" pos:end="55:65">top</name><operator pos:start="55:66" pos:end="55:67">-&gt;</operator><name pos:start="55:68" pos:end="55:71">type</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="55:77" pos:end="55:87"> <expr pos:start="55:77" pos:end="55:87"><name pos:start="55:77" pos:end="55:87">BLOCK_INTRA</name></expr> </then><else pos:start="55:89" pos:end="55:91">: <expr pos:start="55:91" pos:end="55:91"><literal type="number" pos:start="55:91" pos:end="55:91">0</literal></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="93:9"><if pos:start="59:9" pos:end="73:9">if<condition pos:start="59:11" pos:end="59:16">(<expr pos:start="59:12" pos:end="59:15"><name pos:start="59:12" pos:end="59:15">type</name></expr>)</condition><block pos:start="59:17" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:13">

            <expr_stmt pos:start="61:13" pos:end="61:51"><expr pos:start="61:13" pos:end="61:50"><call pos:start="61:13" pos:end="61:50"><name pos:start="61:13" pos:end="61:19">pred_mv</name><argument_list pos:start="61:20" pos:end="61:50">(<argument pos:start="61:21" pos:end="61:21"><expr pos:start="61:21" pos:end="61:21"><name pos:start="61:21" pos:end="61:21">s</name></expr></argument>, <argument pos:start="61:24" pos:end="61:26"><expr pos:start="61:24" pos:end="61:26"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:26">mx</name></expr></argument>, <argument pos:start="61:29" pos:end="61:31"><expr pos:start="61:29" pos:end="61:31"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:31">my</name></expr></argument>, <argument pos:start="61:34" pos:end="61:34"><expr pos:start="61:34" pos:end="61:34"><literal type="number" pos:start="61:34" pos:end="61:34">0</literal></expr></argument>, <argument pos:start="61:37" pos:end="61:40"><expr pos:start="61:37" pos:end="61:40"><name pos:start="61:37" pos:end="61:40">left</name></expr></argument>, <argument pos:start="61:43" pos:end="61:45"><expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:45">top</name></expr></argument>, <argument pos:start="61:48" pos:end="61:49"><expr pos:start="61:48" pos:end="61:49"><name pos:start="61:48" pos:end="61:49">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:13">l</name> <operator pos:start="63:15" pos:end="63:16">+=</operator> <call pos:start="63:18" pos:end="63:58"><name pos:start="63:18" pos:end="63:27">get_symbol</name><argument_list pos:start="63:28" pos:end="63:58">(<argument pos:start="63:29" pos:end="63:33"><expr pos:start="63:29" pos:end="63:33"><operator pos:start="63:29" pos:end="63:29">&amp;</operator><name pos:start="63:30" pos:end="63:33"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:33">c</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:54"><expr pos:start="63:36" pos:end="63:54"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:54"><name pos:start="63:37" pos:end="63:37">s</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:50">block_state</name><index pos:start="63:51" pos:end="63:54">[<expr pos:start="63:52" pos:end="63:53"><literal type="number" pos:start="63:52" pos:end="63:53">32</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:57" pos:end="63:57"><expr pos:start="63:57" pos:end="63:57"><literal type="number" pos:start="63:57" pos:end="63:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="65:13" pos:end="71:13"><if pos:start="65:13" pos:end="71:13">if <condition pos:start="65:16" pos:end="65:33">(<expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:28"><name pos:start="65:17" pos:end="65:17">s</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:28">nb_planes</name></name> <operator pos:start="65:30" pos:end="65:30">&gt;</operator> <literal type="number" pos:start="65:32" pos:end="65:32">2</literal></expr>)</condition> <block pos:start="65:35" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:63">

                <expr_stmt pos:start="67:17" pos:end="67:63"><expr pos:start="67:17" pos:end="67:62"><name pos:start="67:17" pos:end="67:18">cb</name><operator pos:start="67:19" pos:end="67:20">+=</operator> <call pos:start="67:22" pos:end="67:62"><name pos:start="67:22" pos:end="67:31">get_symbol</name><argument_list pos:start="67:32" pos:end="67:62">(<argument pos:start="67:33" pos:end="67:37"><expr pos:start="67:33" pos:end="67:37"><operator pos:start="67:33" pos:end="67:33">&amp;</operator><name pos:start="67:34" pos:end="67:37"><name pos:start="67:34" pos:end="67:34">s</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:37">c</name></name></expr></argument>, <argument pos:start="67:40" pos:end="67:58"><expr pos:start="67:40" pos:end="67:58"><operator pos:start="67:40" pos:end="67:40">&amp;</operator><name pos:start="67:41" pos:end="67:58"><name pos:start="67:41" pos:end="67:41">s</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:54">block_state</name><index pos:start="67:55" pos:end="67:58">[<expr pos:start="67:56" pos:end="67:57"><literal type="number" pos:start="67:56" pos:end="67:57">64</literal></expr>]</index></name></expr></argument>, <argument pos:start="67:61" pos:end="67:61"><expr pos:start="67:61" pos:end="67:61"><literal type="number" pos:start="67:61" pos:end="67:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:63"><expr pos:start="69:17" pos:end="69:62"><name pos:start="69:17" pos:end="69:18">cr</name><operator pos:start="69:19" pos:end="69:20">+=</operator> <call pos:start="69:22" pos:end="69:62"><name pos:start="69:22" pos:end="69:31">get_symbol</name><argument_list pos:start="69:32" pos:end="69:62">(<argument pos:start="69:33" pos:end="69:37"><expr pos:start="69:33" pos:end="69:37"><operator pos:start="69:33" pos:end="69:33">&amp;</operator><name pos:start="69:34" pos:end="69:37"><name pos:start="69:34" pos:end="69:34">s</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:37">c</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:58"><expr pos:start="69:40" pos:end="69:58"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:58"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:54">block_state</name><index pos:start="69:55" pos:end="69:58">[<expr pos:start="69:56" pos:end="69:57"><literal type="number" pos:start="69:56" pos:end="69:57">96</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:61" pos:end="69:61"><expr pos:start="69:61" pos:end="69:61"><literal type="number" pos:start="69:61" pos:end="69:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if><else pos:start="73:10" pos:end="93:9">else<block pos:start="73:14" pos:end="93:9">{<block_content pos:start="75:13" pos:end="91:89">

            <if_stmt pos:start="75:13" pos:end="77:88"><if pos:start="75:13" pos:end="77:88">if<condition pos:start="75:15" pos:end="75:33">(<expr pos:start="75:16" pos:end="75:32"><name pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:28">ref_frames</name></name> <operator pos:start="75:30" pos:end="75:30">&gt;</operator> <literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:88"><block_content pos:start="77:17" pos:end="77:88">

                <expr_stmt pos:start="77:17" pos:end="77:88"><expr pos:start="77:17" pos:end="77:87"><name pos:start="77:17" pos:end="77:19">ref</name><operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:87"><name pos:start="77:22" pos:end="77:31">get_symbol</name><argument_list pos:start="77:32" pos:end="77:87">(<argument pos:start="77:33" pos:end="77:37"><expr pos:start="77:33" pos:end="77:37"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:37"><name pos:start="77:34" pos:end="77:34">s</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:37">c</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:83"><expr pos:start="77:40" pos:end="77:83"><operator pos:start="77:40" pos:end="77:40">&amp;</operator><name pos:start="77:41" pos:end="77:83"><name pos:start="77:41" pos:end="77:41">s</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:54">block_state</name><index pos:start="77:55" pos:end="77:83">[<expr pos:start="77:56" pos:end="77:82"><literal type="number" pos:start="77:56" pos:end="77:60">128</literal> <operator pos:start="77:60" pos:end="77:60">+</operator> <literal type="number" pos:start="77:62" pos:end="77:67">1024</literal> <operator pos:start="77:67" pos:end="77:67">+</operator> <literal type="number" pos:start="77:69" pos:end="77:70">32</literal><operator pos:start="77:71" pos:end="77:71">*</operator><name pos:start="77:72" pos:end="77:82">ref_context</name></expr>]</index></name></expr></argument>, <argument pos:start="77:86" pos:end="77:86"><expr pos:start="77:86" pos:end="77:86"><literal type="number" pos:start="77:86" pos:end="77:86">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="85:13"><if pos:start="79:13" pos:end="85:13">if <condition pos:start="79:16" pos:end="79:37">(<expr pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:19">ref</name> <operator pos:start="79:21" pos:end="79:22">&gt;=</operator> <name pos:start="79:24" pos:end="79:36"><name pos:start="79:24" pos:end="79:24">s</name><operator pos:start="79:25" pos:end="79:26">-&gt;</operator><name pos:start="79:27" pos:end="79:36">ref_frames</name></name></expr>)</condition> <block pos:start="79:39" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:43">

                <expr_stmt pos:start="81:17" pos:end="81:64"><expr pos:start="81:17" pos:end="81:63"><call pos:start="81:17" pos:end="81:63"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="81:63">(<argument pos:start="81:24" pos:end="81:31"><expr pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:31"><name pos:start="81:24" pos:end="81:24">s</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:31">avctx</name></name></expr></argument>, <argument pos:start="81:34" pos:end="81:45"><expr pos:start="81:34" pos:end="81:45"><name pos:start="81:34" pos:end="81:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:48" pos:end="81:62"><expr pos:start="81:48" pos:end="81:62"><literal type="string" pos:start="81:48" pos:end="81:62">"Invalid ref\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:43">return <expr pos:start="83:24" pos:end="83:42"><name pos:start="83:24" pos:end="83:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:53"><expr pos:start="87:13" pos:end="87:52"><call pos:start="87:13" pos:end="87:52"><name pos:start="87:13" pos:end="87:19">pred_mv</name><argument_list pos:start="87:20" pos:end="87:52">(<argument pos:start="87:21" pos:end="87:21"><expr pos:start="87:21" pos:end="87:21"><name pos:start="87:21" pos:end="87:21">s</name></expr></argument>, <argument pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><operator pos:start="87:24" pos:end="87:24">&amp;</operator><name pos:start="87:25" pos:end="87:26">mx</name></expr></argument>, <argument pos:start="87:29" pos:end="87:31"><expr pos:start="87:29" pos:end="87:31"><operator pos:start="87:29" pos:end="87:29">&amp;</operator><name pos:start="87:30" pos:end="87:31">my</name></expr></argument>, <argument pos:start="87:34" pos:end="87:36"><expr pos:start="87:34" pos:end="87:36"><name pos:start="87:34" pos:end="87:36">ref</name></expr></argument>, <argument pos:start="87:39" pos:end="87:42"><expr pos:start="87:39" pos:end="87:42"><name pos:start="87:39" pos:end="87:42">left</name></expr></argument>, <argument pos:start="87:45" pos:end="87:47"><expr pos:start="87:45" pos:end="87:47"><name pos:start="87:45" pos:end="87:47">top</name></expr></argument>, <argument pos:start="87:50" pos:end="87:51"><expr pos:start="87:50" pos:end="87:51"><name pos:start="87:50" pos:end="87:51">tr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:89"><expr pos:start="89:13" pos:end="89:88"><name pos:start="89:13" pos:end="89:14">mx</name><operator pos:start="89:15" pos:end="89:16">+=</operator> <call pos:start="89:18" pos:end="89:88"><name pos:start="89:18" pos:end="89:27">get_symbol</name><argument_list pos:start="89:28" pos:end="89:88">(<argument pos:start="89:29" pos:end="89:33"><expr pos:start="89:29" pos:end="89:33"><operator pos:start="89:29" pos:end="89:29">&amp;</operator><name pos:start="89:30" pos:end="89:33"><name pos:start="89:30" pos:end="89:30">s</name><operator pos:start="89:31" pos:end="89:32">-&gt;</operator><name pos:start="89:33" pos:end="89:33">c</name></name></expr></argument>, <argument pos:start="89:36" pos:end="89:84"><expr pos:start="89:36" pos:end="89:84"><operator pos:start="89:36" pos:end="89:36">&amp;</operator><name pos:start="89:37" pos:end="89:84"><name pos:start="89:37" pos:end="89:37">s</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:50">block_state</name><index pos:start="89:51" pos:end="89:84">[<expr pos:start="89:52" pos:end="89:83"><literal type="number" pos:start="89:52" pos:end="89:56">128</literal> <operator pos:start="89:56" pos:end="89:56">+</operator> <literal type="number" pos:start="89:58" pos:end="89:59">32</literal><operator pos:start="89:60" pos:end="89:60">*</operator><operator pos:start="89:61" pos:end="89:61">(</operator><name pos:start="89:62" pos:end="89:71">mx_context</name> <operator pos:start="89:73" pos:end="89:73">+</operator> <literal type="number" pos:start="89:75" pos:end="89:76">16</literal><operator pos:start="89:77" pos:end="89:77">*</operator><operator pos:start="89:78" pos:end="89:78">!</operator><operator pos:start="89:79" pos:end="89:79">!</operator><name pos:start="89:80" pos:end="89:82">ref</name><operator pos:start="89:83" pos:end="89:83">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="89:87" pos:end="89:87"><expr pos:start="89:87" pos:end="89:87"><literal type="number" pos:start="89:87" pos:end="89:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:89"><expr pos:start="91:13" pos:end="91:88"><name pos:start="91:13" pos:end="91:14">my</name><operator pos:start="91:15" pos:end="91:16">+=</operator> <call pos:start="91:18" pos:end="91:88"><name pos:start="91:18" pos:end="91:27">get_symbol</name><argument_list pos:start="91:28" pos:end="91:88">(<argument pos:start="91:29" pos:end="91:33"><expr pos:start="91:29" pos:end="91:33"><operator pos:start="91:29" pos:end="91:29">&amp;</operator><name pos:start="91:30" pos:end="91:33"><name pos:start="91:30" pos:end="91:30">s</name><operator pos:start="91:31" pos:end="91:32">-&gt;</operator><name pos:start="91:33" pos:end="91:33">c</name></name></expr></argument>, <argument pos:start="91:36" pos:end="91:84"><expr pos:start="91:36" pos:end="91:84"><operator pos:start="91:36" pos:end="91:36">&amp;</operator><name pos:start="91:37" pos:end="91:84"><name pos:start="91:37" pos:end="91:37">s</name><operator pos:start="91:38" pos:end="91:39">-&gt;</operator><name pos:start="91:40" pos:end="91:50">block_state</name><index pos:start="91:51" pos:end="91:84">[<expr pos:start="91:52" pos:end="91:83"><literal type="number" pos:start="91:52" pos:end="91:56">128</literal> <operator pos:start="91:56" pos:end="91:56">+</operator> <literal type="number" pos:start="91:58" pos:end="91:59">32</literal><operator pos:start="91:60" pos:end="91:60">*</operator><operator pos:start="91:61" pos:end="91:61">(</operator><name pos:start="91:62" pos:end="91:71">my_context</name> <operator pos:start="91:73" pos:end="91:73">+</operator> <literal type="number" pos:start="91:75" pos:end="91:76">16</literal><operator pos:start="91:77" pos:end="91:77">*</operator><operator pos:start="91:78" pos:end="91:78">!</operator><operator pos:start="91:79" pos:end="91:79">!</operator><name pos:start="91:80" pos:end="91:82">ref</name><operator pos:start="91:83" pos:end="91:83">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="91:87" pos:end="91:87"><expr pos:start="91:87" pos:end="91:87"><literal type="number" pos:start="91:87" pos:end="91:87">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:65"><expr pos:start="95:9" pos:end="95:64"><call pos:start="95:9" pos:end="95:64"><name pos:start="95:9" pos:end="95:18">set_blocks</name><argument_list pos:start="95:19" pos:end="95:64">(<argument pos:start="95:20" pos:end="95:20"><expr pos:start="95:20" pos:end="95:20"><name pos:start="95:20" pos:end="95:20">s</name></expr></argument>, <argument pos:start="95:23" pos:end="95:27"><expr pos:start="95:23" pos:end="95:27"><name pos:start="95:23" pos:end="95:27">level</name></expr></argument>, <argument pos:start="95:30" pos:end="95:30"><expr pos:start="95:30" pos:end="95:30"><name pos:start="95:30" pos:end="95:30">x</name></expr></argument>, <argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><name pos:start="95:33" pos:end="95:33">y</name></expr></argument>, <argument pos:start="95:36" pos:end="95:36"><expr pos:start="95:36" pos:end="95:36"><name pos:start="95:36" pos:end="95:36">l</name></expr></argument>, <argument pos:start="95:39" pos:end="95:40"><expr pos:start="95:39" pos:end="95:40"><name pos:start="95:39" pos:end="95:40">cb</name></expr></argument>, <argument pos:start="95:43" pos:end="95:44"><expr pos:start="95:43" pos:end="95:44"><name pos:start="95:43" pos:end="95:44">cr</name></expr></argument>, <argument pos:start="95:47" pos:end="95:48"><expr pos:start="95:47" pos:end="95:48"><name pos:start="95:47" pos:end="95:48">mx</name></expr></argument>, <argument pos:start="95:51" pos:end="95:52"><expr pos:start="95:51" pos:end="95:52"><name pos:start="95:51" pos:end="95:52">my</name></expr></argument>, <argument pos:start="95:55" pos:end="95:57"><expr pos:start="95:55" pos:end="95:57"><name pos:start="95:55" pos:end="95:57">ref</name></expr></argument>, <argument pos:start="95:60" pos:end="95:63"><expr pos:start="95:60" pos:end="95:63"><name pos:start="95:60" pos:end="95:63">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="97:6" pos:end="109:5">else<block pos:start="97:10" pos:end="109:5">{<block_content pos:start="99:9" pos:end="107:23">

        <if_stmt pos:start="99:9" pos:end="107:23"><if pos:start="99:9" pos:end="107:23">if <condition pos:start="99:12" pos:end="105:66">(<expr pos:start="99:13" pos:end="105:65"><operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:16">res</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <call pos:start="99:20" pos:end="99:60"><name pos:start="99:20" pos:end="99:34">decode_q_branch</name><argument_list pos:start="99:35" pos:end="99:60">(<argument pos:start="99:36" pos:end="99:36"><expr pos:start="99:36" pos:end="99:36"><name pos:start="99:36" pos:end="99:36">s</name></expr></argument>, <argument pos:start="99:39" pos:end="99:45"><expr pos:start="99:39" pos:end="99:45"><name pos:start="99:39" pos:end="99:43">level</name><operator pos:start="99:44" pos:end="99:44">+</operator><literal type="number" pos:start="99:45" pos:end="99:45">1</literal></expr></argument>, <argument pos:start="99:48" pos:end="99:52"><expr pos:start="99:48" pos:end="99:52"><literal type="number" pos:start="99:48" pos:end="99:48">2</literal><operator pos:start="99:49" pos:end="99:49">*</operator><name pos:start="99:50" pos:end="99:50">x</name><operator pos:start="99:51" pos:end="99:51">+</operator><literal type="number" pos:start="99:52" pos:end="99:52">0</literal></expr></argument>, <argument pos:start="99:55" pos:end="99:59"><expr pos:start="99:55" pos:end="99:59"><literal type="number" pos:start="99:55" pos:end="99:55">2</literal><operator pos:start="99:56" pos:end="99:56">*</operator><name pos:start="99:57" pos:end="99:57">y</name><operator pos:start="99:58" pos:end="99:58">+</operator><literal type="number" pos:start="99:59" pos:end="99:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="99:61" pos:end="99:61">)</operator> <operator pos:start="99:63" pos:end="99:63">&lt;</operator> <literal type="number" pos:start="99:65" pos:end="99:65">0</literal> <operator pos:start="99:67" pos:end="99:68">||</operator>

            <operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:16">res</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <call pos:start="101:20" pos:end="101:60"><name pos:start="101:20" pos:end="101:34">decode_q_branch</name><argument_list pos:start="101:35" pos:end="101:60">(<argument pos:start="101:36" pos:end="101:36"><expr pos:start="101:36" pos:end="101:36"><name pos:start="101:36" pos:end="101:36">s</name></expr></argument>, <argument pos:start="101:39" pos:end="101:45"><expr pos:start="101:39" pos:end="101:45"><name pos:start="101:39" pos:end="101:43">level</name><operator pos:start="101:44" pos:end="101:44">+</operator><literal type="number" pos:start="101:45" pos:end="101:45">1</literal></expr></argument>, <argument pos:start="101:48" pos:end="101:52"><expr pos:start="101:48" pos:end="101:52"><literal type="number" pos:start="101:48" pos:end="101:48">2</literal><operator pos:start="101:49" pos:end="101:49">*</operator><name pos:start="101:50" pos:end="101:50">x</name><operator pos:start="101:51" pos:end="101:51">+</operator><literal type="number" pos:start="101:52" pos:end="101:52">1</literal></expr></argument>, <argument pos:start="101:55" pos:end="101:59"><expr pos:start="101:55" pos:end="101:59"><literal type="number" pos:start="101:55" pos:end="101:55">2</literal><operator pos:start="101:56" pos:end="101:56">*</operator><name pos:start="101:57" pos:end="101:57">y</name><operator pos:start="101:58" pos:end="101:58">+</operator><literal type="number" pos:start="101:59" pos:end="101:59">0</literal></expr></argument>)</argument_list></call><operator pos:start="101:61" pos:end="101:61">)</operator> <operator pos:start="101:63" pos:end="101:63">&lt;</operator> <literal type="number" pos:start="101:65" pos:end="101:65">0</literal> <operator pos:start="101:67" pos:end="101:68">||</operator>

            <operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:16">res</name> <operator pos:start="103:18" pos:end="103:18">=</operator> <call pos:start="103:20" pos:end="103:60"><name pos:start="103:20" pos:end="103:34">decode_q_branch</name><argument_list pos:start="103:35" pos:end="103:60">(<argument pos:start="103:36" pos:end="103:36"><expr pos:start="103:36" pos:end="103:36"><name pos:start="103:36" pos:end="103:36">s</name></expr></argument>, <argument pos:start="103:39" pos:end="103:45"><expr pos:start="103:39" pos:end="103:45"><name pos:start="103:39" pos:end="103:43">level</name><operator pos:start="103:44" pos:end="103:44">+</operator><literal type="number" pos:start="103:45" pos:end="103:45">1</literal></expr></argument>, <argument pos:start="103:48" pos:end="103:52"><expr pos:start="103:48" pos:end="103:52"><literal type="number" pos:start="103:48" pos:end="103:48">2</literal><operator pos:start="103:49" pos:end="103:49">*</operator><name pos:start="103:50" pos:end="103:50">x</name><operator pos:start="103:51" pos:end="103:51">+</operator><literal type="number" pos:start="103:52" pos:end="103:52">0</literal></expr></argument>, <argument pos:start="103:55" pos:end="103:59"><expr pos:start="103:55" pos:end="103:59"><literal type="number" pos:start="103:55" pos:end="103:55">2</literal><operator pos:start="103:56" pos:end="103:56">*</operator><name pos:start="103:57" pos:end="103:57">y</name><operator pos:start="103:58" pos:end="103:58">+</operator><literal type="number" pos:start="103:59" pos:end="103:59">1</literal></expr></argument>)</argument_list></call><operator pos:start="103:61" pos:end="103:61">)</operator> <operator pos:start="103:63" pos:end="103:63">&lt;</operator> <literal type="number" pos:start="103:65" pos:end="103:65">0</literal> <operator pos:start="103:67" pos:end="103:68">||</operator>

            <operator pos:start="105:13" pos:end="105:13">(</operator><name pos:start="105:14" pos:end="105:16">res</name> <operator pos:start="105:18" pos:end="105:18">=</operator> <call pos:start="105:20" pos:end="105:60"><name pos:start="105:20" pos:end="105:34">decode_q_branch</name><argument_list pos:start="105:35" pos:end="105:60">(<argument pos:start="105:36" pos:end="105:36"><expr pos:start="105:36" pos:end="105:36"><name pos:start="105:36" pos:end="105:36">s</name></expr></argument>, <argument pos:start="105:39" pos:end="105:45"><expr pos:start="105:39" pos:end="105:45"><name pos:start="105:39" pos:end="105:43">level</name><operator pos:start="105:44" pos:end="105:44">+</operator><literal type="number" pos:start="105:45" pos:end="105:45">1</literal></expr></argument>, <argument pos:start="105:48" pos:end="105:52"><expr pos:start="105:48" pos:end="105:52"><literal type="number" pos:start="105:48" pos:end="105:48">2</literal><operator pos:start="105:49" pos:end="105:49">*</operator><name pos:start="105:50" pos:end="105:50">x</name><operator pos:start="105:51" pos:end="105:51">+</operator><literal type="number" pos:start="105:52" pos:end="105:52">1</literal></expr></argument>, <argument pos:start="105:55" pos:end="105:59"><expr pos:start="105:55" pos:end="105:59"><literal type="number" pos:start="105:55" pos:end="105:55">2</literal><operator pos:start="105:56" pos:end="105:56">*</operator><name pos:start="105:57" pos:end="105:57">y</name><operator pos:start="105:58" pos:end="105:58">+</operator><literal type="number" pos:start="105:59" pos:end="105:59">1</literal></expr></argument>)</argument_list></call><operator pos:start="105:61" pos:end="105:61">)</operator> <operator pos:start="105:63" pos:end="105:63">&lt;</operator> <literal type="number" pos:start="105:65" pos:end="105:65">0</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:23"><block_content pos:start="107:13" pos:end="107:23">

            <return pos:start="107:13" pos:end="107:23">return <expr pos:start="107:20" pos:end="107:22"><name pos:start="107:20" pos:end="107:22">res</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
