<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16686.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:17">unpack</name><parameter_list pos:start="1:18" pos:end="1:104">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:36"><specifier pos:start="1:19" pos:end="1:23">const</specifier> <name pos:start="1:25" pos:end="1:31">uint8_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">src</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:60"><decl pos:start="1:39" pos:end="1:60"><type pos:start="1:39" pos:end="1:60"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:51">uint8_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">src_end</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:80"><decl pos:start="1:63" pos:end="1:80"><type pos:start="1:63" pos:end="1:80"><name pos:start="1:63" pos:end="1:70">unsigned</name> <name pos:start="1:72" pos:end="1:75">char</name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:80">dst</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:91"><decl pos:start="1:83" pos:end="1:91"><type pos:start="1:83" pos:end="1:91"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:91">width</name></decl></parameter>, <parameter pos:start="1:94" pos:end="1:103"><decl pos:start="1:94" pos:end="1:103"><type pos:start="1:94" pos:end="1:103"><name pos:start="1:94" pos:end="1:96">int</name></type> <name pos:start="1:98" pos:end="1:103">height</name></decl></parameter>)</parameter_list> <block pos:start="1:106" pos:end="135:1">{<block_content pos:start="3:5" pos:end="133:13">

    <decl_stmt pos:start="3:5" pos:end="3:48"><decl pos:start="3:5" pos:end="3:47"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:12">unsigned</name> <name pos:start="3:14" pos:end="3:17">char</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:26">dst_end</name> <init pos:start="3:28" pos:end="3:47">= <expr pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">dst</name> <operator pos:start="3:34" pos:end="3:34">+</operator> <name pos:start="3:36" pos:end="3:40">width</name><operator pos:start="3:41" pos:end="3:41">*</operator><name pos:start="3:42" pos:end="3:47">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>,<decl pos:start="5:14" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:18">size1</name></decl>,<decl pos:start="5:20" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:20" pos:end="5:24">size2</name></decl>,<decl pos:start="5:26" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:26" pos:end="5:31">offset</name></decl>,<decl pos:start="5:33" pos:end="5:35"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:35">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:28">dst_start</name> <init pos:start="7:30" pos:end="7:34">= <expr pos:start="7:32" pos:end="7:34"><name pos:start="7:32" pos:end="7:34">dst</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="17:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">src</name><index pos:start="11:12" pos:end="11:14">[<expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr>]</index></name> <operator pos:start="11:16" pos:end="11:16">&amp;</operator> <literal type="number" pos:start="11:18" pos:end="11:21">0x01</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <expr_stmt pos:start="13:9" pos:end="13:17"><expr pos:start="13:9" pos:end="13:16"><name pos:start="13:9" pos:end="13:11">src</name> <operator pos:start="13:13" pos:end="13:14">+=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">5</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="15:5" pos:end="17:17">else<block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <expr_stmt pos:start="17:9" pos:end="17:17"><expr pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:11">src</name> <operator pos:start="17:13" pos:end="17:14">+=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:22">(<expr pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:11">src</name><operator pos:start="21:12" pos:end="21:12">+</operator><literal type="number" pos:start="21:13" pos:end="21:13">3</literal><operator pos:start="21:14" pos:end="21:14">&gt;</operator><name pos:start="21:15" pos:end="21:21">src_end</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:8">size</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:23"><name pos:start="25:12" pos:end="25:18">AV_RB24</name><argument_list pos:start="25:19" pos:end="25:23">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><name pos:start="25:20" pos:end="25:22">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:13"><expr pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:7">src</name> <operator pos:start="27:9" pos:end="27:10">+=</operator> <literal type="number" pos:start="27:12" pos:end="27:12">3</literal></expr>;</expr_stmt>



    <while pos:start="31:5" pos:end="129:5">while<condition pos:start="31:10" pos:end="31:32">(<expr pos:start="31:11" pos:end="31:31"><name pos:start="31:11" pos:end="31:14">size</name><operator pos:start="31:15" pos:end="31:15">&gt;</operator><literal type="number" pos:start="31:16" pos:end="31:16">0</literal> <operator pos:start="31:18" pos:end="31:19">&amp;&amp;</operator> <name pos:start="31:21" pos:end="31:23">src</name><operator pos:start="31:24" pos:end="31:24">&lt;</operator><name pos:start="31:25" pos:end="31:31">src_end</name></expr>)</condition> <block pos:start="31:34" pos:end="129:5">{<block_content pos:start="37:9" pos:end="127:9">



        <comment type="block" pos:start="35:9" pos:end="35:39">/* determine size1 and size2 */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:13">size1</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:23"><name pos:start="37:18" pos:end="37:20">src</name><index pos:start="37:21" pos:end="37:23">[<expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">0</literal></expr>]</index></name> <operator pos:start="37:25" pos:end="37:25">&amp;</operator> <literal type="number" pos:start="37:27" pos:end="37:27">3</literal><operator pos:start="37:28" pos:end="37:28">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="83:9"><if pos:start="39:9" pos:end="75:9">if <condition pos:start="39:12" pos:end="39:28">( <expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:19"><name pos:start="39:14" pos:end="39:16">src</name><index pos:start="39:17" pos:end="39:19">[<expr pos:start="39:18" pos:end="39:18"><literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>]</index></name> <operator pos:start="39:21" pos:end="39:21">&amp;</operator> <literal type="number" pos:start="39:23" pos:end="39:26">0x80</literal></expr> )</condition> <block pos:start="39:30" pos:end="75:9">{<block_content pos:start="41:13" pos:end="73:13">  <comment type="line" pos:start="39:33" pos:end="39:36">// 1</comment>

            <if_stmt pos:start="41:13" pos:end="73:13"><if pos:start="41:13" pos:end="63:13">if <condition pos:start="41:16" pos:end="41:31">(<expr pos:start="41:17" pos:end="41:29"><name pos:start="41:17" pos:end="41:22"><name pos:start="41:17" pos:end="41:19">src</name><index pos:start="41:20" pos:end="41:22">[<expr pos:start="41:21" pos:end="41:21"><literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr>]</index></name> <operator pos:start="41:24" pos:end="41:24">&amp;</operator> <literal type="number" pos:start="41:26" pos:end="41:29">0x40</literal></expr> )</condition> <block pos:start="41:33" pos:end="63:13">{<block_content pos:start="43:17" pos:end="61:17">  <comment type="line" pos:start="41:36" pos:end="41:40">// 11</comment>

                <if_stmt pos:start="43:17" pos:end="61:17"><if pos:start="43:17" pos:end="53:17">if <condition pos:start="43:20" pos:end="43:36">( <expr pos:start="43:22" pos:end="43:34"><name pos:start="43:22" pos:end="43:27"><name pos:start="43:22" pos:end="43:24">src</name><index pos:start="43:25" pos:end="43:27">[<expr pos:start="43:26" pos:end="43:26"><literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>]</index></name> <operator pos:start="43:29" pos:end="43:29">&amp;</operator> <literal type="number" pos:start="43:31" pos:end="43:34">0x20</literal></expr> )</condition> <block pos:start="43:38" pos:end="53:17">{<block_content pos:start="45:21" pos:end="51:30">  <comment type="line" pos:start="43:41" pos:end="43:46">// 111</comment>

                    <if_stmt pos:start="45:21" pos:end="47:59"><if pos:start="45:21" pos:end="47:59">if <condition pos:start="45:24" pos:end="45:40">( <expr pos:start="45:26" pos:end="45:38"><name pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:28">src</name><index pos:start="45:29" pos:end="45:31">[<expr pos:start="45:30" pos:end="45:30"><literal type="number" pos:start="45:30" pos:end="45:30">0</literal></expr>]</index></name> <operator pos:start="45:33" pos:end="45:33">&lt;</operator> <literal type="number" pos:start="45:35" pos:end="45:38">0xFC</literal></expr> )</condition><block type="pseudo" pos:start="47:25" pos:end="47:59"><block_content pos:start="47:25" pos:end="47:59">  <comment type="line" pos:start="45:43" pos:end="45:54">// !(111111)</comment>

                        <expr_stmt pos:start="47:25" pos:end="47:59"><expr pos:start="47:25" pos:end="47:58"><name pos:start="47:25" pos:end="47:29">size1</name> <operator pos:start="47:31" pos:end="47:31">=</operator> <operator pos:start="47:33" pos:end="47:33">(</operator><operator pos:start="47:34" pos:end="47:34">(</operator><operator pos:start="47:35" pos:end="47:35">(</operator><name pos:start="47:36" pos:end="47:41"><name pos:start="47:36" pos:end="47:38">src</name><index pos:start="47:39" pos:end="47:41">[<expr pos:start="47:40" pos:end="47:40"><literal type="number" pos:start="47:40" pos:end="47:40">0</literal></expr>]</index></name> <operator pos:start="47:43" pos:end="47:43">&amp;</operator> <literal type="number" pos:start="47:45" pos:end="47:46">31</literal><operator pos:start="47:47" pos:end="47:47">)</operator> <operator pos:start="47:49" pos:end="47:49">+</operator> <literal type="number" pos:start="47:51" pos:end="47:51">1</literal><operator pos:start="47:52" pos:end="47:52">)</operator> <operator pos:start="47:54" pos:end="47:55">&lt;&lt;</operator> <literal type="number" pos:start="47:57" pos:end="47:57">2</literal><operator pos:start="47:58" pos:end="47:58">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="49:21" pos:end="49:26"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:23">src</name><operator pos:start="49:24" pos:end="49:25">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="51:21" pos:end="51:30"><expr pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:25">size2</name> <operator pos:start="51:27" pos:end="51:27">=</operator> <literal type="number" pos:start="51:29" pos:end="51:29">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="53:19" pos:end="61:17">else <block pos:start="53:24" pos:end="61:17">{<block_content pos:start="55:21" pos:end="59:29">  <comment type="line" pos:start="53:27" pos:end="53:32">// 110</comment>

                    <expr_stmt pos:start="55:21" pos:end="55:76"><expr pos:start="55:21" pos:end="55:75"><name pos:start="55:21" pos:end="55:26">offset</name> <operator pos:start="55:28" pos:end="55:28">=</operator> <operator pos:start="55:30" pos:end="55:30">(</operator><operator pos:start="55:31" pos:end="55:31">(</operator><name pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:34">src</name><index pos:start="55:35" pos:end="55:37">[<expr pos:start="55:36" pos:end="55:36"><literal type="number" pos:start="55:36" pos:end="55:36">0</literal></expr>]</index></name> <operator pos:start="55:39" pos:end="55:39">&amp;</operator> <literal type="number" pos:start="55:41" pos:end="55:44">0x10</literal><operator pos:start="55:45" pos:end="55:45">)</operator> <operator pos:start="55:47" pos:end="55:48">&lt;&lt;</operator> <literal type="number" pos:start="55:50" pos:end="55:51">12</literal><operator pos:start="55:52" pos:end="55:52">)</operator> <operator pos:start="55:54" pos:end="55:54">+</operator> <call pos:start="55:56" pos:end="55:71"><name pos:start="55:56" pos:end="55:62">AV_RB16</name><argument_list pos:start="55:63" pos:end="55:71">(<argument pos:start="55:64" pos:end="55:70"><expr pos:start="55:64" pos:end="55:70"><operator pos:start="55:64" pos:end="55:64">&amp;</operator><name pos:start="55:65" pos:end="55:70"><name pos:start="55:65" pos:end="55:67">src</name><index pos:start="55:68" pos:end="55:70">[<expr pos:start="55:69" pos:end="55:69"><literal type="number" pos:start="55:69" pos:end="55:69">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="55:73" pos:end="55:73">+</operator> <literal type="number" pos:start="55:75" pos:end="55:75">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="57:21" pos:end="57:63"><expr pos:start="57:21" pos:end="57:62"><name pos:start="57:21" pos:end="57:25">size2</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <operator pos:start="57:29" pos:end="57:29">(</operator><operator pos:start="57:30" pos:end="57:30">(</operator><name pos:start="57:31" pos:end="57:36"><name pos:start="57:31" pos:end="57:33">src</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr>]</index></name> <operator pos:start="57:38" pos:end="57:38">&amp;</operator> <literal type="number" pos:start="57:40" pos:end="57:42">0xC</literal><operator pos:start="57:43" pos:end="57:43">)</operator> <operator pos:start="57:45" pos:end="57:46">&lt;&lt;</operator> <literal type="number" pos:start="57:48" pos:end="57:48">6</literal><operator pos:start="57:49" pos:end="57:49">)</operator> <operator pos:start="57:51" pos:end="57:51">+</operator> <name pos:start="57:53" pos:end="57:58"><name pos:start="57:53" pos:end="57:55">src</name><index pos:start="57:56" pos:end="57:58">[<expr pos:start="57:57" pos:end="57:57"><literal type="number" pos:start="57:57" pos:end="57:57">3</literal></expr>]</index></name> <operator pos:start="57:60" pos:end="57:60">+</operator> <literal type="number" pos:start="57:62" pos:end="57:62">5</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="59:21" pos:end="59:29"><expr pos:start="59:21" pos:end="59:28"><name pos:start="59:21" pos:end="59:23">src</name> <operator pos:start="59:25" pos:end="59:26">+=</operator> <literal type="number" pos:start="59:28" pos:end="59:28">4</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="63:15" pos:end="73:13">else <block pos:start="63:20" pos:end="73:13">{<block_content pos:start="65:17" pos:end="71:25">  <comment type="line" pos:start="63:23" pos:end="63:27">// 10</comment>

                <expr_stmt pos:start="65:17" pos:end="65:50"><expr pos:start="65:17" pos:end="65:49"><name pos:start="65:17" pos:end="65:21">size1</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <operator pos:start="65:25" pos:end="65:25">(</operator> <operator pos:start="65:27" pos:end="65:27">(</operator> <name pos:start="65:29" pos:end="65:34"><name pos:start="65:29" pos:end="65:31">src</name><index pos:start="65:32" pos:end="65:34">[<expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">1</literal></expr>]</index></name> <operator pos:start="65:36" pos:end="65:36">&amp;</operator> <literal type="number" pos:start="65:38" pos:end="65:41">0xC0</literal><operator pos:start="65:42" pos:end="65:42">)</operator> <operator pos:start="65:44" pos:end="65:45">&gt;&gt;</operator> <literal type="number" pos:start="65:47" pos:end="65:47">6</literal> <operator pos:start="65:49" pos:end="65:49">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="67:17" pos:end="67:57"><expr pos:start="67:17" pos:end="67:56"><name pos:start="67:17" pos:end="67:22">offset</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <operator pos:start="67:26" pos:end="67:26">(</operator><call pos:start="67:27" pos:end="67:42"><name pos:start="67:27" pos:end="67:33">AV_RB16</name><argument_list pos:start="67:34" pos:end="67:42">(<argument pos:start="67:35" pos:end="67:41"><expr pos:start="67:35" pos:end="67:41"><operator pos:start="67:35" pos:end="67:35">&amp;</operator><name pos:start="67:36" pos:end="67:41"><name pos:start="67:36" pos:end="67:38">src</name><index pos:start="67:39" pos:end="67:41">[<expr pos:start="67:40" pos:end="67:40"><literal type="number" pos:start="67:40" pos:end="67:40">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="67:44" pos:end="67:44">&amp;</operator> <literal type="number" pos:start="67:46" pos:end="67:51">0x3FFF</literal><operator pos:start="67:52" pos:end="67:52">)</operator> <operator pos:start="67:54" pos:end="67:54">+</operator> <literal type="number" pos:start="67:56" pos:end="67:56">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:44"><expr pos:start="69:17" pos:end="69:43"><name pos:start="69:17" pos:end="69:21">size2</name> <operator pos:start="69:23" pos:end="69:23">=</operator> <operator pos:start="69:25" pos:end="69:25">(</operator><name pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:28">src</name><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">0</literal></expr>]</index></name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <literal type="number" pos:start="69:35" pos:end="69:38">0x3F</literal><operator pos:start="69:39" pos:end="69:39">)</operator> <operator pos:start="69:41" pos:end="69:41">+</operator> <literal type="number" pos:start="69:43" pos:end="69:43">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:25"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:19">src</name> <operator pos:start="71:21" pos:end="71:22">+=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">3</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="83:9">else <block pos:start="75:16" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:21">  <comment type="line" pos:start="75:19" pos:end="75:22">// 0</comment>

            <expr_stmt pos:start="77:13" pos:end="77:57"><expr pos:start="77:13" pos:end="77:56"><name pos:start="77:13" pos:end="77:18">offset</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <operator pos:start="77:22" pos:end="77:22">(</operator><operator pos:start="77:23" pos:end="77:23">(</operator><name pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:26">src</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>]</index></name> <operator pos:start="77:31" pos:end="77:31">&amp;</operator> <literal type="number" pos:start="77:33" pos:end="77:36">0x60</literal><operator pos:start="77:37" pos:end="77:37">)</operator> <operator pos:start="77:39" pos:end="77:40">&lt;&lt;</operator> <literal type="number" pos:start="77:42" pos:end="77:42">3</literal><operator pos:start="77:43" pos:end="77:43">)</operator> <operator pos:start="77:45" pos:end="77:45">+</operator> <name pos:start="77:47" pos:end="77:52"><name pos:start="77:47" pos:end="77:49">src</name><index pos:start="77:50" pos:end="77:52">[<expr pos:start="77:51" pos:end="77:51"><literal type="number" pos:start="77:51" pos:end="77:51">1</literal></expr>]</index></name> <operator pos:start="77:54" pos:end="77:54">+</operator> <literal type="number" pos:start="77:56" pos:end="77:56">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:47"><expr pos:start="79:13" pos:end="79:46"><name pos:start="79:13" pos:end="79:17">size2</name> <operator pos:start="79:19" pos:end="79:19">=</operator> <operator pos:start="79:21" pos:end="79:21">(</operator><operator pos:start="79:22" pos:end="79:22">(</operator><name pos:start="79:23" pos:end="79:28"><name pos:start="79:23" pos:end="79:25">src</name><index pos:start="79:26" pos:end="79:28">[<expr pos:start="79:27" pos:end="79:27"><literal type="number" pos:start="79:27" pos:end="79:27">0</literal></expr>]</index></name> <operator pos:start="79:30" pos:end="79:30">&amp;</operator> <literal type="number" pos:start="79:32" pos:end="79:35">0x1C</literal><operator pos:start="79:36" pos:end="79:36">)</operator> <operator pos:start="79:38" pos:end="79:39">&gt;&gt;</operator> <literal type="number" pos:start="79:41" pos:end="79:41">2</literal><operator pos:start="79:42" pos:end="79:42">)</operator> <operator pos:start="79:44" pos:end="79:44">+</operator> <literal type="number" pos:start="79:46" pos:end="79:46">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:21"><expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:15">src</name> <operator pos:start="81:17" pos:end="81:18">+=</operator> <literal type="number" pos:start="81:20" pos:end="81:20">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>





        <comment type="block" pos:start="89:9" pos:end="89:34">/* fetch strip from src */</comment>

        <if_stmt pos:start="91:9" pos:end="93:18"><if pos:start="91:9" pos:end="93:18">if <condition pos:start="91:12" pos:end="91:30">(<expr pos:start="91:13" pos:end="91:29"><name pos:start="91:13" pos:end="91:17">size1</name><operator pos:start="91:18" pos:end="91:18">&gt;</operator><name pos:start="91:19" pos:end="91:25">src_end</name><operator pos:start="91:26" pos:end="91:26">-</operator><name pos:start="91:27" pos:end="91:29">src</name></expr>)</condition><block type="pseudo" pos:start="93:13" pos:end="93:18"><block_content pos:start="93:13" pos:end="93:18">

            <break pos:start="93:13" pos:end="93:18">break;</break></block_content></block></if></if_stmt>



        <if_stmt pos:start="97:9" pos:end="109:9"><if pos:start="97:9" pos:end="109:9">if <condition pos:start="97:12" pos:end="97:20">(<expr pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:17">size1</name><operator pos:start="97:18" pos:end="97:18">&gt;</operator><literal type="number" pos:start="97:19" pos:end="97:19">0</literal></expr>)</condition> <block pos:start="97:22" pos:end="109:9">{<block_content pos:start="99:13" pos:end="107:23">

            <expr_stmt pos:start="99:13" pos:end="99:26"><expr pos:start="99:13" pos:end="99:25"><name pos:start="99:13" pos:end="99:16">size</name> <operator pos:start="99:18" pos:end="99:19">-=</operator> <name pos:start="99:21" pos:end="99:25">size1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:44"><expr pos:start="101:13" pos:end="101:43"><name pos:start="101:13" pos:end="101:15">run</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:43"><name pos:start="101:19" pos:end="101:23">FFMIN</name><argument_list pos:start="101:24" pos:end="101:43">(<argument pos:start="101:25" pos:end="101:29"><expr pos:start="101:25" pos:end="101:29"><name pos:start="101:25" pos:end="101:29">size1</name></expr></argument>, <argument pos:start="101:32" pos:end="101:42"><expr pos:start="101:32" pos:end="101:42"><name pos:start="101:32" pos:end="101:38">dst_end</name><operator pos:start="101:39" pos:end="101:39">-</operator><name pos:start="101:40" pos:end="101:42">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><call pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:18">memcpy</name><argument_list pos:start="103:19" pos:end="103:33">(<argument pos:start="103:20" pos:end="103:22"><expr pos:start="103:20" pos:end="103:22"><name pos:start="103:20" pos:end="103:22">dst</name></expr></argument>, <argument pos:start="103:25" pos:end="103:27"><expr pos:start="103:25" pos:end="103:27"><name pos:start="103:25" pos:end="103:27">src</name></expr></argument>, <argument pos:start="103:30" pos:end="103:32"><expr pos:start="103:30" pos:end="103:32"><name pos:start="103:30" pos:end="103:32">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:23"><expr pos:start="105:13" pos:end="105:22"><name pos:start="105:13" pos:end="105:15">dst</name> <operator pos:start="105:17" pos:end="105:18">+=</operator> <name pos:start="105:20" pos:end="105:22">run</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:23"><expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:15">src</name> <operator pos:start="107:17" pos:end="107:18">+=</operator> <name pos:start="107:20" pos:end="107:22">run</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="113:9" pos:end="127:9"><if pos:start="113:9" pos:end="127:9">if <condition pos:start="113:12" pos:end="113:20">(<expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:17">size2</name><operator pos:start="113:18" pos:end="113:18">&gt;</operator><literal type="number" pos:start="113:19" pos:end="113:19">0</literal></expr>)</condition> <block pos:start="113:22" pos:end="127:9">{<block_content pos:start="115:13" pos:end="125:23">

            <if_stmt pos:start="115:13" pos:end="117:25"><if pos:start="115:13" pos:end="117:25">if <condition pos:start="115:16" pos:end="115:37">(<expr pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:19">dst</name><operator pos:start="115:20" pos:end="115:20">-</operator><name pos:start="115:21" pos:end="115:29">dst_start</name><operator pos:start="115:30" pos:end="115:30">&lt;</operator><name pos:start="115:31" pos:end="115:36">offset</name></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:25"><block_content pos:start="117:17" pos:end="117:25">

                <return pos:start="117:17" pos:end="117:25">return <expr pos:start="117:24" pos:end="117:24"><literal type="number" pos:start="117:24" pos:end="117:24">0</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:26"><expr pos:start="119:13" pos:end="119:25"><name pos:start="119:13" pos:end="119:16">size</name> <operator pos:start="119:18" pos:end="119:19">-=</operator> <name pos:start="119:21" pos:end="119:25">size2</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:44"><expr pos:start="121:13" pos:end="121:43"><name pos:start="121:13" pos:end="121:15">run</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:43"><name pos:start="121:19" pos:end="121:23">FFMIN</name><argument_list pos:start="121:24" pos:end="121:43">(<argument pos:start="121:25" pos:end="121:29"><expr pos:start="121:25" pos:end="121:29"><name pos:start="121:25" pos:end="121:29">size2</name></expr></argument>, <argument pos:start="121:32" pos:end="121:42"><expr pos:start="121:32" pos:end="121:42"><name pos:start="121:32" pos:end="121:38">dst_end</name><operator pos:start="121:39" pos:end="121:39">-</operator><name pos:start="121:40" pos:end="121:42">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:48"><expr pos:start="123:13" pos:end="123:47"><call pos:start="123:13" pos:end="123:47"><name pos:start="123:13" pos:end="123:29">av_memcpy_backptr</name><argument_list pos:start="123:30" pos:end="123:47">(<argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:33">dst</name></expr></argument>, <argument pos:start="123:36" pos:end="123:41"><expr pos:start="123:36" pos:end="123:41"><name pos:start="123:36" pos:end="123:41">offset</name></expr></argument>, <argument pos:start="123:44" pos:end="123:46"><expr pos:start="123:44" pos:end="123:46"><name pos:start="123:44" pos:end="123:46">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:23"><expr pos:start="125:13" pos:end="125:22"><name pos:start="125:13" pos:end="125:15">dst</name> <operator pos:start="125:17" pos:end="125:18">+=</operator> <name pos:start="125:20" pos:end="125:22">run</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
