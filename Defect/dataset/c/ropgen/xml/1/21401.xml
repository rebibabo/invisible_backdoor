<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21401.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">set_params</name><parameter_list pos:start="1:22" pos:end="1:63">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:37">AVFilterContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">ctx</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:62"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">params</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="65:1">{<block_content pos:start="3:5" pos:end="64:5">
    <decl_stmt pos:start="3:5" pos:end="3:38"><decl pos:start="3:5" pos:end="3:37"><type pos:start="3:5" pos:end="3:19"><name pos:start="3:5" pos:end="3:17">Frei0rContext</name> <modifier pos:start="3:19" pos:end="3:19">*</modifier></type><name pos:start="3:20" pos:end="3:25">frei0r</name> <init pos:start="3:27" pos:end="3:37">= <expr pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:37"><name pos:start="3:29" pos:end="3:31">ctx</name><operator pos:start="3:32" pos:end="3:33">-&gt;</operator><name pos:start="3:34" pos:end="3:37">priv</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:10"><decl pos:start="4:5" pos:end="4:9"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:9">i</name></decl>;</decl_stmt>
    <for pos:start="5:5" pos:end="64:5">for <control pos:start="5:9" pos:end="5:56">(<init pos:start="5:10" pos:end="5:15"><expr pos:start="5:10" pos:end="5:14"><name pos:start="5:10" pos:end="5:10">i</name> <operator pos:start="5:12" pos:end="5:12">=</operator> <literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr>;</init> <condition pos:start="5:17" pos:end="5:51"><expr pos:start="5:17" pos:end="5:50"><name pos:start="5:17" pos:end="5:17">i</name> <operator pos:start="5:19" pos:end="5:19">&lt;</operator> <name pos:start="5:21" pos:end="5:50"><name pos:start="5:21" pos:end="5:26">frei0r</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:39">plugin_info</name><operator pos:start="5:40" pos:end="5:40">.</operator><name pos:start="5:41" pos:end="5:50">num_params</name></name></expr>;</condition> <incr pos:start="5:53" pos:end="5:55"><expr pos:start="5:53" pos:end="5:55"><name pos:start="5:53" pos:end="5:53">i</name><operator pos:start="5:54" pos:end="5:55">++</operator></expr></incr>)</control> <block pos:start="5:58" pos:end="64:5">{<block_content pos:start="6:9" pos:end="63:42">
        <decl_stmt pos:start="6:9" pos:end="6:30"><decl pos:start="6:9" pos:end="6:29"><type pos:start="6:9" pos:end="6:24"><name pos:start="6:9" pos:end="6:24">f0r_param_info_t</name></type> <name pos:start="6:26" pos:end="6:29">info</name></decl>;</decl_stmt>
        <decl_stmt pos:start="7:9" pos:end="7:20"><decl pos:start="7:9" pos:end="7:19"><type pos:start="7:9" pos:end="7:14"><name pos:start="7:9" pos:end="7:12">char</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:19">param</name></decl>;</decl_stmt>
        <decl_stmt pos:start="8:9" pos:end="8:16"><decl pos:start="8:9" pos:end="8:15"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:15">ret</name></decl>;</decl_stmt>
        <expr_stmt pos:start="9:9" pos:end="9:41"><expr pos:start="9:9" pos:end="9:40"><call pos:start="9:9" pos:end="9:40"><name pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:14">frei0r</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:30">get_param_info</name></name><argument_list pos:start="9:31" pos:end="9:40">(<argument pos:start="9:32" pos:end="9:36"><expr pos:start="9:32" pos:end="9:36"><operator pos:start="9:32" pos:end="9:32">&amp;</operator><name pos:start="9:33" pos:end="9:36">info</name></expr></argument>, <argument pos:start="9:39" pos:end="9:39"><expr pos:start="9:39" pos:end="9:39"><name pos:start="9:39" pos:end="9:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="10:9" pos:end="18:9"><if pos:start="10:9" pos:end="18:9">if <condition pos:start="10:12" pos:end="10:20">(<expr pos:start="10:13" pos:end="10:19"><operator pos:start="10:13" pos:end="10:13">*</operator><name pos:start="10:14" pos:end="10:19">params</name></expr>)</condition> <block pos:start="10:22" pos:end="18:9">{<block_content pos:start="11:13" pos:end="17:27">
            <if_stmt pos:start="11:13" pos:end="12:39"><if pos:start="11:13" pos:end="12:39">if <condition pos:start="11:16" pos:end="11:54">(<expr pos:start="11:17" pos:end="11:53"><operator pos:start="11:17" pos:end="11:17">!</operator><operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:23">param</name> <operator pos:start="11:25" pos:end="11:25">=</operator> <call pos:start="11:27" pos:end="11:52"><name pos:start="11:27" pos:end="11:38">av_get_token</name><argument_list pos:start="11:39" pos:end="11:52">(<argument pos:start="11:40" pos:end="11:46"><expr pos:start="11:40" pos:end="11:46"><operator pos:start="11:40" pos:end="11:40">&amp;</operator><name pos:start="11:41" pos:end="11:46">params</name></expr></argument>, <argument pos:start="11:49" pos:end="11:51"><expr pos:start="11:49" pos:end="11:51"><literal type="string" pos:start="11:49" pos:end="11:51">"|"</literal></expr></argument>)</argument_list></call><operator pos:start="11:53" pos:end="11:53">)</operator></expr>)</condition><block type="pseudo" pos:start="12:17" pos:end="12:39"><block_content pos:start="12:17" pos:end="12:39">
                <return pos:start="12:17" pos:end="12:39">return <expr pos:start="12:24" pos:end="12:38"><call pos:start="12:24" pos:end="12:38"><name pos:start="12:24" pos:end="12:30">AVERROR</name><argument_list pos:start="12:31" pos:end="12:38">(<argument pos:start="12:32" pos:end="12:37"><expr pos:start="12:32" pos:end="12:37"><name pos:start="12:32" pos:end="12:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
            <expr_stmt pos:start="13:13" pos:end="13:21"><expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:18">params</name><operator pos:start="13:19" pos:end="13:20">++</operator></expr>;</expr_stmt>               <comment type="block" pos:start="13:37" pos:end="13:50">/* skip ':' */</comment>
            <expr_stmt pos:start="14:13" pos:end="14:49"><expr pos:start="14:13" pos:end="14:48"><name pos:start="14:13" pos:end="14:15">ret</name> <operator pos:start="14:17" pos:end="14:17">=</operator> <call pos:start="14:19" pos:end="14:48"><name pos:start="14:19" pos:end="14:27">set_param</name><argument_list pos:start="14:28" pos:end="14:48">(<argument pos:start="14:29" pos:end="14:31"><expr pos:start="14:29" pos:end="14:31"><name pos:start="14:29" pos:end="14:31">ctx</name></expr></argument>, <argument pos:start="14:34" pos:end="14:37"><expr pos:start="14:34" pos:end="14:37"><name pos:start="14:34" pos:end="14:37">info</name></expr></argument>, <argument pos:start="14:40" pos:end="14:40"><expr pos:start="14:40" pos:end="14:40"><name pos:start="14:40" pos:end="14:40">i</name></expr></argument>, <argument pos:start="14:43" pos:end="14:47"><expr pos:start="14:43" pos:end="14:47"><name pos:start="14:43" pos:end="14:47">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="15:13" pos:end="15:27"><expr pos:start="15:13" pos:end="15:26"><call pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:19">av_free</name><argument_list pos:start="15:20" pos:end="15:26">(<argument pos:start="15:21" pos:end="15:25"><expr pos:start="15:21" pos:end="15:25"><name pos:start="15:21" pos:end="15:25">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="16:13" pos:end="17:27"><if pos:start="16:13" pos:end="17:27">if <condition pos:start="16:16" pos:end="16:24">(<expr pos:start="16:17" pos:end="16:23"><name pos:start="16:17" pos:end="16:19">ret</name> <operator pos:start="16:21" pos:end="16:21">&lt;</operator> <literal type="number" pos:start="16:23" pos:end="16:23">0</literal></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:27"><block_content pos:start="17:17" pos:end="17:27">
                <return pos:start="17:17" pos:end="17:27">return <expr pos:start="17:24" pos:end="17:26"><name pos:start="17:24" pos:end="17:26">ret</name></expr>;</return></block_content></block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="29:0"><expr pos:start="19:9" pos:end="27:32"><call pos:start="19:9" pos:end="27:32"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="27:32">(<argument pos:start="19:16" pos:end="19:18"><expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">ctx</name></expr></argument>, <argument pos:start="19:21" pos:end="19:34"><expr pos:start="19:21" pos:end="19:34"><name pos:start="19:21" pos:end="19:34">AV_LOG_VERBOSE</name></expr></argument>,
               <argument pos:start="20:16" pos:end="20:59"><expr pos:start="20:16" pos:end="20:59"><literal type="string" pos:start="20:16" pos:end="20:59">"idx:%d name:'%s' type:%s explanation:'%s' "</literal></expr></argument>,
               <argument pos:start="21:16" pos:end="21:16"><expr pos:start="21:16" pos:end="21:16"><name pos:start="21:16" pos:end="21:16">i</name></expr></argument>, <argument pos:start="21:19" pos:end="21:27"><expr pos:start="21:19" pos:end="21:27"><name pos:start="21:19" pos:end="21:27"><name pos:start="21:19" pos:end="21:22">info</name><operator pos:start="21:23" pos:end="21:23">.</operator><name pos:start="21:24" pos:end="21:27">name</name></name></expr></argument>,
               <argument pos:start="22:16" pos:end="26:71"><expr pos:start="22:16" pos:end="26:71"><ternary pos:start="22:16" pos:end="26:71"><condition pos:start="22:16" pos:end="22:48"><expr pos:start="22:16" pos:end="22:42"><name pos:start="22:16" pos:end="22:24"><name pos:start="22:16" pos:end="22:19">info</name><operator pos:start="22:20" pos:end="22:20">.</operator><name pos:start="22:21" pos:end="22:24">type</name></name> <operator pos:start="22:26" pos:end="22:27">==</operator> <name pos:start="22:29" pos:end="22:42">F0R_PARAM_BOOL</name></expr>     ?</condition><then pos:start="22:50" pos:end="22:55"> <expr pos:start="22:50" pos:end="22:55"><literal type="string" pos:start="22:50" pos:end="22:55">"bool"</literal></expr>     </then><else pos:start="22:61" pos:end="26:71">:
               <expr pos:start="23:16" pos:end="26:71"><ternary pos:start="23:16" pos:end="26:71"><condition pos:start="23:16" pos:end="23:48"><expr pos:start="23:16" pos:end="23:44"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:19">info</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:24">type</name></name> <operator pos:start="23:26" pos:end="23:27">==</operator> <name pos:start="23:29" pos:end="23:44">F0R_PARAM_DOUBLE</name></expr>   ?</condition><then pos:start="23:50" pos:end="23:57"> <expr pos:start="23:50" pos:end="23:57"><literal type="string" pos:start="23:50" pos:end="23:57">"double"</literal></expr>   </then><else pos:start="23:61" pos:end="26:71">:
               <expr pos:start="24:16" pos:end="26:71"><ternary pos:start="24:16" pos:end="26:71"><condition pos:start="24:16" pos:end="24:48"><expr pos:start="24:16" pos:end="24:43"><name pos:start="24:16" pos:end="24:24"><name pos:start="24:16" pos:end="24:19">info</name><operator pos:start="24:20" pos:end="24:20">.</operator><name pos:start="24:21" pos:end="24:24">type</name></name> <operator pos:start="24:26" pos:end="24:27">==</operator> <name pos:start="24:29" pos:end="24:43">F0R_PARAM_COLOR</name></expr>    ?</condition><then pos:start="24:50" pos:end="24:56"> <expr pos:start="24:50" pos:end="24:56"><literal type="string" pos:start="24:50" pos:end="24:56">"color"</literal></expr>    </then><else pos:start="24:61" pos:end="26:71">:
               <expr pos:start="25:16" pos:end="26:71"><ternary pos:start="25:16" pos:end="26:71"><condition pos:start="25:16" pos:end="25:48"><expr pos:start="25:16" pos:end="25:46"><name pos:start="25:16" pos:end="25:24"><name pos:start="25:16" pos:end="25:19">info</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:24">type</name></name> <operator pos:start="25:26" pos:end="25:27">==</operator> <name pos:start="25:29" pos:end="25:46">F0R_PARAM_POSITION</name></expr> ?</condition><then pos:start="25:50" pos:end="25:59"> <expr pos:start="25:50" pos:end="25:59"><literal type="string" pos:start="25:50" pos:end="25:59">"position"</literal></expr> </then><else pos:start="25:61" pos:end="26:71">:
               <expr pos:start="26:16" pos:end="26:71"><ternary pos:start="26:16" pos:end="26:71"><condition pos:start="26:16" pos:end="26:48"><expr pos:start="26:16" pos:end="26:44"><name pos:start="26:16" pos:end="26:24"><name pos:start="26:16" pos:end="26:19">info</name><operator pos:start="26:20" pos:end="26:20">.</operator><name pos:start="26:21" pos:end="26:24">type</name></name> <operator pos:start="26:26" pos:end="26:27">==</operator> <name pos:start="26:29" pos:end="26:44">F0R_PARAM_STRING</name></expr>   ?</condition><then pos:start="26:50" pos:end="26:57"> <expr pos:start="26:50" pos:end="26:57"><literal type="string" pos:start="26:50" pos:end="26:57">"string"</literal></expr>   </then><else pos:start="26:61" pos:end="26:71">: <expr pos:start="26:63" pos:end="26:71"><literal type="string" pos:start="26:63" pos:end="26:71">"unknown"</literal></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr></argument>,
               <argument pos:start="27:16" pos:end="27:31"><expr pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:31"><name pos:start="27:16" pos:end="27:19">info</name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:31">explanation</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:ifdef pos:start="28:1" pos:end="28:12">#<cpp:directive pos:start="28:2" pos:end="28:6">ifdef</cpp:directive> <name pos:start="28:8" pos:end="28:12">DEBUG</name></cpp:ifdef>
        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><call pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:14">av_log</name><argument_list pos:start="29:15" pos:end="29:43">(<argument pos:start="29:16" pos:end="29:18"><expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ctx</name></expr></argument>, <argument pos:start="29:21" pos:end="29:32"><expr pos:start="29:21" pos:end="29:32"><name pos:start="29:21" pos:end="29:32">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="29:35" pos:end="29:42"><expr pos:start="29:35" pos:end="29:42"><literal type="string" pos:start="29:35" pos:end="29:42">"value:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <switch pos:start="30:9" pos:end="63:0">switch <condition pos:start="30:16" pos:end="30:26">(<expr pos:start="30:17" pos:end="30:25"><name pos:start="30:17" pos:end="30:25"><name pos:start="30:17" pos:end="30:20">info</name><operator pos:start="30:21" pos:end="30:21">.</operator><name pos:start="30:22" pos:end="30:25">type</name></name></expr>)</condition> <block pos:start="30:28" pos:end="63:0">{<block_content pos:start="31:13" pos:end="60:18">
            <decl_stmt pos:start="31:13" pos:end="31:20"><decl pos:start="31:13" pos:end="31:19"><type pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:16">void</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:19">v</name></decl>;</decl_stmt>
            <decl_stmt pos:start="32:13" pos:end="32:21"><decl pos:start="32:13" pos:end="32:20"><type pos:start="32:13" pos:end="32:18"><name pos:start="32:13" pos:end="32:18">double</name></type> <name pos:start="32:20" pos:end="32:20">d</name></decl>;</decl_stmt>
            <decl_stmt pos:start="33:13" pos:end="33:24"><decl pos:start="33:13" pos:end="33:23"><type pos:start="33:13" pos:end="33:16"><name pos:start="33:13" pos:end="33:16">char</name></type> <name pos:start="33:18" pos:end="33:23"><name pos:start="33:18" pos:end="33:18">s</name><index pos:start="33:19" pos:end="33:23">[<expr pos:start="33:20" pos:end="33:22"><literal type="number" pos:start="33:20" pos:end="33:22">128</literal></expr>]</index></name></decl>;</decl_stmt>
            <decl_stmt pos:start="34:13" pos:end="34:34"><decl pos:start="34:13" pos:end="34:33"><type pos:start="34:13" pos:end="34:29"><name pos:start="34:13" pos:end="34:29">f0r_param_color_t</name></type> <name pos:start="34:31" pos:end="34:33">col</name></decl>;</decl_stmt>
            <decl_stmt pos:start="35:13" pos:end="35:37"><decl pos:start="35:13" pos:end="35:36"><type pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:32">f0r_param_position_t</name></type> <name pos:start="35:34" pos:end="35:36">pos</name></decl>;</decl_stmt>
        <case pos:start="36:9" pos:end="36:28">case <expr pos:start="36:14" pos:end="36:27"><name pos:start="36:14" pos:end="36:27">F0R_PARAM_BOOL</name></expr>:</case>
            <expr_stmt pos:start="37:13" pos:end="37:19"><expr pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:13">v</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">&amp;</operator><name pos:start="37:18" pos:end="37:18">d</name></expr>;</expr_stmt>
            <expr_stmt pos:start="38:13" pos:end="38:60"><expr pos:start="38:13" pos:end="38:59"><call pos:start="38:13" pos:end="38:59"><name pos:start="38:13" pos:end="38:35"><name pos:start="38:13" pos:end="38:18">frei0r</name><operator pos:start="38:19" pos:end="38:20">-&gt;</operator><name pos:start="38:21" pos:end="38:35">get_param_value</name></name><argument_list pos:start="38:36" pos:end="38:59">(<argument pos:start="38:37" pos:end="38:52"><expr pos:start="38:37" pos:end="38:52"><name pos:start="38:37" pos:end="38:52"><name pos:start="38:37" pos:end="38:42">frei0r</name><operator pos:start="38:43" pos:end="38:44">-&gt;</operator><name pos:start="38:45" pos:end="38:52">instance</name></name></expr></argument>, <argument pos:start="38:55" pos:end="38:55"><expr pos:start="38:55" pos:end="38:55"><name pos:start="38:55" pos:end="38:55">v</name></expr></argument>, <argument pos:start="38:58" pos:end="38:58"><expr pos:start="38:58" pos:end="38:58"><name pos:start="38:58" pos:end="38:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="39:13" pos:end="39:78"><expr pos:start="39:13" pos:end="39:77"><call pos:start="39:13" pos:end="39:77"><name pos:start="39:13" pos:end="39:18">av_log</name><argument_list pos:start="39:19" pos:end="39:77">(<argument pos:start="39:20" pos:end="39:22"><expr pos:start="39:20" pos:end="39:22"><name pos:start="39:20" pos:end="39:22">ctx</name></expr></argument>, <argument pos:start="39:25" pos:end="39:36"><expr pos:start="39:25" pos:end="39:36"><name pos:start="39:25" pos:end="39:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="39:39" pos:end="39:42"><expr pos:start="39:39" pos:end="39:42"><literal type="string" pos:start="39:39" pos:end="39:42">"%s"</literal></expr></argument>, <argument pos:start="39:45" pos:end="39:76"><expr pos:start="39:45" pos:end="39:76"><ternary pos:start="39:45" pos:end="39:76"><condition pos:start="39:45" pos:end="39:66"><expr pos:start="39:45" pos:end="39:64"><name pos:start="39:45" pos:end="39:45">d</name> <operator pos:start="39:47" pos:end="39:48">&gt;=</operator> <literal type="number" pos:start="39:50" pos:end="39:52">0.5</literal> <operator pos:start="39:54" pos:end="39:55">&amp;&amp;</operator> <name pos:start="39:57" pos:end="39:57">d</name> <operator pos:start="39:59" pos:end="39:60">&lt;=</operator> <literal type="number" pos:start="39:62" pos:end="39:64">1.0</literal></expr> ?</condition><then pos:start="39:68" pos:end="39:70"> <expr pos:start="39:68" pos:end="39:70"><literal type="string" pos:start="39:68" pos:end="39:70">"y"</literal></expr> </then><else pos:start="39:72" pos:end="39:76">: <expr pos:start="39:74" pos:end="39:76"><literal type="string" pos:start="39:74" pos:end="39:76">"n"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="40:13" pos:end="40:18">break;</break>
        <case pos:start="41:9" pos:end="41:30">case <expr pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:29">F0R_PARAM_DOUBLE</name></expr>:</case>
            <expr_stmt pos:start="42:13" pos:end="42:19"><expr pos:start="42:13" pos:end="42:18"><name pos:start="42:13" pos:end="42:13">v</name> <operator pos:start="42:15" pos:end="42:15">=</operator> <operator pos:start="42:17" pos:end="42:17">&amp;</operator><name pos:start="42:18" pos:end="42:18">d</name></expr>;</expr_stmt>
            <expr_stmt pos:start="43:13" pos:end="43:60"><expr pos:start="43:13" pos:end="43:59"><call pos:start="43:13" pos:end="43:59"><name pos:start="43:13" pos:end="43:35"><name pos:start="43:13" pos:end="43:18">frei0r</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:35">get_param_value</name></name><argument_list pos:start="43:36" pos:end="43:59">(<argument pos:start="43:37" pos:end="43:52"><expr pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:42">frei0r</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:52">instance</name></name></expr></argument>, <argument pos:start="43:55" pos:end="43:55"><expr pos:start="43:55" pos:end="43:55"><name pos:start="43:55" pos:end="43:55">v</name></expr></argument>, <argument pos:start="43:58" pos:end="43:58"><expr pos:start="43:58" pos:end="43:58"><name pos:start="43:58" pos:end="43:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="44:13" pos:end="44:47"><expr pos:start="44:13" pos:end="44:46"><call pos:start="44:13" pos:end="44:46"><name pos:start="44:13" pos:end="44:18">av_log</name><argument_list pos:start="44:19" pos:end="44:46">(<argument pos:start="44:20" pos:end="44:22"><expr pos:start="44:20" pos:end="44:22"><name pos:start="44:20" pos:end="44:22">ctx</name></expr></argument>, <argument pos:start="44:25" pos:end="44:36"><expr pos:start="44:25" pos:end="44:36"><name pos:start="44:25" pos:end="44:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="44:39" pos:end="44:42"><expr pos:start="44:39" pos:end="44:42"><literal type="string" pos:start="44:39" pos:end="44:42">"%f"</literal></expr></argument>, <argument pos:start="44:45" pos:end="44:45"><expr pos:start="44:45" pos:end="44:45"><name pos:start="44:45" pos:end="44:45">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="45:13" pos:end="45:18">break;</break>
        <case pos:start="46:9" pos:end="46:29">case <expr pos:start="46:14" pos:end="46:28"><name pos:start="46:14" pos:end="46:28">F0R_PARAM_COLOR</name></expr>:</case>
            <expr_stmt pos:start="47:13" pos:end="47:21"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:13">v</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:20">col</name></expr>;</expr_stmt>
            <expr_stmt pos:start="48:13" pos:end="48:60"><expr pos:start="48:13" pos:end="48:59"><call pos:start="48:13" pos:end="48:59"><name pos:start="48:13" pos:end="48:35"><name pos:start="48:13" pos:end="48:18">frei0r</name><operator pos:start="48:19" pos:end="48:20">-&gt;</operator><name pos:start="48:21" pos:end="48:35">get_param_value</name></name><argument_list pos:start="48:36" pos:end="48:59">(<argument pos:start="48:37" pos:end="48:52"><expr pos:start="48:37" pos:end="48:52"><name pos:start="48:37" pos:end="48:52"><name pos:start="48:37" pos:end="48:42">frei0r</name><operator pos:start="48:43" pos:end="48:44">-&gt;</operator><name pos:start="48:45" pos:end="48:52">instance</name></name></expr></argument>, <argument pos:start="48:55" pos:end="48:55"><expr pos:start="48:55" pos:end="48:55"><name pos:start="48:55" pos:end="48:55">v</name></expr></argument>, <argument pos:start="48:58" pos:end="48:58"><expr pos:start="48:58" pos:end="48:58"><name pos:start="48:58" pos:end="48:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="49:13" pos:end="49:71"><expr pos:start="49:13" pos:end="49:70"><call pos:start="49:13" pos:end="49:70"><name pos:start="49:13" pos:end="49:18">av_log</name><argument_list pos:start="49:19" pos:end="49:70">(<argument pos:start="49:20" pos:end="49:22"><expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ctx</name></expr></argument>, <argument pos:start="49:25" pos:end="49:36"><expr pos:start="49:25" pos:end="49:36"><name pos:start="49:25" pos:end="49:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="49:39" pos:end="49:48"><expr pos:start="49:39" pos:end="49:48"><literal type="string" pos:start="49:39" pos:end="49:48">"%f/%f/%f"</literal></expr></argument>, <argument pos:start="49:51" pos:end="49:55"><expr pos:start="49:51" pos:end="49:55"><name pos:start="49:51" pos:end="49:55"><name pos:start="49:51" pos:end="49:53">col</name><operator pos:start="49:54" pos:end="49:54">.</operator><name pos:start="49:55" pos:end="49:55">r</name></name></expr></argument>, <argument pos:start="49:58" pos:end="49:62"><expr pos:start="49:58" pos:end="49:62"><name pos:start="49:58" pos:end="49:62"><name pos:start="49:58" pos:end="49:60">col</name><operator pos:start="49:61" pos:end="49:61">.</operator><name pos:start="49:62" pos:end="49:62">g</name></name></expr></argument>, <argument pos:start="49:65" pos:end="49:69"><expr pos:start="49:65" pos:end="49:69"><name pos:start="49:65" pos:end="49:69"><name pos:start="49:65" pos:end="49:67">col</name><operator pos:start="49:68" pos:end="49:68">.</operator><name pos:start="49:69" pos:end="49:69">b</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="50:13" pos:end="50:18">break;</break>
        <case pos:start="51:9" pos:end="51:32">case <expr pos:start="51:14" pos:end="51:31"><name pos:start="51:14" pos:end="51:31">F0R_PARAM_POSITION</name></expr>:</case>
            <expr_stmt pos:start="52:13" pos:end="52:21"><expr pos:start="52:13" pos:end="52:20"><name pos:start="52:13" pos:end="52:13">v</name> <operator pos:start="52:15" pos:end="52:15">=</operator> <operator pos:start="52:17" pos:end="52:17">&amp;</operator><name pos:start="52:18" pos:end="52:20">pos</name></expr>;</expr_stmt>
            <expr_stmt pos:start="53:13" pos:end="53:60"><expr pos:start="53:13" pos:end="53:59"><call pos:start="53:13" pos:end="53:59"><name pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:18">frei0r</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:35">get_param_value</name></name><argument_list pos:start="53:36" pos:end="53:59">(<argument pos:start="53:37" pos:end="53:52"><expr pos:start="53:37" pos:end="53:52"><name pos:start="53:37" pos:end="53:52"><name pos:start="53:37" pos:end="53:42">frei0r</name><operator pos:start="53:43" pos:end="53:44">-&gt;</operator><name pos:start="53:45" pos:end="53:52">instance</name></name></expr></argument>, <argument pos:start="53:55" pos:end="53:55"><expr pos:start="53:55" pos:end="53:55"><name pos:start="53:55" pos:end="53:55">v</name></expr></argument>, <argument pos:start="53:58" pos:end="53:58"><expr pos:start="53:58" pos:end="53:58"><name pos:start="53:58" pos:end="53:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="54:13" pos:end="54:61"><expr pos:start="54:13" pos:end="54:60"><call pos:start="54:13" pos:end="54:60"><name pos:start="54:13" pos:end="54:18">av_log</name><argument_list pos:start="54:19" pos:end="54:60">(<argument pos:start="54:20" pos:end="54:22"><expr pos:start="54:20" pos:end="54:22"><name pos:start="54:20" pos:end="54:22">ctx</name></expr></argument>, <argument pos:start="54:25" pos:end="54:36"><expr pos:start="54:25" pos:end="54:36"><name pos:start="54:25" pos:end="54:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="54:39" pos:end="54:45"><expr pos:start="54:39" pos:end="54:45"><literal type="string" pos:start="54:39" pos:end="54:45">"%f/%f"</literal></expr></argument>, <argument pos:start="54:48" pos:end="54:52"><expr pos:start="54:48" pos:end="54:52"><name pos:start="54:48" pos:end="54:52"><name pos:start="54:48" pos:end="54:50">pos</name><operator pos:start="54:51" pos:end="54:51">.</operator><name pos:start="54:52" pos:end="54:52">x</name></name></expr></argument>, <argument pos:start="54:55" pos:end="54:59"><expr pos:start="54:55" pos:end="54:59"><name pos:start="54:55" pos:end="54:59"><name pos:start="54:55" pos:end="54:57">pos</name><operator pos:start="54:58" pos:end="54:58">.</operator><name pos:start="54:59" pos:end="54:59">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="55:13" pos:end="55:18">break;</break>
        <default pos:start="56:9" pos:end="56:16">default:</default> <comment type="block" pos:start="56:18" pos:end="56:39">/* F0R_PARAM_STRING */</comment>
            <expr_stmt pos:start="57:13" pos:end="57:18"><expr pos:start="57:13" pos:end="57:17"><name pos:start="57:13" pos:end="57:13">v</name> <operator pos:start="57:15" pos:end="57:15">=</operator> <name pos:start="57:17" pos:end="57:17">s</name></expr>;</expr_stmt>
            <expr_stmt pos:start="58:13" pos:end="58:60"><expr pos:start="58:13" pos:end="58:59"><call pos:start="58:13" pos:end="58:59"><name pos:start="58:13" pos:end="58:35"><name pos:start="58:13" pos:end="58:18">frei0r</name><operator pos:start="58:19" pos:end="58:20">-&gt;</operator><name pos:start="58:21" pos:end="58:35">get_param_value</name></name><argument_list pos:start="58:36" pos:end="58:59">(<argument pos:start="58:37" pos:end="58:52"><expr pos:start="58:37" pos:end="58:52"><name pos:start="58:37" pos:end="58:52"><name pos:start="58:37" pos:end="58:42">frei0r</name><operator pos:start="58:43" pos:end="58:44">-&gt;</operator><name pos:start="58:45" pos:end="58:52">instance</name></name></expr></argument>, <argument pos:start="58:55" pos:end="58:55"><expr pos:start="58:55" pos:end="58:55"><name pos:start="58:55" pos:end="58:55">v</name></expr></argument>, <argument pos:start="58:58" pos:end="58:58"><expr pos:start="58:58" pos:end="58:58"><name pos:start="58:58" pos:end="58:58">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="59:13" pos:end="59:51"><expr pos:start="59:13" pos:end="59:50"><call pos:start="59:13" pos:end="59:50"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:50">(<argument pos:start="59:20" pos:end="59:22"><expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">ctx</name></expr></argument>, <argument pos:start="59:25" pos:end="59:36"><expr pos:start="59:25" pos:end="59:36"><name pos:start="59:25" pos:end="59:36">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="59:39" pos:end="59:46"><expr pos:start="59:39" pos:end="59:46"><literal type="string" pos:start="59:39" pos:end="59:46">"'%s'\n"</literal></expr></argument>, <argument pos:start="59:49" pos:end="59:49"><expr pos:start="59:49" pos:end="59:49"><name pos:start="59:49" pos:end="59:49">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <break pos:start="60:13" pos:end="60:18">break;</break>
        </block_content>}</block></switch>
<cpp:endif pos:start="62:1" pos:end="62:6">#<cpp:directive pos:start="62:2" pos:end="62:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="63:9" pos:end="63:42"><expr pos:start="63:9" pos:end="63:41"><call pos:start="63:9" pos:end="63:41"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:41">(<argument pos:start="63:16" pos:end="63:18"><expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ctx</name></expr></argument>, <argument pos:start="63:21" pos:end="63:34"><expr pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:34">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="63:37" pos:end="63:40"><expr pos:start="63:37" pos:end="63:40"><literal type="string" pos:start="63:37" pos:end="63:40">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></for>
</block_content>}</block></function></unit>
