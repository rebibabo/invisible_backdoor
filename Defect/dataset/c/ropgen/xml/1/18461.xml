<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18461.c" pos:tabs="8"><function pos:start="1:1" pos:end="225:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">ea_read_packet</name><parameter_list pos:start="1:26" pos:end="3:40">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:34">AVPacket</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:39">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="225:1">{<block_content pos:start="7:5" pos:end="223:15">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">EaDemuxContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">ea</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:29">= <expr pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:29"><name pos:start="9:25" pos:end="9:25">s</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">packet_read</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:27">chunk_type</name></decl>, <decl pos:start="15:30" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:30" pos:end="15:39">chunk_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">key</name> <init pos:start="17:13" pos:end="17:15">= <expr pos:start="17:15" pos:end="17:15"><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:31"><decl pos:start="19:5" pos:end="19:30"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">av_uninit</name><argument_list pos:start="19:18" pos:end="19:30">(<argument pos:start="19:19" pos:end="19:29"><expr pos:start="19:19" pos:end="19:29"><name pos:start="19:19" pos:end="19:29">num_samples</name></expr></argument>)</argument_list></decl>;</decl_stmt>



    <while pos:start="23:5" pos:end="219:5">while <condition pos:start="23:11" pos:end="23:24">(<expr pos:start="23:12" pos:end="23:23"><operator pos:start="23:12" pos:end="23:12">!</operator><name pos:start="23:13" pos:end="23:23">packet_read</name></expr>)</condition> <block pos:start="23:26" pos:end="219:5">{<block_content pos:start="25:9" pos:end="217:9">

        <expr_stmt pos:start="25:9" pos:end="25:34"><expr pos:start="25:9" pos:end="25:33"><name pos:start="25:9" pos:end="25:18">chunk_type</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:33"><name pos:start="25:22" pos:end="25:29">get_le32</name><argument_list pos:start="25:30" pos:end="25:33">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:18">chunk_size</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <operator pos:start="27:22" pos:end="27:22">(</operator><ternary pos:start="27:23" pos:end="27:66"><condition pos:start="27:23" pos:end="27:38"><expr pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:24">ea</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:36">big_endian</name></name></expr> ?</condition><then pos:start="27:40" pos:end="27:51"> <expr pos:start="27:40" pos:end="27:51"><call pos:start="27:40" pos:end="27:51"><name pos:start="27:40" pos:end="27:47">get_be32</name><argument_list pos:start="27:48" pos:end="27:51">(<argument pos:start="27:49" pos:end="27:50"><expr pos:start="27:49" pos:end="27:50"><name pos:start="27:49" pos:end="27:50">pb</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="27:53" pos:end="27:66">: <expr pos:start="27:55" pos:end="27:66"><call pos:start="27:55" pos:end="27:66"><name pos:start="27:55" pos:end="27:62">get_le32</name><argument_list pos:start="27:63" pos:end="27:66">(<argument pos:start="27:64" pos:end="27:65"><expr pos:start="27:64" pos:end="27:65"><name pos:start="27:64" pos:end="27:65">pb</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="27:67" pos:end="27:67">)</operator> <operator pos:start="27:69" pos:end="27:69">-</operator> <literal type="number" pos:start="27:71" pos:end="27:71">8</literal></expr>;</expr_stmt>



        <switch pos:start="31:9" pos:end="217:9">switch <condition pos:start="31:16" pos:end="31:27">(<expr pos:start="31:17" pos:end="31:26"><name pos:start="31:17" pos:end="31:26">chunk_type</name></expr>)</condition> <block pos:start="31:29" pos:end="217:9">{<block_content pos:start="35:9" pos:end="215:18">

        <comment type="block" pos:start="33:9" pos:end="33:24">/* audio data */</comment>

        <case pos:start="35:9" pos:end="35:22">case <expr pos:start="35:14" pos:end="35:21"><name pos:start="35:14" pos:end="35:21">ISNh_TAG</name></expr>:</case>

            <comment type="block" pos:start="37:13" pos:end="37:78">/* header chunk also contains data; skip over the header portion*/</comment>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><call pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:21">url_fskip</name><argument_list pos:start="39:22" pos:end="39:29">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">pb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:22">chunk_size</name> <operator pos:start="41:24" pos:end="41:25">-=</operator> <literal type="number" pos:start="41:27" pos:end="41:28">32</literal></expr>;</expr_stmt>

        <case pos:start="43:9" pos:end="43:22">case <expr pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:21">ISNd_TAG</name></expr>:</case>

        <case pos:start="45:9" pos:end="45:22">case <expr pos:start="45:14" pos:end="45:21"><name pos:start="45:14" pos:end="45:21">SCDl_TAG</name></expr>:</case>

        <case pos:start="47:9" pos:end="47:22">case <expr pos:start="47:14" pos:end="47:21"><name pos:start="47:14" pos:end="47:21">SNDC_TAG</name></expr>:</case>

        <case pos:start="49:9" pos:end="49:22">case <expr pos:start="49:14" pos:end="49:21"><name pos:start="49:14" pos:end="49:21">SDEN_TAG</name></expr>:</case>

            <if_stmt pos:start="51:13" pos:end="67:13"><if pos:start="51:13" pos:end="57:13">if <condition pos:start="51:16" pos:end="51:33">(<expr pos:start="51:17" pos:end="51:32"><operator pos:start="51:17" pos:end="51:17">!</operator><name pos:start="51:18" pos:end="51:32"><name pos:start="51:18" pos:end="51:19">ea</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:32">audio_codec</name></name></expr>)</condition> <block pos:start="51:35" pos:end="57:13">{<block_content pos:start="53:17" pos:end="55:22">

                <expr_stmt pos:start="53:17" pos:end="53:42"><expr pos:start="53:17" pos:end="53:41"><call pos:start="53:17" pos:end="53:41"><name pos:start="53:17" pos:end="53:25">url_fskip</name><argument_list pos:start="53:26" pos:end="53:41">(<argument pos:start="53:27" pos:end="53:28"><expr pos:start="53:27" pos:end="53:28"><name pos:start="53:27" pos:end="53:28">pb</name></expr></argument>, <argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><name pos:start="53:31" pos:end="53:40">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="57:15" pos:end="67:13">else if <condition pos:start="57:23" pos:end="59:55">(<expr pos:start="57:24" pos:end="59:54"><name pos:start="57:24" pos:end="57:38"><name pos:start="57:24" pos:end="57:25">ea</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:38">audio_codec</name></name> <operator pos:start="57:40" pos:end="57:41">==</operator> <name pos:start="57:43" pos:end="57:67">CODEC_ID_PCM_S16LE_PLANAR</name> <operator pos:start="57:69" pos:end="57:70">||</operator>

                       <name pos:start="59:24" pos:end="59:38"><name pos:start="59:24" pos:end="59:25">ea</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:38">audio_codec</name></name> <operator pos:start="59:40" pos:end="59:41">==</operator> <name pos:start="59:43" pos:end="59:54">CODEC_ID_MP3</name></expr>)</condition> <block pos:start="59:57" pos:end="67:13">{<block_content pos:start="61:17" pos:end="65:33">

                <expr_stmt pos:start="61:17" pos:end="61:43"><expr pos:start="61:17" pos:end="61:42"><name pos:start="61:17" pos:end="61:27">num_samples</name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:42"><name pos:start="61:31" pos:end="61:38">get_le32</name><argument_list pos:start="61:39" pos:end="61:42">(<argument pos:start="61:40" pos:end="61:41"><expr pos:start="61:40" pos:end="61:41"><name pos:start="61:40" pos:end="61:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:32"><call pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:25">url_fskip</name><argument_list pos:start="63:26" pos:end="63:32">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><name pos:start="63:27" pos:end="63:28">pb</name></expr></argument>, <argument pos:start="63:31" pos:end="63:31"><expr pos:start="63:31" pos:end="63:31"><literal type="number" pos:start="63:31" pos:end="63:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:33"><expr pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:26">chunk_size</name> <operator pos:start="65:28" pos:end="65:29">-=</operator> <literal type="number" pos:start="65:31" pos:end="65:32">12</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:53"><expr pos:start="69:13" pos:end="69:52"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">=</operator> <call pos:start="69:19" pos:end="69:52"><name pos:start="69:19" pos:end="69:31">av_get_packet</name><argument_list pos:start="69:32" pos:end="69:52">(<argument pos:start="69:33" pos:end="69:34"><expr pos:start="69:33" pos:end="69:34"><name pos:start="69:33" pos:end="69:34">pb</name></expr></argument>, <argument pos:start="69:37" pos:end="69:39"><expr pos:start="69:37" pos:end="69:39"><name pos:start="69:37" pos:end="69:39">pkt</name></expr></argument>, <argument pos:start="69:42" pos:end="69:51"><expr pos:start="69:42" pos:end="69:51"><name pos:start="69:42" pos:end="69:51">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="117:13"><if pos:start="71:13" pos:end="73:35">if <condition pos:start="71:16" pos:end="71:34">(<expr pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:19">ret</name> <operator pos:start="71:21" pos:end="71:22">!=</operator> <name pos:start="71:24" pos:end="71:33">chunk_size</name></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:35"><block_content pos:start="73:17" pos:end="73:35">

                <expr_stmt pos:start="73:17" pos:end="73:35"><expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:19">ret</name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:29">AVERROR</name><argument_list pos:start="73:30" pos:end="73:34">(<argument pos:start="73:31" pos:end="73:33"><expr pos:start="73:31" pos:end="73:33"><name pos:start="73:31" pos:end="73:33">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="75:13" pos:end="117:13">else <block pos:start="75:18" pos:end="117:13">{<block_content pos:start="77:21" pos:end="115:21">

                    <expr_stmt pos:start="77:21" pos:end="77:63"><expr pos:start="77:21" pos:end="77:62"><name pos:start="77:21" pos:end="77:37"><name pos:start="77:21" pos:end="77:23">pkt</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:37">stream_index</name></name> <operator pos:start="77:39" pos:end="77:39">=</operator> <name pos:start="77:41" pos:end="77:62"><name pos:start="77:41" pos:end="77:42">ea</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:62">audio_stream_index</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="79:21" pos:end="79:37"><expr pos:start="79:21" pos:end="79:36"><name pos:start="79:21" pos:end="79:28"><name pos:start="79:21" pos:end="79:23">pkt</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:28">pts</name></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <literal type="number" pos:start="79:32" pos:end="79:36">90000</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="81:21" pos:end="81:56"><expr pos:start="81:21" pos:end="81:55"><name pos:start="81:21" pos:end="81:28"><name pos:start="81:21" pos:end="81:23">pkt</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:28">pts</name></name> <operator pos:start="81:30" pos:end="81:31">*=</operator> <name pos:start="81:33" pos:end="81:55"><name pos:start="81:33" pos:end="81:34">ea</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:55">audio_frame_counter</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:48"><expr pos:start="83:21" pos:end="83:47"><name pos:start="83:21" pos:end="83:28"><name pos:start="83:21" pos:end="83:23">pkt</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:28">pts</name></name> <operator pos:start="83:30" pos:end="83:31">/=</operator> <name pos:start="83:33" pos:end="83:47"><name pos:start="83:33" pos:end="83:34">ea</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:47">sample_rate</name></name></expr>;</expr_stmt>



                    <switch pos:start="87:21" pos:end="115:21">switch <condition pos:start="87:28" pos:end="87:44">(<expr pos:start="87:29" pos:end="87:43"><name pos:start="87:29" pos:end="87:43"><name pos:start="87:29" pos:end="87:30">ea</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:43">audio_codec</name></name></expr>)</condition> <block pos:start="87:46" pos:end="115:21">{<block_content pos:start="89:21" pos:end="113:59">

                    <case pos:start="89:21" pos:end="89:43">case <expr pos:start="89:26" pos:end="89:42"><name pos:start="89:26" pos:end="89:42">CODEC_ID_ADPCM_EA</name></expr>:</case>

                    <comment type="block" pos:start="91:21" pos:end="93:66">/* 2 samples/byte, 1 or 2 samples per frame depending

                     * on stereo; chunk also has 12-byte header */</comment>

                    <expr_stmt pos:start="95:21" pos:end="97:41"><expr pos:start="95:21" pos:end="97:40"><name pos:start="95:21" pos:end="95:43"><name pos:start="95:21" pos:end="95:22">ea</name><operator pos:start="95:23" pos:end="95:24">-&gt;</operator><name pos:start="95:25" pos:end="95:43">audio_frame_counter</name></name> <operator pos:start="95:45" pos:end="95:46">+=</operator> <operator pos:start="95:48" pos:end="95:48">(</operator><operator pos:start="95:49" pos:end="95:49">(</operator><name pos:start="95:50" pos:end="95:59">chunk_size</name> <operator pos:start="95:61" pos:end="95:61">-</operator> <literal type="number" pos:start="95:63" pos:end="95:64">12</literal><operator pos:start="95:65" pos:end="95:65">)</operator> <operator pos:start="95:67" pos:end="95:67">*</operator> <literal type="number" pos:start="95:69" pos:end="95:69">2</literal><operator pos:start="95:70" pos:end="95:70">)</operator> <operator pos:start="95:72" pos:end="95:72">/</operator>

                        <name pos:start="97:25" pos:end="97:40"><name pos:start="97:25" pos:end="97:26">ea</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:40">num_channels</name></name></expr>;</expr_stmt>

                        <break pos:start="99:25" pos:end="99:30">break;</break>

                    <case pos:start="101:21" pos:end="101:51">case <expr pos:start="101:26" pos:end="101:50"><name pos:start="101:26" pos:end="101:50">CODEC_ID_PCM_S16LE_PLANAR</name></expr>:</case>

                    <case pos:start="103:21" pos:end="103:38">case <expr pos:start="103:26" pos:end="103:37"><name pos:start="103:26" pos:end="103:37">CODEC_ID_MP3</name></expr>:</case>

                        <expr_stmt pos:start="105:25" pos:end="105:63"><expr pos:start="105:25" pos:end="105:62"><name pos:start="105:25" pos:end="105:47"><name pos:start="105:25" pos:end="105:26">ea</name><operator pos:start="105:27" pos:end="105:28">-&gt;</operator><name pos:start="105:29" pos:end="105:47">audio_frame_counter</name></name> <operator pos:start="105:49" pos:end="105:50">+=</operator> <name pos:start="105:52" pos:end="105:62">num_samples</name></expr>;</expr_stmt>

                        <break pos:start="107:25" pos:end="107:30">break;</break>

                    <default pos:start="109:21" pos:end="109:28">default:</default>

                        <expr_stmt pos:start="111:25" pos:end="113:59"><expr pos:start="111:25" pos:end="113:58"><name pos:start="111:25" pos:end="111:47"><name pos:start="111:25" pos:end="111:26">ea</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:47">audio_frame_counter</name></name> <operator pos:start="111:49" pos:end="111:50">+=</operator> <name pos:start="111:52" pos:end="111:61">chunk_size</name> <operator pos:start="111:63" pos:end="111:63">/</operator>

                            <operator pos:start="113:29" pos:end="113:29">(</operator><name pos:start="113:30" pos:end="113:38"><name pos:start="113:30" pos:end="113:31">ea</name><operator pos:start="113:32" pos:end="113:33">-&gt;</operator><name pos:start="113:34" pos:end="113:38">bytes</name></name> <operator pos:start="113:40" pos:end="113:40">*</operator> <name pos:start="113:42" pos:end="113:57"><name pos:start="113:42" pos:end="113:43">ea</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:57">num_channels</name></name><operator pos:start="113:58" pos:end="113:58">)</operator></expr>;</expr_stmt>

                    </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="121:13" pos:end="121:28"><expr pos:start="121:13" pos:end="121:27"><name pos:start="121:13" pos:end="121:23">packet_read</name> <operator pos:start="121:25" pos:end="121:25">=</operator> <literal type="number" pos:start="121:27" pos:end="121:27">1</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>



        <comment type="block" pos:start="127:9" pos:end="127:24">/* ending tag */</comment>

        <case pos:start="129:9" pos:end="129:15">case <expr pos:start="129:14" pos:end="129:14"><literal type="number" pos:start="129:14" pos:end="129:14">0</literal></expr>:</case>

        <case pos:start="131:9" pos:end="131:22">case <expr pos:start="131:14" pos:end="131:21"><name pos:start="131:14" pos:end="131:21">ISNe_TAG</name></expr>:</case>

        <case pos:start="133:9" pos:end="133:22">case <expr pos:start="133:14" pos:end="133:21"><name pos:start="133:14" pos:end="133:21">SCEl_TAG</name></expr>:</case>

        <case pos:start="135:9" pos:end="135:22">case <expr pos:start="135:14" pos:end="135:21"><name pos:start="135:14" pos:end="135:21">SEND_TAG</name></expr>:</case>

        <case pos:start="137:9" pos:end="137:22">case <expr pos:start="137:14" pos:end="137:21"><name pos:start="137:14" pos:end="137:21">SEEN_TAG</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:31"><expr pos:start="139:13" pos:end="139:30"><name pos:start="139:13" pos:end="139:15">ret</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:30"><name pos:start="139:19" pos:end="139:25">AVERROR</name><argument_list pos:start="139:26" pos:end="139:30">(<argument pos:start="139:27" pos:end="139:29"><expr pos:start="139:27" pos:end="139:29"><name pos:start="139:27" pos:end="139:29">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:28"><expr pos:start="141:13" pos:end="141:27"><name pos:start="141:13" pos:end="141:23">packet_read</name> <operator pos:start="141:25" pos:end="141:25">=</operator> <literal type="number" pos:start="141:27" pos:end="141:27">1</literal></expr>;</expr_stmt>

            <break pos:start="143:13" pos:end="143:18">break;</break>



        <case pos:start="147:9" pos:end="147:22">case <expr pos:start="147:14" pos:end="147:21"><name pos:start="147:14" pos:end="147:21">MVIh_TAG</name></expr>:</case>

        <case pos:start="149:9" pos:end="149:22">case <expr pos:start="149:14" pos:end="149:21"><name pos:start="149:14" pos:end="149:21">kVGT_TAG</name></expr>:</case>

        <case pos:start="151:9" pos:end="151:22">case <expr pos:start="151:14" pos:end="151:21"><name pos:start="151:14" pos:end="151:21">pQGT_TAG</name></expr>:</case>

        <case pos:start="153:9" pos:end="153:22">case <expr pos:start="153:14" pos:end="153:21"><name pos:start="153:14" pos:end="153:21">TGQs_TAG</name></expr>:</case>

            <expr_stmt pos:start="155:13" pos:end="155:31"><expr pos:start="155:13" pos:end="155:30"><name pos:start="155:13" pos:end="155:15">key</name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:30">PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <case pos:start="157:9" pos:end="157:22">case <expr pos:start="157:14" pos:end="157:21"><name pos:start="157:14" pos:end="157:21">MVIf_TAG</name></expr>:</case>

        <case pos:start="159:9" pos:end="159:22">case <expr pos:start="159:14" pos:end="159:21"><name pos:start="159:14" pos:end="159:21">fVGT_TAG</name></expr>:</case>

            <expr_stmt pos:start="161:13" pos:end="161:40"><expr pos:start="161:13" pos:end="161:39"><call pos:start="161:13" pos:end="161:39"><name pos:start="161:13" pos:end="161:21">url_fseek</name><argument_list pos:start="161:22" pos:end="161:39">(<argument pos:start="161:23" pos:end="161:24"><expr pos:start="161:23" pos:end="161:24"><name pos:start="161:23" pos:end="161:24">pb</name></expr></argument>, <argument pos:start="161:27" pos:end="161:28"><expr pos:start="161:27" pos:end="161:28"><operator pos:start="161:27" pos:end="161:27">-</operator><literal type="number" pos:start="161:28" pos:end="161:28">8</literal></expr></argument>, <argument pos:start="161:31" pos:end="161:38"><expr pos:start="161:31" pos:end="161:38"><name pos:start="161:31" pos:end="161:38">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="161:46" pos:end="161:70">// include chunk preamble</comment>

            <expr_stmt pos:start="163:13" pos:end="163:28"><expr pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:22">chunk_size</name> <operator pos:start="163:24" pos:end="163:25">+=</operator> <literal type="number" pos:start="163:27" pos:end="163:27">8</literal></expr>;</expr_stmt>

            <goto pos:start="165:13" pos:end="165:34">goto <name pos:start="165:18" pos:end="165:33">get_video_packet</name>;</goto>



        <case pos:start="169:9" pos:end="169:22">case <expr pos:start="169:14" pos:end="169:21"><name pos:start="169:14" pos:end="169:21">mTCD_TAG</name></expr>:</case>

            <expr_stmt pos:start="171:13" pos:end="171:39"><expr pos:start="171:13" pos:end="171:38"><call pos:start="171:13" pos:end="171:38"><name pos:start="171:13" pos:end="171:21">url_fseek</name><argument_list pos:start="171:22" pos:end="171:38">(<argument pos:start="171:23" pos:end="171:24"><expr pos:start="171:23" pos:end="171:24"><name pos:start="171:23" pos:end="171:24">pb</name></expr></argument>, <argument pos:start="171:27" pos:end="171:27"><expr pos:start="171:27" pos:end="171:27"><literal type="number" pos:start="171:27" pos:end="171:27">8</literal></expr></argument>, <argument pos:start="171:30" pos:end="171:37"><expr pos:start="171:30" pos:end="171:37"><name pos:start="171:30" pos:end="171:37">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="171:42" pos:end="171:62">// skip ea dct header</comment>

            <expr_stmt pos:start="173:13" pos:end="173:28"><expr pos:start="173:13" pos:end="173:27"><name pos:start="173:13" pos:end="173:22">chunk_size</name> <operator pos:start="173:24" pos:end="173:25">-=</operator> <literal type="number" pos:start="173:27" pos:end="173:27">8</literal></expr>;</expr_stmt>

            <goto pos:start="175:13" pos:end="175:34">goto <name pos:start="175:18" pos:end="175:33">get_video_packet</name>;</goto>



        <case pos:start="179:9" pos:end="179:22">case <expr pos:start="179:14" pos:end="179:21"><name pos:start="179:14" pos:end="179:21">MV0K_TAG</name></expr>:</case>

        <case pos:start="181:9" pos:end="181:22">case <expr pos:start="181:14" pos:end="181:21"><name pos:start="181:14" pos:end="181:21">MPCh_TAG</name></expr>:</case>

        <case pos:start="183:9" pos:end="183:22">case <expr pos:start="183:14" pos:end="183:21"><name pos:start="183:14" pos:end="183:21">pIQT_TAG</name></expr>:</case>

            <expr_stmt pos:start="185:13" pos:end="185:31"><expr pos:start="185:13" pos:end="185:30"><name pos:start="185:13" pos:end="185:15">key</name> <operator pos:start="185:17" pos:end="185:17">=</operator> <name pos:start="185:19" pos:end="185:30">PKT_FLAG_KEY</name></expr>;</expr_stmt>

        <case pos:start="187:9" pos:end="187:22">case <expr pos:start="187:14" pos:end="187:21"><name pos:start="187:14" pos:end="187:21">MV0F_TAG</name></expr>:</case>

<label pos:start="189:1" pos:end="189:17"><name pos:start="189:1" pos:end="189:16">get_video_packet</name>:</label>

            <expr_stmt pos:start="191:13" pos:end="191:53"><expr pos:start="191:13" pos:end="191:52"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:52"><name pos:start="191:19" pos:end="191:31">av_get_packet</name><argument_list pos:start="191:32" pos:end="191:52">(<argument pos:start="191:33" pos:end="191:34"><expr pos:start="191:33" pos:end="191:34"><name pos:start="191:33" pos:end="191:34">pb</name></expr></argument>, <argument pos:start="191:37" pos:end="191:39"><expr pos:start="191:37" pos:end="191:39"><name pos:start="191:37" pos:end="191:39">pkt</name></expr></argument>, <argument pos:start="191:42" pos:end="191:51"><expr pos:start="191:42" pos:end="191:51"><name pos:start="191:42" pos:end="191:51">chunk_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="193:13" pos:end="203:13"><if pos:start="193:13" pos:end="195:33">if <condition pos:start="193:16" pos:end="193:34">(<expr pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:19">ret</name> <operator pos:start="193:21" pos:end="193:22">!=</operator> <name pos:start="193:24" pos:end="193:33">chunk_size</name></expr>)</condition><block type="pseudo" pos:start="195:17" pos:end="195:33"><block_content pos:start="195:17" pos:end="195:33">

                <expr_stmt pos:start="195:17" pos:end="195:33"><expr pos:start="195:17" pos:end="195:32"><name pos:start="195:17" pos:end="195:19">ret</name> <operator pos:start="195:21" pos:end="195:21">=</operator> <name pos:start="195:23" pos:end="195:32">AVERROR_IO</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="197:13" pos:end="203:13">else <block pos:start="197:18" pos:end="203:13">{<block_content pos:start="199:17" pos:end="201:34">

                <expr_stmt pos:start="199:17" pos:end="199:59"><expr pos:start="199:17" pos:end="199:58"><name pos:start="199:17" pos:end="199:33"><name pos:start="199:17" pos:end="199:19">pkt</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:33">stream_index</name></name> <operator pos:start="199:35" pos:end="199:35">=</operator> <name pos:start="199:37" pos:end="199:58"><name pos:start="199:37" pos:end="199:38">ea</name><operator pos:start="199:39" pos:end="199:40">-&gt;</operator><name pos:start="199:41" pos:end="199:58">video_stream_index</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:19">pkt</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:26">flags</name></name> <operator pos:start="201:28" pos:end="201:29">|=</operator> <name pos:start="201:31" pos:end="201:33">key</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:28"><expr pos:start="205:13" pos:end="205:27"><name pos:start="205:13" pos:end="205:23">packet_read</name> <operator pos:start="205:25" pos:end="205:25">=</operator> <literal type="number" pos:start="205:27" pos:end="205:27">1</literal></expr>;</expr_stmt>

            <break pos:start="207:13" pos:end="207:18">break;</break>



        <default pos:start="211:9" pos:end="211:16">default:</default>

            <expr_stmt pos:start="213:13" pos:end="213:48"><expr pos:start="213:13" pos:end="213:47"><call pos:start="213:13" pos:end="213:47"><name pos:start="213:13" pos:end="213:21">url_fseek</name><argument_list pos:start="213:22" pos:end="213:47">(<argument pos:start="213:23" pos:end="213:24"><expr pos:start="213:23" pos:end="213:24"><name pos:start="213:23" pos:end="213:24">pb</name></expr></argument>, <argument pos:start="213:27" pos:end="213:36"><expr pos:start="213:27" pos:end="213:36"><name pos:start="213:27" pos:end="213:36">chunk_size</name></expr></argument>, <argument pos:start="213:39" pos:end="213:46"><expr pos:start="213:39" pos:end="213:46"><name pos:start="213:39" pos:end="213:46">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <return pos:start="223:5" pos:end="223:15">return <expr pos:start="223:12" pos:end="223:14"><name pos:start="223:12" pos:end="223:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
