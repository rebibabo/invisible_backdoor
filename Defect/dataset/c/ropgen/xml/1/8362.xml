<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8362.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">cpu_4xx_wdt_cb</name> <parameter_list pos:start="1:28" pos:end="1:41">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:34"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">PowerPCCPU</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">CPUPPCState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">ppc_tb_t</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:20">tb_env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:18">ppc40x_timer_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:32">ppc40x_timer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:16">now</name></decl>, <decl pos:start="13:19" pos:end="13:22"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:22">next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:7">env</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:16">opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:7">cpu</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:30"><name pos:start="19:11" pos:end="19:25">ppc_env_get_cpu</name><argument_list pos:start="19:26" pos:end="19:30">(<argument pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:29">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:10">tb_env</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:16">env</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:24">tb_env</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:34"><expr pos:start="23:5" pos:end="23:33"><name pos:start="23:5" pos:end="23:16">ppc40x_timer</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:25">tb_env</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:33">opaque</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:7">now</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:47"><name pos:start="25:11" pos:end="25:27">qemu_clock_get_ns</name><argument_list pos:start="25:28" pos:end="25:47">(<argument pos:start="25:29" pos:end="25:46"><expr pos:start="25:29" pos:end="25:46"><name pos:start="25:29" pos:end="25:46">QEMU_CLOCK_VIRTUAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="59:5">switch <condition pos:start="27:12" pos:end="27:48">(<expr pos:start="27:13" pos:end="27:47"><operator pos:start="27:13" pos:end="27:13">(</operator><name pos:start="27:14" pos:end="27:34"><name pos:start="27:14" pos:end="27:16">env</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:21">spr</name><index pos:start="27:22" pos:end="27:34">[<expr pos:start="27:23" pos:end="27:33"><name pos:start="27:23" pos:end="27:33">SPR_40x_TCR</name></expr>]</index></name> <operator pos:start="27:36" pos:end="27:37">&gt;&gt;</operator> <literal type="number" pos:start="27:39" pos:end="27:40">30</literal><operator pos:start="27:41" pos:end="27:41">)</operator> <operator pos:start="27:43" pos:end="27:43">&amp;</operator> <literal type="number" pos:start="27:45" pos:end="27:47">0x3</literal></expr>)</condition> <block pos:start="27:50" pos:end="59:5">{<block_content pos:start="29:5" pos:end="57:15">

    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">0</literal></expr>:</case>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:12">next</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:16">1</literal> <operator pos:start="31:18" pos:end="31:19">&lt;&lt;</operator> <literal type="number" pos:start="31:21" pos:end="31:22">17</literal></expr>;</expr_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:11">case <expr pos:start="35:10" pos:end="35:10"><literal type="number" pos:start="35:10" pos:end="35:10">1</literal></expr>:</case>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:12">next</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <literal type="number" pos:start="37:16" pos:end="37:16">1</literal> <operator pos:start="37:18" pos:end="37:19">&lt;&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:22">21</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:11">case <expr pos:start="41:10" pos:end="41:10"><literal type="number" pos:start="41:10" pos:end="41:10">2</literal></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:23"><expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:12">next</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">1</literal> <operator pos:start="43:18" pos:end="43:19">&lt;&lt;</operator> <literal type="number" pos:start="43:21" pos:end="43:22">25</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:12">next</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="number" pos:start="49:16" pos:end="49:16">1</literal> <operator pos:start="49:18" pos:end="49:19">&lt;&lt;</operator> <literal type="number" pos:start="49:21" pos:end="49:22">29</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <default pos:start="53:5" pos:end="53:12">default:</default>

        <comment type="block" pos:start="55:9" pos:end="55:47">/* Cannot occur, but makes gcc happy */</comment>

        <return pos:start="57:9" pos:end="57:15">return;</return>

    </block_content>}</block></switch>

    <expr_stmt pos:start="61:5" pos:end="61:72"><expr pos:start="61:5" pos:end="61:71"><name pos:start="61:5" pos:end="61:8">next</name> <operator pos:start="61:10" pos:end="61:10">=</operator> <name pos:start="61:12" pos:end="61:14">now</name> <operator pos:start="61:16" pos:end="61:16">+</operator> <call pos:start="61:18" pos:end="61:71"><name pos:start="61:18" pos:end="61:25">muldiv64</name><argument_list pos:start="61:26" pos:end="61:71">(<argument pos:start="61:27" pos:end="61:30"><expr pos:start="61:27" pos:end="61:30"><name pos:start="61:27" pos:end="61:30">next</name></expr></argument>, <argument pos:start="61:33" pos:end="61:51"><expr pos:start="61:33" pos:end="61:51"><call pos:start="61:33" pos:end="61:51"><name pos:start="61:33" pos:end="61:49">get_ticks_per_sec</name><argument_list pos:start="61:50" pos:end="61:51">()</argument_list></call></expr></argument>, <argument pos:start="61:54" pos:end="61:70"><expr pos:start="61:54" pos:end="61:70"><name pos:start="61:54" pos:end="61:70"><name pos:start="61:54" pos:end="61:59">tb_env</name><operator pos:start="61:60" pos:end="61:61">-&gt;</operator><name pos:start="61:62" pos:end="61:70">decr_freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="65:15"><if pos:start="63:5" pos:end="65:15">if <condition pos:start="63:8" pos:end="63:20">(<expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:12">next</name> <operator pos:start="63:14" pos:end="63:15">==</operator> <name pos:start="63:17" pos:end="63:19">now</name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:15"><block_content pos:start="65:9" pos:end="65:15">

        <expr_stmt pos:start="65:9" pos:end="65:15"><expr pos:start="65:9" pos:end="65:14"><name pos:start="65:9" pos:end="65:12">next</name><operator pos:start="65:13" pos:end="65:14">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="69:57"><expr pos:start="67:5" pos:end="69:56"><call pos:start="67:5" pos:end="69:56"><name pos:start="67:5" pos:end="67:10">LOG_TB</name><argument_list pos:start="67:11" pos:end="69:56">(<argument pos:start="67:12" pos:end="67:62"><expr pos:start="67:12" pos:end="67:62"><literal type="string" pos:start="67:12" pos:end="67:21">"%s: TCR "</literal> <name pos:start="67:23" pos:end="67:35">TARGET_FMT_lx</name> <literal type="string" pos:start="67:37" pos:end="67:43">" TSR "</literal> <name pos:start="67:45" pos:end="67:57">TARGET_FMT_lx</name> <literal type="string" pos:start="67:59" pos:end="67:62">"\n"</literal></expr></argument>, <argument pos:start="67:65" pos:end="67:72"><expr pos:start="67:65" pos:end="67:72"><name pos:start="67:65" pos:end="67:72">__func__</name></expr></argument>,

           <argument pos:start="69:12" pos:end="69:32"><expr pos:start="69:12" pos:end="69:32"><name pos:start="69:12" pos:end="69:32"><name pos:start="69:12" pos:end="69:14">env</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:19">spr</name><index pos:start="69:20" pos:end="69:32">[<expr pos:start="69:21" pos:end="69:31"><name pos:start="69:21" pos:end="69:31">SPR_40x_TCR</name></expr>]</index></name></expr></argument>, <argument pos:start="69:35" pos:end="69:55"><expr pos:start="69:35" pos:end="69:55"><name pos:start="69:35" pos:end="69:55"><name pos:start="69:35" pos:end="69:37">env</name><operator pos:start="69:38" pos:end="69:39">-&gt;</operator><name pos:start="69:40" pos:end="69:42">spr</name><index pos:start="69:43" pos:end="69:55">[<expr pos:start="69:44" pos:end="69:54"><name pos:start="69:44" pos:end="69:54">SPR_40x_TSR</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="71:5" pos:end="135:5">switch <condition pos:start="71:12" pos:end="71:48">(<expr pos:start="71:13" pos:end="71:47"><operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:34"><name pos:start="71:14" pos:end="71:16">env</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:21">spr</name><index pos:start="71:22" pos:end="71:34">[<expr pos:start="71:23" pos:end="71:33"><name pos:start="71:23" pos:end="71:33">SPR_40x_TSR</name></expr>]</index></name> <operator pos:start="71:36" pos:end="71:37">&gt;&gt;</operator> <literal type="number" pos:start="71:39" pos:end="71:40">30</literal><operator pos:start="71:41" pos:end="71:41">)</operator> <operator pos:start="71:43" pos:end="71:43">&amp;</operator> <literal type="number" pos:start="71:45" pos:end="71:47">0x3</literal></expr>)</condition> <block pos:start="71:50" pos:end="135:5">{<block_content pos:start="73:5" pos:end="133:9">

    <case pos:start="73:5" pos:end="73:13">case <expr pos:start="73:10" pos:end="73:12"><literal type="number" pos:start="73:10" pos:end="73:12">0x0</literal></expr>:</case>

    <case pos:start="75:5" pos:end="75:13">case <expr pos:start="75:10" pos:end="75:12"><literal type="number" pos:start="75:10" pos:end="75:12">0x1</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:49"><expr pos:start="77:9" pos:end="77:48"><call pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:17">timer_mod</name><argument_list pos:start="77:18" pos:end="77:48">(<argument pos:start="77:19" pos:end="77:41"><expr pos:start="77:19" pos:end="77:41"><name pos:start="77:19" pos:end="77:41"><name pos:start="77:19" pos:end="77:30">ppc40x_timer</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:41">wdt_timer</name></name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:30"><name pos:start="79:9" pos:end="79:20">ppc40x_timer</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">wdt_next</name></name> <operator pos:start="79:32" pos:end="79:32">=</operator> <name pos:start="79:34" pos:end="79:37">next</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:41"><expr pos:start="81:9" pos:end="81:40"><name pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:16">spr</name><index pos:start="81:17" pos:end="81:29">[<expr pos:start="81:18" pos:end="81:28"><name pos:start="81:18" pos:end="81:28">SPR_40x_TSR</name></expr>]</index></name> <operator pos:start="81:31" pos:end="81:32">|=</operator> <literal type="number" pos:start="81:34" pos:end="81:34">1</literal> <operator pos:start="81:36" pos:end="81:37">&lt;&lt;</operator> <literal type="number" pos:start="81:39" pos:end="81:40">31</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:13">case <expr pos:start="85:10" pos:end="85:12"><literal type="number" pos:start="85:10" pos:end="85:12">0x2</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><call pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:17">timer_mod</name><argument_list pos:start="87:18" pos:end="87:48">(<argument pos:start="87:19" pos:end="87:41"><expr pos:start="87:19" pos:end="87:41"><name pos:start="87:19" pos:end="87:41"><name pos:start="87:19" pos:end="87:30">ppc40x_timer</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:41">wdt_timer</name></name></expr></argument>, <argument pos:start="87:44" pos:end="87:47"><expr pos:start="87:44" pos:end="87:47"><name pos:start="87:44" pos:end="87:47">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:38"><expr pos:start="89:9" pos:end="89:37"><name pos:start="89:9" pos:end="89:30"><name pos:start="89:9" pos:end="89:20">ppc40x_timer</name><operator pos:start="89:21" pos:end="89:22">-&gt;</operator><name pos:start="89:23" pos:end="89:30">wdt_next</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:37">next</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:41"><expr pos:start="91:9" pos:end="91:40"><name pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:11">env</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:16">spr</name><index pos:start="91:17" pos:end="91:29">[<expr pos:start="91:18" pos:end="91:28"><name pos:start="91:18" pos:end="91:28">SPR_40x_TSR</name></expr>]</index></name> <operator pos:start="91:31" pos:end="91:32">|=</operator> <literal type="number" pos:start="91:34" pos:end="91:34">1</literal> <operator pos:start="91:36" pos:end="91:37">&lt;&lt;</operator> <literal type="number" pos:start="91:39" pos:end="91:40">30</literal></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="97:9"><if pos:start="93:9" pos:end="97:9">if <condition pos:start="93:12" pos:end="93:48">(<expr pos:start="93:13" pos:end="93:47"><operator pos:start="93:13" pos:end="93:13">(</operator><name pos:start="93:14" pos:end="93:34"><name pos:start="93:14" pos:end="93:16">env</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:21">spr</name><index pos:start="93:22" pos:end="93:34">[<expr pos:start="93:23" pos:end="93:33"><name pos:start="93:23" pos:end="93:33">SPR_40x_TCR</name></expr>]</index></name> <operator pos:start="93:36" pos:end="93:37">&gt;&gt;</operator> <literal type="number" pos:start="93:39" pos:end="93:40">27</literal><operator pos:start="93:41" pos:end="93:41">)</operator> <operator pos:start="93:43" pos:end="93:43">&amp;</operator> <literal type="number" pos:start="93:45" pos:end="93:47">0x1</literal></expr>)</condition> <block pos:start="93:50" pos:end="97:9">{<block_content pos:start="95:13" pos:end="95:51">

            <expr_stmt pos:start="95:13" pos:end="95:51"><expr pos:start="95:13" pos:end="95:50"><call pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:23">ppc_set_irq</name><argument_list pos:start="95:24" pos:end="95:50">(<argument pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:27">cpu</name></expr></argument>, <argument pos:start="95:30" pos:end="95:46"><expr pos:start="95:30" pos:end="95:46"><name pos:start="95:30" pos:end="95:46">PPC_INTERRUPT_WDT</name></expr></argument>, <argument pos:start="95:49" pos:end="95:49"><expr pos:start="95:49" pos:end="95:49"><literal type="number" pos:start="95:49" pos:end="95:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:13">case <expr pos:start="101:10" pos:end="101:12"><literal type="number" pos:start="101:10" pos:end="101:12">0x3</literal></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:45"><expr pos:start="103:9" pos:end="103:44"><name pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:11">env</name><operator pos:start="103:12" pos:end="103:13">-&gt;</operator><name pos:start="103:14" pos:end="103:16">spr</name><index pos:start="103:17" pos:end="103:29">[<expr pos:start="103:18" pos:end="103:28"><name pos:start="103:18" pos:end="103:28">SPR_40x_TSR</name></expr>]</index></name> <operator pos:start="103:31" pos:end="103:32">&amp;=</operator> <operator pos:start="103:34" pos:end="103:34">~</operator><literal type="number" pos:start="103:35" pos:end="103:44">0x30000000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:68"><expr pos:start="105:9" pos:end="105:67"><name pos:start="105:9" pos:end="105:29"><name pos:start="105:9" pos:end="105:11">env</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:16">spr</name><index pos:start="105:17" pos:end="105:29">[<expr pos:start="105:18" pos:end="105:28"><name pos:start="105:18" pos:end="105:28">SPR_40x_TSR</name></expr>]</index></name> <operator pos:start="105:31" pos:end="105:32">|=</operator> <name pos:start="105:34" pos:end="105:54"><name pos:start="105:34" pos:end="105:36">env</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:41">spr</name><index pos:start="105:42" pos:end="105:54">[<expr pos:start="105:43" pos:end="105:53"><name pos:start="105:43" pos:end="105:53">SPR_40x_TCR</name></expr>]</index></name> <operator pos:start="105:56" pos:end="105:56">&amp;</operator> <literal type="number" pos:start="105:58" pos:end="105:67">0x30000000</literal></expr>;</expr_stmt>

        <switch pos:start="107:9" pos:end="133:9">switch <condition pos:start="107:16" pos:end="107:52">(<expr pos:start="107:17" pos:end="107:51"><operator pos:start="107:17" pos:end="107:17">(</operator><name pos:start="107:18" pos:end="107:38"><name pos:start="107:18" pos:end="107:20">env</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:25">spr</name><index pos:start="107:26" pos:end="107:38">[<expr pos:start="107:27" pos:end="107:37"><name pos:start="107:27" pos:end="107:37">SPR_40x_TCR</name></expr>]</index></name> <operator pos:start="107:40" pos:end="107:41">&gt;&gt;</operator> <literal type="number" pos:start="107:43" pos:end="107:44">28</literal><operator pos:start="107:45" pos:end="107:45">)</operator> <operator pos:start="107:47" pos:end="107:47">&amp;</operator> <literal type="number" pos:start="107:49" pos:end="107:51">0x3</literal></expr>)</condition> <block pos:start="107:54" pos:end="133:9">{<block_content pos:start="109:9" pos:end="131:18">

        <case pos:start="109:9" pos:end="109:17">case <expr pos:start="109:14" pos:end="109:16"><literal type="number" pos:start="109:14" pos:end="109:16">0x0</literal></expr>:</case>

            <comment type="block" pos:start="111:13" pos:end="111:26">/* No reset */</comment>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:17">case <expr pos:start="115:14" pos:end="115:16"><literal type="number" pos:start="115:14" pos:end="115:16">0x1</literal></expr>:</case> <comment type="block" pos:start="115:19" pos:end="115:34">/* Core reset */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:35"><expr pos:start="117:13" pos:end="117:34"><call pos:start="117:13" pos:end="117:34"><name pos:start="117:13" pos:end="117:29">ppc40x_core_reset</name><argument_list pos:start="117:30" pos:end="117:34">(<argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="119:13" pos:end="119:18">break;</break>

        <case pos:start="121:9" pos:end="121:17">case <expr pos:start="121:14" pos:end="121:16"><literal type="number" pos:start="121:14" pos:end="121:16">0x2</literal></expr>:</case> <comment type="block" pos:start="121:19" pos:end="121:34">/* Chip reset */</comment>

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><call pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:29">ppc40x_chip_reset</name><argument_list pos:start="123:30" pos:end="123:34">(<argument pos:start="123:31" pos:end="123:33"><expr pos:start="123:31" pos:end="123:33"><name pos:start="123:31" pos:end="123:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="125:13" pos:end="125:18">break;</break>

        <case pos:start="127:9" pos:end="127:17">case <expr pos:start="127:14" pos:end="127:16"><literal type="number" pos:start="127:14" pos:end="127:16">0x3</literal></expr>:</case> <comment type="block" pos:start="127:19" pos:end="127:36">/* System reset */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:37"><expr pos:start="129:13" pos:end="129:36"><call pos:start="129:13" pos:end="129:36"><name pos:start="129:13" pos:end="129:31">ppc40x_system_reset</name><argument_list pos:start="129:32" pos:end="129:36">(<argument pos:start="129:33" pos:end="129:35"><expr pos:start="129:33" pos:end="129:35"><name pos:start="129:33" pos:end="129:35">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="131:13" pos:end="131:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
