<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22375.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decode_frame</name><parameter_list pos:start="1:24" pos:end="5:40">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:28">void</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">data</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:50"><decl pos:start="3:37" pos:end="3:50"><type pos:start="3:37" pos:end="3:50"><name pos:start="3:37" pos:end="3:39">int</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:50">got_frame</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:39"><decl pos:start="5:25" pos:end="5:39"><type pos:start="5:25" pos:end="5:39"><name pos:start="5:25" pos:end="5:32">AVPacket</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:39">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="311:1">{<block_content pos:start="9:5" pos:end="309:23">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">PicContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">s</name> <init pos:start="9:19" pos:end="9:36">= <expr pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:36"><name pos:start="9:21" pos:end="9:25">avctx</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:18">frame</name> <init pos:start="11:20" pos:end="11:25">= <expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">uint32_t</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:21">palette</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:63"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:22">bits_per_plane</name></decl>, <decl pos:start="15:25" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:25" pos:end="15:27">bpp</name></decl>, <decl pos:start="15:30" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:34">etype</name></decl>, <decl pos:start="15:37" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:37" pos:end="15:41">esize</name></decl>, <decl pos:start="15:44" pos:end="15:47"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:44" pos:end="15:47">npal</name></decl>, <decl pos:start="15:50" pos:end="15:62"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:50" pos:end="15:62">pos_after_pal</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">x</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:15">y</name></decl>, <decl pos:start="17:18" pos:end="17:22"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:18" pos:end="17:22">plane</name></decl>, <decl pos:start="17:25" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:25" pos:end="17:27">tmp</name></decl>, <decl pos:start="17:30" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:30" pos:end="17:32">ret</name></decl>, <decl pos:start="17:35" pos:end="17:37"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:35" pos:end="17:37">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:54"><expr pos:start="21:5" pos:end="21:53"><call pos:start="21:5" pos:end="21:53"><name pos:start="21:5" pos:end="21:20">bytestream2_init</name><argument_list pos:start="21:21" pos:end="21:53">(<argument pos:start="21:22" pos:end="21:26"><expr pos:start="21:22" pos:end="21:26"><operator pos:start="21:22" pos:end="21:22">&amp;</operator><name pos:start="21:23" pos:end="21:26"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:26">g</name></name></expr></argument>, <argument pos:start="21:29" pos:end="21:39"><expr pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:39"><name pos:start="21:29" pos:end="21:33">avpkt</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:39">data</name></name></expr></argument>, <argument pos:start="21:42" pos:end="21:52"><expr pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:46">avpkt</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:52">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="27:35"><if pos:start="25:5" pos:end="27:35">if <condition pos:start="25:8" pos:end="25:47">(<expr pos:start="25:9" pos:end="25:46"><call pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:34">bytestream2_get_bytes_left</name><argument_list pos:start="25:35" pos:end="25:41">(<argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:40">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:43" pos:end="25:43">&lt;</operator> <literal type="number" pos:start="25:45" pos:end="25:46">11</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:35"><block_content pos:start="27:9" pos:end="27:35">

        <return pos:start="27:9" pos:end="27:35">return <expr pos:start="27:16" pos:end="27:34"><name pos:start="27:16" pos:end="27:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:47">(<expr pos:start="31:9" pos:end="31:46"><call pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:29">bytestream2_get_le16u</name><argument_list pos:start="31:30" pos:end="31:36">(<argument pos:start="31:31" pos:end="31:35"><expr pos:start="31:31" pos:end="31:35"><operator pos:start="31:31" pos:end="31:31">&amp;</operator><name pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:32">s</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:35">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:38" pos:end="31:39">!=</operator> <literal type="number" pos:start="31:41" pos:end="31:46">0x1234</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:50"><expr pos:start="37:5" pos:end="37:49"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">width</name></name>       <operator pos:start="37:20" pos:end="37:20">=</operator> <call pos:start="37:22" pos:end="37:49"><name pos:start="37:22" pos:end="37:42">bytestream2_get_le16u</name><argument_list pos:start="37:43" pos:end="37:49">(<argument pos:start="37:44" pos:end="37:48"><expr pos:start="37:44" pos:end="37:48"><operator pos:start="37:44" pos:end="37:44">&amp;</operator><name pos:start="37:45" pos:end="37:48"><name pos:start="37:45" pos:end="37:45">s</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:13">height</name></name>      <operator pos:start="39:20" pos:end="39:20">=</operator> <call pos:start="39:22" pos:end="39:49"><name pos:start="39:22" pos:end="39:42">bytestream2_get_le16u</name><argument_list pos:start="39:43" pos:end="39:49">(<argument pos:start="39:44" pos:end="39:48"><expr pos:start="39:44" pos:end="39:48"><operator pos:start="39:44" pos:end="39:44">&amp;</operator><name pos:start="39:45" pos:end="39:48"><name pos:start="39:45" pos:end="39:45">s</name><operator pos:start="39:46" pos:end="39:47">-&gt;</operator><name pos:start="39:48" pos:end="39:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><call pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:20">bytestream2_skip</name><argument_list pos:start="41:21" pos:end="41:30">(<argument pos:start="41:22" pos:end="41:26"><expr pos:start="41:22" pos:end="41:26"><operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:26"><name pos:start="41:23" pos:end="41:23">s</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:26">g</name></name></expr></argument>, <argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><literal type="number" pos:start="41:29" pos:end="41:29">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:50"><expr pos:start="43:5" pos:end="43:49"><name pos:start="43:5" pos:end="43:7">tmp</name>            <operator pos:start="43:20" pos:end="43:20">=</operator> <call pos:start="43:22" pos:end="43:49"><name pos:start="43:22" pos:end="43:42">bytestream2_get_byteu</name><argument_list pos:start="43:43" pos:end="43:49">(<argument pos:start="43:44" pos:end="43:48"><expr pos:start="43:44" pos:end="43:48"><operator pos:start="43:44" pos:end="43:44">&amp;</operator><name pos:start="43:45" pos:end="43:48"><name pos:start="43:45" pos:end="43:45">s</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:18">bits_per_plane</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:24">tmp</name> <operator pos:start="45:26" pos:end="45:26">&amp;</operator> <literal type="number" pos:start="45:28" pos:end="45:30">0xF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:36"><expr pos:start="47:5" pos:end="47:35"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:16">nb_planes</name></name>   <operator pos:start="47:20" pos:end="47:20">=</operator> <operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:25">tmp</name> <operator pos:start="47:27" pos:end="47:28">&gt;&gt;</operator> <literal type="number" pos:start="47:30" pos:end="47:30">4</literal><operator pos:start="47:31" pos:end="47:31">)</operator> <operator pos:start="47:33" pos:end="47:33">+</operator> <literal type="number" pos:start="47:35" pos:end="47:35">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:7">bpp</name>            <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:35">bits_per_plane</name> <operator pos:start="49:37" pos:end="49:37">*</operator> <name pos:start="49:39" pos:end="49:50"><name pos:start="49:39" pos:end="49:39">s</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:50">nb_planes</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="51:50">(<expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:22">bits_per_plane</name> <operator pos:start="51:24" pos:end="51:24">&gt;</operator> <literal type="number" pos:start="51:26" pos:end="51:26">8</literal> <operator pos:start="51:28" pos:end="51:29">||</operator> <name pos:start="51:31" pos:end="51:46"><name pos:start="51:31" pos:end="51:33">bpp</name> <argument_list type="generic" pos:start="51:35" pos:end="51:46">&lt; <argument pos:start="51:37" pos:end="51:44"><expr pos:start="51:37" pos:end="51:44"><literal type="number" pos:start="51:37" pos:end="51:37">1</literal> <operator pos:start="51:39" pos:end="51:40">||</operator> <name pos:start="51:42" pos:end="51:44">bpp</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="51:48" pos:end="51:49">32</literal></expr>)</condition> <block pos:start="51:52" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:36">

        <expr_stmt pos:start="53:9" pos:end="53:62"><expr pos:start="53:9" pos:end="53:61"><call pos:start="53:9" pos:end="53:61"><name pos:start="53:9" pos:end="53:29">avpriv_request_sample</name><argument_list pos:start="53:30" pos:end="53:61">(<argument pos:start="53:31" pos:end="53:35"><expr pos:start="53:31" pos:end="53:35"><name pos:start="53:31" pos:end="53:35">avctx</name></expr></argument>, <argument pos:start="53:38" pos:end="53:60"><expr pos:start="53:38" pos:end="53:60"><literal type="string" pos:start="53:38" pos:end="53:60">"Unsupported bit depth"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="55:9" pos:end="55:36">return <expr pos:start="55:16" pos:end="55:35"><name pos:start="55:16" pos:end="55:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="79:5"><if pos:start="61:5" pos:end="73:5">if <condition pos:start="61:8" pos:end="61:81">(<expr pos:start="61:9" pos:end="61:80"><call pos:start="61:9" pos:end="61:36"><name pos:start="61:9" pos:end="61:29">bytestream2_peek_byte</name><argument_list pos:start="61:30" pos:end="61:36">(<argument pos:start="61:31" pos:end="61:35"><expr pos:start="61:31" pos:end="61:35"><operator pos:start="61:31" pos:end="61:31">&amp;</operator><name pos:start="61:32" pos:end="61:35"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:35">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:38" pos:end="61:39">==</operator> <literal type="number" pos:start="61:41" pos:end="61:44">0xFF</literal> <operator pos:start="61:46" pos:end="61:47">||</operator> <name pos:start="61:49" pos:end="61:51">bpp</name> <operator pos:start="61:53" pos:end="61:54">==</operator> <literal type="number" pos:start="61:56" pos:end="61:56">1</literal> <operator pos:start="61:58" pos:end="61:59">||</operator> <name pos:start="61:61" pos:end="61:63">bpp</name> <operator pos:start="61:65" pos:end="61:66">==</operator> <literal type="number" pos:start="61:68" pos:end="61:68">4</literal> <operator pos:start="61:70" pos:end="61:71">||</operator> <name pos:start="61:73" pos:end="61:75">bpp</name> <operator pos:start="61:77" pos:end="61:78">==</operator> <literal type="number" pos:start="61:80" pos:end="61:80">8</literal></expr>)</condition> <block pos:start="61:83" pos:end="73:5">{<block_content pos:start="63:9" pos:end="71:39">

        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:24">bytestream2_skip</name><argument_list pos:start="63:25" pos:end="63:34">(<argument pos:start="63:26" pos:end="63:30"><expr pos:start="63:26" pos:end="63:30"><operator pos:start="63:26" pos:end="63:26">&amp;</operator><name pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:27">s</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:30">g</name></name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:44"><expr pos:start="65:9" pos:end="65:43"><name pos:start="65:9" pos:end="65:13">etype</name> <operator pos:start="65:15" pos:end="65:15">=</operator> <call pos:start="65:17" pos:end="65:43"><name pos:start="65:17" pos:end="65:36">bytestream2_get_le16</name><argument_list pos:start="65:37" pos:end="65:43">(<argument pos:start="65:38" pos:end="65:42"><expr pos:start="65:38" pos:end="65:42"><operator pos:start="65:38" pos:end="65:38">&amp;</operator><name pos:start="65:39" pos:end="65:42"><name pos:start="65:39" pos:end="65:39">s</name><operator pos:start="65:40" pos:end="65:41">-&gt;</operator><name pos:start="65:42" pos:end="65:42">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:13">esize</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:43"><name pos:start="67:17" pos:end="67:36">bytestream2_get_le16</name><argument_list pos:start="67:37" pos:end="67:43">(<argument pos:start="67:38" pos:end="67:42"><expr pos:start="67:38" pos:end="67:42"><operator pos:start="67:38" pos:end="67:38">&amp;</operator><name pos:start="67:39" pos:end="67:42"><name pos:start="67:39" pos:end="67:39">s</name><operator pos:start="67:40" pos:end="67:41">-&gt;</operator><name pos:start="67:42" pos:end="67:42">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:39"><if pos:start="69:9" pos:end="71:39">if <condition pos:start="69:12" pos:end="69:54">(<expr pos:start="69:13" pos:end="69:53"><call pos:start="69:13" pos:end="69:45"><name pos:start="69:13" pos:end="69:38">bytestream2_get_bytes_left</name><argument_list pos:start="69:39" pos:end="69:45">(<argument pos:start="69:40" pos:end="69:44"><expr pos:start="69:40" pos:end="69:44"><operator pos:start="69:40" pos:end="69:40">&amp;</operator><name pos:start="69:41" pos:end="69:44"><name pos:start="69:41" pos:end="69:41">s</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:44">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:47" pos:end="69:47">&lt;</operator> <name pos:start="69:49" pos:end="69:53">esize</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:39"><block_content pos:start="71:13" pos:end="71:39">

            <return pos:start="71:13" pos:end="71:39">return <expr pos:start="71:20" pos:end="71:38"><name pos:start="71:20" pos:end="71:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="79:5">else <block pos:start="73:12" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:13">etype</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <operator pos:start="75:17" pos:end="75:17">-</operator><literal type="number" pos:start="75:18" pos:end="75:18">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:13">esize</name> <operator pos:start="77:15" pos:end="77:15">=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:37"><expr pos:start="83:5" pos:end="83:36"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:9">avctx</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:18">pix_fmt</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <name pos:start="83:22" pos:end="83:36">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:63">(<expr pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:16">width</name></name> <operator pos:start="87:18" pos:end="87:19">!=</operator> <name pos:start="87:21" pos:end="87:32"><name pos:start="87:21" pos:end="87:25">avctx</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:32">width</name></name> <operator pos:start="87:34" pos:end="87:35">&amp;&amp;</operator> <name pos:start="87:37" pos:end="87:45"><name pos:start="87:37" pos:end="87:37">s</name><operator pos:start="87:38" pos:end="87:39">-&gt;</operator><name pos:start="87:40" pos:end="87:45">height</name></name> <operator pos:start="87:47" pos:end="87:48">!=</operator> <name pos:start="87:50" pos:end="87:62"><name pos:start="87:50" pos:end="87:54">avctx</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:62">height</name></name></expr>)</condition> <block pos:start="87:65" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:59">

        <if_stmt pos:start="89:9" pos:end="91:22"><if pos:start="89:9" pos:end="91:22">if <condition pos:start="89:12" pos:end="89:67">(<expr pos:start="89:13" pos:end="89:66"><call pos:start="89:13" pos:end="89:62"><name pos:start="89:13" pos:end="89:31">av_image_check_size</name><argument_list pos:start="89:32" pos:end="89:62">(<argument pos:start="89:33" pos:end="89:40"><expr pos:start="89:33" pos:end="89:40"><name pos:start="89:33" pos:end="89:40"><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">-&gt;</operator><name pos:start="89:36" pos:end="89:40">width</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:51"><expr pos:start="89:43" pos:end="89:51"><name pos:start="89:43" pos:end="89:51"><name pos:start="89:43" pos:end="89:43">s</name><operator pos:start="89:44" pos:end="89:45">-&gt;</operator><name pos:start="89:46" pos:end="89:51">height</name></name></expr></argument>, <argument pos:start="89:54" pos:end="89:54"><expr pos:start="89:54" pos:end="89:54"><literal type="number" pos:start="89:54" pos:end="89:54">0</literal></expr></argument>, <argument pos:start="89:57" pos:end="89:61"><expr pos:start="89:57" pos:end="89:61"><name pos:start="89:57" pos:end="89:61">avctx</name></expr></argument>)</argument_list></call> <operator pos:start="89:64" pos:end="89:64">&lt;</operator> <literal type="number" pos:start="89:66" pos:end="89:66">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><call pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:30">avcodec_set_dimensions</name><argument_list pos:start="93:31" pos:end="93:58">(<argument pos:start="93:32" pos:end="93:36"><expr pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:36">avctx</name></expr></argument>, <argument pos:start="93:39" pos:end="93:46"><expr pos:start="93:39" pos:end="93:46"><name pos:start="93:39" pos:end="93:46"><name pos:start="93:39" pos:end="93:39">s</name><operator pos:start="93:40" pos:end="93:41">-&gt;</operator><name pos:start="93:42" pos:end="93:46">width</name></name></expr></argument>, <argument pos:start="93:49" pos:end="93:57"><expr pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:57"><name pos:start="93:49" pos:end="93:49">s</name><operator pos:start="93:50" pos:end="93:51">-&gt;</operator><name pos:start="93:52" pos:end="93:57">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="101:19"><if pos:start="99:5" pos:end="101:19">if <condition pos:start="99:8" pos:end="99:51">(<expr pos:start="99:9" pos:end="99:50"><operator pos:start="99:9" pos:end="99:9">(</operator><name pos:start="99:10" pos:end="99:12">ret</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <call pos:start="99:16" pos:end="99:45"><name pos:start="99:16" pos:end="99:28">ff_get_buffer</name><argument_list pos:start="99:29" pos:end="99:45">(<argument pos:start="99:30" pos:end="99:34"><expr pos:start="99:30" pos:end="99:34"><name pos:start="99:30" pos:end="99:34">avctx</name></expr></argument>, <argument pos:start="99:37" pos:end="99:41"><expr pos:start="99:37" pos:end="99:41"><name pos:start="99:37" pos:end="99:41">frame</name></expr></argument>, <argument pos:start="99:44" pos:end="99:44"><expr pos:start="99:44" pos:end="99:44"><literal type="number" pos:start="99:44" pos:end="99:44">0</literal></expr></argument>)</argument_list></call><operator pos:start="99:46" pos:end="99:46">)</operator> <operator pos:start="99:48" pos:end="99:48">&lt;</operator> <literal type="number" pos:start="99:50" pos:end="99:50">0</literal></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:19"><block_content pos:start="101:9" pos:end="101:19">

        <return pos:start="101:9" pos:end="101:19">return <expr pos:start="101:16" pos:end="101:18"><name pos:start="101:16" pos:end="101:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:62"><expr pos:start="103:5" pos:end="103:61"><call pos:start="103:5" pos:end="103:61"><name pos:start="103:5" pos:end="103:10">memset</name><argument_list pos:start="103:11" pos:end="103:61">(<argument pos:start="103:12" pos:end="103:25"><expr pos:start="103:12" pos:end="103:25"><name pos:start="103:12" pos:end="103:25"><name pos:start="103:12" pos:end="103:16">frame</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:22">data</name><index pos:start="103:23" pos:end="103:25">[<expr pos:start="103:24" pos:end="103:24"><literal type="number" pos:start="103:24" pos:end="103:24">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="103:28" pos:end="103:28"><expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">0</literal></expr></argument>, <argument pos:start="103:31" pos:end="103:60"><expr pos:start="103:31" pos:end="103:60"><name pos:start="103:31" pos:end="103:39"><name pos:start="103:31" pos:end="103:31">s</name><operator pos:start="103:32" pos:end="103:33">-&gt;</operator><name pos:start="103:34" pos:end="103:39">height</name></name> <operator pos:start="103:41" pos:end="103:41">*</operator> <name pos:start="103:43" pos:end="103:60"><name pos:start="103:43" pos:end="103:47">frame</name><operator pos:start="103:48" pos:end="103:49">-&gt;</operator><name pos:start="103:50" pos:end="103:57">linesize</name><index pos:start="103:58" pos:end="103:60">[<expr pos:start="103:59" pos:end="103:59"><literal type="number" pos:start="103:59" pos:end="103:59">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:9">frame</name><operator pos:start="105:10" pos:end="105:11">-&gt;</operator><name pos:start="105:12" pos:end="105:20">pict_type</name></name>           <operator pos:start="105:32" pos:end="105:32">=</operator> <name pos:start="105:34" pos:end="105:50">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:9">frame</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:30">palette_has_changed</name></name> <operator pos:start="107:32" pos:end="107:32">=</operator> <literal type="number" pos:start="107:34" pos:end="107:34">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:52"><expr pos:start="111:5" pos:end="111:51"><name pos:start="111:5" pos:end="111:17">pos_after_pal</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <call pos:start="111:21" pos:end="111:43"><name pos:start="111:21" pos:end="111:36">bytestream2_tell</name><argument_list pos:start="111:37" pos:end="111:43">(<argument pos:start="111:38" pos:end="111:42"><expr pos:start="111:38" pos:end="111:42"><operator pos:start="111:38" pos:end="111:38">&amp;</operator><name pos:start="111:39" pos:end="111:42"><name pos:start="111:39" pos:end="111:39">s</name><operator pos:start="111:40" pos:end="111:41">-&gt;</operator><name pos:start="111:42" pos:end="111:42">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:45" pos:end="111:45">+</operator> <name pos:start="111:47" pos:end="111:51">esize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:40"><expr pos:start="113:5" pos:end="113:39"><name pos:start="113:5" pos:end="113:11">palette</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <operator pos:start="113:15" pos:end="113:15">(</operator><name pos:start="113:16" pos:end="113:23">uint32_t</name><operator pos:start="113:24" pos:end="113:24">*</operator><operator pos:start="113:25" pos:end="113:25">)</operator><name pos:start="113:26" pos:end="113:39"><name pos:start="113:26" pos:end="113:30">frame</name><operator pos:start="113:31" pos:end="113:32">-&gt;</operator><name pos:start="113:33" pos:end="113:36">data</name><index pos:start="113:37" pos:end="113:39">[<expr pos:start="113:38" pos:end="113:38"><literal type="number" pos:start="113:38" pos:end="113:38">1</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="187:5"><if pos:start="115:5" pos:end="125:5">if <condition pos:start="115:8" pos:end="115:68">(<expr pos:start="115:9" pos:end="115:67"><name pos:start="115:9" pos:end="115:13">etype</name> <operator pos:start="115:15" pos:end="115:16">==</operator> <literal type="number" pos:start="115:18" pos:end="115:18">1</literal> <operator pos:start="115:20" pos:end="115:21">&amp;&amp;</operator> <name pos:start="115:23" pos:end="115:27">esize</name> <operator pos:start="115:29" pos:end="115:29">&gt;</operator> <literal type="number" pos:start="115:31" pos:end="115:31">1</literal> <operator pos:start="115:33" pos:end="115:34">&amp;&amp;</operator> <call pos:start="115:36" pos:end="115:63"><name pos:start="115:36" pos:end="115:56">bytestream2_peek_byte</name><argument_list pos:start="115:57" pos:end="115:63">(<argument pos:start="115:58" pos:end="115:62"><expr pos:start="115:58" pos:end="115:62"><operator pos:start="115:58" pos:end="115:58">&amp;</operator><name pos:start="115:59" pos:end="115:62"><name pos:start="115:59" pos:end="115:59">s</name><operator pos:start="115:60" pos:end="115:61">-&gt;</operator><name pos:start="115:62" pos:end="115:62">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="115:65" pos:end="115:65">&lt;</operator> <literal type="number" pos:start="115:67" pos:end="115:67">6</literal></expr>)</condition> <block pos:start="115:70" pos:end="125:5">{<block_content pos:start="117:9" pos:end="123:68">

        <decl_stmt pos:start="117:9" pos:end="117:46"><decl pos:start="117:9" pos:end="117:45"><type pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:11">int</name></type> <name pos:start="117:13" pos:end="117:15">idx</name> <init pos:start="117:17" pos:end="117:45">= <expr pos:start="117:19" pos:end="117:45"><call pos:start="117:19" pos:end="117:45"><name pos:start="117:19" pos:end="117:38">bytestream2_get_byte</name><argument_list pos:start="117:39" pos:end="117:45">(<argument pos:start="117:40" pos:end="117:44"><expr pos:start="117:40" pos:end="117:44"><operator pos:start="117:40" pos:end="117:40">&amp;</operator><name pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:41">s</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:44">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:17"><expr pos:start="119:9" pos:end="119:16"><name pos:start="119:9" pos:end="119:12">npal</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <literal type="number" pos:start="119:16" pos:end="119:16">4</literal></expr>;</expr_stmt>

        <for pos:start="121:9" pos:end="123:68">for <control pos:start="121:13" pos:end="121:34">(<init pos:start="121:14" pos:end="121:19"><expr pos:start="121:14" pos:end="121:18"><name pos:start="121:14" pos:end="121:14">i</name> <operator pos:start="121:16" pos:end="121:16">=</operator> <literal type="number" pos:start="121:18" pos:end="121:18">0</literal></expr>;</init> <condition pos:start="121:21" pos:end="121:29"><expr pos:start="121:21" pos:end="121:28"><name pos:start="121:21" pos:end="121:21">i</name> <operator pos:start="121:23" pos:end="121:23">&lt;</operator> <name pos:start="121:25" pos:end="121:28">npal</name></expr>;</condition> <incr pos:start="121:31" pos:end="121:33"><expr pos:start="121:31" pos:end="121:33"><name pos:start="121:31" pos:end="121:31">i</name><operator pos:start="121:32" pos:end="121:33">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:13" pos:end="123:68"><block_content pos:start="123:13" pos:end="123:68">

            <expr_stmt pos:start="123:13" pos:end="123:68"><expr pos:start="123:13" pos:end="123:67"><name pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:19">palette</name><index pos:start="123:20" pos:end="123:22">[<expr pos:start="123:21" pos:end="123:21"><name pos:start="123:21" pos:end="123:21">i</name></expr>]</index></name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:67"><name pos:start="123:26" pos:end="123:39">ff_cga_palette</name><index pos:start="123:40" pos:end="123:67">[ <expr pos:start="123:42" pos:end="123:65"><name pos:start="123:42" pos:end="123:65"><name pos:start="123:42" pos:end="123:57">cga_mode45_index</name><index pos:start="123:58" pos:end="123:62">[<expr pos:start="123:59" pos:end="123:61"><name pos:start="123:59" pos:end="123:61">idx</name></expr>]</index><index pos:start="123:63" pos:end="123:65">[<expr pos:start="123:64" pos:end="123:64"><name pos:start="123:64" pos:end="123:64">i</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="137:5">else if <condition pos:start="125:15" pos:end="125:26">(<expr pos:start="125:16" pos:end="125:25"><name pos:start="125:16" pos:end="125:20">etype</name> <operator pos:start="125:22" pos:end="125:23">==</operator> <literal type="number" pos:start="125:25" pos:end="125:25">2</literal></expr>)</condition> <block pos:start="125:28" pos:end="137:5">{<block_content pos:start="127:9" pos:end="135:9">

        <expr_stmt pos:start="127:9" pos:end="127:32"><expr pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:12">npal</name> <operator pos:start="127:14" pos:end="127:14">=</operator> <call pos:start="127:16" pos:end="127:31"><name pos:start="127:16" pos:end="127:20">FFMIN</name><argument_list pos:start="127:21" pos:end="127:31">(<argument pos:start="127:22" pos:end="127:26"><expr pos:start="127:22" pos:end="127:26"><name pos:start="127:22" pos:end="127:26">esize</name></expr></argument>, <argument pos:start="127:29" pos:end="127:30"><expr pos:start="127:29" pos:end="127:30"><literal type="number" pos:start="127:29" pos:end="127:30">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="129:9" pos:end="135:9">for <control pos:start="129:13" pos:end="129:34">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:29"><expr pos:start="129:21" pos:end="129:28"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <name pos:start="129:25" pos:end="129:28">npal</name></expr>;</condition> <incr pos:start="129:31" pos:end="129:33"><expr pos:start="129:31" pos:end="129:33"><name pos:start="129:31" pos:end="129:31">i</name><operator pos:start="129:32" pos:end="129:33">++</operator></expr></incr>)</control> <block pos:start="129:36" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:61">

            <decl_stmt pos:start="131:13" pos:end="131:54"><decl pos:start="131:13" pos:end="131:53"><type pos:start="131:13" pos:end="131:15"><name pos:start="131:13" pos:end="131:15">int</name></type> <name pos:start="131:17" pos:end="131:23">pal_idx</name> <init pos:start="131:25" pos:end="131:53">= <expr pos:start="131:27" pos:end="131:53"><call pos:start="131:27" pos:end="131:53"><name pos:start="131:27" pos:end="131:46">bytestream2_get_byte</name><argument_list pos:start="131:47" pos:end="131:53">(<argument pos:start="131:48" pos:end="131:52"><expr pos:start="131:48" pos:end="131:52"><operator pos:start="131:48" pos:end="131:48">&amp;</operator><name pos:start="131:49" pos:end="131:52"><name pos:start="131:49" pos:end="131:49">s</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:52">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:61"><expr pos:start="133:13" pos:end="133:60"><name pos:start="133:13" pos:end="133:22"><name pos:start="133:13" pos:end="133:19">palette</name><index pos:start="133:20" pos:end="133:22">[<expr pos:start="133:21" pos:end="133:21"><name pos:start="133:21" pos:end="133:21">i</name></expr>]</index></name>  <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:60"><name pos:start="133:27" pos:end="133:40">ff_cga_palette</name><index pos:start="133:41" pos:end="133:60">[<expr pos:start="133:42" pos:end="133:59"><call pos:start="133:42" pos:end="133:59"><name pos:start="133:42" pos:end="133:46">FFMIN</name><argument_list pos:start="133:47" pos:end="133:59">(<argument pos:start="133:48" pos:end="133:54"><expr pos:start="133:48" pos:end="133:54"><name pos:start="133:48" pos:end="133:54">pal_idx</name></expr></argument>, <argument pos:start="133:57" pos:end="133:58"><expr pos:start="133:57" pos:end="133:58"><literal type="number" pos:start="133:57" pos:end="133:58">15</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="137:7" pos:end="149:5">else if <condition pos:start="137:15" pos:end="137:26">(<expr pos:start="137:16" pos:end="137:25"><name pos:start="137:16" pos:end="137:20">etype</name> <operator pos:start="137:22" pos:end="137:23">==</operator> <literal type="number" pos:start="137:25" pos:end="137:25">3</literal></expr>)</condition> <block pos:start="137:28" pos:end="149:5">{<block_content pos:start="139:9" pos:end="147:9">

        <expr_stmt pos:start="139:9" pos:end="139:32"><expr pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:12">npal</name> <operator pos:start="139:14" pos:end="139:14">=</operator> <call pos:start="139:16" pos:end="139:31"><name pos:start="139:16" pos:end="139:20">FFMIN</name><argument_list pos:start="139:21" pos:end="139:31">(<argument pos:start="139:22" pos:end="139:26"><expr pos:start="139:22" pos:end="139:26"><name pos:start="139:22" pos:end="139:26">esize</name></expr></argument>, <argument pos:start="139:29" pos:end="139:30"><expr pos:start="139:29" pos:end="139:30"><literal type="number" pos:start="139:29" pos:end="139:30">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="141:9" pos:end="147:9">for <control pos:start="141:13" pos:end="141:34">(<init pos:start="141:14" pos:end="141:19"><expr pos:start="141:14" pos:end="141:18"><name pos:start="141:14" pos:end="141:14">i</name> <operator pos:start="141:16" pos:end="141:16">=</operator> <literal type="number" pos:start="141:18" pos:end="141:18">0</literal></expr>;</init> <condition pos:start="141:21" pos:end="141:29"><expr pos:start="141:21" pos:end="141:28"><name pos:start="141:21" pos:end="141:21">i</name> <operator pos:start="141:23" pos:end="141:23">&lt;</operator> <name pos:start="141:25" pos:end="141:28">npal</name></expr>;</condition> <incr pos:start="141:31" pos:end="141:33"><expr pos:start="141:31" pos:end="141:33"><name pos:start="141:31" pos:end="141:31">i</name><operator pos:start="141:32" pos:end="141:33">++</operator></expr></incr>)</control> <block pos:start="141:36" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:61">

            <decl_stmt pos:start="143:13" pos:end="143:54"><decl pos:start="143:13" pos:end="143:53"><type pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:15">int</name></type> <name pos:start="143:17" pos:end="143:23">pal_idx</name> <init pos:start="143:25" pos:end="143:53">= <expr pos:start="143:27" pos:end="143:53"><call pos:start="143:27" pos:end="143:53"><name pos:start="143:27" pos:end="143:46">bytestream2_get_byte</name><argument_list pos:start="143:47" pos:end="143:53">(<argument pos:start="143:48" pos:end="143:52"><expr pos:start="143:48" pos:end="143:52"><operator pos:start="143:48" pos:end="143:48">&amp;</operator><name pos:start="143:49" pos:end="143:52"><name pos:start="143:49" pos:end="143:49">s</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:52">g</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:61"><expr pos:start="145:13" pos:end="145:60"><name pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:19">palette</name><index pos:start="145:20" pos:end="145:22">[<expr pos:start="145:21" pos:end="145:21"><name pos:start="145:21" pos:end="145:21">i</name></expr>]</index></name>  <operator pos:start="145:25" pos:end="145:25">=</operator> <name pos:start="145:27" pos:end="145:60"><name pos:start="145:27" pos:end="145:40">ff_ega_palette</name><index pos:start="145:41" pos:end="145:60">[<expr pos:start="145:42" pos:end="145:59"><call pos:start="145:42" pos:end="145:59"><name pos:start="145:42" pos:end="145:46">FFMIN</name><argument_list pos:start="145:47" pos:end="145:59">(<argument pos:start="145:48" pos:end="145:54"><expr pos:start="145:48" pos:end="145:54"><name pos:start="145:48" pos:end="145:54">pal_idx</name></expr></argument>, <argument pos:start="145:57" pos:end="145:58"><expr pos:start="145:57" pos:end="145:58"><literal type="number" pos:start="145:57" pos:end="145:58">63</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <if type="elseif" pos:start="149:7" pos:end="161:5">else if <condition pos:start="149:15" pos:end="149:40">(<expr pos:start="149:16" pos:end="149:39"><name pos:start="149:16" pos:end="149:20">etype</name> <operator pos:start="149:22" pos:end="149:23">==</operator> <literal type="number" pos:start="149:25" pos:end="149:25">4</literal> <operator pos:start="149:27" pos:end="149:28">||</operator> <name pos:start="149:30" pos:end="149:34">etype</name> <operator pos:start="149:36" pos:end="149:37">==</operator> <literal type="number" pos:start="149:39" pos:end="149:39">5</literal></expr>)</condition> <block pos:start="149:42" pos:end="161:5">{<block_content pos:start="151:9" pos:end="159:9">

        <expr_stmt pos:start="151:9" pos:end="151:37"><expr pos:start="151:9" pos:end="151:36"><name pos:start="151:9" pos:end="151:12">npal</name> <operator pos:start="151:14" pos:end="151:14">=</operator> <call pos:start="151:16" pos:end="151:36"><name pos:start="151:16" pos:end="151:20">FFMIN</name><argument_list pos:start="151:21" pos:end="151:36">(<argument pos:start="151:22" pos:end="151:30"><expr pos:start="151:22" pos:end="151:30"><name pos:start="151:22" pos:end="151:26">esize</name> <operator pos:start="151:28" pos:end="151:28">/</operator> <literal type="number" pos:start="151:30" pos:end="151:30">3</literal></expr></argument>, <argument pos:start="151:33" pos:end="151:35"><expr pos:start="151:33" pos:end="151:35"><literal type="number" pos:start="151:33" pos:end="151:35">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="153:9" pos:end="159:9">for <control pos:start="153:13" pos:end="153:34">(<init pos:start="153:14" pos:end="153:19"><expr pos:start="153:14" pos:end="153:18"><name pos:start="153:14" pos:end="153:14">i</name> <operator pos:start="153:16" pos:end="153:16">=</operator> <literal type="number" pos:start="153:18" pos:end="153:18">0</literal></expr>;</init> <condition pos:start="153:21" pos:end="153:29"><expr pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:21">i</name> <operator pos:start="153:23" pos:end="153:23">&lt;</operator> <name pos:start="153:25" pos:end="153:28">npal</name></expr>;</condition> <incr pos:start="153:31" pos:end="153:33"><expr pos:start="153:31" pos:end="153:33"><name pos:start="153:31" pos:end="153:31">i</name><operator pos:start="153:32" pos:end="153:33">++</operator></expr></incr>)</control> <block pos:start="153:36" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:66">

            <expr_stmt pos:start="155:13" pos:end="155:58"><expr pos:start="155:13" pos:end="155:57"><name pos:start="155:13" pos:end="155:22"><name pos:start="155:13" pos:end="155:19">palette</name><index pos:start="155:20" pos:end="155:22">[<expr pos:start="155:21" pos:end="155:21"><name pos:start="155:21" pos:end="155:21">i</name></expr>]</index></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:52"><name pos:start="155:26" pos:end="155:45">bytestream2_get_be24</name><argument_list pos:start="155:46" pos:end="155:52">(<argument pos:start="155:47" pos:end="155:51"><expr pos:start="155:47" pos:end="155:51"><operator pos:start="155:47" pos:end="155:47">&amp;</operator><name pos:start="155:48" pos:end="155:51"><name pos:start="155:48" pos:end="155:48">s</name><operator pos:start="155:49" pos:end="155:50">-&gt;</operator><name pos:start="155:51" pos:end="155:51">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="155:54" pos:end="155:55">&lt;&lt;</operator> <literal type="number" pos:start="155:57" pos:end="155:57">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:66"><expr pos:start="157:13" pos:end="157:65"><name pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:19">palette</name><index pos:start="157:20" pos:end="157:22">[<expr pos:start="157:21" pos:end="157:21"><name pos:start="157:21" pos:end="157:21">i</name></expr>]</index></name> <operator pos:start="157:24" pos:end="157:25">|=</operator> <literal type="number" pos:start="157:27" pos:end="157:31">0xFFU</literal> <operator pos:start="157:33" pos:end="157:34">&lt;&lt;</operator> <literal type="number" pos:start="157:36" pos:end="157:37">24</literal> <operator pos:start="157:39" pos:end="157:39">|</operator> <name pos:start="157:41" pos:end="157:50"><name pos:start="157:41" pos:end="157:47">palette</name><index pos:start="157:48" pos:end="157:50">[<expr pos:start="157:49" pos:end="157:49"><name pos:start="157:49" pos:end="157:49">i</name></expr>]</index></name> <operator pos:start="157:52" pos:end="157:53">&gt;&gt;</operator> <literal type="number" pos:start="157:55" pos:end="157:55">6</literal> <operator pos:start="157:57" pos:end="157:57">&amp;</operator> <literal type="number" pos:start="157:59" pos:end="157:65">0x30303</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="187:5">else <block pos:start="161:12" pos:end="187:5">{<block_content pos:start="163:9" pos:end="185:9">

        <if_stmt pos:start="163:9" pos:end="185:9"><if pos:start="163:9" pos:end="171:9">if <condition pos:start="163:12" pos:end="163:21">(<expr pos:start="163:13" pos:end="163:20"><name pos:start="163:13" pos:end="163:15">bpp</name> <operator pos:start="163:17" pos:end="163:18">==</operator> <literal type="number" pos:start="163:20" pos:end="163:20">1</literal></expr>)</condition> <block pos:start="163:23" pos:end="171:9">{<block_content pos:start="165:13" pos:end="169:36">

            <expr_stmt pos:start="165:13" pos:end="165:21"><expr pos:start="165:13" pos:end="165:20"><name pos:start="165:13" pos:end="165:16">npal</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <literal type="number" pos:start="165:20" pos:end="165:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:36"><expr pos:start="167:13" pos:end="167:35"><name pos:start="167:13" pos:end="167:22"><name pos:start="167:13" pos:end="167:19">palette</name><index pos:start="167:20" pos:end="167:22">[<expr pos:start="167:21" pos:end="167:21"><literal type="number" pos:start="167:21" pos:end="167:21">0</literal></expr>]</index></name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:35">0xFF000000</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:36"><expr pos:start="169:13" pos:end="169:35"><name pos:start="169:13" pos:end="169:22"><name pos:start="169:13" pos:end="169:19">palette</name><index pos:start="169:20" pos:end="169:22">[<expr pos:start="169:21" pos:end="169:21"><literal type="number" pos:start="169:21" pos:end="169:21">1</literal></expr>]</index></name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:35">0xFFFFFFFF</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="171:11" pos:end="179:9">else if <condition pos:start="171:19" pos:end="171:28">(<expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:22">bpp</name> <operator pos:start="171:24" pos:end="171:25">==</operator> <literal type="number" pos:start="171:27" pos:end="171:27">2</literal></expr>)</condition> <block pos:start="171:30" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:70">

            <expr_stmt pos:start="173:13" pos:end="173:21"><expr pos:start="173:13" pos:end="173:20"><name pos:start="173:13" pos:end="173:16">npal</name> <operator pos:start="173:18" pos:end="173:18">=</operator> <literal type="number" pos:start="173:20" pos:end="173:20">4</literal></expr>;</expr_stmt>

            <for pos:start="175:13" pos:end="177:70">for <control pos:start="175:17" pos:end="175:38">(<init pos:start="175:18" pos:end="175:23"><expr pos:start="175:18" pos:end="175:22"><name pos:start="175:18" pos:end="175:18">i</name> <operator pos:start="175:20" pos:end="175:20">=</operator> <literal type="number" pos:start="175:22" pos:end="175:22">0</literal></expr>;</init> <condition pos:start="175:25" pos:end="175:33"><expr pos:start="175:25" pos:end="175:32"><name pos:start="175:25" pos:end="175:25">i</name> <operator pos:start="175:27" pos:end="175:27">&lt;</operator> <name pos:start="175:29" pos:end="175:32">npal</name></expr>;</condition> <incr pos:start="175:35" pos:end="175:37"><expr pos:start="175:35" pos:end="175:37"><name pos:start="175:35" pos:end="175:35">i</name><operator pos:start="175:36" pos:end="175:37">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:17" pos:end="177:70"><block_content pos:start="177:17" pos:end="177:70">

                <expr_stmt pos:start="177:17" pos:end="177:70"><expr pos:start="177:17" pos:end="177:69"><name pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:23">palette</name><index pos:start="177:24" pos:end="177:26">[<expr pos:start="177:25" pos:end="177:25"><name pos:start="177:25" pos:end="177:25">i</name></expr>]</index></name> <operator pos:start="177:28" pos:end="177:28">=</operator> <name pos:start="177:30" pos:end="177:69"><name pos:start="177:30" pos:end="177:43">ff_cga_palette</name><index pos:start="177:44" pos:end="177:69">[ <expr pos:start="177:46" pos:end="177:67"><name pos:start="177:46" pos:end="177:67"><name pos:start="177:46" pos:end="177:61">cga_mode45_index</name><index pos:start="177:62" pos:end="177:64">[<expr pos:start="177:63" pos:end="177:63"><literal type="number" pos:start="177:63" pos:end="177:63">0</literal></expr>]</index><index pos:start="177:65" pos:end="177:67">[<expr pos:start="177:66" pos:end="177:66"><name pos:start="177:66" pos:end="177:66">i</name></expr>]</index></name></expr> ]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <else pos:start="179:11" pos:end="185:9">else <block pos:start="179:16" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:54">

            <expr_stmt pos:start="181:13" pos:end="181:22"><expr pos:start="181:13" pos:end="181:21"><name pos:start="181:13" pos:end="181:16">npal</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <literal type="number" pos:start="181:20" pos:end="181:21">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:54"><expr pos:start="183:13" pos:end="183:53"><call pos:start="183:13" pos:end="183:53"><name pos:start="183:13" pos:end="183:18">memcpy</name><argument_list pos:start="183:19" pos:end="183:53">(<argument pos:start="183:20" pos:end="183:26"><expr pos:start="183:20" pos:end="183:26"><name pos:start="183:20" pos:end="183:26">palette</name></expr></argument>, <argument pos:start="183:29" pos:end="183:42"><expr pos:start="183:29" pos:end="183:42"><name pos:start="183:29" pos:end="183:42">ff_cga_palette</name></expr></argument>, <argument pos:start="183:45" pos:end="183:52"><expr pos:start="183:45" pos:end="183:52"><name pos:start="183:45" pos:end="183:48">npal</name> <operator pos:start="183:50" pos:end="183:50">*</operator> <literal type="number" pos:start="183:52" pos:end="183:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="line" pos:start="189:5" pos:end="189:37">// fill remaining palette entries</comment>

    <expr_stmt pos:start="191:5" pos:end="191:57"><expr pos:start="191:5" pos:end="191:56"><call pos:start="191:5" pos:end="191:56"><name pos:start="191:5" pos:end="191:10">memset</name><argument_list pos:start="191:11" pos:end="191:56">(<argument pos:start="191:12" pos:end="191:25"><expr pos:start="191:12" pos:end="191:25"><name pos:start="191:12" pos:end="191:18">palette</name> <operator pos:start="191:20" pos:end="191:20">+</operator> <name pos:start="191:22" pos:end="191:25">npal</name></expr></argument>, <argument pos:start="191:28" pos:end="191:28"><expr pos:start="191:28" pos:end="191:28"><literal type="number" pos:start="191:28" pos:end="191:28">0</literal></expr></argument>, <argument pos:start="191:31" pos:end="191:55"><expr pos:start="191:31" pos:end="191:55"><name pos:start="191:31" pos:end="191:44">AVPALETTE_SIZE</name> <operator pos:start="191:46" pos:end="191:46">-</operator> <name pos:start="191:48" pos:end="191:51">npal</name> <operator pos:start="191:53" pos:end="191:53">*</operator> <literal type="number" pos:start="191:55" pos:end="191:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="193:5" pos:end="193:35">// skip remaining palette bytes</comment>

    <expr_stmt pos:start="195:5" pos:end="195:53"><expr pos:start="195:5" pos:end="195:52"><call pos:start="195:5" pos:end="195:52"><name pos:start="195:5" pos:end="195:20">bytestream2_seek</name><argument_list pos:start="195:21" pos:end="195:52">(<argument pos:start="195:22" pos:end="195:26"><expr pos:start="195:22" pos:end="195:26"><operator pos:start="195:22" pos:end="195:22">&amp;</operator><name pos:start="195:23" pos:end="195:26"><name pos:start="195:23" pos:end="195:23">s</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:26">g</name></name></expr></argument>, <argument pos:start="195:29" pos:end="195:41"><expr pos:start="195:29" pos:end="195:41"><name pos:start="195:29" pos:end="195:41">pos_after_pal</name></expr></argument>, <argument pos:start="195:44" pos:end="195:51"><expr pos:start="195:44" pos:end="195:51"><name pos:start="195:44" pos:end="195:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:12"><expr pos:start="199:5" pos:end="199:11"><name pos:start="199:5" pos:end="199:7">val</name> <operator pos:start="199:9" pos:end="199:9">=</operator> <literal type="number" pos:start="199:11" pos:end="199:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:22"><expr pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:5">y</name> <operator pos:start="201:7" pos:end="201:7">=</operator> <name pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:9">s</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:17">height</name></name> <operator pos:start="201:19" pos:end="201:19">-</operator> <literal type="number" pos:start="201:21" pos:end="201:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="203:5" pos:end="301:5"><if pos:start="203:5" pos:end="289:5">if <condition pos:start="203:8" pos:end="203:36">(<expr pos:start="203:9" pos:end="203:35"><call pos:start="203:9" pos:end="203:35"><name pos:start="203:9" pos:end="203:28">bytestream2_get_le16</name><argument_list pos:start="203:29" pos:end="203:35">(<argument pos:start="203:30" pos:end="203:34"><expr pos:start="203:30" pos:end="203:34"><operator pos:start="203:30" pos:end="203:30">&amp;</operator><name pos:start="203:31" pos:end="203:34"><name pos:start="203:31" pos:end="203:31">s</name><operator pos:start="203:32" pos:end="203:33">-&gt;</operator><name pos:start="203:34" pos:end="203:34">g</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="203:38" pos:end="289:5">{<block_content pos:start="205:9" pos:end="287:9">

        <expr_stmt pos:start="205:9" pos:end="205:14"><expr pos:start="205:9" pos:end="205:13"><name pos:start="205:9" pos:end="205:9">x</name> <operator pos:start="205:11" pos:end="205:11">=</operator> <literal type="number" pos:start="205:13" pos:end="205:13">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:18"><expr pos:start="207:9" pos:end="207:17"><name pos:start="207:9" pos:end="207:13">plane</name> <operator pos:start="207:15" pos:end="207:15">=</operator> <literal type="number" pos:start="207:17" pos:end="207:17">0</literal></expr>;</expr_stmt>

        <while pos:start="209:9" pos:end="271:9">while <condition pos:start="209:15" pos:end="209:64">(<expr pos:start="209:16" pos:end="209:63"><name pos:start="209:16" pos:end="209:16">y</name> <operator pos:start="209:18" pos:end="209:19">&gt;=</operator> <literal type="number" pos:start="209:21" pos:end="209:21">0</literal> <operator pos:start="209:23" pos:end="209:24">&amp;&amp;</operator> <call pos:start="209:26" pos:end="209:58"><name pos:start="209:26" pos:end="209:51">bytestream2_get_bytes_left</name><argument_list pos:start="209:52" pos:end="209:58">(<argument pos:start="209:53" pos:end="209:57"><expr pos:start="209:53" pos:end="209:57"><operator pos:start="209:53" pos:end="209:53">&amp;</operator><name pos:start="209:54" pos:end="209:57"><name pos:start="209:54" pos:end="209:54">s</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:57">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="209:60" pos:end="209:61">&gt;=</operator> <literal type="number" pos:start="209:63" pos:end="209:63">6</literal></expr>)</condition> <block pos:start="209:66" pos:end="271:9">{<block_content pos:start="211:13" pos:end="269:13">

            <decl_stmt pos:start="211:13" pos:end="211:42"><decl pos:start="211:13" pos:end="211:25"><type pos:start="211:13" pos:end="211:15"><name pos:start="211:13" pos:end="211:15">int</name></type> <name pos:start="211:17" pos:end="211:25">stop_size</name></decl>, <decl pos:start="211:28" pos:end="211:33"><type ref="prev" pos:start="211:13" pos:end="211:15"/><name pos:start="211:28" pos:end="211:33">marker</name></decl>, <decl pos:start="211:36" pos:end="211:37"><type ref="prev" pos:start="211:13" pos:end="211:15"/><name pos:start="211:36" pos:end="211:37">t1</name></decl>, <decl pos:start="211:40" pos:end="211:41"><type ref="prev" pos:start="211:13" pos:end="211:15"/><name pos:start="211:40" pos:end="211:41">t2</name></decl>;</decl_stmt>



            <expr_stmt pos:start="215:13" pos:end="215:58"><expr pos:start="215:13" pos:end="215:57"><name pos:start="215:13" pos:end="215:14">t1</name>        <operator pos:start="215:23" pos:end="215:23">=</operator> <call pos:start="215:25" pos:end="215:57"><name pos:start="215:25" pos:end="215:50">bytestream2_get_bytes_left</name><argument_list pos:start="215:51" pos:end="215:57">(<argument pos:start="215:52" pos:end="215:56"><expr pos:start="215:52" pos:end="215:56"><operator pos:start="215:52" pos:end="215:52">&amp;</operator><name pos:start="215:53" pos:end="215:56"><name pos:start="215:53" pos:end="215:53">s</name><operator pos:start="215:54" pos:end="215:55">-&gt;</operator><name pos:start="215:56" pos:end="215:56">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:52"><expr pos:start="217:13" pos:end="217:51"><name pos:start="217:13" pos:end="217:14">t2</name>        <operator pos:start="217:23" pos:end="217:23">=</operator> <call pos:start="217:25" pos:end="217:51"><name pos:start="217:25" pos:end="217:44">bytestream2_get_le16</name><argument_list pos:start="217:45" pos:end="217:51">(<argument pos:start="217:46" pos:end="217:50"><expr pos:start="217:46" pos:end="217:50"><operator pos:start="217:46" pos:end="217:46">&amp;</operator><name pos:start="217:47" pos:end="217:50"><name pos:start="217:47" pos:end="217:47">s</name><operator pos:start="217:48" pos:end="217:49">-&gt;</operator><name pos:start="217:50" pos:end="217:50">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:43"><expr pos:start="219:13" pos:end="219:42"><name pos:start="219:13" pos:end="219:21">stop_size</name> <operator pos:start="219:23" pos:end="219:23">=</operator> <name pos:start="219:25" pos:end="219:26">t1</name> <operator pos:start="219:28" pos:end="219:28">-</operator> <call pos:start="219:30" pos:end="219:42"><name pos:start="219:30" pos:end="219:34">FFMIN</name><argument_list pos:start="219:35" pos:end="219:42">(<argument pos:start="219:36" pos:end="219:37"><expr pos:start="219:36" pos:end="219:37"><name pos:start="219:36" pos:end="219:37">t1</name></expr></argument>, <argument pos:start="219:40" pos:end="219:41"><expr pos:start="219:40" pos:end="219:41"><name pos:start="219:40" pos:end="219:41">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="221:13" pos:end="221:45">// ignore uncompressed block size</comment>

            <expr_stmt pos:start="223:13" pos:end="223:39"><expr pos:start="223:13" pos:end="223:38"><call pos:start="223:13" pos:end="223:38"><name pos:start="223:13" pos:end="223:28">bytestream2_skip</name><argument_list pos:start="223:29" pos:end="223:38">(<argument pos:start="223:30" pos:end="223:34"><expr pos:start="223:30" pos:end="223:34"><operator pos:start="223:30" pos:end="223:30">&amp;</operator><name pos:start="223:31" pos:end="223:34"><name pos:start="223:31" pos:end="223:31">s</name><operator pos:start="223:32" pos:end="223:33">-&gt;</operator><name pos:start="223:34" pos:end="223:34">g</name></name></expr></argument>, <argument pos:start="223:37" pos:end="223:37"><expr pos:start="223:37" pos:end="223:37"><literal type="number" pos:start="223:37" pos:end="223:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:52"><expr pos:start="225:13" pos:end="225:51"><name pos:start="225:13" pos:end="225:18">marker</name>    <operator pos:start="225:23" pos:end="225:23">=</operator> <call pos:start="225:25" pos:end="225:51"><name pos:start="225:25" pos:end="225:44">bytestream2_get_byte</name><argument_list pos:start="225:45" pos:end="225:51">(<argument pos:start="225:46" pos:end="225:50"><expr pos:start="225:46" pos:end="225:50"><operator pos:start="225:46" pos:end="225:46">&amp;</operator><name pos:start="225:47" pos:end="225:50"><name pos:start="225:47" pos:end="225:47">s</name><operator pos:start="225:48" pos:end="225:49">-&gt;</operator><name pos:start="225:50" pos:end="225:50">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <while pos:start="229:13" pos:end="269:13">while <condition pos:start="229:19" pos:end="231:65">(<expr pos:start="229:20" pos:end="231:64"><name pos:start="229:20" pos:end="231:54"><name pos:start="229:20" pos:end="229:24">plane</name> <argument_list type="generic" pos:start="229:26" pos:end="231:54">&lt; <argument pos:start="229:28" pos:end="231:52"><expr pos:start="229:28" pos:end="231:52"><name pos:start="229:28" pos:end="229:39"><name pos:start="229:28" pos:end="229:28">s</name><operator pos:start="229:29" pos:end="229:30">-&gt;</operator><name pos:start="229:31" pos:end="229:39">nb_planes</name></name> <operator pos:start="229:41" pos:end="229:42">&amp;&amp;</operator> <name pos:start="229:44" pos:end="229:44">y</name> <operator pos:start="229:46" pos:end="229:47">&gt;=</operator> <literal type="number" pos:start="229:49" pos:end="229:49">0</literal> <operator pos:start="229:51" pos:end="229:52">&amp;&amp;</operator>

                   <name pos:start="231:20" pos:end="231:45">bytestream2_get_bytes_left</name><operator pos:start="231:46" pos:end="231:46">(</operator><operator pos:start="231:47" pos:end="231:47">&amp;</operator><name pos:start="231:48" pos:end="231:51"><name pos:start="231:48" pos:end="231:48">s</name><operator pos:start="231:49" pos:end="231:50">-&gt;</operator><name pos:start="231:51" pos:end="231:51">g</name></name><operator pos:start="231:52" pos:end="231:52">)</operator></expr></argument> &gt;</argument_list></name> <name pos:start="231:56" pos:end="231:64">stop_size</name></expr>)</condition> <block pos:start="231:67" pos:end="269:13">{<block_content pos:start="233:17" pos:end="267:17">

                <decl_stmt pos:start="233:17" pos:end="233:28"><decl pos:start="233:17" pos:end="233:27"><type pos:start="233:17" pos:end="233:19"><name pos:start="233:17" pos:end="233:19">int</name></type> <name pos:start="233:21" pos:end="233:23">run</name> <init pos:start="233:25" pos:end="233:27">= <expr pos:start="233:27" pos:end="233:27"><literal type="number" pos:start="233:27" pos:end="233:27">1</literal></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:50"><expr pos:start="235:17" pos:end="235:49"><name pos:start="235:17" pos:end="235:19">val</name> <operator pos:start="235:21" pos:end="235:21">=</operator> <call pos:start="235:23" pos:end="235:49"><name pos:start="235:23" pos:end="235:42">bytestream2_get_byte</name><argument_list pos:start="235:43" pos:end="235:49">(<argument pos:start="235:44" pos:end="235:48"><expr pos:start="235:44" pos:end="235:48"><operator pos:start="235:44" pos:end="235:44">&amp;</operator><name pos:start="235:45" pos:end="235:48"><name pos:start="235:45" pos:end="235:45">s</name><operator pos:start="235:46" pos:end="235:47">-&gt;</operator><name pos:start="235:48" pos:end="235:48">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="237:17" pos:end="247:17"><if pos:start="237:17" pos:end="247:17">if <condition pos:start="237:20" pos:end="237:34">(<expr pos:start="237:21" pos:end="237:33"><name pos:start="237:21" pos:end="237:23">val</name> <operator pos:start="237:25" pos:end="237:26">==</operator> <name pos:start="237:28" pos:end="237:33">marker</name></expr>)</condition> <block pos:start="237:36" pos:end="247:17">{<block_content pos:start="239:21" pos:end="245:54">

                    <expr_stmt pos:start="239:21" pos:end="239:54"><expr pos:start="239:21" pos:end="239:53"><name pos:start="239:21" pos:end="239:23">run</name> <operator pos:start="239:25" pos:end="239:25">=</operator> <call pos:start="239:27" pos:end="239:53"><name pos:start="239:27" pos:end="239:46">bytestream2_get_byte</name><argument_list pos:start="239:47" pos:end="239:53">(<argument pos:start="239:48" pos:end="239:52"><expr pos:start="239:48" pos:end="239:52"><operator pos:start="239:48" pos:end="239:48">&amp;</operator><name pos:start="239:49" pos:end="239:52"><name pos:start="239:49" pos:end="239:49">s</name><operator pos:start="239:50" pos:end="239:51">-&gt;</operator><name pos:start="239:52" pos:end="239:52">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="241:21" pos:end="243:58"><if pos:start="241:21" pos:end="243:58">if <condition pos:start="241:24" pos:end="241:33">(<expr pos:start="241:25" pos:end="241:32"><name pos:start="241:25" pos:end="241:27">run</name> <operator pos:start="241:29" pos:end="241:30">==</operator> <literal type="number" pos:start="241:32" pos:end="241:32">0</literal></expr>)</condition><block type="pseudo" pos:start="243:25" pos:end="243:58"><block_content pos:start="243:25" pos:end="243:58">

                        <expr_stmt pos:start="243:25" pos:end="243:58"><expr pos:start="243:25" pos:end="243:57"><name pos:start="243:25" pos:end="243:27">run</name> <operator pos:start="243:29" pos:end="243:29">=</operator> <call pos:start="243:31" pos:end="243:57"><name pos:start="243:31" pos:end="243:50">bytestream2_get_le16</name><argument_list pos:start="243:51" pos:end="243:57">(<argument pos:start="243:52" pos:end="243:56"><expr pos:start="243:52" pos:end="243:56"><operator pos:start="243:52" pos:end="243:52">&amp;</operator><name pos:start="243:53" pos:end="243:56"><name pos:start="243:53" pos:end="243:53">s</name><operator pos:start="243:54" pos:end="243:55">-&gt;</operator><name pos:start="243:56" pos:end="243:56">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="245:21" pos:end="245:54"><expr pos:start="245:21" pos:end="245:53"><name pos:start="245:21" pos:end="245:23">val</name> <operator pos:start="245:25" pos:end="245:25">=</operator> <call pos:start="245:27" pos:end="245:53"><name pos:start="245:27" pos:end="245:46">bytestream2_get_byte</name><argument_list pos:start="245:47" pos:end="245:53">(<argument pos:start="245:48" pos:end="245:52"><expr pos:start="245:48" pos:end="245:52"><operator pos:start="245:48" pos:end="245:48">&amp;</operator><name pos:start="245:49" pos:end="245:52"><name pos:start="245:49" pos:end="245:49">s</name><operator pos:start="245:50" pos:end="245:51">-&gt;</operator><name pos:start="245:52" pos:end="245:52">g</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="249:17" pos:end="251:26"><if pos:start="249:17" pos:end="251:26">if <condition pos:start="249:20" pos:end="249:55">(<expr pos:start="249:21" pos:end="249:54"><operator pos:start="249:21" pos:end="249:21">!</operator><call pos:start="249:22" pos:end="249:54"><name pos:start="249:22" pos:end="249:47">bytestream2_get_bytes_left</name><argument_list pos:start="249:48" pos:end="249:54">(<argument pos:start="249:49" pos:end="249:53"><expr pos:start="249:49" pos:end="249:53"><operator pos:start="249:49" pos:end="249:49">&amp;</operator><name pos:start="249:50" pos:end="249:53"><name pos:start="249:50" pos:end="249:50">s</name><operator pos:start="249:51" pos:end="249:52">-&gt;</operator><name pos:start="249:53" pos:end="249:53">g</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="251:21" pos:end="251:26"><block_content pos:start="251:21" pos:end="251:26">

                    <break pos:start="251:21" pos:end="251:26">break;</break></block_content></block></if></if_stmt>



                <if_stmt pos:start="255:17" pos:end="267:17"><if pos:start="255:17" pos:end="263:17">if <condition pos:start="255:20" pos:end="255:40">(<expr pos:start="255:21" pos:end="255:39"><name pos:start="255:21" pos:end="255:34">bits_per_plane</name> <operator pos:start="255:36" pos:end="255:37">==</operator> <literal type="number" pos:start="255:39" pos:end="255:39">8</literal></expr>)</condition> <block pos:start="255:42" pos:end="263:17">{<block_content pos:start="257:21" pos:end="261:36">

                    <expr_stmt pos:start="257:21" pos:end="257:63"><expr pos:start="257:21" pos:end="257:62"><call pos:start="257:21" pos:end="257:62"><name pos:start="257:21" pos:end="257:34">picmemset_8bpp</name><argument_list pos:start="257:35" pos:end="257:62">(<argument pos:start="257:36" pos:end="257:36"><expr pos:start="257:36" pos:end="257:36"><name pos:start="257:36" pos:end="257:36">s</name></expr></argument>, <argument pos:start="257:39" pos:end="257:43"><expr pos:start="257:39" pos:end="257:43"><name pos:start="257:39" pos:end="257:43">frame</name></expr></argument>, <argument pos:start="257:46" pos:end="257:48"><expr pos:start="257:46" pos:end="257:48"><name pos:start="257:46" pos:end="257:48">val</name></expr></argument>, <argument pos:start="257:51" pos:end="257:53"><expr pos:start="257:51" pos:end="257:53"><name pos:start="257:51" pos:end="257:53">run</name></expr></argument>, <argument pos:start="257:56" pos:end="257:57"><expr pos:start="257:56" pos:end="257:57"><operator pos:start="257:56" pos:end="257:56">&amp;</operator><name pos:start="257:57" pos:end="257:57">x</name></expr></argument>, <argument pos:start="257:60" pos:end="257:61"><expr pos:start="257:60" pos:end="257:61"><operator pos:start="257:60" pos:end="257:60">&amp;</operator><name pos:start="257:61" pos:end="257:61">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="259:21" pos:end="261:36"><if pos:start="259:21" pos:end="261:36">if <condition pos:start="259:24" pos:end="259:30">(<expr pos:start="259:25" pos:end="259:29"><name pos:start="259:25" pos:end="259:25">y</name> <operator pos:start="259:27" pos:end="259:27">&lt;</operator> <literal type="number" pos:start="259:29" pos:end="259:29">0</literal></expr>)</condition><block type="pseudo" pos:start="261:25" pos:end="261:36"><block_content pos:start="261:25" pos:end="261:36">

                        <goto pos:start="261:25" pos:end="261:36">goto <name pos:start="261:30" pos:end="261:35">finish</name>;</goto></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="263:19" pos:end="267:17">else <block pos:start="263:24" pos:end="267:17">{<block_content pos:start="265:21" pos:end="265:82">

                    <expr_stmt pos:start="265:21" pos:end="265:82"><expr pos:start="265:21" pos:end="265:81"><call pos:start="265:21" pos:end="265:81"><name pos:start="265:21" pos:end="265:29">picmemset</name><argument_list pos:start="265:30" pos:end="265:81">(<argument pos:start="265:31" pos:end="265:31"><expr pos:start="265:31" pos:end="265:31"><name pos:start="265:31" pos:end="265:31">s</name></expr></argument>, <argument pos:start="265:34" pos:end="265:38"><expr pos:start="265:34" pos:end="265:38"><name pos:start="265:34" pos:end="265:38">frame</name></expr></argument>, <argument pos:start="265:41" pos:end="265:43"><expr pos:start="265:41" pos:end="265:43"><name pos:start="265:41" pos:end="265:43">val</name></expr></argument>, <argument pos:start="265:46" pos:end="265:48"><expr pos:start="265:46" pos:end="265:48"><name pos:start="265:46" pos:end="265:48">run</name></expr></argument>, <argument pos:start="265:51" pos:end="265:52"><expr pos:start="265:51" pos:end="265:52"><operator pos:start="265:51" pos:end="265:51">&amp;</operator><name pos:start="265:52" pos:end="265:52">x</name></expr></argument>, <argument pos:start="265:55" pos:end="265:56"><expr pos:start="265:55" pos:end="265:56"><operator pos:start="265:55" pos:end="265:55">&amp;</operator><name pos:start="265:56" pos:end="265:56">y</name></expr></argument>, <argument pos:start="265:59" pos:end="265:64"><expr pos:start="265:59" pos:end="265:64"><operator pos:start="265:59" pos:end="265:59">&amp;</operator><name pos:start="265:60" pos:end="265:64">plane</name></expr></argument>, <argument pos:start="265:67" pos:end="265:80"><expr pos:start="265:67" pos:end="265:80"><name pos:start="265:67" pos:end="265:80">bits_per_plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></while>

        </block_content>}</block></while>



        <if_stmt pos:start="275:9" pos:end="287:9"><if pos:start="275:9" pos:end="287:9">if <condition pos:start="275:12" pos:end="275:39">(<expr pos:start="275:13" pos:end="275:38"><name pos:start="275:13" pos:end="275:13">x</name> <operator pos:start="275:15" pos:end="275:15">&lt;</operator> <name pos:start="275:17" pos:end="275:28"><name pos:start="275:17" pos:end="275:21">avctx</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:28">width</name></name> <operator pos:start="275:30" pos:end="275:31">&amp;&amp;</operator> <name pos:start="275:33" pos:end="275:33">y</name> <operator pos:start="275:35" pos:end="275:36">&gt;=</operator> <literal type="number" pos:start="275:38" pos:end="275:38">0</literal></expr>)</condition> <block pos:start="275:41" pos:end="287:9">{<block_content pos:start="277:13" pos:end="285:101">

            <decl_stmt pos:start="277:13" pos:end="277:49"><decl pos:start="277:13" pos:end="277:48"><type pos:start="277:13" pos:end="277:15"><name pos:start="277:13" pos:end="277:15">int</name></type> <name pos:start="277:17" pos:end="277:19">run</name> <init pos:start="277:21" pos:end="277:48">= <expr pos:start="277:23" pos:end="277:48"><operator pos:start="277:23" pos:end="277:23">(</operator><name pos:start="277:24" pos:end="277:24">y</name> <operator pos:start="277:26" pos:end="277:26">+</operator> <literal type="number" pos:start="277:28" pos:end="277:28">1</literal><operator pos:start="277:29" pos:end="277:29">)</operator> <operator pos:start="277:31" pos:end="277:31">*</operator> <name pos:start="277:33" pos:end="277:44"><name pos:start="277:33" pos:end="277:37">avctx</name><operator pos:start="277:38" pos:end="277:39">-&gt;</operator><name pos:start="277:40" pos:end="277:44">width</name></name> <operator pos:start="277:46" pos:end="277:46">-</operator> <name pos:start="277:48" pos:end="277:48">x</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="279:13" pos:end="285:101"><if pos:start="279:13" pos:end="281:59">if <condition pos:start="279:16" pos:end="279:36">(<expr pos:start="279:17" pos:end="279:35"><name pos:start="279:17" pos:end="279:30">bits_per_plane</name> <operator pos:start="279:32" pos:end="279:33">==</operator> <literal type="number" pos:start="279:35" pos:end="279:35">8</literal></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:59"><block_content pos:start="281:17" pos:end="281:59">

                <expr_stmt pos:start="281:17" pos:end="281:59"><expr pos:start="281:17" pos:end="281:58"><call pos:start="281:17" pos:end="281:58"><name pos:start="281:17" pos:end="281:30">picmemset_8bpp</name><argument_list pos:start="281:31" pos:end="281:58">(<argument pos:start="281:32" pos:end="281:32"><expr pos:start="281:32" pos:end="281:32"><name pos:start="281:32" pos:end="281:32">s</name></expr></argument>, <argument pos:start="281:35" pos:end="281:39"><expr pos:start="281:35" pos:end="281:39"><name pos:start="281:35" pos:end="281:39">frame</name></expr></argument>, <argument pos:start="281:42" pos:end="281:44"><expr pos:start="281:42" pos:end="281:44"><name pos:start="281:42" pos:end="281:44">val</name></expr></argument>, <argument pos:start="281:47" pos:end="281:49"><expr pos:start="281:47" pos:end="281:49"><name pos:start="281:47" pos:end="281:49">run</name></expr></argument>, <argument pos:start="281:52" pos:end="281:53"><expr pos:start="281:52" pos:end="281:53"><operator pos:start="281:52" pos:end="281:52">&amp;</operator><name pos:start="281:53" pos:end="281:53">x</name></expr></argument>, <argument pos:start="281:56" pos:end="281:57"><expr pos:start="281:56" pos:end="281:57"><operator pos:start="281:56" pos:end="281:56">&amp;</operator><name pos:start="281:57" pos:end="281:57">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="283:13" pos:end="285:101">else<block type="pseudo" pos:start="285:17" pos:end="285:101"><block_content pos:start="285:17" pos:end="285:101">

                <expr_stmt pos:start="285:17" pos:end="285:101"><expr pos:start="285:17" pos:end="285:100"><call pos:start="285:17" pos:end="285:100"><name pos:start="285:17" pos:end="285:25">picmemset</name><argument_list pos:start="285:26" pos:end="285:100">(<argument pos:start="285:27" pos:end="285:27"><expr pos:start="285:27" pos:end="285:27"><name pos:start="285:27" pos:end="285:27">s</name></expr></argument>, <argument pos:start="285:30" pos:end="285:34"><expr pos:start="285:30" pos:end="285:34"><name pos:start="285:30" pos:end="285:34">frame</name></expr></argument>, <argument pos:start="285:37" pos:end="285:39"><expr pos:start="285:37" pos:end="285:39"><name pos:start="285:37" pos:end="285:39">val</name></expr></argument>, <argument pos:start="285:42" pos:end="285:67"><expr pos:start="285:42" pos:end="285:67"><name pos:start="285:42" pos:end="285:44">run</name> <operator pos:start="285:46" pos:end="285:46">/</operator> <operator pos:start="285:48" pos:end="285:48">(</operator><literal type="number" pos:start="285:49" pos:end="285:49">8</literal> <operator pos:start="285:51" pos:end="285:51">/</operator> <name pos:start="285:53" pos:end="285:66">bits_per_plane</name><operator pos:start="285:67" pos:end="285:67">)</operator></expr></argument>, <argument pos:start="285:70" pos:end="285:71"><expr pos:start="285:70" pos:end="285:71"><operator pos:start="285:70" pos:end="285:70">&amp;</operator><name pos:start="285:71" pos:end="285:71">x</name></expr></argument>, <argument pos:start="285:74" pos:end="285:75"><expr pos:start="285:74" pos:end="285:75"><operator pos:start="285:74" pos:end="285:74">&amp;</operator><name pos:start="285:75" pos:end="285:75">y</name></expr></argument>, <argument pos:start="285:78" pos:end="285:83"><expr pos:start="285:78" pos:end="285:83"><operator pos:start="285:78" pos:end="285:78">&amp;</operator><name pos:start="285:79" pos:end="285:83">plane</name></expr></argument>, <argument pos:start="285:86" pos:end="285:99"><expr pos:start="285:86" pos:end="285:99"><name pos:start="285:86" pos:end="285:99">bits_per_plane</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="289:7" pos:end="301:5">else <block pos:start="289:12" pos:end="301:5">{<block_content pos:start="291:9" pos:end="299:9">

        <while pos:start="291:9" pos:end="299:9">while <condition pos:start="291:15" pos:end="291:63">(<expr pos:start="291:16" pos:end="291:62"><name pos:start="291:16" pos:end="291:16">y</name> <operator pos:start="291:18" pos:end="291:19">&gt;=</operator> <literal type="number" pos:start="291:21" pos:end="291:21">0</literal> <operator pos:start="291:23" pos:end="291:24">&amp;&amp;</operator> <call pos:start="291:26" pos:end="291:58"><name pos:start="291:26" pos:end="291:51">bytestream2_get_bytes_left</name><argument_list pos:start="291:52" pos:end="291:58">(<argument pos:start="291:53" pos:end="291:57"><expr pos:start="291:53" pos:end="291:57"><operator pos:start="291:53" pos:end="291:53">&amp;</operator><name pos:start="291:54" pos:end="291:57"><name pos:start="291:54" pos:end="291:54">s</name><operator pos:start="291:55" pos:end="291:56">-&gt;</operator><name pos:start="291:57" pos:end="291:57">g</name></name></expr></argument>)</argument_list></call> <operator pos:start="291:60" pos:end="291:60">&gt;</operator> <literal type="number" pos:start="291:62" pos:end="291:62">0</literal></expr>)</condition> <block pos:start="291:65" pos:end="299:9">{<block_content pos:start="293:13" pos:end="297:16">

            <expr_stmt pos:start="293:13" pos:end="293:129"><expr pos:start="293:13" pos:end="293:128"><call pos:start="293:13" pos:end="293:128"><name pos:start="293:13" pos:end="293:18">memcpy</name><argument_list pos:start="293:19" pos:end="293:128">(<argument pos:start="293:20" pos:end="293:58"><expr pos:start="293:20" pos:end="293:58"><name pos:start="293:20" pos:end="293:33"><name pos:start="293:20" pos:end="293:24">frame</name><operator pos:start="293:25" pos:end="293:26">-&gt;</operator><name pos:start="293:27" pos:end="293:30">data</name><index pos:start="293:31" pos:end="293:33">[<expr pos:start="293:32" pos:end="293:32"><literal type="number" pos:start="293:32" pos:end="293:32">0</literal></expr>]</index></name> <operator pos:start="293:35" pos:end="293:35">+</operator> <name pos:start="293:37" pos:end="293:37">y</name> <operator pos:start="293:39" pos:end="293:39">*</operator> <name pos:start="293:41" pos:end="293:58"><name pos:start="293:41" pos:end="293:45">frame</name><operator pos:start="293:46" pos:end="293:47">-&gt;</operator><name pos:start="293:48" pos:end="293:55">linesize</name><index pos:start="293:56" pos:end="293:58">[<expr pos:start="293:57" pos:end="293:57"><literal type="number" pos:start="293:57" pos:end="293:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="293:61" pos:end="293:71"><expr pos:start="293:61" pos:end="293:71"><name pos:start="293:61" pos:end="293:71"><name pos:start="293:61" pos:end="293:61">s</name><operator pos:start="293:62" pos:end="293:63">-&gt;</operator><name pos:start="293:64" pos:end="293:64">g</name><operator pos:start="293:65" pos:end="293:65">.</operator><name pos:start="293:66" pos:end="293:71">buffer</name></name></expr></argument>, <argument pos:start="293:74" pos:end="293:127"><expr pos:start="293:74" pos:end="293:127"><call pos:start="293:74" pos:end="293:127"><name pos:start="293:74" pos:end="293:78">FFMIN</name><argument_list pos:start="293:79" pos:end="293:127">(<argument pos:start="293:80" pos:end="293:91"><expr pos:start="293:80" pos:end="293:91"><name pos:start="293:80" pos:end="293:91"><name pos:start="293:80" pos:end="293:84">avctx</name><operator pos:start="293:85" pos:end="293:86">-&gt;</operator><name pos:start="293:87" pos:end="293:91">width</name></name></expr></argument>, <argument pos:start="293:94" pos:end="293:126"><expr pos:start="293:94" pos:end="293:126"><call pos:start="293:94" pos:end="293:126"><name pos:start="293:94" pos:end="293:119">bytestream2_get_bytes_left</name><argument_list pos:start="293:120" pos:end="293:126">(<argument pos:start="293:121" pos:end="293:125"><expr pos:start="293:121" pos:end="293:125"><operator pos:start="293:121" pos:end="293:121">&amp;</operator><name pos:start="293:122" pos:end="293:125"><name pos:start="293:122" pos:end="293:122">s</name><operator pos:start="293:123" pos:end="293:124">-&gt;</operator><name pos:start="293:125" pos:end="293:125">g</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="295:13" pos:end="295:50"><expr pos:start="295:13" pos:end="295:49"><call pos:start="295:13" pos:end="295:49"><name pos:start="295:13" pos:end="295:28">bytestream2_skip</name><argument_list pos:start="295:29" pos:end="295:49">(<argument pos:start="295:30" pos:end="295:34"><expr pos:start="295:30" pos:end="295:34"><operator pos:start="295:30" pos:end="295:30">&amp;</operator><name pos:start="295:31" pos:end="295:34"><name pos:start="295:31" pos:end="295:31">s</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:34">g</name></name></expr></argument>, <argument pos:start="295:37" pos:end="295:48"><expr pos:start="295:37" pos:end="295:48"><name pos:start="295:37" pos:end="295:48"><name pos:start="295:37" pos:end="295:41">avctx</name><operator pos:start="295:42" pos:end="295:43">-&gt;</operator><name pos:start="295:44" pos:end="295:48">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:16"><expr pos:start="297:13" pos:end="297:15"><name pos:start="297:13" pos:end="297:13">y</name><operator pos:start="297:14" pos:end="297:15">--</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

<label pos:start="303:1" pos:end="303:7"><name pos:start="303:1" pos:end="303:6">finish</name>:</label>



    <expr_stmt pos:start="307:5" pos:end="307:24"><expr pos:start="307:5" pos:end="307:23"><operator pos:start="307:5" pos:end="307:5">*</operator><name pos:start="307:6" pos:end="307:14">got_frame</name>      <operator pos:start="307:21" pos:end="307:21">=</operator> <literal type="number" pos:start="307:23" pos:end="307:23">1</literal></expr>;</expr_stmt>

    <return pos:start="309:5" pos:end="309:23">return <expr pos:start="309:12" pos:end="309:22"><name pos:start="309:12" pos:end="309:22"><name pos:start="309:12" pos:end="309:16">avpkt</name><operator pos:start="309:17" pos:end="309:18">-&gt;</operator><name pos:start="309:19" pos:end="309:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
