<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13258.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:30"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">truemotion1_decode_header</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:57"><name pos:start="1:38" pos:end="1:55">TrueMotion1Context</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="115:30">{<block_content pos:start="3:5" pos:end="115:30">
    <decl_stmt pos:start="3:5" pos:end="3:15"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:14"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:14">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:24"><decl pos:start="4:5" pos:end="4:23"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:19">width_shift</name> <init pos:start="4:21" pos:end="4:23">= <expr pos:start="4:23" pos:end="4:23"><literal type="number" pos:start="4:23" pos:end="4:23">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:19">new_pix_fmt</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:23"><name pos:start="6:5" pos:end="6:23"><name pos:start="6:5" pos:end="6:10">struct</name> <name pos:start="6:12" pos:end="6:23">frame_header</name></name></type> <name pos:start="6:25" pos:end="6:30">header</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:30"><name pos:start="7:13" pos:end="7:25">header_buffer</name><index pos:start="7:26" pos:end="7:30">[<expr pos:start="7:27" pos:end="7:29"><literal type="number" pos:start="7:27" pos:end="7:29">128</literal></expr>]</index></name> <init pos:start="7:32" pos:end="7:38">= <expr pos:start="7:34" pos:end="7:38"><block pos:start="7:34" pos:end="7:38">{ <expr pos:start="7:36" pos:end="7:36"><literal type="number" pos:start="7:36" pos:end="7:36">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>  <comment type="block" pos:start="7:42" pos:end="7:81">/* logical maximum size of the header */</comment>
    <decl_stmt pos:start="8:5" pos:end="8:36"><decl pos:start="8:5" pos:end="8:35"><type pos:start="8:5" pos:end="8:19"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:17">uint8_t</name> <modifier pos:start="8:19" pos:end="8:19">*</modifier></type><name pos:start="8:20" pos:end="8:35">sel_vector_table</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:70"><expr pos:start="9:5" pos:end="9:69"><name pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:10">header</name><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:22">header_size</name></name> <operator pos:start="9:24" pos:end="9:24">=</operator> <operator pos:start="9:26" pos:end="9:26">(</operator><operator pos:start="9:27" pos:end="9:27">(</operator><name pos:start="9:28" pos:end="9:36"><name pos:start="9:28" pos:end="9:28">s</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:33">buf</name><index pos:start="9:34" pos:end="9:36">[<expr pos:start="9:35" pos:end="9:35"><literal type="number" pos:start="9:35" pos:end="9:35">0</literal></expr>]</index></name> <operator pos:start="9:38" pos:end="9:39">&gt;&gt;</operator> <literal type="number" pos:start="9:41" pos:end="9:41">5</literal><operator pos:start="9:42" pos:end="9:42">)</operator> <operator pos:start="9:44" pos:end="9:44">|</operator> <operator pos:start="9:46" pos:end="9:46">(</operator><name pos:start="9:47" pos:end="9:55"><name pos:start="9:47" pos:end="9:47">s</name><operator pos:start="9:48" pos:end="9:49">-&gt;</operator><name pos:start="9:50" pos:end="9:52">buf</name><index pos:start="9:53" pos:end="9:55">[<expr pos:start="9:54" pos:end="9:54"><literal type="number" pos:start="9:54" pos:end="9:54">0</literal></expr>]</index></name> <operator pos:start="9:57" pos:end="9:58">&lt;&lt;</operator> <literal type="number" pos:start="9:60" pos:end="9:60">3</literal><operator pos:start="9:61" pos:end="9:61">)</operator><operator pos:start="9:62" pos:end="9:62">)</operator> <operator pos:start="9:64" pos:end="9:64">&amp;</operator> <literal type="number" pos:start="9:66" pos:end="9:69">0x7f</literal></expr>;</expr_stmt>
    <if_stmt pos:start="10:5" pos:end="115:30"><if pos:start="10:5" pos:end="115:30">if <condition pos:start="10:8" pos:end="10:25">(<expr pos:start="10:9" pos:end="10:24"><name pos:start="10:9" pos:end="10:17"><name pos:start="10:9" pos:end="10:9">s</name><operator pos:start="10:10" pos:end="10:11">-&gt;</operator><name pos:start="10:12" pos:end="10:14">buf</name><index pos:start="10:15" pos:end="10:17">[<expr pos:start="10:16" pos:end="10:16"><literal type="number" pos:start="10:16" pos:end="10:16">0</literal></expr>]</index></name> <operator pos:start="10:19" pos:end="10:19">&lt;</operator> <literal type="number" pos:start="10:21" pos:end="10:24">0x10</literal></expr>)</condition>
    <block pos:start="11:5" pos:end="115:30">{<block_content pos:start="12:9" pos:end="115:30">
        <expr_stmt pos:start="12:9" pos:end="12:80"><expr pos:start="12:9" pos:end="12:79"><call pos:start="12:9" pos:end="12:79"><name pos:start="12:9" pos:end="12:14">av_log</name><argument_list pos:start="12:15" pos:end="12:79">(<argument pos:start="12:16" pos:end="12:23"><expr pos:start="12:16" pos:end="12:23"><name pos:start="12:16" pos:end="12:23"><name pos:start="12:16" pos:end="12:16">s</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:23">avctx</name></name></expr></argument>, <argument pos:start="12:26" pos:end="12:37"><expr pos:start="12:26" pos:end="12:37"><name pos:start="12:26" pos:end="12:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="12:40" pos:end="12:67"><expr pos:start="12:40" pos:end="12:67"><literal type="string" pos:start="12:40" pos:end="12:67">"invalid header size (%d)\n"</literal></expr></argument>, <argument pos:start="12:70" pos:end="12:78"><expr pos:start="12:70" pos:end="12:78"><name pos:start="12:70" pos:end="12:78"><name pos:start="12:70" pos:end="12:70">s</name><operator pos:start="12:71" pos:end="12:72">-&gt;</operator><name pos:start="12:73" pos:end="12:75">buf</name><index pos:start="12:76" pos:end="12:78">[<expr pos:start="12:77" pos:end="12:77"><literal type="number" pos:start="12:77" pos:end="12:77">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="13:5" pos:end="13:58">/* unscramble the header bytes with a XOR operation */</comment>
    <for pos:start="14:5" pos:end="15:57">for <control pos:start="14:9" pos:end="14:44">(<init pos:start="14:10" pos:end="14:15"><expr pos:start="14:10" pos:end="14:14"><name pos:start="14:10" pos:end="14:10">i</name> <operator pos:start="14:12" pos:end="14:12">=</operator> <literal type="number" pos:start="14:14" pos:end="14:14">1</literal></expr>;</init> <condition pos:start="14:17" pos:end="14:39"><expr pos:start="14:17" pos:end="14:38"><name pos:start="14:17" pos:end="14:17">i</name> <operator pos:start="14:19" pos:end="14:19">&lt;</operator> <name pos:start="14:21" pos:end="14:38"><name pos:start="14:21" pos:end="14:26">header</name><operator pos:start="14:27" pos:end="14:27">.</operator><name pos:start="14:28" pos:end="14:38">header_size</name></name></expr>;</condition> <incr pos:start="14:41" pos:end="14:43"><expr pos:start="14:41" pos:end="14:43"><name pos:start="14:41" pos:end="14:41">i</name><operator pos:start="14:42" pos:end="14:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="15:9" pos:end="15:57"><block_content pos:start="15:9" pos:end="15:57">
        <expr_stmt pos:start="15:9" pos:end="15:57"><expr pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:21">header_buffer</name><index pos:start="15:22" pos:end="15:28">[<expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:23">i</name> <operator pos:start="15:25" pos:end="15:25">-</operator> <literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr>]</index></name> <operator pos:start="15:30" pos:end="15:30">=</operator> <name pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:32">s</name><operator pos:start="15:33" pos:end="15:34">-&gt;</operator><name pos:start="15:35" pos:end="15:37">buf</name><index pos:start="15:38" pos:end="15:40">[<expr pos:start="15:39" pos:end="15:39"><name pos:start="15:39" pos:end="15:39">i</name></expr>]</index></name> <operator pos:start="15:42" pos:end="15:42">^</operator> <name pos:start="15:44" pos:end="15:56"><name pos:start="15:44" pos:end="15:44">s</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:49">buf</name><index pos:start="15:50" pos:end="15:56">[<expr pos:start="15:51" pos:end="15:55"><name pos:start="15:51" pos:end="15:51">i</name> <operator pos:start="15:53" pos:end="15:53">+</operator> <literal type="number" pos:start="15:55" pos:end="15:55">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="16:5" pos:end="16:42"><expr pos:start="16:5" pos:end="16:41"><name pos:start="16:5" pos:end="16:22"><name pos:start="16:5" pos:end="16:10">header</name><operator pos:start="16:11" pos:end="16:11">.</operator><name pos:start="16:12" pos:end="16:22">compression</name></name> <operator pos:start="16:24" pos:end="16:24">=</operator> <name pos:start="16:26" pos:end="16:41"><name pos:start="16:26" pos:end="16:38">header_buffer</name><index pos:start="16:39" pos:end="16:41">[<expr pos:start="16:40" pos:end="16:40"><literal type="number" pos:start="16:40" pos:end="16:40">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:39"><expr pos:start="17:5" pos:end="17:38"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:10">header</name><operator pos:start="17:11" pos:end="17:11">.</operator><name pos:start="17:12" pos:end="17:19">deltaset</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:38"><name pos:start="17:23" pos:end="17:35">header_buffer</name><index pos:start="17:36" pos:end="17:38">[<expr pos:start="17:37" pos:end="17:37"><literal type="number" pos:start="17:37" pos:end="17:37">1</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:39"><expr pos:start="18:5" pos:end="18:38"><name pos:start="18:5" pos:end="18:19"><name pos:start="18:5" pos:end="18:10">header</name><operator pos:start="18:11" pos:end="18:11">.</operator><name pos:start="18:12" pos:end="18:19">vectable</name></name> <operator pos:start="18:21" pos:end="18:21">=</operator> <name pos:start="18:23" pos:end="18:38"><name pos:start="18:23" pos:end="18:35">header_buffer</name><index pos:start="18:36" pos:end="18:38">[<expr pos:start="18:37" pos:end="18:37"><literal type="number" pos:start="18:37" pos:end="18:37">2</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:10">header</name><operator pos:start="19:11" pos:end="19:11">.</operator><name pos:start="19:12" pos:end="19:16">ysize</name></name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:45"><name pos:start="19:20" pos:end="19:26">AV_RL16</name><argument_list pos:start="19:27" pos:end="19:45">(<argument pos:start="19:28" pos:end="19:44"><expr pos:start="19:28" pos:end="19:44"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:44"><name pos:start="19:29" pos:end="19:41">header_buffer</name><index pos:start="19:42" pos:end="19:44">[<expr pos:start="19:43" pos:end="19:43"><literal type="number" pos:start="19:43" pos:end="19:43">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:46"><expr pos:start="20:5" pos:end="20:45"><name pos:start="20:5" pos:end="20:16"><name pos:start="20:5" pos:end="20:10">header</name><operator pos:start="20:11" pos:end="20:11">.</operator><name pos:start="20:12" pos:end="20:16">xsize</name></name> <operator pos:start="20:18" pos:end="20:18">=</operator> <call pos:start="20:20" pos:end="20:45"><name pos:start="20:20" pos:end="20:26">AV_RL16</name><argument_list pos:start="20:27" pos:end="20:45">(<argument pos:start="20:28" pos:end="20:44"><expr pos:start="20:28" pos:end="20:44"><operator pos:start="20:28" pos:end="20:28">&amp;</operator><name pos:start="20:29" pos:end="20:44"><name pos:start="20:29" pos:end="20:41">header_buffer</name><index pos:start="20:42" pos:end="20:44">[<expr pos:start="20:43" pos:end="20:43"><literal type="number" pos:start="20:43" pos:end="20:43">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:10">header</name><operator pos:start="21:11" pos:end="21:11">.</operator><name pos:start="21:12" pos:end="21:19">checksum</name></name> <operator pos:start="21:21" pos:end="21:21">=</operator> <call pos:start="21:23" pos:end="21:48"><name pos:start="21:23" pos:end="21:29">AV_RL16</name><argument_list pos:start="21:30" pos:end="21:48">(<argument pos:start="21:31" pos:end="21:47"><expr pos:start="21:31" pos:end="21:47"><operator pos:start="21:31" pos:end="21:31">&amp;</operator><name pos:start="21:32" pos:end="21:47"><name pos:start="21:32" pos:end="21:44">header_buffer</name><index pos:start="21:45" pos:end="21:47">[<expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="22:5" pos:end="22:38"><expr pos:start="22:5" pos:end="22:37"><name pos:start="22:5" pos:end="22:18"><name pos:start="22:5" pos:end="22:10">header</name><operator pos:start="22:11" pos:end="22:11">.</operator><name pos:start="22:12" pos:end="22:18">version</name></name> <operator pos:start="22:20" pos:end="22:20">=</operator> <name pos:start="22:22" pos:end="22:37"><name pos:start="22:22" pos:end="22:34">header_buffer</name><index pos:start="22:35" pos:end="22:37">[<expr pos:start="22:36" pos:end="22:36"><literal type="number" pos:start="22:36" pos:end="22:36">9</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:10">header</name><operator pos:start="23:11" pos:end="23:11">.</operator><name pos:start="23:12" pos:end="23:22">header_type</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:42"><name pos:start="23:26" pos:end="23:38">header_buffer</name><index pos:start="23:39" pos:end="23:42">[<expr pos:start="23:40" pos:end="23:41"><literal type="number" pos:start="23:40" pos:end="23:41">10</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="24:5" pos:end="24:37"><expr pos:start="24:5" pos:end="24:36"><name pos:start="24:5" pos:end="24:16"><name pos:start="24:5" pos:end="24:10">header</name><operator pos:start="24:11" pos:end="24:11">.</operator><name pos:start="24:12" pos:end="24:16">flags</name></name> <operator pos:start="24:18" pos:end="24:18">=</operator> <name pos:start="24:20" pos:end="24:36"><name pos:start="24:20" pos:end="24:32">header_buffer</name><index pos:start="24:33" pos:end="24:36">[<expr pos:start="24:34" pos:end="24:35"><literal type="number" pos:start="24:34" pos:end="24:35">11</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:10">header</name><operator pos:start="25:11" pos:end="25:11">.</operator><name pos:start="25:12" pos:end="25:18">control</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <name pos:start="25:22" pos:end="25:38"><name pos:start="25:22" pos:end="25:34">header_buffer</name><index pos:start="25:35" pos:end="25:38">[<expr pos:start="25:36" pos:end="25:37"><literal type="number" pos:start="25:36" pos:end="25:37">12</literal></expr>]</index></name></expr>;</expr_stmt>
    <comment type="block" pos:start="26:5" pos:end="26:19">/* Version 2 */</comment>
    <if_stmt pos:start="27:5" pos:end="39:33"><if pos:start="27:5" pos:end="38:5">if <condition pos:start="27:8" pos:end="27:28">(<expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:14">header</name><operator pos:start="27:15" pos:end="27:15">.</operator><name pos:start="27:16" pos:end="27:22">version</name></name> <operator pos:start="27:24" pos:end="27:25">&gt;=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">2</literal></expr>)</condition>
    <block pos:start="28:5" pos:end="38:5">{<block_content pos:start="29:9" pos:end="37:37">
        <if_stmt pos:start="29:9" pos:end="37:37"><if pos:start="29:9" pos:end="32:9">if <condition pos:start="29:12" pos:end="29:35">(<expr pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:18">header</name><operator pos:start="29:19" pos:end="29:19">.</operator><name pos:start="29:20" pos:end="29:30">header_type</name></name> <operator pos:start="29:32" pos:end="29:32">&gt;</operator> <literal type="number" pos:start="29:34" pos:end="29:34">3</literal></expr>)</condition>
        <block pos:start="30:9" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:93">
            <expr_stmt pos:start="31:13" pos:end="31:93"><expr pos:start="31:13" pos:end="31:92"><call pos:start="31:13" pos:end="31:92"><name pos:start="31:13" pos:end="31:18">av_log</name><argument_list pos:start="31:19" pos:end="31:92">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:20">s</name><operator pos:start="31:21" pos:end="31:22">-&gt;</operator><name pos:start="31:23" pos:end="31:27">avctx</name></name></expr></argument>, <argument pos:start="31:30" pos:end="31:41"><expr pos:start="31:30" pos:end="31:41"><name pos:start="31:30" pos:end="31:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:44" pos:end="31:71"><expr pos:start="31:44" pos:end="31:71"><literal type="string" pos:start="31:44" pos:end="31:71">"invalid header type (%d)\n"</literal></expr></argument>, <argument pos:start="31:74" pos:end="31:91"><expr pos:start="31:74" pos:end="31:91"><name pos:start="31:74" pos:end="31:91"><name pos:start="31:74" pos:end="31:79">header</name><operator pos:start="31:80" pos:end="31:80">.</operator><name pos:start="31:81" pos:end="31:91">header_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if> <if type="elseif" pos:start="32:11" pos:end="36:9">else if <condition pos:start="32:19" pos:end="32:74">(<expr pos:start="32:20" pos:end="32:73"><operator pos:start="32:20" pos:end="32:20">(</operator><name pos:start="32:21" pos:end="32:38"><name pos:start="32:21" pos:end="32:26">header</name><operator pos:start="32:27" pos:end="32:27">.</operator><name pos:start="32:28" pos:end="32:38">header_type</name></name> <operator pos:start="32:40" pos:end="32:41">==</operator> <literal type="number" pos:start="32:43" pos:end="32:43">2</literal><operator pos:start="32:44" pos:end="32:44">)</operator> <operator pos:start="32:46" pos:end="32:47">||</operator> <operator pos:start="32:49" pos:end="32:49">(</operator><name pos:start="32:50" pos:end="32:67"><name pos:start="32:50" pos:end="32:55">header</name><operator pos:start="32:56" pos:end="32:56">.</operator><name pos:start="32:57" pos:end="32:67">header_type</name></name> <operator pos:start="32:69" pos:end="32:70">==</operator> <literal type="number" pos:start="32:72" pos:end="32:72">3</literal><operator pos:start="32:73" pos:end="32:73">)</operator></expr>)</condition> <block pos:start="32:76" pos:end="36:9">{<block_content pos:start="33:13" pos:end="35:42">
            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">flags</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <name pos:start="33:24" pos:end="33:35"><name pos:start="33:24" pos:end="33:29">header</name><operator pos:start="33:30" pos:end="33:30">.</operator><name pos:start="33:31" pos:end="33:35">flags</name></name></expr>;</expr_stmt>
            <if_stmt pos:start="34:13" pos:end="35:42"><if pos:start="34:13" pos:end="35:42">if <condition pos:start="34:16" pos:end="34:46">(<expr pos:start="34:17" pos:end="34:45"><operator pos:start="34:17" pos:end="34:17">!</operator><operator pos:start="34:18" pos:end="34:18">(</operator><name pos:start="34:19" pos:end="34:26"><name pos:start="34:19" pos:end="34:19">s</name><operator pos:start="34:20" pos:end="34:21">-&gt;</operator><name pos:start="34:22" pos:end="34:26">flags</name></name> <operator pos:start="34:28" pos:end="34:28">&amp;</operator> <name pos:start="34:30" pos:end="34:44">FLAG_INTERFRAME</name><operator pos:start="34:45" pos:end="34:45">)</operator></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:42"><block_content pos:start="35:17" pos:end="35:42">
                <expr_stmt pos:start="35:17" pos:end="35:42"><expr pos:start="35:17" pos:end="35:41"><name pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:24">flags</name></name> <operator pos:start="35:26" pos:end="35:27">|=</operator> <name pos:start="35:29" pos:end="35:41">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
        </block_content>}</block></if> <else pos:start="36:11" pos:end="37:37">else<block type="pseudo" pos:start="37:13" pos:end="37:37"><block_content pos:start="37:13" pos:end="37:37">
            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">flags</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:36">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    </block_content>}</block></if> <else pos:start="38:7" pos:end="39:33">else<block type="pseudo" pos:start="39:9" pos:end="39:33"><block_content pos:start="39:9" pos:end="39:33"> <comment type="block" pos:start="38:12" pos:end="38:26">/* Version 1 */</comment>
        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:16">flags</name></name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:32">FLAG_KEYFRAME</name></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <if_stmt pos:start="40:5" pos:end="115:30"><if pos:start="40:5" pos:end="44:5">if <condition pos:start="40:8" pos:end="40:31">(<expr pos:start="40:9" pos:end="40:30"><name pos:start="40:9" pos:end="40:16"><name pos:start="40:9" pos:end="40:9">s</name><operator pos:start="40:10" pos:end="40:11">-&gt;</operator><name pos:start="40:12" pos:end="40:16">flags</name></name> <operator pos:start="40:18" pos:end="40:18">&amp;</operator> <name pos:start="40:20" pos:end="40:30">FLAG_SPRITE</name></expr>)</condition> <block pos:start="40:33" pos:end="44:5">{<block_content pos:start="41:9" pos:end="43:36">
        <expr_stmt pos:start="41:9" pos:end="41:61"><expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:29">avpriv_request_sample</name><argument_list pos:start="41:30" pos:end="41:60">(<argument pos:start="41:31" pos:end="41:38"><expr pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:38"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:38">avctx</name></name></expr></argument>, <argument pos:start="41:41" pos:end="41:59"><expr pos:start="41:41" pos:end="41:59"><literal type="string" pos:start="41:41" pos:end="41:59">"Frame with sprite"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <comment type="block" pos:start="42:9" pos:end="42:80">/* FIXME header.width, height, xoffset and yoffset aren't initialized */</comment>
        <return pos:start="43:9" pos:end="43:36">return <expr pos:start="43:16" pos:end="43:35"><name pos:start="43:16" pos:end="43:35">AVERROR_PATCHWELCOME</name></expr>;</return>
    </block_content>}</block></if> <else pos:start="44:7" pos:end="115:30">else <block pos:start="44:12" pos:end="115:30">{<block_content pos:start="45:9" pos:end="115:30">
        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:12">w</name></name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:21">header</name><operator pos:start="45:22" pos:end="45:22">.</operator><name pos:start="45:23" pos:end="45:27">xsize</name></name></expr>;</expr_stmt>
        <expr_stmt pos:start="46:9" pos:end="46:28"><expr pos:start="46:9" pos:end="46:27"><name pos:start="46:9" pos:end="46:12"><name pos:start="46:9" pos:end="46:9">s</name><operator pos:start="46:10" pos:end="46:11">-&gt;</operator><name pos:start="46:12" pos:end="46:12">h</name></name> <operator pos:start="46:14" pos:end="46:14">=</operator> <name pos:start="46:16" pos:end="46:27"><name pos:start="46:16" pos:end="46:21">header</name><operator pos:start="46:22" pos:end="46:22">.</operator><name pos:start="46:23" pos:end="46:27">ysize</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="47:9" pos:end="115:30"><if pos:start="47:9" pos:end="115:30">if <condition pos:start="47:12" pos:end="47:35">(<expr pos:start="47:13" pos:end="47:34"><name pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:18">header</name><operator pos:start="47:19" pos:end="47:19">.</operator><name pos:start="47:20" pos:end="47:30">header_type</name></name> <operator pos:start="47:32" pos:end="47:32">&lt;</operator> <literal type="number" pos:start="47:34" pos:end="47:34">2</literal></expr>)</condition> <block pos:start="47:37" pos:end="115:30">{<block_content pos:start="48:13" pos:end="115:30">
            <if_stmt pos:start="48:13" pos:end="115:30"><if pos:start="48:13" pos:end="115:30">if <condition pos:start="48:16" pos:end="48:46">(<expr pos:start="48:17" pos:end="48:45"><operator pos:start="48:17" pos:end="48:17">(</operator><name pos:start="48:18" pos:end="48:21"><name pos:start="48:18" pos:end="48:18">s</name><operator pos:start="48:19" pos:end="48:20">-&gt;</operator><name pos:start="48:21" pos:end="48:21">w</name></name> <operator pos:start="48:23" pos:end="48:23">&lt;</operator> <literal type="number" pos:start="48:25" pos:end="48:27">213</literal><operator pos:start="48:28" pos:end="48:28">)</operator> <operator pos:start="48:30" pos:end="48:31">&amp;&amp;</operator> <operator pos:start="48:33" pos:end="48:33">(</operator><name pos:start="48:34" pos:end="48:37"><name pos:start="48:34" pos:end="48:34">s</name><operator pos:start="48:35" pos:end="48:36">-&gt;</operator><name pos:start="48:37" pos:end="48:37">h</name></name> <operator pos:start="48:39" pos:end="48:40">&gt;=</operator> <literal type="number" pos:start="48:42" pos:end="48:44">176</literal><operator pos:start="48:45" pos:end="48:45">)</operator></expr>)</condition>
            <block pos:start="49:13" pos:end="115:30">{<block_content pos:start="50:17" pos:end="115:30">
                <expr_stmt pos:start="50:17" pos:end="50:46"><expr pos:start="50:17" pos:end="50:45"><name pos:start="50:17" pos:end="50:24"><name pos:start="50:17" pos:end="50:17">s</name><operator pos:start="50:18" pos:end="50:19">-&gt;</operator><name pos:start="50:20" pos:end="50:24">flags</name></name> <operator pos:start="50:26" pos:end="50:27">|=</operator> <name pos:start="50:29" pos:end="50:45">FLAG_INTERPOLATED</name></expr>;</expr_stmt>
                <expr_stmt pos:start="51:17" pos:end="51:70"><expr pos:start="51:17" pos:end="51:69"><call pos:start="51:17" pos:end="51:69"><name pos:start="51:17" pos:end="51:37">avpriv_request_sample</name><argument_list pos:start="51:38" pos:end="51:69">(<argument pos:start="51:39" pos:end="51:46"><expr pos:start="51:39" pos:end="51:46"><name pos:start="51:39" pos:end="51:46"><name pos:start="51:39" pos:end="51:39">s</name><operator pos:start="51:40" pos:end="51:41">-&gt;</operator><name pos:start="51:42" pos:end="51:46">avctx</name></name></expr></argument>, <argument pos:start="51:49" pos:end="51:68"><expr pos:start="51:49" pos:end="51:68"><literal type="string" pos:start="51:49" pos:end="51:68">"Interpolated frame"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="52:5" pos:end="115:30"><if pos:start="52:5" pos:end="115:30">if <condition pos:start="52:8" pos:end="52:33">(<expr pos:start="52:9" pos:end="52:32"><name pos:start="52:9" pos:end="52:26"><name pos:start="52:9" pos:end="52:14">header</name><operator pos:start="52:15" pos:end="52:15">.</operator><name pos:start="52:16" pos:end="52:26">compression</name></name> <operator pos:start="52:28" pos:end="52:29">&gt;=</operator> <literal type="number" pos:start="52:31" pos:end="52:32">17</literal></expr>)</condition> <block pos:start="52:35" pos:end="115:30">{<block_content pos:start="53:9" pos:end="115:30">
        <expr_stmt pos:start="53:9" pos:end="53:94"><expr pos:start="53:9" pos:end="53:93"><call pos:start="53:9" pos:end="53:93"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="53:93">(<argument pos:start="53:16" pos:end="53:23"><expr pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:23"><name pos:start="53:16" pos:end="53:16">s</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:23">avctx</name></name></expr></argument>, <argument pos:start="53:26" pos:end="53:37"><expr pos:start="53:26" pos:end="53:37"><name pos:start="53:26" pos:end="53:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:40" pos:end="53:72"><expr pos:start="53:40" pos:end="53:72"><literal type="string" pos:start="53:40" pos:end="53:72">"invalid compression type (%d)\n"</literal></expr></argument>, <argument pos:start="53:75" pos:end="53:92"><expr pos:start="53:75" pos:end="53:92"><name pos:start="53:75" pos:end="53:92"><name pos:start="53:75" pos:end="53:80">header</name><operator pos:start="53:81" pos:end="53:81">.</operator><name pos:start="53:82" pos:end="53:92">compression</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="54:5" pos:end="56:48"><if pos:start="54:5" pos:end="56:48">if <condition pos:start="54:8" pos:end="55:46">(<expr pos:start="54:9" pos:end="55:45"><operator pos:start="54:9" pos:end="54:9">(</operator><name pos:start="54:10" pos:end="54:24"><name pos:start="54:10" pos:end="54:15">header</name><operator pos:start="54:16" pos:end="54:16">.</operator><name pos:start="54:17" pos:end="54:24">deltaset</name></name> <operator pos:start="54:26" pos:end="54:27">!=</operator> <name pos:start="54:29" pos:end="54:44"><name pos:start="54:29" pos:end="54:29">s</name><operator pos:start="54:30" pos:end="54:31">-&gt;</operator><name pos:start="54:32" pos:end="54:44">last_deltaset</name></name><operator pos:start="54:45" pos:end="54:45">)</operator> <operator pos:start="54:47" pos:end="54:48">||</operator>
        <operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:24"><name pos:start="55:10" pos:end="55:15">header</name><operator pos:start="55:16" pos:end="55:16">.</operator><name pos:start="55:17" pos:end="55:24">vectable</name></name> <operator pos:start="55:26" pos:end="55:27">!=</operator> <name pos:start="55:29" pos:end="55:44"><name pos:start="55:29" pos:end="55:29">s</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:44">last_vectable</name></name><operator pos:start="55:45" pos:end="55:45">)</operator></expr>)</condition><block type="pseudo" pos:start="56:9" pos:end="56:48"><block_content pos:start="56:9" pos:end="56:48">
        <expr_stmt pos:start="56:9" pos:end="56:48"><expr pos:start="56:9" pos:end="56:47"><call pos:start="56:9" pos:end="56:47"><name pos:start="56:9" pos:end="56:27">select_delta_tables</name><argument_list pos:start="56:28" pos:end="56:47">(<argument pos:start="56:29" pos:end="56:29"><expr pos:start="56:29" pos:end="56:29"><name pos:start="56:29" pos:end="56:29">s</name></expr></argument>, <argument pos:start="56:32" pos:end="56:46"><expr pos:start="56:32" pos:end="56:46"><name pos:start="56:32" pos:end="56:46"><name pos:start="56:32" pos:end="56:37">header</name><operator pos:start="56:38" pos:end="56:38">.</operator><name pos:start="56:39" pos:end="56:46">deltaset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="57:5" pos:end="115:30"><if pos:start="57:5" pos:end="58:35">if <condition pos:start="57:8" pos:end="57:55">(<expr pos:start="57:9" pos:end="57:54"><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:27"><name pos:start="57:10" pos:end="57:15">header</name><operator pos:start="57:16" pos:end="57:16">.</operator><name pos:start="57:17" pos:end="57:27">compression</name></name> <operator pos:start="57:29" pos:end="57:29">&amp;</operator> <literal type="number" pos:start="57:31" pos:end="57:31">1</literal><operator pos:start="57:32" pos:end="57:32">)</operator> <operator pos:start="57:34" pos:end="57:35">&amp;&amp;</operator> <name pos:start="57:37" pos:end="57:54"><name pos:start="57:37" pos:end="57:42">header</name><operator pos:start="57:43" pos:end="57:43">.</operator><name pos:start="57:44" pos:end="57:54">header_type</name></name></expr>)</condition><block type="pseudo" pos:start="58:9" pos:end="58:35"><block_content pos:start="58:9" pos:end="58:35">
        <expr_stmt pos:start="58:9" pos:end="58:35"><expr pos:start="58:9" pos:end="58:34"><name pos:start="58:9" pos:end="58:24">sel_vector_table</name> <operator pos:start="58:26" pos:end="58:26">=</operator> <name pos:start="58:28" pos:end="58:34">pc_tbl2</name></expr>;</expr_stmt></block_content></block></if>
    <else pos:start="59:5" pos:end="115:30">else <block pos:start="59:10" pos:end="115:30">{<block_content pos:start="60:9" pos:end="115:30">
        <if_stmt pos:start="60:9" pos:end="115:30"><if pos:start="60:9" pos:end="61:59">if <condition pos:start="60:12" pos:end="60:55">(<expr pos:start="60:13" pos:end="60:54"><name pos:start="60:13" pos:end="60:27"><name pos:start="60:13" pos:end="60:18">header</name><operator pos:start="60:19" pos:end="60:19">.</operator><name pos:start="60:20" pos:end="60:27">vectable</name></name> <operator pos:start="60:29" pos:end="60:29">&gt;</operator> <literal type="number" pos:start="60:31" pos:end="60:31">0</literal> <operator pos:start="60:33" pos:end="60:34">&amp;&amp;</operator> <name pos:start="60:36" pos:end="60:50"><name pos:start="60:36" pos:end="60:41">header</name><operator pos:start="60:42" pos:end="60:42">.</operator><name pos:start="60:43" pos:end="60:50">vectable</name></name> <operator pos:start="60:52" pos:end="60:52">&lt;</operator> <literal type="number" pos:start="60:54" pos:end="60:54">4</literal></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:59"><block_content pos:start="61:13" pos:end="61:59">
            <expr_stmt pos:start="61:13" pos:end="61:59"><expr pos:start="61:13" pos:end="61:58"><name pos:start="61:13" pos:end="61:28">sel_vector_table</name> <operator pos:start="61:30" pos:end="61:30">=</operator> <name pos:start="61:32" pos:end="61:58"><name pos:start="61:32" pos:end="61:37">tables</name><index pos:start="61:38" pos:end="61:58">[<expr pos:start="61:39" pos:end="61:57"><name pos:start="61:39" pos:end="61:53"><name pos:start="61:39" pos:end="61:44">header</name><operator pos:start="61:45" pos:end="61:45">.</operator><name pos:start="61:46" pos:end="61:53">vectable</name></name> <operator pos:start="61:55" pos:end="61:55">-</operator> <literal type="number" pos:start="61:57" pos:end="61:57">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="62:9" pos:end="115:30">else <block pos:start="62:14" pos:end="115:30">{<block_content pos:start="63:13" pos:end="115:30">
            <expr_stmt pos:start="63:13" pos:end="63:94"><expr pos:start="63:13" pos:end="63:93"><call pos:start="63:13" pos:end="63:93"><name pos:start="63:13" pos:end="63:18">av_log</name><argument_list pos:start="63:19" pos:end="63:93">(<argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:27">avctx</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:41"><expr pos:start="63:30" pos:end="63:41"><name pos:start="63:30" pos:end="63:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:44" pos:end="63:75"><expr pos:start="63:44" pos:end="63:75"><literal type="string" pos:start="63:44" pos:end="63:75">"invalid vector table id (%d)\n"</literal></expr></argument>, <argument pos:start="63:78" pos:end="63:92"><expr pos:start="63:78" pos:end="63:92"><name pos:start="63:78" pos:end="63:92"><name pos:start="63:78" pos:end="63:83">header</name><operator pos:start="63:84" pos:end="63:84">.</operator><name pos:start="63:85" pos:end="63:92">vectable</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="64:5" pos:end="68:40"><if pos:start="64:5" pos:end="67:5">if <condition pos:start="64:8" pos:end="64:71">(<expr pos:start="64:9" pos:end="64:70"><name pos:start="64:9" pos:end="64:45"><name pos:start="64:9" pos:end="64:25">compression_types</name><index pos:start="64:26" pos:end="64:45">[<expr pos:start="64:27" pos:end="64:44"><name pos:start="64:27" pos:end="64:44"><name pos:start="64:27" pos:end="64:32">header</name><operator pos:start="64:33" pos:end="64:33">.</operator><name pos:start="64:34" pos:end="64:44">compression</name></name></expr>]</index></name><operator pos:start="64:46" pos:end="64:46">.</operator><name pos:start="64:47" pos:end="64:55">algorithm</name> <operator pos:start="64:57" pos:end="64:58">==</operator> <name pos:start="64:60" pos:end="64:70">ALGO_RGB24H</name></expr>)</condition> <block pos:start="64:73" pos:end="67:5">{<block_content pos:start="65:9" pos:end="66:24">
        <expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:19">new_pix_fmt</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:38">AV_PIX_FMT_RGB32</name></expr>;</expr_stmt>
        <expr_stmt pos:start="66:9" pos:end="66:24"><expr pos:start="66:9" pos:end="66:23"><name pos:start="66:9" pos:end="66:19">width_shift</name> <operator pos:start="66:21" pos:end="66:21">=</operator> <literal type="number" pos:start="66:23" pos:end="66:23">1</literal></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="67:7" pos:end="68:40">else<block type="pseudo" pos:start="68:9" pos:end="68:40"><block_content pos:start="68:9" pos:end="68:40">
        <expr_stmt pos:start="68:9" pos:end="68:40"><expr pos:start="68:9" pos:end="68:39"><name pos:start="68:9" pos:end="68:19">new_pix_fmt</name> <operator pos:start="68:21" pos:end="68:21">=</operator> <name pos:start="68:23" pos:end="68:39">AV_PIX_FMT_RGB555</name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="68:42" pos:end="68:71">// RGB565 is supported as well</comment>
    <expr_stmt pos:start="69:5" pos:end="69:25"><expr pos:start="69:5" pos:end="69:24"><name pos:start="69:5" pos:end="69:8"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:8">w</name></name> <operator pos:start="69:10" pos:end="69:12">&gt;&gt;=</operator> <name pos:start="69:14" pos:end="69:24">width_shift</name></expr>;</expr_stmt>
    <if_stmt pos:start="70:5" pos:end="115:30"><if pos:start="70:5" pos:end="115:30">if <condition pos:start="70:8" pos:end="71:41">(<expr pos:start="70:9" pos:end="71:40"><name pos:start="70:9" pos:end="70:12"><name pos:start="70:9" pos:end="70:9">s</name><operator pos:start="70:10" pos:end="70:11">-&gt;</operator><name pos:start="70:12" pos:end="70:12">w</name></name> <operator pos:start="70:14" pos:end="70:15">!=</operator> <name pos:start="70:17" pos:end="70:31"><name pos:start="70:17" pos:end="70:17">s</name><operator pos:start="70:18" pos:end="70:19">-&gt;</operator><name pos:start="70:20" pos:end="70:24">avctx</name><operator pos:start="70:25" pos:end="70:26">-&gt;</operator><name pos:start="70:27" pos:end="70:31">width</name></name> <operator pos:start="70:33" pos:end="70:34">||</operator> <name pos:start="70:36" pos:end="70:39"><name pos:start="70:36" pos:end="70:36">s</name><operator pos:start="70:37" pos:end="70:38">-&gt;</operator><name pos:start="70:39" pos:end="70:39">h</name></name> <operator pos:start="70:41" pos:end="70:42">!=</operator> <name pos:start="70:44" pos:end="70:59"><name pos:start="70:44" pos:end="70:44">s</name><operator pos:start="70:45" pos:end="70:46">-&gt;</operator><name pos:start="70:47" pos:end="70:51">avctx</name><operator pos:start="70:52" pos:end="70:53">-&gt;</operator><name pos:start="70:54" pos:end="70:59">height</name></name> <operator pos:start="70:61" pos:end="70:62">||</operator>
        <name pos:start="71:9" pos:end="71:19">new_pix_fmt</name> <operator pos:start="71:21" pos:end="71:22">!=</operator> <name pos:start="71:24" pos:end="71:40"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:31">avctx</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:40">pix_fmt</name></name></expr>)</condition> <block pos:start="71:43" pos:end="115:30">{<block_content pos:start="72:9" pos:end="115:30">
        <expr_stmt pos:start="72:9" pos:end="72:33"><expr pos:start="72:9" pos:end="72:32"><call pos:start="72:9" pos:end="72:32"><name pos:start="72:9" pos:end="72:22">av_frame_unref</name><argument_list pos:start="72:23" pos:end="72:32">(<argument pos:start="72:24" pos:end="72:31"><expr pos:start="72:24" pos:end="72:31"><name pos:start="72:24" pos:end="72:31"><name pos:start="72:24" pos:end="72:24">s</name><operator pos:start="72:25" pos:end="72:26">-&gt;</operator><name pos:start="72:27" pos:end="72:31">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="73:9" pos:end="73:76"><expr pos:start="73:9" pos:end="73:75"><name pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">avctx</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:37">sample_aspect_ratio</name></name> <operator pos:start="73:39" pos:end="73:39">=</operator> <operator pos:start="73:41" pos:end="73:41">(</operator><name pos:start="73:42" pos:end="73:51">AVRational</name><operator pos:start="73:52" pos:end="73:52">)</operator><block pos:start="73:53" pos:end="73:75">{ <expr pos:start="73:55" pos:end="73:70"><literal type="number" pos:start="73:55" pos:end="73:55">1</literal> <operator pos:start="73:57" pos:end="73:58">&lt;&lt;</operator> <name pos:start="73:60" pos:end="73:70">width_shift</name></expr>, <expr pos:start="73:73" pos:end="73:73"><literal type="number" pos:start="73:73" pos:end="73:73">1</literal></expr> }</block></expr>;</expr_stmt>
        <expr_stmt pos:start="74:9" pos:end="74:40"><expr pos:start="74:9" pos:end="74:39"><name pos:start="74:9" pos:end="74:25"><name pos:start="74:9" pos:end="74:9">s</name><operator pos:start="74:10" pos:end="74:11">-&gt;</operator><name pos:start="74:12" pos:end="74:16">avctx</name><operator pos:start="74:17" pos:end="74:18">-&gt;</operator><name pos:start="74:19" pos:end="74:25">pix_fmt</name></name> <operator pos:start="74:27" pos:end="74:27">=</operator> <name pos:start="74:29" pos:end="74:39">new_pix_fmt</name></expr>;</expr_stmt>
        <if_stmt pos:start="75:9" pos:end="76:23"><if pos:start="75:9" pos:end="76:23">if <condition pos:start="75:12" pos:end="75:64">(<expr pos:start="75:13" pos:end="75:63"><operator pos:start="75:13" pos:end="75:13">(</operator><name pos:start="75:14" pos:end="75:16">ret</name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:58"><name pos:start="75:20" pos:end="75:36">ff_set_dimensions</name><argument_list pos:start="75:37" pos:end="75:58">(<argument pos:start="75:38" pos:end="75:45"><expr pos:start="75:38" pos:end="75:45"><name pos:start="75:38" pos:end="75:45"><name pos:start="75:38" pos:end="75:38">s</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:45">avctx</name></name></expr></argument>, <argument pos:start="75:48" pos:end="75:51"><expr pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:51"><name pos:start="75:48" pos:end="75:48">s</name><operator pos:start="75:49" pos:end="75:50">-&gt;</operator><name pos:start="75:51" pos:end="75:51">w</name></name></expr></argument>, <argument pos:start="75:54" pos:end="75:57"><expr pos:start="75:54" pos:end="75:57"><name pos:start="75:54" pos:end="75:57"><name pos:start="75:54" pos:end="75:54">s</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:57">h</name></name></expr></argument>)</argument_list></call><operator pos:start="75:59" pos:end="75:59">)</operator> <operator pos:start="75:61" pos:end="75:61">&lt;</operator> <literal type="number" pos:start="75:63" pos:end="75:63">0</literal></expr>)</condition><block type="pseudo" pos:start="76:13" pos:end="76:23"><block_content pos:start="76:13" pos:end="76:23">
            <return pos:start="76:13" pos:end="76:23">return <expr pos:start="76:20" pos:end="76:22"><name pos:start="76:20" pos:end="76:22">ret</name></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="77:9" pos:end="77:98"><expr pos:start="77:9" pos:end="77:97"><call pos:start="77:9" pos:end="77:97"><name pos:start="77:9" pos:end="77:22">av_fast_malloc</name><argument_list pos:start="77:23" pos:end="77:97">(<argument pos:start="77:24" pos:end="77:36"><expr pos:start="77:24" pos:end="77:36"><operator pos:start="77:24" pos:end="77:24">&amp;</operator><name pos:start="77:25" pos:end="77:36"><name pos:start="77:25" pos:end="77:25">s</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:36">vert_pred</name></name></expr></argument>, <argument pos:start="77:39" pos:end="77:56"><expr pos:start="77:39" pos:end="77:56"><operator pos:start="77:39" pos:end="77:39">&amp;</operator><name pos:start="77:40" pos:end="77:56"><name pos:start="77:40" pos:end="77:40">s</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:56">vert_pred_size</name></name></expr></argument>, <argument pos:start="77:59" pos:end="77:96"><expr pos:start="77:59" pos:end="77:96"><name pos:start="77:59" pos:end="77:73"><name pos:start="77:59" pos:end="77:59">s</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:66">avctx</name><operator pos:start="77:67" pos:end="77:68">-&gt;</operator><name pos:start="77:69" pos:end="77:73">width</name></name> <operator pos:start="77:75" pos:end="77:75">*</operator> sizeof<operator pos:start="77:83" pos:end="77:83">(</operator><name pos:start="77:84" pos:end="77:91">unsigned</name> <name pos:start="77:93" pos:end="77:95">int</name><operator pos:start="77:96" pos:end="77:96">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="78:5" pos:end="80:44">/* There is 1 change bit per 4 pixels, so each change byte represents
     * 32 pixels; divide width by 4 to obtain the number of change bits and
     * then round up to the nearest byte. */</comment>
    <expr_stmt pos:start="81:5" pos:end="81:83"><expr pos:start="81:5" pos:end="81:82"><name pos:start="81:5" pos:end="81:30"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:30">mb_change_bits_row_size</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <operator pos:start="81:34" pos:end="81:34">(</operator><operator pos:start="81:35" pos:end="81:35">(</operator><name pos:start="81:36" pos:end="81:50"><name pos:start="81:36" pos:end="81:36">s</name><operator pos:start="81:37" pos:end="81:38">-&gt;</operator><name pos:start="81:39" pos:end="81:43">avctx</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:50">width</name></name> <operator pos:start="81:52" pos:end="81:53">&gt;&gt;</operator> <operator pos:start="81:55" pos:end="81:55">(</operator><literal type="number" pos:start="81:56" pos:end="81:58">2</literal> <operator pos:start="81:58" pos:end="81:58">-</operator> <name pos:start="81:60" pos:end="81:70">width_shift</name><operator pos:start="81:71" pos:end="81:71">)</operator><operator pos:start="81:72" pos:end="81:72">)</operator> <operator pos:start="81:74" pos:end="81:74">+</operator> <literal type="number" pos:start="81:76" pos:end="81:76">7</literal><operator pos:start="81:77" pos:end="81:77">)</operator> <operator pos:start="81:79" pos:end="81:80">&gt;&gt;</operator> <literal type="number" pos:start="81:82" pos:end="81:82">3</literal></expr>;</expr_stmt>
    <if_stmt pos:start="82:5" pos:end="115:30"><if pos:start="82:5" pos:end="115:30">if <condition pos:start="82:8" pos:end="82:87">(<expr pos:start="82:9" pos:end="82:86"><operator pos:start="82:9" pos:end="82:9">(</operator><name pos:start="82:10" pos:end="82:24"><name pos:start="82:10" pos:end="82:15">header</name><operator pos:start="82:16" pos:end="82:16">.</operator><name pos:start="82:17" pos:end="82:24">deltaset</name></name> <operator pos:start="82:26" pos:end="82:27">!=</operator> <name pos:start="82:29" pos:end="82:44"><name pos:start="82:29" pos:end="82:29">s</name><operator pos:start="82:30" pos:end="82:31">-&gt;</operator><name pos:start="82:32" pos:end="82:44">last_deltaset</name></name><operator pos:start="82:45" pos:end="82:45">)</operator> <operator pos:start="82:47" pos:end="82:48">||</operator> <operator pos:start="82:50" pos:end="82:50">(</operator><name pos:start="82:51" pos:end="82:65"><name pos:start="82:51" pos:end="82:56">header</name><operator pos:start="82:57" pos:end="82:57">.</operator><name pos:start="82:58" pos:end="82:65">vectable</name></name> <operator pos:start="82:67" pos:end="82:68">!=</operator> <name pos:start="82:70" pos:end="82:85"><name pos:start="82:70" pos:end="82:70">s</name><operator pos:start="82:71" pos:end="82:72">-&gt;</operator><name pos:start="82:73" pos:end="82:85">last_vectable</name></name><operator pos:start="82:86" pos:end="82:86">)</operator></expr>)</condition>
    <block pos:start="83:5" pos:end="115:30">{<block_content pos:start="84:9" pos:end="115:30">
        <if_stmt pos:start="84:9" pos:end="90:52"><if pos:start="84:9" pos:end="85:52">if <condition pos:start="84:12" pos:end="84:75">(<expr pos:start="84:13" pos:end="84:74"><name pos:start="84:13" pos:end="84:49"><name pos:start="84:13" pos:end="84:29">compression_types</name><index pos:start="84:30" pos:end="84:49">[<expr pos:start="84:31" pos:end="84:48"><name pos:start="84:31" pos:end="84:48"><name pos:start="84:31" pos:end="84:36">header</name><operator pos:start="84:37" pos:end="84:37">.</operator><name pos:start="84:38" pos:end="84:48">compression</name></name></expr>]</index></name><operator pos:start="84:50" pos:end="84:50">.</operator><name pos:start="84:51" pos:end="84:59">algorithm</name> <operator pos:start="84:61" pos:end="84:62">==</operator> <name pos:start="84:64" pos:end="84:74">ALGO_RGB24H</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:52"><block_content pos:start="85:13" pos:end="85:52">
            <expr_stmt pos:start="85:13" pos:end="85:52"><expr pos:start="85:13" pos:end="85:51"><call pos:start="85:13" pos:end="85:51"><name pos:start="85:13" pos:end="85:30">gen_vector_table24</name><argument_list pos:start="85:31" pos:end="85:51">(<argument pos:start="85:32" pos:end="85:32"><expr pos:start="85:32" pos:end="85:32"><name pos:start="85:32" pos:end="85:32">s</name></expr></argument>, <argument pos:start="85:35" pos:end="85:50"><expr pos:start="85:35" pos:end="85:50"><name pos:start="85:35" pos:end="85:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <if type="elseif" pos:start="86:9" pos:end="88:52">else
        if <condition pos:start="87:12" pos:end="87:51">(<expr pos:start="87:13" pos:end="87:50"><name pos:start="87:13" pos:end="87:29"><name pos:start="87:13" pos:end="87:13">s</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:20">avctx</name><operator pos:start="87:21" pos:end="87:22">-&gt;</operator><name pos:start="87:23" pos:end="87:29">pix_fmt</name></name> <operator pos:start="87:31" pos:end="87:32">==</operator> <name pos:start="87:34" pos:end="87:50">AV_PIX_FMT_RGB555</name></expr>)</condition><block type="pseudo" pos:start="88:13" pos:end="88:52"><block_content pos:start="88:13" pos:end="88:52">
            <expr_stmt pos:start="88:13" pos:end="88:52"><expr pos:start="88:13" pos:end="88:51"><call pos:start="88:13" pos:end="88:51"><name pos:start="88:13" pos:end="88:30">gen_vector_table15</name><argument_list pos:start="88:31" pos:end="88:51">(<argument pos:start="88:32" pos:end="88:32"><expr pos:start="88:32" pos:end="88:32"><name pos:start="88:32" pos:end="88:32">s</name></expr></argument>, <argument pos:start="88:35" pos:end="88:50"><expr pos:start="88:35" pos:end="88:50"><name pos:start="88:35" pos:end="88:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>
        <else pos:start="89:9" pos:end="90:52">else<block type="pseudo" pos:start="90:13" pos:end="90:52"><block_content pos:start="90:13" pos:end="90:52">
            <expr_stmt pos:start="90:13" pos:end="90:52"><expr pos:start="90:13" pos:end="90:51"><call pos:start="90:13" pos:end="90:51"><name pos:start="90:13" pos:end="90:30">gen_vector_table16</name><argument_list pos:start="90:31" pos:end="90:51">(<argument pos:start="90:32" pos:end="90:32"><expr pos:start="90:32" pos:end="90:32"><name pos:start="90:32" pos:end="90:32">s</name></expr></argument>, <argument pos:start="90:35" pos:end="90:50"><expr pos:start="90:35" pos:end="90:50"><name pos:start="90:35" pos:end="90:50">sel_vector_table</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>
    <comment type="block" pos:start="91:5" pos:end="91:54">/* set up pointers to the other key data chunks */</comment>
    <expr_stmt pos:start="92:5" pos:end="92:52"><expr pos:start="92:5" pos:end="92:51"><name pos:start="92:5" pos:end="92:21"><name pos:start="92:5" pos:end="92:5">s</name><operator pos:start="92:6" pos:end="92:7">-&gt;</operator><name pos:start="92:8" pos:end="92:21">mb_change_bits</name></name> <operator pos:start="92:23" pos:end="92:23">=</operator> <name pos:start="92:25" pos:end="92:30"><name pos:start="92:25" pos:end="92:25">s</name><operator pos:start="92:26" pos:end="92:27">-&gt;</operator><name pos:start="92:28" pos:end="92:30">buf</name></name> <operator pos:start="92:32" pos:end="92:32">+</operator> <name pos:start="92:34" pos:end="92:51"><name pos:start="92:34" pos:end="92:39">header</name><operator pos:start="92:40" pos:end="92:40">.</operator><name pos:start="92:41" pos:end="92:51">header_size</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="93:5" pos:end="115:30"><if pos:start="93:5" pos:end="96:5">if <condition pos:start="93:8" pos:end="93:33">(<expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:16">flags</name></name> <operator pos:start="93:18" pos:end="93:18">&amp;</operator> <name pos:start="93:20" pos:end="93:32">FLAG_KEYFRAME</name></expr>)</condition> <block pos:start="93:35" pos:end="96:5">{<block_content pos:start="95:9" pos:end="95:44">
        <comment type="block" pos:start="94:9" pos:end="94:71">/* no change bits specified for a keyframe; only index bytes */</comment>
        <expr_stmt pos:start="95:9" pos:end="95:44"><expr pos:start="95:9" pos:end="95:43"><name pos:start="95:9" pos:end="95:23"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:23">index_stream</name></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:43"><name pos:start="95:27" pos:end="95:27">s</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:43">mb_change_bits</name></name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="96:7" pos:end="115:30">else <block pos:start="96:12" pos:end="115:30">{<block_content pos:start="98:9" pos:end="115:30">
        <comment type="block" pos:start="97:9" pos:end="97:42">/* one change bit per 4x4 block */</comment>
        <expr_stmt pos:start="98:9" pos:end="99:67"><expr pos:start="98:9" pos:end="99:66"><name pos:start="98:9" pos:end="98:23"><name pos:start="98:9" pos:end="98:9">s</name><operator pos:start="98:10" pos:end="98:11">-&gt;</operator><name pos:start="98:12" pos:end="98:23">index_stream</name></name> <operator pos:start="98:25" pos:end="98:25">=</operator> <name pos:start="98:27" pos:end="98:43"><name pos:start="98:27" pos:end="98:27">s</name><operator pos:start="98:28" pos:end="98:29">-&gt;</operator><name pos:start="98:30" pos:end="98:43">mb_change_bits</name></name> <operator pos:start="98:45" pos:end="98:45">+</operator>
            <operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:39"><name pos:start="99:14" pos:end="99:14">s</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:39">mb_change_bits_row_size</name></name> <operator pos:start="99:41" pos:end="99:41">*</operator> <operator pos:start="99:43" pos:end="99:43">(</operator><name pos:start="99:44" pos:end="99:59"><name pos:start="99:44" pos:end="99:44">s</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:51">avctx</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:59">height</name></name> <operator pos:start="99:61" pos:end="99:62">&gt;&gt;</operator> <literal type="number" pos:start="99:64" pos:end="99:64">2</literal><operator pos:start="99:65" pos:end="99:65">)</operator><operator pos:start="99:66" pos:end="99:66">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="100:5" pos:end="100:64"><expr pos:start="100:5" pos:end="100:63"><name pos:start="100:5" pos:end="100:24"><name pos:start="100:5" pos:end="100:5">s</name><operator pos:start="100:6" pos:end="100:7">-&gt;</operator><name pos:start="100:8" pos:end="100:24">index_stream_size</name></name> <operator pos:start="100:26" pos:end="100:26">=</operator> <name pos:start="100:28" pos:end="100:34"><name pos:start="100:28" pos:end="100:28">s</name><operator pos:start="100:29" pos:end="100:30">-&gt;</operator><name pos:start="100:31" pos:end="100:34">size</name></name> <operator pos:start="100:36" pos:end="100:36">-</operator> <operator pos:start="100:38" pos:end="100:38">(</operator><name pos:start="100:39" pos:end="100:53"><name pos:start="100:39" pos:end="100:39">s</name><operator pos:start="100:40" pos:end="100:41">-&gt;</operator><name pos:start="100:42" pos:end="100:53">index_stream</name></name> <operator pos:start="100:55" pos:end="100:55">-</operator> <name pos:start="100:57" pos:end="100:62"><name pos:start="100:57" pos:end="100:57">s</name><operator pos:start="100:58" pos:end="100:59">-&gt;</operator><name pos:start="100:60" pos:end="100:62">buf</name></name><operator pos:start="100:63" pos:end="100:63">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="101:5" pos:end="101:39"><expr pos:start="101:5" pos:end="101:38"><name pos:start="101:5" pos:end="101:20"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:20">last_deltaset</name></name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:38"><name pos:start="101:24" pos:end="101:29">header</name><operator pos:start="101:30" pos:end="101:30">.</operator><name pos:start="101:31" pos:end="101:38">deltaset</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="102:5" pos:end="102:39"><expr pos:start="102:5" pos:end="102:38"><name pos:start="102:5" pos:end="102:20"><name pos:start="102:5" pos:end="102:5">s</name><operator pos:start="102:6" pos:end="102:7">-&gt;</operator><name pos:start="102:8" pos:end="102:20">last_vectable</name></name> <operator pos:start="102:22" pos:end="102:22">=</operator> <name pos:start="102:24" pos:end="102:38"><name pos:start="102:24" pos:end="102:29">header</name><operator pos:start="102:30" pos:end="102:30">.</operator><name pos:start="102:31" pos:end="102:38">vectable</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="103:5" pos:end="103:40"><expr pos:start="103:5" pos:end="103:39"><name pos:start="103:5" pos:end="103:18"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:18">compression</name></name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:39"><name pos:start="103:22" pos:end="103:27">header</name><operator pos:start="103:28" pos:end="103:28">.</operator><name pos:start="103:29" pos:end="103:39">compression</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="104:5" pos:end="104:71"><expr pos:start="104:5" pos:end="104:70"><name pos:start="104:5" pos:end="104:18"><name pos:start="104:5" pos:end="104:5">s</name><operator pos:start="104:6" pos:end="104:7">-&gt;</operator><name pos:start="104:8" pos:end="104:18">block_width</name></name> <operator pos:start="104:20" pos:end="104:20">=</operator> <name pos:start="104:22" pos:end="104:58"><name pos:start="104:22" pos:end="104:38">compression_types</name><index pos:start="104:39" pos:end="104:58">[<expr pos:start="104:40" pos:end="104:57"><name pos:start="104:40" pos:end="104:57"><name pos:start="104:40" pos:end="104:45">header</name><operator pos:start="104:46" pos:end="104:46">.</operator><name pos:start="104:47" pos:end="104:57">compression</name></name></expr>]</index></name><operator pos:start="104:59" pos:end="104:59">.</operator><name pos:start="104:60" pos:end="104:70">block_width</name></expr>;</expr_stmt>
    <expr_stmt pos:start="105:5" pos:end="105:73"><expr pos:start="105:5" pos:end="105:72"><name pos:start="105:5" pos:end="105:19"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:19">block_height</name></name> <operator pos:start="105:21" pos:end="105:21">=</operator> <name pos:start="105:23" pos:end="105:59"><name pos:start="105:23" pos:end="105:39">compression_types</name><index pos:start="105:40" pos:end="105:59">[<expr pos:start="105:41" pos:end="105:58"><name pos:start="105:41" pos:end="105:58"><name pos:start="105:41" pos:end="105:46">header</name><operator pos:start="105:47" pos:end="105:47">.</operator><name pos:start="105:48" pos:end="105:58">compression</name></name></expr>]</index></name><operator pos:start="105:60" pos:end="105:60">.</operator><name pos:start="105:61" pos:end="105:72">block_height</name></expr>;</expr_stmt>
    <expr_stmt pos:start="106:5" pos:end="106:69"><expr pos:start="106:5" pos:end="106:68"><name pos:start="106:5" pos:end="106:17"><name pos:start="106:5" pos:end="106:5">s</name><operator pos:start="106:6" pos:end="106:7">-&gt;</operator><name pos:start="106:8" pos:end="106:17">block_type</name></name> <operator pos:start="106:19" pos:end="106:19">=</operator> <name pos:start="106:21" pos:end="106:57"><name pos:start="106:21" pos:end="106:37">compression_types</name><index pos:start="106:38" pos:end="106:57">[<expr pos:start="106:39" pos:end="106:56"><name pos:start="106:39" pos:end="106:56"><name pos:start="106:39" pos:end="106:44">header</name><operator pos:start="106:45" pos:end="106:45">.</operator><name pos:start="106:46" pos:end="106:56">compression</name></name></expr>]</index></name><operator pos:start="106:58" pos:end="106:58">.</operator><name pos:start="106:59" pos:end="106:68">block_type</name></expr>;</expr_stmt>
    <if_stmt pos:start="107:5" pos:end="114:61"><if pos:start="107:5" pos:end="114:61">if <condition pos:start="107:8" pos:end="107:45">(<expr pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:23"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:16">avctx</name><operator pos:start="107:17" pos:end="107:18">-&gt;</operator><name pos:start="107:19" pos:end="107:23">debug</name></name> <operator pos:start="107:25" pos:end="107:25">&amp;</operator> <name pos:start="107:27" pos:end="107:44">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="108:9" pos:end="114:61"><block_content pos:start="108:9" pos:end="114:61">
        <expr_stmt pos:start="108:9" pos:end="114:61"><expr pos:start="108:9" pos:end="114:60"><call pos:start="108:9" pos:end="114:60"><name pos:start="108:9" pos:end="108:14">av_log</name><argument_list pos:start="108:15" pos:end="114:60">(<argument pos:start="108:16" pos:end="108:23"><expr pos:start="108:16" pos:end="108:23"><name pos:start="108:16" pos:end="108:23"><name pos:start="108:16" pos:end="108:16">s</name><operator pos:start="108:17" pos:end="108:18">-&gt;</operator><name pos:start="108:19" pos:end="108:23">avctx</name></name></expr></argument>, <argument pos:start="108:26" pos:end="108:36"><expr pos:start="108:26" pos:end="108:36"><name pos:start="108:26" pos:end="108:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="108:39" pos:end="108:82"><expr pos:start="108:39" pos:end="108:82"><literal type="string" pos:start="108:39" pos:end="108:82">"tables: %d / %d c:%d %dx%d t:%d %s%s%s%s\n"</literal></expr></argument>,
            <argument pos:start="109:13" pos:end="109:28"><expr pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:13">s</name><operator pos:start="109:14" pos:end="109:15">-&gt;</operator><name pos:start="109:16" pos:end="109:28">last_deltaset</name></name></expr></argument>, <argument pos:start="109:31" pos:end="109:46"><expr pos:start="109:31" pos:end="109:46"><name pos:start="109:31" pos:end="109:46"><name pos:start="109:31" pos:end="109:31">s</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:46">last_vectable</name></name></expr></argument>, <argument pos:start="109:49" pos:end="109:62"><expr pos:start="109:49" pos:end="109:62"><name pos:start="109:49" pos:end="109:62"><name pos:start="109:49" pos:end="109:49">s</name><operator pos:start="109:50" pos:end="109:51">-&gt;</operator><name pos:start="109:52" pos:end="109:62">compression</name></name></expr></argument>, <argument pos:start="109:65" pos:end="109:78"><expr pos:start="109:65" pos:end="109:78"><name pos:start="109:65" pos:end="109:78"><name pos:start="109:65" pos:end="109:65">s</name><operator pos:start="109:66" pos:end="109:67">-&gt;</operator><name pos:start="109:68" pos:end="109:78">block_width</name></name></expr></argument>,
            <argument pos:start="110:13" pos:end="110:27"><expr pos:start="110:13" pos:end="110:27"><name pos:start="110:13" pos:end="110:27"><name pos:start="110:13" pos:end="110:13">s</name><operator pos:start="110:14" pos:end="110:15">-&gt;</operator><name pos:start="110:16" pos:end="110:27">block_height</name></name></expr></argument>, <argument pos:start="110:30" pos:end="110:42"><expr pos:start="110:30" pos:end="110:42"><name pos:start="110:30" pos:end="110:42"><name pos:start="110:30" pos:end="110:30">s</name><operator pos:start="110:31" pos:end="110:32">-&gt;</operator><name pos:start="110:33" pos:end="110:42">block_type</name></name></expr></argument>,
            <argument pos:start="111:13" pos:end="111:50"><expr pos:start="111:13" pos:end="111:50"><ternary pos:start="111:13" pos:end="111:50"><condition pos:start="111:13" pos:end="111:38"><expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:20">flags</name></name> <operator pos:start="111:22" pos:end="111:22">&amp;</operator> <name pos:start="111:24" pos:end="111:36">FLAG_KEYFRAME</name></expr> ?</condition><then pos:start="111:40" pos:end="111:45"> <expr pos:start="111:40" pos:end="111:45"><literal type="string" pos:start="111:40" pos:end="111:45">" KEY"</literal></expr> </then><else pos:start="111:47" pos:end="111:50">: <expr pos:start="111:49" pos:end="111:50"><literal type="string" pos:start="111:49" pos:end="111:50">""</literal></expr></else></ternary></expr></argument>,
            <argument pos:start="112:13" pos:end="112:54"><expr pos:start="112:13" pos:end="112:54"><ternary pos:start="112:13" pos:end="112:54"><condition pos:start="112:13" pos:end="112:40"><expr pos:start="112:13" pos:end="112:38"><name pos:start="112:13" pos:end="112:20"><name pos:start="112:13" pos:end="112:13">s</name><operator pos:start="112:14" pos:end="112:15">-&gt;</operator><name pos:start="112:16" pos:end="112:20">flags</name></name> <operator pos:start="112:22" pos:end="112:22">&amp;</operator> <name pos:start="112:24" pos:end="112:38">FLAG_INTERFRAME</name></expr> ?</condition><then pos:start="112:42" pos:end="112:49"> <expr pos:start="112:42" pos:end="112:49"><literal type="string" pos:start="112:42" pos:end="112:49">" INTER"</literal></expr> </then><else pos:start="112:51" pos:end="112:54">: <expr pos:start="112:53" pos:end="112:54"><literal type="string" pos:start="112:53" pos:end="112:54">""</literal></expr></else></ternary></expr></argument>,
            <argument pos:start="113:13" pos:end="113:51"><expr pos:start="113:13" pos:end="113:51"><ternary pos:start="113:13" pos:end="113:51"><condition pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:20"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">flags</name></name> <operator pos:start="113:22" pos:end="113:22">&amp;</operator> <name pos:start="113:24" pos:end="113:34">FLAG_SPRITE</name></expr> ?</condition><then pos:start="113:38" pos:end="113:46"> <expr pos:start="113:38" pos:end="113:46"><literal type="string" pos:start="113:38" pos:end="113:46">" SPRITE"</literal></expr> </then><else pos:start="113:48" pos:end="113:51">: <expr pos:start="113:50" pos:end="113:51"><literal type="string" pos:start="113:50" pos:end="113:51">""</literal></expr></else></ternary></expr></argument>,
            <argument pos:start="114:13" pos:end="114:59"><expr pos:start="114:13" pos:end="114:59"><ternary pos:start="114:13" pos:end="114:59"><condition pos:start="114:13" pos:end="114:42"><expr pos:start="114:13" pos:end="114:40"><name pos:start="114:13" pos:end="114:20"><name pos:start="114:13" pos:end="114:13">s</name><operator pos:start="114:14" pos:end="114:15">-&gt;</operator><name pos:start="114:16" pos:end="114:20">flags</name></name> <operator pos:start="114:22" pos:end="114:22">&amp;</operator> <name pos:start="114:24" pos:end="114:40">FLAG_INTERPOLATED</name></expr> ?</condition><then pos:start="114:44" pos:end="114:54"> <expr pos:start="114:44" pos:end="114:54"><literal type="string" pos:start="114:44" pos:end="114:54">" INTERPOL"</literal></expr> </then><else pos:start="114:56" pos:end="114:59">: <expr pos:start="114:58" pos:end="114:59"><literal type="string" pos:start="114:58" pos:end="114:59">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <return pos:start="115:5" pos:end="115:30">return <expr pos:start="115:12" pos:end="115:29"><name pos:start="115:12" pos:end="115:29"><name pos:start="115:12" pos:end="115:17">header</name><operator pos:start="115:18" pos:end="115:18">.</operator><name pos:start="115:19" pos:end="115:29">header_size</name></name></expr>;</return></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></else></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
