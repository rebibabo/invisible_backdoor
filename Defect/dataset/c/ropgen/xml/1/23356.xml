<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23356.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:10">ram_addr_t</name></type> <name pos:start="1:12" pos:end="1:38">migration_bitmap_find_dirty</name><parameter_list pos:start="1:39" pos:end="5:64">(<parameter pos:start="1:40" pos:end="1:51"><decl pos:start="1:40" pos:end="1:51"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:47">RAMState</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:51">rs</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">RAMBlock</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:65">rb</name></decl></parameter>,

                                       <parameter pos:start="3:40" pos:end="3:55"><decl pos:start="3:40" pos:end="3:55"><type pos:start="3:40" pos:end="3:55"><name pos:start="3:40" pos:end="3:49">ram_addr_t</name></type> <name pos:start="3:51" pos:end="3:55">start</name></decl></parameter>,

                                       <parameter pos:start="5:40" pos:end="5:63"><decl pos:start="5:40" pos:end="5:63"><type pos:start="5:40" pos:end="5:63"><name pos:start="5:40" pos:end="5:49">ram_addr_t</name> <modifier pos:start="5:51" pos:end="5:51">*</modifier></type><name pos:start="5:52" pos:end="5:63">ram_addr_abs</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="43:1">{<block_content pos:start="9:5" pos:end="41:45">

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:22">base</name> <init pos:start="9:24" pos:end="9:55">= <expr pos:start="9:26" pos:end="9:55"><name pos:start="9:26" pos:end="9:35"><name pos:start="9:26" pos:end="9:27">rb</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:35">offset</name></name> <operator pos:start="9:37" pos:end="9:38">&gt;&gt;</operator> <name pos:start="9:40" pos:end="9:55">TARGET_PAGE_BITS</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:17">long</name></type> <name pos:start="11:19" pos:end="11:20">nr</name> <init pos:start="11:22" pos:end="11:57">= <expr pos:start="11:24" pos:end="11:57"><name pos:start="11:24" pos:end="11:27">base</name> <operator pos:start="11:29" pos:end="11:29">+</operator> <operator pos:start="11:31" pos:end="11:31">(</operator><name pos:start="11:32" pos:end="11:36">start</name> <operator pos:start="11:38" pos:end="11:39">&gt;&gt;</operator> <name pos:start="11:41" pos:end="11:56">TARGET_PAGE_BITS</name><operator pos:start="11:57" pos:end="11:57">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:20">rb_size</name> <init pos:start="13:22" pos:end="13:38">= <expr pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:38"><name pos:start="13:24" pos:end="13:25">rb</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:38">used_length</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:61"><type pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:17">long</name></type> <name pos:start="15:19" pos:end="15:22">size</name> <init pos:start="15:24" pos:end="15:61">= <expr pos:start="15:26" pos:end="15:61"><name pos:start="15:26" pos:end="15:29">base</name> <operator pos:start="15:31" pos:end="15:31">+</operator> <operator pos:start="15:33" pos:end="15:33">(</operator><name pos:start="15:34" pos:end="15:40">rb_size</name> <operator pos:start="15:42" pos:end="15:43">&gt;&gt;</operator> <name pos:start="15:45" pos:end="15:60">TARGET_PAGE_BITS</name><operator pos:start="15:61" pos:end="15:61">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:17">long</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:25">bitmap</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:23"><decl pos:start="21:5" pos:end="21:22"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">long</name></type> <name pos:start="21:19" pos:end="21:22">next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:10">bitmap</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <call pos:start="25:14" pos:end="25:45"><name pos:start="25:14" pos:end="25:28">atomic_rcu_read</name><argument_list pos:start="25:29" pos:end="25:45">(<argument pos:start="25:30" pos:end="25:44"><expr pos:start="25:30" pos:end="25:44"><operator pos:start="25:30" pos:end="25:30">&amp;</operator><name pos:start="25:31" pos:end="25:44"><name pos:start="25:31" pos:end="25:32">rs</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:44">ram_bitmap</name></name></expr></argument>)</argument_list></call><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:51">bmap</name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:40">(<expr pos:start="27:9" pos:end="27:39"><name pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:10">rs</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:26">ram_bulk_stage</name></name> <operator pos:start="27:28" pos:end="27:29">&amp;&amp;</operator> <name pos:start="27:31" pos:end="27:32">nr</name> <operator pos:start="27:34" pos:end="27:34">&gt;</operator> <name pos:start="27:36" pos:end="27:39">base</name></expr>)</condition> <block pos:start="27:42" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:22">

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:12">next</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:17">nr</name> <operator pos:start="29:19" pos:end="29:19">+</operator> <literal type="number" pos:start="29:21" pos:end="29:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="35:5">else <block pos:start="31:12" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:47">

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:12">next</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <call pos:start="33:16" pos:end="33:46"><name pos:start="33:16" pos:end="33:28">find_next_bit</name><argument_list pos:start="33:29" pos:end="33:46">(<argument pos:start="33:30" pos:end="33:35"><expr pos:start="33:30" pos:end="33:35"><name pos:start="33:30" pos:end="33:35">bitmap</name></expr></argument>, <argument pos:start="33:38" pos:end="33:41"><expr pos:start="33:38" pos:end="33:41"><name pos:start="33:38" pos:end="33:41">size</name></expr></argument>, <argument pos:start="33:44" pos:end="33:45"><expr pos:start="33:44" pos:end="33:45"><name pos:start="33:44" pos:end="33:45">nr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><operator pos:start="39:5" pos:end="39:5">*</operator><name pos:start="39:6" pos:end="39:17">ram_addr_abs</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <name pos:start="39:21" pos:end="39:24">next</name> <operator pos:start="39:26" pos:end="39:27">&lt;&lt;</operator> <name pos:start="39:29" pos:end="39:44">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <return pos:start="41:5" pos:end="41:45">return <expr pos:start="41:12" pos:end="41:44"><operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:16">next</name> <operator pos:start="41:18" pos:end="41:18">-</operator> <name pos:start="41:20" pos:end="41:23">base</name><operator pos:start="41:24" pos:end="41:24">)</operator> <operator pos:start="41:26" pos:end="41:27">&lt;&lt;</operator> <name pos:start="41:29" pos:end="41:44">TARGET_PAGE_BITS</name></expr>;</return>

</block_content>}</block></function>
</unit>
