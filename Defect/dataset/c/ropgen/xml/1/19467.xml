<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19467.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:33">ff_vorbis_floor1_render_list</name><parameter_list pos:start="1:34" pos:end="5:74">(<parameter pos:start="1:35" pos:end="1:60"><decl pos:start="1:35" pos:end="1:60"><type pos:start="1:35" pos:end="1:60"><name pos:start="1:35" pos:end="1:53">vorbis_floor1_entry</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:60">list</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:72"><decl pos:start="1:63" pos:end="1:72"><type pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:72">values</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:50"><decl pos:start="3:35" pos:end="3:50"><type pos:start="3:35" pos:end="3:50"><name pos:start="3:35" pos:end="3:42">uint16_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:50">y_list</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:61"><decl pos:start="3:53" pos:end="3:61"><type pos:start="3:53" pos:end="3:61"><name pos:start="3:53" pos:end="3:55">int</name> <modifier pos:start="3:57" pos:end="3:57">*</modifier></type><name pos:start="3:58" pos:end="3:61">flag</name></decl></parameter>,

                                  <parameter pos:start="5:35" pos:end="5:48"><decl pos:start="5:35" pos:end="5:48"><type pos:start="5:35" pos:end="5:48"><name pos:start="5:35" pos:end="5:37">int</name></type> <name pos:start="5:39" pos:end="5:48">multiplier</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:60"><decl pos:start="5:51" pos:end="5:60"><type pos:start="5:51" pos:end="5:60"><name pos:start="5:51" pos:end="5:55">float</name> <modifier pos:start="5:57" pos:end="5:57">*</modifier></type><name pos:start="5:58" pos:end="5:60">out</name></decl></parameter>, <parameter pos:start="5:63" pos:end="5:73"><decl pos:start="5:63" pos:end="5:73"><type pos:start="5:63" pos:end="5:73"><name pos:start="5:63" pos:end="5:65">int</name></type> <name pos:start="5:67" pos:end="5:73">samples</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="45:1">{<block_content pos:start="9:5" pos:end="43:46">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">lx</name></decl>, <decl pos:start="9:13" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:14">ly</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:17">i</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:11"><expr pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:6">lx</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <literal type="number" pos:start="11:10" pos:end="11:10">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:32"><expr pos:start="13:5" pos:end="13:31"><name pos:start="13:5" pos:end="13:6">ly</name> <operator pos:start="13:8" pos:end="13:8">=</operator> <name pos:start="13:10" pos:end="13:18"><name pos:start="13:10" pos:end="13:15">y_list</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">*</operator> <name pos:start="13:22" pos:end="13:31">multiplier</name></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="39:5">for <control pos:start="15:9" pos:end="15:32">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:27"><expr pos:start="15:17" pos:end="15:26"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:26">values</name></expr>;</condition> <incr pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:29">i</name><operator pos:start="15:30" pos:end="15:31">++</operator></expr></incr>)</control> <block pos:start="15:34" pos:end="39:5">{<block_content pos:start="17:9" pos:end="37:18">

        <decl_stmt pos:start="17:9" pos:end="17:31"><decl pos:start="17:9" pos:end="17:30"><type pos:start="17:9" pos:end="17:11"><name pos:start="17:9" pos:end="17:11">int</name></type> <name pos:start="17:13" pos:end="17:15">pos</name> <init pos:start="17:17" pos:end="17:30">= <expr pos:start="17:19" pos:end="17:30"><name pos:start="17:19" pos:end="17:25"><name pos:start="17:19" pos:end="17:22">list</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><name pos:start="17:24" pos:end="17:24">i</name></expr>]</index></name><operator pos:start="17:26" pos:end="17:26">.</operator><name pos:start="17:27" pos:end="17:30">sort</name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="19:9" pos:end="33:9"><if pos:start="19:9" pos:end="33:9">if <condition pos:start="19:12" pos:end="19:22">(<expr pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:21"><name pos:start="19:13" pos:end="19:16">flag</name><index pos:start="19:17" pos:end="19:21">[<expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:20">pos</name></expr>]</index></name></expr>)</condition> <block pos:start="19:24" pos:end="33:9">{<block_content pos:start="21:13" pos:end="31:20">

            <decl_stmt pos:start="21:13" pos:end="21:33"><decl pos:start="21:13" pos:end="21:32"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:18">x1</name> <init pos:start="21:20" pos:end="21:32">= <expr pos:start="21:22" pos:end="21:32"><name pos:start="21:22" pos:end="21:30"><name pos:start="21:22" pos:end="21:25">list</name><index pos:start="21:26" pos:end="21:30">[<expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">pos</name></expr>]</index></name><operator pos:start="21:31" pos:end="21:31">.</operator><name pos:start="21:32" pos:end="21:32">x</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:46"><decl pos:start="23:13" pos:end="23:45"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:18">y1</name> <init pos:start="23:20" pos:end="23:45">= <expr pos:start="23:22" pos:end="23:45"><name pos:start="23:22" pos:end="23:32"><name pos:start="23:22" pos:end="23:27">y_list</name><index pos:start="23:28" pos:end="23:32">[<expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">pos</name></expr>]</index></name> <operator pos:start="23:34" pos:end="23:34">*</operator> <name pos:start="23:36" pos:end="23:45">multiplier</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="25:13" pos:end="27:64"><if pos:start="25:13" pos:end="27:64">if <condition pos:start="25:16" pos:end="25:29">(<expr pos:start="25:17" pos:end="25:28"><name pos:start="25:17" pos:end="25:18">lx</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <name pos:start="25:22" pos:end="25:28">samples</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:64"><block_content pos:start="27:17" pos:end="27:64">

                <expr_stmt pos:start="27:17" pos:end="27:64"><expr pos:start="27:17" pos:end="27:63"><call pos:start="27:17" pos:end="27:63"><name pos:start="27:17" pos:end="27:27">render_line</name><argument_list pos:start="27:28" pos:end="27:63">(<argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">lx</name></expr></argument>, <argument pos:start="27:33" pos:end="27:34"><expr pos:start="27:33" pos:end="27:34"><name pos:start="27:33" pos:end="27:34">ly</name></expr></argument>, <argument pos:start="27:37" pos:end="27:53"><expr pos:start="27:37" pos:end="27:53"><call pos:start="27:37" pos:end="27:53"><name pos:start="27:37" pos:end="27:41">FFMIN</name><argument_list pos:start="27:42" pos:end="27:53">(<argument pos:start="27:43" pos:end="27:44"><expr pos:start="27:43" pos:end="27:44"><name pos:start="27:43" pos:end="27:44">x1</name></expr></argument>,<argument pos:start="27:46" pos:end="27:52"><expr pos:start="27:46" pos:end="27:52"><name pos:start="27:46" pos:end="27:52">samples</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:56" pos:end="27:57"><expr pos:start="27:56" pos:end="27:57"><name pos:start="27:56" pos:end="27:57">y1</name></expr></argument>, <argument pos:start="27:60" pos:end="27:62"><expr pos:start="27:60" pos:end="27:62"><name pos:start="27:60" pos:end="27:62">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:20"><expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:14">lx</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:19">x1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:20"><expr pos:start="31:13" pos:end="31:19"><name pos:start="31:13" pos:end="31:14">ly</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:19">y1</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="37:18"><if pos:start="35:9" pos:end="37:18">if <condition pos:start="35:12" pos:end="35:26">(<expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:14">lx</name> <operator pos:start="35:16" pos:end="35:17">&gt;=</operator> <name pos:start="35:19" pos:end="35:25">samples</name></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:18"><block_content pos:start="37:13" pos:end="37:18">

            <break pos:start="37:13" pos:end="37:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="41:5" pos:end="43:46"><if pos:start="41:5" pos:end="43:46">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:10">lx</name> <operator pos:start="41:12" pos:end="41:12">&lt;</operator> <name pos:start="41:14" pos:end="41:20">samples</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:46"><block_content pos:start="43:9" pos:end="43:46">

        <expr_stmt pos:start="43:9" pos:end="43:46"><expr pos:start="43:9" pos:end="43:45"><call pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:19">render_line</name><argument_list pos:start="43:20" pos:end="43:45">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">lx</name></expr></argument>, <argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">ly</name></expr></argument>, <argument pos:start="43:29" pos:end="43:35"><expr pos:start="43:29" pos:end="43:35"><name pos:start="43:29" pos:end="43:35">samples</name></expr></argument>, <argument pos:start="43:38" pos:end="43:39"><expr pos:start="43:38" pos:end="43:39"><name pos:start="43:38" pos:end="43:39">ly</name></expr></argument>, <argument pos:start="43:42" pos:end="43:44"><expr pos:start="43:42" pos:end="43:44"><name pos:start="43:42" pos:end="43:44">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
