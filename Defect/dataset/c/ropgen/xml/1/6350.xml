<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6350.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:50">get_mvdata_interlaced</name><parameter_list pos:start="1:51" pos:end="3:78">(<parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:61">VC1Context</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type><name pos:start="1:64" pos:end="1:64">v</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">dmv_x</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:61"><decl pos:start="3:52" pos:end="3:61"><type pos:start="3:52" pos:end="3:61"><name pos:start="3:52" pos:end="3:54">int</name> <modifier pos:start="3:56" pos:end="3:56">*</modifier></type><name pos:start="3:57" pos:end="3:61">dmv_y</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:77"><decl pos:start="3:64" pos:end="3:77"><type pos:start="3:64" pos:end="3:77"><name pos:start="3:64" pos:end="3:66">int</name> <modifier pos:start="3:68" pos:end="3:68">*</modifier></type><name pos:start="3:69" pos:end="3:77">pred_flag</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:5">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">index</name></decl>, <decl pos:start="7:16" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:21">index1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:16">extend_x</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>, <decl pos:start="9:23" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:30">extend_y</name> <init pos:start="9:32" pos:end="9:34">= <expr pos:start="9:34" pos:end="9:34"><literal type="number" pos:start="9:34" pos:end="9:34">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">GetBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">gb</name> <init pos:start="11:23" pos:end="11:32">= <expr pos:start="11:25" pos:end="11:32"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:32"><name pos:start="11:26" pos:end="11:26">v</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:30">.</operator><name pos:start="11:31" pos:end="11:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">bits</name></decl>, <decl pos:start="13:15" pos:end="13:17"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">esc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">val</name></decl>, <decl pos:start="15:14" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:17">sign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:14"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name><modifier pos:start="17:14" pos:end="17:14">*</modifier></type> <name pos:start="17:16" pos:end="17:23">offs_tab</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="27:5">if <condition pos:start="21:8" pos:end="21:18">(<expr pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:17"><name pos:start="21:9" pos:end="21:9">v</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:17">numref</name></name></expr>)</condition> <block pos:start="21:20" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:19">

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:12">bits</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:39">VC1_2REF_MVDATA_VLC_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:11">esc</name>  <operator pos:start="25:14" pos:end="25:14">=</operator> <literal type="number" pos:start="25:16" pos:end="25:18">125</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="33:5">else <block pos:start="27:12" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:18">

        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:12">bits</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:39">VC1_1REF_MVDATA_VLC_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:11">esc</name>  <operator pos:start="31:14" pos:end="31:14">=</operator> <literal type="number" pos:start="31:16" pos:end="31:17">71</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <switch pos:start="35:5" pos:end="55:5">switch <condition pos:start="35:12" pos:end="35:24">(<expr pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:23"><name pos:start="35:13" pos:end="35:13">v</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">dmvrange</name></name></expr>)</condition> <block pos:start="35:26" pos:end="55:5">{<block_content pos:start="37:5" pos:end="53:14">

    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">1</literal></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:16">extend_x</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">1</literal></expr>;</expr_stmt>

        <break pos:start="41:9" pos:end="41:14">break;</break>

    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">2</literal></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="45:21"><expr pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:16">extend_y</name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">1</literal></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">3</literal></expr>:</case>

        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:16">extend_x</name> <operator pos:start="51:18" pos:end="51:18">=</operator> <name pos:start="51:20" pos:end="51:27">extend_y</name> <operator pos:start="51:29" pos:end="51:29">=</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:9">index</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <call pos:start="57:13" pos:end="57:52"><name pos:start="57:13" pos:end="57:20">get_vlc2</name><argument_list pos:start="57:21" pos:end="57:52">(<argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">gb</name></expr></argument>, <argument pos:start="57:26" pos:end="57:42"><expr pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:42"><name pos:start="57:26" pos:end="57:26">v</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:35">imv_vlc</name><operator pos:start="57:36" pos:end="57:37">-&gt;</operator><name pos:start="57:38" pos:end="57:42">table</name></name></expr></argument>, <argument pos:start="57:45" pos:end="57:48"><expr pos:start="57:45" pos:end="57:48"><name pos:start="57:45" pos:end="57:48">bits</name></expr></argument>, <argument pos:start="57:51" pos:end="57:51"><expr pos:start="57:51" pos:end="57:51"><literal type="number" pos:start="57:51" pos:end="57:51">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="125:5"><if pos:start="59:5" pos:end="73:5">if <condition pos:start="59:8" pos:end="59:21">(<expr pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:13">index</name> <operator pos:start="59:15" pos:end="59:16">==</operator> <name pos:start="59:18" pos:end="59:20">esc</name></expr>)</condition> <block pos:start="59:23" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:9">

        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:14">dmv_x</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:37"><name pos:start="61:18" pos:end="61:25">get_bits</name><argument_list pos:start="61:26" pos:end="61:37">(<argument pos:start="61:27" pos:end="61:28"><expr pos:start="61:27" pos:end="61:28"><name pos:start="61:27" pos:end="61:28">gb</name></expr></argument>, <argument pos:start="61:31" pos:end="61:36"><expr pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:36"><name pos:start="61:31" pos:end="61:31">v</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:36">k_x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:38"><expr pos:start="63:9" pos:end="63:37"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:14">dmv_y</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:37"><name pos:start="63:18" pos:end="63:25">get_bits</name><argument_list pos:start="63:26" pos:end="63:37">(<argument pos:start="63:27" pos:end="63:28"><expr pos:start="63:27" pos:end="63:28"><name pos:start="63:27" pos:end="63:28">gb</name></expr></argument>, <argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:36"><name pos:start="63:31" pos:end="63:31">v</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:36">k_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="71:9"><if pos:start="65:9" pos:end="71:9">if <condition pos:start="65:12" pos:end="65:22">(<expr pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:21"><name pos:start="65:13" pos:end="65:13">v</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:21">numref</name></name></expr>)</condition> <block pos:start="65:24" pos:end="71:9">{<block_content pos:start="67:13" pos:end="69:52">

            <expr_stmt pos:start="67:13" pos:end="67:36"><expr pos:start="67:13" pos:end="67:35"><operator pos:start="67:13" pos:end="67:13">*</operator><name pos:start="67:14" pos:end="67:22">pred_flag</name> <operator pos:start="67:24" pos:end="67:24">=</operator> <operator pos:start="67:26" pos:end="67:26">*</operator><name pos:start="67:27" pos:end="67:31">dmv_y</name> <operator pos:start="67:33" pos:end="67:33">&amp;</operator> <literal type="number" pos:start="67:35" pos:end="67:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:52"><expr pos:start="69:13" pos:end="69:51"><operator pos:start="69:13" pos:end="69:13">*</operator><name pos:start="69:14" pos:end="69:18">dmv_y</name>     <operator pos:start="69:24" pos:end="69:24">=</operator> <operator pos:start="69:26" pos:end="69:26">(</operator><operator pos:start="69:27" pos:end="69:27">*</operator><name pos:start="69:28" pos:end="69:32">dmv_y</name> <operator pos:start="69:34" pos:end="69:34">+</operator> <operator pos:start="69:36" pos:end="69:36">*</operator><name pos:start="69:37" pos:end="69:45">pred_flag</name><operator pos:start="69:46" pos:end="69:46">)</operator> <operator pos:start="69:48" pos:end="69:49">&gt;&gt;</operator> <literal type="number" pos:start="69:51" pos:end="69:51">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="75:5" pos:end="125:5">else <block pos:start="75:10" pos:end="125:5">{<block_content pos:start="77:9" pos:end="123:36">

        <if_stmt pos:start="77:9" pos:end="83:37"><if pos:start="77:9" pos:end="79:37">if <condition pos:start="77:12" pos:end="77:21">(<expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20">extend_x</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:37"><block_content pos:start="79:13" pos:end="79:37">

            <expr_stmt pos:start="79:13" pos:end="79:37"><expr pos:start="79:13" pos:end="79:36"><name pos:start="79:13" pos:end="79:20">offs_tab</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:36">offset_table2</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="81:9" pos:end="83:37">else<block type="pseudo" pos:start="83:13" pos:end="83:37"><block_content pos:start="83:13" pos:end="83:37">

            <expr_stmt pos:start="83:13" pos:end="83:37"><expr pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:20">offs_tab</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:36">offset_table1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:33"><expr pos:start="85:9" pos:end="85:32"><name pos:start="85:9" pos:end="85:14">index1</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <operator pos:start="85:18" pos:end="85:18">(</operator><name pos:start="85:19" pos:end="85:23">index</name> <operator pos:start="85:25" pos:end="85:25">+</operator> <literal type="number" pos:start="85:27" pos:end="85:27">1</literal><operator pos:start="85:28" pos:end="85:28">)</operator> <operator pos:start="85:30" pos:end="85:30">%</operator> <literal type="number" pos:start="85:32" pos:end="85:32">9</literal></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="97:23"><if pos:start="87:9" pos:end="95:9">if <condition pos:start="87:12" pos:end="87:24">(<expr pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:18">index1</name> <operator pos:start="87:20" pos:end="87:21">!=</operator> <literal type="number" pos:start="87:23" pos:end="87:23">0</literal></expr>)</condition> <block pos:start="87:26" pos:end="95:9">{<block_content pos:start="89:13" pos:end="93:69">

            <expr_stmt pos:start="89:13" pos:end="89:53"><expr pos:start="89:13" pos:end="89:52"><name pos:start="89:13" pos:end="89:15">val</name>    <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:52"><name pos:start="89:22" pos:end="89:29">get_bits</name><argument_list pos:start="89:30" pos:end="89:52">(<argument pos:start="89:31" pos:end="89:32"><expr pos:start="89:31" pos:end="89:32"><name pos:start="89:31" pos:end="89:32">gb</name></expr></argument>, <argument pos:start="89:35" pos:end="89:51"><expr pos:start="89:35" pos:end="89:51"><name pos:start="89:35" pos:end="89:40">index1</name> <operator pos:start="89:42" pos:end="89:42">+</operator> <name pos:start="89:44" pos:end="89:51">extend_x</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:34"><expr pos:start="91:13" pos:end="91:33"><name pos:start="91:13" pos:end="91:16">sign</name>   <operator pos:start="91:20" pos:end="91:20">=</operator> <literal type="number" pos:start="91:22" pos:end="91:24">0</literal> <operator pos:start="91:24" pos:end="91:24">-</operator><operator pos:start="91:25" pos:end="91:25">(</operator><name pos:start="91:26" pos:end="91:28">val</name> <operator pos:start="91:30" pos:end="91:30">&amp;</operator> <literal type="number" pos:start="91:32" pos:end="91:32">1</literal><operator pos:start="91:33" pos:end="91:33">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:69"><expr pos:start="93:13" pos:end="93:68"><operator pos:start="93:13" pos:end="93:13">*</operator><name pos:start="93:14" pos:end="93:18">dmv_x</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <operator pos:start="93:22" pos:end="93:22">(</operator><name pos:start="93:23" pos:end="93:26">sign</name> <operator pos:start="93:28" pos:end="93:28">^</operator> <operator pos:start="93:30" pos:end="93:30">(</operator><operator pos:start="93:31" pos:end="93:31">(</operator><name pos:start="93:32" pos:end="93:34">val</name> <operator pos:start="93:36" pos:end="93:37">&gt;&gt;</operator> <literal type="number" pos:start="93:39" pos:end="93:39">1</literal><operator pos:start="93:40" pos:end="93:40">)</operator> <operator pos:start="93:42" pos:end="93:42">+</operator> <name pos:start="93:44" pos:end="93:59"><name pos:start="93:44" pos:end="93:51">offs_tab</name><index pos:start="93:52" pos:end="93:59">[<expr pos:start="93:53" pos:end="93:58"><name pos:start="93:53" pos:end="93:58">index1</name></expr>]</index></name><operator pos:start="93:60" pos:end="93:60">)</operator><operator pos:start="93:61" pos:end="93:61">)</operator> <operator pos:start="93:63" pos:end="93:63">-</operator> <name pos:start="93:65" pos:end="93:68">sign</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="97:23">else<block type="pseudo" pos:start="97:13" pos:end="97:23"><block_content pos:start="97:13" pos:end="97:23">

            <expr_stmt pos:start="97:13" pos:end="97:23"><expr pos:start="97:13" pos:end="97:22"><operator pos:start="97:13" pos:end="97:13">*</operator><name pos:start="97:14" pos:end="97:18">dmv_x</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <literal type="number" pos:start="97:22" pos:end="97:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="99:9" pos:end="105:37"><if pos:start="99:9" pos:end="101:37">if <condition pos:start="99:12" pos:end="99:21">(<expr pos:start="99:13" pos:end="99:20"><name pos:start="99:13" pos:end="99:20">extend_y</name></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:37"><block_content pos:start="101:13" pos:end="101:37">

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:20">offs_tab</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <name pos:start="101:24" pos:end="101:36">offset_table2</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="103:9" pos:end="105:37">else<block type="pseudo" pos:start="105:13" pos:end="105:37"><block_content pos:start="105:13" pos:end="105:37">

            <expr_stmt pos:start="105:13" pos:end="105:37"><expr pos:start="105:13" pos:end="105:36"><name pos:start="105:13" pos:end="105:20">offs_tab</name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:36">offset_table1</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:33"><expr pos:start="107:9" pos:end="107:32"><name pos:start="107:9" pos:end="107:14">index1</name> <operator pos:start="107:16" pos:end="107:16">=</operator> <operator pos:start="107:18" pos:end="107:18">(</operator><name pos:start="107:19" pos:end="107:23">index</name> <operator pos:start="107:25" pos:end="107:25">+</operator> <literal type="number" pos:start="107:27" pos:end="107:27">1</literal><operator pos:start="107:28" pos:end="107:28">)</operator> <operator pos:start="107:30" pos:end="107:30">/</operator> <literal type="number" pos:start="107:32" pos:end="107:32">9</literal></expr>;</expr_stmt>

        <if_stmt pos:start="109:9" pos:end="119:23"><if pos:start="109:9" pos:end="117:9">if <condition pos:start="109:12" pos:end="109:31">(<expr pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:18">index1</name> <operator pos:start="109:20" pos:end="109:20">&gt;</operator> <name pos:start="109:22" pos:end="109:30"><name pos:start="109:22" pos:end="109:22">v</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:30">numref</name></name></expr>)</condition> <block pos:start="109:33" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:82">

            <expr_stmt pos:start="111:13" pos:end="111:83"><expr pos:start="111:13" pos:end="111:82"><name pos:start="111:13" pos:end="111:15">val</name>    <operator pos:start="111:20" pos:end="111:20">=</operator> <call pos:start="111:22" pos:end="111:82"><name pos:start="111:22" pos:end="111:29">get_bits</name><argument_list pos:start="111:30" pos:end="111:82">(<argument pos:start="111:31" pos:end="111:32"><expr pos:start="111:31" pos:end="111:32"><name pos:start="111:31" pos:end="111:32">gb</name></expr></argument>, <argument pos:start="111:35" pos:end="111:81"><expr pos:start="111:35" pos:end="111:81"><operator pos:start="111:35" pos:end="111:35">(</operator><name pos:start="111:36" pos:end="111:41">index1</name> <operator pos:start="111:43" pos:end="111:43">+</operator> <operator pos:start="111:45" pos:end="111:45">(</operator><name pos:start="111:46" pos:end="111:53">extend_y</name> <operator pos:start="111:55" pos:end="111:56">&lt;&lt;</operator> <name pos:start="111:58" pos:end="111:66"><name pos:start="111:58" pos:end="111:58">v</name><operator pos:start="111:59" pos:end="111:60">-&gt;</operator><name pos:start="111:61" pos:end="111:66">numref</name></name><operator pos:start="111:67" pos:end="111:67">)</operator><operator pos:start="111:68" pos:end="111:68">)</operator> <operator pos:start="111:70" pos:end="111:71">&gt;&gt;</operator> <name pos:start="111:73" pos:end="111:81"><name pos:start="111:73" pos:end="111:73">v</name><operator pos:start="111:74" pos:end="111:75">-&gt;</operator><name pos:start="111:76" pos:end="111:81">numref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:16">sign</name>   <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:24">0</literal> <operator pos:start="113:24" pos:end="113:24">-</operator> <operator pos:start="113:26" pos:end="113:26">(</operator><name pos:start="113:27" pos:end="113:29">val</name> <operator pos:start="113:31" pos:end="113:31">&amp;</operator> <literal type="number" pos:start="113:33" pos:end="113:33">1</literal><operator pos:start="113:34" pos:end="113:34">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:82"><expr pos:start="115:13" pos:end="115:81"><operator pos:start="115:13" pos:end="115:13">*</operator><name pos:start="115:14" pos:end="115:18">dmv_y</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <operator pos:start="115:22" pos:end="115:22">(</operator><name pos:start="115:23" pos:end="115:26">sign</name> <operator pos:start="115:28" pos:end="115:28">^</operator> <operator pos:start="115:30" pos:end="115:30">(</operator><operator pos:start="115:31" pos:end="115:31">(</operator><name pos:start="115:32" pos:end="115:34">val</name> <operator pos:start="115:36" pos:end="115:37">&gt;&gt;</operator> <literal type="number" pos:start="115:39" pos:end="115:39">1</literal><operator pos:start="115:40" pos:end="115:40">)</operator> <operator pos:start="115:42" pos:end="115:42">+</operator> <name pos:start="115:44" pos:end="115:72"><name pos:start="115:44" pos:end="115:51">offs_tab</name><index pos:start="115:52" pos:end="115:72">[<expr pos:start="115:53" pos:end="115:71"><name pos:start="115:53" pos:end="115:58">index1</name> <operator pos:start="115:60" pos:end="115:61">&gt;&gt;</operator> <name pos:start="115:63" pos:end="115:71"><name pos:start="115:63" pos:end="115:63">v</name><operator pos:start="115:64" pos:end="115:65">-&gt;</operator><name pos:start="115:66" pos:end="115:71">numref</name></name></expr>]</index></name><operator pos:start="115:73" pos:end="115:73">)</operator><operator pos:start="115:74" pos:end="115:74">)</operator> <operator pos:start="115:76" pos:end="115:76">-</operator> <name pos:start="115:78" pos:end="115:81">sign</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="119:23">else<block type="pseudo" pos:start="119:13" pos:end="119:23"><block_content pos:start="119:13" pos:end="119:23">

            <expr_stmt pos:start="119:13" pos:end="119:23"><expr pos:start="119:13" pos:end="119:22"><operator pos:start="119:13" pos:end="119:13">*</operator><name pos:start="119:14" pos:end="119:18">dmv_y</name> <operator pos:start="119:20" pos:end="119:20">=</operator> <literal type="number" pos:start="119:22" pos:end="119:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="121:9" pos:end="123:36"><if pos:start="121:9" pos:end="123:36">if <condition pos:start="121:12" pos:end="121:22">(<expr pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:13">v</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:21">numref</name></name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:36"><block_content pos:start="123:13" pos:end="123:36">

            <expr_stmt pos:start="123:13" pos:end="123:36"><expr pos:start="123:13" pos:end="123:35"><operator pos:start="123:13" pos:end="123:13">*</operator><name pos:start="123:14" pos:end="123:22">pred_flag</name> <operator pos:start="123:24" pos:end="123:24">=</operator> <name pos:start="123:26" pos:end="123:31">index1</name> <operator pos:start="123:33" pos:end="123:33">&amp;</operator> <literal type="number" pos:start="123:35" pos:end="123:35">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
