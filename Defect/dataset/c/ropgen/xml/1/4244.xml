<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4244.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">kmvc_decode_intra_8x8</name><parameter_list pos:start="1:33" pos:end="1:100">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:44">KmvcContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:50">ctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:71"><decl pos:start="1:53" pos:end="1:71"><type pos:start="1:53" pos:end="1:71"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type> <name pos:start="1:69" pos:end="1:71">src</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:85"><decl pos:start="1:74" pos:end="1:85"><type pos:start="1:74" pos:end="1:85"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:85">src_size</name></decl></parameter>, <parameter pos:start="1:88" pos:end="1:92"><decl pos:start="1:88" pos:end="1:92"><type pos:start="1:88" pos:end="1:92"><name pos:start="1:88" pos:end="1:90">int</name></type> <name pos:start="1:92" pos:end="1:92">w</name></decl></parameter>, <parameter pos:start="1:95" pos:end="1:99"><decl pos:start="1:95" pos:end="1:99"><type pos:start="1:95" pos:end="1:99"><name pos:start="1:95" pos:end="1:97">int</name></type> <name pos:start="1:99" pos:end="1:99">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">BitBuf</name></type> <name pos:start="5:12" pos:end="5:13">bb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>, <decl pos:start="7:14" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">bx</name></decl>, <decl pos:start="11:13" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:13" pos:end="11:14">by</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:27"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">l0x</name></decl>, <decl pos:start="13:14" pos:end="13:16"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:16">l1x</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:21">l0y</name></decl>, <decl pos:start="13:24" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:26">l1y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:10"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">mx</name></decl>, <decl pos:start="15:13" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:13" pos:end="15:14">my</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:43"><type pos:start="17:5" pos:end="17:19"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:26">src_end</name> <init pos:start="17:28" pos:end="17:43">= <expr pos:start="17:30" pos:end="17:43"><name pos:start="17:30" pos:end="17:32">src</name> <operator pos:start="17:34" pos:end="17:34">+</operator> <name pos:start="17:36" pos:end="17:43">src_size</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><call pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:21">kmvc_init_getbits</name><argument_list pos:start="21:22" pos:end="21:30">(<argument pos:start="21:23" pos:end="21:24"><expr pos:start="21:23" pos:end="21:24"><name pos:start="21:23" pos:end="21:24">bb</name></expr></argument>, <argument pos:start="21:27" pos:end="21:29"><expr pos:start="21:27" pos:end="21:29"><name pos:start="21:27" pos:end="21:29">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="187:9">for <control pos:start="25:9" pos:end="25:33">(<init pos:start="25:10" pos:end="25:16"><expr pos:start="25:10" pos:end="25:15"><name pos:start="25:10" pos:end="25:11">by</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>;</init> <condition pos:start="25:18" pos:end="25:24"><expr pos:start="25:18" pos:end="25:23"><name pos:start="25:18" pos:end="25:19">by</name> <operator pos:start="25:21" pos:end="25:21">&lt;</operator> <name pos:start="25:23" pos:end="25:23">h</name></expr>;</condition> <incr pos:start="25:26" pos:end="25:32"><expr pos:start="25:26" pos:end="25:32"><name pos:start="25:26" pos:end="25:27">by</name> <operator pos:start="25:29" pos:end="25:30">+=</operator> <literal type="number" pos:start="25:32" pos:end="25:32">8</literal></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="187:9"><block_content pos:start="27:9" pos:end="187:9">

        <for pos:start="27:9" pos:end="187:9">for <control pos:start="27:13" pos:end="27:37">(<init pos:start="27:14" pos:end="27:20"><expr pos:start="27:14" pos:end="27:19"><name pos:start="27:14" pos:end="27:15">bx</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal></expr>;</init> <condition pos:start="27:22" pos:end="27:28"><expr pos:start="27:22" pos:end="27:27"><name pos:start="27:22" pos:end="27:23">bx</name> <operator pos:start="27:25" pos:end="27:25">&lt;</operator> <name pos:start="27:27" pos:end="27:27">w</name></expr>;</condition> <incr pos:start="27:30" pos:end="27:36"><expr pos:start="27:30" pos:end="27:36"><name pos:start="27:30" pos:end="27:31">bx</name> <operator pos:start="27:33" pos:end="27:34">+=</operator> <literal type="number" pos:start="27:36" pos:end="27:36">8</literal></expr></incr>)</control> <block pos:start="27:39" pos:end="187:9">{<block_content pos:start="29:13" pos:end="185:13">

            <expr_stmt pos:start="29:13" pos:end="29:47"><expr pos:start="29:13" pos:end="29:46"><call pos:start="29:13" pos:end="29:46"><name pos:start="29:13" pos:end="29:23">kmvc_getbit</name><argument_list pos:start="29:24" pos:end="29:46">(<argument pos:start="29:25" pos:end="29:26"><expr pos:start="29:25" pos:end="29:26"><name pos:start="29:25" pos:end="29:26">bb</name></expr></argument>, <argument pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:31">src</name></expr></argument>, <argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">src_end</name></expr></argument>, <argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="31:13" pos:end="185:13"><if pos:start="31:13" pos:end="47:13">if <condition pos:start="31:16" pos:end="31:21">(<expr pos:start="31:17" pos:end="31:20"><operator pos:start="31:17" pos:end="31:17">!</operator><name pos:start="31:18" pos:end="31:20">res</name></expr>)</condition> <block pos:start="31:23" pos:end="47:13">{<block_content pos:start="33:17" pos:end="45:71">         <comment type="line" pos:start="31:33" pos:end="31:55">// fill whole 8x8 block</comment>

                <if_stmt pos:start="33:17" pos:end="39:17"><if pos:start="33:17" pos:end="39:17">if <condition pos:start="33:20" pos:end="33:35">(<expr pos:start="33:21" pos:end="33:34"><name pos:start="33:21" pos:end="33:23">src</name> <operator pos:start="33:25" pos:end="33:26">&gt;=</operator> <name pos:start="33:28" pos:end="33:34">src_end</name></expr>)</condition> <block pos:start="33:37" pos:end="39:17">{<block_content pos:start="35:21" pos:end="37:47">

                    <expr_stmt pos:start="35:21" pos:end="35:71"><expr pos:start="35:21" pos:end="35:70"><call pos:start="35:21" pos:end="35:70"><name pos:start="35:21" pos:end="35:26">av_log</name><argument_list pos:start="35:27" pos:end="35:70">(<argument pos:start="35:28" pos:end="35:37"><expr pos:start="35:28" pos:end="35:37"><name pos:start="35:28" pos:end="35:37"><name pos:start="35:28" pos:end="35:30">ctx</name><operator pos:start="35:31" pos:end="35:32">-&gt;</operator><name pos:start="35:33" pos:end="35:37">avctx</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:51"><expr pos:start="35:40" pos:end="35:51"><name pos:start="35:40" pos:end="35:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:54" pos:end="35:69"><expr pos:start="35:54" pos:end="35:69"><literal type="string" pos:start="35:54" pos:end="35:69">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="37:21" pos:end="37:47">return <expr pos:start="37:28" pos:end="37:46"><name pos:start="37:28" pos:end="37:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:29"><expr pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:19">val</name> <operator pos:start="41:21" pos:end="41:21">=</operator> <operator pos:start="41:23" pos:end="41:23">*</operator><name pos:start="41:24" pos:end="41:26">src</name><operator pos:start="41:27" pos:end="41:28">++</operator></expr>;</expr_stmt>

                <for pos:start="43:17" pos:end="45:71">for <control pos:start="43:21" pos:end="43:40">(<init pos:start="43:22" pos:end="43:27"><expr pos:start="43:22" pos:end="43:26"><name pos:start="43:22" pos:end="43:22">i</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">0</literal></expr>;</init> <condition pos:start="43:29" pos:end="43:35"><expr pos:start="43:29" pos:end="43:34"><name pos:start="43:29" pos:end="43:29">i</name> <operator pos:start="43:31" pos:end="43:31">&lt;</operator> <literal type="number" pos:start="43:33" pos:end="43:34">64</literal></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="45:21" pos:end="45:71"><block_content pos:start="45:21" pos:end="45:71">

                    <expr_stmt pos:start="45:21" pos:end="45:71"><expr pos:start="45:21" pos:end="45:70"><call pos:start="45:21" pos:end="45:64"><name pos:start="45:21" pos:end="45:23">BLK</name><argument_list pos:start="45:24" pos:end="45:64">(<argument pos:start="45:25" pos:end="45:32"><expr pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:32"><name pos:start="45:25" pos:end="45:27">ctx</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:32">cur</name></name></expr></argument>, <argument pos:start="45:35" pos:end="45:48"><expr pos:start="45:35" pos:end="45:48"><name pos:start="45:35" pos:end="45:36">bx</name> <operator pos:start="45:38" pos:end="45:38">+</operator> <operator pos:start="45:40" pos:end="45:40">(</operator><name pos:start="45:41" pos:end="45:41">i</name> <operator pos:start="45:43" pos:end="45:43">&amp;</operator> <literal type="number" pos:start="45:45" pos:end="45:47">0x7</literal><operator pos:start="45:48" pos:end="45:48">)</operator></expr></argument>, <argument pos:start="45:51" pos:end="45:63"><expr pos:start="45:51" pos:end="45:63"><name pos:start="45:51" pos:end="45:52">by</name> <operator pos:start="45:54" pos:end="45:54">+</operator> <operator pos:start="45:56" pos:end="45:56">(</operator><name pos:start="45:57" pos:end="45:57">i</name> <operator pos:start="45:59" pos:end="45:60">&gt;&gt;</operator> <literal type="number" pos:start="45:62" pos:end="45:62">3</literal><operator pos:start="45:63" pos:end="45:63">)</operator></expr></argument>)</argument_list></call> <operator pos:start="45:66" pos:end="45:66">=</operator> <name pos:start="45:68" pos:end="45:70">val</name></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if> <else pos:start="47:15" pos:end="185:13">else <block pos:start="47:20" pos:end="185:13">{<block_content pos:start="49:17" pos:end="183:17">            <comment type="line" pos:start="47:33" pos:end="47:60">// handle four 4x4 subblocks</comment>

                <for pos:start="49:17" pos:end="183:17">for <control pos:start="49:21" pos:end="49:39">(<init pos:start="49:22" pos:end="49:27"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:22">i</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <literal type="number" pos:start="49:26" pos:end="49:26">0</literal></expr>;</init> <condition pos:start="49:29" pos:end="49:34"><expr pos:start="49:29" pos:end="49:33"><name pos:start="49:29" pos:end="49:29">i</name> <operator pos:start="49:31" pos:end="49:31">&lt;</operator> <literal type="number" pos:start="49:33" pos:end="49:33">4</literal></expr>;</condition> <incr pos:start="49:36" pos:end="49:38"><expr pos:start="49:36" pos:end="49:38"><name pos:start="49:36" pos:end="49:36">i</name><operator pos:start="49:37" pos:end="49:38">++</operator></expr></incr>)</control> <block pos:start="49:41" pos:end="183:17">{<block_content pos:start="51:21" pos:end="181:21">

                    <expr_stmt pos:start="51:21" pos:end="51:43"><expr pos:start="51:21" pos:end="51:42"><name pos:start="51:21" pos:end="51:23">l0x</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <name pos:start="51:27" pos:end="51:28">bx</name> <operator pos:start="51:30" pos:end="51:30">+</operator> <operator pos:start="51:32" pos:end="51:32">(</operator><name pos:start="51:33" pos:end="51:33">i</name> <operator pos:start="51:35" pos:end="51:35">&amp;</operator> <literal type="number" pos:start="51:37" pos:end="51:37">1</literal><operator pos:start="51:38" pos:end="51:38">)</operator> <operator pos:start="51:40" pos:end="51:40">*</operator> <literal type="number" pos:start="51:42" pos:end="51:42">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:43"><expr pos:start="53:21" pos:end="53:42"><name pos:start="53:21" pos:end="53:23">l0y</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:28">by</name> <operator pos:start="53:30" pos:end="53:30">+</operator> <operator pos:start="53:32" pos:end="53:32">(</operator><name pos:start="53:33" pos:end="53:33">i</name> <operator pos:start="53:35" pos:end="53:35">&amp;</operator> <literal type="number" pos:start="53:37" pos:end="53:37">2</literal><operator pos:start="53:38" pos:end="53:38">)</operator> <operator pos:start="53:40" pos:end="53:40">*</operator> <literal type="number" pos:start="53:42" pos:end="53:42">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="55:21" pos:end="55:55"><expr pos:start="55:21" pos:end="55:54"><call pos:start="55:21" pos:end="55:54"><name pos:start="55:21" pos:end="55:31">kmvc_getbit</name><argument_list pos:start="55:32" pos:end="55:54">(<argument pos:start="55:33" pos:end="55:34"><expr pos:start="55:33" pos:end="55:34"><name pos:start="55:33" pos:end="55:34">bb</name></expr></argument>, <argument pos:start="55:37" pos:end="55:39"><expr pos:start="55:37" pos:end="55:39"><name pos:start="55:37" pos:end="55:39">src</name></expr></argument>, <argument pos:start="55:42" pos:end="55:48"><expr pos:start="55:42" pos:end="55:48"><name pos:start="55:42" pos:end="55:48">src_end</name></expr></argument>, <argument pos:start="55:51" pos:end="55:53"><expr pos:start="55:51" pos:end="55:53"><name pos:start="55:51" pos:end="55:53">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="57:21" pos:end="181:21"><if pos:start="57:21" pos:end="101:21">if <condition pos:start="57:24" pos:end="57:29">(<expr pos:start="57:25" pos:end="57:28"><operator pos:start="57:25" pos:end="57:25">!</operator><name pos:start="57:26" pos:end="57:28">res</name></expr>)</condition> <block pos:start="57:31" pos:end="101:21">{<block_content pos:start="59:25" pos:end="99:25">

                        <expr_stmt pos:start="59:25" pos:end="59:59"><expr pos:start="59:25" pos:end="59:58"><call pos:start="59:25" pos:end="59:58"><name pos:start="59:25" pos:end="59:35">kmvc_getbit</name><argument_list pos:start="59:36" pos:end="59:58">(<argument pos:start="59:37" pos:end="59:38"><expr pos:start="59:37" pos:end="59:38"><name pos:start="59:37" pos:end="59:38">bb</name></expr></argument>, <argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><name pos:start="59:41" pos:end="59:43">src</name></expr></argument>, <argument pos:start="59:46" pos:end="59:52"><expr pos:start="59:46" pos:end="59:52"><name pos:start="59:46" pos:end="59:52">src_end</name></expr></argument>, <argument pos:start="59:55" pos:end="59:57"><expr pos:start="59:55" pos:end="59:57"><name pos:start="59:55" pos:end="59:57">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="61:25" pos:end="99:25"><if pos:start="61:25" pos:end="77:25">if <condition pos:start="61:28" pos:end="61:33">(<expr pos:start="61:29" pos:end="61:32"><operator pos:start="61:29" pos:end="61:29">!</operator><name pos:start="61:30" pos:end="61:32">res</name></expr>)</condition> <block pos:start="61:35" pos:end="77:25">{<block_content pos:start="63:29" pos:end="75:83">     <comment type="line" pos:start="61:41" pos:end="61:63">// fill whole 4x4 block</comment>

                            <if_stmt pos:start="63:29" pos:end="69:29"><if pos:start="63:29" pos:end="69:29">if <condition pos:start="63:32" pos:end="63:47">(<expr pos:start="63:33" pos:end="63:46"><name pos:start="63:33" pos:end="63:35">src</name> <operator pos:start="63:37" pos:end="63:38">&gt;=</operator> <name pos:start="63:40" pos:end="63:46">src_end</name></expr>)</condition> <block pos:start="63:49" pos:end="69:29">{<block_content pos:start="65:33" pos:end="67:59">

                                <expr_stmt pos:start="65:33" pos:end="65:83"><expr pos:start="65:33" pos:end="65:82"><call pos:start="65:33" pos:end="65:82"><name pos:start="65:33" pos:end="65:38">av_log</name><argument_list pos:start="65:39" pos:end="65:82">(<argument pos:start="65:40" pos:end="65:49"><expr pos:start="65:40" pos:end="65:49"><name pos:start="65:40" pos:end="65:49"><name pos:start="65:40" pos:end="65:42">ctx</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:49">avctx</name></name></expr></argument>, <argument pos:start="65:52" pos:end="65:63"><expr pos:start="65:52" pos:end="65:63"><name pos:start="65:52" pos:end="65:63">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:66" pos:end="65:81"><expr pos:start="65:66" pos:end="65:81"><literal type="string" pos:start="65:66" pos:end="65:81">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="67:33" pos:end="67:59">return <expr pos:start="67:40" pos:end="67:58"><name pos:start="67:40" pos:end="67:58">AVERROR_INVALIDDATA</name></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="71:29" pos:end="71:41"><expr pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:31">val</name> <operator pos:start="71:33" pos:end="71:33">=</operator> <operator pos:start="71:35" pos:end="71:35">*</operator><name pos:start="71:36" pos:end="71:38">src</name><operator pos:start="71:39" pos:end="71:40">++</operator></expr>;</expr_stmt>

                            <for pos:start="73:29" pos:end="75:83">for <control pos:start="73:33" pos:end="73:52">(<init pos:start="73:34" pos:end="73:39"><expr pos:start="73:34" pos:end="73:38"><name pos:start="73:34" pos:end="73:34">j</name> <operator pos:start="73:36" pos:end="73:36">=</operator> <literal type="number" pos:start="73:38" pos:end="73:38">0</literal></expr>;</init> <condition pos:start="73:41" pos:end="73:47"><expr pos:start="73:41" pos:end="73:46"><name pos:start="73:41" pos:end="73:41">j</name> <operator pos:start="73:43" pos:end="73:43">&lt;</operator> <literal type="number" pos:start="73:45" pos:end="73:46">16</literal></expr>;</condition> <incr pos:start="73:49" pos:end="73:51"><expr pos:start="73:49" pos:end="73:51"><name pos:start="73:49" pos:end="73:49">j</name><operator pos:start="73:50" pos:end="73:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:33" pos:end="75:83"><block_content pos:start="75:33" pos:end="75:83">

                                <expr_stmt pos:start="75:33" pos:end="75:83"><expr pos:start="75:33" pos:end="75:82"><call pos:start="75:33" pos:end="75:76"><name pos:start="75:33" pos:end="75:35">BLK</name><argument_list pos:start="75:36" pos:end="75:76">(<argument pos:start="75:37" pos:end="75:44"><expr pos:start="75:37" pos:end="75:44"><name pos:start="75:37" pos:end="75:44"><name pos:start="75:37" pos:end="75:39">ctx</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:44">cur</name></name></expr></argument>, <argument pos:start="75:47" pos:end="75:59"><expr pos:start="75:47" pos:end="75:59"><name pos:start="75:47" pos:end="75:49">l0x</name> <operator pos:start="75:51" pos:end="75:51">+</operator> <operator pos:start="75:53" pos:end="75:53">(</operator><name pos:start="75:54" pos:end="75:54">j</name> <operator pos:start="75:56" pos:end="75:56">&amp;</operator> <literal type="number" pos:start="75:58" pos:end="75:58">3</literal><operator pos:start="75:59" pos:end="75:59">)</operator></expr></argument>, <argument pos:start="75:62" pos:end="75:75"><expr pos:start="75:62" pos:end="75:75"><name pos:start="75:62" pos:end="75:64">l0y</name> <operator pos:start="75:66" pos:end="75:66">+</operator> <operator pos:start="75:68" pos:end="75:68">(</operator><name pos:start="75:69" pos:end="75:69">j</name> <operator pos:start="75:71" pos:end="75:72">&gt;&gt;</operator> <literal type="number" pos:start="75:74" pos:end="75:74">2</literal><operator pos:start="75:75" pos:end="75:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="75:78" pos:end="75:78">=</operator> <name pos:start="75:80" pos:end="75:82">val</name></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></if> <else pos:start="77:27" pos:end="99:25">else <block pos:start="77:32" pos:end="99:25">{<block_content pos:start="79:29" pos:end="97:91">        <comment type="line" pos:start="77:41" pos:end="77:80">// copy block from already decoded place</comment>

                            <if_stmt pos:start="79:29" pos:end="85:29"><if pos:start="79:29" pos:end="85:29">if <condition pos:start="79:32" pos:end="79:47">(<expr pos:start="79:33" pos:end="79:46"><name pos:start="79:33" pos:end="79:35">src</name> <operator pos:start="79:37" pos:end="79:38">&gt;=</operator> <name pos:start="79:40" pos:end="79:46">src_end</name></expr>)</condition> <block pos:start="79:49" pos:end="85:29">{<block_content pos:start="81:33" pos:end="83:59">

                                <expr_stmt pos:start="81:33" pos:end="81:83"><expr pos:start="81:33" pos:end="81:82"><call pos:start="81:33" pos:end="81:82"><name pos:start="81:33" pos:end="81:38">av_log</name><argument_list pos:start="81:39" pos:end="81:82">(<argument pos:start="81:40" pos:end="81:49"><expr pos:start="81:40" pos:end="81:49"><name pos:start="81:40" pos:end="81:49"><name pos:start="81:40" pos:end="81:42">ctx</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:49">avctx</name></name></expr></argument>, <argument pos:start="81:52" pos:end="81:63"><expr pos:start="81:52" pos:end="81:63"><name pos:start="81:52" pos:end="81:63">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:66" pos:end="81:81"><expr pos:start="81:66" pos:end="81:81"><literal type="string" pos:start="81:66" pos:end="81:81">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <return pos:start="83:33" pos:end="83:59">return <expr pos:start="83:40" pos:end="83:58"><name pos:start="83:40" pos:end="83:58">AVERROR_INVALIDDATA</name></expr>;</return>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="87:29" pos:end="87:41"><expr pos:start="87:29" pos:end="87:40"><name pos:start="87:29" pos:end="87:31">val</name> <operator pos:start="87:33" pos:end="87:33">=</operator> <operator pos:start="87:35" pos:end="87:35">*</operator><name pos:start="87:36" pos:end="87:38">src</name><operator pos:start="87:39" pos:end="87:40">++</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="89:29" pos:end="89:43"><expr pos:start="89:29" pos:end="89:42"><name pos:start="89:29" pos:end="89:30">mx</name> <operator pos:start="89:32" pos:end="89:32">=</operator> <name pos:start="89:34" pos:end="89:36">val</name> <operator pos:start="89:38" pos:end="89:38">&amp;</operator> <literal type="number" pos:start="89:40" pos:end="89:42">0xF</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:42"><expr pos:start="91:29" pos:end="91:41"><name pos:start="91:29" pos:end="91:30">my</name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:36">val</name> <operator pos:start="91:38" pos:end="91:39">&gt;&gt;</operator> <literal type="number" pos:start="91:41" pos:end="91:41">4</literal></expr>;</expr_stmt>

                            <for pos:start="93:29" pos:end="97:91">for <control pos:start="93:33" pos:end="93:52">(<init pos:start="93:34" pos:end="93:39"><expr pos:start="93:34" pos:end="93:38"><name pos:start="93:34" pos:end="93:34">j</name> <operator pos:start="93:36" pos:end="93:36">=</operator> <literal type="number" pos:start="93:38" pos:end="93:38">0</literal></expr>;</init> <condition pos:start="93:41" pos:end="93:47"><expr pos:start="93:41" pos:end="93:46"><name pos:start="93:41" pos:end="93:41">j</name> <operator pos:start="93:43" pos:end="93:43">&lt;</operator> <literal type="number" pos:start="93:45" pos:end="93:46">16</literal></expr>;</condition> <incr pos:start="93:49" pos:end="93:51"><expr pos:start="93:49" pos:end="93:51"><name pos:start="93:49" pos:end="93:49">j</name><operator pos:start="93:50" pos:end="93:51">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:33" pos:end="97:91"><block_content pos:start="95:33" pos:end="97:91">

                                <expr_stmt pos:start="95:33" pos:end="97:91"><expr pos:start="95:33" pos:end="97:90"><call pos:start="95:33" pos:end="95:76"><name pos:start="95:33" pos:end="95:35">BLK</name><argument_list pos:start="95:36" pos:end="95:76">(<argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:44"><name pos:start="95:37" pos:end="95:39">ctx</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:44">cur</name></name></expr></argument>, <argument pos:start="95:47" pos:end="95:59"><expr pos:start="95:47" pos:end="95:59"><name pos:start="95:47" pos:end="95:49">l0x</name> <operator pos:start="95:51" pos:end="95:51">+</operator> <operator pos:start="95:53" pos:end="95:53">(</operator><name pos:start="95:54" pos:end="95:54">j</name> <operator pos:start="95:56" pos:end="95:56">&amp;</operator> <literal type="number" pos:start="95:58" pos:end="95:58">3</literal><operator pos:start="95:59" pos:end="95:59">)</operator></expr></argument>, <argument pos:start="95:62" pos:end="95:75"><expr pos:start="95:62" pos:end="95:75"><name pos:start="95:62" pos:end="95:64">l0y</name> <operator pos:start="95:66" pos:end="95:66">+</operator> <operator pos:start="95:68" pos:end="95:68">(</operator><name pos:start="95:69" pos:end="95:69">j</name> <operator pos:start="95:71" pos:end="95:72">&gt;&gt;</operator> <literal type="number" pos:start="95:74" pos:end="95:74">2</literal><operator pos:start="95:75" pos:end="95:75">)</operator></expr></argument>)</argument_list></call> <operator pos:start="95:78" pos:end="95:78">=</operator>

                                    <call pos:start="97:37" pos:end="97:90"><name pos:start="97:37" pos:end="97:39">BLK</name><argument_list pos:start="97:40" pos:end="97:90">(<argument pos:start="97:41" pos:end="97:48"><expr pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:48"><name pos:start="97:41" pos:end="97:43">ctx</name><operator pos:start="97:44" pos:end="97:45">-&gt;</operator><name pos:start="97:46" pos:end="97:48">cur</name></name></expr></argument>, <argument pos:start="97:51" pos:end="97:68"><expr pos:start="97:51" pos:end="97:68"><name pos:start="97:51" pos:end="97:53">l0x</name> <operator pos:start="97:55" pos:end="97:55">+</operator> <operator pos:start="97:57" pos:end="97:57">(</operator><name pos:start="97:58" pos:end="97:58">j</name> <operator pos:start="97:60" pos:end="97:60">&amp;</operator> <literal type="number" pos:start="97:62" pos:end="97:62">3</literal><operator pos:start="97:63" pos:end="97:63">)</operator> <operator pos:start="97:65" pos:end="97:65">-</operator> <name pos:start="97:67" pos:end="97:68">mx</name></expr></argument>, <argument pos:start="97:71" pos:end="97:89"><expr pos:start="97:71" pos:end="97:89"><name pos:start="97:71" pos:end="97:73">l0y</name> <operator pos:start="97:75" pos:end="97:75">+</operator> <operator pos:start="97:77" pos:end="97:77">(</operator><name pos:start="97:78" pos:end="97:78">j</name> <operator pos:start="97:80" pos:end="97:81">&gt;&gt;</operator> <literal type="number" pos:start="97:83" pos:end="97:83">2</literal><operator pos:start="97:84" pos:end="97:84">)</operator> <operator pos:start="97:86" pos:end="97:86">-</operator> <name pos:start="97:88" pos:end="97:89">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="101:23" pos:end="181:21">else <block pos:start="101:28" pos:end="181:21">{<block_content pos:start="103:25" pos:end="179:25">    <comment type="line" pos:start="101:33" pos:end="101:64">// descend to 2x2 sub-sub-blocks</comment>

                        <for pos:start="103:25" pos:end="179:25">for <control pos:start="103:29" pos:end="103:47">(<init pos:start="103:30" pos:end="103:35"><expr pos:start="103:30" pos:end="103:34"><name pos:start="103:30" pos:end="103:30">j</name> <operator pos:start="103:32" pos:end="103:32">=</operator> <literal type="number" pos:start="103:34" pos:end="103:34">0</literal></expr>;</init> <condition pos:start="103:37" pos:end="103:42"><expr pos:start="103:37" pos:end="103:41"><name pos:start="103:37" pos:end="103:37">j</name> <operator pos:start="103:39" pos:end="103:39">&lt;</operator> <literal type="number" pos:start="103:41" pos:end="103:41">4</literal></expr>;</condition> <incr pos:start="103:44" pos:end="103:46"><expr pos:start="103:44" pos:end="103:46"><name pos:start="103:44" pos:end="103:44">j</name><operator pos:start="103:45" pos:end="103:46">++</operator></expr></incr>)</control> <block pos:start="103:49" pos:end="179:25">{<block_content pos:start="105:29" pos:end="177:29">

                            <expr_stmt pos:start="105:29" pos:end="105:52"><expr pos:start="105:29" pos:end="105:51"><name pos:start="105:29" pos:end="105:31">l1x</name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:37">l0x</name> <operator pos:start="105:39" pos:end="105:39">+</operator> <operator pos:start="105:41" pos:end="105:41">(</operator><name pos:start="105:42" pos:end="105:42">j</name> <operator pos:start="105:44" pos:end="105:44">&amp;</operator> <literal type="number" pos:start="105:46" pos:end="105:46">1</literal><operator pos:start="105:47" pos:end="105:47">)</operator> <operator pos:start="105:49" pos:end="105:49">*</operator> <literal type="number" pos:start="105:51" pos:end="105:51">2</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="107:29" pos:end="107:48"><expr pos:start="107:29" pos:end="107:47"><name pos:start="107:29" pos:end="107:31">l1y</name> <operator pos:start="107:33" pos:end="107:33">=</operator> <name pos:start="107:35" pos:end="107:37">l0y</name> <operator pos:start="107:39" pos:end="107:39">+</operator> <operator pos:start="107:41" pos:end="107:41">(</operator><name pos:start="107:42" pos:end="107:42">j</name> <operator pos:start="107:44" pos:end="107:44">&amp;</operator> <literal type="number" pos:start="107:46" pos:end="107:46">2</literal><operator pos:start="107:47" pos:end="107:47">)</operator></expr>;</expr_stmt>

                            <expr_stmt pos:start="109:29" pos:end="109:63"><expr pos:start="109:29" pos:end="109:62"><call pos:start="109:29" pos:end="109:62"><name pos:start="109:29" pos:end="109:39">kmvc_getbit</name><argument_list pos:start="109:40" pos:end="109:62">(<argument pos:start="109:41" pos:end="109:42"><expr pos:start="109:41" pos:end="109:42"><name pos:start="109:41" pos:end="109:42">bb</name></expr></argument>, <argument pos:start="109:45" pos:end="109:47"><expr pos:start="109:45" pos:end="109:47"><name pos:start="109:45" pos:end="109:47">src</name></expr></argument>, <argument pos:start="109:50" pos:end="109:56"><expr pos:start="109:50" pos:end="109:56"><name pos:start="109:50" pos:end="109:56">src_end</name></expr></argument>, <argument pos:start="109:59" pos:end="109:61"><expr pos:start="109:59" pos:end="109:61"><name pos:start="109:59" pos:end="109:61">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="111:29" pos:end="177:29"><if pos:start="111:29" pos:end="167:29">if <condition pos:start="111:32" pos:end="111:37">(<expr pos:start="111:33" pos:end="111:36"><operator pos:start="111:33" pos:end="111:33">!</operator><name pos:start="111:34" pos:end="111:36">res</name></expr>)</condition> <block pos:start="111:39" pos:end="167:29">{<block_content pos:start="113:33" pos:end="165:33">

                                <expr_stmt pos:start="113:33" pos:end="113:67"><expr pos:start="113:33" pos:end="113:66"><call pos:start="113:33" pos:end="113:66"><name pos:start="113:33" pos:end="113:43">kmvc_getbit</name><argument_list pos:start="113:44" pos:end="113:66">(<argument pos:start="113:45" pos:end="113:46"><expr pos:start="113:45" pos:end="113:46"><name pos:start="113:45" pos:end="113:46">bb</name></expr></argument>, <argument pos:start="113:49" pos:end="113:51"><expr pos:start="113:49" pos:end="113:51"><name pos:start="113:49" pos:end="113:51">src</name></expr></argument>, <argument pos:start="113:54" pos:end="113:60"><expr pos:start="113:54" pos:end="113:60"><name pos:start="113:54" pos:end="113:60">src_end</name></expr></argument>, <argument pos:start="113:63" pos:end="113:65"><expr pos:start="113:63" pos:end="113:65"><name pos:start="113:63" pos:end="113:65">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="115:33" pos:end="165:33"><if pos:start="115:33" pos:end="135:33">if <condition pos:start="115:36" pos:end="115:41">(<expr pos:start="115:37" pos:end="115:40"><operator pos:start="115:37" pos:end="115:37">!</operator><name pos:start="115:38" pos:end="115:40">res</name></expr>)</condition> <block pos:start="115:43" pos:end="135:33">{<block_content pos:start="117:37" pos:end="133:74">     <comment type="line" pos:start="115:49" pos:end="115:71">// fill whole 2x2 block</comment>

                                    <if_stmt pos:start="117:37" pos:end="123:37"><if pos:start="117:37" pos:end="123:37">if <condition pos:start="117:40" pos:end="117:55">(<expr pos:start="117:41" pos:end="117:54"><name pos:start="117:41" pos:end="117:43">src</name> <operator pos:start="117:45" pos:end="117:46">&gt;=</operator> <name pos:start="117:48" pos:end="117:54">src_end</name></expr>)</condition> <block pos:start="117:57" pos:end="123:37">{<block_content pos:start="119:41" pos:end="121:67">

                                        <expr_stmt pos:start="119:41" pos:end="119:91"><expr pos:start="119:41" pos:end="119:90"><call pos:start="119:41" pos:end="119:90"><name pos:start="119:41" pos:end="119:46">av_log</name><argument_list pos:start="119:47" pos:end="119:90">(<argument pos:start="119:48" pos:end="119:57"><expr pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:57"><name pos:start="119:48" pos:end="119:50">ctx</name><operator pos:start="119:51" pos:end="119:52">-&gt;</operator><name pos:start="119:53" pos:end="119:57">avctx</name></name></expr></argument>, <argument pos:start="119:60" pos:end="119:71"><expr pos:start="119:60" pos:end="119:71"><name pos:start="119:60" pos:end="119:71">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:74" pos:end="119:89"><expr pos:start="119:74" pos:end="119:89"><literal type="string" pos:start="119:74" pos:end="119:89">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                        <return pos:start="121:41" pos:end="121:67">return <expr pos:start="121:48" pos:end="121:66"><name pos:start="121:48" pos:end="121:66">AVERROR_INVALIDDATA</name></expr>;</return>

                                    </block_content>}</block></if></if_stmt>

                                    <expr_stmt pos:start="125:37" pos:end="125:49"><expr pos:start="125:37" pos:end="125:48"><name pos:start="125:37" pos:end="125:39">val</name> <operator pos:start="125:41" pos:end="125:41">=</operator> <operator pos:start="125:43" pos:end="125:43">*</operator><name pos:start="125:44" pos:end="125:46">src</name><operator pos:start="125:47" pos:end="125:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="127:37" pos:end="127:66"><expr pos:start="127:37" pos:end="127:65"><call pos:start="127:37" pos:end="127:59"><name pos:start="127:37" pos:end="127:39">BLK</name><argument_list pos:start="127:40" pos:end="127:59">(<argument pos:start="127:41" pos:end="127:48"><expr pos:start="127:41" pos:end="127:48"><name pos:start="127:41" pos:end="127:48"><name pos:start="127:41" pos:end="127:43">ctx</name><operator pos:start="127:44" pos:end="127:45">-&gt;</operator><name pos:start="127:46" pos:end="127:48">cur</name></name></expr></argument>, <argument pos:start="127:51" pos:end="127:53"><expr pos:start="127:51" pos:end="127:53"><name pos:start="127:51" pos:end="127:53">l1x</name></expr></argument>, <argument pos:start="127:56" pos:end="127:58"><expr pos:start="127:56" pos:end="127:58"><name pos:start="127:56" pos:end="127:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="127:61" pos:end="127:61">=</operator> <name pos:start="127:63" pos:end="127:65">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="129:37" pos:end="129:70"><expr pos:start="129:37" pos:end="129:69"><call pos:start="129:37" pos:end="129:63"><name pos:start="129:37" pos:end="129:39">BLK</name><argument_list pos:start="129:40" pos:end="129:63">(<argument pos:start="129:41" pos:end="129:48"><expr pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:43">ctx</name><operator pos:start="129:44" pos:end="129:45">-&gt;</operator><name pos:start="129:46" pos:end="129:48">cur</name></name></expr></argument>, <argument pos:start="129:51" pos:end="129:57"><expr pos:start="129:51" pos:end="129:57"><name pos:start="129:51" pos:end="129:53">l1x</name> <operator pos:start="129:55" pos:end="129:55">+</operator> <literal type="number" pos:start="129:57" pos:end="129:57">1</literal></expr></argument>, <argument pos:start="129:60" pos:end="129:62"><expr pos:start="129:60" pos:end="129:62"><name pos:start="129:60" pos:end="129:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="129:65" pos:end="129:65">=</operator> <name pos:start="129:67" pos:end="129:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="131:37" pos:end="131:70"><expr pos:start="131:37" pos:end="131:69"><call pos:start="131:37" pos:end="131:63"><name pos:start="131:37" pos:end="131:39">BLK</name><argument_list pos:start="131:40" pos:end="131:63">(<argument pos:start="131:41" pos:end="131:48"><expr pos:start="131:41" pos:end="131:48"><name pos:start="131:41" pos:end="131:48"><name pos:start="131:41" pos:end="131:43">ctx</name><operator pos:start="131:44" pos:end="131:45">-&gt;</operator><name pos:start="131:46" pos:end="131:48">cur</name></name></expr></argument>, <argument pos:start="131:51" pos:end="131:53"><expr pos:start="131:51" pos:end="131:53"><name pos:start="131:51" pos:end="131:53">l1x</name></expr></argument>, <argument pos:start="131:56" pos:end="131:62"><expr pos:start="131:56" pos:end="131:62"><name pos:start="131:56" pos:end="131:58">l1y</name> <operator pos:start="131:60" pos:end="131:60">+</operator> <literal type="number" pos:start="131:62" pos:end="131:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="131:65" pos:end="131:65">=</operator> <name pos:start="131:67" pos:end="131:69">val</name></expr>;</expr_stmt>

                                    <expr_stmt pos:start="133:37" pos:end="133:74"><expr pos:start="133:37" pos:end="133:73"><call pos:start="133:37" pos:end="133:67"><name pos:start="133:37" pos:end="133:39">BLK</name><argument_list pos:start="133:40" pos:end="133:67">(<argument pos:start="133:41" pos:end="133:48"><expr pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:48"><name pos:start="133:41" pos:end="133:43">ctx</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:48">cur</name></name></expr></argument>, <argument pos:start="133:51" pos:end="133:57"><expr pos:start="133:51" pos:end="133:57"><name pos:start="133:51" pos:end="133:53">l1x</name> <operator pos:start="133:55" pos:end="133:55">+</operator> <literal type="number" pos:start="133:57" pos:end="133:57">1</literal></expr></argument>, <argument pos:start="133:60" pos:end="133:66"><expr pos:start="133:60" pos:end="133:66"><name pos:start="133:60" pos:end="133:62">l1y</name> <operator pos:start="133:64" pos:end="133:64">+</operator> <literal type="number" pos:start="133:66" pos:end="133:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="133:69" pos:end="133:69">=</operator> <name pos:start="133:71" pos:end="133:73">val</name></expr>;</expr_stmt>

                                </block_content>}</block></if> <else pos:start="135:35" pos:end="165:33">else <block pos:start="135:40" pos:end="165:33">{<block_content pos:start="137:37" pos:end="163:82">        <comment type="line" pos:start="135:49" pos:end="135:88">// copy block from already decoded place</comment>

                                    <if_stmt pos:start="137:37" pos:end="143:37"><if pos:start="137:37" pos:end="143:37">if <condition pos:start="137:40" pos:end="137:55">(<expr pos:start="137:41" pos:end="137:54"><name pos:start="137:41" pos:end="137:43">src</name> <operator pos:start="137:45" pos:end="137:46">&gt;=</operator> <name pos:start="137:48" pos:end="137:54">src_end</name></expr>)</condition> <block pos:start="137:57" pos:end="143:37">{<block_content pos:start="139:41" pos:end="141:67">

                                        <expr_stmt pos:start="139:41" pos:end="139:91"><expr pos:start="139:41" pos:end="139:90"><call pos:start="139:41" pos:end="139:90"><name pos:start="139:41" pos:end="139:46">av_log</name><argument_list pos:start="139:47" pos:end="139:90">(<argument pos:start="139:48" pos:end="139:57"><expr pos:start="139:48" pos:end="139:57"><name pos:start="139:48" pos:end="139:57"><name pos:start="139:48" pos:end="139:50">ctx</name><operator pos:start="139:51" pos:end="139:52">-&gt;</operator><name pos:start="139:53" pos:end="139:57">avctx</name></name></expr></argument>, <argument pos:start="139:60" pos:end="139:71"><expr pos:start="139:60" pos:end="139:71"><name pos:start="139:60" pos:end="139:71">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="139:74" pos:end="139:89"><expr pos:start="139:74" pos:end="139:89"><literal type="string" pos:start="139:74" pos:end="139:89">"Data overrun\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                        <return pos:start="141:41" pos:end="141:67">return <expr pos:start="141:48" pos:end="141:66"><name pos:start="141:48" pos:end="141:66">AVERROR_INVALIDDATA</name></expr>;</return>

                                    </block_content>}</block></if></if_stmt>

                                    <expr_stmt pos:start="145:37" pos:end="145:49"><expr pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:39">val</name> <operator pos:start="145:41" pos:end="145:41">=</operator> <operator pos:start="145:43" pos:end="145:43">*</operator><name pos:start="145:44" pos:end="145:46">src</name><operator pos:start="145:47" pos:end="145:48">++</operator></expr>;</expr_stmt>

                                    <expr_stmt pos:start="147:37" pos:end="147:51"><expr pos:start="147:37" pos:end="147:50"><name pos:start="147:37" pos:end="147:38">mx</name> <operator pos:start="147:40" pos:end="147:40">=</operator> <name pos:start="147:42" pos:end="147:44">val</name> <operator pos:start="147:46" pos:end="147:46">&amp;</operator> <literal type="number" pos:start="147:48" pos:end="147:50">0xF</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="149:37" pos:end="149:50"><expr pos:start="149:37" pos:end="149:49"><name pos:start="149:37" pos:end="149:38">my</name> <operator pos:start="149:40" pos:end="149:40">=</operator> <name pos:start="149:42" pos:end="149:44">val</name> <operator pos:start="149:46" pos:end="149:47">&gt;&gt;</operator> <literal type="number" pos:start="149:49" pos:end="149:49">4</literal></expr>;</expr_stmt>

                                    <expr_stmt pos:start="151:37" pos:end="151:96"><expr pos:start="151:37" pos:end="151:95"><call pos:start="151:37" pos:end="151:59"><name pos:start="151:37" pos:end="151:39">BLK</name><argument_list pos:start="151:40" pos:end="151:59">(<argument pos:start="151:41" pos:end="151:48"><expr pos:start="151:41" pos:end="151:48"><name pos:start="151:41" pos:end="151:48"><name pos:start="151:41" pos:end="151:43">ctx</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:48">cur</name></name></expr></argument>, <argument pos:start="151:51" pos:end="151:53"><expr pos:start="151:51" pos:end="151:53"><name pos:start="151:51" pos:end="151:53">l1x</name></expr></argument>, <argument pos:start="151:56" pos:end="151:58"><expr pos:start="151:56" pos:end="151:58"><name pos:start="151:56" pos:end="151:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="151:61" pos:end="151:61">=</operator> <call pos:start="151:63" pos:end="151:95"><name pos:start="151:63" pos:end="151:65">BLK</name><argument_list pos:start="151:66" pos:end="151:95">(<argument pos:start="151:67" pos:end="151:74"><expr pos:start="151:67" pos:end="151:74"><name pos:start="151:67" pos:end="151:74"><name pos:start="151:67" pos:end="151:69">ctx</name><operator pos:start="151:70" pos:end="151:71">-&gt;</operator><name pos:start="151:72" pos:end="151:74">cur</name></name></expr></argument>, <argument pos:start="151:77" pos:end="151:84"><expr pos:start="151:77" pos:end="151:84"><name pos:start="151:77" pos:end="151:79">l1x</name> <operator pos:start="151:81" pos:end="151:81">-</operator> <name pos:start="151:83" pos:end="151:84">mx</name></expr></argument>, <argument pos:start="151:87" pos:end="151:94"><expr pos:start="151:87" pos:end="151:94"><name pos:start="151:87" pos:end="151:89">l1y</name> <operator pos:start="151:91" pos:end="151:91">-</operator> <name pos:start="151:93" pos:end="151:94">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="153:37" pos:end="155:78"><expr pos:start="153:37" pos:end="155:77"><call pos:start="153:37" pos:end="153:63"><name pos:start="153:37" pos:end="153:39">BLK</name><argument_list pos:start="153:40" pos:end="153:63">(<argument pos:start="153:41" pos:end="153:48"><expr pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:48"><name pos:start="153:41" pos:end="153:43">ctx</name><operator pos:start="153:44" pos:end="153:45">-&gt;</operator><name pos:start="153:46" pos:end="153:48">cur</name></name></expr></argument>, <argument pos:start="153:51" pos:end="153:57"><expr pos:start="153:51" pos:end="153:57"><name pos:start="153:51" pos:end="153:53">l1x</name> <operator pos:start="153:55" pos:end="153:55">+</operator> <literal type="number" pos:start="153:57" pos:end="153:57">1</literal></expr></argument>, <argument pos:start="153:60" pos:end="153:62"><expr pos:start="153:60" pos:end="153:62"><name pos:start="153:60" pos:end="153:62">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="153:65" pos:end="153:65">=</operator>

                                        <call pos:start="155:41" pos:end="155:77"><name pos:start="155:41" pos:end="155:43">BLK</name><argument_list pos:start="155:44" pos:end="155:77">(<argument pos:start="155:45" pos:end="155:52"><expr pos:start="155:45" pos:end="155:52"><name pos:start="155:45" pos:end="155:52"><name pos:start="155:45" pos:end="155:47">ctx</name><operator pos:start="155:48" pos:end="155:49">-&gt;</operator><name pos:start="155:50" pos:end="155:52">cur</name></name></expr></argument>, <argument pos:start="155:55" pos:end="155:66"><expr pos:start="155:55" pos:end="155:66"><name pos:start="155:55" pos:end="155:57">l1x</name> <operator pos:start="155:59" pos:end="155:59">+</operator> <literal type="number" pos:start="155:61" pos:end="155:63">1</literal> <operator pos:start="155:63" pos:end="155:63">-</operator> <name pos:start="155:65" pos:end="155:66">mx</name></expr></argument>, <argument pos:start="155:69" pos:end="155:76"><expr pos:start="155:69" pos:end="155:76"><name pos:start="155:69" pos:end="155:71">l1y</name> <operator pos:start="155:73" pos:end="155:73">-</operator> <name pos:start="155:75" pos:end="155:76">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="157:37" pos:end="159:78"><expr pos:start="157:37" pos:end="159:77"><call pos:start="157:37" pos:end="157:63"><name pos:start="157:37" pos:end="157:39">BLK</name><argument_list pos:start="157:40" pos:end="157:63">(<argument pos:start="157:41" pos:end="157:48"><expr pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:48"><name pos:start="157:41" pos:end="157:43">ctx</name><operator pos:start="157:44" pos:end="157:45">-&gt;</operator><name pos:start="157:46" pos:end="157:48">cur</name></name></expr></argument>, <argument pos:start="157:51" pos:end="157:53"><expr pos:start="157:51" pos:end="157:53"><name pos:start="157:51" pos:end="157:53">l1x</name></expr></argument>, <argument pos:start="157:56" pos:end="157:62"><expr pos:start="157:56" pos:end="157:62"><name pos:start="157:56" pos:end="157:58">l1y</name> <operator pos:start="157:60" pos:end="157:60">+</operator> <literal type="number" pos:start="157:62" pos:end="157:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="157:65" pos:end="157:65">=</operator>

                                        <call pos:start="159:41" pos:end="159:77"><name pos:start="159:41" pos:end="159:43">BLK</name><argument_list pos:start="159:44" pos:end="159:77">(<argument pos:start="159:45" pos:end="159:52"><expr pos:start="159:45" pos:end="159:52"><name pos:start="159:45" pos:end="159:52"><name pos:start="159:45" pos:end="159:47">ctx</name><operator pos:start="159:48" pos:end="159:49">-&gt;</operator><name pos:start="159:50" pos:end="159:52">cur</name></name></expr></argument>, <argument pos:start="159:55" pos:end="159:62"><expr pos:start="159:55" pos:end="159:62"><name pos:start="159:55" pos:end="159:57">l1x</name> <operator pos:start="159:59" pos:end="159:59">-</operator> <name pos:start="159:61" pos:end="159:62">mx</name></expr></argument>, <argument pos:start="159:65" pos:end="159:76"><expr pos:start="159:65" pos:end="159:76"><name pos:start="159:65" pos:end="159:67">l1y</name> <operator pos:start="159:69" pos:end="159:69">+</operator> <literal type="number" pos:start="159:71" pos:end="159:73">1</literal> <operator pos:start="159:73" pos:end="159:73">-</operator> <name pos:start="159:75" pos:end="159:76">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <expr_stmt pos:start="161:37" pos:end="163:82"><expr pos:start="161:37" pos:end="163:81"><call pos:start="161:37" pos:end="161:67"><name pos:start="161:37" pos:end="161:39">BLK</name><argument_list pos:start="161:40" pos:end="161:67">(<argument pos:start="161:41" pos:end="161:48"><expr pos:start="161:41" pos:end="161:48"><name pos:start="161:41" pos:end="161:48"><name pos:start="161:41" pos:end="161:43">ctx</name><operator pos:start="161:44" pos:end="161:45">-&gt;</operator><name pos:start="161:46" pos:end="161:48">cur</name></name></expr></argument>, <argument pos:start="161:51" pos:end="161:57"><expr pos:start="161:51" pos:end="161:57"><name pos:start="161:51" pos:end="161:53">l1x</name> <operator pos:start="161:55" pos:end="161:55">+</operator> <literal type="number" pos:start="161:57" pos:end="161:57">1</literal></expr></argument>, <argument pos:start="161:60" pos:end="161:66"><expr pos:start="161:60" pos:end="161:66"><name pos:start="161:60" pos:end="161:62">l1y</name> <operator pos:start="161:64" pos:end="161:64">+</operator> <literal type="number" pos:start="161:66" pos:end="161:66">1</literal></expr></argument>)</argument_list></call> <operator pos:start="161:69" pos:end="161:69">=</operator>

                                        <call pos:start="163:41" pos:end="163:81"><name pos:start="163:41" pos:end="163:43">BLK</name><argument_list pos:start="163:44" pos:end="163:81">(<argument pos:start="163:45" pos:end="163:52"><expr pos:start="163:45" pos:end="163:52"><name pos:start="163:45" pos:end="163:52"><name pos:start="163:45" pos:end="163:47">ctx</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:52">cur</name></name></expr></argument>, <argument pos:start="163:55" pos:end="163:66"><expr pos:start="163:55" pos:end="163:66"><name pos:start="163:55" pos:end="163:57">l1x</name> <operator pos:start="163:59" pos:end="163:59">+</operator> <literal type="number" pos:start="163:61" pos:end="163:63">1</literal> <operator pos:start="163:63" pos:end="163:63">-</operator> <name pos:start="163:65" pos:end="163:66">mx</name></expr></argument>, <argument pos:start="163:69" pos:end="163:80"><expr pos:start="163:69" pos:end="163:80"><name pos:start="163:69" pos:end="163:71">l1y</name> <operator pos:start="163:73" pos:end="163:73">+</operator> <literal type="number" pos:start="163:75" pos:end="163:77">1</literal> <operator pos:start="163:77" pos:end="163:77">-</operator> <name pos:start="163:79" pos:end="163:80">my</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></else></if_stmt>

                            </block_content>}</block></if> <else pos:start="167:31" pos:end="177:29">else <block pos:start="167:36" pos:end="177:29">{<block_content pos:start="169:33" pos:end="175:73">    <comment type="line" pos:start="167:41" pos:end="167:64">// read values for block</comment>

                                <expr_stmt pos:start="169:33" pos:end="169:65"><expr pos:start="169:33" pos:end="169:64"><call pos:start="169:33" pos:end="169:55"><name pos:start="169:33" pos:end="169:35">BLK</name><argument_list pos:start="169:36" pos:end="169:55">(<argument pos:start="169:37" pos:end="169:44"><expr pos:start="169:37" pos:end="169:44"><name pos:start="169:37" pos:end="169:44"><name pos:start="169:37" pos:end="169:39">ctx</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:44">cur</name></name></expr></argument>, <argument pos:start="169:47" pos:end="169:49"><expr pos:start="169:47" pos:end="169:49"><name pos:start="169:47" pos:end="169:49">l1x</name></expr></argument>, <argument pos:start="169:52" pos:end="169:54"><expr pos:start="169:52" pos:end="169:54"><name pos:start="169:52" pos:end="169:54">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="169:57" pos:end="169:57">=</operator> <operator pos:start="169:59" pos:end="169:59">*</operator><name pos:start="169:60" pos:end="169:62">src</name><operator pos:start="169:63" pos:end="169:64">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="171:33" pos:end="171:69"><expr pos:start="171:33" pos:end="171:68"><call pos:start="171:33" pos:end="171:59"><name pos:start="171:33" pos:end="171:35">BLK</name><argument_list pos:start="171:36" pos:end="171:59">(<argument pos:start="171:37" pos:end="171:44"><expr pos:start="171:37" pos:end="171:44"><name pos:start="171:37" pos:end="171:44"><name pos:start="171:37" pos:end="171:39">ctx</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:44">cur</name></name></expr></argument>, <argument pos:start="171:47" pos:end="171:53"><expr pos:start="171:47" pos:end="171:53"><name pos:start="171:47" pos:end="171:49">l1x</name> <operator pos:start="171:51" pos:end="171:51">+</operator> <literal type="number" pos:start="171:53" pos:end="171:53">1</literal></expr></argument>, <argument pos:start="171:56" pos:end="171:58"><expr pos:start="171:56" pos:end="171:58"><name pos:start="171:56" pos:end="171:58">l1y</name></expr></argument>)</argument_list></call> <operator pos:start="171:61" pos:end="171:61">=</operator> <operator pos:start="171:63" pos:end="171:63">*</operator><name pos:start="171:64" pos:end="171:66">src</name><operator pos:start="171:67" pos:end="171:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="173:33" pos:end="173:69"><expr pos:start="173:33" pos:end="173:68"><call pos:start="173:33" pos:end="173:59"><name pos:start="173:33" pos:end="173:35">BLK</name><argument_list pos:start="173:36" pos:end="173:59">(<argument pos:start="173:37" pos:end="173:44"><expr pos:start="173:37" pos:end="173:44"><name pos:start="173:37" pos:end="173:44"><name pos:start="173:37" pos:end="173:39">ctx</name><operator pos:start="173:40" pos:end="173:41">-&gt;</operator><name pos:start="173:42" pos:end="173:44">cur</name></name></expr></argument>, <argument pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><name pos:start="173:47" pos:end="173:49">l1x</name></expr></argument>, <argument pos:start="173:52" pos:end="173:58"><expr pos:start="173:52" pos:end="173:58"><name pos:start="173:52" pos:end="173:54">l1y</name> <operator pos:start="173:56" pos:end="173:56">+</operator> <literal type="number" pos:start="173:58" pos:end="173:58">1</literal></expr></argument>)</argument_list></call> <operator pos:start="173:61" pos:end="173:61">=</operator> <operator pos:start="173:63" pos:end="173:63">*</operator><name pos:start="173:64" pos:end="173:66">src</name><operator pos:start="173:67" pos:end="173:68">++</operator></expr>;</expr_stmt>

                                <expr_stmt pos:start="175:33" pos:end="175:73"><expr pos:start="175:33" pos:end="175:72"><call pos:start="175:33" pos:end="175:63"><name pos:start="175:33" pos:end="175:35">BLK</name><argument_list pos:start="175:36" pos:end="175:63">(<argument pos:start="175:37" pos:end="175:44"><expr pos:start="175:37" pos:end="175:44"><name pos:start="175:37" pos:end="175:44"><name pos:start="175:37" pos:end="175:39">ctx</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:44">cur</name></name></expr></argument>, <argument pos:start="175:47" pos:end="175:53"><expr pos:start="175:47" pos:end="175:53"><name pos:start="175:47" pos:end="175:49">l1x</name> <operator pos:start="175:51" pos:end="175:51">+</operator> <literal type="number" pos:start="175:53" pos:end="175:53">1</literal></expr></argument>, <argument pos:start="175:56" pos:end="175:62"><expr pos:start="175:56" pos:end="175:62"><name pos:start="175:56" pos:end="175:58">l1y</name> <operator pos:start="175:60" pos:end="175:60">+</operator> <literal type="number" pos:start="175:62" pos:end="175:62">1</literal></expr></argument>)</argument_list></call> <operator pos:start="175:65" pos:end="175:65">=</operator> <operator pos:start="175:67" pos:end="175:67">*</operator><name pos:start="175:68" pos:end="175:70">src</name><operator pos:start="175:71" pos:end="175:72">++</operator></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for></block_content></block></for>



    <return pos:start="191:5" pos:end="191:13">return <expr pos:start="191:12" pos:end="191:12"><literal type="number" pos:start="191:12" pos:end="191:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
