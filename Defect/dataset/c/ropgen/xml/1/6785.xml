<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6785.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">receive_from_chr_layer</name><parameter_list pos:start="1:35" pos:end="3:44">(<parameter pos:start="1:36" pos:end="1:54"><decl pos:start="1:36" pos:end="1:54"><type pos:start="1:36" pos:end="1:54"><name pos:start="1:36" pos:end="1:48">SCLPConsoleLM</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">scon</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:74"><decl pos:start="1:57" pos:end="1:74"><type pos:start="1:57" pos:end="1:74"><specifier pos:start="1:57" pos:end="1:61">const</specifier> <name pos:start="1:63" pos:end="1:69">uint8_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:74">buf</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:43"><decl pos:start="3:36" pos:end="3:43"><type pos:start="3:36" pos:end="3:43"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:43">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <expr_stmt pos:start="7:5" pos:end="7:22"><expr pos:start="7:5" pos:end="7:21"><call pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">assert</name><argument_list pos:start="7:11" pos:end="7:21">(<argument pos:start="7:12" pos:end="7:20"><expr pos:start="7:12" pos:end="7:20"><name pos:start="7:12" pos:end="7:15">size</name> <operator pos:start="7:17" pos:end="7:18">==</operator> <literal type="number" pos:start="7:20" pos:end="7:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><operator pos:start="11:9" pos:end="11:9">*</operator><name pos:start="11:10" pos:end="11:12">buf</name> <operator pos:start="11:14" pos:end="11:15">==</operator> <literal type="char" pos:start="11:17" pos:end="11:20">'\r'</literal> <operator pos:start="11:22" pos:end="11:23">||</operator> <operator pos:start="11:25" pos:end="11:25">*</operator><name pos:start="11:26" pos:end="11:28">buf</name> <operator pos:start="11:30" pos:end="11:31">==</operator> <literal type="char" pos:start="11:33" pos:end="11:36">'\n'</literal></expr>)</condition> <block pos:start="11:39" pos:end="17:5">{<block_content pos:start="13:9" pos:end="15:15">

        <expr_stmt pos:start="13:9" pos:end="13:41"><expr pos:start="13:9" pos:end="13:40"><name pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:12">scon</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:19">event</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:33">event_pending</name></name> <operator pos:start="13:35" pos:end="13:35">=</operator> <name pos:start="13:37" pos:end="13:40">true</name></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:8">scon</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:13">buf</name><index pos:start="19:14" pos:end="19:27">[<expr pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:18">scon</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:26">length</name></name></expr>]</index></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <operator pos:start="19:31" pos:end="19:31">*</operator><name pos:start="19:32" pos:end="19:34">buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:8">scon</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:16">length</name></name> <operator pos:start="21:18" pos:end="21:19">+=</operator> <literal type="number" pos:start="21:21" pos:end="21:21">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:19">(<expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:12">scon</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:18">echo</name></name></expr>)</condition> <block pos:start="23:21" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:48">

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:25">qemu_chr_fe_write</name><argument_list pos:start="25:26" pos:end="25:47">(<argument pos:start="25:27" pos:end="25:35"><expr pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:35"><name pos:start="25:27" pos:end="25:30">scon</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:35">chr</name></name></expr></argument>, <argument pos:start="25:38" pos:end="25:40"><expr pos:start="25:38" pos:end="25:40"><name pos:start="25:38" pos:end="25:40">buf</name></expr></argument>, <argument pos:start="25:43" pos:end="25:46"><expr pos:start="25:43" pos:end="25:46"><name pos:start="25:43" pos:end="25:46">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
