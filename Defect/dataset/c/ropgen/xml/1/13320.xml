<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13320.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">vp8_alloc_frame</name><parameter_list pos:start="1:27" pos:end="1:53">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">VP8Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:49">AVFrame</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="9:19"><if pos:start="7:5" pos:end="9:19">if <condition pos:start="7:8" pos:end="7:54">(<expr pos:start="7:9" pos:end="7:53"><operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:12">ret</name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:48"><name pos:start="7:16" pos:end="7:35">ff_thread_get_buffer</name><argument_list pos:start="7:36" pos:end="7:48">(<argument pos:start="7:37" pos:end="7:44"><expr pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:44"><name pos:start="7:37" pos:end="7:37">s</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:44">avctx</name></name></expr></argument>, <argument pos:start="7:47" pos:end="7:47"><expr pos:start="7:47" pos:end="7:47"><name pos:start="7:47" pos:end="7:47">f</name></expr></argument>)</argument_list></call><operator pos:start="7:49" pos:end="7:49">)</operator> <operator pos:start="7:51" pos:end="7:51">&lt;</operator> <literal type="number" pos:start="7:53" pos:end="7:53">0</literal></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="9:19"><block_content pos:start="9:9" pos:end="9:19">

        <return pos:start="9:9" pos:end="9:19">return <expr pos:start="9:16" pos:end="9:18"><name pos:start="9:16" pos:end="9:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:56">(<expr pos:start="11:9" pos:end="11:55"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:28"><name pos:start="11:10" pos:end="11:10">s</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:28">maps_are_invalid</name></name> <operator pos:start="11:30" pos:end="11:31">&amp;&amp;</operator> <name pos:start="11:33" pos:end="11:55"><name pos:start="11:33" pos:end="11:33">s</name><operator pos:start="11:34" pos:end="11:35">-&gt;</operator><name pos:start="11:36" pos:end="11:55">num_maps_to_be_freed</name></name></expr>)</condition> <block pos:start="11:58" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:74">

        <expr_stmt pos:start="13:9" pos:end="13:74"><expr pos:start="13:9" pos:end="13:73"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:9">f</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:20">ref_index</name><index pos:start="13:21" pos:end="13:23">[<expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr>]</index></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <name pos:start="13:27" pos:end="13:73"><name pos:start="13:27" pos:end="13:27">s</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:46">segmentation_maps</name><index pos:start="13:47" pos:end="13:73">[<expr pos:start="13:48" pos:end="13:72"><operator pos:start="13:48" pos:end="13:49">--</operator><name pos:start="13:50" pos:end="13:72"><name pos:start="13:50" pos:end="13:50">s</name><operator pos:start="13:51" pos:end="13:52">-&gt;</operator><name pos:start="13:53" pos:end="13:72">num_maps_to_be_freed</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="15:7" pos:end="21:5">else if <condition pos:start="15:15" pos:end="15:75">(<expr pos:start="15:16" pos:end="15:74"><operator pos:start="15:16" pos:end="15:16">!</operator><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:18">f</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:29">ref_index</name><index pos:start="15:30" pos:end="15:32">[<expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">0</literal></expr>]</index></name> <operator pos:start="15:34" pos:end="15:34">=</operator> <call pos:start="15:36" pos:end="15:73"><name pos:start="15:36" pos:end="15:45">av_mallocz</name><argument_list pos:start="15:46" pos:end="15:73">(<argument pos:start="15:47" pos:end="15:72"><expr pos:start="15:47" pos:end="15:72"><name pos:start="15:47" pos:end="15:57"><name pos:start="15:47" pos:end="15:47">s</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:57">mb_width</name></name> <operator pos:start="15:59" pos:end="15:59">*</operator> <name pos:start="15:61" pos:end="15:72"><name pos:start="15:61" pos:end="15:61">s</name><operator pos:start="15:62" pos:end="15:63">-&gt;</operator><name pos:start="15:64" pos:end="15:72">mb_height</name></name></expr></argument>)</argument_list></call><operator pos:start="15:74" pos:end="15:74">)</operator></expr>)</condition> <block pos:start="15:77" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:31">

        <expr_stmt pos:start="17:9" pos:end="17:46"><expr pos:start="17:9" pos:end="17:45"><call pos:start="17:9" pos:end="17:45"><name pos:start="17:9" pos:end="17:32">ff_thread_release_buffer</name><argument_list pos:start="17:33" pos:end="17:45">(<argument pos:start="17:34" pos:end="17:41"><expr pos:start="17:34" pos:end="17:41"><name pos:start="17:34" pos:end="17:41"><name pos:start="17:34" pos:end="17:34">s</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:41">avctx</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:44"><expr pos:start="17:44" pos:end="17:44"><name pos:start="17:44" pos:end="17:44">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="23:5" pos:end="23:13">return <expr pos:start="23:12" pos:end="23:12"><literal type="number" pos:start="23:12" pos:end="23:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
