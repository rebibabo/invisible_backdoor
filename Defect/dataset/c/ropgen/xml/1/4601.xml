<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4601.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">apng_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="207:1">{<block_content pos:start="5:5" pos:end="205:15">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">APNGDemuxContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:40">= <expr pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:40"><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">len</name></decl>, <decl pos:start="9:19" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:21">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:18">acTL_found</name> <init pos:start="13:20" pos:end="13:22">= <expr pos:start="13:22" pos:end="13:22"><literal type="number" pos:start="13:22" pos:end="13:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:15">ret</name> <init pos:start="15:17" pos:end="15:37">= <expr pos:start="15:19" pos:end="15:37"><name pos:start="15:19" pos:end="15:37">AVERROR_INVALIDDATA</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:23">/* verify PNGSIG */</comment>

    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><call pos:start="21:9" pos:end="21:21"><name pos:start="21:9" pos:end="21:17">avio_rb64</name><argument_list pos:start="21:18" pos:end="21:21">(<argument pos:start="21:19" pos:end="21:20"><expr pos:start="21:19" pos:end="21:20"><name pos:start="21:19" pos:end="21:20">pb</name></expr></argument>)</argument_list></call> <operator pos:start="21:23" pos:end="21:24">!=</operator> <name pos:start="21:26" pos:end="21:31">PNGSIG</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:42">/* parse IHDR (must be first chunk) */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:7">len</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:23"><name pos:start="29:11" pos:end="29:19">avio_rb32</name><argument_list pos:start="29:20" pos:end="29:23">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:7">tag</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:23"><name pos:start="31:11" pos:end="31:19">avio_rl32</name><argument_list pos:start="31:20" pos:end="31:23">(<argument pos:start="31:21" pos:end="31:22"><expr pos:start="31:21" pos:end="31:22"><name pos:start="31:21" pos:end="31:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:19"><if pos:start="33:5" pos:end="35:19">if <condition pos:start="33:8" pos:end="33:54">(<expr pos:start="33:9" pos:end="33:53"><name pos:start="33:9" pos:end="33:11">len</name> <operator pos:start="33:13" pos:end="33:14">!=</operator> <literal type="number" pos:start="33:16" pos:end="33:17">13</literal> <operator pos:start="33:19" pos:end="33:20">||</operator> <name pos:start="33:22" pos:end="33:24">tag</name> <operator pos:start="33:26" pos:end="33:27">!=</operator> <call pos:start="33:29" pos:end="33:53"><name pos:start="33:29" pos:end="33:33">MKTAG</name><argument_list pos:start="33:34" pos:end="33:53">(<argument pos:start="33:35" pos:end="33:37"><expr pos:start="33:35" pos:end="33:37"><literal type="char" pos:start="33:35" pos:end="33:37">'I'</literal></expr></argument>, <argument pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><literal type="char" pos:start="33:40" pos:end="33:42">'H'</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><literal type="char" pos:start="33:45" pos:end="33:47">'D'</literal></expr></argument>, <argument pos:start="33:50" pos:end="33:52"><expr pos:start="33:50" pos:end="33:52"><literal type="char" pos:start="33:50" pos:end="33:52">'R'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:6">st</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <call pos:start="39:10" pos:end="39:37"><name pos:start="39:10" pos:end="39:28">avformat_new_stream</name><argument_list pos:start="39:29" pos:end="39:37">(<argument pos:start="39:30" pos:end="39:30"><expr pos:start="39:30" pos:end="39:30"><name pos:start="39:30" pos:end="39:30">s</name></expr></argument>, <argument pos:start="39:33" pos:end="39:36"><expr pos:start="39:33" pos:end="39:36"><name pos:start="39:33" pos:end="39:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:31"><if pos:start="41:5" pos:end="43:31">if <condition pos:start="41:8" pos:end="41:12">(<expr pos:start="41:9" pos:end="41:11"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:11">st</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:31"><block_content pos:start="43:9" pos:end="43:31">

        <return pos:start="43:9" pos:end="43:31">return <expr pos:start="43:16" pos:end="43:30"><call pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:22">AVERROR</name><argument_list pos:start="43:23" pos:end="43:30">(<argument pos:start="43:24" pos:end="43:29"><expr pos:start="43:24" pos:end="43:29"><name pos:start="43:24" pos:end="43:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="49:57">/* set the timebase to something large enough (1/100,000 of second)

     * to hopefully cope with all sane frame durations */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:43"><expr pos:start="51:5" pos:end="51:42"><call pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:23">avpriv_set_pts_info</name><argument_list pos:start="51:24" pos:end="51:42">(<argument pos:start="51:25" pos:end="51:26"><expr pos:start="51:25" pos:end="51:26"><name pos:start="51:25" pos:end="51:26">st</name></expr></argument>, <argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><literal type="number" pos:start="51:29" pos:end="51:30">64</literal></expr></argument>, <argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">1</literal></expr></argument>, <argument pos:start="51:36" pos:end="51:41"><expr pos:start="51:36" pos:end="51:41"><literal type="number" pos:start="51:36" pos:end="51:41">100000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:50"><expr pos:start="53:5" pos:end="53:49"><name pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:6">st</name><operator pos:start="53:7" pos:end="53:8">-&gt;</operator><name pos:start="53:9" pos:end="53:16">codecpar</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:28">codec_type</name></name> <operator pos:start="53:30" pos:end="53:30">=</operator> <name pos:start="53:32" pos:end="53:49">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:26"><name pos:start="55:5" pos:end="55:6">st</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:16">codecpar</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:26">codec_id</name></name>   <operator pos:start="55:30" pos:end="55:30">=</operator> <name pos:start="55:32" pos:end="55:47">AV_CODEC_ID_APNG</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:45"><expr pos:start="57:5" pos:end="57:44"><name pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:6">st</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:16">codecpar</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:23">width</name></name>      <operator pos:start="57:30" pos:end="57:30">=</operator> <call pos:start="57:32" pos:end="57:44"><name pos:start="57:32" pos:end="57:40">avio_rb32</name><argument_list pos:start="57:41" pos:end="57:44">(<argument pos:start="57:42" pos:end="57:43"><expr pos:start="57:42" pos:end="57:43"><name pos:start="57:42" pos:end="57:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:6">st</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:16">codecpar</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:24">height</name></name>     <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:44"><name pos:start="59:32" pos:end="59:40">avio_rb32</name><argument_list pos:start="59:41" pos:end="59:44">(<argument pos:start="59:42" pos:end="59:43"><expr pos:start="59:42" pos:end="59:43"><name pos:start="59:42" pos:end="59:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="63:19"><if pos:start="61:5" pos:end="63:19">if <condition pos:start="61:8" pos:end="61:89">(<expr pos:start="61:9" pos:end="61:88"><operator pos:start="61:9" pos:end="61:9">(</operator><name pos:start="61:10" pos:end="61:12">ret</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <call pos:start="61:16" pos:end="61:83"><name pos:start="61:16" pos:end="61:34">av_image_check_size</name><argument_list pos:start="61:35" pos:end="61:83">(<argument pos:start="61:36" pos:end="61:54"><expr pos:start="61:36" pos:end="61:54"><name pos:start="61:36" pos:end="61:54"><name pos:start="61:36" pos:end="61:37">st</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:47">codecpar</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:54">width</name></name></expr></argument>, <argument pos:start="61:57" pos:end="61:76"><expr pos:start="61:57" pos:end="61:76"><name pos:start="61:57" pos:end="61:76"><name pos:start="61:57" pos:end="61:58">st</name><operator pos:start="61:59" pos:end="61:60">-&gt;</operator><name pos:start="61:61" pos:end="61:68">codecpar</name><operator pos:start="61:69" pos:end="61:70">-&gt;</operator><name pos:start="61:71" pos:end="61:76">height</name></name></expr></argument>, <argument pos:start="61:79" pos:end="61:79"><expr pos:start="61:79" pos:end="61:79"><literal type="number" pos:start="61:79" pos:end="61:79">0</literal></expr></argument>, <argument pos:start="61:82" pos:end="61:82"><expr pos:start="61:82" pos:end="61:82"><name pos:start="61:82" pos:end="61:82">s</name></expr></argument>)</argument_list></call><operator pos:start="61:84" pos:end="61:84">)</operator> <operator pos:start="61:86" pos:end="61:86">&lt;</operator> <literal type="number" pos:start="61:88" pos:end="61:88">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:19"><block_content pos:start="63:9" pos:end="63:19">

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:76">/* extradata will contain every chunk up to the first fcTL (excluded) */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:73"><expr pos:start="69:5" pos:end="69:72"><name pos:start="69:5" pos:end="69:19"><name pos:start="69:5" pos:end="69:7">ctx</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:19">extra_data</name></name> <operator pos:start="69:21" pos:end="69:21">=</operator> <call pos:start="69:23" pos:end="69:72"><name pos:start="69:23" pos:end="69:31">av_malloc</name><argument_list pos:start="69:32" pos:end="69:72">(<argument pos:start="69:33" pos:end="69:71"><expr pos:start="69:33" pos:end="69:71"><name pos:start="69:33" pos:end="69:35">len</name> <operator pos:start="69:37" pos:end="69:37">+</operator> <literal type="number" pos:start="69:39" pos:end="69:42">12</literal> <operator pos:start="69:42" pos:end="69:42">+</operator> <name pos:start="69:44" pos:end="69:71">AV_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="73:31"><if pos:start="71:5" pos:end="73:31">if <condition pos:start="71:8" pos:end="71:25">(<expr pos:start="71:9" pos:end="71:24"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:24"><name pos:start="71:10" pos:end="71:12">ctx</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:24">extra_data</name></name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:31"><block_content pos:start="73:9" pos:end="73:31">

        <return pos:start="73:9" pos:end="73:31">return <expr pos:start="73:16" pos:end="73:30"><call pos:start="73:16" pos:end="73:30"><name pos:start="73:16" pos:end="73:22">AVERROR</name><argument_list pos:start="73:23" pos:end="73:30">(<argument pos:start="73:24" pos:end="73:29"><expr pos:start="73:24" pos:end="73:29"><name pos:start="73:24" pos:end="73:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:36"><expr pos:start="75:5" pos:end="75:35"><name pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:7">ctx</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:24">extra_data_size</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:30">len</name> <operator pos:start="75:32" pos:end="75:32">+</operator> <literal type="number" pos:start="75:34" pos:end="75:35">12</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:37"><expr pos:start="77:5" pos:end="77:36"><call pos:start="77:5" pos:end="77:36"><name pos:start="77:5" pos:end="77:11">AV_WB32</name><argument_list pos:start="77:12" pos:end="77:36">(<argument pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:15">ctx</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:27">extra_data</name></name></expr></argument>,    <argument pos:start="77:33" pos:end="77:35"><expr pos:start="77:33" pos:end="77:35"><name pos:start="77:33" pos:end="77:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><call pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:11">AV_WL32</name><argument_list pos:start="79:12" pos:end="79:36">(<argument pos:start="79:13" pos:end="79:29"><expr pos:start="79:13" pos:end="79:29"><name pos:start="79:13" pos:end="79:27"><name pos:start="79:13" pos:end="79:15">ctx</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:27">extra_data</name></name><operator pos:start="79:28" pos:end="79:28">+</operator><literal type="number" pos:start="79:29" pos:end="79:29">4</literal></expr></argument>,  <argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">tag</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><call pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:11">AV_WB32</name><argument_list pos:start="81:12" pos:end="81:52">(<argument pos:start="81:13" pos:end="81:29"><expr pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:27"><name pos:start="81:13" pos:end="81:15">ctx</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:27">extra_data</name></name><operator pos:start="81:28" pos:end="81:28">+</operator><literal type="number" pos:start="81:29" pos:end="81:29">8</literal></expr></argument>,  <argument pos:start="81:33" pos:end="81:51"><expr pos:start="81:33" pos:end="81:51"><name pos:start="81:33" pos:end="81:51"><name pos:start="81:33" pos:end="81:34">st</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:44">codecpar</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:51">width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><call pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:11">AV_WB32</name><argument_list pos:start="83:12" pos:end="83:53">(<argument pos:start="83:13" pos:end="83:30"><expr pos:start="83:13" pos:end="83:30"><name pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:15">ctx</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:27">extra_data</name></name><operator pos:start="83:28" pos:end="83:28">+</operator><literal type="number" pos:start="83:29" pos:end="83:30">12</literal></expr></argument>, <argument pos:start="83:33" pos:end="83:52"><expr pos:start="83:33" pos:end="83:52"><name pos:start="83:33" pos:end="83:52"><name pos:start="83:33" pos:end="83:34">st</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:44">codecpar</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:52">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:18"><if pos:start="85:5" pos:end="87:18">if <condition pos:start="85:8" pos:end="85:57">(<expr pos:start="85:9" pos:end="85:56"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:12">ret</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:51"><name pos:start="85:16" pos:end="85:24">avio_read</name><argument_list pos:start="85:25" pos:end="85:51">(<argument pos:start="85:26" pos:end="85:27"><expr pos:start="85:26" pos:end="85:27"><name pos:start="85:26" pos:end="85:27">pb</name></expr></argument>, <argument pos:start="85:30" pos:end="85:47"><expr pos:start="85:30" pos:end="85:47"><name pos:start="85:30" pos:end="85:44"><name pos:start="85:30" pos:end="85:32">ctx</name><operator pos:start="85:33" pos:end="85:34">-&gt;</operator><name pos:start="85:35" pos:end="85:44">extra_data</name></name><operator pos:start="85:45" pos:end="85:45">+</operator><literal type="number" pos:start="85:46" pos:end="85:47">16</literal></expr></argument>, <argument pos:start="85:50" pos:end="85:50"><expr pos:start="85:50" pos:end="85:50"><literal type="number" pos:start="85:50" pos:end="85:50">9</literal></expr></argument>)</argument_list></call><operator pos:start="85:52" pos:end="85:52">)</operator> <operator pos:start="85:54" pos:end="85:54">&lt;</operator> <literal type="number" pos:start="85:56" pos:end="85:56">0</literal></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:18"><block_content pos:start="87:9" pos:end="87:18">

        <goto pos:start="87:9" pos:end="87:18">goto <name pos:start="87:14" pos:end="87:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <while pos:start="91:5" pos:end="191:5">while <condition pos:start="91:11" pos:end="91:26">(<expr pos:start="91:12" pos:end="91:25"><operator pos:start="91:12" pos:end="91:12">!</operator><call pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:21">avio_feof</name><argument_list pos:start="91:22" pos:end="91:25">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">pb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:28" pos:end="191:5">{<block_content pos:start="93:9" pos:end="189:9">

        <if_stmt pos:start="93:9" pos:end="119:9"><if pos:start="93:9" pos:end="119:9">if <condition pos:start="93:12" pos:end="93:45">(<expr pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:22">acTL_found</name> <operator pos:start="93:24" pos:end="93:25">&amp;&amp;</operator> <name pos:start="93:27" pos:end="93:39"><name pos:start="93:27" pos:end="93:29">ctx</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:39">num_play</name></name> <operator pos:start="93:41" pos:end="93:42">!=</operator> <literal type="number" pos:start="93:44" pos:end="93:44">1</literal></expr>)</condition> <block pos:start="93:47" pos:end="119:9">{<block_content pos:start="95:13" pos:end="117:13">

            <decl_stmt pos:start="95:13" pos:end="95:43"><decl pos:start="95:13" pos:end="95:42"><type pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:19">int64_t</name></type> <name pos:start="95:21" pos:end="95:24">size</name>   <init pos:start="95:28" pos:end="95:42">= <expr pos:start="95:30" pos:end="95:42"><call pos:start="95:30" pos:end="95:42"><name pos:start="95:30" pos:end="95:38">avio_size</name><argument_list pos:start="95:39" pos:end="95:42">(<argument pos:start="95:40" pos:end="95:41"><expr pos:start="95:40" pos:end="95:41"><name pos:start="95:40" pos:end="95:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="97:13" pos:end="97:43"><decl pos:start="97:13" pos:end="97:42"><type pos:start="97:13" pos:end="97:19"><name pos:start="97:13" pos:end="97:19">int64_t</name></type> <name pos:start="97:21" pos:end="97:26">offset</name> <init pos:start="97:28" pos:end="97:42">= <expr pos:start="97:30" pos:end="97:42"><call pos:start="97:30" pos:end="97:42"><name pos:start="97:30" pos:end="97:38">avio_tell</name><argument_list pos:start="97:39" pos:end="97:42">(<argument pos:start="97:40" pos:end="97:41"><expr pos:start="97:40" pos:end="97:41"><name pos:start="97:40" pos:end="97:41">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="99:13" pos:end="117:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:25">(<expr pos:start="99:17" pos:end="99:24"><name pos:start="99:17" pos:end="99:20">size</name> <operator pos:start="99:22" pos:end="99:22">&lt;</operator> <literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>)</condition> <block pos:start="99:27" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:26">

                <expr_stmt pos:start="101:17" pos:end="101:27"><expr pos:start="101:17" pos:end="101:26"><name pos:start="101:17" pos:end="101:19">ret</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:26">size</name></expr>;</expr_stmt>

                <goto pos:start="103:17" pos:end="103:26">goto <name pos:start="103:22" pos:end="103:25">fail</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="105:15" pos:end="111:13">else if <condition pos:start="105:23" pos:end="105:34">(<expr pos:start="105:24" pos:end="105:33"><name pos:start="105:24" pos:end="105:29">offset</name> <operator pos:start="105:31" pos:end="105:31">&lt;</operator> <literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>)</condition> <block pos:start="105:36" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:26">

                <expr_stmt pos:start="107:17" pos:end="107:29"><expr pos:start="107:17" pos:end="107:28"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:28">offset</name></expr>;</expr_stmt>

                <goto pos:start="109:17" pos:end="109:26">goto <name pos:start="109:22" pos:end="109:25">fail</name>;</goto>

            </block_content>}</block></if> <if type="elseif" pos:start="111:15" pos:end="117:13">else if <condition pos:start="111:23" pos:end="111:75">(<expr pos:start="111:24" pos:end="111:74"><operator pos:start="111:24" pos:end="111:24">(</operator><name pos:start="111:25" pos:end="111:27">ret</name> <operator pos:start="111:29" pos:end="111:29">=</operator> <call pos:start="111:31" pos:end="111:69"><name pos:start="111:31" pos:end="111:50">ffio_ensure_seekback</name><argument_list pos:start="111:51" pos:end="111:69">(<argument pos:start="111:52" pos:end="111:53"><expr pos:start="111:52" pos:end="111:53"><name pos:start="111:52" pos:end="111:53">pb</name></expr></argument>, <argument pos:start="111:56" pos:end="111:68"><expr pos:start="111:56" pos:end="111:68"><name pos:start="111:56" pos:end="111:59">size</name> <operator pos:start="111:61" pos:end="111:61">-</operator> <name pos:start="111:63" pos:end="111:68">offset</name></expr></argument>)</argument_list></call><operator pos:start="111:70" pos:end="111:70">)</operator> <operator pos:start="111:72" pos:end="111:72">&lt;</operator> <literal type="number" pos:start="111:74" pos:end="111:74">0</literal></expr>)</condition> <block pos:start="111:77" pos:end="117:13">{<block_content pos:start="113:17" pos:end="115:34">

                <expr_stmt pos:start="113:17" pos:end="113:88"><expr pos:start="113:17" pos:end="113:87"><call pos:start="113:17" pos:end="113:87"><name pos:start="113:17" pos:end="113:22">av_log</name><argument_list pos:start="113:23" pos:end="113:87">(<argument pos:start="113:24" pos:end="113:24"><expr pos:start="113:24" pos:end="113:24"><name pos:start="113:24" pos:end="113:24">s</name></expr></argument>, <argument pos:start="113:27" pos:end="113:40"><expr pos:start="113:27" pos:end="113:40"><name pos:start="113:27" pos:end="113:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="113:43" pos:end="113:86"><expr pos:start="113:43" pos:end="113:86"><literal type="string" pos:start="113:43" pos:end="113:86">"Could not ensure seekback, will not loop\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:34"><expr pos:start="115:17" pos:end="115:33"><name pos:start="115:17" pos:end="115:29"><name pos:start="115:17" pos:end="115:19">ctx</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:29">num_play</name></name> <operator pos:start="115:31" pos:end="115:31">=</operator> <literal type="number" pos:start="115:33" pos:end="115:33">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="121:9" pos:end="125:22"><if pos:start="121:9" pos:end="125:22">if <condition pos:start="121:12" pos:end="123:78">(<expr pos:start="121:13" pos:end="123:77"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:26"><name pos:start="121:14" pos:end="121:16">ctx</name><operator pos:start="121:17" pos:end="121:18">-&gt;</operator><name pos:start="121:19" pos:end="121:26">num_play</name></name> <operator pos:start="121:28" pos:end="121:29">==</operator> <literal type="number" pos:start="121:31" pos:end="121:31">1</literal> <operator pos:start="121:33" pos:end="121:34">||</operator> <operator pos:start="121:36" pos:end="121:36">!</operator><name pos:start="121:37" pos:end="121:46">acTL_found</name><operator pos:start="121:47" pos:end="121:47">)</operator> <operator pos:start="121:49" pos:end="121:50">&amp;&amp;</operator>

            <operator pos:start="123:13" pos:end="123:13">(</operator><operator pos:start="123:14" pos:end="123:14">(</operator><name pos:start="123:15" pos:end="123:17">ret</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <call pos:start="123:21" pos:end="123:71"><name pos:start="123:21" pos:end="123:40">ffio_ensure_seekback</name><argument_list pos:start="123:41" pos:end="123:71">(<argument pos:start="123:42" pos:end="123:43"><expr pos:start="123:42" pos:end="123:43"><name pos:start="123:42" pos:end="123:43">pb</name></expr></argument>, <argument pos:start="123:46" pos:end="123:60"><expr pos:start="123:46" pos:end="123:60"><literal type="number" pos:start="123:46" pos:end="123:58">4</literal> <comment type="block" pos:start="123:48" pos:end="123:56">/* len */</comment> <operator pos:start="123:58" pos:end="123:58">+</operator> <literal type="number" pos:start="123:60" pos:end="123:60">4</literal></expr></argument> <comment type="block" pos:start="123:62" pos:end="123:70">/* tag */</comment>)</argument_list></call><operator pos:start="123:72" pos:end="123:72">)</operator> <operator pos:start="123:74" pos:end="123:74">&lt;</operator> <literal type="number" pos:start="123:76" pos:end="123:76">0</literal><operator pos:start="123:77" pos:end="123:77">)</operator></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:22"><block_content pos:start="125:13" pos:end="125:22">

            <goto pos:start="125:13" pos:end="125:22">goto <name pos:start="125:18" pos:end="125:21">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:28"><expr pos:start="129:9" pos:end="129:27"><name pos:start="129:9" pos:end="129:11">len</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <call pos:start="129:15" pos:end="129:27"><name pos:start="129:15" pos:end="129:23">avio_rb32</name><argument_list pos:start="129:24" pos:end="129:27">(<argument pos:start="129:25" pos:end="129:26"><expr pos:start="129:25" pos:end="129:26"><name pos:start="129:25" pos:end="129:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="131:9" pos:end="137:9"><if pos:start="131:9" pos:end="137:9">if <condition pos:start="131:12" pos:end="131:29">(<expr pos:start="131:13" pos:end="131:28"><name pos:start="131:13" pos:end="131:15">len</name> <operator pos:start="131:17" pos:end="131:17">&gt;</operator> <literal type="number" pos:start="131:19" pos:end="131:28">0x7fffffff</literal></expr>)</condition> <block pos:start="131:31" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:22">

            <expr_stmt pos:start="133:13" pos:end="133:38"><expr pos:start="133:13" pos:end="133:37"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <name pos:start="133:19" pos:end="133:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="135:13" pos:end="135:22">goto <name pos:start="135:18" pos:end="135:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:28"><expr pos:start="141:9" pos:end="141:27"><name pos:start="141:9" pos:end="141:11">tag</name> <operator pos:start="141:13" pos:end="141:13">=</operator> <call pos:start="141:15" pos:end="141:27"><name pos:start="141:15" pos:end="141:23">avio_rl32</name><argument_list pos:start="141:24" pos:end="141:27">(<argument pos:start="141:25" pos:end="141:26"><expr pos:start="141:25" pos:end="141:26"><name pos:start="141:25" pos:end="141:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="143:9" pos:end="189:9">switch <condition pos:start="143:16" pos:end="143:20">(<expr pos:start="143:17" pos:end="143:19"><name pos:start="143:17" pos:end="143:19">tag</name></expr>)</condition> <block pos:start="143:22" pos:end="189:9">{<block_content pos:start="145:9" pos:end="187:26">

        <case pos:start="145:9" pos:end="145:39">case <expr pos:start="145:14" pos:end="145:38"><call pos:start="145:14" pos:end="145:38"><name pos:start="145:14" pos:end="145:18">MKTAG</name><argument_list pos:start="145:19" pos:end="145:38">(<argument pos:start="145:20" pos:end="145:22"><expr pos:start="145:20" pos:end="145:22"><literal type="char" pos:start="145:20" pos:end="145:22">'a'</literal></expr></argument>, <argument pos:start="145:25" pos:end="145:27"><expr pos:start="145:25" pos:end="145:27"><literal type="char" pos:start="145:25" pos:end="145:27">'c'</literal></expr></argument>, <argument pos:start="145:30" pos:end="145:32"><expr pos:start="145:30" pos:end="145:32"><literal type="char" pos:start="145:30" pos:end="145:32">'T'</literal></expr></argument>, <argument pos:start="145:35" pos:end="145:37"><expr pos:start="145:35" pos:end="145:37"><literal type="char" pos:start="145:35" pos:end="145:37">'L'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="147:13" pos:end="151:26"><if pos:start="147:13" pos:end="151:26">if <condition pos:start="147:16" pos:end="149:64">(<expr pos:start="147:17" pos:end="149:63"><operator pos:start="147:17" pos:end="147:17">(</operator><name pos:start="147:18" pos:end="147:20">ret</name> <operator pos:start="147:22" pos:end="147:22">=</operator> <call pos:start="147:24" pos:end="147:50"><name pos:start="147:24" pos:end="147:32">avio_seek</name><argument_list pos:start="147:33" pos:end="147:50">(<argument pos:start="147:34" pos:end="147:35"><expr pos:start="147:34" pos:end="147:35"><name pos:start="147:34" pos:end="147:35">pb</name></expr></argument>, <argument pos:start="147:38" pos:end="147:39"><expr pos:start="147:38" pos:end="147:39"><operator pos:start="147:38" pos:end="147:38">-</operator><literal type="number" pos:start="147:39" pos:end="147:39">8</literal></expr></argument>, <argument pos:start="147:42" pos:end="147:49"><expr pos:start="147:42" pos:end="147:49"><name pos:start="147:42" pos:end="147:49">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="147:51" pos:end="147:51">)</operator> <operator pos:start="147:53" pos:end="147:53">&lt;</operator> <literal type="number" pos:start="147:55" pos:end="147:55">0</literal> <operator pos:start="147:57" pos:end="147:58">||</operator>

                <operator pos:start="149:17" pos:end="149:17">(</operator><name pos:start="149:18" pos:end="149:20">ret</name> <operator pos:start="149:22" pos:end="149:22">=</operator> <call pos:start="149:24" pos:end="149:58"><name pos:start="149:24" pos:end="149:39">append_extradata</name><argument_list pos:start="149:40" pos:end="149:58">(<argument pos:start="149:41" pos:end="149:43"><expr pos:start="149:41" pos:end="149:43"><name pos:start="149:41" pos:end="149:43">ctx</name></expr></argument>, <argument pos:start="149:46" pos:end="149:47"><expr pos:start="149:46" pos:end="149:47"><name pos:start="149:46" pos:end="149:47">pb</name></expr></argument>, <argument pos:start="149:50" pos:end="149:57"><expr pos:start="149:50" pos:end="149:57"><name pos:start="149:50" pos:end="149:52">len</name> <operator pos:start="149:54" pos:end="149:54">+</operator> <literal type="number" pos:start="149:56" pos:end="149:57">12</literal></expr></argument>)</argument_list></call><operator pos:start="149:59" pos:end="149:59">)</operator> <operator pos:start="149:61" pos:end="149:61">&lt;</operator> <literal type="number" pos:start="149:63" pos:end="149:63">0</literal></expr>)</condition><block type="pseudo" pos:start="151:17" pos:end="151:26"><block_content pos:start="151:17" pos:end="151:26">

                <goto pos:start="151:17" pos:end="151:26">goto <name pos:start="151:22" pos:end="151:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:27"><expr pos:start="153:13" pos:end="153:26"><name pos:start="153:13" pos:end="153:22">acTL_found</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <literal type="number" pos:start="153:26" pos:end="153:26">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:65"><expr pos:start="155:13" pos:end="155:64"><name pos:start="155:13" pos:end="155:27"><name pos:start="155:13" pos:end="155:15">ctx</name><operator pos:start="155:16" pos:end="155:17">-&gt;</operator><name pos:start="155:18" pos:end="155:27">num_frames</name></name> <operator pos:start="155:29" pos:end="155:29">=</operator> <call pos:start="155:31" pos:end="155:64"><name pos:start="155:31" pos:end="155:37">AV_RB32</name><argument_list pos:start="155:38" pos:end="155:64">(<argument pos:start="155:39" pos:end="155:63"><expr pos:start="155:39" pos:end="155:63"><name pos:start="155:39" pos:end="155:53"><name pos:start="155:39" pos:end="155:41">ctx</name><operator pos:start="155:42" pos:end="155:43">-&gt;</operator><name pos:start="155:44" pos:end="155:53">extra_data</name></name> <operator pos:start="155:55" pos:end="155:55">+</operator> <name pos:start="155:57" pos:end="155:59">ret</name> <operator pos:start="155:61" pos:end="155:61">+</operator> <literal type="number" pos:start="155:63" pos:end="155:63">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:66"><expr pos:start="157:13" pos:end="157:65"><name pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:15">ctx</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:25">num_play</name></name>   <operator pos:start="157:29" pos:end="157:29">=</operator> <call pos:start="157:31" pos:end="157:65"><name pos:start="157:31" pos:end="157:37">AV_RB32</name><argument_list pos:start="157:38" pos:end="157:65">(<argument pos:start="157:39" pos:end="157:64"><expr pos:start="157:39" pos:end="157:64"><name pos:start="157:39" pos:end="157:53"><name pos:start="157:39" pos:end="157:41">ctx</name><operator pos:start="157:42" pos:end="157:43">-&gt;</operator><name pos:start="157:44" pos:end="157:53">extra_data</name></name> <operator pos:start="157:55" pos:end="157:55">+</operator> <name pos:start="157:57" pos:end="157:59">ret</name> <operator pos:start="157:61" pos:end="157:61">+</operator> <literal type="number" pos:start="157:63" pos:end="157:64">12</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="161:68"><expr pos:start="159:13" pos:end="161:67"><call pos:start="159:13" pos:end="161:67"><name pos:start="159:13" pos:end="159:18">av_log</name><argument_list pos:start="159:19" pos:end="161:67">(<argument pos:start="159:20" pos:end="159:20"><expr pos:start="159:20" pos:end="159:20"><name pos:start="159:20" pos:end="159:20">s</name></expr></argument>, <argument pos:start="159:23" pos:end="159:34"><expr pos:start="159:23" pos:end="159:34"><name pos:start="159:23" pos:end="159:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="159:37" pos:end="159:82"><expr pos:start="159:37" pos:end="159:82"><literal type="string" pos:start="159:37" pos:end="159:51">"num_frames: %"</literal><name pos:start="159:52" pos:end="159:57">PRIu32</name><literal type="string" pos:start="159:58" pos:end="159:72">", num_play: %"</literal><name pos:start="159:73" pos:end="159:78">PRIu32</name><literal type="string" pos:start="159:79" pos:end="159:82">"\n"</literal></expr></argument>,

                                    <argument pos:start="161:37" pos:end="161:51"><expr pos:start="161:37" pos:end="161:51"><name pos:start="161:37" pos:end="161:51"><name pos:start="161:37" pos:end="161:39">ctx</name><operator pos:start="161:40" pos:end="161:41">-&gt;</operator><name pos:start="161:42" pos:end="161:51">num_frames</name></name></expr></argument>, <argument pos:start="161:54" pos:end="161:66"><expr pos:start="161:54" pos:end="161:66"><name pos:start="161:54" pos:end="161:66"><name pos:start="161:54" pos:end="161:56">ctx</name><operator pos:start="161:57" pos:end="161:58">-&gt;</operator><name pos:start="161:59" pos:end="161:66">num_play</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="163:13" pos:end="163:18">break;</break>

        <case pos:start="165:9" pos:end="165:39">case <expr pos:start="165:14" pos:end="165:38"><call pos:start="165:14" pos:end="165:38"><name pos:start="165:14" pos:end="165:18">MKTAG</name><argument_list pos:start="165:19" pos:end="165:38">(<argument pos:start="165:20" pos:end="165:22"><expr pos:start="165:20" pos:end="165:22"><literal type="char" pos:start="165:20" pos:end="165:22">'f'</literal></expr></argument>, <argument pos:start="165:25" pos:end="165:27"><expr pos:start="165:25" pos:end="165:27"><literal type="char" pos:start="165:25" pos:end="165:27">'c'</literal></expr></argument>, <argument pos:start="165:30" pos:end="165:32"><expr pos:start="165:30" pos:end="165:32"><literal type="char" pos:start="165:30" pos:end="165:32">'T'</literal></expr></argument>, <argument pos:start="165:35" pos:end="165:37"><expr pos:start="165:35" pos:end="165:37"><literal type="char" pos:start="165:35" pos:end="165:37">'L'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="167:13" pos:end="173:13"><if pos:start="167:13" pos:end="173:13">if <condition pos:start="167:16" pos:end="167:28">(<expr pos:start="167:17" pos:end="167:27"><operator pos:start="167:17" pos:end="167:17">!</operator><name pos:start="167:18" pos:end="167:27">acTL_found</name></expr>)</condition> <block pos:start="167:30" pos:end="173:13">{<block_content pos:start="169:16" pos:end="171:25">

               <expr_stmt pos:start="169:16" pos:end="169:41"><expr pos:start="169:16" pos:end="169:40"><name pos:start="169:16" pos:end="169:18">ret</name> <operator pos:start="169:20" pos:end="169:20">=</operator> <name pos:start="169:22" pos:end="169:40">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

               <goto pos:start="171:16" pos:end="171:25">goto <name pos:start="171:21" pos:end="171:24">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="175:13" pos:end="177:26"><if pos:start="175:13" pos:end="177:26">if <condition pos:start="175:16" pos:end="175:56">(<expr pos:start="175:17" pos:end="175:55"><operator pos:start="175:17" pos:end="175:17">(</operator><name pos:start="175:18" pos:end="175:20">ret</name> <operator pos:start="175:22" pos:end="175:22">=</operator> <call pos:start="175:24" pos:end="175:50"><name pos:start="175:24" pos:end="175:32">avio_seek</name><argument_list pos:start="175:33" pos:end="175:50">(<argument pos:start="175:34" pos:end="175:35"><expr pos:start="175:34" pos:end="175:35"><name pos:start="175:34" pos:end="175:35">pb</name></expr></argument>, <argument pos:start="175:38" pos:end="175:39"><expr pos:start="175:38" pos:end="175:39"><operator pos:start="175:38" pos:end="175:38">-</operator><literal type="number" pos:start="175:39" pos:end="175:39">8</literal></expr></argument>, <argument pos:start="175:42" pos:end="175:49"><expr pos:start="175:42" pos:end="175:49"><name pos:start="175:42" pos:end="175:49">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="175:51" pos:end="175:51">)</operator> <operator pos:start="175:53" pos:end="175:53">&lt;</operator> <literal type="number" pos:start="175:55" pos:end="175:55">0</literal></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:26"><block_content pos:start="177:17" pos:end="177:26">

                <goto pos:start="177:17" pos:end="177:26">goto <name pos:start="177:22" pos:end="177:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="179:13" pos:end="179:21">return <expr pos:start="179:20" pos:end="179:20"><literal type="number" pos:start="179:20" pos:end="179:20">0</literal></expr>;</return>

        <default pos:start="181:9" pos:end="181:16">default:</default>

            <if_stmt pos:start="183:13" pos:end="187:26"><if pos:start="183:13" pos:end="187:26">if <condition pos:start="183:16" pos:end="185:64">(<expr pos:start="183:17" pos:end="185:63"><operator pos:start="183:17" pos:end="183:17">(</operator><name pos:start="183:18" pos:end="183:20">ret</name> <operator pos:start="183:22" pos:end="183:22">=</operator> <call pos:start="183:24" pos:end="183:50"><name pos:start="183:24" pos:end="183:32">avio_seek</name><argument_list pos:start="183:33" pos:end="183:50">(<argument pos:start="183:34" pos:end="183:35"><expr pos:start="183:34" pos:end="183:35"><name pos:start="183:34" pos:end="183:35">pb</name></expr></argument>, <argument pos:start="183:38" pos:end="183:39"><expr pos:start="183:38" pos:end="183:39"><operator pos:start="183:38" pos:end="183:38">-</operator><literal type="number" pos:start="183:39" pos:end="183:39">8</literal></expr></argument>, <argument pos:start="183:42" pos:end="183:49"><expr pos:start="183:42" pos:end="183:49"><name pos:start="183:42" pos:end="183:49">SEEK_CUR</name></expr></argument>)</argument_list></call><operator pos:start="183:51" pos:end="183:51">)</operator> <operator pos:start="183:53" pos:end="183:53">&lt;</operator> <literal type="number" pos:start="183:55" pos:end="183:55">0</literal> <operator pos:start="183:57" pos:end="183:58">||</operator>

                <operator pos:start="185:17" pos:end="185:17">(</operator><name pos:start="185:18" pos:end="185:20">ret</name> <operator pos:start="185:22" pos:end="185:22">=</operator> <call pos:start="185:24" pos:end="185:58"><name pos:start="185:24" pos:end="185:39">append_extradata</name><argument_list pos:start="185:40" pos:end="185:58">(<argument pos:start="185:41" pos:end="185:43"><expr pos:start="185:41" pos:end="185:43"><name pos:start="185:41" pos:end="185:43">ctx</name></expr></argument>, <argument pos:start="185:46" pos:end="185:47"><expr pos:start="185:46" pos:end="185:47"><name pos:start="185:46" pos:end="185:47">pb</name></expr></argument>, <argument pos:start="185:50" pos:end="185:57"><expr pos:start="185:50" pos:end="185:57"><name pos:start="185:50" pos:end="185:52">len</name> <operator pos:start="185:54" pos:end="185:54">+</operator> <literal type="number" pos:start="185:56" pos:end="185:57">12</literal></expr></argument>)</argument_list></call><operator pos:start="185:59" pos:end="185:59">)</operator> <operator pos:start="185:61" pos:end="185:61">&lt;</operator> <literal type="number" pos:start="185:63" pos:end="185:63">0</literal></expr>)</condition><block type="pseudo" pos:start="187:17" pos:end="187:26"><block_content pos:start="187:17" pos:end="187:26">

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></while>



<label pos:start="195:1" pos:end="195:5"><name pos:start="195:1" pos:end="195:4">fail</name>:</label>

    <if_stmt pos:start="197:5" pos:end="203:5"><if pos:start="197:5" pos:end="203:5">if <condition pos:start="197:8" pos:end="197:29">(<expr pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:28"><name pos:start="197:9" pos:end="197:11">ctx</name><operator pos:start="197:12" pos:end="197:13">-&gt;</operator><name pos:start="197:14" pos:end="197:28">extra_data_size</name></name></expr>)</condition> <block pos:start="197:31" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:33">

        <expr_stmt pos:start="199:9" pos:end="199:35"><expr pos:start="199:9" pos:end="199:34"><call pos:start="199:9" pos:end="199:34"><name pos:start="199:9" pos:end="199:16">av_freep</name><argument_list pos:start="199:17" pos:end="199:34">(<argument pos:start="199:18" pos:end="199:33"><expr pos:start="199:18" pos:end="199:33"><operator pos:start="199:18" pos:end="199:18">&amp;</operator><name pos:start="199:19" pos:end="199:33"><name pos:start="199:19" pos:end="199:21">ctx</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:33">extra_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:33"><expr pos:start="201:9" pos:end="201:32"><name pos:start="201:9" pos:end="201:28"><name pos:start="201:9" pos:end="201:11">ctx</name><operator pos:start="201:12" pos:end="201:13">-&gt;</operator><name pos:start="201:14" pos:end="201:28">extra_data_size</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <literal type="number" pos:start="201:32" pos:end="201:32">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="205:5" pos:end="205:15">return <expr pos:start="205:12" pos:end="205:14"><name pos:start="205:12" pos:end="205:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
