<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8790.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">bool</name></type> <name pos:start="1:6" pos:end="1:21">arp_table_search</name><parameter_list pos:start="1:22" pos:end="3:52">(<parameter pos:start="1:23" pos:end="1:34"><decl pos:start="1:23" pos:end="1:34"><type pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:27">Slirp</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:34">slirp</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:52">ip_addr</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:51"><decl pos:start="3:23" pos:end="3:51"><type pos:start="3:23" pos:end="3:41"><name pos:start="3:23" pos:end="3:29">uint8_t</name></type> <name pos:start="3:31" pos:end="3:51"><name pos:start="3:31" pos:end="3:41">out_ethaddr</name><index pos:start="3:42" pos:end="3:51">[<expr pos:start="3:43" pos:end="3:50"><name pos:start="3:43" pos:end="3:50">ETH_ALEN</name></expr>]</index></name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="65:1">{<block_content pos:start="7:5" pos:end="63:13">

    <decl_stmt pos:start="7:5" pos:end="9:67"><decl pos:start="7:5" pos:end="9:66"><type pos:start="7:5" pos:end="7:18"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:18">uint32_t</name></type> <name pos:start="7:20" pos:end="7:33">broadcast_addr</name> <init pos:start="7:35" pos:end="9:66">=

        <expr pos:start="9:9" pos:end="9:66"><operator pos:start="9:9" pos:end="9:9">~</operator><name pos:start="9:10" pos:end="9:36"><name pos:start="9:10" pos:end="9:14">slirp</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:29">vnetwork_mask</name><operator pos:start="9:30" pos:end="9:30">.</operator><name pos:start="9:31" pos:end="9:36">s_addr</name></name> <operator pos:start="9:38" pos:end="9:38">|</operator> <name pos:start="9:40" pos:end="9:66"><name pos:start="9:40" pos:end="9:44">slirp</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:59">vnetwork_addr</name><operator pos:start="9:60" pos:end="9:60">.</operator><name pos:start="9:61" pos:end="9:66">s_addr</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:40"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">ArpTable</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:20">arptbl</name> <init pos:start="11:22" pos:end="11:40">= <expr pos:start="11:24" pos:end="11:40"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:40"><name pos:start="11:25" pos:end="11:29">slirp</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:40">arp_table</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><call pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:14">DEBUG_CALL</name><argument_list pos:start="17:15" pos:end="17:34">(<argument pos:start="17:16" pos:end="17:33"><expr pos:start="17:16" pos:end="17:33"><literal type="string" pos:start="17:16" pos:end="17:33">"arp_table_search"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><call pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:13">DEBUG_ARG</name><argument_list pos:start="19:14" pos:end="19:35">(<argument pos:start="19:15" pos:end="19:25"><expr pos:start="19:15" pos:end="19:25"><literal type="string" pos:start="19:15" pos:end="19:25">"ip = 0x%x"</literal></expr></argument>, <argument pos:start="19:28" pos:end="19:34"><expr pos:start="19:28" pos:end="19:34"><name pos:start="19:28" pos:end="19:34">ip_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:55">/* Check 0.0.0.0/8 invalid source-only addresses */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><call pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:48">(<argument pos:start="25:12" pos:end="25:47"><expr pos:start="25:12" pos:end="25:47"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:19">ip_addr</name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <call pos:start="25:23" pos:end="25:41"><name pos:start="25:23" pos:end="25:27">htonl</name><argument_list pos:start="25:28" pos:end="25:41">(<argument pos:start="25:29" pos:end="25:40"><expr pos:start="25:29" pos:end="25:40"><operator pos:start="25:29" pos:end="25:29">~</operator><operator pos:start="25:30" pos:end="25:30">(</operator><literal type="number" pos:start="25:31" pos:end="25:33">0xf</literal> <operator pos:start="25:35" pos:end="25:36">&lt;&lt;</operator> <literal type="number" pos:start="25:38" pos:end="25:39">28</literal><operator pos:start="25:40" pos:end="25:40">)</operator></expr></argument>)</argument_list></call><operator pos:start="25:42" pos:end="25:42">)</operator> <operator pos:start="25:44" pos:end="25:45">!=</operator> <literal type="number" pos:start="25:47" pos:end="25:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:30">/* If broadcast address */</comment>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:59">(<expr pos:start="31:9" pos:end="31:58"><name pos:start="31:9" pos:end="31:15">ip_addr</name> <operator pos:start="31:17" pos:end="31:18">==</operator> <literal type="number" pos:start="31:20" pos:end="31:29">0xffffffff</literal> <operator pos:start="31:31" pos:end="31:32">||</operator> <name pos:start="31:34" pos:end="31:40">ip_addr</name> <operator pos:start="31:42" pos:end="31:43">==</operator> <name pos:start="31:45" pos:end="31:58">broadcast_addr</name></expr>)</condition> <block pos:start="31:61" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:17">

        <comment type="block" pos:start="33:9" pos:end="33:47">/* return Ethernet broadcast address */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:44"><expr pos:start="35:9" pos:end="35:43"><call pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:14">memset</name><argument_list pos:start="35:15" pos:end="35:43">(<argument pos:start="35:16" pos:end="35:26"><expr pos:start="35:16" pos:end="35:26"><name pos:start="35:16" pos:end="35:26">out_ethaddr</name></expr></argument>, <argument pos:start="35:29" pos:end="35:32"><expr pos:start="35:29" pos:end="35:32"><literal type="number" pos:start="35:29" pos:end="35:32">0xff</literal></expr></argument>, <argument pos:start="35:35" pos:end="35:42"><expr pos:start="35:35" pos:end="35:42"><name pos:start="35:35" pos:end="35:42">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="59:5">for <control pos:start="43:9" pos:end="43:40">(<init pos:start="43:10" pos:end="43:15"><expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <literal type="number" pos:start="43:14" pos:end="43:14">0</literal></expr>;</init> <condition pos:start="43:17" pos:end="43:35"><expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:17">i</name> <operator pos:start="43:19" pos:end="43:19">&lt;</operator> <name pos:start="43:21" pos:end="43:34">ARP_TABLE_SIZE</name></expr>;</condition> <incr pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:37">i</name><operator pos:start="43:38" pos:end="43:39">++</operator></expr></incr>)</control> <block pos:start="43:42" pos:end="59:5">{<block_content pos:start="45:9" pos:end="57:9">

        <if_stmt pos:start="45:9" pos:end="57:9"><if pos:start="45:9" pos:end="57:9">if <condition pos:start="45:12" pos:end="45:47">(<expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:18">arptbl</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:25">table</name><index pos:start="45:26" pos:end="45:28">[<expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">i</name></expr>]</index></name><operator pos:start="45:29" pos:end="45:29">.</operator><name pos:start="45:30" pos:end="45:35">ar_sip</name> <operator pos:start="45:37" pos:end="45:38">==</operator> <name pos:start="45:40" pos:end="45:46">ip_addr</name></expr>)</condition> <block pos:start="45:49" pos:end="57:9">{<block_content pos:start="47:13" pos:end="55:21">

            <expr_stmt pos:start="47:13" pos:end="47:68"><expr pos:start="47:13" pos:end="47:67"><call pos:start="47:13" pos:end="47:67"><name pos:start="47:13" pos:end="47:18">memcpy</name><argument_list pos:start="47:19" pos:end="47:67">(<argument pos:start="47:20" pos:end="47:30"><expr pos:start="47:20" pos:end="47:30"><name pos:start="47:20" pos:end="47:30">out_ethaddr</name></expr></argument>, <argument pos:start="47:33" pos:end="47:55"><expr pos:start="47:33" pos:end="47:55"><name pos:start="47:33" pos:end="47:48"><name pos:start="47:33" pos:end="47:38">arptbl</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:45">table</name><index pos:start="47:46" pos:end="47:48">[<expr pos:start="47:47" pos:end="47:47"><name pos:start="47:47" pos:end="47:47">i</name></expr>]</index></name><operator pos:start="47:49" pos:end="47:49">.</operator><name pos:start="47:50" pos:end="47:55">ar_sha</name></expr></argument>,  <argument pos:start="47:59" pos:end="47:66"><expr pos:start="47:59" pos:end="47:66"><name pos:start="47:59" pos:end="47:66">ETH_ALEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="53:73"><expr pos:start="49:13" pos:end="53:72"><call pos:start="49:13" pos:end="53:72"><name pos:start="49:13" pos:end="49:22">DEBUG_ARGS</name><argument_list pos:start="49:23" pos:end="53:72">(<argument pos:start="49:24" pos:end="53:71"><expr pos:start="49:24" pos:end="53:71"><operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:27">dfd</name><operator pos:start="49:28" pos:end="49:28">,</operator> <literal type="string" pos:start="49:30" pos:end="49:79">" found hw addr = %02x:%02x:%02x:%02x:%02x:%02x\n"</literal><operator pos:start="49:80" pos:end="49:80">,</operator>

                        <name pos:start="51:25" pos:end="51:38"><name pos:start="51:25" pos:end="51:35">out_ethaddr</name><index pos:start="51:36" pos:end="51:38">[<expr pos:start="51:37" pos:end="51:37"><literal type="number" pos:start="51:37" pos:end="51:37">0</literal></expr>]</index></name><operator pos:start="51:39" pos:end="51:39">,</operator> <name pos:start="51:41" pos:end="51:54"><name pos:start="51:41" pos:end="51:51">out_ethaddr</name><index pos:start="51:52" pos:end="51:54">[<expr pos:start="51:53" pos:end="51:53"><literal type="number" pos:start="51:53" pos:end="51:53">1</literal></expr>]</index></name><operator pos:start="51:55" pos:end="51:55">,</operator> <name pos:start="51:57" pos:end="51:70"><name pos:start="51:57" pos:end="51:67">out_ethaddr</name><index pos:start="51:68" pos:end="51:70">[<expr pos:start="51:69" pos:end="51:69"><literal type="number" pos:start="51:69" pos:end="51:69">2</literal></expr>]</index></name><operator pos:start="51:71" pos:end="51:71">,</operator>

                        <name pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:35">out_ethaddr</name><index pos:start="53:36" pos:end="53:38">[<expr pos:start="53:37" pos:end="53:37"><literal type="number" pos:start="53:37" pos:end="53:37">3</literal></expr>]</index></name><operator pos:start="53:39" pos:end="53:39">,</operator> <name pos:start="53:41" pos:end="53:54"><name pos:start="53:41" pos:end="53:51">out_ethaddr</name><index pos:start="53:52" pos:end="53:54">[<expr pos:start="53:53" pos:end="53:53"><literal type="number" pos:start="53:53" pos:end="53:53">4</literal></expr>]</index></name><operator pos:start="53:55" pos:end="53:55">,</operator> <name pos:start="53:57" pos:end="53:70"><name pos:start="53:57" pos:end="53:67">out_ethaddr</name><index pos:start="53:68" pos:end="53:70">[<expr pos:start="53:69" pos:end="53:69"><literal type="number" pos:start="53:69" pos:end="53:69">5</literal></expr>]</index></name><operator pos:start="53:71" pos:end="53:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:21">return <expr pos:start="55:20" pos:end="55:20"><literal type="number" pos:start="55:20" pos:end="55:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
