<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17369.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">qxl_send_events</name><parameter_list pos:start="1:28" pos:end="1:61">(<parameter pos:start="1:29" pos:end="1:43"><decl pos:start="1:29" pos:end="1:43"><type pos:start="1:29" pos:end="1:43"><name pos:start="1:29" pos:end="1:40">PCIQXLDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">d</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:60"><decl pos:start="1:46" pos:end="1:60"><type pos:start="1:46" pos:end="1:60"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:60">events</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:24">old_pending</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22">le_events</name> <init pos:start="7:24" pos:end="7:44">= <expr pos:start="7:26" pos:end="7:44"><call pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:36">cpu_to_le32</name><argument_list pos:start="7:37" pos:end="7:44">(<argument pos:start="7:38" pos:end="7:43"><expr pos:start="7:38" pos:end="7:43"><name pos:start="7:38" pos:end="7:43">events</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:41"><expr pos:start="11:5" pos:end="11:40"><call pos:start="11:5" pos:end="11:40"><name pos:start="11:5" pos:end="11:25">trace_qxl_send_events</name><argument_list pos:start="11:26" pos:end="11:40">(<argument pos:start="11:27" pos:end="11:31"><expr pos:start="11:27" pos:end="11:31"><name pos:start="11:27" pos:end="11:31"><name pos:start="11:27" pos:end="11:27">d</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:31">id</name></name></expr></argument>, <argument pos:start="11:34" pos:end="11:39"><expr pos:start="11:34" pos:end="11:39"><name pos:start="11:34" pos:end="11:39">events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><call pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:50">(<argument pos:start="13:12" pos:end="13:49"><expr pos:start="13:12" pos:end="13:49"><call pos:start="13:12" pos:end="13:49"><name pos:start="13:12" pos:end="13:40">qemu_spice_display_is_running</name><argument_list pos:start="13:41" pos:end="13:49">(<argument pos:start="13:42" pos:end="13:48"><expr pos:start="13:42" pos:end="13:48"><operator pos:start="13:42" pos:end="13:42">&amp;</operator><name pos:start="13:43" pos:end="13:48"><name pos:start="13:43" pos:end="13:43">d</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:48">ssd</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:71"><expr pos:start="15:5" pos:end="15:70"><name pos:start="15:5" pos:end="15:15">old_pending</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <call pos:start="15:19" pos:end="15:70"><name pos:start="15:19" pos:end="15:37">__sync_fetch_and_or</name><argument_list pos:start="15:38" pos:end="15:70">(<argument pos:start="15:39" pos:end="15:58"><expr pos:start="15:39" pos:end="15:58"><operator pos:start="15:39" pos:end="15:39">&amp;</operator><name pos:start="15:40" pos:end="15:58"><name pos:start="15:40" pos:end="15:40">d</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:45">ram</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:58">int_pending</name></name></expr></argument>, <argument pos:start="15:61" pos:end="15:69"><expr pos:start="15:61" pos:end="15:69"><name pos:start="15:61" pos:end="15:69">le_events</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:47">(<expr pos:start="17:9" pos:end="17:46"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:20">old_pending</name> <operator pos:start="17:22" pos:end="17:22">&amp;</operator> <name pos:start="17:24" pos:end="17:32">le_events</name><operator pos:start="17:33" pos:end="17:33">)</operator> <operator pos:start="17:35" pos:end="17:36">==</operator> <name pos:start="17:38" pos:end="17:46">le_events</name></expr>)</condition> <block pos:start="17:49" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="35:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:38">(<expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:27">qemu_thread_is_self</name><argument_list pos:start="23:28" pos:end="23:37">(<argument pos:start="23:29" pos:end="23:36"><expr pos:start="23:29" pos:end="23:36"><operator pos:start="23:29" pos:end="23:29">&amp;</operator><name pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:30">d</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name/></name>main</expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:40" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:26">

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><call pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:22">qxl_update_irq</name><argument_list pos:start="25:23" pos:end="25:25">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:9">

        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:41">(<expr pos:start="29:13" pos:end="29:40"><call pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:17">write</name><argument_list pos:start="29:18" pos:end="29:35">(<argument pos:start="29:19" pos:end="29:28"><expr pos:start="29:19" pos:end="29:28"><name pos:start="29:19" pos:end="29:28"><name pos:start="29:19" pos:end="29:19">d</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:25">pipe</name><index pos:start="29:26" pos:end="29:28">[<expr pos:start="29:27" pos:end="29:27"><literal type="number" pos:start="29:27" pos:end="29:27">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">d</name></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">1</literal></expr></argument>)</argument_list></call> <operator pos:start="29:37" pos:end="29:38">!=</operator> <literal type="number" pos:start="29:40" pos:end="29:40">1</literal></expr>)</condition> <block pos:start="29:43" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:65">

            <expr_stmt pos:start="31:13" pos:end="31:65"><expr pos:start="31:13" pos:end="31:64"><call pos:start="31:13" pos:end="31:64"><name pos:start="31:13" pos:end="31:18">dprint</name><argument_list pos:start="31:19" pos:end="31:64">(<argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><name pos:start="31:20" pos:end="31:20">d</name></expr></argument>, <argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><literal type="number" pos:start="31:23" pos:end="31:23">1</literal></expr></argument>, <argument pos:start="31:26" pos:end="31:53"><expr pos:start="31:26" pos:end="31:53"><literal type="string" pos:start="31:26" pos:end="31:53">"%s: write to pipe failed\n"</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:63"><expr pos:start="31:56" pos:end="31:63"><name pos:start="31:56" pos:end="31:63">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
