<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8774.c" pos:tabs="8"><function pos:start="1:1" pos:end="86:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">vnc_display_close</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VncDisplay</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">vd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="86:1">{<block_content pos:start="5:5" pos:end="84:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">size_t</name></type> <name pos:start="5:12" pos:end="5:12">i</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:12">(<expr pos:start="7:9" pos:end="7:11"><operator pos:start="7:9" pos:end="7:9">!</operator><name pos:start="7:10" pos:end="7:11">vd</name></expr>)</condition> <block pos:start="7:14" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:15">

        <return pos:start="9:9" pos:end="9:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:24"><expr pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:6">vd</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:15">is_unix</name></name> <operator pos:start="13:17" pos:end="13:17">=</operator> <name pos:start="13:19" pos:end="13:23">false</name></expr>;</expr_stmt>

    <for pos:start="15:5" pos:end="25:5">for <control pos:start="15:9" pos:end="15:36">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:31"><expr pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:30"><name pos:start="15:21" pos:end="15:22">vd</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:30">nlsock</name></name></expr>;</condition> <incr pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:33">i</name><operator pos:start="15:34" pos:end="15:35">++</operator></expr></incr>)</control> <block pos:start="15:38" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:43">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:14">vd</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:25">lsock_tag</name><index pos:start="17:26" pos:end="17:28">[<expr pos:start="17:27" pos:end="17:27"><name pos:start="17:27" pos:end="17:27">i</name></expr>]</index></name></expr>)</condition> <block pos:start="17:31" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:46">

            <expr_stmt pos:start="19:13" pos:end="19:46"><expr pos:start="19:13" pos:end="19:45"><call pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:27">g_source_remove</name><argument_list pos:start="19:28" pos:end="19:45">(<argument pos:start="19:29" pos:end="19:44"><expr pos:start="19:29" pos:end="19:44"><name pos:start="19:29" pos:end="19:44"><name pos:start="19:29" pos:end="19:30">vd</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:41">lsock_tag</name><index pos:start="19:42" pos:end="19:44">[<expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:43"><expr pos:start="23:9" pos:end="23:42"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:20">object_unref</name><argument_list pos:start="23:21" pos:end="23:42">(<argument pos:start="23:22" pos:end="23:41"><expr pos:start="23:22" pos:end="23:41"><call pos:start="23:22" pos:end="23:41"><name pos:start="23:22" pos:end="23:27">OBJECT</name><argument_list pos:start="23:28" pos:end="23:41">(<argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:30">vd</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:37">lsock</name><index pos:start="23:38" pos:end="23:40">[<expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="27:5" pos:end="27:22"><expr pos:start="27:5" pos:end="27:21"><call pos:start="27:5" pos:end="27:21"><name pos:start="27:5" pos:end="27:10">g_free</name><argument_list pos:start="27:11" pos:end="27:21">(<argument pos:start="27:12" pos:end="27:20"><expr pos:start="27:12" pos:end="27:20"><name pos:start="27:12" pos:end="27:20"><name pos:start="27:12" pos:end="27:13">vd</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:20">lsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><call pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:10">g_free</name><argument_list pos:start="29:11" pos:end="29:25">(<argument pos:start="29:12" pos:end="29:24"><expr pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:13">vd</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:24">lsock_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:13"><name pos:start="31:5" pos:end="31:6">vd</name><operator pos:start="31:7" pos:end="31:8">-&gt;</operator><name pos:start="31:9" pos:end="31:13">lsock</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:20">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:17"><name pos:start="33:5" pos:end="33:6">vd</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:17">lsock_tag</name></name> <operator pos:start="33:19" pos:end="33:19">=</operator> <name pos:start="33:21" pos:end="33:24">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:6">vd</name><operator pos:start="35:7" pos:end="35:8">-&gt;</operator><name pos:start="35:9" pos:end="35:14">nlsock</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <literal type="number" pos:start="35:18" pos:end="35:18">0</literal></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="49:5">for <control pos:start="39:9" pos:end="39:39">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">i</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:34"><expr pos:start="39:17" pos:end="39:33"><name pos:start="39:17" pos:end="39:17">i</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:22">vd</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:33">nlwebsock</name></name></expr>;</condition> <incr pos:start="39:36" pos:end="39:38"><expr pos:start="39:36" pos:end="39:38"><name pos:start="39:36" pos:end="39:36">i</name><operator pos:start="39:37" pos:end="39:38">++</operator></expr></incr>)</control> <block pos:start="39:41" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:46">

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:14">vd</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:28">lwebsock_tag</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name></expr>)</condition> <block pos:start="41:34" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:49">

            <expr_stmt pos:start="43:13" pos:end="43:49"><expr pos:start="43:13" pos:end="43:48"><call pos:start="43:13" pos:end="43:48"><name pos:start="43:13" pos:end="43:27">g_source_remove</name><argument_list pos:start="43:28" pos:end="43:48">(<argument pos:start="43:29" pos:end="43:47"><expr pos:start="43:29" pos:end="43:47"><name pos:start="43:29" pos:end="43:47"><name pos:start="43:29" pos:end="43:30">vd</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:44">lwebsock_tag</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><name pos:start="43:46" pos:end="43:46">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:46"><expr pos:start="47:9" pos:end="47:45"><call pos:start="47:9" pos:end="47:45"><name pos:start="47:9" pos:end="47:20">object_unref</name><argument_list pos:start="47:21" pos:end="47:45">(<argument pos:start="47:22" pos:end="47:44"><expr pos:start="47:22" pos:end="47:44"><call pos:start="47:22" pos:end="47:44"><name pos:start="47:22" pos:end="47:27">OBJECT</name><argument_list pos:start="47:28" pos:end="47:44">(<argument pos:start="47:29" pos:end="47:43"><expr pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:43"><name pos:start="47:29" pos:end="47:30">vd</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:40">lwebsock</name><index pos:start="47:41" pos:end="47:43">[<expr pos:start="47:42" pos:end="47:42"><name pos:start="47:42" pos:end="47:42">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><call pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:10">g_free</name><argument_list pos:start="51:11" pos:end="51:24">(<argument pos:start="51:12" pos:end="51:23"><expr pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:23"><name pos:start="51:12" pos:end="51:13">vd</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">lwebsock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:29"><expr pos:start="53:5" pos:end="53:28"><call pos:start="53:5" pos:end="53:28"><name pos:start="53:5" pos:end="53:10">g_free</name><argument_list pos:start="53:11" pos:end="53:28">(<argument pos:start="53:12" pos:end="53:27"><expr pos:start="53:12" pos:end="53:27"><name pos:start="53:12" pos:end="53:27"><name pos:start="53:12" pos:end="53:13">vd</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:27">lwebsock_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:24"><expr pos:start="55:5" pos:end="55:23"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:6">vd</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:16">lwebsock</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:6">vd</name><operator pos:start="57:7" pos:end="57:8">-&gt;</operator><name pos:start="57:9" pos:end="57:20">lwebsock_tag</name></name> <operator pos:start="57:22" pos:end="57:22">=</operator> <name pos:start="57:24" pos:end="57:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:6">vd</name><operator pos:start="59:7" pos:end="59:8">-&gt;</operator><name pos:start="59:9" pos:end="59:17">nlwebsock</name></name> <operator pos:start="59:19" pos:end="59:19">=</operator> <literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:6">vd</name><operator pos:start="63:7" pos:end="63:8">-&gt;</operator><name pos:start="63:9" pos:end="63:12">auth</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:31">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:15"><name pos:start="65:5" pos:end="65:6">vd</name><operator pos:start="65:7" pos:end="65:8">-&gt;</operator><name pos:start="65:9" pos:end="65:15">subauth</name></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:34">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:21">(<expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:10">vd</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:20">tlscreds</name></name></expr>)</condition> <block pos:start="67:23" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:28">

        <expr_stmt pos:start="69:9" pos:end="69:46"><expr pos:start="69:9" pos:end="69:45"><call pos:start="69:9" pos:end="69:45"><name pos:start="69:9" pos:end="69:23">object_unparent</name><argument_list pos:start="69:24" pos:end="69:45">(<argument pos:start="69:25" pos:end="69:44"><expr pos:start="69:25" pos:end="69:44"><call pos:start="69:25" pos:end="69:44"><name pos:start="69:25" pos:end="69:30">OBJECT</name><argument_list pos:start="69:31" pos:end="69:44">(<argument pos:start="69:32" pos:end="69:43"><expr pos:start="69:32" pos:end="69:43"><name pos:start="69:32" pos:end="69:43"><name pos:start="69:32" pos:end="69:33">vd</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:43">tlscreds</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:28"><expr pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:10">vd</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:20">tlscreds</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:27">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:27"><expr pos:start="75:5" pos:end="75:26"><call pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:10">g_free</name><argument_list pos:start="75:11" pos:end="75:26">(<argument pos:start="75:12" pos:end="75:25"><expr pos:start="75:12" pos:end="75:25"><name pos:start="75:12" pos:end="75:25"><name pos:start="75:12" pos:end="75:13">vd</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:25">tlsaclname</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:26"><expr pos:start="77:5" pos:end="77:25"><name pos:start="77:5" pos:end="77:18"><name pos:start="77:5" pos:end="77:6">vd</name><operator pos:start="77:7" pos:end="77:8">-&gt;</operator><name pos:start="77:9" pos:end="77:18">tlsaclname</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <name pos:start="77:22" pos:end="77:25">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="84:5"><if pos:start="79:5" pos:end="84:5">if <condition pos:start="79:8" pos:end="79:26">(<expr pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:25"><name pos:start="79:9" pos:end="79:10">vd</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:25">lock_key_sync</name></name></expr>)</condition> <block pos:start="79:28" pos:end="84:5">{<block_content pos:start="81:9" pos:end="81:47">

        <expr_stmt pos:start="81:9" pos:end="81:47"><expr pos:start="81:9" pos:end="81:46"><call pos:start="81:9" pos:end="81:46"><name pos:start="81:9" pos:end="81:37">qemu_remove_led_event_handler</name><argument_list pos:start="81:38" pos:end="81:46">(<argument pos:start="81:39" pos:end="81:45"><expr pos:start="81:39" pos:end="81:45"><name pos:start="81:39" pos:end="81:45"><name pos:start="81:39" pos:end="81:40">vd</name><operator pos:start="81:41" pos:end="81:42">-&gt;</operator><name pos:start="81:43" pos:end="81:45">led</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    </block_content>}</block></if></if_stmt>

</block_content>}</block></function></unit>
