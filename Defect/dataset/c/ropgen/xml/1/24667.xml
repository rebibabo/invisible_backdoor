<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24667.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:13">qed_check</name><parameter_list pos:start="1:14" pos:end="1:65">(<parameter pos:start="1:15" pos:end="1:29"><decl pos:start="1:15" pos:end="1:29"><type pos:start="1:15" pos:end="1:29"><name pos:start="1:15" pos:end="1:26">BDRVQEDState</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:29">s</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:46">BdrvCheckResult</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:54">result</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:60">bool</name></type> <name pos:start="1:62" pos:end="1:64">fix</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:15">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">QEDCheck</name></type> <name pos:start="5:14" pos:end="5:18">check</name> <init pos:start="5:20" pos:end="17:5">= <expr pos:start="5:22" pos:end="17:5"><block pos:start="5:22" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="7:14"><operator pos:start="7:9" pos:end="7:9">.</operator><name pos:start="7:10" pos:end="7:10">s</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <name pos:start="7:14" pos:end="7:14">s</name></expr>,

        <expr pos:start="9:9" pos:end="9:24"><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:15">result</name> <operator pos:start="9:17" pos:end="9:17">=</operator> <name pos:start="9:19" pos:end="9:24">result</name></expr>,

        <expr pos:start="11:9" pos:end="11:59"><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:18">nclusters</name> <operator pos:start="11:20" pos:end="11:20">=</operator> <call pos:start="11:22" pos:end="11:59"><name pos:start="11:22" pos:end="11:42">qed_bytes_to_clusters</name><argument_list pos:start="11:43" pos:end="11:59">(<argument pos:start="11:44" pos:end="11:44"><expr pos:start="11:44" pos:end="11:44"><name pos:start="11:44" pos:end="11:44">s</name></expr></argument>, <argument pos:start="11:47" pos:end="11:58"><expr pos:start="11:47" pos:end="11:58"><name pos:start="11:47" pos:end="11:58"><name pos:start="11:47" pos:end="11:47">s</name><operator pos:start="11:48" pos:end="11:49">-&gt;</operator><name pos:start="11:50" pos:end="11:58">file_size</name></name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="13:9" pos:end="13:39"><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:16">request</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <block pos:start="13:20" pos:end="13:39">{ <expr pos:start="13:22" pos:end="13:37"><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:30">l2_table</name> <operator pos:start="13:32" pos:end="13:32">=</operator> <name pos:start="13:34" pos:end="13:37">NULL</name></expr> }</block></expr>,

        <expr pos:start="15:9" pos:end="15:18"><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:12">fix</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">fix</name></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:72"><expr pos:start="23:5" pos:end="25:71"><name pos:start="23:5" pos:end="23:23"><name pos:start="23:5" pos:end="23:9">check</name><operator pos:start="23:10" pos:end="23:10">.</operator><name pos:start="23:11" pos:end="23:23">used_clusters</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="25:71"><name pos:start="23:27" pos:end="23:39">g_try_malloc0</name><argument_list pos:start="23:40" pos:end="25:71">(<argument pos:start="23:41" pos:end="25:70"><expr pos:start="23:41" pos:end="25:70"><operator pos:start="23:41" pos:end="23:41">(</operator><operator pos:start="23:42" pos:end="23:42">(</operator><name pos:start="23:43" pos:end="23:57"><name pos:start="23:43" pos:end="23:47">check</name><operator pos:start="23:48" pos:end="23:48">.</operator><name pos:start="23:49" pos:end="23:57">nclusters</name></name> <operator pos:start="23:59" pos:end="23:59">+</operator> <literal type="number" pos:start="23:61" pos:end="23:62">31</literal><operator pos:start="23:63" pos:end="23:63">)</operator> <operator pos:start="23:65" pos:end="23:65">/</operator> <literal type="number" pos:start="23:67" pos:end="23:68">32</literal><operator pos:start="23:69" pos:end="23:69">)</operator> <operator pos:start="23:71" pos:end="23:71">*</operator>

                                        <sizeof pos:start="25:41" pos:end="25:70">sizeof<argument_list pos:start="25:47" pos:end="25:70">(<argument pos:start="25:48" pos:end="25:69"><expr pos:start="25:48" pos:end="25:69"><name pos:start="25:48" pos:end="25:69"><name pos:start="25:48" pos:end="25:52">check</name><operator pos:start="25:53" pos:end="25:53">.</operator><name pos:start="25:54" pos:end="25:66">used_clusters</name><index pos:start="25:67" pos:end="25:69">[<expr pos:start="25:68" pos:end="25:68"><literal type="number" pos:start="25:68" pos:end="25:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:55">(<expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:23"><name pos:start="27:9" pos:end="27:13">check</name><operator pos:start="27:14" pos:end="27:14">.</operator><name pos:start="27:15" pos:end="27:23">nclusters</name></name> <operator pos:start="27:25" pos:end="27:26">&amp;&amp;</operator> <name pos:start="27:28" pos:end="27:46"><name pos:start="27:28" pos:end="27:32">check</name><operator pos:start="27:33" pos:end="27:33">.</operator><name pos:start="27:34" pos:end="27:46">used_clusters</name></name> <operator pos:start="27:48" pos:end="27:49">==</operator> <name pos:start="27:51" pos:end="27:54">NULL</name></expr>)</condition> <block pos:start="27:57" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">ENOMEM</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="39:35"><expr pos:start="35:5" pos:end="39:34"><name pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:9">check</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:16">result</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">bfi</name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:36">total_clusters</name></name> <operator pos:start="35:38" pos:end="35:38">=</operator>

        <operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:29"><name pos:start="37:10" pos:end="37:10">s</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:18">header</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:29">image_size</name></name> <operator pos:start="37:31" pos:end="37:31">+</operator> <name pos:start="37:33" pos:end="37:54"><name pos:start="37:33" pos:end="37:33">s</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:41">header</name><operator pos:start="37:42" pos:end="37:42">.</operator><name pos:start="37:43" pos:end="37:54">cluster_size</name></name> <operator pos:start="37:56" pos:end="37:56">-</operator> <literal type="number" pos:start="37:58" pos:end="37:58">1</literal><operator pos:start="37:59" pos:end="37:59">)</operator> <operator pos:start="37:61" pos:end="37:61">/</operator>

            <name pos:start="39:13" pos:end="39:34"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:21">header</name><operator pos:start="39:22" pos:end="39:22">.</operator><name pos:start="39:23" pos:end="39:34">cluster_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:50"><expr pos:start="41:5" pos:end="41:49"><name pos:start="41:5" pos:end="41:7">ret</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:49"><name pos:start="41:11" pos:end="41:28">qed_check_l1_table</name><argument_list pos:start="41:29" pos:end="41:49">(<argument pos:start="41:30" pos:end="41:35"><expr pos:start="41:30" pos:end="41:35"><operator pos:start="41:30" pos:end="41:30">&amp;</operator><name pos:start="41:31" pos:end="41:35">check</name></expr></argument>, <argument pos:start="41:38" pos:end="41:48"><expr pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:38">s</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:48">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="57:5"><if pos:start="43:5" pos:end="57:5">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:14">==</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>)</condition> <block pos:start="43:19" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:9">

        <comment type="block" pos:start="45:9" pos:end="45:75">/* Only check for leaks if entire image was scanned successfully */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><call pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:27">qed_check_for_leaks</name><argument_list pos:start="47:28" pos:end="47:35">(<argument pos:start="47:29" pos:end="47:34"><expr pos:start="47:29" pos:end="47:34"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:34">check</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="55:9"><if pos:start="51:9" pos:end="55:9">if <condition pos:start="51:12" pos:end="51:16">(<expr pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">fix</name></expr>)</condition> <block pos:start="51:18" pos:end="55:9">{<block_content pos:start="53:13" pos:end="53:44">

            <expr_stmt pos:start="53:13" pos:end="53:44"><expr pos:start="53:13" pos:end="53:43"><call pos:start="53:13" pos:end="53:43"><name pos:start="53:13" pos:end="53:32">qed_check_mark_clean</name><argument_list pos:start="53:33" pos:end="53:43">(<argument pos:start="53:34" pos:end="53:34"><expr pos:start="53:34" pos:end="53:34"><name pos:start="53:34" pos:end="53:34">s</name></expr></argument>, <argument pos:start="53:37" pos:end="53:42"><expr pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:42">result</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:32"><expr pos:start="61:5" pos:end="61:31"><call pos:start="61:5" pos:end="61:31"><name pos:start="61:5" pos:end="61:10">g_free</name><argument_list pos:start="61:11" pos:end="61:31">(<argument pos:start="61:12" pos:end="61:30"><expr pos:start="61:12" pos:end="61:30"><name pos:start="61:12" pos:end="61:30"><name pos:start="61:12" pos:end="61:16">check</name><operator pos:start="61:17" pos:end="61:17">.</operator><name pos:start="61:18" pos:end="61:30">used_clusters</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
