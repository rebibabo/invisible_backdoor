<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2575.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:2"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">alloc_cluster_link_l2</name><parameter_list pos:start="1:33" pos:end="3:22">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:78"><decl pos:start="1:56" pos:end="1:78"><type pos:start="1:56" pos:end="1:78"><name pos:start="1:56" pos:end="1:63">uint64_t</name></type> <name pos:start="1:65" pos:end="1:78">cluster_offset</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:21"><decl pos:start="3:9" pos:end="3:21"><type pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:18">QCowL2Meta</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier></type><name pos:start="3:21" pos:end="3:21">m</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:2">{<block_content pos:start="7:5" pos:end="105:15">

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">BDRVQcowState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:33">= <expr pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:33"><name pos:start="7:24" pos:end="7:25">bs</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name> <init pos:start="9:14" pos:end="9:16">= <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr></init></decl>, <decl pos:start="9:19" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:19" pos:end="9:26">l2_index</name></decl>, <decl pos:start="9:29" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:31">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:60"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint64_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:25">old_cluster</name></decl>, <decl pos:start="11:28" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:28" pos:end="11:37">start_sect</name></decl>, <decl pos:start="11:40" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:14"/><name pos:start="11:40" pos:end="11:48">l2_offset</name></decl>, <decl pos:start="11:51" pos:end="11:59"><type ref="prev" pos:start="11:5" pos:end="11:14"><modifier pos:start="11:51" pos:end="11:51">*</modifier></type><name pos:start="11:52" pos:end="11:59">l2_table</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:28">(<expr pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:9">m</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">nb_clusters</name></name> <operator pos:start="15:24" pos:end="15:25">==</operator> <literal type="number" pos:start="15:27" pos:end="15:27">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:15">old_cluster</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:64"><name pos:start="21:19" pos:end="21:29">qemu_malloc</name><argument_list pos:start="21:30" pos:end="21:64">(<argument pos:start="21:31" pos:end="21:63"><expr pos:start="21:31" pos:end="21:63"><name pos:start="21:31" pos:end="21:44"><name pos:start="21:31" pos:end="21:31">m</name><operator pos:start="21:32" pos:end="21:33">-&gt;</operator><name pos:start="21:34" pos:end="21:44">nb_clusters</name></name> <operator pos:start="21:46" pos:end="21:46">*</operator> <sizeof pos:start="21:48" pos:end="21:63">sizeof<argument_list pos:start="21:54" pos:end="21:63">(<argument pos:start="21:55" pos:end="21:62"><expr pos:start="21:55" pos:end="21:62"><name pos:start="21:55" pos:end="21:62">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:44">/* copy content of unmodified sectors */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:59"><expr pos:start="27:5" pos:end="27:58"><name pos:start="27:5" pos:end="27:14">start_sect</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:27"><name pos:start="27:19" pos:end="27:19">m</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">offset</name></name> <operator pos:start="27:29" pos:end="27:29">&amp;</operator> <operator pos:start="27:31" pos:end="27:31">~</operator><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:47"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:47">cluster_size</name></name> <operator pos:start="27:49" pos:end="27:49">-</operator> <literal type="number" pos:start="27:51" pos:end="27:51">1</literal><operator pos:start="27:52" pos:end="27:52">)</operator><operator pos:start="27:53" pos:end="27:53">)</operator> <operator pos:start="27:55" pos:end="27:56">&gt;&gt;</operator> <literal type="number" pos:start="27:58" pos:end="27:58">9</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:9">m</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">n_start</name></name></expr>)</condition> <block pos:start="29:21" pos:end="37:5">{<block_content pos:start="31:9" pos:end="35:21">

        <expr_stmt pos:start="31:9" pos:end="31:74"><expr pos:start="31:9" pos:end="31:73"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:73"><name pos:start="31:15" pos:end="31:26">copy_sectors</name><argument_list pos:start="31:27" pos:end="31:73">(<argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">bs</name></expr></argument>, <argument pos:start="31:32" pos:end="31:41"><expr pos:start="31:32" pos:end="31:41"><name pos:start="31:32" pos:end="31:41">start_sect</name></expr></argument>, <argument pos:start="31:44" pos:end="31:57"><expr pos:start="31:44" pos:end="31:57"><name pos:start="31:44" pos:end="31:57">cluster_offset</name></expr></argument>, <argument pos:start="31:60" pos:end="31:60"><expr pos:start="31:60" pos:end="31:60"><literal type="number" pos:start="31:60" pos:end="31:60">0</literal></expr></argument>, <argument pos:start="31:63" pos:end="31:72"><expr pos:start="31:63" pos:end="31:72"><name pos:start="31:63" pos:end="31:72"><name pos:start="31:63" pos:end="31:63">m</name><operator pos:start="31:64" pos:end="31:65">-&gt;</operator><name pos:start="31:66" pos:end="31:72">n_start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:21"><if pos:start="33:9" pos:end="35:21">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:21"><block_content pos:start="35:13" pos:end="35:21">

            <goto pos:start="35:13" pos:end="35:21">goto <name pos:start="35:18" pos:end="35:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="53:5"><if pos:start="41:5" pos:end="53:5">if <condition pos:start="41:8" pos:end="41:51">(<expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:9">m</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:23">nb_available</name></name> <operator pos:start="41:25" pos:end="41:25">&amp;</operator> <operator pos:start="41:27" pos:end="41:27">(</operator><name pos:start="41:28" pos:end="41:45"><name pos:start="41:28" pos:end="41:28">s</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:45">cluster_sectors</name></name> <operator pos:start="41:47" pos:end="41:47">-</operator> <literal type="number" pos:start="41:49" pos:end="41:49">1</literal><operator pos:start="41:50" pos:end="41:50">)</operator></expr>)</condition> <block pos:start="41:53" pos:end="53:5">{<block_content pos:start="43:9" pos:end="51:21">

        <decl_stmt pos:start="43:9" pos:end="43:77"><decl pos:start="43:9" pos:end="43:76"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint64_t</name></type> <name pos:start="43:18" pos:end="43:20">end</name> <init pos:start="43:22" pos:end="43:76">= <expr pos:start="43:24" pos:end="43:76"><name pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:24">m</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:38">nb_available</name></name> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <operator pos:start="43:42" pos:end="43:42">~</operator><operator pos:start="43:43" pos:end="43:43">(</operator><name pos:start="43:44" pos:end="43:51">uint64_t</name><operator pos:start="43:52" pos:end="43:52">)</operator><operator pos:start="43:53" pos:end="43:53">(</operator><name pos:start="43:54" pos:end="43:71"><name pos:start="43:54" pos:end="43:54">s</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:71">cluster_sectors</name></name> <operator pos:start="43:73" pos:end="43:73">-</operator> <literal type="number" pos:start="43:75" pos:end="43:75">1</literal><operator pos:start="43:76" pos:end="43:76">)</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:59"><expr pos:start="45:9" pos:end="47:58"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="47:58"><name pos:start="45:15" pos:end="45:26">copy_sectors</name><argument_list pos:start="45:27" pos:end="47:58">(<argument pos:start="45:28" pos:end="45:29"><expr pos:start="45:28" pos:end="45:29"><name pos:start="45:28" pos:end="45:29">bs</name></expr></argument>, <argument pos:start="45:32" pos:end="45:47"><expr pos:start="45:32" pos:end="45:47"><name pos:start="45:32" pos:end="45:41">start_sect</name> <operator pos:start="45:43" pos:end="45:43">+</operator> <name pos:start="45:45" pos:end="45:47">end</name></expr></argument>, <argument pos:start="45:50" pos:end="45:76"><expr pos:start="45:50" pos:end="45:76"><name pos:start="45:50" pos:end="45:63">cluster_offset</name> <operator pos:start="45:65" pos:end="45:65">+</operator> <operator pos:start="45:67" pos:end="45:67">(</operator><name pos:start="45:68" pos:end="45:70">end</name> <operator pos:start="45:72" pos:end="45:73">&lt;&lt;</operator> <literal type="number" pos:start="45:75" pos:end="45:75">9</literal><operator pos:start="45:76" pos:end="45:76">)</operator></expr></argument>,

                <argument pos:start="47:17" pos:end="47:37"><expr pos:start="47:17" pos:end="47:37"><name pos:start="47:17" pos:end="47:31"><name pos:start="47:17" pos:end="47:17">m</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:31">nb_available</name></name> <operator pos:start="47:33" pos:end="47:33">-</operator> <name pos:start="47:35" pos:end="47:37">end</name></expr></argument>, <argument pos:start="47:40" pos:end="47:57"><expr pos:start="47:40" pos:end="47:57"><name pos:start="47:40" pos:end="47:57"><name pos:start="47:40" pos:end="47:40">s</name><operator pos:start="47:41" pos:end="47:42">-&gt;</operator><name pos:start="47:43" pos:end="47:57">cluster_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <goto pos:start="51:13" pos:end="51:21">goto <name pos:start="51:18" pos:end="51:20">err</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:15"><expr pos:start="57:5" pos:end="57:14"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <operator pos:start="57:11" pos:end="57:11">-</operator><name pos:start="57:12" pos:end="57:14">EIO</name></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:25">/* update L2 table */</comment>

    <if_stmt pos:start="61:5" pos:end="63:17"><if pos:start="61:5" pos:end="63:17">if <condition pos:start="61:8" pos:end="61:76">(<expr pos:start="61:9" pos:end="61:75"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:75"><name pos:start="61:10" pos:end="61:26">get_cluster_table</name><argument_list pos:start="61:27" pos:end="61:75">(<argument pos:start="61:28" pos:end="61:29"><expr pos:start="61:28" pos:end="61:29"><name pos:start="61:28" pos:end="61:29">bs</name></expr></argument>, <argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:32">m</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:40">offset</name></name></expr></argument>, <argument pos:start="61:43" pos:end="61:51"><expr pos:start="61:43" pos:end="61:51"><operator pos:start="61:43" pos:end="61:43">&amp;</operator><name pos:start="61:44" pos:end="61:51">l2_table</name></expr></argument>, <argument pos:start="61:54" pos:end="61:63"><expr pos:start="61:54" pos:end="61:63"><operator pos:start="61:54" pos:end="61:54">&amp;</operator><name pos:start="61:55" pos:end="61:63">l2_offset</name></expr></argument>, <argument pos:start="61:66" pos:end="61:74"><expr pos:start="61:66" pos:end="61:74"><operator pos:start="61:66" pos:end="61:66">&amp;</operator><name pos:start="61:67" pos:end="61:74">l2_index</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:17"><block_content pos:start="63:9" pos:end="63:17">

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">err</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="67:5" pos:end="79:6">for <control pos:start="67:9" pos:end="67:40">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:35"><expr pos:start="67:17" pos:end="67:34"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <name pos:start="67:21" pos:end="67:34"><name pos:start="67:21" pos:end="67:21">m</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:34">nb_clusters</name></name></expr>;</condition> <incr pos:start="67:37" pos:end="67:39"><expr pos:start="67:37" pos:end="67:39"><name pos:start="67:37" pos:end="67:37">i</name><operator pos:start="67:38" pos:end="67:39">++</operator></expr></incr>)</control> <block pos:start="67:42" pos:end="79:6">{<block_content pos:start="69:9" pos:end="77:65">

        <if_stmt pos:start="69:9" pos:end="71:54"><if pos:start="69:9" pos:end="71:54">if<condition pos:start="69:11" pos:end="69:39">(<expr pos:start="69:12" pos:end="69:38"><name pos:start="69:12" pos:end="69:33"><name pos:start="69:12" pos:end="69:19">l2_table</name><index pos:start="69:20" pos:end="69:33">[<expr pos:start="69:21" pos:end="69:32"><name pos:start="69:21" pos:end="69:28">l2_index</name> <operator pos:start="69:30" pos:end="69:30">+</operator> <name pos:start="69:32" pos:end="69:32">i</name></expr>]</index></name> <operator pos:start="69:35" pos:end="69:36">!=</operator> <literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:54"><block_content pos:start="71:13" pos:end="71:54">

            <expr_stmt pos:start="71:13" pos:end="71:54"><expr pos:start="71:13" pos:end="71:53"><name pos:start="71:13" pos:end="71:28"><name pos:start="71:13" pos:end="71:23">old_cluster</name><index pos:start="71:24" pos:end="71:28">[<expr pos:start="71:25" pos:end="71:27"><name pos:start="71:25" pos:end="71:25">j</name><operator pos:start="71:26" pos:end="71:27">++</operator></expr>]</index></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:53"><name pos:start="71:32" pos:end="71:39">l2_table</name><index pos:start="71:40" pos:end="71:53">[<expr pos:start="71:41" pos:end="71:52"><name pos:start="71:41" pos:end="71:48">l2_index</name> <operator pos:start="71:50" pos:end="71:50">+</operator> <name pos:start="71:52" pos:end="71:52">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="77:65"><expr pos:start="75:9" pos:end="77:64"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:16">l2_table</name><index pos:start="75:17" pos:end="75:30">[<expr pos:start="75:18" pos:end="75:29"><name pos:start="75:18" pos:end="75:25">l2_index</name> <operator pos:start="75:27" pos:end="75:27">+</operator> <name pos:start="75:29" pos:end="75:29">i</name></expr>]</index></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <call pos:start="75:34" pos:end="77:64"><name pos:start="75:34" pos:end="75:44">cpu_to_be64</name><argument_list pos:start="75:45" pos:end="77:64">(<argument pos:start="75:46" pos:end="77:63"><expr pos:start="75:46" pos:end="77:63"><operator pos:start="75:46" pos:end="75:46">(</operator><name pos:start="75:47" pos:end="75:60">cluster_offset</name> <operator pos:start="75:62" pos:end="75:62">+</operator>

                    <operator pos:start="77:21" pos:end="77:21">(</operator><name pos:start="77:22" pos:end="77:22">i</name> <operator pos:start="77:24" pos:end="77:25">&lt;&lt;</operator> <name pos:start="77:27" pos:end="77:41"><name pos:start="77:27" pos:end="77:27">s</name><operator pos:start="77:28" pos:end="77:29">-&gt;</operator><name pos:start="77:30" pos:end="77:41">cluster_bits</name></name><operator pos:start="77:42" pos:end="77:42">)</operator><operator pos:start="77:43" pos:end="77:43">)</operator> <operator pos:start="77:45" pos:end="77:45">|</operator> <name pos:start="77:47" pos:end="77:63">QCOW_OFLAG_COPIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

     </block_content>}</block></for>



    <if_stmt pos:start="83:5" pos:end="89:17"><if pos:start="83:5" pos:end="89:17">if <condition pos:start="83:8" pos:end="87:46">(<expr pos:start="83:9" pos:end="87:45"><call pos:start="83:9" pos:end="85:71"><name pos:start="83:9" pos:end="83:19">bdrv_pwrite</name><argument_list pos:start="83:20" pos:end="85:71">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">hd</name></name></expr></argument>, <argument pos:start="83:28" pos:end="83:66"><expr pos:start="83:28" pos:end="83:66"><name pos:start="83:28" pos:end="83:36">l2_offset</name> <operator pos:start="83:38" pos:end="83:38">+</operator> <name pos:start="83:40" pos:end="83:47">l2_index</name> <operator pos:start="83:49" pos:end="83:49">*</operator> <sizeof pos:start="83:51" pos:end="83:66">sizeof<argument_list pos:start="83:57" pos:end="83:66">(<argument pos:start="83:58" pos:end="83:65"><expr pos:start="83:58" pos:end="83:65"><name pos:start="83:58" pos:end="83:65">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="85:17" pos:end="85:35"><expr pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:24">l2_table</name> <operator pos:start="85:26" pos:end="85:26">+</operator> <name pos:start="85:28" pos:end="85:35">l2_index</name></expr></argument>, <argument pos:start="85:38" pos:end="85:70"><expr pos:start="85:38" pos:end="85:70"><name pos:start="85:38" pos:end="85:51"><name pos:start="85:38" pos:end="85:38">m</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:51">nb_clusters</name></name> <operator pos:start="85:53" pos:end="85:53">*</operator> <sizeof pos:start="85:55" pos:end="85:70">sizeof<argument_list pos:start="85:61" pos:end="85:70">(<argument pos:start="85:62" pos:end="85:69"><expr pos:start="85:62" pos:end="85:69"><name pos:start="85:62" pos:end="85:69">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="85:73" pos:end="85:74">!=</operator>

            <name pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:13">m</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:26">nb_clusters</name></name> <operator pos:start="87:28" pos:end="87:28">*</operator> <sizeof pos:start="87:30" pos:end="87:45">sizeof<argument_list pos:start="87:36" pos:end="87:45">(<argument pos:start="87:37" pos:end="87:44"><expr pos:start="87:37" pos:end="87:44"><name pos:start="87:37" pos:end="87:44">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:17"><block_content pos:start="89:9" pos:end="89:17">

        <goto pos:start="89:9" pos:end="89:17">goto <name pos:start="89:14" pos:end="89:16">err</name>;</goto></block_content></block></if></if_stmt>



    <for pos:start="93:5" pos:end="95:49">for <control pos:start="93:9" pos:end="93:27">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:22"><expr pos:start="93:17" pos:end="93:21"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:21">j</name></expr>;</condition> <incr pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:24">i</name><operator pos:start="93:25" pos:end="93:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="95:9" pos:end="95:49"><block_content pos:start="95:9" pos:end="95:49">

        <expr_stmt pos:start="95:9" pos:end="95:49"><expr pos:start="95:9" pos:end="95:48"><call pos:start="95:9" pos:end="95:48"><name pos:start="95:9" pos:end="95:25">free_any_clusters</name><argument_list pos:start="95:26" pos:end="95:48">(<argument pos:start="95:27" pos:end="95:28"><expr pos:start="95:27" pos:end="95:28"><name pos:start="95:27" pos:end="95:28">bs</name></expr></argument>, <argument pos:start="95:31" pos:end="95:44"><expr pos:start="95:31" pos:end="95:44"><name pos:start="95:31" pos:end="95:44"><name pos:start="95:31" pos:end="95:41">old_cluster</name><index pos:start="95:42" pos:end="95:44">[<expr pos:start="95:43" pos:end="95:43"><name pos:start="95:43" pos:end="95:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="95:47" pos:end="95:47"><expr pos:start="95:47" pos:end="95:47"><literal type="number" pos:start="95:47" pos:end="95:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="99:5" pos:end="99:12"><expr pos:start="99:5" pos:end="99:11"><name pos:start="99:5" pos:end="99:7">ret</name> <operator pos:start="99:9" pos:end="99:9">=</operator> <literal type="number" pos:start="99:11" pos:end="99:11">0</literal></expr>;</expr_stmt>

<label pos:start="101:1" pos:end="101:4"><name pos:start="101:1" pos:end="101:3">err</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:27"><expr pos:start="103:5" pos:end="103:26"><call pos:start="103:5" pos:end="103:26"><name pos:start="103:5" pos:end="103:13">qemu_free</name><argument_list pos:start="103:14" pos:end="103:26">(<argument pos:start="103:15" pos:end="103:25"><expr pos:start="103:15" pos:end="103:25"><name pos:start="103:15" pos:end="103:25">old_cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:15">return <expr pos:start="105:12" pos:end="105:14"><name pos:start="105:12" pos:end="105:14">ret</name></expr>;</return>

 </block_content>}</block></function>
</unit>
