<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16922.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:36">vmsvga_fifo_length</name><parameter_list pos:start="1:37" pos:end="1:62">(<parameter pos:start="1:38" pos:end="1:61"><decl pos:start="1:38" pos:end="1:61"><type pos:start="1:38" pos:end="1:61"><name pos:start="1:38" pos:end="1:58"><name pos:start="1:38" pos:end="1:43">struct</name> <name pos:start="1:45" pos:end="1:58">vmsvga_state_s</name></name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:20">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">num</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:33">(<expr pos:start="9:9" pos:end="9:32"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:18"><name pos:start="9:10" pos:end="9:10">s</name><operator pos:start="9:11" pos:end="9:12">-&gt;</operator><name pos:start="9:13" pos:end="9:18">config</name></name> <operator pos:start="9:20" pos:end="9:21">||</operator> <operator pos:start="9:23" pos:end="9:23">!</operator><name pos:start="9:24" pos:end="9:32"><name pos:start="9:24" pos:end="9:24">s</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:32">enable</name></name></expr>)</condition> <block pos:start="9:35" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:17">

        <return pos:start="11:9" pos:end="11:17">return <expr pos:start="11:16" pos:end="11:16"><literal type="number" pos:start="11:16" pos:end="11:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:37">/* Check range and alignment.  */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:62">(<expr pos:start="19:9" pos:end="19:61"><operator pos:start="19:9" pos:end="19:9">(</operator><call pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:12">CMD</name><argument_list pos:start="19:13" pos:end="19:17">(<argument pos:start="19:14" pos:end="19:16"><expr pos:start="19:14" pos:end="19:16"><name pos:start="19:14" pos:end="19:16">min</name></expr></argument>)</argument_list></call> <operator pos:start="19:19" pos:end="19:19">|</operator> <call pos:start="19:21" pos:end="19:28"><name pos:start="19:21" pos:end="19:23">CMD</name><argument_list pos:start="19:24" pos:end="19:28">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">max</name></expr></argument>)</argument_list></call> <operator pos:start="19:30" pos:end="19:30">|</operator> <call pos:start="19:32" pos:end="19:44"><name pos:start="19:32" pos:end="19:34">CMD</name><argument_list pos:start="19:35" pos:end="19:44">(<argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:43">next_cmd</name></expr></argument>)</argument_list></call> <operator pos:start="19:46" pos:end="19:46">|</operator> <call pos:start="19:48" pos:end="19:56"><name pos:start="19:48" pos:end="19:50">CMD</name><argument_list pos:start="19:51" pos:end="19:56">(<argument pos:start="19:52" pos:end="19:55"><expr pos:start="19:52" pos:end="19:55"><name pos:start="19:52" pos:end="19:55">stop</name></expr></argument>)</argument_list></call><operator pos:start="19:57" pos:end="19:57">)</operator> <operator pos:start="19:59" pos:end="19:59">&amp;</operator> <literal type="number" pos:start="19:61" pos:end="19:61">3</literal></expr>)</condition> <block pos:start="19:64" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:17">

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:66">(<expr pos:start="25:9" pos:end="25:65"><call pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">CMD</name><argument_list pos:start="25:12" pos:end="25:16">(<argument pos:start="25:13" pos:end="25:15"><expr pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">min</name></expr></argument>)</argument_list></call> <operator pos:start="25:18" pos:end="25:18">&lt;</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:27">uint8_t</name> <operator pos:start="25:29" pos:end="25:29">*</operator><operator pos:start="25:30" pos:end="25:30">)</operator> <name pos:start="25:32" pos:end="25:43"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:37">cmd</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:43">fifo</name></name> <operator pos:start="25:45" pos:end="25:45">-</operator> <operator pos:start="25:47" pos:end="25:47">(</operator><name pos:start="25:48" pos:end="25:54">uint8_t</name> <operator pos:start="25:56" pos:end="25:56">*</operator><operator pos:start="25:57" pos:end="25:57">)</operator> <name pos:start="25:59" pos:end="25:65"><name pos:start="25:59" pos:end="25:59">s</name><operator pos:start="25:60" pos:end="25:61">-&gt;</operator><name pos:start="25:62" pos:end="25:65">fifo</name></name></expr>)</condition> <block pos:start="25:68" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="37:40">(<expr pos:start="31:9" pos:end="37:39"><call pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:11">CMD</name><argument_list pos:start="31:12" pos:end="31:16">(<argument pos:start="31:13" pos:end="31:15"><expr pos:start="31:13" pos:end="31:15"><name pos:start="31:13" pos:end="31:15">max</name></expr></argument>)</argument_list></call> <operator pos:start="31:18" pos:end="31:18">&gt;</operator> <name pos:start="31:20" pos:end="31:33">SVGA_FIFO_SIZE</name> <operator pos:start="31:35" pos:end="31:36">||</operator>

        <call pos:start="33:9" pos:end="33:16"><name pos:start="33:9" pos:end="33:11">CMD</name><argument_list pos:start="33:12" pos:end="33:16">(<argument pos:start="33:13" pos:end="33:15"><expr pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">min</name></expr></argument>)</argument_list></call> <operator pos:start="33:18" pos:end="33:19">&gt;=</operator> <name pos:start="33:21" pos:end="33:34">SVGA_FIFO_SIZE</name> <operator pos:start="33:36" pos:end="33:37">||</operator>

        <call pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:11">CMD</name><argument_list pos:start="35:12" pos:end="35:17">(<argument pos:start="35:13" pos:end="35:16"><expr pos:start="35:13" pos:end="35:16"><name pos:start="35:13" pos:end="35:16">stop</name></expr></argument>)</argument_list></call> <operator pos:start="35:19" pos:end="35:20">&gt;=</operator> <name pos:start="35:22" pos:end="35:35">SVGA_FIFO_SIZE</name> <operator pos:start="35:37" pos:end="35:38">||</operator>

        <call pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:11">CMD</name><argument_list pos:start="37:12" pos:end="37:21">(<argument pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">next_cmd</name></expr></argument>)</argument_list></call> <operator pos:start="37:23" pos:end="37:24">&gt;=</operator> <name pos:start="37:26" pos:end="37:39">SVGA_FIFO_SIZE</name></expr>)</condition> <block pos:start="37:42" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:17">

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="47:5"><if pos:start="43:5" pos:end="47:5">if <condition pos:start="43:8" pos:end="43:40">(<expr pos:start="43:9" pos:end="43:39"><call pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">CMD</name><argument_list pos:start="43:12" pos:end="43:16">(<argument pos:start="43:13" pos:end="43:15"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">max</name></expr></argument>)</argument_list></call> <operator pos:start="43:18" pos:end="43:18">&lt;</operator> <call pos:start="43:20" pos:end="43:27"><name pos:start="43:20" pos:end="43:22">CMD</name><argument_list pos:start="43:23" pos:end="43:27">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">min</name></expr></argument>)</argument_list></call> <operator pos:start="43:29" pos:end="43:29">+</operator> <literal type="number" pos:start="43:31" pos:end="43:32">10</literal> <operator pos:start="43:34" pos:end="43:34">*</operator> <literal type="number" pos:start="43:36" pos:end="43:39">1024</literal></expr>)</condition> <block pos:start="43:42" pos:end="47:5">{<block_content pos:start="45:9" pos:end="45:17">

        <return pos:start="45:9" pos:end="45:17">return <expr pos:start="45:16" pos:end="45:16"><literal type="number" pos:start="45:16" pos:end="45:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:7">num</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:23"><name pos:start="51:11" pos:end="51:13">CMD</name><argument_list pos:start="51:14" pos:end="51:23">(<argument pos:start="51:15" pos:end="51:22"><expr pos:start="51:15" pos:end="51:22"><name pos:start="51:15" pos:end="51:22">next_cmd</name></expr></argument>)</argument_list></call> <operator pos:start="51:25" pos:end="51:25">-</operator> <call pos:start="51:27" pos:end="51:35"><name pos:start="51:27" pos:end="51:29">CMD</name><argument_list pos:start="51:30" pos:end="51:35">(<argument pos:start="51:31" pos:end="51:34"><expr pos:start="51:31" pos:end="51:34"><name pos:start="51:31" pos:end="51:34">stop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">num</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition> <block pos:start="53:18" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:35">

        <expr_stmt pos:start="55:9" pos:end="55:35"><expr pos:start="55:9" pos:end="55:34"><name pos:start="55:9" pos:end="55:11">num</name> <operator pos:start="55:13" pos:end="55:14">+=</operator> <call pos:start="55:16" pos:end="55:23"><name pos:start="55:16" pos:end="55:18">CMD</name><argument_list pos:start="55:19" pos:end="55:23">(<argument pos:start="55:20" pos:end="55:22"><expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">max</name></expr></argument>)</argument_list></call> <operator pos:start="55:25" pos:end="55:25">-</operator> <call pos:start="55:27" pos:end="55:34"><name pos:start="55:27" pos:end="55:29">CMD</name><argument_list pos:start="55:30" pos:end="55:34">(<argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><name pos:start="55:31" pos:end="55:33">min</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:20">return <expr pos:start="59:12" pos:end="59:19"><name pos:start="59:12" pos:end="59:14">num</name> <operator pos:start="59:16" pos:end="59:17">&gt;&gt;</operator> <literal type="number" pos:start="59:19" pos:end="59:19">2</literal></expr>;</return>

</block_content>}</block></function>
</unit>
