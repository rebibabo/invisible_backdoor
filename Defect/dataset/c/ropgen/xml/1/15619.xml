<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15619.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">aac_decode_frame</name><parameter_list pos:start="1:28" pos:end="2:64">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>,
                            <parameter pos:start="2:29" pos:end="2:46"><decl pos:start="2:29" pos:end="2:46"><type pos:start="2:29" pos:end="2:46"><name pos:start="2:29" pos:end="2:31">int</name> <modifier pos:start="2:33" pos:end="2:33">*</modifier></type><name pos:start="2:34" pos:end="2:46">got_frame_ptr</name></decl></parameter>, <parameter pos:start="2:49" pos:end="2:63"><decl pos:start="2:49" pos:end="2:63"><type pos:start="2:49" pos:end="2:63"><name pos:start="2:49" pos:end="2:56">AVPacket</name> <modifier pos:start="2:58" pos:end="2:58">*</modifier></type><name pos:start="2:59" pos:end="2:63">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="4:5" pos:end="46:59">
    <decl_stmt pos:start="4:5" pos:end="4:38"><decl pos:start="4:5" pos:end="4:37"><type pos:start="4:5" pos:end="4:16"><name pos:start="4:5" pos:end="4:14">AACContext</name> <modifier pos:start="4:16" pos:end="4:16">*</modifier></type><name pos:start="4:17" pos:end="4:18">ac</name> <init pos:start="4:20" pos:end="4:37">= <expr pos:start="4:22" pos:end="4:37"><name pos:start="4:22" pos:end="4:37"><name pos:start="4:22" pos:end="4:26">avctx</name><operator pos:start="4:27" pos:end="4:28">-&gt;</operator><name pos:start="4:29" pos:end="4:37">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">buf</name> <init pos:start="5:24" pos:end="5:36">= <expr pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:30">avpkt</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:36">data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:31"><decl pos:start="6:5" pos:end="6:30"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:16">buf_size</name> <init pos:start="6:18" pos:end="6:30">= <expr pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:30"><name pos:start="6:20" pos:end="6:24">avpkt</name><operator pos:start="6:25" pos:end="6:26">-&gt;</operator><name pos:start="6:27" pos:end="6:30">size</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">GetBitContext</name></type> <name pos:start="7:19" pos:end="7:20">gb</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:21"><decl pos:start="8:5" pos:end="8:20"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:20">buf_consumed</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:18">buf_offset</name></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:12"><decl pos:start="10:5" pos:end="10:11"><type pos:start="10:5" pos:end="10:7"><name pos:start="10:5" pos:end="10:7">int</name></type> <name pos:start="10:9" pos:end="10:11">err</name></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:26">new_extradata_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="12:5" pos:end="14:60"><decl pos:start="12:5" pos:end="14:59"><type pos:start="12:5" pos:end="12:19"><specifier pos:start="12:5" pos:end="12:9">const</specifier> <name pos:start="12:11" pos:end="12:17">uint8_t</name> <modifier pos:start="12:19" pos:end="12:19">*</modifier></type><name pos:start="12:20" pos:end="12:32">new_extradata</name> <init pos:start="12:34" pos:end="14:59">= <expr pos:start="12:36" pos:end="14:59"><call pos:start="12:36" pos:end="14:59"><name pos:start="12:36" pos:end="12:58">av_packet_get_side_data</name><argument_list pos:start="12:59" pos:end="14:59">(<argument pos:start="12:60" pos:end="12:64"><expr pos:start="12:60" pos:end="12:64"><name pos:start="12:60" pos:end="12:64">avpkt</name></expr></argument>,
                                       <argument pos:start="13:40" pos:end="13:64"><expr pos:start="13:40" pos:end="13:64"><name pos:start="13:40" pos:end="13:64">AV_PKT_DATA_NEW_EXTRADATA</name></expr></argument>,
                                       <argument pos:start="14:40" pos:end="14:58"><expr pos:start="14:40" pos:end="14:58"><operator pos:start="14:40" pos:end="14:40">&amp;</operator><name pos:start="14:41" pos:end="14:58">new_extradata_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:24">jp_dualmono_size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="16:5" pos:end="18:58"><decl pos:start="16:5" pos:end="18:57"><type pos:start="16:5" pos:end="16:19"><specifier pos:start="16:5" pos:end="16:9">const</specifier> <name pos:start="16:11" pos:end="16:17">uint8_t</name> <modifier pos:start="16:19" pos:end="16:19">*</modifier></type><name pos:start="16:20" pos:end="16:30">jp_dualmono</name>   <init pos:start="16:34" pos:end="18:57">= <expr pos:start="16:36" pos:end="18:57"><call pos:start="16:36" pos:end="18:57"><name pos:start="16:36" pos:end="16:58">av_packet_get_side_data</name><argument_list pos:start="16:59" pos:end="18:57">(<argument pos:start="16:60" pos:end="16:64"><expr pos:start="16:60" pos:end="16:64"><name pos:start="16:60" pos:end="16:64">avpkt</name></expr></argument>,
                                       <argument pos:start="17:40" pos:end="17:62"><expr pos:start="17:40" pos:end="17:62"><name pos:start="17:40" pos:end="17:62">AV_PKT_DATA_JP_DUALMONO</name></expr></argument>,
                                       <argument pos:start="18:40" pos:end="18:56"><expr pos:start="18:40" pos:end="18:56"><operator pos:start="18:40" pos:end="18:40">&amp;</operator><name pos:start="18:41" pos:end="18:56">jp_dualmono_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="19:5" pos:end="33:5"><if pos:start="19:5" pos:end="33:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:21">new_extradata</name> <operator pos:start="19:23" pos:end="19:24">&amp;&amp;</operator> <literal type="number" pos:start="19:26" pos:end="19:26">0</literal></expr>)</condition> <block pos:start="19:29" pos:end="33:5">{<block_content pos:start="20:9" pos:end="32:9">
        <expr_stmt pos:start="20:9" pos:end="20:34"><expr pos:start="20:9" pos:end="20:33"><call pos:start="20:9" pos:end="20:33"><name pos:start="20:9" pos:end="20:15">av_free</name><argument_list pos:start="20:16" pos:end="20:33">(<argument pos:start="20:17" pos:end="20:32"><expr pos:start="20:17" pos:end="20:32"><name pos:start="20:17" pos:end="20:32"><name pos:start="20:17" pos:end="20:21">avctx</name><operator pos:start="20:22" pos:end="20:23">-&gt;</operator><name pos:start="20:24" pos:end="20:32">extradata</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="21:9" pos:end="22:68"><expr pos:start="21:9" pos:end="22:67"><name pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:24">extradata</name></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <call pos:start="21:28" pos:end="22:67"><name pos:start="21:28" pos:end="21:37">av_mallocz</name><argument_list pos:start="21:38" pos:end="22:67">(<argument pos:start="21:39" pos:end="22:66"><expr pos:start="21:39" pos:end="22:66"><name pos:start="21:39" pos:end="21:56">new_extradata_size</name> <operator pos:start="21:58" pos:end="21:58">+</operator>
                                      <name pos:start="22:39" pos:end="22:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="23:9" pos:end="24:35"><if pos:start="23:9" pos:end="24:35">if <condition pos:start="23:12" pos:end="23:30">(<expr pos:start="23:13" pos:end="23:29"><operator pos:start="23:13" pos:end="23:13">!</operator><name pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:18">avctx</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:29">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="24:13" pos:end="24:35"><block_content pos:start="24:13" pos:end="24:35">
            <return pos:start="24:13" pos:end="24:35">return <expr pos:start="24:20" pos:end="24:34"><call pos:start="24:20" pos:end="24:34"><name pos:start="24:20" pos:end="24:26">AVERROR</name><argument_list pos:start="24:27" pos:end="24:34">(<argument pos:start="24:28" pos:end="24:33"><expr pos:start="24:28" pos:end="24:33"><name pos:start="24:28" pos:end="24:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:51"><expr pos:start="25:9" pos:end="25:50"><name pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:13">avctx</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:29">extradata_size</name></name> <operator pos:start="25:31" pos:end="25:31">=</operator> <name pos:start="25:33" pos:end="25:50">new_extradata_size</name></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:68"><expr pos:start="26:9" pos:end="26:67"><call pos:start="26:9" pos:end="26:67"><name pos:start="26:9" pos:end="26:14">memcpy</name><argument_list pos:start="26:15" pos:end="26:67">(<argument pos:start="26:16" pos:end="26:31"><expr pos:start="26:16" pos:end="26:31"><name pos:start="26:16" pos:end="26:31"><name pos:start="26:16" pos:end="26:20">avctx</name><operator pos:start="26:21" pos:end="26:22">-&gt;</operator><name pos:start="26:23" pos:end="26:31">extradata</name></name></expr></argument>, <argument pos:start="26:34" pos:end="26:46"><expr pos:start="26:34" pos:end="26:46"><name pos:start="26:34" pos:end="26:46">new_extradata</name></expr></argument>, <argument pos:start="26:49" pos:end="26:66"><expr pos:start="26:49" pos:end="26:66"><name pos:start="26:49" pos:end="26:66">new_extradata_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="27:9" pos:end="27:38"><expr pos:start="27:9" pos:end="27:37"><call pos:start="27:9" pos:end="27:37"><name pos:start="27:9" pos:end="27:33">push_output_configuration</name><argument_list pos:start="27:34" pos:end="27:37">(<argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><name pos:start="27:35" pos:end="27:36">ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="28:9" pos:end="32:9"><if pos:start="28:9" pos:end="32:9">if <condition pos:start="28:12" pos:end="30:73">(<expr pos:start="28:13" pos:end="30:72"><call pos:start="28:13" pos:end="30:68"><name pos:start="28:13" pos:end="28:40">decode_audio_specific_config</name><argument_list pos:start="28:41" pos:end="30:68">(<argument pos:start="28:42" pos:end="28:43"><expr pos:start="28:42" pos:end="28:43"><name pos:start="28:42" pos:end="28:43">ac</name></expr></argument>, <argument pos:start="28:46" pos:end="28:54"><expr pos:start="28:46" pos:end="28:54"><name pos:start="28:46" pos:end="28:54"><name pos:start="28:46" pos:end="28:47">ac</name><operator pos:start="28:48" pos:end="28:49">-&gt;</operator><name pos:start="28:50" pos:end="28:54">avctx</name></name></expr></argument>, <argument pos:start="28:57" pos:end="28:71"><expr pos:start="28:57" pos:end="28:71"><operator pos:start="28:57" pos:end="28:57">&amp;</operator><name pos:start="28:58" pos:end="28:66"><name pos:start="28:58" pos:end="28:59">ac</name><operator pos:start="28:60" pos:end="28:61">-&gt;</operator><name pos:start="28:62" pos:end="28:63">oc</name><index pos:start="28:64" pos:end="28:66">[<expr pos:start="28:65" pos:end="28:65"><literal type="number" pos:start="28:65" pos:end="28:65">1</literal></expr>]</index></name><operator pos:start="28:67" pos:end="28:67">.</operator><name pos:start="28:68" pos:end="28:71">m4ac</name></expr></argument>,
                                         <argument pos:start="29:42" pos:end="29:57"><expr pos:start="29:42" pos:end="29:57"><name pos:start="29:42" pos:end="29:57"><name pos:start="29:42" pos:end="29:46">avctx</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:57">extradata</name></name></expr></argument>,
                                         <argument pos:start="30:42" pos:end="30:64"><expr pos:start="30:42" pos:end="30:64"><name pos:start="30:42" pos:end="30:62"><name pos:start="30:42" pos:end="30:46">avctx</name><operator pos:start="30:47" pos:end="30:48">-&gt;</operator><name pos:start="30:49" pos:end="30:62">extradata_size</name></name><operator pos:start="30:63" pos:end="30:63">*</operator><literal type="number" pos:start="30:64" pos:end="30:64">8</literal></expr></argument>, <argument pos:start="30:67" pos:end="30:67"><expr pos:start="30:67" pos:end="30:67"><literal type="number" pos:start="30:67" pos:end="30:67">1</literal></expr></argument>)</argument_list></call> <operator pos:start="30:70" pos:end="30:70">&lt;</operator> <literal type="number" pos:start="30:72" pos:end="30:72">0</literal></expr>)</condition> <block pos:start="30:75" pos:end="32:9">{<block_content pos:start="31:13" pos:end="31:41">
            <expr_stmt pos:start="31:13" pos:end="31:41"><expr pos:start="31:13" pos:end="31:40"><call pos:start="31:13" pos:end="31:40"><name pos:start="31:13" pos:end="31:36">pop_output_configuration</name><argument_list pos:start="31:37" pos:end="31:40">(<argument pos:start="31:38" pos:end="31:39"><expr pos:start="31:38" pos:end="31:39"><name pos:start="31:38" pos:end="31:39">ac</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:23"><expr pos:start="34:5" pos:end="34:22"><name pos:start="34:5" pos:end="34:18"><name pos:start="34:5" pos:end="34:6">ac</name><operator pos:start="34:7" pos:end="34:8">-&gt;</operator><name pos:start="34:9" pos:end="34:18">dmono_mode</name></name> <operator pos:start="34:20" pos:end="34:20">=</operator> <literal type="number" pos:start="34:22" pos:end="34:22">0</literal></expr>;</expr_stmt>
    <if_stmt pos:start="35:5" pos:end="36:43"><if pos:start="35:5" pos:end="36:43">if <condition pos:start="35:8" pos:end="35:44">(<expr pos:start="35:9" pos:end="35:43"><name pos:start="35:9" pos:end="35:19">jp_dualmono</name> <operator pos:start="35:21" pos:end="35:22">&amp;&amp;</operator> <name pos:start="35:24" pos:end="35:39">jp_dualmono_size</name> <operator pos:start="35:41" pos:end="35:41">&gt;</operator> <literal type="number" pos:start="35:43" pos:end="35:43">0</literal></expr>)</condition><block type="pseudo" pos:start="36:9" pos:end="36:43"><block_content pos:start="36:9" pos:end="36:43">
        <expr_stmt pos:start="36:9" pos:end="36:43"><expr pos:start="36:9" pos:end="36:42"><name pos:start="36:9" pos:end="36:22"><name pos:start="36:9" pos:end="36:10">ac</name><operator pos:start="36:11" pos:end="36:12">-&gt;</operator><name pos:start="36:13" pos:end="36:22">dmono_mode</name></name> <operator pos:start="36:24" pos:end="36:24">=</operator>  <literal type="number" pos:start="36:27" pos:end="36:29">1</literal> <operator pos:start="36:29" pos:end="36:29">+</operator> <operator pos:start="36:31" pos:end="36:31">*</operator><name pos:start="36:32" pos:end="36:42">jp_dualmono</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <if_stmt pos:start="37:5" pos:end="38:46"><if pos:start="37:5" pos:end="38:46">if <condition pos:start="37:8" pos:end="37:34">(<expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:10">ac</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:28">force_dmono_mode</name></name> <operator pos:start="37:30" pos:end="37:31">&gt;=</operator> <literal type="number" pos:start="37:33" pos:end="37:33">0</literal></expr>)</condition><block type="pseudo" pos:start="38:9" pos:end="38:46"><block_content pos:start="38:9" pos:end="38:46">
        <expr_stmt pos:start="38:9" pos:end="38:46"><expr pos:start="38:9" pos:end="38:45"><name pos:start="38:9" pos:end="38:22"><name pos:start="38:9" pos:end="38:10">ac</name><operator pos:start="38:11" pos:end="38:12">-&gt;</operator><name pos:start="38:13" pos:end="38:22">dmono_mode</name></name> <operator pos:start="38:24" pos:end="38:24">=</operator> <name pos:start="38:26" pos:end="38:45"><name pos:start="38:26" pos:end="38:27">ac</name><operator pos:start="38:28" pos:end="38:29">-&gt;</operator><name pos:start="38:30" pos:end="38:45">force_dmono_mode</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:17">init_get_bits</name><argument_list pos:start="39:18" pos:end="39:41">(<argument pos:start="39:19" pos:end="39:21"><expr pos:start="39:19" pos:end="39:21"><operator pos:start="39:19" pos:end="39:19">&amp;</operator><name pos:start="39:20" pos:end="39:21">gb</name></expr></argument>, <argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">buf</name></expr></argument>, <argument pos:start="39:29" pos:end="39:40"><expr pos:start="39:29" pos:end="39:40"><name pos:start="39:29" pos:end="39:36">buf_size</name> <operator pos:start="39:38" pos:end="39:38">*</operator> <literal type="number" pos:start="39:40" pos:end="39:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="40:5" pos:end="41:19"><if pos:start="40:5" pos:end="41:19">if <condition pos:start="40:8" pos:end="40:81">(<expr pos:start="40:9" pos:end="40:80"><operator pos:start="40:9" pos:end="40:9">(</operator><name pos:start="40:10" pos:end="40:12">err</name> <operator pos:start="40:14" pos:end="40:14">=</operator> <call pos:start="40:16" pos:end="40:75"><name pos:start="40:16" pos:end="40:35">aac_decode_frame_int</name><argument_list pos:start="40:36" pos:end="40:75">(<argument pos:start="40:37" pos:end="40:41"><expr pos:start="40:37" pos:end="40:41"><name pos:start="40:37" pos:end="40:41">avctx</name></expr></argument>, <argument pos:start="40:44" pos:end="40:47"><expr pos:start="40:44" pos:end="40:47"><name pos:start="40:44" pos:end="40:47">data</name></expr></argument>, <argument pos:start="40:50" pos:end="40:62"><expr pos:start="40:50" pos:end="40:62"><name pos:start="40:50" pos:end="40:62">got_frame_ptr</name></expr></argument>, <argument pos:start="40:65" pos:end="40:67"><expr pos:start="40:65" pos:end="40:67"><operator pos:start="40:65" pos:end="40:65">&amp;</operator><name pos:start="40:66" pos:end="40:67">gb</name></expr></argument>, <argument pos:start="40:70" pos:end="40:74"><expr pos:start="40:70" pos:end="40:74"><name pos:start="40:70" pos:end="40:74">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="40:76" pos:end="40:76">)</operator> <operator pos:start="40:78" pos:end="40:78">&lt;</operator> <literal type="number" pos:start="40:80" pos:end="40:80">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:19"><block_content pos:start="41:9" pos:end="41:19">
        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">err</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:50"><expr pos:start="42:5" pos:end="42:49"><name pos:start="42:5" pos:end="42:16">buf_consumed</name> <operator pos:start="42:18" pos:end="42:18">=</operator> <operator pos:start="42:20" pos:end="42:20">(</operator><call pos:start="42:21" pos:end="42:39"><name pos:start="42:21" pos:end="42:34">get_bits_count</name><argument_list pos:start="42:35" pos:end="42:39">(<argument pos:start="42:36" pos:end="42:38"><expr pos:start="42:36" pos:end="42:38"><operator pos:start="42:36" pos:end="42:36">&amp;</operator><name pos:start="42:37" pos:end="42:38">gb</name></expr></argument>)</argument_list></call> <operator pos:start="42:41" pos:end="42:41">+</operator> <literal type="number" pos:start="42:43" pos:end="42:43">7</literal><operator pos:start="42:44" pos:end="42:44">)</operator> <operator pos:start="42:46" pos:end="42:47">&gt;&gt;</operator> <literal type="number" pos:start="42:49" pos:end="42:49">3</literal></expr>;</expr_stmt>
    <for pos:start="43:5" pos:end="45:18">for <control pos:start="43:9" pos:end="43:72">(<init pos:start="43:10" pos:end="43:35"><expr pos:start="43:10" pos:end="43:34"><name pos:start="43:10" pos:end="43:19">buf_offset</name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:34">buf_consumed</name></expr>;</init> <condition pos:start="43:37" pos:end="43:58"><expr pos:start="43:37" pos:end="43:57"><name pos:start="43:37" pos:end="43:46">buf_offset</name> <operator pos:start="43:48" pos:end="43:48">&lt;</operator> <name pos:start="43:50" pos:end="43:57">buf_size</name></expr>;</condition> <incr pos:start="43:60" pos:end="43:71"><expr pos:start="43:60" pos:end="43:71"><name pos:start="43:60" pos:end="43:69">buf_offset</name><operator pos:start="43:70" pos:end="43:71">++</operator></expr></incr>)</control><block type="pseudo" pos:start="44:9" pos:end="45:18"><block_content pos:start="44:9" pos:end="45:18">
        <if_stmt pos:start="44:9" pos:end="45:18"><if pos:start="44:9" pos:end="45:18">if <condition pos:start="44:12" pos:end="44:28">(<expr pos:start="44:13" pos:end="44:27"><name pos:start="44:13" pos:end="44:27"><name pos:start="44:13" pos:end="44:15">buf</name><index pos:start="44:16" pos:end="44:27">[<expr pos:start="44:17" pos:end="44:26"><name pos:start="44:17" pos:end="44:26">buf_offset</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:18"><block_content pos:start="45:13" pos:end="45:18">
            <break pos:start="45:13" pos:end="45:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>
    <return pos:start="46:5" pos:end="46:59">return <expr pos:start="46:12" pos:end="46:58"><ternary pos:start="46:12" pos:end="46:58"><condition pos:start="46:12" pos:end="46:34"><expr pos:start="46:12" pos:end="46:32"><name pos:start="46:12" pos:end="46:19">buf_size</name> <operator pos:start="46:21" pos:end="46:21">&gt;</operator> <name pos:start="46:23" pos:end="46:32">buf_offset</name></expr> ?</condition><then pos:start="46:36" pos:end="46:47"> <expr pos:start="46:36" pos:end="46:47"><name pos:start="46:36" pos:end="46:47">buf_consumed</name></expr> </then><else pos:start="46:49" pos:end="46:58">: <expr pos:start="46:51" pos:end="46:58"><name pos:start="46:51" pos:end="46:58">buf_size</name></expr></else></ternary></expr>;</return>
</block_content>}</block></function></unit>
