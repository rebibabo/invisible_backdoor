<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14143.c" pos:tabs="8"><function pos:start="1:1" pos:end="207:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:54">quantize_and_encode_band_cost_UPAIR12_mips</name><parameter_list pos:start="1:55" pos:end="9:87">(<parameter pos:start="1:56" pos:end="1:78"><decl pos:start="1:56" pos:end="1:78"><type pos:start="1:56" pos:end="1:78"><name pos:start="1:56" pos:end="1:75"><name pos:start="1:56" pos:end="1:61">struct</name> <name pos:start="1:63" pos:end="1:75">AACEncContext</name></name> <modifier pos:start="1:77" pos:end="1:77">*</modifier></type><name pos:start="1:78" pos:end="1:78">s</name></decl></parameter>,

                                                       <parameter pos:start="3:56" pos:end="3:72"><decl pos:start="3:56" pos:end="3:72"><type pos:start="3:56" pos:end="3:72"><name pos:start="3:56" pos:end="3:68">PutBitContext</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier></type><name pos:start="3:71" pos:end="3:72">pb</name></decl></parameter>, <parameter pos:start="3:75" pos:end="3:89"><decl pos:start="3:75" pos:end="3:89"><type pos:start="3:75" pos:end="3:89"><specifier pos:start="3:75" pos:end="3:79">const</specifier> <name pos:start="3:81" pos:end="3:85">float</name> <modifier pos:start="3:87" pos:end="3:87">*</modifier></type><name pos:start="3:88" pos:end="3:89">in</name></decl></parameter>, <parameter pos:start="3:92" pos:end="3:101"><decl pos:start="3:92" pos:end="3:101"><type pos:start="3:92" pos:end="3:101"><name pos:start="3:92" pos:end="3:96">float</name> <modifier pos:start="3:98" pos:end="3:98">*</modifier></type><name pos:start="3:99" pos:end="3:101">out</name></decl></parameter>,

                                                       <parameter pos:start="5:56" pos:end="5:74"><decl pos:start="5:56" pos:end="5:74"><type pos:start="5:56" pos:end="5:74"><specifier pos:start="5:56" pos:end="5:60">const</specifier> <name pos:start="5:62" pos:end="5:66">float</name> <modifier pos:start="5:68" pos:end="5:68">*</modifier></type><name pos:start="5:69" pos:end="5:74">scaled</name></decl></parameter>, <parameter pos:start="5:77" pos:end="5:84"><decl pos:start="5:77" pos:end="5:84"><type pos:start="5:77" pos:end="5:84"><name pos:start="5:77" pos:end="5:79">int</name></type> <name pos:start="5:81" pos:end="5:84">size</name></decl></parameter>, <parameter pos:start="5:87" pos:end="5:99"><decl pos:start="5:87" pos:end="5:99"><type pos:start="5:87" pos:end="5:99"><name pos:start="5:87" pos:end="5:89">int</name></type> <name pos:start="5:91" pos:end="5:99">scale_idx</name></decl></parameter>,

                                                       <parameter pos:start="7:56" pos:end="7:61"><decl pos:start="7:56" pos:end="7:61"><type pos:start="7:56" pos:end="7:61"><name pos:start="7:56" pos:end="7:58">int</name></type> <name pos:start="7:60" pos:end="7:61">cb</name></decl></parameter>, <parameter pos:start="7:64" pos:end="7:81"><decl pos:start="7:64" pos:end="7:81"><type pos:start="7:64" pos:end="7:81"><specifier pos:start="7:64" pos:end="7:68">const</specifier> <name pos:start="7:70" pos:end="7:74">float</name></type> <name pos:start="7:76" pos:end="7:81">lambda</name></decl></parameter>, <parameter pos:start="7:84" pos:end="7:100"><decl pos:start="7:84" pos:end="7:100"><type pos:start="7:84" pos:end="7:100"><specifier pos:start="7:84" pos:end="7:88">const</specifier> <name pos:start="7:90" pos:end="7:94">float</name></type> <name pos:start="7:96" pos:end="7:100">uplim</name></decl></parameter>,

                                                       <parameter pos:start="9:56" pos:end="9:64"><decl pos:start="9:56" pos:end="9:64"><type pos:start="9:56" pos:end="9:64"><name pos:start="9:56" pos:end="9:58">int</name> <modifier pos:start="9:60" pos:end="9:60">*</modifier></type><name pos:start="9:61" pos:end="9:64">bits</name></decl></parameter>, <parameter pos:start="9:67" pos:end="9:86"><decl pos:start="9:67" pos:end="9:86"><type pos:start="9:67" pos:end="9:86"><specifier pos:start="9:67" pos:end="9:71">const</specifier> <name pos:start="9:73" pos:end="9:77">float</name></type> <name pos:start="9:79" pos:end="9:86">ROUNDING</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="207:1">{<block_content pos:start="13:5" pos:end="205:5">

    <decl_stmt pos:start="13:5" pos:end="13:99"><decl pos:start="13:5" pos:end="13:98"><type pos:start="13:5" pos:end="13:15"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:15">float</name></type> <name pos:start="13:17" pos:end="13:19">Q34</name> <init pos:start="13:21" pos:end="13:98">= <expr pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:98"><name pos:start="13:23" pos:end="13:40">ff_aac_pow34sf_tab</name><index pos:start="13:41" pos:end="13:98">[<expr pos:start="13:42" pos:end="13:97"><name pos:start="13:42" pos:end="13:53">POW_SF2_ZERO</name> <operator pos:start="13:55" pos:end="13:55">-</operator> <name pos:start="13:57" pos:end="13:65">scale_idx</name> <operator pos:start="13:67" pos:end="13:67">+</operator> <name pos:start="13:69" pos:end="13:81">SCALE_ONE_POS</name> <operator pos:start="13:83" pos:end="13:83">-</operator> <name pos:start="13:85" pos:end="13:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:99"><decl pos:start="15:5" pos:end="15:98"><type pos:start="15:5" pos:end="15:15"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:15">float</name></type> <name pos:start="15:17" pos:end="15:18">IQ</name>  <init pos:start="15:21" pos:end="15:98">= <expr pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:98"><name pos:start="15:23" pos:end="15:39">ff_aac_pow2sf_tab</name> <index pos:start="15:41" pos:end="15:98">[<expr pos:start="15:42" pos:end="15:97"><name pos:start="15:42" pos:end="15:53">POW_SF2_ZERO</name> <operator pos:start="15:55" pos:end="15:55">+</operator> <name pos:start="15:57" pos:end="15:65">scale_idx</name> <operator pos:start="15:67" pos:end="15:67">-</operator> <name pos:start="15:69" pos:end="15:81">SCALE_ONE_POS</name> <operator pos:start="15:83" pos:end="15:83">+</operator> <name pos:start="15:85" pos:end="15:97">SCALE_DIV_512</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">qc1</name></decl>, <decl pos:start="19:14" pos:end="19:16"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:14" pos:end="19:16">qc2</name></decl>, <decl pos:start="19:19" pos:end="19:21"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:19" pos:end="19:21">qc3</name></decl>, <decl pos:start="19:24" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:24" pos:end="19:26">qc4</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:62"><decl pos:start="23:5" pos:end="23:61"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:11">uint8_t</name>  <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:20">p_bits</name>  <init pos:start="23:23" pos:end="23:61">= <expr pos:start="23:25" pos:end="23:61"><operator pos:start="23:25" pos:end="23:25">(</operator><name pos:start="23:26" pos:end="23:32">uint8_t</name><operator pos:start="23:33" pos:end="23:33">*</operator><operator pos:start="23:34" pos:end="23:34">)</operator> <name pos:start="23:36" pos:end="23:61"><name pos:start="23:36" pos:end="23:55">ff_aac_spectral_bits</name><index pos:start="23:56" pos:end="23:61">[<expr pos:start="23:57" pos:end="23:60"><name pos:start="23:57" pos:end="23:58">cb</name><operator pos:start="23:59" pos:end="23:59">-</operator><literal type="number" pos:start="23:60" pos:end="23:60">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:63"><decl pos:start="25:5" pos:end="25:62"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:12">uint16_t</name> <modifier pos:start="25:14" pos:end="25:14">*</modifier></type><name pos:start="25:15" pos:end="25:21">p_codes</name> <init pos:start="25:23" pos:end="25:62">= <expr pos:start="25:25" pos:end="25:62"><operator pos:start="25:25" pos:end="25:25">(</operator><name pos:start="25:26" pos:end="25:33">uint16_t</name><operator pos:start="25:34" pos:end="25:34">*</operator><operator pos:start="25:35" pos:end="25:35">)</operator><name pos:start="25:36" pos:end="25:62"><name pos:start="25:36" pos:end="25:56">ff_aac_spectral_codes</name><index pos:start="25:57" pos:end="25:62">[<expr pos:start="25:58" pos:end="25:61"><name pos:start="25:58" pos:end="25:59">cb</name><operator pos:start="25:60" pos:end="25:60">-</operator><literal type="number" pos:start="25:61" pos:end="25:61">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:65"><decl pos:start="27:5" pos:end="27:64"><type pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:9">float</name>    <modifier pos:start="27:14" pos:end="27:14">*</modifier></type><name pos:start="27:15" pos:end="27:19">p_vec</name>   <init pos:start="27:23" pos:end="27:64">= <expr pos:start="27:25" pos:end="27:64"><operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:30">float</name>   <operator pos:start="27:34" pos:end="27:34">*</operator><operator pos:start="27:35" pos:end="27:35">)</operator><name pos:start="27:36" pos:end="27:64"><name pos:start="27:36" pos:end="27:58">ff_aac_codebook_vectors</name><index pos:start="27:59" pos:end="27:64">[<expr pos:start="27:60" pos:end="27:63"><name pos:start="27:60" pos:end="27:61">cb</name><operator pos:start="27:62" pos:end="27:62">-</operator><literal type="number" pos:start="27:63" pos:end="27:63">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:37"><expr pos:start="31:5" pos:end="31:36"><call pos:start="31:5" pos:end="31:36"><name pos:start="31:5" pos:end="31:15">abs_pow34_v</name><argument_list pos:start="31:16" pos:end="31:36">(<argument pos:start="31:17" pos:end="31:25"><expr pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:25"><name pos:start="31:17" pos:end="31:17">s</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:25">scoefs</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">in</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:23"><expr pos:start="33:5" pos:end="33:22"><name pos:start="33:5" pos:end="33:10">scaled</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:22"><name pos:start="33:14" pos:end="33:14">s</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:22">scoefs</name></name></expr>;</expr_stmt>

    <for pos:start="35:5" pos:end="205:5">for <control pos:start="35:9" pos:end="35:33">(<init pos:start="35:10" pos:end="35:15"><expr pos:start="35:10" pos:end="35:14"><name pos:start="35:10" pos:end="35:10">i</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <literal type="number" pos:start="35:14" pos:end="35:14">0</literal></expr>;</init> <condition pos:start="35:17" pos:end="35:25"><expr pos:start="35:17" pos:end="35:24"><name pos:start="35:17" pos:end="35:17">i</name> <operator pos:start="35:19" pos:end="35:19">&lt;</operator> <name pos:start="35:21" pos:end="35:24">size</name></expr>;</condition> <incr pos:start="35:27" pos:end="35:32"><expr pos:start="35:27" pos:end="35:32"><name pos:start="35:27" pos:end="35:27">i</name> <operator pos:start="35:29" pos:end="35:30">+=</operator> <literal type="number" pos:start="35:32" pos:end="35:32">4</literal></expr></incr>)</control> <block pos:start="35:35" pos:end="205:5">{<block_content pos:start="37:9" pos:end="203:9">

        <decl_stmt pos:start="37:9" pos:end="37:59"><decl pos:start="37:9" pos:end="37:19"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:19">curidx1</name></decl>, <decl pos:start="37:22" pos:end="37:28"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:22" pos:end="37:28">curidx2</name></decl>, <decl pos:start="37:31" pos:end="37:35"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:31" pos:end="37:35">sign1</name></decl>, <decl pos:start="37:38" pos:end="37:43"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:38" pos:end="37:43">count1</name></decl>, <decl pos:start="37:46" pos:end="37:50"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:46" pos:end="37:50">sign2</name></decl>, <decl pos:start="37:53" pos:end="37:58"><type ref="prev" pos:start="37:9" pos:end="37:11"/><name pos:start="37:53" pos:end="37:58">count2</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:36"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:11">int</name> <modifier pos:start="39:13" pos:end="39:13">*</modifier></type><name pos:start="39:14" pos:end="39:19">in_int</name> <init pos:start="39:21" pos:end="39:35">= <expr pos:start="39:23" pos:end="39:35"><operator pos:start="39:23" pos:end="39:23">(</operator><name pos:start="39:24" pos:end="39:26">int</name> <operator pos:start="39:28" pos:end="39:28">*</operator><operator pos:start="39:29" pos:end="39:29">)</operator><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:32">in</name><index pos:start="39:33" pos:end="39:35">[<expr pos:start="39:34" pos:end="39:34"><name pos:start="39:34" pos:end="39:34">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:23"><decl pos:start="41:9" pos:end="41:22"><type pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">uint8_t</name></type> <name pos:start="41:17" pos:end="41:22">v_bits</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:29"><decl pos:start="43:9" pos:end="43:28"><type pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:16">unsigned</name> <name pos:start="43:18" pos:end="43:20">int</name></type> <name pos:start="43:22" pos:end="43:28">v_codes</name></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:31"><decl pos:start="45:9" pos:end="45:14"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:14">t0</name></decl>, <decl pos:start="45:17" pos:end="45:18"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:17" pos:end="45:18">t1</name></decl>, <decl pos:start="45:21" pos:end="45:22"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:21" pos:end="45:22">t2</name></decl>, <decl pos:start="45:25" pos:end="45:26"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:25" pos:end="45:26">t3</name></decl>, <decl pos:start="45:29" pos:end="45:30"><type ref="prev" pos:start="45:9" pos:end="45:11"/><name pos:start="45:29" pos:end="45:30">t4</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:33"><decl pos:start="47:9" pos:end="47:25"><type pos:start="47:9" pos:end="47:21"><specifier pos:start="47:9" pos:end="47:13">const</specifier> <name pos:start="47:15" pos:end="47:19">float</name> <modifier pos:start="47:21" pos:end="47:21">*</modifier></type><name pos:start="47:22" pos:end="47:25">vec1</name></decl>, <decl pos:start="47:28" pos:end="47:32"><type ref="prev" pos:start="47:9" pos:end="47:21"><modifier pos:start="47:28" pos:end="47:28">*</modifier></type><name pos:start="47:29" pos:end="47:32">vec2</name></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:49"><expr pos:start="51:9" pos:end="51:48"><name pos:start="51:9" pos:end="51:11">qc1</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:25"><name pos:start="51:15" pos:end="51:20">scaled</name><index pos:start="51:21" pos:end="51:25">[<expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">i</name></expr>  ]</index></name> <operator pos:start="51:27" pos:end="51:27">*</operator> <name pos:start="51:29" pos:end="51:31">Q34</name> <operator pos:start="51:33" pos:end="51:33">+</operator> <name pos:start="51:35" pos:end="51:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:11">qc2</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:25"><name pos:start="53:15" pos:end="53:20">scaled</name><index pos:start="53:21" pos:end="53:25">[<expr pos:start="53:22" pos:end="53:24"><name pos:start="53:22" pos:end="53:22">i</name><operator pos:start="53:23" pos:end="53:23">+</operator><literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr>]</index></name> <operator pos:start="53:27" pos:end="53:27">*</operator> <name pos:start="53:29" pos:end="53:31">Q34</name> <operator pos:start="53:33" pos:end="53:33">+</operator> <name pos:start="53:35" pos:end="53:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:11">qc3</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:25"><name pos:start="55:15" pos:end="55:20">scaled</name><index pos:start="55:21" pos:end="55:25">[<expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:22">i</name><operator pos:start="55:23" pos:end="55:23">+</operator><literal type="number" pos:start="55:24" pos:end="55:24">2</literal></expr>]</index></name> <operator pos:start="55:27" pos:end="55:27">*</operator> <name pos:start="55:29" pos:end="55:31">Q34</name> <operator pos:start="55:33" pos:end="55:33">+</operator> <name pos:start="55:35" pos:end="55:48">ROUND_STANDARD</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:11">qc4</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:25"><name pos:start="57:15" pos:end="57:20">scaled</name><index pos:start="57:21" pos:end="57:25">[<expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:22">i</name><operator pos:start="57:23" pos:end="57:23">+</operator><literal type="number" pos:start="57:24" pos:end="57:24">3</literal></expr>]</index></name> <operator pos:start="57:27" pos:end="57:27">*</operator> <name pos:start="57:29" pos:end="57:31">Q34</name> <operator pos:start="57:33" pos:end="57:33">+</operator> <name pos:start="57:35" pos:end="57:48">ROUND_STANDARD</name></expr>;</expr_stmt>



        <asm pos:start="61:9" pos:end="157:10">__asm__ <specifier pos:start="61:17" pos:end="61:24">volatile</specifier> (

            ".set push                              \n\t"

            ".set noreorder                         \n\t"



            "ori    %[t4],      $zero,      12      \n\t"

            "ori    %[sign1],   $zero,      0       \n\t"

            "ori    %[sign2],   $zero,      0       \n\t"

            "slt    %[t0],      %[t4],      %[qc1]  \n\t"

            "slt    %[t1],      %[t4],      %[qc2]  \n\t"

            "slt    %[t2],      %[t4],      %[qc3]  \n\t"

            "slt    %[t3],      %[t4],      %[qc4]  \n\t"

            "movn   %[qc1],     %[t4],      %[t0]   \n\t"

            "movn   %[qc2],     %[t4],      %[t1]   \n\t"

            "movn   %[qc3],     %[t4],      %[t2]   \n\t"

            "movn   %[qc4],     %[t4],      %[t3]   \n\t"

            "lw     %[t0],      0(%[in_int])        \n\t"

            "lw     %[t1],      4(%[in_int])        \n\t"

            "lw     %[t2],      8(%[in_int])        \n\t"

            "lw     %[t3],      12(%[in_int])       \n\t"

            "slt    %[t0],      %[t0],      $zero   \n\t"

            "movn   %[sign1],   %[t0],      %[qc1]  \n\t"

            "slt    %[t2],      %[t2],      $zero   \n\t"

            "movn   %[sign2],   %[t2],      %[qc3]  \n\t"

            "slt    %[t1],      %[t1],      $zero   \n\t"

            "sll    %[t0],      %[sign1],   1       \n\t"

            "or     %[t0],      %[t0],      %[t1]   \n\t"

            "movn   %[sign1],   %[t0],      %[qc2]  \n\t"

            "slt    %[t3],      %[t3],      $zero   \n\t"

            "sll    %[t0],      %[sign2],   1       \n\t"

            "or     %[t0],      %[t0],      %[t3]   \n\t"

            "movn   %[sign2],   %[t0],      %[qc4]  \n\t"

            "slt    %[count1],  $zero,      %[qc1]  \n\t"

            "slt    %[t1],      $zero,      %[qc2]  \n\t"

            "slt    %[count2],  $zero,      %[qc3]  \n\t"

            "slt    %[t2],      $zero,      %[qc4]  \n\t"

            "addu   %[count1],  %[count1],  %[t1]   \n\t"

            "addu   %[count2],  %[count2],  %[t2]   \n\t"



            ".set pop                               \n\t"



            : [qc1]"+r"(qc1), [qc2]"+r"(qc2),

              [qc3]"+r"(qc3), [qc4]"+r"(qc4),

              [sign1]"=&amp;r"(sign1), [count1]"=&amp;r"(count1),

              [sign2]"=&amp;r"(sign2), [count2]"=&amp;r"(count2),

              [t0]"=&amp;r"(t0), [t1]"=&amp;r"(t1), [t2]"=&amp;r"(t2), [t3]"=&amp;r"(t3),

              [t4]"=&amp;r"(t4)

            : [in_int]"r"(in_int)

            : "memory"

        );</asm>



        <expr_stmt pos:start="161:9" pos:end="161:28"><expr pos:start="161:9" pos:end="161:27"><name pos:start="161:9" pos:end="161:15">curidx1</name>  <operator pos:start="161:18" pos:end="161:18">=</operator> <literal type="number" pos:start="161:20" pos:end="161:21">13</literal> <operator pos:start="161:23" pos:end="161:23">*</operator> <name pos:start="161:25" pos:end="161:27">qc1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:15">curidx1</name> <operator pos:start="163:17" pos:end="163:18">+=</operator> <name pos:start="163:20" pos:end="163:22">qc2</name></expr>;</expr_stmt>



        <expr_stmt pos:start="167:9" pos:end="167:55"><expr pos:start="167:9" pos:end="167:54"><name pos:start="167:9" pos:end="167:15">v_codes</name> <operator pos:start="167:17" pos:end="167:17">=</operator> <operator pos:start="167:19" pos:end="167:19">(</operator><name pos:start="167:20" pos:end="167:35"><name pos:start="167:20" pos:end="167:26">p_codes</name><index pos:start="167:27" pos:end="167:35">[<expr pos:start="167:28" pos:end="167:34"><name pos:start="167:28" pos:end="167:34">curidx1</name></expr>]</index></name> <operator pos:start="167:37" pos:end="167:38">&lt;&lt;</operator> <name pos:start="167:40" pos:end="167:45">count1</name><operator pos:start="167:46" pos:end="167:46">)</operator> <operator pos:start="167:48" pos:end="167:48">|</operator> <name pos:start="167:50" pos:end="167:54">sign1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:43"><expr pos:start="169:9" pos:end="169:42"><name pos:start="169:9" pos:end="169:14">v_bits</name>  <operator pos:start="169:17" pos:end="169:17">=</operator> <name pos:start="169:19" pos:end="169:33"><name pos:start="169:19" pos:end="169:24">p_bits</name><index pos:start="169:25" pos:end="169:33">[<expr pos:start="169:26" pos:end="169:32"><name pos:start="169:26" pos:end="169:32">curidx1</name></expr>]</index></name> <operator pos:start="169:35" pos:end="169:35">+</operator> <name pos:start="169:37" pos:end="169:42">count1</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:38"><expr pos:start="171:9" pos:end="171:37"><call pos:start="171:9" pos:end="171:37"><name pos:start="171:9" pos:end="171:16">put_bits</name><argument_list pos:start="171:17" pos:end="171:37">(<argument pos:start="171:18" pos:end="171:19"><expr pos:start="171:18" pos:end="171:19"><name pos:start="171:18" pos:end="171:19">pb</name></expr></argument>, <argument pos:start="171:22" pos:end="171:27"><expr pos:start="171:22" pos:end="171:27"><name pos:start="171:22" pos:end="171:27">v_bits</name></expr></argument>, <argument pos:start="171:30" pos:end="171:36"><expr pos:start="171:30" pos:end="171:36"><name pos:start="171:30" pos:end="171:36">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="175:9" pos:end="175:28"><expr pos:start="175:9" pos:end="175:27"><name pos:start="175:9" pos:end="175:15">curidx2</name>  <operator pos:start="175:18" pos:end="175:18">=</operator> <literal type="number" pos:start="175:20" pos:end="175:21">13</literal> <operator pos:start="175:23" pos:end="175:23">*</operator> <name pos:start="175:25" pos:end="175:27">qc3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:23"><expr pos:start="177:9" pos:end="177:22"><name pos:start="177:9" pos:end="177:15">curidx2</name> <operator pos:start="177:17" pos:end="177:18">+=</operator> <name pos:start="177:20" pos:end="177:22">qc4</name></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:55"><expr pos:start="181:9" pos:end="181:54"><name pos:start="181:9" pos:end="181:15">v_codes</name> <operator pos:start="181:17" pos:end="181:17">=</operator> <operator pos:start="181:19" pos:end="181:19">(</operator><name pos:start="181:20" pos:end="181:35"><name pos:start="181:20" pos:end="181:26">p_codes</name><index pos:start="181:27" pos:end="181:35">[<expr pos:start="181:28" pos:end="181:34"><name pos:start="181:28" pos:end="181:34">curidx2</name></expr>]</index></name> <operator pos:start="181:37" pos:end="181:38">&lt;&lt;</operator> <name pos:start="181:40" pos:end="181:45">count2</name><operator pos:start="181:46" pos:end="181:46">)</operator> <operator pos:start="181:48" pos:end="181:48">|</operator> <name pos:start="181:50" pos:end="181:54">sign2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:43"><expr pos:start="183:9" pos:end="183:42"><name pos:start="183:9" pos:end="183:14">v_bits</name>  <operator pos:start="183:17" pos:end="183:17">=</operator> <name pos:start="183:19" pos:end="183:33"><name pos:start="183:19" pos:end="183:24">p_bits</name><index pos:start="183:25" pos:end="183:33">[<expr pos:start="183:26" pos:end="183:32"><name pos:start="183:26" pos:end="183:32">curidx2</name></expr>]</index></name> <operator pos:start="183:35" pos:end="183:35">+</operator> <name pos:start="183:37" pos:end="183:42">count2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:38"><expr pos:start="185:9" pos:end="185:37"><call pos:start="185:9" pos:end="185:37"><name pos:start="185:9" pos:end="185:16">put_bits</name><argument_list pos:start="185:17" pos:end="185:37">(<argument pos:start="185:18" pos:end="185:19"><expr pos:start="185:18" pos:end="185:19"><name pos:start="185:18" pos:end="185:19">pb</name></expr></argument>, <argument pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:27"><name pos:start="185:22" pos:end="185:27">v_bits</name></expr></argument>, <argument pos:start="185:30" pos:end="185:36"><expr pos:start="185:30" pos:end="185:36"><name pos:start="185:30" pos:end="185:36">v_codes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="189:9" pos:end="203:9"><if pos:start="189:9" pos:end="203:9">if <condition pos:start="189:12" pos:end="189:16">(<expr pos:start="189:13" pos:end="189:15"><name pos:start="189:13" pos:end="189:15">out</name></expr>)</condition> <block pos:start="189:18" pos:end="203:9">{<block_content pos:start="191:12" pos:end="201:55">

           <expr_stmt pos:start="191:12" pos:end="191:36"><expr pos:start="191:12" pos:end="191:35"><name pos:start="191:12" pos:end="191:15">vec1</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <operator pos:start="191:19" pos:end="191:19">&amp;</operator><name pos:start="191:20" pos:end="191:35"><name pos:start="191:20" pos:end="191:24">p_vec</name><index pos:start="191:25" pos:end="191:35">[<expr pos:start="191:26" pos:end="191:34"><name pos:start="191:26" pos:end="191:32">curidx1</name><operator pos:start="191:33" pos:end="191:33">*</operator><literal type="number" pos:start="191:34" pos:end="191:34">2</literal></expr>]</index></name></expr>;</expr_stmt>

           <expr_stmt pos:start="193:12" pos:end="193:36"><expr pos:start="193:12" pos:end="193:35"><name pos:start="193:12" pos:end="193:15">vec2</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <operator pos:start="193:19" pos:end="193:19">&amp;</operator><name pos:start="193:20" pos:end="193:35"><name pos:start="193:20" pos:end="193:24">p_vec</name><index pos:start="193:25" pos:end="193:35">[<expr pos:start="193:26" pos:end="193:34"><name pos:start="193:26" pos:end="193:32">curidx2</name><operator pos:start="193:33" pos:end="193:33">*</operator><literal type="number" pos:start="193:34" pos:end="193:34">2</literal></expr>]</index></name></expr>;</expr_stmt>

           <expr_stmt pos:start="195:12" pos:end="195:55"><expr pos:start="195:12" pos:end="195:54"><name pos:start="195:12" pos:end="195:19"><name pos:start="195:12" pos:end="195:14">out</name><index pos:start="195:15" pos:end="195:19">[<expr pos:start="195:16" pos:end="195:18"><name pos:start="195:16" pos:end="195:16">i</name><operator pos:start="195:17" pos:end="195:17">+</operator><literal type="number" pos:start="195:18" pos:end="195:18">0</literal></expr>]</index></name> <operator pos:start="195:21" pos:end="195:21">=</operator> <call pos:start="195:23" pos:end="195:54"><name pos:start="195:23" pos:end="195:31">copysignf</name><argument_list pos:start="195:32" pos:end="195:54">(<argument pos:start="195:33" pos:end="195:44"><expr pos:start="195:33" pos:end="195:44"><name pos:start="195:33" pos:end="195:39"><name pos:start="195:33" pos:end="195:36">vec1</name><index pos:start="195:37" pos:end="195:39">[<expr pos:start="195:38" pos:end="195:38"><literal type="number" pos:start="195:38" pos:end="195:38">0</literal></expr>]</index></name> <operator pos:start="195:41" pos:end="195:41">*</operator> <name pos:start="195:43" pos:end="195:44">IQ</name></expr></argument>, <argument pos:start="195:47" pos:end="195:53"><expr pos:start="195:47" pos:end="195:53"><name pos:start="195:47" pos:end="195:53"><name pos:start="195:47" pos:end="195:48">in</name><index pos:start="195:49" pos:end="195:53">[<expr pos:start="195:50" pos:end="195:52"><name pos:start="195:50" pos:end="195:50">i</name><operator pos:start="195:51" pos:end="195:51">+</operator><literal type="number" pos:start="195:52" pos:end="195:52">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="197:12" pos:end="197:55"><expr pos:start="197:12" pos:end="197:54"><name pos:start="197:12" pos:end="197:19"><name pos:start="197:12" pos:end="197:14">out</name><index pos:start="197:15" pos:end="197:19">[<expr pos:start="197:16" pos:end="197:18"><name pos:start="197:16" pos:end="197:16">i</name><operator pos:start="197:17" pos:end="197:17">+</operator><literal type="number" pos:start="197:18" pos:end="197:18">1</literal></expr>]</index></name> <operator pos:start="197:21" pos:end="197:21">=</operator> <call pos:start="197:23" pos:end="197:54"><name pos:start="197:23" pos:end="197:31">copysignf</name><argument_list pos:start="197:32" pos:end="197:54">(<argument pos:start="197:33" pos:end="197:44"><expr pos:start="197:33" pos:end="197:44"><name pos:start="197:33" pos:end="197:39"><name pos:start="197:33" pos:end="197:36">vec1</name><index pos:start="197:37" pos:end="197:39">[<expr pos:start="197:38" pos:end="197:38"><literal type="number" pos:start="197:38" pos:end="197:38">1</literal></expr>]</index></name> <operator pos:start="197:41" pos:end="197:41">*</operator> <name pos:start="197:43" pos:end="197:44">IQ</name></expr></argument>, <argument pos:start="197:47" pos:end="197:53"><expr pos:start="197:47" pos:end="197:53"><name pos:start="197:47" pos:end="197:53"><name pos:start="197:47" pos:end="197:48">in</name><index pos:start="197:49" pos:end="197:53">[<expr pos:start="197:50" pos:end="197:52"><name pos:start="197:50" pos:end="197:50">i</name><operator pos:start="197:51" pos:end="197:51">+</operator><literal type="number" pos:start="197:52" pos:end="197:52">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="199:12" pos:end="199:55"><expr pos:start="199:12" pos:end="199:54"><name pos:start="199:12" pos:end="199:19"><name pos:start="199:12" pos:end="199:14">out</name><index pos:start="199:15" pos:end="199:19">[<expr pos:start="199:16" pos:end="199:18"><name pos:start="199:16" pos:end="199:16">i</name><operator pos:start="199:17" pos:end="199:17">+</operator><literal type="number" pos:start="199:18" pos:end="199:18">2</literal></expr>]</index></name> <operator pos:start="199:21" pos:end="199:21">=</operator> <call pos:start="199:23" pos:end="199:54"><name pos:start="199:23" pos:end="199:31">copysignf</name><argument_list pos:start="199:32" pos:end="199:54">(<argument pos:start="199:33" pos:end="199:44"><expr pos:start="199:33" pos:end="199:44"><name pos:start="199:33" pos:end="199:39"><name pos:start="199:33" pos:end="199:36">vec2</name><index pos:start="199:37" pos:end="199:39">[<expr pos:start="199:38" pos:end="199:38"><literal type="number" pos:start="199:38" pos:end="199:38">0</literal></expr>]</index></name> <operator pos:start="199:41" pos:end="199:41">*</operator> <name pos:start="199:43" pos:end="199:44">IQ</name></expr></argument>, <argument pos:start="199:47" pos:end="199:53"><expr pos:start="199:47" pos:end="199:53"><name pos:start="199:47" pos:end="199:53"><name pos:start="199:47" pos:end="199:48">in</name><index pos:start="199:49" pos:end="199:53">[<expr pos:start="199:50" pos:end="199:52"><name pos:start="199:50" pos:end="199:50">i</name><operator pos:start="199:51" pos:end="199:51">+</operator><literal type="number" pos:start="199:52" pos:end="199:52">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="201:12" pos:end="201:55"><expr pos:start="201:12" pos:end="201:54"><name pos:start="201:12" pos:end="201:19"><name pos:start="201:12" pos:end="201:14">out</name><index pos:start="201:15" pos:end="201:19">[<expr pos:start="201:16" pos:end="201:18"><name pos:start="201:16" pos:end="201:16">i</name><operator pos:start="201:17" pos:end="201:17">+</operator><literal type="number" pos:start="201:18" pos:end="201:18">3</literal></expr>]</index></name> <operator pos:start="201:21" pos:end="201:21">=</operator> <call pos:start="201:23" pos:end="201:54"><name pos:start="201:23" pos:end="201:31">copysignf</name><argument_list pos:start="201:32" pos:end="201:54">(<argument pos:start="201:33" pos:end="201:44"><expr pos:start="201:33" pos:end="201:44"><name pos:start="201:33" pos:end="201:39"><name pos:start="201:33" pos:end="201:36">vec2</name><index pos:start="201:37" pos:end="201:39">[<expr pos:start="201:38" pos:end="201:38"><literal type="number" pos:start="201:38" pos:end="201:38">1</literal></expr>]</index></name> <operator pos:start="201:41" pos:end="201:41">*</operator> <name pos:start="201:43" pos:end="201:44">IQ</name></expr></argument>, <argument pos:start="201:47" pos:end="201:53"><expr pos:start="201:47" pos:end="201:53"><name pos:start="201:47" pos:end="201:53"><name pos:start="201:47" pos:end="201:48">in</name><index pos:start="201:49" pos:end="201:53">[<expr pos:start="201:50" pos:end="201:52"><name pos:start="201:50" pos:end="201:50">i</name><operator pos:start="201:51" pos:end="201:51">+</operator><literal type="number" pos:start="201:52" pos:end="201:52">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
