<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1885.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mp3_write_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MP3Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mp3</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="89:5"><if pos:start="9:5" pos:end="51:5">if <condition pos:start="9:8" pos:end="9:51">(<expr pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:11">pkt</name><operator pos:start="9:12" pos:end="9:13">-&gt;</operator><name pos:start="9:14" pos:end="9:25">stream_index</name></name> <operator pos:start="9:27" pos:end="9:28">==</operator> <name pos:start="9:30" pos:end="9:50"><name pos:start="9:30" pos:end="9:32">mp3</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:50">audio_stream_idx</name></name></expr>)</condition> <block pos:start="9:53" pos:end="51:5">{<block_content pos:start="11:9" pos:end="49:50">

        <if_stmt pos:start="11:9" pos:end="49:50"><if pos:start="11:9" pos:end="47:9">if <condition pos:start="11:12" pos:end="11:31">(<expr pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:30"><name pos:start="11:13" pos:end="11:15">mp3</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:30">pics_to_write</name></name></expr>)</condition> <block pos:start="11:33" pos:end="47:9">{<block_content pos:start="15:13" pos:end="45:34">

            <comment type="block" pos:start="13:13" pos:end="13:68">/* buffer audio packets until we get all the pictures */</comment>

            <decl_stmt pos:start="15:13" pos:end="15:59"><decl pos:start="15:13" pos:end="15:58"><type pos:start="15:13" pos:end="15:26"><name pos:start="15:13" pos:end="15:24">AVPacketList</name> <modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:30">pktl</name> <init pos:start="15:32" pos:end="15:58">= <expr pos:start="15:34" pos:end="15:58"><call pos:start="15:34" pos:end="15:58"><name pos:start="15:34" pos:end="15:43">av_mallocz</name><argument_list pos:start="15:44" pos:end="15:58">(<argument pos:start="15:45" pos:end="15:57"><expr pos:start="15:45" pos:end="15:57"><sizeof pos:start="15:45" pos:end="15:57">sizeof<argument_list pos:start="15:51" pos:end="15:57">(<argument pos:start="15:52" pos:end="15:56"><expr pos:start="15:52" pos:end="15:56"><operator pos:start="15:52" pos:end="15:52">*</operator><name pos:start="15:53" pos:end="15:56">pktl</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="17:13" pos:end="19:39"><if pos:start="17:13" pos:end="19:39">if <condition pos:start="17:16" pos:end="17:22">(<expr pos:start="17:17" pos:end="17:21"><operator pos:start="17:17" pos:end="17:17">!</operator><name pos:start="17:18" pos:end="17:21">pktl</name></expr>)</condition><block type="pseudo" pos:start="19:17" pos:end="19:39"><block_content pos:start="19:17" pos:end="19:39">

                <return pos:start="19:17" pos:end="19:39">return <expr pos:start="19:24" pos:end="19:38"><call pos:start="19:24" pos:end="19:38"><name pos:start="19:24" pos:end="19:30">AVERROR</name><argument_list pos:start="19:31" pos:end="19:38">(<argument pos:start="19:32" pos:end="19:37"><expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="23:13" pos:end="23:33"><expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:16">pktl</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">pkt</name></name>     <operator pos:start="23:27" pos:end="23:27">=</operator> <operator pos:start="23:29" pos:end="23:29">*</operator><name pos:start="23:30" pos:end="23:32">pkt</name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:52"><expr pos:start="25:13" pos:end="25:51"><name pos:start="25:13" pos:end="25:25"><name pos:start="25:13" pos:end="25:16">pktl</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:21">pkt</name><operator pos:start="25:22" pos:end="25:22">.</operator><name pos:start="25:23" pos:end="25:25">buf</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <call pos:start="25:29" pos:end="25:51"><name pos:start="25:29" pos:end="25:41">av_buffer_ref</name><argument_list pos:start="25:42" pos:end="25:51">(<argument pos:start="25:43" pos:end="25:50"><expr pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:50"><name pos:start="25:43" pos:end="25:45">pkt</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:50">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="33:13">if <condition pos:start="27:16" pos:end="27:31">(<expr pos:start="27:17" pos:end="27:30"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:30"><name pos:start="27:18" pos:end="27:21">pktl</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:26">pkt</name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:30">buf</name></name></expr>)</condition> <block pos:start="27:33" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:39">

                <expr_stmt pos:start="29:17" pos:end="29:32"><expr pos:start="29:17" pos:end="29:31"><call pos:start="29:17" pos:end="29:31"><name pos:start="29:17" pos:end="29:24">av_freep</name><argument_list pos:start="29:25" pos:end="29:31">(<argument pos:start="29:26" pos:end="29:30"><expr pos:start="29:26" pos:end="29:30"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:30">pktl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="31:17" pos:end="31:39">return <expr pos:start="31:24" pos:end="31:38"><call pos:start="31:24" pos:end="31:38"><name pos:start="31:24" pos:end="31:30">AVERROR</name><argument_list pos:start="31:31" pos:end="31:38">(<argument pos:start="31:32" pos:end="31:37"><expr pos:start="31:32" pos:end="31:37"><name pos:start="31:32" pos:end="31:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="37:13" pos:end="43:34"><if pos:start="37:13" pos:end="39:44">if <condition pos:start="37:16" pos:end="37:31">(<expr pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:19">mp3</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:30">queue_end</name></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:44"><block_content pos:start="39:17" pos:end="39:44">

                <expr_stmt pos:start="39:17" pos:end="39:44"><expr pos:start="39:17" pos:end="39:43"><name pos:start="39:17" pos:end="39:36"><name pos:start="39:17" pos:end="39:19">mp3</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:30">queue_end</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:36">next</name></name> <operator pos:start="39:38" pos:end="39:38">=</operator> <name pos:start="39:40" pos:end="39:43">pktl</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="41:13" pos:end="43:34">else<block type="pseudo" pos:start="43:17" pos:end="43:34"><block_content pos:start="43:17" pos:end="43:34">

                <expr_stmt pos:start="43:17" pos:end="43:34"><expr pos:start="43:17" pos:end="43:33"><name pos:start="43:17" pos:end="43:26"><name pos:start="43:17" pos:end="43:19">mp3</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:26">queue</name></name> <operator pos:start="43:28" pos:end="43:28">=</operator> <name pos:start="43:30" pos:end="43:33">pktl</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:26"><name pos:start="45:13" pos:end="45:15">mp3</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:26">queue_end</name></name> <operator pos:start="45:28" pos:end="45:28">=</operator> <name pos:start="45:30" pos:end="45:33">pktl</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="49:50">else<block type="pseudo" pos:start="49:13" pos:end="49:50"><block_content pos:start="49:13" pos:end="49:50">

            <return pos:start="49:13" pos:end="49:50">return <expr pos:start="49:20" pos:end="49:49"><call pos:start="49:20" pos:end="49:49"><name pos:start="49:20" pos:end="49:41">mp3_write_audio_packet</name><argument_list pos:start="49:42" pos:end="49:49">(<argument pos:start="49:43" pos:end="49:43"><expr pos:start="49:43" pos:end="49:43"><name pos:start="49:43" pos:end="49:43">s</name></expr></argument>, <argument pos:start="49:46" pos:end="49:48"><expr pos:start="49:46" pos:end="49:48"><name pos:start="49:46" pos:end="49:48">pkt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="89:5">else <block pos:start="51:12" pos:end="89:5">{<block_content pos:start="53:9" pos:end="87:23">

        <decl_stmt pos:start="53:9" pos:end="53:16"><decl pos:start="53:9" pos:end="53:15"><type pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">int</name></type> <name pos:start="53:13" pos:end="53:15">ret</name></decl>;</decl_stmt>



        <comment type="block" pos:start="57:9" pos:end="57:44">/* warn only once for each stream */</comment>

        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:58">(<expr pos:start="59:13" pos:end="59:57"><name pos:start="59:13" pos:end="59:41"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:22">streams</name><index pos:start="59:23" pos:end="59:41">[<expr pos:start="59:24" pos:end="59:40"><name pos:start="59:24" pos:end="59:40"><name pos:start="59:24" pos:end="59:26">pkt</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:40">stream_index</name></name></expr>]</index></name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:52">nb_frames</name> <operator pos:start="59:54" pos:end="59:55">==</operator> <literal type="number" pos:start="59:57" pos:end="59:57">1</literal></expr>)</condition> <block pos:start="59:60" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:54">

            <expr_stmt pos:start="61:13" pos:end="63:54"><expr pos:start="61:13" pos:end="63:53"><call pos:start="61:13" pos:end="63:53"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="63:53">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:36"><expr pos:start="61:23" pos:end="61:36"><name pos:start="61:23" pos:end="61:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="61:39" pos:end="63:33"><expr pos:start="61:39" pos:end="63:33"><literal type="string" pos:start="61:39" pos:end="61:79">"Got more than one picture in stream %d,"</literal>

                   <literal type="string" pos:start="63:20" pos:end="63:33">" ignoring.\n"</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:52"><expr pos:start="63:36" pos:end="63:52"><name pos:start="63:36" pos:end="63:52"><name pos:start="63:36" pos:end="63:38">pkt</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:52">stream_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="69:21"><if pos:start="67:9" pos:end="69:21">if <condition pos:start="67:12" pos:end="67:81">(<expr pos:start="67:13" pos:end="67:80"><operator pos:start="67:13" pos:end="67:13">!</operator><name pos:start="67:14" pos:end="67:31"><name pos:start="67:14" pos:end="67:16">mp3</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:31">pics_to_write</name></name> <operator pos:start="67:33" pos:end="67:34">||</operator> <name pos:start="67:36" pos:end="67:64"><name pos:start="67:36" pos:end="67:36">s</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:45">streams</name><index pos:start="67:46" pos:end="67:64">[<expr pos:start="67:47" pos:end="67:63"><name pos:start="67:47" pos:end="67:63"><name pos:start="67:47" pos:end="67:49">pkt</name><operator pos:start="67:50" pos:end="67:51">-&gt;</operator><name pos:start="67:52" pos:end="67:63">stream_index</name></name></expr>]</index></name><operator pos:start="67:65" pos:end="67:66">-&gt;</operator><name pos:start="67:67" pos:end="67:75">nb_frames</name> <operator pos:start="67:77" pos:end="67:78">&gt;=</operator> <literal type="number" pos:start="67:80" pos:end="67:80">1</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:21"><block_content pos:start="69:13" pos:end="69:21">

            <return pos:start="69:13" pos:end="69:21">return <expr pos:start="69:20" pos:end="69:20"><literal type="number" pos:start="69:20" pos:end="69:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="73:9" pos:end="75:23"><if pos:start="73:9" pos:end="75:23">if <condition pos:start="73:12" pos:end="73:63">(<expr pos:start="73:13" pos:end="73:62"><operator pos:start="73:13" pos:end="73:13">(</operator><name pos:start="73:14" pos:end="73:16">ret</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:57"><name pos:start="73:20" pos:end="73:38">ff_id3v2_write_apic</name><argument_list pos:start="73:39" pos:end="73:57">(<argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">s</name></expr></argument>, <argument pos:start="73:43" pos:end="73:51"><expr pos:start="73:43" pos:end="73:51"><operator pos:start="73:43" pos:end="73:43">&amp;</operator><name pos:start="73:44" pos:end="73:51"><name pos:start="73:44" pos:end="73:46">mp3</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:51">id3</name></name></expr></argument>, <argument pos:start="73:54" pos:end="73:56"><expr pos:start="73:54" pos:end="73:56"><name pos:start="73:54" pos:end="73:56">pkt</name></expr></argument>)</argument_list></call><operator pos:start="73:58" pos:end="73:58">)</operator> <operator pos:start="73:60" pos:end="73:60">&lt;</operator> <literal type="number" pos:start="73:62" pos:end="73:62">0</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:23"><block_content pos:start="75:13" pos:end="75:23">

            <return pos:start="75:13" pos:end="75:23">return <expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:29"><expr pos:start="77:9" pos:end="77:28"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:11">mp3</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:26">pics_to_write</name></name><operator pos:start="77:27" pos:end="77:28">--</operator></expr>;</expr_stmt>



        <comment type="block" pos:start="81:9" pos:end="81:46">/* flush the buffered audio packets */</comment>

        <if_stmt pos:start="83:9" pos:end="87:23"><if pos:start="83:9" pos:end="87:23">if <condition pos:start="83:12" pos:end="85:43">(<expr pos:start="83:13" pos:end="85:42"><operator pos:start="83:13" pos:end="83:13">!</operator><name pos:start="83:14" pos:end="83:31"><name pos:start="83:14" pos:end="83:16">mp3</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:31">pics_to_write</name></name> <operator pos:start="83:33" pos:end="83:34">&amp;&amp;</operator>

            <operator pos:start="85:13" pos:end="85:13">(</operator><name pos:start="85:14" pos:end="85:16">ret</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <call pos:start="85:20" pos:end="85:37"><name pos:start="85:20" pos:end="85:34">mp3_queue_flush</name><argument_list pos:start="85:35" pos:end="85:37">(<argument pos:start="85:36" pos:end="85:36"><expr pos:start="85:36" pos:end="85:36"><name pos:start="85:36" pos:end="85:36">s</name></expr></argument>)</argument_list></call><operator pos:start="85:38" pos:end="85:38">)</operator> <operator pos:start="85:40" pos:end="85:40">&lt;</operator> <literal type="number" pos:start="85:42" pos:end="85:42">0</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:23"><block_content pos:start="87:13" pos:end="87:23">

            <return pos:start="87:13" pos:end="87:23">return <expr pos:start="87:20" pos:end="87:22"><name pos:start="87:20" pos:end="87:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
