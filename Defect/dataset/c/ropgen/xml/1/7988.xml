<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7988.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">vdadec_decode</name><parameter_list pos:start="1:25" pos:end="2:52">(<parameter pos:start="1:26" pos:end="1:46"><decl pos:start="1:26" pos:end="1:46"><type pos:start="1:26" pos:end="1:46"><name pos:start="1:26" pos:end="1:39">AVCodecContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:46">avctx</name></decl></parameter>,
        <parameter pos:start="2:9" pos:end="2:18"><decl pos:start="2:9" pos:end="2:18"><type pos:start="2:9" pos:end="2:18"><name pos:start="2:9" pos:end="2:12">void</name> <modifier pos:start="2:14" pos:end="2:14">*</modifier></type><name pos:start="2:15" pos:end="2:18">data</name></decl></parameter>, <parameter pos:start="2:21" pos:end="2:34"><decl pos:start="2:21" pos:end="2:34"><type pos:start="2:21" pos:end="2:34"><name pos:start="2:21" pos:end="2:23">int</name> <modifier pos:start="2:25" pos:end="2:25">*</modifier></type><name pos:start="2:26" pos:end="2:34">got_frame</name></decl></parameter>, <parameter pos:start="2:37" pos:end="2:51"><decl pos:start="2:37" pos:end="2:51"><type pos:start="2:37" pos:end="2:51"><name pos:start="2:37" pos:end="2:44">AVPacket</name> <modifier pos:start="2:46" pos:end="2:46">*</modifier></type><name pos:start="2:47" pos:end="2:51">avpkt</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="4:5" pos:end="28:15">
    <decl_stmt pos:start="4:5" pos:end="4:46"><decl pos:start="4:5" pos:end="4:45"><type pos:start="4:5" pos:end="4:23"><name pos:start="4:5" pos:end="4:21">VDADecoderContext</name> <modifier pos:start="4:23" pos:end="4:23">*</modifier></type><name pos:start="4:24" pos:end="4:26">ctx</name> <init pos:start="4:28" pos:end="4:45">= <expr pos:start="4:30" pos:end="4:45"><name pos:start="4:30" pos:end="4:45"><name pos:start="4:30" pos:end="4:34">avctx</name><operator pos:start="4:35" pos:end="4:36">-&gt;</operator><name pos:start="4:37" pos:end="4:45">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:24"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">pic</name> <init pos:start="5:18" pos:end="5:23">= <expr pos:start="5:20" pos:end="5:23"><name pos:start="5:20" pos:end="5:23">data</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:12"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name></decl>;</decl_stmt>
    <expr_stmt pos:start="7:5" pos:end="7:64"><expr pos:start="7:5" pos:end="7:63"><name pos:start="7:5" pos:end="7:7">ret</name> <operator pos:start="7:9" pos:end="7:9">=</operator> <call pos:start="7:11" pos:end="7:63"><name pos:start="7:11" pos:end="7:32"><name pos:start="7:11" pos:end="7:25">ff_h264_decoder</name><operator pos:start="7:26" pos:end="7:26">.</operator><name pos:start="7:27" pos:end="7:32">decode</name></name><argument_list pos:start="7:33" pos:end="7:63">(<argument pos:start="7:34" pos:end="7:38"><expr pos:start="7:34" pos:end="7:38"><name pos:start="7:34" pos:end="7:38">avctx</name></expr></argument>, <argument pos:start="7:41" pos:end="7:44"><expr pos:start="7:41" pos:end="7:44"><name pos:start="7:41" pos:end="7:44">data</name></expr></argument>, <argument pos:start="7:47" pos:end="7:55"><expr pos:start="7:47" pos:end="7:55"><name pos:start="7:47" pos:end="7:55">got_frame</name></expr></argument>, <argument pos:start="7:58" pos:end="7:62"><expr pos:start="7:58" pos:end="7:62"><name pos:start="7:58" pos:end="7:62">avpkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="8:5" pos:end="26:5"><if pos:start="8:5" pos:end="26:5">if <condition pos:start="8:8" pos:end="8:19">(<expr pos:start="8:9" pos:end="8:18"><operator pos:start="8:9" pos:end="8:9">*</operator><name pos:start="8:10" pos:end="8:18">got_frame</name></expr>)</condition> <block pos:start="8:21" pos:end="26:5">{<block_content pos:start="9:9" pos:end="25:9">
        <decl_stmt pos:start="9:9" pos:end="9:42"><decl pos:start="9:9" pos:end="9:41"><type pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:19">AVBufferRef</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">buffer</name> <init pos:start="9:29" pos:end="9:41">= <expr pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:33">pic</name><operator pos:start="9:34" pos:end="9:35">-&gt;</operator><name pos:start="9:36" pos:end="9:38">buf</name><index pos:start="9:39" pos:end="9:41">[<expr pos:start="9:40" pos:end="9:40"><literal type="number" pos:start="9:40" pos:end="9:40">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="10:9" pos:end="10:65"><decl pos:start="10:9" pos:end="10:64"><type pos:start="10:9" pos:end="10:26"><name pos:start="10:9" pos:end="10:24">VDABufferContext</name> <modifier pos:start="10:26" pos:end="10:26">*</modifier></type><name pos:start="10:27" pos:end="10:33">context</name> <init pos:start="10:35" pos:end="10:64">= <expr pos:start="10:37" pos:end="10:64"><call pos:start="10:37" pos:end="10:64"><name pos:start="10:37" pos:end="10:56">av_buffer_get_opaque</name><argument_list pos:start="10:57" pos:end="10:64">(<argument pos:start="10:58" pos:end="10:63"><expr pos:start="10:58" pos:end="10:63"><name pos:start="10:58" pos:end="10:63">buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="11:9" pos:end="11:68"><decl pos:start="11:9" pos:end="11:67"><type pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:24">CVPixelBufferRef</name></type> <name pos:start="11:26" pos:end="11:34">cv_buffer</name> <init pos:start="11:36" pos:end="11:67">= <expr pos:start="11:38" pos:end="11:67"><operator pos:start="11:38" pos:end="11:38">(</operator><name pos:start="11:39" pos:end="11:54">CVPixelBufferRef</name><operator pos:start="11:55" pos:end="11:55">)</operator><name pos:start="11:56" pos:end="11:67"><name pos:start="11:56" pos:end="11:58">pic</name><operator pos:start="11:59" pos:end="11:60">-&gt;</operator><name pos:start="11:61" pos:end="11:64">data</name><index pos:start="11:65" pos:end="11:67">[<expr pos:start="11:66" pos:end="11:66"><literal type="number" pos:start="11:66" pos:end="11:66">3</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="12:9" pos:end="12:51"><expr pos:start="12:9" pos:end="12:50"><call pos:start="12:9" pos:end="12:50"><name pos:start="12:9" pos:end="12:36">CVPixelBufferLockBaseAddress</name><argument_list pos:start="12:37" pos:end="12:50">(<argument pos:start="12:38" pos:end="12:46"><expr pos:start="12:38" pos:end="12:46"><name pos:start="12:38" pos:end="12:46">cv_buffer</name></expr></argument>, <argument pos:start="12:49" pos:end="12:49"><expr pos:start="12:49" pos:end="12:49"><literal type="number" pos:start="12:49" pos:end="12:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="13:9" pos:end="13:39"><expr pos:start="13:9" pos:end="13:38"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:15">context</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:26">cv_buffer</name></name> <operator pos:start="13:28" pos:end="13:28">=</operator> <name pos:start="13:30" pos:end="13:38">cv_buffer</name></expr>;</expr_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:35"><expr pos:start="14:9" pos:end="14:34"><name pos:start="14:9" pos:end="14:19"><name pos:start="14:9" pos:end="14:11">pic</name><operator pos:start="14:12" pos:end="14:13">-&gt;</operator><name pos:start="14:14" pos:end="14:19">format</name></name> <operator pos:start="14:21" pos:end="14:21">=</operator> <name pos:start="14:23" pos:end="14:34"><name pos:start="14:23" pos:end="14:25">ctx</name><operator pos:start="14:26" pos:end="14:27">-&gt;</operator><name pos:start="14:28" pos:end="14:34">pix_fmt</name></name></expr>;</expr_stmt>
        <if_stmt pos:start="15:9" pos:end="25:9"><if pos:start="15:9" pos:end="22:9">if <condition pos:start="15:12" pos:end="15:45">(<expr pos:start="15:13" pos:end="15:44"><call pos:start="15:13" pos:end="15:44"><name pos:start="15:13" pos:end="15:33">CVPixelBufferIsPlanar</name><argument_list pos:start="15:34" pos:end="15:44">(<argument pos:start="15:35" pos:end="15:43"><expr pos:start="15:35" pos:end="15:43"><name pos:start="15:35" pos:end="15:43">cv_buffer</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:47" pos:end="22:9">{<block_content pos:start="16:13" pos:end="21:13">
            <decl_stmt pos:start="16:13" pos:end="16:65"><decl pos:start="16:13" pos:end="16:17"><type pos:start="16:13" pos:end="16:15"><name pos:start="16:13" pos:end="16:15">int</name></type> <name pos:start="16:17" pos:end="16:17">i</name></decl>, <decl pos:start="16:20" pos:end="16:64"><type ref="prev" pos:start="16:13" pos:end="16:15"/><name pos:start="16:20" pos:end="16:24">count</name> <init pos:start="16:26" pos:end="16:64">= <expr pos:start="16:28" pos:end="16:64"><call pos:start="16:28" pos:end="16:64"><name pos:start="16:28" pos:end="16:53">CVPixelBufferGetPlaneCount</name><argument_list pos:start="16:54" pos:end="16:64">(<argument pos:start="16:55" pos:end="16:63"><expr pos:start="16:55" pos:end="16:63"><name pos:start="16:55" pos:end="16:63">cv_buffer</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="17:13" pos:end="17:34"><expr pos:start="17:13" pos:end="17:33"><call pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:22">av_assert0</name><argument_list pos:start="17:23" pos:end="17:33">(<argument pos:start="17:24" pos:end="17:32"><expr pos:start="17:24" pos:end="17:32"><name pos:start="17:24" pos:end="17:28">count</name> <operator pos:start="17:30" pos:end="17:30">&lt;</operator> <literal type="number" pos:start="17:32" pos:end="17:32">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="18:13" pos:end="21:13">for <control pos:start="18:17" pos:end="18:39">(<init pos:start="18:18" pos:end="18:23"><expr pos:start="18:18" pos:end="18:22"><name pos:start="18:18" pos:end="18:18">i</name> <operator pos:start="18:20" pos:end="18:20">=</operator> <literal type="number" pos:start="18:22" pos:end="18:22">0</literal></expr>;</init> <condition pos:start="18:25" pos:end="18:34"><expr pos:start="18:25" pos:end="18:33"><name pos:start="18:25" pos:end="18:25">i</name> <operator pos:start="18:27" pos:end="18:27">&lt;</operator> <name pos:start="18:29" pos:end="18:33">count</name></expr>;</condition> <incr pos:start="18:36" pos:end="18:38"><expr pos:start="18:36" pos:end="18:38"><name pos:start="18:36" pos:end="18:36">i</name><operator pos:start="18:37" pos:end="18:38">++</operator></expr></incr>)</control> <block pos:start="18:41" pos:end="21:13">{<block_content pos:start="19:17" pos:end="20:84">
                <expr_stmt pos:start="19:17" pos:end="19:80"><expr pos:start="19:17" pos:end="19:79"><name pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:19">pic</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:25">data</name><index pos:start="19:26" pos:end="19:28">[<expr pos:start="19:27" pos:end="19:27"><name pos:start="19:27" pos:end="19:27">i</name></expr>]</index></name> <operator pos:start="19:30" pos:end="19:30">=</operator> <call pos:start="19:32" pos:end="19:79"><name pos:start="19:32" pos:end="19:65">CVPixelBufferGetBaseAddressOfPlane</name><argument_list pos:start="19:66" pos:end="19:79">(<argument pos:start="19:67" pos:end="19:75"><expr pos:start="19:67" pos:end="19:75"><name pos:start="19:67" pos:end="19:75">cv_buffer</name></expr></argument>, <argument pos:start="19:78" pos:end="19:78"><expr pos:start="19:78" pos:end="19:78"><name pos:start="19:78" pos:end="19:78">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="20:17" pos:end="20:84"><expr pos:start="20:17" pos:end="20:83"><name pos:start="20:17" pos:end="20:32"><name pos:start="20:17" pos:end="20:19">pic</name><operator pos:start="20:20" pos:end="20:21">-&gt;</operator><name pos:start="20:22" pos:end="20:29">linesize</name><index pos:start="20:30" pos:end="20:32">[<expr pos:start="20:31" pos:end="20:31"><name pos:start="20:31" pos:end="20:31">i</name></expr>]</index></name> <operator pos:start="20:34" pos:end="20:34">=</operator> <call pos:start="20:36" pos:end="20:83"><name pos:start="20:36" pos:end="20:69">CVPixelBufferGetBytesPerRowOfPlane</name><argument_list pos:start="20:70" pos:end="20:83">(<argument pos:start="20:71" pos:end="20:79"><expr pos:start="20:71" pos:end="20:79"><name pos:start="20:71" pos:end="20:79">cv_buffer</name></expr></argument>, <argument pos:start="20:82" pos:end="20:82"><expr pos:start="20:82" pos:end="20:82"><name pos:start="20:82" pos:end="20:82">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></for>
        </block_content>}</block></if> <else pos:start="22:11" pos:end="25:9">else <block pos:start="22:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="24:70">
            <expr_stmt pos:start="23:13" pos:end="23:66"><expr pos:start="23:13" pos:end="23:65"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">pic</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:21">data</name><index pos:start="23:22" pos:end="23:24">[<expr pos:start="23:23" pos:end="23:23"><literal type="number" pos:start="23:23" pos:end="23:23">0</literal></expr>]</index></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:65"><name pos:start="23:28" pos:end="23:54">CVPixelBufferGetBaseAddress</name><argument_list pos:start="23:55" pos:end="23:65">(<argument pos:start="23:56" pos:end="23:64"><expr pos:start="23:56" pos:end="23:64"><name pos:start="23:56" pos:end="23:64">cv_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="24:13" pos:end="24:70"><expr pos:start="24:13" pos:end="24:69"><name pos:start="24:13" pos:end="24:28"><name pos:start="24:13" pos:end="24:15">pic</name><operator pos:start="24:16" pos:end="24:17">-&gt;</operator><name pos:start="24:18" pos:end="24:25">linesize</name><index pos:start="24:26" pos:end="24:28">[<expr pos:start="24:27" pos:end="24:27"><literal type="number" pos:start="24:27" pos:end="24:27">0</literal></expr>]</index></name> <operator pos:start="24:30" pos:end="24:30">=</operator> <call pos:start="24:32" pos:end="24:69"><name pos:start="24:32" pos:end="24:58">CVPixelBufferGetBytesPerRow</name><argument_list pos:start="24:59" pos:end="24:69">(<argument pos:start="24:60" pos:end="24:68"><expr pos:start="24:60" pos:end="24:68"><name pos:start="24:60" pos:end="24:68">cv_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        </block_content>}</block></else></if_stmt>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:18"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:18">pix_fmt</name></name> <operator pos:start="27:20" pos:end="27:20">=</operator> <name pos:start="27:22" pos:end="27:33"><name pos:start="27:22" pos:end="27:24">ctx</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:33">pix_fmt</name></name></expr>;</expr_stmt>
    <return pos:start="28:5" pos:end="28:15">return <expr pos:start="28:12" pos:end="28:14"><name pos:start="28:12" pos:end="28:14">ret</name></expr>;</return>
</block_content>}</block></function></unit>
