<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11782.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">rtc_start_timer</name><parameter_list pos:start="1:27" pos:end="1:54">(<parameter pos:start="1:28" pos:end="1:53"><decl pos:start="1:28" pos:end="1:53"><type pos:start="1:28" pos:end="1:53"><name pos:start="1:28" pos:end="1:50"><name pos:start="1:28" pos:end="1:33">struct</name> <name pos:start="1:35" pos:end="1:50">qemu_alarm_timer</name></name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">t</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:13">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">rtc_fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:34">current_rtc_freq</name> <init pos:start="7:36" pos:end="7:38">= <expr pos:start="7:38" pos:end="7:38"><literal type="number" pos:start="7:38" pos:end="7:38">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><call pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:7">TFR</name><argument_list pos:start="11:8" pos:end="11:44">(<argument pos:start="11:9" pos:end="11:43"><expr pos:start="11:9" pos:end="11:43"><name pos:start="11:9" pos:end="11:14">rtc_fd</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <call pos:start="11:18" pos:end="11:43"><name pos:start="11:18" pos:end="11:21">open</name><argument_list pos:start="11:22" pos:end="11:43">(<argument pos:start="11:23" pos:end="11:32"><expr pos:start="11:23" pos:end="11:32"><literal type="string" pos:start="11:23" pos:end="11:32">"/dev/rtc"</literal></expr></argument>, <argument pos:start="11:35" pos:end="11:42"><expr pos:start="11:35" pos:end="11:42"><name pos:start="11:35" pos:end="11:42">O_RDONLY</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:18"><if pos:start="13:5" pos:end="15:18">if <condition pos:start="13:8" pos:end="13:19">(<expr pos:start="13:9" pos:end="13:18"><name pos:start="13:9" pos:end="13:14">rtc_fd</name> <operator pos:start="13:16" pos:end="13:16">&lt;</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:18"><block_content pos:start="15:9" pos:end="15:18">

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:52"><expr pos:start="17:5" pos:end="17:51"><call pos:start="17:5" pos:end="17:51"><name pos:start="17:5" pos:end="17:9">ioctl</name><argument_list pos:start="17:10" pos:end="17:51">(<argument pos:start="17:11" pos:end="17:16"><expr pos:start="17:11" pos:end="17:16"><name pos:start="17:11" pos:end="17:16">rtc_fd</name></expr></argument>, <argument pos:start="17:19" pos:end="17:31"><expr pos:start="17:19" pos:end="17:31"><name pos:start="17:19" pos:end="17:31">RTC_IRQP_READ</name></expr></argument>, <argument pos:start="17:34" pos:end="17:50"><expr pos:start="17:34" pos:end="17:50"><operator pos:start="17:34" pos:end="17:34">&amp;</operator><name pos:start="17:35" pos:end="17:50">current_rtc_freq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="21:50">(<expr pos:start="19:9" pos:end="21:49"><name pos:start="19:9" pos:end="19:24">current_rtc_freq</name> <operator pos:start="19:26" pos:end="19:27">!=</operator> <name pos:start="19:29" pos:end="19:36">RTC_FREQ</name> <operator pos:start="19:38" pos:end="19:39">&amp;&amp;</operator>

        <call pos:start="21:9" pos:end="21:45"><name pos:start="21:9" pos:end="21:13">ioctl</name><argument_list pos:start="21:14" pos:end="21:45">(<argument pos:start="21:15" pos:end="21:20"><expr pos:start="21:15" pos:end="21:20"><name pos:start="21:15" pos:end="21:20">rtc_fd</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">RTC_IRQP_SET</name></expr></argument>, <argument pos:start="21:37" pos:end="21:44"><expr pos:start="21:37" pos:end="21:44"><name pos:start="21:37" pos:end="21:44">RTC_FREQ</name></expr></argument>)</argument_list></call> <operator pos:start="21:47" pos:end="21:47">&lt;</operator> <literal type="number" pos:start="21:49" pos:end="21:49">0</literal></expr>)</condition> <block pos:start="21:52" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:18">

        <expr_stmt pos:start="23:9" pos:end="27:81"><expr pos:start="23:9" pos:end="27:80"><call pos:start="23:9" pos:end="27:80"><name pos:start="23:9" pos:end="23:15">fprintf</name><argument_list pos:start="23:16" pos:end="27:80">(<argument pos:start="23:17" pos:end="23:22"><expr pos:start="23:17" pos:end="23:22"><name pos:start="23:17" pos:end="23:22">stderr</name></expr></argument>, <argument pos:start="23:25" pos:end="27:79"><expr pos:start="23:25" pos:end="27:79"><literal type="string" pos:start="23:25" pos:end="23:103">"Could not configure '/dev/rtc' to have a 1024 Hz timer. This is not a fatal\n"</literal>

                <literal type="string" pos:start="25:17" pos:end="25:98">"error, but for better emulation accuracy either use a 2.6 host Linux kernel or\n"</literal>

                <literal type="string" pos:start="27:17" pos:end="27:79">"type 'echo 1024 &gt; /proc/sys/dev/rtc/max-user-freq' as root.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:41">(<expr pos:start="33:9" pos:end="33:40"><call pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:13">ioctl</name><argument_list pos:start="33:14" pos:end="33:36">(<argument pos:start="33:15" pos:end="33:20"><expr pos:start="33:15" pos:end="33:20"><name pos:start="33:15" pos:end="33:20">rtc_fd</name></expr></argument>, <argument pos:start="33:23" pos:end="33:32"><expr pos:start="33:23" pos:end="33:32"><name pos:start="33:23" pos:end="33:32">RTC_PIE_ON</name></expr></argument>, <argument pos:start="33:35" pos:end="33:35"><expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr></argument>)</argument_list></call> <operator pos:start="33:38" pos:end="33:38">&lt;</operator> <literal type="number" pos:start="33:40" pos:end="33:40">0</literal></expr>)</condition> <block pos:start="33:43" pos:end="41:5">{<block_content pos:start="35:5" pos:end="39:18">

    <label pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:8">fail</name>:</label>

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><call pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:13">close</name><argument_list pos:start="37:14" pos:end="37:21">(<argument pos:start="37:15" pos:end="37:20"><expr pos:start="37:15" pos:end="37:20"><name pos:start="37:15" pos:end="37:20">rtc_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:31"><expr pos:start="45:5" pos:end="45:30"><call pos:start="45:5" pos:end="45:30"><name pos:start="45:5" pos:end="45:22">enable_sigio_timer</name><argument_list pos:start="45:23" pos:end="45:30">(<argument pos:start="45:24" pos:end="45:29"><expr pos:start="45:24" pos:end="45:29"><name pos:start="45:24" pos:end="45:29">rtc_fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:11"><name pos:start="49:5" pos:end="49:5">t</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:11">priv</name></name> <operator pos:start="49:13" pos:end="49:13">=</operator> <operator pos:start="49:15" pos:end="49:15">(</operator><name pos:start="49:16" pos:end="49:19">void</name> <operator pos:start="49:21" pos:end="49:21">*</operator><operator pos:start="49:22" pos:end="49:22">)</operator><operator pos:start="49:23" pos:end="49:23">(</operator><name pos:start="49:24" pos:end="49:27">long</name><operator pos:start="49:28" pos:end="49:28">)</operator><name pos:start="49:29" pos:end="49:34">rtc_fd</name></expr>;</expr_stmt>



    <return pos:start="53:5" pos:end="53:13">return <expr pos:start="53:12" pos:end="53:12"><literal type="number" pos:start="53:12" pos:end="53:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
