<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14687.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:46"><name pos:start="1:1" pos:end="1:21">yuv2mono_2_c_template</name><argument_list pos:start="1:22" pos:end="9:46">(<argument pos:start="1:23" pos:end="1:35">SwsContext *c</argument>, <argument pos:start="1:38" pos:end="1:58">const int16_t *buf[<literal type="number" pos:start="1:57" pos:end="1:57">2</literal>]</argument>,

                      <argument pos:start="3:23" pos:end="3:44">const int16_t *ubuf[<literal type="number" pos:start="3:43" pos:end="3:43">2</literal>]</argument>, <argument pos:start="3:47" pos:end="3:68">const int16_t *vbuf[<literal type="number" pos:start="3:67" pos:end="3:67">2</literal>]</argument>,

                      <argument pos:start="5:23" pos:end="5:44">const int16_t *abuf[<literal type="number" pos:start="5:43" pos:end="5:43">2</literal>]</argument>, <argument pos:start="5:47" pos:end="5:59">uint8_t *dest</argument>, <argument pos:start="5:62" pos:end="5:69">int dstW</argument>,

                      <argument pos:start="7:23" pos:end="7:32">int yalpha</argument>, <argument pos:start="7:35" pos:end="7:45">int uvalpha</argument>, <argument pos:start="7:48" pos:end="7:52">int y</argument>,

                      <argument pos:start="9:23" pos:end="9:45">enum PixelFormat target</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="67:1">{<block_content pos:start="13:5" pos:end="65:5">

    <decl_stmt pos:start="13:5" pos:end="13:52"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int16_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">buf0</name>  <init pos:start="13:26" pos:end="13:33">= <expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:30">buf</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>]</index></name></expr></init></decl>,  <decl pos:start="13:37" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">buf1</name>  <init pos:start="13:44" pos:end="13:51">= <expr pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:48">buf</name><index pos:start="13:49" pos:end="13:51">[<expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:25"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier> <specifier pos:start="15:21" pos:end="15:25">const</specifier></type> <name pos:start="15:27" pos:end="15:30">d128</name> <init pos:start="15:32" pos:end="15:54">= <expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:47">dither_8x8_220</name><index pos:start="15:48" pos:end="15:54">[<expr pos:start="15:49" pos:end="15:53"><name pos:start="15:49" pos:end="15:49">y</name> <operator pos:start="15:51" pos:end="15:51">&amp;</operator> <literal type="number" pos:start="15:53" pos:end="15:53">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type>  <name pos:start="17:10" pos:end="17:16">yalpha1</name> <init pos:start="17:18" pos:end="17:32">= <expr pos:start="17:20" pos:end="17:32"><literal type="number" pos:start="17:20" pos:end="17:25">4095</literal> <operator pos:start="17:25" pos:end="17:25">-</operator> <name pos:start="17:27" pos:end="17:32">yalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="65:5">for <control pos:start="23:9" pos:end="23:33">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:25"><expr pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:24">dstW</name></expr>;</condition> <incr pos:start="23:27" pos:end="23:32"><expr pos:start="23:27" pos:end="23:32"><name pos:start="23:27" pos:end="23:27">i</name> <operator pos:start="23:29" pos:end="23:30">+=</operator> <literal type="number" pos:start="23:32" pos:end="23:32">8</literal></expr></incr>)</control> <block pos:start="23:35" pos:end="65:5">{<block_content pos:start="25:9" pos:end="63:35">

        <decl_stmt pos:start="25:9" pos:end="25:23"><decl pos:start="25:9" pos:end="25:13"><type pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">int</name></type> <name pos:start="25:13" pos:end="25:13">Y</name></decl>, <decl pos:start="25:16" pos:end="25:22"><type ref="prev" pos:start="25:9" pos:end="25:11"/><name pos:start="25:16" pos:end="25:18">acc</name> <init pos:start="25:20" pos:end="25:22">= <expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:65"><expr pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:9">Y</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:24"><name pos:start="29:14" pos:end="29:17">buf0</name><index pos:start="29:18" pos:end="29:24">[<expr pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">i</name> <operator pos:start="29:21" pos:end="29:21">+</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>]</index></name> <operator pos:start="29:26" pos:end="29:26">*</operator> <name pos:start="29:28" pos:end="29:34">yalpha1</name> <operator pos:start="29:36" pos:end="29:36">+</operator> <name pos:start="29:38" pos:end="29:48"><name pos:start="29:38" pos:end="29:41">buf1</name><index pos:start="29:42" pos:end="29:48">[<expr pos:start="29:43" pos:end="29:47"><name pos:start="29:43" pos:end="29:43">i</name> <operator pos:start="29:45" pos:end="29:45">+</operator> <literal type="number" pos:start="29:47" pos:end="29:47">0</literal></expr>]</index></name> <operator pos:start="29:50" pos:end="29:50">*</operator> <name pos:start="29:52" pos:end="29:57">yalpha</name><operator pos:start="29:58" pos:end="29:58">)</operator> <operator pos:start="29:60" pos:end="29:61">&gt;&gt;</operator> <literal type="number" pos:start="29:63" pos:end="29:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:22">accumulate_bit</name><argument_list pos:start="31:23" pos:end="31:40">(<argument pos:start="31:24" pos:end="31:26"><expr pos:start="31:24" pos:end="31:26"><name pos:start="31:24" pos:end="31:26">acc</name></expr></argument>, <argument pos:start="31:29" pos:end="31:39"><expr pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:29">Y</name> <operator pos:start="31:31" pos:end="31:31">+</operator> <name pos:start="31:33" pos:end="31:39"><name pos:start="31:33" pos:end="31:36">d128</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:65"><expr pos:start="33:9" pos:end="33:64"><name pos:start="33:9" pos:end="33:9">Y</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:17">buf0</name><index pos:start="33:18" pos:end="33:24">[<expr pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:19">i</name> <operator pos:start="33:21" pos:end="33:21">+</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr>]</index></name> <operator pos:start="33:26" pos:end="33:26">*</operator> <name pos:start="33:28" pos:end="33:34">yalpha1</name> <operator pos:start="33:36" pos:end="33:36">+</operator> <name pos:start="33:38" pos:end="33:48"><name pos:start="33:38" pos:end="33:41">buf1</name><index pos:start="33:42" pos:end="33:48">[<expr pos:start="33:43" pos:end="33:47"><name pos:start="33:43" pos:end="33:43">i</name> <operator pos:start="33:45" pos:end="33:45">+</operator> <literal type="number" pos:start="33:47" pos:end="33:47">1</literal></expr>]</index></name> <operator pos:start="33:50" pos:end="33:50">*</operator> <name pos:start="33:52" pos:end="33:57">yalpha</name><operator pos:start="33:58" pos:end="33:58">)</operator> <operator pos:start="33:60" pos:end="33:61">&gt;&gt;</operator> <literal type="number" pos:start="33:63" pos:end="33:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><call pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:22">accumulate_bit</name><argument_list pos:start="35:23" pos:end="35:40">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">acc</name></expr></argument>, <argument pos:start="35:29" pos:end="35:39"><expr pos:start="35:29" pos:end="35:39"><name pos:start="35:29" pos:end="35:29">Y</name> <operator pos:start="35:31" pos:end="35:31">+</operator> <name pos:start="35:33" pos:end="35:39"><name pos:start="35:33" pos:end="35:36">d128</name><index pos:start="35:37" pos:end="35:39">[<expr pos:start="35:38" pos:end="35:38"><literal type="number" pos:start="35:38" pos:end="35:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:65"><expr pos:start="37:9" pos:end="37:64"><name pos:start="37:9" pos:end="37:9">Y</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <operator pos:start="37:13" pos:end="37:13">(</operator><name pos:start="37:14" pos:end="37:24"><name pos:start="37:14" pos:end="37:17">buf0</name><index pos:start="37:18" pos:end="37:24">[<expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:19">i</name> <operator pos:start="37:21" pos:end="37:21">+</operator> <literal type="number" pos:start="37:23" pos:end="37:23">2</literal></expr>]</index></name> <operator pos:start="37:26" pos:end="37:26">*</operator> <name pos:start="37:28" pos:end="37:34">yalpha1</name> <operator pos:start="37:36" pos:end="37:36">+</operator> <name pos:start="37:38" pos:end="37:48"><name pos:start="37:38" pos:end="37:41">buf1</name><index pos:start="37:42" pos:end="37:48">[<expr pos:start="37:43" pos:end="37:47"><name pos:start="37:43" pos:end="37:43">i</name> <operator pos:start="37:45" pos:end="37:45">+</operator> <literal type="number" pos:start="37:47" pos:end="37:47">2</literal></expr>]</index></name> <operator pos:start="37:50" pos:end="37:50">*</operator> <name pos:start="37:52" pos:end="37:57">yalpha</name><operator pos:start="37:58" pos:end="37:58">)</operator> <operator pos:start="37:60" pos:end="37:61">&gt;&gt;</operator> <literal type="number" pos:start="37:63" pos:end="37:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><call pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:22">accumulate_bit</name><argument_list pos:start="39:23" pos:end="39:40">(<argument pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:26">acc</name></expr></argument>, <argument pos:start="39:29" pos:end="39:39"><expr pos:start="39:29" pos:end="39:39"><name pos:start="39:29" pos:end="39:29">Y</name> <operator pos:start="39:31" pos:end="39:31">+</operator> <name pos:start="39:33" pos:end="39:39"><name pos:start="39:33" pos:end="39:36">d128</name><index pos:start="39:37" pos:end="39:39">[<expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:65"><expr pos:start="41:9" pos:end="41:64"><name pos:start="41:9" pos:end="41:9">Y</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <operator pos:start="41:13" pos:end="41:13">(</operator><name pos:start="41:14" pos:end="41:24"><name pos:start="41:14" pos:end="41:17">buf0</name><index pos:start="41:18" pos:end="41:24">[<expr pos:start="41:19" pos:end="41:23"><name pos:start="41:19" pos:end="41:19">i</name> <operator pos:start="41:21" pos:end="41:21">+</operator> <literal type="number" pos:start="41:23" pos:end="41:23">3</literal></expr>]</index></name> <operator pos:start="41:26" pos:end="41:26">*</operator> <name pos:start="41:28" pos:end="41:34">yalpha1</name> <operator pos:start="41:36" pos:end="41:36">+</operator> <name pos:start="41:38" pos:end="41:48"><name pos:start="41:38" pos:end="41:41">buf1</name><index pos:start="41:42" pos:end="41:48">[<expr pos:start="41:43" pos:end="41:47"><name pos:start="41:43" pos:end="41:43">i</name> <operator pos:start="41:45" pos:end="41:45">+</operator> <literal type="number" pos:start="41:47" pos:end="41:47">3</literal></expr>]</index></name> <operator pos:start="41:50" pos:end="41:50">*</operator> <name pos:start="41:52" pos:end="41:57">yalpha</name><operator pos:start="41:58" pos:end="41:58">)</operator> <operator pos:start="41:60" pos:end="41:61">&gt;&gt;</operator> <literal type="number" pos:start="41:63" pos:end="41:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:41"><expr pos:start="43:9" pos:end="43:40"><call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:22">accumulate_bit</name><argument_list pos:start="43:23" pos:end="43:40">(<argument pos:start="43:24" pos:end="43:26"><expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">acc</name></expr></argument>, <argument pos:start="43:29" pos:end="43:39"><expr pos:start="43:29" pos:end="43:39"><name pos:start="43:29" pos:end="43:29">Y</name> <operator pos:start="43:31" pos:end="43:31">+</operator> <name pos:start="43:33" pos:end="43:39"><name pos:start="43:33" pos:end="43:36">d128</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><literal type="number" pos:start="43:38" pos:end="43:38">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:65"><expr pos:start="45:9" pos:end="45:64"><name pos:start="45:9" pos:end="45:9">Y</name> <operator pos:start="45:11" pos:end="45:11">=</operator> <operator pos:start="45:13" pos:end="45:13">(</operator><name pos:start="45:14" pos:end="45:24"><name pos:start="45:14" pos:end="45:17">buf0</name><index pos:start="45:18" pos:end="45:24">[<expr pos:start="45:19" pos:end="45:23"><name pos:start="45:19" pos:end="45:19">i</name> <operator pos:start="45:21" pos:end="45:21">+</operator> <literal type="number" pos:start="45:23" pos:end="45:23">4</literal></expr>]</index></name> <operator pos:start="45:26" pos:end="45:26">*</operator> <name pos:start="45:28" pos:end="45:34">yalpha1</name> <operator pos:start="45:36" pos:end="45:36">+</operator> <name pos:start="45:38" pos:end="45:48"><name pos:start="45:38" pos:end="45:41">buf1</name><index pos:start="45:42" pos:end="45:48">[<expr pos:start="45:43" pos:end="45:47"><name pos:start="45:43" pos:end="45:43">i</name> <operator pos:start="45:45" pos:end="45:45">+</operator> <literal type="number" pos:start="45:47" pos:end="45:47">4</literal></expr>]</index></name> <operator pos:start="45:50" pos:end="45:50">*</operator> <name pos:start="45:52" pos:end="45:57">yalpha</name><operator pos:start="45:58" pos:end="45:58">)</operator> <operator pos:start="45:60" pos:end="45:61">&gt;&gt;</operator> <literal type="number" pos:start="45:63" pos:end="45:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:41"><expr pos:start="47:9" pos:end="47:40"><call pos:start="47:9" pos:end="47:40"><name pos:start="47:9" pos:end="47:22">accumulate_bit</name><argument_list pos:start="47:23" pos:end="47:40">(<argument pos:start="47:24" pos:end="47:26"><expr pos:start="47:24" pos:end="47:26"><name pos:start="47:24" pos:end="47:26">acc</name></expr></argument>, <argument pos:start="47:29" pos:end="47:39"><expr pos:start="47:29" pos:end="47:39"><name pos:start="47:29" pos:end="47:29">Y</name> <operator pos:start="47:31" pos:end="47:31">+</operator> <name pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:36">d128</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:65"><expr pos:start="49:9" pos:end="49:64"><name pos:start="49:9" pos:end="49:9">Y</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <operator pos:start="49:13" pos:end="49:13">(</operator><name pos:start="49:14" pos:end="49:24"><name pos:start="49:14" pos:end="49:17">buf0</name><index pos:start="49:18" pos:end="49:24">[<expr pos:start="49:19" pos:end="49:23"><name pos:start="49:19" pos:end="49:19">i</name> <operator pos:start="49:21" pos:end="49:21">+</operator> <literal type="number" pos:start="49:23" pos:end="49:23">5</literal></expr>]</index></name> <operator pos:start="49:26" pos:end="49:26">*</operator> <name pos:start="49:28" pos:end="49:34">yalpha1</name> <operator pos:start="49:36" pos:end="49:36">+</operator> <name pos:start="49:38" pos:end="49:48"><name pos:start="49:38" pos:end="49:41">buf1</name><index pos:start="49:42" pos:end="49:48">[<expr pos:start="49:43" pos:end="49:47"><name pos:start="49:43" pos:end="49:43">i</name> <operator pos:start="49:45" pos:end="49:45">+</operator> <literal type="number" pos:start="49:47" pos:end="49:47">5</literal></expr>]</index></name> <operator pos:start="49:50" pos:end="49:50">*</operator> <name pos:start="49:52" pos:end="49:57">yalpha</name><operator pos:start="49:58" pos:end="49:58">)</operator> <operator pos:start="49:60" pos:end="49:61">&gt;&gt;</operator> <literal type="number" pos:start="49:63" pos:end="49:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><call pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:22">accumulate_bit</name><argument_list pos:start="51:23" pos:end="51:40">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">acc</name></expr></argument>, <argument pos:start="51:29" pos:end="51:39"><expr pos:start="51:29" pos:end="51:39"><name pos:start="51:29" pos:end="51:29">Y</name> <operator pos:start="51:31" pos:end="51:31">+</operator> <name pos:start="51:33" pos:end="51:39"><name pos:start="51:33" pos:end="51:36">d128</name><index pos:start="51:37" pos:end="51:39">[<expr pos:start="51:38" pos:end="51:38"><literal type="number" pos:start="51:38" pos:end="51:38">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:65"><expr pos:start="53:9" pos:end="53:64"><name pos:start="53:9" pos:end="53:9">Y</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:17">buf0</name><index pos:start="53:18" pos:end="53:24">[<expr pos:start="53:19" pos:end="53:23"><name pos:start="53:19" pos:end="53:19">i</name> <operator pos:start="53:21" pos:end="53:21">+</operator> <literal type="number" pos:start="53:23" pos:end="53:23">6</literal></expr>]</index></name> <operator pos:start="53:26" pos:end="53:26">*</operator> <name pos:start="53:28" pos:end="53:34">yalpha1</name> <operator pos:start="53:36" pos:end="53:36">+</operator> <name pos:start="53:38" pos:end="53:48"><name pos:start="53:38" pos:end="53:41">buf1</name><index pos:start="53:42" pos:end="53:48">[<expr pos:start="53:43" pos:end="53:47"><name pos:start="53:43" pos:end="53:43">i</name> <operator pos:start="53:45" pos:end="53:45">+</operator> <literal type="number" pos:start="53:47" pos:end="53:47">6</literal></expr>]</index></name> <operator pos:start="53:50" pos:end="53:50">*</operator> <name pos:start="53:52" pos:end="53:57">yalpha</name><operator pos:start="53:58" pos:end="53:58">)</operator> <operator pos:start="53:60" pos:end="53:61">&gt;&gt;</operator> <literal type="number" pos:start="53:63" pos:end="53:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><call pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:22">accumulate_bit</name><argument_list pos:start="55:23" pos:end="55:40">(<argument pos:start="55:24" pos:end="55:26"><expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">acc</name></expr></argument>, <argument pos:start="55:29" pos:end="55:39"><expr pos:start="55:29" pos:end="55:39"><name pos:start="55:29" pos:end="55:29">Y</name> <operator pos:start="55:31" pos:end="55:31">+</operator> <name pos:start="55:33" pos:end="55:39"><name pos:start="55:33" pos:end="55:36">d128</name><index pos:start="55:37" pos:end="55:39">[<expr pos:start="55:38" pos:end="55:38"><literal type="number" pos:start="55:38" pos:end="55:38">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:65"><expr pos:start="57:9" pos:end="57:64"><name pos:start="57:9" pos:end="57:9">Y</name> <operator pos:start="57:11" pos:end="57:11">=</operator> <operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:24"><name pos:start="57:14" pos:end="57:17">buf0</name><index pos:start="57:18" pos:end="57:24">[<expr pos:start="57:19" pos:end="57:23"><name pos:start="57:19" pos:end="57:19">i</name> <operator pos:start="57:21" pos:end="57:21">+</operator> <literal type="number" pos:start="57:23" pos:end="57:23">7</literal></expr>]</index></name> <operator pos:start="57:26" pos:end="57:26">*</operator> <name pos:start="57:28" pos:end="57:34">yalpha1</name> <operator pos:start="57:36" pos:end="57:36">+</operator> <name pos:start="57:38" pos:end="57:48"><name pos:start="57:38" pos:end="57:41">buf1</name><index pos:start="57:42" pos:end="57:48">[<expr pos:start="57:43" pos:end="57:47"><name pos:start="57:43" pos:end="57:43">i</name> <operator pos:start="57:45" pos:end="57:45">+</operator> <literal type="number" pos:start="57:47" pos:end="57:47">7</literal></expr>]</index></name> <operator pos:start="57:50" pos:end="57:50">*</operator> <name pos:start="57:52" pos:end="57:57">yalpha</name><operator pos:start="57:58" pos:end="57:58">)</operator> <operator pos:start="57:60" pos:end="57:61">&gt;&gt;</operator> <literal type="number" pos:start="57:63" pos:end="57:64">19</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:41"><expr pos:start="59:9" pos:end="59:40"><call pos:start="59:9" pos:end="59:40"><name pos:start="59:9" pos:end="59:22">accumulate_bit</name><argument_list pos:start="59:23" pos:end="59:40">(<argument pos:start="59:24" pos:end="59:26"><expr pos:start="59:24" pos:end="59:26"><name pos:start="59:24" pos:end="59:26">acc</name></expr></argument>, <argument pos:start="59:29" pos:end="59:39"><expr pos:start="59:29" pos:end="59:39"><name pos:start="59:29" pos:end="59:29">Y</name> <operator pos:start="59:31" pos:end="59:31">+</operator> <name pos:start="59:33" pos:end="59:39"><name pos:start="59:33" pos:end="59:36">d128</name><index pos:start="59:37" pos:end="59:39">[<expr pos:start="59:38" pos:end="59:38"><literal type="number" pos:start="59:38" pos:end="59:38">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:35"><expr pos:start="63:9" pos:end="63:34"><call pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:20">output_pixel</name><argument_list pos:start="63:21" pos:end="63:34">(<argument pos:start="63:22" pos:end="63:28"><expr pos:start="63:22" pos:end="63:28"><operator pos:start="63:22" pos:end="63:22">*</operator><name pos:start="63:23" pos:end="63:26">dest</name><operator pos:start="63:27" pos:end="63:28">++</operator></expr></argument>, <argument pos:start="63:31" pos:end="63:33"><expr pos:start="63:31" pos:end="63:33"><name pos:start="63:31" pos:end="63:33">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
