<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10864.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">decode_luma_intra_block</name><parameter_list pos:start="1:28" pos:end="1:54">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:38">VC9Context</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">v</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:53">mquant</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:32">= <expr pos:start="5:25" pos:end="5:32"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:32"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name><operator pos:start="5:30" pos:end="5:30">.</operator><name pos:start="5:31" pos:end="5:32">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">dcdiff</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:38"><expr pos:start="11:5" pos:end="13:37"><name pos:start="11:5" pos:end="11:10">dcdiff</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <call pos:start="11:14" pos:end="13:37"><name pos:start="11:14" pos:end="11:21">get_vlc2</name><argument_list pos:start="11:22" pos:end="13:37">(<argument pos:start="11:23" pos:end="11:24"><expr pos:start="11:23" pos:end="11:24"><name pos:start="11:23" pos:end="11:24">gb</name></expr></argument>, <argument pos:start="11:27" pos:end="11:47"><expr pos:start="11:27" pos:end="11:47"><name pos:start="11:27" pos:end="11:47"><name pos:start="11:27" pos:end="11:27">v</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:40">luma_dc_vlc</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:47">table</name></name></expr></argument>,

                      <argument pos:start="13:23" pos:end="13:33"><expr pos:start="13:23" pos:end="13:33"><name pos:start="13:23" pos:end="13:33">DC_VLC_BITS</name></expr></argument>, <argument pos:start="13:36" pos:end="13:36"><expr pos:start="13:36" pos:end="13:36"><literal type="number" pos:start="13:36" pos:end="13:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="51:5"><if pos:start="15:5" pos:end="51:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><name pos:start="15:9" pos:end="15:14">dcdiff</name></expr>)</condition>

    <block pos:start="17:5" pos:end="51:5">{<block_content pos:start="19:9" pos:end="49:29">

        <if_stmt pos:start="19:9" pos:end="45:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:48">(<expr pos:start="19:13" pos:end="19:25"><name pos:start="19:13" pos:end="19:18">dcdiff</name> <operator pos:start="19:20" pos:end="19:21">==</operator> <literal type="number" pos:start="19:23" pos:end="19:25">119</literal></expr> <comment type="block" pos:start="19:27" pos:end="19:47">/* ESC index value */</comment>)</condition>

        <block pos:start="21:9" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:42">

            <comment type="block" pos:start="23:13" pos:end="23:32">/* TODO: Optimize */</comment>

            <if_stmt pos:start="25:13" pos:end="29:42"><if pos:start="25:13" pos:end="25:55">if <condition pos:start="25:16" pos:end="25:28">(<expr pos:start="25:17" pos:end="25:27"><name pos:start="25:17" pos:end="25:22">mquant</name> <operator pos:start="25:24" pos:end="25:25">==</operator> <literal type="number" pos:start="25:27" pos:end="25:27">1</literal></expr>)</condition><block type="pseudo" pos:start="25:30" pos:end="25:55"><block_content pos:start="25:30" pos:end="25:55"> <expr_stmt pos:start="25:30" pos:end="25:55"><expr pos:start="25:30" pos:end="25:54"><name pos:start="25:30" pos:end="25:35">dcdiff</name> <operator pos:start="25:37" pos:end="25:37">=</operator> <call pos:start="25:39" pos:end="25:54"><name pos:start="25:39" pos:end="25:46">get_bits</name><argument_list pos:start="25:47" pos:end="25:54">(<argument pos:start="25:48" pos:end="25:49"><expr pos:start="25:48" pos:end="25:49"><name pos:start="25:48" pos:end="25:49">gb</name></expr></argument>, <argument pos:start="25:52" pos:end="25:53"><expr pos:start="25:52" pos:end="25:53"><literal type="number" pos:start="25:52" pos:end="25:53">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="27:13" pos:end="27:59">else if <condition pos:start="27:21" pos:end="27:33">(<expr pos:start="27:22" pos:end="27:32"><name pos:start="27:22" pos:end="27:27">mquant</name> <operator pos:start="27:29" pos:end="27:30">==</operator> <literal type="number" pos:start="27:32" pos:end="27:32">2</literal></expr>)</condition><block type="pseudo" pos:start="27:35" pos:end="27:59"><block_content pos:start="27:35" pos:end="27:59"> <expr_stmt pos:start="27:35" pos:end="27:59"><expr pos:start="27:35" pos:end="27:58"><name pos:start="27:35" pos:end="27:40">dcdiff</name> <operator pos:start="27:42" pos:end="27:42">=</operator> <call pos:start="27:44" pos:end="27:58"><name pos:start="27:44" pos:end="27:51">get_bits</name><argument_list pos:start="27:52" pos:end="27:58">(<argument pos:start="27:53" pos:end="27:54"><expr pos:start="27:53" pos:end="27:54"><name pos:start="27:53" pos:end="27:54">gb</name></expr></argument>, <argument pos:start="27:57" pos:end="27:57"><expr pos:start="27:57" pos:end="27:57"><literal type="number" pos:start="27:57" pos:end="27:57">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="29:13" pos:end="29:42">else<block type="pseudo" pos:start="29:18" pos:end="29:42"><block_content pos:start="29:18" pos:end="29:42"> <expr_stmt pos:start="29:18" pos:end="29:42"><expr pos:start="29:18" pos:end="29:41"><name pos:start="29:18" pos:end="29:23">dcdiff</name> <operator pos:start="29:25" pos:end="29:25">=</operator> <call pos:start="29:27" pos:end="29:41"><name pos:start="29:27" pos:end="29:34">get_bits</name><argument_list pos:start="29:35" pos:end="29:41">(<argument pos:start="29:36" pos:end="29:37"><expr pos:start="29:36" pos:end="29:37"><name pos:start="29:36" pos:end="29:37">gb</name></expr></argument>, <argument pos:start="29:40" pos:end="29:40"><expr pos:start="29:40" pos:end="29:40"><literal type="number" pos:start="29:40" pos:end="29:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if>

        <else pos:start="33:9" pos:end="45:9">else

        <block pos:start="35:9" pos:end="45:9">{<block_content pos:start="37:13" pos:end="43:59">

            <if_stmt pos:start="37:13" pos:end="43:59"><if pos:start="37:13" pos:end="39:59">if <condition pos:start="37:16" pos:end="37:28">(<expr pos:start="37:17" pos:end="37:27"><name pos:start="37:17" pos:end="37:22">mquant</name> <operator pos:start="37:24" pos:end="37:25">==</operator> <literal type="number" pos:start="37:27" pos:end="37:27">1</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:59"><block_content pos:start="39:17" pos:end="39:59">

                <expr_stmt pos:start="39:17" pos:end="39:59"><expr pos:start="39:17" pos:end="39:58"><name pos:start="39:17" pos:end="39:22">dcdiff</name> <operator pos:start="39:24" pos:end="39:24">=</operator> <operator pos:start="39:26" pos:end="39:26">(</operator><name pos:start="39:27" pos:end="39:32">dcdiff</name><operator pos:start="39:33" pos:end="39:34">&lt;&lt;</operator><literal type="number" pos:start="39:35" pos:end="39:35">2</literal><operator pos:start="39:36" pos:end="39:36">)</operator> <operator pos:start="39:38" pos:end="39:38">+</operator> <call pos:start="39:40" pos:end="39:54"><name pos:start="39:40" pos:end="39:47">get_bits</name><argument_list pos:start="39:48" pos:end="39:54">(<argument pos:start="39:49" pos:end="39:50"><expr pos:start="39:49" pos:end="39:50"><name pos:start="39:49" pos:end="39:50">gb</name></expr></argument>, <argument pos:start="39:53" pos:end="39:53"><expr pos:start="39:53" pos:end="39:53"><literal type="number" pos:start="39:53" pos:end="39:53">2</literal></expr></argument>)</argument_list></call> <operator pos:start="39:56" pos:end="39:56">-</operator> <literal type="number" pos:start="39:58" pos:end="39:58">3</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="41:13" pos:end="43:59">else if <condition pos:start="41:21" pos:end="41:33">(<expr pos:start="41:22" pos:end="41:32"><name pos:start="41:22" pos:end="41:27">mquant</name> <operator pos:start="41:29" pos:end="41:30">==</operator> <literal type="number" pos:start="41:32" pos:end="41:32">2</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:59"><block_content pos:start="43:17" pos:end="43:59">

                <expr_stmt pos:start="43:17" pos:end="43:59"><expr pos:start="43:17" pos:end="43:58"><name pos:start="43:17" pos:end="43:22">dcdiff</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <operator pos:start="43:26" pos:end="43:26">(</operator><name pos:start="43:27" pos:end="43:32">dcdiff</name><operator pos:start="43:33" pos:end="43:34">&lt;&lt;</operator><literal type="number" pos:start="43:35" pos:end="43:35">1</literal><operator pos:start="43:36" pos:end="43:36">)</operator> <operator pos:start="43:38" pos:end="43:38">+</operator> <call pos:start="43:40" pos:end="43:54"><name pos:start="43:40" pos:end="43:47">get_bits</name><argument_list pos:start="43:48" pos:end="43:54">(<argument pos:start="43:49" pos:end="43:50"><expr pos:start="43:49" pos:end="43:50"><name pos:start="43:49" pos:end="43:50">gb</name></expr></argument>, <argument pos:start="43:53" pos:end="43:53"><expr pos:start="43:53" pos:end="43:53"><literal type="number" pos:start="43:53" pos:end="43:53">1</literal></expr></argument>)</argument_list></call> <operator pos:start="43:56" pos:end="43:56">-</operator> <literal type="number" pos:start="43:58" pos:end="43:58">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="47:9" pos:end="49:29"><if pos:start="47:9" pos:end="49:29">if <condition pos:start="47:12" pos:end="47:28">(<expr pos:start="47:13" pos:end="47:27"><call pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:20">get_bits</name><argument_list pos:start="47:21" pos:end="47:27">(<argument pos:start="47:22" pos:end="47:23"><expr pos:start="47:22" pos:end="47:23"><name pos:start="47:22" pos:end="47:23">gb</name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:29"><block_content pos:start="49:13" pos:end="49:29">

            <expr_stmt pos:start="49:13" pos:end="49:29"><expr pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:18">dcdiff</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <operator pos:start="49:22" pos:end="49:22">-</operator><name pos:start="49:23" pos:end="49:28">dcdiff</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:64">/* FIXME: 8.1.1.15, p(1)13, coeff scaling for Adv Profile */</comment>



    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
