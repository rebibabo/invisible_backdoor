<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25475.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_bsfs</name><parameter_list pos:start="1:22" pos:end="3:54">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:26">void</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:35">log_ctx</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:58"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:47">char</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:58">bsfs_spec</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:53"><decl pos:start="3:23" pos:end="3:53"><type pos:start="3:23" pos:end="3:53"><name pos:start="3:23" pos:end="3:46">AVBitStreamFilterContext</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier><modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">bsfs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:18">bsf_name</name></decl>, <decl pos:start="7:21" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">buf</name></decl>, <decl pos:start="7:27" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:34">saveptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:31"><if pos:start="13:5" pos:end="15:31">if <condition pos:start="13:8" pos:end="13:38">(<expr pos:start="13:9" pos:end="13:37"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:13">buf</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:36"><name pos:start="13:17" pos:end="13:25">av_strdup</name><argument_list pos:start="13:26" pos:end="13:36">(<argument pos:start="13:27" pos:end="13:35"><expr pos:start="13:27" pos:end="13:35"><name pos:start="13:27" pos:end="13:35">bsfs_spec</name></expr></argument>)</argument_list></call><operator pos:start="13:37" pos:end="13:37">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:31"><block_content pos:start="15:9" pos:end="15:31">

        <return pos:start="15:9" pos:end="15:31">return <expr pos:start="15:16" pos:end="15:30"><call pos:start="15:16" pos:end="15:30"><name pos:start="15:16" pos:end="15:22">AVERROR</name><argument_list pos:start="15:23" pos:end="15:30">(<argument pos:start="15:24" pos:end="15:29"><expr pos:start="15:24" pos:end="15:29"><name pos:start="15:24" pos:end="15:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="19:5" pos:end="53:5">while <condition pos:start="19:11" pos:end="19:52">(<expr pos:start="19:12" pos:end="19:51"><name pos:start="19:12" pos:end="19:19">bsf_name</name> <operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:51"><name pos:start="19:23" pos:end="19:31">av_strtok</name><argument_list pos:start="19:32" pos:end="19:51">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">buf</name></expr></argument>, <argument pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><literal type="string" pos:start="19:38" pos:end="19:40">","</literal></expr></argument>, <argument pos:start="19:43" pos:end="19:50"><expr pos:start="19:43" pos:end="19:50"><operator pos:start="19:43" pos:end="19:43">&amp;</operator><name pos:start="19:44" pos:end="19:50">saveptr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:54" pos:end="53:5">{<block_content pos:start="21:9" pos:end="51:19">

        <decl_stmt pos:start="21:9" pos:end="21:75"><decl pos:start="21:9" pos:end="21:74"><type pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:32">AVBitStreamFilterContext</name> <modifier pos:start="21:34" pos:end="21:34">*</modifier></type><name pos:start="21:35" pos:end="21:37">bsf</name> <init pos:start="21:39" pos:end="21:74">= <expr pos:start="21:41" pos:end="21:74"><call pos:start="21:41" pos:end="21:74"><name pos:start="21:41" pos:end="21:64">av_bitstream_filter_init</name><argument_list pos:start="21:65" pos:end="21:74">(<argument pos:start="21:66" pos:end="21:73"><expr pos:start="21:66" pos:end="21:73"><name pos:start="21:66" pos:end="21:73">bsf_name</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="25:9" pos:end="39:9"><if pos:start="25:9" pos:end="39:9">if <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:16">bsf</name></expr>)</condition> <block pos:start="25:19" pos:end="39:9">{<block_content pos:start="27:13" pos:end="37:21">

            <expr_stmt pos:start="27:13" pos:end="33:29"><expr pos:start="27:13" pos:end="33:28"><call pos:start="27:13" pos:end="33:28"><name pos:start="27:13" pos:end="27:18">av_log</name><argument_list pos:start="27:19" pos:end="33:28">(<argument pos:start="27:20" pos:end="27:26"><expr pos:start="27:20" pos:end="27:26"><name pos:start="27:20" pos:end="27:26">log_ctx</name></expr></argument>, <argument pos:start="27:29" pos:end="27:40"><expr pos:start="27:29" pos:end="27:40"><name pos:start="27:29" pos:end="27:40">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="29:20" pos:end="31:64"><expr pos:start="29:20" pos:end="31:64"><literal type="string" pos:start="29:20" pos:end="29:72">"Cannot initialize bitstream filter with name '%s', "</literal>

                   <literal type="string" pos:start="31:20" pos:end="31:64">"unknown filter or internal error happened\n"</literal></expr></argument>,

                   <argument pos:start="33:20" pos:end="33:27"><expr pos:start="33:20" pos:end="33:27"><name pos:start="33:20" pos:end="33:27">bsf_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:33">AVERROR_UNKNOWN</name></expr>;</expr_stmt>

            <goto pos:start="37:13" pos:end="37:21">goto <name pos:start="37:18" pos:end="37:20">end</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="43:9" pos:end="43:60">/* append bsf context to the list of bsf contexts */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:20"><expr pos:start="45:9" pos:end="45:19"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:13">bsfs</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:19">bsf</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:26"><expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:12">bsfs</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">&amp;</operator><name pos:start="47:17" pos:end="47:25"><name pos:start="47:17" pos:end="47:19">bsf</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:25">next</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:19"><expr pos:start="51:9" pos:end="51:18"><name pos:start="51:9" pos:end="51:11">buf</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></while>



<label pos:start="57:1" pos:end="57:4"><name pos:start="57:1" pos:end="57:3">end</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:17"><expr pos:start="59:5" pos:end="59:16"><call pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:11">av_free</name><argument_list pos:start="59:12" pos:end="59:16">(<argument pos:start="59:13" pos:end="59:15"><expr pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:15">return <expr pos:start="61:12" pos:end="61:14"><name pos:start="61:12" pos:end="61:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
