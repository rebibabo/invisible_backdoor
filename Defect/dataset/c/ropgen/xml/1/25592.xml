<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25592.c" pos:tabs="8"><function pos:start="1:1" pos:end="173:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">ff_imdct_calc_3dn2</name><parameter_list pos:start="1:24" pos:end="3:63">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:35">MDCTContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:49">FFTSample</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:57">output</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:46"><decl pos:start="3:25" pos:end="3:46"><type pos:start="3:25" pos:end="3:46"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:39">FFTSample</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:46">input</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:62"><decl pos:start="3:49" pos:end="3:62"><type pos:start="3:49" pos:end="3:62"><name pos:start="3:49" pos:end="3:57">FFTSample</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">tmp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="173:1">{<block_content pos:start="7:5" pos:end="171:26">

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">long</name></type> <name pos:start="7:10" pos:end="7:11">n8</name></decl>, <decl pos:start="7:14" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:14" pos:end="7:15">n4</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:18" pos:end="7:19">n2</name></decl>, <decl pos:start="7:22" pos:end="7:22"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:22" pos:end="7:22">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">x86_reg</name></type> <name pos:start="9:13" pos:end="9:13">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:43"><decl pos:start="11:5" pos:end="11:42"><type pos:start="11:5" pos:end="11:20"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:18">uint16_t</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:26">revtab</name> <init pos:start="11:28" pos:end="11:42">= <expr pos:start="11:30" pos:end="11:42"><name pos:start="11:30" pos:end="11:42"><name pos:start="11:30" pos:end="11:30">s</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">fft</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:42">revtab</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:21"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:19">FFTSample</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:25">tcos</name> <init pos:start="13:27" pos:end="13:35">= <expr pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:35"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:35">tcos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:35"><type pos:start="15:5" pos:end="15:21"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:19">FFTSample</name> <modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:25">tsin</name> <init pos:start="15:27" pos:end="15:35">= <expr pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:35"><name pos:start="15:29" pos:end="15:29">s</name><operator pos:start="15:30" pos:end="15:31">-&gt;</operator><name pos:start="15:32" pos:end="15:35">tsin</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:21"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:19">FFTSample</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:24">in1</name></decl>, <decl pos:start="17:27" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:21"><modifier pos:start="17:27" pos:end="17:27">*</modifier></type><name pos:start="17:28" pos:end="17:30">in2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:38"><decl pos:start="19:5" pos:end="19:37"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:14">FFTComplex</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:17">z</name> <init pos:start="19:19" pos:end="19:37">= <expr pos:start="19:21" pos:end="19:37"><operator pos:start="19:21" pos:end="19:21">(</operator><name pos:start="19:22" pos:end="19:31">FFTComplex</name> <operator pos:start="19:33" pos:end="19:33">*</operator><operator pos:start="19:34" pos:end="19:34">)</operator><name pos:start="19:35" pos:end="19:37">tmp</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">n</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <literal type="number" pos:start="23:9" pos:end="23:9">1</literal> <operator pos:start="23:11" pos:end="23:12">&lt;&lt;</operator> <name pos:start="23:14" pos:end="23:21"><name pos:start="23:14" pos:end="23:14">s</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:21">nbits</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:16"><expr pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:6">n2</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <name pos:start="25:10" pos:end="25:10">n</name> <operator pos:start="25:12" pos:end="25:13">&gt;&gt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:16"><expr pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:6">n4</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:10">n</name> <operator pos:start="27:12" pos:end="27:13">&gt;&gt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:16"><expr pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:6">n8</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <name pos:start="29:10" pos:end="29:10">n</name> <operator pos:start="29:12" pos:end="29:13">&gt;&gt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">3</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:22">/* pre rotation */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:7">in1</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <name pos:start="35:11" pos:end="35:15">input</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:7">in2</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:15">input</name> <operator pos:start="37:17" pos:end="37:17">+</operator> <name pos:start="37:19" pos:end="37:20">n2</name> <operator pos:start="37:22" pos:end="37:22">-</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal></expr>;</expr_stmt>

    <for pos:start="39:5" pos:end="77:5">for<control pos:start="39:8" pos:end="39:27">(<init pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">k</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>;</init> <condition pos:start="39:16" pos:end="39:22"><expr pos:start="39:16" pos:end="39:21"><name pos:start="39:16" pos:end="39:16">k</name> <operator pos:start="39:18" pos:end="39:18">&lt;</operator> <name pos:start="39:20" pos:end="39:21">n4</name></expr>;</condition> <incr pos:start="39:24" pos:end="39:26"><expr pos:start="39:24" pos:end="39:26"><name pos:start="39:24" pos:end="39:24">k</name><operator pos:start="39:25" pos:end="39:26">++</operator></expr></incr>)</control> <block pos:start="39:29" pos:end="77:5">{<block_content pos:start="43:9" pos:end="75:10">

        <comment type="line" pos:start="41:9" pos:end="41:91">// FIXME a single block is faster, but gcc 2.95 and 3.4.x on 32bit can't compile it</comment>

        <asm pos:start="43:9" pos:end="67:10">asm <specifier pos:start="43:13" pos:end="43:20">volatile</specifier>(

            "movd       %0, %%mm0 \n\t"

            "movd       %2, %%mm1 \n\t"

            "punpckldq  %1, %%mm0 \n\t"

            "punpckldq  %3, %%mm1 \n\t"

            "movq    %%mm0, %%mm2 \n\t"

            "pfmul   %%mm1, %%mm0 \n\t"

            "pswapd  %%mm1, %%mm1 \n\t"

            "pfmul   %%mm1, %%mm2 \n\t"

            "pfpnacc %%mm2, %%mm0 \n\t"

            ::"m"(in2[-2*k]), "m"(in1[2*k]),

              "m"(tcos[k]), "m"(tsin[k])

        );</asm>

        <asm pos:start="69:9" pos:end="75:10">asm <specifier pos:start="69:13" pos:end="69:20">volatile</specifier>(

            "movq    %%mm0, %0    \n\t"

            :"=m"(z[revtab[k]])

        );</asm>

    </block_content>}</block></for>



    <expr_stmt pos:start="81:5" pos:end="81:28"><expr pos:start="81:5" pos:end="81:27"><call pos:start="81:5" pos:end="81:27"><name pos:start="81:5" pos:end="81:15">ff_fft_calc</name><argument_list pos:start="81:16" pos:end="81:27">(<argument pos:start="81:17" pos:end="81:23"><expr pos:start="81:17" pos:end="81:23"><operator pos:start="81:17" pos:end="81:17">&amp;</operator><name pos:start="81:18" pos:end="81:23"><name pos:start="81:18" pos:end="81:18">s</name><operator pos:start="81:19" pos:end="81:20">-&gt;</operator><name pos:start="81:21" pos:end="81:23">fft</name></name></expr></argument>, <argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><name pos:start="81:26" pos:end="81:26">z</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="85:5" pos:end="85:36">/* post rotation + reordering */</comment>

    <for pos:start="87:5" pos:end="115:5">for<control pos:start="87:8" pos:end="87:27">(<init pos:start="87:9" pos:end="87:14"><expr pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">k</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <literal type="number" pos:start="87:13" pos:end="87:13">0</literal></expr>;</init> <condition pos:start="87:16" pos:end="87:22"><expr pos:start="87:16" pos:end="87:21"><name pos:start="87:16" pos:end="87:16">k</name> <operator pos:start="87:18" pos:end="87:18">&lt;</operator> <name pos:start="87:20" pos:end="87:21">n4</name></expr>;</condition> <incr pos:start="87:24" pos:end="87:26"><expr pos:start="87:24" pos:end="87:26"><name pos:start="87:24" pos:end="87:24">k</name><operator pos:start="87:25" pos:end="87:26">++</operator></expr></incr>)</control> <block pos:start="87:29" pos:end="115:5">{<block_content pos:start="89:9" pos:end="113:10">

        <asm pos:start="89:9" pos:end="113:10">asm <specifier pos:start="89:13" pos:end="89:20">volatile</specifier>(

            "movq       %0, %%mm0 \n\t"

            "movd       %1, %%mm1 \n\t"

            "punpckldq  %2, %%mm1 \n\t"

            "movq    %%mm0, %%mm2 \n\t"

            "pfmul   %%mm1, %%mm0 \n\t"

            "pswapd  %%mm1, %%mm1 \n\t"

            "pfmul   %%mm1, %%mm2 \n\t"

            "pfpnacc %%mm2, %%mm0 \n\t"

            "movq    %%mm0, %0    \n\t"

            :"+m"(z[k])

            :"m"(tcos[k]), "m"(tsin[k])

        );</asm>

    </block_content>}</block></for>



    <expr_stmt pos:start="119:5" pos:end="119:12"><expr pos:start="119:5" pos:end="119:11"><name pos:start="119:5" pos:end="119:5">k</name> <operator pos:start="119:7" pos:end="119:7">=</operator> <name pos:start="119:9" pos:end="119:9">n</name><operator pos:start="119:10" pos:end="119:10">-</operator><literal type="number" pos:start="119:11" pos:end="119:11">8</literal></expr>;</expr_stmt>

    <asm pos:start="121:5" pos:end="121:48">asm <specifier pos:start="121:9" pos:end="121:16">volatile</specifier>("movd %0, %%mm7" ::"r"(1&lt;&lt;31));</asm>

    <asm pos:start="123:5" pos:end="169:6">asm <specifier pos:start="123:9" pos:end="123:16">volatile</specifier>(

        "1: \n\t"

        "movq    (%4,%0), %%mm0 \n\t" <comment type="line" pos:start="127:39" pos:end="127:48">// z[n8+k]</comment>

        "neg %0 \n\t"

        "pswapd -8(%4,%0), %%mm1 \n\t" <comment type="line" pos:start="131:40" pos:end="131:51">// z[n8-1-k]</comment>

        "movq      %%mm0, %%mm2 \n\t"

        "pxor      %%mm7, %%mm2 \n\t"

        "punpckldq %%mm1, %%mm2 \n\t"

        "pswapd    %%mm2, %%mm3 \n\t"

        "punpckhdq %%mm1, %%mm0 \n\t"

        "pswapd    %%mm0, %%mm4 \n\t"

        "pxor      %%mm7, %%mm0 \n\t"

        "pxor      %%mm7, %%mm4 \n\t"

        "movq      %%mm3, -8(%3,%0) \n\t" <comment type="line" pos:start="149:43" pos:end="149:92">// output[n-2-2*k] = { z[n8-1-k].im, -z[n8+k].re }</comment>

        "movq      %%mm4, -8(%2,%0) \n\t" <comment type="line" pos:start="151:43" pos:end="151:92">// output[n2-2-2*k]= { -z[n8-1-k].re, z[n8+k].im }</comment>

        "neg %0 \n\t"

        "movq      %%mm0, (%1,%0) \n\t"   <comment type="line" pos:start="155:43" pos:end="155:92">// output[2*k]     = { -z[n8+k].im, z[n8-1-k].re }</comment>

        "movq      %%mm2, (%2,%0) \n\t"   <comment type="line" pos:start="157:43" pos:end="157:92">// output[n2+2*k]  = { -z[n8+k].re, z[n8-1-k].im }</comment>

        "sub $8, %0 \n\t"

        "jge 1b \n\t"

        :"+r"(k)

        :"r"(output), "r"(output+n2), "r"(output+n), "r"(z+n8)

        :"memory"

    );</asm>

    <asm pos:start="171:5" pos:end="171:26">asm <specifier pos:start="171:9" pos:end="171:16">volatile</specifier>("femms");</asm>

</block_content>}</block></function>
</unit>
