<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21847.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">gif_read_header1</name><parameter_list pos:start="1:28" pos:end="1:40">(<parameter pos:start="1:29" pos:end="1:39"><decl pos:start="1:29" pos:end="1:39"><type pos:start="1:29" pos:end="1:38"><name pos:start="1:29" pos:end="1:36">GifState</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">f</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:24">s</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:27">f</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18"><name pos:start="7:13" pos:end="7:15">sig</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">v</name></decl>, <decl pos:start="9:17" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:17">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:26">has_global_palette</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:28">/* read gif signature */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:7">ret</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <call pos:start="17:11" pos:end="17:31"><name pos:start="17:11" pos:end="17:20">get_buffer</name><argument_list pos:start="17:21" pos:end="17:31">(<argument pos:start="17:22" pos:end="17:22"><expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">f</name></expr></argument>, <argument pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:27">sig</name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="21:18"><if pos:start="19:5" pos:end="21:18">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:14">!=</operator> <literal type="number" pos:start="19:16" pos:end="19:16">6</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:18"><block_content pos:start="21:9" pos:end="21:18">

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="27:18"><if pos:start="23:5" pos:end="27:18">if <condition pos:start="23:8" pos:end="25:40">(<expr pos:start="23:9" pos:end="25:39"><call pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:14">memcmp</name><argument_list pos:start="23:15" pos:end="23:34">(<argument pos:start="23:16" pos:end="23:18"><expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">sig</name></expr></argument>, <argument pos:start="23:21" pos:end="23:30"><expr pos:start="23:21" pos:end="23:30"><name pos:start="23:21" pos:end="23:30">gif87a_sig</name></expr></argument>, <argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><literal type="number" pos:start="23:33" pos:end="23:33">6</literal></expr></argument>)</argument_list></call> <operator pos:start="23:36" pos:end="23:37">!=</operator> <literal type="number" pos:start="23:39" pos:end="23:39">0</literal> <operator pos:start="23:41" pos:end="23:42">&amp;&amp;</operator>

        <call pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:14">memcmp</name><argument_list pos:start="25:15" pos:end="25:34">(<argument pos:start="25:16" pos:end="25:18"><expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">sig</name></expr></argument>, <argument pos:start="25:21" pos:end="25:30"><expr pos:start="25:21" pos:end="25:30"><name pos:start="25:21" pos:end="25:30">gif89a_sig</name></expr></argument>, <argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">6</literal></expr></argument>)</argument_list></call> <operator pos:start="25:36" pos:end="25:37">!=</operator> <literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:28">/* read screen header */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:30">transparent_color_index</name></name> <operator pos:start="33:32" pos:end="33:32">=</operator> <operator pos:start="33:34" pos:end="33:34">-</operator><literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:34"><expr pos:start="35:5" pos:end="35:33"><name pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:19">screen_width</name></name> <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:33"><name pos:start="35:23" pos:end="35:30">get_le16</name><argument_list pos:start="35:31" pos:end="35:33">(<argument pos:start="35:32" pos:end="35:32"><expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:20"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:20">screen_height</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:34"><name pos:start="37:24" pos:end="37:31">get_le16</name><argument_list pos:start="37:32" pos:end="37:34">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if<condition pos:start="39:7" pos:end="41:45">(   <expr pos:start="39:11" pos:end="41:44"><operator pos:start="39:11" pos:end="39:11">(</operator><name pos:start="39:12" pos:end="39:19">unsigned</name><operator pos:start="39:20" pos:end="39:20">)</operator><name pos:start="39:21" pos:end="39:35"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:35">screen_width</name></name>  <operator pos:start="39:38" pos:end="39:38">&gt;</operator> <literal type="number" pos:start="39:40" pos:end="39:44">32767</literal>

       <operator pos:start="41:8" pos:end="41:9">||</operator> <operator pos:start="41:11" pos:end="41:11">(</operator><name pos:start="41:12" pos:end="41:19">unsigned</name><operator pos:start="41:20" pos:end="41:20">)</operator><name pos:start="41:21" pos:end="41:36"><name pos:start="41:21" pos:end="41:21">s</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:36">screen_height</name></name> <operator pos:start="41:38" pos:end="41:38">&gt;</operator> <literal type="number" pos:start="41:40" pos:end="41:44">32767</literal></expr>)</condition><block pos:start="41:46" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:63"><expr pos:start="43:9" pos:end="43:62"><call pos:start="43:9" pos:end="43:62"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:62">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">NULL</name></expr></argument>, <argument pos:start="43:22" pos:end="43:33"><expr pos:start="43:22" pos:end="43:33"><name pos:start="43:22" pos:end="43:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:36" pos:end="43:61"><expr pos:start="43:36" pos:end="43:61"><literal type="string" pos:start="43:36" pos:end="43:61">"picture size too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">v</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:16">get_byte</name><argument_list pos:start="51:17" pos:end="51:19">(<argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><name pos:start="51:18" pos:end="51:18">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:48"><expr pos:start="53:5" pos:end="53:47"><name pos:start="53:5" pos:end="53:23"><name pos:start="53:5" pos:end="53:5">s</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:23">color_resolution</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <operator pos:start="53:27" pos:end="53:27">(</operator><operator pos:start="53:28" pos:end="53:28">(</operator><name pos:start="53:29" pos:end="53:29">v</name> <operator pos:start="53:31" pos:end="53:31">&amp;</operator> <literal type="number" pos:start="53:33" pos:end="53:36">0x70</literal><operator pos:start="53:37" pos:end="53:37">)</operator> <operator pos:start="53:39" pos:end="53:40">&gt;&gt;</operator> <literal type="number" pos:start="53:42" pos:end="53:42">4</literal><operator pos:start="53:43" pos:end="53:43">)</operator> <operator pos:start="53:45" pos:end="53:45">+</operator> <literal type="number" pos:start="53:47" pos:end="53:47">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:22">has_global_palette</name> <operator pos:start="55:24" pos:end="55:24">=</operator> <operator pos:start="55:26" pos:end="55:26">(</operator><name pos:start="55:27" pos:end="55:27">v</name> <operator pos:start="55:29" pos:end="55:29">&amp;</operator> <literal type="number" pos:start="55:31" pos:end="55:34">0x80</literal><operator pos:start="55:35" pos:end="55:35">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:21">bits_per_pixel</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <operator pos:start="57:25" pos:end="57:25">(</operator><name pos:start="57:26" pos:end="57:26">v</name> <operator pos:start="57:28" pos:end="57:28">&amp;</operator> <literal type="number" pos:start="57:30" pos:end="57:33">0x07</literal><operator pos:start="57:34" pos:end="57:34">)</operator> <operator pos:start="57:36" pos:end="57:36">+</operator> <literal type="number" pos:start="57:38" pos:end="57:38">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:29">background_color_index</name></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <call pos:start="59:33" pos:end="59:43"><name pos:start="59:33" pos:end="59:40">get_byte</name><argument_list pos:start="59:41" pos:end="59:43">(<argument pos:start="59:42" pos:end="59:42"><expr pos:start="59:42" pos:end="59:42"><name pos:start="59:42" pos:end="59:42">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="64:0"><expr pos:start="61:5" pos:end="61:15"><call pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:12">get_byte</name><argument_list pos:start="61:13" pos:end="61:15">(<argument pos:start="61:14" pos:end="61:14"><expr pos:start="61:14" pos:end="61:14"><name pos:start="61:14" pos:end="61:14">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>                <comment type="block" pos:start="61:33" pos:end="61:45">/* ignored */</comment>

<cpp:ifdef pos:start="63:1" pos:end="63:12">#<cpp:directive pos:start="63:2" pos:end="63:6">ifdef</cpp:directive> <name pos:start="63:8" pos:end="63:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="65:5" pos:end="72:0"><expr pos:start="65:5" pos:end="69:30"><call pos:start="65:5" pos:end="69:30"><name pos:start="65:5" pos:end="65:10">printf</name><argument_list pos:start="65:11" pos:end="69:30">(<argument pos:start="65:12" pos:end="65:68"><expr pos:start="65:12" pos:end="65:68"><literal type="string" pos:start="65:12" pos:end="65:68">"gif: screen_w=%d screen_h=%d bpp=%d global_palette=%d\n"</literal></expr></argument>,

           <argument pos:start="67:12" pos:end="67:26"><expr pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:26"><name pos:start="67:12" pos:end="67:12">s</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:26">screen_width</name></name></expr></argument>, <argument pos:start="67:29" pos:end="67:44"><expr pos:start="67:29" pos:end="67:44"><name pos:start="67:29" pos:end="67:44"><name pos:start="67:29" pos:end="67:29">s</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:44">screen_height</name></name></expr></argument>, <argument pos:start="67:47" pos:end="67:63"><expr pos:start="67:47" pos:end="67:63"><name pos:start="67:47" pos:end="67:63"><name pos:start="67:47" pos:end="67:47">s</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:63">bits_per_pixel</name></name></expr></argument>,

           <argument pos:start="69:12" pos:end="69:29"><expr pos:start="69:12" pos:end="69:29"><name pos:start="69:12" pos:end="69:29">has_global_palette</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:27">(<expr pos:start="73:9" pos:end="73:26"><name pos:start="73:9" pos:end="73:26">has_global_palette</name></expr>)</condition> <block pos:start="73:29" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:48">

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:9">n</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <literal type="number" pos:start="75:13" pos:end="75:13">1</literal> <operator pos:start="75:15" pos:end="75:16">&lt;&lt;</operator> <name pos:start="75:18" pos:end="75:34"><name pos:start="75:18" pos:end="75:18">s</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:34">bits_per_pixel</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:48"><expr pos:start="77:9" pos:end="77:47"><call pos:start="77:9" pos:end="77:47"><name pos:start="77:9" pos:end="77:18">get_buffer</name><argument_list pos:start="77:19" pos:end="77:47">(<argument pos:start="77:20" pos:end="77:20"><expr pos:start="77:20" pos:end="77:20"><name pos:start="77:20" pos:end="77:20">f</name></expr></argument>, <argument pos:start="77:23" pos:end="77:39"><expr pos:start="77:23" pos:end="77:39"><name pos:start="77:23" pos:end="77:39"><name pos:start="77:23" pos:end="77:23">s</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:39">global_palette</name></name></expr></argument>, <argument pos:start="77:42" pos:end="77:46"><expr pos:start="77:42" pos:end="77:46"><name pos:start="77:42" pos:end="77:42">n</name> <operator pos:start="77:44" pos:end="77:44">*</operator> <literal type="number" pos:start="77:46" pos:end="77:46">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
