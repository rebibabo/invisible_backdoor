<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25378.c" pos:tabs="8"><function pos:start="1:1" pos:end="32:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">mxf_read_content_storage</name><parameter_list pos:start="1:36" pos:end="1:111">(<parameter pos:start="1:37" pos:end="1:45"><decl pos:start="1:37" pos:end="1:45"><type pos:start="1:37" pos:end="1:45"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">arg</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:58">AVIOContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">pb</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:71"><decl pos:start="1:65" pos:end="1:71"><type pos:start="1:65" pos:end="1:71"><name pos:start="1:65" pos:end="1:67">int</name></type> <name pos:start="1:69" pos:end="1:71">tag</name></decl></parameter>, <parameter pos:start="1:74" pos:end="1:81"><decl pos:start="1:74" pos:end="1:81"><type pos:start="1:74" pos:end="1:81"><name pos:start="1:74" pos:end="1:76">int</name></type> <name pos:start="1:78" pos:end="1:81">size</name></decl></parameter>, <parameter pos:start="1:84" pos:end="1:90"><decl pos:start="1:84" pos:end="1:90"><type pos:start="1:84" pos:end="1:90"><name pos:start="1:84" pos:end="1:86">UID</name></type> <name pos:start="1:88" pos:end="1:90">uid</name></decl></parameter>, <parameter pos:start="1:93" pos:end="1:110"><decl pos:start="1:93" pos:end="1:110"><type pos:start="1:93" pos:end="1:110"><name pos:start="1:93" pos:end="1:99">int64_t</name></type> <name pos:start="1:101" pos:end="1:110">klv_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="32:1">{<block_content pos:start="5:5" pos:end="30:13">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MXFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">mxf</name> <init pos:start="5:21" pos:end="5:25">= <expr pos:start="5:23" pos:end="5:25"><name pos:start="5:23" pos:end="5:25">arg</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="7:5" pos:end="28:5">switch <condition pos:start="7:12" pos:end="7:16">(<expr pos:start="7:13" pos:end="7:15"><name pos:start="7:13" pos:end="7:15">tag</name></expr>)</condition> <block pos:start="7:18" pos:end="28:5">{<block_content pos:start="9:5" pos:end="26:14">

    <case pos:start="9:5" pos:end="9:16">case <expr pos:start="9:10" pos:end="9:15"><literal type="number" pos:start="9:10" pos:end="9:15">0x1901</literal></expr>:</case>




        <expr_stmt pos:start="14:9" pos:end="14:44"><expr pos:start="14:9" pos:end="14:43"><name pos:start="14:9" pos:end="14:27"><name pos:start="14:9" pos:end="14:11">mxf</name><operator pos:start="14:12" pos:end="14:13">-&gt;</operator><name pos:start="14:14" pos:end="14:27">packages_count</name></name> <operator pos:start="14:29" pos:end="14:29">=</operator> <call pos:start="14:31" pos:end="14:43"><name pos:start="14:31" pos:end="14:39">avio_rb32</name><argument_list pos:start="14:40" pos:end="14:43">(<argument pos:start="14:41" pos:end="14:42"><expr pos:start="14:41" pos:end="14:42"><name pos:start="14:41" pos:end="14:42">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="16:9" pos:end="16:73"><expr pos:start="16:9" pos:end="16:72"><name pos:start="16:9" pos:end="16:26"><name pos:start="16:9" pos:end="16:11">mxf</name><operator pos:start="16:12" pos:end="16:13">-&gt;</operator><name pos:start="16:14" pos:end="16:26">packages_refs</name></name> <operator pos:start="16:28" pos:end="16:28">=</operator> <call pos:start="16:30" pos:end="16:72"><name pos:start="16:30" pos:end="16:38">av_calloc</name><argument_list pos:start="16:39" pos:end="16:72">(<argument pos:start="16:40" pos:end="16:58"><expr pos:start="16:40" pos:end="16:58"><name pos:start="16:40" pos:end="16:58"><name pos:start="16:40" pos:end="16:42">mxf</name><operator pos:start="16:43" pos:end="16:44">-&gt;</operator><name pos:start="16:45" pos:end="16:58">packages_count</name></name></expr></argument>, <argument pos:start="16:61" pos:end="16:71"><expr pos:start="16:61" pos:end="16:71"><sizeof pos:start="16:61" pos:end="16:71">sizeof<argument_list pos:start="16:67" pos:end="16:71">(<argument pos:start="16:68" pos:end="16:70"><expr pos:start="16:68" pos:end="16:70"><name pos:start="16:68" pos:end="16:70">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="18:9" pos:end="20:35"><if pos:start="18:9" pos:end="20:35">if <condition pos:start="18:12" pos:end="18:32">(<expr pos:start="18:13" pos:end="18:31"><operator pos:start="18:13" pos:end="18:13">!</operator><name pos:start="18:14" pos:end="18:31"><name pos:start="18:14" pos:end="18:16">mxf</name><operator pos:start="18:17" pos:end="18:18">-&gt;</operator><name pos:start="18:19" pos:end="18:31">packages_refs</name></name></expr>)</condition><block type="pseudo" pos:start="20:13" pos:end="20:35"><block_content pos:start="20:13" pos:end="20:35">

            <return pos:start="20:13" pos:end="20:35">return <expr pos:start="20:20" pos:end="20:34"><call pos:start="20:20" pos:end="20:34"><name pos:start="20:20" pos:end="20:26">AVERROR</name><argument_list pos:start="20:27" pos:end="20:34">(<argument pos:start="20:28" pos:end="20:33"><expr pos:start="20:28" pos:end="20:33"><name pos:start="20:28" pos:end="20:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="22:9" pos:end="22:25"><expr pos:start="22:9" pos:end="22:24"><call pos:start="22:9" pos:end="22:24"><name pos:start="22:9" pos:end="22:17">avio_skip</name><argument_list pos:start="22:18" pos:end="22:24">(<argument pos:start="22:19" pos:end="22:20"><expr pos:start="22:19" pos:end="22:20"><name pos:start="22:19" pos:end="22:20">pb</name></expr></argument>, <argument pos:start="22:23" pos:end="22:23"><expr pos:start="22:23" pos:end="22:23"><literal type="number" pos:start="22:23" pos:end="22:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="22:27" pos:end="22:85">/* useless size of objects, always 16 according to specs */</comment>

        <expr_stmt pos:start="24:9" pos:end="24:88"><expr pos:start="24:9" pos:end="24:87"><call pos:start="24:9" pos:end="24:87"><name pos:start="24:9" pos:end="24:17">avio_read</name><argument_list pos:start="24:18" pos:end="24:87">(<argument pos:start="24:19" pos:end="24:20"><expr pos:start="24:19" pos:end="24:20"><name pos:start="24:19" pos:end="24:20">pb</name></expr></argument>, <argument pos:start="24:23" pos:end="24:51"><expr pos:start="24:23" pos:end="24:51"><operator pos:start="24:23" pos:end="24:23">(</operator><name pos:start="24:24" pos:end="24:30">uint8_t</name> <operator pos:start="24:32" pos:end="24:32">*</operator><operator pos:start="24:33" pos:end="24:33">)</operator><name pos:start="24:34" pos:end="24:51"><name pos:start="24:34" pos:end="24:36">mxf</name><operator pos:start="24:37" pos:end="24:38">-&gt;</operator><name pos:start="24:39" pos:end="24:51">packages_refs</name></name></expr></argument>, <argument pos:start="24:54" pos:end="24:86"><expr pos:start="24:54" pos:end="24:86"><name pos:start="24:54" pos:end="24:72"><name pos:start="24:54" pos:end="24:56">mxf</name><operator pos:start="24:57" pos:end="24:58">-&gt;</operator><name pos:start="24:59" pos:end="24:72">packages_count</name></name> <operator pos:start="24:74" pos:end="24:74">*</operator> <sizeof pos:start="24:76" pos:end="24:86">sizeof<argument_list pos:start="24:82" pos:end="24:86">(<argument pos:start="24:83" pos:end="24:85"><expr pos:start="24:83" pos:end="24:85"><name pos:start="24:83" pos:end="24:85">UID</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="26:9" pos:end="26:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="30:5" pos:end="30:13">return <expr pos:start="30:12" pos:end="30:12"><literal type="number" pos:start="30:12" pos:end="30:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
