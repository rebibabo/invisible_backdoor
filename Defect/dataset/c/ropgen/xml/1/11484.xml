<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11484.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">term_up_char</name><parameter_list pos:start="1:25" pos:end="1:30">(<parameter pos:start="1:26" pos:end="1:29"><decl pos:start="1:26" pos:end="1:29"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">idx</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:15"><if pos:start="9:5" pos:end="11:15">if <condition pos:start="9:8" pos:end="9:29">(<expr pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:23">term_hist_entry</name> <operator pos:start="9:25" pos:end="9:26">==</operator> <literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:15"><block_content pos:start="11:9" pos:end="11:15">

	<return pos:start="11:9" pos:end="11:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="13:5" pos:end="27:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:23">term_hist_entry</name> <operator pos:start="13:25" pos:end="13:26">==</operator> <operator pos:start="13:28" pos:end="13:28">-</operator><literal type="number" pos:start="13:29" pos:end="13:29">1</literal></expr>)</condition> <block pos:start="13:32" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:30">

	<comment type="block" pos:start="15:9" pos:end="15:31">/* Find latest entry */</comment>

	<for pos:start="17:9" pos:end="23:9">for <control pos:start="17:13" pos:end="17:49">(<init pos:start="17:14" pos:end="17:21"><expr pos:start="17:14" pos:end="17:20"><name pos:start="17:14" pos:end="17:16">idx</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>;</init> <condition pos:start="17:23" pos:end="17:42"><expr pos:start="17:23" pos:end="17:41"><name pos:start="17:23" pos:end="17:25">idx</name> <operator pos:start="17:27" pos:end="17:27">&lt;</operator> <name pos:start="17:29" pos:end="17:41">TERM_MAX_CMDS</name></expr>;</condition> <incr pos:start="17:44" pos:end="17:48"><expr pos:start="17:44" pos:end="17:48"><name pos:start="17:44" pos:end="17:46">idx</name><operator pos:start="17:47" pos:end="17:48">++</operator></expr></incr>)</control> <block pos:start="17:51" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:22">

	    <if_stmt pos:start="19:13" pos:end="21:22"><if pos:start="19:13" pos:end="21:22">if <condition pos:start="19:16" pos:end="19:42">(<expr pos:start="19:17" pos:end="19:41"><name pos:start="19:17" pos:end="19:33"><name pos:start="19:17" pos:end="19:28">term_history</name><index pos:start="19:29" pos:end="19:33">[<expr pos:start="19:30" pos:end="19:32"><name pos:start="19:30" pos:end="19:32">idx</name></expr>]</index></name> <operator pos:start="19:35" pos:end="19:36">==</operator> <name pos:start="19:38" pos:end="19:41">NULL</name></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:22"><block_content pos:start="21:17" pos:end="21:22">

		<break pos:start="21:17" pos:end="21:22">break;</break></block_content></block></if></if_stmt>

	</block_content>}</block></for>

	<expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:23">term_hist_entry</name> <operator pos:start="25:25" pos:end="25:25">=</operator> <name pos:start="25:27" pos:end="25:29">idx</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:19">term_hist_entry</name><operator pos:start="29:20" pos:end="29:21">--</operator></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="41:5"><if pos:start="31:5" pos:end="41:5">if <condition pos:start="31:8" pos:end="31:29">(<expr pos:start="31:9" pos:end="31:28"><name pos:start="31:9" pos:end="31:23">term_hist_entry</name> <operator pos:start="31:25" pos:end="31:26">&gt;=</operator> <literal type="number" pos:start="31:28" pos:end="31:28">0</literal></expr>)</condition> <block pos:start="31:31" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:70">

	<expr_stmt pos:start="33:9" pos:end="33:60"><expr pos:start="33:9" pos:end="33:59"><call pos:start="33:9" pos:end="33:59"><name pos:start="33:9" pos:end="33:14">strcpy</name><argument_list pos:start="33:15" pos:end="33:59">(<argument pos:start="33:16" pos:end="33:27"><expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:27">term_cmd_buf</name></expr></argument>, <argument pos:start="33:30" pos:end="33:58"><expr pos:start="33:30" pos:end="33:58"><name pos:start="33:30" pos:end="33:58"><name pos:start="33:30" pos:end="33:41">term_history</name><index pos:start="33:42" pos:end="33:58">[<expr pos:start="33:43" pos:end="33:57"><name pos:start="33:43" pos:end="33:57">term_hist_entry</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><call pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:19">term_printf</name><argument_list pos:start="35:20" pos:end="35:25">(<argument pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:24"><literal type="string" pos:start="35:21" pos:end="35:24">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="37:9" pos:end="37:41"><expr pos:start="37:9" pos:end="37:40"><call pos:start="37:9" pos:end="37:40"><name pos:start="37:9" pos:end="37:26">term_print_cmdline</name><argument_list pos:start="37:27" pos:end="37:40">(<argument pos:start="37:28" pos:end="37:39"><expr pos:start="37:28" pos:end="37:39"><name pos:start="37:28" pos:end="37:39">term_cmd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="39:9" pos:end="39:70"><expr pos:start="39:9" pos:end="39:69"><name pos:start="39:9" pos:end="39:26">term_cmd_buf_index</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <name pos:start="39:30" pos:end="39:46">term_cmd_buf_size</name> <operator pos:start="39:48" pos:end="39:48">=</operator> <call pos:start="39:50" pos:end="39:69"><name pos:start="39:50" pos:end="39:55">strlen</name><argument_list pos:start="39:56" pos:end="39:69">(<argument pos:start="39:57" pos:end="39:68"><expr pos:start="39:57" pos:end="39:68"><name pos:start="39:57" pos:end="39:68">term_cmd_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
