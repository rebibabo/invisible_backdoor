<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25598.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">free_picture</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:39">MpegEncContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:56"><decl pos:start="1:45" pos:end="1:56"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:51">Picture</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">pic</name></decl></parameter>)</parameter_list><block pos:start="1:58" pos:end="57:1">{<block_content pos:start="3:5" pos:end="55:5">

    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if<condition pos:start="7:7" pos:end="7:56">(<expr pos:start="7:8" pos:end="7:55"><name pos:start="7:8" pos:end="7:19"><name pos:start="7:8" pos:end="7:10">pic</name><operator pos:start="7:11" pos:end="7:12">-&gt;</operator><name pos:start="7:13" pos:end="7:16">data</name><index pos:start="7:17" pos:end="7:19">[<expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr>]</index></name> <operator pos:start="7:21" pos:end="7:22">&amp;&amp;</operator> <name pos:start="7:24" pos:end="7:32"><name pos:start="7:24" pos:end="7:26">pic</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:32">type</name></name><operator pos:start="7:33" pos:end="7:34">!=</operator><name pos:start="7:35" pos:end="7:55">FF_BUFFER_TYPE_SHARED</name></expr>)</condition><block pos:start="7:57" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:34">

        <expr_stmt pos:start="9:9" pos:end="9:34"><expr pos:start="9:9" pos:end="9:33"><call pos:start="9:9" pos:end="9:33"><name pos:start="9:9" pos:end="9:25">free_frame_buffer</name><argument_list pos:start="9:26" pos:end="9:33">(<argument pos:start="9:27" pos:end="9:27"><expr pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">s</name></expr></argument>, <argument pos:start="9:30" pos:end="9:32"><expr pos:start="9:30" pos:end="9:32"><name pos:start="9:30" pos:end="9:32">pic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:27"><expr pos:start="15:5" pos:end="15:26"><call pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:12">av_freep</name><argument_list pos:start="15:13" pos:end="15:26">(<argument pos:start="15:14" pos:end="15:25"><expr pos:start="15:14" pos:end="15:25"><operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:25"><name pos:start="15:15" pos:end="15:17">pic</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:25">mb_var</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><call pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:12">av_freep</name><argument_list pos:start="17:13" pos:end="17:29">(<argument pos:start="17:14" pos:end="17:28"><expr pos:start="17:14" pos:end="17:28"><operator pos:start="17:14" pos:end="17:14">&amp;</operator><name pos:start="17:15" pos:end="17:28"><name pos:start="17:15" pos:end="17:17">pic</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:28">mc_mb_var</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:12">av_freep</name><argument_list pos:start="19:13" pos:end="19:27">(<argument pos:start="19:14" pos:end="19:26"><expr pos:start="19:14" pos:end="19:26"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:26"><name pos:start="19:15" pos:end="19:17">pic</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:26">mb_mean</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:12">av_freep</name><argument_list pos:start="21:13" pos:end="21:32">(<argument pos:start="21:14" pos:end="21:31"><expr pos:start="21:14" pos:end="21:31"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:31"><name pos:start="21:15" pos:end="21:17">pic</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:31">mbskip_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><call pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:12">av_freep</name><argument_list pos:start="23:13" pos:end="23:32">(<argument pos:start="23:14" pos:end="23:31"><expr pos:start="23:14" pos:end="23:31"><operator pos:start="23:14" pos:end="23:14">&amp;</operator><name pos:start="23:15" pos:end="23:31"><name pos:start="23:15" pos:end="23:17">pic</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:31">qscale_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:12">av_freep</name><argument_list pos:start="25:13" pos:end="25:32">(<argument pos:start="25:14" pos:end="25:31"><expr pos:start="25:14" pos:end="25:31"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:31"><name pos:start="25:15" pos:end="25:17">pic</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:31">mb_type_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><call pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:12">av_freep</name><argument_list pos:start="27:13" pos:end="27:29">(<argument pos:start="27:14" pos:end="27:28"><expr pos:start="27:14" pos:end="27:28"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:28"><name pos:start="27:15" pos:end="27:17">pic</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:28">dct_coeff</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:29"><expr pos:start="29:5" pos:end="29:28"><call pos:start="29:5" pos:end="29:28"><name pos:start="29:5" pos:end="29:12">av_freep</name><argument_list pos:start="29:13" pos:end="29:28">(<argument pos:start="29:14" pos:end="29:27"><expr pos:start="29:14" pos:end="29:27"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:27"><name pos:start="29:15" pos:end="29:17">pic</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:27">pan_scan</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">pic</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:16">mb_type</name></name><operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:22">NULL</name></expr>;</expr_stmt>

    <for pos:start="33:5" pos:end="39:5">for<control pos:start="33:8" pos:end="33:22">(<init pos:start="33:9" pos:end="33:12"><expr pos:start="33:9" pos:end="33:11"><name pos:start="33:9" pos:end="33:9">i</name><operator pos:start="33:10" pos:end="33:10">=</operator><literal type="number" pos:start="33:11" pos:end="33:11">0</literal></expr>;</init> <condition pos:start="33:14" pos:end="33:17"><expr pos:start="33:14" pos:end="33:16"><name pos:start="33:14" pos:end="33:14">i</name><operator pos:start="33:15" pos:end="33:15">&lt;</operator><literal type="number" pos:start="33:16" pos:end="33:16">2</literal></expr>;</condition> <incr pos:start="33:19" pos:end="33:21"><expr pos:start="33:19" pos:end="33:21"><name pos:start="33:19" pos:end="33:19">i</name><operator pos:start="33:20" pos:end="33:21">++</operator></expr></incr>)</control><block pos:start="33:23" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:37">

        <expr_stmt pos:start="35:9" pos:end="35:43"><expr pos:start="35:9" pos:end="35:42"><call pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:16">av_freep</name><argument_list pos:start="35:17" pos:end="35:42">(<argument pos:start="35:18" pos:end="35:41"><expr pos:start="35:18" pos:end="35:41"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:41"><name pos:start="35:19" pos:end="35:21">pic</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:38">motion_val_base</name><index pos:start="35:39" pos:end="35:41">[<expr pos:start="35:40" pos:end="35:40"><name pos:start="35:40" pos:end="35:40">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:37"><expr pos:start="37:9" pos:end="37:36"><call pos:start="37:9" pos:end="37:36"><name pos:start="37:9" pos:end="37:16">av_freep</name><argument_list pos:start="37:17" pos:end="37:36">(<argument pos:start="37:18" pos:end="37:35"><expr pos:start="37:18" pos:end="37:35"><operator pos:start="37:18" pos:end="37:18">&amp;</operator><name pos:start="37:19" pos:end="37:35"><name pos:start="37:19" pos:end="37:21">pic</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:32">ref_index</name><index pos:start="37:33" pos:end="37:35">[<expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="55:5">if<condition pos:start="43:7" pos:end="43:42">(<expr pos:start="43:8" pos:end="43:41"><name pos:start="43:8" pos:end="43:16"><name pos:start="43:8" pos:end="43:10">pic</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:16">type</name></name> <operator pos:start="43:18" pos:end="43:19">==</operator> <name pos:start="43:21" pos:end="43:41">FF_BUFFER_TYPE_SHARED</name></expr>)</condition><block pos:start="43:43" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:21">

        <for pos:start="45:9" pos:end="51:9">for<control pos:start="45:12" pos:end="45:26">(<init pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">=</operator><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</init> <condition pos:start="45:18" pos:end="45:21"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:18">i</name><operator pos:start="45:19" pos:end="45:19">&lt;</operator><literal type="number" pos:start="45:20" pos:end="45:20">4</literal></expr>;</condition> <incr pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:23">i</name><operator pos:start="45:24" pos:end="45:25">++</operator></expr></incr>)</control><block pos:start="45:27" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:31">

            <expr_stmt pos:start="47:13" pos:end="49:31"><expr pos:start="47:13" pos:end="49:30"><name pos:start="47:13" pos:end="47:24"><name pos:start="47:13" pos:end="47:15">pic</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">base</name><index pos:start="47:22" pos:end="47:24">[<expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">i</name></expr>]</index></name><operator pos:start="47:25" pos:end="47:25">=</operator>

            <name pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:15">pic</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:21">data</name><index pos:start="49:22" pos:end="49:24">[<expr pos:start="49:23" pos:end="49:23"><name pos:start="49:23" pos:end="49:23">i</name></expr>]</index></name><operator pos:start="49:25" pos:end="49:25">=</operator> <name pos:start="49:27" pos:end="49:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:17"><name pos:start="53:9" pos:end="53:11">pic</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:17">type</name></name><operator pos:start="53:18" pos:end="53:18">=</operator> <literal type="number" pos:start="53:20" pos:end="53:20">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
