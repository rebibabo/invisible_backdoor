<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4756.c" pos:tabs="8"><function pos:start="1:1" pos:end="5:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:4">void</name> <name pos:start="1:6" pos:end="1:11">HELPER</name></type>(<name pos:start="1:13" pos:end="1:27">cpsr_write_eret</name>)<parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">CPUARMState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">env</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:55">uint32_t</name></type> <name pos:start="1:57" pos:end="1:59">val</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="5:1">{<block_content pos:start="3:5" pos:end="4:50">
    <expr_stmt pos:start="3:5" pos:end="3:67"><expr pos:start="3:5" pos:end="3:66"><call pos:start="3:5" pos:end="3:66"><name pos:start="3:5" pos:end="3:14">cpsr_write</name><argument_list pos:start="3:15" pos:end="3:66">(<argument pos:start="3:16" pos:end="3:18"><expr pos:start="3:16" pos:end="3:18"><name pos:start="3:16" pos:end="3:18">env</name></expr></argument>, <argument pos:start="3:21" pos:end="3:23"><expr pos:start="3:21" pos:end="3:23"><name pos:start="3:21" pos:end="3:23">val</name></expr></argument>, <argument pos:start="3:26" pos:end="3:39"><expr pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:39">CPSR_ERET_MASK</name></expr></argument>, <argument pos:start="3:42" pos:end="3:65"><expr pos:start="3:42" pos:end="3:65"><name pos:start="3:42" pos:end="3:65">CPSRWriteExceptionReturn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="4:5" pos:end="4:50"><expr pos:start="4:5" pos:end="4:49"><call pos:start="4:5" pos:end="4:49"><name pos:start="4:5" pos:end="4:27">arm_call_el_change_hook</name><argument_list pos:start="4:28" pos:end="4:49">(<argument pos:start="4:29" pos:end="4:48"><expr pos:start="4:29" pos:end="4:48"><call pos:start="4:29" pos:end="4:48"><name pos:start="4:29" pos:end="4:43">arm_env_get_cpu</name><argument_list pos:start="4:44" pos:end="4:48">(<argument pos:start="4:45" pos:end="4:47"><expr pos:start="4:45" pos:end="4:47"><name pos:start="4:45" pos:end="4:47">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
