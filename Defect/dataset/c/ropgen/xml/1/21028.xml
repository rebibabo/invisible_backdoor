<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21028.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">dv_decode_ac</name><parameter_list pos:start="1:25" pos:end="1:74">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:38">GetBitContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">gb</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:57"><name pos:start="1:45" pos:end="1:53">BlockInfo</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">mb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:73"><decl pos:start="1:60" pos:end="1:73"><type pos:start="1:60" pos:end="1:73"><name pos:start="1:60" pos:end="1:66">DCTELEM</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:18">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">last_index</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:23">gb</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:37">size_in_bits</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:50"><decl pos:start="7:5" pos:end="7:49"><type pos:start="7:5" pos:end="7:20"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name>  <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:30">scan_table</name>   <init pos:start="7:34" pos:end="7:49">= <expr pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:49"><name pos:start="7:36" pos:end="7:37">mb</name><operator pos:start="7:38" pos:end="7:39">-&gt;</operator><name pos:start="7:40" pos:end="7:49">scan_table</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:20"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:18">uint32_t</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:32">factor_table</name> <init pos:start="9:34" pos:end="9:51">= <expr pos:start="9:36" pos:end="9:51"><name pos:start="9:36" pos:end="9:51"><name pos:start="9:36" pos:end="9:37">mb</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:51">factor_table</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">pos</name>               <init pos:start="11:27" pos:end="11:35">= <expr pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:35"><name pos:start="11:29" pos:end="11:30">mb</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:35">pos</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:25">partial_bit_count</name> <init pos:start="13:27" pos:end="13:49">= <expr pos:start="13:29" pos:end="13:49"><name pos:start="13:29" pos:end="13:49"><name pos:start="13:29" pos:end="13:30">mb</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:49">partial_bit_count</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">level</name></decl>, <decl pos:start="15:16" pos:end="15:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:16" pos:end="15:18">run</name></decl>, <decl pos:start="15:21" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:27">vlc_len</name></decl>, <decl pos:start="15:30" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:30" pos:end="15:34">index</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><call pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:15">OPEN_READER</name><argument_list pos:start="19:16" pos:end="19:23">(<argument pos:start="19:17" pos:end="19:18"><expr pos:start="19:17" pos:end="19:18"><name pos:start="19:17" pos:end="19:18">re</name></expr></argument>, <argument pos:start="19:21" pos:end="19:22"><expr pos:start="19:21" pos:end="19:22"><name pos:start="19:21" pos:end="19:22">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><call pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:16">UPDATE_CACHE</name><argument_list pos:start="21:17" pos:end="21:24">(<argument pos:start="21:18" pos:end="21:19"><expr pos:start="21:18" pos:end="21:19"><name pos:start="21:18" pos:end="21:19">re</name></expr></argument>, <argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:55">/* if we must parse a partial VLC, we do it here */</comment>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:30">(<expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:25">partial_bit_count</name> <operator pos:start="27:27" pos:end="27:27">&gt;</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>)</condition> <block pos:start="27:32" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:34">

        <expr_stmt pos:start="29:9" pos:end="31:90"><expr pos:start="29:9" pos:end="31:89"><name pos:start="29:9" pos:end="29:16">re_cache</name> <operator pos:start="29:18" pos:end="29:18">=</operator> <operator pos:start="29:20" pos:end="29:20">(</operator><operator pos:start="29:21" pos:end="29:21">(</operator><name pos:start="29:22" pos:end="29:29">unsigned</name><operator pos:start="29:30" pos:end="29:30">)</operator><name pos:start="29:31" pos:end="29:38">re_cache</name> <operator pos:start="29:40" pos:end="29:41">&gt;&gt;</operator> <name pos:start="29:43" pos:end="29:59">partial_bit_count</name><operator pos:start="29:60" pos:end="29:60">)</operator> <operator pos:start="29:62" pos:end="29:62">|</operator>

                   <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:42"><name pos:start="31:21" pos:end="31:22">mb</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:42">partial_bit_buffer</name></name> <operator pos:start="31:44" pos:end="31:45">&lt;&lt;</operator> <operator pos:start="31:47" pos:end="31:47">(</operator><sizeof pos:start="31:48" pos:end="31:63">sizeof<argument_list pos:start="31:54" pos:end="31:63">(<argument pos:start="31:55" pos:end="31:62"><expr pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:62">re_cache</name></expr></argument>)</argument_list></sizeof> <operator pos:start="31:65" pos:end="31:65">*</operator> <literal type="number" pos:start="31:67" pos:end="31:69">8</literal> <operator pos:start="31:69" pos:end="31:69">-</operator> <name pos:start="31:71" pos:end="31:87">partial_bit_count</name><operator pos:start="31:88" pos:end="31:88">)</operator><operator pos:start="31:89" pos:end="31:89">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:38"><expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:16">re_index</name> <operator pos:start="33:18" pos:end="33:19">-=</operator> <name pos:start="33:21" pos:end="33:37">partial_bit_count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:10">mb</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:29">partial_bit_count</name></name> <operator pos:start="35:31" pos:end="35:31">=</operator> <literal type="number" pos:start="35:33" pos:end="35:33">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:61">/* get the AC coefficients until last_index is reached */</comment>

    <for pos:start="43:5" pos:end="107:5">for <control pos:start="43:9" pos:end="43:12">(<init pos:start="43:10" pos:end="43:10">;</init><condition pos:start="43:11" pos:end="43:11">;</condition><incr/>)</control> <block pos:start="43:14" pos:end="107:5">{<block_content pos:start="45:9" pos:end="105:29">

        <expr_stmt pos:start="45:9" pos:end="47:26"><expr pos:start="45:9" pos:end="47:25"><call pos:start="45:9" pos:end="47:25"><name pos:start="45:9" pos:end="45:15">av_dlog</name><argument_list pos:start="45:16" pos:end="47:25">(<argument pos:start="45:17" pos:end="45:20"><expr pos:start="45:17" pos:end="45:20"><name pos:start="45:17" pos:end="45:20">NULL</name></expr></argument>, <argument pos:start="45:23" pos:end="45:49"><expr pos:start="45:23" pos:end="45:49"><literal type="string" pos:start="45:23" pos:end="45:49">"%2d: bits=%04x index=%d\n"</literal></expr></argument>, <argument pos:start="45:52" pos:end="45:54"><expr pos:start="45:52" pos:end="45:54"><name pos:start="45:52" pos:end="45:54">pos</name></expr></argument>, <argument pos:start="45:57" pos:end="45:78"><expr pos:start="45:57" pos:end="45:78"><call pos:start="45:57" pos:end="45:78"><name pos:start="45:57" pos:end="45:66">SHOW_UBITS</name><argument_list pos:start="45:67" pos:end="45:78">(<argument pos:start="45:68" pos:end="45:69"><expr pos:start="45:68" pos:end="45:69"><name pos:start="45:68" pos:end="45:69">re</name></expr></argument>, <argument pos:start="45:72" pos:end="45:73"><expr pos:start="45:72" pos:end="45:73"><name pos:start="45:72" pos:end="45:73">gb</name></expr></argument>, <argument pos:start="45:76" pos:end="45:77"><expr pos:start="45:76" pos:end="45:77"><literal type="number" pos:start="45:76" pos:end="45:77">16</literal></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="47:17" pos:end="47:24"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:24">re_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="49:9" pos:end="49:42">/* our own optimized GET_RL_VLC */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:52"><expr pos:start="51:9" pos:end="51:51"><name pos:start="51:9" pos:end="51:13">index</name>   <operator pos:start="51:17" pos:end="51:17">=</operator> <call pos:start="51:19" pos:end="51:51"><name pos:start="51:19" pos:end="51:27">NEG_USR32</name><argument_list pos:start="51:28" pos:end="51:51">(<argument pos:start="51:29" pos:end="51:36"><expr pos:start="51:29" pos:end="51:36"><name pos:start="51:29" pos:end="51:36">re_cache</name></expr></argument>, <argument pos:start="51:39" pos:end="51:50"><expr pos:start="51:39" pos:end="51:50"><name pos:start="51:39" pos:end="51:50">TEX_VLC_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:39"><expr pos:start="53:9" pos:end="53:38"><name pos:start="53:9" pos:end="53:15">vlc_len</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <name pos:start="53:19" pos:end="53:34"><name pos:start="53:19" pos:end="53:27">dv_rl_vlc</name><index pos:start="53:28" pos:end="53:34">[<expr pos:start="53:29" pos:end="53:33"><name pos:start="53:29" pos:end="53:33">index</name></expr>]</index></name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:38">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="61:9"><if pos:start="55:9" pos:end="61:9">if <condition pos:start="55:12" pos:end="55:24">(<expr pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:19">vlc_len</name> <operator pos:start="55:21" pos:end="55:21">&lt;</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>)</condition> <block pos:start="55:26" pos:end="61:9">{<block_content pos:start="57:13" pos:end="59:45">

            <expr_stmt pos:start="57:13" pos:end="57:101"><expr pos:start="57:13" pos:end="57:100"><name pos:start="57:13" pos:end="57:17">index</name> <operator pos:start="57:19" pos:end="57:19">=</operator> <call pos:start="57:21" pos:end="57:75"><name pos:start="57:21" pos:end="57:29">NEG_USR32</name><argument_list pos:start="57:30" pos:end="57:75">(<argument pos:start="57:31" pos:end="57:64"><expr pos:start="57:31" pos:end="57:64"><operator pos:start="57:31" pos:end="57:31">(</operator><name pos:start="57:32" pos:end="57:39">unsigned</name><operator pos:start="57:40" pos:end="57:40">)</operator><name pos:start="57:41" pos:end="57:48">re_cache</name> <operator pos:start="57:50" pos:end="57:51">&lt;&lt;</operator> <name pos:start="57:53" pos:end="57:64">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="57:67" pos:end="57:74"><expr pos:start="57:67" pos:end="57:74"><operator pos:start="57:67" pos:end="57:67">-</operator><name pos:start="57:68" pos:end="57:74">vlc_len</name></expr></argument>)</argument_list></call> <operator pos:start="57:77" pos:end="57:77">+</operator> <name pos:start="57:79" pos:end="57:94"><name pos:start="57:79" pos:end="57:87">dv_rl_vlc</name><index pos:start="57:88" pos:end="57:94">[<expr pos:start="57:89" pos:end="57:93"><name pos:start="57:89" pos:end="57:93">index</name></expr>]</index></name><operator pos:start="57:95" pos:end="57:95">.</operator><name pos:start="57:96" pos:end="57:100">level</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:45"><expr pos:start="59:13" pos:end="59:44"><name pos:start="59:13" pos:end="59:19">vlc_len</name> <operator pos:start="59:21" pos:end="59:21">=</operator> <name pos:start="59:23" pos:end="59:34">TEX_VLC_BITS</name> <operator pos:start="59:36" pos:end="59:36">-</operator> <name pos:start="59:38" pos:end="59:44">vlc_len</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:13">level</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <name pos:start="63:17" pos:end="63:32"><name pos:start="63:17" pos:end="63:25">dv_rl_vlc</name><index pos:start="63:26" pos:end="63:32">[<expr pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:31">index</name></expr>]</index></name><operator pos:start="63:33" pos:end="63:33">.</operator><name pos:start="63:34" pos:end="63:38">level</name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:11">run</name>   <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:32"><name pos:start="65:17" pos:end="65:25">dv_rl_vlc</name><index pos:start="65:26" pos:end="65:32">[<expr pos:start="65:27" pos:end="65:31"><name pos:start="65:27" pos:end="65:31">index</name></expr>]</index></name><operator pos:start="65:33" pos:end="65:33">.</operator><name pos:start="65:34" pos:end="65:36">run</name></expr>;</expr_stmt>



        <comment type="block" pos:start="69:9" pos:end="69:61">/* gotta check if we're still within gb boundaries */</comment>

        <if_stmt pos:start="71:9" pos:end="83:9"><if pos:start="71:9" pos:end="83:9">if <condition pos:start="71:12" pos:end="71:44">(<expr pos:start="71:13" pos:end="71:43"><name pos:start="71:13" pos:end="71:20">re_index</name> <operator pos:start="71:22" pos:end="71:22">+</operator> <name pos:start="71:24" pos:end="71:30">vlc_len</name> <operator pos:start="71:32" pos:end="71:32">&gt;</operator> <name pos:start="71:34" pos:end="71:43">last_index</name></expr>)</condition> <block pos:start="71:46" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:18">

            <comment type="block" pos:start="73:13" pos:end="73:81">/* should be &lt; 16 bits otherwise a codeword could have been parsed */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:58"><expr pos:start="75:13" pos:end="75:57"><name pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:14">mb</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:33">partial_bit_count</name></name> <operator pos:start="75:35" pos:end="75:35">=</operator> <name pos:start="75:37" pos:end="75:46">last_index</name> <operator pos:start="75:48" pos:end="75:48">-</operator> <name pos:start="75:50" pos:end="75:57">re_index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:80"><expr pos:start="77:13" pos:end="77:79"><name pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:14">mb</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:34">partial_bit_buffer</name></name> <operator pos:start="77:36" pos:end="77:36">=</operator> <call pos:start="77:38" pos:end="77:79"><name pos:start="77:38" pos:end="77:46">NEG_USR32</name><argument_list pos:start="77:47" pos:end="77:79">(<argument pos:start="77:48" pos:end="77:55"><expr pos:start="77:48" pos:end="77:55"><name pos:start="77:48" pos:end="77:55">re_cache</name></expr></argument>, <argument pos:start="77:58" pos:end="77:78"><expr pos:start="77:58" pos:end="77:78"><name pos:start="77:58" pos:end="77:78"><name pos:start="77:58" pos:end="77:59">mb</name><operator pos:start="77:60" pos:end="77:61">-&gt;</operator><name pos:start="77:62" pos:end="77:78">partial_bit_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:34"><expr pos:start="79:13" pos:end="79:33"><name pos:start="79:13" pos:end="79:20">re_index</name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:33">last_index</name></expr>;</expr_stmt>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:28"><expr pos:start="85:9" pos:end="85:27"><name pos:start="85:9" pos:end="85:16">re_index</name> <operator pos:start="85:18" pos:end="85:19">+=</operator> <name pos:start="85:21" pos:end="85:27">vlc_len</name></expr>;</expr_stmt>



        <expr_stmt pos:start="89:9" pos:end="89:55"><expr pos:start="89:9" pos:end="89:54"><call pos:start="89:9" pos:end="89:54"><name pos:start="89:9" pos:end="89:15">av_dlog</name><argument_list pos:start="89:16" pos:end="89:54">(<argument pos:start="89:17" pos:end="89:20"><expr pos:start="89:17" pos:end="89:20"><name pos:start="89:17" pos:end="89:20">NULL</name></expr></argument>, <argument pos:start="89:23" pos:end="89:41"><expr pos:start="89:23" pos:end="89:41"><literal type="string" pos:start="89:23" pos:end="89:41">"run=%d level=%d\n"</literal></expr></argument>, <argument pos:start="89:44" pos:end="89:46"><expr pos:start="89:44" pos:end="89:46"><name pos:start="89:44" pos:end="89:46">run</name></expr></argument>, <argument pos:start="89:49" pos:end="89:53"><expr pos:start="89:49" pos:end="89:53"><name pos:start="89:49" pos:end="89:53">level</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:19"><expr pos:start="91:9" pos:end="91:18"><name pos:start="91:9" pos:end="91:11">pos</name> <operator pos:start="91:13" pos:end="91:14">+=</operator> <name pos:start="91:16" pos:end="91:18">run</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="95:18"><if pos:start="93:9" pos:end="95:18">if <condition pos:start="93:12" pos:end="93:22">(<expr pos:start="93:13" pos:end="93:21"><name pos:start="93:13" pos:end="93:15">pos</name> <operator pos:start="93:17" pos:end="93:18">&gt;=</operator> <literal type="number" pos:start="93:20" pos:end="93:21">64</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:18"><block_content pos:start="95:13" pos:end="95:18">

            <break pos:start="95:13" pos:end="95:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:94"><expr pos:start="99:9" pos:end="99:93"><name pos:start="99:9" pos:end="99:13">level</name> <operator pos:start="99:15" pos:end="99:15">=</operator> <operator pos:start="99:17" pos:end="99:17">(</operator><name pos:start="99:18" pos:end="99:22">level</name> <operator pos:start="99:24" pos:end="99:24">*</operator> <name pos:start="99:26" pos:end="99:42"><name pos:start="99:26" pos:end="99:37">factor_table</name><index pos:start="99:38" pos:end="99:42">[<expr pos:start="99:39" pos:end="99:41"><name pos:start="99:39" pos:end="99:41">pos</name></expr>]</index></name> <operator pos:start="99:44" pos:end="99:44">+</operator> <operator pos:start="99:46" pos:end="99:46">(</operator><literal type="number" pos:start="99:47" pos:end="99:47">1</literal> <operator pos:start="99:49" pos:end="99:50">&lt;&lt;</operator> <operator pos:start="99:52" pos:end="99:52">(</operator><name pos:start="99:53" pos:end="99:67">dv_iweight_bits</name> <operator pos:start="99:69" pos:end="99:69">-</operator> <literal type="number" pos:start="99:71" pos:end="99:71">1</literal><operator pos:start="99:72" pos:end="99:72">)</operator><operator pos:start="99:73" pos:end="99:73">)</operator><operator pos:start="99:74" pos:end="99:74">)</operator> <operator pos:start="99:76" pos:end="99:77">&gt;&gt;</operator> <name pos:start="99:79" pos:end="99:93">dv_iweight_bits</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:39"><expr pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:13">block</name><index pos:start="101:14" pos:end="101:30">[<expr pos:start="101:15" pos:end="101:29"><name pos:start="101:15" pos:end="101:29"><name pos:start="101:15" pos:end="101:24">scan_table</name><index pos:start="101:25" pos:end="101:29">[<expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">pos</name></expr>]</index></name></expr>]</index></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <name pos:start="101:34" pos:end="101:38">level</name></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:29"><expr pos:start="105:9" pos:end="105:28"><call pos:start="105:9" pos:end="105:28"><name pos:start="105:9" pos:end="105:20">UPDATE_CACHE</name><argument_list pos:start="105:21" pos:end="105:28">(<argument pos:start="105:22" pos:end="105:23"><expr pos:start="105:22" pos:end="105:23"><name pos:start="105:22" pos:end="105:23">re</name></expr></argument>, <argument pos:start="105:26" pos:end="105:27"><expr pos:start="105:26" pos:end="105:27"><name pos:start="105:26" pos:end="105:27">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="109:5" pos:end="109:25"><expr pos:start="109:5" pos:end="109:24"><call pos:start="109:5" pos:end="109:24"><name pos:start="109:5" pos:end="109:16">CLOSE_READER</name><argument_list pos:start="109:17" pos:end="109:24">(<argument pos:start="109:18" pos:end="109:19"><expr pos:start="109:18" pos:end="109:19"><name pos:start="109:18" pos:end="109:19">re</name></expr></argument>, <argument pos:start="109:22" pos:end="109:23"><expr pos:start="109:22" pos:end="109:23"><name pos:start="109:22" pos:end="109:23">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:18"><expr pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:11"><name pos:start="111:5" pos:end="111:6">mb</name><operator pos:start="111:7" pos:end="111:8">-&gt;</operator><name pos:start="111:9" pos:end="111:11">pos</name></name> <operator pos:start="111:13" pos:end="111:13">=</operator> <name pos:start="111:15" pos:end="111:17">pos</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
