<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25870.c" pos:tabs="8"><function pos:start="1:1" pos:end="427:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">vp8_decode_frame</name><parameter_list pos:start="1:28" pos:end="3:44">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:61"><decl pos:start="1:52" pos:end="1:61"><type pos:start="1:52" pos:end="1:61"><name pos:start="1:52" pos:end="1:55">void</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">data</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:77"><decl pos:start="1:64" pos:end="1:77"><type pos:start="1:64" pos:end="1:77"><name pos:start="1:64" pos:end="1:66">int</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:77">data_size</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:43"><decl pos:start="3:29" pos:end="3:43"><type pos:start="3:29" pos:end="3:43"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:43">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="427:1">{<block_content pos:start="7:5" pos:end="425:23">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VP8Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:17">mb_x</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:23">mb_y</name></decl>, <decl pos:start="9:26" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:26">i</name></decl>, <decl pos:start="9:29" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:29">y</name></decl>, <decl pos:start="9:32" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:41">referenced</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:18">AVDiscard</name></name></type> <name pos:start="11:20" pos:end="11:30">skip_thresh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:22">av_uninit</name><argument_list pos:start="13:23" pos:end="13:32">(<argument pos:start="13:24" pos:end="13:31"><expr pos:start="13:24" pos:end="13:31"><name pos:start="13:24" pos:end="13:31">curframe</name></expr></argument>)</argument_list></decl>, <decl pos:start="13:35" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:13"><modifier pos:start="13:35" pos:end="13:35">*</modifier></type><name pos:start="13:36" pos:end="13:45">prev_frame</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:26">release_queued_segmaps</name><argument_list pos:start="17:27" pos:end="17:32">(<argument pos:start="17:28" pos:end="17:28"><expr pos:start="17:28" pos:end="17:28"><name pos:start="17:28" pos:end="17:28">s</name></expr></argument>, <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="23:19"><if pos:start="21:5" pos:end="23:19">if <condition pos:start="21:8" pos:end="21:69">(<expr pos:start="21:9" pos:end="21:68"><operator pos:start="21:9" pos:end="21:9">(</operator><name pos:start="21:10" pos:end="21:12">ret</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:63"><name pos:start="21:16" pos:end="21:34">decode_frame_header</name><argument_list pos:start="21:35" pos:end="21:63">(<argument pos:start="21:36" pos:end="21:36"><expr pos:start="21:36" pos:end="21:36"><name pos:start="21:36" pos:end="21:36">s</name></expr></argument>, <argument pos:start="21:39" pos:end="21:49"><expr pos:start="21:39" pos:end="21:49"><name pos:start="21:39" pos:end="21:49"><name pos:start="21:39" pos:end="21:43">avpkt</name><operator pos:start="21:44" pos:end="21:45">-&gt;</operator><name pos:start="21:46" pos:end="21:49">data</name></name></expr></argument>, <argument pos:start="21:52" pos:end="21:62"><expr pos:start="21:52" pos:end="21:62"><name pos:start="21:52" pos:end="21:62"><name pos:start="21:52" pos:end="21:56">avpkt</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:62">size</name></name></expr></argument>)</argument_list></call><operator pos:start="21:64" pos:end="21:64">)</operator> <operator pos:start="21:66" pos:end="21:66">&lt;</operator> <literal type="number" pos:start="21:68" pos:end="21:68">0</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:19"><block_content pos:start="23:9" pos:end="23:19">

        <return pos:start="23:9" pos:end="23:19">return <expr pos:start="23:16" pos:end="23:18"><name pos:start="23:16" pos:end="23:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:47"><expr pos:start="27:5" pos:end="27:46"><name pos:start="27:5" pos:end="27:14">prev_frame</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:46"><name pos:start="27:18" pos:end="27:18">s</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:26">framep</name><index pos:start="27:27" pos:end="27:46">[<expr pos:start="27:28" pos:end="27:45"><name pos:start="27:28" pos:end="27:45">VP56_FRAME_CURRENT</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:74"><expr pos:start="31:5" pos:end="33:73"><name pos:start="31:5" pos:end="31:14">referenced</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:31"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:31">update_last</name></name> <operator pos:start="31:33" pos:end="31:34">||</operator> <name pos:start="31:36" pos:end="31:51"><name pos:start="31:36" pos:end="31:36">s</name><operator pos:start="31:37" pos:end="31:38">-&gt;</operator><name pos:start="31:39" pos:end="31:51">update_golden</name></name> <operator pos:start="31:53" pos:end="31:54">==</operator> <name pos:start="31:56" pos:end="31:73">VP56_FRAME_CURRENT</name>

                                <operator pos:start="33:33" pos:end="33:34">||</operator> <name pos:start="33:36" pos:end="33:51"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:51">update_altref</name></name> <operator pos:start="33:53" pos:end="33:54">==</operator> <name pos:start="33:56" pos:end="33:73">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:68"><expr pos:start="37:5" pos:end="39:67"><name pos:start="37:5" pos:end="37:15">skip_thresh</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <ternary pos:start="37:19" pos:end="39:67"><condition pos:start="37:19" pos:end="37:31"><expr pos:start="37:19" pos:end="37:29"><operator pos:start="37:19" pos:end="37:19">!</operator><name pos:start="37:20" pos:end="37:29">referenced</name></expr> ?</condition><then pos:start="37:33" pos:end="37:48"> <expr pos:start="37:33" pos:end="37:48"><name pos:start="37:33" pos:end="37:48">AVDISCARD_NONREF</name></expr> </then><else pos:start="37:50" pos:end="39:67">:

                    <expr pos:start="39:21" pos:end="39:67"><ternary pos:start="39:21" pos:end="39:67"><condition pos:start="39:21" pos:end="39:34"><expr pos:start="39:21" pos:end="39:32"><operator pos:start="39:21" pos:end="39:21">!</operator><name pos:start="39:22" pos:end="39:32"><name pos:start="39:22" pos:end="39:22">s</name><operator pos:start="39:23" pos:end="39:24">-&gt;</operator><name pos:start="39:25" pos:end="39:32">keyframe</name></name></expr> ?</condition><then pos:start="39:36" pos:end="39:51"> <expr pos:start="39:36" pos:end="39:51"><name pos:start="39:36" pos:end="39:51">AVDISCARD_NONKEY</name></expr> </then><else pos:start="39:53" pos:end="39:67">: <expr pos:start="39:55" pos:end="39:67"><name pos:start="39:55" pos:end="39:67">AVDISCARD_ALL</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:41">(<expr pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:25">skip_frame</name></name> <operator pos:start="43:27" pos:end="43:28">&gt;=</operator> <name pos:start="43:30" pos:end="43:40">skip_thresh</name></expr>)</condition> <block pos:start="43:43" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:25">

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:20">invisible</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <literal type="number" pos:start="45:24" pos:end="45:24">1</literal></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:25">goto <name pos:start="47:14" pos:end="47:24">skip_decode</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:81"><expr pos:start="51:5" pos:end="51:80"><name pos:start="51:5" pos:end="51:21"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:21">deblock_filter</name></name> <operator pos:start="51:23" pos:end="51:23">=</operator> <name pos:start="51:25" pos:end="51:39"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:33">filter</name><operator pos:start="51:34" pos:end="51:34">.</operator><name pos:start="51:35" pos:end="51:39">level</name></name> <operator pos:start="51:41" pos:end="51:42">&amp;&amp;</operator> <name pos:start="51:44" pos:end="51:66"><name pos:start="51:44" pos:end="51:48">avctx</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:66">skip_loop_filter</name></name> <operator pos:start="51:68" pos:end="51:68">&lt;</operator> <name pos:start="51:70" pos:end="51:80">skip_thresh</name></expr>;</expr_stmt>



    <comment type="line" pos:start="55:5" pos:end="55:42">// release no longer referenced frames</comment>

    <for pos:start="57:5" pos:end="69:54">for <control pos:start="57:9" pos:end="57:27">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">0</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:22"><expr pos:start="57:17" pos:end="57:21"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:19">&lt;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">5</literal></expr>;</condition> <incr pos:start="57:24" pos:end="57:26"><expr pos:start="57:24" pos:end="57:26"><name pos:start="57:24" pos:end="57:24">i</name><operator pos:start="57:25" pos:end="57:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="59:9" pos:end="69:54"><block_content pos:start="59:9" pos:end="69:54">

        <if_stmt pos:start="59:9" pos:end="69:54"><if pos:start="59:9" pos:end="69:54">if <condition pos:start="59:12" pos:end="67:59">(<expr pos:start="59:13" pos:end="67:58"><name pos:start="59:13" pos:end="59:24"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:21">frames</name><index pos:start="59:22" pos:end="59:24">[<expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">i</name></expr>]</index></name><operator pos:start="59:25" pos:end="59:25">.</operator><name pos:start="59:26" pos:end="59:32"><name pos:start="59:26" pos:end="59:29">data</name><index pos:start="59:30" pos:end="59:32">[<expr pos:start="59:31" pos:end="59:31"><literal type="number" pos:start="59:31" pos:end="59:31">0</literal></expr>]</index></name> <operator pos:start="59:34" pos:end="59:35">&amp;&amp;</operator>

            <operator pos:start="61:13" pos:end="61:13">&amp;</operator><name pos:start="61:14" pos:end="61:25"><name pos:start="61:14" pos:end="61:14">s</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">frames</name><index pos:start="61:23" pos:end="61:25">[<expr pos:start="61:24" pos:end="61:24"><name pos:start="61:24" pos:end="61:24">i</name></expr>]</index></name> <operator pos:start="61:27" pos:end="61:28">!=</operator> <name pos:start="61:30" pos:end="61:39">prev_frame</name> <operator pos:start="61:41" pos:end="61:42">&amp;&amp;</operator>

            <operator pos:start="63:13" pos:end="63:13">&amp;</operator><name pos:start="63:14" pos:end="63:25"><name pos:start="63:14" pos:end="63:14">s</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:22">frames</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">i</name></expr>]</index></name> <operator pos:start="63:27" pos:end="63:28">!=</operator> <name pos:start="63:30" pos:end="63:59"><name pos:start="63:30" pos:end="63:30">s</name><operator pos:start="63:31" pos:end="63:32">-&gt;</operator><name pos:start="63:33" pos:end="63:38">framep</name><index pos:start="63:39" pos:end="63:59">[<expr pos:start="63:40" pos:end="63:58"><name pos:start="63:40" pos:end="63:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="63:61" pos:end="63:62">&amp;&amp;</operator>

            <operator pos:start="65:13" pos:end="65:13">&amp;</operator><name pos:start="65:14" pos:end="65:25"><name pos:start="65:14" pos:end="65:14">s</name><operator pos:start="65:15" pos:end="65:16">-&gt;</operator><name pos:start="65:17" pos:end="65:22">frames</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">i</name></expr>]</index></name> <operator pos:start="65:27" pos:end="65:28">!=</operator> <name pos:start="65:30" pos:end="65:57"><name pos:start="65:30" pos:end="65:30">s</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:38">framep</name><index pos:start="65:39" pos:end="65:57">[<expr pos:start="65:40" pos:end="65:56"><name pos:start="65:40" pos:end="65:56">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="65:59" pos:end="65:60">&amp;&amp;</operator>

            <operator pos:start="67:13" pos:end="67:13">&amp;</operator><name pos:start="67:14" pos:end="67:25"><name pos:start="67:14" pos:end="67:14">s</name><operator pos:start="67:15" pos:end="67:16">-&gt;</operator><name pos:start="67:17" pos:end="67:22">frames</name><index pos:start="67:23" pos:end="67:25">[<expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">i</name></expr>]</index></name> <operator pos:start="67:27" pos:end="67:28">!=</operator> <name pos:start="67:30" pos:end="67:58"><name pos:start="67:30" pos:end="67:30">s</name><operator pos:start="67:31" pos:end="67:32">-&gt;</operator><name pos:start="67:33" pos:end="67:38">framep</name><index pos:start="67:39" pos:end="67:58">[<expr pos:start="67:40" pos:end="67:57"><name pos:start="67:40" pos:end="67:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:54"><block_content pos:start="69:13" pos:end="69:54">

            <expr_stmt pos:start="69:13" pos:end="69:54"><expr pos:start="69:13" pos:end="69:53"><call pos:start="69:13" pos:end="69:53"><name pos:start="69:13" pos:end="69:29">vp8_release_frame</name><argument_list pos:start="69:30" pos:end="69:53">(<argument pos:start="69:31" pos:end="69:31"><expr pos:start="69:31" pos:end="69:31"><name pos:start="69:31" pos:end="69:31">s</name></expr></argument>, <argument pos:start="69:34" pos:end="69:46"><expr pos:start="69:34" pos:end="69:46"><operator pos:start="69:34" pos:end="69:34">&amp;</operator><name pos:start="69:35" pos:end="69:46"><name pos:start="69:35" pos:end="69:35">s</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:43">frames</name><index pos:start="69:44" pos:end="69:46">[<expr pos:start="69:45" pos:end="69:45"><name pos:start="69:45" pos:end="69:45">i</name></expr>]</index></name></expr></argument>, <argument pos:start="69:49" pos:end="69:49"><expr pos:start="69:49" pos:end="69:49"><literal type="number" pos:start="69:49" pos:end="69:49">1</literal></expr></argument>, <argument pos:start="69:52" pos:end="69:52"><expr pos:start="69:52" pos:end="69:52"><literal type="number" pos:start="69:52" pos:end="69:52">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <comment type="line" pos:start="73:5" pos:end="73:25">// find a free buffer</comment>

    <for pos:start="75:5" pos:end="89:9">for <control pos:start="75:9" pos:end="75:27">(<init pos:start="75:10" pos:end="75:15"><expr pos:start="75:10" pos:end="75:14"><name pos:start="75:10" pos:end="75:10">i</name> <operator pos:start="75:12" pos:end="75:12">=</operator> <literal type="number" pos:start="75:14" pos:end="75:14">0</literal></expr>;</init> <condition pos:start="75:17" pos:end="75:22"><expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">&lt;</operator> <literal type="number" pos:start="75:21" pos:end="75:21">5</literal></expr>;</condition> <incr pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:24">i</name><operator pos:start="75:25" pos:end="75:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="77:9" pos:end="89:9"><block_content pos:start="77:9" pos:end="89:9">

        <if_stmt pos:start="77:9" pos:end="89:9"><if pos:start="77:9" pos:end="89:9">if <condition pos:start="77:12" pos:end="83:59">(<expr pos:start="77:13" pos:end="83:58"><operator pos:start="77:13" pos:end="77:13">&amp;</operator><name pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:22">frames</name><index pos:start="77:23" pos:end="77:25">[<expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">i</name></expr>]</index></name> <operator pos:start="77:27" pos:end="77:28">!=</operator> <name pos:start="77:30" pos:end="77:39">prev_frame</name> <operator pos:start="77:41" pos:end="77:42">&amp;&amp;</operator>

            <operator pos:start="79:13" pos:end="79:13">&amp;</operator><name pos:start="79:14" pos:end="79:25"><name pos:start="79:14" pos:end="79:14">s</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:22">frames</name><index pos:start="79:23" pos:end="79:25">[<expr pos:start="79:24" pos:end="79:24"><name pos:start="79:24" pos:end="79:24">i</name></expr>]</index></name> <operator pos:start="79:27" pos:end="79:28">!=</operator> <name pos:start="79:30" pos:end="79:59"><name pos:start="79:30" pos:end="79:30">s</name><operator pos:start="79:31" pos:end="79:32">-&gt;</operator><name pos:start="79:33" pos:end="79:38">framep</name><index pos:start="79:39" pos:end="79:59">[<expr pos:start="79:40" pos:end="79:58"><name pos:start="79:40" pos:end="79:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="79:61" pos:end="79:62">&amp;&amp;</operator>

            <operator pos:start="81:13" pos:end="81:13">&amp;</operator><name pos:start="81:14" pos:end="81:25"><name pos:start="81:14" pos:end="81:14">s</name><operator pos:start="81:15" pos:end="81:16">-&gt;</operator><name pos:start="81:17" pos:end="81:22">frames</name><index pos:start="81:23" pos:end="81:25">[<expr pos:start="81:24" pos:end="81:24"><name pos:start="81:24" pos:end="81:24">i</name></expr>]</index></name> <operator pos:start="81:27" pos:end="81:28">!=</operator> <name pos:start="81:30" pos:end="81:57"><name pos:start="81:30" pos:end="81:30">s</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:38">framep</name><index pos:start="81:39" pos:end="81:57">[<expr pos:start="81:40" pos:end="81:56"><name pos:start="81:40" pos:end="81:56">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="81:59" pos:end="81:60">&amp;&amp;</operator>

            <operator pos:start="83:13" pos:end="83:13">&amp;</operator><name pos:start="83:14" pos:end="83:25"><name pos:start="83:14" pos:end="83:14">s</name><operator pos:start="83:15" pos:end="83:16">-&gt;</operator><name pos:start="83:17" pos:end="83:22">frames</name><index pos:start="83:23" pos:end="83:25">[<expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">i</name></expr>]</index></name> <operator pos:start="83:27" pos:end="83:28">!=</operator> <name pos:start="83:30" pos:end="83:58"><name pos:start="83:30" pos:end="83:30">s</name><operator pos:start="83:31" pos:end="83:32">-&gt;</operator><name pos:start="83:33" pos:end="83:38">framep</name><index pos:start="83:39" pos:end="83:58">[<expr pos:start="83:40" pos:end="83:57"><name pos:start="83:40" pos:end="83:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition> <block pos:start="83:61" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:18">

            <expr_stmt pos:start="85:13" pos:end="85:69"><expr pos:start="85:13" pos:end="85:68"><name pos:start="85:13" pos:end="85:20">curframe</name> <operator pos:start="85:22" pos:end="85:22">=</operator> <name pos:start="85:24" pos:end="85:52"><name pos:start="85:24" pos:end="85:24">s</name><operator pos:start="85:25" pos:end="85:26">-&gt;</operator><name pos:start="85:27" pos:end="85:32">framep</name><index pos:start="85:33" pos:end="85:52">[<expr pos:start="85:34" pos:end="85:51"><name pos:start="85:34" pos:end="85:51">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="85:54" pos:end="85:54">=</operator> <operator pos:start="85:56" pos:end="85:56">&amp;</operator><name pos:start="85:57" pos:end="85:68"><name pos:start="85:57" pos:end="85:57">s</name><operator pos:start="85:58" pos:end="85:59">-&gt;</operator><name pos:start="85:60" pos:end="85:65">frames</name><index pos:start="85:66" pos:end="85:68">[<expr pos:start="85:67" pos:end="85:67"><name pos:start="85:67" pos:end="85:67">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="87:13" pos:end="87:18">break;</break>

        </block_content>}</block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if <condition pos:start="91:8" pos:end="91:15">(<expr pos:start="91:9" pos:end="91:14"><name pos:start="91:9" pos:end="91:9">i</name> <operator pos:start="91:11" pos:end="91:12">==</operator> <literal type="number" pos:start="91:14" pos:end="91:14">5</literal></expr>)</condition> <block pos:start="91:17" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:16">

        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><call pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:64">(<argument pos:start="93:16" pos:end="93:20"><expr pos:start="93:16" pos:end="93:20"><name pos:start="93:16" pos:end="93:20">avctx</name></expr></argument>, <argument pos:start="93:23" pos:end="93:34"><expr pos:start="93:23" pos:end="93:34"><name pos:start="93:23" pos:end="93:34">AV_LOG_FATAL</name></expr></argument>, <argument pos:start="93:37" pos:end="93:63"><expr pos:start="93:37" pos:end="93:63"><literal type="string" pos:start="93:37" pos:end="93:63">"Ran out of free frames!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:16"><expr pos:start="95:9" pos:end="95:15"><call pos:start="95:9" pos:end="95:15"><name pos:start="95:9" pos:end="95:13">abort</name><argument_list pos:start="95:14" pos:end="95:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="99:5" pos:end="101:45"><if pos:start="99:5" pos:end="101:45">if <condition pos:start="99:8" pos:end="99:26">(<expr pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:25"><name pos:start="99:9" pos:end="99:16">curframe</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:22">data</name><index pos:start="99:23" pos:end="99:25">[<expr pos:start="99:24" pos:end="99:24"><literal type="number" pos:start="99:24" pos:end="99:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:45"><block_content pos:start="101:9" pos:end="101:45">

        <expr_stmt pos:start="101:9" pos:end="101:45"><expr pos:start="101:9" pos:end="101:44"><call pos:start="101:9" pos:end="101:44"><name pos:start="101:9" pos:end="101:25">vp8_release_frame</name><argument_list pos:start="101:26" pos:end="101:44">(<argument pos:start="101:27" pos:end="101:27"><expr pos:start="101:27" pos:end="101:27"><name pos:start="101:27" pos:end="101:27">s</name></expr></argument>, <argument pos:start="101:30" pos:end="101:37"><expr pos:start="101:30" pos:end="101:37"><name pos:start="101:30" pos:end="101:37">curframe</name></expr></argument>, <argument pos:start="101:40" pos:end="101:40"><expr pos:start="101:40" pos:end="101:40"><literal type="number" pos:start="101:40" pos:end="101:40">1</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:43"><expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:38"><expr pos:start="105:5" pos:end="105:37"><name pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:12">curframe</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:23">key_frame</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:37"><name pos:start="105:27" pos:end="105:27">s</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:37">keyframe</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:78"><expr pos:start="107:5" pos:end="107:77"><name pos:start="107:5" pos:end="107:23"><name pos:start="107:5" pos:end="107:12">curframe</name><operator pos:start="107:13" pos:end="107:14">-&gt;</operator><name pos:start="107:15" pos:end="107:23">pict_type</name></name> <operator pos:start="107:25" pos:end="107:25">=</operator> <ternary pos:start="107:27" pos:end="107:77"><condition pos:start="107:27" pos:end="107:39"><expr pos:start="107:27" pos:end="107:37"><name pos:start="107:27" pos:end="107:37"><name pos:start="107:27" pos:end="107:27">s</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:37">keyframe</name></name></expr> ?</condition><then pos:start="107:41" pos:end="107:57"> <expr pos:start="107:41" pos:end="107:57"><name pos:start="107:41" pos:end="107:57">AV_PICTURE_TYPE_I</name></expr> </then><else pos:start="107:59" pos:end="107:77">: <expr pos:start="107:61" pos:end="107:77"><name pos:start="107:61" pos:end="107:77">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:45"><expr pos:start="109:5" pos:end="109:44"><name pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:12">curframe</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:23">reference</name></name> <operator pos:start="109:25" pos:end="109:25">=</operator> <ternary pos:start="109:27" pos:end="109:44"><condition pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:36"><name pos:start="109:27" pos:end="109:36">referenced</name></expr> ?</condition><then pos:start="109:40" pos:end="109:40"> <expr pos:start="109:40" pos:end="109:40"><literal type="number" pos:start="109:40" pos:end="109:40">3</literal></expr> </then><else pos:start="109:42" pos:end="109:44">: <expr pos:start="109:44" pos:end="109:44"><literal type="number" pos:start="109:44" pos:end="109:44">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="117:5"><if pos:start="111:5" pos:end="117:5">if <condition pos:start="111:8" pos:end="111:45">(<expr pos:start="111:9" pos:end="111:44"><operator pos:start="111:9" pos:end="111:9">(</operator><name pos:start="111:10" pos:end="111:12">ret</name> <operator pos:start="111:14" pos:end="111:14">=</operator> <call pos:start="111:16" pos:end="111:43"><name pos:start="111:16" pos:end="111:30">vp8_alloc_frame</name><argument_list pos:start="111:31" pos:end="111:43">(<argument pos:start="111:32" pos:end="111:32"><expr pos:start="111:32" pos:end="111:32"><name pos:start="111:32" pos:end="111:32">s</name></expr></argument>, <argument pos:start="111:35" pos:end="111:42"><expr pos:start="111:35" pos:end="111:42"><name pos:start="111:35" pos:end="111:42">curframe</name></expr></argument>)</argument_list></call><operator pos:start="111:44" pos:end="111:44">)</operator></expr>)</condition> <block pos:start="111:47" pos:end="117:5">{<block_content pos:start="113:9" pos:end="115:19">

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="113:61">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="113:60"><expr pos:start="113:37" pos:end="113:60"><literal type="string" pos:start="113:37" pos:end="113:60">"get_buffer() failed!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="115:9" pos:end="115:19">return <expr pos:start="115:16" pos:end="115:18"><name pos:start="115:16" pos:end="115:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:45">// check if golden and altref are swapped</comment>

    <if_stmt pos:start="123:5" pos:end="131:5"><if pos:start="123:5" pos:end="127:5">if <condition pos:start="123:8" pos:end="123:44">(<expr pos:start="123:9" pos:end="123:43"><name pos:start="123:9" pos:end="123:24"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:24">update_altref</name></name> <operator pos:start="123:26" pos:end="123:27">!=</operator> <name pos:start="123:29" pos:end="123:43">VP56_FRAME_NONE</name></expr>)</condition> <block pos:start="123:46" pos:end="127:5">{<block_content pos:start="125:9" pos:end="125:74">

        <expr_stmt pos:start="125:9" pos:end="125:74"><expr pos:start="125:9" pos:end="125:73"><name pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:22">next_framep</name><index pos:start="125:23" pos:end="125:42">[<expr pos:start="125:24" pos:end="125:41"><name pos:start="125:24" pos:end="125:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name>  <operator pos:start="125:45" pos:end="125:45">=</operator> <name pos:start="125:47" pos:end="125:73"><name pos:start="125:47" pos:end="125:47">s</name><operator pos:start="125:48" pos:end="125:49">-&gt;</operator><name pos:start="125:50" pos:end="125:55">framep</name><index pos:start="125:56" pos:end="125:73">[<expr pos:start="125:57" pos:end="125:72"><name pos:start="125:57" pos:end="125:72"><name pos:start="125:57" pos:end="125:57">s</name><operator pos:start="125:58" pos:end="125:59">-&gt;</operator><name pos:start="125:60" pos:end="125:72">update_altref</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="131:5">else <block pos:start="127:12" pos:end="131:5">{<block_content pos:start="129:9" pos:end="129:76">

        <expr_stmt pos:start="129:9" pos:end="129:76"><expr pos:start="129:9" pos:end="129:75"><name pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:22">next_framep</name><index pos:start="129:23" pos:end="129:42">[<expr pos:start="129:24" pos:end="129:41"><name pos:start="129:24" pos:end="129:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name>  <operator pos:start="129:45" pos:end="129:45">=</operator> <name pos:start="129:47" pos:end="129:75"><name pos:start="129:47" pos:end="129:47">s</name><operator pos:start="129:48" pos:end="129:49">-&gt;</operator><name pos:start="129:50" pos:end="129:55">framep</name><index pos:start="129:56" pos:end="129:75">[<expr pos:start="129:57" pos:end="129:74"><name pos:start="129:57" pos:end="129:74">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="133:5" pos:end="141:5"><if pos:start="133:5" pos:end="137:5">if <condition pos:start="133:8" pos:end="133:44">(<expr pos:start="133:9" pos:end="133:43"><name pos:start="133:9" pos:end="133:24"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:24">update_golden</name></name> <operator pos:start="133:26" pos:end="133:27">!=</operator> <name pos:start="133:29" pos:end="133:43">VP56_FRAME_NONE</name></expr>)</condition> <block pos:start="133:46" pos:end="137:5">{<block_content pos:start="135:9" pos:end="135:74">

        <expr_stmt pos:start="135:9" pos:end="135:74"><expr pos:start="135:9" pos:end="135:73"><name pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:22">next_framep</name><index pos:start="135:23" pos:end="135:41">[<expr pos:start="135:24" pos:end="135:40"><name pos:start="135:24" pos:end="135:40">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="135:45" pos:end="135:45">=</operator> <name pos:start="135:47" pos:end="135:73"><name pos:start="135:47" pos:end="135:47">s</name><operator pos:start="135:48" pos:end="135:49">-&gt;</operator><name pos:start="135:50" pos:end="135:55">framep</name><index pos:start="135:56" pos:end="135:73">[<expr pos:start="135:57" pos:end="135:72"><name pos:start="135:57" pos:end="135:72"><name pos:start="135:57" pos:end="135:57">s</name><operator pos:start="135:58" pos:end="135:59">-&gt;</operator><name pos:start="135:60" pos:end="135:72">update_golden</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="141:5">else <block pos:start="137:12" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:75">

        <expr_stmt pos:start="139:9" pos:end="139:75"><expr pos:start="139:9" pos:end="139:74"><name pos:start="139:9" pos:end="139:41"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:22">next_framep</name><index pos:start="139:23" pos:end="139:41">[<expr pos:start="139:24" pos:end="139:40"><name pos:start="139:24" pos:end="139:40">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="139:45" pos:end="139:45">=</operator> <name pos:start="139:47" pos:end="139:74"><name pos:start="139:47" pos:end="139:47">s</name><operator pos:start="139:48" pos:end="139:49">-&gt;</operator><name pos:start="139:50" pos:end="139:55">framep</name><index pos:start="139:56" pos:end="139:74">[<expr pos:start="139:57" pos:end="139:73"><name pos:start="139:57" pos:end="139:73">VP56_FRAME_GOLDEN</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="143:5" pos:end="151:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:23">(<expr pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:22">update_last</name></name></expr>)</condition> <block pos:start="143:25" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:55">

        <expr_stmt pos:start="145:9" pos:end="145:55"><expr pos:start="145:9" pos:end="145:54"><name pos:start="145:9" pos:end="145:43"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:22">next_framep</name><index pos:start="145:23" pos:end="145:43">[<expr pos:start="145:24" pos:end="145:42"><name pos:start="145:24" pos:end="145:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="145:45" pos:end="145:45">=</operator> <name pos:start="145:47" pos:end="145:54">curframe</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="147:7" pos:end="151:5">else <block pos:start="147:12" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:77">

        <expr_stmt pos:start="149:9" pos:end="149:77"><expr pos:start="149:9" pos:end="149:76"><name pos:start="149:9" pos:end="149:43"><name pos:start="149:9" pos:end="149:9">s</name><operator pos:start="149:10" pos:end="149:11">-&gt;</operator><name pos:start="149:12" pos:end="149:22">next_framep</name><index pos:start="149:23" pos:end="149:43">[<expr pos:start="149:24" pos:end="149:42"><name pos:start="149:24" pos:end="149:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="149:45" pos:end="149:45">=</operator> <name pos:start="149:47" pos:end="149:76"><name pos:start="149:47" pos:end="149:47">s</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:55">framep</name><index pos:start="149:56" pos:end="149:76">[<expr pos:start="149:57" pos:end="149:75"><name pos:start="149:57" pos:end="149:75">VP56_FRAME_PREVIOUS</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:55"><expr pos:start="153:5" pos:end="153:54"><name pos:start="153:5" pos:end="153:38"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:18">next_framep</name><index pos:start="153:19" pos:end="153:38">[<expr pos:start="153:20" pos:end="153:37"><name pos:start="153:20" pos:end="153:37">VP56_FRAME_CURRENT</name></expr>]</index></name>      <operator pos:start="153:45" pos:end="153:45">=</operator> <name pos:start="153:47" pos:end="153:54">curframe</name></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:34"><expr pos:start="157:5" pos:end="157:33"><call pos:start="157:5" pos:end="157:33"><name pos:start="157:5" pos:end="157:26">ff_thread_finish_setup</name><argument_list pos:start="157:27" pos:end="157:33">(<argument pos:start="157:28" pos:end="157:32"><expr pos:start="157:28" pos:end="157:32"><name pos:start="157:28" pos:end="157:32">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="161:5" pos:end="161:85">// Given that arithmetic probabilities are updated every frame, it's quite likely</comment>

    <comment type="line" pos:start="163:5" pos:end="163:84">// that the values we have on a random interframe are complete junk if we didn't</comment>

    <comment type="line" pos:start="165:5" pos:end="165:83">// start decode on a keyframe. So just don't display anything rather than junk.</comment>

    <if_stmt pos:start="167:5" pos:end="177:5"><if pos:start="167:5" pos:end="177:5">if <condition pos:start="167:8" pos:end="171:57">(<expr pos:start="167:9" pos:end="171:56"><operator pos:start="167:9" pos:end="167:9">!</operator><name pos:start="167:10" pos:end="167:20"><name pos:start="167:10" pos:end="167:10">s</name><operator pos:start="167:11" pos:end="167:12">-&gt;</operator><name pos:start="167:13" pos:end="167:20">keyframe</name></name> <operator pos:start="167:22" pos:end="167:23">&amp;&amp;</operator> <operator pos:start="167:25" pos:end="167:25">(</operator><operator pos:start="167:26" pos:end="167:26">!</operator><name pos:start="167:27" pos:end="167:56"><name pos:start="167:27" pos:end="167:27">s</name><operator pos:start="167:28" pos:end="167:29">-&gt;</operator><name pos:start="167:30" pos:end="167:35">framep</name><index pos:start="167:36" pos:end="167:56">[<expr pos:start="167:37" pos:end="167:55"><name pos:start="167:37" pos:end="167:55">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="167:58" pos:end="167:59">||</operator>

                         <operator pos:start="169:26" pos:end="169:26">!</operator><name pos:start="169:27" pos:end="169:54"><name pos:start="169:27" pos:end="169:27">s</name><operator pos:start="169:28" pos:end="169:29">-&gt;</operator><name pos:start="169:30" pos:end="169:35">framep</name><index pos:start="169:36" pos:end="169:54">[<expr pos:start="169:37" pos:end="169:53"><name pos:start="169:37" pos:end="169:53">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="169:56" pos:end="169:57">||</operator>

                         <operator pos:start="171:26" pos:end="171:26">!</operator><name pos:start="171:27" pos:end="171:55"><name pos:start="171:27" pos:end="171:27">s</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:35">framep</name><index pos:start="171:36" pos:end="171:55">[<expr pos:start="171:37" pos:end="171:54"><name pos:start="171:37" pos:end="171:54">VP56_FRAME_GOLDEN2</name></expr>]</index></name><operator pos:start="171:56" pos:end="171:56">)</operator></expr>)</condition> <block pos:start="171:59" pos:end="177:5">{<block_content pos:start="173:9" pos:end="175:35">

        <expr_stmt pos:start="173:9" pos:end="173:91"><expr pos:start="173:9" pos:end="173:90"><call pos:start="173:9" pos:end="173:90"><name pos:start="173:9" pos:end="173:14">av_log</name><argument_list pos:start="173:15" pos:end="173:90">(<argument pos:start="173:16" pos:end="173:20"><expr pos:start="173:16" pos:end="173:20"><name pos:start="173:16" pos:end="173:20">avctx</name></expr></argument>, <argument pos:start="173:23" pos:end="173:36"><expr pos:start="173:23" pos:end="173:36"><name pos:start="173:23" pos:end="173:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="173:39" pos:end="173:89"><expr pos:start="173:39" pos:end="173:89"><literal type="string" pos:start="173:39" pos:end="173:89">"Discarding interframe without a prior keyframe!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="175:9" pos:end="175:35">return <expr pos:start="175:16" pos:end="175:34"><name pos:start="175:16" pos:end="175:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:42"><expr pos:start="181:5" pos:end="181:41"><name pos:start="181:5" pos:end="181:15"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:15">linesize</name></name>   <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:41"><name pos:start="181:21" pos:end="181:28">curframe</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:38">linesize</name><index pos:start="181:39" pos:end="181:41">[<expr pos:start="181:40" pos:end="181:40"><literal type="number" pos:start="181:40" pos:end="181:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:42"><expr pos:start="183:5" pos:end="183:41"><name pos:start="183:5" pos:end="183:17"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:17">uvlinesize</name></name> <operator pos:start="183:19" pos:end="183:19">=</operator> <name pos:start="183:21" pos:end="183:41"><name pos:start="183:21" pos:end="183:28">curframe</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:38">linesize</name><index pos:start="183:39" pos:end="183:41">[<expr pos:start="183:40" pos:end="183:40"><literal type="number" pos:start="183:40" pos:end="183:40">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="187:5" pos:end="189:55"><if pos:start="187:5" pos:end="189:55">if <condition pos:start="187:8" pos:end="187:28">(<expr pos:start="187:9" pos:end="187:27"><operator pos:start="187:9" pos:end="187:9">!</operator><name pos:start="187:10" pos:end="187:27"><name pos:start="187:10" pos:end="187:10">s</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:27">edge_emu_buffer</name></name></expr>)</condition><block type="pseudo" pos:start="189:9" pos:end="189:55"><block_content pos:start="189:9" pos:end="189:55">

        <expr_stmt pos:start="189:9" pos:end="189:55"><expr pos:start="189:9" pos:end="189:54"><name pos:start="189:9" pos:end="189:26"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:26">edge_emu_buffer</name></name> <operator pos:start="189:28" pos:end="189:28">=</operator> <call pos:start="189:30" pos:end="189:54"><name pos:start="189:30" pos:end="189:38">av_malloc</name><argument_list pos:start="189:39" pos:end="189:54">(<argument pos:start="189:40" pos:end="189:53"><expr pos:start="189:40" pos:end="189:53"><literal type="number" pos:start="189:40" pos:end="189:41">21</literal><operator pos:start="189:42" pos:end="189:42">*</operator><name pos:start="189:43" pos:end="189:53"><name pos:start="189:43" pos:end="189:43">s</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:53">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:59"><expr pos:start="193:5" pos:end="193:58"><call pos:start="193:5" pos:end="193:58"><name pos:start="193:5" pos:end="193:10">memset</name><argument_list pos:start="193:11" pos:end="193:58">(<argument pos:start="193:12" pos:end="193:21"><expr pos:start="193:12" pos:end="193:21"><name pos:start="193:12" pos:end="193:21"><name pos:start="193:12" pos:end="193:12">s</name><operator pos:start="193:13" pos:end="193:14">-&gt;</operator><name pos:start="193:15" pos:end="193:21">top_nnz</name></name></expr></argument>, <argument pos:start="193:24" pos:end="193:24"><expr pos:start="193:24" pos:end="193:24"><literal type="number" pos:start="193:24" pos:end="193:24">0</literal></expr></argument>, <argument pos:start="193:27" pos:end="193:57"><expr pos:start="193:27" pos:end="193:57"><name pos:start="193:27" pos:end="193:37"><name pos:start="193:27" pos:end="193:27">s</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:37">mb_width</name></name><operator pos:start="193:38" pos:end="193:38">*</operator><sizeof pos:start="193:39" pos:end="193:57">sizeof<argument_list pos:start="193:45" pos:end="193:57">(<argument pos:start="193:46" pos:end="193:56"><expr pos:start="193:46" pos:end="193:56"><operator pos:start="193:46" pos:end="193:46">*</operator><name pos:start="193:47" pos:end="193:56"><name pos:start="193:47" pos:end="193:47">s</name><operator pos:start="193:48" pos:end="193:49">-&gt;</operator><name pos:start="193:50" pos:end="193:56">top_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="197:5" pos:end="197:88">/* Zero macroblock structures for top/top-left prediction from outside the frame. */</comment>

    <expr_stmt pos:start="199:5" pos:end="199:92"><expr pos:start="199:5" pos:end="199:91"><call pos:start="199:5" pos:end="199:91"><name pos:start="199:5" pos:end="199:10">memset</name><argument_list pos:start="199:11" pos:end="199:91">(<argument pos:start="199:12" pos:end="199:46"><expr pos:start="199:12" pos:end="199:46"><name pos:start="199:12" pos:end="199:25"><name pos:start="199:12" pos:end="199:12">s</name><operator pos:start="199:13" pos:end="199:14">-&gt;</operator><name pos:start="199:15" pos:end="199:25">macroblocks</name></name> <operator pos:start="199:27" pos:end="199:27">+</operator> <name pos:start="199:29" pos:end="199:40"><name pos:start="199:29" pos:end="199:29">s</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:40">mb_height</name></name><operator pos:start="199:41" pos:end="199:41">*</operator><literal type="number" pos:start="199:42" pos:end="199:44">2</literal> <operator pos:start="199:44" pos:end="199:44">-</operator> <literal type="number" pos:start="199:46" pos:end="199:46">1</literal></expr></argument>, <argument pos:start="199:49" pos:end="199:49"><expr pos:start="199:49" pos:end="199:49"><literal type="number" pos:start="199:49" pos:end="199:49">0</literal></expr></argument>, <argument pos:start="199:52" pos:end="199:90"><expr pos:start="199:52" pos:end="199:90"><operator pos:start="199:52" pos:end="199:52">(</operator><name pos:start="199:53" pos:end="199:63"><name pos:start="199:53" pos:end="199:53">s</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:63">mb_width</name></name><operator pos:start="199:64" pos:end="199:64">+</operator><literal type="number" pos:start="199:65" pos:end="199:65">1</literal><operator pos:start="199:66" pos:end="199:66">)</operator><operator pos:start="199:67" pos:end="199:67">*</operator><sizeof pos:start="199:68" pos:end="199:90">sizeof<argument_list pos:start="199:74" pos:end="199:90">(<argument pos:start="199:75" pos:end="199:89"><expr pos:start="199:75" pos:end="199:89"><operator pos:start="199:75" pos:end="199:75">*</operator><name pos:start="199:76" pos:end="199:89"><name pos:start="199:76" pos:end="199:76">s</name><operator pos:start="199:77" pos:end="199:78">-&gt;</operator><name pos:start="199:79" pos:end="199:89">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="203:5" pos:end="203:43">// top edge of 127 for intra prediction</comment>

    <if_stmt pos:start="205:5" pos:end="211:5"><if pos:start="205:5" pos:end="211:5">if <condition pos:start="205:8" pos:end="205:46">(<expr pos:start="205:9" pos:end="205:45"><operator pos:start="205:9" pos:end="205:9">!</operator><operator pos:start="205:10" pos:end="205:10">(</operator><name pos:start="205:11" pos:end="205:22"><name pos:start="205:11" pos:end="205:15">avctx</name><operator pos:start="205:16" pos:end="205:17">-&gt;</operator><name pos:start="205:18" pos:end="205:22">flags</name></name> <operator pos:start="205:24" pos:end="205:24">&amp;</operator> <name pos:start="205:26" pos:end="205:44">CODEC_FLAG_EMU_EDGE</name><operator pos:start="205:45" pos:end="205:45">)</operator></expr>)</condition> <block pos:start="205:48" pos:end="211:5">{<block_content pos:start="207:9" pos:end="209:78">

        <expr_stmt pos:start="207:9" pos:end="207:58"><expr pos:start="207:9" pos:end="207:57"><name pos:start="207:9" pos:end="207:28"><name pos:start="207:9" pos:end="207:9">s</name><operator pos:start="207:10" pos:end="207:11">-&gt;</operator><name pos:start="207:12" pos:end="207:21">top_border</name><index pos:start="207:22" pos:end="207:24">[<expr pos:start="207:23" pos:end="207:23"><literal type="number" pos:start="207:23" pos:end="207:23">0</literal></expr>]</index><index pos:start="207:25" pos:end="207:28">[<expr pos:start="207:26" pos:end="207:27"><literal type="number" pos:start="207:26" pos:end="207:27">15</literal></expr>]</index></name> <operator pos:start="207:30" pos:end="207:30">=</operator> <name pos:start="207:32" pos:end="207:51"><name pos:start="207:32" pos:end="207:32">s</name><operator pos:start="207:33" pos:end="207:34">-&gt;</operator><name pos:start="207:35" pos:end="207:44">top_border</name><index pos:start="207:45" pos:end="207:47">[<expr pos:start="207:46" pos:end="207:46"><literal type="number" pos:start="207:46" pos:end="207:46">0</literal></expr>]</index><index pos:start="207:48" pos:end="207:51">[<expr pos:start="207:49" pos:end="207:50"><literal type="number" pos:start="207:49" pos:end="207:50">23</literal></expr>]</index></name> <operator pos:start="207:53" pos:end="207:53">=</operator> <literal type="number" pos:start="207:55" pos:end="207:57">127</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="209:78"><expr pos:start="209:9" pos:end="209:77"><call pos:start="209:9" pos:end="209:77"><name pos:start="209:9" pos:end="209:14">memset</name><argument_list pos:start="209:15" pos:end="209:77">(<argument pos:start="209:16" pos:end="209:33"><expr pos:start="209:16" pos:end="209:33"><name pos:start="209:16" pos:end="209:31"><name pos:start="209:16" pos:end="209:16">s</name><operator pos:start="209:17" pos:end="209:18">-&gt;</operator><name pos:start="209:19" pos:end="209:28">top_border</name><index pos:start="209:29" pos:end="209:31">[<expr pos:start="209:30" pos:end="209:30"><literal type="number" pos:start="209:30" pos:end="209:30">1</literal></expr>]</index></name><operator pos:start="209:32" pos:end="209:32">-</operator><literal type="number" pos:start="209:33" pos:end="209:33">1</literal></expr></argument>, <argument pos:start="209:36" pos:end="209:38"><expr pos:start="209:36" pos:end="209:38"><literal type="number" pos:start="209:36" pos:end="209:38">127</literal></expr></argument>, <argument pos:start="209:41" pos:end="209:76"><expr pos:start="209:41" pos:end="209:76"><name pos:start="209:41" pos:end="209:51"><name pos:start="209:41" pos:end="209:41">s</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:51">mb_width</name></name><operator pos:start="209:52" pos:end="209:52">*</operator><sizeof pos:start="209:53" pos:end="209:74">sizeof<argument_list pos:start="209:59" pos:end="209:74">(<argument pos:start="209:60" pos:end="209:73"><expr pos:start="209:60" pos:end="209:73"><operator pos:start="209:60" pos:end="209:60">*</operator><name pos:start="209:61" pos:end="209:73"><name pos:start="209:61" pos:end="209:61">s</name><operator pos:start="209:62" pos:end="209:63">-&gt;</operator><name pos:start="209:64" pos:end="209:73">top_border</name></name></expr></argument>)</argument_list></sizeof><operator pos:start="209:75" pos:end="209:75">+</operator><literal type="number" pos:start="209:76" pos:end="209:76">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:50"><expr pos:start="213:5" pos:end="213:49"><call pos:start="213:5" pos:end="213:49"><name pos:start="213:5" pos:end="213:10">memset</name><argument_list pos:start="213:11" pos:end="213:49">(<argument pos:start="213:12" pos:end="213:23"><expr pos:start="213:12" pos:end="213:23"><name pos:start="213:12" pos:end="213:23"><name pos:start="213:12" pos:end="213:12">s</name><operator pos:start="213:13" pos:end="213:14">-&gt;</operator><name pos:start="213:15" pos:end="213:23">ref_count</name></name></expr></argument>, <argument pos:start="213:26" pos:end="213:26"><expr pos:start="213:26" pos:end="213:26"><literal type="number" pos:start="213:26" pos:end="213:26">0</literal></expr></argument>, <argument pos:start="213:29" pos:end="213:48"><expr pos:start="213:29" pos:end="213:48"><sizeof pos:start="213:29" pos:end="213:48">sizeof<argument_list pos:start="213:35" pos:end="213:48">(<argument pos:start="213:36" pos:end="213:47"><expr pos:start="213:36" pos:end="213:47"><name pos:start="213:36" pos:end="213:47"><name pos:start="213:36" pos:end="213:36">s</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:47">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="222:0"><if pos:start="215:5" pos:end="222:0">if <condition pos:start="215:8" pos:end="215:20">(<expr pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:19"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:19">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="217:9" pos:end="222:0"><block_content pos:start="217:9" pos:end="222:0">

        <expr_stmt pos:start="217:9" pos:end="222:0"><expr pos:start="217:9" pos:end="217:65"><call pos:start="217:9" pos:end="217:65"><name pos:start="217:9" pos:end="217:14">memset</name><argument_list pos:start="217:15" pos:end="217:65">(<argument pos:start="217:16" pos:end="217:40"><expr pos:start="217:16" pos:end="217:40"><name pos:start="217:16" pos:end="217:40"><name pos:start="217:16" pos:end="217:16">s</name><operator pos:start="217:17" pos:end="217:18">-&gt;</operator><name pos:start="217:19" pos:end="217:40">intra4x4_pred_mode_top</name></name></expr></argument>, <argument pos:start="217:43" pos:end="217:49"><expr pos:start="217:43" pos:end="217:49"><name pos:start="217:43" pos:end="217:49">DC_PRED</name></expr></argument>, <argument pos:start="217:52" pos:end="217:64"><expr pos:start="217:52" pos:end="217:64"><name pos:start="217:52" pos:end="217:62"><name pos:start="217:52" pos:end="217:52">s</name><operator pos:start="217:53" pos:end="217:54">-&gt;</operator><name pos:start="217:55" pos:end="217:62">mb_width</name></name><operator pos:start="217:63" pos:end="217:63">*</operator><literal type="number" pos:start="217:64" pos:end="217:64">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:define pos:start="221:1" pos:end="221:24">#<cpp:directive pos:start="221:2" pos:end="221:7">define</cpp:directive> <cpp:macro pos:start="221:9" pos:end="221:14"><name pos:start="221:9" pos:end="221:14">MARGIN</name></cpp:macro> <cpp:value pos:start="221:16" pos:end="221:24">(16 &lt;&lt; 2)</cpp:value></cpp:define>

    <expr_stmt pos:start="223:5" pos:end="223:26"><expr pos:start="223:5" pos:end="223:25"><name pos:start="223:5" pos:end="223:15"><name pos:start="223:5" pos:end="223:5">s</name><operator pos:start="223:6" pos:end="223:7">-&gt;</operator><name pos:start="223:8" pos:end="223:13">mv_min</name><operator pos:start="223:14" pos:end="223:14">.</operator><name pos:start="223:15" pos:end="223:15">y</name></name> <operator pos:start="223:17" pos:end="223:17">=</operator> <operator pos:start="223:19" pos:end="223:19">-</operator><name pos:start="223:20" pos:end="223:25">MARGIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="225:5" pos:end="225:53"><expr pos:start="225:5" pos:end="225:52"><name pos:start="225:5" pos:end="225:15"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:13">mv_max</name><operator pos:start="225:14" pos:end="225:14">.</operator><name pos:start="225:15" pos:end="225:15">y</name></name> <operator pos:start="225:17" pos:end="225:17">=</operator> <operator pos:start="225:19" pos:end="225:19">(</operator><operator pos:start="225:20" pos:end="225:20">(</operator><name pos:start="225:21" pos:end="225:32"><name pos:start="225:21" pos:end="225:21">s</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:32">mb_height</name></name> <operator pos:start="225:34" pos:end="225:34">-</operator> <literal type="number" pos:start="225:36" pos:end="225:36">1</literal><operator pos:start="225:37" pos:end="225:37">)</operator> <operator pos:start="225:39" pos:end="225:40">&lt;&lt;</operator> <literal type="number" pos:start="225:42" pos:end="225:42">6</literal><operator pos:start="225:43" pos:end="225:43">)</operator> <operator pos:start="225:45" pos:end="225:45">+</operator> <name pos:start="225:47" pos:end="225:52">MARGIN</name></expr>;</expr_stmt>



    <for pos:start="229:5" pos:end="393:5">for <control pos:start="229:9" pos:end="229:47">(<init pos:start="229:10" pos:end="229:18"><expr pos:start="229:10" pos:end="229:17"><name pos:start="229:10" pos:end="229:13">mb_y</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <literal type="number" pos:start="229:17" pos:end="229:17">0</literal></expr>;</init> <condition pos:start="229:20" pos:end="229:39"><expr pos:start="229:20" pos:end="229:38"><name pos:start="229:20" pos:end="229:23">mb_y</name> <operator pos:start="229:25" pos:end="229:25">&lt;</operator> <name pos:start="229:27" pos:end="229:38"><name pos:start="229:27" pos:end="229:27">s</name><operator pos:start="229:28" pos:end="229:29">-&gt;</operator><name pos:start="229:30" pos:end="229:38">mb_height</name></name></expr>;</condition> <incr pos:start="229:41" pos:end="229:46"><expr pos:start="229:41" pos:end="229:46"><name pos:start="229:41" pos:end="229:44">mb_y</name><operator pos:start="229:45" pos:end="229:46">++</operator></expr></incr>)</control> <block pos:start="229:49" pos:end="393:5">{<block_content pos:start="231:9" pos:end="391:53">

        <decl_stmt pos:start="231:9" pos:end="231:84"><decl pos:start="231:9" pos:end="231:83"><type pos:start="231:9" pos:end="231:24"><name pos:start="231:9" pos:end="231:22">VP56RangeCoder</name> <modifier pos:start="231:24" pos:end="231:24">*</modifier></type><name pos:start="231:25" pos:end="231:25">c</name> <init pos:start="231:27" pos:end="231:83">= <expr pos:start="231:29" pos:end="231:83"><operator pos:start="231:29" pos:end="231:29">&amp;</operator><name pos:start="231:30" pos:end="231:83"><name pos:start="231:30" pos:end="231:30">s</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:47">coeff_partition</name><index pos:start="231:48" pos:end="231:83">[<expr pos:start="231:49" pos:end="231:82"><name pos:start="231:49" pos:end="231:52">mb_y</name> <operator pos:start="231:54" pos:end="231:54">&amp;</operator> <operator pos:start="231:56" pos:end="231:56">(</operator><name pos:start="231:57" pos:end="231:79"><name pos:start="231:57" pos:end="231:57">s</name><operator pos:start="231:58" pos:end="231:59">-&gt;</operator><name pos:start="231:60" pos:end="231:79">num_coeff_partitions</name></name><operator pos:start="231:80" pos:end="231:80">-</operator><literal type="number" pos:start="231:81" pos:end="231:81">1</literal><operator pos:start="231:82" pos:end="231:82">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="233:9" pos:end="233:73"><decl pos:start="233:9" pos:end="233:72"><type pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:21">VP8Macroblock</name> <modifier pos:start="233:23" pos:end="233:23">*</modifier></type><name pos:start="233:24" pos:end="233:25">mb</name> <init pos:start="233:27" pos:end="233:72">= <expr pos:start="233:29" pos:end="233:72"><name pos:start="233:29" pos:end="233:42"><name pos:start="233:29" pos:end="233:29">s</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:42">macroblocks</name></name> <operator pos:start="233:44" pos:end="233:44">+</operator> <operator pos:start="233:46" pos:end="233:46">(</operator><name pos:start="233:47" pos:end="233:58"><name pos:start="233:47" pos:end="233:47">s</name><operator pos:start="233:48" pos:end="233:49">-&gt;</operator><name pos:start="233:50" pos:end="233:58">mb_height</name></name> <operator pos:start="233:60" pos:end="233:60">-</operator> <name pos:start="233:62" pos:end="233:65">mb_y</name> <operator pos:start="233:67" pos:end="233:67">-</operator> <literal type="number" pos:start="233:69" pos:end="233:69">1</literal><operator pos:start="233:70" pos:end="233:70">)</operator><operator pos:start="233:71" pos:end="233:71">*</operator><literal type="number" pos:start="233:72" pos:end="233:72">2</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="235:9" pos:end="235:37"><decl pos:start="235:9" pos:end="235:36"><type pos:start="235:9" pos:end="235:11"><name pos:start="235:9" pos:end="235:11">int</name></type> <name pos:start="235:13" pos:end="235:17">mb_xy</name> <init pos:start="235:19" pos:end="235:36">= <expr pos:start="235:21" pos:end="235:36"><name pos:start="235:21" pos:end="235:24">mb_y</name><operator pos:start="235:25" pos:end="235:25">*</operator><name pos:start="235:26" pos:end="235:36"><name pos:start="235:26" pos:end="235:26">s</name><operator pos:start="235:27" pos:end="235:28">-&gt;</operator><name pos:start="235:29" pos:end="235:36">mb_width</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="237:9" pos:end="245:10"><decl pos:start="237:9" pos:end="245:9"><type pos:start="237:9" pos:end="237:17"><name pos:start="237:9" pos:end="237:15">uint8_t</name> <modifier pos:start="237:17" pos:end="237:17">*</modifier></type><name pos:start="237:18" pos:end="237:23"><name pos:start="237:18" pos:end="237:20">dst</name><index pos:start="237:21" pos:end="237:23">[<expr pos:start="237:22" pos:end="237:22"><literal type="number" pos:start="237:22" pos:end="237:22">3</literal></expr>]</index></name> <init pos:start="237:25" pos:end="245:9">= <expr pos:start="237:27" pos:end="245:9"><block pos:start="237:27" pos:end="245:9">{

            <expr pos:start="239:13" pos:end="239:51"><name pos:start="239:13" pos:end="239:29"><name pos:start="239:13" pos:end="239:20">curframe</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:26">data</name><index pos:start="239:27" pos:end="239:29">[<expr pos:start="239:28" pos:end="239:28"><literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr>]</index></name> <operator pos:start="239:31" pos:end="239:31">+</operator> <literal type="number" pos:start="239:33" pos:end="239:34">16</literal><operator pos:start="239:35" pos:end="239:35">*</operator><name pos:start="239:36" pos:end="239:39">mb_y</name><operator pos:start="239:40" pos:end="239:40">*</operator><name pos:start="239:41" pos:end="239:51"><name pos:start="239:41" pos:end="239:41">s</name><operator pos:start="239:42" pos:end="239:43">-&gt;</operator><name pos:start="239:44" pos:end="239:51">linesize</name></name></expr>,

            <expr pos:start="241:13" pos:end="241:53"><name pos:start="241:13" pos:end="241:29"><name pos:start="241:13" pos:end="241:20">curframe</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:26">data</name><index pos:start="241:27" pos:end="241:29">[<expr pos:start="241:28" pos:end="241:28"><literal type="number" pos:start="241:28" pos:end="241:28">1</literal></expr>]</index></name> <operator pos:start="241:31" pos:end="241:31">+</operator>  <literal type="number" pos:start="241:34" pos:end="241:34">8</literal><operator pos:start="241:35" pos:end="241:35">*</operator><name pos:start="241:36" pos:end="241:39">mb_y</name><operator pos:start="241:40" pos:end="241:40">*</operator><name pos:start="241:41" pos:end="241:53"><name pos:start="241:41" pos:end="241:41">s</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:53">uvlinesize</name></name></expr>,

            <expr pos:start="243:13" pos:end="243:53"><name pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:20">curframe</name><operator pos:start="243:21" pos:end="243:22">-&gt;</operator><name pos:start="243:23" pos:end="243:26">data</name><index pos:start="243:27" pos:end="243:29">[<expr pos:start="243:28" pos:end="243:28"><literal type="number" pos:start="243:28" pos:end="243:28">2</literal></expr>]</index></name> <operator pos:start="243:31" pos:end="243:31">+</operator>  <literal type="number" pos:start="243:34" pos:end="243:34">8</literal><operator pos:start="243:35" pos:end="243:35">*</operator><name pos:start="243:36" pos:end="243:39">mb_y</name><operator pos:start="243:40" pos:end="243:40">*</operator><name pos:start="243:41" pos:end="243:53"><name pos:start="243:41" pos:end="243:41">s</name><operator pos:start="243:42" pos:end="243:43">-&gt;</operator><name pos:start="243:44" pos:end="243:53">uvlinesize</name></name></expr>

        }</block></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="249:9" pos:end="249:39"><expr pos:start="249:9" pos:end="249:38"><call pos:start="249:9" pos:end="249:38"><name pos:start="249:9" pos:end="249:14">memset</name><argument_list pos:start="249:15" pos:end="249:38">(<argument pos:start="249:16" pos:end="249:21"><expr pos:start="249:16" pos:end="249:21"><name pos:start="249:16" pos:end="249:17">mb</name> <operator pos:start="249:19" pos:end="249:19">-</operator> <literal type="number" pos:start="249:21" pos:end="249:21">1</literal></expr></argument>, <argument pos:start="249:24" pos:end="249:24"><expr pos:start="249:24" pos:end="249:24"><literal type="number" pos:start="249:24" pos:end="249:24">0</literal></expr></argument>, <argument pos:start="249:27" pos:end="249:37"><expr pos:start="249:27" pos:end="249:37"><sizeof pos:start="249:27" pos:end="249:37">sizeof<argument_list pos:start="249:33" pos:end="249:37">(<argument pos:start="249:34" pos:end="249:36"><expr pos:start="249:34" pos:end="249:36"><operator pos:start="249:34" pos:end="249:34">*</operator><name pos:start="249:35" pos:end="249:36">mb</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="249:43" pos:end="249:65">// zero left macroblock</comment>

        <expr_stmt pos:start="251:9" pos:end="251:52"><expr pos:start="251:9" pos:end="251:51"><call pos:start="251:9" pos:end="251:51"><name pos:start="251:9" pos:end="251:14">memset</name><argument_list pos:start="251:15" pos:end="251:51">(<argument pos:start="251:16" pos:end="251:26"><expr pos:start="251:16" pos:end="251:26"><name pos:start="251:16" pos:end="251:26"><name pos:start="251:16" pos:end="251:16">s</name><operator pos:start="251:17" pos:end="251:18">-&gt;</operator><name pos:start="251:19" pos:end="251:26">left_nnz</name></name></expr></argument>, <argument pos:start="251:29" pos:end="251:29"><expr pos:start="251:29" pos:end="251:29"><literal type="number" pos:start="251:29" pos:end="251:29">0</literal></expr></argument>, <argument pos:start="251:32" pos:end="251:50"><expr pos:start="251:32" pos:end="251:50"><sizeof pos:start="251:32" pos:end="251:50">sizeof<argument_list pos:start="251:38" pos:end="251:50">(<argument pos:start="251:39" pos:end="251:49"><expr pos:start="251:39" pos:end="251:49"><name pos:start="251:39" pos:end="251:49"><name pos:start="251:39" pos:end="251:39">s</name><operator pos:start="251:40" pos:end="251:41">-&gt;</operator><name pos:start="251:42" pos:end="251:49">left_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:65"><expr pos:start="253:9" pos:end="253:64"><call pos:start="253:9" pos:end="253:64"><name pos:start="253:9" pos:end="253:16">AV_WN32A</name><argument_list pos:start="253:17" pos:end="253:64">(<argument pos:start="253:18" pos:end="253:43"><expr pos:start="253:18" pos:end="253:43"><name pos:start="253:18" pos:end="253:43"><name pos:start="253:18" pos:end="253:18">s</name><operator pos:start="253:19" pos:end="253:20">-&gt;</operator><name pos:start="253:21" pos:end="253:43">intra4x4_pred_mode_left</name></name></expr></argument>, <argument pos:start="253:46" pos:end="253:63"><expr pos:start="253:46" pos:end="253:63"><name pos:start="253:46" pos:end="253:52">DC_PRED</name><operator pos:start="253:53" pos:end="253:53">*</operator><literal type="number" pos:start="253:54" pos:end="253:63">0x01010101</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="line" pos:start="257:9" pos:end="257:48">// left edge of 129 for intra prediction</comment>

        <if_stmt pos:start="259:9" pos:end="271:9"><if pos:start="259:9" pos:end="271:9">if <condition pos:start="259:12" pos:end="259:50">(<expr pos:start="259:13" pos:end="259:49"><operator pos:start="259:13" pos:end="259:13">!</operator><operator pos:start="259:14" pos:end="259:14">(</operator><name pos:start="259:15" pos:end="259:26"><name pos:start="259:15" pos:end="259:19">avctx</name><operator pos:start="259:20" pos:end="259:21">-&gt;</operator><name pos:start="259:22" pos:end="259:26">flags</name></name> <operator pos:start="259:28" pos:end="259:28">&amp;</operator> <name pos:start="259:30" pos:end="259:48">CODEC_FLAG_EMU_EDGE</name><operator pos:start="259:49" pos:end="259:49">)</operator></expr>)</condition> <block pos:start="259:52" pos:end="271:9">{<block_content pos:start="261:13" pos:end="269:89">

            <for pos:start="261:13" pos:end="265:60">for <control pos:start="261:17" pos:end="261:35">(<init pos:start="261:18" pos:end="261:23"><expr pos:start="261:18" pos:end="261:22"><name pos:start="261:18" pos:end="261:18">i</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <literal type="number" pos:start="261:22" pos:end="261:22">0</literal></expr>;</init> <condition pos:start="261:25" pos:end="261:30"><expr pos:start="261:25" pos:end="261:29"><name pos:start="261:25" pos:end="261:25">i</name> <operator pos:start="261:27" pos:end="261:27">&lt;</operator> <literal type="number" pos:start="261:29" pos:end="261:29">3</literal></expr>;</condition> <incr pos:start="261:32" pos:end="261:34"><expr pos:start="261:32" pos:end="261:34"><name pos:start="261:32" pos:end="261:32">i</name><operator pos:start="261:33" pos:end="261:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="263:17" pos:end="265:60"><block_content pos:start="263:17" pos:end="265:60">

                <for pos:start="263:17" pos:end="265:60">for <control pos:start="263:21" pos:end="263:45">(<init pos:start="263:22" pos:end="263:27"><expr pos:start="263:22" pos:end="263:26"><name pos:start="263:22" pos:end="263:22">y</name> <operator pos:start="263:24" pos:end="263:24">=</operator> <literal type="number" pos:start="263:26" pos:end="263:26">0</literal></expr>;</init> <condition pos:start="263:29" pos:end="263:40"><expr pos:start="263:29" pos:end="263:39"><name pos:start="263:29" pos:end="263:35"><name pos:start="263:29" pos:end="263:29">y</name> <argument_list type="generic" pos:start="263:31" pos:end="263:35">&lt; <argument pos:start="263:33" pos:end="263:34"><expr pos:start="263:33" pos:end="263:34"><literal type="number" pos:start="263:33" pos:end="263:34">16</literal></expr></argument>&gt;</argument_list></name><operator pos:start="263:36" pos:end="263:36">&gt;</operator><operator pos:start="263:37" pos:end="263:37">!</operator><operator pos:start="263:38" pos:end="263:38">!</operator><name pos:start="263:39" pos:end="263:39">i</name></expr>;</condition> <incr pos:start="263:42" pos:end="263:44"><expr pos:start="263:42" pos:end="263:44"><name pos:start="263:42" pos:end="263:42">y</name><operator pos:start="263:43" pos:end="263:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="265:21" pos:end="265:60"><block_content pos:start="265:21" pos:end="265:60">

                    <expr_stmt pos:start="265:21" pos:end="265:60"><expr pos:start="265:21" pos:end="265:59"><name pos:start="265:21" pos:end="265:53"><name pos:start="265:21" pos:end="265:23">dst</name><index pos:start="265:24" pos:end="265:26">[<expr pos:start="265:25" pos:end="265:25"><name pos:start="265:25" pos:end="265:25">i</name></expr>]</index><index pos:start="265:27" pos:end="265:53">[<expr pos:start="265:28" pos:end="265:52"><name pos:start="265:28" pos:end="265:28">y</name><operator pos:start="265:29" pos:end="265:29">*</operator><name pos:start="265:30" pos:end="265:50"><name pos:start="265:30" pos:end="265:37">curframe</name><operator pos:start="265:38" pos:end="265:39">-&gt;</operator><name pos:start="265:40" pos:end="265:47">linesize</name><index pos:start="265:48" pos:end="265:50">[<expr pos:start="265:49" pos:end="265:49"><name pos:start="265:49" pos:end="265:49">i</name></expr>]</index></name><operator pos:start="265:51" pos:end="265:51">-</operator><literal type="number" pos:start="265:52" pos:end="265:52">1</literal></expr>]</index></name> <operator pos:start="265:55" pos:end="265:55">=</operator> <literal type="number" pos:start="265:57" pos:end="265:59">129</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

            <if_stmt pos:start="267:13" pos:end="269:89"><if pos:start="267:13" pos:end="269:89">if <condition pos:start="267:16" pos:end="267:26">(<expr pos:start="267:17" pos:end="267:25"><name pos:start="267:17" pos:end="267:20">mb_y</name> <operator pos:start="267:22" pos:end="267:23">==</operator> <literal type="number" pos:start="267:25" pos:end="267:25">1</literal></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:89"><block_content pos:start="269:17" pos:end="269:89"> <comment type="line" pos:start="267:28" pos:end="267:55">// top left edge is also 129</comment>

                <expr_stmt pos:start="269:17" pos:end="269:89"><expr pos:start="269:17" pos:end="269:88"><name pos:start="269:17" pos:end="269:36"><name pos:start="269:17" pos:end="269:17">s</name><operator pos:start="269:18" pos:end="269:19">-&gt;</operator><name pos:start="269:20" pos:end="269:29">top_border</name><index pos:start="269:30" pos:end="269:32">[<expr pos:start="269:31" pos:end="269:31"><literal type="number" pos:start="269:31" pos:end="269:31">0</literal></expr>]</index><index pos:start="269:33" pos:end="269:36">[<expr pos:start="269:34" pos:end="269:35"><literal type="number" pos:start="269:34" pos:end="269:35">15</literal></expr>]</index></name> <operator pos:start="269:38" pos:end="269:38">=</operator> <name pos:start="269:40" pos:end="269:59"><name pos:start="269:40" pos:end="269:40">s</name><operator pos:start="269:41" pos:end="269:42">-&gt;</operator><name pos:start="269:43" pos:end="269:52">top_border</name><index pos:start="269:53" pos:end="269:55">[<expr pos:start="269:54" pos:end="269:54"><literal type="number" pos:start="269:54" pos:end="269:54">0</literal></expr>]</index><index pos:start="269:56" pos:end="269:59">[<expr pos:start="269:57" pos:end="269:58"><literal type="number" pos:start="269:57" pos:end="269:58">23</literal></expr>]</index></name> <operator pos:start="269:61" pos:end="269:61">=</operator> <name pos:start="269:63" pos:end="269:82"><name pos:start="269:63" pos:end="269:63">s</name><operator pos:start="269:64" pos:end="269:65">-&gt;</operator><name pos:start="269:66" pos:end="269:75">top_border</name><index pos:start="269:76" pos:end="269:78">[<expr pos:start="269:77" pos:end="269:77"><literal type="number" pos:start="269:77" pos:end="269:77">0</literal></expr>]</index><index pos:start="269:79" pos:end="269:82">[<expr pos:start="269:80" pos:end="269:81"><literal type="number" pos:start="269:80" pos:end="269:81">31</literal></expr>]</index></name> <operator pos:start="269:84" pos:end="269:84">=</operator> <literal type="number" pos:start="269:86" pos:end="269:88">129</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="275:9" pos:end="275:30"><expr pos:start="275:9" pos:end="275:29"><name pos:start="275:9" pos:end="275:19"><name pos:start="275:9" pos:end="275:9">s</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:17">mv_min</name><operator pos:start="275:18" pos:end="275:18">.</operator><name pos:start="275:19" pos:end="275:19">x</name></name> <operator pos:start="275:21" pos:end="275:21">=</operator> <operator pos:start="275:23" pos:end="275:23">-</operator><name pos:start="275:24" pos:end="275:29">MARGIN</name></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:57"><expr pos:start="277:9" pos:end="277:56"><name pos:start="277:9" pos:end="277:19"><name pos:start="277:9" pos:end="277:9">s</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:17">mv_max</name><operator pos:start="277:18" pos:end="277:18">.</operator><name pos:start="277:19" pos:end="277:19">x</name></name> <operator pos:start="277:21" pos:end="277:21">=</operator> <operator pos:start="277:23" pos:end="277:23">(</operator><operator pos:start="277:24" pos:end="277:24">(</operator><name pos:start="277:25" pos:end="277:35"><name pos:start="277:25" pos:end="277:25">s</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:35">mb_width</name></name>  <operator pos:start="277:38" pos:end="277:38">-</operator> <literal type="number" pos:start="277:40" pos:end="277:40">1</literal><operator pos:start="277:41" pos:end="277:41">)</operator> <operator pos:start="277:43" pos:end="277:44">&lt;&lt;</operator> <literal type="number" pos:start="277:46" pos:end="277:46">6</literal><operator pos:start="277:47" pos:end="277:47">)</operator> <operator pos:start="277:49" pos:end="277:49">+</operator> <name pos:start="277:51" pos:end="277:56">MARGIN</name></expr>;</expr_stmt>

        <if_stmt pos:start="279:9" pos:end="281:58"><if pos:start="279:9" pos:end="281:58">if <condition pos:start="279:12" pos:end="279:81">(<expr pos:start="279:13" pos:end="279:80"><name pos:start="279:13" pos:end="279:22">prev_frame</name> <operator pos:start="279:24" pos:end="279:25">&amp;&amp;</operator> <name pos:start="279:27" pos:end="279:49"><name pos:start="279:27" pos:end="279:27">s</name><operator pos:start="279:28" pos:end="279:29">-&gt;</operator><name pos:start="279:30" pos:end="279:41">segmentation</name><operator pos:start="279:42" pos:end="279:42">.</operator><name pos:start="279:43" pos:end="279:49">enabled</name></name> <operator pos:start="279:51" pos:end="279:52">&amp;&amp;</operator> <operator pos:start="279:54" pos:end="279:54">!</operator><name pos:start="279:55" pos:end="279:80"><name pos:start="279:55" pos:end="279:55">s</name><operator pos:start="279:56" pos:end="279:57">-&gt;</operator><name pos:start="279:58" pos:end="279:69">segmentation</name><operator pos:start="279:70" pos:end="279:70">.</operator><name pos:start="279:71" pos:end="279:80">update_map</name></name></expr>)</condition><block type="pseudo" pos:start="281:13" pos:end="281:58"><block_content pos:start="281:13" pos:end="281:58">

            <expr_stmt pos:start="281:13" pos:end="281:58"><expr pos:start="281:13" pos:end="281:57"><call pos:start="281:13" pos:end="281:57"><name pos:start="281:13" pos:end="281:36">ff_thread_await_progress</name><argument_list pos:start="281:37" pos:end="281:57">(<argument pos:start="281:38" pos:end="281:47"><expr pos:start="281:38" pos:end="281:47"><name pos:start="281:38" pos:end="281:47">prev_frame</name></expr></argument>, <argument pos:start="281:50" pos:end="281:53"><expr pos:start="281:50" pos:end="281:53"><name pos:start="281:50" pos:end="281:53">mb_y</name></expr></argument>, <argument pos:start="281:56" pos:end="281:56"><expr pos:start="281:56" pos:end="281:56"><literal type="number" pos:start="281:56" pos:end="281:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="285:9" pos:end="371:9">for <control pos:start="285:13" pos:end="285:65">(<init pos:start="285:14" pos:end="285:22"><expr pos:start="285:14" pos:end="285:21"><name pos:start="285:14" pos:end="285:17">mb_x</name> <operator pos:start="285:19" pos:end="285:19">=</operator> <literal type="number" pos:start="285:21" pos:end="285:21">0</literal></expr>;</init> <condition pos:start="285:24" pos:end="285:42"><expr pos:start="285:24" pos:end="285:41"><name pos:start="285:24" pos:end="285:27">mb_x</name> <operator pos:start="285:29" pos:end="285:29">&lt;</operator> <name pos:start="285:31" pos:end="285:41"><name pos:start="285:31" pos:end="285:31">s</name><operator pos:start="285:32" pos:end="285:33">-&gt;</operator><name pos:start="285:34" pos:end="285:41">mb_width</name></name></expr>;</condition> <incr pos:start="285:44" pos:end="285:64"><expr pos:start="285:44" pos:end="285:49"><name pos:start="285:44" pos:end="285:47">mb_x</name><operator pos:start="285:48" pos:end="285:49">++</operator></expr><operator pos:start="285:50" pos:end="285:50">,</operator> <expr pos:start="285:52" pos:end="285:58"><name pos:start="285:52" pos:end="285:56">mb_xy</name><operator pos:start="285:57" pos:end="285:58">++</operator></expr><operator pos:start="285:59" pos:end="285:59">,</operator> <expr pos:start="285:61" pos:end="285:64"><name pos:start="285:61" pos:end="285:62">mb</name><operator pos:start="285:63" pos:end="285:64">++</operator></expr></incr>)</control> <block pos:start="285:67" pos:end="371:9">{<block_content pos:start="289:13" pos:end="369:30">

            <comment type="block" pos:start="287:13" pos:end="287:57">/* Prefetch the current frame, 4 MBs ahead */</comment>

            <expr_stmt pos:start="289:13" pos:end="289:82"><expr pos:start="289:13" pos:end="289:81"><call pos:start="289:13" pos:end="289:81"><name pos:start="289:13" pos:end="289:27"><name pos:start="289:13" pos:end="289:13">s</name><operator pos:start="289:14" pos:end="289:15">-&gt;</operator><name pos:start="289:16" pos:end="289:18">dsp</name><operator pos:start="289:19" pos:end="289:19">.</operator><name pos:start="289:20" pos:end="289:27">prefetch</name></name><argument_list pos:start="289:28" pos:end="289:81">(<argument pos:start="289:29" pos:end="289:64"><expr pos:start="289:29" pos:end="289:64"><name pos:start="289:29" pos:end="289:34"><name pos:start="289:29" pos:end="289:31">dst</name><index pos:start="289:32" pos:end="289:34">[<expr pos:start="289:33" pos:end="289:33"><literal type="number" pos:start="289:33" pos:end="289:33">0</literal></expr>]</index></name> <operator pos:start="289:36" pos:end="289:36">+</operator> <operator pos:start="289:38" pos:end="289:38">(</operator><name pos:start="289:39" pos:end="289:42">mb_x</name><operator pos:start="289:43" pos:end="289:43">&amp;</operator><literal type="number" pos:start="289:44" pos:end="289:44">3</literal><operator pos:start="289:45" pos:end="289:45">)</operator><operator pos:start="289:46" pos:end="289:46">*</operator><literal type="number" pos:start="289:47" pos:end="289:47">4</literal><operator pos:start="289:48" pos:end="289:48">*</operator><name pos:start="289:49" pos:end="289:59"><name pos:start="289:49" pos:end="289:49">s</name><operator pos:start="289:50" pos:end="289:51">-&gt;</operator><name pos:start="289:52" pos:end="289:59">linesize</name></name> <operator pos:start="289:61" pos:end="289:61">+</operator> <literal type="number" pos:start="289:63" pos:end="289:64">64</literal></expr></argument>, <argument pos:start="289:67" pos:end="289:77"><expr pos:start="289:67" pos:end="289:77"><name pos:start="289:67" pos:end="289:77"><name pos:start="289:67" pos:end="289:67">s</name><operator pos:start="289:68" pos:end="289:69">-&gt;</operator><name pos:start="289:70" pos:end="289:77">linesize</name></name></expr></argument>, <argument pos:start="289:80" pos:end="289:80"><expr pos:start="289:80" pos:end="289:80"><literal type="number" pos:start="289:80" pos:end="289:80">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:86"><expr pos:start="291:13" pos:end="291:85"><call pos:start="291:13" pos:end="291:85"><name pos:start="291:13" pos:end="291:27"><name pos:start="291:13" pos:end="291:13">s</name><operator pos:start="291:14" pos:end="291:15">-&gt;</operator><name pos:start="291:16" pos:end="291:18">dsp</name><operator pos:start="291:19" pos:end="291:19">.</operator><name pos:start="291:20" pos:end="291:27">prefetch</name></name><argument_list pos:start="291:28" pos:end="291:85">(<argument pos:start="291:29" pos:end="291:64"><expr pos:start="291:29" pos:end="291:64"><name pos:start="291:29" pos:end="291:34"><name pos:start="291:29" pos:end="291:31">dst</name><index pos:start="291:32" pos:end="291:34">[<expr pos:start="291:33" pos:end="291:33"><literal type="number" pos:start="291:33" pos:end="291:33">1</literal></expr>]</index></name> <operator pos:start="291:36" pos:end="291:36">+</operator> <operator pos:start="291:38" pos:end="291:38">(</operator><name pos:start="291:39" pos:end="291:42">mb_x</name><operator pos:start="291:43" pos:end="291:43">&amp;</operator><literal type="number" pos:start="291:44" pos:end="291:44">7</literal><operator pos:start="291:45" pos:end="291:45">)</operator><operator pos:start="291:46" pos:end="291:46">*</operator><name pos:start="291:47" pos:end="291:59"><name pos:start="291:47" pos:end="291:47">s</name><operator pos:start="291:48" pos:end="291:49">-&gt;</operator><name pos:start="291:50" pos:end="291:59">uvlinesize</name></name> <operator pos:start="291:61" pos:end="291:61">+</operator> <literal type="number" pos:start="291:63" pos:end="291:64">64</literal></expr></argument>, <argument pos:start="291:67" pos:end="291:81"><expr pos:start="291:67" pos:end="291:81"><name pos:start="291:67" pos:end="291:72"><name pos:start="291:67" pos:end="291:69">dst</name><index pos:start="291:70" pos:end="291:72">[<expr pos:start="291:71" pos:end="291:71"><literal type="number" pos:start="291:71" pos:end="291:71">2</literal></expr>]</index></name> <operator pos:start="291:74" pos:end="291:74">-</operator> <name pos:start="291:76" pos:end="291:81"><name pos:start="291:76" pos:end="291:78">dst</name><index pos:start="291:79" pos:end="291:81">[<expr pos:start="291:80" pos:end="291:80"><literal type="number" pos:start="291:80" pos:end="291:80">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="291:84" pos:end="291:84"><expr pos:start="291:84" pos:end="291:84"><literal type="number" pos:start="291:84" pos:end="291:84">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="295:13" pos:end="297:109"><expr pos:start="295:13" pos:end="297:108"><call pos:start="295:13" pos:end="297:108"><name pos:start="295:13" pos:end="295:26">decode_mb_mode</name><argument_list pos:start="295:27" pos:end="297:108">(<argument pos:start="295:28" pos:end="295:28"><expr pos:start="295:28" pos:end="295:28"><name pos:start="295:28" pos:end="295:28">s</name></expr></argument>, <argument pos:start="295:31" pos:end="295:32"><expr pos:start="295:31" pos:end="295:32"><name pos:start="295:31" pos:end="295:32">mb</name></expr></argument>, <argument pos:start="295:35" pos:end="295:38"><expr pos:start="295:35" pos:end="295:38"><name pos:start="295:35" pos:end="295:38">mb_x</name></expr></argument>, <argument pos:start="295:41" pos:end="295:44"><expr pos:start="295:41" pos:end="295:44"><name pos:start="295:41" pos:end="295:44">mb_y</name></expr></argument>, <argument pos:start="295:47" pos:end="295:76"><expr pos:start="295:47" pos:end="295:76"><name pos:start="295:47" pos:end="295:68"><name pos:start="295:47" pos:end="295:54">curframe</name><operator pos:start="295:55" pos:end="295:56">-&gt;</operator><name pos:start="295:57" pos:end="295:65">ref_index</name><index pos:start="295:66" pos:end="295:68">[<expr pos:start="295:67" pos:end="295:67"><literal type="number" pos:start="295:67" pos:end="295:67">0</literal></expr>]</index></name> <operator pos:start="295:70" pos:end="295:70">+</operator> <name pos:start="295:72" pos:end="295:76">mb_xy</name></expr></argument>,

                           <argument pos:start="297:28" pos:end="297:107"><expr pos:start="297:28" pos:end="297:107"><ternary pos:start="297:28" pos:end="297:107"><condition pos:start="297:28" pos:end="297:67"><expr pos:start="297:28" pos:end="297:65"><name pos:start="297:28" pos:end="297:37">prev_frame</name> <operator pos:start="297:39" pos:end="297:40">&amp;&amp;</operator> <name pos:start="297:42" pos:end="297:65"><name pos:start="297:42" pos:end="297:51">prev_frame</name><operator pos:start="297:52" pos:end="297:53">-&gt;</operator><name pos:start="297:54" pos:end="297:62">ref_index</name><index pos:start="297:63" pos:end="297:65">[<expr pos:start="297:64" pos:end="297:64"><literal type="number" pos:start="297:64" pos:end="297:64">0</literal></expr>]</index></name></expr> ?</condition><then pos:start="297:69" pos:end="297:100"> <expr pos:start="297:69" pos:end="297:100"><name pos:start="297:69" pos:end="297:92"><name pos:start="297:69" pos:end="297:78">prev_frame</name><operator pos:start="297:79" pos:end="297:80">-&gt;</operator><name pos:start="297:81" pos:end="297:89">ref_index</name><index pos:start="297:90" pos:end="297:92">[<expr pos:start="297:91" pos:end="297:91"><literal type="number" pos:start="297:91" pos:end="297:91">0</literal></expr>]</index></name> <operator pos:start="297:94" pos:end="297:94">+</operator> <name pos:start="297:96" pos:end="297:100">mb_xy</name></expr> </then><else pos:start="297:102" pos:end="297:107">: <expr pos:start="297:104" pos:end="297:107"><name pos:start="297:104" pos:end="297:107">NULL</name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="301:13" pos:end="301:75"><expr pos:start="301:13" pos:end="301:74"><call pos:start="301:13" pos:end="301:74"><name pos:start="301:13" pos:end="301:27">prefetch_motion</name><argument_list pos:start="301:28" pos:end="301:74">(<argument pos:start="301:29" pos:end="301:29"><expr pos:start="301:29" pos:end="301:29"><name pos:start="301:29" pos:end="301:29">s</name></expr></argument>, <argument pos:start="301:32" pos:end="301:33"><expr pos:start="301:32" pos:end="301:33"><name pos:start="301:32" pos:end="301:33">mb</name></expr></argument>, <argument pos:start="301:36" pos:end="301:39"><expr pos:start="301:36" pos:end="301:39"><name pos:start="301:36" pos:end="301:39">mb_x</name></expr></argument>, <argument pos:start="301:42" pos:end="301:45"><expr pos:start="301:42" pos:end="301:45"><name pos:start="301:42" pos:end="301:45">mb_y</name></expr></argument>, <argument pos:start="301:48" pos:end="301:52"><expr pos:start="301:48" pos:end="301:52"><name pos:start="301:48" pos:end="301:52">mb_xy</name></expr></argument>, <argument pos:start="301:55" pos:end="301:73"><expr pos:start="301:55" pos:end="301:73"><name pos:start="301:55" pos:end="301:73">VP56_FRAME_PREVIOUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="305:13" pos:end="307:74"><if pos:start="305:13" pos:end="307:74">if <condition pos:start="305:16" pos:end="305:26">(<expr pos:start="305:17" pos:end="305:25"><operator pos:start="305:17" pos:end="305:17">!</operator><name pos:start="305:18" pos:end="305:25"><name pos:start="305:18" pos:end="305:19">mb</name><operator pos:start="305:20" pos:end="305:21">-&gt;</operator><name pos:start="305:22" pos:end="305:25">skip</name></name></expr>)</condition><block type="pseudo" pos:start="307:17" pos:end="307:74"><block_content pos:start="307:17" pos:end="307:74">

                <expr_stmt pos:start="307:17" pos:end="307:74"><expr pos:start="307:17" pos:end="307:73"><call pos:start="307:17" pos:end="307:73"><name pos:start="307:17" pos:end="307:32">decode_mb_coeffs</name><argument_list pos:start="307:33" pos:end="307:73">(<argument pos:start="307:34" pos:end="307:34"><expr pos:start="307:34" pos:end="307:34"><name pos:start="307:34" pos:end="307:34">s</name></expr></argument>, <argument pos:start="307:37" pos:end="307:37"><expr pos:start="307:37" pos:end="307:37"><name pos:start="307:37" pos:end="307:37">c</name></expr></argument>, <argument pos:start="307:40" pos:end="307:41"><expr pos:start="307:40" pos:end="307:41"><name pos:start="307:40" pos:end="307:41">mb</name></expr></argument>, <argument pos:start="307:44" pos:end="307:59"><expr pos:start="307:44" pos:end="307:59"><name pos:start="307:44" pos:end="307:59"><name pos:start="307:44" pos:end="307:44">s</name><operator pos:start="307:45" pos:end="307:46">-&gt;</operator><name pos:start="307:47" pos:end="307:53">top_nnz</name><index pos:start="307:54" pos:end="307:59">[<expr pos:start="307:55" pos:end="307:58"><name pos:start="307:55" pos:end="307:58">mb_x</name></expr>]</index></name></expr></argument>, <argument pos:start="307:62" pos:end="307:72"><expr pos:start="307:62" pos:end="307:72"><name pos:start="307:62" pos:end="307:72"><name pos:start="307:62" pos:end="307:62">s</name><operator pos:start="307:63" pos:end="307:64">-&gt;</operator><name pos:start="307:65" pos:end="307:72">left_nnz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="311:13" pos:end="317:54"><if pos:start="311:13" pos:end="313:54">if <condition pos:start="311:16" pos:end="311:38">(<expr pos:start="311:17" pos:end="311:37"><name pos:start="311:17" pos:end="311:24"><name pos:start="311:17" pos:end="311:18">mb</name><operator pos:start="311:19" pos:end="311:20">-&gt;</operator><name pos:start="311:21" pos:end="311:24">mode</name></name> <operator pos:start="311:26" pos:end="311:27">&lt;=</operator> <name pos:start="311:29" pos:end="311:37">MODE_I4x4</name></expr>)</condition><block type="pseudo" pos:start="313:17" pos:end="313:54"><block_content pos:start="313:17" pos:end="313:54">

                <expr_stmt pos:start="313:17" pos:end="313:54"><expr pos:start="313:17" pos:end="313:53"><call pos:start="313:17" pos:end="313:53"><name pos:start="313:17" pos:end="313:29">intra_predict</name><argument_list pos:start="313:30" pos:end="313:53">(<argument pos:start="313:31" pos:end="313:31"><expr pos:start="313:31" pos:end="313:31"><name pos:start="313:31" pos:end="313:31">s</name></expr></argument>, <argument pos:start="313:34" pos:end="313:36"><expr pos:start="313:34" pos:end="313:36"><name pos:start="313:34" pos:end="313:36">dst</name></expr></argument>, <argument pos:start="313:39" pos:end="313:40"><expr pos:start="313:39" pos:end="313:40"><name pos:start="313:39" pos:end="313:40">mb</name></expr></argument>, <argument pos:start="313:43" pos:end="313:46"><expr pos:start="313:43" pos:end="313:46"><name pos:start="313:43" pos:end="313:46">mb_x</name></expr></argument>, <argument pos:start="313:49" pos:end="313:52"><expr pos:start="313:49" pos:end="313:52"><name pos:start="313:49" pos:end="313:52">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="315:13" pos:end="317:54">else<block type="pseudo" pos:start="317:17" pos:end="317:54"><block_content pos:start="317:17" pos:end="317:54">

                <expr_stmt pos:start="317:17" pos:end="317:54"><expr pos:start="317:17" pos:end="317:53"><call pos:start="317:17" pos:end="317:53"><name pos:start="317:17" pos:end="317:29">inter_predict</name><argument_list pos:start="317:30" pos:end="317:53">(<argument pos:start="317:31" pos:end="317:31"><expr pos:start="317:31" pos:end="317:31"><name pos:start="317:31" pos:end="317:31">s</name></expr></argument>, <argument pos:start="317:34" pos:end="317:36"><expr pos:start="317:34" pos:end="317:36"><name pos:start="317:34" pos:end="317:36">dst</name></expr></argument>, <argument pos:start="317:39" pos:end="317:40"><expr pos:start="317:39" pos:end="317:40"><name pos:start="317:39" pos:end="317:40">mb</name></expr></argument>, <argument pos:start="317:43" pos:end="317:46"><expr pos:start="317:43" pos:end="317:46"><name pos:start="317:43" pos:end="317:46">mb_x</name></expr></argument>, <argument pos:start="317:49" pos:end="317:52"><expr pos:start="317:49" pos:end="317:52"><name pos:start="317:49" pos:end="317:52">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="321:13" pos:end="321:73"><expr pos:start="321:13" pos:end="321:72"><call pos:start="321:13" pos:end="321:72"><name pos:start="321:13" pos:end="321:27">prefetch_motion</name><argument_list pos:start="321:28" pos:end="321:72">(<argument pos:start="321:29" pos:end="321:29"><expr pos:start="321:29" pos:end="321:29"><name pos:start="321:29" pos:end="321:29">s</name></expr></argument>, <argument pos:start="321:32" pos:end="321:33"><expr pos:start="321:32" pos:end="321:33"><name pos:start="321:32" pos:end="321:33">mb</name></expr></argument>, <argument pos:start="321:36" pos:end="321:39"><expr pos:start="321:36" pos:end="321:39"><name pos:start="321:36" pos:end="321:39">mb_x</name></expr></argument>, <argument pos:start="321:42" pos:end="321:45"><expr pos:start="321:42" pos:end="321:45"><name pos:start="321:42" pos:end="321:45">mb_y</name></expr></argument>, <argument pos:start="321:48" pos:end="321:52"><expr pos:start="321:48" pos:end="321:52"><name pos:start="321:48" pos:end="321:52">mb_xy</name></expr></argument>, <argument pos:start="321:55" pos:end="321:71"><expr pos:start="321:55" pos:end="321:71"><name pos:start="321:55" pos:end="321:71">VP56_FRAME_GOLDEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="325:13" pos:end="347:13"><if pos:start="325:13" pos:end="329:13">if <condition pos:start="325:16" pos:end="325:26">(<expr pos:start="325:17" pos:end="325:25"><operator pos:start="325:17" pos:end="325:17">!</operator><name pos:start="325:18" pos:end="325:25"><name pos:start="325:18" pos:end="325:19">mb</name><operator pos:start="325:20" pos:end="325:21">-&gt;</operator><name pos:start="325:22" pos:end="325:25">skip</name></name></expr>)</condition> <block pos:start="325:28" pos:end="329:13">{<block_content pos:start="327:17" pos:end="327:36">

                <expr_stmt pos:start="327:17" pos:end="327:36"><expr pos:start="327:17" pos:end="327:35"><call pos:start="327:17" pos:end="327:35"><name pos:start="327:17" pos:end="327:23">idct_mb</name><argument_list pos:start="327:24" pos:end="327:35">(<argument pos:start="327:25" pos:end="327:25"><expr pos:start="327:25" pos:end="327:25"><name pos:start="327:25" pos:end="327:25">s</name></expr></argument>, <argument pos:start="327:28" pos:end="327:30"><expr pos:start="327:28" pos:end="327:30"><name pos:start="327:28" pos:end="327:30">dst</name></expr></argument>, <argument pos:start="327:33" pos:end="327:34"><expr pos:start="327:33" pos:end="327:34"><name pos:start="327:33" pos:end="327:34">mb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="329:15" pos:end="347:13">else <block pos:start="329:20" pos:end="347:13">{<block_content pos:start="331:17" pos:end="345:17">

                <expr_stmt pos:start="331:17" pos:end="331:39"><expr pos:start="331:17" pos:end="331:38"><call pos:start="331:17" pos:end="331:38"><name pos:start="331:17" pos:end="331:25">AV_ZERO64</name><argument_list pos:start="331:26" pos:end="331:38">(<argument pos:start="331:27" pos:end="331:37"><expr pos:start="331:27" pos:end="331:37"><name pos:start="331:27" pos:end="331:37"><name pos:start="331:27" pos:end="331:27">s</name><operator pos:start="331:28" pos:end="331:29">-&gt;</operator><name pos:start="331:30" pos:end="331:37">left_nnz</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:45"><expr pos:start="333:17" pos:end="333:44"><call pos:start="333:17" pos:end="333:44"><name pos:start="333:17" pos:end="333:23">AV_WN64</name><argument_list pos:start="333:24" pos:end="333:44">(<argument pos:start="333:25" pos:end="333:40"><expr pos:start="333:25" pos:end="333:40"><name pos:start="333:25" pos:end="333:40"><name pos:start="333:25" pos:end="333:25">s</name><operator pos:start="333:26" pos:end="333:27">-&gt;</operator><name pos:start="333:28" pos:end="333:34">top_nnz</name><index pos:start="333:35" pos:end="333:40">[<expr pos:start="333:36" pos:end="333:39"><name pos:start="333:36" pos:end="333:39">mb_x</name></expr>]</index></name></expr></argument>, <argument pos:start="333:43" pos:end="333:43"><expr pos:start="333:43" pos:end="333:43"><literal type="number" pos:start="333:43" pos:end="333:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="333:49" pos:end="333:75">// array of 9, so unaligned</comment>



                <comment type="line" pos:start="337:17" pos:end="337:91">// Reset DC block predictors if they would exist if the mb had coefficients</comment>

                <if_stmt pos:start="339:17" pos:end="345:17"><if pos:start="339:17" pos:end="345:17">if <condition pos:start="339:20" pos:end="339:74">(<expr pos:start="339:21" pos:end="339:73"><name pos:start="339:21" pos:end="339:28"><name pos:start="339:21" pos:end="339:22">mb</name><operator pos:start="339:23" pos:end="339:24">-&gt;</operator><name pos:start="339:25" pos:end="339:28">mode</name></name> <operator pos:start="339:30" pos:end="339:31">!=</operator> <name pos:start="339:33" pos:end="339:41">MODE_I4x4</name> <operator pos:start="339:43" pos:end="339:44">&amp;&amp;</operator> <name pos:start="339:46" pos:end="339:53"><name pos:start="339:46" pos:end="339:47">mb</name><operator pos:start="339:48" pos:end="339:49">-&gt;</operator><name pos:start="339:50" pos:end="339:53">mode</name></name> <operator pos:start="339:55" pos:end="339:56">!=</operator> <name pos:start="339:58" pos:end="339:73">VP8_MVMODE_SPLIT</name></expr>)</condition> <block pos:start="339:76" pos:end="345:17">{<block_content pos:start="341:21" pos:end="343:44">

                    <expr_stmt pos:start="341:21" pos:end="341:44"><expr pos:start="341:21" pos:end="341:43"><name pos:start="341:21" pos:end="341:34"><name pos:start="341:21" pos:end="341:21">s</name><operator pos:start="341:22" pos:end="341:23">-&gt;</operator><name pos:start="341:24" pos:end="341:31">left_nnz</name><index pos:start="341:32" pos:end="341:34">[<expr pos:start="341:33" pos:end="341:33"><literal type="number" pos:start="341:33" pos:end="341:33">8</literal></expr>]</index></name>      <operator pos:start="341:41" pos:end="341:41">=</operator> <literal type="number" pos:start="341:43" pos:end="341:43">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="343:21" pos:end="343:44"><expr pos:start="343:21" pos:end="343:43"><name pos:start="343:21" pos:end="343:39"><name pos:start="343:21" pos:end="343:21">s</name><operator pos:start="343:22" pos:end="343:23">-&gt;</operator><name pos:start="343:24" pos:end="343:30">top_nnz</name><index pos:start="343:31" pos:end="343:36">[<expr pos:start="343:32" pos:end="343:35"><name pos:start="343:32" pos:end="343:35">mb_x</name></expr>]</index><index pos:start="343:37" pos:end="343:39">[<expr pos:start="343:38" pos:end="343:38"><literal type="number" pos:start="343:38" pos:end="343:38">8</literal></expr>]</index></name> <operator pos:start="343:41" pos:end="343:41">=</operator> <literal type="number" pos:start="343:43" pos:end="343:43">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="351:13" pos:end="353:70"><if pos:start="351:13" pos:end="353:70">if <condition pos:start="351:16" pos:end="351:34">(<expr pos:start="351:17" pos:end="351:33"><name pos:start="351:17" pos:end="351:33"><name pos:start="351:17" pos:end="351:17">s</name><operator pos:start="351:18" pos:end="351:19">-&gt;</operator><name pos:start="351:20" pos:end="351:33">deblock_filter</name></name></expr>)</condition><block type="pseudo" pos:start="353:17" pos:end="353:70"><block_content pos:start="353:17" pos:end="353:70">

                <expr_stmt pos:start="353:17" pos:end="353:70"><expr pos:start="353:17" pos:end="353:69"><call pos:start="353:17" pos:end="353:69"><name pos:start="353:17" pos:end="353:35">filter_level_for_mb</name><argument_list pos:start="353:36" pos:end="353:69">(<argument pos:start="353:37" pos:end="353:37"><expr pos:start="353:37" pos:end="353:37"><name pos:start="353:37" pos:end="353:37">s</name></expr></argument>, <argument pos:start="353:40" pos:end="353:41"><expr pos:start="353:40" pos:end="353:41"><name pos:start="353:40" pos:end="353:41">mb</name></expr></argument>, <argument pos:start="353:44" pos:end="353:68"><expr pos:start="353:44" pos:end="353:68"><operator pos:start="353:44" pos:end="353:44">&amp;</operator><name pos:start="353:45" pos:end="353:68"><name pos:start="353:45" pos:end="353:45">s</name><operator pos:start="353:46" pos:end="353:47">-&gt;</operator><name pos:start="353:48" pos:end="353:62">filter_strength</name><index pos:start="353:63" pos:end="353:68">[<expr pos:start="353:64" pos:end="353:67"><name pos:start="353:64" pos:end="353:67">mb_x</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="357:13" pos:end="357:74"><expr pos:start="357:13" pos:end="357:73"><call pos:start="357:13" pos:end="357:73"><name pos:start="357:13" pos:end="357:27">prefetch_motion</name><argument_list pos:start="357:28" pos:end="357:73">(<argument pos:start="357:29" pos:end="357:29"><expr pos:start="357:29" pos:end="357:29"><name pos:start="357:29" pos:end="357:29">s</name></expr></argument>, <argument pos:start="357:32" pos:end="357:33"><expr pos:start="357:32" pos:end="357:33"><name pos:start="357:32" pos:end="357:33">mb</name></expr></argument>, <argument pos:start="357:36" pos:end="357:39"><expr pos:start="357:36" pos:end="357:39"><name pos:start="357:36" pos:end="357:39">mb_x</name></expr></argument>, <argument pos:start="357:42" pos:end="357:45"><expr pos:start="357:42" pos:end="357:45"><name pos:start="357:42" pos:end="357:45">mb_y</name></expr></argument>, <argument pos:start="357:48" pos:end="357:52"><expr pos:start="357:48" pos:end="357:52"><name pos:start="357:48" pos:end="357:52">mb_xy</name></expr></argument>, <argument pos:start="357:55" pos:end="357:72"><expr pos:start="357:55" pos:end="357:72"><name pos:start="357:55" pos:end="357:72">VP56_FRAME_GOLDEN2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="361:13" pos:end="361:25"><expr pos:start="361:13" pos:end="361:24"><name pos:start="361:13" pos:end="361:18"><name pos:start="361:13" pos:end="361:15">dst</name><index pos:start="361:16" pos:end="361:18">[<expr pos:start="361:17" pos:end="361:17"><literal type="number" pos:start="361:17" pos:end="361:17">0</literal></expr>]</index></name> <operator pos:start="361:20" pos:end="361:21">+=</operator> <literal type="number" pos:start="361:23" pos:end="361:24">16</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:24"><expr pos:start="363:13" pos:end="363:23"><name pos:start="363:13" pos:end="363:18"><name pos:start="363:13" pos:end="363:15">dst</name><index pos:start="363:16" pos:end="363:18">[<expr pos:start="363:17" pos:end="363:17"><literal type="number" pos:start="363:17" pos:end="363:17">1</literal></expr>]</index></name> <operator pos:start="363:20" pos:end="363:21">+=</operator> <literal type="number" pos:start="363:23" pos:end="363:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:24"><expr pos:start="365:13" pos:end="365:23"><name pos:start="365:13" pos:end="365:18"><name pos:start="365:13" pos:end="365:15">dst</name><index pos:start="365:16" pos:end="365:18">[<expr pos:start="365:17" pos:end="365:17"><literal type="number" pos:start="365:17" pos:end="365:17">2</literal></expr>]</index></name> <operator pos:start="365:20" pos:end="365:21">+=</operator> <literal type="number" pos:start="365:23" pos:end="365:23">8</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="367:13" pos:end="367:30"><expr pos:start="367:13" pos:end="367:29"><name pos:start="367:13" pos:end="367:23"><name pos:start="367:13" pos:end="367:13">s</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:21">mv_min</name><operator pos:start="367:22" pos:end="367:22">.</operator><name pos:start="367:23" pos:end="367:23">x</name></name> <operator pos:start="367:25" pos:end="367:26">-=</operator> <literal type="number" pos:start="367:28" pos:end="367:29">64</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="369:30"><expr pos:start="369:13" pos:end="369:29"><name pos:start="369:13" pos:end="369:23"><name pos:start="369:13" pos:end="369:13">s</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:21">mv_max</name><operator pos:start="369:22" pos:end="369:22">.</operator><name pos:start="369:23" pos:end="369:23">x</name></name> <operator pos:start="369:25" pos:end="369:26">-=</operator> <literal type="number" pos:start="369:28" pos:end="369:29">64</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="373:9" pos:end="383:9"><if pos:start="373:9" pos:end="383:9">if <condition pos:start="373:12" pos:end="373:30">(<expr pos:start="373:13" pos:end="373:29"><name pos:start="373:13" pos:end="373:29"><name pos:start="373:13" pos:end="373:13">s</name><operator pos:start="373:14" pos:end="373:15">-&gt;</operator><name pos:start="373:16" pos:end="373:29">deblock_filter</name></name></expr>)</condition> <block pos:start="373:32" pos:end="383:9">{<block_content pos:start="375:13" pos:end="381:49">

            <if_stmt pos:start="375:13" pos:end="381:49"><if pos:start="375:13" pos:end="377:56">if <condition pos:start="375:16" pos:end="375:33">(<expr pos:start="375:17" pos:end="375:32"><name pos:start="375:17" pos:end="375:32"><name pos:start="375:17" pos:end="375:17">s</name><operator pos:start="375:18" pos:end="375:19">-&gt;</operator><name pos:start="375:20" pos:end="375:25">filter</name><operator pos:start="375:26" pos:end="375:26">.</operator><name pos:start="375:27" pos:end="375:32">simple</name></name></expr>)</condition><block type="pseudo" pos:start="377:17" pos:end="377:56"><block_content pos:start="377:17" pos:end="377:56">

                <expr_stmt pos:start="377:17" pos:end="377:56"><expr pos:start="377:17" pos:end="377:55"><call pos:start="377:17" pos:end="377:55"><name pos:start="377:17" pos:end="377:36">filter_mb_row_simple</name><argument_list pos:start="377:37" pos:end="377:55">(<argument pos:start="377:38" pos:end="377:38"><expr pos:start="377:38" pos:end="377:38"><name pos:start="377:38" pos:end="377:38">s</name></expr></argument>, <argument pos:start="377:41" pos:end="377:48"><expr pos:start="377:41" pos:end="377:48"><name pos:start="377:41" pos:end="377:48">curframe</name></expr></argument>, <argument pos:start="377:51" pos:end="377:54"><expr pos:start="377:51" pos:end="377:54"><name pos:start="377:51" pos:end="377:54">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="379:13" pos:end="381:49">else<block type="pseudo" pos:start="381:17" pos:end="381:49"><block_content pos:start="381:17" pos:end="381:49">

                <expr_stmt pos:start="381:17" pos:end="381:49"><expr pos:start="381:17" pos:end="381:48"><call pos:start="381:17" pos:end="381:48"><name pos:start="381:17" pos:end="381:29">filter_mb_row</name><argument_list pos:start="381:30" pos:end="381:48">(<argument pos:start="381:31" pos:end="381:31"><expr pos:start="381:31" pos:end="381:31"><name pos:start="381:31" pos:end="381:31">s</name></expr></argument>, <argument pos:start="381:34" pos:end="381:41"><expr pos:start="381:34" pos:end="381:41"><name pos:start="381:34" pos:end="381:41">curframe</name></expr></argument>, <argument pos:start="381:44" pos:end="381:47"><expr pos:start="381:44" pos:end="381:47"><name pos:start="381:44" pos:end="381:47">mb_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="385:9" pos:end="385:26"><expr pos:start="385:9" pos:end="385:25"><name pos:start="385:9" pos:end="385:19"><name pos:start="385:9" pos:end="385:9">s</name><operator pos:start="385:10" pos:end="385:11">-&gt;</operator><name pos:start="385:12" pos:end="385:17">mv_min</name><operator pos:start="385:18" pos:end="385:18">.</operator><name pos:start="385:19" pos:end="385:19">y</name></name> <operator pos:start="385:21" pos:end="385:22">-=</operator> <literal type="number" pos:start="385:24" pos:end="385:25">64</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="387:9" pos:end="387:26"><expr pos:start="387:9" pos:end="387:25"><name pos:start="387:9" pos:end="387:19"><name pos:start="387:9" pos:end="387:9">s</name><operator pos:start="387:10" pos:end="387:11">-&gt;</operator><name pos:start="387:12" pos:end="387:17">mv_max</name><operator pos:start="387:18" pos:end="387:18">.</operator><name pos:start="387:19" pos:end="387:19">y</name></name> <operator pos:start="387:21" pos:end="387:22">-=</operator> <literal type="number" pos:start="387:24" pos:end="387:25">64</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="391:9" pos:end="391:53"><expr pos:start="391:9" pos:end="391:52"><call pos:start="391:9" pos:end="391:52"><name pos:start="391:9" pos:end="391:33">ff_thread_report_progress</name><argument_list pos:start="391:34" pos:end="391:52">(<argument pos:start="391:35" pos:end="391:42"><expr pos:start="391:35" pos:end="391:42"><name pos:start="391:35" pos:end="391:42">curframe</name></expr></argument>, <argument pos:start="391:45" pos:end="391:48"><expr pos:start="391:45" pos:end="391:48"><name pos:start="391:45" pos:end="391:48">mb_y</name></expr></argument>, <argument pos:start="391:51" pos:end="391:51"><expr pos:start="391:51" pos:end="391:51"><literal type="number" pos:start="391:51" pos:end="391:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="397:5" pos:end="397:52"><expr pos:start="397:5" pos:end="397:51"><call pos:start="397:5" pos:end="397:51"><name pos:start="397:5" pos:end="397:29">ff_thread_report_progress</name><argument_list pos:start="397:30" pos:end="397:51">(<argument pos:start="397:31" pos:end="397:38"><expr pos:start="397:31" pos:end="397:38"><name pos:start="397:31" pos:end="397:38">curframe</name></expr></argument>, <argument pos:start="397:41" pos:end="397:47"><expr pos:start="397:41" pos:end="397:47"><name pos:start="397:41" pos:end="397:47">INT_MAX</name></expr></argument>, <argument pos:start="397:50" pos:end="397:50"><expr pos:start="397:50" pos:end="397:50"><literal type="number" pos:start="397:50" pos:end="397:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="399:1" pos:end="399:12"><name pos:start="399:1" pos:end="399:11">skip_decode</name>:</label>

    <comment type="line" pos:start="401:5" pos:end="401:60">// if future frames don't use the updated probabilities,</comment>

    <comment type="line" pos:start="403:5" pos:end="403:40">// reset them to the values we saved</comment>

    <if_stmt pos:start="405:5" pos:end="407:32"><if pos:start="405:5" pos:end="407:32">if <condition pos:start="405:8" pos:end="405:33">(<expr pos:start="405:9" pos:end="405:32"><operator pos:start="405:9" pos:end="405:9">!</operator><name pos:start="405:10" pos:end="405:32"><name pos:start="405:10" pos:end="405:10">s</name><operator pos:start="405:11" pos:end="405:12">-&gt;</operator><name pos:start="405:13" pos:end="405:32">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="407:9" pos:end="407:32"><block_content pos:start="407:9" pos:end="407:32">

        <expr_stmt pos:start="407:9" pos:end="407:32"><expr pos:start="407:9" pos:end="407:31"><name pos:start="407:9" pos:end="407:18"><name pos:start="407:9" pos:end="407:9">s</name><operator pos:start="407:10" pos:end="407:11">-&gt;</operator><name pos:start="407:12" pos:end="407:15">prob</name><index pos:start="407:16" pos:end="407:18">[<expr pos:start="407:17" pos:end="407:17"><literal type="number" pos:start="407:17" pos:end="407:17">0</literal></expr>]</index></name> <operator pos:start="407:20" pos:end="407:20">=</operator> <name pos:start="407:22" pos:end="407:31"><name pos:start="407:22" pos:end="407:22">s</name><operator pos:start="407:23" pos:end="407:24">-&gt;</operator><name pos:start="407:25" pos:end="407:28">prob</name><index pos:start="407:29" pos:end="407:31">[<expr pos:start="407:30" pos:end="407:30"><literal type="number" pos:start="407:30" pos:end="407:30">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="411:5" pos:end="411:72"><expr pos:start="411:5" pos:end="411:71"><call pos:start="411:5" pos:end="411:71"><name pos:start="411:5" pos:end="411:10">memcpy</name><argument_list pos:start="411:11" pos:end="411:71">(<argument pos:start="411:12" pos:end="411:24"><expr pos:start="411:12" pos:end="411:24"><operator pos:start="411:12" pos:end="411:12">&amp;</operator><name pos:start="411:13" pos:end="411:24"><name pos:start="411:13" pos:end="411:13">s</name><operator pos:start="411:14" pos:end="411:15">-&gt;</operator><name pos:start="411:16" pos:end="411:21">framep</name><index pos:start="411:22" pos:end="411:24">[<expr pos:start="411:23" pos:end="411:23"><literal type="number" pos:start="411:23" pos:end="411:23">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="411:27" pos:end="411:44"><expr pos:start="411:27" pos:end="411:44"><operator pos:start="411:27" pos:end="411:27">&amp;</operator><name pos:start="411:28" pos:end="411:44"><name pos:start="411:28" pos:end="411:28">s</name><operator pos:start="411:29" pos:end="411:30">-&gt;</operator><name pos:start="411:31" pos:end="411:41">next_framep</name><index pos:start="411:42" pos:end="411:44">[<expr pos:start="411:43" pos:end="411:43"><literal type="number" pos:start="411:43" pos:end="411:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="411:47" pos:end="411:70"><expr pos:start="411:47" pos:end="411:70"><sizeof pos:start="411:47" pos:end="411:66">sizeof<argument_list pos:start="411:53" pos:end="411:66">(<argument pos:start="411:54" pos:end="411:65"><expr pos:start="411:54" pos:end="411:65"><name pos:start="411:54" pos:end="411:65"><name pos:start="411:54" pos:end="411:54">s</name><operator pos:start="411:55" pos:end="411:56">-&gt;</operator><name pos:start="411:57" pos:end="411:62">framep</name><index pos:start="411:63" pos:end="411:65">[<expr pos:start="411:64" pos:end="411:64"><literal type="number" pos:start="411:64" pos:end="411:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="411:68" pos:end="411:68">*</operator> <literal type="number" pos:start="411:70" pos:end="411:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="415:5" pos:end="421:5"><if pos:start="415:5" pos:end="421:5">if <condition pos:start="415:8" pos:end="415:22">(<expr pos:start="415:9" pos:end="415:21"><operator pos:start="415:9" pos:end="415:9">!</operator><name pos:start="415:10" pos:end="415:21"><name pos:start="415:10" pos:end="415:10">s</name><operator pos:start="415:11" pos:end="415:12">-&gt;</operator><name pos:start="415:13" pos:end="415:21">invisible</name></name></expr>)</condition> <block pos:start="415:24" pos:end="421:5">{<block_content pos:start="417:9" pos:end="419:37">

        <expr_stmt pos:start="417:9" pos:end="417:36"><expr pos:start="417:9" pos:end="417:35"><operator pos:start="417:9" pos:end="417:9">*</operator><operator pos:start="417:10" pos:end="417:10">(</operator><name pos:start="417:11" pos:end="417:17">AVFrame</name><operator pos:start="417:18" pos:end="417:18">*</operator><operator pos:start="417:19" pos:end="417:19">)</operator><name pos:start="417:20" pos:end="417:23">data</name> <operator pos:start="417:25" pos:end="417:25">=</operator> <operator pos:start="417:27" pos:end="417:27">*</operator><name pos:start="417:28" pos:end="417:35">curframe</name></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:37"><expr pos:start="419:9" pos:end="419:36"><operator pos:start="419:9" pos:end="419:9">*</operator><name pos:start="419:10" pos:end="419:18">data_size</name> <operator pos:start="419:20" pos:end="419:20">=</operator> <sizeof pos:start="419:22" pos:end="419:36">sizeof<argument_list pos:start="419:28" pos:end="419:36">(<argument pos:start="419:29" pos:end="419:35"><expr pos:start="419:29" pos:end="419:35"><name pos:start="419:29" pos:end="419:35">AVFrame</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="425:5" pos:end="425:23">return <expr pos:start="425:12" pos:end="425:22"><name pos:start="425:12" pos:end="425:22"><name pos:start="425:12" pos:end="425:16">avpkt</name><operator pos:start="425:17" pos:end="425:18">-&gt;</operator><name pos:start="425:19" pos:end="425:22">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
