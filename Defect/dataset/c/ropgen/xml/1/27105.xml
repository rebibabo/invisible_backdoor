<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27105.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">float32</name></type> <name pos:start="1:9" pos:end="1:22">float32_scalbn</name><parameter_list pos:start="1:23" pos:end="1:55">( <parameter pos:start="1:25" pos:end="1:33"><decl pos:start="1:25" pos:end="1:33"><type pos:start="1:25" pos:end="1:33"><name pos:start="1:25" pos:end="1:31">float32</name></type> <name pos:start="1:33" pos:end="1:33">a</name></decl></parameter>, <parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:38">int</name> <name pos:start="1:40" pos:end="1:40">n</name></type> <name pos:start="1:42" pos:end="1:53">STATUS_PARAM</name></decl></parameter> )</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:72">

    <decl_stmt pos:start="5:5" pos:end="5:15"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">flag</name></type> <name pos:start="5:10" pos:end="5:14">aSign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:9"><name pos:start="7:5" pos:end="7:9">int16</name></type> <name pos:start="7:11" pos:end="7:14">aExp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:17">aSig</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:52"><expr pos:start="13:5" pos:end="13:51"><name pos:start="13:5" pos:end="13:5">a</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <macro pos:start="13:9" pos:end="13:51"><name pos:start="13:9" pos:end="13:37">float32_squash_input_denormal</name><argument_list pos:start="13:38" pos:end="13:51">(<argument pos:start="13:39" pos:end="13:50">a STATUS_VAR</argument>)</argument_list></macro></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:8">aSig</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:34"><name pos:start="15:12" pos:end="15:29">extractFloat32Frac</name><argument_list pos:start="15:30" pos:end="15:34">( <argument pos:start="15:32" pos:end="15:32"><expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:8">aExp</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:33"><name pos:start="17:12" pos:end="17:28">extractFloat32Exp</name><argument_list pos:start="17:29" pos:end="17:33">( <argument pos:start="17:31" pos:end="17:31"><expr pos:start="17:31" pos:end="17:31"><name pos:start="17:31" pos:end="17:31">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:36"><expr pos:start="19:5" pos:end="19:35"><name pos:start="19:5" pos:end="19:9">aSign</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:30">extractFloat32Sign</name><argument_list pos:start="19:31" pos:end="19:35">( <argument pos:start="19:33" pos:end="19:33"><expr pos:start="19:33" pos:end="19:33"><name pos:start="19:33" pos:end="19:33">a</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:23">( <expr pos:start="23:10" pos:end="23:21"><name pos:start="23:10" pos:end="23:13">aExp</name> <operator pos:start="23:15" pos:end="23:16">==</operator> <literal type="number" pos:start="23:18" pos:end="23:21">0xFF</literal></expr> )</condition> <block pos:start="23:25" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:17">

        <return pos:start="25:9" pos:end="25:17">return <expr pos:start="25:16" pos:end="25:16"><name pos:start="25:16" pos:end="25:16">a</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="35:17"><if pos:start="29:5" pos:end="31:27">if <condition pos:start="29:8" pos:end="29:20">( <expr pos:start="29:10" pos:end="29:18"><name pos:start="29:10" pos:end="29:13">aExp</name> <operator pos:start="29:15" pos:end="29:16">!=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr> )</condition><block type="pseudo" pos:start="31:9" pos:end="31:27"><block_content pos:start="31:9" pos:end="31:27">

        <expr_stmt pos:start="31:9" pos:end="31:27"><expr pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:12">aSig</name> <operator pos:start="31:14" pos:end="31:15">|=</operator> <literal type="number" pos:start="31:17" pos:end="31:26">0x00800000</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="33:5" pos:end="35:17">else if <condition pos:start="33:13" pos:end="33:25">( <expr pos:start="33:15" pos:end="33:23"><name pos:start="33:15" pos:end="33:18">aSig</name> <operator pos:start="33:20" pos:end="33:21">==</operator> <literal type="number" pos:start="33:23" pos:end="33:23">0</literal></expr> )</condition><block type="pseudo" pos:start="35:9" pos:end="35:17"><block_content pos:start="35:9" pos:end="35:17">

        <return pos:start="35:9" pos:end="35:17">return <expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">a</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:18"><expr pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:8">aExp</name> <operator pos:start="39:10" pos:end="39:11">+=</operator> <name pos:start="39:13" pos:end="39:13">n</name> <operator pos:start="39:15" pos:end="39:15">-</operator> <literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:15"><expr pos:start="41:5" pos:end="41:14"><name pos:start="41:5" pos:end="41:8">aSig</name> <operator pos:start="41:10" pos:end="41:12">&lt;&lt;=</operator> <literal type="number" pos:start="41:14" pos:end="41:14">7</literal></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:72">return <macro pos:start="43:12" pos:end="43:71"><name pos:start="43:12" pos:end="43:39">normalizeRoundAndPackFloat32</name><argument_list pos:start="43:40" pos:end="43:71">( <argument pos:start="43:42" pos:end="43:46">aSign</argument>, <argument pos:start="43:49" pos:end="43:52">aExp</argument>, <argument pos:start="43:55" pos:end="43:69">aSig STATUS_VAR</argument> )</argument_list></macro>;</return>

</block_content>}</block></function>
</unit>
