<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/208.c" pos:tabs="8"><function pos:start="1:1" pos:end="267:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">virtio_scsi_do_tmf</name><parameter_list pos:start="1:30" pos:end="1:64">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">VirtIOSCSI</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:63"><decl pos:start="1:46" pos:end="1:63"><type pos:start="1:46" pos:end="1:63"><name pos:start="1:46" pos:end="1:58">VirtIOSCSIReq</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">req</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="267:1">{<block_content pos:start="5:5" pos:end="265:15">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:64">= <expr pos:start="5:21" pos:end="5:64"><call pos:start="5:21" pos:end="5:64"><name pos:start="5:21" pos:end="5:43">virtio_scsi_device_find</name><argument_list pos:start="5:44" pos:end="5:64">(<argument pos:start="5:45" pos:end="5:45"><expr pos:start="5:45" pos:end="5:45"><name pos:start="5:45" pos:end="5:45">s</name></expr></argument>, <argument pos:start="5:48" pos:end="5:63"><expr pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:63"><name pos:start="5:48" pos:end="5:50">req</name><operator pos:start="5:51" pos:end="5:52">-&gt;</operator><name pos:start="5:53" pos:end="5:55">req</name><operator pos:start="5:56" pos:end="5:56">.</operator><name pos:start="5:57" pos:end="5:59">tmf</name><operator pos:start="5:60" pos:end="5:60">.</operator><name pos:start="5:61" pos:end="5:63">lun</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIRequest</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">r</name></decl>, <decl pos:start="7:21" pos:end="7:25"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">next</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusChild</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:17">kid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">target</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name> <init pos:start="13:13" pos:end="13:15">= <expr pos:start="13:15" pos:end="13:15"><literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:28">dataplane_started</name></name></expr>)</condition> <block pos:start="17:31" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:59">

        <expr_stmt pos:start="19:9" pos:end="19:59"><expr pos:start="19:9" pos:end="19:58"><call pos:start="19:9" pos:end="19:58"><name pos:start="19:9" pos:end="19:14">assert</name><argument_list pos:start="19:15" pos:end="19:58">(<argument pos:start="19:16" pos:end="19:57"><expr pos:start="19:16" pos:end="19:57"><call pos:start="19:16" pos:end="19:47"><name pos:start="19:16" pos:end="19:34">blk_get_aio_context</name><argument_list pos:start="19:35" pos:end="19:47">(<argument pos:start="19:36" pos:end="19:46"><expr pos:start="19:36" pos:end="19:46"><name pos:start="19:36" pos:end="19:46"><name pos:start="19:36" pos:end="19:36">d</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:42">conf</name><operator pos:start="19:43" pos:end="19:43">.</operator><name pos:start="19:44" pos:end="19:46">blk</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:49" pos:end="19:50">==</operator> <name pos:start="19:52" pos:end="19:57"><name pos:start="19:52" pos:end="19:52">s</name><operator pos:start="19:53" pos:end="19:54">-&gt;</operator><name pos:start="19:55" pos:end="19:57">ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="23:5" pos:end="23:59">/* Here VIRTIO_SCSI_S_OK means "FUNCTION COMPLETE".  */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:7">req</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:13">resp</name><operator pos:start="25:14" pos:end="25:14">.</operator><name pos:start="25:15" pos:end="25:17">tmf</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:26">response</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <name pos:start="25:30" pos:end="25:45">VIRTIO_SCSI_S_OK</name></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:61"><expr pos:start="29:5" pos:end="29:60"><call pos:start="29:5" pos:end="29:60"><name pos:start="29:5" pos:end="29:19">virtio_tswap32s</name><argument_list pos:start="29:20" pos:end="29:60">(<argument pos:start="29:21" pos:end="29:36"><expr pos:start="29:21" pos:end="29:36"><call pos:start="29:21" pos:end="29:36"><name pos:start="29:21" pos:end="29:33">VIRTIO_DEVICE</name><argument_list pos:start="29:34" pos:end="29:36">(<argument pos:start="29:35" pos:end="29:35"><expr pos:start="29:35" pos:end="29:35"><name pos:start="29:35" pos:end="29:35">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:39" pos:end="29:59"><expr pos:start="29:39" pos:end="29:59"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:42">req</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:47">req</name><operator pos:start="29:48" pos:end="29:48">.</operator><name pos:start="29:49" pos:end="29:51">tmf</name><operator pos:start="29:52" pos:end="29:52">.</operator><name pos:start="29:53" pos:end="29:59">subtype</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="31:5" pos:end="245:5">switch <condition pos:start="31:12" pos:end="31:33">(<expr pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:15">req</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">req</name><operator pos:start="31:21" pos:end="31:21">.</operator><name pos:start="31:22" pos:end="31:24">tmf</name><operator pos:start="31:25" pos:end="31:25">.</operator><name pos:start="31:26" pos:end="31:32">subtype</name></name></expr>)</condition> <block pos:start="31:35" pos:end="245:5">{<block_content pos:start="33:5" pos:end="243:14">

    <case pos:start="33:5" pos:end="33:38">case <expr pos:start="33:10" pos:end="33:37"><name pos:start="33:10" pos:end="33:37">VIRTIO_SCSI_T_TMF_ABORT_TASK</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:38">case <expr pos:start="35:10" pos:end="35:37"><name pos:start="35:10" pos:end="35:37">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>:</case>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:15">(<expr pos:start="37:13" pos:end="37:14"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:14">d</name></expr>)</condition> <block pos:start="37:17" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:22">

            <goto pos:start="39:13" pos:end="39:22">goto <name pos:start="39:18" pos:end="39:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:60">(<expr pos:start="43:13" pos:end="43:59"><name pos:start="43:13" pos:end="43:18"><name pos:start="43:13" pos:end="43:13">d</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">lun</name></name> <operator pos:start="43:20" pos:end="43:21">!=</operator> <call pos:start="43:23" pos:end="43:59"><name pos:start="43:23" pos:end="43:41">virtio_scsi_get_lun</name><argument_list pos:start="43:42" pos:end="43:59">(<argument pos:start="43:43" pos:end="43:58"><expr pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:58"><name pos:start="43:43" pos:end="43:45">req</name><operator pos:start="43:46" pos:end="43:47">-&gt;</operator><name pos:start="43:48" pos:end="43:50">req</name><operator pos:start="43:51" pos:end="43:51">.</operator><name pos:start="43:52" pos:end="43:54">tmf</name><operator pos:start="43:55" pos:end="43:55">.</operator><name pos:start="43:56" pos:end="43:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:62" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:31">

            <goto pos:start="45:13" pos:end="45:31">goto <name pos:start="45:18" pos:end="45:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="49:9" pos:end="49:56"><name pos:start="49:9" pos:end="49:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="49:28" pos:end="49:56">(<argument pos:start="49:29" pos:end="49:29">r</argument>, <argument pos:start="49:32" pos:end="49:43">&amp;d-&gt;requests</argument>, <argument pos:start="49:46" pos:end="49:49">next</argument>, <argument pos:start="49:52" pos:end="49:55">next</argument>)</argument_list></macro> <block pos:start="49:58" pos:end="59:9">{<block_content pos:start="51:13" pos:end="57:13">

            <decl_stmt pos:start="51:13" pos:end="51:52"><decl pos:start="51:13" pos:end="51:51"><type pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:25">VirtIOSCSIReq</name> <modifier pos:start="51:27" pos:end="51:27">*</modifier></type><name pos:start="51:28" pos:end="51:34">cmd_req</name> <init pos:start="51:36" pos:end="51:51">= <expr pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:51"><name pos:start="51:38" pos:end="51:38">r</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:51">hba_private</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="53:13" pos:end="57:13"><if pos:start="53:13" pos:end="57:13">if <condition pos:start="53:16" pos:end="53:68">(<expr pos:start="53:17" pos:end="53:67"><name pos:start="53:17" pos:end="53:23">cmd_req</name> <operator pos:start="53:25" pos:end="53:26">&amp;&amp;</operator> <name pos:start="53:28" pos:end="53:47"><name pos:start="53:28" pos:end="53:34">cmd_req</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:39">req</name><operator pos:start="53:40" pos:end="53:40">.</operator><name pos:start="53:41" pos:end="53:43">cmd</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:47">tag</name></name> <operator pos:start="53:49" pos:end="53:50">==</operator> <name pos:start="53:52" pos:end="53:67"><name pos:start="53:52" pos:end="53:54">req</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:59">req</name><operator pos:start="53:60" pos:end="53:60">.</operator><name pos:start="53:61" pos:end="53:63">tmf</name><operator pos:start="53:64" pos:end="53:64">.</operator><name pos:start="53:65" pos:end="53:67">tag</name></name></expr>)</condition> <block pos:start="53:70" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:22">

                <break pos:start="55:17" pos:end="55:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="61:9" pos:end="103:9"><if pos:start="61:9" pos:end="103:9">if <condition pos:start="61:12" pos:end="61:14">(<expr pos:start="61:13" pos:end="61:13"><name pos:start="61:13" pos:end="61:13">r</name></expr>)</condition> <block pos:start="61:16" pos:end="103:9">{<block_content pos:start="71:13" pos:end="101:13">

            <comment type="block" pos:start="63:13" pos:end="69:15">/*

             * Assert that the request has not been completed yet, we

             * check for it in the loop above.

             */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><call pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:18">assert</name><argument_list pos:start="71:19" pos:end="71:34">(<argument pos:start="71:20" pos:end="71:33"><expr pos:start="71:20" pos:end="71:33"><name pos:start="71:20" pos:end="71:33"><name pos:start="71:20" pos:end="71:20">r</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:33">hba_private</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="73:13" pos:end="101:13"><if pos:start="73:13" pos:end="83:13">if <condition pos:start="73:16" pos:end="73:69">(<expr pos:start="73:17" pos:end="73:68"><name pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:19">req</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:24">req</name><operator pos:start="73:25" pos:end="73:25">.</operator><name pos:start="73:26" pos:end="73:28">tmf</name><operator pos:start="73:29" pos:end="73:29">.</operator><name pos:start="73:30" pos:end="73:36">subtype</name></name> <operator pos:start="73:38" pos:end="73:39">==</operator> <name pos:start="73:41" pos:end="73:68">VIRTIO_SCSI_T_TMF_QUERY_TASK</name></expr>)</condition> <block pos:start="73:71" pos:end="83:13">{<block_content pos:start="81:17" pos:end="81:74">

                <comment type="block" pos:start="75:17" pos:end="79:19">/* "If the specified command is present in the task set, then

                 * return a service response set to FUNCTION SUCCEEDED".

                 */</comment>

                <expr_stmt pos:start="81:17" pos:end="81:74"><expr pos:start="81:17" pos:end="81:73"><name pos:start="81:17" pos:end="81:38"><name pos:start="81:17" pos:end="81:19">req</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:25">resp</name><operator pos:start="81:26" pos:end="81:26">.</operator><name pos:start="81:27" pos:end="81:29">tmf</name><operator pos:start="81:30" pos:end="81:30">.</operator><name pos:start="81:31" pos:end="81:38">response</name></name> <operator pos:start="81:40" pos:end="81:40">=</operator> <name pos:start="81:42" pos:end="81:73">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="83:15" pos:end="101:13">else <block pos:start="83:20" pos:end="101:13">{<block_content pos:start="85:17" pos:end="99:35">

                <decl_stmt pos:start="85:17" pos:end="85:51"><decl pos:start="85:17" pos:end="85:50"><type pos:start="85:17" pos:end="85:42"><name pos:start="85:17" pos:end="85:40">VirtIOSCSICancelNotifier</name> <modifier pos:start="85:42" pos:end="85:42">*</modifier></type><name pos:start="85:43" pos:end="85:50">notifier</name></decl>;</decl_stmt>



                <expr_stmt pos:start="89:17" pos:end="89:35"><expr pos:start="89:17" pos:end="89:34"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:19">req</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:30">remaining</name></name> <operator pos:start="89:32" pos:end="89:32">=</operator> <literal type="number" pos:start="89:34" pos:end="89:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:62"><expr pos:start="91:17" pos:end="91:61"><name pos:start="91:17" pos:end="91:24">notifier</name> <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="91:61"><name pos:start="91:28" pos:end="91:32">g_new</name><argument_list pos:start="91:33" pos:end="91:61">(<argument pos:start="91:34" pos:end="91:57"><expr pos:start="91:34" pos:end="91:57"><name pos:start="91:34" pos:end="91:57">VirtIOSCSICancelNotifier</name></expr></argument>, <argument pos:start="91:60" pos:end="91:60"><expr pos:start="91:60" pos:end="91:60"><literal type="number" pos:start="91:60" pos:end="91:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="93:17" pos:end="93:40"><expr pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:24">notifier</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:33">tmf_req</name></name> <operator pos:start="93:35" pos:end="93:35">=</operator> <name pos:start="93:37" pos:end="93:39">req</name></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:70"><expr pos:start="95:17" pos:end="95:69"><name pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:24">notifier</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:34">notifier</name><operator pos:start="95:35" pos:end="95:35">.</operator><name pos:start="95:36" pos:end="95:41">notify</name></name> <operator pos:start="95:43" pos:end="95:43">=</operator> <name pos:start="95:45" pos:end="95:69">virtio_scsi_cancel_notify</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:62"><expr pos:start="97:17" pos:end="97:61"><call pos:start="97:17" pos:end="97:61"><name pos:start="97:17" pos:end="97:37">scsi_req_cancel_async</name><argument_list pos:start="97:38" pos:end="97:61">(<argument pos:start="97:39" pos:end="97:39"><expr pos:start="97:39" pos:end="97:39"><name pos:start="97:39" pos:end="97:39">r</name></expr></argument>, <argument pos:start="97:42" pos:end="97:60"><expr pos:start="97:42" pos:end="97:60"><operator pos:start="97:42" pos:end="97:42">&amp;</operator><name pos:start="97:43" pos:end="97:60"><name pos:start="97:43" pos:end="97:50">notifier</name><operator pos:start="97:51" pos:end="97:52">-&gt;</operator><name pos:start="97:53" pos:end="97:60">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:35"><expr pos:start="99:17" pos:end="99:34"><name pos:start="99:17" pos:end="99:19">ret</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <operator pos:start="99:23" pos:end="99:23">-</operator><name pos:start="99:24" pos:end="99:34">EINPROGRESS</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>



    <case pos:start="109:5" pos:end="109:46">case <expr pos:start="109:10" pos:end="109:45"><name pos:start="109:10" pos:end="109:45">VIRTIO_SCSI_T_TMF_LOGICAL_UNIT_RESET</name></expr>:</case>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:15">(<expr pos:start="111:13" pos:end="111:14"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:14">d</name></expr>)</condition> <block pos:start="111:17" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:22">

            <goto pos:start="113:13" pos:end="113:22">goto <name pos:start="113:18" pos:end="113:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="121:9"><if pos:start="117:9" pos:end="121:9">if <condition pos:start="117:12" pos:end="117:60">(<expr pos:start="117:13" pos:end="117:59"><name pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:13">d</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:18">lun</name></name> <operator pos:start="117:20" pos:end="117:21">!=</operator> <call pos:start="117:23" pos:end="117:59"><name pos:start="117:23" pos:end="117:41">virtio_scsi_get_lun</name><argument_list pos:start="117:42" pos:end="117:59">(<argument pos:start="117:43" pos:end="117:58"><expr pos:start="117:43" pos:end="117:58"><name pos:start="117:43" pos:end="117:58"><name pos:start="117:43" pos:end="117:45">req</name><operator pos:start="117:46" pos:end="117:47">-&gt;</operator><name pos:start="117:48" pos:end="117:50">req</name><operator pos:start="117:51" pos:end="117:51">.</operator><name pos:start="117:52" pos:end="117:54">tmf</name><operator pos:start="117:55" pos:end="117:55">.</operator><name pos:start="117:56" pos:end="117:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="117:62" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:31">

            <goto pos:start="119:13" pos:end="119:31">goto <name pos:start="119:18" pos:end="119:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:20"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:20">resetting</name></name><operator pos:start="123:21" pos:end="123:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:33"><expr pos:start="125:9" pos:end="125:32"><call pos:start="125:9" pos:end="125:32"><name pos:start="125:9" pos:end="125:22">qdev_reset_all</name><argument_list pos:start="125:23" pos:end="125:32">(<argument pos:start="125:24" pos:end="125:31"><expr pos:start="125:24" pos:end="125:31"><operator pos:start="125:24" pos:end="125:24">&amp;</operator><name pos:start="125:25" pos:end="125:31"><name pos:start="125:25" pos:end="125:25">d</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:31">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:23"><expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:20"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:20">resetting</name></name><operator pos:start="127:21" pos:end="127:22">--</operator></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>



    <case pos:start="133:5" pos:end="133:42">case <expr pos:start="133:10" pos:end="133:41"><name pos:start="133:10" pos:end="133:41">VIRTIO_SCSI_T_TMF_ABORT_TASK_SET</name></expr>:</case>

    <case pos:start="135:5" pos:end="135:42">case <expr pos:start="135:10" pos:end="135:41"><name pos:start="135:10" pos:end="135:41">VIRTIO_SCSI_T_TMF_CLEAR_TASK_SET</name></expr>:</case>

    <case pos:start="137:5" pos:end="137:42">case <expr pos:start="137:10" pos:end="137:41"><name pos:start="137:10" pos:end="137:41">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>:</case>

        <if_stmt pos:start="139:9" pos:end="143:9"><if pos:start="139:9" pos:end="143:9">if <condition pos:start="139:12" pos:end="139:15">(<expr pos:start="139:13" pos:end="139:14"><operator pos:start="139:13" pos:end="139:13">!</operator><name pos:start="139:14" pos:end="139:14">d</name></expr>)</condition> <block pos:start="139:17" pos:end="143:9">{<block_content pos:start="141:13" pos:end="141:22">

            <goto pos:start="141:13" pos:end="141:22">goto <name pos:start="141:18" pos:end="141:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="149:9"><if pos:start="145:9" pos:end="149:9">if <condition pos:start="145:12" pos:end="145:60">(<expr pos:start="145:13" pos:end="145:59"><name pos:start="145:13" pos:end="145:18"><name pos:start="145:13" pos:end="145:13">d</name><operator pos:start="145:14" pos:end="145:15">-&gt;</operator><name pos:start="145:16" pos:end="145:18">lun</name></name> <operator pos:start="145:20" pos:end="145:21">!=</operator> <call pos:start="145:23" pos:end="145:59"><name pos:start="145:23" pos:end="145:41">virtio_scsi_get_lun</name><argument_list pos:start="145:42" pos:end="145:59">(<argument pos:start="145:43" pos:end="145:58"><expr pos:start="145:43" pos:end="145:58"><name pos:start="145:43" pos:end="145:58"><name pos:start="145:43" pos:end="145:45">req</name><operator pos:start="145:46" pos:end="145:47">-&gt;</operator><name pos:start="145:48" pos:end="145:50">req</name><operator pos:start="145:51" pos:end="145:51">.</operator><name pos:start="145:52" pos:end="145:54">tmf</name><operator pos:start="145:55" pos:end="145:55">.</operator><name pos:start="145:56" pos:end="145:58">lun</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="145:62" pos:end="149:9">{<block_content pos:start="147:13" pos:end="147:31">

            <goto pos:start="147:13" pos:end="147:31">goto <name pos:start="147:18" pos:end="147:30">incorrect_lun</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="153:9" pos:end="161:11">/* Add 1 to "remaining" until virtio_scsi_do_tmf returns.

         * This way, if the bus starts calling back to the notifiers

         * even before we finish the loop, virtio_scsi_cancel_notify

         * will not complete the TMF too early.

         */</comment>

        <expr_stmt pos:start="163:9" pos:end="163:27"><expr pos:start="163:9" pos:end="163:26"><name pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:11">req</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:22">remaining</name></name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="number" pos:start="163:26" pos:end="163:26">1</literal></expr>;</expr_stmt>

        <macro pos:start="165:9" pos:end="165:56"><name pos:start="165:9" pos:end="165:27">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="165:28" pos:end="165:56">(<argument pos:start="165:29" pos:end="165:29">r</argument>, <argument pos:start="165:32" pos:end="165:43">&amp;d-&gt;requests</argument>, <argument pos:start="165:46" pos:end="165:49">next</argument>, <argument pos:start="165:52" pos:end="165:55">next</argument>)</argument_list></macro> <block pos:start="165:58" pos:end="201:9">{<block_content pos:start="167:13" pos:end="199:13">

            <if_stmt pos:start="167:13" pos:end="199:13"><if pos:start="167:13" pos:end="199:13">if <condition pos:start="167:16" pos:end="167:31">(<expr pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:30"><name pos:start="167:17" pos:end="167:17">r</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:30">hba_private</name></name></expr>)</condition> <block pos:start="167:33" pos:end="199:13">{<block_content pos:start="169:17" pos:end="197:17">

                <if_stmt pos:start="169:17" pos:end="197:17"><if pos:start="169:17" pos:end="181:17">if <condition pos:start="169:20" pos:end="169:77">(<expr pos:start="169:21" pos:end="169:76"><name pos:start="169:21" pos:end="169:40"><name pos:start="169:21" pos:end="169:23">req</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:28">req</name><operator pos:start="169:29" pos:end="169:29">.</operator><name pos:start="169:30" pos:end="169:32">tmf</name><operator pos:start="169:33" pos:end="169:33">.</operator><name pos:start="169:34" pos:end="169:40">subtype</name></name> <operator pos:start="169:42" pos:end="169:43">==</operator> <name pos:start="169:45" pos:end="169:76">VIRTIO_SCSI_T_TMF_QUERY_TASK_SET</name></expr>)</condition> <block pos:start="169:79" pos:end="181:17">{<block_content pos:start="177:21" pos:end="179:26">

                    <comment type="block" pos:start="171:21" pos:end="175:23">/* "If there is any command present in the task set, then

                     * return a service response set to FUNCTION SUCCEEDED".

                     */</comment>

                    <expr_stmt pos:start="177:21" pos:end="177:78"><expr pos:start="177:21" pos:end="177:77"><name pos:start="177:21" pos:end="177:42"><name pos:start="177:21" pos:end="177:23">req</name><operator pos:start="177:24" pos:end="177:25">-&gt;</operator><name pos:start="177:26" pos:end="177:29">resp</name><operator pos:start="177:30" pos:end="177:30">.</operator><name pos:start="177:31" pos:end="177:33">tmf</name><operator pos:start="177:34" pos:end="177:34">.</operator><name pos:start="177:35" pos:end="177:42">response</name></name> <operator pos:start="177:44" pos:end="177:44">=</operator> <name pos:start="177:46" pos:end="177:77">VIRTIO_SCSI_S_FUNCTION_SUCCEEDED</name></expr>;</expr_stmt>

                    <break pos:start="179:21" pos:end="179:26">break;</break>

                </block_content>}</block></if> <else pos:start="181:19" pos:end="197:17">else <block pos:start="181:24" pos:end="197:17">{<block_content pos:start="183:21" pos:end="195:66">

                    <decl_stmt pos:start="183:21" pos:end="183:55"><decl pos:start="183:21" pos:end="183:54"><type pos:start="183:21" pos:end="183:46"><name pos:start="183:21" pos:end="183:44">VirtIOSCSICancelNotifier</name> <modifier pos:start="183:46" pos:end="183:46">*</modifier></type><name pos:start="183:47" pos:end="183:54">notifier</name></decl>;</decl_stmt>



                    <expr_stmt pos:start="187:21" pos:end="187:37"><expr pos:start="187:21" pos:end="187:36"><name pos:start="187:21" pos:end="187:34"><name pos:start="187:21" pos:end="187:23">req</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:34">remaining</name></name><operator pos:start="187:35" pos:end="187:36">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:66"><expr pos:start="189:21" pos:end="189:65"><name pos:start="189:21" pos:end="189:28">notifier</name> <operator pos:start="189:30" pos:end="189:30">=</operator> <call pos:start="189:32" pos:end="189:65"><name pos:start="189:32" pos:end="189:36">g_new</name><argument_list pos:start="189:37" pos:end="189:65">(<argument pos:start="189:38" pos:end="189:61"><expr pos:start="189:38" pos:end="189:61"><name pos:start="189:38" pos:end="189:61">VirtIOSCSICancelNotifier</name></expr></argument>, <argument pos:start="189:64" pos:end="189:64"><expr pos:start="189:64" pos:end="189:64"><literal type="number" pos:start="189:64" pos:end="189:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:74"><expr pos:start="191:21" pos:end="191:73"><name pos:start="191:21" pos:end="191:45"><name pos:start="191:21" pos:end="191:28">notifier</name><operator pos:start="191:29" pos:end="191:30">-&gt;</operator><name pos:start="191:31" pos:end="191:38">notifier</name><operator pos:start="191:39" pos:end="191:39">.</operator><name pos:start="191:40" pos:end="191:45">notify</name></name> <operator pos:start="191:47" pos:end="191:47">=</operator> <name pos:start="191:49" pos:end="191:73">virtio_scsi_cancel_notify</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:44"><expr pos:start="193:21" pos:end="193:43"><name pos:start="193:21" pos:end="193:37"><name pos:start="193:21" pos:end="193:28">notifier</name><operator pos:start="193:29" pos:end="193:30">-&gt;</operator><name pos:start="193:31" pos:end="193:37">tmf_req</name></name> <operator pos:start="193:39" pos:end="193:39">=</operator> <name pos:start="193:41" pos:end="193:43">req</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="195:21" pos:end="195:66"><expr pos:start="195:21" pos:end="195:65"><call pos:start="195:21" pos:end="195:65"><name pos:start="195:21" pos:end="195:41">scsi_req_cancel_async</name><argument_list pos:start="195:42" pos:end="195:65">(<argument pos:start="195:43" pos:end="195:43"><expr pos:start="195:43" pos:end="195:43"><name pos:start="195:43" pos:end="195:43">r</name></expr></argument>, <argument pos:start="195:46" pos:end="195:64"><expr pos:start="195:46" pos:end="195:64"><operator pos:start="195:46" pos:end="195:46">&amp;</operator><name pos:start="195:47" pos:end="195:64"><name pos:start="195:47" pos:end="195:54">notifier</name><operator pos:start="195:55" pos:end="195:56">-&gt;</operator><name pos:start="195:57" pos:end="195:64">notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="203:9" pos:end="207:9"><if pos:start="203:9" pos:end="207:9">if <condition pos:start="203:12" pos:end="203:33">(<expr pos:start="203:13" pos:end="203:32"><operator pos:start="203:13" pos:end="203:14">--</operator><name pos:start="203:15" pos:end="203:28"><name pos:start="203:15" pos:end="203:17">req</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:28">remaining</name></name> <operator pos:start="203:30" pos:end="203:30">&gt;</operator> <literal type="number" pos:start="203:32" pos:end="203:32">0</literal></expr>)</condition> <block pos:start="203:35" pos:end="207:9">{<block_content pos:start="205:13" pos:end="205:31">

            <expr_stmt pos:start="205:13" pos:end="205:31"><expr pos:start="205:13" pos:end="205:30"><name pos:start="205:13" pos:end="205:15">ret</name> <operator pos:start="205:17" pos:end="205:17">=</operator> <operator pos:start="205:19" pos:end="205:19">-</operator><name pos:start="205:20" pos:end="205:30">EINPROGRESS</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="209:9" pos:end="209:14">break;</break>



    <case pos:start="213:5" pos:end="213:43">case <expr pos:start="213:10" pos:end="213:42"><name pos:start="213:10" pos:end="213:42">VIRTIO_SCSI_T_TMF_I_T_NEXUS_RESET</name></expr>:</case>

        <expr_stmt pos:start="215:9" pos:end="215:37"><expr pos:start="215:9" pos:end="215:36"><name pos:start="215:9" pos:end="215:14">target</name> <operator pos:start="215:16" pos:end="215:16">=</operator> <name pos:start="215:18" pos:end="215:36"><name pos:start="215:18" pos:end="215:20">req</name><operator pos:start="215:21" pos:end="215:22">-&gt;</operator><name pos:start="215:23" pos:end="215:25">req</name><operator pos:start="215:26" pos:end="215:26">.</operator><name pos:start="215:27" pos:end="215:29">tmf</name><operator pos:start="215:30" pos:end="215:30">.</operator><name pos:start="215:31" pos:end="215:33">lun</name><index pos:start="215:34" pos:end="215:36">[<expr pos:start="215:35" pos:end="215:35"><literal type="number" pos:start="215:35" pos:end="215:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:23"><expr pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:20"><name pos:start="217:9" pos:end="217:9">s</name><operator pos:start="217:10" pos:end="217:11">-&gt;</operator><name pos:start="217:12" pos:end="217:20">resetting</name></name><operator pos:start="217:21" pos:end="217:22">++</operator></expr>;</expr_stmt>

        <macro pos:start="219:9" pos:end="219:59"><name pos:start="219:9" pos:end="219:22">QTAILQ_FOREACH</name><argument_list pos:start="219:23" pos:end="219:59">(<argument pos:start="219:24" pos:end="219:26">kid</argument>, <argument pos:start="219:29" pos:end="219:49">&amp;s-&gt;bus.qbus.children</argument>, <argument pos:start="219:52" pos:end="219:58">sibling</argument>)</argument_list></macro> <block pos:start="219:61" pos:end="229:9">{<block_content pos:start="221:14" pos:end="227:14">

             <expr_stmt pos:start="221:14" pos:end="221:57"><expr pos:start="221:14" pos:end="221:56"><name pos:start="221:14" pos:end="221:14">d</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <call pos:start="221:18" pos:end="221:56"><name pos:start="221:18" pos:end="221:26">DO_UPCAST</name><argument_list pos:start="221:27" pos:end="221:56">(<argument pos:start="221:28" pos:end="221:37"><expr pos:start="221:28" pos:end="221:37"><name pos:start="221:28" pos:end="221:37">SCSIDevice</name></expr></argument>, <argument pos:start="221:40" pos:end="221:43"><expr pos:start="221:40" pos:end="221:43"><name pos:start="221:40" pos:end="221:43">qdev</name></expr></argument>, <argument pos:start="221:46" pos:end="221:55"><expr pos:start="221:46" pos:end="221:55"><name pos:start="221:46" pos:end="221:55"><name pos:start="221:46" pos:end="221:48">kid</name><operator pos:start="221:49" pos:end="221:50">-&gt;</operator><name pos:start="221:51" pos:end="221:55">child</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             <if_stmt pos:start="223:14" pos:end="227:14"><if pos:start="223:14" pos:end="227:14">if <condition pos:start="223:17" pos:end="223:52">(<expr pos:start="223:18" pos:end="223:51"><name pos:start="223:18" pos:end="223:27"><name pos:start="223:18" pos:end="223:18">d</name><operator pos:start="223:19" pos:end="223:20">-&gt;</operator><name pos:start="223:21" pos:end="223:27">channel</name></name> <operator pos:start="223:29" pos:end="223:30">==</operator> <literal type="number" pos:start="223:32" pos:end="223:32">0</literal> <operator pos:start="223:34" pos:end="223:35">&amp;&amp;</operator> <name pos:start="223:37" pos:end="223:41"><name pos:start="223:37" pos:end="223:37">d</name><operator pos:start="223:38" pos:end="223:39">-&gt;</operator><name pos:start="223:40" pos:end="223:41">id</name></name> <operator pos:start="223:43" pos:end="223:44">==</operator> <name pos:start="223:46" pos:end="223:51">target</name></expr>)</condition> <block pos:start="223:54" pos:end="227:14">{<block_content pos:start="225:17" pos:end="225:41">

                <expr_stmt pos:start="225:17" pos:end="225:41"><expr pos:start="225:17" pos:end="225:40"><call pos:start="225:17" pos:end="225:40"><name pos:start="225:17" pos:end="225:30">qdev_reset_all</name><argument_list pos:start="225:31" pos:end="225:40">(<argument pos:start="225:32" pos:end="225:39"><expr pos:start="225:32" pos:end="225:39"><operator pos:start="225:32" pos:end="225:32">&amp;</operator><name pos:start="225:33" pos:end="225:39"><name pos:start="225:33" pos:end="225:33">d</name><operator pos:start="225:34" pos:end="225:35">-&gt;</operator><name pos:start="225:36" pos:end="225:39">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

             </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="231:9" pos:end="231:23"><expr pos:start="231:9" pos:end="231:22"><name pos:start="231:9" pos:end="231:20"><name pos:start="231:9" pos:end="231:9">s</name><operator pos:start="231:10" pos:end="231:11">-&gt;</operator><name pos:start="231:12" pos:end="231:20">resetting</name></name><operator pos:start="231:21" pos:end="231:22">--</operator></expr>;</expr_stmt>

        <break pos:start="233:9" pos:end="233:14">break;</break>



    <case pos:start="237:5" pos:end="237:37">case <expr pos:start="237:10" pos:end="237:36"><name pos:start="237:10" pos:end="237:36">VIRTIO_SCSI_T_TMF_CLEAR_ACA</name></expr>:</case>

    <default pos:start="239:5" pos:end="239:12">default:</default>

        <expr_stmt pos:start="241:9" pos:end="241:65"><expr pos:start="241:9" pos:end="241:64"><name pos:start="241:9" pos:end="241:30"><name pos:start="241:9" pos:end="241:11">req</name><operator pos:start="241:12" pos:end="241:13">-&gt;</operator><name pos:start="241:14" pos:end="241:17">resp</name><operator pos:start="241:18" pos:end="241:18">.</operator><name pos:start="241:19" pos:end="241:21">tmf</name><operator pos:start="241:22" pos:end="241:22">.</operator><name pos:start="241:23" pos:end="241:30">response</name></name> <operator pos:start="241:32" pos:end="241:32">=</operator> <name pos:start="241:34" pos:end="241:64">VIRTIO_SCSI_S_FUNCTION_REJECTED</name></expr>;</expr_stmt>

        <break pos:start="243:9" pos:end="243:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="249:5" pos:end="249:15">return <expr pos:start="249:12" pos:end="249:14"><name pos:start="249:12" pos:end="249:14">ret</name></expr>;</return>



<label pos:start="253:1" pos:end="253:14"><name pos:start="253:1" pos:end="253:13">incorrect_lun</name>:</label>

    <expr_stmt pos:start="255:5" pos:end="255:57"><expr pos:start="255:5" pos:end="255:56"><name pos:start="255:5" pos:end="255:26"><name pos:start="255:5" pos:end="255:7">req</name><operator pos:start="255:8" pos:end="255:9">-&gt;</operator><name pos:start="255:10" pos:end="255:13">resp</name><operator pos:start="255:14" pos:end="255:14">.</operator><name pos:start="255:15" pos:end="255:17">tmf</name><operator pos:start="255:18" pos:end="255:18">.</operator><name pos:start="255:19" pos:end="255:26">response</name></name> <operator pos:start="255:28" pos:end="255:28">=</operator> <name pos:start="255:30" pos:end="255:56">VIRTIO_SCSI_S_INCORRECT_LUN</name></expr>;</expr_stmt>

    <return pos:start="257:5" pos:end="257:15">return <expr pos:start="257:12" pos:end="257:14"><name pos:start="257:12" pos:end="257:14">ret</name></expr>;</return>



<label pos:start="261:1" pos:end="261:5"><name pos:start="261:1" pos:end="261:4">fail</name>:</label>

    <expr_stmt pos:start="263:5" pos:end="263:54"><expr pos:start="263:5" pos:end="263:53"><name pos:start="263:5" pos:end="263:26"><name pos:start="263:5" pos:end="263:7">req</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:13">resp</name><operator pos:start="263:14" pos:end="263:14">.</operator><name pos:start="263:15" pos:end="263:17">tmf</name><operator pos:start="263:18" pos:end="263:18">.</operator><name pos:start="263:19" pos:end="263:26">response</name></name> <operator pos:start="263:28" pos:end="263:28">=</operator> <name pos:start="263:30" pos:end="263:53">VIRTIO_SCSI_S_BAD_TARGET</name></expr>;</expr_stmt>

    <return pos:start="265:5" pos:end="265:15">return <expr pos:start="265:12" pos:end="265:14"><name pos:start="265:12" pos:end="265:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
