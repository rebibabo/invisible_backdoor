<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7919.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">flush_blks</name><parameter_list pos:start="1:22" pos:end="1:34">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">QEMUFile</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlkMigBlock</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">blk</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="15:41"><expr pos:start="11:5" pos:end="15:40"><call pos:start="11:5" pos:end="15:40"><name pos:start="11:5" pos:end="11:11">DPRINTF</name><argument_list pos:start="11:12" pos:end="15:40">(<argument pos:start="11:13" pos:end="11:65"><expr pos:start="11:13" pos:end="11:65"><literal type="string" pos:start="11:13" pos:end="11:65">"%s Enter submitted %d read_done %d transferred %d\n"</literal></expr></argument>,

            <argument pos:start="13:13" pos:end="13:24"><expr pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:24">__FUNCTION__</name></expr></argument>, <argument pos:start="13:27" pos:end="13:51"><expr pos:start="13:27" pos:end="13:51"><name pos:start="13:27" pos:end="13:51"><name pos:start="13:27" pos:end="13:41">block_mig_state</name><operator pos:start="13:42" pos:end="13:42">.</operator><name pos:start="13:43" pos:end="13:51">submitted</name></name></expr></argument>, <argument pos:start="13:54" pos:end="13:78"><expr pos:start="13:54" pos:end="13:78"><name pos:start="13:54" pos:end="13:78"><name pos:start="13:54" pos:end="13:68">block_mig_state</name><operator pos:start="13:69" pos:end="13:69">.</operator><name pos:start="13:70" pos:end="13:78">read_done</name></name></expr></argument>,

            <argument pos:start="15:13" pos:end="15:39"><expr pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:39"><name pos:start="15:13" pos:end="15:27">block_mig_state</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:39">transferred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:19"><expr pos:start="19:5" pos:end="19:18"><call pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:16">blk_mig_lock</name><argument_list pos:start="19:17" pos:end="19:18">()</argument_list></call></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="61:5">while <condition pos:start="21:11" pos:end="21:69">(<expr pos:start="21:12" pos:end="21:68"><operator pos:start="21:12" pos:end="21:12">(</operator><name pos:start="21:13" pos:end="21:15">blk</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:59"><name pos:start="21:19" pos:end="21:32">QSIMPLEQ_FIRST</name><argument_list pos:start="21:33" pos:end="21:59">(<argument pos:start="21:34" pos:end="21:58"><expr pos:start="21:34" pos:end="21:58"><operator pos:start="21:34" pos:end="21:34">&amp;</operator><name pos:start="21:35" pos:end="21:58"><name pos:start="21:35" pos:end="21:49">block_mig_state</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:58">blk_list</name></name></expr></argument>)</argument_list></call><operator pos:start="21:60" pos:end="21:60">)</operator> <operator pos:start="21:62" pos:end="21:63">!=</operator> <name pos:start="21:65" pos:end="21:68">NULL</name></expr>)</condition> <block pos:start="21:71" pos:end="61:5">{<block_content pos:start="23:9" pos:end="59:47">

        <if_stmt pos:start="23:9" pos:end="27:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:36">(<expr pos:start="23:13" pos:end="23:35"><call pos:start="23:13" pos:end="23:35"><name pos:start="23:13" pos:end="23:32">qemu_file_rate_limit</name><argument_list pos:start="23:33" pos:end="23:35">(<argument pos:start="23:34" pos:end="23:34"><expr pos:start="23:34" pos:end="23:34"><name pos:start="23:34" pos:end="23:34">f</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:38" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:18">

            <break pos:start="25:13" pos:end="25:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:25">(<expr pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">blk</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:20">ret</name></name> <operator pos:start="29:22" pos:end="29:22">&lt;</operator> <literal type="number" pos:start="29:24" pos:end="29:24">0</literal></expr>)</condition> <block pos:start="29:27" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:18">

            <expr_stmt pos:start="31:13" pos:end="31:27"><expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:26"><name pos:start="31:19" pos:end="31:21">blk</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:26">ret</name></name></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:63"><expr pos:start="39:9" pos:end="39:62"><call pos:start="39:9" pos:end="39:62"><name pos:start="39:9" pos:end="39:28">QSIMPLEQ_REMOVE_HEAD</name><argument_list pos:start="39:29" pos:end="39:62">(<argument pos:start="39:30" pos:end="39:54"><expr pos:start="39:30" pos:end="39:54"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:54"><name pos:start="39:31" pos:end="39:45">block_mig_state</name><operator pos:start="39:46" pos:end="39:46">.</operator><name pos:start="39:47" pos:end="39:54">blk_list</name></name></expr></argument>, <argument pos:start="39:57" pos:end="39:61"><expr pos:start="39:57" pos:end="39:61"><name pos:start="39:57" pos:end="39:61">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:25"><expr pos:start="41:9" pos:end="41:24"><call pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:22">blk_mig_unlock</name><argument_list pos:start="41:23" pos:end="41:24">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:25"><expr pos:start="43:9" pos:end="43:24"><call pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:16">blk_send</name><argument_list pos:start="43:17" pos:end="43:24">(<argument pos:start="43:18" pos:end="43:18"><expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">f</name></expr></argument>, <argument pos:start="43:21" pos:end="43:23"><expr pos:start="43:21" pos:end="43:23"><name pos:start="43:21" pos:end="43:23">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><call pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:20">blk_mig_lock</name><argument_list pos:start="45:21" pos:end="45:22">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:14">g_free</name><argument_list pos:start="49:15" pos:end="49:24">(<argument pos:start="49:16" pos:end="49:23"><expr pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:23"><name pos:start="49:16" pos:end="49:18">blk</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:20"><expr pos:start="51:9" pos:end="51:19"><call pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:14">g_free</name><argument_list pos:start="51:15" pos:end="51:19">(<argument pos:start="51:16" pos:end="51:18"><expr pos:start="51:16" pos:end="51:18"><name pos:start="51:16" pos:end="51:18">blk</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:23">block_mig_state</name><operator pos:start="55:24" pos:end="55:24">.</operator><name pos:start="55:25" pos:end="55:33">read_done</name></name><operator pos:start="55:34" pos:end="55:35">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:38"><expr pos:start="57:9" pos:end="57:37"><name pos:start="57:9" pos:end="57:35"><name pos:start="57:9" pos:end="57:23">block_mig_state</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:35">transferred</name></name><operator pos:start="57:36" pos:end="57:37">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:47"><expr pos:start="59:9" pos:end="59:46"><call pos:start="59:9" pos:end="59:46"><name pos:start="59:9" pos:end="59:14">assert</name><argument_list pos:start="59:15" pos:end="59:46">(<argument pos:start="59:16" pos:end="59:45"><expr pos:start="59:16" pos:end="59:45"><name pos:start="59:16" pos:end="59:40"><name pos:start="59:16" pos:end="59:30">block_mig_state</name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:40">read_done</name></name> <operator pos:start="59:42" pos:end="59:43">&gt;=</operator> <literal type="number" pos:start="59:45" pos:end="59:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><call pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:18">blk_mig_unlock</name><argument_list pos:start="63:19" pos:end="63:20">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="71:41"><expr pos:start="67:5" pos:end="71:40"><call pos:start="67:5" pos:end="71:40"><name pos:start="67:5" pos:end="67:11">DPRINTF</name><argument_list pos:start="67:12" pos:end="71:40">(<argument pos:start="67:13" pos:end="67:64"><expr pos:start="67:13" pos:end="67:64"><literal type="string" pos:start="67:13" pos:end="67:64">"%s Exit submitted %d read_done %d transferred %d\n"</literal></expr></argument>, <argument pos:start="67:67" pos:end="67:78"><expr pos:start="67:67" pos:end="67:78"><name pos:start="67:67" pos:end="67:78">__FUNCTION__</name></expr></argument>,

            <argument pos:start="69:13" pos:end="69:37"><expr pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:37"><name pos:start="69:13" pos:end="69:27">block_mig_state</name><operator pos:start="69:28" pos:end="69:28">.</operator><name pos:start="69:29" pos:end="69:37">submitted</name></name></expr></argument>, <argument pos:start="69:40" pos:end="69:64"><expr pos:start="69:40" pos:end="69:64"><name pos:start="69:40" pos:end="69:64"><name pos:start="69:40" pos:end="69:54">block_mig_state</name><operator pos:start="69:55" pos:end="69:55">.</operator><name pos:start="69:56" pos:end="69:64">read_done</name></name></expr></argument>,

            <argument pos:start="71:13" pos:end="71:39"><expr pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:39"><name pos:start="71:13" pos:end="71:27">block_mig_state</name><operator pos:start="71:28" pos:end="71:28">.</operator><name pos:start="71:29" pos:end="71:39">transferred</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:15">return <expr pos:start="73:12" pos:end="73:14"><name pos:start="73:12" pos:end="73:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
