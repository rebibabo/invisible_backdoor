<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6764.c" pos:tabs="8"><function pos:start="1:1" pos:end="85:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">lag_decode_zero_run_line</name><parameter_list pos:start="1:36" pos:end="5:50">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">LagarithContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">l</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:63">uint8_t</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:68">dst</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:54"><decl pos:start="3:37" pos:end="3:54"><type pos:start="3:37" pos:end="3:54"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:49">uint8_t</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">src</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:65"><decl pos:start="3:57" pos:end="3:65"><type pos:start="3:57" pos:end="3:65"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:65">width</name></decl></parameter>,

                                    <parameter pos:start="5:37" pos:end="5:49"><decl pos:start="5:37" pos:end="5:49"><type pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:39">int</name></type> <name pos:start="5:41" pos:end="5:49">esc_count</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="85:1">{<block_content pos:start="9:5" pos:end="83:23">

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name> <init pos:start="9:11" pos:end="9:13">= <expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20">zero_run</name> <init pos:start="13:22" pos:end="13:24">= <expr pos:start="13:24" pos:end="13:24"><literal type="number" pos:start="13:24" pos:end="13:24">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:19"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:17">uint8_t</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">start</name> <init pos:start="15:26" pos:end="15:30">= <expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">uint8_t</name></type> <name pos:start="17:13" pos:end="17:17">mask1</name> <init pos:start="17:19" pos:end="17:36">= <expr pos:start="17:21" pos:end="17:36"><operator pos:start="17:21" pos:end="17:21">-</operator><operator pos:start="17:22" pos:end="17:22">(</operator><name pos:start="17:23" pos:end="17:31">esc_count</name> <operator pos:start="17:33" pos:end="17:33">&lt;</operator> <literal type="number" pos:start="17:35" pos:end="17:35">2</literal><operator pos:start="17:36" pos:end="17:36">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">uint8_t</name></type> <name pos:start="19:13" pos:end="19:17">mask2</name> <init pos:start="19:19" pos:end="19:36">= <expr pos:start="19:21" pos:end="19:36"><operator pos:start="19:21" pos:end="19:21">-</operator><operator pos:start="19:22" pos:end="19:22">(</operator><name pos:start="19:23" pos:end="19:31">esc_count</name> <operator pos:start="19:33" pos:end="19:33">&lt;</operator> <literal type="number" pos:start="19:35" pos:end="19:35">3</literal><operator pos:start="19:36" pos:end="19:36">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:37"><decl pos:start="21:5" pos:end="21:36"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">end</name> <init pos:start="21:18" pos:end="21:36">= <expr pos:start="21:20" pos:end="21:36"><name pos:start="21:20" pos:end="21:22">dst</name> <operator pos:start="21:24" pos:end="21:24">+</operator> <operator pos:start="21:26" pos:end="21:26">(</operator><name pos:start="21:27" pos:end="21:31">width</name> <operator pos:start="21:33" pos:end="21:33">-</operator> <literal type="number" pos:start="21:35" pos:end="21:35">2</literal><operator pos:start="21:36" pos:end="21:36">)</operator></expr></init></decl>;</decl_stmt>



<label pos:start="25:1" pos:end="25:13"><name pos:start="25:1" pos:end="25:12">output_zeros</name>:</label>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">l</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">zeros_rem</name></name></expr>)</condition> <block pos:start="27:23" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:21">

        <expr_stmt pos:start="29:9" pos:end="29:47"><expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:13">count</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <call pos:start="29:17" pos:end="29:46"><name pos:start="29:17" pos:end="29:21">FFMIN</name><argument_list pos:start="29:22" pos:end="29:46">(<argument pos:start="29:23" pos:end="29:34"><expr pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:34"><name pos:start="29:23" pos:end="29:23">l</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:34">zeros_rem</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:45"><expr pos:start="29:37" pos:end="29:45"><name pos:start="29:37" pos:end="29:41">width</name> <operator pos:start="29:43" pos:end="29:43">-</operator> <name pos:start="29:45" pos:end="29:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><call pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:14">memset</name><argument_list pos:start="31:15" pos:end="31:29">(<argument pos:start="31:16" pos:end="31:18"><expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">dst</name></expr></argument>, <argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr></argument>, <argument pos:start="31:24" pos:end="31:28"><expr pos:start="31:24" pos:end="31:28"><name pos:start="31:24" pos:end="31:28">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:30"><expr pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:9">l</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:20">zeros_rem</name></name> <operator pos:start="33:22" pos:end="33:23">-=</operator> <name pos:start="33:25" pos:end="33:29">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:21"><expr pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:11">dst</name> <operator pos:start="35:13" pos:end="35:14">+=</operator> <name pos:start="35:16" pos:end="35:20">count</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <while pos:start="41:5" pos:end="81:5">while <condition pos:start="41:11" pos:end="41:21">(<expr pos:start="41:12" pos:end="41:20"><name pos:start="41:12" pos:end="41:14">dst</name> <operator pos:start="41:16" pos:end="41:16">&lt;</operator> <name pos:start="41:18" pos:end="41:20">end</name></expr>)</condition> <block pos:start="41:23" pos:end="81:5">{<block_content pos:start="43:9" pos:end="79:9">

        <expr_stmt pos:start="43:9" pos:end="43:14"><expr pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:9">i</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <literal type="number" pos:start="43:13" pos:end="43:13">0</literal></expr>;</expr_stmt>

        <while pos:start="45:9" pos:end="53:9">while <condition pos:start="45:15" pos:end="45:42">(<expr pos:start="45:16" pos:end="45:41"><operator pos:start="45:16" pos:end="45:16">!</operator><name pos:start="45:17" pos:end="45:24">zero_run</name> <operator pos:start="45:26" pos:end="45:27">&amp;&amp;</operator> <name pos:start="45:29" pos:end="45:31">dst</name> <operator pos:start="45:33" pos:end="45:33">+</operator> <name pos:start="45:35" pos:end="45:35">i</name> <operator pos:start="45:37" pos:end="45:37">&lt;</operator> <name pos:start="45:39" pos:end="45:41">end</name></expr>)</condition> <block pos:start="45:44" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:72">

            <expr_stmt pos:start="47:13" pos:end="47:16"><expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:13">i</name><operator pos:start="47:14" pos:end="47:15">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="51:72"><expr pos:start="49:13" pos:end="51:71"><name pos:start="49:13" pos:end="49:20">zero_run</name> <operator pos:start="49:22" pos:end="49:22">=</operator>

                <operator pos:start="51:17" pos:end="51:17">!</operator><operator pos:start="51:18" pos:end="51:18">(</operator><name pos:start="51:19" pos:end="51:24"><name pos:start="51:19" pos:end="51:21">src</name><index pos:start="51:22" pos:end="51:24">[<expr pos:start="51:23" pos:end="51:23"><name pos:start="51:23" pos:end="51:23">i</name></expr>]</index></name> <operator pos:start="51:26" pos:end="51:26">|</operator> <operator pos:start="51:28" pos:end="51:28">(</operator><name pos:start="51:29" pos:end="51:38"><name pos:start="51:29" pos:end="51:31">src</name><index pos:start="51:32" pos:end="51:38">[<expr pos:start="51:33" pos:end="51:37"><name pos:start="51:33" pos:end="51:33">i</name> <operator pos:start="51:35" pos:end="51:35">+</operator> <literal type="number" pos:start="51:37" pos:end="51:37">1</literal></expr>]</index></name> <operator pos:start="51:40" pos:end="51:40">&amp;</operator> <name pos:start="51:42" pos:end="51:46">mask1</name><operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:49">|</operator> <operator pos:start="51:51" pos:end="51:51">(</operator><name pos:start="51:52" pos:end="51:61"><name pos:start="51:52" pos:end="51:54">src</name><index pos:start="51:55" pos:end="51:61">[<expr pos:start="51:56" pos:end="51:60"><name pos:start="51:56" pos:end="51:56">i</name> <operator pos:start="51:58" pos:end="51:58">+</operator> <literal type="number" pos:start="51:60" pos:end="51:60">2</literal></expr>]</index></name> <operator pos:start="51:63" pos:end="51:63">&amp;</operator> <name pos:start="51:65" pos:end="51:69">mask2</name><operator pos:start="51:70" pos:end="51:70">)</operator><operator pos:start="51:71" pos:end="51:71">)</operator></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="55:9" pos:end="79:9"><if pos:start="55:9" pos:end="73:9">if <condition pos:start="55:12" pos:end="55:21">(<expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">zero_run</name></expr>)</condition> <block pos:start="55:23" pos:end="73:9">{<block_content pos:start="57:13" pos:end="71:30">

            <expr_stmt pos:start="57:13" pos:end="57:25"><expr pos:start="57:13" pos:end="57:24"><name pos:start="57:13" pos:end="57:20">zero_run</name> <operator pos:start="57:22" pos:end="57:22">=</operator> <literal type="number" pos:start="57:24" pos:end="57:24">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:13">i</name> <operator pos:start="59:15" pos:end="59:16">+=</operator> <name pos:start="59:18" pos:end="59:26">esc_count</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:32"><expr pos:start="61:13" pos:end="61:31"><call pos:start="61:13" pos:end="61:31"><name pos:start="61:13" pos:end="61:18">memcpy</name><argument_list pos:start="61:19" pos:end="61:31">(<argument pos:start="61:20" pos:end="61:22"><expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">dst</name></expr></argument>, <argument pos:start="61:25" pos:end="61:27"><expr pos:start="61:25" pos:end="61:27"><name pos:start="61:25" pos:end="61:27">src</name></expr></argument>, <argument pos:start="61:30" pos:end="61:30"><expr pos:start="61:30" pos:end="61:30"><name pos:start="61:30" pos:end="61:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:21"><expr pos:start="63:13" pos:end="63:20"><name pos:start="63:13" pos:end="63:15">dst</name> <operator pos:start="63:17" pos:end="63:18">+=</operator> <name pos:start="63:20" pos:end="63:20">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:53"><expr pos:start="65:13" pos:end="65:52"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:13">l</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:24">zeros_rem</name></name> <operator pos:start="65:26" pos:end="65:26">=</operator> <call pos:start="65:28" pos:end="65:52"><name pos:start="65:28" pos:end="65:44">lag_calc_zero_run</name><argument_list pos:start="65:45" pos:end="65:52">(<argument pos:start="65:46" pos:end="65:51"><expr pos:start="65:46" pos:end="65:51"><name pos:start="65:46" pos:end="65:51"><name pos:start="65:46" pos:end="65:48">src</name><index pos:start="65:49" pos:end="65:51">[<expr pos:start="65:50" pos:end="65:50"><name pos:start="65:50" pos:end="65:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:25"><expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">src</name> <operator pos:start="69:17" pos:end="69:18">+=</operator> <name pos:start="69:20" pos:end="69:20">i</name> <operator pos:start="69:22" pos:end="69:22">+</operator> <literal type="number" pos:start="69:24" pos:end="69:24">1</literal></expr>;</expr_stmt>

            <goto pos:start="71:13" pos:end="71:30">goto <name pos:start="71:18" pos:end="71:29">output_zeros</name>;</goto>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="79:9">else <block pos:start="73:16" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:21">

            <expr_stmt pos:start="75:13" pos:end="75:32"><expr pos:start="75:13" pos:end="75:31"><call pos:start="75:13" pos:end="75:31"><name pos:start="75:13" pos:end="75:18">memcpy</name><argument_list pos:start="75:19" pos:end="75:31">(<argument pos:start="75:20" pos:end="75:22"><expr pos:start="75:20" pos:end="75:22"><name pos:start="75:20" pos:end="75:22">dst</name></expr></argument>, <argument pos:start="75:25" pos:end="75:27"><expr pos:start="75:25" pos:end="75:27"><name pos:start="75:25" pos:end="75:27">src</name></expr></argument>, <argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:21"><expr pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:15">src</name> <operator pos:start="77:17" pos:end="77:18">+=</operator> <name pos:start="77:20" pos:end="77:20">i</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="83:5" pos:end="83:23">return <expr pos:start="83:12" pos:end="83:22"><name pos:start="83:12" pos:end="83:16">start</name> <operator pos:start="83:18" pos:end="83:18">-</operator> <name pos:start="83:20" pos:end="83:22">src</name></expr>;</return>

</block_content>}</block></function>
</unit>
