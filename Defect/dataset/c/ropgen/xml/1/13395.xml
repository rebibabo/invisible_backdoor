<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13395.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parse_metadata</name><parameter_list pos:start="1:26" pos:end="1:40">(<parameter pos:start="1:27" pos:end="1:39"><decl pos:start="1:27" pos:end="1:39"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:36">DBEContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:14"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:14">ret</name></decl>, <decl pos:start="5:17" pos:end="5:34"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:19">key</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><call pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:31">parse_key</name><argument_list pos:start="5:32" pos:end="5:34">(<argument pos:start="5:33" pos:end="5:33"><expr pos:start="5:33" pos:end="5:33"><name pos:start="5:33" pos:end="5:33">s</name></expr></argument>)</argument_list></call></expr></init></decl>, <decl pos:start="5:37" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:37" pos:end="5:44">mtd_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:19"><if pos:start="9:5" pos:end="11:19">if <condition pos:start="9:8" pos:end="9:45">(<expr pos:start="9:9" pos:end="9:44"><operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:12">ret</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <call pos:start="9:16" pos:end="9:39"><name pos:start="9:16" pos:end="9:28">convert_input</name><argument_list pos:start="9:29" pos:end="9:39">(<argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">s</name></expr></argument>, <argument pos:start="9:33" pos:end="9:33"><expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">1</literal></expr></argument>, <argument pos:start="9:36" pos:end="9:38"><expr pos:start="9:36" pos:end="9:38"><name pos:start="9:36" pos:end="9:38">key</name></expr></argument>)</argument_list></call><operator pos:start="9:40" pos:end="9:40">)</operator> <operator pos:start="9:42" pos:end="9:42">&lt;</operator> <literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:19"><block_content pos:start="11:9" pos:end="11:19">

        <return pos:start="11:9" pos:end="11:19">return <expr pos:start="11:16" pos:end="11:18"><name pos:start="11:16" pos:end="11:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><call pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:13">skip_bits</name><argument_list pos:start="15:14" pos:end="15:24">(<argument pos:start="15:15" pos:end="15:20"><expr pos:start="15:15" pos:end="15:20"><operator pos:start="15:15" pos:end="15:15">&amp;</operator><name pos:start="15:16" pos:end="15:20"><name pos:start="15:16" pos:end="15:16">s</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:20">gb</name></name></expr></argument>, <argument pos:start="15:23" pos:end="15:23"><expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:36"><expr pos:start="17:5" pos:end="17:35"><name pos:start="17:5" pos:end="17:12">mtd_size</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:35"><name pos:start="17:16" pos:end="17:23">get_bits</name><argument_list pos:start="17:24" pos:end="17:35">(<argument pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:30">gb</name></name></expr></argument>, <argument pos:start="17:33" pos:end="17:34"><expr pos:start="17:33" pos:end="17:34"><literal type="number" pos:start="17:33" pos:end="17:34">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:18">(<expr pos:start="19:9" pos:end="19:17"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:17">mtd_size</name></expr>)</condition> <block pos:start="19:20" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:35">

        <expr_stmt pos:start="21:9" pos:end="21:66"><expr pos:start="21:9" pos:end="21:65"><call pos:start="21:9" pos:end="21:65"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:65">(<argument pos:start="21:16" pos:end="21:23"><expr pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:23"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:23">avctx</name></name></expr></argument>, <argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:40" pos:end="21:64"><expr pos:start="21:40" pos:end="21:64"><literal type="string" pos:start="21:40" pos:end="21:64">"Invalid metadata size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:19"><if pos:start="29:5" pos:end="31:19">if <condition pos:start="29:8" pos:end="29:52">(<expr pos:start="29:9" pos:end="29:51"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:12">ret</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:46"><name pos:start="29:16" pos:end="29:28">convert_input</name><argument_list pos:start="29:29" pos:end="29:46">(<argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><name pos:start="29:30" pos:end="29:30">s</name></expr></argument>, <argument pos:start="29:33" pos:end="29:40"><expr pos:start="29:33" pos:end="29:40"><name pos:start="29:33" pos:end="29:40">mtd_size</name></expr></argument>, <argument pos:start="29:43" pos:end="29:45"><expr pos:start="29:43" pos:end="29:45"><name pos:start="29:43" pos:end="29:45">key</name></expr></argument>)</argument_list></call><operator pos:start="29:47" pos:end="29:47">)</operator> <operator pos:start="29:49" pos:end="29:49">&lt;</operator> <literal type="number" pos:start="29:51" pos:end="29:51">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><call pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:13">skip_bits</name><argument_list pos:start="35:14" pos:end="35:25">(<argument pos:start="35:15" pos:end="35:20"><expr pos:start="35:15" pos:end="35:20"><operator pos:start="35:15" pos:end="35:15">&amp;</operator><name pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:20">gb</name></name></expr></argument>, <argument pos:start="35:23" pos:end="35:24"><expr pos:start="35:23" pos:end="35:24"><literal type="number" pos:start="35:23" pos:end="35:24">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:16"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:16">prog_conf</name></name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:38"><name pos:start="37:20" pos:end="37:27">get_bits</name><argument_list pos:start="37:28" pos:end="37:38">(<argument pos:start="37:29" pos:end="37:34"><expr pos:start="37:29" pos:end="37:34"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:30">s</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:34">gb</name></name></expr></argument>, <argument pos:start="37:37" pos:end="37:37"><expr pos:start="37:37" pos:end="37:37"><literal type="number" pos:start="37:37" pos:end="37:37">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:37">(<expr pos:start="39:9" pos:end="39:36"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:20">prog_conf</name></name> <operator pos:start="39:22" pos:end="39:22">&gt;</operator> <name pos:start="39:24" pos:end="39:36">MAX_PROG_CONF</name></expr>)</condition> <block pos:start="39:39" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:35">

        <expr_stmt pos:start="41:9" pos:end="41:74"><expr pos:start="41:9" pos:end="41:73"><call pos:start="41:9" pos:end="41:73"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:73">(<argument pos:start="41:16" pos:end="41:23"><expr pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:23"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:23">avctx</name></name></expr></argument>, <argument pos:start="41:26" pos:end="41:37"><expr pos:start="41:26" pos:end="41:37"><name pos:start="41:26" pos:end="41:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:40" pos:end="41:72"><expr pos:start="41:40" pos:end="41:72"><literal type="string" pos:start="41:40" pos:end="41:72">"Invalid program configuration\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:35">return <expr pos:start="43:16" pos:end="43:34"><name pos:start="43:16" pos:end="43:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:18">nb_channels</name></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:50"><name pos:start="49:22" pos:end="49:36">nb_channels_tab</name><index pos:start="49:37" pos:end="49:50">[<expr pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:49"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:49">prog_conf</name></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:51"><expr pos:start="51:5" pos:end="51:50"><name pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:18">nb_programs</name></name> <operator pos:start="51:20" pos:end="51:20">=</operator> <name pos:start="51:22" pos:end="51:50"><name pos:start="51:22" pos:end="51:36">nb_programs_tab</name><index pos:start="51:37" pos:end="51:50">[<expr pos:start="51:38" pos:end="51:49"><name pos:start="51:38" pos:end="51:49"><name pos:start="51:38" pos:end="51:38">s</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:49">prog_conf</name></name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:42"><expr pos:start="55:5" pos:end="55:41"><name pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:5">s</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:14">fr_code</name></name>      <operator pos:start="55:21" pos:end="55:21">=</operator> <call pos:start="55:23" pos:end="55:41"><name pos:start="55:23" pos:end="55:30">get_bits</name><argument_list pos:start="55:31" pos:end="55:41">(<argument pos:start="55:32" pos:end="55:37"><expr pos:start="55:32" pos:end="55:37"><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:37"><name pos:start="55:33" pos:end="55:33">s</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:37">gb</name></name></expr></argument>, <argument pos:start="55:40" pos:end="55:40"><expr pos:start="55:40" pos:end="55:40"><literal type="number" pos:start="55:40" pos:end="55:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:42"><expr pos:start="57:5" pos:end="57:41"><name pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:19">fr_code_orig</name></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <call pos:start="57:23" pos:end="57:41"><name pos:start="57:23" pos:end="57:30">get_bits</name><argument_list pos:start="57:31" pos:end="57:41">(<argument pos:start="57:32" pos:end="57:37"><expr pos:start="57:32" pos:end="57:37"><operator pos:start="57:32" pos:end="57:32">&amp;</operator><name pos:start="57:33" pos:end="57:37"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:37">gb</name></name></expr></argument>, <argument pos:start="57:40" pos:end="57:40"><expr pos:start="57:40" pos:end="57:40"><literal type="number" pos:start="57:40" pos:end="57:40">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="61:42">(<expr pos:start="59:9" pos:end="61:41"><operator pos:start="59:9" pos:end="59:9">!</operator><name pos:start="59:10" pos:end="59:36"><name pos:start="59:10" pos:end="59:24">sample_rate_tab</name><index pos:start="59:25" pos:end="59:36">[<expr pos:start="59:26" pos:end="59:35"><name pos:start="59:26" pos:end="59:35"><name pos:start="59:26" pos:end="59:26">s</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:35">fr_code</name></name></expr>]</index></name> <operator pos:start="59:38" pos:end="59:39">||</operator>

        <operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:41"><name pos:start="61:10" pos:end="61:24">sample_rate_tab</name><index pos:start="61:25" pos:end="61:41">[<expr pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:26">s</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:40">fr_code_orig</name></name></expr>]</index></name></expr>)</condition> <block pos:start="61:44" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:35">

        <expr_stmt pos:start="63:9" pos:end="63:68"><expr pos:start="63:9" pos:end="63:67"><call pos:start="63:9" pos:end="63:67"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:67">(<argument pos:start="63:16" pos:end="63:23"><expr pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:23"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:23">avctx</name></name></expr></argument>, <argument pos:start="63:26" pos:end="63:37"><expr pos:start="63:26" pos:end="63:37"><name pos:start="63:26" pos:end="63:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:40" pos:end="63:66"><expr pos:start="63:40" pos:end="63:66"><literal type="string" pos:start="63:40" pos:end="63:66">"Invalid frame rate code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:35">return <expr pos:start="65:16" pos:end="65:34"><name pos:start="65:16" pos:end="65:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:31"><expr pos:start="71:5" pos:end="71:30"><call pos:start="71:5" pos:end="71:30"><name pos:start="71:5" pos:end="71:18">skip_bits_long</name><argument_list pos:start="71:19" pos:end="71:30">(<argument pos:start="71:20" pos:end="71:25"><expr pos:start="71:20" pos:end="71:25"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:25"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:25">gb</name></name></expr></argument>, <argument pos:start="71:28" pos:end="71:29"><expr pos:start="71:28" pos:end="71:29"><literal type="number" pos:start="71:28" pos:end="71:29">88</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="75:45">for <control pos:start="73:9" pos:end="73:40">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:35"><expr pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <name pos:start="73:21" pos:end="73:34"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:34">nb_channels</name></name></expr>;</condition> <incr pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:37">i</name><operator pos:start="73:38" pos:end="73:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="75:9" pos:end="75:45"><block_content pos:start="75:9" pos:end="75:45">

        <expr_stmt pos:start="75:9" pos:end="75:45"><expr pos:start="75:9" pos:end="75:44"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:18">ch_size</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><name pos:start="75:20" pos:end="75:20">i</name></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <call pos:start="75:25" pos:end="75:44"><name pos:start="75:25" pos:end="75:32">get_bits</name><argument_list pos:start="75:33" pos:end="75:44">(<argument pos:start="75:34" pos:end="75:39"><expr pos:start="75:34" pos:end="75:39"><operator pos:start="75:34" pos:end="75:34">&amp;</operator><name pos:start="75:35" pos:end="75:39"><name pos:start="75:35" pos:end="75:35">s</name><operator pos:start="75:36" pos:end="75:37">-&gt;</operator><name pos:start="75:38" pos:end="75:39">gb</name></name></expr></argument>, <argument pos:start="75:42" pos:end="75:43"><expr pos:start="75:42" pos:end="75:43"><literal type="number" pos:start="75:42" pos:end="75:43">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:19"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:19">mtd_ext_size</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:41"><name pos:start="77:23" pos:end="77:30">get_bits</name><argument_list pos:start="77:31" pos:end="77:41">(<argument pos:start="77:32" pos:end="77:37"><expr pos:start="77:32" pos:end="77:37"><operator pos:start="77:32" pos:end="77:32">&amp;</operator><name pos:start="77:33" pos:end="77:37"><name pos:start="77:33" pos:end="77:33">s</name><operator pos:start="77:34" pos:end="77:35">-&gt;</operator><name pos:start="77:36" pos:end="77:37">gb</name></name></expr></argument>, <argument pos:start="77:40" pos:end="77:40"><expr pos:start="77:40" pos:end="77:40"><literal type="number" pos:start="77:40" pos:end="77:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:42"><expr pos:start="79:5" pos:end="79:41"><name pos:start="79:5" pos:end="79:17"><name pos:start="79:5" pos:end="79:5">s</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:17">meter_size</name></name>   <operator pos:start="79:21" pos:end="79:21">=</operator> <call pos:start="79:23" pos:end="79:41"><name pos:start="79:23" pos:end="79:30">get_bits</name><argument_list pos:start="79:31" pos:end="79:41">(<argument pos:start="79:32" pos:end="79:37"><expr pos:start="79:32" pos:end="79:37"><operator pos:start="79:32" pos:end="79:32">&amp;</operator><name pos:start="79:33" pos:end="79:37"><name pos:start="79:33" pos:end="79:33">s</name><operator pos:start="79:34" pos:end="79:35">-&gt;</operator><name pos:start="79:36" pos:end="79:37">gb</name></name></expr></argument>, <argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><literal type="number" pos:start="79:40" pos:end="79:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:48"><expr pos:start="83:5" pos:end="83:47"><call pos:start="83:5" pos:end="83:47"><name pos:start="83:5" pos:end="83:18">skip_bits_long</name><argument_list pos:start="83:19" pos:end="83:47">(<argument pos:start="83:20" pos:end="83:25"><expr pos:start="83:20" pos:end="83:25"><operator pos:start="83:20" pos:end="83:20">&amp;</operator><name pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:21">s</name><operator pos:start="83:22" pos:end="83:23">-&gt;</operator><name pos:start="83:24" pos:end="83:25">gb</name></name></expr></argument>, <argument pos:start="83:28" pos:end="83:46"><expr pos:start="83:28" pos:end="83:46"><literal type="number" pos:start="83:28" pos:end="83:29">10</literal> <operator pos:start="83:31" pos:end="83:31">*</operator> <name pos:start="83:33" pos:end="83:46"><name pos:start="83:33" pos:end="83:33">s</name><operator pos:start="83:34" pos:end="83:35">-&gt;</operator><name pos:start="83:36" pos:end="83:46">nb_programs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="85:5" pos:end="95:5">for <control pos:start="85:9" pos:end="85:40">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">i</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:35"><expr pos:start="85:17" pos:end="85:34"><name pos:start="85:17" pos:end="85:17">i</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:34"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:34">nb_channels</name></name></expr>;</condition> <incr pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:37">i</name><operator pos:start="85:38" pos:end="85:39">++</operator></expr></incr>)</control> <block pos:start="85:42" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:48">

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:17">rev_id</name><index pos:start="87:18" pos:end="87:20">[<expr pos:start="87:19" pos:end="87:19"><name pos:start="87:19" pos:end="87:19">i</name></expr>]</index></name>     <operator pos:start="87:26" pos:end="87:26">=</operator> <call pos:start="87:28" pos:end="87:47"><name pos:start="87:28" pos:end="87:35">get_bits</name><argument_list pos:start="87:36" pos:end="87:47">(<argument pos:start="87:37" pos:end="87:42"><expr pos:start="87:37" pos:end="87:42"><operator pos:start="87:37" pos:end="87:37">&amp;</operator><name pos:start="87:38" pos:end="87:42"><name pos:start="87:38" pos:end="87:38">s</name><operator pos:start="87:39" pos:end="87:40">-&gt;</operator><name pos:start="87:41" pos:end="87:42">gb</name></name></expr></argument>,  <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:27"><expr pos:start="89:9" pos:end="89:26"><call pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:18">skip_bits1</name><argument_list pos:start="89:19" pos:end="89:26">(<argument pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:25"><operator pos:start="89:20" pos:end="89:20">&amp;</operator><name pos:start="89:21" pos:end="89:25"><name pos:start="89:21" pos:end="89:21">s</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:24"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">begin_gain</name><index pos:start="91:22" pos:end="91:24">[<expr pos:start="91:23" pos:end="91:23"><name pos:start="91:23" pos:end="91:23">i</name></expr>]</index></name> <operator pos:start="91:26" pos:end="91:26">=</operator> <call pos:start="91:28" pos:end="91:47"><name pos:start="91:28" pos:end="91:35">get_bits</name><argument_list pos:start="91:36" pos:end="91:47">(<argument pos:start="91:37" pos:end="91:42"><expr pos:start="91:37" pos:end="91:42"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:42"><name pos:start="91:38" pos:end="91:38">s</name><operator pos:start="91:39" pos:end="91:40">-&gt;</operator><name pos:start="91:41" pos:end="91:42">gb</name></name></expr></argument>, <argument pos:start="91:45" pos:end="91:46"><expr pos:start="91:45" pos:end="91:46"><literal type="number" pos:start="91:45" pos:end="91:46">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:48"><expr pos:start="93:9" pos:end="93:47"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">end_gain</name><index pos:start="93:20" pos:end="93:22">[<expr pos:start="93:21" pos:end="93:21"><name pos:start="93:21" pos:end="93:21">i</name></expr>]</index></name>   <operator pos:start="93:26" pos:end="93:26">=</operator> <call pos:start="93:28" pos:end="93:47"><name pos:start="93:28" pos:end="93:35">get_bits</name><argument_list pos:start="93:36" pos:end="93:47">(<argument pos:start="93:37" pos:end="93:42"><expr pos:start="93:37" pos:end="93:42"><operator pos:start="93:37" pos:end="93:37">&amp;</operator><name pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:38">s</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:42">gb</name></name></expr></argument>, <argument pos:start="93:45" pos:end="93:46"><expr pos:start="93:45" pos:end="93:46"><literal type="number" pos:start="93:45" pos:end="93:46">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:34">(<expr pos:start="99:9" pos:end="99:33"><call pos:start="99:9" pos:end="99:29"><name pos:start="99:9" pos:end="99:21">get_bits_left</name><argument_list pos:start="99:22" pos:end="99:29">(<argument pos:start="99:23" pos:end="99:28"><expr pos:start="99:23" pos:end="99:28"><operator pos:start="99:23" pos:end="99:23">&amp;</operator><name pos:start="99:24" pos:end="99:28"><name pos:start="99:24" pos:end="99:24">s</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="99:31" pos:end="99:31">&lt;</operator> <literal type="number" pos:start="99:33" pos:end="99:33">0</literal></expr>)</condition> <block pos:start="99:36" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:35">

        <expr_stmt pos:start="101:9" pos:end="101:70"><expr pos:start="101:9" pos:end="101:69"><call pos:start="101:9" pos:end="101:69"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="101:69">(<argument pos:start="101:16" pos:end="101:23"><expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:16">s</name><operator pos:start="101:17" pos:end="101:18">-&gt;</operator><name pos:start="101:19" pos:end="101:23">avctx</name></name></expr></argument>, <argument pos:start="101:26" pos:end="101:37"><expr pos:start="101:26" pos:end="101:37"><name pos:start="101:26" pos:end="101:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:40" pos:end="101:68"><expr pos:start="101:40" pos:end="101:68"><literal type="string" pos:start="101:40" pos:end="101:68">"Read past end of metadata\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="103:9" pos:end="103:35">return <expr pos:start="103:16" pos:end="103:34"><name pos:start="103:16" pos:end="103:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:32"><expr pos:start="109:5" pos:end="109:31"><call pos:start="109:5" pos:end="109:31"><name pos:start="109:5" pos:end="109:14">skip_input</name><argument_list pos:start="109:15" pos:end="109:31">(<argument pos:start="109:16" pos:end="109:16"><expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">s</name></expr></argument>, <argument pos:start="109:19" pos:end="109:30"><expr pos:start="109:19" pos:end="109:30"><name pos:start="109:19" pos:end="109:26">mtd_size</name> <operator pos:start="109:28" pos:end="109:28">+</operator> <literal type="number" pos:start="109:30" pos:end="109:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
