<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1593.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:19">qxl_phys2virt</name><parameter_list pos:start="1:20" pos:end="1:70">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:37"><name pos:start="1:21" pos:end="1:32">PCIQXLDevice</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:37">qxl</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:55"><decl pos:start="1:40" pos:end="1:55"><type pos:start="1:40" pos:end="1:55"><name pos:start="1:40" pos:end="1:50">QXLPHYSICAL</name></type> <name pos:start="1:52" pos:end="1:55">pqxl</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:69"><decl pos:start="1:58" pos:end="1:69"><type pos:start="1:58" pos:end="1:69"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:69">group_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:17">phys</name>   <init pos:start="5:21" pos:end="5:39">= <expr pos:start="5:23" pos:end="5:39"><call pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:33">le64_to_cpu</name><argument_list pos:start="5:34" pos:end="5:39">(<argument pos:start="5:35" pos:end="5:38"><expr pos:start="5:35" pos:end="5:38"><name pos:start="5:35" pos:end="5:38">pqxl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:17">slot</name>   <init pos:start="7:21" pos:end="7:48">= <expr pos:start="7:23" pos:end="7:48"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:27">phys</name> <operator pos:start="7:29" pos:end="7:30">&gt;&gt;</operator> <operator pos:start="7:32" pos:end="7:32">(</operator><literal type="number" pos:start="7:33" pos:end="7:36">64</literal> <operator pos:start="7:36" pos:end="7:36">-</operator>  <literal type="number" pos:start="7:39" pos:end="7:39">8</literal><operator pos:start="7:40" pos:end="7:40">)</operator><operator pos:start="7:41" pos:end="7:41">)</operator> <operator pos:start="7:43" pos:end="7:43">&amp;</operator> <literal type="number" pos:start="7:45" pos:end="7:48">0xff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:19">offset</name> <init pos:start="9:21" pos:end="9:43">= <expr pos:start="9:23" pos:end="9:43"><name pos:start="9:23" pos:end="9:26">phys</name> <operator pos:start="9:28" pos:end="9:28">&amp;</operator> <literal type="number" pos:start="9:30" pos:end="9:43">0xffffffffffff</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="37:5">switch <condition pos:start="13:12" pos:end="13:21">(<expr pos:start="13:13" pos:end="13:20"><name pos:start="13:13" pos:end="13:20">group_id</name></expr>)</condition> <block pos:start="13:23" pos:end="37:5">{<block_content pos:start="15:5" pos:end="35:20">

    <case pos:start="15:5" pos:end="15:28">case <expr pos:start="15:10" pos:end="15:27"><name pos:start="15:10" pos:end="15:27">MEMSLOT_GROUP_HOST</name></expr>:</case>

        <return pos:start="17:9" pos:end="17:40">return <expr pos:start="17:16" pos:end="17:39"><operator pos:start="17:16" pos:end="17:16">(</operator><name pos:start="17:17" pos:end="17:20">void</name> <operator pos:start="17:22" pos:end="17:22">*</operator><operator pos:start="17:23" pos:end="17:23">)</operator><operator pos:start="17:24" pos:end="17:24">(</operator><name pos:start="17:25" pos:end="17:32">intptr_t</name><operator pos:start="17:33" pos:end="17:33">)</operator><name pos:start="17:34" pos:end="17:39">offset</name></expr>;</return>

    <case pos:start="19:5" pos:end="19:29">case <expr pos:start="19:10" pos:end="19:28"><name pos:start="19:10" pos:end="19:28">MEMSLOT_GROUP_GUEST</name></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:16">PANIC_ON</name><argument_list pos:start="21:17" pos:end="21:38">(<argument pos:start="21:18" pos:end="21:37"><expr pos:start="21:18" pos:end="21:37"><name pos:start="21:18" pos:end="21:21">slot</name> <operator pos:start="21:23" pos:end="21:24">&gt;=</operator> <name pos:start="21:26" pos:end="21:37">NUM_MEMSLOTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:49"><expr pos:start="23:9" pos:end="23:48"><call pos:start="23:9" pos:end="23:48"><name pos:start="23:9" pos:end="23:16">PANIC_ON</name><argument_list pos:start="23:17" pos:end="23:48">(<argument pos:start="23:18" pos:end="23:47"><expr pos:start="23:18" pos:end="23:47"><operator pos:start="23:18" pos:end="23:18">!</operator><name pos:start="23:19" pos:end="23:40"><name pos:start="23:19" pos:end="23:21">qxl</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:34">guest_slots</name><index pos:start="23:35" pos:end="23:40">[<expr pos:start="23:36" pos:end="23:39"><name pos:start="23:36" pos:end="23:39">slot</name></expr>]</index></name><operator pos:start="23:41" pos:end="23:41">.</operator><name pos:start="23:42" pos:end="23:47">active</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:16">PANIC_ON</name><argument_list pos:start="25:17" pos:end="25:55">(<argument pos:start="25:18" pos:end="25:54"><expr pos:start="25:18" pos:end="25:54"><name pos:start="25:18" pos:end="25:23">offset</name> <operator pos:start="25:25" pos:end="25:25">&lt;</operator> <name pos:start="25:27" pos:end="25:48"><name pos:start="25:27" pos:end="25:29">qxl</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:42">guest_slots</name><index pos:start="25:43" pos:end="25:48">[<expr pos:start="25:44" pos:end="25:47"><name pos:start="25:44" pos:end="25:47">slot</name></expr>]</index></name><operator pos:start="25:49" pos:end="25:49">.</operator><name pos:start="25:50" pos:end="25:54">delta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:14">offset</name> <operator pos:start="27:16" pos:end="27:17">-=</operator> <name pos:start="27:19" pos:end="27:40"><name pos:start="27:19" pos:end="27:21">qxl</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:34">guest_slots</name><index pos:start="27:35" pos:end="27:40">[<expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">slot</name></expr>]</index></name><operator pos:start="27:41" pos:end="27:41">.</operator><name pos:start="27:42" pos:end="27:46">delta</name></expr>;</expr_stmt>

        <macro pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:16">PANIC_ON</name><argument_list pos:start="29:17" pos:end="29:54">(<argument pos:start="29:18" pos:end="29:53">offset &gt; qxl-&gt;guest_slots[slot].size</argument>)</argument_list></macro>

        <return pos:start="31:9" pos:end="31:51">return <expr pos:start="31:16" pos:end="31:50"><name pos:start="31:16" pos:end="31:37"><name pos:start="31:16" pos:end="31:18">qxl</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:31">guest_slots</name><index pos:start="31:32" pos:end="31:37">[<expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">slot</name></expr>]</index></name><operator pos:start="31:38" pos:end="31:38">.</operator><name pos:start="31:39" pos:end="31:41">ptr</name> <operator pos:start="31:43" pos:end="31:43">+</operator> <name pos:start="31:45" pos:end="31:50">offset</name></expr>;</return>

    <default pos:start="33:5" pos:end="33:12">default:</default>

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><call pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:16">PANIC_ON</name><argument_list pos:start="35:17" pos:end="35:19">(<argument pos:start="35:18" pos:end="35:18"><expr pos:start="35:18" pos:end="35:18"><literal type="number" pos:start="35:18" pos:end="35:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
