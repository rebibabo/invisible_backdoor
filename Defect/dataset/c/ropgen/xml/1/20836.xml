<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20836.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">qemu_chr_open_socket</name><parameter_list pos:start="1:32" pos:end="1:71">(<parameter pos:start="1:33" pos:end="1:46"><decl pos:start="1:33" pos:end="1:46"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:40">QemuOpts</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">opts</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:70"><decl pos:start="1:49" pos:end="1:70"><type pos:start="1:49" pos:end="1:70"><name pos:start="1:49" pos:end="1:63">CharDriverState</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">_chr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="205:1">{<block_content pos:start="5:5" pos:end="203:15">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">TCPCharDriver</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">fd</name> <init pos:start="9:12" pos:end="9:15">= <expr pos:start="9:14" pos:end="9:15"><operator pos:start="9:14" pos:end="9:14">-</operator><literal type="number" pos:start="9:15" pos:end="9:15">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">is_listen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">is_waitconnect</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:18">do_nodelay</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:15">is_unix</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">is_telnet</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:12"><decl pos:start="21:5" pos:end="21:11"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:13">is_listen</name>      <operator pos:start="25:20" pos:end="25:20">=</operator> <call pos:start="25:22" pos:end="25:57"><name pos:start="25:22" pos:end="25:38">qemu_opt_get_bool</name><argument_list pos:start="25:39" pos:end="25:57">(<argument pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">opts</name></expr></argument>, <argument pos:start="25:46" pos:end="25:53"><expr pos:start="25:46" pos:end="25:53"><literal type="string" pos:start="25:46" pos:end="25:53">"server"</literal></expr></argument>, <argument pos:start="25:56" pos:end="25:56"><expr pos:start="25:56" pos:end="25:56"><literal type="number" pos:start="25:56" pos:end="25:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:18">is_waitconnect</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <call pos:start="27:22" pos:end="27:55"><name pos:start="27:22" pos:end="27:38">qemu_opt_get_bool</name><argument_list pos:start="27:39" pos:end="27:55">(<argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">opts</name></expr></argument>, <argument pos:start="27:46" pos:end="27:51"><expr pos:start="27:46" pos:end="27:51"><literal type="string" pos:start="27:46" pos:end="27:51">"wait"</literal></expr></argument>, <argument pos:start="27:54" pos:end="27:54"><expr pos:start="27:54" pos:end="27:54"><literal type="number" pos:start="27:54" pos:end="27:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:58"><expr pos:start="29:5" pos:end="29:57"><name pos:start="29:5" pos:end="29:13">is_telnet</name>      <operator pos:start="29:20" pos:end="29:20">=</operator> <call pos:start="29:22" pos:end="29:57"><name pos:start="29:22" pos:end="29:38">qemu_opt_get_bool</name><argument_list pos:start="29:39" pos:end="29:57">(<argument pos:start="29:40" pos:end="29:43"><expr pos:start="29:40" pos:end="29:43"><name pos:start="29:40" pos:end="29:43">opts</name></expr></argument>, <argument pos:start="29:46" pos:end="29:53"><expr pos:start="29:46" pos:end="29:53"><literal type="string" pos:start="29:46" pos:end="29:53">"telnet"</literal></expr></argument>, <argument pos:start="29:56" pos:end="29:56"><expr pos:start="29:56" pos:end="29:56"><literal type="number" pos:start="29:56" pos:end="29:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:58"><expr pos:start="31:5" pos:end="31:57"><name pos:start="31:5" pos:end="31:14">do_nodelay</name>     <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">!</operator><call pos:start="31:23" pos:end="31:57"><name pos:start="31:23" pos:end="31:39">qemu_opt_get_bool</name><argument_list pos:start="31:40" pos:end="31:57">(<argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">opts</name></expr></argument>, <argument pos:start="31:47" pos:end="31:53"><expr pos:start="31:47" pos:end="31:53"><literal type="string" pos:start="31:47" pos:end="31:53">"delay"</literal></expr></argument>, <argument pos:start="31:56" pos:end="31:56"><expr pos:start="31:56" pos:end="31:56"><literal type="number" pos:start="31:56" pos:end="31:56">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:56"><expr pos:start="33:5" pos:end="33:55"><name pos:start="33:5" pos:end="33:11">is_unix</name>        <operator pos:start="33:20" pos:end="33:20">=</operator> <call pos:start="33:22" pos:end="33:47"><name pos:start="33:22" pos:end="33:33">qemu_opt_get</name><argument_list pos:start="33:34" pos:end="33:47">(<argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">opts</name></expr></argument>, <argument pos:start="33:41" pos:end="33:46"><expr pos:start="33:41" pos:end="33:46"><literal type="string" pos:start="33:41" pos:end="33:46">"path"</literal></expr></argument>)</argument_list></call> <operator pos:start="33:49" pos:end="33:50">!=</operator> <name pos:start="33:52" pos:end="33:55">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:27"><if pos:start="35:5" pos:end="37:27">if <condition pos:start="35:8" pos:end="35:19">(<expr pos:start="35:9" pos:end="35:18"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:18">is_listen</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:27"><block_content pos:start="37:9" pos:end="37:27">

        <expr_stmt pos:start="37:9" pos:end="37:27"><expr pos:start="37:9" pos:end="37:26"><name pos:start="37:9" pos:end="37:22">is_waitconnect</name> <operator pos:start="37:24" pos:end="37:24">=</operator> <literal type="number" pos:start="37:26" pos:end="37:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:7">chr</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:44"><name pos:start="41:11" pos:end="41:19">g_malloc0</name><argument_list pos:start="41:20" pos:end="41:44">(<argument pos:start="41:21" pos:end="41:43"><expr pos:start="41:21" pos:end="41:43"><sizeof pos:start="41:21" pos:end="41:43">sizeof<argument_list pos:start="41:27" pos:end="41:43">(<argument pos:start="41:28" pos:end="41:42"><expr pos:start="41:28" pos:end="41:42"><name pos:start="41:28" pos:end="41:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:5">s</name> <operator pos:start="43:7" pos:end="43:7">=</operator> <call pos:start="43:9" pos:end="43:40"><name pos:start="43:9" pos:end="43:17">g_malloc0</name><argument_list pos:start="43:18" pos:end="43:40">(<argument pos:start="43:19" pos:end="43:39"><expr pos:start="43:19" pos:end="43:39"><sizeof pos:start="43:19" pos:end="43:39">sizeof<argument_list pos:start="43:25" pos:end="43:39">(<argument pos:start="43:26" pos:end="43:38"><expr pos:start="43:26" pos:end="43:38"><name pos:start="43:26" pos:end="43:38">TCPCharDriver</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="71:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:15">is_unix</name></expr>)</condition> <block pos:start="47:18" pos:end="59:5">{<block_content pos:start="49:9" pos:end="57:9">

        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="53:9">if <condition pos:start="49:12" pos:end="49:22">(<expr pos:start="49:13" pos:end="49:21"><name pos:start="49:13" pos:end="49:21">is_listen</name></expr>)</condition> <block pos:start="49:24" pos:end="53:9">{<block_content pos:start="51:13" pos:end="51:40">

            <expr_stmt pos:start="51:13" pos:end="51:40"><expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:14">fd</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:39"><name pos:start="51:18" pos:end="51:33">unix_listen_opts</name><argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><name pos:start="51:35" pos:end="51:38">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="57:9">else <block pos:start="53:16" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:41">

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:14">fd</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <call pos:start="55:18" pos:end="55:40"><name pos:start="55:18" pos:end="55:34">unix_connect_opts</name><argument_list pos:start="55:35" pos:end="55:40">(<argument pos:start="55:36" pos:end="55:39"><expr pos:start="55:36" pos:end="55:39"><name pos:start="55:36" pos:end="55:39">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="59:7" pos:end="71:5">else <block pos:start="59:12" pos:end="71:5">{<block_content pos:start="61:9" pos:end="69:9">

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:22">(<expr pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:21">is_listen</name></expr>)</condition> <block pos:start="61:24" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:43">

            <expr_stmt pos:start="63:13" pos:end="63:43"><expr pos:start="63:13" pos:end="63:42"><name pos:start="63:13" pos:end="63:14">fd</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:42"><name pos:start="63:18" pos:end="63:33">inet_listen_opts</name><argument_list pos:start="63:34" pos:end="63:42">(<argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><name pos:start="63:35" pos:end="63:38">opts</name></expr></argument>, <argument pos:start="63:41" pos:end="63:41"><expr pos:start="63:41" pos:end="63:41"><literal type="number" pos:start="63:41" pos:end="63:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="69:9">else <block pos:start="65:16" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:41">

            <expr_stmt pos:start="67:13" pos:end="67:41"><expr pos:start="67:13" pos:end="67:40"><name pos:start="67:13" pos:end="67:14">fd</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:40"><name pos:start="67:18" pos:end="67:34">inet_connect_opts</name><argument_list pos:start="67:35" pos:end="67:40">(<argument pos:start="67:36" pos:end="67:39"><expr pos:start="67:36" pos:end="67:39"><name pos:start="67:36" pos:end="67:39">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:15">(<expr pos:start="73:9" pos:end="73:14"><name pos:start="73:9" pos:end="73:10">fd</name> <operator pos:start="73:12" pos:end="73:12">&lt;</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>)</condition> <block pos:start="73:17" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:21"><expr pos:start="75:9" pos:end="75:20"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <operator pos:start="75:15" pos:end="75:15">-</operator><name pos:start="75:16" pos:end="75:20">errno</name></expr>;</expr_stmt>

        <goto pos:start="77:9" pos:end="77:18">goto <name pos:start="77:14" pos:end="77:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="85:32"><if pos:start="83:5" pos:end="85:32">if <condition pos:start="83:8" pos:end="83:24">(<expr pos:start="83:9" pos:end="83:23"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:23">is_waitconnect</name></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:32"><block_content pos:start="85:9" pos:end="85:32">

        <expr_stmt pos:start="85:9" pos:end="85:32"><expr pos:start="85:9" pos:end="85:31"><call pos:start="85:9" pos:end="85:31"><name pos:start="85:9" pos:end="85:27">socket_set_nonblock</name><argument_list pos:start="85:28" pos:end="85:31">(<argument pos:start="85:29" pos:end="85:30"><expr pos:start="85:29" pos:end="85:30"><name pos:start="85:29" pos:end="85:30">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:21"><expr pos:start="89:5" pos:end="89:20"><name pos:start="89:5" pos:end="89:16"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:16">connected</name></name> <operator pos:start="89:18" pos:end="89:18">=</operator> <literal type="number" pos:start="89:20" pos:end="89:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:15"><expr pos:start="91:5" pos:end="91:14"><name pos:start="91:5" pos:end="91:9"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:9">fd</name></name> <operator pos:start="91:11" pos:end="91:11">=</operator> <operator pos:start="91:13" pos:end="91:13">-</operator><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:22"><expr pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:16">listen_fd</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <operator pos:start="93:20" pos:end="93:20">-</operator><literal type="number" pos:start="93:21" pos:end="93:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:18"><expr pos:start="95:5" pos:end="95:17"><name pos:start="95:5" pos:end="95:12"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:12">msgfd</name></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:25"><expr pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:14"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:14">is_unix</name></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:24">is_unix</name></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:43"><expr pos:start="99:5" pos:end="99:42"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:17">do_nodelay</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:30">do_nodelay</name> <operator pos:start="99:32" pos:end="99:33">&amp;&amp;</operator> <operator pos:start="99:35" pos:end="99:35">!</operator><name pos:start="99:36" pos:end="99:42">is_unix</name></expr>;</expr_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:20"><expr pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:15"><name pos:start="103:5" pos:end="103:7">chr</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:15">opaque</name></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:19">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:18"><name pos:start="105:5" pos:end="105:7">chr</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:18">chr_write</name></name> <operator pos:start="105:20" pos:end="105:20">=</operator> <name pos:start="105:22" pos:end="105:34">tcp_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:35"><expr pos:start="107:5" pos:end="107:34"><name pos:start="107:5" pos:end="107:18"><name pos:start="107:5" pos:end="107:7">chr</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:18">chr_close</name></name> <operator pos:start="107:20" pos:end="107:20">=</operator> <name pos:start="107:22" pos:end="107:34">tcp_chr_close</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:35"><expr pos:start="109:5" pos:end="109:34"><name pos:start="109:5" pos:end="109:18"><name pos:start="109:5" pos:end="109:7">chr</name><operator pos:start="109:8" pos:end="109:9">-&gt;</operator><name pos:start="109:10" pos:end="109:18">get_msgfd</name></name> <operator pos:start="109:20" pos:end="109:20">=</operator> <name pos:start="109:22" pos:end="109:34">tcp_get_msgfd</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:45"><expr pos:start="111:5" pos:end="111:44"><name pos:start="111:5" pos:end="111:23"><name pos:start="111:5" pos:end="111:7">chr</name><operator pos:start="111:8" pos:end="111:9">-&gt;</operator><name pos:start="111:10" pos:end="111:23">chr_add_client</name></name> <operator pos:start="111:25" pos:end="111:25">=</operator> <name pos:start="111:27" pos:end="111:44">tcp_chr_add_client</name></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="137:5"><if pos:start="115:5" pos:end="127:5">if <condition pos:start="115:8" pos:end="115:18">(<expr pos:start="115:9" pos:end="115:17"><name pos:start="115:9" pos:end="115:17">is_listen</name></expr>)</condition> <block pos:start="115:20" pos:end="127:5">{<block_content pos:start="117:9" pos:end="123:32">

        <expr_stmt pos:start="117:9" pos:end="117:26"><expr pos:start="117:9" pos:end="117:25"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:20">listen_fd</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:25">fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:76"><expr pos:start="119:9" pos:end="119:75"><call pos:start="119:9" pos:end="119:75"><name pos:start="119:9" pos:end="119:28">qemu_set_fd_handler2</name><argument_list pos:start="119:29" pos:end="119:75">(<argument pos:start="119:30" pos:end="119:41"><expr pos:start="119:30" pos:end="119:41"><name pos:start="119:30" pos:end="119:41"><name pos:start="119:30" pos:end="119:30">s</name><operator pos:start="119:31" pos:end="119:32">-&gt;</operator><name pos:start="119:33" pos:end="119:41">listen_fd</name></name></expr></argument>, <argument pos:start="119:44" pos:end="119:47"><expr pos:start="119:44" pos:end="119:47"><name pos:start="119:44" pos:end="119:47">NULL</name></expr></argument>, <argument pos:start="119:50" pos:end="119:63"><expr pos:start="119:50" pos:end="119:63"><name pos:start="119:50" pos:end="119:63">tcp_chr_accept</name></expr></argument>, <argument pos:start="119:66" pos:end="119:69"><expr pos:start="119:66" pos:end="119:69"><name pos:start="119:66" pos:end="119:69">NULL</name></expr></argument>, <argument pos:start="119:72" pos:end="119:74"><expr pos:start="119:72" pos:end="119:74"><name pos:start="119:72" pos:end="119:74">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="121:9" pos:end="123:32"><if pos:start="121:9" pos:end="123:32">if <condition pos:start="121:12" pos:end="121:22">(<expr pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:21">is_telnet</name></expr>)</condition><block type="pseudo" pos:start="123:13" pos:end="123:32"><block_content pos:start="123:13" pos:end="123:32">

            <expr_stmt pos:start="123:13" pos:end="123:32"><expr pos:start="123:13" pos:end="123:31"><name pos:start="123:13" pos:end="123:27"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:27">do_telnetopt</name></name> <operator pos:start="123:29" pos:end="123:29">=</operator> <literal type="number" pos:start="123:31" pos:end="123:31">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    </block_content>}</block></if> <else pos:start="127:7" pos:end="137:5">else <block pos:start="127:12" pos:end="137:5">{<block_content pos:start="129:9" pos:end="135:29">

        <expr_stmt pos:start="129:9" pos:end="129:25"><expr pos:start="129:9" pos:end="129:24"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:20">connected</name></name> <operator pos:start="129:22" pos:end="129:22">=</operator> <literal type="number" pos:start="129:24" pos:end="129:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:19"><expr pos:start="131:9" pos:end="131:18"><name pos:start="131:9" pos:end="131:13"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:13">fd</name></name> <operator pos:start="131:15" pos:end="131:15">=</operator> <name pos:start="131:17" pos:end="131:18">fd</name></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:31"><expr pos:start="133:9" pos:end="133:30"><call pos:start="133:9" pos:end="133:30"><name pos:start="133:9" pos:end="133:26">socket_set_nodelay</name><argument_list pos:start="133:27" pos:end="133:30">(<argument pos:start="133:28" pos:end="133:29"><expr pos:start="133:28" pos:end="133:29"><name pos:start="133:28" pos:end="133:29">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><call pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:23">tcp_chr_connect</name><argument_list pos:start="135:24" pos:end="135:28">(<argument pos:start="135:25" pos:end="135:27"><expr pos:start="135:25" pos:end="135:27"><name pos:start="135:25" pos:end="135:27">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="141:5" pos:end="141:44">/* for "info chardev" monitor command */</comment>

    <expr_stmt pos:start="143:5" pos:end="143:34"><expr pos:start="143:5" pos:end="143:33"><name pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:7">chr</name><operator pos:start="143:8" pos:end="143:9">-&gt;</operator><name pos:start="143:10" pos:end="143:17">filename</name></name> <operator pos:start="143:19" pos:end="143:19">=</operator> <call pos:start="143:21" pos:end="143:33"><name pos:start="143:21" pos:end="143:28">g_malloc</name><argument_list pos:start="143:29" pos:end="143:33">(<argument pos:start="143:30" pos:end="143:32"><expr pos:start="143:30" pos:end="143:32"><literal type="number" pos:start="143:30" pos:end="143:32">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="169:5"><if pos:start="145:5" pos:end="153:5">if <condition pos:start="145:8" pos:end="145:16">(<expr pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:15">is_unix</name></expr>)</condition> <block pos:start="145:18" pos:end="153:5">{<block_content pos:start="147:9" pos:end="151:72">

        <expr_stmt pos:start="147:9" pos:end="151:72"><expr pos:start="147:9" pos:end="151:71"><call pos:start="147:9" pos:end="151:71"><name pos:start="147:9" pos:end="147:16">snprintf</name><argument_list pos:start="147:17" pos:end="151:71">(<argument pos:start="147:18" pos:end="147:30"><expr pos:start="147:18" pos:end="147:30"><name pos:start="147:18" pos:end="147:30"><name pos:start="147:18" pos:end="147:20">chr</name><operator pos:start="147:21" pos:end="147:22">-&gt;</operator><name pos:start="147:23" pos:end="147:30">filename</name></name></expr></argument>, <argument pos:start="147:33" pos:end="147:35"><expr pos:start="147:33" pos:end="147:35"><literal type="number" pos:start="147:33" pos:end="147:35">256</literal></expr></argument>, <argument pos:start="147:38" pos:end="147:48"><expr pos:start="147:38" pos:end="147:48"><literal type="string" pos:start="147:38" pos:end="147:48">"unix:%s%s"</literal></expr></argument>,

                 <argument pos:start="149:18" pos:end="149:43"><expr pos:start="149:18" pos:end="149:43"><call pos:start="149:18" pos:end="149:43"><name pos:start="149:18" pos:end="149:29">qemu_opt_get</name><argument_list pos:start="149:30" pos:end="149:43">(<argument pos:start="149:31" pos:end="149:34"><expr pos:start="149:31" pos:end="149:34"><name pos:start="149:31" pos:end="149:34">opts</name></expr></argument>, <argument pos:start="149:37" pos:end="149:42"><expr pos:start="149:37" pos:end="149:42"><literal type="string" pos:start="149:37" pos:end="149:42">"path"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="151:18" pos:end="151:70"><expr pos:start="151:18" pos:end="151:70"><ternary pos:start="151:18" pos:end="151:70"><condition pos:start="151:18" pos:end="151:55"><expr pos:start="151:18" pos:end="151:53"><call pos:start="151:18" pos:end="151:53"><name pos:start="151:18" pos:end="151:34">qemu_opt_get_bool</name><argument_list pos:start="151:35" pos:end="151:53">(<argument pos:start="151:36" pos:end="151:39"><expr pos:start="151:36" pos:end="151:39"><name pos:start="151:36" pos:end="151:39">opts</name></expr></argument>, <argument pos:start="151:42" pos:end="151:49"><expr pos:start="151:42" pos:end="151:49"><literal type="string" pos:start="151:42" pos:end="151:49">"server"</literal></expr></argument>, <argument pos:start="151:52" pos:end="151:52"><expr pos:start="151:52" pos:end="151:52"><literal type="number" pos:start="151:52" pos:end="151:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="151:57" pos:end="151:65"> <expr pos:start="151:57" pos:end="151:65"><literal type="string" pos:start="151:57" pos:end="151:65">",server"</literal></expr> </then><else pos:start="151:67" pos:end="151:70">: <expr pos:start="151:69" pos:end="151:70"><literal type="string" pos:start="151:69" pos:end="151:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="153:7" pos:end="161:5">else if <condition pos:start="153:15" pos:end="153:25">(<expr pos:start="153:16" pos:end="153:24"><name pos:start="153:16" pos:end="153:24">is_telnet</name></expr>)</condition> <block pos:start="153:27" pos:end="161:5">{<block_content pos:start="155:9" pos:end="159:72">

        <expr_stmt pos:start="155:9" pos:end="159:72"><expr pos:start="155:9" pos:end="159:71"><call pos:start="155:9" pos:end="159:71"><name pos:start="155:9" pos:end="155:16">snprintf</name><argument_list pos:start="155:17" pos:end="159:71">(<argument pos:start="155:18" pos:end="155:30"><expr pos:start="155:18" pos:end="155:30"><name pos:start="155:18" pos:end="155:30"><name pos:start="155:18" pos:end="155:20">chr</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:30">filename</name></name></expr></argument>, <argument pos:start="155:33" pos:end="155:35"><expr pos:start="155:33" pos:end="155:35"><literal type="number" pos:start="155:33" pos:end="155:35">256</literal></expr></argument>, <argument pos:start="155:38" pos:end="155:53"><expr pos:start="155:38" pos:end="155:53"><literal type="string" pos:start="155:38" pos:end="155:53">"telnet:%s:%s%s"</literal></expr></argument>,

                 <argument pos:start="157:18" pos:end="157:43"><expr pos:start="157:18" pos:end="157:43"><call pos:start="157:18" pos:end="157:43"><name pos:start="157:18" pos:end="157:29">qemu_opt_get</name><argument_list pos:start="157:30" pos:end="157:43">(<argument pos:start="157:31" pos:end="157:34"><expr pos:start="157:31" pos:end="157:34"><name pos:start="157:31" pos:end="157:34">opts</name></expr></argument>, <argument pos:start="157:37" pos:end="157:42"><expr pos:start="157:37" pos:end="157:42"><literal type="string" pos:start="157:37" pos:end="157:42">"host"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:46" pos:end="157:71"><expr pos:start="157:46" pos:end="157:71"><call pos:start="157:46" pos:end="157:71"><name pos:start="157:46" pos:end="157:57">qemu_opt_get</name><argument_list pos:start="157:58" pos:end="157:71">(<argument pos:start="157:59" pos:end="157:62"><expr pos:start="157:59" pos:end="157:62"><name pos:start="157:59" pos:end="157:62">opts</name></expr></argument>, <argument pos:start="157:65" pos:end="157:70"><expr pos:start="157:65" pos:end="157:70"><literal type="string" pos:start="157:65" pos:end="157:70">"port"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="159:18" pos:end="159:70"><expr pos:start="159:18" pos:end="159:70"><ternary pos:start="159:18" pos:end="159:70"><condition pos:start="159:18" pos:end="159:55"><expr pos:start="159:18" pos:end="159:53"><call pos:start="159:18" pos:end="159:53"><name pos:start="159:18" pos:end="159:34">qemu_opt_get_bool</name><argument_list pos:start="159:35" pos:end="159:53">(<argument pos:start="159:36" pos:end="159:39"><expr pos:start="159:36" pos:end="159:39"><name pos:start="159:36" pos:end="159:39">opts</name></expr></argument>, <argument pos:start="159:42" pos:end="159:49"><expr pos:start="159:42" pos:end="159:49"><literal type="string" pos:start="159:42" pos:end="159:49">"server"</literal></expr></argument>, <argument pos:start="159:52" pos:end="159:52"><expr pos:start="159:52" pos:end="159:52"><literal type="number" pos:start="159:52" pos:end="159:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="159:57" pos:end="159:65"> <expr pos:start="159:57" pos:end="159:65"><literal type="string" pos:start="159:57" pos:end="159:65">",server"</literal></expr> </then><else pos:start="159:67" pos:end="159:70">: <expr pos:start="159:69" pos:end="159:70"><literal type="string" pos:start="159:69" pos:end="159:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="169:5">else <block pos:start="161:12" pos:end="169:5">{<block_content pos:start="163:9" pos:end="167:72">

        <expr_stmt pos:start="163:9" pos:end="167:72"><expr pos:start="163:9" pos:end="167:71"><call pos:start="163:9" pos:end="167:71"><name pos:start="163:9" pos:end="163:16">snprintf</name><argument_list pos:start="163:17" pos:end="167:71">(<argument pos:start="163:18" pos:end="163:30"><expr pos:start="163:18" pos:end="163:30"><name pos:start="163:18" pos:end="163:30"><name pos:start="163:18" pos:end="163:20">chr</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:30">filename</name></name></expr></argument>, <argument pos:start="163:33" pos:end="163:35"><expr pos:start="163:33" pos:end="163:35"><literal type="number" pos:start="163:33" pos:end="163:35">256</literal></expr></argument>, <argument pos:start="163:38" pos:end="163:50"><expr pos:start="163:38" pos:end="163:50"><literal type="string" pos:start="163:38" pos:end="163:50">"tcp:%s:%s%s"</literal></expr></argument>,

                 <argument pos:start="165:18" pos:end="165:43"><expr pos:start="165:18" pos:end="165:43"><call pos:start="165:18" pos:end="165:43"><name pos:start="165:18" pos:end="165:29">qemu_opt_get</name><argument_list pos:start="165:30" pos:end="165:43">(<argument pos:start="165:31" pos:end="165:34"><expr pos:start="165:31" pos:end="165:34"><name pos:start="165:31" pos:end="165:34">opts</name></expr></argument>, <argument pos:start="165:37" pos:end="165:42"><expr pos:start="165:37" pos:end="165:42"><literal type="string" pos:start="165:37" pos:end="165:42">"host"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:46" pos:end="165:71"><expr pos:start="165:46" pos:end="165:71"><call pos:start="165:46" pos:end="165:71"><name pos:start="165:46" pos:end="165:57">qemu_opt_get</name><argument_list pos:start="165:58" pos:end="165:71">(<argument pos:start="165:59" pos:end="165:62"><expr pos:start="165:59" pos:end="165:62"><name pos:start="165:59" pos:end="165:62">opts</name></expr></argument>, <argument pos:start="165:65" pos:end="165:70"><expr pos:start="165:65" pos:end="165:70"><literal type="string" pos:start="165:65" pos:end="165:70">"port"</literal></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="167:18" pos:end="167:70"><expr pos:start="167:18" pos:end="167:70"><ternary pos:start="167:18" pos:end="167:70"><condition pos:start="167:18" pos:end="167:55"><expr pos:start="167:18" pos:end="167:53"><call pos:start="167:18" pos:end="167:53"><name pos:start="167:18" pos:end="167:34">qemu_opt_get_bool</name><argument_list pos:start="167:35" pos:end="167:53">(<argument pos:start="167:36" pos:end="167:39"><expr pos:start="167:36" pos:end="167:39"><name pos:start="167:36" pos:end="167:39">opts</name></expr></argument>, <argument pos:start="167:42" pos:end="167:49"><expr pos:start="167:42" pos:end="167:49"><literal type="string" pos:start="167:42" pos:end="167:49">"server"</literal></expr></argument>, <argument pos:start="167:52" pos:end="167:52"><expr pos:start="167:52" pos:end="167:52"><literal type="number" pos:start="167:52" pos:end="167:52">0</literal></expr></argument>)</argument_list></call></expr> ?</condition><then pos:start="167:57" pos:end="167:65"> <expr pos:start="167:57" pos:end="167:65"><literal type="string" pos:start="167:57" pos:end="167:65">",server"</literal></expr> </then><else pos:start="167:67" pos:end="167:70">: <expr pos:start="167:69" pos:end="167:70"><literal type="string" pos:start="167:69" pos:end="167:70">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="173:5" pos:end="183:5"><if pos:start="173:5" pos:end="183:5">if <condition pos:start="173:8" pos:end="173:36">(<expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:17">is_listen</name> <operator pos:start="173:19" pos:end="173:20">&amp;&amp;</operator> <name pos:start="173:22" pos:end="173:35">is_waitconnect</name></expr>)</condition> <block pos:start="173:38" pos:end="183:5">{<block_content pos:start="175:9" pos:end="181:42">

        <expr_stmt pos:start="175:9" pos:end="177:30"><expr pos:start="175:9" pos:end="177:29"><call pos:start="175:9" pos:end="177:29"><name pos:start="175:9" pos:end="175:14">printf</name><argument_list pos:start="175:15" pos:end="177:29">(<argument pos:start="175:16" pos:end="175:53"><expr pos:start="175:16" pos:end="175:53"><literal type="string" pos:start="175:16" pos:end="175:53">"QEMU waiting for connection on: %s\n"</literal></expr></argument>,

               <argument pos:start="177:16" pos:end="177:28"><expr pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:28"><name pos:start="177:16" pos:end="177:18">chr</name><operator pos:start="177:19" pos:end="177:20">-&gt;</operator><name pos:start="177:21" pos:end="177:28">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:28"><expr pos:start="179:9" pos:end="179:27"><call pos:start="179:9" pos:end="179:27"><name pos:start="179:9" pos:end="179:22">tcp_chr_accept</name><argument_list pos:start="179:23" pos:end="179:27">(<argument pos:start="179:24" pos:end="179:26"><expr pos:start="179:24" pos:end="179:26"><name pos:start="179:24" pos:end="179:26">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:42"><expr pos:start="181:9" pos:end="181:41"><call pos:start="181:9" pos:end="181:41"><name pos:start="181:9" pos:end="181:27">socket_set_nonblock</name><argument_list pos:start="181:28" pos:end="181:41">(<argument pos:start="181:29" pos:end="181:40"><expr pos:start="181:29" pos:end="181:40"><name pos:start="181:29" pos:end="181:40"><name pos:start="181:29" pos:end="181:29">s</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:40">listen_fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:16"><expr pos:start="187:5" pos:end="187:15"><operator pos:start="187:5" pos:end="187:5">*</operator><name pos:start="187:6" pos:end="187:9">_chr</name> <operator pos:start="187:11" pos:end="187:11">=</operator> <name pos:start="187:13" pos:end="187:15">chr</name></expr>;</expr_stmt>

    <return pos:start="189:5" pos:end="189:13">return <expr pos:start="189:12" pos:end="189:12"><literal type="number" pos:start="189:12" pos:end="189:12">0</literal></expr>;</return>



 <label pos:start="193:2" pos:end="193:6"><name pos:start="193:2" pos:end="193:5">fail</name>:</label>

    <if_stmt pos:start="195:5" pos:end="197:24"><if pos:start="195:5" pos:end="197:24">if <condition pos:start="195:8" pos:end="195:16">(<expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:10">fd</name> <operator pos:start="195:12" pos:end="195:13">&gt;=</operator> <literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>)</condition><block type="pseudo" pos:start="197:9" pos:end="197:24"><block_content pos:start="197:9" pos:end="197:24">

        <expr_stmt pos:start="197:9" pos:end="197:24"><expr pos:start="197:9" pos:end="197:23"><call pos:start="197:9" pos:end="197:23"><name pos:start="197:9" pos:end="197:19">closesocket</name><argument_list pos:start="197:20" pos:end="197:23">(<argument pos:start="197:21" pos:end="197:22"><expr pos:start="197:21" pos:end="197:22"><name pos:start="197:21" pos:end="197:22">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:14"><expr pos:start="199:5" pos:end="199:13"><call pos:start="199:5" pos:end="199:13"><name pos:start="199:5" pos:end="199:10">g_free</name><argument_list pos:start="199:11" pos:end="199:13">(<argument pos:start="199:12" pos:end="199:12"><expr pos:start="199:12" pos:end="199:12"><name pos:start="199:12" pos:end="199:12">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:16"><expr pos:start="201:5" pos:end="201:15"><call pos:start="201:5" pos:end="201:15"><name pos:start="201:5" pos:end="201:10">g_free</name><argument_list pos:start="201:11" pos:end="201:15">(<argument pos:start="201:12" pos:end="201:14"><expr pos:start="201:12" pos:end="201:14"><name pos:start="201:12" pos:end="201:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="203:5" pos:end="203:15">return <expr pos:start="203:12" pos:end="203:14"><name pos:start="203:12" pos:end="203:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
