<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4365.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:17">ExitStatus</name></type> <name pos:start="1:19" pos:end="1:23">op_ex</name><parameter_list pos:start="1:24" pos:end="1:53">(<parameter pos:start="1:25" pos:end="1:39"><decl pos:start="1:25" pos:end="1:39"><type pos:start="1:25" pos:end="1:39"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:52"><decl pos:start="1:42" pos:end="1:52"><type pos:start="1:42" pos:end="1:52"><name pos:start="1:42" pos:end="1:49">DisasOps</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">o</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="27:5" pos:end="47:19">

    <comment type="block" pos:start="5:5" pos:end="23:64">/* ??? Perhaps a better way to implement EXECUTE is to set a bit in

       tb-&gt;flags, (ab)use the tb-&gt;cs_base field as the address of

       the template in memory, and grab 8 bits of tb-&gt;flags/cflags for

       the contents of the register.  We would then recognize all this

       in gen_intermediate_code_internal, generating code for exactly

       one instruction.  This new TB then gets executed normally.



       On the other hand, this seems to be mostly used for modifying

       MVC inside of memcpy, which needs a helper call anyway.  So

       perhaps this doesn't bear thinking about any further.  */</comment>



    <decl_stmt pos:start="27:5" pos:end="27:17"><decl pos:start="27:5" pos:end="27:16"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:12">TCGv_i64</name></type> <name pos:start="27:14" pos:end="27:16">tmp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><call pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:19">update_psw_addr</name><argument_list pos:start="31:20" pos:end="31:22">(<argument pos:start="31:21" pos:end="31:21"><expr pos:start="31:21" pos:end="31:21"><name pos:start="31:21" pos:end="31:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:20"><expr pos:start="33:5" pos:end="33:19"><call pos:start="33:5" pos:end="33:19"><name pos:start="33:5" pos:end="33:16">update_cc_op</name><argument_list pos:start="33:17" pos:end="33:19">(<argument pos:start="33:18" pos:end="33:18"><expr pos:start="33:18" pos:end="33:18"><name pos:start="33:18" pos:end="33:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:7">tmp</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:35"><name pos:start="37:11" pos:end="37:23">tcg_const_i64</name><argument_list pos:start="37:24" pos:end="37:35">(<argument pos:start="37:25" pos:end="37:34"><expr pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:34"><name pos:start="37:25" pos:end="37:25">s</name><operator pos:start="37:26" pos:end="37:27">-&gt;</operator><name pos:start="37:28" pos:end="37:34">next_pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:62"><expr pos:start="39:5" pos:end="39:61"><call pos:start="39:5" pos:end="39:61"><name pos:start="39:5" pos:end="39:17">gen_helper_ex</name><argument_list pos:start="39:18" pos:end="39:61">(<argument pos:start="39:19" pos:end="39:23"><expr pos:start="39:19" pos:end="39:23"><name pos:start="39:19" pos:end="39:23">cc_op</name></expr></argument>, <argument pos:start="39:26" pos:end="39:32"><expr pos:start="39:26" pos:end="39:32"><name pos:start="39:26" pos:end="39:32">cpu_env</name></expr></argument>, <argument pos:start="39:35" pos:end="39:39"><expr pos:start="39:35" pos:end="39:39"><name pos:start="39:35" pos:end="39:39">cc_op</name></expr></argument>, <argument pos:start="39:42" pos:end="39:47"><expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:42">o</name><operator pos:start="39:43" pos:end="39:44">-&gt;</operator><name pos:start="39:45" pos:end="39:47">in1</name></name></expr></argument>, <argument pos:start="39:50" pos:end="39:55"><expr pos:start="39:50" pos:end="39:55"><name pos:start="39:50" pos:end="39:55"><name pos:start="39:50" pos:end="39:50">o</name><operator pos:start="39:51" pos:end="39:52">-&gt;</operator><name pos:start="39:53" pos:end="39:55">in2</name></name></expr></argument>, <argument pos:start="39:58" pos:end="39:60"><expr pos:start="39:58" pos:end="39:60"><name pos:start="39:58" pos:end="39:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><call pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:21">tcg_temp_free_i64</name><argument_list pos:start="41:22" pos:end="41:26">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:21"><expr pos:start="45:5" pos:end="45:20"><call pos:start="45:5" pos:end="45:20"><name pos:start="45:5" pos:end="45:17">set_cc_static</name><argument_list pos:start="45:18" pos:end="45:20">(<argument pos:start="45:19" pos:end="45:19"><expr pos:start="45:19" pos:end="45:19"><name pos:start="45:19" pos:end="45:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="47:5" pos:end="47:19">return <expr pos:start="47:12" pos:end="47:18"><name pos:start="47:12" pos:end="47:18">NO_EXIT</name></expr>;</return>

</block_content>}</block></function>
</unit>
