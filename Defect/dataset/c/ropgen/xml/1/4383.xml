<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4383.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:43"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:14">cpu_reset</name><parameter_list pos:start="1:15" pos:end="1:32">(<parameter pos:start="1:16" pos:end="1:31"><decl pos:start="1:16" pos:end="1:31"><type pos:start="1:16" pos:end="1:28"><name pos:start="1:16" pos:end="1:26">CPUX86State</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier></type><name pos:start="1:29" pos:end="1:31">env</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="45:43">{<block_content pos:start="3:5" pos:end="45:43">
    <decl_stmt pos:start="3:5" pos:end="3:10"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>;</decl_stmt>
    <expr_stmt pos:start="4:5" pos:end="4:55"><expr pos:start="4:5" pos:end="4:54"><call pos:start="4:5" pos:end="4:54"><name pos:start="4:5" pos:end="4:10">memset</name><argument_list pos:start="4:11" pos:end="4:54">(<argument pos:start="4:12" pos:end="4:14"><expr pos:start="4:12" pos:end="4:14"><name pos:start="4:12" pos:end="4:14">env</name></expr></argument>, <argument pos:start="4:17" pos:end="4:17"><expr pos:start="4:17" pos:end="4:17"><literal type="number" pos:start="4:17" pos:end="4:17">0</literal></expr></argument>, <argument pos:start="4:20" pos:end="4:53"><expr pos:start="4:20" pos:end="4:53"><call pos:start="4:20" pos:end="4:53"><name pos:start="4:20" pos:end="4:27">offsetof</name><argument_list pos:start="4:28" pos:end="4:53">(<argument pos:start="4:29" pos:end="4:39"><expr pos:start="4:29" pos:end="4:39"><name pos:start="4:29" pos:end="4:39">CPUX86State</name></expr></argument>, <argument pos:start="4:42" pos:end="4:52"><expr pos:start="4:42" pos:end="4:52"><name pos:start="4:42" pos:end="4:52">breakpoints</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="5:5" pos:end="5:22"><expr pos:start="5:5" pos:end="5:21"><call pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:13">tlb_flush</name><argument_list pos:start="5:14" pos:end="5:21">(<argument pos:start="5:15" pos:end="5:17"><expr pos:start="5:15" pos:end="5:17"><name pos:start="5:15" pos:end="5:17">env</name></expr></argument>, <argument pos:start="5:20" pos:end="5:20"><expr pos:start="5:20" pos:end="5:20"><literal type="number" pos:start="5:20" pos:end="5:20">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="6:5" pos:end="9:0"><expr pos:start="6:5" pos:end="6:27"><name pos:start="6:5" pos:end="6:22"><name pos:start="6:5" pos:end="6:7">env</name><operator pos:start="6:8" pos:end="6:9">-&gt;</operator><name pos:start="6:10" pos:end="6:22">old_exception</name></name> <operator pos:start="6:24" pos:end="6:24">=</operator> <operator pos:start="6:26" pos:end="6:26">-</operator><literal type="number" pos:start="6:27" pos:end="6:27">1</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="7:5" pos:end="7:29">/* init to reset state */</comment>
<cpp:ifdef pos:start="8:1" pos:end="8:21">#<cpp:directive pos:start="8:2" pos:end="8:6">ifdef</cpp:directive> <name pos:start="8:8" pos:end="8:21">CONFIG_SOFTMMU</name></cpp:ifdef>
    <expr_stmt pos:start="9:5" pos:end="11:0"><expr pos:start="9:5" pos:end="9:34"><name pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:15">hflags</name></name> <operator pos:start="9:17" pos:end="9:18">|=</operator> <name pos:start="9:20" pos:end="9:34">HF_SOFTMMU_MASK</name></expr>;</expr_stmt>
<cpp:endif pos:start="10:1" pos:end="10:6">#<cpp:directive pos:start="10:2" pos:end="10:6">endif</cpp:directive></cpp:endif>
    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:16">hflags2</name></name> <operator pos:start="11:18" pos:end="11:19">|=</operator> <name pos:start="11:21" pos:end="11:32">HF2_GIF_MASK</name></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:40"><expr pos:start="12:5" pos:end="12:39"><call pos:start="12:5" pos:end="12:39"><name pos:start="12:5" pos:end="12:22">cpu_x86_update_cr0</name><argument_list pos:start="12:23" pos:end="12:39">(<argument pos:start="12:24" pos:end="12:26"><expr pos:start="12:24" pos:end="12:26"><name pos:start="12:24" pos:end="12:26">env</name></expr></argument>, <argument pos:start="12:29" pos:end="12:38"><expr pos:start="12:29" pos:end="12:38"><literal type="number" pos:start="12:29" pos:end="12:38">0x60000010</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:25"><expr pos:start="13:5" pos:end="13:24"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:17">a20_mask</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <operator pos:start="13:21" pos:end="13:21">~</operator><literal type="number" pos:start="13:22" pos:end="13:24">0x0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:26"><expr pos:start="14:5" pos:end="14:25"><name pos:start="14:5" pos:end="14:15"><name pos:start="14:5" pos:end="14:7">env</name><operator pos:start="14:8" pos:end="14:9">-&gt;</operator><name pos:start="14:10" pos:end="14:15">smbase</name></name> <operator pos:start="14:17" pos:end="14:17">=</operator> <literal type="number" pos:start="14:19" pos:end="14:25">0x30000</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:7">env</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">idt</name><operator pos:start="15:13" pos:end="15:13">.</operator><name pos:start="15:14" pos:end="15:18">limit</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <literal type="number" pos:start="15:22" pos:end="15:27">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:28"><expr pos:start="16:5" pos:end="16:27"><name pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:7">env</name><operator pos:start="16:8" pos:end="16:9">-&gt;</operator><name pos:start="16:10" pos:end="16:12">gdt</name><operator pos:start="16:13" pos:end="16:13">.</operator><name pos:start="16:14" pos:end="16:18">limit</name></name> <operator pos:start="16:20" pos:end="16:20">=</operator> <literal type="number" pos:start="16:22" pos:end="16:27">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:28"><expr pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:7">env</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:12">ldt</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:18">limit</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:27">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:58"><expr pos:start="18:5" pos:end="18:57"><name pos:start="18:5" pos:end="18:18"><name pos:start="18:5" pos:end="18:7">env</name><operator pos:start="18:8" pos:end="18:9">-&gt;</operator><name pos:start="18:10" pos:end="18:12">ldt</name><operator pos:start="18:13" pos:end="18:13">.</operator><name pos:start="18:14" pos:end="18:18">flags</name></name> <operator pos:start="18:20" pos:end="18:20">=</operator> <name pos:start="18:22" pos:end="18:32">DESC_P_MASK</name> <operator pos:start="18:34" pos:end="18:34">|</operator> <operator pos:start="18:36" pos:end="18:36">(</operator><literal type="number" pos:start="18:37" pos:end="18:37">2</literal> <operator pos:start="18:39" pos:end="18:40">&lt;&lt;</operator> <name pos:start="18:42" pos:end="18:56">DESC_TYPE_SHIFT</name><operator pos:start="18:57" pos:end="18:57">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">env</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:11">tr</name><operator pos:start="19:12" pos:end="19:12">.</operator><name pos:start="19:13" pos:end="19:17">limit</name></name> <operator pos:start="19:19" pos:end="19:19">=</operator> <literal type="number" pos:start="19:21" pos:end="19:26">0xffff</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:58"><expr pos:start="20:5" pos:end="20:57"><name pos:start="20:5" pos:end="20:17"><name pos:start="20:5" pos:end="20:7">env</name><operator pos:start="20:8" pos:end="20:9">-&gt;</operator><name pos:start="20:10" pos:end="20:11">tr</name><operator pos:start="20:12" pos:end="20:12">.</operator><name pos:start="20:13" pos:end="20:17">flags</name></name> <operator pos:start="20:19" pos:end="20:19">=</operator> <name pos:start="20:21" pos:end="20:31">DESC_P_MASK</name> <operator pos:start="20:33" pos:end="20:33">|</operator> <operator pos:start="20:35" pos:end="20:35">(</operator><literal type="number" pos:start="20:36" pos:end="20:37">11</literal> <operator pos:start="20:39" pos:end="20:40">&lt;&lt;</operator> <name pos:start="20:42" pos:end="20:56">DESC_TYPE_SHIFT</name><operator pos:start="20:57" pos:end="20:57">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="22:83"><expr pos:start="21:5" pos:end="22:82"><call pos:start="21:5" pos:end="22:82"><name pos:start="21:5" pos:end="21:26">cpu_x86_load_seg_cache</name><argument_list pos:start="21:27" pos:end="22:82">(<argument pos:start="21:28" pos:end="21:30"><expr pos:start="21:28" pos:end="21:30"><name pos:start="21:28" pos:end="21:30">env</name></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">R_CS</name></expr></argument>, <argument pos:start="21:39" pos:end="21:44"><expr pos:start="21:39" pos:end="21:44"><literal type="number" pos:start="21:39" pos:end="21:44">0xf000</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:56"><expr pos:start="21:47" pos:end="21:56"><literal type="number" pos:start="21:47" pos:end="21:56">0xffff0000</literal></expr></argument>, <argument pos:start="21:59" pos:end="21:64"><expr pos:start="21:59" pos:end="21:64"><literal type="number" pos:start="21:59" pos:end="21:64">0xffff</literal></expr></argument>,
                           <argument pos:start="22:28" pos:end="22:81"><expr pos:start="22:28" pos:end="22:81"><name pos:start="22:28" pos:end="22:38">DESC_P_MASK</name> <operator pos:start="22:40" pos:end="22:40">|</operator> <name pos:start="22:42" pos:end="22:52">DESC_S_MASK</name> <operator pos:start="22:54" pos:end="22:54">|</operator> <name pos:start="22:56" pos:end="22:67">DESC_CS_MASK</name> <operator pos:start="22:69" pos:end="22:69">|</operator> <name pos:start="22:71" pos:end="22:81">DESC_R_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="23:5" pos:end="24:68"><expr pos:start="23:5" pos:end="24:67"><call pos:start="23:5" pos:end="24:67"><name pos:start="23:5" pos:end="23:26">cpu_x86_load_seg_cache</name><argument_list pos:start="23:27" pos:end="24:67">(<argument pos:start="23:28" pos:end="23:30"><expr pos:start="23:28" pos:end="23:30"><name pos:start="23:28" pos:end="23:30">env</name></expr></argument>, <argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><name pos:start="23:33" pos:end="23:36">R_DS</name></expr></argument>, <argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><literal type="number" pos:start="23:39" pos:end="23:39">0</literal></expr></argument>, <argument pos:start="23:42" pos:end="23:42"><expr pos:start="23:42" pos:end="23:42"><literal type="number" pos:start="23:42" pos:end="23:42">0</literal></expr></argument>, <argument pos:start="23:45" pos:end="23:50"><expr pos:start="23:45" pos:end="23:50"><literal type="number" pos:start="23:45" pos:end="23:50">0xffff</literal></expr></argument>,
                           <argument pos:start="24:28" pos:end="24:66"><expr pos:start="24:28" pos:end="24:66"><name pos:start="24:28" pos:end="24:38">DESC_P_MASK</name> <operator pos:start="24:40" pos:end="24:40">|</operator> <name pos:start="24:42" pos:end="24:52">DESC_S_MASK</name> <operator pos:start="24:54" pos:end="24:54">|</operator> <name pos:start="24:56" pos:end="24:66">DESC_W_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="26:68"><expr pos:start="25:5" pos:end="26:67"><call pos:start="25:5" pos:end="26:67"><name pos:start="25:5" pos:end="25:26">cpu_x86_load_seg_cache</name><argument_list pos:start="25:27" pos:end="26:67">(<argument pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:30">env</name></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">R_ES</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr></argument>, <argument pos:start="25:42" pos:end="25:42"><expr pos:start="25:42" pos:end="25:42"><literal type="number" pos:start="25:42" pos:end="25:42">0</literal></expr></argument>, <argument pos:start="25:45" pos:end="25:50"><expr pos:start="25:45" pos:end="25:50"><literal type="number" pos:start="25:45" pos:end="25:50">0xffff</literal></expr></argument>,
                           <argument pos:start="26:28" pos:end="26:66"><expr pos:start="26:28" pos:end="26:66"><name pos:start="26:28" pos:end="26:38">DESC_P_MASK</name> <operator pos:start="26:40" pos:end="26:40">|</operator> <name pos:start="26:42" pos:end="26:52">DESC_S_MASK</name> <operator pos:start="26:54" pos:end="26:54">|</operator> <name pos:start="26:56" pos:end="26:66">DESC_W_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="28:68"><expr pos:start="27:5" pos:end="28:67"><call pos:start="27:5" pos:end="28:67"><name pos:start="27:5" pos:end="27:26">cpu_x86_load_seg_cache</name><argument_list pos:start="27:27" pos:end="28:67">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">env</name></expr></argument>, <argument pos:start="27:33" pos:end="27:36"><expr pos:start="27:33" pos:end="27:36"><name pos:start="27:33" pos:end="27:36">R_SS</name></expr></argument>, <argument pos:start="27:39" pos:end="27:39"><expr pos:start="27:39" pos:end="27:39"><literal type="number" pos:start="27:39" pos:end="27:39">0</literal></expr></argument>, <argument pos:start="27:42" pos:end="27:42"><expr pos:start="27:42" pos:end="27:42"><literal type="number" pos:start="27:42" pos:end="27:42">0</literal></expr></argument>, <argument pos:start="27:45" pos:end="27:50"><expr pos:start="27:45" pos:end="27:50"><literal type="number" pos:start="27:45" pos:end="27:50">0xffff</literal></expr></argument>,
                           <argument pos:start="28:28" pos:end="28:66"><expr pos:start="28:28" pos:end="28:66"><name pos:start="28:28" pos:end="28:38">DESC_P_MASK</name> <operator pos:start="28:40" pos:end="28:40">|</operator> <name pos:start="28:42" pos:end="28:52">DESC_S_MASK</name> <operator pos:start="28:54" pos:end="28:54">|</operator> <name pos:start="28:56" pos:end="28:66">DESC_W_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="30:68"><expr pos:start="29:5" pos:end="30:67"><call pos:start="29:5" pos:end="30:67"><name pos:start="29:5" pos:end="29:26">cpu_x86_load_seg_cache</name><argument_list pos:start="29:27" pos:end="30:67">(<argument pos:start="29:28" pos:end="29:30"><expr pos:start="29:28" pos:end="29:30"><name pos:start="29:28" pos:end="29:30">env</name></expr></argument>, <argument pos:start="29:33" pos:end="29:36"><expr pos:start="29:33" pos:end="29:36"><name pos:start="29:33" pos:end="29:36">R_FS</name></expr></argument>, <argument pos:start="29:39" pos:end="29:39"><expr pos:start="29:39" pos:end="29:39"><literal type="number" pos:start="29:39" pos:end="29:39">0</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><literal type="number" pos:start="29:42" pos:end="29:42">0</literal></expr></argument>, <argument pos:start="29:45" pos:end="29:50"><expr pos:start="29:45" pos:end="29:50"><literal type="number" pos:start="29:45" pos:end="29:50">0xffff</literal></expr></argument>,
                           <argument pos:start="30:28" pos:end="30:66"><expr pos:start="30:28" pos:end="30:66"><name pos:start="30:28" pos:end="30:38">DESC_P_MASK</name> <operator pos:start="30:40" pos:end="30:40">|</operator> <name pos:start="30:42" pos:end="30:52">DESC_S_MASK</name> <operator pos:start="30:54" pos:end="30:54">|</operator> <name pos:start="30:56" pos:end="30:66">DESC_W_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="32:68"><expr pos:start="31:5" pos:end="32:67"><call pos:start="31:5" pos:end="32:67"><name pos:start="31:5" pos:end="31:26">cpu_x86_load_seg_cache</name><argument_list pos:start="31:27" pos:end="32:67">(<argument pos:start="31:28" pos:end="31:30"><expr pos:start="31:28" pos:end="31:30"><name pos:start="31:28" pos:end="31:30">env</name></expr></argument>, <argument pos:start="31:33" pos:end="31:36"><expr pos:start="31:33" pos:end="31:36"><name pos:start="31:33" pos:end="31:36">R_GS</name></expr></argument>, <argument pos:start="31:39" pos:end="31:39"><expr pos:start="31:39" pos:end="31:39"><literal type="number" pos:start="31:39" pos:end="31:39">0</literal></expr></argument>, <argument pos:start="31:42" pos:end="31:42"><expr pos:start="31:42" pos:end="31:42"><literal type="number" pos:start="31:42" pos:end="31:42">0</literal></expr></argument>, <argument pos:start="31:45" pos:end="31:50"><expr pos:start="31:45" pos:end="31:50"><literal type="number" pos:start="31:45" pos:end="31:50">0xffff</literal></expr></argument>,
                           <argument pos:start="32:28" pos:end="32:66"><expr pos:start="32:28" pos:end="32:66"><name pos:start="32:28" pos:end="32:38">DESC_P_MASK</name> <operator pos:start="32:40" pos:end="32:40">|</operator> <name pos:start="32:42" pos:end="32:52">DESC_S_MASK</name> <operator pos:start="32:54" pos:end="32:54">|</operator> <name pos:start="32:56" pos:end="32:66">DESC_W_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">env</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">eip</name></name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:21">0xfff0</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:42"><expr pos:start="34:5" pos:end="34:41"><name pos:start="34:5" pos:end="34:20"><name pos:start="34:5" pos:end="34:7">env</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:13">regs</name><index pos:start="34:14" pos:end="34:20">[<expr pos:start="34:15" pos:end="34:19"><name pos:start="34:15" pos:end="34:19">R_EDX</name></expr>]</index></name> <operator pos:start="34:22" pos:end="34:22">=</operator> <name pos:start="34:24" pos:end="34:41"><name pos:start="34:24" pos:end="34:26">env</name><operator pos:start="34:27" pos:end="34:28">-&gt;</operator><name pos:start="34:29" pos:end="34:41">cpuid_version</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:7">env</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:15">eflags</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:21">0x2</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="36:5" pos:end="36:18">/* FPU init */</comment>
    <for pos:start="37:5" pos:end="38:27">for<control pos:start="37:8" pos:end="37:25">(<init pos:start="37:9" pos:end="37:14"><expr pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:9">i</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <literal type="number" pos:start="37:13" pos:end="37:13">0</literal></expr>;</init><condition pos:start="37:15" pos:end="37:20"><expr pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">i</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">8</literal></expr>;</condition> <incr pos:start="37:22" pos:end="37:24"><expr pos:start="37:22" pos:end="37:24"><name pos:start="37:22" pos:end="37:22">i</name><operator pos:start="37:23" pos:end="37:24">++</operator></expr></incr>)</control><block type="pseudo" pos:start="38:9" pos:end="38:27"><block_content pos:start="38:9" pos:end="38:27">
        <expr_stmt pos:start="38:9" pos:end="38:27"><expr pos:start="38:9" pos:end="38:26"><name pos:start="38:9" pos:end="38:22"><name pos:start="38:9" pos:end="38:11">env</name><operator pos:start="38:12" pos:end="38:13">-&gt;</operator><name pos:start="38:14" pos:end="38:19">fptags</name><index pos:start="38:20" pos:end="38:22">[<expr pos:start="38:21" pos:end="38:21"><name pos:start="38:21" pos:end="38:21">i</name></expr>]</index></name> <operator pos:start="38:24" pos:end="38:24">=</operator> <literal type="number" pos:start="38:26" pos:end="38:26">1</literal></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:13"><name pos:start="39:5" pos:end="39:7">env</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:13">fpuc</name></name> <operator pos:start="39:15" pos:end="39:15">=</operator> <literal type="number" pos:start="39:17" pos:end="39:21">0x37f</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="40:5" pos:end="40:24"><expr pos:start="40:5" pos:end="40:23"><name pos:start="40:5" pos:end="40:14"><name pos:start="40:5" pos:end="40:7">env</name><operator pos:start="40:8" pos:end="40:9">-&gt;</operator><name pos:start="40:10" pos:end="40:14">mxcsr</name></name> <operator pos:start="40:16" pos:end="40:16">=</operator> <literal type="number" pos:start="40:18" pos:end="40:23">0x1f80</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="41:5" pos:end="41:40"><expr pos:start="41:5" pos:end="41:39"><call pos:start="41:5" pos:end="41:39"><name pos:start="41:5" pos:end="41:10">memset</name><argument_list pos:start="41:11" pos:end="41:39">(<argument pos:start="41:12" pos:end="41:18"><expr pos:start="41:12" pos:end="41:18"><name pos:start="41:12" pos:end="41:18"><name pos:start="41:12" pos:end="41:14">env</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">dr</name></name></expr></argument>, <argument pos:start="41:21" pos:end="41:21"><expr pos:start="41:21" pos:end="41:21"><literal type="number" pos:start="41:21" pos:end="41:21">0</literal></expr></argument>, <argument pos:start="41:24" pos:end="41:38"><expr pos:start="41:24" pos:end="41:38"><sizeof pos:start="41:24" pos:end="41:38">sizeof<argument_list pos:start="41:30" pos:end="41:38">(<argument pos:start="41:31" pos:end="41:37"><expr pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:37"><name pos:start="41:31" pos:end="41:33">env</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:37">dr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="42:5" pos:end="42:29"><expr pos:start="42:5" pos:end="42:28"><name pos:start="42:5" pos:end="42:14"><name pos:start="42:5" pos:end="42:7">env</name><operator pos:start="42:8" pos:end="42:9">-&gt;</operator><name pos:start="42:10" pos:end="42:11">dr</name><index pos:start="42:12" pos:end="42:14">[<expr pos:start="42:13" pos:end="42:13"><literal type="number" pos:start="42:13" pos:end="42:13">6</literal></expr>]</index></name> <operator pos:start="42:16" pos:end="42:16">=</operator> <name pos:start="42:18" pos:end="42:28">DR6_FIXED_1</name></expr>;</expr_stmt>
    <expr_stmt pos:start="43:5" pos:end="43:29"><expr pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:14"><name pos:start="43:5" pos:end="43:7">env</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:11">dr</name><index pos:start="43:12" pos:end="43:14">[<expr pos:start="43:13" pos:end="43:13"><literal type="number" pos:start="43:13" pos:end="43:13">7</literal></expr>]</index></name> <operator pos:start="43:16" pos:end="43:16">=</operator> <name pos:start="43:18" pos:end="43:28">DR7_FIXED_1</name></expr>;</expr_stmt>
    <expr_stmt pos:start="44:5" pos:end="44:43"><expr pos:start="44:5" pos:end="44:42"><call pos:start="44:5" pos:end="44:42"><name pos:start="44:5" pos:end="44:29">cpu_breakpoint_remove_all</name><argument_list pos:start="44:30" pos:end="44:42">(<argument pos:start="44:31" pos:end="44:33"><expr pos:start="44:31" pos:end="44:33"><name pos:start="44:31" pos:end="44:33">env</name></expr></argument>, <argument pos:start="44:36" pos:end="44:41"><expr pos:start="44:36" pos:end="44:41"><name pos:start="44:36" pos:end="44:41">BP_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="45:5" pos:end="45:43"><expr pos:start="45:5" pos:end="45:42"><call pos:start="45:5" pos:end="45:42"><name pos:start="45:5" pos:end="45:29">cpu_watchpoint_remove_all</name><argument_list pos:start="45:30" pos:end="45:42">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">env</name></expr></argument>, <argument pos:start="45:36" pos:end="45:41"><expr pos:start="45:36" pos:end="45:41"><name pos:start="45:36" pos:end="45:41">BP_CPU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></function></unit>
