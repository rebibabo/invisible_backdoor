<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6561.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">sdl_switch</name><parameter_list pos:start="1:23" pos:end="3:51">(<parameter pos:start="1:24" pos:end="1:49"><decl pos:start="1:24" pos:end="1:49"><type pos:start="1:24" pos:end="1:49"><name pos:start="1:24" pos:end="1:44">DisplayChangeListener</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">dcl</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:50"><decl pos:start="3:24" pos:end="3:50"><type pos:start="3:24" pos:end="3:50"><name pos:start="3:24" pos:end="3:37">DisplaySurface</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:50">new_surface</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:29">

    <decl_stmt pos:start="7:5" pos:end="7:71"><decl pos:start="7:5" pos:end="7:70"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:15">PixelFormat</name></type> <name pos:start="7:17" pos:end="7:18">pf</name> <init pos:start="7:20" pos:end="7:70">= <expr pos:start="7:22" pos:end="7:70"><call pos:start="7:22" pos:end="7:70"><name pos:start="7:22" pos:end="7:49">qemu_pixelformat_from_pixman</name><argument_list pos:start="7:50" pos:end="7:70">(<argument pos:start="7:51" pos:end="7:69"><expr pos:start="7:51" pos:end="7:69"><name pos:start="7:51" pos:end="7:69"><name pos:start="7:51" pos:end="7:61">new_surface</name><operator pos:start="7:62" pos:end="7:63">-&gt;</operator><name pos:start="7:64" pos:end="7:69">format</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:77">/* temporary hack: allows to call sdl_switch to handle scaling changes */</comment>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:20">(<expr pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:19">new_surface</name></expr>)</condition> <block pos:start="13:22" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:15">surface</name> <operator pos:start="15:17" pos:end="15:17">=</operator> <name pos:start="15:19" pos:end="15:29">new_surface</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:23">scaling_active</name></expr>)</condition> <block pos:start="21:26" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:74">

        <expr_stmt pos:start="23:9" pos:end="23:74"><expr pos:start="23:9" pos:end="23:73"><call pos:start="23:9" pos:end="23:73"><name pos:start="23:9" pos:end="23:21">do_sdl_resize</name><argument_list pos:start="23:22" pos:end="23:73">(<argument pos:start="23:23" pos:end="23:44"><expr pos:start="23:23" pos:end="23:44"><call pos:start="23:23" pos:end="23:44"><name pos:start="23:23" pos:end="23:35">surface_width</name><argument_list pos:start="23:36" pos:end="23:44">(<argument pos:start="23:37" pos:end="23:43"><expr pos:start="23:37" pos:end="23:43"><name pos:start="23:37" pos:end="23:43">surface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:47" pos:end="23:69"><expr pos:start="23:47" pos:end="23:69"><call pos:start="23:47" pos:end="23:69"><name pos:start="23:47" pos:end="23:60">surface_height</name><argument_list pos:start="23:61" pos:end="23:69">(<argument pos:start="23:62" pos:end="23:68"><expr pos:start="23:62" pos:end="23:68"><name pos:start="23:62" pos:end="23:68">surface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:72" pos:end="23:72"><expr pos:start="23:72" pos:end="23:72"><literal type="number" pos:start="23:72" pos:end="23:72">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="33:5">else if <condition pos:start="25:15" pos:end="27:47">(<expr pos:start="25:16" pos:end="27:46"><name pos:start="25:16" pos:end="25:48"><name pos:start="25:16" pos:end="25:26">real_screen</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:34">format</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:48">BitsPerPixel</name></name> <operator pos:start="25:50" pos:end="25:51">!=</operator>

               <call pos:start="27:16" pos:end="27:46"><name pos:start="27:16" pos:end="27:37">surface_bits_per_pixel</name><argument_list pos:start="27:38" pos:end="27:46">(<argument pos:start="27:39" pos:end="27:45"><expr pos:start="27:39" pos:end="27:45"><name pos:start="27:39" pos:end="27:45">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:49" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:55">

        <expr_stmt pos:start="29:9" pos:end="31:55"><expr pos:start="29:9" pos:end="31:54"><call pos:start="29:9" pos:end="31:54"><name pos:start="29:9" pos:end="29:21">do_sdl_resize</name><argument_list pos:start="29:22" pos:end="31:54">(<argument pos:start="29:23" pos:end="29:36"><expr pos:start="29:23" pos:end="29:36"><name pos:start="29:23" pos:end="29:36"><name pos:start="29:23" pos:end="29:33">real_screen</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:36">w</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:52"><expr pos:start="29:39" pos:end="29:52"><name pos:start="29:39" pos:end="29:52"><name pos:start="29:39" pos:end="29:49">real_screen</name><operator pos:start="29:50" pos:end="29:51">-&gt;</operator><name pos:start="29:52" pos:end="29:52">h</name></name></expr></argument>,

                      <argument pos:start="31:23" pos:end="31:53"><expr pos:start="31:23" pos:end="31:53"><call pos:start="31:23" pos:end="31:53"><name pos:start="31:23" pos:end="31:44">surface_bits_per_pixel</name><argument_list pos:start="31:45" pos:end="31:53">(<argument pos:start="31:46" pos:end="31:52"><expr pos:start="31:46" pos:end="31:52"><name pos:start="31:46" pos:end="31:52">surface</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="46:0"><if pos:start="37:5" pos:end="46:0">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:20">guest_screen</name> <operator pos:start="37:22" pos:end="37:23">!=</operator> <name pos:start="37:25" pos:end="37:28">NULL</name></expr>)</condition> <block pos:start="37:31" pos:end="46:0">{<block_content pos:start="39:9" pos:end="39:38">

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><call pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:23">SDL_FreeSurface</name><argument_list pos:start="39:24" pos:end="39:37">(<argument pos:start="39:25" pos:end="39:36"><expr pos:start="39:25" pos:end="39:36"><name pos:start="39:25" pos:end="39:36">guest_screen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="45:1" pos:end="45:16">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:16">DEBUG_SDL</name></cpp:ifdef>

    <expr_stmt pos:start="47:5" pos:end="52:0"><expr pos:start="47:5" pos:end="49:50"><call pos:start="47:5" pos:end="49:50"><name pos:start="47:5" pos:end="47:10">printf</name><argument_list pos:start="47:11" pos:end="49:50">(<argument pos:start="47:12" pos:end="47:68"><expr pos:start="47:12" pos:end="47:68"><literal type="string" pos:start="47:12" pos:end="47:68">"SDL: Creating surface with masks: %08x %08x %08x %08x\n"</literal></expr></argument>,

           <argument pos:start="49:12" pos:end="49:19"><expr pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:13">pf</name><operator pos:start="49:14" pos:end="49:14">.</operator><name pos:start="49:15" pos:end="49:19">rmask</name></name></expr></argument>, <argument pos:start="49:22" pos:end="49:29"><expr pos:start="49:22" pos:end="49:29"><name pos:start="49:22" pos:end="49:29"><name pos:start="49:22" pos:end="49:23">pf</name><operator pos:start="49:24" pos:end="49:24">.</operator><name pos:start="49:25" pos:end="49:29">gmask</name></name></expr></argument>, <argument pos:start="49:32" pos:end="49:39"><expr pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:39"><name pos:start="49:32" pos:end="49:33">pf</name><operator pos:start="49:34" pos:end="49:34">.</operator><name pos:start="49:35" pos:end="49:39">bmask</name></name></expr></argument>, <argument pos:start="49:42" pos:end="49:49"><expr pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:49"><name pos:start="49:42" pos:end="49:43">pf</name><operator pos:start="49:44" pos:end="49:44">.</operator><name pos:start="49:45" pos:end="49:49">amask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="51:1" pos:end="51:6">#<cpp:directive pos:start="51:2" pos:end="51:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="55:5" pos:end="65:29"><expr pos:start="55:5" pos:end="65:28"><name pos:start="55:5" pos:end="55:16">guest_screen</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="65:28"><name pos:start="55:20" pos:end="55:43">SDL_CreateRGBSurfaceFrom</name>

        <argument_list pos:start="57:9" pos:end="65:28">(<argument pos:start="57:10" pos:end="57:30"><expr pos:start="57:10" pos:end="57:30"><call pos:start="57:10" pos:end="57:30"><name pos:start="57:10" pos:end="57:21">surface_data</name><argument_list pos:start="57:22" pos:end="57:30">(<argument pos:start="57:23" pos:end="57:29"><expr pos:start="57:23" pos:end="57:29"><name pos:start="57:23" pos:end="57:29">surface</name></expr></argument>)</argument_list></call></expr></argument>,

         <argument pos:start="59:10" pos:end="59:31"><expr pos:start="59:10" pos:end="59:31"><call pos:start="59:10" pos:end="59:31"><name pos:start="59:10" pos:end="59:22">surface_width</name><argument_list pos:start="59:23" pos:end="59:31">(<argument pos:start="59:24" pos:end="59:30"><expr pos:start="59:24" pos:end="59:30"><name pos:start="59:24" pos:end="59:30">surface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:34" pos:end="59:56"><expr pos:start="59:34" pos:end="59:56"><call pos:start="59:34" pos:end="59:56"><name pos:start="59:34" pos:end="59:47">surface_height</name><argument_list pos:start="59:48" pos:end="59:56">(<argument pos:start="59:49" pos:end="59:55"><expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55">surface</name></expr></argument>)</argument_list></call></expr></argument>,

         <argument pos:start="61:10" pos:end="61:40"><expr pos:start="61:10" pos:end="61:40"><call pos:start="61:10" pos:end="61:40"><name pos:start="61:10" pos:end="61:31">surface_bits_per_pixel</name><argument_list pos:start="61:32" pos:end="61:40">(<argument pos:start="61:33" pos:end="61:39"><expr pos:start="61:33" pos:end="61:39"><name pos:start="61:33" pos:end="61:39">surface</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:43" pos:end="61:65"><expr pos:start="61:43" pos:end="61:65"><call pos:start="61:43" pos:end="61:65"><name pos:start="61:43" pos:end="61:56">surface_stride</name><argument_list pos:start="61:57" pos:end="61:65">(<argument pos:start="61:58" pos:end="61:64"><expr pos:start="61:58" pos:end="61:64"><name pos:start="61:58" pos:end="61:64">surface</name></expr></argument>)</argument_list></call></expr></argument>,

         <argument pos:start="63:10" pos:end="63:17"><expr pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:17"><name pos:start="63:10" pos:end="63:11">pf</name><operator pos:start="63:12" pos:end="63:12">.</operator><name pos:start="63:13" pos:end="63:17">rmask</name></name></expr></argument>, <argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:27"><name pos:start="63:20" pos:end="63:21">pf</name><operator pos:start="63:22" pos:end="63:22">.</operator><name pos:start="63:23" pos:end="63:27">gmask</name></name></expr></argument>,

         <argument pos:start="65:10" pos:end="65:17"><expr pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:17"><name pos:start="65:10" pos:end="65:11">pf</name><operator pos:start="65:12" pos:end="65:12">.</operator><name pos:start="65:13" pos:end="65:17">bmask</name></name></expr></argument>, <argument pos:start="65:20" pos:end="65:27"><expr pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:27"><name pos:start="65:20" pos:end="65:21">pf</name><operator pos:start="65:22" pos:end="65:22">.</operator><name pos:start="65:23" pos:end="65:27">amask</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
