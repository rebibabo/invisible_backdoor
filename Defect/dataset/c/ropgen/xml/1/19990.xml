<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19990.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">gen_mfsr</name><parameter_list pos:start="1:21" pos:end="1:39">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="28:0">

<cpp:if pos:start="5:1" pos:end="5:29">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:29"><call pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:11">defined</name><argument_list pos:start="5:12" pos:end="5:29">(<argument pos:start="5:13" pos:end="5:28"><expr pos:start="5:13" pos:end="5:28"><name pos:start="5:13" pos:end="5:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="7:5" pos:end="10:0"><expr pos:start="7:5" pos:end="7:51"><call pos:start="7:5" pos:end="7:51"><name pos:start="7:5" pos:end="7:23">gen_inval_exception</name><argument_list pos:start="7:24" pos:end="7:51">(<argument pos:start="7:25" pos:end="7:27"><expr pos:start="7:25" pos:end="7:27"><name pos:start="7:25" pos:end="7:27">ctx</name></expr></argument>, <argument pos:start="7:30" pos:end="7:50"><expr pos:start="7:30" pos:end="7:50"><name pos:start="7:30" pos:end="7:50">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="9:1" pos:end="9:5">#<cpp:directive pos:start="9:2" pos:end="9:5">else</cpp:directive></cpp:else>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:11">t0</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><call pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:25">(<argument pos:start="13:18" pos:end="13:24"><expr pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:24"><name pos:start="13:18" pos:end="13:20">ctx</name><operator pos:start="13:21" pos:end="13:22">-&gt;</operator><name pos:start="13:23" pos:end="13:24">pr</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:28" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:15">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:27">gen_inval_exception</name><argument_list pos:start="15:28" pos:end="15:55">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">ctx</name></expr></argument>, <argument pos:start="15:34" pos:end="15:54"><expr pos:start="15:34" pos:end="15:54"><name pos:start="15:34" pos:end="15:54">POWERPC_EXCP_PRIV_REG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:39"><expr pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:6">t0</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:21">tcg_const_tl</name><argument_list pos:start="21:22" pos:end="21:38">(<argument pos:start="21:23" pos:end="21:37"><expr pos:start="21:23" pos:end="21:37"><call pos:start="21:23" pos:end="21:37"><name pos:start="21:23" pos:end="21:24">SR</name><argument_list pos:start="21:25" pos:end="21:37">(<argument pos:start="21:26" pos:end="21:36"><expr pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:36"><name pos:start="21:26" pos:end="21:28">ctx</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:36">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:62"><expr pos:start="23:5" pos:end="23:61"><call pos:start="23:5" pos:end="23:61"><name pos:start="23:5" pos:end="23:22">gen_helper_load_sr</name><argument_list pos:start="23:23" pos:end="23:61">(<argument pos:start="23:24" pos:end="23:47"><expr pos:start="23:24" pos:end="23:47"><name pos:start="23:24" pos:end="23:47"><name pos:start="23:24" pos:end="23:30">cpu_gpr</name><index pos:start="23:31" pos:end="23:47">[<expr pos:start="23:32" pos:end="23:46"><call pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:33">rD</name><argument_list pos:start="23:34" pos:end="23:46">(<argument pos:start="23:35" pos:end="23:45"><expr pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:45"><name pos:start="23:35" pos:end="23:37">ctx</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:45">opcode</name></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="23:50" pos:end="23:56"><expr pos:start="23:50" pos:end="23:56"><name pos:start="23:50" pos:end="23:56">cpu_env</name></expr></argument>, <argument pos:start="23:59" pos:end="23:60"><expr pos:start="23:59" pos:end="23:60"><name pos:start="23:59" pos:end="23:60">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="28:0"><expr pos:start="25:5" pos:end="25:21"><call pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:17">tcg_temp_free</name><argument_list pos:start="25:18" pos:end="25:21">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
