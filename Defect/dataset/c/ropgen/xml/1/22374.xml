<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22374.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:33"><name pos:start="1:1" pos:end="1:16">vmxnet3_init_msi</name><argument_list pos:start="1:17" pos:end="1:33">(<argument pos:start="1:18" pos:end="1:32">VMXNET3State *s</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:23">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">PCIDevice</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">d</name> <init pos:start="5:18" pos:end="5:32">= <expr pos:start="5:20" pos:end="5:32"><call pos:start="5:20" pos:end="5:32"><name pos:start="5:20" pos:end="5:29">PCI_DEVICE</name><argument_list pos:start="5:30" pos:end="5:32">(<argument pos:start="5:31" pos:end="5:31"><expr pos:start="5:31" pos:end="5:31"><name pos:start="5:31" pos:end="5:31">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="13:63"><expr pos:start="11:5" pos:end="13:62"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="13:62"><name pos:start="11:11" pos:end="11:18">msi_init</name><argument_list pos:start="11:19" pos:end="13:62">(<argument pos:start="11:20" pos:end="11:20"><expr pos:start="11:20" pos:end="11:20"><name pos:start="11:20" pos:end="11:20">d</name></expr></argument>, <argument pos:start="11:23" pos:end="11:40"><expr pos:start="11:23" pos:end="11:40"><name pos:start="11:23" pos:end="11:40">VMXNET3_MSI_OFFSET</name></expr></argument>, <argument pos:start="11:43" pos:end="11:65"><expr pos:start="11:43" pos:end="11:65"><name pos:start="11:43" pos:end="11:65">VMXNET3_MSI_NUM_VECTORS</name></expr></argument>,

                   <argument pos:start="13:20" pos:end="13:36"><expr pos:start="13:20" pos:end="13:36"><name pos:start="13:20" pos:end="13:36">VMXNET3_USE_64BIT</name></expr></argument>, <argument pos:start="13:39" pos:end="13:61"><expr pos:start="13:39" pos:end="13:61"><name pos:start="13:39" pos:end="13:61">VMXNET3_PER_VECTOR_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:16">(<expr pos:start="15:9" pos:end="15:15"><literal type="number" pos:start="15:9" pos:end="15:9">0</literal> <operator pos:start="15:11" pos:end="15:11">&gt;</operator> <name pos:start="15:13" pos:end="15:15">res</name></expr>)</condition> <block pos:start="15:18" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:28">

        <expr_stmt pos:start="17:9" pos:end="17:61"><expr pos:start="17:9" pos:end="17:60"><call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:17">VMW_WRPRN</name><argument_list pos:start="17:18" pos:end="17:60">(<argument pos:start="17:19" pos:end="17:54"><expr pos:start="17:19" pos:end="17:54"><literal type="string" pos:start="17:19" pos:end="17:54">"Failed to initialize MSI, error %d"</literal></expr></argument>, <argument pos:start="17:57" pos:end="17:59"><expr pos:start="17:57" pos:end="17:59"><name pos:start="17:57" pos:end="17:59">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:19"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:19">msi_used</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:27">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="21:7" pos:end="25:5">else <block pos:start="21:12" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:27">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:19"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">msi_used</name></name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:26">true</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="29:5" pos:end="29:23">return <expr pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:22"><name pos:start="29:12" pos:end="29:12">s</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:22">msi_used</name></name></expr>;</return>

</block_content>}</block>
</unit>
