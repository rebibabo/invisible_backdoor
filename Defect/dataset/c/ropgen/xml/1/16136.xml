<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/16136.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:43">qemu_chr_open_stdio</name><parameter_list pos:start="1:44" pos:end="1:63">(<parameter pos:start="1:45" pos:end="1:62"><decl pos:start="1:45" pos:end="1:62"><type pos:start="1:45" pos:end="1:58"><name pos:start="1:45" pos:end="1:56">ChardevStdio</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:15">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:24">(<expr pos:start="9:9" pos:end="9:23"><call pos:start="9:9" pos:end="9:23"><name pos:start="9:9" pos:end="9:21">is_daemonized</name><argument_list pos:start="9:22" pos:end="9:23">()</argument_list></call></expr>)</condition> <block pos:start="9:26" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:20">

        <expr_stmt pos:start="11:9" pos:end="11:57"><expr pos:start="11:9" pos:end="11:56"><call pos:start="11:9" pos:end="11:56"><name pos:start="11:9" pos:end="11:20">error_report</name><argument_list pos:start="11:21" pos:end="11:56">(<argument pos:start="11:22" pos:end="11:55"><expr pos:start="11:22" pos:end="11:55"><literal type="string" pos:start="11:22" pos:end="11:55">"cannot use stdio with -daemonize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:20">return <expr pos:start="13:16" pos:end="13:19"><name pos:start="13:16" pos:end="13:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:38"><expr pos:start="17:5" pos:end="17:37"><name pos:start="17:5" pos:end="17:17">old_fd0_flags</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <call pos:start="17:21" pos:end="17:37"><name pos:start="17:21" pos:end="17:25">fcntl</name><argument_list pos:start="17:26" pos:end="17:37">(<argument pos:start="17:27" pos:end="17:27"><expr pos:start="17:27" pos:end="17:27"><literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr></argument>, <argument pos:start="17:30" pos:end="17:36"><expr pos:start="17:30" pos:end="17:36"><name pos:start="17:30" pos:end="17:36">F_GETFL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><call pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:13">tcgetattr</name> <argument_list pos:start="19:15" pos:end="19:26">(<argument pos:start="19:16" pos:end="19:16"><expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr></argument>, <argument pos:start="19:19" pos:end="19:25"><expr pos:start="19:19" pos:end="19:25"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:25">oldtty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:25"><expr pos:start="21:5" pos:end="21:24"><call pos:start="21:5" pos:end="21:24"><name pos:start="21:5" pos:end="21:21">qemu_set_nonblock</name><argument_list pos:start="21:22" pos:end="21:24">(<argument pos:start="21:23" pos:end="21:23"><expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:22"><expr pos:start="23:5" pos:end="23:21"><call pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:10">atexit</name><argument_list pos:start="23:11" pos:end="23:21">(<argument pos:start="23:12" pos:end="23:20"><expr pos:start="23:12" pos:end="23:20"><name pos:start="23:12" pos:end="23:20">term_exit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:7">chr</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:32"><name pos:start="27:11" pos:end="27:26">qemu_chr_open_fd</name><argument_list pos:start="27:27" pos:end="27:32">(<argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:42"><expr pos:start="29:5" pos:end="29:41"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:7">chr</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:18">chr_close</name></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:41">qemu_chr_close_stdio</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:48"><expr pos:start="31:5" pos:end="31:47"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:7">chr</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:21">chr_set_echo</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:47">qemu_chr_set_echo_stdio</name></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:25">(<expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:12">opts</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:24">has_signal</name></name></expr>)</condition> <block pos:start="33:27" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:42">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:26">stdio_allow_signal</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:41"><name pos:start="35:30" pos:end="35:33">opts</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:41">signal</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:37"><expr pos:start="39:5" pos:end="39:36"><call pos:start="39:5" pos:end="39:36"><name pos:start="39:5" pos:end="39:24">qemu_chr_fe_set_echo</name><argument_list pos:start="39:25" pos:end="39:36">(<argument pos:start="39:26" pos:end="39:28"><expr pos:start="39:26" pos:end="39:28"><name pos:start="39:26" pos:end="39:28">chr</name></expr></argument>, <argument pos:start="39:31" pos:end="39:35"><expr pos:start="39:31" pos:end="39:35"><name pos:start="39:31" pos:end="39:35">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:15">return <expr pos:start="43:12" pos:end="43:14"><name pos:start="43:12" pos:end="43:14">chr</name></expr>;</return>

</block_content>}</block></function>
</unit>
