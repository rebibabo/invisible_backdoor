<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22509.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">rgb24tobgr16</name>)<parameter_list pos:start="1:40" pos:end="1:87">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:86"><decl pos:start="1:75" pos:end="1:86"><type pos:start="1:75" pos:end="1:86"><name pos:start="1:75" pos:end="1:77">int</name></type> <name pos:start="1:79" pos:end="1:86">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:26">= <expr pos:start="5:24" pos:end="5:26"><name pos:start="5:24" pos:end="5:26">src</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:19"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:17">uint8_t</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25">mm_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:34"><decl pos:start="11:5" pos:end="11:33"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">uint16_t</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:15">d</name> <init pos:start="11:17" pos:end="11:33">= <expr pos:start="11:19" pos:end="11:33"><operator pos:start="11:19" pos:end="11:19">(</operator><name pos:start="11:20" pos:end="11:27">uint16_t</name> <operator pos:start="11:29" pos:end="11:29">*</operator><operator pos:start="11:30" pos:end="11:30">)</operator><name pos:start="11:31" pos:end="11:33">dst</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:7">end</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <name pos:start="13:11" pos:end="13:11">s</name> <operator pos:start="13:13" pos:end="13:13">+</operator> <name pos:start="13:15" pos:end="13:22">src_size</name></expr>;</expr_stmt>

    <asm pos:start="15:5" pos:end="15:59">__asm__ <specifier pos:start="15:13" pos:end="15:20">volatile</specifier>(PREFETCH"    %0"::"m"(*src):"memory");</asm>

    <asm pos:start="17:5" pos:end="23:45">__asm__ <specifier pos:start="17:13" pos:end="17:20">volatile</specifier>(

        "movq         %0, %%mm7     \n\t"

        "movq         %1, %%mm6     \n\t"

        ::"m"(red_16mask),"m"(green_16mask));</asm>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:10">mm_end</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <name pos:start="25:14" pos:end="25:16">end</name> <operator pos:start="25:18" pos:end="25:18">-</operator> <literal type="number" pos:start="25:20" pos:end="25:21">11</literal></expr>;</expr_stmt>

    <while pos:start="27:5" pos:end="93:5">while <condition pos:start="27:11" pos:end="27:22">(<expr pos:start="27:12" pos:end="27:21"><name pos:start="27:12" pos:end="27:12">s</name> <operator pos:start="27:14" pos:end="27:14">&lt;</operator> <name pos:start="27:16" pos:end="27:21">mm_end</name></expr>)</condition> <block pos:start="27:24" pos:end="93:5">{<block_content pos:start="29:9" pos:end="91:16">

        <asm pos:start="29:9" pos:end="87:57">__asm__ <specifier pos:start="29:17" pos:end="29:24">volatile</specifier>(

            PREFETCH"    32%1           \n\t"

            "movd          %1, %%mm0    \n\t"

            "movd         3%1, %%mm3    \n\t"

            "punpckldq    6%1, %%mm0    \n\t"

            "punpckldq    9%1, %%mm3    \n\t"

            "movq       %%mm0, %%mm1    \n\t"

            "movq       %%mm0, %%mm2    \n\t"

            "movq       %%mm3, %%mm4    \n\t"

            "movq       %%mm3, %%mm5    \n\t"

            "psrlq         $3, %%mm0    \n\t"

            "psrlq         $3, %%mm3    \n\t"

            "pand          %2, %%mm0    \n\t"

            "pand          %2, %%mm3    \n\t"

            "psrlq         $5, %%mm1    \n\t"

            "psrlq         $5, %%mm4    \n\t"

            "pand       %%mm6, %%mm1    \n\t"

            "pand       %%mm6, %%mm4    \n\t"

            "psrlq         $8, %%mm2    \n\t"

            "psrlq         $8, %%mm5    \n\t"

            "pand       %%mm7, %%mm2    \n\t"

            "pand       %%mm7, %%mm5    \n\t"

            "por        %%mm1, %%mm0    \n\t"

            "por        %%mm4, %%mm3    \n\t"

            "por        %%mm2, %%mm0    \n\t"

            "por        %%mm5, %%mm3    \n\t"

            "psllq        $16, %%mm3    \n\t"

            "por        %%mm3, %%mm0    \n\t"

            MOVNTQ"     %%mm0, %0       \n\t"

            :"=m"(*d):"m"(*s),"m"(blue_16mask):"memory");</asm>

        <expr_stmt pos:start="89:9" pos:end="89:15"><expr pos:start="89:9" pos:end="89:14"><name pos:start="89:9" pos:end="89:9">d</name> <operator pos:start="89:11" pos:end="89:12">+=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:16"><expr pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:9">s</name> <operator pos:start="91:11" pos:end="91:12">+=</operator> <literal type="number" pos:start="91:14" pos:end="91:15">12</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <asm pos:start="95:5" pos:end="95:40">__asm__ <specifier pos:start="95:13" pos:end="95:20">volatile</specifier>(SFENCE:::"memory");</asm>

    <asm pos:start="97:5" pos:end="97:38">__asm__ <specifier pos:start="97:13" pos:end="97:20">volatile</specifier>(EMMS:::"memory");</asm>

    <while pos:start="99:5" pos:end="109:5">while <condition pos:start="99:11" pos:end="99:19">(<expr pos:start="99:12" pos:end="99:18"><name pos:start="99:12" pos:end="99:12">s</name> <operator pos:start="99:14" pos:end="99:14">&lt;</operator> <name pos:start="99:16" pos:end="99:18">end</name></expr>)</condition> <block pos:start="99:21" pos:end="109:5">{<block_content pos:start="101:9" pos:end="107:54">

        <decl_stmt pos:start="101:9" pos:end="101:27"><decl pos:start="101:9" pos:end="101:26"><type pos:start="101:9" pos:end="101:17"><specifier pos:start="101:9" pos:end="101:13">const</specifier> <name pos:start="101:15" pos:end="101:17">int</name></type> <name pos:start="101:19" pos:end="101:19">b</name> <init pos:start="101:21" pos:end="101:26">= <expr pos:start="101:23" pos:end="101:26"><operator pos:start="101:23" pos:end="101:23">*</operator><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">++</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:27"><decl pos:start="103:9" pos:end="103:26"><type pos:start="103:9" pos:end="103:17"><specifier pos:start="103:9" pos:end="103:13">const</specifier> <name pos:start="103:15" pos:end="103:17">int</name></type> <name pos:start="103:19" pos:end="103:19">g</name> <init pos:start="103:21" pos:end="103:26">= <expr pos:start="103:23" pos:end="103:26"><operator pos:start="103:23" pos:end="103:23">*</operator><name pos:start="103:24" pos:end="103:24">s</name><operator pos:start="103:25" pos:end="103:26">++</operator></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="105:9" pos:end="105:27"><decl pos:start="105:9" pos:end="105:26"><type pos:start="105:9" pos:end="105:17"><specifier pos:start="105:9" pos:end="105:13">const</specifier> <name pos:start="105:15" pos:end="105:17">int</name></type> <name pos:start="105:19" pos:end="105:19">r</name> <init pos:start="105:21" pos:end="105:26">= <expr pos:start="105:23" pos:end="105:26"><operator pos:start="105:23" pos:end="105:23">*</operator><name pos:start="105:24" pos:end="105:24">s</name><operator pos:start="105:25" pos:end="105:26">++</operator></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:54"><expr pos:start="107:9" pos:end="107:53"><operator pos:start="107:9" pos:end="107:9">*</operator><name pos:start="107:10" pos:end="107:10">d</name><operator pos:start="107:11" pos:end="107:12">++</operator> <operator pos:start="107:14" pos:end="107:14">=</operator> <operator pos:start="107:16" pos:end="107:16">(</operator><name pos:start="107:17" pos:end="107:17">b</name><operator pos:start="107:18" pos:end="107:19">&gt;&gt;</operator><literal type="number" pos:start="107:20" pos:end="107:20">3</literal><operator pos:start="107:21" pos:end="107:21">)</operator> <operator pos:start="107:23" pos:end="107:23">|</operator> <operator pos:start="107:25" pos:end="107:25">(</operator><operator pos:start="107:26" pos:end="107:26">(</operator><name pos:start="107:27" pos:end="107:27">g</name><operator pos:start="107:28" pos:end="107:28">&amp;</operator><literal type="number" pos:start="107:29" pos:end="107:32">0xFC</literal><operator pos:start="107:33" pos:end="107:33">)</operator><operator pos:start="107:34" pos:end="107:35">&lt;&lt;</operator><literal type="number" pos:start="107:36" pos:end="107:36">3</literal><operator pos:start="107:37" pos:end="107:37">)</operator> <operator pos:start="107:39" pos:end="107:39">|</operator> <operator pos:start="107:41" pos:end="107:41">(</operator><operator pos:start="107:42" pos:end="107:42">(</operator><name pos:start="107:43" pos:end="107:43">r</name><operator pos:start="107:44" pos:end="107:44">&amp;</operator><literal type="number" pos:start="107:45" pos:end="107:48">0xF8</literal><operator pos:start="107:49" pos:end="107:49">)</operator><operator pos:start="107:50" pos:end="107:51">&lt;&lt;</operator><literal type="number" pos:start="107:52" pos:end="107:52">8</literal><operator pos:start="107:53" pos:end="107:53">)</operator></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
