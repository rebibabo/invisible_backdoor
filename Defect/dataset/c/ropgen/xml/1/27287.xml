<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27287.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">vvfat_open</name><parameter_list pos:start="1:22" pos:end="1:75">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:38">BlockDriverState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:42">bs</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name><modifier pos:start="1:55" pos:end="1:55">*</modifier></type> <name pos:start="1:57" pos:end="1:63">dirname</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">BDRVVVFATState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:34">= <expr pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:34"><name pos:start="5:25" pos:end="5:26">bs</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:34">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">floppy</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



<cpp:ifdef pos:start="13:1" pos:end="13:12">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="15:5" pos:end="18:0"><expr pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:7">vvv</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <name pos:start="15:11" pos:end="15:11">s</name></expr>;</expr_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>



<macro pos:start="21:1" pos:end="27:2"><name pos:start="21:1" pos:end="21:4">DLOG</name><argument_list pos:start="21:5" pos:end="27:2">(<argument pos:start="21:6" pos:end="27:1">if (stderr == NULL) {

    stderr = fopen(<literal type="string" pos:start="23:20" pos:end="23:30">"vvfat.log"</literal>, <literal type="string" pos:start="23:33" pos:end="23:35">"a"</literal>);

    setbuf(stderr, NULL);

}</argument>)</argument_list></macro>



    <expr_stmt pos:start="31:5" pos:end="31:15"><expr pos:start="31:5" pos:end="31:14"><name pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:9">bs</name></name> <operator pos:start="31:11" pos:end="31:11">=</operator> <name pos:start="31:13" pos:end="31:14">bs</name></expr>;</expr_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:19"><expr pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:15">fat_type</name></name><operator pos:start="35:16" pos:end="35:16">=</operator><literal type="number" pos:start="35:17" pos:end="35:18">16</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="37:5" pos:end="37:38">/* LATER TODO: if FAT32, adjust */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:32"><expr pos:start="39:5" pos:end="39:31"><name pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:5">s</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:26">sectors_per_cluster</name></name><operator pos:start="39:27" pos:end="39:27">=</operator><literal type="number" pos:start="39:28" pos:end="39:31">0x10</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="41:5" pos:end="41:19">/* 504MB disk*/</comment>

    <expr_stmt pos:start="43:5" pos:end="43:18"><expr pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:12"><name pos:start="43:5" pos:end="43:6">bs</name><operator pos:start="43:7" pos:end="43:8">-&gt;</operator><name pos:start="43:9" pos:end="43:12">cyls</name></name><operator pos:start="43:13" pos:end="43:13">=</operator><literal type="number" pos:start="43:14" pos:end="43:17">1024</literal></expr>;</expr_stmt> <expr_stmt pos:start="43:20" pos:end="43:32"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:28"><name pos:start="43:20" pos:end="43:21">bs</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">heads</name></name><operator pos:start="43:29" pos:end="43:29">=</operator><literal type="number" pos:start="43:30" pos:end="43:31">16</literal></expr>;</expr_stmt> <expr_stmt pos:start="43:34" pos:end="43:45"><expr pos:start="43:34" pos:end="43:44"><name pos:start="43:34" pos:end="43:41"><name pos:start="43:34" pos:end="43:35">bs</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:41">secs</name></name><operator pos:start="43:42" pos:end="43:42">=</operator><literal type="number" pos:start="43:43" pos:end="43:44">63</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:5">s</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:22">current_cluster</name></name><operator pos:start="47:23" pos:end="47:23">=</operator><literal type="number" pos:start="47:24" pos:end="47:33">0xffffffff</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:27">first_sectors_number</name></name><operator pos:start="51:28" pos:end="51:28">=</operator><literal type="number" pos:start="51:29" pos:end="51:32">0x40</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:45">/* read only is the default for safety */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:6">bs</name><operator pos:start="55:7" pos:end="55:8">-&gt;</operator><name pos:start="55:9" pos:end="55:17">read_only</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:37"><expr pos:start="57:5" pos:end="57:36"><name pos:start="57:5" pos:end="57:11"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:11">qcow</name></name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:29"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:29">write_target</name></name> <operator pos:start="57:31" pos:end="57:31">=</operator> <name pos:start="57:33" pos:end="57:36">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:20">qcow_filename</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:27">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:19"><expr pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:11">fat2</name></name> <operator pos:start="61:13" pos:end="61:13">=</operator> <name pos:start="61:15" pos:end="61:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:27">downcase_short_names</name></name> <operator pos:start="63:29" pos:end="63:29">=</operator> <literal type="number" pos:start="63:31" pos:end="63:31">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="67:5" pos:end="69:18"><if pos:start="67:5" pos:end="69:18">if <condition pos:start="67:8" pos:end="67:41">(<expr pos:start="67:9" pos:end="67:40"><operator pos:start="67:9" pos:end="67:9">!</operator><call pos:start="67:10" pos:end="67:40"><name pos:start="67:10" pos:end="67:17">strstart</name><argument_list pos:start="67:18" pos:end="67:40">(<argument pos:start="67:19" pos:end="67:25"><expr pos:start="67:19" pos:end="67:25"><name pos:start="67:19" pos:end="67:25">dirname</name></expr></argument>, <argument pos:start="67:28" pos:end="67:33"><expr pos:start="67:28" pos:end="67:33"><literal type="string" pos:start="67:28" pos:end="67:33">"fat:"</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:39"><expr pos:start="67:36" pos:end="67:39"><name pos:start="67:36" pos:end="67:39">NULL</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:18"><block_content pos:start="69:9" pos:end="69:18">

	<return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:36">(<expr pos:start="73:9" pos:end="73:35"><call pos:start="73:9" pos:end="73:35"><name pos:start="73:9" pos:end="73:14">strstr</name><argument_list pos:start="73:15" pos:end="73:35">(<argument pos:start="73:16" pos:end="73:22"><expr pos:start="73:16" pos:end="73:22"><name pos:start="73:16" pos:end="73:22">dirname</name></expr></argument>, <argument pos:start="73:25" pos:end="73:34"><expr pos:start="73:25" pos:end="73:34"><literal type="string" pos:start="73:25" pos:end="73:34">":floppy:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:38" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:52">

	<expr_stmt pos:start="75:9" pos:end="75:19"><expr pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:14">floppy</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="number" pos:start="75:18" pos:end="75:18">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="77:9" pos:end="77:25"><expr pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:19">fat_type</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <literal type="number" pos:start="77:23" pos:end="77:24">12</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="79:9" pos:end="79:36"><expr pos:start="79:9" pos:end="79:35"><name pos:start="79:9" pos:end="79:31"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:31">first_sectors_number</name></name> <operator pos:start="79:33" pos:end="79:33">=</operator> <literal type="number" pos:start="79:35" pos:end="79:35">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:30"><name pos:start="81:9" pos:end="81:9">s</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:30">sectors_per_cluster</name></name><operator pos:start="81:31" pos:end="81:31">=</operator><literal type="number" pos:start="81:32" pos:end="81:32">2</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="83:9" pos:end="83:22"><expr pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:16"><name pos:start="83:9" pos:end="83:10">bs</name><operator pos:start="83:11" pos:end="83:12">-&gt;</operator><name pos:start="83:13" pos:end="83:16">cyls</name></name> <operator pos:start="83:18" pos:end="83:18">=</operator> <literal type="number" pos:start="83:20" pos:end="83:21">80</literal></expr>;</expr_stmt> <expr_stmt pos:start="83:24" pos:end="83:37"><expr pos:start="83:24" pos:end="83:36"><name pos:start="83:24" pos:end="83:32"><name pos:start="83:24" pos:end="83:25">bs</name><operator pos:start="83:26" pos:end="83:27">-&gt;</operator><name pos:start="83:28" pos:end="83:32">heads</name></name> <operator pos:start="83:34" pos:end="83:34">=</operator> <literal type="number" pos:start="83:36" pos:end="83:36">2</literal></expr>;</expr_stmt> <expr_stmt pos:start="83:39" pos:end="83:52"><expr pos:start="83:39" pos:end="83:51"><name pos:start="83:39" pos:end="83:46"><name pos:start="83:39" pos:end="83:40">bs</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:46">secs</name></name> <operator pos:start="83:48" pos:end="83:48">=</operator> <literal type="number" pos:start="83:50" pos:end="83:51">36</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="105:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:32">(<expr pos:start="89:9" pos:end="89:31"><call pos:start="89:9" pos:end="89:31"><name pos:start="89:9" pos:end="89:14">strstr</name><argument_list pos:start="89:15" pos:end="89:31">(<argument pos:start="89:16" pos:end="89:22"><expr pos:start="89:16" pos:end="89:22"><name pos:start="89:16" pos:end="89:22">dirname</name></expr></argument>, <argument pos:start="89:25" pos:end="89:30"><expr pos:start="89:25" pos:end="89:30"><literal type="string" pos:start="89:25" pos:end="89:30">":32:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:34" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:25">

	<expr_stmt pos:start="91:9" pos:end="91:105"><expr pos:start="91:9" pos:end="91:104"><call pos:start="91:9" pos:end="91:104"><name pos:start="91:9" pos:end="91:15">fprintf</name><argument_list pos:start="91:16" pos:end="91:104">(<argument pos:start="91:17" pos:end="91:22"><expr pos:start="91:17" pos:end="91:22"><name pos:start="91:17" pos:end="91:22">stderr</name></expr></argument>, <argument pos:start="91:25" pos:end="91:103"><expr pos:start="91:25" pos:end="91:103"><literal type="string" pos:start="91:25" pos:end="91:103">"Big fat greek warning: FAT32 has not been tested. You are welcome to do so!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:19">fat_type</name></name> <operator pos:start="93:21" pos:end="93:21">=</operator> <literal type="number" pos:start="93:23" pos:end="93:24">32</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="95:7" pos:end="99:5">else if <condition pos:start="95:15" pos:end="95:39">(<expr pos:start="95:16" pos:end="95:38"><call pos:start="95:16" pos:end="95:38"><name pos:start="95:16" pos:end="95:21">strstr</name><argument_list pos:start="95:22" pos:end="95:38">(<argument pos:start="95:23" pos:end="95:29"><expr pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:29">dirname</name></expr></argument>, <argument pos:start="95:32" pos:end="95:37"><expr pos:start="95:32" pos:end="95:37"><literal type="string" pos:start="95:32" pos:end="95:37">":16:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:41" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:25">

	<expr_stmt pos:start="97:9" pos:end="97:25"><expr pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:19"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:19">fat_type</name></name> <operator pos:start="97:21" pos:end="97:21">=</operator> <literal type="number" pos:start="97:23" pos:end="97:24">16</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="99:7" pos:end="105:5">else if <condition pos:start="99:15" pos:end="99:39">(<expr pos:start="99:16" pos:end="99:38"><call pos:start="99:16" pos:end="99:38"><name pos:start="99:16" pos:end="99:21">strstr</name><argument_list pos:start="99:22" pos:end="99:38">(<argument pos:start="99:23" pos:end="99:29"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:29">dirname</name></expr></argument>, <argument pos:start="99:32" pos:end="99:37"><expr pos:start="99:32" pos:end="99:37"><literal type="string" pos:start="99:32" pos:end="99:37">":12:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:41" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:22">

	<expr_stmt pos:start="101:9" pos:end="101:25"><expr pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:19">fat_type</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <literal type="number" pos:start="101:23" pos:end="101:24">12</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="103:9" pos:end="103:22"><expr pos:start="103:9" pos:end="103:21"><name pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:10">bs</name><operator pos:start="103:11" pos:end="103:12">-&gt;</operator><name pos:start="103:13" pos:end="103:16">secs</name></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <literal type="number" pos:start="103:20" pos:end="103:21">18</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:76"><expr pos:start="109:5" pos:end="109:75"><name pos:start="109:5" pos:end="109:19"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:19">sector_count</name></name><operator pos:start="109:20" pos:end="109:20">=</operator><name pos:start="109:21" pos:end="109:28"><name pos:start="109:21" pos:end="109:22">bs</name><operator pos:start="109:23" pos:end="109:24">-&gt;</operator><name pos:start="109:25" pos:end="109:28">cyls</name></name><operator pos:start="109:29" pos:end="109:29">*</operator><name pos:start="109:30" pos:end="109:38"><name pos:start="109:30" pos:end="109:31">bs</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:38">heads</name></name><operator pos:start="109:39" pos:end="109:39">*</operator><name pos:start="109:40" pos:end="109:47"><name pos:start="109:40" pos:end="109:41">bs</name><operator pos:start="109:42" pos:end="109:43">-&gt;</operator><name pos:start="109:44" pos:end="109:47">secs</name></name><operator pos:start="109:48" pos:end="109:48">-</operator><operator pos:start="109:49" pos:end="109:49">(</operator><name pos:start="109:50" pos:end="109:72"><name pos:start="109:50" pos:end="109:50">s</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:72">first_sectors_number</name></name><operator pos:start="109:73" pos:end="109:73">-</operator><literal type="number" pos:start="109:74" pos:end="109:74">1</literal><operator pos:start="109:75" pos:end="109:75">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:32">(<expr pos:start="113:9" pos:end="113:31"><call pos:start="113:9" pos:end="113:31"><name pos:start="113:9" pos:end="113:14">strstr</name><argument_list pos:start="113:15" pos:end="113:31">(<argument pos:start="113:16" pos:end="113:22"><expr pos:start="113:16" pos:end="113:22"><name pos:start="113:16" pos:end="113:22">dirname</name></expr></argument>, <argument pos:start="113:25" pos:end="113:30"><expr pos:start="113:25" pos:end="113:30"><literal type="string" pos:start="113:25" pos:end="113:30">":rw:"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="113:34" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:26">

	<if_stmt pos:start="115:9" pos:end="117:22"><if pos:start="115:9" pos:end="117:22">if <condition pos:start="115:12" pos:end="115:35">(<expr pos:start="115:13" pos:end="115:34"><call pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:31">enable_write_target</name><argument_list pos:start="115:32" pos:end="115:34">(<argument pos:start="115:33" pos:end="115:33"><expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:22"><block_content pos:start="117:13" pos:end="117:22">

	    <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

	<expr_stmt pos:start="119:9" pos:end="119:26"><expr pos:start="119:9" pos:end="119:25"><name pos:start="119:9" pos:end="119:21"><name pos:start="119:9" pos:end="119:10">bs</name><operator pos:start="119:11" pos:end="119:12">-&gt;</operator><name pos:start="119:13" pos:end="119:21">read_only</name></name> <operator pos:start="119:23" pos:end="119:23">=</operator> <literal type="number" pos:start="119:25" pos:end="119:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:40"><expr pos:start="125:5" pos:end="125:39"><name pos:start="125:5" pos:end="125:5">i</name> <operator pos:start="125:7" pos:end="125:7">=</operator> <call pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:15">strrchr</name><argument_list pos:start="125:16" pos:end="125:29">(<argument pos:start="125:17" pos:end="125:23"><expr pos:start="125:17" pos:end="125:23"><name pos:start="125:17" pos:end="125:23">dirname</name></expr></argument>, <argument pos:start="125:26" pos:end="125:28"><expr pos:start="125:26" pos:end="125:28"><literal type="char" pos:start="125:26" pos:end="125:28">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="125:31" pos:end="125:31">-</operator> <name pos:start="125:33" pos:end="125:39">dirname</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:19"><expr pos:start="127:5" pos:end="127:18"><call pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:10">assert</name><argument_list pos:start="127:11" pos:end="127:18">(<argument pos:start="127:12" pos:end="127:17"><expr pos:start="127:12" pos:end="127:17"><name pos:start="127:12" pos:end="127:12">i</name> <operator pos:start="127:14" pos:end="127:15">&gt;=</operator> <literal type="number" pos:start="127:17" pos:end="127:17">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="137:23"><if pos:start="129:5" pos:end="133:23">if <condition pos:start="129:8" pos:end="129:58">(<expr pos:start="129:9" pos:end="129:57"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:15">dirname</name><index pos:start="129:16" pos:end="129:20">[<expr pos:start="129:17" pos:end="129:19"><name pos:start="129:17" pos:end="129:17">i</name><operator pos:start="129:18" pos:end="129:18">-</operator><literal type="number" pos:start="129:19" pos:end="129:19">2</literal></expr>]</index></name> <operator pos:start="129:22" pos:end="129:23">==</operator> <literal type="char" pos:start="129:25" pos:end="129:27">':'</literal> <operator pos:start="129:29" pos:end="129:30">&amp;&amp;</operator> <call pos:start="129:32" pos:end="129:57"><name pos:start="129:32" pos:end="129:43">qemu_isalpha</name><argument_list pos:start="129:44" pos:end="129:57">(<argument pos:start="129:45" pos:end="129:56"><expr pos:start="129:45" pos:end="129:56"><name pos:start="129:45" pos:end="129:56"><name pos:start="129:45" pos:end="129:51">dirname</name><index pos:start="129:52" pos:end="129:56">[<expr pos:start="129:53" pos:end="129:55"><name pos:start="129:53" pos:end="129:53">i</name><operator pos:start="129:54" pos:end="129:54">-</operator><literal type="number" pos:start="129:55" pos:end="129:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:23"><block_content pos:start="133:9" pos:end="133:23">

	<comment type="block" pos:start="131:9" pos:end="131:44">/* workaround for DOS drive names */</comment>

	<expr_stmt pos:start="133:9" pos:end="133:23"><expr pos:start="133:9" pos:end="133:22"><name pos:start="133:9" pos:end="133:15">dirname</name> <operator pos:start="133:17" pos:end="133:18">+=</operator> <name pos:start="133:20" pos:end="133:20">i</name><operator pos:start="133:21" pos:end="133:21">-</operator><literal type="number" pos:start="133:22" pos:end="133:22">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="135:5" pos:end="137:23">else<block type="pseudo" pos:start="137:9" pos:end="137:23"><block_content pos:start="137:9" pos:end="137:23">

	<expr_stmt pos:start="137:9" pos:end="137:23"><expr pos:start="137:9" pos:end="137:22"><name pos:start="137:9" pos:end="137:15">dirname</name> <operator pos:start="137:17" pos:end="137:18">+=</operator> <name pos:start="137:20" pos:end="137:20">i</name><operator pos:start="137:21" pos:end="137:21">+</operator><literal type="number" pos:start="137:22" pos:end="137:22">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:50"><expr pos:start="141:5" pos:end="141:49"><name pos:start="141:5" pos:end="141:21"><name pos:start="141:5" pos:end="141:6">bs</name><operator pos:start="141:7" pos:end="141:8">-&gt;</operator><name pos:start="141:9" pos:end="141:21">total_sectors</name></name><operator pos:start="141:22" pos:end="141:22">=</operator><name pos:start="141:23" pos:end="141:30"><name pos:start="141:23" pos:end="141:24">bs</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:30">cyls</name></name><operator pos:start="141:31" pos:end="141:31">*</operator><name pos:start="141:32" pos:end="141:40"><name pos:start="141:32" pos:end="141:33">bs</name><operator pos:start="141:34" pos:end="141:35">-&gt;</operator><name pos:start="141:36" pos:end="141:40">heads</name></name><operator pos:start="141:41" pos:end="141:41">*</operator><name pos:start="141:42" pos:end="141:49"><name pos:start="141:42" pos:end="141:43">bs</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:49">secs</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="147:18"><if pos:start="145:5" pos:end="147:18">if<condition pos:start="145:7" pos:end="145:36">(<expr pos:start="145:8" pos:end="145:35"><call pos:start="145:8" pos:end="145:35"><name pos:start="145:8" pos:end="145:23">init_directories</name><argument_list pos:start="145:24" pos:end="145:35">(<argument pos:start="145:25" pos:end="145:25"><expr pos:start="145:25" pos:end="145:25"><name pos:start="145:25" pos:end="145:25">s</name></expr></argument>, <argument pos:start="145:28" pos:end="145:34"><expr pos:start="145:28" pos:end="145:34"><name pos:start="145:28" pos:end="145:34">dirname</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:18"><block_content pos:start="147:9" pos:end="147:18">

	<return pos:start="147:9" pos:end="147:18">return <expr pos:start="147:16" pos:end="147:17"><operator pos:start="147:16" pos:end="147:16">-</operator><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:81"><expr pos:start="151:5" pos:end="151:80"><name pos:start="151:5" pos:end="151:19"><name pos:start="151:5" pos:end="151:5">s</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:19">sector_count</name></name> <operator pos:start="151:21" pos:end="151:21">=</operator> <name pos:start="151:23" pos:end="151:38"><name pos:start="151:23" pos:end="151:23">s</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:38">faked_sectors</name></name> <operator pos:start="151:40" pos:end="151:40">+</operator> <name pos:start="151:42" pos:end="151:63"><name pos:start="151:42" pos:end="151:42">s</name><operator pos:start="151:43" pos:end="151:44">-&gt;</operator><name pos:start="151:45" pos:end="151:63">sectors_per_cluster</name></name><operator pos:start="151:64" pos:end="151:64">*</operator><name pos:start="151:65" pos:end="151:80"><name pos:start="151:65" pos:end="151:65">s</name><operator pos:start="151:66" pos:end="151:67">-&gt;</operator><name pos:start="151:68" pos:end="151:80">cluster_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="155:5" pos:end="157:20"><if pos:start="155:5" pos:end="157:20">if<condition pos:start="155:7" pos:end="155:37">(<expr pos:start="155:8" pos:end="155:36"><name pos:start="155:8" pos:end="155:30"><name pos:start="155:8" pos:end="155:8">s</name><operator pos:start="155:9" pos:end="155:10">-&gt;</operator><name pos:start="155:11" pos:end="155:30">first_sectors_number</name></name><operator pos:start="155:31" pos:end="155:32">==</operator><literal type="number" pos:start="155:33" pos:end="155:36">0x40</literal></expr>)</condition><block type="pseudo" pos:start="157:9" pos:end="157:20"><block_content pos:start="157:9" pos:end="157:20">

	<expr_stmt pos:start="157:9" pos:end="157:20"><expr pos:start="157:9" pos:end="157:19"><call pos:start="157:9" pos:end="157:19"><name pos:start="157:9" pos:end="157:16">init_mbr</name><argument_list pos:start="157:17" pos:end="157:19">(<argument pos:start="157:18" pos:end="157:18"><expr pos:start="157:18" pos:end="157:18"><name pos:start="157:18" pos:end="157:18">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:77">/* for some reason or other, MS-DOS does not like to know about CHS... */</comment>

    <if_stmt pos:start="163:5" pos:end="165:44"><if pos:start="163:5" pos:end="165:44">if <condition pos:start="163:8" pos:end="163:15">(<expr pos:start="163:9" pos:end="163:14"><name pos:start="163:9" pos:end="163:14">floppy</name></expr>)</condition><block type="pseudo" pos:start="165:9" pos:end="165:44"><block_content pos:start="165:9" pos:end="165:44">

	<expr_stmt pos:start="165:9" pos:end="165:44"><expr pos:start="165:9" pos:end="165:43"><name pos:start="165:9" pos:end="165:17"><name pos:start="165:9" pos:end="165:10">bs</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:17">heads</name></name> <operator pos:start="165:19" pos:end="165:19">=</operator> <name pos:start="165:21" pos:end="165:28"><name pos:start="165:21" pos:end="165:22">bs</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:28">cyls</name></name> <operator pos:start="165:30" pos:end="165:30">=</operator> <name pos:start="165:32" pos:end="165:39"><name pos:start="165:32" pos:end="165:33">bs</name><operator pos:start="165:34" pos:end="165:35">-&gt;</operator><name pos:start="165:36" pos:end="165:39">secs</name></name> <operator pos:start="165:41" pos:end="165:41">=</operator> <literal type="number" pos:start="165:43" pos:end="165:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="169:5" pos:end="169:35">//    assert(is_consistent(s));</comment>

    <expr_stmt pos:start="171:5" pos:end="171:33"><expr pos:start="171:5" pos:end="171:32"><call pos:start="171:5" pos:end="171:32"><name pos:start="171:5" pos:end="171:22">qemu_co_mutex_init</name><argument_list pos:start="171:23" pos:end="171:32">(<argument pos:start="171:24" pos:end="171:31"><expr pos:start="171:24" pos:end="171:31"><operator pos:start="171:24" pos:end="171:24">&amp;</operator><name pos:start="171:25" pos:end="171:31"><name pos:start="171:25" pos:end="171:25">s</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
