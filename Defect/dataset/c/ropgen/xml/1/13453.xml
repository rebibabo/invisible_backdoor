<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13453.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:36">qio_channel_command_close</name><parameter_list pos:start="1:37" pos:end="3:50">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:47">QIOChannel</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">ioc</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:42">Error</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier><modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:49">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="51:1">{<block_content pos:start="7:5" pos:end="49:14">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">QIOChannelCommand</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">cioc</name> <init pos:start="7:29" pos:end="7:54">= <expr pos:start="7:31" pos:end="7:54"><call pos:start="7:31" pos:end="7:54"><name pos:start="7:31" pos:end="7:49">QIO_CHANNEL_COMMAND</name><argument_list pos:start="7:50" pos:end="7:54">(<argument pos:start="7:51" pos:end="7:53"><expr pos:start="7:51" pos:end="7:53"><name pos:start="7:51" pos:end="7:53">ioc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">rv</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="17:7">/* We close FDs before killing, because that

     * gives a better chance of clean shutdown

     */</comment>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:33">(<expr pos:start="19:9" pos:end="19:32"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:13">close</name><argument_list pos:start="19:14" pos:end="19:28">(<argument pos:start="19:15" pos:end="19:27"><expr pos:start="19:15" pos:end="19:27"><name pos:start="19:15" pos:end="19:27"><name pos:start="19:15" pos:end="19:18">cioc</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">writefd</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:30" pos:end="19:30">&lt;</operator> <literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr>)</condition> <block pos:start="19:35" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:16">

        <expr_stmt pos:start="21:9" pos:end="21:16"><expr pos:start="21:9" pos:end="21:15"><name pos:start="21:9" pos:end="21:10">rv</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <operator pos:start="21:14" pos:end="21:14">-</operator><literal type="number" pos:start="21:15" pos:end="21:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="32:0"><if pos:start="25:5" pos:end="32:0">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><call pos:start="25:9" pos:end="25:27"><name pos:start="25:9" pos:end="25:13">close</name><argument_list pos:start="25:14" pos:end="25:27">(<argument pos:start="25:15" pos:end="25:26"><expr pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:26"><name pos:start="25:15" pos:end="25:18">cioc</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:26">readfd</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:29" pos:end="25:29">&lt;</operator> <literal type="number" pos:start="25:31" pos:end="25:31">0</literal></expr>)</condition> <block pos:start="25:34" pos:end="32:0">{<block_content pos:start="27:9" pos:end="27:16">

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:10">rv</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <operator pos:start="27:14" pos:end="27:14">-</operator><literal type="number" pos:start="27:15" pos:end="27:15">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:ifndef pos:start="31:1" pos:end="31:13">#<cpp:directive pos:start="31:2" pos:end="31:7">ifndef</cpp:directive> <name pos:start="31:9" pos:end="31:13">WIN32</name></cpp:ifndef>

    <if_stmt pos:start="33:5" pos:end="40:0"><if pos:start="33:5" pos:end="40:0">if <condition pos:start="33:8" pos:end="33:50">(<expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:33">qio_channel_command_abort</name><argument_list pos:start="33:34" pos:end="33:45">(<argument pos:start="33:35" pos:end="33:38"><expr pos:start="33:35" pos:end="33:38"><name pos:start="33:35" pos:end="33:38">cioc</name></expr></argument>, <argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">errp</name></expr></argument>)</argument_list></call> <operator pos:start="33:47" pos:end="33:47">&lt;</operator> <literal type="number" pos:start="33:49" pos:end="33:49">0</literal></expr>)</condition> <block pos:start="33:52" pos:end="40:0">{<block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="39:1" pos:end="39:6">#<cpp:directive pos:start="39:2" pos:end="39:6">endif</cpp:directive></cpp:endif>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:10">rv</name> <operator pos:start="41:12" pos:end="41:12">&lt;</operator> <literal type="number" pos:start="41:14" pos:end="41:14">0</literal></expr>)</condition> <block pos:start="41:17" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:52">

        <expr_stmt pos:start="43:9" pos:end="45:52"><expr pos:start="43:9" pos:end="45:51"><call pos:start="43:9" pos:end="45:51"><name pos:start="43:9" pos:end="43:24">error_setg_errno</name><argument_list pos:start="43:25" pos:end="45:51">(<argument pos:start="43:26" pos:end="43:29"><expr pos:start="43:26" pos:end="43:29"><name pos:start="43:26" pos:end="43:29">errp</name></expr></argument>, <argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">errno</name></expr></argument>, <argument pos:start="43:39" pos:end="43:42"><expr pos:start="43:39" pos:end="43:42"><literal type="string" pos:start="43:39" pos:end="43:42">"%s"</literal></expr></argument>,

                         <argument pos:start="45:26" pos:end="45:50"><expr pos:start="45:26" pos:end="45:50"><literal type="string" pos:start="45:26" pos:end="45:50">"Unable to close command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:14">return <expr pos:start="49:12" pos:end="49:13"><name pos:start="49:12" pos:end="49:13">rv</name></expr>;</return>

</block_content>}</block></function>
</unit>
