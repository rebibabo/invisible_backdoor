<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17780.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">check_native_list</name><parameter_list pos:start="1:30" pos:end="3:62">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:37">QObject</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">qobj</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:61"><decl pos:start="3:31" pos:end="3:61"><type pos:start="3:31" pos:end="3:61"><name pos:start="3:31" pos:end="3:56">UserDefNativeListUnionKind</name></type> <name pos:start="3:58" pos:end="3:61">kind</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="175:1">{<block_content pos:start="7:5" pos:end="173:19">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">qlist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:9">qdict</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <call pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:28">qobject_to_qdict</name><argument_list pos:start="15:29" pos:end="15:34">(<argument pos:start="15:30" pos:end="15:33"><expr pos:start="15:30" pos:end="15:33"><name pos:start="15:30" pos:end="15:33">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:12">g_assert</name><argument_list pos:start="17:13" pos:end="17:19">(<argument pos:start="17:14" pos:end="17:18"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:18">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:42"><expr pos:start="19:5" pos:end="19:41"><call pos:start="19:5" pos:end="19:41"><name pos:start="19:5" pos:end="19:12">g_assert</name><argument_list pos:start="19:13" pos:end="19:41">(<argument pos:start="19:14" pos:end="19:40"><expr pos:start="19:14" pos:end="19:40"><call pos:start="19:14" pos:end="19:40"><name pos:start="19:14" pos:end="19:25">qdict_haskey</name><argument_list pos:start="19:26" pos:end="19:40">(<argument pos:start="19:27" pos:end="19:31"><expr pos:start="19:27" pos:end="19:31"><name pos:start="19:27" pos:end="19:31">qdict</name></expr></argument>, <argument pos:start="19:34" pos:end="19:39"><expr pos:start="19:34" pos:end="19:39"><literal type="string" pos:start="19:34" pos:end="19:39">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:67"><expr pos:start="21:5" pos:end="21:66"><name pos:start="21:5" pos:end="21:9">qlist</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:66"><name pos:start="21:13" pos:end="21:22">qlist_copy</name><argument_list pos:start="21:23" pos:end="21:66">(<argument pos:start="21:24" pos:end="21:65"><expr pos:start="21:24" pos:end="21:65"><call pos:start="21:24" pos:end="21:65"><name pos:start="21:24" pos:end="21:39">qobject_to_qlist</name><argument_list pos:start="21:40" pos:end="21:65">(<argument pos:start="21:41" pos:end="21:64"><expr pos:start="21:41" pos:end="21:64"><call pos:start="21:41" pos:end="21:64"><name pos:start="21:41" pos:end="21:49">qdict_get</name><argument_list pos:start="21:50" pos:end="21:64">(<argument pos:start="21:51" pos:end="21:55"><expr pos:start="21:51" pos:end="21:55"><name pos:start="21:51" pos:end="21:55">qdict</name></expr></argument>, <argument pos:start="21:58" pos:end="21:63"><expr pos:start="21:58" pos:end="21:63"><literal type="string" pos:start="21:58" pos:end="21:63">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="25:5" pos:end="171:5">switch <condition pos:start="25:12" pos:end="25:17">(<expr pos:start="25:13" pos:end="25:16"><name pos:start="25:13" pos:end="25:16">kind</name></expr>)</condition> <block pos:start="25:19" pos:end="171:5">{<block_content pos:start="27:5" pos:end="169:31">

    <case pos:start="27:5" pos:end="27:44">case <expr pos:start="27:10" pos:end="27:43"><name pos:start="27:10" pos:end="27:43">USER_DEF_NATIVE_LIST_UNION_KIND_S8</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:45">case <expr pos:start="29:10" pos:end="29:44"><name pos:start="29:10" pos:end="29:44">USER_DEF_NATIVE_LIST_UNION_KIND_S16</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:45">case <expr pos:start="31:10" pos:end="31:44"><name pos:start="31:10" pos:end="31:44">USER_DEF_NATIVE_LIST_UNION_KIND_S32</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:45">case <expr pos:start="33:10" pos:end="33:44"><name pos:start="33:10" pos:end="33:44">USER_DEF_NATIVE_LIST_UNION_KIND_S64</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:44">case <expr pos:start="35:10" pos:end="35:43"><name pos:start="35:10" pos:end="35:43">USER_DEF_NATIVE_LIST_UNION_KIND_U8</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:45">case <expr pos:start="37:10" pos:end="37:44"><name pos:start="37:10" pos:end="37:44">USER_DEF_NATIVE_LIST_UNION_KIND_U16</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:45">case <expr pos:start="39:10" pos:end="39:44"><name pos:start="39:10" pos:end="39:44">USER_DEF_NATIVE_LIST_UNION_KIND_U32</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:45">case <expr pos:start="41:10" pos:end="41:44"><name pos:start="41:10" pos:end="41:44">USER_DEF_NATIVE_LIST_UNION_KIND_U64</name></expr>:</case>

        <comment type="block" pos:start="43:9" pos:end="51:11">/*

         * All integer elements in JSON arrays get stored into QNums

         * when we convert to QObjects, so we can check them all in

         * the same fashion, so simply fall through here.

         */</comment>

    <case pos:start="53:5" pos:end="53:49">case <expr pos:start="53:10" pos:end="53:48"><name pos:start="53:10" pos:end="53:48">USER_DEF_NATIVE_LIST_UNION_KIND_INTEGER</name></expr>:</case>

        <for pos:start="55:9" pos:end="77:9">for <control pos:start="55:13" pos:end="55:32">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:27"><expr pos:start="55:21" pos:end="55:26"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <literal type="number" pos:start="55:25" pos:end="55:26">32</literal></expr>;</condition> <incr pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:29">i</name><operator pos:start="55:30" pos:end="55:31">++</operator></expr></incr>)</control> <block pos:start="55:34" pos:end="77:9">{<block_content pos:start="57:13" pos:end="75:45">

            <decl_stmt pos:start="57:13" pos:end="57:25"><decl pos:start="57:13" pos:end="57:24"><type pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:19">QObject</name> <modifier pos:start="57:21" pos:end="57:21">*</modifier></type><name pos:start="57:22" pos:end="57:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="59:13" pos:end="59:25"><decl pos:start="59:13" pos:end="59:24"><type pos:start="59:13" pos:end="59:18"><name pos:start="59:13" pos:end="59:16">QNum</name> <modifier pos:start="59:18" pos:end="59:18">*</modifier></type><name pos:start="59:19" pos:end="59:24">qvalue</name></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:24"><decl pos:start="61:13" pos:end="61:23"><type pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:19">int64_t</name></type> <name pos:start="61:21" pos:end="61:23">val</name></decl>;</decl_stmt>



            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:15">tmp</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:35"><name pos:start="65:19" pos:end="65:28">qlist_peek</name><argument_list pos:start="65:29" pos:end="65:35">(<argument pos:start="65:30" pos:end="65:34"><expr pos:start="65:30" pos:end="65:34"><name pos:start="65:30" pos:end="65:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:26"><expr pos:start="67:13" pos:end="67:25"><call pos:start="67:13" pos:end="67:25"><name pos:start="67:13" pos:end="67:20">g_assert</name><argument_list pos:start="67:21" pos:end="67:25">(<argument pos:start="67:22" pos:end="67:24"><expr pos:start="67:22" pos:end="67:24"><name pos:start="67:22" pos:end="67:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:42"><expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:18">qvalue</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <call pos:start="69:22" pos:end="69:41"><name pos:start="69:22" pos:end="69:36">qobject_to_qnum</name><argument_list pos:start="69:37" pos:end="69:41">(<argument pos:start="69:38" pos:end="69:40"><expr pos:start="69:38" pos:end="69:40"><name pos:start="69:38" pos:end="69:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:53"><expr pos:start="71:13" pos:end="71:52"><call pos:start="71:13" pos:end="71:52"><name pos:start="71:13" pos:end="71:20">g_assert</name><argument_list pos:start="71:21" pos:end="71:52">(<argument pos:start="71:22" pos:end="71:51"><expr pos:start="71:22" pos:end="71:51"><call pos:start="71:22" pos:end="71:51"><name pos:start="71:22" pos:end="71:37">qnum_get_try_int</name><argument_list pos:start="71:38" pos:end="71:51">(<argument pos:start="71:39" pos:end="71:44"><expr pos:start="71:39" pos:end="71:44"><name pos:start="71:39" pos:end="71:44">qvalue</name></expr></argument>, <argument pos:start="71:47" pos:end="71:50"><expr pos:start="71:47" pos:end="71:50"><operator pos:start="71:47" pos:end="71:47">&amp;</operator><name pos:start="71:48" pos:end="71:50">val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:40"><expr pos:start="73:13" pos:end="73:39"><call pos:start="73:13" pos:end="73:39"><name pos:start="73:13" pos:end="73:27">g_assert_cmpint</name><argument_list pos:start="73:28" pos:end="73:39">(<argument pos:start="73:29" pos:end="73:31"><expr pos:start="73:29" pos:end="73:31"><name pos:start="73:29" pos:end="73:31">val</name></expr></argument>, <argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><operator pos:start="73:34" pos:end="73:35">==</operator></expr></argument>, <argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:45"><expr pos:start="75:13" pos:end="75:44"><call pos:start="75:13" pos:end="75:44"><name pos:start="75:13" pos:end="75:26">qobject_decref</name><argument_list pos:start="75:27" pos:end="75:44">(<argument pos:start="75:28" pos:end="75:43"><expr pos:start="75:28" pos:end="75:43"><call pos:start="75:28" pos:end="75:43"><name pos:start="75:28" pos:end="75:36">qlist_pop</name><argument_list pos:start="75:37" pos:end="75:43">(<argument pos:start="75:38" pos:end="75:42"><expr pos:start="75:38" pos:end="75:42"><name pos:start="75:38" pos:end="75:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:49">case <expr pos:start="81:10" pos:end="81:48"><name pos:start="81:10" pos:end="81:48">USER_DEF_NATIVE_LIST_UNION_KIND_BOOLEAN</name></expr>:</case>

        <for pos:start="83:9" pos:end="99:9">for <control pos:start="83:13" pos:end="83:32">(<init pos:start="83:14" pos:end="83:19"><expr pos:start="83:14" pos:end="83:18"><name pos:start="83:14" pos:end="83:14">i</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <literal type="number" pos:start="83:18" pos:end="83:18">0</literal></expr>;</init> <condition pos:start="83:21" pos:end="83:27"><expr pos:start="83:21" pos:end="83:26"><name pos:start="83:21" pos:end="83:21">i</name> <operator pos:start="83:23" pos:end="83:23">&lt;</operator> <literal type="number" pos:start="83:25" pos:end="83:26">32</literal></expr>;</condition> <incr pos:start="83:29" pos:end="83:31"><expr pos:start="83:29" pos:end="83:31"><name pos:start="83:29" pos:end="83:29">i</name><operator pos:start="83:30" pos:end="83:31">++</operator></expr></incr>)</control> <block pos:start="83:34" pos:end="99:9">{<block_content pos:start="85:13" pos:end="97:45">

            <decl_stmt pos:start="85:13" pos:end="85:25"><decl pos:start="85:13" pos:end="85:24"><type pos:start="85:13" pos:end="85:21"><name pos:start="85:13" pos:end="85:19">QObject</name> <modifier pos:start="85:21" pos:end="85:21">*</modifier></type><name pos:start="85:22" pos:end="85:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="87:13" pos:end="87:26"><decl pos:start="87:13" pos:end="87:25"><type pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:17">QBool</name> <modifier pos:start="87:19" pos:end="87:19">*</modifier></type><name pos:start="87:20" pos:end="87:25">qvalue</name></decl>;</decl_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:36"><expr pos:start="89:13" pos:end="89:35"><name pos:start="89:13" pos:end="89:15">tmp</name> <operator pos:start="89:17" pos:end="89:17">=</operator> <call pos:start="89:19" pos:end="89:35"><name pos:start="89:19" pos:end="89:28">qlist_peek</name><argument_list pos:start="89:29" pos:end="89:35">(<argument pos:start="89:30" pos:end="89:34"><expr pos:start="89:30" pos:end="89:34"><name pos:start="89:30" pos:end="89:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:26"><expr pos:start="91:13" pos:end="91:25"><call pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:20">g_assert</name><argument_list pos:start="91:21" pos:end="91:25">(<argument pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:43"><expr pos:start="93:13" pos:end="93:42"><name pos:start="93:13" pos:end="93:18">qvalue</name> <operator pos:start="93:20" pos:end="93:20">=</operator> <call pos:start="93:22" pos:end="93:42"><name pos:start="93:22" pos:end="93:37">qobject_to_qbool</name><argument_list pos:start="93:38" pos:end="93:42">(<argument pos:start="93:39" pos:end="93:41"><expr pos:start="93:39" pos:end="93:41"><name pos:start="93:39" pos:end="93:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:68"><expr pos:start="95:13" pos:end="95:67"><call pos:start="95:13" pos:end="95:67"><name pos:start="95:13" pos:end="95:27">g_assert_cmpint</name><argument_list pos:start="95:28" pos:end="95:67">(<argument pos:start="95:29" pos:end="95:50"><expr pos:start="95:29" pos:end="95:50"><call pos:start="95:29" pos:end="95:50"><name pos:start="95:29" pos:end="95:42">qbool_get_bool</name><argument_list pos:start="95:43" pos:end="95:50">(<argument pos:start="95:44" pos:end="95:49"><expr pos:start="95:44" pos:end="95:49"><name pos:start="95:44" pos:end="95:49">qvalue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:53" pos:end="95:54"><expr pos:start="95:53" pos:end="95:54"><operator pos:start="95:53" pos:end="95:54">==</operator></expr></argument>, <argument pos:start="95:57" pos:end="95:66"><expr pos:start="95:57" pos:end="95:66"><name pos:start="95:57" pos:end="95:57">i</name> <operator pos:start="95:59" pos:end="95:59">%</operator> <literal type="number" pos:start="95:61" pos:end="95:61">3</literal> <operator pos:start="95:63" pos:end="95:64">==</operator> <literal type="number" pos:start="95:66" pos:end="95:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:45"><expr pos:start="97:13" pos:end="97:44"><call pos:start="97:13" pos:end="97:44"><name pos:start="97:13" pos:end="97:26">qobject_decref</name><argument_list pos:start="97:27" pos:end="97:44">(<argument pos:start="97:28" pos:end="97:43"><expr pos:start="97:28" pos:end="97:43"><call pos:start="97:28" pos:end="97:43"><name pos:start="97:28" pos:end="97:36">qlist_pop</name><argument_list pos:start="97:37" pos:end="97:43">(<argument pos:start="97:38" pos:end="97:42"><expr pos:start="97:38" pos:end="97:42"><name pos:start="97:38" pos:end="97:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:48">case <expr pos:start="103:10" pos:end="103:47"><name pos:start="103:10" pos:end="103:47">USER_DEF_NATIVE_LIST_UNION_KIND_STRING</name></expr>:</case>

        <for pos:start="105:9" pos:end="125:9">for <control pos:start="105:13" pos:end="105:32">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:27"><expr pos:start="105:21" pos:end="105:26"><name pos:start="105:21" pos:end="105:21">i</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <literal type="number" pos:start="105:25" pos:end="105:26">32</literal></expr>;</condition> <incr pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:29">i</name><operator pos:start="105:30" pos:end="105:31">++</operator></expr></incr>)</control> <block pos:start="105:34" pos:end="125:9">{<block_content pos:start="107:13" pos:end="123:45">

            <decl_stmt pos:start="107:13" pos:end="107:25"><decl pos:start="107:13" pos:end="107:24"><type pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:19">QObject</name> <modifier pos:start="107:21" pos:end="107:21">*</modifier></type><name pos:start="107:22" pos:end="107:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="109:13" pos:end="109:28"><decl pos:start="109:13" pos:end="109:27"><type pos:start="109:13" pos:end="109:21"><name pos:start="109:13" pos:end="109:19">QString</name> <modifier pos:start="109:21" pos:end="109:21">*</modifier></type><name pos:start="109:22" pos:end="109:27">qvalue</name></decl>;</decl_stmt>

            <decl_stmt pos:start="111:13" pos:end="111:25"><decl pos:start="111:13" pos:end="111:24"><type pos:start="111:13" pos:end="111:17"><name pos:start="111:13" pos:end="111:17">gchar</name></type> <name pos:start="111:19" pos:end="111:24"><name pos:start="111:19" pos:end="111:21">str</name><index pos:start="111:22" pos:end="111:24">[<expr pos:start="111:23" pos:end="111:23"><literal type="number" pos:start="111:23" pos:end="111:23">8</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:15">tmp</name> <operator pos:start="113:17" pos:end="113:17">=</operator> <call pos:start="113:19" pos:end="113:35"><name pos:start="113:19" pos:end="113:28">qlist_peek</name><argument_list pos:start="113:29" pos:end="113:35">(<argument pos:start="113:30" pos:end="113:34"><expr pos:start="113:30" pos:end="113:34"><name pos:start="113:30" pos:end="113:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><call pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:20">g_assert</name><argument_list pos:start="115:21" pos:end="115:25">(<argument pos:start="115:22" pos:end="115:24"><expr pos:start="115:22" pos:end="115:24"><name pos:start="115:22" pos:end="115:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:45"><expr pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:18">qvalue</name> <operator pos:start="117:20" pos:end="117:20">=</operator> <call pos:start="117:22" pos:end="117:44"><name pos:start="117:22" pos:end="117:39">qobject_to_qstring</name><argument_list pos:start="117:40" pos:end="117:44">(<argument pos:start="117:41" pos:end="117:43"><expr pos:start="117:41" pos:end="117:43"><name pos:start="117:41" pos:end="117:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:34"><expr pos:start="119:13" pos:end="119:33"><call pos:start="119:13" pos:end="119:33"><name pos:start="119:13" pos:end="119:19">sprintf</name><argument_list pos:start="119:20" pos:end="119:33">(<argument pos:start="119:21" pos:end="119:23"><expr pos:start="119:21" pos:end="119:23"><name pos:start="119:21" pos:end="119:23">str</name></expr></argument>, <argument pos:start="119:26" pos:end="119:29"><expr pos:start="119:26" pos:end="119:29"><literal type="string" pos:start="119:26" pos:end="119:29">"%d"</literal></expr></argument>, <argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:62"><expr pos:start="121:13" pos:end="121:61"><call pos:start="121:13" pos:end="121:61"><name pos:start="121:13" pos:end="121:27">g_assert_cmpstr</name><argument_list pos:start="121:28" pos:end="121:61">(<argument pos:start="121:29" pos:end="121:51"><expr pos:start="121:29" pos:end="121:51"><call pos:start="121:29" pos:end="121:51"><name pos:start="121:29" pos:end="121:43">qstring_get_str</name><argument_list pos:start="121:44" pos:end="121:51">(<argument pos:start="121:45" pos:end="121:50"><expr pos:start="121:45" pos:end="121:50"><name pos:start="121:45" pos:end="121:50">qvalue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="121:54" pos:end="121:55"><expr pos:start="121:54" pos:end="121:55"><operator pos:start="121:54" pos:end="121:55">==</operator></expr></argument>, <argument pos:start="121:58" pos:end="121:60"><expr pos:start="121:58" pos:end="121:60"><name pos:start="121:58" pos:end="121:60">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:45"><expr pos:start="123:13" pos:end="123:44"><call pos:start="123:13" pos:end="123:44"><name pos:start="123:13" pos:end="123:26">qobject_decref</name><argument_list pos:start="123:27" pos:end="123:44">(<argument pos:start="123:28" pos:end="123:43"><expr pos:start="123:28" pos:end="123:43"><call pos:start="123:28" pos:end="123:43"><name pos:start="123:28" pos:end="123:36">qlist_pop</name><argument_list pos:start="123:37" pos:end="123:43">(<argument pos:start="123:38" pos:end="123:42"><expr pos:start="123:38" pos:end="123:42"><name pos:start="123:38" pos:end="123:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <case pos:start="129:5" pos:end="129:48">case <expr pos:start="129:10" pos:end="129:47"><name pos:start="129:10" pos:end="129:47">USER_DEF_NATIVE_LIST_UNION_KIND_NUMBER</name></expr>:</case>

        <for pos:start="131:9" pos:end="163:9">for <control pos:start="131:13" pos:end="131:32">(<init pos:start="131:14" pos:end="131:19"><expr pos:start="131:14" pos:end="131:18"><name pos:start="131:14" pos:end="131:14">i</name> <operator pos:start="131:16" pos:end="131:16">=</operator> <literal type="number" pos:start="131:18" pos:end="131:18">0</literal></expr>;</init> <condition pos:start="131:21" pos:end="131:27"><expr pos:start="131:21" pos:end="131:26"><name pos:start="131:21" pos:end="131:21">i</name> <operator pos:start="131:23" pos:end="131:23">&lt;</operator> <literal type="number" pos:start="131:25" pos:end="131:26">32</literal></expr>;</condition> <incr pos:start="131:29" pos:end="131:31"><expr pos:start="131:29" pos:end="131:31"><name pos:start="131:29" pos:end="131:29">i</name><operator pos:start="131:30" pos:end="131:31">++</operator></expr></incr>)</control> <block pos:start="131:34" pos:end="163:9">{<block_content pos:start="133:13" pos:end="161:47">

            <decl_stmt pos:start="133:13" pos:end="133:25"><decl pos:start="133:13" pos:end="133:24"><type pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:19">QObject</name> <modifier pos:start="133:21" pos:end="133:21">*</modifier></type><name pos:start="133:22" pos:end="133:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:25"><decl pos:start="135:13" pos:end="135:24"><type pos:start="135:13" pos:end="135:18"><name pos:start="135:13" pos:end="135:16">QNum</name> <modifier pos:start="135:18" pos:end="135:18">*</modifier></type><name pos:start="135:19" pos:end="135:24">qvalue</name></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:56"><decl pos:start="137:13" pos:end="137:55"><type pos:start="137:13" pos:end="137:21"><name pos:start="137:13" pos:end="137:19">GString</name> <modifier pos:start="137:21" pos:end="137:21">*</modifier></type><name pos:start="137:22" pos:end="137:36">double_expected</name> <init pos:start="137:38" pos:end="137:55">= <expr pos:start="137:40" pos:end="137:55"><call pos:start="137:40" pos:end="137:55"><name pos:start="137:40" pos:end="137:51">g_string_new</name><argument_list pos:start="137:52" pos:end="137:55">(<argument pos:start="137:53" pos:end="137:54"><expr pos:start="137:53" pos:end="137:54"><literal type="string" pos:start="137:53" pos:end="137:54">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:54"><decl pos:start="139:13" pos:end="139:53"><type pos:start="139:13" pos:end="139:21"><name pos:start="139:13" pos:end="139:19">GString</name> <modifier pos:start="139:21" pos:end="139:21">*</modifier></type><name pos:start="139:22" pos:end="139:34">double_actual</name> <init pos:start="139:36" pos:end="139:53">= <expr pos:start="139:38" pos:end="139:53"><call pos:start="139:38" pos:end="139:53"><name pos:start="139:38" pos:end="139:49">g_string_new</name><argument_list pos:start="139:50" pos:end="139:53">(<argument pos:start="139:51" pos:end="139:52"><expr pos:start="139:51" pos:end="139:52"><literal type="string" pos:start="139:51" pos:end="139:52">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:36"><expr pos:start="143:13" pos:end="143:35"><name pos:start="143:13" pos:end="143:15">tmp</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:35"><name pos:start="143:19" pos:end="143:28">qlist_peek</name><argument_list pos:start="143:29" pos:end="143:35">(<argument pos:start="143:30" pos:end="143:34"><expr pos:start="143:30" pos:end="143:34"><name pos:start="143:30" pos:end="143:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:26"><expr pos:start="145:13" pos:end="145:25"><call pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:20">g_assert</name><argument_list pos:start="145:21" pos:end="145:25">(<argument pos:start="145:22" pos:end="145:24"><expr pos:start="145:22" pos:end="145:24"><name pos:start="145:22" pos:end="145:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:42"><expr pos:start="147:13" pos:end="147:41"><name pos:start="147:13" pos:end="147:18">qvalue</name> <operator pos:start="147:20" pos:end="147:20">=</operator> <call pos:start="147:22" pos:end="147:41"><name pos:start="147:22" pos:end="147:36">qobject_to_qnum</name><argument_list pos:start="147:37" pos:end="147:41">(<argument pos:start="147:38" pos:end="147:40"><expr pos:start="147:38" pos:end="147:40"><name pos:start="147:38" pos:end="147:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:68"><expr pos:start="149:13" pos:end="149:67"><call pos:start="149:13" pos:end="149:67"><name pos:start="149:13" pos:end="149:27">g_string_printf</name><argument_list pos:start="149:28" pos:end="149:67">(<argument pos:start="149:29" pos:end="149:43"><expr pos:start="149:29" pos:end="149:43"><name pos:start="149:29" pos:end="149:43">double_expected</name></expr></argument>, <argument pos:start="149:46" pos:end="149:51"><expr pos:start="149:46" pos:end="149:51"><literal type="string" pos:start="149:46" pos:end="149:51">"%.6f"</literal></expr></argument>, <argument pos:start="149:54" pos:end="149:66"><expr pos:start="149:54" pos:end="149:66"><operator pos:start="149:54" pos:end="149:54">(</operator><name pos:start="149:55" pos:end="149:60">double</name><operator pos:start="149:61" pos:end="149:61">)</operator><name pos:start="149:62" pos:end="149:62">i</name> <operator pos:start="149:64" pos:end="149:64">/</operator> <literal type="number" pos:start="149:66" pos:end="149:66">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:76"><expr pos:start="151:13" pos:end="151:75"><call pos:start="151:13" pos:end="151:75"><name pos:start="151:13" pos:end="151:27">g_string_printf</name><argument_list pos:start="151:28" pos:end="151:75">(<argument pos:start="151:29" pos:end="151:41"><expr pos:start="151:29" pos:end="151:41"><name pos:start="151:29" pos:end="151:41">double_actual</name></expr></argument>, <argument pos:start="151:44" pos:end="151:49"><expr pos:start="151:44" pos:end="151:49"><literal type="string" pos:start="151:44" pos:end="151:49">"%.6f"</literal></expr></argument>, <argument pos:start="151:52" pos:end="151:74"><expr pos:start="151:52" pos:end="151:74"><call pos:start="151:52" pos:end="151:74"><name pos:start="151:52" pos:end="151:66">qnum_get_double</name><argument_list pos:start="151:67" pos:end="151:74">(<argument pos:start="151:68" pos:end="151:73"><expr pos:start="151:68" pos:end="151:73"><name pos:start="151:68" pos:end="151:73">qvalue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:74"><expr pos:start="153:13" pos:end="153:73"><call pos:start="153:13" pos:end="153:73"><name pos:start="153:13" pos:end="153:27">g_assert_cmpstr</name><argument_list pos:start="153:28" pos:end="153:73">(<argument pos:start="153:29" pos:end="153:46"><expr pos:start="153:29" pos:end="153:46"><name pos:start="153:29" pos:end="153:46"><name pos:start="153:29" pos:end="153:41">double_actual</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:46">str</name></name></expr></argument>, <argument pos:start="153:49" pos:end="153:50"><expr pos:start="153:49" pos:end="153:50"><operator pos:start="153:49" pos:end="153:50">==</operator></expr></argument>, <argument pos:start="153:53" pos:end="153:72"><expr pos:start="153:53" pos:end="153:72"><name pos:start="153:53" pos:end="153:72"><name pos:start="153:53" pos:end="153:67">double_expected</name><operator pos:start="153:68" pos:end="153:69">-&gt;</operator><name pos:start="153:70" pos:end="153:72">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:45"><expr pos:start="157:13" pos:end="157:44"><call pos:start="157:13" pos:end="157:44"><name pos:start="157:13" pos:end="157:26">qobject_decref</name><argument_list pos:start="157:27" pos:end="157:44">(<argument pos:start="157:28" pos:end="157:43"><expr pos:start="157:28" pos:end="157:43"><call pos:start="157:28" pos:end="157:43"><name pos:start="157:28" pos:end="157:36">qlist_pop</name><argument_list pos:start="157:37" pos:end="157:43">(<argument pos:start="157:38" pos:end="157:42"><expr pos:start="157:38" pos:end="157:42"><name pos:start="157:38" pos:end="157:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:49"><expr pos:start="159:13" pos:end="159:48"><call pos:start="159:13" pos:end="159:48"><name pos:start="159:13" pos:end="159:25">g_string_free</name><argument_list pos:start="159:26" pos:end="159:48">(<argument pos:start="159:27" pos:end="159:41"><expr pos:start="159:27" pos:end="159:41"><name pos:start="159:27" pos:end="159:41">double_expected</name></expr></argument>, <argument pos:start="159:44" pos:end="159:47"><expr pos:start="159:44" pos:end="159:47"><name pos:start="159:44" pos:end="159:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:47"><expr pos:start="161:13" pos:end="161:46"><call pos:start="161:13" pos:end="161:46"><name pos:start="161:13" pos:end="161:25">g_string_free</name><argument_list pos:start="161:26" pos:end="161:46">(<argument pos:start="161:27" pos:end="161:39"><expr pos:start="161:27" pos:end="161:39"><name pos:start="161:27" pos:end="161:39">double_actual</name></expr></argument>, <argument pos:start="161:42" pos:end="161:45"><expr pos:start="161:42" pos:end="161:45"><name pos:start="161:42" pos:end="161:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <default pos:start="167:5" pos:end="167:12">default:</default>

        <expr_stmt pos:start="169:9" pos:end="169:31"><expr pos:start="169:9" pos:end="169:30"><call pos:start="169:9" pos:end="169:30"><name pos:start="169:9" pos:end="169:28">g_assert_not_reached</name><argument_list pos:start="169:29" pos:end="169:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="173:5" pos:end="173:19"><expr pos:start="173:5" pos:end="173:18"><call pos:start="173:5" pos:end="173:18"><name pos:start="173:5" pos:end="173:11">QDECREF</name><argument_list pos:start="173:12" pos:end="173:18">(<argument pos:start="173:13" pos:end="173:17"><expr pos:start="173:13" pos:end="173:17"><name pos:start="173:13" pos:end="173:17">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
