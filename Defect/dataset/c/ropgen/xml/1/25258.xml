<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25258.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">ogg_read_page</name><parameter_list pos:start="1:25" pos:end="1:54">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:53"><decl pos:start="1:46" pos:end="1:53"><type pos:start="1:46" pos:end="1:53"><name pos:start="1:46" pos:end="1:48">int</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:53">str</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:5" pos:end="231:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">bc</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:14">ogg</name></name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">ogg</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:21">ogg_stream</name></name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:25">os</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>, <decl pos:start="11:14" pos:end="11:18"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">i</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">flags</name></decl>, <decl pos:start="13:16" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:20">nsegs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint64_t</name></type> <name pos:start="15:14" pos:end="15:15">gp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">serial</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:18"><decl pos:start="19:5" pos:end="19:12"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:12">size</name></decl>, <decl pos:start="19:15" pos:end="19:17"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:17">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:11">uint8_t</name></type> <name pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:16">sync</name><index pos:start="21:17" pos:end="21:19">[<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:10">sp</name> <init pos:start="23:12" pos:end="23:14">= <expr pos:start="23:14" pos:end="23:14"><literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:33"><expr pos:start="27:5" pos:end="27:32"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:32"><name pos:start="27:11" pos:end="27:19">avio_read</name><argument_list pos:start="27:20" pos:end="27:32">(<argument pos:start="27:21" pos:end="27:22"><expr pos:start="27:21" pos:end="27:22"><name pos:start="27:21" pos:end="27:22">bc</name></expr></argument>, <argument pos:start="27:25" pos:end="27:28"><expr pos:start="27:25" pos:end="27:28"><name pos:start="27:25" pos:end="27:28">sync</name></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:43"><if pos:start="29:5" pos:end="31:43">if <condition pos:start="29:8" pos:end="29:16">(<expr pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">&lt;</operator> <literal type="number" pos:start="29:15" pos:end="29:15">4</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:43"><block_content pos:start="31:9" pos:end="31:43">

        <return pos:start="31:9" pos:end="31:43">return <expr pos:start="31:16" pos:end="31:42"><ternary pos:start="31:16" pos:end="31:42"><condition pos:start="31:16" pos:end="31:24"><expr pos:start="31:16" pos:end="31:22"><name pos:start="31:16" pos:end="31:18">ret</name> <operator pos:start="31:20" pos:end="31:20">&lt;</operator> <literal type="number" pos:start="31:22" pos:end="31:22">0</literal></expr> ?</condition><then pos:start="31:26" pos:end="31:28"> <expr pos:start="31:26" pos:end="31:28"><name pos:start="31:26" pos:end="31:28">ret</name></expr> </then><else pos:start="31:30" pos:end="31:42">: <expr pos:start="31:32" pos:end="31:42"><name pos:start="31:32" pos:end="31:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <do pos:start="35:5" pos:end="59:33">do<block pos:start="35:7" pos:end="59:5">{<block_content pos:start="37:9" pos:end="57:27">

        <decl_stmt pos:start="37:9" pos:end="37:14"><decl pos:start="37:9" pos:end="37:13"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">c</name></decl>;</decl_stmt>



        <if_stmt pos:start="41:9" pos:end="47:18"><if pos:start="41:9" pos:end="47:18">if <condition pos:start="41:12" pos:end="45:67">(<expr pos:start="41:13" pos:end="45:66"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:16">sync</name><index pos:start="41:17" pos:end="41:24">[<expr pos:start="41:18" pos:end="41:23"><name pos:start="41:18" pos:end="41:19">sp</name> <operator pos:start="41:21" pos:end="41:21">&amp;</operator> <literal type="number" pos:start="41:23" pos:end="41:23">3</literal></expr>]</index></name> <operator pos:start="41:26" pos:end="41:27">==</operator> <literal type="char" pos:start="41:29" pos:end="41:31">'O'</literal> <operator pos:start="41:33" pos:end="41:34">&amp;&amp;</operator>

            <name pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:16">sync</name><index pos:start="43:17" pos:end="43:30">[<expr pos:start="43:18" pos:end="43:29"><operator pos:start="43:18" pos:end="43:18">(</operator><name pos:start="43:19" pos:end="43:20">sp</name> <operator pos:start="43:22" pos:end="43:22">+</operator> <literal type="number" pos:start="43:24" pos:end="43:24">1</literal><operator pos:start="43:25" pos:end="43:25">)</operator> <operator pos:start="43:27" pos:end="43:27">&amp;</operator> <literal type="number" pos:start="43:29" pos:end="43:29">3</literal></expr>]</index></name> <operator pos:start="43:32" pos:end="43:33">==</operator> <literal type="char" pos:start="43:35" pos:end="43:37">'g'</literal> <operator pos:start="43:39" pos:end="43:40">&amp;&amp;</operator>

            <name pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:16">sync</name><index pos:start="45:17" pos:end="45:30">[<expr pos:start="45:18" pos:end="45:29"><operator pos:start="45:18" pos:end="45:18">(</operator><name pos:start="45:19" pos:end="45:20">sp</name> <operator pos:start="45:22" pos:end="45:22">+</operator> <literal type="number" pos:start="45:24" pos:end="45:24">2</literal><operator pos:start="45:25" pos:end="45:25">)</operator> <operator pos:start="45:27" pos:end="45:27">&amp;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">3</literal></expr>]</index></name> <operator pos:start="45:32" pos:end="45:33">==</operator> <literal type="char" pos:start="45:35" pos:end="45:37">'g'</literal> <operator pos:start="45:39" pos:end="45:40">&amp;&amp;</operator> <name pos:start="45:42" pos:end="45:59"><name pos:start="45:42" pos:end="45:45">sync</name><index pos:start="45:46" pos:end="45:59">[<expr pos:start="45:47" pos:end="45:58"><operator pos:start="45:47" pos:end="45:47">(</operator><name pos:start="45:48" pos:end="45:49">sp</name> <operator pos:start="45:51" pos:end="45:51">+</operator> <literal type="number" pos:start="45:53" pos:end="45:53">3</literal><operator pos:start="45:54" pos:end="45:54">)</operator> <operator pos:start="45:56" pos:end="45:56">&amp;</operator> <literal type="number" pos:start="45:58" pos:end="45:58">3</literal></expr>]</index></name> <operator pos:start="45:61" pos:end="45:62">==</operator> <literal type="char" pos:start="45:64" pos:end="45:66">'S'</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:18"><block_content pos:start="47:13" pos:end="47:18">

            <break pos:start="47:13" pos:end="47:18">break;</break></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:9">c</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:19">avio_r8</name><argument_list pos:start="51:20" pos:end="51:23">(<argument pos:start="51:21" pos:end="51:22"><expr pos:start="51:21" pos:end="51:22"><name pos:start="51:21" pos:end="51:22">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:31"><if pos:start="53:9" pos:end="55:31">if <condition pos:start="53:12" pos:end="53:28">(<expr pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:27"><name pos:start="53:13" pos:end="53:14">bc</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:27">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:31"><block_content pos:start="55:13" pos:end="55:31">

            <return pos:start="55:13" pos:end="55:31">return <expr pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:27"><expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:12">sync</name><index pos:start="57:13" pos:end="57:22">[<expr pos:start="57:14" pos:end="57:21"><name pos:start="57:14" pos:end="57:15">sp</name><operator pos:start="57:16" pos:end="57:17">++</operator> <operator pos:start="57:19" pos:end="57:19">&amp;</operator> <literal type="number" pos:start="57:21" pos:end="57:21">3</literal></expr>]</index></name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:26">c</name></expr>;</expr_stmt>

    </block_content>}</block>while <condition pos:start="59:12" pos:end="59:32">(<expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:13">i</name><operator pos:start="59:14" pos:end="59:15">++</operator> <operator pos:start="59:17" pos:end="59:17">&lt;</operator> <name pos:start="59:19" pos:end="59:31">MAX_PAGE_SIZE</name></expr>)</condition>;</do>



    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:27">(<expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:9">i</name> <operator pos:start="63:11" pos:end="63:12">&gt;=</operator> <name pos:start="63:14" pos:end="63:26">MAX_PAGE_SIZE</name></expr>)</condition><block pos:start="63:28" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:35">

        <expr_stmt pos:start="65:9" pos:end="65:63"><expr pos:start="65:9" pos:end="65:62"><call pos:start="65:9" pos:end="65:62"><name pos:start="65:9" pos:end="65:14">av_log</name> <argument_list pos:start="65:16" pos:end="65:62">(<argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">s</name></expr></argument>, <argument pos:start="65:20" pos:end="65:30"><expr pos:start="65:20" pos:end="65:30"><name pos:start="65:20" pos:end="65:30">AV_LOG_INFO</name></expr></argument>, <argument pos:start="65:33" pos:end="65:61"><expr pos:start="65:33" pos:end="65:61"><literal type="string" pos:start="65:33" pos:end="65:61">"ogg, can't find sync word\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:35">return <expr pos:start="67:16" pos:end="67:34"><name pos:start="67:16" pos:end="67:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="75:35"><if pos:start="73:5" pos:end="75:35">if <condition pos:start="73:8" pos:end="73:25">(<expr pos:start="73:9" pos:end="73:24"><call pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:15">avio_r8</name><argument_list pos:start="73:16" pos:end="73:19">(<argument pos:start="73:17" pos:end="73:18"><expr pos:start="73:17" pos:end="73:18"><name pos:start="73:17" pos:end="73:18">bc</name></expr></argument>)</argument_list></call> <operator pos:start="73:21" pos:end="73:22">!=</operator> <literal type="number" pos:start="73:24" pos:end="73:24">0</literal></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:35"><block_content pos:start="75:9" pos:end="75:35">      <comment type="block" pos:start="73:32" pos:end="73:44">/* version */</comment>

        <return pos:start="75:9" pos:end="75:35">return <expr pos:start="75:16" pos:end="75:34"><name pos:start="75:16" pos:end="75:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:9">flags</name> <operator pos:start="79:11" pos:end="79:11">=</operator> <call pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:19">avio_r8</name><argument_list pos:start="79:20" pos:end="79:23">(<argument pos:start="79:21" pos:end="79:22"><expr pos:start="79:21" pos:end="79:22"><name pos:start="79:21" pos:end="79:22">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:24"><expr pos:start="81:5" pos:end="81:23"><name pos:start="81:5" pos:end="81:6">gp</name> <operator pos:start="81:8" pos:end="81:8">=</operator> <call pos:start="81:10" pos:end="81:23"><name pos:start="81:10" pos:end="81:18">avio_rl64</name> <argument_list pos:start="81:20" pos:end="81:23">(<argument pos:start="81:21" pos:end="81:22"><expr pos:start="81:21" pos:end="81:22"><name pos:start="81:21" pos:end="81:22">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:28"><expr pos:start="83:5" pos:end="83:27"><name pos:start="83:5" pos:end="83:10">serial</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <call pos:start="83:14" pos:end="83:27"><name pos:start="83:14" pos:end="83:22">avio_rl32</name> <argument_list pos:start="83:24" pos:end="83:27">(<argument pos:start="83:25" pos:end="83:26"><expr pos:start="83:25" pos:end="83:26"><name pos:start="83:25" pos:end="83:26">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:21"><expr pos:start="85:5" pos:end="85:20"><call pos:start="85:5" pos:end="85:20"><name pos:start="85:5" pos:end="85:13">avio_skip</name><argument_list pos:start="85:14" pos:end="85:20">(<argument pos:start="85:15" pos:end="85:16"><expr pos:start="85:15" pos:end="85:16"><name pos:start="85:15" pos:end="85:16">bc</name></expr></argument>, <argument pos:start="85:19" pos:end="85:19"><expr pos:start="85:19" pos:end="85:19"><literal type="number" pos:start="85:19" pos:end="85:19">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:23" pos:end="85:36">/* seq, crc */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:9">nsegs</name> <operator pos:start="87:11" pos:end="87:11">=</operator> <call pos:start="87:13" pos:end="87:23"><name pos:start="87:13" pos:end="87:19">avio_r8</name><argument_list pos:start="87:20" pos:end="87:23">(<argument pos:start="87:21" pos:end="87:22"><expr pos:start="87:21" pos:end="87:22"><name pos:start="87:21" pos:end="87:22">bc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:7">idx</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:39"><name pos:start="91:11" pos:end="91:25">ogg_find_stream</name> <argument_list pos:start="91:27" pos:end="91:39">(<argument pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><name pos:start="91:28" pos:end="91:30">ogg</name></expr></argument>, <argument pos:start="91:33" pos:end="91:38"><expr pos:start="91:33" pos:end="91:38"><name pos:start="91:33" pos:end="91:38">serial</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="127:5"><if pos:start="93:5" pos:end="127:5">if <condition pos:start="93:8" pos:end="93:16">(<expr pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:11">idx</name> <operator pos:start="93:13" pos:end="93:13">&lt;</operator> <literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>)</condition><block pos:start="93:17" pos:end="127:5">{<block_content pos:start="95:9" pos:end="125:23">

        <if_stmt pos:start="95:9" pos:end="121:9"><if pos:start="95:9" pos:end="117:9">if <condition pos:start="95:12" pos:end="95:25">(<expr pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:15">ogg</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:24">headers</name></name></expr>)</condition> <block pos:start="95:27" pos:end="117:9">{<block_content pos:start="97:13" pos:end="115:47">

            <decl_stmt pos:start="97:13" pos:end="97:18"><decl pos:start="97:13" pos:end="97:17"><type pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">int</name></type> <name pos:start="97:17" pos:end="97:17">n</name></decl>;</decl_stmt>



            <for pos:start="101:13" pos:end="109:13">for <control pos:start="101:17" pos:end="101:47">(<init pos:start="101:18" pos:end="101:23"><expr pos:start="101:18" pos:end="101:22"><name pos:start="101:18" pos:end="101:18">n</name> <operator pos:start="101:20" pos:end="101:20">=</operator> <literal type="number" pos:start="101:22" pos:end="101:22">0</literal></expr>;</init> <condition pos:start="101:25" pos:end="101:42"><expr pos:start="101:25" pos:end="101:41"><name pos:start="101:25" pos:end="101:25">n</name> <operator pos:start="101:27" pos:end="101:27">&lt;</operator> <name pos:start="101:29" pos:end="101:41"><name pos:start="101:29" pos:end="101:31">ogg</name><operator pos:start="101:32" pos:end="101:33">-&gt;</operator><name pos:start="101:34" pos:end="101:41">nstreams</name></name></expr>;</condition> <incr pos:start="101:44" pos:end="101:46"><expr pos:start="101:44" pos:end="101:46"><name pos:start="101:44" pos:end="101:44">n</name><operator pos:start="101:45" pos:end="101:46">++</operator></expr></incr>)</control> <block pos:start="101:49" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:55">

                <expr_stmt pos:start="103:17" pos:end="103:47"><expr pos:start="103:17" pos:end="103:46"><call pos:start="103:17" pos:end="103:46"><name pos:start="103:17" pos:end="103:24">av_freep</name><argument_list pos:start="103:25" pos:end="103:46">(<argument pos:start="103:26" pos:end="103:45"><expr pos:start="103:26" pos:end="103:45"><operator pos:start="103:26" pos:end="103:26">&amp;</operator><name pos:start="103:27" pos:end="103:41"><name pos:start="103:27" pos:end="103:29">ogg</name><operator pos:start="103:30" pos:end="103:31">-&gt;</operator><name pos:start="103:32" pos:end="103:38">streams</name><index pos:start="103:39" pos:end="103:41">[<expr pos:start="103:40" pos:end="103:40"><name pos:start="103:40" pos:end="103:40">n</name></expr>]</index></name><operator pos:start="103:42" pos:end="103:42">.</operator><name pos:start="103:43" pos:end="103:45">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="107:55"><if pos:start="105:17" pos:end="107:55">if <condition pos:start="105:20" pos:end="105:93">(<expr pos:start="105:21" pos:end="105:92"><operator pos:start="105:21" pos:end="105:21">!</operator><name pos:start="105:22" pos:end="105:31"><name pos:start="105:22" pos:end="105:24">ogg</name><operator pos:start="105:25" pos:end="105:26">-&gt;</operator><name pos:start="105:27" pos:end="105:31">state</name></name> <operator pos:start="105:33" pos:end="105:34">||</operator> <name pos:start="105:36" pos:end="105:57"><name pos:start="105:36" pos:end="105:38">ogg</name><operator pos:start="105:39" pos:end="105:40">-&gt;</operator><name pos:start="105:41" pos:end="105:45">state</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:54">streams</name><index pos:start="105:55" pos:end="105:57">[<expr pos:start="105:56" pos:end="105:56"><name pos:start="105:56" pos:end="105:56">n</name></expr>]</index></name><operator pos:start="105:58" pos:end="105:58">.</operator><name pos:start="105:59" pos:end="105:65">private</name> <operator pos:start="105:67" pos:end="105:68">!=</operator> <name pos:start="105:70" pos:end="105:84"><name pos:start="105:70" pos:end="105:72">ogg</name><operator pos:start="105:73" pos:end="105:74">-&gt;</operator><name pos:start="105:75" pos:end="105:81">streams</name><index pos:start="105:82" pos:end="105:84">[<expr pos:start="105:83" pos:end="105:83"><name pos:start="105:83" pos:end="105:83">n</name></expr>]</index></name><operator pos:start="105:85" pos:end="105:85">.</operator><name pos:start="105:86" pos:end="105:92">private</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:55"><block_content pos:start="107:21" pos:end="107:55">

                    <expr_stmt pos:start="107:21" pos:end="107:55"><expr pos:start="107:21" pos:end="107:54"><call pos:start="107:21" pos:end="107:54"><name pos:start="107:21" pos:end="107:28">av_freep</name><argument_list pos:start="107:29" pos:end="107:54">(<argument pos:start="107:30" pos:end="107:53"><expr pos:start="107:30" pos:end="107:53"><operator pos:start="107:30" pos:end="107:30">&amp;</operator><name pos:start="107:31" pos:end="107:45"><name pos:start="107:31" pos:end="107:33">ogg</name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:42">streams</name><index pos:start="107:43" pos:end="107:45">[<expr pos:start="107:44" pos:end="107:44"><name pos:start="107:44" pos:end="107:44">n</name></expr>]</index></name><operator pos:start="107:46" pos:end="107:46">.</operator><name pos:start="107:47" pos:end="107:53">private</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="111:13" pos:end="111:31"><expr pos:start="111:13" pos:end="111:30"><name pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:15">ogg</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:23">curidx</name></name>   <operator pos:start="111:27" pos:end="111:27">=</operator> <operator pos:start="111:29" pos:end="111:29">-</operator><literal type="number" pos:start="111:30" pos:end="111:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:30"><expr pos:start="113:13" pos:end="113:29"><name pos:start="113:13" pos:end="113:25"><name pos:start="113:13" pos:end="113:15">ogg</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:25">nstreams</name></name> <operator pos:start="113:27" pos:end="113:27">=</operator> <literal type="number" pos:start="113:29" pos:end="113:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:47"><expr pos:start="115:13" pos:end="115:46"><name pos:start="115:13" pos:end="115:15">idx</name> <operator pos:start="115:17" pos:end="115:17">=</operator> <call pos:start="115:19" pos:end="115:46"><name pos:start="115:19" pos:end="115:32">ogg_new_stream</name><argument_list pos:start="115:33" pos:end="115:46">(<argument pos:start="115:34" pos:end="115:34"><expr pos:start="115:34" pos:end="115:34"><name pos:start="115:34" pos:end="115:34">s</name></expr></argument>, <argument pos:start="115:37" pos:end="115:42"><expr pos:start="115:37" pos:end="115:42"><name pos:start="115:37" pos:end="115:42">serial</name></expr></argument>, <argument pos:start="115:45" pos:end="115:45"><expr pos:start="115:45" pos:end="115:45"><literal type="number" pos:start="115:45" pos:end="115:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="121:9">else <block pos:start="117:16" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:47">

            <expr_stmt pos:start="119:13" pos:end="119:47"><expr pos:start="119:13" pos:end="119:46"><name pos:start="119:13" pos:end="119:15">idx</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="119:46"><name pos:start="119:19" pos:end="119:32">ogg_new_stream</name><argument_list pos:start="119:33" pos:end="119:46">(<argument pos:start="119:34" pos:end="119:34"><expr pos:start="119:34" pos:end="119:34"><name pos:start="119:34" pos:end="119:34">s</name></expr></argument>, <argument pos:start="119:37" pos:end="119:42"><expr pos:start="119:37" pos:end="119:42"><name pos:start="119:37" pos:end="119:42">serial</name></expr></argument>, <argument pos:start="119:45" pos:end="119:45"><expr pos:start="119:45" pos:end="119:45"><literal type="number" pos:start="119:45" pos:end="119:45">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="123:9" pos:end="125:23"><if pos:start="123:9" pos:end="125:23">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:15">idx</name> <operator pos:start="123:17" pos:end="123:17">&lt;</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:23"><block_content pos:start="125:13" pos:end="125:23">

            <return pos:start="125:13" pos:end="125:23">return <expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">idx</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:28"><expr pos:start="131:5" pos:end="131:27"><name pos:start="131:5" pos:end="131:6">os</name> <operator pos:start="131:8" pos:end="131:8">=</operator> <name pos:start="131:10" pos:end="131:21"><name pos:start="131:10" pos:end="131:12">ogg</name><operator pos:start="131:13" pos:end="131:14">-&gt;</operator><name pos:start="131:15" pos:end="131:21">streams</name></name> <operator pos:start="131:23" pos:end="131:23">+</operator> <name pos:start="131:25" pos:end="131:27">idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:38"><expr pos:start="133:5" pos:end="133:37"><name pos:start="133:5" pos:end="133:16"><name pos:start="133:5" pos:end="133:6">os</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:16">page_pos</name></name> <operator pos:start="133:18" pos:end="133:18">=</operator> <call pos:start="133:20" pos:end="133:32"><name pos:start="133:20" pos:end="133:28">avio_tell</name><argument_list pos:start="133:29" pos:end="133:32">(<argument pos:start="133:30" pos:end="133:31"><expr pos:start="133:30" pos:end="133:31"><name pos:start="133:30" pos:end="133:31">bc</name></expr></argument>)</argument_list></call> <operator pos:start="133:34" pos:end="133:34">-</operator> <literal type="number" pos:start="133:36" pos:end="133:37">27</literal></expr>;</expr_stmt>



    <if_stmt pos:start="137:5" pos:end="139:30"><if pos:start="137:5" pos:end="139:30">if<condition pos:start="137:7" pos:end="137:21">(<expr pos:start="137:8" pos:end="137:20"><name pos:start="137:8" pos:end="137:16"><name pos:start="137:8" pos:end="137:9">os</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:16">psize</name></name> <operator pos:start="137:18" pos:end="137:18">&gt;</operator> <literal type="number" pos:start="137:20" pos:end="137:20">0</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:30"><block_content pos:start="139:9" pos:end="139:30">

        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><call pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:19">ogg_new_buf</name><argument_list pos:start="139:20" pos:end="139:29">(<argument pos:start="139:21" pos:end="139:23"><expr pos:start="139:21" pos:end="139:23"><name pos:start="139:21" pos:end="139:23">ogg</name></expr></argument>, <argument pos:start="139:26" pos:end="139:28"><expr pos:start="139:26" pos:end="139:28"><name pos:start="139:26" pos:end="139:28">idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:45"><expr pos:start="143:5" pos:end="143:44"><name pos:start="143:5" pos:end="143:7">ret</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:44"><name pos:start="143:11" pos:end="143:19">avio_read</name><argument_list pos:start="143:20" pos:end="143:44">(<argument pos:start="143:21" pos:end="143:22"><expr pos:start="143:21" pos:end="143:22"><name pos:start="143:21" pos:end="143:22">bc</name></expr></argument>, <argument pos:start="143:25" pos:end="143:36"><expr pos:start="143:25" pos:end="143:36"><name pos:start="143:25" pos:end="143:36"><name pos:start="143:25" pos:end="143:26">os</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:36">segments</name></name></expr></argument>, <argument pos:start="143:39" pos:end="143:43"><expr pos:start="143:39" pos:end="143:43"><name pos:start="143:39" pos:end="143:43">nsegs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:43"><if pos:start="145:5" pos:end="147:43">if <condition pos:start="145:8" pos:end="145:20">(<expr pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:11">ret</name> <operator pos:start="145:13" pos:end="145:13">&lt;</operator> <name pos:start="145:15" pos:end="145:19">nsegs</name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:43"><block_content pos:start="147:9" pos:end="147:43">

        <return pos:start="147:9" pos:end="147:43">return <expr pos:start="147:16" pos:end="147:42"><ternary pos:start="147:16" pos:end="147:42"><condition pos:start="147:16" pos:end="147:24"><expr pos:start="147:16" pos:end="147:22"><name pos:start="147:16" pos:end="147:18">ret</name> <operator pos:start="147:20" pos:end="147:20">&lt;</operator> <literal type="number" pos:start="147:22" pos:end="147:22">0</literal></expr> ?</condition><then pos:start="147:26" pos:end="147:28"> <expr pos:start="147:26" pos:end="147:28"><name pos:start="147:26" pos:end="147:28">ret</name></expr> </then><else pos:start="147:30" pos:end="147:42">: <expr pos:start="147:32" pos:end="147:42"><name pos:start="147:32" pos:end="147:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:22"><expr pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:13"><name pos:start="151:5" pos:end="151:6">os</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:13">nsegs</name></name> <operator pos:start="151:15" pos:end="151:15">=</operator> <name pos:start="151:17" pos:end="151:21">nsegs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:17"><expr pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:12"><name pos:start="153:5" pos:end="153:6">os</name><operator pos:start="153:7" pos:end="153:8">-&gt;</operator><name pos:start="153:9" pos:end="153:12">segp</name></name> <operator pos:start="153:14" pos:end="153:14">=</operator> <literal type="number" pos:start="153:16" pos:end="153:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:13"><expr pos:start="157:5" pos:end="157:12"><name pos:start="157:5" pos:end="157:8">size</name> <operator pos:start="157:10" pos:end="157:10">=</operator> <literal type="number" pos:start="157:12" pos:end="157:12">0</literal></expr>;</expr_stmt>

    <for pos:start="159:5" pos:end="161:32">for <control pos:start="159:9" pos:end="159:31">(<init pos:start="159:10" pos:end="159:15"><expr pos:start="159:10" pos:end="159:14"><name pos:start="159:10" pos:end="159:10">i</name> <operator pos:start="159:12" pos:end="159:12">=</operator> <literal type="number" pos:start="159:14" pos:end="159:14">0</literal></expr>;</init> <condition pos:start="159:17" pos:end="159:26"><expr pos:start="159:17" pos:end="159:25"><name pos:start="159:17" pos:end="159:17">i</name> <operator pos:start="159:19" pos:end="159:19">&lt;</operator> <name pos:start="159:21" pos:end="159:25">nsegs</name></expr>;</condition> <incr pos:start="159:28" pos:end="159:30"><expr pos:start="159:28" pos:end="159:30"><name pos:start="159:28" pos:end="159:28">i</name><operator pos:start="159:29" pos:end="159:30">++</operator></expr></incr>)</control><block type="pseudo" pos:start="161:9" pos:end="161:32"><block_content pos:start="161:9" pos:end="161:32">

        <expr_stmt pos:start="161:9" pos:end="161:32"><expr pos:start="161:9" pos:end="161:31"><name pos:start="161:9" pos:end="161:12">size</name> <operator pos:start="161:14" pos:end="161:15">+=</operator> <name pos:start="161:17" pos:end="161:31"><name pos:start="161:17" pos:end="161:18">os</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:28">segments</name><index pos:start="161:29" pos:end="161:31">[<expr pos:start="161:30" pos:end="161:30"><name pos:start="161:30" pos:end="161:30">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <if_stmt pos:start="165:5" pos:end="191:5"><if pos:start="165:5" pos:end="185:5">if <condition pos:start="165:8" pos:end="165:48">(<expr pos:start="165:9" pos:end="165:47"><name pos:start="165:9" pos:end="165:13">flags</name> <operator pos:start="165:15" pos:end="165:15">&amp;</operator> <name pos:start="165:17" pos:end="165:29">OGG_FLAG_CONT</name> <operator pos:start="165:31" pos:end="165:32">||</operator> <name pos:start="165:34" pos:end="165:47"><name pos:start="165:34" pos:end="165:35">os</name><operator pos:start="165:36" pos:end="165:37">-&gt;</operator><name pos:start="165:38" pos:end="165:47">incomplete</name></name></expr>)</condition><block pos:start="165:49" pos:end="185:5">{<block_content pos:start="167:9" pos:end="183:9">

        <if_stmt pos:start="167:9" pos:end="183:9"><if pos:start="167:9" pos:end="183:9">if <condition pos:start="167:12" pos:end="167:23">(<expr pos:start="167:13" pos:end="167:22"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:22"><name pos:start="167:14" pos:end="167:15">os</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:22">psize</name></name></expr>)</condition><block pos:start="167:24" pos:end="183:9">{<block_content pos:start="169:13" pos:end="181:40">

            <while pos:start="169:13" pos:end="179:13">while <condition pos:start="169:19" pos:end="169:40">(<expr pos:start="169:20" pos:end="169:39"><name pos:start="169:20" pos:end="169:27"><name pos:start="169:20" pos:end="169:21">os</name><operator pos:start="169:22" pos:end="169:23">-&gt;</operator><name pos:start="169:24" pos:end="169:27">segp</name></name> <operator pos:start="169:29" pos:end="169:29">&lt;</operator> <name pos:start="169:31" pos:end="169:39"><name pos:start="169:31" pos:end="169:32">os</name><operator pos:start="169:33" pos:end="169:34">-&gt;</operator><name pos:start="169:35" pos:end="169:39">nsegs</name></name></expr>)</condition><block pos:start="169:41" pos:end="179:13">{<block_content pos:start="171:17" pos:end="177:26">

                <decl_stmt pos:start="171:17" pos:end="171:51"><decl pos:start="171:17" pos:end="171:50"><type pos:start="171:17" pos:end="171:19"><name pos:start="171:17" pos:end="171:19">int</name></type> <name pos:start="171:21" pos:end="171:23">seg</name> <init pos:start="171:25" pos:end="171:50">= <expr pos:start="171:27" pos:end="171:50"><name pos:start="171:27" pos:end="171:50"><name pos:start="171:27" pos:end="171:28">os</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:38">segments</name><index pos:start="171:39" pos:end="171:50">[<expr pos:start="171:40" pos:end="171:49"><name pos:start="171:40" pos:end="171:47"><name pos:start="171:40" pos:end="171:41">os</name><operator pos:start="171:42" pos:end="171:43">-&gt;</operator><name pos:start="171:44" pos:end="171:47">segp</name></name><operator pos:start="171:48" pos:end="171:49">++</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:34"><expr pos:start="173:17" pos:end="173:33"><name pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:18">os</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:26">pstart</name></name> <operator pos:start="173:28" pos:end="173:29">+=</operator> <name pos:start="173:31" pos:end="173:33">seg</name></expr>;</expr_stmt>

                <if_stmt pos:start="175:17" pos:end="177:26"><if pos:start="175:17" pos:end="177:26">if <condition pos:start="175:20" pos:end="175:30">(<expr pos:start="175:21" pos:end="175:29"><name pos:start="175:21" pos:end="175:23">seg</name> <operator pos:start="175:25" pos:end="175:25">&lt;</operator> <literal type="number" pos:start="175:27" pos:end="175:29">255</literal></expr>)</condition><block type="pseudo" pos:start="177:21" pos:end="177:26"><block_content pos:start="177:21" pos:end="177:26">

                    <break pos:start="177:21" pos:end="177:26">break;</break></block_content></block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="181:13" pos:end="181:40"><expr pos:start="181:13" pos:end="181:39"><name pos:start="181:13" pos:end="181:24"><name pos:start="181:13" pos:end="181:14">os</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:24">sync_pos</name></name> <operator pos:start="181:26" pos:end="181:26">=</operator> <name pos:start="181:28" pos:end="181:39"><name pos:start="181:28" pos:end="181:29">os</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:39">page_pos</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="185:6" pos:end="191:5">else<block pos:start="185:10" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:36">

        <expr_stmt pos:start="187:9" pos:end="187:22"><expr pos:start="187:9" pos:end="187:21"><name pos:start="187:9" pos:end="187:17"><name pos:start="187:9" pos:end="187:10">os</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:17">psize</name></name> <operator pos:start="187:19" pos:end="187:19">=</operator> <literal type="number" pos:start="187:21" pos:end="187:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:36"><expr pos:start="189:9" pos:end="189:35"><name pos:start="189:9" pos:end="189:20"><name pos:start="189:9" pos:end="189:10">os</name><operator pos:start="189:11" pos:end="189:12">-&gt;</operator><name pos:start="189:13" pos:end="189:20">sync_pos</name></name> <operator pos:start="189:22" pos:end="189:22">=</operator> <name pos:start="189:24" pos:end="189:35"><name pos:start="189:24" pos:end="189:25">os</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:35">page_pos</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="195:5" pos:end="205:5"><if pos:start="195:5" pos:end="205:5">if <condition pos:start="195:8" pos:end="195:40">(<expr pos:start="195:9" pos:end="195:39"><name pos:start="195:9" pos:end="195:19"><name pos:start="195:9" pos:end="195:10">os</name><operator pos:start="195:11" pos:end="195:12">-&gt;</operator><name pos:start="195:13" pos:end="195:19">bufsize</name></name> <operator pos:start="195:21" pos:end="195:21">-</operator> <name pos:start="195:23" pos:end="195:32"><name pos:start="195:23" pos:end="195:24">os</name><operator pos:start="195:25" pos:end="195:26">-&gt;</operator><name pos:start="195:27" pos:end="195:32">bufpos</name></name> <operator pos:start="195:34" pos:end="195:34">&lt;</operator> <name pos:start="195:36" pos:end="195:39">size</name></expr>)</condition><block pos:start="195:41" pos:end="205:5">{<block_content pos:start="197:9" pos:end="203:21">

        <decl_stmt pos:start="197:9" pos:end="197:51"><decl pos:start="197:9" pos:end="197:50"><type pos:start="197:9" pos:end="197:17"><name pos:start="197:9" pos:end="197:15">uint8_t</name> <modifier pos:start="197:17" pos:end="197:17">*</modifier></type><name pos:start="197:18" pos:end="197:19">nb</name> <init pos:start="197:21" pos:end="197:50">= <expr pos:start="197:23" pos:end="197:50"><call pos:start="197:23" pos:end="197:50"><name pos:start="197:23" pos:end="197:31">av_malloc</name> <argument_list pos:start="197:33" pos:end="197:50">(<argument pos:start="197:34" pos:end="197:49"><expr pos:start="197:34" pos:end="197:49"><name pos:start="197:34" pos:end="197:44"><name pos:start="197:34" pos:end="197:35">os</name><operator pos:start="197:36" pos:end="197:37">-&gt;</operator><name pos:start="197:38" pos:end="197:44">bufsize</name></name> <operator pos:start="197:46" pos:end="197:47">*=</operator> <literal type="number" pos:start="197:49" pos:end="197:49">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:41"><expr pos:start="199:9" pos:end="199:40"><call pos:start="199:9" pos:end="199:40"><name pos:start="199:9" pos:end="199:14">memcpy</name> <argument_list pos:start="199:16" pos:end="199:40">(<argument pos:start="199:17" pos:end="199:18"><expr pos:start="199:17" pos:end="199:18"><name pos:start="199:17" pos:end="199:18">nb</name></expr></argument>, <argument pos:start="199:21" pos:end="199:27"><expr pos:start="199:21" pos:end="199:27"><name pos:start="199:21" pos:end="199:27"><name pos:start="199:21" pos:end="199:22">os</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:27">buf</name></name></expr></argument>, <argument pos:start="199:30" pos:end="199:39"><expr pos:start="199:30" pos:end="199:39"><name pos:start="199:30" pos:end="199:39"><name pos:start="199:30" pos:end="199:31">os</name><operator pos:start="199:32" pos:end="199:33">-&gt;</operator><name pos:start="199:34" pos:end="199:39">bufpos</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:26"><expr pos:start="201:9" pos:end="201:25"><call pos:start="201:9" pos:end="201:25"><name pos:start="201:9" pos:end="201:15">av_free</name> <argument_list pos:start="201:17" pos:end="201:25">(<argument pos:start="201:18" pos:end="201:24"><expr pos:start="201:18" pos:end="201:24"><name pos:start="201:18" pos:end="201:24"><name pos:start="201:18" pos:end="201:19">os</name><operator pos:start="201:20" pos:end="201:21">-&gt;</operator><name pos:start="201:22" pos:end="201:24">buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="203:21"><expr pos:start="203:9" pos:end="203:20"><name pos:start="203:9" pos:end="203:15"><name pos:start="203:9" pos:end="203:10">os</name><operator pos:start="203:11" pos:end="203:12">-&gt;</operator><name pos:start="203:13" pos:end="203:15">buf</name></name> <operator pos:start="203:17" pos:end="203:17">=</operator> <name pos:start="203:19" pos:end="203:20">nb</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:52"><expr pos:start="209:5" pos:end="209:51"><name pos:start="209:5" pos:end="209:7">ret</name> <operator pos:start="209:9" pos:end="209:9">=</operator> <call pos:start="209:11" pos:end="209:51"><name pos:start="209:11" pos:end="209:19">avio_read</name><argument_list pos:start="209:20" pos:end="209:51">(<argument pos:start="209:21" pos:end="209:22"><expr pos:start="209:21" pos:end="209:22"><name pos:start="209:21" pos:end="209:22">bc</name></expr></argument>, <argument pos:start="209:25" pos:end="209:44"><expr pos:start="209:25" pos:end="209:44"><name pos:start="209:25" pos:end="209:31"><name pos:start="209:25" pos:end="209:26">os</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:31">buf</name></name> <operator pos:start="209:33" pos:end="209:33">+</operator> <name pos:start="209:35" pos:end="209:44"><name pos:start="209:35" pos:end="209:36">os</name><operator pos:start="209:37" pos:end="209:38">-&gt;</operator><name pos:start="209:39" pos:end="209:44">bufpos</name></name></expr></argument>, <argument pos:start="209:47" pos:end="209:50"><expr pos:start="209:47" pos:end="209:50"><name pos:start="209:47" pos:end="209:50">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="211:5" pos:end="213:43"><if pos:start="211:5" pos:end="213:43">if <condition pos:start="211:8" pos:end="211:19">(<expr pos:start="211:9" pos:end="211:18"><name pos:start="211:9" pos:end="211:11">ret</name> <operator pos:start="211:13" pos:end="211:13">&lt;</operator> <name pos:start="211:15" pos:end="211:18">size</name></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:43"><block_content pos:start="213:9" pos:end="213:43">

        <return pos:start="213:9" pos:end="213:43">return <expr pos:start="213:16" pos:end="213:42"><ternary pos:start="213:16" pos:end="213:42"><condition pos:start="213:16" pos:end="213:24"><expr pos:start="213:16" pos:end="213:22"><name pos:start="213:16" pos:end="213:18">ret</name> <operator pos:start="213:20" pos:end="213:20">&lt;</operator> <literal type="number" pos:start="213:22" pos:end="213:22">0</literal></expr> ?</condition><then pos:start="213:26" pos:end="213:28"> <expr pos:start="213:26" pos:end="213:28"><name pos:start="213:26" pos:end="213:28">ret</name></expr> </then><else pos:start="213:30" pos:end="213:42">: <expr pos:start="213:32" pos:end="213:42"><name pos:start="213:32" pos:end="213:42">AVERROR_EOF</name></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="217:5" pos:end="217:23"><expr pos:start="217:5" pos:end="217:22"><name pos:start="217:5" pos:end="217:14"><name pos:start="217:5" pos:end="217:6">os</name><operator pos:start="217:7" pos:end="217:8">-&gt;</operator><name pos:start="217:9" pos:end="217:14">bufpos</name></name> <operator pos:start="217:16" pos:end="217:17">+=</operator> <name pos:start="217:19" pos:end="217:22">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="219:5" pos:end="219:21"><expr pos:start="219:5" pos:end="219:20"><name pos:start="219:5" pos:end="219:15"><name pos:start="219:5" pos:end="219:6">os</name><operator pos:start="219:7" pos:end="219:8">-&gt;</operator><name pos:start="219:9" pos:end="219:15">granule</name></name> <operator pos:start="219:17" pos:end="219:17">=</operator> <name pos:start="219:19" pos:end="219:20">gp</name></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:22"><expr pos:start="221:5" pos:end="221:21"><name pos:start="221:5" pos:end="221:13"><name pos:start="221:5" pos:end="221:6">os</name><operator pos:start="221:7" pos:end="221:8">-&gt;</operator><name pos:start="221:9" pos:end="221:13">flags</name></name> <operator pos:start="221:15" pos:end="221:15">=</operator> <name pos:start="221:17" pos:end="221:21">flags</name></expr>;</expr_stmt>



    <if_stmt pos:start="225:5" pos:end="227:19"><if pos:start="225:5" pos:end="227:19">if <condition pos:start="225:8" pos:end="225:12">(<expr pos:start="225:9" pos:end="225:11"><name pos:start="225:9" pos:end="225:11">str</name></expr>)</condition><block type="pseudo" pos:start="227:9" pos:end="227:19"><block_content pos:start="227:9" pos:end="227:19">

        <expr_stmt pos:start="227:9" pos:end="227:19"><expr pos:start="227:9" pos:end="227:18"><operator pos:start="227:9" pos:end="227:9">*</operator><name pos:start="227:10" pos:end="227:12">str</name> <operator pos:start="227:14" pos:end="227:14">=</operator> <name pos:start="227:16" pos:end="227:18">idx</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="231:5" pos:end="231:13">return <expr pos:start="231:12" pos:end="231:12"><literal type="number" pos:start="231:12" pos:end="231:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
