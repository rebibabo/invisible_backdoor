<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19876.c" pos:tabs="8"><function pos:start="1:1" pos:end="281:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">save_subtitle_set</name><parameter_list pos:start="1:29" pos:end="1:85">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:67"><decl pos:start="1:53" pos:end="1:67"><type pos:start="1:53" pos:end="1:67"><name pos:start="1:53" pos:end="1:62">AVSubtitle</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:67">sub</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:84"><decl pos:start="1:70" pos:end="1:84"><type pos:start="1:70" pos:end="1:84"><name pos:start="1:70" pos:end="1:72">int</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:84">got_output</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="281:1">{<block_content pos:start="5:5" pos:end="279:15">

    <decl_stmt pos:start="5:5" pos:end="5:42"><decl pos:start="5:5" pos:end="5:41"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">DVBSubContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">ctx</name> <init pos:start="5:24" pos:end="5:41">= <expr pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:41"><name pos:start="5:26" pos:end="5:30">avctx</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:41">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">DVBSubRegionDisplay</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:32">display</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:67"><decl pos:start="9:5" pos:end="9:66"><type pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:27">DVBSubDisplayDefinition</name> <modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:40">display_def</name> <init pos:start="9:42" pos:end="9:66">= <expr pos:start="9:44" pos:end="9:66"><name pos:start="9:44" pos:end="9:66"><name pos:start="9:44" pos:end="9:46">ctx</name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:66">display_definition</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">DVBSubRegion</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:24">region</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">AVSubtitleRect</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:24">rect</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:14">DVBSubCLUT</name> <modifier pos:start="15:16" pos:end="15:16">*</modifier></type><name pos:start="15:17" pos:end="15:20">clut</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:24"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">uint32_t</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:24">clut_table</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:31"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:16">offset_x</name><init pos:start="21:17" pos:end="21:18">=<expr pos:start="21:18" pos:end="21:18"><literal type="number" pos:start="21:18" pos:end="21:18">0</literal></expr></init></decl>, <decl pos:start="21:21" pos:end="21:30"><type ref="prev" pos:start="21:5" pos:end="21:7"/><name pos:start="21:21" pos:end="21:28">offset_y</name><init pos:start="21:29" pos:end="21:30">=<expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:16"><decl pos:start="23:5" pos:end="23:15"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name> <init pos:start="23:13" pos:end="23:15">= <expr pos:start="23:15" pos:end="23:15"><literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr></init></decl>;</decl_stmt>





    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:20">(<expr pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:19">display_def</name></expr>)</condition> <block pos:start="29:22" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:16">offset_x</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:33"><name pos:start="31:20" pos:end="31:30">display_def</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:33">x</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:34"><expr pos:start="33:9" pos:end="33:33"><name pos:start="33:9" pos:end="33:16">offset_y</name> <operator pos:start="33:18" pos:end="33:18">=</operator> <name pos:start="33:20" pos:end="33:33"><name pos:start="33:20" pos:end="33:30">display_def</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:33">y</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:39">/* Not touching AVSubtitles again*/</comment>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if<condition pos:start="41:7" pos:end="41:22">(<expr pos:start="41:8" pos:end="41:21"><name pos:start="41:8" pos:end="41:21"><name pos:start="41:8" pos:end="41:10">sub</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:21">num_rects</name></name></expr>)</condition> <block pos:start="41:24" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:36">

        <expr_stmt pos:start="43:9" pos:end="43:79"><expr pos:start="43:9" pos:end="43:78"><call pos:start="43:9" pos:end="43:78"><name pos:start="43:9" pos:end="43:29">avpriv_request_sample</name><argument_list pos:start="43:30" pos:end="43:78">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">ctx</name></expr></argument>, <argument pos:start="43:36" pos:end="43:77"><expr pos:start="43:36" pos:end="43:77"><literal type="string" pos:start="43:36" pos:end="43:77">"Different Version of Segment asked Twice"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:36">return <expr pos:start="45:16" pos:end="45:35"><name pos:start="45:16" pos:end="45:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="49:5" pos:end="57:5">for <control pos:start="49:9" pos:end="49:71">(<init pos:start="49:10" pos:end="49:37"><expr pos:start="49:10" pos:end="49:36"><name pos:start="49:10" pos:end="49:16">display</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:36"><name pos:start="49:20" pos:end="49:22">ctx</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:36">display_list</name></name></expr>;</init> <condition pos:start="49:39" pos:end="49:46"><expr pos:start="49:39" pos:end="49:45"><name pos:start="49:39" pos:end="49:45">display</name></expr>;</condition> <incr pos:start="49:48" pos:end="49:70"><expr pos:start="49:48" pos:end="49:70"><name pos:start="49:48" pos:end="49:54">display</name> <operator pos:start="49:56" pos:end="49:56">=</operator> <name pos:start="49:58" pos:end="49:70"><name pos:start="49:58" pos:end="49:64">display</name><operator pos:start="49:65" pos:end="49:66">-&gt;</operator><name pos:start="49:67" pos:end="49:70">next</name></name></expr></incr>)</control> <block pos:start="49:73" pos:end="57:5">{<block_content pos:start="51:9" pos:end="55:29">

        <expr_stmt pos:start="51:9" pos:end="51:53"><expr pos:start="51:9" pos:end="51:52"><name pos:start="51:9" pos:end="51:14">region</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:52"><name pos:start="51:18" pos:end="51:27">get_region</name><argument_list pos:start="51:28" pos:end="51:52">(<argument pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">ctx</name></expr></argument>, <argument pos:start="51:34" pos:end="51:51"><expr pos:start="51:34" pos:end="51:51"><name pos:start="51:34" pos:end="51:51"><name pos:start="51:34" pos:end="51:40">display</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:51">region_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="55:29"><if pos:start="53:9" pos:end="55:29">if <condition pos:start="53:12" pos:end="53:36">(<expr pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:18">region</name> <operator pos:start="53:20" pos:end="53:21">&amp;&amp;</operator> <name pos:start="53:23" pos:end="53:35"><name pos:start="53:23" pos:end="53:28">region</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:35">dirty</name></name></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:29"><block_content pos:start="55:13" pos:end="55:29">

            <expr_stmt pos:start="55:13" pos:end="55:29"><expr pos:start="55:13" pos:end="55:28"><name pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:15">sub</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:26">num_rects</name></name><operator pos:start="55:27" pos:end="55:28">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="61:5" pos:end="73:5"><if pos:start="61:5" pos:end="67:5">if<condition pos:start="61:7" pos:end="61:29">(<expr pos:start="61:8" pos:end="61:28"><name pos:start="61:8" pos:end="61:23"><name pos:start="61:8" pos:end="61:10">ctx</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:23">compute_edt</name></name> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>)</condition> <block pos:start="61:31" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:24">

        <expr_stmt pos:start="63:9" pos:end="63:53"><expr pos:start="63:9" pos:end="63:52"><name pos:start="63:9" pos:end="63:29"><name pos:start="63:9" pos:end="63:11">sub</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:29">end_display_time</name></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <name pos:start="63:33" pos:end="63:45"><name pos:start="63:33" pos:end="63:35">ctx</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:45">time_out</name></name> <operator pos:start="63:47" pos:end="63:47">*</operator> <literal type="number" pos:start="63:49" pos:end="63:52">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:24"><expr pos:start="65:9" pos:end="65:23"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:19">got_output</name> <operator pos:start="65:21" pos:end="65:21">=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="67:7" pos:end="73:5">else if <condition pos:start="67:15" pos:end="67:49">(<expr pos:start="67:16" pos:end="67:48"><name pos:start="67:16" pos:end="67:30"><name pos:start="67:16" pos:end="67:18">ctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:30">prev_start</name></name> <operator pos:start="67:32" pos:end="67:33">!=</operator> <name pos:start="67:35" pos:end="67:48">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="67:51" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:24">

        <expr_stmt pos:start="69:9" pos:end="69:121"><expr pos:start="69:9" pos:end="69:120"><name pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:11">sub</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:29">end_display_time</name></name> <operator pos:start="69:31" pos:end="69:31">=</operator> <macro pos:start="69:33" pos:end="69:116"><name pos:start="69:33" pos:end="69:44">av_rescale_q</name><argument_list pos:start="69:45" pos:end="69:116">(<argument pos:start="69:46" pos:end="69:74">(sub-&gt;pts - ctx-&gt;prev_start )</argument>, <argument pos:start="69:77" pos:end="69:90">AV_TIME_BASE_Q</argument>, <argument pos:start="69:93" pos:end="69:107">(AVRational){ <literal type="number" pos:start="69:107" pos:end="69:107">1</literal></argument>, <argument pos:start="69:110" pos:end="69:115"><literal type="number" pos:start="69:110" pos:end="69:113">1000</literal> }</argument>)</argument_list></macro> <operator pos:start="69:118" pos:end="69:118">-</operator> <literal type="number" pos:start="69:120" pos:end="69:120">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:24"><expr pos:start="71:9" pos:end="71:23"><operator pos:start="71:9" pos:end="71:9">*</operator><name pos:start="71:10" pos:end="71:19">got_output</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <literal type="number" pos:start="71:23" pos:end="71:23">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="247:5"><if pos:start="75:5" pos:end="247:5">if <condition pos:start="75:8" pos:end="75:27">(<expr pos:start="75:9" pos:end="75:26"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:11">sub</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:22">num_rects</name></name> <operator pos:start="75:24" pos:end="75:24">&gt;</operator> <literal type="number" pos:start="75:26" pos:end="75:26">0</literal></expr>)</condition> <block pos:start="75:29" pos:end="247:5">{<block_content pos:start="79:9" pos:end="245:9">



        <expr_stmt pos:start="79:9" pos:end="79:75"><expr pos:start="79:9" pos:end="79:74"><name pos:start="79:9" pos:end="79:18"><name pos:start="79:9" pos:end="79:11">sub</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:18">rects</name></name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:74"><name pos:start="79:22" pos:end="79:37">av_mallocz_array</name><argument_list pos:start="79:38" pos:end="79:74">(<argument pos:start="79:39" pos:end="79:57"><expr pos:start="79:39" pos:end="79:57"><sizeof pos:start="79:39" pos:end="79:57">sizeof<argument_list pos:start="79:45" pos:end="79:57">(<argument pos:start="79:46" pos:end="79:56"><expr pos:start="79:46" pos:end="79:56"><operator pos:start="79:46" pos:end="79:46">*</operator><name pos:start="79:47" pos:end="79:56"><name pos:start="79:47" pos:end="79:49">sub</name><operator pos:start="79:50" pos:end="79:51">-&gt;</operator><name pos:start="79:52" pos:end="79:56">rects</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:60" pos:end="79:73"><expr pos:start="79:60" pos:end="79:73"><name pos:start="79:60" pos:end="79:73"><name pos:start="79:60" pos:end="79:62">sub</name><operator pos:start="79:63" pos:end="79:64">-&gt;</operator><name pos:start="79:65" pos:end="79:73">num_rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="87:9"><if pos:start="81:9" pos:end="87:9">if <condition pos:start="81:12" pos:end="81:24">(<expr pos:start="81:13" pos:end="81:23"><operator pos:start="81:13" pos:end="81:13">!</operator><name pos:start="81:14" pos:end="81:23"><name pos:start="81:14" pos:end="81:16">sub</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:23">rects</name></name></expr>)</condition> <block pos:start="81:26" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:22">

            <expr_stmt pos:start="83:13" pos:end="83:34"><expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:17">=</operator> <call pos:start="83:19" pos:end="83:33"><name pos:start="83:19" pos:end="83:25">AVERROR</name><argument_list pos:start="83:26" pos:end="83:33">(<argument pos:start="83:27" pos:end="83:32"><expr pos:start="83:27" pos:end="83:32"><name pos:start="83:27" pos:end="83:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="85:13" pos:end="85:22">goto <name pos:start="85:18" pos:end="85:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <for pos:start="91:9" pos:end="103:9">for <control pos:start="91:13" pos:end="91:44">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">i</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:39"><expr pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:21">i</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:27">sub</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:38">num_rects</name></name></expr>;</condition> <incr pos:start="91:41" pos:end="91:43"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:41">i</name><operator pos:start="91:42" pos:end="91:43">++</operator></expr></incr>)</control> <block pos:start="91:46" pos:end="103:9">{<block_content pos:start="93:13" pos:end="101:13">

            <expr_stmt pos:start="93:13" pos:end="93:63"><expr pos:start="93:13" pos:end="93:62"><name pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:15">sub</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:22">rects</name><index pos:start="93:23" pos:end="93:25">[<expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">i</name></expr>]</index></name> <operator pos:start="93:27" pos:end="93:27">=</operator> <call pos:start="93:29" pos:end="93:62"><name pos:start="93:29" pos:end="93:38">av_mallocz</name><argument_list pos:start="93:39" pos:end="93:62">(<argument pos:start="93:40" pos:end="93:61"><expr pos:start="93:40" pos:end="93:61"><sizeof pos:start="93:40" pos:end="93:61">sizeof<argument_list pos:start="93:46" pos:end="93:61">(<argument pos:start="93:47" pos:end="93:60"><expr pos:start="93:47" pos:end="93:60"><operator pos:start="93:47" pos:end="93:47">*</operator><name pos:start="93:48" pos:end="93:60"><name pos:start="93:48" pos:end="93:50">sub</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:57">rects</name><index pos:start="93:58" pos:end="93:60">[<expr pos:start="93:59" pos:end="93:59"><name pos:start="93:59" pos:end="93:59">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="95:13" pos:end="101:13"><if pos:start="95:13" pos:end="101:13">if <condition pos:start="95:16" pos:end="95:31">(<expr pos:start="95:17" pos:end="95:30"><operator pos:start="95:17" pos:end="95:17">!</operator><name pos:start="95:18" pos:end="95:30"><name pos:start="95:18" pos:end="95:20">sub</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:27">rects</name><index pos:start="95:28" pos:end="95:30">[<expr pos:start="95:29" pos:end="95:29"><name pos:start="95:29" pos:end="95:29">i</name></expr>]</index></name></expr>)</condition> <block pos:start="95:33" pos:end="101:13">{<block_content pos:start="97:17" pos:end="99:26">

                <expr_stmt pos:start="97:17" pos:end="97:38"><expr pos:start="97:17" pos:end="97:37"><name pos:start="97:17" pos:end="97:19">ret</name> <operator pos:start="97:21" pos:end="97:21">=</operator> <call pos:start="97:23" pos:end="97:37"><name pos:start="97:23" pos:end="97:29">AVERROR</name><argument_list pos:start="97:30" pos:end="97:37">(<argument pos:start="97:31" pos:end="97:36"><expr pos:start="97:31" pos:end="97:36"><name pos:start="97:31" pos:end="97:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="99:17" pos:end="99:26">goto <name pos:start="99:22" pos:end="99:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="107:9" pos:end="107:14"><expr pos:start="107:9" pos:end="107:13"><name pos:start="107:9" pos:end="107:9">i</name> <operator pos:start="107:11" pos:end="107:11">=</operator> <literal type="number" pos:start="107:13" pos:end="107:13">0</literal></expr>;</expr_stmt>



        <for pos:start="111:9" pos:end="245:9">for <control pos:start="111:13" pos:end="111:75">(<init pos:start="111:14" pos:end="111:41"><expr pos:start="111:14" pos:end="111:40"><name pos:start="111:14" pos:end="111:20">display</name> <operator pos:start="111:22" pos:end="111:22">=</operator> <name pos:start="111:24" pos:end="111:40"><name pos:start="111:24" pos:end="111:26">ctx</name><operator pos:start="111:27" pos:end="111:28">-&gt;</operator><name pos:start="111:29" pos:end="111:40">display_list</name></name></expr>;</init> <condition pos:start="111:43" pos:end="111:50"><expr pos:start="111:43" pos:end="111:49"><name pos:start="111:43" pos:end="111:49">display</name></expr>;</condition> <incr pos:start="111:52" pos:end="111:74"><expr pos:start="111:52" pos:end="111:74"><name pos:start="111:52" pos:end="111:58">display</name> <operator pos:start="111:60" pos:end="111:60">=</operator> <name pos:start="111:62" pos:end="111:74"><name pos:start="111:62" pos:end="111:68">display</name><operator pos:start="111:69" pos:end="111:70">-&gt;</operator><name pos:start="111:71" pos:end="111:74">next</name></name></expr></incr>)</control> <block pos:start="111:77" pos:end="245:9">{<block_content pos:start="113:13" pos:end="243:16">

            <expr_stmt pos:start="113:13" pos:end="113:57"><expr pos:start="113:13" pos:end="113:56"><name pos:start="113:13" pos:end="113:18">region</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:56"><name pos:start="113:22" pos:end="113:31">get_region</name><argument_list pos:start="113:32" pos:end="113:56">(<argument pos:start="113:33" pos:end="113:35"><expr pos:start="113:33" pos:end="113:35"><name pos:start="113:33" pos:end="113:35">ctx</name></expr></argument>, <argument pos:start="113:38" pos:end="113:55"><expr pos:start="113:38" pos:end="113:55"><name pos:start="113:38" pos:end="113:55"><name pos:start="113:38" pos:end="113:44">display</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:55">region_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="117:13" pos:end="119:25"><if pos:start="117:13" pos:end="119:25">if <condition pos:start="117:16" pos:end="117:24">(<expr pos:start="117:17" pos:end="117:23"><operator pos:start="117:17" pos:end="117:17">!</operator><name pos:start="117:18" pos:end="117:23">region</name></expr>)</condition><block type="pseudo" pos:start="119:17" pos:end="119:25"><block_content pos:start="119:17" pos:end="119:25">

                <continue pos:start="119:17" pos:end="119:25">continue;</continue></block_content></block></if></if_stmt>



            <if_stmt pos:start="123:13" pos:end="125:25"><if pos:start="123:13" pos:end="125:25">if <condition pos:start="123:16" pos:end="123:31">(<expr pos:start="123:17" pos:end="123:30"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:30"><name pos:start="123:18" pos:end="123:23">region</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:30">dirty</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:25"><block_content pos:start="125:17" pos:end="125:25">

                <continue pos:start="125:17" pos:end="125:25">continue;</continue></block_content></block></if></if_stmt>



            <expr_stmt pos:start="129:13" pos:end="129:33"><expr pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:16">rect</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <name pos:start="129:20" pos:end="129:32"><name pos:start="129:20" pos:end="129:22">sub</name><operator pos:start="129:23" pos:end="129:24">-&gt;</operator><name pos:start="129:25" pos:end="129:29">rects</name><index pos:start="129:30" pos:end="129:32">[<expr pos:start="129:31" pos:end="129:31"><name pos:start="129:31" pos:end="129:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:48"><expr pos:start="131:13" pos:end="131:47"><name pos:start="131:13" pos:end="131:19"><name pos:start="131:13" pos:end="131:16">rect</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:19">x</name></name> <operator pos:start="131:21" pos:end="131:21">=</operator> <name pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:29">display</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:36">x_pos</name></name> <operator pos:start="131:38" pos:end="131:38">+</operator> <name pos:start="131:40" pos:end="131:47">offset_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:48"><expr pos:start="133:13" pos:end="133:47"><name pos:start="133:13" pos:end="133:19"><name pos:start="133:13" pos:end="133:16">rect</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:19">y</name></name> <operator pos:start="133:21" pos:end="133:21">=</operator> <name pos:start="133:23" pos:end="133:36"><name pos:start="133:23" pos:end="133:29">display</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">y_pos</name></name> <operator pos:start="133:38" pos:end="133:38">+</operator> <name pos:start="133:40" pos:end="133:47">offset_y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:36"><expr pos:start="135:13" pos:end="135:35"><name pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:16">rect</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:19">w</name></name> <operator pos:start="135:21" pos:end="135:21">=</operator> <name pos:start="135:23" pos:end="135:35"><name pos:start="135:23" pos:end="135:28">region</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:35">width</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:37"><expr pos:start="137:13" pos:end="137:36"><name pos:start="137:13" pos:end="137:19"><name pos:start="137:13" pos:end="137:16">rect</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:19">h</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <name pos:start="137:23" pos:end="137:36"><name pos:start="137:23" pos:end="137:28">region</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:36">height</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:51"><expr pos:start="139:13" pos:end="139:50"><name pos:start="139:13" pos:end="139:27"><name pos:start="139:13" pos:end="139:16">rect</name><operator pos:start="139:17" pos:end="139:18">-&gt;</operator><name pos:start="139:19" pos:end="139:27">nb_colors</name></name> <operator pos:start="139:29" pos:end="139:29">=</operator> <operator pos:start="139:31" pos:end="139:31">(</operator><literal type="number" pos:start="139:32" pos:end="139:32">1</literal> <operator pos:start="139:34" pos:end="139:35">&lt;&lt;</operator> <name pos:start="139:37" pos:end="139:49"><name pos:start="139:37" pos:end="139:42">region</name><operator pos:start="139:43" pos:end="139:44">-&gt;</operator><name pos:start="139:45" pos:end="139:49">depth</name></name><operator pos:start="139:50" pos:end="139:50">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:46"><expr pos:start="141:13" pos:end="141:45"><name pos:start="141:13" pos:end="141:22"><name pos:start="141:13" pos:end="141:16">rect</name><operator pos:start="141:17" pos:end="141:18">-&gt;</operator><name pos:start="141:19" pos:end="141:22">type</name></name>      <operator pos:start="141:29" pos:end="141:29">=</operator> <name pos:start="141:31" pos:end="141:45">SUBTITLE_BITMAP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:46"><expr pos:start="143:13" pos:end="143:45"><name pos:start="143:13" pos:end="143:29"><name pos:start="143:13" pos:end="143:16">rect</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:26">linesize</name><index pos:start="143:27" pos:end="143:29">[<expr pos:start="143:28" pos:end="143:28"><literal type="number" pos:start="143:28" pos:end="143:28">0</literal></expr>]</index></name> <operator pos:start="143:31" pos:end="143:31">=</operator> <name pos:start="143:33" pos:end="143:45"><name pos:start="143:33" pos:end="143:38">region</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:45">width</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:16">clut</name> <operator pos:start="147:18" pos:end="147:18">=</operator> <call pos:start="147:20" pos:end="147:46"><name pos:start="147:20" pos:end="147:27">get_clut</name><argument_list pos:start="147:28" pos:end="147:46">(<argument pos:start="147:29" pos:end="147:31"><expr pos:start="147:29" pos:end="147:31"><name pos:start="147:29" pos:end="147:31">ctx</name></expr></argument>, <argument pos:start="147:34" pos:end="147:45"><expr pos:start="147:34" pos:end="147:45"><name pos:start="147:34" pos:end="147:45"><name pos:start="147:34" pos:end="147:39">region</name><operator pos:start="147:40" pos:end="147:41">-&gt;</operator><name pos:start="147:42" pos:end="147:45">clut</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="151:13" pos:end="153:37"><if pos:start="151:13" pos:end="153:37">if <condition pos:start="151:16" pos:end="151:22">(<expr pos:start="151:17" pos:end="151:21"><operator pos:start="151:17" pos:end="151:17">!</operator><name pos:start="151:18" pos:end="151:21">clut</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:37"><block_content pos:start="153:17" pos:end="153:37">

                <expr_stmt pos:start="153:17" pos:end="153:37"><expr pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:20">clut</name> <operator pos:start="153:22" pos:end="153:22">=</operator> <operator pos:start="153:24" pos:end="153:24">&amp;</operator><name pos:start="153:25" pos:end="153:36">default_clut</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <switch pos:start="157:13" pos:end="179:13">switch <condition pos:start="157:20" pos:end="157:34">(<expr pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:33"><name pos:start="157:21" pos:end="157:26">region</name><operator pos:start="157:27" pos:end="157:28">-&gt;</operator><name pos:start="157:29" pos:end="157:33">depth</name></name></expr>)</condition> <block pos:start="157:36" pos:end="179:13">{<block_content pos:start="159:13" pos:end="177:22">

            <case pos:start="159:13" pos:end="159:19">case <expr pos:start="159:18" pos:end="159:18"><literal type="number" pos:start="159:18" pos:end="159:18">2</literal></expr>:</case>

                <expr_stmt pos:start="161:17" pos:end="161:41"><expr pos:start="161:17" pos:end="161:40"><name pos:start="161:17" pos:end="161:26">clut_table</name> <operator pos:start="161:28" pos:end="161:28">=</operator> <name pos:start="161:30" pos:end="161:40"><name pos:start="161:30" pos:end="161:33">clut</name><operator pos:start="161:34" pos:end="161:35">-&gt;</operator><name pos:start="161:36" pos:end="161:40">clut4</name></name></expr>;</expr_stmt>

                <break pos:start="163:17" pos:end="163:22">break;</break>

            <case pos:start="165:13" pos:end="165:19">case <expr pos:start="165:18" pos:end="165:18"><literal type="number" pos:start="165:18" pos:end="165:18">8</literal></expr>:</case>

                <expr_stmt pos:start="167:17" pos:end="167:43"><expr pos:start="167:17" pos:end="167:42"><name pos:start="167:17" pos:end="167:26">clut_table</name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:42"><name pos:start="167:30" pos:end="167:33">clut</name><operator pos:start="167:34" pos:end="167:35">-&gt;</operator><name pos:start="167:36" pos:end="167:42">clut256</name></name></expr>;</expr_stmt>

                <break pos:start="169:17" pos:end="169:22">break;</break>

            <case pos:start="171:13" pos:end="171:19">case <expr pos:start="171:18" pos:end="171:18"><literal type="number" pos:start="171:18" pos:end="171:18">4</literal></expr>:</case>

            <default pos:start="173:13" pos:end="173:20">default:</default>

                <expr_stmt pos:start="175:17" pos:end="175:42"><expr pos:start="175:17" pos:end="175:41"><name pos:start="175:17" pos:end="175:26">clut_table</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <name pos:start="175:30" pos:end="175:41"><name pos:start="175:30" pos:end="175:33">clut</name><operator pos:start="175:34" pos:end="175:35">-&gt;</operator><name pos:start="175:36" pos:end="175:41">clut16</name></name></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            </block_content>}</block></switch>



            <expr_stmt pos:start="183:13" pos:end="183:55"><expr pos:start="183:13" pos:end="183:54"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:16">rect</name><operator pos:start="183:17" pos:end="183:18">-&gt;</operator><name pos:start="183:19" pos:end="183:22">data</name><index pos:start="183:23" pos:end="183:25">[<expr pos:start="183:24" pos:end="183:24"><literal type="number" pos:start="183:24" pos:end="183:24">1</literal></expr>]</index></name> <operator pos:start="183:27" pos:end="183:27">=</operator> <call pos:start="183:29" pos:end="183:54"><name pos:start="183:29" pos:end="183:38">av_mallocz</name><argument_list pos:start="183:39" pos:end="183:54">(<argument pos:start="183:40" pos:end="183:53"><expr pos:start="183:40" pos:end="183:53"><name pos:start="183:40" pos:end="183:53">AVPALETTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="185:13" pos:end="191:13"><if pos:start="185:13" pos:end="191:13">if <condition pos:start="185:16" pos:end="185:31">(<expr pos:start="185:17" pos:end="185:30"><operator pos:start="185:17" pos:end="185:17">!</operator><name pos:start="185:18" pos:end="185:30"><name pos:start="185:18" pos:end="185:21">rect</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:27">data</name><index pos:start="185:28" pos:end="185:30">[<expr pos:start="185:29" pos:end="185:29"><literal type="number" pos:start="185:29" pos:end="185:29">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="185:33" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:26">

                <expr_stmt pos:start="187:17" pos:end="187:38"><expr pos:start="187:17" pos:end="187:37"><name pos:start="187:17" pos:end="187:19">ret</name> <operator pos:start="187:21" pos:end="187:21">=</operator> <call pos:start="187:23" pos:end="187:37"><name pos:start="187:23" pos:end="187:29">AVERROR</name><argument_list pos:start="187:30" pos:end="187:37">(<argument pos:start="187:31" pos:end="187:36"><expr pos:start="187:31" pos:end="187:36"><name pos:start="187:31" pos:end="187:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="189:17" pos:end="189:26">goto <name pos:start="189:22" pos:end="189:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:87"><expr pos:start="193:13" pos:end="193:86"><call pos:start="193:13" pos:end="193:86"><name pos:start="193:13" pos:end="193:18">memcpy</name><argument_list pos:start="193:19" pos:end="193:86">(<argument pos:start="193:20" pos:end="193:32"><expr pos:start="193:20" pos:end="193:32"><name pos:start="193:20" pos:end="193:32"><name pos:start="193:20" pos:end="193:23">rect</name><operator pos:start="193:24" pos:end="193:25">-&gt;</operator><name pos:start="193:26" pos:end="193:29">data</name><index pos:start="193:30" pos:end="193:32">[<expr pos:start="193:31" pos:end="193:31"><literal type="number" pos:start="193:31" pos:end="193:31">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:35" pos:end="193:44"><expr pos:start="193:35" pos:end="193:44"><name pos:start="193:35" pos:end="193:44">clut_table</name></expr></argument>, <argument pos:start="193:47" pos:end="193:85"><expr pos:start="193:47" pos:end="193:85"><operator pos:start="193:47" pos:end="193:47">(</operator><literal type="number" pos:start="193:48" pos:end="193:48">1</literal> <operator pos:start="193:50" pos:end="193:51">&lt;&lt;</operator> <name pos:start="193:53" pos:end="193:65"><name pos:start="193:53" pos:end="193:58">region</name><operator pos:start="193:59" pos:end="193:60">-&gt;</operator><name pos:start="193:61" pos:end="193:65">depth</name></name><operator pos:start="193:66" pos:end="193:66">)</operator> <operator pos:start="193:68" pos:end="193:68">*</operator> <sizeof pos:start="193:70" pos:end="193:85">sizeof<argument_list pos:start="193:76" pos:end="193:85">(<argument pos:start="193:77" pos:end="193:84"><expr pos:start="193:77" pos:end="193:84"><name pos:start="193:77" pos:end="193:84">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="197:13" pos:end="197:56"><expr pos:start="197:13" pos:end="197:55"><name pos:start="197:13" pos:end="197:25"><name pos:start="197:13" pos:end="197:16">rect</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:22">data</name><index pos:start="197:23" pos:end="197:25">[<expr pos:start="197:24" pos:end="197:24"><literal type="number" pos:start="197:24" pos:end="197:24">0</literal></expr>]</index></name> <operator pos:start="197:27" pos:end="197:27">=</operator> <call pos:start="197:29" pos:end="197:55"><name pos:start="197:29" pos:end="197:37">av_malloc</name><argument_list pos:start="197:38" pos:end="197:55">(<argument pos:start="197:39" pos:end="197:54"><expr pos:start="197:39" pos:end="197:54"><name pos:start="197:39" pos:end="197:54"><name pos:start="197:39" pos:end="197:44">region</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:54">buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="199:13" pos:end="205:13"><if pos:start="199:13" pos:end="205:13">if <condition pos:start="199:16" pos:end="199:31">(<expr pos:start="199:17" pos:end="199:30"><operator pos:start="199:17" pos:end="199:17">!</operator><name pos:start="199:18" pos:end="199:30"><name pos:start="199:18" pos:end="199:21">rect</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:27">data</name><index pos:start="199:28" pos:end="199:30">[<expr pos:start="199:29" pos:end="199:29"><literal type="number" pos:start="199:29" pos:end="199:29">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="199:33" pos:end="205:13">{<block_content pos:start="201:17" pos:end="203:26">

                <expr_stmt pos:start="201:17" pos:end="201:38"><expr pos:start="201:17" pos:end="201:37"><name pos:start="201:17" pos:end="201:19">ret</name> <operator pos:start="201:21" pos:end="201:21">=</operator> <call pos:start="201:23" pos:end="201:37"><name pos:start="201:23" pos:end="201:29">AVERROR</name><argument_list pos:start="201:30" pos:end="201:37">(<argument pos:start="201:31" pos:end="201:36"><expr pos:start="201:31" pos:end="201:36"><name pos:start="201:31" pos:end="201:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="203:17" pos:end="203:26">goto <name pos:start="203:22" pos:end="203:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="209:13" pos:end="209:66"><expr pos:start="209:13" pos:end="209:65"><call pos:start="209:13" pos:end="209:65"><name pos:start="209:13" pos:end="209:18">memcpy</name><argument_list pos:start="209:19" pos:end="209:65">(<argument pos:start="209:20" pos:end="209:32"><expr pos:start="209:20" pos:end="209:32"><name pos:start="209:20" pos:end="209:32"><name pos:start="209:20" pos:end="209:23">rect</name><operator pos:start="209:24" pos:end="209:25">-&gt;</operator><name pos:start="209:26" pos:end="209:29">data</name><index pos:start="209:30" pos:end="209:32">[<expr pos:start="209:31" pos:end="209:31"><literal type="number" pos:start="209:31" pos:end="209:31">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="209:35" pos:end="209:46"><expr pos:start="209:35" pos:end="209:46"><name pos:start="209:35" pos:end="209:46"><name pos:start="209:35" pos:end="209:40">region</name><operator pos:start="209:41" pos:end="209:42">-&gt;</operator><name pos:start="209:43" pos:end="209:46">pbuf</name></name></expr></argument>, <argument pos:start="209:49" pos:end="209:64"><expr pos:start="209:49" pos:end="209:64"><name pos:start="209:49" pos:end="209:64"><name pos:start="209:49" pos:end="209:54">region</name><operator pos:start="209:55" pos:end="209:56">-&gt;</operator><name pos:start="209:57" pos:end="209:64">buf_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="213:13" pos:end="220:0"><if pos:start="213:13" pos:end="220:0">if <condition pos:start="213:16" pos:end="213:93">(<expr pos:start="213:17" pos:end="213:92"><operator pos:start="213:17" pos:end="213:17">(</operator><name pos:start="213:18" pos:end="213:21">clut</name> <operator pos:start="213:23" pos:end="213:24">==</operator> <operator pos:start="213:26" pos:end="213:26">&amp;</operator><name pos:start="213:27" pos:end="213:38">default_clut</name> <operator pos:start="213:40" pos:end="213:41">&amp;&amp;</operator> <name pos:start="213:43" pos:end="213:59"><name pos:start="213:43" pos:end="213:45">ctx</name><operator pos:start="213:46" pos:end="213:47">-&gt;</operator><name pos:start="213:48" pos:end="213:59">compute_clut</name></name> <operator pos:start="213:61" pos:end="213:62">==</operator> <operator pos:start="213:64" pos:end="213:64">-</operator><literal type="number" pos:start="213:65" pos:end="213:65">1</literal><operator pos:start="213:66" pos:end="213:66">)</operator> <operator pos:start="213:68" pos:end="213:69">||</operator> <name pos:start="213:71" pos:end="213:87"><name pos:start="213:71" pos:end="213:73">ctx</name><operator pos:start="213:74" pos:end="213:75">-&gt;</operator><name pos:start="213:76" pos:end="213:87">compute_clut</name></name> <operator pos:start="213:89" pos:end="213:90">==</operator> <literal type="number" pos:start="213:92" pos:end="213:92">1</literal></expr>)</condition><block type="pseudo" pos:start="215:17" pos:end="220:0"><block_content pos:start="215:17" pos:end="220:0">

                <expr_stmt pos:start="215:17" pos:end="220:0"><expr pos:start="215:17" pos:end="215:60"><call pos:start="215:17" pos:end="215:60"><name pos:start="215:17" pos:end="215:36">compute_default_clut</name><argument_list pos:start="215:37" pos:end="215:60">(<argument pos:start="215:38" pos:end="215:41"><expr pos:start="215:38" pos:end="215:41"><name pos:start="215:38" pos:end="215:41">rect</name></expr></argument>, <argument pos:start="215:44" pos:end="215:50"><expr pos:start="215:44" pos:end="215:50"><name pos:start="215:44" pos:end="215:50"><name pos:start="215:44" pos:end="215:47">rect</name><operator pos:start="215:48" pos:end="215:49">-&gt;</operator><name pos:start="215:50" pos:end="215:50">w</name></name></expr></argument>, <argument pos:start="215:53" pos:end="215:59"><expr pos:start="215:53" pos:end="215:59"><name pos:start="215:53" pos:end="215:59"><name pos:start="215:53" pos:end="215:56">rect</name><operator pos:start="215:57" pos:end="215:58">-&gt;</operator><name pos:start="215:59" pos:end="215:59">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="219:1" pos:end="219:20">#<cpp:directive pos:start="219:2" pos:end="219:3">if</cpp:directive> <expr pos:start="219:5" pos:end="219:20"><name pos:start="219:5" pos:end="219:20">FF_API_AVPICTURE</name></expr></cpp:if>

<macro pos:start="221:1" pos:end="221:31"><name pos:start="221:1" pos:end="221:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

<block pos:start="223:1" pos:end="235:1">{<block_content pos:start="225:13" pos:end="233:13">

            <decl_stmt pos:start="225:13" pos:end="225:18"><decl pos:start="225:13" pos:end="225:17"><type pos:start="225:13" pos:end="225:15"><name pos:start="225:13" pos:end="225:15">int</name></type> <name pos:start="225:17" pos:end="225:17">j</name></decl>;</decl_stmt>

            <for pos:start="227:13" pos:end="233:13">for <control pos:start="227:17" pos:end="227:35">(<init pos:start="227:18" pos:end="227:23"><expr pos:start="227:18" pos:end="227:22"><name pos:start="227:18" pos:end="227:18">j</name> <operator pos:start="227:20" pos:end="227:20">=</operator> <literal type="number" pos:start="227:22" pos:end="227:22">0</literal></expr>;</init> <condition pos:start="227:25" pos:end="227:30"><expr pos:start="227:25" pos:end="227:29"><name pos:start="227:25" pos:end="227:25">j</name> <operator pos:start="227:27" pos:end="227:27">&lt;</operator> <literal type="number" pos:start="227:29" pos:end="227:29">4</literal></expr>;</condition> <incr pos:start="227:32" pos:end="227:34"><expr pos:start="227:32" pos:end="227:34"><name pos:start="227:32" pos:end="227:32">j</name><operator pos:start="227:33" pos:end="227:34">++</operator></expr></incr>)</control> <block pos:start="227:37" pos:end="233:13">{<block_content pos:start="229:17" pos:end="231:59">

                <expr_stmt pos:start="229:17" pos:end="229:51"><expr pos:start="229:17" pos:end="229:50"><name pos:start="229:17" pos:end="229:34"><name pos:start="229:17" pos:end="229:20">rect</name><operator pos:start="229:21" pos:end="229:22">-&gt;</operator><name pos:start="229:23" pos:end="229:26">pict</name><operator pos:start="229:27" pos:end="229:27">.</operator><name pos:start="229:28" pos:end="229:31">data</name><index pos:start="229:32" pos:end="229:34">[<expr pos:start="229:33" pos:end="229:33"><name pos:start="229:33" pos:end="229:33">j</name></expr>]</index></name> <operator pos:start="229:36" pos:end="229:36">=</operator> <name pos:start="229:38" pos:end="229:50"><name pos:start="229:38" pos:end="229:41">rect</name><operator pos:start="229:42" pos:end="229:43">-&gt;</operator><name pos:start="229:44" pos:end="229:47">data</name><index pos:start="229:48" pos:end="229:50">[<expr pos:start="229:49" pos:end="229:49"><name pos:start="229:49" pos:end="229:49">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="231:17" pos:end="231:59"><expr pos:start="231:17" pos:end="231:58"><name pos:start="231:17" pos:end="231:38"><name pos:start="231:17" pos:end="231:20">rect</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:26">pict</name><operator pos:start="231:27" pos:end="231:27">.</operator><name pos:start="231:28" pos:end="231:35">linesize</name><index pos:start="231:36" pos:end="231:38">[<expr pos:start="231:37" pos:end="231:37"><name pos:start="231:37" pos:end="231:37">j</name></expr>]</index></name> <operator pos:start="231:40" pos:end="231:40">=</operator> <name pos:start="231:42" pos:end="231:58"><name pos:start="231:42" pos:end="231:45">rect</name><operator pos:start="231:46" pos:end="231:47">-&gt;</operator><name pos:start="231:48" pos:end="231:55">linesize</name><index pos:start="231:56" pos:end="231:58">[<expr pos:start="231:57" pos:end="231:57"><name pos:start="231:57" pos:end="231:57">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

</block_content>}</block>

<expr_stmt pos:start="237:1" pos:end="243:16"><expr pos:start="237:1" pos:end="243:15"><name pos:start="237:1" pos:end="240:0">FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif pos:start="239:1" pos:end="239:6">#<cpp:directive pos:start="239:2" pos:end="239:6">endif</cpp:directive></cpp:endif>



            <name pos:start="243:13" pos:end="243:13">i</name><operator pos:start="243:14" pos:end="243:15">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="251:5" pos:end="251:13">return <expr pos:start="251:12" pos:end="251:12"><literal type="number" pos:start="251:12" pos:end="251:12">0</literal></expr>;</return>

<label pos:start="253:1" pos:end="253:5"><name pos:start="253:1" pos:end="253:4">fail</name>:</label>

    <if_stmt pos:start="255:5" pos:end="275:5"><if pos:start="255:5" pos:end="275:5">if <condition pos:start="255:8" pos:end="255:19">(<expr pos:start="255:9" pos:end="255:18"><name pos:start="255:9" pos:end="255:18"><name pos:start="255:9" pos:end="255:11">sub</name><operator pos:start="255:12" pos:end="255:13">-&gt;</operator><name pos:start="255:14" pos:end="255:18">rects</name></name></expr>)</condition> <block pos:start="255:21" pos:end="275:5">{<block_content pos:start="257:9" pos:end="273:30">

        <for pos:start="257:9" pos:end="271:9">for<control pos:start="257:12" pos:end="257:39">(<init pos:start="257:13" pos:end="257:16"><expr pos:start="257:13" pos:end="257:15"><name pos:start="257:13" pos:end="257:13">i</name><operator pos:start="257:14" pos:end="257:14">=</operator><literal type="number" pos:start="257:15" pos:end="257:15">0</literal></expr>;</init> <condition pos:start="257:18" pos:end="257:34"><expr pos:start="257:18" pos:end="257:33"><name pos:start="257:18" pos:end="257:18">i</name><operator pos:start="257:19" pos:end="257:19">&lt;</operator><name pos:start="257:20" pos:end="257:33"><name pos:start="257:20" pos:end="257:22">sub</name><operator pos:start="257:23" pos:end="257:24">-&gt;</operator><name pos:start="257:25" pos:end="257:33">num_rects</name></name></expr>;</condition> <incr pos:start="257:36" pos:end="257:38"><expr pos:start="257:36" pos:end="257:38"><name pos:start="257:36" pos:end="257:36">i</name><operator pos:start="257:37" pos:end="257:38">++</operator></expr></incr>)</control> <block pos:start="257:41" pos:end="271:9">{<block_content pos:start="259:13" pos:end="269:37">

            <expr_stmt pos:start="259:13" pos:end="259:33"><expr pos:start="259:13" pos:end="259:32"><name pos:start="259:13" pos:end="259:16">rect</name> <operator pos:start="259:18" pos:end="259:18">=</operator> <name pos:start="259:20" pos:end="259:32"><name pos:start="259:20" pos:end="259:22">sub</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:29">rects</name><index pos:start="259:30" pos:end="259:32">[<expr pos:start="259:31" pos:end="259:31"><name pos:start="259:31" pos:end="259:31">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="267:13"><if pos:start="261:13" pos:end="267:13">if <condition pos:start="261:16" pos:end="261:21">(<expr pos:start="261:17" pos:end="261:20"><name pos:start="261:17" pos:end="261:20">rect</name></expr>)</condition> <block pos:start="261:23" pos:end="267:13">{<block_content pos:start="263:17" pos:end="265:41">

                <expr_stmt pos:start="263:17" pos:end="263:41"><expr pos:start="263:17" pos:end="263:40"><call pos:start="263:17" pos:end="263:40"><name pos:start="263:17" pos:end="263:24">av_freep</name><argument_list pos:start="263:25" pos:end="263:40">(<argument pos:start="263:26" pos:end="263:39"><expr pos:start="263:26" pos:end="263:39"><operator pos:start="263:26" pos:end="263:26">&amp;</operator><name pos:start="263:27" pos:end="263:39"><name pos:start="263:27" pos:end="263:30">rect</name><operator pos:start="263:31" pos:end="263:32">-&gt;</operator><name pos:start="263:33" pos:end="263:36">data</name><index pos:start="263:37" pos:end="263:39">[<expr pos:start="263:38" pos:end="263:38"><literal type="number" pos:start="263:38" pos:end="263:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:41"><expr pos:start="265:17" pos:end="265:40"><call pos:start="265:17" pos:end="265:40"><name pos:start="265:17" pos:end="265:24">av_freep</name><argument_list pos:start="265:25" pos:end="265:40">(<argument pos:start="265:26" pos:end="265:39"><expr pos:start="265:26" pos:end="265:39"><operator pos:start="265:26" pos:end="265:26">&amp;</operator><name pos:start="265:27" pos:end="265:39"><name pos:start="265:27" pos:end="265:30">rect</name><operator pos:start="265:31" pos:end="265:32">-&gt;</operator><name pos:start="265:33" pos:end="265:36">data</name><index pos:start="265:37" pos:end="265:39">[<expr pos:start="265:38" pos:end="265:38"><literal type="number" pos:start="265:38" pos:end="265:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:37"><expr pos:start="269:13" pos:end="269:36"><call pos:start="269:13" pos:end="269:36"><name pos:start="269:13" pos:end="269:20">av_freep</name><argument_list pos:start="269:21" pos:end="269:36">(<argument pos:start="269:22" pos:end="269:35"><expr pos:start="269:22" pos:end="269:35"><operator pos:start="269:22" pos:end="269:22">&amp;</operator><name pos:start="269:23" pos:end="269:35"><name pos:start="269:23" pos:end="269:25">sub</name><operator pos:start="269:26" pos:end="269:27">-&gt;</operator><name pos:start="269:28" pos:end="269:32">rects</name><index pos:start="269:33" pos:end="269:35">[<expr pos:start="269:34" pos:end="269:34"><name pos:start="269:34" pos:end="269:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="273:9" pos:end="273:30"><expr pos:start="273:9" pos:end="273:29"><call pos:start="273:9" pos:end="273:29"><name pos:start="273:9" pos:end="273:16">av_freep</name><argument_list pos:start="273:17" pos:end="273:29">(<argument pos:start="273:18" pos:end="273:28"><expr pos:start="273:18" pos:end="273:28"><operator pos:start="273:18" pos:end="273:18">&amp;</operator><name pos:start="273:19" pos:end="273:28"><name pos:start="273:19" pos:end="273:21">sub</name><operator pos:start="273:22" pos:end="273:23">-&gt;</operator><name pos:start="273:24" pos:end="273:28">rects</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:23"><expr pos:start="277:5" pos:end="277:22"><name pos:start="277:5" pos:end="277:18"><name pos:start="277:5" pos:end="277:7">sub</name><operator pos:start="277:8" pos:end="277:9">-&gt;</operator><name pos:start="277:10" pos:end="277:18">num_rects</name></name> <operator pos:start="277:20" pos:end="277:20">=</operator> <literal type="number" pos:start="277:22" pos:end="277:22">0</literal></expr>;</expr_stmt>

    <return pos:start="279:5" pos:end="279:15">return <expr pos:start="279:12" pos:end="279:14"><name pos:start="279:12" pos:end="279:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
