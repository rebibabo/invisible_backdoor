<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22808.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:33">pva_read_timestamp</name><parameter_list pos:start="1:34" pos:end="3:74">(<parameter pos:start="1:35" pos:end="1:59"><decl pos:start="1:35" pos:end="1:59"><type pos:start="1:35" pos:end="1:59"><name pos:start="1:35" pos:end="1:56"><name pos:start="1:35" pos:end="1:40">struct</name> <name pos:start="1:42" pos:end="1:56">AVFormatContext</name></name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:77"><decl pos:start="1:62" pos:end="1:77"><type pos:start="1:62" pos:end="1:77"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:77">stream_index</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:49">int64_t</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:54">pos</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:73"><decl pos:start="3:57" pos:end="3:73"><type pos:start="3:57" pos:end="3:73"><name pos:start="3:57" pos:end="3:63">int64_t</name></type> <name pos:start="3:65" pos:end="3:73">pos_limit</name></decl></parameter>)</parameter_list> <block pos:start="3:76" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">ByteIOContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">pb</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><name pos:start="5:25" pos:end="5:29"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:29">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PVAContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">pvactx</name> <init pos:start="7:24" pos:end="7:37">= <expr pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:37"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">length</name></decl>, <decl pos:start="9:17" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:24">streamid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">res</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:79"><expr pos:start="15:5" pos:end="15:78"><name pos:start="15:5" pos:end="15:13">pos_limit</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:78"><name pos:start="15:17" pos:end="15:21">FFMIN</name><argument_list pos:start="15:22" pos:end="15:78">(<argument pos:start="15:23" pos:end="15:51"><expr pos:start="15:23" pos:end="15:51"><operator pos:start="15:23" pos:end="15:23">*</operator><name pos:start="15:24" pos:end="15:26">pos</name><operator pos:start="15:27" pos:end="15:27">+</operator><name pos:start="15:28" pos:end="15:49">PVA_MAX_PAYLOAD_LENGTH</name><operator pos:start="15:50" pos:end="15:50">*</operator><literal type="number" pos:start="15:51" pos:end="15:51">8</literal></expr></argument>, <argument pos:start="15:54" pos:end="15:77"><expr pos:start="15:54" pos:end="15:77"><operator pos:start="15:54" pos:end="15:54">(</operator><name pos:start="15:55" pos:end="15:62">uint64_t</name><operator pos:start="15:63" pos:end="15:63">)</operator><operator pos:start="15:64" pos:end="15:64">*</operator><name pos:start="15:65" pos:end="15:67">pos</name><operator pos:start="15:68" pos:end="15:68">+</operator><name pos:start="15:69" pos:end="15:77">pos_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="19:5" pos:end="47:5">while <condition pos:start="19:11" pos:end="19:28">(<expr pos:start="19:12" pos:end="19:27"><operator pos:start="19:12" pos:end="19:12">*</operator><name pos:start="19:13" pos:end="19:15">pos</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <name pos:start="19:19" pos:end="19:27">pos_limit</name></expr>)</condition> <block pos:start="19:30" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:14">

        <expr_stmt pos:start="21:9" pos:end="21:29"><expr pos:start="21:9" pos:end="21:28"><name pos:start="21:9" pos:end="21:11">res</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:28">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:17">url_fseek</name><argument_list pos:start="23:18" pos:end="23:37">(<argument pos:start="23:19" pos:end="23:20"><expr pos:start="23:19" pos:end="23:20"><name pos:start="23:19" pos:end="23:20">pb</name></expr></argument>, <argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><operator pos:start="23:23" pos:end="23:23">*</operator><name pos:start="23:24" pos:end="23:26">pos</name></expr></argument>, <argument pos:start="23:29" pos:end="23:36"><expr pos:start="23:29" pos:end="23:36"><name pos:start="23:29" pos:end="23:36">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:14">pvactx</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:28">continue_pes</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:64">(<expr pos:start="29:13" pos:end="29:63"><call pos:start="29:13" pos:end="29:63"><name pos:start="29:13" pos:end="29:31">read_part_of_packet</name><argument_list pos:start="29:32" pos:end="29:63">(<argument pos:start="29:33" pos:end="29:33"><expr pos:start="29:33" pos:end="29:33"><name pos:start="29:33" pos:end="29:33">s</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><operator pos:start="29:36" pos:end="29:36">&amp;</operator><name pos:start="29:37" pos:end="29:39">res</name></expr></argument>, <argument pos:start="29:42" pos:end="29:48"><expr pos:start="29:42" pos:end="29:48"><operator pos:start="29:42" pos:end="29:42">&amp;</operator><name pos:start="29:43" pos:end="29:48">length</name></expr></argument>, <argument pos:start="29:51" pos:end="29:59"><expr pos:start="29:51" pos:end="29:59"><operator pos:start="29:51" pos:end="29:51">&amp;</operator><name pos:start="29:52" pos:end="29:59">streamid</name></expr></argument>, <argument pos:start="29:62" pos:end="29:62"><expr pos:start="29:62" pos:end="29:62"><literal type="number" pos:start="29:62" pos:end="29:62">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:66" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:21">

            <expr_stmt pos:start="31:13" pos:end="31:21"><expr pos:start="31:13" pos:end="31:20"><operator pos:start="31:13" pos:end="31:13">(</operator><operator pos:start="31:14" pos:end="31:14">*</operator><name pos:start="31:15" pos:end="31:17">pos</name><operator pos:start="31:18" pos:end="31:18">)</operator><operator pos:start="31:19" pos:end="31:20">++</operator></expr>;</expr_stmt>

            <continue pos:start="33:13" pos:end="33:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="43:9"><if pos:start="37:9" pos:end="43:9">if <condition pos:start="37:12" pos:end="37:66">(<expr pos:start="37:13" pos:end="37:65"><name pos:start="37:13" pos:end="37:20">streamid</name> <operator pos:start="37:22" pos:end="37:22">-</operator> <literal type="number" pos:start="37:24" pos:end="37:24">1</literal> <operator pos:start="37:26" pos:end="37:27">!=</operator> <name pos:start="37:29" pos:end="37:40">stream_index</name> <operator pos:start="37:42" pos:end="37:43">||</operator> <name pos:start="37:45" pos:end="37:47">res</name> <operator pos:start="37:49" pos:end="37:50">==</operator> <name pos:start="37:52" pos:end="37:65">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="37:68" pos:end="43:9">{<block_content pos:start="39:13" pos:end="41:21">

            <expr_stmt pos:start="39:13" pos:end="39:42"><expr pos:start="39:13" pos:end="39:41"><operator pos:start="39:13" pos:end="39:13">*</operator><name pos:start="39:14" pos:end="39:16">pos</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <call pos:start="39:20" pos:end="39:32"><name pos:start="39:20" pos:end="39:28">url_ftell</name><argument_list pos:start="39:29" pos:end="39:32">(<argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><name pos:start="39:30" pos:end="39:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="39:34" pos:end="39:34">+</operator> <name pos:start="39:36" pos:end="39:41">length</name></expr>;</expr_stmt>

            <continue pos:start="41:13" pos:end="41:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    </block_content>}</block></while>



    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:10">pvactx</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:24">continue_pes</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
