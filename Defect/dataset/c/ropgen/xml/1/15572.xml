<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15572.c" pos:tabs="8"><function pos:start="1:1" pos:end="32:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:32">spapr_h_cas_compose_response</name><parameter_list pos:start="1:33" pos:end="3:64">(<parameter pos:start="1:34" pos:end="1:57"><decl pos:start="1:34" pos:end="1:57"><type pos:start="1:34" pos:end="1:57"><name pos:start="1:34" pos:end="1:50">sPAPRMachineState</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">spapr</name></decl></parameter>,
                                 <parameter pos:start="2:34" pos:end="2:50"><decl pos:start="2:34" pos:end="2:50"><type pos:start="2:34" pos:end="2:50"><name pos:start="2:34" pos:end="2:45">target_ulong</name></type> <name pos:start="2:47" pos:end="2:50">addr</name></decl></parameter>, <parameter pos:start="2:53" pos:end="2:69"><decl pos:start="2:53" pos:end="2:69"><type pos:start="2:53" pos:end="2:69"><name pos:start="2:53" pos:end="2:64">target_ulong</name></type> <name pos:start="2:66" pos:end="2:69">size</name></decl></parameter>,
                                 <parameter pos:start="3:34" pos:end="3:63"><decl pos:start="3:34" pos:end="3:63"><type pos:start="3:34" pos:end="3:63"><name pos:start="3:34" pos:end="3:50">sPAPROptionVector</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:63">ov5_updates</name></decl></parameter>)</parameter_list>
<block pos:start="4:1" pos:end="32:13">{<block_content pos:start="5:5" pos:end="32:13">
    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">void</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">fdt</name></decl>, <decl pos:start="5:16" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:10"><modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:24">fdt_skel</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:58"><decl pos:start="6:5" pos:end="6:57"><type pos:start="6:5" pos:end="6:31"><name pos:start="6:5" pos:end="6:31">sPAPRDeviceTreeUpdateHeader</name></type> <name pos:start="6:33" pos:end="6:35">hdr</name> <init pos:start="6:37" pos:end="6:57">= <expr pos:start="6:39" pos:end="6:57"><block pos:start="6:39" pos:end="6:57">{ <expr pos:start="6:41" pos:end="6:55"><operator pos:start="6:41" pos:end="6:41">.</operator><name pos:start="6:42" pos:end="6:51">version_id</name> <operator pos:start="6:53" pos:end="6:53">=</operator> <literal type="number" pos:start="6:55" pos:end="6:55">1</literal></expr> }</block></expr></init></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="32:13"><if pos:start="7:5" pos:end="32:13">if <condition pos:start="7:8" pos:end="7:42">(<expr pos:start="7:9" pos:end="7:41"><call pos:start="7:9" pos:end="7:41"><name pos:start="7:9" pos:end="7:39">spapr_hotplugged_dev_before_cas</name><argument_list pos:start="7:40" pos:end="7:41">()</argument_list></call></expr>)</condition> <block pos:start="7:44" pos:end="32:13">{<block_content pos:start="8:9" pos:end="32:13">
        <return pos:start="8:9" pos:end="8:17">return <expr pos:start="8:16" pos:end="8:16"><literal type="number" pos:start="8:16" pos:end="8:16">1</literal></expr>;</return>
    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:8">size</name> <operator pos:start="9:10" pos:end="9:11">-=</operator> <sizeof pos:start="9:13" pos:end="9:23">sizeof<argument_list pos:start="9:19" pos:end="9:23">(<argument pos:start="9:20" pos:end="9:22"><expr pos:start="9:20" pos:end="9:22"><name pos:start="9:20" pos:end="9:22">hdr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>
    <comment type="block" pos:start="10:5" pos:end="10:25">/* Create skeleton */</comment>
    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:12">fdt_skel</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <call pos:start="11:16" pos:end="11:30"><name pos:start="11:16" pos:end="11:24">g_malloc0</name><argument_list pos:start="11:25" pos:end="11:30">(<argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:39"><expr pos:start="12:5" pos:end="12:38"><call pos:start="12:5" pos:end="12:38"><name pos:start="12:5" pos:end="12:8">_FDT</name><argument_list pos:start="12:9" pos:end="12:38">(<argument pos:start="12:10" pos:end="12:37"><expr pos:start="12:10" pos:end="12:37"><operator pos:start="12:10" pos:end="12:10">(</operator><call pos:start="12:11" pos:end="12:36"><name pos:start="12:11" pos:end="12:20">fdt_create</name><argument_list pos:start="12:21" pos:end="12:36">(<argument pos:start="12:22" pos:end="12:29"><expr pos:start="12:22" pos:end="12:29"><name pos:start="12:22" pos:end="12:29">fdt_skel</name></expr></argument>, <argument pos:start="12:32" pos:end="12:35"><expr pos:start="12:32" pos:end="12:35"><name pos:start="12:32" pos:end="12:35">size</name></expr></argument>)</argument_list></call><operator pos:start="12:37" pos:end="12:37">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:41"><expr pos:start="13:5" pos:end="13:40"><call pos:start="13:5" pos:end="13:40"><name pos:start="13:5" pos:end="13:8">_FDT</name><argument_list pos:start="13:9" pos:end="13:40">(<argument pos:start="13:10" pos:end="13:39"><expr pos:start="13:10" pos:end="13:39"><operator pos:start="13:10" pos:end="13:10">(</operator><call pos:start="13:11" pos:end="13:38"><name pos:start="13:11" pos:end="13:24">fdt_begin_node</name><argument_list pos:start="13:25" pos:end="13:38">(<argument pos:start="13:26" pos:end="13:33"><expr pos:start="13:26" pos:end="13:33"><name pos:start="13:26" pos:end="13:33">fdt_skel</name></expr></argument>, <argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><literal type="string" pos:start="13:36" pos:end="13:37">""</literal></expr></argument>)</argument_list></call><operator pos:start="13:39" pos:end="13:39">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:35"><expr pos:start="14:5" pos:end="14:34"><call pos:start="14:5" pos:end="14:34"><name pos:start="14:5" pos:end="14:8">_FDT</name><argument_list pos:start="14:9" pos:end="14:34">(<argument pos:start="14:10" pos:end="14:33"><expr pos:start="14:10" pos:end="14:33"><operator pos:start="14:10" pos:end="14:10">(</operator><call pos:start="14:11" pos:end="14:32"><name pos:start="14:11" pos:end="14:22">fdt_end_node</name><argument_list pos:start="14:23" pos:end="14:32">(<argument pos:start="14:24" pos:end="14:31"><expr pos:start="14:24" pos:end="14:31"><name pos:start="14:24" pos:end="14:31">fdt_skel</name></expr></argument>)</argument_list></call><operator pos:start="14:33" pos:end="14:33">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:8">_FDT</name><argument_list pos:start="15:9" pos:end="15:32">(<argument pos:start="15:10" pos:end="15:31"><expr pos:start="15:10" pos:end="15:31"><operator pos:start="15:10" pos:end="15:10">(</operator><call pos:start="15:11" pos:end="15:30"><name pos:start="15:11" pos:end="15:20">fdt_finish</name><argument_list pos:start="15:21" pos:end="15:30">(<argument pos:start="15:22" pos:end="15:29"><expr pos:start="15:22" pos:end="15:29"><name pos:start="15:22" pos:end="15:29">fdt_skel</name></expr></argument>)</argument_list></call><operator pos:start="15:31" pos:end="15:31">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:26"><expr pos:start="16:5" pos:end="16:25"><name pos:start="16:5" pos:end="16:7">fdt</name> <operator pos:start="16:9" pos:end="16:9">=</operator> <call pos:start="16:11" pos:end="16:25"><name pos:start="16:11" pos:end="16:19">g_malloc0</name><argument_list pos:start="16:20" pos:end="16:25">(<argument pos:start="16:21" pos:end="16:24"><expr pos:start="16:21" pos:end="16:24"><name pos:start="16:21" pos:end="16:24">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:47"><expr pos:start="17:5" pos:end="17:46"><call pos:start="17:5" pos:end="17:46"><name pos:start="17:5" pos:end="17:8">_FDT</name><argument_list pos:start="17:9" pos:end="17:46">(<argument pos:start="17:10" pos:end="17:45"><expr pos:start="17:10" pos:end="17:45"><operator pos:start="17:10" pos:end="17:10">(</operator><call pos:start="17:11" pos:end="17:44"><name pos:start="17:11" pos:end="17:23">fdt_open_into</name><argument_list pos:start="17:24" pos:end="17:44">(<argument pos:start="17:25" pos:end="17:32"><expr pos:start="17:25" pos:end="17:32"><name pos:start="17:25" pos:end="17:32">fdt_skel</name></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">fdt</name></expr></argument>, <argument pos:start="17:40" pos:end="17:43"><expr pos:start="17:40" pos:end="17:43"><name pos:start="17:40" pos:end="17:43">size</name></expr></argument>)</argument_list></call><operator pos:start="17:45" pos:end="17:45">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:21"><expr pos:start="18:5" pos:end="18:20"><call pos:start="18:5" pos:end="18:20"><name pos:start="18:5" pos:end="18:10">g_free</name><argument_list pos:start="18:11" pos:end="18:20">(<argument pos:start="18:12" pos:end="18:19"><expr pos:start="18:12" pos:end="18:19"><name pos:start="18:12" pos:end="18:19">fdt_skel</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="19:5" pos:end="19:25">/* Fixup cpu nodes */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:43"><expr pos:start="20:5" pos:end="20:42"><call pos:start="20:5" pos:end="20:42"><name pos:start="20:5" pos:end="20:8">_FDT</name><argument_list pos:start="20:9" pos:end="20:42">(<argument pos:start="20:10" pos:end="20:41"><expr pos:start="20:10" pos:end="20:41"><operator pos:start="20:10" pos:end="20:10">(</operator><call pos:start="20:11" pos:end="20:40"><name pos:start="20:11" pos:end="20:28">spapr_fixup_cpu_dt</name><argument_list pos:start="20:29" pos:end="20:40">(<argument pos:start="20:30" pos:end="20:32"><expr pos:start="20:30" pos:end="20:32"><name pos:start="20:30" pos:end="20:32">fdt</name></expr></argument>, <argument pos:start="20:35" pos:end="20:39"><expr pos:start="20:35" pos:end="20:39"><name pos:start="20:35" pos:end="20:39">spapr</name></expr></argument>)</argument_list></call><operator pos:start="20:41" pos:end="20:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="32:13"><if pos:start="21:5" pos:end="32:13">if <condition pos:start="21:8" pos:end="21:54">(<expr pos:start="21:9" pos:end="21:53"><call pos:start="21:9" pos:end="21:53"><name pos:start="21:9" pos:end="21:28">spapr_dt_cas_updates</name><argument_list pos:start="21:29" pos:end="21:53">(<argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34">spapr</name></expr></argument>, <argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">fdt</name></expr></argument>, <argument pos:start="21:42" pos:end="21:52"><expr pos:start="21:42" pos:end="21:52"><name pos:start="21:42" pos:end="21:52">ov5_updates</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:56" pos:end="32:13">{<block_content pos:start="22:9" pos:end="32:13">
        <return pos:start="22:9" pos:end="22:18">return <expr pos:start="22:16" pos:end="22:17"><operator pos:start="22:16" pos:end="22:16">-</operator><literal type="number" pos:start="22:17" pos:end="22:17">1</literal></expr>;</return>
    <comment type="block" pos:start="23:5" pos:end="23:29">/* Pack resulting tree */</comment>
    <expr_stmt pos:start="24:5" pos:end="24:26"><expr pos:start="24:5" pos:end="24:25"><call pos:start="24:5" pos:end="24:25"><name pos:start="24:5" pos:end="24:8">_FDT</name><argument_list pos:start="24:9" pos:end="24:25">(<argument pos:start="24:10" pos:end="24:24"><expr pos:start="24:10" pos:end="24:24"><operator pos:start="24:10" pos:end="24:10">(</operator><call pos:start="24:11" pos:end="24:23"><name pos:start="24:11" pos:end="24:18">fdt_pack</name><argument_list pos:start="24:19" pos:end="24:23">(<argument pos:start="24:20" pos:end="24:22"><expr pos:start="24:20" pos:end="24:22"><name pos:start="24:20" pos:end="24:22">fdt</name></expr></argument>)</argument_list></call><operator pos:start="24:24" pos:end="24:24">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="25:5" pos:end="32:13"><if pos:start="25:5" pos:end="32:13">if <condition pos:start="25:8" pos:end="25:48">(<expr pos:start="25:9" pos:end="25:47"><call pos:start="25:9" pos:end="25:26"><name pos:start="25:9" pos:end="25:21">fdt_totalsize</name><argument_list pos:start="25:22" pos:end="25:26">(<argument pos:start="25:23" pos:end="25:25"><expr pos:start="25:23" pos:end="25:25"><name pos:start="25:23" pos:end="25:25">fdt</name></expr></argument>)</argument_list></call> <operator pos:start="25:28" pos:end="25:28">+</operator> <sizeof pos:start="25:30" pos:end="25:40">sizeof<argument_list pos:start="25:36" pos:end="25:40">(<argument pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:39">hdr</name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:42" pos:end="25:42">&gt;</operator> <name pos:start="25:44" pos:end="25:47">size</name></expr>)</condition> <block pos:start="25:50" pos:end="32:13">{<block_content pos:start="26:9" pos:end="32:13">
        <expr_stmt pos:start="26:9" pos:end="26:37"><expr pos:start="26:9" pos:end="26:36"><call pos:start="26:9" pos:end="26:36"><name pos:start="26:9" pos:end="26:30">trace_spapr_cas_failed</name><argument_list pos:start="26:31" pos:end="26:36">(<argument pos:start="26:32" pos:end="26:35"><expr pos:start="26:32" pos:end="26:35"><name pos:start="26:32" pos:end="26:35">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>
    <expr_stmt pos:start="28:5" pos:end="28:55"><expr pos:start="28:5" pos:end="28:54"><call pos:start="28:5" pos:end="28:54"><name pos:start="28:5" pos:end="28:29">cpu_physical_memory_write</name><argument_list pos:start="28:30" pos:end="28:54">(<argument pos:start="28:31" pos:end="28:34"><expr pos:start="28:31" pos:end="28:34"><name pos:start="28:31" pos:end="28:34">addr</name></expr></argument>, <argument pos:start="28:37" pos:end="28:40"><expr pos:start="28:37" pos:end="28:40"><operator pos:start="28:37" pos:end="28:37">&amp;</operator><name pos:start="28:38" pos:end="28:40">hdr</name></expr></argument>, <argument pos:start="28:43" pos:end="28:53"><expr pos:start="28:43" pos:end="28:53"><sizeof pos:start="28:43" pos:end="28:53">sizeof<argument_list pos:start="28:49" pos:end="28:53">(<argument pos:start="28:50" pos:end="28:52"><expr pos:start="28:50" pos:end="28:52"><name pos:start="28:50" pos:end="28:52">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:75"><expr pos:start="29:5" pos:end="29:74"><call pos:start="29:5" pos:end="29:74"><name pos:start="29:5" pos:end="29:29">cpu_physical_memory_write</name><argument_list pos:start="29:30" pos:end="29:74">(<argument pos:start="29:31" pos:end="29:48"><expr pos:start="29:31" pos:end="29:48"><name pos:start="29:31" pos:end="29:34">addr</name> <operator pos:start="29:36" pos:end="29:36">+</operator> <sizeof pos:start="29:38" pos:end="29:48">sizeof<argument_list pos:start="29:44" pos:end="29:48">(<argument pos:start="29:45" pos:end="29:47"><expr pos:start="29:45" pos:end="29:47"><name pos:start="29:45" pos:end="29:47">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:51" pos:end="29:53"><expr pos:start="29:51" pos:end="29:53"><name pos:start="29:51" pos:end="29:53">fdt</name></expr></argument>, <argument pos:start="29:56" pos:end="29:73"><expr pos:start="29:56" pos:end="29:73"><call pos:start="29:56" pos:end="29:73"><name pos:start="29:56" pos:end="29:68">fdt_totalsize</name><argument_list pos:start="29:69" pos:end="29:73">(<argument pos:start="29:70" pos:end="29:72"><expr pos:start="29:70" pos:end="29:72"><name pos:start="29:70" pos:end="29:72">fdt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="30:5" pos:end="30:63"><expr pos:start="30:5" pos:end="30:62"><call pos:start="30:5" pos:end="30:62"><name pos:start="30:5" pos:end="30:28">trace_spapr_cas_continue</name><argument_list pos:start="30:29" pos:end="30:62">(<argument pos:start="30:30" pos:end="30:61"><expr pos:start="30:30" pos:end="30:61"><call pos:start="30:30" pos:end="30:47"><name pos:start="30:30" pos:end="30:42">fdt_totalsize</name><argument_list pos:start="30:43" pos:end="30:47">(<argument pos:start="30:44" pos:end="30:46"><expr pos:start="30:44" pos:end="30:46"><name pos:start="30:44" pos:end="30:46">fdt</name></expr></argument>)</argument_list></call> <operator pos:start="30:49" pos:end="30:49">+</operator> <sizeof pos:start="30:51" pos:end="30:61">sizeof<argument_list pos:start="30:57" pos:end="30:61">(<argument pos:start="30:58" pos:end="30:60"><expr pos:start="30:58" pos:end="30:60"><name pos:start="30:58" pos:end="30:60">hdr</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="31:5" pos:end="31:16"><expr pos:start="31:5" pos:end="31:15"><call pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:10">g_free</name><argument_list pos:start="31:11" pos:end="31:15">(<argument pos:start="31:12" pos:end="31:14"><expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">fdt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="32:5" pos:end="32:13">return <expr pos:start="32:12" pos:end="32:12"><literal type="number" pos:start="32:12" pos:end="32:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
