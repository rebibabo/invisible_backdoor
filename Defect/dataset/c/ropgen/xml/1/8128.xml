<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8128.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">v4l2_read_header</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:47"><decl pos:start="1:29" pos:end="1:47"><type pos:start="1:29" pos:end="1:47"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:47">s1</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:71"><decl pos:start="1:50" pos:end="1:71"><type pos:start="1:50" pos:end="1:71"><name pos:start="1:50" pos:end="1:67">AVFormatParameters</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:71">ap</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">width</name></decl>, <decl pos:start="9:16" pos:end="9:21"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:21">height</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">res</name></decl>, <decl pos:start="11:14" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:23">frame_rate</name></decl>, <decl pos:start="11:26" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:40">frame_rate_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint32_t</name></type> <name pos:start="13:14" pos:end="13:27">desired_format</name></decl>, <decl pos:start="13:30" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:30" pos:end="13:41">capabilities</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:68">(<expr pos:start="17:9" pos:end="17:67"><name pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:10">ap</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:17">width</name></name> <operator pos:start="17:19" pos:end="17:20">&lt;=</operator> <literal type="number" pos:start="17:22" pos:end="17:22">0</literal> <operator pos:start="17:24" pos:end="17:25">||</operator> <name pos:start="17:27" pos:end="17:36"><name pos:start="17:27" pos:end="17:28">ap</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">height</name></name> <operator pos:start="17:38" pos:end="17:39">&lt;=</operator> <literal type="number" pos:start="17:41" pos:end="17:41">0</literal> <operator pos:start="17:43" pos:end="17:44">||</operator> <name pos:start="17:46" pos:end="17:62"><name pos:start="17:46" pos:end="17:47">ap</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:58">time_base</name><operator pos:start="17:59" pos:end="17:59">.</operator><name pos:start="17:60" pos:end="17:62">den</name></name> <operator pos:start="17:64" pos:end="17:65">&lt;=</operator> <literal type="number" pos:start="17:67" pos:end="17:67">0</literal></expr>)</condition> <block pos:start="17:70" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

        <expr_stmt pos:start="19:9" pos:end="19:79"><expr pos:start="19:9" pos:end="19:78"><call pos:start="19:9" pos:end="19:78"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="19:78">(<argument pos:start="19:16" pos:end="19:17"><expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">s1</name></expr></argument>, <argument pos:start="19:20" pos:end="19:31"><expr pos:start="19:20" pos:end="19:31"><name pos:start="19:20" pos:end="19:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="19:34" pos:end="19:77"><expr pos:start="19:34" pos:end="19:77"><literal type="string" pos:start="19:34" pos:end="19:77">"Missing/Wrong width, height or framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:9">width</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <name pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:14">ap</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:21">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:10">height</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:23"><name pos:start="31:14" pos:end="31:15">ap</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:23">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:14">frame_rate</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:34"><name pos:start="33:18" pos:end="33:19">ap</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:30">time_base</name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:34">den</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:40"><expr pos:start="35:5" pos:end="35:39"><name pos:start="35:5" pos:end="35:19">frame_rate_base</name> <operator pos:start="35:21" pos:end="35:21">=</operator> <name pos:start="35:23" pos:end="35:39"><name pos:start="35:23" pos:end="35:24">ap</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:35">time_base</name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:39">num</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if<condition pos:start="39:7" pos:end="39:59">(<expr pos:start="39:8" pos:end="39:58"><operator pos:start="39:8" pos:end="39:8">(</operator><name pos:start="39:9" pos:end="39:16">unsigned</name><operator pos:start="39:17" pos:end="39:17">)</operator><name pos:start="39:18" pos:end="39:22">width</name> <operator pos:start="39:24" pos:end="39:24">&gt;</operator> <literal type="number" pos:start="39:26" pos:end="39:30">32767</literal> <operator pos:start="39:32" pos:end="39:33">||</operator> <operator pos:start="39:35" pos:end="39:35">(</operator><name pos:start="39:36" pos:end="39:43">unsigned</name><operator pos:start="39:44" pos:end="39:44">)</operator><name pos:start="39:45" pos:end="39:50">height</name> <operator pos:start="39:52" pos:end="39:52">&gt;</operator> <literal type="number" pos:start="39:54" pos:end="39:58">32767</literal></expr>)</condition> <block pos:start="39:61" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:18">

        <expr_stmt pos:start="41:9" pos:end="41:70"><expr pos:start="41:9" pos:end="41:69"><call pos:start="41:9" pos:end="41:69"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="41:69">(<argument pos:start="41:16" pos:end="41:17"><expr pos:start="41:16" pos:end="41:17"><name pos:start="41:16" pos:end="41:17">s1</name></expr></argument>, <argument pos:start="41:20" pos:end="41:31"><expr pos:start="41:20" pos:end="41:31"><name pos:start="41:20" pos:end="41:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:34" pos:end="41:53"><expr pos:start="41:34" pos:end="41:53"><literal type="string" pos:start="41:34" pos:end="41:53">"Wrong size %dx%d\n"</literal></expr></argument>, <argument pos:start="41:56" pos:end="41:60"><expr pos:start="41:56" pos:end="41:60"><name pos:start="41:56" pos:end="41:60">width</name></expr></argument>, <argument pos:start="41:63" pos:end="41:68"><expr pos:start="41:63" pos:end="41:68"><name pos:start="41:63" pos:end="41:68">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:30"><expr pos:start="51:5" pos:end="51:29"><name pos:start="51:5" pos:end="51:6">st</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <call pos:start="51:10" pos:end="51:29"><name pos:start="51:10" pos:end="51:22">av_new_stream</name><argument_list pos:start="51:23" pos:end="51:29">(<argument pos:start="51:24" pos:end="51:25"><expr pos:start="51:24" pos:end="51:25"><name pos:start="51:24" pos:end="51:25">s1</name></expr></argument>, <argument pos:start="51:28" pos:end="51:28"><expr pos:start="51:28" pos:end="51:28"><literal type="number" pos:start="51:28" pos:end="51:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:12">(<expr pos:start="53:9" pos:end="53:11"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:11">st</name></expr>)</condition> <block pos:start="53:14" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:31">

        <return pos:start="55:9" pos:end="55:31">return <expr pos:start="55:16" pos:end="55:30"><call pos:start="55:16" pos:end="55:30"><name pos:start="55:16" pos:end="55:22">AVERROR</name><argument_list pos:start="55:23" pos:end="55:30">(<argument pos:start="55:24" pos:end="55:29"><expr pos:start="55:24" pos:end="55:29"><name pos:start="55:24" pos:end="55:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><call pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:19">av_set_pts_info</name><argument_list pos:start="59:20" pos:end="59:39">(<argument pos:start="59:21" pos:end="59:22"><expr pos:start="59:21" pos:end="59:22"><name pos:start="59:21" pos:end="59:22">st</name></expr></argument>, <argument pos:start="59:25" pos:end="59:26"><expr pos:start="59:25" pos:end="59:26"><literal type="number" pos:start="59:25" pos:end="59:26">64</literal></expr></argument>, <argument pos:start="59:29" pos:end="59:29"><expr pos:start="59:29" pos:end="59:29"><literal type="number" pos:start="59:29" pos:end="59:29">1</literal></expr></argument>, <argument pos:start="59:32" pos:end="59:38"><expr pos:start="59:32" pos:end="59:38"><literal type="number" pos:start="59:32" pos:end="59:38">1000000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="59:42" pos:end="59:64">/* 64 bits pts in us */</comment>



    <expr_stmt pos:start="63:5" pos:end="63:21"><expr pos:start="63:5" pos:end="63:20"><name pos:start="63:5" pos:end="63:12"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:12">width</name></name> <operator pos:start="63:14" pos:end="63:14">=</operator> <name pos:start="63:16" pos:end="63:20">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:23"><expr pos:start="65:5" pos:end="65:22"><name pos:start="65:5" pos:end="65:13"><name pos:start="65:5" pos:end="65:5">s</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:13">height</name></name> <operator pos:start="65:15" pos:end="65:15">=</operator> <name pos:start="65:17" pos:end="65:22">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:36"><expr pos:start="67:5" pos:end="67:35"><name pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:5">s</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:17">frame_rate</name></name>      <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:35">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:41"><expr pos:start="69:5" pos:end="69:40"><name pos:start="69:5" pos:end="69:22"><name pos:start="69:5" pos:end="69:5">s</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:22">frame_rate_base</name></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:40">frame_rate_base</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:16">capabilities</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <literal type="number" pos:start="73:20" pos:end="73:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:9"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:9">fd</name></name> <operator pos:start="75:11" pos:end="75:11">=</operator> <call pos:start="75:13" pos:end="75:42"><name pos:start="75:13" pos:end="75:23">device_open</name><argument_list pos:start="75:24" pos:end="75:42">(<argument pos:start="75:25" pos:end="75:26"><expr pos:start="75:25" pos:end="75:26"><name pos:start="75:25" pos:end="75:26">s1</name></expr></argument>, <argument pos:start="75:29" pos:end="75:41"><expr pos:start="75:29" pos:end="75:41"><operator pos:start="75:29" pos:end="75:29">&amp;</operator><name pos:start="75:30" pos:end="75:41">capabilities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="85:5"><if pos:start="77:5" pos:end="85:5">if <condition pos:start="77:8" pos:end="77:18">(<expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:13">fd</name></name> <operator pos:start="77:15" pos:end="77:15">&lt;</operator> <literal type="number" pos:start="77:17" pos:end="77:17">0</literal></expr>)</condition> <block pos:start="77:20" pos:end="85:5">{<block_content pos:start="79:9" pos:end="83:28">

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><call pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:15">av_free</name><argument_list pos:start="79:16" pos:end="79:19">(<argument pos:start="79:17" pos:end="79:18"><expr pos:start="79:17" pos:end="79:18"><name pos:start="79:17" pos:end="79:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="83:9" pos:end="83:28">return <expr pos:start="83:16" pos:end="83:27"><call pos:start="83:16" pos:end="83:27"><name pos:start="83:16" pos:end="83:22">AVERROR</name><argument_list pos:start="83:23" pos:end="83:27">(<argument pos:start="83:24" pos:end="83:26"><expr pos:start="83:24" pos:end="83:26"><name pos:start="83:24" pos:end="83:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:75"><expr pos:start="87:5" pos:end="87:74"><call pos:start="87:5" pos:end="87:74"><name pos:start="87:5" pos:end="87:10">av_log</name><argument_list pos:start="87:11" pos:end="87:74">(<argument pos:start="87:12" pos:end="87:13"><expr pos:start="87:12" pos:end="87:13"><name pos:start="87:12" pos:end="87:13">s1</name></expr></argument>, <argument pos:start="87:16" pos:end="87:26"><expr pos:start="87:16" pos:end="87:26"><name pos:start="87:16" pos:end="87:26">AV_LOG_INFO</name></expr></argument>, <argument pos:start="87:29" pos:end="87:52"><expr pos:start="87:29" pos:end="87:52"><literal type="string" pos:start="87:29" pos:end="87:52">"[%d]Capabilities: %x\n"</literal></expr></argument>, <argument pos:start="87:55" pos:end="87:59"><expr pos:start="87:55" pos:end="87:59"><name pos:start="87:55" pos:end="87:59"><name pos:start="87:55" pos:end="87:55">s</name><operator pos:start="87:56" pos:end="87:57">-&gt;</operator><name pos:start="87:58" pos:end="87:59">fd</name></name></expr></argument>, <argument pos:start="87:62" pos:end="87:73"><expr pos:start="87:62" pos:end="87:73"><name pos:start="87:62" pos:end="87:73">capabilities</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:45"><expr pos:start="91:5" pos:end="91:44"><name pos:start="91:5" pos:end="91:18">desired_format</name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="91:44"><name pos:start="91:22" pos:end="91:31">fmt_ff2v4l</name><argument_list pos:start="91:32" pos:end="91:44">(<argument pos:start="91:33" pos:end="91:43"><expr pos:start="91:33" pos:end="91:43"><name pos:start="91:33" pos:end="91:43"><name pos:start="91:33" pos:end="91:34">ap</name><operator pos:start="91:35" pos:end="91:36">-&gt;</operator><name pos:start="91:37" pos:end="91:43">pix_fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="125:5"><if pos:start="93:5" pos:end="125:5">if <condition pos:start="93:8" pos:end="93:86">(<expr pos:start="93:9" pos:end="93:85"><name pos:start="93:9" pos:end="93:22">desired_format</name> <operator pos:start="93:24" pos:end="93:25">==</operator> <literal type="number" pos:start="93:27" pos:end="93:27">0</literal> <operator pos:start="93:29" pos:end="93:30">||</operator> <operator pos:start="93:32" pos:end="93:32">(</operator><call pos:start="93:33" pos:end="93:80"><name pos:start="93:33" pos:end="93:43">device_init</name><argument_list pos:start="93:44" pos:end="93:80">(<argument pos:start="93:45" pos:end="93:46"><expr pos:start="93:45" pos:end="93:46"><name pos:start="93:45" pos:end="93:46">s1</name></expr></argument>, <argument pos:start="93:49" pos:end="93:54"><expr pos:start="93:49" pos:end="93:54"><operator pos:start="93:49" pos:end="93:49">&amp;</operator><name pos:start="93:50" pos:end="93:54">width</name></expr></argument>, <argument pos:start="93:57" pos:end="93:63"><expr pos:start="93:57" pos:end="93:63"><operator pos:start="93:57" pos:end="93:57">&amp;</operator><name pos:start="93:58" pos:end="93:63">height</name></expr></argument>, <argument pos:start="93:66" pos:end="93:79"><expr pos:start="93:66" pos:end="93:79"><name pos:start="93:66" pos:end="93:79">desired_format</name></expr></argument>)</argument_list></call> <operator pos:start="93:82" pos:end="93:82">&lt;</operator> <literal type="number" pos:start="93:84" pos:end="93:84">0</literal><operator pos:start="93:85" pos:end="93:85">)</operator></expr>)</condition> <block pos:start="93:88" pos:end="125:5">{<block_content pos:start="95:9" pos:end="123:9">

        <decl_stmt pos:start="95:9" pos:end="95:20"><decl pos:start="95:9" pos:end="95:13"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:13">i</name></decl>, <decl pos:start="95:16" pos:end="95:19"><type ref="prev" pos:start="95:9" pos:end="95:11"/><name pos:start="95:16" pos:end="95:19">done</name></decl>;</decl_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:17"><expr pos:start="99:9" pos:end="99:16"><name pos:start="99:9" pos:end="99:12">done</name> <operator pos:start="99:14" pos:end="99:14">=</operator> <literal type="number" pos:start="99:16" pos:end="99:16">0</literal></expr>;</expr_stmt> <expr_stmt pos:start="99:19" pos:end="99:24"><expr pos:start="99:19" pos:end="99:23"><name pos:start="99:19" pos:end="99:19">i</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <literal type="number" pos:start="99:23" pos:end="99:23">0</literal></expr>;</expr_stmt>

        <while pos:start="101:9" pos:end="123:9">while <condition pos:start="101:15" pos:end="101:21">(<expr pos:start="101:16" pos:end="101:20"><operator pos:start="101:16" pos:end="101:16">!</operator><name pos:start="101:17" pos:end="101:20">done</name></expr>)</condition> <block pos:start="101:23" pos:end="123:9">{<block_content pos:start="103:13" pos:end="121:13">

            <expr_stmt pos:start="103:13" pos:end="103:62"><expr pos:start="103:13" pos:end="103:61"><name pos:start="103:13" pos:end="103:26">desired_format</name> <operator pos:start="103:28" pos:end="103:28">=</operator> <name pos:start="103:30" pos:end="103:52"><name pos:start="103:30" pos:end="103:49">fmt_conversion_table</name><index pos:start="103:50" pos:end="103:52">[<expr pos:start="103:51" pos:end="103:51"><name pos:start="103:51" pos:end="103:51">i</name></expr>]</index></name><operator pos:start="103:53" pos:end="103:53">.</operator><name pos:start="103:54" pos:end="103:61">v4l2_fmt</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="115:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:69">(<expr pos:start="105:17" pos:end="105:68"><call pos:start="105:17" pos:end="105:64"><name pos:start="105:17" pos:end="105:27">device_init</name><argument_list pos:start="105:28" pos:end="105:64">(<argument pos:start="105:29" pos:end="105:30"><expr pos:start="105:29" pos:end="105:30"><name pos:start="105:29" pos:end="105:30">s1</name></expr></argument>, <argument pos:start="105:33" pos:end="105:38"><expr pos:start="105:33" pos:end="105:38"><operator pos:start="105:33" pos:end="105:33">&amp;</operator><name pos:start="105:34" pos:end="105:38">width</name></expr></argument>, <argument pos:start="105:41" pos:end="105:47"><expr pos:start="105:41" pos:end="105:47"><operator pos:start="105:41" pos:end="105:41">&amp;</operator><name pos:start="105:42" pos:end="105:47">height</name></expr></argument>, <argument pos:start="105:50" pos:end="105:63"><expr pos:start="105:50" pos:end="105:63"><name pos:start="105:50" pos:end="105:63">desired_format</name></expr></argument>)</argument_list></call> <operator pos:start="105:66" pos:end="105:66">&lt;</operator> <literal type="number" pos:start="105:68" pos:end="105:68">0</literal></expr>)</condition> <block pos:start="105:71" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:20">

                <expr_stmt pos:start="107:17" pos:end="107:35"><expr pos:start="107:17" pos:end="107:34"><name pos:start="107:17" pos:end="107:30">desired_format</name> <operator pos:start="107:32" pos:end="107:32">=</operator> <literal type="number" pos:start="107:34" pos:end="107:34">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:20"><expr pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:17">i</name><operator pos:start="109:18" pos:end="109:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="111:15" pos:end="115:13">else <block pos:start="111:20" pos:end="115:13">{<block_content pos:start="113:16" pos:end="113:24">

               <expr_stmt pos:start="113:16" pos:end="113:24"><expr pos:start="113:16" pos:end="113:23"><name pos:start="113:16" pos:end="113:19">done</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="117:13" pos:end="121:13"><if pos:start="117:13" pos:end="121:13">if <condition pos:start="117:16" pos:end="117:75">(<expr pos:start="117:17" pos:end="117:74"><name pos:start="117:17" pos:end="117:17">i</name> <operator pos:start="117:19" pos:end="117:20">==</operator> <sizeof pos:start="117:22" pos:end="117:49">sizeof<argument_list pos:start="117:28" pos:end="117:49">(<argument pos:start="117:29" pos:end="117:48"><expr pos:start="117:29" pos:end="117:48"><name pos:start="117:29" pos:end="117:48">fmt_conversion_table</name></expr></argument>)</argument_list></sizeof> <operator pos:start="117:51" pos:end="117:51">/</operator> <sizeof pos:start="117:53" pos:end="117:74">sizeof<argument_list pos:start="117:59" pos:end="117:74">(<argument pos:start="117:60" pos:end="117:73"><expr pos:start="117:60" pos:end="117:73">struct <name pos:start="117:67" pos:end="117:73">fmt_map</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="117:77" pos:end="121:13">{<block_content pos:start="119:16" pos:end="119:24">

               <expr_stmt pos:start="119:16" pos:end="119:24"><expr pos:start="119:16" pos:end="119:23"><name pos:start="119:16" pos:end="119:19">done</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <literal type="number" pos:start="119:23" pos:end="119:23">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="139:5"><if pos:start="127:5" pos:end="139:5">if <condition pos:start="127:8" pos:end="127:28">(<expr pos:start="127:9" pos:end="127:27"><name pos:start="127:9" pos:end="127:22">desired_format</name> <operator pos:start="127:24" pos:end="127:25">==</operator> <literal type="number" pos:start="127:27" pos:end="127:27">0</literal></expr>)</condition> <block pos:start="127:30" pos:end="139:5">{<block_content pos:start="129:9" pos:end="137:28">

        <expr_stmt pos:start="129:9" pos:end="129:67"><expr pos:start="129:9" pos:end="129:66"><call pos:start="129:9" pos:end="129:66"><name pos:start="129:9" pos:end="129:14">av_log</name><argument_list pos:start="129:15" pos:end="129:66">(<argument pos:start="129:16" pos:end="129:17"><expr pos:start="129:16" pos:end="129:17"><name pos:start="129:16" pos:end="129:17">s1</name></expr></argument>, <argument pos:start="129:20" pos:end="129:31"><expr pos:start="129:20" pos:end="129:31"><name pos:start="129:20" pos:end="129:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="129:34" pos:end="129:65"><expr pos:start="129:34" pos:end="129:65"><literal type="string" pos:start="129:34" pos:end="129:65">"Cannot find a proper format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:21"><expr pos:start="131:9" pos:end="131:20"><call pos:start="131:9" pos:end="131:20"><name pos:start="131:9" pos:end="131:13">close</name><argument_list pos:start="131:14" pos:end="131:20">(<argument pos:start="131:15" pos:end="131:19"><expr pos:start="131:15" pos:end="131:19"><name pos:start="131:15" pos:end="131:19"><name pos:start="131:15" pos:end="131:15">s</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><call pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:15">av_free</name><argument_list pos:start="133:16" pos:end="133:19">(<argument pos:start="133:17" pos:end="133:18"><expr pos:start="133:17" pos:end="133:18"><name pos:start="133:17" pos:end="133:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="137:9" pos:end="137:28">return <expr pos:start="137:16" pos:end="137:27"><call pos:start="137:16" pos:end="137:27"><name pos:start="137:16" pos:end="137:22">AVERROR</name><argument_list pos:start="137:23" pos:end="137:27">(<argument pos:start="137:24" pos:end="137:26"><expr pos:start="137:24" pos:end="137:26"><name pos:start="137:24" pos:end="137:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:37"><expr pos:start="141:5" pos:end="141:36"><name pos:start="141:5" pos:end="141:19"><name pos:start="141:5" pos:end="141:5">s</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:19">frame_format</name></name> <operator pos:start="141:21" pos:end="141:21">=</operator> <name pos:start="141:23" pos:end="141:36">desired_format</name></expr>;</expr_stmt>



    <if_stmt pos:start="145:5" pos:end="147:28"><if pos:start="145:5" pos:end="147:28">if<condition pos:start="145:7" pos:end="145:43">( <expr pos:start="145:9" pos:end="145:41"><call pos:start="145:9" pos:end="145:37"><name pos:start="145:9" pos:end="145:27">v4l2_set_parameters</name><argument_list pos:start="145:28" pos:end="145:37">( <argument pos:start="145:30" pos:end="145:31"><expr pos:start="145:30" pos:end="145:31"><name pos:start="145:30" pos:end="145:31">s1</name></expr></argument>, <argument pos:start="145:34" pos:end="145:35"><expr pos:start="145:34" pos:end="145:35"><name pos:start="145:34" pos:end="145:35">ap</name></expr></argument> )</argument_list></call> <operator pos:start="145:39" pos:end="145:39">&lt;</operator> <literal type="number" pos:start="145:41" pos:end="145:41">0</literal></expr> )</condition><block type="pseudo" pos:start="147:9" pos:end="147:28"><block_content pos:start="147:9" pos:end="147:28">

        <return pos:start="147:9" pos:end="147:28">return <expr pos:start="147:16" pos:end="147:27"><call pos:start="147:16" pos:end="147:27"><name pos:start="147:16" pos:end="147:22">AVERROR</name><argument_list pos:start="147:23" pos:end="147:27">(<argument pos:start="147:24" pos:end="147:26"><expr pos:start="147:24" pos:end="147:26"><name pos:start="147:24" pos:end="147:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:52"><expr pos:start="151:5" pos:end="151:51"><name pos:start="151:5" pos:end="151:22"><name pos:start="151:5" pos:end="151:6">st</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:13">codec</name><operator pos:start="151:14" pos:end="151:15">-&gt;</operator><name pos:start="151:16" pos:end="151:22">pix_fmt</name></name> <operator pos:start="151:24" pos:end="151:24">=</operator> <call pos:start="151:26" pos:end="151:51"><name pos:start="151:26" pos:end="151:35">fmt_v4l2ff</name><argument_list pos:start="151:36" pos:end="151:51">(<argument pos:start="151:37" pos:end="151:50"><expr pos:start="151:37" pos:end="151:50"><name pos:start="151:37" pos:end="151:50">desired_format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:74"><expr pos:start="153:5" pos:end="153:73"><name pos:start="153:5" pos:end="153:17"><name pos:start="153:5" pos:end="153:5">s</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:17">frame_size</name></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <call pos:start="153:21" pos:end="153:73"><name pos:start="153:21" pos:end="153:38">avpicture_get_size</name><argument_list pos:start="153:39" pos:end="153:73">(<argument pos:start="153:40" pos:end="153:57"><expr pos:start="153:40" pos:end="153:57"><name pos:start="153:40" pos:end="153:57"><name pos:start="153:40" pos:end="153:41">st</name><operator pos:start="153:42" pos:end="153:43">-&gt;</operator><name pos:start="153:44" pos:end="153:48">codec</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:57">pix_fmt</name></name></expr></argument>, <argument pos:start="153:60" pos:end="153:64"><expr pos:start="153:60" pos:end="153:64"><name pos:start="153:60" pos:end="153:64">width</name></expr></argument>, <argument pos:start="153:67" pos:end="153:72"><expr pos:start="153:67" pos:end="153:72"><name pos:start="153:67" pos:end="153:72">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="173:5"><if pos:start="155:5" pos:end="167:5">if <condition pos:start="155:8" pos:end="155:42">(<expr pos:start="155:9" pos:end="155:41"><name pos:start="155:9" pos:end="155:20">capabilities</name> <operator pos:start="155:22" pos:end="155:22">&amp;</operator> <name pos:start="155:24" pos:end="155:41">V4L2_CAP_STREAMING</name></expr>)</condition> <block pos:start="155:44" pos:end="167:5">{<block_content pos:start="157:9" pos:end="165:9">

        <expr_stmt pos:start="157:9" pos:end="157:31"><expr pos:start="157:9" pos:end="157:30"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:20">io_method</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:30">io_mmap</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:28"><expr pos:start="159:9" pos:end="159:27"><name pos:start="159:9" pos:end="159:11">res</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <call pos:start="159:15" pos:end="159:27"><name pos:start="159:15" pos:end="159:23">mmap_init</name><argument_list pos:start="159:24" pos:end="159:27">(<argument pos:start="159:25" pos:end="159:26"><expr pos:start="159:25" pos:end="159:26"><name pos:start="159:25" pos:end="159:26">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="161:9" pos:end="165:9"><if pos:start="161:9" pos:end="165:9">if <condition pos:start="161:12" pos:end="161:21">(<expr pos:start="161:13" pos:end="161:20"><name pos:start="161:13" pos:end="161:15">res</name> <operator pos:start="161:17" pos:end="161:18">==</operator> <literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>)</condition> <block pos:start="161:23" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:33">

            <expr_stmt pos:start="163:13" pos:end="163:33"><expr pos:start="163:13" pos:end="163:32"><name pos:start="163:13" pos:end="163:15">res</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <call pos:start="163:19" pos:end="163:32"><name pos:start="163:19" pos:end="163:28">mmap_start</name><argument_list pos:start="163:29" pos:end="163:32">(<argument pos:start="163:30" pos:end="163:31"><expr pos:start="163:30" pos:end="163:31"><name pos:start="163:30" pos:end="163:31">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="173:5">else <block pos:start="167:12" pos:end="173:5">{<block_content pos:start="169:9" pos:end="171:28">

        <expr_stmt pos:start="169:9" pos:end="169:31"><expr pos:start="169:9" pos:end="169:30"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:20">io_method</name></name> <operator pos:start="169:22" pos:end="169:22">=</operator> <name pos:start="169:24" pos:end="169:30">io_read</name></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:11">res</name> <operator pos:start="171:13" pos:end="171:13">=</operator> <call pos:start="171:15" pos:end="171:27"><name pos:start="171:15" pos:end="171:23">read_init</name><argument_list pos:start="171:24" pos:end="171:27">(<argument pos:start="171:25" pos:end="171:26"><expr pos:start="171:25" pos:end="171:26"><name pos:start="171:25" pos:end="171:26">s1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="175:5" pos:end="185:5"><if pos:start="175:5" pos:end="185:5">if <condition pos:start="175:8" pos:end="175:16">(<expr pos:start="175:9" pos:end="175:15"><name pos:start="175:9" pos:end="175:11">res</name> <operator pos:start="175:13" pos:end="175:13">&lt;</operator> <literal type="number" pos:start="175:15" pos:end="175:15">0</literal></expr>)</condition> <block pos:start="175:18" pos:end="185:5">{<block_content pos:start="177:9" pos:end="183:28">

        <expr_stmt pos:start="177:9" pos:end="177:21"><expr pos:start="177:9" pos:end="177:20"><call pos:start="177:9" pos:end="177:20"><name pos:start="177:9" pos:end="177:13">close</name><argument_list pos:start="177:14" pos:end="177:20">(<argument pos:start="177:15" pos:end="177:19"><expr pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:19"><name pos:start="177:15" pos:end="177:15">s</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:19">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:20"><expr pos:start="179:9" pos:end="179:19"><call pos:start="179:9" pos:end="179:19"><name pos:start="179:9" pos:end="179:15">av_free</name><argument_list pos:start="179:16" pos:end="179:19">(<argument pos:start="179:17" pos:end="179:18"><expr pos:start="179:17" pos:end="179:18"><name pos:start="179:17" pos:end="179:18">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="183:9" pos:end="183:28">return <expr pos:start="183:16" pos:end="183:27"><call pos:start="183:16" pos:end="183:27"><name pos:start="183:16" pos:end="183:22">AVERROR</name><argument_list pos:start="183:23" pos:end="183:27">(<argument pos:start="183:24" pos:end="183:26"><expr pos:start="183:24" pos:end="183:26"><name pos:start="183:24" pos:end="183:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:44"><expr pos:start="187:5" pos:end="187:43"><name pos:start="187:5" pos:end="187:22"><name pos:start="187:5" pos:end="187:5">s</name><operator pos:start="187:6" pos:end="187:7">-&gt;</operator><name pos:start="187:8" pos:end="187:22">top_field_first</name></name> <operator pos:start="187:24" pos:end="187:24">=</operator> <call pos:start="187:26" pos:end="187:43"><name pos:start="187:26" pos:end="187:36">first_field</name><argument_list pos:start="187:37" pos:end="187:43">(<argument pos:start="187:38" pos:end="187:42"><expr pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:42"><name pos:start="187:38" pos:end="187:38">s</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:42">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:45"><expr pos:start="191:5" pos:end="191:44"><name pos:start="191:5" pos:end="191:25"><name pos:start="191:5" pos:end="191:6">st</name><operator pos:start="191:7" pos:end="191:8">-&gt;</operator><name pos:start="191:9" pos:end="191:13">codec</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:25">codec_type</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:44">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:44"><expr pos:start="193:5" pos:end="193:43"><name pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:6">st</name><operator pos:start="193:7" pos:end="193:8">-&gt;</operator><name pos:start="193:9" pos:end="193:13">codec</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:23">codec_id</name></name> <operator pos:start="193:25" pos:end="193:25">=</operator> <name pos:start="193:27" pos:end="193:43">CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:29"><expr pos:start="195:5" pos:end="195:28"><name pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:6">st</name><operator pos:start="195:7" pos:end="195:8">-&gt;</operator><name pos:start="195:9" pos:end="195:13">codec</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:20">width</name></name> <operator pos:start="195:22" pos:end="195:22">=</operator> <name pos:start="195:24" pos:end="195:28">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:31"><expr pos:start="197:5" pos:end="197:30"><name pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:6">st</name><operator pos:start="197:7" pos:end="197:8">-&gt;</operator><name pos:start="197:9" pos:end="197:13">codec</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:21">height</name></name> <operator pos:start="197:23" pos:end="197:23">=</operator> <name pos:start="197:25" pos:end="197:30">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:42"><expr pos:start="199:5" pos:end="199:41"><name pos:start="199:5" pos:end="199:28"><name pos:start="199:5" pos:end="199:6">st</name><operator pos:start="199:7" pos:end="199:8">-&gt;</operator><name pos:start="199:9" pos:end="199:13">codec</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:24">time_base</name><operator pos:start="199:25" pos:end="199:25">.</operator><name pos:start="199:26" pos:end="199:28">den</name></name> <operator pos:start="199:30" pos:end="199:30">=</operator> <name pos:start="199:32" pos:end="199:41">frame_rate</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:47"><expr pos:start="201:5" pos:end="201:46"><name pos:start="201:5" pos:end="201:28"><name pos:start="201:5" pos:end="201:6">st</name><operator pos:start="201:7" pos:end="201:8">-&gt;</operator><name pos:start="201:9" pos:end="201:13">codec</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:24">time_base</name><operator pos:start="201:25" pos:end="201:25">.</operator><name pos:start="201:26" pos:end="201:28">num</name></name> <operator pos:start="201:30" pos:end="201:30">=</operator> <name pos:start="201:32" pos:end="201:46">frame_rate_base</name></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:77"><expr pos:start="203:5" pos:end="203:76"><name pos:start="203:5" pos:end="203:23"><name pos:start="203:5" pos:end="203:6">st</name><operator pos:start="203:7" pos:end="203:8">-&gt;</operator><name pos:start="203:9" pos:end="203:13">codec</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:23">bit_rate</name></name> <operator pos:start="203:25" pos:end="203:25">=</operator> <name pos:start="203:27" pos:end="203:39"><name pos:start="203:27" pos:end="203:27">s</name><operator pos:start="203:28" pos:end="203:29">-&gt;</operator><name pos:start="203:30" pos:end="203:39">frame_size</name></name> <operator pos:start="203:41" pos:end="203:41">*</operator> <literal type="number" pos:start="203:43" pos:end="203:43">1</literal><operator pos:start="203:44" pos:end="203:44">/</operator><call pos:start="203:45" pos:end="203:72"><name pos:start="203:45" pos:end="203:50">av_q2d</name><argument_list pos:start="203:51" pos:end="203:72">(<argument pos:start="203:52" pos:end="203:71"><expr pos:start="203:52" pos:end="203:71"><name pos:start="203:52" pos:end="203:71"><name pos:start="203:52" pos:end="203:53">st</name><operator pos:start="203:54" pos:end="203:55">-&gt;</operator><name pos:start="203:56" pos:end="203:60">codec</name><operator pos:start="203:61" pos:end="203:62">-&gt;</operator><name pos:start="203:63" pos:end="203:71">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="203:74" pos:end="203:74">*</operator> <literal type="number" pos:start="203:76" pos:end="203:76">8</literal></expr>;</expr_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
