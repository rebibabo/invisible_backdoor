<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/9763.c" pos:tabs="8"><function pos:start="1:1" pos:end="317:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_frame_common</name><parameter_list pos:start="1:31" pos:end="3:59">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:67">PNGDecContext</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:70">s</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:41"><decl pos:start="3:32" pos:end="3:41"><type pos:start="3:32" pos:end="3:41"><name pos:start="3:32" pos:end="3:38">AVFrame</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:41">p</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:58"><decl pos:start="3:44" pos:end="3:58"><type pos:start="3:44" pos:end="3:58"><name pos:start="3:44" pos:end="3:51">AVPacket</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:58">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="317:1">{<block_content pos:start="7:5" pos:end="315:15">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">AVDictionary</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:26">metadata</name>  <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">tag</name></decl>, <decl pos:start="9:19" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:24">length</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:23">decode_next_dat</name> <init pos:start="11:25" pos:end="11:27">= <expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="207:5">for <control pos:start="17:9" pos:end="17:12">(<init pos:start="17:10" pos:end="17:10">;</init><condition pos:start="17:11" pos:end="17:11">;</condition><incr/>)</control> <block pos:start="17:14" pos:end="207:5">{<block_content pos:start="19:9" pos:end="205:9">

        <expr_stmt pos:start="19:9" pos:end="19:52"><expr pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:14">length</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:51"><name pos:start="19:18" pos:end="19:43">bytestream2_get_bytes_left</name><argument_list pos:start="19:44" pos:end="19:51">(<argument pos:start="19:45" pos:end="19:50"><expr pos:start="19:45" pos:end="19:50"><operator pos:start="19:45" pos:end="19:45">&amp;</operator><name pos:start="19:46" pos:end="19:50"><name pos:start="19:46" pos:end="19:46">s</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="47:9"><if pos:start="21:9" pos:end="47:9">if <condition pos:start="21:12" pos:end="21:24">(<expr pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:18">length</name> <operator pos:start="21:20" pos:end="21:21">&lt;=</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>)</condition> <block pos:start="21:26" pos:end="47:9">{<block_content pos:start="23:13" pos:end="45:22">

            <if_stmt pos:start="23:13" pos:end="33:13"><if pos:start="23:13" pos:end="33:13">if <condition pos:start="23:16" pos:end="23:90">(<expr pos:start="23:17" pos:end="23:89"><name pos:start="23:17" pos:end="23:35">CONFIG_APNG_DECODER</name> <operator pos:start="23:37" pos:end="23:38">&amp;&amp;</operator> <name pos:start="23:40" pos:end="23:54"><name pos:start="23:40" pos:end="23:44">avctx</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:54">codec_id</name></name> <operator pos:start="23:56" pos:end="23:57">==</operator> <name pos:start="23:59" pos:end="23:74">AV_CODEC_ID_APNG</name> <operator pos:start="23:76" pos:end="23:77">&amp;&amp;</operator> <name pos:start="23:79" pos:end="23:84">length</name> <operator pos:start="23:86" pos:end="23:87">==</operator> <literal type="number" pos:start="23:89" pos:end="23:89">0</literal></expr>)</condition> <block pos:start="23:92" pos:end="33:13">{<block_content pos:start="25:17" pos:end="31:35">

                <if_stmt pos:start="25:17" pos:end="31:35"><if pos:start="25:17" pos:end="27:29">if <condition pos:start="25:20" pos:end="25:43">(<expr pos:start="25:21" pos:end="25:42"><operator pos:start="25:21" pos:end="25:21">!</operator><operator pos:start="25:22" pos:end="25:22">(</operator><name pos:start="25:23" pos:end="25:30"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:30">state</name></name> <operator pos:start="25:32" pos:end="25:32">&amp;</operator> <name pos:start="25:34" pos:end="25:41">PNG_IDAT</name><operator pos:start="25:42" pos:end="25:42">)</operator></expr>)</condition><block type="pseudo" pos:start="27:21" pos:end="27:29"><block_content pos:start="27:21" pos:end="27:29">

                    <return pos:start="27:21" pos:end="27:29">return <expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">0</literal></expr>;</return></block_content></block></if>

                <else pos:start="29:17" pos:end="31:35">else<block type="pseudo" pos:start="31:21" pos:end="31:35"><block_content pos:start="31:21" pos:end="31:35">

                    <goto pos:start="31:21" pos:end="31:35">goto <name pos:start="31:26" pos:end="31:34">exit_loop</name>;</goto></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:67"><expr pos:start="35:13" pos:end="35:66"><call pos:start="35:13" pos:end="35:66"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="35:66">(<argument pos:start="35:20" pos:end="35:24"><expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:24">avctx</name></expr></argument>, <argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="35:41" pos:end="35:57"><expr pos:start="35:41" pos:end="35:57"><literal type="string" pos:start="35:41" pos:end="35:57">"%d bytes left\n"</literal></expr></argument>, <argument pos:start="35:60" pos:end="35:65"><expr pos:start="35:60" pos:end="35:65"><name pos:start="35:60" pos:end="35:65">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="41:31"><if pos:start="37:13" pos:end="41:31">if <condition pos:start="37:16" pos:end="39:72">(   <expr pos:start="37:20" pos:end="39:71"><name pos:start="37:20" pos:end="37:27"><name pos:start="37:20" pos:end="37:20">s</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:27">state</name></name> <operator pos:start="37:29" pos:end="37:29">&amp;</operator> <name pos:start="37:31" pos:end="37:42">PNG_ALLIMAGE</name>

                <operator pos:start="39:17" pos:end="39:18">&amp;&amp;</operator> <name pos:start="39:20" pos:end="39:47"><name pos:start="39:20" pos:end="39:24">avctx</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:47">strict_std_compliance</name></name> <operator pos:start="39:49" pos:end="39:50">&lt;=</operator> <name pos:start="39:52" pos:end="39:71">FF_COMPLIANCE_NORMAL</name></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:31"><block_content pos:start="41:17" pos:end="41:31">

                <goto pos:start="41:17" pos:end="41:31">goto <name pos:start="41:22" pos:end="41:30">exit_loop</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:15">ret</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="45:13" pos:end="45:22">goto <name pos:start="45:18" pos:end="45:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:14">length</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <call pos:start="51:18" pos:end="51:45"><name pos:start="51:18" pos:end="51:37">bytestream2_get_be32</name><argument_list pos:start="51:38" pos:end="51:45">(<argument pos:start="51:39" pos:end="51:44"><expr pos:start="51:39" pos:end="51:44"><operator pos:start="51:39" pos:end="51:39">&amp;</operator><name pos:start="51:40" pos:end="51:44"><name pos:start="51:40" pos:end="51:40">s</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="61:9"><if pos:start="53:9" pos:end="61:9">if <condition pos:start="53:12" pos:end="53:79">(<expr pos:start="53:13" pos:end="53:78"><name pos:start="53:13" pos:end="53:18">length</name> <operator pos:start="53:20" pos:end="53:20">&gt;</operator> <literal type="number" pos:start="53:22" pos:end="53:31">0x7fffffff</literal> <operator pos:start="53:33" pos:end="53:34">||</operator> <name pos:start="53:36" pos:end="53:41">length</name> <operator pos:start="53:43" pos:end="53:43">&gt;</operator> <call pos:start="53:45" pos:end="53:78"><name pos:start="53:45" pos:end="53:70">bytestream2_get_bytes_left</name><argument_list pos:start="53:71" pos:end="53:78">(<argument pos:start="53:72" pos:end="53:77"><expr pos:start="53:72" pos:end="53:77"><operator pos:start="53:72" pos:end="53:72">&amp;</operator><name pos:start="53:73" pos:end="53:77"><name pos:start="53:73" pos:end="53:73">s</name><operator pos:start="53:74" pos:end="53:75">-&gt;</operator><name pos:start="53:76" pos:end="53:77">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:81" pos:end="61:9">{<block_content pos:start="55:13" pos:end="59:22">

            <expr_stmt pos:start="55:13" pos:end="55:59"><expr pos:start="55:13" pos:end="55:58"><call pos:start="55:13" pos:end="55:58"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:58">(<argument pos:start="55:20" pos:end="55:24"><expr pos:start="55:20" pos:end="55:24"><name pos:start="55:20" pos:end="55:24">avctx</name></expr></argument>, <argument pos:start="55:27" pos:end="55:38"><expr pos:start="55:27" pos:end="55:38"><name pos:start="55:27" pos:end="55:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:41" pos:end="55:57"><expr pos:start="55:41" pos:end="55:57"><literal type="string" pos:start="55:41" pos:end="55:57">"chunk too big\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:37">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

            <goto pos:start="59:13" pos:end="59:22">goto <name pos:start="59:18" pos:end="59:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:43"><expr pos:start="63:9" pos:end="63:42"><name pos:start="63:9" pos:end="63:11">tag</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <call pos:start="63:15" pos:end="63:42"><name pos:start="63:15" pos:end="63:34">bytestream2_get_le32</name><argument_list pos:start="63:35" pos:end="63:42">(<argument pos:start="63:36" pos:end="63:41"><expr pos:start="63:36" pos:end="63:41"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:41"><name pos:start="63:37" pos:end="63:37">s</name><operator pos:start="63:38" pos:end="63:39">-&gt;</operator><name pos:start="63:40" pos:end="63:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="75:46"><if pos:start="65:9" pos:end="75:46">if <condition pos:start="65:12" pos:end="65:46">(<expr pos:start="65:13" pos:end="65:45"><name pos:start="65:13" pos:end="65:24"><name pos:start="65:13" pos:end="65:17">avctx</name><operator pos:start="65:18" pos:end="65:19">-&gt;</operator><name pos:start="65:20" pos:end="65:24">debug</name></name> <operator pos:start="65:26" pos:end="65:26">&amp;</operator> <name pos:start="65:28" pos:end="65:45">FF_DEBUG_STARTCODE</name></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="75:46"><block_content pos:start="67:13" pos:end="75:46">

            <expr_stmt pos:start="67:13" pos:end="75:46"><expr pos:start="67:13" pos:end="75:45"><call pos:start="67:13" pos:end="75:45"><name pos:start="67:13" pos:end="67:18">av_log</name><argument_list pos:start="67:19" pos:end="75:45">(<argument pos:start="67:20" pos:end="67:24"><expr pos:start="67:20" pos:end="67:24"><name pos:start="67:20" pos:end="67:24">avctx</name></expr></argument>, <argument pos:start="67:27" pos:end="67:38"><expr pos:start="67:27" pos:end="67:38"><name pos:start="67:27" pos:end="67:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="67:41" pos:end="67:71"><expr pos:start="67:41" pos:end="67:71"><literal type="string" pos:start="67:41" pos:end="67:71">"png: tag=%c%c%c%c length=%u\n"</literal></expr></argument>,

                <argument pos:start="69:17" pos:end="69:28"><expr pos:start="69:17" pos:end="69:28"><operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:20">tag</name> <operator pos:start="69:22" pos:end="69:22">&amp;</operator> <literal type="number" pos:start="69:24" pos:end="69:27">0xff</literal><operator pos:start="69:28" pos:end="69:28">)</operator></expr></argument>,

                <argument pos:start="71:17" pos:end="71:35"><expr pos:start="71:17" pos:end="71:35"><operator pos:start="71:17" pos:end="71:17">(</operator><operator pos:start="71:18" pos:end="71:18">(</operator><name pos:start="71:19" pos:end="71:21">tag</name> <operator pos:start="71:23" pos:end="71:24">&gt;&gt;</operator> <literal type="number" pos:start="71:26" pos:end="71:26">8</literal><operator pos:start="71:27" pos:end="71:27">)</operator> <operator pos:start="71:29" pos:end="71:29">&amp;</operator> <literal type="number" pos:start="71:31" pos:end="71:34">0xff</literal><operator pos:start="71:35" pos:end="71:35">)</operator></expr></argument>,

                <argument pos:start="73:17" pos:end="73:36"><expr pos:start="73:17" pos:end="73:36"><operator pos:start="73:17" pos:end="73:17">(</operator><operator pos:start="73:18" pos:end="73:18">(</operator><name pos:start="73:19" pos:end="73:21">tag</name> <operator pos:start="73:23" pos:end="73:24">&gt;&gt;</operator> <literal type="number" pos:start="73:26" pos:end="73:27">16</literal><operator pos:start="73:28" pos:end="73:28">)</operator> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <literal type="number" pos:start="73:32" pos:end="73:35">0xff</literal><operator pos:start="73:36" pos:end="73:36">)</operator></expr></argument>,

                <argument pos:start="75:17" pos:end="75:36"><expr pos:start="75:17" pos:end="75:36"><operator pos:start="75:17" pos:end="75:17">(</operator><operator pos:start="75:18" pos:end="75:18">(</operator><name pos:start="75:19" pos:end="75:21">tag</name> <operator pos:start="75:23" pos:end="75:24">&gt;&gt;</operator> <literal type="number" pos:start="75:26" pos:end="75:27">24</literal><operator pos:start="75:28" pos:end="75:28">)</operator> <operator pos:start="75:30" pos:end="75:30">&amp;</operator> <literal type="number" pos:start="75:32" pos:end="75:35">0xff</literal><operator pos:start="75:36" pos:end="75:36">)</operator></expr></argument>, <argument pos:start="75:39" pos:end="75:44"><expr pos:start="75:39" pos:end="75:44"><name pos:start="75:39" pos:end="75:44">length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <switch pos:start="77:9" pos:end="205:9">switch <condition pos:start="77:16" pos:end="77:20">(<expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">tag</name></expr>)</condition> <block pos:start="77:22" pos:end="205:9">{<block_content pos:start="79:9" pos:end="203:18">

        <case pos:start="79:9" pos:end="79:39">case <expr pos:start="79:14" pos:end="79:38"><call pos:start="79:14" pos:end="79:38"><name pos:start="79:14" pos:end="79:18">MKTAG</name><argument_list pos:start="79:19" pos:end="79:38">(<argument pos:start="79:20" pos:end="79:22"><expr pos:start="79:20" pos:end="79:22"><literal type="char" pos:start="79:20" pos:end="79:22">'I'</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><literal type="char" pos:start="79:25" pos:end="79:27">'H'</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><literal type="char" pos:start="79:30" pos:end="79:32">'D'</literal></expr></argument>, <argument pos:start="79:35" pos:end="79:37"><expr pos:start="79:35" pos:end="79:37"><literal type="char" pos:start="79:35" pos:end="79:37">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="81:13" pos:end="83:26"><if pos:start="81:13" pos:end="83:26">if <condition pos:start="81:16" pos:end="81:64">(<expr pos:start="81:17" pos:end="81:63"><operator pos:start="81:17" pos:end="81:17">(</operator><name pos:start="81:18" pos:end="81:20">ret</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <call pos:start="81:24" pos:end="81:58"><name pos:start="81:24" pos:end="81:40">decode_ihdr_chunk</name><argument_list pos:start="81:41" pos:end="81:58">(<argument pos:start="81:42" pos:end="81:46"><expr pos:start="81:42" pos:end="81:46"><name pos:start="81:42" pos:end="81:46">avctx</name></expr></argument>, <argument pos:start="81:49" pos:end="81:49"><expr pos:start="81:49" pos:end="81:49"><name pos:start="81:49" pos:end="81:49">s</name></expr></argument>, <argument pos:start="81:52" pos:end="81:57"><expr pos:start="81:52" pos:end="81:57"><name pos:start="81:52" pos:end="81:57">length</name></expr></argument>)</argument_list></call><operator pos:start="81:59" pos:end="81:59">)</operator> <operator pos:start="81:61" pos:end="81:61">&lt;</operator> <literal type="number" pos:start="81:63" pos:end="81:63">0</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:26"><block_content pos:start="83:17" pos:end="83:26">

                <goto pos:start="83:17" pos:end="83:26">goto <name pos:start="83:22" pos:end="83:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="85:13" pos:end="85:18">break;</break>

        <case pos:start="87:9" pos:end="87:39">case <expr pos:start="87:14" pos:end="87:38"><call pos:start="87:14" pos:end="87:38"><name pos:start="87:14" pos:end="87:18">MKTAG</name><argument_list pos:start="87:19" pos:end="87:38">(<argument pos:start="87:20" pos:end="87:22"><expr pos:start="87:20" pos:end="87:22"><literal type="char" pos:start="87:20" pos:end="87:22">'p'</literal></expr></argument>, <argument pos:start="87:25" pos:end="87:27"><expr pos:start="87:25" pos:end="87:27"><literal type="char" pos:start="87:25" pos:end="87:27">'H'</literal></expr></argument>, <argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><literal type="char" pos:start="87:30" pos:end="87:32">'Y'</literal></expr></argument>, <argument pos:start="87:35" pos:end="87:37"><expr pos:start="87:35" pos:end="87:37"><literal type="char" pos:start="87:35" pos:end="87:37">'s'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="89:13" pos:end="91:26"><if pos:start="89:13" pos:end="91:26">if <condition pos:start="89:16" pos:end="89:56">(<expr pos:start="89:17" pos:end="89:55"><operator pos:start="89:17" pos:end="89:17">(</operator><name pos:start="89:18" pos:end="89:20">ret</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <call pos:start="89:24" pos:end="89:50"><name pos:start="89:24" pos:end="89:40">decode_phys_chunk</name><argument_list pos:start="89:41" pos:end="89:50">(<argument pos:start="89:42" pos:end="89:46"><expr pos:start="89:42" pos:end="89:46"><name pos:start="89:42" pos:end="89:46">avctx</name></expr></argument>, <argument pos:start="89:49" pos:end="89:49"><expr pos:start="89:49" pos:end="89:49"><name pos:start="89:49" pos:end="89:49">s</name></expr></argument>)</argument_list></call><operator pos:start="89:51" pos:end="89:51">)</operator> <operator pos:start="89:53" pos:end="89:53">&lt;</operator> <literal type="number" pos:start="89:55" pos:end="89:55">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:26"><block_content pos:start="91:17" pos:end="91:26">

                <goto pos:start="91:17" pos:end="91:26">goto <name pos:start="91:22" pos:end="91:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        <case pos:start="95:9" pos:end="95:39">case <expr pos:start="95:14" pos:end="95:38"><call pos:start="95:14" pos:end="95:38"><name pos:start="95:14" pos:end="95:18">MKTAG</name><argument_list pos:start="95:19" pos:end="95:38">(<argument pos:start="95:20" pos:end="95:22"><expr pos:start="95:20" pos:end="95:22"><literal type="char" pos:start="95:20" pos:end="95:22">'f'</literal></expr></argument>, <argument pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><literal type="char" pos:start="95:25" pos:end="95:27">'c'</literal></expr></argument>, <argument pos:start="95:30" pos:end="95:32"><expr pos:start="95:30" pos:end="95:32"><literal type="char" pos:start="95:30" pos:end="95:32">'T'</literal></expr></argument>, <argument pos:start="95:35" pos:end="95:37"><expr pos:start="95:35" pos:end="95:37"><literal type="char" pos:start="95:35" pos:end="95:37">'L'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="97:13" pos:end="99:30"><if pos:start="97:13" pos:end="99:30">if <condition pos:start="97:16" pos:end="97:76">(<expr pos:start="97:17" pos:end="97:75"><operator pos:start="97:17" pos:end="97:17">!</operator><name pos:start="97:18" pos:end="97:36">CONFIG_APNG_DECODER</name> <operator pos:start="97:38" pos:end="97:39">||</operator> <name pos:start="97:41" pos:end="97:55"><name pos:start="97:41" pos:end="97:45">avctx</name><operator pos:start="97:46" pos:end="97:47">-&gt;</operator><name pos:start="97:48" pos:end="97:55">codec_id</name></name> <operator pos:start="97:57" pos:end="97:58">!=</operator> <name pos:start="97:60" pos:end="97:75">AV_CODEC_ID_APNG</name></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:30"><block_content pos:start="99:17" pos:end="99:30">

                <goto pos:start="99:17" pos:end="99:30">goto <name pos:start="99:22" pos:end="99:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="101:13" pos:end="103:26"><if pos:start="101:13" pos:end="103:26">if <condition pos:start="101:16" pos:end="101:64">(<expr pos:start="101:17" pos:end="101:63"><operator pos:start="101:17" pos:end="101:17">(</operator><name pos:start="101:18" pos:end="101:20">ret</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:58"><name pos:start="101:24" pos:end="101:40">decode_fctl_chunk</name><argument_list pos:start="101:41" pos:end="101:58">(<argument pos:start="101:42" pos:end="101:46"><expr pos:start="101:42" pos:end="101:46"><name pos:start="101:42" pos:end="101:46">avctx</name></expr></argument>, <argument pos:start="101:49" pos:end="101:49"><expr pos:start="101:49" pos:end="101:49"><name pos:start="101:49" pos:end="101:49">s</name></expr></argument>, <argument pos:start="101:52" pos:end="101:57"><expr pos:start="101:52" pos:end="101:57"><name pos:start="101:52" pos:end="101:57">length</name></expr></argument>)</argument_list></call><operator pos:start="101:59" pos:end="101:59">)</operator> <operator pos:start="101:61" pos:end="101:61">&lt;</operator> <literal type="number" pos:start="101:63" pos:end="101:63">0</literal></expr>)</condition><block type="pseudo" pos:start="103:17" pos:end="103:26"><block_content pos:start="103:17" pos:end="103:26">

                <goto pos:start="103:17" pos:end="103:26">goto <name pos:start="103:22" pos:end="103:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:32"><expr pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:27">decode_next_dat</name> <operator pos:start="105:29" pos:end="105:29">=</operator> <literal type="number" pos:start="105:31" pos:end="105:31">1</literal></expr>;</expr_stmt>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:39">case <expr pos:start="109:14" pos:end="109:38"><call pos:start="109:14" pos:end="109:38"><name pos:start="109:14" pos:end="109:18">MKTAG</name><argument_list pos:start="109:19" pos:end="109:38">(<argument pos:start="109:20" pos:end="109:22"><expr pos:start="109:20" pos:end="109:22"><literal type="char" pos:start="109:20" pos:end="109:22">'f'</literal></expr></argument>, <argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><literal type="char" pos:start="109:25" pos:end="109:27">'d'</literal></expr></argument>, <argument pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:32"><literal type="char" pos:start="109:30" pos:end="109:32">'A'</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><literal type="char" pos:start="109:35" pos:end="109:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="111:13" pos:end="113:30"><if pos:start="111:13" pos:end="113:30">if <condition pos:start="111:16" pos:end="111:76">(<expr pos:start="111:17" pos:end="111:75"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:36">CONFIG_APNG_DECODER</name> <operator pos:start="111:38" pos:end="111:39">||</operator> <name pos:start="111:41" pos:end="111:55"><name pos:start="111:41" pos:end="111:45">avctx</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:55">codec_id</name></name> <operator pos:start="111:57" pos:end="111:58">!=</operator> <name pos:start="111:60" pos:end="111:75">AV_CODEC_ID_APNG</name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:30"><block_content pos:start="113:17" pos:end="113:30">

                <goto pos:start="113:17" pos:end="113:30">goto <name pos:start="113:22" pos:end="113:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="115:13" pos:end="121:13"><if pos:start="115:13" pos:end="121:13">if <condition pos:start="115:16" pos:end="115:33">(<expr pos:start="115:17" pos:end="115:32"><operator pos:start="115:17" pos:end="115:17">!</operator><name pos:start="115:18" pos:end="115:32">decode_next_dat</name></expr>)</condition> <block pos:start="115:35" pos:end="121:13">{<block_content pos:start="117:17" pos:end="119:26">

                <expr_stmt pos:start="117:17" pos:end="117:42"><expr pos:start="117:17" pos:end="117:41"><name pos:start="117:17" pos:end="117:19">ret</name> <operator pos:start="117:21" pos:end="117:21">=</operator> <name pos:start="117:23" pos:end="117:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="119:17" pos:end="119:26">goto <name pos:start="119:22" pos:end="119:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:41"><expr pos:start="123:13" pos:end="123:40"><call pos:start="123:13" pos:end="123:40"><name pos:start="123:13" pos:end="123:32">bytestream2_get_be32</name><argument_list pos:start="123:33" pos:end="123:40">(<argument pos:start="123:34" pos:end="123:39"><expr pos:start="123:34" pos:end="123:39"><operator pos:start="123:34" pos:end="123:34">&amp;</operator><name pos:start="123:35" pos:end="123:39"><name pos:start="123:35" pos:end="123:35">s</name><operator pos:start="123:36" pos:end="123:37">-&gt;</operator><name pos:start="123:38" pos:end="123:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:24"><expr pos:start="125:13" pos:end="125:23"><name pos:start="125:13" pos:end="125:18">length</name> <operator pos:start="125:20" pos:end="125:21">-=</operator> <literal type="number" pos:start="125:23" pos:end="125:23">4</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="127:13" pos:end="127:29">/* fallthrough */</comment>

        <case pos:start="129:9" pos:end="129:39">case <expr pos:start="129:14" pos:end="129:38"><call pos:start="129:14" pos:end="129:38"><name pos:start="129:14" pos:end="129:18">MKTAG</name><argument_list pos:start="129:19" pos:end="129:38">(<argument pos:start="129:20" pos:end="129:22"><expr pos:start="129:20" pos:end="129:22"><literal type="char" pos:start="129:20" pos:end="129:22">'I'</literal></expr></argument>, <argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><literal type="char" pos:start="129:25" pos:end="129:27">'D'</literal></expr></argument>, <argument pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><literal type="char" pos:start="129:30" pos:end="129:32">'A'</literal></expr></argument>, <argument pos:start="129:35" pos:end="129:37"><expr pos:start="129:35" pos:end="129:37"><literal type="char" pos:start="129:35" pos:end="129:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="131:13" pos:end="133:30"><if pos:start="131:13" pos:end="133:30">if <condition pos:start="131:16" pos:end="131:95">(<expr pos:start="131:17" pos:end="131:94"><name pos:start="131:17" pos:end="131:35">CONFIG_APNG_DECODER</name> <operator pos:start="131:37" pos:end="131:38">&amp;&amp;</operator> <name pos:start="131:40" pos:end="131:54"><name pos:start="131:40" pos:end="131:44">avctx</name><operator pos:start="131:45" pos:end="131:46">-&gt;</operator><name pos:start="131:47" pos:end="131:54">codec_id</name></name> <operator pos:start="131:56" pos:end="131:57">==</operator> <name pos:start="131:59" pos:end="131:74">AV_CODEC_ID_APNG</name> <operator pos:start="131:76" pos:end="131:77">&amp;&amp;</operator> <operator pos:start="131:79" pos:end="131:79">!</operator><name pos:start="131:80" pos:end="131:94">decode_next_dat</name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:30"><block_content pos:start="133:17" pos:end="133:30">

                <goto pos:start="133:17" pos:end="133:30">goto <name pos:start="133:22" pos:end="133:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="135:13" pos:end="137:26"><if pos:start="135:13" pos:end="137:26">if <condition pos:start="135:16" pos:end="135:67">(<expr pos:start="135:17" pos:end="135:66"><operator pos:start="135:17" pos:end="135:17">(</operator><name pos:start="135:18" pos:end="135:20">ret</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <call pos:start="135:24" pos:end="135:61"><name pos:start="135:24" pos:end="135:40">decode_idat_chunk</name><argument_list pos:start="135:41" pos:end="135:61">(<argument pos:start="135:42" pos:end="135:46"><expr pos:start="135:42" pos:end="135:46"><name pos:start="135:42" pos:end="135:46">avctx</name></expr></argument>, <argument pos:start="135:49" pos:end="135:49"><expr pos:start="135:49" pos:end="135:49"><name pos:start="135:49" pos:end="135:49">s</name></expr></argument>, <argument pos:start="135:52" pos:end="135:57"><expr pos:start="135:52" pos:end="135:57"><name pos:start="135:52" pos:end="135:57">length</name></expr></argument>, <argument pos:start="135:60" pos:end="135:60"><expr pos:start="135:60" pos:end="135:60"><name pos:start="135:60" pos:end="135:60">p</name></expr></argument>)</argument_list></call><operator pos:start="135:62" pos:end="135:62">)</operator> <operator pos:start="135:64" pos:end="135:64">&lt;</operator> <literal type="number" pos:start="135:66" pos:end="135:66">0</literal></expr>)</condition><block type="pseudo" pos:start="137:17" pos:end="137:26"><block_content pos:start="137:17" pos:end="137:26">

                <goto pos:start="137:17" pos:end="137:26">goto <name pos:start="137:22" pos:end="137:25">fail</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="139:13" pos:end="139:18">break;</break>

        <case pos:start="141:9" pos:end="141:39">case <expr pos:start="141:14" pos:end="141:38"><call pos:start="141:14" pos:end="141:38"><name pos:start="141:14" pos:end="141:18">MKTAG</name><argument_list pos:start="141:19" pos:end="141:38">(<argument pos:start="141:20" pos:end="141:22"><expr pos:start="141:20" pos:end="141:22"><literal type="char" pos:start="141:20" pos:end="141:22">'P'</literal></expr></argument>, <argument pos:start="141:25" pos:end="141:27"><expr pos:start="141:25" pos:end="141:27"><literal type="char" pos:start="141:25" pos:end="141:27">'L'</literal></expr></argument>, <argument pos:start="141:30" pos:end="141:32"><expr pos:start="141:30" pos:end="141:32"><literal type="char" pos:start="141:30" pos:end="141:32">'T'</literal></expr></argument>, <argument pos:start="141:35" pos:end="141:37"><expr pos:start="141:35" pos:end="141:37"><literal type="char" pos:start="141:35" pos:end="141:37">'E'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="143:13" pos:end="145:30"><if pos:start="143:13" pos:end="145:30">if <condition pos:start="143:16" pos:end="143:56">(<expr pos:start="143:17" pos:end="143:55"><call pos:start="143:17" pos:end="143:51"><name pos:start="143:17" pos:end="143:33">decode_plte_chunk</name><argument_list pos:start="143:34" pos:end="143:51">(<argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39">avctx</name></expr></argument>, <argument pos:start="143:42" pos:end="143:42"><expr pos:start="143:42" pos:end="143:42"><name pos:start="143:42" pos:end="143:42">s</name></expr></argument>, <argument pos:start="143:45" pos:end="143:50"><expr pos:start="143:45" pos:end="143:50"><name pos:start="143:45" pos:end="143:50">length</name></expr></argument>)</argument_list></call> <operator pos:start="143:53" pos:end="143:53">&lt;</operator> <literal type="number" pos:start="143:55" pos:end="143:55">0</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:30"><block_content pos:start="145:17" pos:end="145:30">

                <goto pos:start="145:17" pos:end="145:30">goto <name pos:start="145:22" pos:end="145:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:39">case <expr pos:start="149:14" pos:end="149:38"><call pos:start="149:14" pos:end="149:38"><name pos:start="149:14" pos:end="149:18">MKTAG</name><argument_list pos:start="149:19" pos:end="149:38">(<argument pos:start="149:20" pos:end="149:22"><expr pos:start="149:20" pos:end="149:22"><literal type="char" pos:start="149:20" pos:end="149:22">'t'</literal></expr></argument>, <argument pos:start="149:25" pos:end="149:27"><expr pos:start="149:25" pos:end="149:27"><literal type="char" pos:start="149:25" pos:end="149:27">'R'</literal></expr></argument>, <argument pos:start="149:30" pos:end="149:32"><expr pos:start="149:30" pos:end="149:32"><literal type="char" pos:start="149:30" pos:end="149:32">'N'</literal></expr></argument>, <argument pos:start="149:35" pos:end="149:37"><expr pos:start="149:35" pos:end="149:37"><literal type="char" pos:start="149:35" pos:end="149:37">'S'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="151:13" pos:end="153:30"><if pos:start="151:13" pos:end="153:30">if <condition pos:start="151:16" pos:end="151:56">(<expr pos:start="151:17" pos:end="151:55"><call pos:start="151:17" pos:end="151:51"><name pos:start="151:17" pos:end="151:33">decode_trns_chunk</name><argument_list pos:start="151:34" pos:end="151:51">(<argument pos:start="151:35" pos:end="151:39"><expr pos:start="151:35" pos:end="151:39"><name pos:start="151:35" pos:end="151:39">avctx</name></expr></argument>, <argument pos:start="151:42" pos:end="151:42"><expr pos:start="151:42" pos:end="151:42"><name pos:start="151:42" pos:end="151:42">s</name></expr></argument>, <argument pos:start="151:45" pos:end="151:50"><expr pos:start="151:45" pos:end="151:50"><name pos:start="151:45" pos:end="151:50">length</name></expr></argument>)</argument_list></call> <operator pos:start="151:53" pos:end="151:53">&lt;</operator> <literal type="number" pos:start="151:55" pos:end="151:55">0</literal></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:30"><block_content pos:start="153:17" pos:end="153:30">

                <goto pos:start="153:17" pos:end="153:30">goto <name pos:start="153:22" pos:end="153:29">skip_tag</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        <case pos:start="157:9" pos:end="157:39">case <expr pos:start="157:14" pos:end="157:38"><call pos:start="157:14" pos:end="157:38"><name pos:start="157:14" pos:end="157:18">MKTAG</name><argument_list pos:start="157:19" pos:end="157:38">(<argument pos:start="157:20" pos:end="157:22"><expr pos:start="157:20" pos:end="157:22"><literal type="char" pos:start="157:20" pos:end="157:22">'t'</literal></expr></argument>, <argument pos:start="157:25" pos:end="157:27"><expr pos:start="157:25" pos:end="157:27"><literal type="char" pos:start="157:25" pos:end="157:27">'E'</literal></expr></argument>, <argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><literal type="char" pos:start="157:30" pos:end="157:32">'X'</literal></expr></argument>, <argument pos:start="157:35" pos:end="157:37"><expr pos:start="157:35" pos:end="157:37"><literal type="char" pos:start="157:35" pos:end="157:37">'t'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="159:13" pos:end="161:69"><if pos:start="159:13" pos:end="161:69">if <condition pos:start="159:16" pos:end="159:63">(<expr pos:start="159:17" pos:end="159:62"><call pos:start="159:17" pos:end="159:58"><name pos:start="159:17" pos:end="159:33">decode_text_chunk</name><argument_list pos:start="159:34" pos:end="159:58">(<argument pos:start="159:35" pos:end="159:35"><expr pos:start="159:35" pos:end="159:35"><name pos:start="159:35" pos:end="159:35">s</name></expr></argument>, <argument pos:start="159:38" pos:end="159:43"><expr pos:start="159:38" pos:end="159:43"><name pos:start="159:38" pos:end="159:43">length</name></expr></argument>, <argument pos:start="159:46" pos:end="159:46"><expr pos:start="159:46" pos:end="159:46"><literal type="number" pos:start="159:46" pos:end="159:46">0</literal></expr></argument>, <argument pos:start="159:49" pos:end="159:57"><expr pos:start="159:49" pos:end="159:57"><operator pos:start="159:49" pos:end="159:49">&amp;</operator><name pos:start="159:50" pos:end="159:57">metadata</name></expr></argument>)</argument_list></call> <operator pos:start="159:60" pos:end="159:60">&lt;</operator> <literal type="number" pos:start="159:62" pos:end="159:62">0</literal></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="161:69"><block_content pos:start="161:17" pos:end="161:69">

                <expr_stmt pos:start="161:17" pos:end="161:69"><expr pos:start="161:17" pos:end="161:68"><call pos:start="161:17" pos:end="161:68"><name pos:start="161:17" pos:end="161:22">av_log</name><argument_list pos:start="161:23" pos:end="161:68">(<argument pos:start="161:24" pos:end="161:28"><expr pos:start="161:24" pos:end="161:28"><name pos:start="161:24" pos:end="161:28">avctx</name></expr></argument>, <argument pos:start="161:31" pos:end="161:44"><expr pos:start="161:31" pos:end="161:44"><name pos:start="161:31" pos:end="161:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="161:47" pos:end="161:67"><expr pos:start="161:47" pos:end="161:67"><literal type="string" pos:start="161:47" pos:end="161:67">"Broken tEXt chunk\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:49"><expr pos:start="163:13" pos:end="163:48"><call pos:start="163:13" pos:end="163:48"><name pos:start="163:13" pos:end="163:28">bytestream2_skip</name><argument_list pos:start="163:29" pos:end="163:48">(<argument pos:start="163:30" pos:end="163:35"><expr pos:start="163:30" pos:end="163:35"><operator pos:start="163:30" pos:end="163:30">&amp;</operator><name pos:start="163:31" pos:end="163:35"><name pos:start="163:31" pos:end="163:31">s</name><operator pos:start="163:32" pos:end="163:33">-&gt;</operator><name pos:start="163:34" pos:end="163:35">gb</name></name></expr></argument>, <argument pos:start="163:38" pos:end="163:47"><expr pos:start="163:38" pos:end="163:47"><name pos:start="163:38" pos:end="163:43">length</name> <operator pos:start="163:45" pos:end="163:45">+</operator> <literal type="number" pos:start="163:47" pos:end="163:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:39">case <expr pos:start="167:14" pos:end="167:38"><call pos:start="167:14" pos:end="167:38"><name pos:start="167:14" pos:end="167:18">MKTAG</name><argument_list pos:start="167:19" pos:end="167:38">(<argument pos:start="167:20" pos:end="167:22"><expr pos:start="167:20" pos:end="167:22"><literal type="char" pos:start="167:20" pos:end="167:22">'z'</literal></expr></argument>, <argument pos:start="167:25" pos:end="167:27"><expr pos:start="167:25" pos:end="167:27"><literal type="char" pos:start="167:25" pos:end="167:27">'T'</literal></expr></argument>, <argument pos:start="167:30" pos:end="167:32"><expr pos:start="167:30" pos:end="167:32"><literal type="char" pos:start="167:30" pos:end="167:32">'X'</literal></expr></argument>, <argument pos:start="167:35" pos:end="167:37"><expr pos:start="167:35" pos:end="167:37"><literal type="char" pos:start="167:35" pos:end="167:37">'t'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="169:13" pos:end="171:69"><if pos:start="169:13" pos:end="171:69">if <condition pos:start="169:16" pos:end="169:63">(<expr pos:start="169:17" pos:end="169:62"><call pos:start="169:17" pos:end="169:58"><name pos:start="169:17" pos:end="169:33">decode_text_chunk</name><argument_list pos:start="169:34" pos:end="169:58">(<argument pos:start="169:35" pos:end="169:35"><expr pos:start="169:35" pos:end="169:35"><name pos:start="169:35" pos:end="169:35">s</name></expr></argument>, <argument pos:start="169:38" pos:end="169:43"><expr pos:start="169:38" pos:end="169:43"><name pos:start="169:38" pos:end="169:43">length</name></expr></argument>, <argument pos:start="169:46" pos:end="169:46"><expr pos:start="169:46" pos:end="169:46"><literal type="number" pos:start="169:46" pos:end="169:46">1</literal></expr></argument>, <argument pos:start="169:49" pos:end="169:57"><expr pos:start="169:49" pos:end="169:57"><operator pos:start="169:49" pos:end="169:49">&amp;</operator><name pos:start="169:50" pos:end="169:57">metadata</name></expr></argument>)</argument_list></call> <operator pos:start="169:60" pos:end="169:60">&lt;</operator> <literal type="number" pos:start="169:62" pos:end="169:62">0</literal></expr>)</condition><block type="pseudo" pos:start="171:17" pos:end="171:69"><block_content pos:start="171:17" pos:end="171:69">

                <expr_stmt pos:start="171:17" pos:end="171:69"><expr pos:start="171:17" pos:end="171:68"><call pos:start="171:17" pos:end="171:68"><name pos:start="171:17" pos:end="171:22">av_log</name><argument_list pos:start="171:23" pos:end="171:68">(<argument pos:start="171:24" pos:end="171:28"><expr pos:start="171:24" pos:end="171:28"><name pos:start="171:24" pos:end="171:28">avctx</name></expr></argument>, <argument pos:start="171:31" pos:end="171:44"><expr pos:start="171:31" pos:end="171:44"><name pos:start="171:31" pos:end="171:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="171:47" pos:end="171:67"><expr pos:start="171:47" pos:end="171:67"><literal type="string" pos:start="171:47" pos:end="171:67">"Broken zTXt chunk\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:49"><expr pos:start="173:13" pos:end="173:48"><call pos:start="173:13" pos:end="173:48"><name pos:start="173:13" pos:end="173:28">bytestream2_skip</name><argument_list pos:start="173:29" pos:end="173:48">(<argument pos:start="173:30" pos:end="173:35"><expr pos:start="173:30" pos:end="173:35"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:35"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:35">gb</name></name></expr></argument>, <argument pos:start="173:38" pos:end="173:47"><expr pos:start="173:38" pos:end="173:47"><name pos:start="173:38" pos:end="173:43">length</name> <operator pos:start="173:45" pos:end="173:45">+</operator> <literal type="number" pos:start="173:47" pos:end="173:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="175:13" pos:end="175:18">break;</break>

        <case pos:start="177:9" pos:end="177:39">case <expr pos:start="177:14" pos:end="177:38"><call pos:start="177:14" pos:end="177:38"><name pos:start="177:14" pos:end="177:18">MKTAG</name><argument_list pos:start="177:19" pos:end="177:38">(<argument pos:start="177:20" pos:end="177:22"><expr pos:start="177:20" pos:end="177:22"><literal type="char" pos:start="177:20" pos:end="177:22">'I'</literal></expr></argument>, <argument pos:start="177:25" pos:end="177:27"><expr pos:start="177:25" pos:end="177:27"><literal type="char" pos:start="177:25" pos:end="177:27">'E'</literal></expr></argument>, <argument pos:start="177:30" pos:end="177:32"><expr pos:start="177:30" pos:end="177:32"><literal type="char" pos:start="177:30" pos:end="177:32">'N'</literal></expr></argument>, <argument pos:start="177:35" pos:end="177:37"><expr pos:start="177:35" pos:end="177:37"><literal type="char" pos:start="177:35" pos:end="177:37">'D'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <if_stmt pos:start="179:13" pos:end="181:72"><if pos:start="179:13" pos:end="181:72">if <condition pos:start="179:16" pos:end="179:43">(<expr pos:start="179:17" pos:end="179:42"><operator pos:start="179:17" pos:end="179:17">!</operator><operator pos:start="179:18" pos:end="179:18">(</operator><name pos:start="179:19" pos:end="179:26"><name pos:start="179:19" pos:end="179:19">s</name><operator pos:start="179:20" pos:end="179:21">-&gt;</operator><name pos:start="179:22" pos:end="179:26">state</name></name> <operator pos:start="179:28" pos:end="179:28">&amp;</operator> <name pos:start="179:30" pos:end="179:41">PNG_ALLIMAGE</name><operator pos:start="179:42" pos:end="179:42">)</operator></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:72"><block_content pos:start="181:17" pos:end="181:72">

                <expr_stmt pos:start="181:17" pos:end="181:72"><expr pos:start="181:17" pos:end="181:71"><call pos:start="181:17" pos:end="181:71"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="181:71">(<argument pos:start="181:24" pos:end="181:28"><expr pos:start="181:24" pos:end="181:28"><name pos:start="181:24" pos:end="181:28">avctx</name></expr></argument>, <argument pos:start="181:31" pos:end="181:42"><expr pos:start="181:31" pos:end="181:42"><name pos:start="181:31" pos:end="181:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:45" pos:end="181:70"><expr pos:start="181:45" pos:end="181:70"><literal type="string" pos:start="181:45" pos:end="181:70">"IEND without all image\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="189:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="183:54">(<expr pos:start="183:17" pos:end="183:53"><operator pos:start="183:17" pos:end="183:17">!</operator><operator pos:start="183:18" pos:end="183:18">(</operator><name pos:start="183:19" pos:end="183:26"><name pos:start="183:19" pos:end="183:19">s</name><operator pos:start="183:20" pos:end="183:21">-&gt;</operator><name pos:start="183:22" pos:end="183:26">state</name></name> <operator pos:start="183:28" pos:end="183:28">&amp;</operator> <operator pos:start="183:30" pos:end="183:30">(</operator><name pos:start="183:31" pos:end="183:42">PNG_ALLIMAGE</name><operator pos:start="183:43" pos:end="183:43">|</operator><name pos:start="183:44" pos:end="183:51">PNG_IDAT</name><operator pos:start="183:52" pos:end="183:52">)</operator><operator pos:start="183:53" pos:end="183:53">)</operator></expr>)</condition> <block pos:start="183:56" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:26">

                <expr_stmt pos:start="185:17" pos:end="185:42"><expr pos:start="185:17" pos:end="185:41"><name pos:start="185:17" pos:end="185:19">ret</name> <operator pos:start="185:21" pos:end="185:21">=</operator> <name pos:start="185:23" pos:end="185:41">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

                <goto pos:start="187:17" pos:end="187:26">goto <name pos:start="187:22" pos:end="187:25">fail</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:40"><expr pos:start="191:13" pos:end="191:39"><call pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:28">bytestream2_skip</name><argument_list pos:start="191:29" pos:end="191:39">(<argument pos:start="191:30" pos:end="191:35"><expr pos:start="191:30" pos:end="191:35"><operator pos:start="191:30" pos:end="191:30">&amp;</operator><name pos:start="191:31" pos:end="191:35"><name pos:start="191:31" pos:end="191:31">s</name><operator pos:start="191:32" pos:end="191:33">-&gt;</operator><name pos:start="191:34" pos:end="191:35">gb</name></name></expr></argument>, <argument pos:start="191:38" pos:end="191:38"><expr pos:start="191:38" pos:end="191:38"><literal type="number" pos:start="191:38" pos:end="191:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="191:42" pos:end="191:50">/* crc */</comment>

            <goto pos:start="193:13" pos:end="193:27">goto <name pos:start="193:18" pos:end="193:26">exit_loop</name>;</goto>

        <default pos:start="195:9" pos:end="195:16">default:</default>

            <comment type="block" pos:start="197:13" pos:end="197:26">/* skip tag */</comment>

<label pos:start="199:1" pos:end="199:9"><name pos:start="199:1" pos:end="199:8">skip_tag</name>:</label>

            <expr_stmt pos:start="201:13" pos:end="201:49"><expr pos:start="201:13" pos:end="201:48"><call pos:start="201:13" pos:end="201:48"><name pos:start="201:13" pos:end="201:28">bytestream2_skip</name><argument_list pos:start="201:29" pos:end="201:48">(<argument pos:start="201:30" pos:end="201:35"><expr pos:start="201:30" pos:end="201:35"><operator pos:start="201:30" pos:end="201:30">&amp;</operator><name pos:start="201:31" pos:end="201:35"><name pos:start="201:31" pos:end="201:31">s</name><operator pos:start="201:32" pos:end="201:33">-&gt;</operator><name pos:start="201:34" pos:end="201:35">gb</name></name></expr></argument>, <argument pos:start="201:38" pos:end="201:47"><expr pos:start="201:38" pos:end="201:47"><name pos:start="201:38" pos:end="201:43">length</name> <operator pos:start="201:45" pos:end="201:45">+</operator> <literal type="number" pos:start="201:47" pos:end="201:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

<label pos:start="209:1" pos:end="209:10"><name pos:start="209:1" pos:end="209:9">exit_loop</name>:</label>



    <if_stmt pos:start="213:5" pos:end="215:31"><if pos:start="213:5" pos:end="215:31">if <condition pos:start="213:8" pos:end="213:31">(<expr pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:25"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:25">bits_per_pixel</name></name> <operator pos:start="213:27" pos:end="213:28">&lt;=</operator> <literal type="number" pos:start="213:30" pos:end="213:30">4</literal></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:31"><block_content pos:start="215:9" pos:end="215:31">

        <expr_stmt pos:start="215:9" pos:end="215:31"><expr pos:start="215:9" pos:end="215:30"><call pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:24">handle_small_bpp</name><argument_list pos:start="215:25" pos:end="215:30">(<argument pos:start="215:26" pos:end="215:26"><expr pos:start="215:26" pos:end="215:26"><name pos:start="215:26" pos:end="215:26">s</name></expr></argument>, <argument pos:start="215:29" pos:end="215:29"><expr pos:start="215:29" pos:end="215:29"><name pos:start="215:29" pos:end="215:29">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="219:5" pos:end="219:38">/* apply transparency if needed */</comment>

    <if_stmt pos:start="221:5" pos:end="261:5"><if pos:start="221:5" pos:end="261:5">if <condition pos:start="221:8" pos:end="221:63">(<expr pos:start="221:9" pos:end="221:62"><name pos:start="221:9" pos:end="221:19"><name pos:start="221:9" pos:end="221:9">s</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:19">has_trns</name></name> <operator pos:start="221:21" pos:end="221:22">&amp;&amp;</operator> <name pos:start="221:24" pos:end="221:36"><name pos:start="221:24" pos:end="221:24">s</name><operator pos:start="221:25" pos:end="221:26">-&gt;</operator><name pos:start="221:27" pos:end="221:36">color_type</name></name> <operator pos:start="221:38" pos:end="221:39">!=</operator> <name pos:start="221:41" pos:end="221:62">PNG_COLOR_TYPE_PALETTE</name></expr>)</condition> <block pos:start="221:65" pos:end="261:5">{<block_content pos:start="223:9" pos:end="259:9">

        <decl_stmt pos:start="223:9" pos:end="223:53"><decl pos:start="223:9" pos:end="223:52"><type pos:start="223:9" pos:end="223:14"><name pos:start="223:9" pos:end="223:14">size_t</name></type> <name pos:start="223:16" pos:end="223:25">byte_depth</name> <init pos:start="223:27" pos:end="223:52">= <expr pos:start="223:29" pos:end="223:52"><ternary pos:start="223:29" pos:end="223:52"><condition pos:start="223:29" pos:end="223:46"><expr pos:start="223:29" pos:end="223:44"><name pos:start="223:29" pos:end="223:40"><name pos:start="223:29" pos:end="223:29">s</name><operator pos:start="223:30" pos:end="223:31">-&gt;</operator><name pos:start="223:32" pos:end="223:40">bit_depth</name></name> <operator pos:start="223:42" pos:end="223:42">&gt;</operator> <literal type="number" pos:start="223:44" pos:end="223:44">8</literal></expr> ?</condition><then pos:start="223:48" pos:end="223:48"> <expr pos:start="223:48" pos:end="223:48"><literal type="number" pos:start="223:48" pos:end="223:48">2</literal></expr> </then><else pos:start="223:50" pos:end="223:52">: <expr pos:start="223:52" pos:end="223:52"><literal type="number" pos:start="223:52" pos:end="223:52">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="225:9" pos:end="225:45"><decl pos:start="225:9" pos:end="225:44"><type pos:start="225:9" pos:end="225:14"><name pos:start="225:9" pos:end="225:14">size_t</name></type> <name pos:start="225:16" pos:end="225:22">raw_bpp</name> <init pos:start="225:24" pos:end="225:44">= <expr pos:start="225:26" pos:end="225:44"><name pos:start="225:26" pos:end="225:31"><name pos:start="225:26" pos:end="225:26">s</name><operator pos:start="225:27" pos:end="225:28">-&gt;</operator><name pos:start="225:29" pos:end="225:31">bpp</name></name> <operator pos:start="225:33" pos:end="225:33">-</operator> <name pos:start="225:35" pos:end="225:44">byte_depth</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="227:9" pos:end="227:22"><decl pos:start="227:9" pos:end="227:18"><type pos:start="227:9" pos:end="227:16"><name pos:start="227:9" pos:end="227:16">unsigned</name></type> <name pos:start="227:18" pos:end="227:18">x</name></decl>, <decl pos:start="227:21" pos:end="227:21"><type ref="prev" pos:start="227:9" pos:end="227:16"/><name pos:start="227:21" pos:end="227:21">y</name></decl>;</decl_stmt>



        <for pos:start="231:9" pos:end="259:9">for <control pos:start="231:13" pos:end="231:39">(<init pos:start="231:14" pos:end="231:19"><expr pos:start="231:14" pos:end="231:18"><name pos:start="231:14" pos:end="231:14">y</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <literal type="number" pos:start="231:18" pos:end="231:18">0</literal></expr>;</init> <condition pos:start="231:21" pos:end="231:34"><expr pos:start="231:21" pos:end="231:33"><name pos:start="231:21" pos:end="231:21">y</name> <operator pos:start="231:23" pos:end="231:23">&lt;</operator> <name pos:start="231:25" pos:end="231:33"><name pos:start="231:25" pos:end="231:25">s</name><operator pos:start="231:26" pos:end="231:27">-&gt;</operator><name pos:start="231:28" pos:end="231:33">height</name></name></expr>;</condition> <incr pos:start="231:36" pos:end="231:38"><expr pos:start="231:36" pos:end="231:38"><operator pos:start="231:36" pos:end="231:37">++</operator><name pos:start="231:38" pos:end="231:38">y</name></expr></incr>)</control> <block pos:start="231:41" pos:end="259:9">{<block_content pos:start="233:13" pos:end="257:13">

            <decl_stmt pos:start="233:13" pos:end="233:64"><decl pos:start="233:13" pos:end="233:63"><type pos:start="233:13" pos:end="233:21"><name pos:start="233:13" pos:end="233:19">uint8_t</name> <modifier pos:start="233:21" pos:end="233:21">*</modifier></type><name pos:start="233:22" pos:end="233:24">row</name> <init pos:start="233:26" pos:end="233:63">= <expr pos:start="233:28" pos:end="233:63"><operator pos:start="233:28" pos:end="233:28">&amp;</operator><name pos:start="233:29" pos:end="233:63"><name pos:start="233:29" pos:end="233:29">s</name><operator pos:start="233:30" pos:end="233:31">-&gt;</operator><name pos:start="233:32" pos:end="233:40">image_buf</name><index pos:start="233:41" pos:end="233:63">[<expr pos:start="233:42" pos:end="233:62"><name pos:start="233:42" pos:end="233:58"><name pos:start="233:42" pos:end="233:42">s</name><operator pos:start="233:43" pos:end="233:44">-&gt;</operator><name pos:start="233:45" pos:end="233:58">image_linesize</name></name> <operator pos:start="233:60" pos:end="233:60">*</operator> <name pos:start="233:62" pos:end="233:62">y</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="237:13" pos:end="237:81">/* since we're updating in-place, we have to go from right to left */</comment>

            <for pos:start="239:13" pos:end="257:13">for <control pos:start="239:17" pos:end="239:42">(<init pos:start="239:18" pos:end="239:30"><expr pos:start="239:18" pos:end="239:29"><name pos:start="239:18" pos:end="239:18">x</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <name pos:start="239:22" pos:end="239:29"><name pos:start="239:22" pos:end="239:22">s</name><operator pos:start="239:23" pos:end="239:24">-&gt;</operator><name pos:start="239:25" pos:end="239:29">width</name></name></expr>;</init> <condition pos:start="239:32" pos:end="239:37"><expr pos:start="239:32" pos:end="239:36"><name pos:start="239:32" pos:end="239:32">x</name> <operator pos:start="239:34" pos:end="239:34">&gt;</operator> <literal type="number" pos:start="239:36" pos:end="239:36">0</literal></expr>;</condition> <incr pos:start="239:39" pos:end="239:41"><expr pos:start="239:39" pos:end="239:41"><operator pos:start="239:39" pos:end="239:40">--</operator><name pos:start="239:41" pos:end="239:41">x</name></expr></incr>)</control> <block pos:start="239:44" pos:end="257:13">{<block_content pos:start="241:17" pos:end="255:17">

                <decl_stmt pos:start="241:17" pos:end="241:56"><decl pos:start="241:17" pos:end="241:55"><type pos:start="241:17" pos:end="241:25"><name pos:start="241:17" pos:end="241:23">uint8_t</name> <modifier pos:start="241:25" pos:end="241:25">*</modifier></type><name pos:start="241:26" pos:end="241:30">pixel</name> <init pos:start="241:32" pos:end="241:55">= <expr pos:start="241:34" pos:end="241:55"><operator pos:start="241:34" pos:end="241:34">&amp;</operator><name pos:start="241:35" pos:end="241:55"><name pos:start="241:35" pos:end="241:37">row</name><index pos:start="241:38" pos:end="241:55">[<expr pos:start="241:39" pos:end="241:54"><name pos:start="241:39" pos:end="241:44"><name pos:start="241:39" pos:end="241:39">s</name><operator pos:start="241:40" pos:end="241:41">-&gt;</operator><name pos:start="241:42" pos:end="241:44">bpp</name></name> <operator pos:start="241:46" pos:end="241:46">*</operator> <operator pos:start="241:48" pos:end="241:48">(</operator><name pos:start="241:49" pos:end="241:49">x</name> <operator pos:start="241:51" pos:end="241:51">-</operator> <literal type="number" pos:start="241:53" pos:end="241:53">1</literal><operator pos:start="241:54" pos:end="241:54">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:65"><expr pos:start="243:17" pos:end="243:64"><call pos:start="243:17" pos:end="243:64"><name pos:start="243:17" pos:end="243:23">memmove</name><argument_list pos:start="243:24" pos:end="243:64">(<argument pos:start="243:25" pos:end="243:29"><expr pos:start="243:25" pos:end="243:29"><name pos:start="243:25" pos:end="243:29">pixel</name></expr></argument>, <argument pos:start="243:32" pos:end="243:54"><expr pos:start="243:32" pos:end="243:54"><operator pos:start="243:32" pos:end="243:32">&amp;</operator><name pos:start="243:33" pos:end="243:54"><name pos:start="243:33" pos:end="243:35">row</name><index pos:start="243:36" pos:end="243:54">[<expr pos:start="243:37" pos:end="243:53"><name pos:start="243:37" pos:end="243:43">raw_bpp</name> <operator pos:start="243:45" pos:end="243:45">*</operator> <operator pos:start="243:47" pos:end="243:47">(</operator><name pos:start="243:48" pos:end="243:48">x</name> <operator pos:start="243:50" pos:end="243:50">-</operator> <literal type="number" pos:start="243:52" pos:end="243:52">1</literal><operator pos:start="243:53" pos:end="243:53">)</operator></expr>]</index></name></expr></argument>, <argument pos:start="243:57" pos:end="243:63"><expr pos:start="243:57" pos:end="243:63"><name pos:start="243:57" pos:end="243:63">raw_bpp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <if_stmt pos:start="247:17" pos:end="255:17"><if pos:start="247:17" pos:end="251:17">if <condition pos:start="247:20" pos:end="247:69">(<expr pos:start="247:21" pos:end="247:68"><operator pos:start="247:21" pos:end="247:21">!</operator><call pos:start="247:22" pos:end="247:68"><name pos:start="247:22" pos:end="247:27">memcmp</name><argument_list pos:start="247:28" pos:end="247:68">(<argument pos:start="247:29" pos:end="247:33"><expr pos:start="247:29" pos:end="247:33"><name pos:start="247:29" pos:end="247:33">pixel</name></expr></argument>, <argument pos:start="247:36" pos:end="247:58"><expr pos:start="247:36" pos:end="247:58"><name pos:start="247:36" pos:end="247:58"><name pos:start="247:36" pos:end="247:36">s</name><operator pos:start="247:37" pos:end="247:38">-&gt;</operator><name pos:start="247:39" pos:end="247:58">transparent_color_be</name></name></expr></argument>, <argument pos:start="247:61" pos:end="247:67"><expr pos:start="247:61" pos:end="247:67"><name pos:start="247:61" pos:end="247:67">raw_bpp</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="247:71" pos:end="251:17">{<block_content pos:start="249:21" pos:end="249:59">

                    <expr_stmt pos:start="249:21" pos:end="249:59"><expr pos:start="249:21" pos:end="249:58"><call pos:start="249:21" pos:end="249:58"><name pos:start="249:21" pos:end="249:26">memset</name><argument_list pos:start="249:27" pos:end="249:58">(<argument pos:start="249:28" pos:end="249:42"><expr pos:start="249:28" pos:end="249:42"><operator pos:start="249:28" pos:end="249:28">&amp;</operator><name pos:start="249:29" pos:end="249:42"><name pos:start="249:29" pos:end="249:33">pixel</name><index pos:start="249:34" pos:end="249:42">[<expr pos:start="249:35" pos:end="249:41"><name pos:start="249:35" pos:end="249:41">raw_bpp</name></expr>]</index></name></expr></argument>, <argument pos:start="249:45" pos:end="249:45"><expr pos:start="249:45" pos:end="249:45"><literal type="number" pos:start="249:45" pos:end="249:45">0</literal></expr></argument>, <argument pos:start="249:48" pos:end="249:57"><expr pos:start="249:48" pos:end="249:57"><name pos:start="249:48" pos:end="249:57">byte_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="251:19" pos:end="255:17">else <block pos:start="251:24" pos:end="255:17">{<block_content pos:start="253:21" pos:end="253:62">

                    <expr_stmt pos:start="253:21" pos:end="253:62"><expr pos:start="253:21" pos:end="253:61"><call pos:start="253:21" pos:end="253:61"><name pos:start="253:21" pos:end="253:26">memset</name><argument_list pos:start="253:27" pos:end="253:61">(<argument pos:start="253:28" pos:end="253:42"><expr pos:start="253:28" pos:end="253:42"><operator pos:start="253:28" pos:end="253:28">&amp;</operator><name pos:start="253:29" pos:end="253:42"><name pos:start="253:29" pos:end="253:33">pixel</name><index pos:start="253:34" pos:end="253:42">[<expr pos:start="253:35" pos:end="253:41"><name pos:start="253:35" pos:end="253:41">raw_bpp</name></expr>]</index></name></expr></argument>, <argument pos:start="253:45" pos:end="253:48"><expr pos:start="253:45" pos:end="253:48"><literal type="number" pos:start="253:45" pos:end="253:48">0xff</literal></expr></argument>, <argument pos:start="253:51" pos:end="253:60"><expr pos:start="253:51" pos:end="253:60"><name pos:start="253:51" pos:end="253:60">byte_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="265:5" pos:end="265:66">/* handle p-frames only if a predecessor frame is available */</comment>

    <if_stmt pos:start="267:5" pos:end="293:5"><if pos:start="267:5" pos:end="293:5">if <condition pos:start="267:8" pos:end="267:35">(<expr pos:start="267:9" pos:end="267:34"><name pos:start="267:9" pos:end="267:34"><name pos:start="267:9" pos:end="267:9">s</name><operator pos:start="267:10" pos:end="267:11">-&gt;</operator><name pos:start="267:12" pos:end="267:23">last_picture</name><operator pos:start="267:24" pos:end="267:24">.</operator><name pos:start="267:25" pos:end="267:25">f</name><operator pos:start="267:26" pos:end="267:27">-&gt;</operator><name pos:start="267:28" pos:end="267:31">data</name><index pos:start="267:32" pos:end="267:34">[<expr pos:start="267:33" pos:end="267:33"><literal type="number" pos:start="267:33" pos:end="267:33">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="267:37" pos:end="293:5">{<block_content pos:start="269:9" pos:end="291:9">

        <if_stmt pos:start="269:9" pos:end="291:9"><if pos:start="269:9" pos:end="291:9">if <condition pos:start="269:12" pos:end="277:10">(   <expr pos:start="269:16" pos:end="275:52"><operator pos:start="269:16" pos:end="269:16">!</operator><operator pos:start="269:17" pos:end="269:17">(</operator><name pos:start="269:18" pos:end="269:29"><name pos:start="269:18" pos:end="269:22">avpkt</name><operator pos:start="269:23" pos:end="269:24">-&gt;</operator><name pos:start="269:25" pos:end="269:29">flags</name></name> <operator pos:start="269:31" pos:end="269:31">&amp;</operator> <name pos:start="269:33" pos:end="269:47">AV_PKT_FLAG_KEY</name><operator pos:start="269:48" pos:end="269:48">)</operator> <operator pos:start="269:50" pos:end="269:51">&amp;&amp;</operator> <name pos:start="269:53" pos:end="269:68"><name pos:start="269:53" pos:end="269:57">avctx</name><operator pos:start="269:58" pos:end="269:59">-&gt;</operator><name pos:start="269:60" pos:end="269:68">codec_tag</name></name> <operator pos:start="269:70" pos:end="269:71">!=</operator> <call pos:start="269:73" pos:end="269:87"><name pos:start="269:73" pos:end="269:79">AV_RL32</name><argument_list pos:start="269:80" pos:end="269:87">(<argument pos:start="269:81" pos:end="269:86"><expr pos:start="269:81" pos:end="269:86"><literal type="string" pos:start="269:81" pos:end="269:86">"MPNG"</literal></expr></argument>)</argument_list></call>

            <operator pos:start="271:13" pos:end="271:14">&amp;&amp;</operator> <name pos:start="271:16" pos:end="271:39"><name pos:start="271:16" pos:end="271:16">s</name><operator pos:start="271:17" pos:end="271:18">-&gt;</operator><name pos:start="271:19" pos:end="271:30">last_picture</name><operator pos:start="271:31" pos:end="271:31">.</operator><name pos:start="271:32" pos:end="271:32">f</name><operator pos:start="271:33" pos:end="271:34">-&gt;</operator><name pos:start="271:35" pos:end="271:39">width</name></name> <operator pos:start="271:41" pos:end="271:42">==</operator> <name pos:start="271:44" pos:end="271:51"><name pos:start="271:44" pos:end="271:44">p</name><operator pos:start="271:45" pos:end="271:46">-&gt;</operator><name pos:start="271:47" pos:end="271:51">width</name></name>

            <operator pos:start="273:13" pos:end="273:14">&amp;&amp;</operator> <name pos:start="273:16" pos:end="273:40"><name pos:start="273:16" pos:end="273:16">s</name><operator pos:start="273:17" pos:end="273:18">-&gt;</operator><name pos:start="273:19" pos:end="273:30">last_picture</name><operator pos:start="273:31" pos:end="273:31">.</operator><name pos:start="273:32" pos:end="273:32">f</name><operator pos:start="273:33" pos:end="273:34">-&gt;</operator><name pos:start="273:35" pos:end="273:40">height</name></name><operator pos:start="273:41" pos:end="273:42">==</operator> <name pos:start="273:44" pos:end="273:52"><name pos:start="273:44" pos:end="273:44">p</name><operator pos:start="273:45" pos:end="273:46">-&gt;</operator><name pos:start="273:47" pos:end="273:52">height</name></name>

            <operator pos:start="275:13" pos:end="275:14">&amp;&amp;</operator> <name pos:start="275:16" pos:end="275:40"><name pos:start="275:16" pos:end="275:16">s</name><operator pos:start="275:17" pos:end="275:18">-&gt;</operator><name pos:start="275:19" pos:end="275:30">last_picture</name><operator pos:start="275:31" pos:end="275:31">.</operator><name pos:start="275:32" pos:end="275:32">f</name><operator pos:start="275:33" pos:end="275:34">-&gt;</operator><name pos:start="275:35" pos:end="275:40">format</name></name><operator pos:start="275:41" pos:end="275:42">==</operator> <name pos:start="275:44" pos:end="275:52"><name pos:start="275:44" pos:end="275:44">p</name><operator pos:start="275:45" pos:end="275:46">-&gt;</operator><name pos:start="275:47" pos:end="275:52">format</name></name></expr>

         )</condition> <block pos:start="277:12" pos:end="291:9">{<block_content pos:start="279:13" pos:end="289:26">

            <if_stmt pos:start="279:13" pos:end="289:26"><if pos:start="279:13" pos:end="281:41">if <condition pos:start="279:16" pos:end="279:74">(<expr pos:start="279:17" pos:end="279:73"><name pos:start="279:17" pos:end="279:34">CONFIG_PNG_DECODER</name> <operator pos:start="279:36" pos:end="279:37">&amp;&amp;</operator> <name pos:start="279:39" pos:end="279:53"><name pos:start="279:39" pos:end="279:43">avctx</name><operator pos:start="279:44" pos:end="279:45">-&gt;</operator><name pos:start="279:46" pos:end="279:53">codec_id</name></name> <operator pos:start="279:55" pos:end="279:56">!=</operator> <name pos:start="279:58" pos:end="279:73">AV_CODEC_ID_APNG</name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:41"><block_content pos:start="281:17" pos:end="281:41">

                <expr_stmt pos:start="281:17" pos:end="281:41"><expr pos:start="281:17" pos:end="281:40"><call pos:start="281:17" pos:end="281:40"><name pos:start="281:17" pos:end="281:34">handle_p_frame_png</name><argument_list pos:start="281:35" pos:end="281:40">(<argument pos:start="281:36" pos:end="281:36"><expr pos:start="281:36" pos:end="281:36"><name pos:start="281:36" pos:end="281:36">s</name></expr></argument>, <argument pos:start="281:39" pos:end="281:39"><expr pos:start="281:39" pos:end="281:39"><name pos:start="281:39" pos:end="281:39">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="283:13" pos:end="289:26">else if <condition pos:start="283:21" pos:end="287:66">(<expr pos:start="283:22" pos:end="287:65"><name pos:start="283:22" pos:end="283:40">CONFIG_APNG_DECODER</name> <operator pos:start="283:42" pos:end="283:43">&amp;&amp;</operator>

                     <name pos:start="285:22" pos:end="285:36"><name pos:start="285:22" pos:end="285:26">avctx</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:36">codec_id</name></name> <operator pos:start="285:38" pos:end="285:39">==</operator> <name pos:start="285:41" pos:end="285:56">AV_CODEC_ID_APNG</name> <operator pos:start="285:58" pos:end="285:59">&amp;&amp;</operator>

                     <operator pos:start="287:22" pos:end="287:22">(</operator><name pos:start="287:23" pos:end="287:25">ret</name> <operator pos:start="287:27" pos:end="287:27">=</operator> <call pos:start="287:29" pos:end="287:60"><name pos:start="287:29" pos:end="287:47">handle_p_frame_apng</name><argument_list pos:start="287:48" pos:end="287:60">(<argument pos:start="287:49" pos:end="287:53"><expr pos:start="287:49" pos:end="287:53"><name pos:start="287:49" pos:end="287:53">avctx</name></expr></argument>, <argument pos:start="287:56" pos:end="287:56"><expr pos:start="287:56" pos:end="287:56"><name pos:start="287:56" pos:end="287:56">s</name></expr></argument>, <argument pos:start="287:59" pos:end="287:59"><expr pos:start="287:59" pos:end="287:59"><name pos:start="287:59" pos:end="287:59">p</name></expr></argument>)</argument_list></call><operator pos:start="287:61" pos:end="287:61">)</operator> <operator pos:start="287:63" pos:end="287:63">&lt;</operator> <literal type="number" pos:start="287:65" pos:end="287:65">0</literal></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:26"><block_content pos:start="289:17" pos:end="289:26">

                <goto pos:start="289:17" pos:end="289:26">goto <name pos:start="289:22" pos:end="289:25">fail</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="295:5" pos:end="295:55"><expr pos:start="295:5" pos:end="295:54"><call pos:start="295:5" pos:end="295:54"><name pos:start="295:5" pos:end="295:29">ff_thread_report_progress</name><argument_list pos:start="295:30" pos:end="295:54">(<argument pos:start="295:31" pos:end="295:41"><expr pos:start="295:31" pos:end="295:41"><operator pos:start="295:31" pos:end="295:31">&amp;</operator><name pos:start="295:32" pos:end="295:41"><name pos:start="295:32" pos:end="295:32">s</name><operator pos:start="295:33" pos:end="295:34">-&gt;</operator><name pos:start="295:35" pos:end="295:41">picture</name></name></expr></argument>, <argument pos:start="295:44" pos:end="295:50"><expr pos:start="295:44" pos:end="295:50"><name pos:start="295:44" pos:end="295:50">INT_MAX</name></expr></argument>, <argument pos:start="295:53" pos:end="295:53"><expr pos:start="295:53" pos:end="295:53"><literal type="number" pos:start="295:53" pos:end="295:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="300:5" pos:end="300:39"><expr pos:start="300:5" pos:end="300:38"><call pos:start="300:5" pos:end="300:38"><name pos:start="300:5" pos:end="300:25">av_frame_set_metadata</name><argument_list pos:start="300:26" pos:end="300:38">(<argument pos:start="300:27" pos:end="300:27"><expr pos:start="300:27" pos:end="300:27"><name pos:start="300:27" pos:end="300:27">p</name></expr></argument>, <argument pos:start="300:30" pos:end="300:37"><expr pos:start="300:30" pos:end="300:37"><name pos:start="300:30" pos:end="300:37">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="302:5" pos:end="302:22"><expr pos:start="302:5" pos:end="302:21"><name pos:start="302:5" pos:end="302:12">metadata</name>   <operator pos:start="302:16" pos:end="302:16">=</operator> <name pos:start="302:18" pos:end="302:21">NULL</name></expr>;</expr_stmt>

    <return pos:start="304:5" pos:end="304:13">return <expr pos:start="304:12" pos:end="304:12"><literal type="number" pos:start="304:12" pos:end="304:12">0</literal></expr>;</return>



<label pos:start="308:1" pos:end="308:5"><name pos:start="308:1" pos:end="308:4">fail</name>:</label>

    <expr_stmt pos:start="310:5" pos:end="310:28"><expr pos:start="310:5" pos:end="310:27"><call pos:start="310:5" pos:end="310:27"><name pos:start="310:5" pos:end="310:16">av_dict_free</name><argument_list pos:start="310:17" pos:end="310:27">(<argument pos:start="310:18" pos:end="310:26"><expr pos:start="310:18" pos:end="310:26"><operator pos:start="310:18" pos:end="310:18">&amp;</operator><name pos:start="310:19" pos:end="310:26">metadata</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="312:5" pos:end="312:55"><expr pos:start="312:5" pos:end="312:54"><call pos:start="312:5" pos:end="312:54"><name pos:start="312:5" pos:end="312:29">ff_thread_report_progress</name><argument_list pos:start="312:30" pos:end="312:54">(<argument pos:start="312:31" pos:end="312:41"><expr pos:start="312:31" pos:end="312:41"><operator pos:start="312:31" pos:end="312:31">&amp;</operator><name pos:start="312:32" pos:end="312:41"><name pos:start="312:32" pos:end="312:32">s</name><operator pos:start="312:33" pos:end="312:34">-&gt;</operator><name pos:start="312:35" pos:end="312:41">picture</name></name></expr></argument>, <argument pos:start="312:44" pos:end="312:50"><expr pos:start="312:44" pos:end="312:50"><name pos:start="312:44" pos:end="312:50">INT_MAX</name></expr></argument>, <argument pos:start="312:53" pos:end="312:53"><expr pos:start="312:53" pos:end="312:53"><literal type="number" pos:start="312:53" pos:end="312:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>


    <return pos:start="315:5" pos:end="315:15">return <expr pos:start="315:12" pos:end="315:14"><name pos:start="315:12" pos:end="315:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
