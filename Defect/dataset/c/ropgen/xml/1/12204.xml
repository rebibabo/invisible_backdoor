<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12204.c" pos:tabs="8"><function pos:start="1:1" pos:end="307:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">test_io_channel_tls</name><parameter_list pos:start="1:32" pos:end="1:51">(<parameter pos:start="1:33" pos:end="1:50"><decl pos:start="1:33" pos:end="1:50"><type pos:start="1:33" pos:end="1:44"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:42">void</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:50">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="307:1">{<block_content pos:start="5:5" pos:end="305:22">

    <decl_stmt pos:start="5:5" pos:end="7:47"><decl pos:start="5:5" pos:end="7:46"><type pos:start="5:5" pos:end="5:34"><name pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:32">QIOChannelTLSTestData</name></name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:38">data</name> <init pos:start="5:40" pos:end="7:46">=

        <expr pos:start="7:9" pos:end="7:46"><operator pos:start="7:9" pos:end="7:9">(</operator>struct <name pos:start="7:17" pos:end="7:37">QIOChannelTLSTestData</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">QCryptoTLSCreds</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:32">clientCreds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">QCryptoTLSCreds</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:32">serverCreds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">QIOChannelTLS</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:32">clientChanTLS</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:17">QIOChannelTLS</name> <modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:32">serverChanTLS</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:37"><decl pos:start="17:5" pos:end="17:36"><type pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:20">QIOChannelSocket</name> <modifier pos:start="17:22" pos:end="17:22">*</modifier></type><name pos:start="17:23" pos:end="17:36">clientChanSock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">QIOChannelSocket</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:36">serverChanSock</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">qemu_acl</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:17">acl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:34"><decl pos:start="23:5" pos:end="23:33"><type pos:start="23:5" pos:end="23:24"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:14">char</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier> <specifier pos:start="23:18" pos:end="23:22">const</specifier> <modifier pos:start="23:24" pos:end="23:24">*</modifier></type><name pos:start="23:25" pos:end="23:33">wildcards</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:19"><decl pos:start="25:5" pos:end="25:18"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:15">channel</name><index pos:start="25:16" pos:end="25:18">[<expr pos:start="25:17" pos:end="25:17"><literal type="number" pos:start="25:17" pos:end="25:17">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:73"><decl pos:start="27:5" pos:end="27:72"><type pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:10">struct</name> <name pos:start="27:12" pos:end="27:37">QIOChannelTLSHandshakeData</name></name></type> <name pos:start="27:39" pos:end="27:53">clientHandshake</name> <init pos:start="27:55" pos:end="27:72">= <expr pos:start="27:57" pos:end="27:72"><block pos:start="27:57" pos:end="27:72">{ <expr pos:start="27:59" pos:end="27:63"><name pos:start="27:59" pos:end="27:63">false</name></expr>, <expr pos:start="27:66" pos:end="27:70"><name pos:start="27:66" pos:end="27:70">false</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:73"><decl pos:start="29:5" pos:end="29:72"><type pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:10">struct</name> <name pos:start="29:12" pos:end="29:37">QIOChannelTLSHandshakeData</name></name></type> <name pos:start="29:39" pos:end="29:53">serverHandshake</name> <init pos:start="29:55" pos:end="29:72">= <expr pos:start="29:57" pos:end="29:72"><block pos:start="29:57" pos:end="29:72">{ <expr pos:start="29:59" pos:end="29:63"><name pos:start="29:59" pos:end="29:63">false</name></expr>, <expr pos:start="29:66" pos:end="29:70"><name pos:start="29:66" pos:end="29:70">false</name></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:21"><type pos:start="31:5" pos:end="31:11"><name pos:start="31:5" pos:end="31:9">Error</name> <modifier pos:start="31:11" pos:end="31:11">*</modifier></type><name pos:start="31:12" pos:end="31:14">err</name> <init pos:start="31:16" pos:end="31:21">= <expr pos:start="31:18" pos:end="31:21"><name pos:start="31:18" pos:end="31:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:25"><decl pos:start="33:5" pos:end="33:24"><type pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:18">QIOChannelTest</name> <modifier pos:start="33:20" pos:end="33:20">*</modifier></type><name pos:start="33:21" pos:end="33:24">test</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:27"><decl pos:start="35:5" pos:end="35:26"><type pos:start="35:5" pos:end="35:18"><name pos:start="35:5" pos:end="35:16">GMainContext</name> <modifier pos:start="35:18" pos:end="35:18">*</modifier></type><name pos:start="35:19" pos:end="35:26">mainloop</name></decl>;</decl_stmt>



    <comment type="block" pos:start="39:5" pos:end="39:62">/* We'll use this for our fake client-server connection */</comment>

    <expr_stmt pos:start="41:5" pos:end="48:0"><expr pos:start="41:5" pos:end="41:63"><call pos:start="41:5" pos:end="41:63"><name pos:start="41:5" pos:end="41:12">g_assert</name><argument_list pos:start="41:13" pos:end="41:63">(<argument pos:start="41:14" pos:end="41:62"><expr pos:start="41:14" pos:end="41:62"><call pos:start="41:14" pos:end="41:57"><name pos:start="41:14" pos:end="41:23">socketpair</name><argument_list pos:start="41:24" pos:end="41:57">(<argument pos:start="41:25" pos:end="41:31"><expr pos:start="41:25" pos:end="41:31"><name pos:start="41:25" pos:end="41:31">AF_UNIX</name></expr></argument>, <argument pos:start="41:34" pos:end="41:44"><expr pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:44">SOCK_STREAM</name></expr></argument>, <argument pos:start="41:47" pos:end="41:47"><expr pos:start="41:47" pos:end="41:47"><literal type="number" pos:start="41:47" pos:end="41:47">0</literal></expr></argument>, <argument pos:start="41:50" pos:end="41:56"><expr pos:start="41:50" pos:end="41:56"><name pos:start="41:50" pos:end="41:56">channel</name></expr></argument>)</argument_list></call> <operator pos:start="41:59" pos:end="41:60">==</operator> <literal type="number" pos:start="41:62" pos:end="41:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:define pos:start="45:1" pos:end="45:59">#<cpp:directive pos:start="45:2" pos:end="45:7">define</cpp:directive> <cpp:macro pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:23">CLIENT_CERT_DIR</name></cpp:macro> <cpp:value pos:start="45:25" pos:end="45:59">"tests/test-io-channel-tls-client/"</cpp:value></cpp:define>

<cpp:define pos:start="47:1" pos:end="47:59">#<cpp:directive pos:start="47:2" pos:end="47:7">define</cpp:directive> <cpp:macro pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:23">SERVER_CERT_DIR</name></cpp:macro> <cpp:value pos:start="47:25" pos:end="47:59">"tests/test-io-channel-tls-server/"</cpp:value></cpp:define>

    <expr_stmt pos:start="49:5" pos:end="49:33"><expr pos:start="49:5" pos:end="49:32"><call pos:start="49:5" pos:end="49:32"><name pos:start="49:5" pos:end="49:9">mkdir</name><argument_list pos:start="49:10" pos:end="49:32">(<argument pos:start="49:11" pos:end="49:25"><expr pos:start="49:11" pos:end="49:25"><name pos:start="49:11" pos:end="49:25">CLIENT_CERT_DIR</name></expr></argument>, <argument pos:start="49:28" pos:end="49:31"><expr pos:start="49:28" pos:end="49:31"><literal type="number" pos:start="49:28" pos:end="49:31">0700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:33"><expr pos:start="51:5" pos:end="51:32"><call pos:start="51:5" pos:end="51:32"><name pos:start="51:5" pos:end="51:9">mkdir</name><argument_list pos:start="51:10" pos:end="51:32">(<argument pos:start="51:11" pos:end="51:25"><expr pos:start="51:11" pos:end="51:25"><name pos:start="51:11" pos:end="51:25">SERVER_CERT_DIR</name></expr></argument>, <argument pos:start="51:28" pos:end="51:31"><expr pos:start="51:28" pos:end="51:31"><literal type="number" pos:start="51:28" pos:end="51:31">0700</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="55:5" pos:end="55:58"><name pos:start="55:5" pos:end="55:10">unlink</name><argument_list pos:start="55:11" pos:end="55:58">(<argument pos:start="55:12" pos:end="55:57">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro><empty_stmt pos:start="55:59" pos:end="55:59">;</empty_stmt>

    <macro pos:start="57:5" pos:end="57:62"><name pos:start="57:5" pos:end="57:10">unlink</name><argument_list pos:start="57:11" pos:end="57:62">(<argument pos:start="57:12" pos:end="57:61">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_CERT</argument>)</argument_list></macro><empty_stmt pos:start="57:63" pos:end="57:63">;</empty_stmt>

    <macro pos:start="59:5" pos:end="59:61"><name pos:start="59:5" pos:end="59:10">unlink</name><argument_list pos:start="59:11" pos:end="59:61">(<argument pos:start="59:12" pos:end="59:60">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_KEY</argument>)</argument_list></macro><empty_stmt pos:start="59:62" pos:end="59:62">;</empty_stmt>



    <macro pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:10">unlink</name><argument_list pos:start="63:11" pos:end="63:58">(<argument pos:start="63:12" pos:end="63:57">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro><empty_stmt pos:start="63:59" pos:end="63:59">;</empty_stmt>

    <macro pos:start="65:5" pos:end="65:62"><name pos:start="65:5" pos:end="65:10">unlink</name><argument_list pos:start="65:11" pos:end="65:62">(<argument pos:start="65:12" pos:end="65:61">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_CERT</argument>)</argument_list></macro><empty_stmt pos:start="65:63" pos:end="65:63">;</empty_stmt>

    <macro pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:10">unlink</name><argument_list pos:start="67:11" pos:end="67:61">(<argument pos:start="67:12" pos:end="67:60">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_KEY</argument>)</argument_list></macro><empty_stmt pos:start="67:62" pos:end="67:62">;</empty_stmt>



    <expr_stmt pos:start="71:5" pos:end="73:72"><expr pos:start="71:5" pos:end="73:71"><call pos:start="71:5" pos:end="73:71"><name pos:start="71:5" pos:end="71:12">g_assert</name><argument_list pos:start="71:13" pos:end="73:71">(<argument pos:start="71:14" pos:end="73:70"><expr pos:start="71:14" pos:end="73:70"><macro pos:start="71:14" pos:end="73:65"><name pos:start="71:14" pos:end="71:17">link</name><argument_list pos:start="71:18" pos:end="73:65">(<argument pos:start="71:19" pos:end="71:35">data-&gt;servercacrt</argument>,

                  <argument pos:start="73:19" pos:end="73:64">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro> <operator pos:start="73:67" pos:end="73:68">==</operator> <literal type="number" pos:start="73:70" pos:end="73:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="77:76"><expr pos:start="75:5" pos:end="77:75"><call pos:start="75:5" pos:end="77:75"><name pos:start="75:5" pos:end="75:12">g_assert</name><argument_list pos:start="75:13" pos:end="77:75">(<argument pos:start="75:14" pos:end="77:74"><expr pos:start="75:14" pos:end="77:74"><macro pos:start="75:14" pos:end="77:69"><name pos:start="75:14" pos:end="75:17">link</name><argument_list pos:start="75:18" pos:end="77:69">(<argument pos:start="75:19" pos:end="75:33">data-&gt;servercrt</argument>,

                  <argument pos:start="77:19" pos:end="77:68">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_CERT</argument>)</argument_list></macro> <operator pos:start="77:71" pos:end="77:72">==</operator> <literal type="number" pos:start="77:74" pos:end="77:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="81:75"><expr pos:start="79:5" pos:end="81:74"><call pos:start="79:5" pos:end="81:74"><name pos:start="79:5" pos:end="79:12">g_assert</name><argument_list pos:start="79:13" pos:end="81:74">(<argument pos:start="79:14" pos:end="81:73"><expr pos:start="79:14" pos:end="81:73"><macro pos:start="79:14" pos:end="81:68"><name pos:start="79:14" pos:end="79:17">link</name><argument_list pos:start="79:18" pos:end="81:68">(<argument pos:start="79:19" pos:end="79:25">KEYFILE</argument>,

                  <argument pos:start="81:19" pos:end="81:67">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_KEY</argument>)</argument_list></macro> <operator pos:start="81:70" pos:end="81:71">==</operator> <literal type="number" pos:start="81:73" pos:end="81:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:72"><expr pos:start="85:5" pos:end="87:71"><call pos:start="85:5" pos:end="87:71"><name pos:start="85:5" pos:end="85:12">g_assert</name><argument_list pos:start="85:13" pos:end="87:71">(<argument pos:start="85:14" pos:end="87:70"><expr pos:start="85:14" pos:end="87:70"><macro pos:start="85:14" pos:end="87:65"><name pos:start="85:14" pos:end="85:17">link</name><argument_list pos:start="85:18" pos:end="87:65">(<argument pos:start="85:19" pos:end="85:35">data-&gt;clientcacrt</argument>,

                  <argument pos:start="87:19" pos:end="87:64">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro> <operator pos:start="87:67" pos:end="87:68">==</operator> <literal type="number" pos:start="87:70" pos:end="87:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="91:76"><expr pos:start="89:5" pos:end="91:75"><call pos:start="89:5" pos:end="91:75"><name pos:start="89:5" pos:end="89:12">g_assert</name><argument_list pos:start="89:13" pos:end="91:75">(<argument pos:start="89:14" pos:end="91:74"><expr pos:start="89:14" pos:end="91:74"><macro pos:start="89:14" pos:end="91:69"><name pos:start="89:14" pos:end="89:17">link</name><argument_list pos:start="89:18" pos:end="91:69">(<argument pos:start="89:19" pos:end="89:33">data-&gt;clientcrt</argument>,

                  <argument pos:start="91:19" pos:end="91:68">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_CERT</argument>)</argument_list></macro> <operator pos:start="91:71" pos:end="91:72">==</operator> <literal type="number" pos:start="91:74" pos:end="91:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:75"><expr pos:start="93:5" pos:end="95:74"><call pos:start="93:5" pos:end="95:74"><name pos:start="93:5" pos:end="93:12">g_assert</name><argument_list pos:start="93:13" pos:end="95:74">(<argument pos:start="93:14" pos:end="95:73"><expr pos:start="93:14" pos:end="95:73"><macro pos:start="93:14" pos:end="95:68"><name pos:start="93:14" pos:end="93:17">link</name><argument_list pos:start="93:18" pos:end="95:68">(<argument pos:start="93:19" pos:end="93:25">KEYFILE</argument>,

                  <argument pos:start="95:19" pos:end="95:67">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_KEY</argument>)</argument_list></macro> <operator pos:start="95:70" pos:end="95:71">==</operator> <literal type="number" pos:start="95:73" pos:end="95:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="105:14"><expr pos:start="99:5" pos:end="105:13"><name pos:start="99:5" pos:end="99:15">clientCreds</name> <operator pos:start="99:17" pos:end="99:17">=</operator> <call pos:start="99:19" pos:end="105:13"><name pos:start="99:19" pos:end="99:39">test_tls_creds_create</name><argument_list pos:start="99:40" pos:end="105:13">(

        <argument pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:41">QCRYPTO_TLS_CREDS_ENDPOINT_CLIENT</name></expr></argument>,

        <argument pos:start="103:9" pos:end="103:23"><expr pos:start="103:9" pos:end="103:23"><name pos:start="103:9" pos:end="103:23">CLIENT_CERT_DIR</name></expr></argument>,

        <argument pos:start="105:9" pos:end="105:12"><expr pos:start="105:9" pos:end="105:12"><operator pos:start="105:9" pos:end="105:9">&amp;</operator><name pos:start="105:10" pos:end="105:12">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:34"><expr pos:start="107:5" pos:end="107:33"><call pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:12">g_assert</name><argument_list pos:start="107:13" pos:end="107:33">(<argument pos:start="107:14" pos:end="107:32"><expr pos:start="107:14" pos:end="107:32"><name pos:start="107:14" pos:end="107:24">clientCreds</name> <operator pos:start="107:26" pos:end="107:27">!=</operator> <name pos:start="107:29" pos:end="107:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="111:5" pos:end="117:14"><expr pos:start="111:5" pos:end="117:13"><name pos:start="111:5" pos:end="111:15">serverCreds</name> <operator pos:start="111:17" pos:end="111:17">=</operator> <call pos:start="111:19" pos:end="117:13"><name pos:start="111:19" pos:end="111:39">test_tls_creds_create</name><argument_list pos:start="111:40" pos:end="117:13">(

        <argument pos:start="113:9" pos:end="113:41"><expr pos:start="113:9" pos:end="113:41"><name pos:start="113:9" pos:end="113:41">QCRYPTO_TLS_CREDS_ENDPOINT_SERVER</name></expr></argument>,

        <argument pos:start="115:9" pos:end="115:23"><expr pos:start="115:9" pos:end="115:23"><name pos:start="115:9" pos:end="115:23">SERVER_CERT_DIR</name></expr></argument>,

        <argument pos:start="117:9" pos:end="117:12"><expr pos:start="117:9" pos:end="117:12"><operator pos:start="117:9" pos:end="117:9">&amp;</operator><name pos:start="117:10" pos:end="117:12">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:34"><expr pos:start="119:5" pos:end="119:33"><call pos:start="119:5" pos:end="119:33"><name pos:start="119:5" pos:end="119:12">g_assert</name><argument_list pos:start="119:13" pos:end="119:33">(<argument pos:start="119:14" pos:end="119:32"><expr pos:start="119:14" pos:end="119:32"><name pos:start="119:14" pos:end="119:24">serverCreds</name> <operator pos:start="119:26" pos:end="119:27">!=</operator> <name pos:start="119:29" pos:end="119:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:41"><expr pos:start="123:5" pos:end="123:40"><name pos:start="123:5" pos:end="123:7">acl</name> <operator pos:start="123:9" pos:end="123:9">=</operator> <call pos:start="123:11" pos:end="123:40"><name pos:start="123:11" pos:end="123:23">qemu_acl_init</name><argument_list pos:start="123:24" pos:end="123:40">(<argument pos:start="123:25" pos:end="123:39"><expr pos:start="123:25" pos:end="123:39"><literal type="string" pos:start="123:25" pos:end="123:39">"channeltlsacl"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:24"><expr pos:start="125:5" pos:end="125:23"><call pos:start="125:5" pos:end="125:23"><name pos:start="125:5" pos:end="125:18">qemu_acl_reset</name><argument_list pos:start="125:19" pos:end="125:23">(<argument pos:start="125:20" pos:end="125:22"><expr pos:start="125:20" pos:end="125:22"><name pos:start="125:20" pos:end="125:22">acl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:32"><expr pos:start="127:5" pos:end="127:31"><name pos:start="127:5" pos:end="127:13">wildcards</name> <operator pos:start="127:15" pos:end="127:15">=</operator> <name pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:20">data</name><operator pos:start="127:21" pos:end="127:22">-&gt;</operator><name pos:start="127:23" pos:end="127:31">wildcards</name></name></expr>;</expr_stmt>

    <while pos:start="129:5" pos:end="135:5">while <condition pos:start="129:11" pos:end="129:35">(<expr pos:start="129:12" pos:end="129:34"><name pos:start="129:12" pos:end="129:20">wildcards</name> <operator pos:start="129:22" pos:end="129:23">&amp;&amp;</operator> <operator pos:start="129:25" pos:end="129:25">*</operator><name pos:start="129:26" pos:end="129:34">wildcards</name></expr>)</condition> <block pos:start="129:37" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:20">

        <expr_stmt pos:start="131:9" pos:end="131:44"><expr pos:start="131:9" pos:end="131:43"><call pos:start="131:9" pos:end="131:43"><name pos:start="131:9" pos:end="131:23">qemu_acl_append</name><argument_list pos:start="131:24" pos:end="131:43">(<argument pos:start="131:25" pos:end="131:27"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">acl</name></expr></argument>, <argument pos:start="131:30" pos:end="131:30"><expr pos:start="131:30" pos:end="131:30"><literal type="number" pos:start="131:30" pos:end="131:30">0</literal></expr></argument>, <argument pos:start="131:33" pos:end="131:42"><expr pos:start="131:33" pos:end="131:42"><operator pos:start="131:33" pos:end="131:33">*</operator><name pos:start="131:34" pos:end="131:42">wildcards</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:20"><expr pos:start="133:9" pos:end="133:19"><name pos:start="133:9" pos:end="133:17">wildcards</name><operator pos:start="133:18" pos:end="133:19">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <expr_stmt pos:start="139:5" pos:end="141:26"><expr pos:start="139:5" pos:end="141:25"><name pos:start="139:5" pos:end="139:18">clientChanSock</name> <operator pos:start="139:20" pos:end="139:20">=</operator> <call pos:start="139:22" pos:end="141:25"><name pos:start="139:22" pos:end="139:46">qio_channel_socket_new_fd</name><argument_list pos:start="139:47" pos:end="141:25">(

        <argument pos:start="141:9" pos:end="141:18"><expr pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:18"><name pos:start="141:9" pos:end="141:15">channel</name><index pos:start="141:16" pos:end="141:18">[<expr pos:start="141:17" pos:end="141:17"><literal type="number" pos:start="141:17" pos:end="141:17">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="141:21" pos:end="141:24"><expr pos:start="141:21" pos:end="141:24"><operator pos:start="141:21" pos:end="141:21">&amp;</operator><name pos:start="141:22" pos:end="141:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:37"><expr pos:start="143:5" pos:end="143:36"><call pos:start="143:5" pos:end="143:36"><name pos:start="143:5" pos:end="143:12">g_assert</name><argument_list pos:start="143:13" pos:end="143:36">(<argument pos:start="143:14" pos:end="143:35"><expr pos:start="143:14" pos:end="143:35"><name pos:start="143:14" pos:end="143:27">clientChanSock</name> <operator pos:start="143:29" pos:end="143:30">!=</operator> <name pos:start="143:32" pos:end="143:35">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="147:26"><expr pos:start="145:5" pos:end="147:25"><name pos:start="145:5" pos:end="145:18">serverChanSock</name> <operator pos:start="145:20" pos:end="145:20">=</operator> <call pos:start="145:22" pos:end="147:25"><name pos:start="145:22" pos:end="145:46">qio_channel_socket_new_fd</name><argument_list pos:start="145:47" pos:end="147:25">(

        <argument pos:start="147:9" pos:end="147:18"><expr pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:18"><name pos:start="147:9" pos:end="147:15">channel</name><index pos:start="147:16" pos:end="147:18">[<expr pos:start="147:17" pos:end="147:17"><literal type="number" pos:start="147:17" pos:end="147:17">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="147:21" pos:end="147:24"><expr pos:start="147:21" pos:end="147:24"><operator pos:start="147:21" pos:end="147:21">&amp;</operator><name pos:start="147:22" pos:end="147:24">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:37"><expr pos:start="149:5" pos:end="149:36"><call pos:start="149:5" pos:end="149:36"><name pos:start="149:5" pos:end="149:12">g_assert</name><argument_list pos:start="149:13" pos:end="149:36">(<argument pos:start="149:14" pos:end="149:35"><expr pos:start="149:14" pos:end="149:35"><name pos:start="149:14" pos:end="149:27">serverChanSock</name> <operator pos:start="149:29" pos:end="149:30">!=</operator> <name pos:start="149:32" pos:end="149:35">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="153:5" pos:end="161:7">/*

     * We have an evil loop to do the handshake in a single

     * thread, so we need these non-blocking to avoid deadlock

     * of ourselves

     */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:71"><expr pos:start="163:5" pos:end="163:70"><call pos:start="163:5" pos:end="163:70"><name pos:start="163:5" pos:end="163:28">qio_channel_set_blocking</name><argument_list pos:start="163:29" pos:end="163:70">(<argument pos:start="163:30" pos:end="163:56"><expr pos:start="163:30" pos:end="163:56"><call pos:start="163:30" pos:end="163:56"><name pos:start="163:30" pos:end="163:40">QIO_CHANNEL</name><argument_list pos:start="163:41" pos:end="163:56">(<argument pos:start="163:42" pos:end="163:55"><expr pos:start="163:42" pos:end="163:55"><name pos:start="163:42" pos:end="163:55">clientChanSock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="163:59" pos:end="163:63"><expr pos:start="163:59" pos:end="163:63"><name pos:start="163:59" pos:end="163:63">false</name></expr></argument>, <argument pos:start="163:66" pos:end="163:69"><expr pos:start="163:66" pos:end="163:69"><name pos:start="163:66" pos:end="163:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="165:5" pos:end="165:71"><expr pos:start="165:5" pos:end="165:70"><call pos:start="165:5" pos:end="165:70"><name pos:start="165:5" pos:end="165:28">qio_channel_set_blocking</name><argument_list pos:start="165:29" pos:end="165:70">(<argument pos:start="165:30" pos:end="165:56"><expr pos:start="165:30" pos:end="165:56"><call pos:start="165:30" pos:end="165:56"><name pos:start="165:30" pos:end="165:40">QIO_CHANNEL</name><argument_list pos:start="165:41" pos:end="165:56">(<argument pos:start="165:42" pos:end="165:55"><expr pos:start="165:42" pos:end="165:55"><name pos:start="165:42" pos:end="165:55">serverChanSock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="165:59" pos:end="165:63"><expr pos:start="165:59" pos:end="165:63"><name pos:start="165:59" pos:end="165:63">false</name></expr></argument>, <argument pos:start="165:66" pos:end="165:69"><expr pos:start="165:66" pos:end="165:69"><name pos:start="165:66" pos:end="165:69">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="169:5" pos:end="169:59">/* Now the real part of the test, setup the sessions */</comment>

    <expr_stmt pos:start="171:5" pos:end="175:30"><expr pos:start="171:5" pos:end="175:29"><name pos:start="171:5" pos:end="171:17">clientChanTLS</name> <operator pos:start="171:19" pos:end="171:19">=</operator> <call pos:start="171:21" pos:end="175:29"><name pos:start="171:21" pos:end="171:46">qio_channel_tls_new_client</name><argument_list pos:start="171:47" pos:end="175:29">(

        <argument pos:start="173:9" pos:end="173:35"><expr pos:start="173:9" pos:end="173:35"><call pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:19">QIO_CHANNEL</name><argument_list pos:start="173:20" pos:end="173:35">(<argument pos:start="173:21" pos:end="173:34"><expr pos:start="173:21" pos:end="173:34"><name pos:start="173:21" pos:end="173:34">clientChanSock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="173:38" pos:end="173:48"><expr pos:start="173:38" pos:end="173:48"><name pos:start="173:38" pos:end="173:48">clientCreds</name></expr></argument>,

        <argument pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:22"><name pos:start="175:9" pos:end="175:12">data</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:22">hostname</name></name></expr></argument>, <argument pos:start="175:25" pos:end="175:28"><expr pos:start="175:25" pos:end="175:28"><operator pos:start="175:25" pos:end="175:25">&amp;</operator><name pos:start="175:26" pos:end="175:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:36"><expr pos:start="177:5" pos:end="177:35"><call pos:start="177:5" pos:end="177:35"><name pos:start="177:5" pos:end="177:12">g_assert</name><argument_list pos:start="177:13" pos:end="177:35">(<argument pos:start="177:14" pos:end="177:34"><expr pos:start="177:14" pos:end="177:34"><name pos:start="177:14" pos:end="177:26">clientChanTLS</name> <operator pos:start="177:28" pos:end="177:29">!=</operator> <name pos:start="177:31" pos:end="177:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="185:31"><expr pos:start="181:5" pos:end="185:30"><name pos:start="181:5" pos:end="181:17">serverChanTLS</name> <operator pos:start="181:19" pos:end="181:19">=</operator> <call pos:start="181:21" pos:end="185:30"><name pos:start="181:21" pos:end="181:46">qio_channel_tls_new_server</name><argument_list pos:start="181:47" pos:end="185:30">(

        <argument pos:start="183:9" pos:end="183:35"><expr pos:start="183:9" pos:end="183:35"><call pos:start="183:9" pos:end="183:35"><name pos:start="183:9" pos:end="183:19">QIO_CHANNEL</name><argument_list pos:start="183:20" pos:end="183:35">(<argument pos:start="183:21" pos:end="183:34"><expr pos:start="183:21" pos:end="183:34"><name pos:start="183:21" pos:end="183:34">serverChanSock</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:38" pos:end="183:48"><expr pos:start="183:38" pos:end="183:48"><name pos:start="183:38" pos:end="183:48">serverCreds</name></expr></argument>,

        <argument pos:start="185:9" pos:end="185:23"><expr pos:start="185:9" pos:end="185:23"><literal type="string" pos:start="185:9" pos:end="185:23">"channeltlsacl"</literal></expr></argument>, <argument pos:start="185:26" pos:end="185:29"><expr pos:start="185:26" pos:end="185:29"><operator pos:start="185:26" pos:end="185:26">&amp;</operator><name pos:start="185:27" pos:end="185:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:36"><expr pos:start="187:5" pos:end="187:35"><call pos:start="187:5" pos:end="187:35"><name pos:start="187:5" pos:end="187:12">g_assert</name><argument_list pos:start="187:13" pos:end="187:35">(<argument pos:start="187:14" pos:end="187:34"><expr pos:start="187:14" pos:end="187:34"><name pos:start="187:14" pos:end="187:26">serverChanTLS</name> <operator pos:start="187:28" pos:end="187:29">!=</operator> <name pos:start="187:31" pos:end="187:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="191:5" pos:end="197:36"><expr pos:start="191:5" pos:end="197:35"><call pos:start="191:5" pos:end="197:35"><name pos:start="191:5" pos:end="191:29">qio_channel_tls_handshake</name><argument_list pos:start="191:30" pos:end="197:35">(<argument pos:start="191:31" pos:end="191:43"><expr pos:start="191:31" pos:end="191:43"><name pos:start="191:31" pos:end="191:43">clientChanTLS</name></expr></argument>,

                              <argument pos:start="193:31" pos:end="193:53"><expr pos:start="193:31" pos:end="193:53"><name pos:start="193:31" pos:end="193:53">test_tls_handshake_done</name></expr></argument>,

                              <argument pos:start="195:31" pos:end="195:46"><expr pos:start="195:31" pos:end="195:46"><operator pos:start="195:31" pos:end="195:31">&amp;</operator><name pos:start="195:32" pos:end="195:46">clientHandshake</name></expr></argument>,

                              <argument pos:start="197:31" pos:end="197:34"><expr pos:start="197:31" pos:end="197:34"><name pos:start="197:31" pos:end="197:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="205:36"><expr pos:start="199:5" pos:end="205:35"><call pos:start="199:5" pos:end="205:35"><name pos:start="199:5" pos:end="199:29">qio_channel_tls_handshake</name><argument_list pos:start="199:30" pos:end="205:35">(<argument pos:start="199:31" pos:end="199:43"><expr pos:start="199:31" pos:end="199:43"><name pos:start="199:31" pos:end="199:43">serverChanTLS</name></expr></argument>,

                              <argument pos:start="201:31" pos:end="201:53"><expr pos:start="201:31" pos:end="201:53"><name pos:start="201:31" pos:end="201:53">test_tls_handshake_done</name></expr></argument>,

                              <argument pos:start="203:31" pos:end="203:46"><expr pos:start="203:31" pos:end="203:46"><operator pos:start="203:31" pos:end="203:31">&amp;</operator><name pos:start="203:32" pos:end="203:46">serverHandshake</name></expr></argument>,

                              <argument pos:start="205:31" pos:end="205:34"><expr pos:start="205:31" pos:end="205:34"><name pos:start="205:31" pos:end="205:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="209:5" pos:end="219:7">/*

     * Finally we loop around &amp; around doing handshake on each

     * session until we get an error, or the handshake completes.

     * This relies on the socketpair being nonblocking to avoid

     * deadlocking ourselves upon handshake

     */</comment>

    <expr_stmt pos:start="221:5" pos:end="221:40"><expr pos:start="221:5" pos:end="221:39"><name pos:start="221:5" pos:end="221:12">mainloop</name> <operator pos:start="221:14" pos:end="221:14">=</operator> <call pos:start="221:16" pos:end="221:39"><name pos:start="221:16" pos:end="221:37">g_main_context_default</name><argument_list pos:start="221:38" pos:end="221:39">()</argument_list></call></expr>;</expr_stmt>

    <do pos:start="223:5" pos:end="229:40">do <block pos:start="223:8" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:49">

        <expr_stmt pos:start="225:9" pos:end="225:49"><expr pos:start="225:9" pos:end="225:48"><call pos:start="225:9" pos:end="225:48"><name pos:start="225:9" pos:end="225:32">g_main_context_iteration</name><argument_list pos:start="225:33" pos:end="225:48">(<argument pos:start="225:34" pos:end="225:41"><expr pos:start="225:34" pos:end="225:41"><name pos:start="225:34" pos:end="225:41">mainloop</name></expr></argument>, <argument pos:start="225:44" pos:end="225:47"><expr pos:start="225:44" pos:end="225:47"><name pos:start="225:44" pos:end="225:47">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block> while <condition pos:start="227:13" pos:end="229:39">(<expr pos:start="227:14" pos:end="229:38"><operator pos:start="227:14" pos:end="227:14">!</operator><name pos:start="227:15" pos:end="227:38"><name pos:start="227:15" pos:end="227:29">clientHandshake</name><operator pos:start="227:30" pos:end="227:30">.</operator><name pos:start="227:31" pos:end="227:38">finished</name></name> <operator pos:start="227:40" pos:end="227:41">&amp;&amp;</operator>

             <operator pos:start="229:14" pos:end="229:14">!</operator><name pos:start="229:15" pos:end="229:38"><name pos:start="229:15" pos:end="229:29">serverHandshake</name><operator pos:start="229:30" pos:end="229:30">.</operator><name pos:start="229:31" pos:end="229:38">finished</name></name></expr>)</condition>;</do>



    <expr_stmt pos:start="233:5" pos:end="233:63"><expr pos:start="233:5" pos:end="233:62"><call pos:start="233:5" pos:end="233:62"><name pos:start="233:5" pos:end="233:12">g_assert</name><argument_list pos:start="233:13" pos:end="233:62">(<argument pos:start="233:14" pos:end="233:61"><expr pos:start="233:14" pos:end="233:61"><name pos:start="233:14" pos:end="233:35"><name pos:start="233:14" pos:end="233:28">clientHandshake</name><operator pos:start="233:29" pos:end="233:29">.</operator><name pos:start="233:30" pos:end="233:35">failed</name></name> <operator pos:start="233:37" pos:end="233:38">==</operator> <name pos:start="233:40" pos:end="233:61"><name pos:start="233:40" pos:end="233:43">data</name><operator pos:start="233:44" pos:end="233:45">-&gt;</operator><name pos:start="233:46" pos:end="233:61">expectClientFail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:63"><expr pos:start="235:5" pos:end="235:62"><call pos:start="235:5" pos:end="235:62"><name pos:start="235:5" pos:end="235:12">g_assert</name><argument_list pos:start="235:13" pos:end="235:62">(<argument pos:start="235:14" pos:end="235:61"><expr pos:start="235:14" pos:end="235:61"><name pos:start="235:14" pos:end="235:35"><name pos:start="235:14" pos:end="235:28">serverHandshake</name><operator pos:start="235:29" pos:end="235:29">.</operator><name pos:start="235:30" pos:end="235:35">failed</name></name> <operator pos:start="235:37" pos:end="235:38">==</operator> <name pos:start="235:40" pos:end="235:61"><name pos:start="235:40" pos:end="235:43">data</name><operator pos:start="235:44" pos:end="235:45">-&gt;</operator><name pos:start="235:46" pos:end="235:61">expectServerFail</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="239:5" pos:end="239:34"><expr pos:start="239:5" pos:end="239:33"><name pos:start="239:5" pos:end="239:8">test</name> <operator pos:start="239:10" pos:end="239:10">=</operator> <call pos:start="239:12" pos:end="239:33"><name pos:start="239:12" pos:end="239:31">qio_channel_test_new</name><argument_list pos:start="239:32" pos:end="239:33">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="245:61"><expr pos:start="241:5" pos:end="245:60"><call pos:start="241:5" pos:end="245:60"><name pos:start="241:5" pos:end="241:32">qio_channel_test_run_threads</name><argument_list pos:start="241:33" pos:end="245:60">(<argument pos:start="241:34" pos:end="241:37"><expr pos:start="241:34" pos:end="241:37"><name pos:start="241:34" pos:end="241:37">test</name></expr></argument>, <argument pos:start="241:40" pos:end="241:44"><expr pos:start="241:40" pos:end="241:44"><name pos:start="241:40" pos:end="241:44">false</name></expr></argument>,

                                 <argument pos:start="243:34" pos:end="243:59"><expr pos:start="243:34" pos:end="243:59"><call pos:start="243:34" pos:end="243:59"><name pos:start="243:34" pos:end="243:44">QIO_CHANNEL</name><argument_list pos:start="243:45" pos:end="243:59">(<argument pos:start="243:46" pos:end="243:58"><expr pos:start="243:46" pos:end="243:58"><name pos:start="243:46" pos:end="243:58">clientChanTLS</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="245:34" pos:end="245:59"><expr pos:start="245:34" pos:end="245:59"><call pos:start="245:34" pos:end="245:59"><name pos:start="245:34" pos:end="245:44">QIO_CHANNEL</name><argument_list pos:start="245:45" pos:end="245:59">(<argument pos:start="245:46" pos:end="245:58"><expr pos:start="245:46" pos:end="245:58"><name pos:start="245:46" pos:end="245:58">serverChanTLS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:36"><expr pos:start="247:5" pos:end="247:35"><call pos:start="247:5" pos:end="247:35"><name pos:start="247:5" pos:end="247:29">qio_channel_test_validate</name><argument_list pos:start="247:30" pos:end="247:35">(<argument pos:start="247:31" pos:end="247:34"><expr pos:start="247:31" pos:end="247:34"><name pos:start="247:31" pos:end="247:34">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="251:5" pos:end="251:34"><expr pos:start="251:5" pos:end="251:33"><name pos:start="251:5" pos:end="251:8">test</name> <operator pos:start="251:10" pos:end="251:10">=</operator> <call pos:start="251:12" pos:end="251:33"><name pos:start="251:12" pos:end="251:31">qio_channel_test_new</name><argument_list pos:start="251:32" pos:end="251:33">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="257:61"><expr pos:start="253:5" pos:end="257:60"><call pos:start="253:5" pos:end="257:60"><name pos:start="253:5" pos:end="253:32">qio_channel_test_run_threads</name><argument_list pos:start="253:33" pos:end="257:60">(<argument pos:start="253:34" pos:end="253:37"><expr pos:start="253:34" pos:end="253:37"><name pos:start="253:34" pos:end="253:37">test</name></expr></argument>, <argument pos:start="253:40" pos:end="253:43"><expr pos:start="253:40" pos:end="253:43"><name pos:start="253:40" pos:end="253:43">true</name></expr></argument>,

                                 <argument pos:start="255:34" pos:end="255:59"><expr pos:start="255:34" pos:end="255:59"><call pos:start="255:34" pos:end="255:59"><name pos:start="255:34" pos:end="255:44">QIO_CHANNEL</name><argument_list pos:start="255:45" pos:end="255:59">(<argument pos:start="255:46" pos:end="255:58"><expr pos:start="255:46" pos:end="255:58"><name pos:start="255:46" pos:end="255:58">clientChanTLS</name></expr></argument>)</argument_list></call></expr></argument>,

                                 <argument pos:start="257:34" pos:end="257:59"><expr pos:start="257:34" pos:end="257:59"><call pos:start="257:34" pos:end="257:59"><name pos:start="257:34" pos:end="257:44">QIO_CHANNEL</name><argument_list pos:start="257:45" pos:end="257:59">(<argument pos:start="257:46" pos:end="257:58"><expr pos:start="257:46" pos:end="257:58"><name pos:start="257:46" pos:end="257:58">serverChanTLS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:36"><expr pos:start="259:5" pos:end="259:35"><call pos:start="259:5" pos:end="259:35"><name pos:start="259:5" pos:end="259:29">qio_channel_test_validate</name><argument_list pos:start="259:30" pos:end="259:35">(<argument pos:start="259:31" pos:end="259:34"><expr pos:start="259:31" pos:end="259:34"><name pos:start="259:31" pos:end="259:34">test</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="263:5" pos:end="263:58"><name pos:start="263:5" pos:end="263:10">unlink</name><argument_list pos:start="263:11" pos:end="263:58">(<argument pos:start="263:12" pos:end="263:57">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro><empty_stmt pos:start="263:59" pos:end="263:59">;</empty_stmt>

    <macro pos:start="265:5" pos:end="265:62"><name pos:start="265:5" pos:end="265:10">unlink</name><argument_list pos:start="265:11" pos:end="265:62">(<argument pos:start="265:12" pos:end="265:61">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_CERT</argument>)</argument_list></macro><empty_stmt pos:start="265:63" pos:end="265:63">;</empty_stmt>

    <macro pos:start="267:5" pos:end="267:61"><name pos:start="267:5" pos:end="267:10">unlink</name><argument_list pos:start="267:11" pos:end="267:61">(<argument pos:start="267:12" pos:end="267:60">SERVER_CERT_DIR QCRYPTO_TLS_CREDS_X509_SERVER_KEY</argument>)</argument_list></macro><empty_stmt pos:start="267:62" pos:end="267:62">;</empty_stmt>



    <macro pos:start="271:5" pos:end="271:58"><name pos:start="271:5" pos:end="271:10">unlink</name><argument_list pos:start="271:11" pos:end="271:58">(<argument pos:start="271:12" pos:end="271:57">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CA_CERT</argument>)</argument_list></macro><empty_stmt pos:start="271:59" pos:end="271:59">;</empty_stmt>

    <macro pos:start="273:5" pos:end="273:62"><name pos:start="273:5" pos:end="273:10">unlink</name><argument_list pos:start="273:11" pos:end="273:62">(<argument pos:start="273:12" pos:end="273:61">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_CERT</argument>)</argument_list></macro><empty_stmt pos:start="273:63" pos:end="273:63">;</empty_stmt>

    <macro pos:start="275:5" pos:end="275:61"><name pos:start="275:5" pos:end="275:10">unlink</name><argument_list pos:start="275:11" pos:end="275:61">(<argument pos:start="275:12" pos:end="275:60">CLIENT_CERT_DIR QCRYPTO_TLS_CREDS_X509_CLIENT_KEY</argument>)</argument_list></macro><empty_stmt pos:start="275:62" pos:end="275:62">;</empty_stmt>



    <expr_stmt pos:start="279:5" pos:end="279:27"><expr pos:start="279:5" pos:end="279:26"><call pos:start="279:5" pos:end="279:26"><name pos:start="279:5" pos:end="279:9">rmdir</name><argument_list pos:start="279:10" pos:end="279:26">(<argument pos:start="279:11" pos:end="279:25"><expr pos:start="279:11" pos:end="279:25"><name pos:start="279:11" pos:end="279:25">CLIENT_CERT_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:27"><expr pos:start="281:5" pos:end="281:26"><call pos:start="281:5" pos:end="281:26"><name pos:start="281:5" pos:end="281:9">rmdir</name><argument_list pos:start="281:10" pos:end="281:26">(<argument pos:start="281:11" pos:end="281:25"><expr pos:start="281:11" pos:end="281:25"><name pos:start="281:11" pos:end="281:25">SERVER_CERT_DIR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="285:5" pos:end="285:41"><expr pos:start="285:5" pos:end="285:40"><call pos:start="285:5" pos:end="285:40"><name pos:start="285:5" pos:end="285:19">object_unparent</name><argument_list pos:start="285:20" pos:end="285:40">(<argument pos:start="285:21" pos:end="285:39"><expr pos:start="285:21" pos:end="285:39"><call pos:start="285:21" pos:end="285:39"><name pos:start="285:21" pos:end="285:26">OBJECT</name><argument_list pos:start="285:27" pos:end="285:39">(<argument pos:start="285:28" pos:end="285:38"><expr pos:start="285:28" pos:end="285:38"><name pos:start="285:28" pos:end="285:38">serverCreds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="287:5" pos:end="287:41"><expr pos:start="287:5" pos:end="287:40"><call pos:start="287:5" pos:end="287:40"><name pos:start="287:5" pos:end="287:19">object_unparent</name><argument_list pos:start="287:20" pos:end="287:40">(<argument pos:start="287:21" pos:end="287:39"><expr pos:start="287:21" pos:end="287:39"><call pos:start="287:21" pos:end="287:39"><name pos:start="287:21" pos:end="287:26">OBJECT</name><argument_list pos:start="287:27" pos:end="287:39">(<argument pos:start="287:28" pos:end="287:38"><expr pos:start="287:28" pos:end="287:38"><name pos:start="287:28" pos:end="287:38">clientCreds</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="291:5" pos:end="291:40"><expr pos:start="291:5" pos:end="291:39"><call pos:start="291:5" pos:end="291:39"><name pos:start="291:5" pos:end="291:16">object_unref</name><argument_list pos:start="291:17" pos:end="291:39">(<argument pos:start="291:18" pos:end="291:38"><expr pos:start="291:18" pos:end="291:38"><call pos:start="291:18" pos:end="291:38"><name pos:start="291:18" pos:end="291:23">OBJECT</name><argument_list pos:start="291:24" pos:end="291:38">(<argument pos:start="291:25" pos:end="291:37"><expr pos:start="291:25" pos:end="291:37"><name pos:start="291:25" pos:end="291:37">serverChanTLS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="293:5" pos:end="293:40"><expr pos:start="293:5" pos:end="293:39"><call pos:start="293:5" pos:end="293:39"><name pos:start="293:5" pos:end="293:16">object_unref</name><argument_list pos:start="293:17" pos:end="293:39">(<argument pos:start="293:18" pos:end="293:38"><expr pos:start="293:18" pos:end="293:38"><call pos:start="293:18" pos:end="293:38"><name pos:start="293:18" pos:end="293:23">OBJECT</name><argument_list pos:start="293:24" pos:end="293:38">(<argument pos:start="293:25" pos:end="293:37"><expr pos:start="293:25" pos:end="293:37"><name pos:start="293:25" pos:end="293:37">clientChanTLS</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="297:5" pos:end="297:41"><expr pos:start="297:5" pos:end="297:40"><call pos:start="297:5" pos:end="297:40"><name pos:start="297:5" pos:end="297:16">object_unref</name><argument_list pos:start="297:17" pos:end="297:40">(<argument pos:start="297:18" pos:end="297:39"><expr pos:start="297:18" pos:end="297:39"><call pos:start="297:18" pos:end="297:39"><name pos:start="297:18" pos:end="297:23">OBJECT</name><argument_list pos:start="297:24" pos:end="297:39">(<argument pos:start="297:25" pos:end="297:38"><expr pos:start="297:25" pos:end="297:38"><name pos:start="297:25" pos:end="297:38">serverChanSock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="299:5" pos:end="299:41"><expr pos:start="299:5" pos:end="299:40"><call pos:start="299:5" pos:end="299:40"><name pos:start="299:5" pos:end="299:16">object_unref</name><argument_list pos:start="299:17" pos:end="299:40">(<argument pos:start="299:18" pos:end="299:39"><expr pos:start="299:18" pos:end="299:39"><call pos:start="299:18" pos:end="299:39"><name pos:start="299:18" pos:end="299:23">OBJECT</name><argument_list pos:start="299:24" pos:end="299:39">(<argument pos:start="299:25" pos:end="299:38"><expr pos:start="299:25" pos:end="299:38"><name pos:start="299:25" pos:end="299:38">clientChanSock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="303:5" pos:end="303:22"><expr pos:start="303:5" pos:end="303:21"><call pos:start="303:5" pos:end="303:21"><name pos:start="303:5" pos:end="303:9">close</name><argument_list pos:start="303:10" pos:end="303:21">(<argument pos:start="303:11" pos:end="303:20"><expr pos:start="303:11" pos:end="303:20"><name pos:start="303:11" pos:end="303:20"><name pos:start="303:11" pos:end="303:17">channel</name><index pos:start="303:18" pos:end="303:20">[<expr pos:start="303:19" pos:end="303:19"><literal type="number" pos:start="303:19" pos:end="303:19">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="305:5" pos:end="305:22"><expr pos:start="305:5" pos:end="305:21"><call pos:start="305:5" pos:end="305:21"><name pos:start="305:5" pos:end="305:9">close</name><argument_list pos:start="305:10" pos:end="305:21">(<argument pos:start="305:11" pos:end="305:20"><expr pos:start="305:11" pos:end="305:20"><name pos:start="305:11" pos:end="305:20"><name pos:start="305:11" pos:end="305:17">channel</name><index pos:start="305:18" pos:end="305:20">[<expr pos:start="305:19" pos:end="305:19"><literal type="number" pos:start="305:19" pos:end="305:19">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
