<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14672.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">gen_neon_zip</name><parameter_list pos:start="1:24" pos:end="1:56">(<parameter pos:start="1:25" pos:end="1:30"><decl pos:start="1:25" pos:end="1:30"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:27">int</name></type> <name pos:start="1:29" pos:end="1:30">rd</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:38"><decl pos:start="1:33" pos:end="1:38"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:35">int</name></type> <name pos:start="1:37" pos:end="1:38">rm</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:48">size</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:55"><decl pos:start="1:51" pos:end="1:55"><type pos:start="1:51" pos:end="1:55"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:55">q</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="75:1">{<block_content pos:start="5:5" pos:end="73:13">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">TCGv</name></type> <name pos:start="5:10" pos:end="5:12">tmp</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:8"/><name pos:start="5:15" pos:end="5:18">tmp2</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="11:5"><if pos:start="7:5" pos:end="11:5">if <condition pos:start="7:8" pos:end="7:39">(<expr pos:start="7:9" pos:end="7:38"><name pos:start="7:9" pos:end="7:12">size</name> <operator pos:start="7:14" pos:end="7:15">==</operator> <literal type="number" pos:start="7:17" pos:end="7:17">3</literal> <operator pos:start="7:19" pos:end="7:20">||</operator> <operator pos:start="7:22" pos:end="7:22">(</operator><operator pos:start="7:23" pos:end="7:23">!</operator><name pos:start="7:24" pos:end="7:24">q</name> <operator pos:start="7:26" pos:end="7:27">&amp;&amp;</operator> <name pos:start="7:29" pos:end="7:32">size</name> <operator pos:start="7:34" pos:end="7:35">==</operator> <literal type="number" pos:start="7:37" pos:end="7:37">2</literal><operator pos:start="7:38" pos:end="7:38">)</operator></expr>)</condition> <block pos:start="7:41" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:17">

        <return pos:start="9:9" pos:end="9:17">return <expr pos:start="9:16" pos:end="9:16"><literal type="number" pos:start="9:16" pos:end="9:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:7">tmp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:27"><name pos:start="13:11" pos:end="13:23">tcg_const_i32</name><argument_list pos:start="13:24" pos:end="13:27">(<argument pos:start="13:25" pos:end="13:26"><expr pos:start="13:25" pos:end="13:26"><name pos:start="13:25" pos:end="13:26">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:8">tmp2</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="15:28"><name pos:start="15:12" pos:end="15:24">tcg_const_i32</name><argument_list pos:start="15:25" pos:end="15:28">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="67:5"><if pos:start="17:5" pos:end="45:5">if <condition pos:start="17:8" pos:end="17:10">(<expr pos:start="17:9" pos:end="17:9"><name pos:start="17:9" pos:end="17:9">q</name></expr>)</condition> <block pos:start="17:12" pos:end="45:5">{<block_content pos:start="19:9" pos:end="43:9">

        <switch pos:start="19:9" pos:end="43:9">switch <condition pos:start="19:16" pos:end="19:21">(<expr pos:start="19:17" pos:end="19:20"><name pos:start="19:17" pos:end="19:20">size</name></expr>)</condition> <block pos:start="19:23" pos:end="43:9">{<block_content pos:start="21:9" pos:end="41:20">

        <case pos:start="21:9" pos:end="21:15">case <expr pos:start="21:14" pos:end="21:14"><literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:45"><expr pos:start="23:13" pos:end="23:44"><call pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:33">gen_helper_neon_qzip8</name><argument_list pos:start="23:34" pos:end="23:44">(<argument pos:start="23:35" pos:end="23:37"><expr pos:start="23:35" pos:end="23:37"><name pos:start="23:35" pos:end="23:37">tmp</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:15">case <expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:46"><expr pos:start="29:13" pos:end="29:45"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:34">gen_helper_neon_qzip16</name><argument_list pos:start="29:35" pos:end="29:45">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">tmp</name></expr></argument>, <argument pos:start="29:41" pos:end="29:44"><expr pos:start="29:41" pos:end="29:44"><name pos:start="29:41" pos:end="29:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:15">case <expr pos:start="33:14" pos:end="33:14"><literal type="number" pos:start="33:14" pos:end="33:14">2</literal></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><call pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:34">gen_helper_neon_qzip32</name><argument_list pos:start="35:35" pos:end="35:45">(<argument pos:start="35:36" pos:end="35:38"><expr pos:start="35:36" pos:end="35:38"><name pos:start="35:36" pos:end="35:38">tmp</name></expr></argument>, <argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <default pos:start="39:9" pos:end="39:16">default:</default>

            <expr_stmt pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:19"><call pos:start="41:13" pos:end="41:19"><name pos:start="41:13" pos:end="41:17">abort</name><argument_list pos:start="41:18" pos:end="41:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="67:5">else <block pos:start="45:12" pos:end="67:5">{<block_content pos:start="47:9" pos:end="65:9">

        <switch pos:start="47:9" pos:end="65:9">switch <condition pos:start="47:16" pos:end="47:21">(<expr pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">size</name></expr>)</condition> <block pos:start="47:23" pos:end="65:9">{<block_content pos:start="49:9" pos:end="63:20">

        <case pos:start="49:9" pos:end="49:15">case <expr pos:start="49:14" pos:end="49:14"><literal type="number" pos:start="49:14" pos:end="49:14">0</literal></expr>:</case>

            <expr_stmt pos:start="51:13" pos:end="51:44"><expr pos:start="51:13" pos:end="51:43"><call pos:start="51:13" pos:end="51:43"><name pos:start="51:13" pos:end="51:32">gen_helper_neon_zip8</name><argument_list pos:start="51:33" pos:end="51:43">(<argument pos:start="51:34" pos:end="51:36"><expr pos:start="51:34" pos:end="51:36"><name pos:start="51:34" pos:end="51:36">tmp</name></expr></argument>, <argument pos:start="51:39" pos:end="51:42"><expr pos:start="51:39" pos:end="51:42"><name pos:start="51:39" pos:end="51:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="53:13" pos:end="53:18">break;</break>

        <case pos:start="55:9" pos:end="55:15">case <expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">1</literal></expr>:</case>

            <expr_stmt pos:start="57:13" pos:end="57:45"><expr pos:start="57:13" pos:end="57:44"><call pos:start="57:13" pos:end="57:44"><name pos:start="57:13" pos:end="57:33">gen_helper_neon_zip16</name><argument_list pos:start="57:34" pos:end="57:44">(<argument pos:start="57:35" pos:end="57:37"><expr pos:start="57:35" pos:end="57:37"><name pos:start="57:35" pos:end="57:37">tmp</name></expr></argument>, <argument pos:start="57:40" pos:end="57:43"><expr pos:start="57:40" pos:end="57:43"><name pos:start="57:40" pos:end="57:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="59:13" pos:end="59:18">break;</break>

        <default pos:start="61:9" pos:end="61:16">default:</default>

            <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><call pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:17">abort</name><argument_list pos:start="63:18" pos:end="63:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:27"><expr pos:start="69:5" pos:end="69:26"><call pos:start="69:5" pos:end="69:26"><name pos:start="69:5" pos:end="69:21">tcg_temp_free_i32</name><argument_list pos:start="69:22" pos:end="69:26">(<argument pos:start="69:23" pos:end="69:25"><expr pos:start="69:23" pos:end="69:25"><name pos:start="69:23" pos:end="69:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:21">tcg_temp_free_i32</name><argument_list pos:start="71:22" pos:end="71:27">(<argument pos:start="71:23" pos:end="71:26"><expr pos:start="71:23" pos:end="71:26"><name pos:start="71:23" pos:end="71:26">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
