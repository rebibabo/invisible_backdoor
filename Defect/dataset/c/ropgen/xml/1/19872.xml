<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19872.c" pos:tabs="8"><function pos:start="1:1" pos:end="311:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:22">avresample_convert</name><parameter_list pos:start="1:23" pos:end="5:57">(<parameter pos:start="1:24" pos:end="1:50"><decl pos:start="1:24" pos:end="1:50"><type pos:start="1:24" pos:end="1:50"><name pos:start="1:24" pos:end="1:45">AVAudioResampleContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">avr</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">output</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:26">int</name></type> <name pos:start="3:28" pos:end="3:41">out_plane_size</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:58"><decl pos:start="3:44" pos:end="3:58"><type pos:start="3:44" pos:end="3:58"><name pos:start="3:44" pos:end="3:46">int</name></type> <name pos:start="3:48" pos:end="3:58">out_samples</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:72"><decl pos:start="3:61" pos:end="3:72"><type pos:start="3:61" pos:end="3:72"><name pos:start="3:61" pos:end="3:64">void</name> <modifier pos:start="3:66" pos:end="3:66">*</modifier><modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:72">input</name></decl></parameter>,

                       <parameter pos:start="5:24" pos:end="5:40"><decl pos:start="5:24" pos:end="5:40"><type pos:start="5:24" pos:end="5:40"><name pos:start="5:24" pos:end="5:26">int</name></type> <name pos:start="5:28" pos:end="5:40">in_plane_size</name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:56"><decl pos:start="5:43" pos:end="5:56"><type pos:start="5:43" pos:end="5:56"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:56">in_samples</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="311:1">{<block_content pos:start="9:5" pos:end="309:71">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:13">AudioData</name></type> <name pos:start="9:15" pos:end="9:26">input_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">AudioData</name></type> <name pos:start="11:15" pos:end="11:27">output_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:15"><name pos:start="13:5" pos:end="13:13">AudioData</name> <modifier pos:start="13:15" pos:end="13:15">*</modifier></type><name pos:start="13:16" pos:end="13:29">current_buffer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:32">/* reset internal buffers */</comment>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:11">avr</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:22">in_buffer</name></name></expr>)</condition> <block pos:start="21:25" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:71">

        <expr_stmt pos:start="23:9" pos:end="23:39"><expr pos:start="23:9" pos:end="23:38"><name pos:start="23:9" pos:end="23:34"><name pos:start="23:9" pos:end="23:11">avr</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:22">in_buffer</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:34">nb_samples</name></name> <operator pos:start="23:36" pos:end="23:36">=</operator> <literal type="number" pos:start="23:38" pos:end="23:38">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="27:71"><expr pos:start="25:9" pos:end="27:70"><call pos:start="25:9" pos:end="27:70"><name pos:start="25:9" pos:end="25:34">ff_audio_data_set_channels</name><argument_list pos:start="25:35" pos:end="27:70">(<argument pos:start="25:36" pos:end="25:49"><expr pos:start="25:36" pos:end="25:49"><name pos:start="25:36" pos:end="25:49"><name pos:start="25:36" pos:end="25:38">avr</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:49">in_buffer</name></name></expr></argument>,

                                   <argument pos:start="27:36" pos:end="27:69"><expr pos:start="27:36" pos:end="27:69"><name pos:start="27:36" pos:end="27:69"><name pos:start="27:36" pos:end="27:38">avr</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:49">in_buffer</name><operator pos:start="27:50" pos:end="27:51">-&gt;</operator><name pos:start="27:52" pos:end="27:69">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:33">(<expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:11">avr</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:32">resample_out_buffer</name></name></expr>)</condition> <block pos:start="31:35" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:81">

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:11">avr</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:32">resample_out_buffer</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:44">nb_samples</name></name> <operator pos:start="33:46" pos:end="33:46">=</operator> <literal type="number" pos:start="33:48" pos:end="33:48">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="37:81"><expr pos:start="35:9" pos:end="37:80"><call pos:start="35:9" pos:end="37:80"><name pos:start="35:9" pos:end="35:34">ff_audio_data_set_channels</name><argument_list pos:start="35:35" pos:end="37:80">(<argument pos:start="35:36" pos:end="35:59"><expr pos:start="35:36" pos:end="35:59"><name pos:start="35:36" pos:end="35:59"><name pos:start="35:36" pos:end="35:38">avr</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:59">resample_out_buffer</name></name></expr></argument>,

                                   <argument pos:start="37:36" pos:end="37:79"><expr pos:start="37:36" pos:end="37:79"><name pos:start="37:36" pos:end="37:79"><name pos:start="37:36" pos:end="37:38">avr</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:59">resample_out_buffer</name><operator pos:start="37:60" pos:end="37:61">-&gt;</operator><name pos:start="37:62" pos:end="37:79">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:24">(<expr pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">avr</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">out_buffer</name></name></expr>)</condition> <block pos:start="41:26" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:72">

        <expr_stmt pos:start="43:9" pos:end="43:40"><expr pos:start="43:9" pos:end="43:39"><name pos:start="43:9" pos:end="43:35"><name pos:start="43:9" pos:end="43:11">avr</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:23">out_buffer</name><operator pos:start="43:24" pos:end="43:25">-&gt;</operator><name pos:start="43:26" pos:end="43:35">nb_samples</name></name> <operator pos:start="43:37" pos:end="43:37">=</operator> <literal type="number" pos:start="43:39" pos:end="43:39">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:72"><expr pos:start="45:9" pos:end="47:71"><call pos:start="45:9" pos:end="47:71"><name pos:start="45:9" pos:end="45:34">ff_audio_data_set_channels</name><argument_list pos:start="45:35" pos:end="47:71">(<argument pos:start="45:36" pos:end="45:50"><expr pos:start="45:36" pos:end="45:50"><name pos:start="45:36" pos:end="45:50"><name pos:start="45:36" pos:end="45:38">avr</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:50">out_buffer</name></name></expr></argument>,

                                   <argument pos:start="47:36" pos:end="47:70"><expr pos:start="47:36" pos:end="47:70"><name pos:start="47:36" pos:end="47:70"><name pos:start="47:36" pos:end="47:38">avr</name><operator pos:start="47:39" pos:end="47:40">-&gt;</operator><name pos:start="47:41" pos:end="47:50">out_buffer</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:70">allocated_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><call pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:11">av_dlog</name><argument_list pos:start="53:12" pos:end="53:40">(<argument pos:start="53:13" pos:end="53:15"><expr pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">avr</name></expr></argument>, <argument pos:start="53:18" pos:end="53:39"><expr pos:start="53:18" pos:end="53:39"><literal type="string" pos:start="53:18" pos:end="53:39">"[start conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:51">/* initialize output_buffer with output data */</comment>

    <if_stmt pos:start="59:5" pos:end="73:5"><if pos:start="59:5" pos:end="73:5">if <condition pos:start="59:8" pos:end="59:15">(<expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:14">output</name></expr>)</condition> <block pos:start="59:17" pos:end="73:5">{<block_content pos:start="61:9" pos:end="71:37">

        <expr_stmt pos:start="61:9" pos:end="65:67"><expr pos:start="61:9" pos:end="65:66"><name pos:start="61:9" pos:end="61:11">ret</name> <operator pos:start="61:13" pos:end="61:13">=</operator> <call pos:start="61:15" pos:end="65:66"><name pos:start="61:15" pos:end="61:32">ff_audio_data_init</name><argument_list pos:start="61:33" pos:end="65:66">(<argument pos:start="61:34" pos:end="61:47"><expr pos:start="61:34" pos:end="61:47"><operator pos:start="61:34" pos:end="61:34">&amp;</operator><name pos:start="61:35" pos:end="61:47">output_buffer</name></expr></argument>, <argument pos:start="61:50" pos:end="61:55"><expr pos:start="61:50" pos:end="61:55"><name pos:start="61:50" pos:end="61:55">output</name></expr></argument>, <argument pos:start="61:58" pos:end="61:71"><expr pos:start="61:58" pos:end="61:71"><name pos:start="61:58" pos:end="61:71">out_plane_size</name></expr></argument>,

                                 <argument pos:start="63:34" pos:end="63:50"><expr pos:start="63:34" pos:end="63:50"><name pos:start="63:34" pos:end="63:50"><name pos:start="63:34" pos:end="63:36">avr</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:50">out_channels</name></name></expr></argument>, <argument pos:start="63:53" pos:end="63:63"><expr pos:start="63:53" pos:end="63:63"><name pos:start="63:53" pos:end="63:63">out_samples</name></expr></argument>,

                                 <argument pos:start="65:34" pos:end="65:52"><expr pos:start="65:34" pos:end="65:52"><name pos:start="65:34" pos:end="65:52"><name pos:start="65:34" pos:end="65:36">avr</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:52">out_sample_fmt</name></name></expr></argument>, <argument pos:start="65:55" pos:end="65:55"><expr pos:start="65:55" pos:end="65:55"><literal type="number" pos:start="65:55" pos:end="65:55">0</literal></expr></argument>, <argument pos:start="65:58" pos:end="65:65"><expr pos:start="65:58" pos:end="65:65"><literal type="string" pos:start="65:58" pos:end="65:65">"output"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="69:23"><if pos:start="67:9" pos:end="69:23">if <condition pos:start="67:12" pos:end="67:20">(<expr pos:start="67:13" pos:end="67:19"><name pos:start="67:13" pos:end="67:15">ret</name> <operator pos:start="67:17" pos:end="67:17">&lt;</operator> <literal type="number" pos:start="67:19" pos:end="67:19">0</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:23"><block_content pos:start="69:13" pos:end="69:23">

            <return pos:start="69:13" pos:end="69:23">return <expr pos:start="69:20" pos:end="69:22"><name pos:start="69:20" pos:end="69:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:32"><name pos:start="71:9" pos:end="71:21">output_buffer</name><operator pos:start="71:22" pos:end="71:22">.</operator><name pos:start="71:23" pos:end="71:32">nb_samples</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <literal type="number" pos:start="71:36" pos:end="71:36">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="181:5"><if pos:start="77:5" pos:end="169:5">if <condition pos:start="77:8" pos:end="77:14">(<expr pos:start="77:9" pos:end="77:13"><name pos:start="77:9" pos:end="77:13">input</name></expr>)</condition> <block pos:start="77:16" pos:end="169:5">{<block_content pos:start="81:9" pos:end="167:9">

        <comment type="block" pos:start="79:9" pos:end="79:53">/* initialize input_buffer with input data */</comment>

        <expr_stmt pos:start="81:9" pos:end="85:65"><expr pos:start="81:9" pos:end="85:64"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="85:64"><name pos:start="81:15" pos:end="81:32">ff_audio_data_init</name><argument_list pos:start="81:33" pos:end="85:64">(<argument pos:start="81:34" pos:end="81:46"><expr pos:start="81:34" pos:end="81:46"><operator pos:start="81:34" pos:end="81:34">&amp;</operator><name pos:start="81:35" pos:end="81:46">input_buffer</name></expr></argument>, <argument pos:start="81:49" pos:end="81:53"><expr pos:start="81:49" pos:end="81:53"><name pos:start="81:49" pos:end="81:53">input</name></expr></argument>, <argument pos:start="81:56" pos:end="81:68"><expr pos:start="81:56" pos:end="81:68"><name pos:start="81:56" pos:end="81:68">in_plane_size</name></expr></argument>,

                                 <argument pos:start="83:34" pos:end="83:49"><expr pos:start="83:34" pos:end="83:49"><name pos:start="83:34" pos:end="83:49"><name pos:start="83:34" pos:end="83:36">avr</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:49">in_channels</name></name></expr></argument>, <argument pos:start="83:52" pos:end="83:61"><expr pos:start="83:52" pos:end="83:61"><name pos:start="83:52" pos:end="83:61">in_samples</name></expr></argument>,

                                 <argument pos:start="85:34" pos:end="85:51"><expr pos:start="85:34" pos:end="85:51"><name pos:start="85:34" pos:end="85:51"><name pos:start="85:34" pos:end="85:36">avr</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:51">in_sample_fmt</name></name></expr></argument>, <argument pos:start="85:54" pos:end="85:54"><expr pos:start="85:54" pos:end="85:54"><literal type="number" pos:start="85:54" pos:end="85:54">1</literal></expr></argument>, <argument pos:start="85:57" pos:end="85:63"><expr pos:start="85:57" pos:end="85:63"><literal type="string" pos:start="85:57" pos:end="85:63">"input"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:23"><if pos:start="87:9" pos:end="89:23">if <condition pos:start="87:12" pos:end="87:20">(<expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:15">ret</name> <operator pos:start="87:17" pos:end="87:17">&lt;</operator> <literal type="number" pos:start="87:19" pos:end="87:19">0</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:23"><block_content pos:start="89:13" pos:end="89:23">

            <return pos:start="89:13" pos:end="89:23">return <expr pos:start="89:20" pos:end="89:22"><name pos:start="89:20" pos:end="89:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:39"><expr pos:start="91:9" pos:end="91:38"><name pos:start="91:9" pos:end="91:22">current_buffer</name> <operator pos:start="91:24" pos:end="91:24">=</operator> <operator pos:start="91:26" pos:end="91:26">&amp;</operator><name pos:start="91:27" pos:end="91:38">input_buffer</name></expr>;</expr_stmt>



        <if_stmt pos:start="95:9" pos:end="167:9"><if pos:start="95:9" pos:end="113:9">if <condition pos:start="95:12" pos:end="97:76">(<expr pos:start="95:13" pos:end="97:75"><name pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:15">avr</name><operator pos:start="95:16" pos:end="95:17">-&gt;</operator><name pos:start="95:18" pos:end="95:29">upmix_needed</name></name> <operator pos:start="95:31" pos:end="95:32">&amp;&amp;</operator> <operator pos:start="95:34" pos:end="95:34">!</operator><name pos:start="95:35" pos:end="95:56"><name pos:start="95:35" pos:end="95:37">avr</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:56">in_convert_needed</name></name> <operator pos:start="95:58" pos:end="95:59">&amp;&amp;</operator> <operator pos:start="95:61" pos:end="95:61">!</operator><name pos:start="95:62" pos:end="95:81"><name pos:start="95:62" pos:end="95:64">avr</name><operator pos:start="95:65" pos:end="95:66">-&gt;</operator><name pos:start="95:67" pos:end="95:81">resample_needed</name></name> <operator pos:start="95:83" pos:end="95:84">&amp;&amp;</operator>

            <operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:36"><name pos:start="97:14" pos:end="97:16">avr</name><operator pos:start="97:17" pos:end="97:18">-&gt;</operator><name pos:start="97:19" pos:end="97:36">out_convert_needed</name></name> <operator pos:start="97:38" pos:end="97:39">&amp;&amp;</operator> <name pos:start="97:41" pos:end="97:46">output</name> <operator pos:start="97:48" pos:end="97:49">&amp;&amp;</operator> <name pos:start="97:51" pos:end="97:61">out_samples</name> <operator pos:start="97:63" pos:end="97:64">&gt;=</operator> <name pos:start="97:66" pos:end="97:75">in_samples</name></expr>)</condition> <block pos:start="97:78" pos:end="113:9">{<block_content pos:start="103:13" pos:end="111:44">

            <comment type="block" pos:start="99:13" pos:end="101:47">/* in some rare cases we can copy input to output and upmix

               directly in the output buffer */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:72"><expr pos:start="103:13" pos:end="103:71"><call pos:start="103:13" pos:end="103:71"><name pos:start="103:13" pos:end="103:19">av_dlog</name><argument_list pos:start="103:20" pos:end="103:71">(<argument pos:start="103:21" pos:end="103:23"><expr pos:start="103:21" pos:end="103:23"><name pos:start="103:21" pos:end="103:23">avr</name></expr></argument>, <argument pos:start="103:26" pos:end="103:48"><expr pos:start="103:26" pos:end="103:48"><literal type="string" pos:start="103:26" pos:end="103:48">"[copy] %s to output\n"</literal></expr></argument>, <argument pos:start="103:51" pos:end="103:70"><expr pos:start="103:51" pos:end="103:70"><name pos:start="103:51" pos:end="103:70"><name pos:start="103:51" pos:end="103:64">current_buffer</name><operator pos:start="103:65" pos:end="103:66">-&gt;</operator><name pos:start="103:67" pos:end="103:70">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:69"><expr pos:start="105:13" pos:end="105:68"><name pos:start="105:13" pos:end="105:15">ret</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <call pos:start="105:19" pos:end="105:68"><name pos:start="105:19" pos:end="105:36">ff_audio_data_copy</name><argument_list pos:start="105:37" pos:end="105:68">(<argument pos:start="105:38" pos:end="105:51"><expr pos:start="105:38" pos:end="105:51"><operator pos:start="105:38" pos:end="105:38">&amp;</operator><name pos:start="105:39" pos:end="105:51">output_buffer</name></expr></argument>, <argument pos:start="105:54" pos:end="105:67"><expr pos:start="105:54" pos:end="105:67"><name pos:start="105:54" pos:end="105:67">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:27"><if pos:start="107:13" pos:end="109:27">if <condition pos:start="107:16" pos:end="107:24">(<expr pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:19">ret</name> <operator pos:start="107:21" pos:end="107:21">&lt;</operator> <literal type="number" pos:start="107:23" pos:end="107:23">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:27"><block_content pos:start="109:17" pos:end="109:27">

                <return pos:start="109:17" pos:end="109:27">return <expr pos:start="109:24" pos:end="109:26"><name pos:start="109:24" pos:end="109:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:44"><expr pos:start="111:13" pos:end="111:43"><name pos:start="111:13" pos:end="111:26">current_buffer</name> <operator pos:start="111:28" pos:end="111:28">=</operator> <operator pos:start="111:30" pos:end="111:30">&amp;</operator><name pos:start="111:31" pos:end="111:43">output_buffer</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="113:11" pos:end="167:9">else if <condition pos:start="113:19" pos:end="113:64">(<expr pos:start="113:20" pos:end="113:63"><name pos:start="113:20" pos:end="113:37"><name pos:start="113:20" pos:end="113:22">avr</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:37">mixing_needed</name></name> <operator pos:start="113:39" pos:end="113:40">||</operator> <name pos:start="113:42" pos:end="113:63"><name pos:start="113:42" pos:end="113:44">avr</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:63">in_convert_needed</name></name></expr>)</condition> <block pos:start="113:66" pos:end="167:9">{<block_content pos:start="119:13" pos:end="165:44">

            <comment type="block" pos:start="115:13" pos:end="117:28">/* if needed, copy or convert input to in_buffer, and downmix if

               applicable */</comment>

            <if_stmt pos:start="119:13" pos:end="149:13"><if pos:start="119:13" pos:end="139:13">if <condition pos:start="119:16" pos:end="119:39">(<expr pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:38"><name pos:start="119:17" pos:end="119:19">avr</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:38">in_convert_needed</name></name></expr>)</condition> <block pos:start="119:41" pos:end="139:13">{<block_content pos:start="121:17" pos:end="137:31">

                <expr_stmt pos:start="121:17" pos:end="123:72"><expr pos:start="121:17" pos:end="123:71"><name pos:start="121:17" pos:end="121:19">ret</name> <operator pos:start="121:21" pos:end="121:21">=</operator> <call pos:start="121:23" pos:end="123:71"><name pos:start="121:23" pos:end="121:43">ff_audio_data_realloc</name><argument_list pos:start="121:44" pos:end="123:71">(<argument pos:start="121:45" pos:end="121:58"><expr pos:start="121:45" pos:end="121:58"><name pos:start="121:45" pos:end="121:58"><name pos:start="121:45" pos:end="121:47">avr</name><operator pos:start="121:48" pos:end="121:49">-&gt;</operator><name pos:start="121:50" pos:end="121:58">in_buffer</name></name></expr></argument>,

                                            <argument pos:start="123:45" pos:end="123:70"><expr pos:start="123:45" pos:end="123:70"><name pos:start="123:45" pos:end="123:70"><name pos:start="123:45" pos:end="123:58">current_buffer</name><operator pos:start="123:59" pos:end="123:60">-&gt;</operator><name pos:start="123:61" pos:end="123:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="125:17" pos:end="127:31"><if pos:start="125:17" pos:end="127:31">if <condition pos:start="125:20" pos:end="125:28">(<expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:23">ret</name> <operator pos:start="125:25" pos:end="125:25">&lt;</operator> <literal type="number" pos:start="125:27" pos:end="125:27">0</literal></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:31"><block_content pos:start="127:21" pos:end="127:31">

                    <return pos:start="127:21" pos:end="127:31">return <expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:82"><expr pos:start="129:17" pos:end="129:81"><call pos:start="129:17" pos:end="129:81"><name pos:start="129:17" pos:end="129:23">av_dlog</name><argument_list pos:start="129:24" pos:end="129:81">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">avr</name></expr></argument>, <argument pos:start="129:30" pos:end="129:58"><expr pos:start="129:30" pos:end="129:58"><literal type="string" pos:start="129:30" pos:end="129:58">"[convert] %s to in_buffer\n"</literal></expr></argument>, <argument pos:start="129:61" pos:end="129:80"><expr pos:start="129:61" pos:end="129:80"><name pos:start="129:61" pos:end="129:80"><name pos:start="129:61" pos:end="129:74">current_buffer</name><operator pos:start="129:75" pos:end="129:76">-&gt;</operator><name pos:start="129:77" pos:end="129:80">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="131:17" pos:end="133:67"><expr pos:start="131:17" pos:end="133:66"><name pos:start="131:17" pos:end="131:19">ret</name> <operator pos:start="131:21" pos:end="131:21">=</operator> <call pos:start="131:23" pos:end="133:66"><name pos:start="131:23" pos:end="131:38">ff_audio_convert</name><argument_list pos:start="131:39" pos:end="133:66">(<argument pos:start="131:40" pos:end="131:49"><expr pos:start="131:40" pos:end="131:49"><name pos:start="131:40" pos:end="131:49"><name pos:start="131:40" pos:end="131:42">avr</name><operator pos:start="131:43" pos:end="131:44">-&gt;</operator><name pos:start="131:45" pos:end="131:49">ac_in</name></name></expr></argument>, <argument pos:start="131:52" pos:end="131:65"><expr pos:start="131:52" pos:end="131:65"><name pos:start="131:52" pos:end="131:65"><name pos:start="131:52" pos:end="131:54">avr</name><operator pos:start="131:55" pos:end="131:56">-&gt;</operator><name pos:start="131:57" pos:end="131:65">in_buffer</name></name></expr></argument>, <argument pos:start="131:68" pos:end="131:81"><expr pos:start="131:68" pos:end="131:81"><name pos:start="131:68" pos:end="131:81">current_buffer</name></expr></argument>,

                                       <argument pos:start="133:40" pos:end="133:65"><expr pos:start="133:40" pos:end="133:65"><name pos:start="133:40" pos:end="133:65"><name pos:start="133:40" pos:end="133:53">current_buffer</name><operator pos:start="133:54" pos:end="133:55">-&gt;</operator><name pos:start="133:56" pos:end="133:65">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="135:17" pos:end="137:31"><if pos:start="135:17" pos:end="137:31">if <condition pos:start="135:20" pos:end="135:28">(<expr pos:start="135:21" pos:end="135:27"><name pos:start="135:21" pos:end="135:23">ret</name> <operator pos:start="135:25" pos:end="135:25">&lt;</operator> <literal type="number" pos:start="135:27" pos:end="135:27">0</literal></expr>)</condition><block type="pseudo" pos:start="137:21" pos:end="137:31"><block_content pos:start="137:21" pos:end="137:31">

                    <return pos:start="137:21" pos:end="137:31">return <expr pos:start="137:28" pos:end="137:30"><name pos:start="137:28" pos:end="137:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="139:15" pos:end="149:13">else <block pos:start="139:20" pos:end="149:13">{<block_content pos:start="141:17" pos:end="147:31">

                <expr_stmt pos:start="141:17" pos:end="141:79"><expr pos:start="141:17" pos:end="141:78"><call pos:start="141:17" pos:end="141:78"><name pos:start="141:17" pos:end="141:23">av_dlog</name><argument_list pos:start="141:24" pos:end="141:78">(<argument pos:start="141:25" pos:end="141:27"><expr pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">avr</name></expr></argument>, <argument pos:start="141:30" pos:end="141:55"><expr pos:start="141:30" pos:end="141:55"><literal type="string" pos:start="141:30" pos:end="141:55">"[copy] %s to in_buffer\n"</literal></expr></argument>, <argument pos:start="141:58" pos:end="141:77"><expr pos:start="141:58" pos:end="141:77"><name pos:start="141:58" pos:end="141:77"><name pos:start="141:58" pos:end="141:71">current_buffer</name><operator pos:start="141:72" pos:end="141:73">-&gt;</operator><name pos:start="141:74" pos:end="141:77">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:73"><expr pos:start="143:17" pos:end="143:72"><name pos:start="143:17" pos:end="143:19">ret</name> <operator pos:start="143:21" pos:end="143:21">=</operator> <call pos:start="143:23" pos:end="143:72"><name pos:start="143:23" pos:end="143:40">ff_audio_data_copy</name><argument_list pos:start="143:41" pos:end="143:72">(<argument pos:start="143:42" pos:end="143:55"><expr pos:start="143:42" pos:end="143:55"><name pos:start="143:42" pos:end="143:55"><name pos:start="143:42" pos:end="143:44">avr</name><operator pos:start="143:45" pos:end="143:46">-&gt;</operator><name pos:start="143:47" pos:end="143:55">in_buffer</name></name></expr></argument>, <argument pos:start="143:58" pos:end="143:71"><expr pos:start="143:58" pos:end="143:71"><name pos:start="143:58" pos:end="143:71">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="145:17" pos:end="147:31"><if pos:start="145:17" pos:end="147:31">if <condition pos:start="145:20" pos:end="145:28">(<expr pos:start="145:21" pos:end="145:27"><name pos:start="145:21" pos:end="145:23">ret</name> <operator pos:start="145:25" pos:end="145:25">&lt;</operator> <literal type="number" pos:start="145:27" pos:end="145:27">0</literal></expr>)</condition><block type="pseudo" pos:start="147:21" pos:end="147:31"><block_content pos:start="147:21" pos:end="147:31">

                    <return pos:start="147:21" pos:end="147:31">return <expr pos:start="147:28" pos:end="147:30"><name pos:start="147:28" pos:end="147:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:73"><expr pos:start="151:13" pos:end="151:72"><call pos:start="151:13" pos:end="151:72"><name pos:start="151:13" pos:end="151:38">ff_audio_data_set_channels</name><argument_list pos:start="151:39" pos:end="151:72">(<argument pos:start="151:40" pos:end="151:53"><expr pos:start="151:40" pos:end="151:53"><name pos:start="151:40" pos:end="151:53"><name pos:start="151:40" pos:end="151:42">avr</name><operator pos:start="151:43" pos:end="151:44">-&gt;</operator><name pos:start="151:45" pos:end="151:53">in_buffer</name></name></expr></argument>, <argument pos:start="151:56" pos:end="151:71"><expr pos:start="151:56" pos:end="151:71"><name pos:start="151:56" pos:end="151:71"><name pos:start="151:56" pos:end="151:58">avr</name><operator pos:start="151:59" pos:end="151:60">-&gt;</operator><name pos:start="151:61" pos:end="151:71">in_channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="153:13" pos:end="163:13"><if pos:start="153:13" pos:end="163:13">if <condition pos:start="153:16" pos:end="153:36">(<expr pos:start="153:17" pos:end="153:35"><name pos:start="153:17" pos:end="153:35"><name pos:start="153:17" pos:end="153:19">avr</name><operator pos:start="153:20" pos:end="153:21">-&gt;</operator><name pos:start="153:22" pos:end="153:35">downmix_needed</name></name></expr>)</condition> <block pos:start="153:38" pos:end="163:13">{<block_content pos:start="155:17" pos:end="161:31">

                <expr_stmt pos:start="155:17" pos:end="155:54"><expr pos:start="155:17" pos:end="155:53"><call pos:start="155:17" pos:end="155:53"><name pos:start="155:17" pos:end="155:23">av_dlog</name><argument_list pos:start="155:24" pos:end="155:53">(<argument pos:start="155:25" pos:end="155:27"><expr pos:start="155:25" pos:end="155:27"><name pos:start="155:25" pos:end="155:27">avr</name></expr></argument>, <argument pos:start="155:30" pos:end="155:52"><expr pos:start="155:30" pos:end="155:52"><literal type="string" pos:start="155:30" pos:end="155:52">"[downmix] in_buffer\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="157:17" pos:end="157:60"><expr pos:start="157:17" pos:end="157:59"><name pos:start="157:17" pos:end="157:19">ret</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:59"><name pos:start="157:23" pos:end="157:34">ff_audio_mix</name><argument_list pos:start="157:35" pos:end="157:59">(<argument pos:start="157:36" pos:end="157:42"><expr pos:start="157:36" pos:end="157:42"><name pos:start="157:36" pos:end="157:42"><name pos:start="157:36" pos:end="157:38">avr</name><operator pos:start="157:39" pos:end="157:40">-&gt;</operator><name pos:start="157:41" pos:end="157:42">am</name></name></expr></argument>, <argument pos:start="157:45" pos:end="157:58"><expr pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:58"><name pos:start="157:45" pos:end="157:47">avr</name><operator pos:start="157:48" pos:end="157:49">-&gt;</operator><name pos:start="157:50" pos:end="157:58">in_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="159:17" pos:end="161:31"><if pos:start="159:17" pos:end="161:31">if <condition pos:start="159:20" pos:end="159:28">(<expr pos:start="159:21" pos:end="159:27"><name pos:start="159:21" pos:end="159:23">ret</name> <operator pos:start="159:25" pos:end="159:25">&lt;</operator> <literal type="number" pos:start="159:27" pos:end="159:27">0</literal></expr>)</condition><block type="pseudo" pos:start="161:21" pos:end="161:31"><block_content pos:start="161:21" pos:end="161:31">

                    <return pos:start="161:21" pos:end="161:31">return <expr pos:start="161:28" pos:end="161:30"><name pos:start="161:28" pos:end="161:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:44"><expr pos:start="165:13" pos:end="165:43"><name pos:start="165:13" pos:end="165:26">current_buffer</name> <operator pos:start="165:28" pos:end="165:28">=</operator> <name pos:start="165:30" pos:end="165:43"><name pos:start="165:30" pos:end="165:32">avr</name><operator pos:start="165:33" pos:end="165:34">-&gt;</operator><name pos:start="165:35" pos:end="165:43">in_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="169:7" pos:end="181:5">else <block pos:start="169:12" pos:end="181:5">{<block_content pos:start="173:9" pos:end="179:30">

        <comment type="block" pos:start="171:9" pos:end="171:73">/* flush resampling buffer and/or output FIFO if input is NULL */</comment>

        <if_stmt pos:start="173:9" pos:end="177:48"><if pos:start="173:9" pos:end="177:48">if <condition pos:start="173:12" pos:end="173:34">(<expr pos:start="173:13" pos:end="173:33"><operator pos:start="173:13" pos:end="173:13">!</operator><name pos:start="173:14" pos:end="173:33"><name pos:start="173:14" pos:end="173:16">avr</name><operator pos:start="173:17" pos:end="173:18">-&gt;</operator><name pos:start="173:19" pos:end="173:33">resample_needed</name></name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="177:48"><block_content pos:start="175:13" pos:end="177:48">

            <return pos:start="175:13" pos:end="177:48">return <expr pos:start="175:20" pos:end="177:47"><call pos:start="175:20" pos:end="177:47"><name pos:start="175:20" pos:end="175:41">handle_buffered_output</name><argument_list pos:start="175:42" pos:end="177:47">(<argument pos:start="175:43" pos:end="175:45"><expr pos:start="175:43" pos:end="175:45"><name pos:start="175:43" pos:end="175:45">avr</name></expr></argument>, <argument pos:start="175:48" pos:end="175:77"><expr pos:start="175:48" pos:end="175:77"><ternary pos:start="175:48" pos:end="175:77"><condition pos:start="175:48" pos:end="175:55"><expr pos:start="175:48" pos:end="175:53"><name pos:start="175:48" pos:end="175:53">output</name></expr> ?</condition><then pos:start="175:57" pos:end="175:70"> <expr pos:start="175:57" pos:end="175:70"><operator pos:start="175:57" pos:end="175:57">&amp;</operator><name pos:start="175:58" pos:end="175:70">output_buffer</name></expr> </then><else pos:start="175:72" pos:end="175:77">: <expr pos:start="175:74" pos:end="175:77"><name pos:start="175:74" pos:end="175:77">NULL</name></expr></else></ternary></expr></argument>,

                                          <argument pos:start="177:43" pos:end="177:46"><expr pos:start="177:43" pos:end="177:46"><name pos:start="177:43" pos:end="177:46">NULL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:30"><expr pos:start="179:9" pos:end="179:29"><name pos:start="179:9" pos:end="179:22">current_buffer</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <name pos:start="179:26" pos:end="179:29">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="185:5" pos:end="229:5"><if pos:start="185:5" pos:end="229:5">if <condition pos:start="185:8" pos:end="185:29">(<expr pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:11">avr</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:28">resample_needed</name></name></expr>)</condition> <block pos:start="185:31" pos:end="229:5">{<block_content pos:start="187:9" pos:end="227:38">

        <decl_stmt pos:start="187:9" pos:end="187:32"><decl pos:start="187:9" pos:end="187:31"><type pos:start="187:9" pos:end="187:19"><name pos:start="187:9" pos:end="187:17">AudioData</name> <modifier pos:start="187:19" pos:end="187:19">*</modifier></type><name pos:start="187:20" pos:end="187:31">resample_out</name></decl>;</decl_stmt>

        <decl_stmt pos:start="189:9" pos:end="189:25"><decl pos:start="189:9" pos:end="189:24"><type pos:start="189:9" pos:end="189:11"><name pos:start="189:9" pos:end="189:11">int</name></type> <name pos:start="189:13" pos:end="189:20">consumed</name> <init pos:start="189:22" pos:end="189:24">= <expr pos:start="189:24" pos:end="189:24"><literal type="number" pos:start="189:24" pos:end="189:24">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="193:9" pos:end="199:52"><if pos:start="193:9" pos:end="195:42">if <condition pos:start="193:12" pos:end="193:66">(<expr pos:start="193:13" pos:end="193:65"><operator pos:start="193:13" pos:end="193:13">!</operator><name pos:start="193:14" pos:end="193:36"><name pos:start="193:14" pos:end="193:16">avr</name><operator pos:start="193:17" pos:end="193:18">-&gt;</operator><name pos:start="193:19" pos:end="193:36">out_convert_needed</name></name> <operator pos:start="193:38" pos:end="193:39">&amp;&amp;</operator> <name pos:start="193:41" pos:end="193:46">output</name> <operator pos:start="193:48" pos:end="193:49">&amp;&amp;</operator> <name pos:start="193:51" pos:end="193:61">out_samples</name> <operator pos:start="193:63" pos:end="193:63">&gt;</operator> <literal type="number" pos:start="193:65" pos:end="193:65">0</literal></expr>)</condition><block type="pseudo" pos:start="195:13" pos:end="195:42"><block_content pos:start="195:13" pos:end="195:42">

            <expr_stmt pos:start="195:13" pos:end="195:42"><expr pos:start="195:13" pos:end="195:41"><name pos:start="195:13" pos:end="195:24">resample_out</name> <operator pos:start="195:26" pos:end="195:26">=</operator> <operator pos:start="195:28" pos:end="195:28">&amp;</operator><name pos:start="195:29" pos:end="195:41">output_buffer</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="197:9" pos:end="199:52">else<block type="pseudo" pos:start="199:13" pos:end="199:52"><block_content pos:start="199:13" pos:end="199:52">

            <expr_stmt pos:start="199:13" pos:end="199:52"><expr pos:start="199:13" pos:end="199:51"><name pos:start="199:13" pos:end="199:24">resample_out</name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:51"><name pos:start="199:28" pos:end="199:30">avr</name><operator pos:start="199:31" pos:end="199:32">-&gt;</operator><name pos:start="199:33" pos:end="199:51">resample_out_buffer</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <expr_stmt pos:start="201:9" pos:end="203:36"><expr pos:start="201:9" pos:end="203:35"><call pos:start="201:9" pos:end="203:35"><name pos:start="201:9" pos:end="201:15">av_dlog</name><argument_list pos:start="201:16" pos:end="203:35">(<argument pos:start="201:17" pos:end="201:19"><expr pos:start="201:17" pos:end="201:19"><name pos:start="201:17" pos:end="201:19">avr</name></expr></argument>, <argument pos:start="201:22" pos:end="201:44"><expr pos:start="201:22" pos:end="201:44"><literal type="string" pos:start="201:22" pos:end="201:44">"[resample] %s to %s\n"</literal></expr></argument>, <argument pos:start="201:47" pos:end="201:66"><expr pos:start="201:47" pos:end="201:66"><name pos:start="201:47" pos:end="201:66"><name pos:start="201:47" pos:end="201:60">current_buffer</name><operator pos:start="201:61" pos:end="201:62">-&gt;</operator><name pos:start="201:63" pos:end="201:66">name</name></name></expr></argument>,

                <argument pos:start="203:17" pos:end="203:34"><expr pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:28">resample_out</name><operator pos:start="203:29" pos:end="203:30">-&gt;</operator><name pos:start="203:31" pos:end="203:34">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="207:59"><expr pos:start="205:9" pos:end="207:58"><name pos:start="205:9" pos:end="205:11">ret</name> <operator pos:start="205:13" pos:end="205:13">=</operator> <call pos:start="205:15" pos:end="207:58"><name pos:start="205:15" pos:end="205:31">ff_audio_resample</name><argument_list pos:start="205:32" pos:end="207:58">(<argument pos:start="205:33" pos:end="205:45"><expr pos:start="205:33" pos:end="205:45"><name pos:start="205:33" pos:end="205:45"><name pos:start="205:33" pos:end="205:35">avr</name><operator pos:start="205:36" pos:end="205:37">-&gt;</operator><name pos:start="205:38" pos:end="205:45">resample</name></name></expr></argument>, <argument pos:start="205:48" pos:end="205:59"><expr pos:start="205:48" pos:end="205:59"><name pos:start="205:48" pos:end="205:59">resample_out</name></expr></argument>,

                                <argument pos:start="207:33" pos:end="207:46"><expr pos:start="207:33" pos:end="207:46"><name pos:start="207:33" pos:end="207:46">current_buffer</name></expr></argument>, <argument pos:start="207:49" pos:end="207:57"><expr pos:start="207:49" pos:end="207:57"><operator pos:start="207:49" pos:end="207:49">&amp;</operator><name pos:start="207:50" pos:end="207:57">consumed</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:23"><if pos:start="209:9" pos:end="211:23">if <condition pos:start="209:12" pos:end="209:20">(<expr pos:start="209:13" pos:end="209:19"><name pos:start="209:13" pos:end="209:15">ret</name> <operator pos:start="209:17" pos:end="209:17">&lt;</operator> <literal type="number" pos:start="209:19" pos:end="209:19">0</literal></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:23"><block_content pos:start="211:13" pos:end="211:23">

            <return pos:start="211:13" pos:end="211:23">return <expr pos:start="211:20" pos:end="211:22"><name pos:start="211:20" pos:end="211:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="block" pos:start="215:9" pos:end="215:70">/* if resampling did not produce any samples, just return 0 */</comment>

        <if_stmt pos:start="217:9" pos:end="223:9"><if pos:start="217:9" pos:end="223:9">if <condition pos:start="217:12" pos:end="217:42">(<expr pos:start="217:13" pos:end="217:41"><name pos:start="217:13" pos:end="217:36"><name pos:start="217:13" pos:end="217:24">resample_out</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:36">nb_samples</name></name> <operator pos:start="217:38" pos:end="217:39">==</operator> <literal type="number" pos:start="217:41" pos:end="217:41">0</literal></expr>)</condition> <block pos:start="217:44" pos:end="223:9">{<block_content pos:start="219:13" pos:end="221:21">

            <expr_stmt pos:start="219:13" pos:end="219:47"><expr pos:start="219:13" pos:end="219:46"><call pos:start="219:13" pos:end="219:46"><name pos:start="219:13" pos:end="219:19">av_dlog</name><argument_list pos:start="219:20" pos:end="219:46">(<argument pos:start="219:21" pos:end="219:23"><expr pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:23">avr</name></expr></argument>, <argument pos:start="219:26" pos:end="219:45"><expr pos:start="219:26" pos:end="219:45"><literal type="string" pos:start="219:26" pos:end="219:45">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="221:13" pos:end="221:21">return <expr pos:start="221:20" pos:end="221:20"><literal type="number" pos:start="221:20" pos:end="221:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="227:9" pos:end="227:38"><expr pos:start="227:9" pos:end="227:37"><name pos:start="227:9" pos:end="227:22">current_buffer</name> <operator pos:start="227:24" pos:end="227:24">=</operator> <name pos:start="227:26" pos:end="227:37">resample_out</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="243:5"><if pos:start="233:5" pos:end="243:5">if <condition pos:start="233:8" pos:end="233:26">(<expr pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:25"><name pos:start="233:9" pos:end="233:11">avr</name><operator pos:start="233:12" pos:end="233:13">-&gt;</operator><name pos:start="233:14" pos:end="233:25">upmix_needed</name></name></expr>)</condition> <block pos:start="233:28" pos:end="243:5">{<block_content pos:start="235:9" pos:end="241:23">

        <expr_stmt pos:start="235:9" pos:end="235:59"><expr pos:start="235:9" pos:end="235:58"><call pos:start="235:9" pos:end="235:58"><name pos:start="235:9" pos:end="235:15">av_dlog</name><argument_list pos:start="235:16" pos:end="235:58">(<argument pos:start="235:17" pos:end="235:19"><expr pos:start="235:17" pos:end="235:19"><name pos:start="235:17" pos:end="235:19">avr</name></expr></argument>, <argument pos:start="235:22" pos:end="235:35"><expr pos:start="235:22" pos:end="235:35"><literal type="string" pos:start="235:22" pos:end="235:35">"[upmix] %s\n"</literal></expr></argument>, <argument pos:start="235:38" pos:end="235:57"><expr pos:start="235:38" pos:end="235:57"><name pos:start="235:38" pos:end="235:57"><name pos:start="235:38" pos:end="235:51">current_buffer</name><operator pos:start="235:52" pos:end="235:53">-&gt;</operator><name pos:start="235:54" pos:end="235:57">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:52"><expr pos:start="237:9" pos:end="237:51"><name pos:start="237:9" pos:end="237:11">ret</name> <operator pos:start="237:13" pos:end="237:13">=</operator> <call pos:start="237:15" pos:end="237:51"><name pos:start="237:15" pos:end="237:26">ff_audio_mix</name><argument_list pos:start="237:27" pos:end="237:51">(<argument pos:start="237:28" pos:end="237:34"><expr pos:start="237:28" pos:end="237:34"><name pos:start="237:28" pos:end="237:34"><name pos:start="237:28" pos:end="237:30">avr</name><operator pos:start="237:31" pos:end="237:32">-&gt;</operator><name pos:start="237:33" pos:end="237:34">am</name></name></expr></argument>, <argument pos:start="237:37" pos:end="237:50"><expr pos:start="237:37" pos:end="237:50"><name pos:start="237:37" pos:end="237:50">current_buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="239:9" pos:end="241:23"><if pos:start="239:9" pos:end="241:23">if <condition pos:start="239:12" pos:end="239:20">(<expr pos:start="239:13" pos:end="239:19"><name pos:start="239:13" pos:end="239:15">ret</name> <operator pos:start="239:17" pos:end="239:17">&lt;</operator> <literal type="number" pos:start="239:19" pos:end="239:19">0</literal></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:23"><block_content pos:start="241:13" pos:end="241:23">

            <return pos:start="241:13" pos:end="241:23">return <expr pos:start="241:20" pos:end="241:22"><name pos:start="241:20" pos:end="241:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="247:5" pos:end="247:68">/* if we resampled or upmixed directly to output, return here */</comment>

    <if_stmt pos:start="249:5" pos:end="255:5"><if pos:start="249:5" pos:end="255:5">if <condition pos:start="249:8" pos:end="249:41">(<expr pos:start="249:9" pos:end="249:40"><name pos:start="249:9" pos:end="249:22">current_buffer</name> <operator pos:start="249:24" pos:end="249:25">==</operator> <operator pos:start="249:27" pos:end="249:27">&amp;</operator><name pos:start="249:28" pos:end="249:40">output_buffer</name></expr>)</condition> <block pos:start="249:43" pos:end="255:5">{<block_content pos:start="251:9" pos:end="253:42">

        <expr_stmt pos:start="251:9" pos:end="251:43"><expr pos:start="251:9" pos:end="251:42"><call pos:start="251:9" pos:end="251:42"><name pos:start="251:9" pos:end="251:15">av_dlog</name><argument_list pos:start="251:16" pos:end="251:42">(<argument pos:start="251:17" pos:end="251:19"><expr pos:start="251:17" pos:end="251:19"><name pos:start="251:17" pos:end="251:19">avr</name></expr></argument>, <argument pos:start="251:22" pos:end="251:41"><expr pos:start="251:22" pos:end="251:41"><literal type="string" pos:start="251:22" pos:end="251:41">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="253:9" pos:end="253:42">return <expr pos:start="253:16" pos:end="253:41"><name pos:start="253:16" pos:end="253:41"><name pos:start="253:16" pos:end="253:29">current_buffer</name><operator pos:start="253:30" pos:end="253:31">-&gt;</operator><name pos:start="253:32" pos:end="253:41">nb_samples</name></name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="259:5" pos:end="305:5"><if pos:start="259:5" pos:end="305:5">if <condition pos:start="259:8" pos:end="259:32">(<expr pos:start="259:9" pos:end="259:31"><name pos:start="259:9" pos:end="259:31"><name pos:start="259:9" pos:end="259:11">avr</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:31">out_convert_needed</name></name></expr>)</condition> <block pos:start="259:34" pos:end="305:5">{<block_content pos:start="261:9" pos:end="303:9">

        <if_stmt pos:start="261:9" pos:end="303:9"><if pos:start="261:9" pos:end="281:9">if <condition pos:start="261:12" pos:end="261:64">(<expr pos:start="261:13" pos:end="261:63"><name pos:start="261:13" pos:end="261:18">output</name> <operator pos:start="261:20" pos:end="261:21">&amp;&amp;</operator> <name pos:start="261:23" pos:end="261:33">out_samples</name> <operator pos:start="261:35" pos:end="261:36">&gt;=</operator> <name pos:start="261:38" pos:end="261:63"><name pos:start="261:38" pos:end="261:51">current_buffer</name><operator pos:start="261:52" pos:end="261:53">-&gt;</operator><name pos:start="261:54" pos:end="261:63">nb_samples</name></name></expr>)</condition> <block pos:start="261:66" pos:end="281:9">{<block_content pos:start="265:13" pos:end="279:44">

            <comment type="block" pos:start="263:13" pos:end="263:44">/* convert directly to output */</comment>

            <expr_stmt pos:start="265:13" pos:end="265:75"><expr pos:start="265:13" pos:end="265:74"><call pos:start="265:13" pos:end="265:74"><name pos:start="265:13" pos:end="265:19">av_dlog</name><argument_list pos:start="265:20" pos:end="265:74">(<argument pos:start="265:21" pos:end="265:23"><expr pos:start="265:21" pos:end="265:23"><name pos:start="265:21" pos:end="265:23">avr</name></expr></argument>, <argument pos:start="265:26" pos:end="265:51"><expr pos:start="265:26" pos:end="265:51"><literal type="string" pos:start="265:26" pos:end="265:51">"[convert] %s to output\n"</literal></expr></argument>, <argument pos:start="265:54" pos:end="265:73"><expr pos:start="265:54" pos:end="265:73"><name pos:start="265:54" pos:end="265:73"><name pos:start="265:54" pos:end="265:67">current_buffer</name><operator pos:start="265:68" pos:end="265:69">-&gt;</operator><name pos:start="265:70" pos:end="265:73">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="269:63"><expr pos:start="267:13" pos:end="269:62"><name pos:start="267:13" pos:end="267:15">ret</name> <operator pos:start="267:17" pos:end="267:17">=</operator> <call pos:start="267:19" pos:end="269:62"><name pos:start="267:19" pos:end="267:34">ff_audio_convert</name><argument_list pos:start="267:35" pos:end="269:62">(<argument pos:start="267:36" pos:end="267:46"><expr pos:start="267:36" pos:end="267:46"><name pos:start="267:36" pos:end="267:46"><name pos:start="267:36" pos:end="267:38">avr</name><operator pos:start="267:39" pos:end="267:40">-&gt;</operator><name pos:start="267:41" pos:end="267:46">ac_out</name></name></expr></argument>, <argument pos:start="267:49" pos:end="267:62"><expr pos:start="267:49" pos:end="267:62"><operator pos:start="267:49" pos:end="267:49">&amp;</operator><name pos:start="267:50" pos:end="267:62">output_buffer</name></expr></argument>, <argument pos:start="267:65" pos:end="267:78"><expr pos:start="267:65" pos:end="267:78"><name pos:start="267:65" pos:end="267:78">current_buffer</name></expr></argument>,

                                   <argument pos:start="269:36" pos:end="269:61"><expr pos:start="269:36" pos:end="269:61"><name pos:start="269:36" pos:end="269:61"><name pos:start="269:36" pos:end="269:49">current_buffer</name><operator pos:start="269:50" pos:end="269:51">-&gt;</operator><name pos:start="269:52" pos:end="269:61">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="271:13" pos:end="273:27"><if pos:start="271:13" pos:end="273:27">if <condition pos:start="271:16" pos:end="271:24">(<expr pos:start="271:17" pos:end="271:23"><name pos:start="271:17" pos:end="271:19">ret</name> <operator pos:start="271:21" pos:end="271:21">&lt;</operator> <literal type="number" pos:start="271:23" pos:end="271:23">0</literal></expr>)</condition><block type="pseudo" pos:start="273:17" pos:end="273:27"><block_content pos:start="273:17" pos:end="273:27">

                <return pos:start="273:17" pos:end="273:27">return <expr pos:start="273:24" pos:end="273:26"><name pos:start="273:24" pos:end="273:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="277:13" pos:end="277:47"><expr pos:start="277:13" pos:end="277:46"><call pos:start="277:13" pos:end="277:46"><name pos:start="277:13" pos:end="277:19">av_dlog</name><argument_list pos:start="277:20" pos:end="277:46">(<argument pos:start="277:21" pos:end="277:23"><expr pos:start="277:21" pos:end="277:23"><name pos:start="277:21" pos:end="277:23">avr</name></expr></argument>, <argument pos:start="277:26" pos:end="277:45"><expr pos:start="277:26" pos:end="277:45"><literal type="string" pos:start="277:26" pos:end="277:45">"[end conversion]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="279:13" pos:end="279:44">return <expr pos:start="279:20" pos:end="279:43"><name pos:start="279:20" pos:end="279:43"><name pos:start="279:20" pos:end="279:32">output_buffer</name><operator pos:start="279:33" pos:end="279:33">.</operator><name pos:start="279:34" pos:end="279:43">nb_samples</name></name></expr>;</return>

        </block_content>}</block></if> <else pos:start="281:11" pos:end="303:9">else <block pos:start="281:16" pos:end="303:9">{<block_content pos:start="283:13" pos:end="301:45">

            <expr_stmt pos:start="283:13" pos:end="285:68"><expr pos:start="283:13" pos:end="285:67"><name pos:start="283:13" pos:end="283:15">ret</name> <operator pos:start="283:17" pos:end="283:17">=</operator> <call pos:start="283:19" pos:end="285:67"><name pos:start="283:19" pos:end="283:39">ff_audio_data_realloc</name><argument_list pos:start="283:40" pos:end="285:67">(<argument pos:start="283:41" pos:end="283:55"><expr pos:start="283:41" pos:end="283:55"><name pos:start="283:41" pos:end="283:55"><name pos:start="283:41" pos:end="283:43">avr</name><operator pos:start="283:44" pos:end="283:45">-&gt;</operator><name pos:start="283:46" pos:end="283:55">out_buffer</name></name></expr></argument>,

                                        <argument pos:start="285:41" pos:end="285:66"><expr pos:start="285:41" pos:end="285:66"><name pos:start="285:41" pos:end="285:66"><name pos:start="285:41" pos:end="285:54">current_buffer</name><operator pos:start="285:55" pos:end="285:56">-&gt;</operator><name pos:start="285:57" pos:end="285:66">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="287:13" pos:end="289:27"><if pos:start="287:13" pos:end="289:27">if <condition pos:start="287:16" pos:end="287:24">(<expr pos:start="287:17" pos:end="287:23"><name pos:start="287:17" pos:end="287:19">ret</name> <operator pos:start="287:21" pos:end="287:21">&lt;</operator> <literal type="number" pos:start="287:23" pos:end="287:23">0</literal></expr>)</condition><block type="pseudo" pos:start="289:17" pos:end="289:27"><block_content pos:start="289:17" pos:end="289:27">

                <return pos:start="289:17" pos:end="289:27">return <expr pos:start="289:24" pos:end="289:26"><name pos:start="289:24" pos:end="289:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:79"><expr pos:start="291:13" pos:end="291:78"><call pos:start="291:13" pos:end="291:78"><name pos:start="291:13" pos:end="291:19">av_dlog</name><argument_list pos:start="291:20" pos:end="291:78">(<argument pos:start="291:21" pos:end="291:23"><expr pos:start="291:21" pos:end="291:23"><name pos:start="291:21" pos:end="291:23">avr</name></expr></argument>, <argument pos:start="291:26" pos:end="291:55"><expr pos:start="291:26" pos:end="291:55"><literal type="string" pos:start="291:26" pos:end="291:55">"[convert] %s to out_buffer\n"</literal></expr></argument>, <argument pos:start="291:58" pos:end="291:77"><expr pos:start="291:58" pos:end="291:77"><name pos:start="291:58" pos:end="291:77"><name pos:start="291:58" pos:end="291:71">current_buffer</name><operator pos:start="291:72" pos:end="291:73">-&gt;</operator><name pos:start="291:74" pos:end="291:77">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="293:13" pos:end="295:79"><expr pos:start="293:13" pos:end="295:78"><name pos:start="293:13" pos:end="293:15">ret</name> <operator pos:start="293:17" pos:end="293:17">=</operator> <call pos:start="293:19" pos:end="295:78"><name pos:start="293:19" pos:end="293:34">ff_audio_convert</name><argument_list pos:start="293:35" pos:end="295:78">(<argument pos:start="293:36" pos:end="293:46"><expr pos:start="293:36" pos:end="293:46"><name pos:start="293:36" pos:end="293:46"><name pos:start="293:36" pos:end="293:38">avr</name><operator pos:start="293:39" pos:end="293:40">-&gt;</operator><name pos:start="293:41" pos:end="293:46">ac_out</name></name></expr></argument>, <argument pos:start="293:49" pos:end="293:63"><expr pos:start="293:49" pos:end="293:63"><name pos:start="293:49" pos:end="293:63"><name pos:start="293:49" pos:end="293:51">avr</name><operator pos:start="293:52" pos:end="293:53">-&gt;</operator><name pos:start="293:54" pos:end="293:63">out_buffer</name></name></expr></argument>,

                                   <argument pos:start="295:36" pos:end="295:49"><expr pos:start="295:36" pos:end="295:49"><name pos:start="295:36" pos:end="295:49">current_buffer</name></expr></argument>, <argument pos:start="295:52" pos:end="295:77"><expr pos:start="295:52" pos:end="295:77"><name pos:start="295:52" pos:end="295:77"><name pos:start="295:52" pos:end="295:65">current_buffer</name><operator pos:start="295:66" pos:end="295:67">-&gt;</operator><name pos:start="295:68" pos:end="295:77">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="297:13" pos:end="299:27"><if pos:start="297:13" pos:end="299:27">if <condition pos:start="297:16" pos:end="297:24">(<expr pos:start="297:17" pos:end="297:23"><name pos:start="297:17" pos:end="297:19">ret</name> <operator pos:start="297:21" pos:end="297:21">&lt;</operator> <literal type="number" pos:start="297:23" pos:end="297:23">0</literal></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:27"><block_content pos:start="299:17" pos:end="299:27">

                <return pos:start="299:17" pos:end="299:27">return <expr pos:start="299:24" pos:end="299:26"><name pos:start="299:24" pos:end="299:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:45"><expr pos:start="301:13" pos:end="301:44"><name pos:start="301:13" pos:end="301:26">current_buffer</name> <operator pos:start="301:28" pos:end="301:28">=</operator> <name pos:start="301:30" pos:end="301:44"><name pos:start="301:30" pos:end="301:32">avr</name><operator pos:start="301:33" pos:end="301:34">-&gt;</operator><name pos:start="301:35" pos:end="301:44">out_buffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="309:5" pos:end="309:71">return <expr pos:start="309:12" pos:end="309:70"><call pos:start="309:12" pos:end="309:70"><name pos:start="309:12" pos:end="309:33">handle_buffered_output</name><argument_list pos:start="309:34" pos:end="309:70">(<argument pos:start="309:35" pos:end="309:37"><expr pos:start="309:35" pos:end="309:37"><name pos:start="309:35" pos:end="309:37">avr</name></expr></argument>, <argument pos:start="309:40" pos:end="309:53"><expr pos:start="309:40" pos:end="309:53"><operator pos:start="309:40" pos:end="309:40">&amp;</operator><name pos:start="309:41" pos:end="309:53">output_buffer</name></expr></argument>, <argument pos:start="309:56" pos:end="309:69"><expr pos:start="309:56" pos:end="309:69"><name pos:start="309:56" pos:end="309:69">current_buffer</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
