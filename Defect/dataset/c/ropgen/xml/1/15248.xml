<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/15248.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">nsv_parse_NSVf_header</name><parameter_list pos:start="1:33" pos:end="1:52">(<parameter pos:start="1:34" pos:end="1:51"><decl pos:start="1:34" pos:end="1:51"><type pos:start="1:34" pos:end="1:50"><name pos:start="1:34" pos:end="1:48">AVFormatContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="241:1">{<block_content pos:start="5:5" pos:end="239:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">NSVContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">nsv</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:27">= <expr pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:27"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name> <name pos:start="9:18" pos:end="9:26">av_unused</name></type> <name pos:start="9:28" pos:end="9:36">file_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">strings_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:21">table_entries</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:26">table_entries_used</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:39"><expr pos:start="23:5" pos:end="23:38"><call pos:start="23:5" pos:end="23:38"><name pos:start="23:5" pos:end="23:11">av_dlog</name><argument_list pos:start="23:12" pos:end="23:38">(<argument pos:start="23:13" pos:end="23:13"><expr pos:start="23:13" pos:end="23:13"><name pos:start="23:13" pos:end="23:13">s</name></expr></argument>, <argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><literal type="string" pos:start="23:16" pos:end="23:23">"%s()\n"</literal></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:7">nsv</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:14">state</name></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:27">NSV_UNSYNC</name></expr>;</expr_stmt> <comment type="block" pos:start="27:30" pos:end="27:50">/* in case we fail */</comment>



    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:8">size</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <call pos:start="31:12" pos:end="31:24"><name pos:start="31:12" pos:end="31:20">avio_rl32</name><argument_list pos:start="31:21" pos:end="31:24">(<argument pos:start="31:22" pos:end="31:23"><expr pos:start="31:22" pos:end="31:23"><name pos:start="31:22" pos:end="31:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="35:18"><if pos:start="33:5" pos:end="35:18">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:12">size</name> <operator pos:start="33:14" pos:end="33:14">&lt;</operator> <literal type="number" pos:start="33:16" pos:end="33:17">28</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:18"><block_content pos:start="35:9" pos:end="35:18">

        <return pos:start="35:9" pos:end="35:18">return <expr pos:start="35:16" pos:end="35:17"><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:7">nsv</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:17">NSVf_end</name></name> <operator pos:start="37:19" pos:end="37:19">=</operator> <name pos:start="37:21" pos:end="37:24">size</name></expr>;</expr_stmt>



    <comment type="line" pos:start="41:5" pos:end="41:45">//s-&gt;file_size = (uint32_t)avio_rl32(pb);</comment>

    <expr_stmt pos:start="43:5" pos:end="43:40"><expr pos:start="43:5" pos:end="43:39"><name pos:start="43:5" pos:end="43:13">file_size</name> <operator pos:start="43:15" pos:end="43:15">=</operator> <operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:25">uint32_t</name><operator pos:start="43:26" pos:end="43:26">)</operator><call pos:start="43:27" pos:end="43:39"><name pos:start="43:27" pos:end="43:35">avio_rl32</name><argument_list pos:start="43:36" pos:end="43:39">(<argument pos:start="43:37" pos:end="43:38"><expr pos:start="43:37" pos:end="43:38"><name pos:start="43:37" pos:end="43:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:49"><expr pos:start="45:5" pos:end="45:48"><call pos:start="45:5" pos:end="45:48"><name pos:start="45:5" pos:end="45:11">av_dlog</name><argument_list pos:start="45:12" pos:end="45:48">(<argument pos:start="45:13" pos:end="45:13"><expr pos:start="45:13" pos:end="45:13"><name pos:start="45:13" pos:end="45:13">s</name></expr></argument>, <argument pos:start="45:16" pos:end="45:41"><expr pos:start="45:16" pos:end="45:41"><literal type="string" pos:start="45:16" pos:end="45:41">"NSV NSVf chunk_size %u\n"</literal></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:53"><expr pos:start="47:5" pos:end="47:52"><call pos:start="47:5" pos:end="47:52"><name pos:start="47:5" pos:end="47:11">av_dlog</name><argument_list pos:start="47:12" pos:end="47:52">(<argument pos:start="47:13" pos:end="47:13"><expr pos:start="47:13" pos:end="47:13"><name pos:start="47:13" pos:end="47:13">s</name></expr></argument>, <argument pos:start="47:16" pos:end="47:40"><expr pos:start="47:16" pos:end="47:40"><literal type="string" pos:start="47:16" pos:end="47:40">"NSV NSVf file_size %u\n"</literal></expr></argument>, <argument pos:start="47:43" pos:end="47:51"><expr pos:start="47:43" pos:end="47:51"><name pos:start="47:43" pos:end="47:51">file_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:17"><name pos:start="51:5" pos:end="51:7">nsv</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:17">duration</name></name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28">duration</name> <operator pos:start="51:30" pos:end="51:30">=</operator> <call pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:40">avio_rl32</name><argument_list pos:start="51:41" pos:end="51:44">(<argument pos:start="51:42" pos:end="51:43"><expr pos:start="51:42" pos:end="51:43"><name pos:start="51:42" pos:end="51:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:47" pos:end="51:57">/* in ms */</comment>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><call pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:11">av_dlog</name><argument_list pos:start="53:12" pos:end="53:60">(<argument pos:start="53:13" pos:end="53:13"><expr pos:start="53:13" pos:end="53:13"><name pos:start="53:13" pos:end="53:13">s</name></expr></argument>, <argument pos:start="53:16" pos:end="53:49"><expr pos:start="53:16" pos:end="53:49"><literal type="string" pos:start="53:16" pos:end="53:36">"NSV NSVf duration %"</literal><name pos:start="53:37" pos:end="53:42">PRId64</name><literal type="string" pos:start="53:43" pos:end="53:49">" ms\n"</literal></expr></argument>, <argument pos:start="53:52" pos:end="53:59"><expr pos:start="53:52" pos:end="53:59"><name pos:start="53:52" pos:end="53:59">duration</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="55:5" pos:end="55:33">// XXX: store it in AVStreams</comment>



    <expr_stmt pos:start="59:5" pos:end="59:33"><expr pos:start="59:5" pos:end="59:32"><name pos:start="59:5" pos:end="59:16">strings_size</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:32"><name pos:start="59:20" pos:end="59:28">avio_rl32</name><argument_list pos:start="59:29" pos:end="59:32">(<argument pos:start="59:30" pos:end="59:31"><expr pos:start="59:30" pos:end="59:31"><name pos:start="59:30" pos:end="59:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:17">table_entries</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:33"><name pos:start="61:21" pos:end="61:29">avio_rl32</name><argument_list pos:start="61:30" pos:end="61:33">(<argument pos:start="61:31" pos:end="61:32"><expr pos:start="61:31" pos:end="61:32"><name pos:start="61:31" pos:end="61:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:22">table_entries_used</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:38"><name pos:start="63:26" pos:end="63:34">avio_rl32</name><argument_list pos:start="63:35" pos:end="63:38">(<argument pos:start="63:36" pos:end="63:37"><expr pos:start="63:36" pos:end="63:37"><name pos:start="63:36" pos:end="63:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:61"><expr pos:start="65:5" pos:end="67:60"><call pos:start="65:5" pos:end="67:60"><name pos:start="65:5" pos:end="65:11">av_dlog</name><argument_list pos:start="65:12" pos:end="67:60">(<argument pos:start="65:13" pos:end="65:13"><expr pos:start="65:13" pos:end="65:13"><name pos:start="65:13" pos:end="65:13">s</name></expr></argument>, <argument pos:start="65:16" pos:end="65:76"><expr pos:start="65:16" pos:end="65:76"><literal type="string" pos:start="65:16" pos:end="65:76">"NSV NSVf info-strings size: %d, table entries: %d, bis %d\n"</literal></expr></argument>,

            <argument pos:start="67:13" pos:end="67:24"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:24">strings_size</name></expr></argument>, <argument pos:start="67:27" pos:end="67:39"><expr pos:start="67:27" pos:end="67:39"><name pos:start="67:27" pos:end="67:39">table_entries</name></expr></argument>, <argument pos:start="67:42" pos:end="67:59"><expr pos:start="67:42" pos:end="67:59"><name pos:start="67:42" pos:end="67:59">table_entries_used</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:18"><if pos:start="69:5" pos:end="71:18">if <condition pos:start="69:8" pos:end="69:24">(<expr pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:10">pb</name><operator pos:start="69:11" pos:end="69:12">-&gt;</operator><name pos:start="69:13" pos:end="69:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:18"><block_content pos:start="71:9" pos:end="71:18">

        <return pos:start="71:9" pos:end="71:18">return <expr pos:start="71:16" pos:end="71:17"><operator pos:start="71:16" pos:end="71:16">-</operator><literal type="number" pos:start="71:17" pos:end="71:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:69"><expr pos:start="75:5" pos:end="75:68"><call pos:start="75:5" pos:end="75:68"><name pos:start="75:5" pos:end="75:11">av_dlog</name><argument_list pos:start="75:12" pos:end="75:68">(<argument pos:start="75:13" pos:end="75:13"><expr pos:start="75:13" pos:end="75:13"><name pos:start="75:13" pos:end="75:13">s</name></expr></argument>, <argument pos:start="75:16" pos:end="75:52"><expr pos:start="75:16" pos:end="75:52"><literal type="string" pos:start="75:16" pos:end="75:42">"NSV got header; filepos %"</literal><name pos:start="75:43" pos:end="75:48">PRId64</name><literal type="string" pos:start="75:49" pos:end="75:52">"\n"</literal></expr></argument>, <argument pos:start="75:55" pos:end="75:67"><expr pos:start="75:55" pos:end="75:67"><call pos:start="75:55" pos:end="75:67"><name pos:start="75:55" pos:end="75:63">avio_tell</name><argument_list pos:start="75:64" pos:end="75:67">(<argument pos:start="75:65" pos:end="75:66"><expr pos:start="75:65" pos:end="75:66"><name pos:start="75:65" pos:end="75:66">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="137:5"><if pos:start="79:5" pos:end="137:5">if <condition pos:start="79:8" pos:end="79:25">(<expr pos:start="79:9" pos:end="79:24"><name pos:start="79:9" pos:end="79:20">strings_size</name> <operator pos:start="79:22" pos:end="79:22">&gt;</operator> <literal type="number" pos:start="79:24" pos:end="79:24">0</literal></expr>)</condition> <block pos:start="79:27" pos:end="137:5">{<block_content pos:start="81:9" pos:end="135:25">

        <decl_stmt pos:start="81:9" pos:end="81:22"><decl pos:start="81:9" pos:end="81:21"><type pos:start="81:9" pos:end="81:14"><name pos:start="81:9" pos:end="81:12">char</name> <modifier pos:start="81:14" pos:end="81:14">*</modifier></type><name pos:start="81:15" pos:end="81:21">strings</name></decl>;</decl_stmt> <comment type="block" pos:start="81:24" pos:end="81:76">/* last byte will be '\0' to play safe with str*() */</comment>

        <decl_stmt pos:start="83:9" pos:end="83:23"><decl pos:start="83:9" pos:end="83:15"><type pos:start="83:9" pos:end="83:14"><name pos:start="83:9" pos:end="83:12">char</name> <modifier pos:start="83:14" pos:end="83:14">*</modifier></type><name pos:start="83:15" pos:end="83:15">p</name></decl>, <decl pos:start="83:18" pos:end="83:22"><type ref="prev" pos:start="83:9" pos:end="83:14"><modifier pos:start="83:18" pos:end="83:18">*</modifier></type><name pos:start="83:19" pos:end="83:22">endp</name></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="85:28"><decl pos:start="85:9" pos:end="85:19"><type pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:12">char</name> <modifier pos:start="85:14" pos:end="85:14">*</modifier></type><name pos:start="85:15" pos:end="85:19">token</name></decl>, <decl pos:start="85:22" pos:end="85:27"><type ref="prev" pos:start="85:9" pos:end="85:14"><modifier pos:start="85:22" pos:end="85:22">*</modifier></type><name pos:start="85:23" pos:end="85:27">value</name></decl>;</decl_stmt>

        <decl_stmt pos:start="87:9" pos:end="87:19"><decl pos:start="87:9" pos:end="87:18"><type pos:start="87:9" pos:end="87:12"><name pos:start="87:9" pos:end="87:12">char</name></type> <name pos:start="87:14" pos:end="87:18">quote</name></decl>;</decl_stmt>



        <expr_stmt pos:start="91:9" pos:end="91:51"><expr pos:start="91:9" pos:end="91:50"><name pos:start="91:9" pos:end="91:9">p</name> <operator pos:start="91:11" pos:end="91:11">=</operator> <name pos:start="91:13" pos:end="91:19">strings</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <call pos:start="91:23" pos:end="91:50"><name pos:start="91:23" pos:end="91:32">av_mallocz</name><argument_list pos:start="91:33" pos:end="91:50">(<argument pos:start="91:34" pos:end="91:49"><expr pos:start="91:34" pos:end="91:49"><name pos:start="91:34" pos:end="91:45">strings_size</name> <operator pos:start="91:47" pos:end="91:47">+</operator> <literal type="number" pos:start="91:49" pos:end="91:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:38"><expr pos:start="93:9" pos:end="93:37"><name pos:start="93:9" pos:end="93:12">endp</name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:22">strings</name> <operator pos:start="93:24" pos:end="93:24">+</operator> <name pos:start="93:26" pos:end="93:37">strings_size</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><call pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:17">avio_read</name><argument_list pos:start="95:18" pos:end="95:44">(<argument pos:start="95:19" pos:end="95:20"><expr pos:start="95:19" pos:end="95:20"><name pos:start="95:19" pos:end="95:20">pb</name></expr></argument>, <argument pos:start="95:23" pos:end="95:29"><expr pos:start="95:23" pos:end="95:29"><name pos:start="95:23" pos:end="95:29">strings</name></expr></argument>, <argument pos:start="95:32" pos:end="95:43"><expr pos:start="95:32" pos:end="95:43"><name pos:start="95:32" pos:end="95:43">strings_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <while pos:start="97:9" pos:end="133:9">while <condition pos:start="97:15" pos:end="97:24">(<expr pos:start="97:16" pos:end="97:23"><name pos:start="97:16" pos:end="97:16">p</name> <operator pos:start="97:18" pos:end="97:18">&lt;</operator> <name pos:start="97:20" pos:end="97:23">endp</name></expr>)</condition> <block pos:start="97:26" pos:end="133:9">{<block_content pos:start="99:13" pos:end="131:55">

            <while pos:start="99:13" pos:end="101:20">while <condition pos:start="99:19" pos:end="99:29">(<expr pos:start="99:20" pos:end="99:28"><operator pos:start="99:20" pos:end="99:20">*</operator><name pos:start="99:21" pos:end="99:21">p</name> <operator pos:start="99:23" pos:end="99:24">==</operator> <literal type="char" pos:start="99:26" pos:end="99:28">' '</literal></expr>)</condition><block type="pseudo" pos:start="101:17" pos:end="101:20"><block_content pos:start="101:17" pos:end="101:20">

                <expr_stmt pos:start="101:17" pos:end="101:20"><expr pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:17">p</name><operator pos:start="101:18" pos:end="101:19">++</operator></expr>;</expr_stmt></block_content></block></while> <comment type="block" pos:start="101:22" pos:end="101:43">/* strip out spaces */</comment>

            <if_stmt pos:start="103:13" pos:end="105:22"><if pos:start="103:13" pos:end="105:22">if <condition pos:start="103:16" pos:end="103:28">(<expr pos:start="103:17" pos:end="103:27"><name pos:start="103:17" pos:end="103:17">p</name> <operator pos:start="103:19" pos:end="103:20">&gt;=</operator> <name pos:start="103:22" pos:end="103:25">endp</name><operator pos:start="103:26" pos:end="103:26">-</operator><literal type="number" pos:start="103:27" pos:end="103:27">2</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:22"><block_content pos:start="105:17" pos:end="105:22">

                <break pos:start="105:17" pos:end="105:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:22"><expr pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:17">token</name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:21">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:31"><expr pos:start="109:13" pos:end="109:30"><name pos:start="109:13" pos:end="109:13">p</name> <operator pos:start="109:15" pos:end="109:15">=</operator> <call pos:start="109:17" pos:end="109:30"><name pos:start="109:17" pos:end="109:22">strchr</name><argument_list pos:start="109:23" pos:end="109:30">(<argument pos:start="109:24" pos:end="109:24"><expr pos:start="109:24" pos:end="109:24"><name pos:start="109:24" pos:end="109:24">p</name></expr></argument>, <argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><literal type="char" pos:start="109:27" pos:end="109:29">'='</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="111:13" pos:end="113:22"><if pos:start="111:13" pos:end="113:22">if <condition pos:start="111:16" pos:end="111:34">(<expr pos:start="111:17" pos:end="111:33"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:18">p</name> <operator pos:start="111:20" pos:end="111:21">||</operator> <name pos:start="111:23" pos:end="111:23">p</name> <operator pos:start="111:25" pos:end="111:26">&gt;=</operator> <name pos:start="111:28" pos:end="111:31">endp</name><operator pos:start="111:32" pos:end="111:32">-</operator><literal type="number" pos:start="111:33" pos:end="111:33">2</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:22"><block_content pos:start="113:17" pos:end="113:22">

                <break pos:start="113:17" pos:end="113:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><operator pos:start="115:13" pos:end="115:13">*</operator><name pos:start="115:14" pos:end="115:14">p</name><operator pos:start="115:15" pos:end="115:16">++</operator> <operator pos:start="115:18" pos:end="115:18">=</operator> <literal type="char" pos:start="115:20" pos:end="115:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:25"><expr pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:17">quote</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <operator pos:start="117:21" pos:end="117:21">*</operator><name pos:start="117:22" pos:end="117:22">p</name><operator pos:start="117:23" pos:end="117:24">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:22"><expr pos:start="119:13" pos:end="119:21"><name pos:start="119:13" pos:end="119:17">value</name> <operator pos:start="119:19" pos:end="119:19">=</operator> <name pos:start="119:21" pos:end="119:21">p</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:33"><expr pos:start="121:13" pos:end="121:32"><name pos:start="121:13" pos:end="121:13">p</name> <operator pos:start="121:15" pos:end="121:15">=</operator> <call pos:start="121:17" pos:end="121:32"><name pos:start="121:17" pos:end="121:22">strchr</name><argument_list pos:start="121:23" pos:end="121:32">(<argument pos:start="121:24" pos:end="121:24"><expr pos:start="121:24" pos:end="121:24"><name pos:start="121:24" pos:end="121:24">p</name></expr></argument>, <argument pos:start="121:27" pos:end="121:31"><expr pos:start="121:27" pos:end="121:31"><name pos:start="121:27" pos:end="121:31">quote</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="125:22"><if pos:start="123:13" pos:end="125:22">if <condition pos:start="123:16" pos:end="123:32">(<expr pos:start="123:17" pos:end="123:31"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:18">p</name> <operator pos:start="123:20" pos:end="123:21">||</operator> <name pos:start="123:23" pos:end="123:23">p</name> <operator pos:start="123:25" pos:end="123:26">&gt;=</operator> <name pos:start="123:28" pos:end="123:31">endp</name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:22"><block_content pos:start="125:17" pos:end="125:22">

                <break pos:start="125:17" pos:end="125:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:24"><expr pos:start="127:13" pos:end="127:23"><operator pos:start="127:13" pos:end="127:13">*</operator><name pos:start="127:14" pos:end="127:14">p</name><operator pos:start="127:15" pos:end="127:16">++</operator> <operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="char" pos:start="127:20" pos:end="127:23">'\0'</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:65"><expr pos:start="129:13" pos:end="129:64"><call pos:start="129:13" pos:end="129:64"><name pos:start="129:13" pos:end="129:19">av_dlog</name><argument_list pos:start="129:20" pos:end="129:64">(<argument pos:start="129:21" pos:end="129:21"><expr pos:start="129:21" pos:end="129:21"><name pos:start="129:21" pos:end="129:21">s</name></expr></argument>, <argument pos:start="129:24" pos:end="129:49"><expr pos:start="129:24" pos:end="129:49"><literal type="string" pos:start="129:24" pos:end="129:49">"NSV NSVf INFO: %s='%s'\n"</literal></expr></argument>, <argument pos:start="129:52" pos:end="129:56"><expr pos:start="129:52" pos:end="129:56"><name pos:start="129:52" pos:end="129:56">token</name></expr></argument>, <argument pos:start="129:59" pos:end="129:63"><expr pos:start="129:59" pos:end="129:63"><name pos:start="129:59" pos:end="129:63">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:55"><expr pos:start="131:13" pos:end="131:54"><call pos:start="131:13" pos:end="131:54"><name pos:start="131:13" pos:end="131:23">av_dict_set</name><argument_list pos:start="131:24" pos:end="131:54">(<argument pos:start="131:25" pos:end="131:36"><expr pos:start="131:25" pos:end="131:36"><operator pos:start="131:25" pos:end="131:25">&amp;</operator><name pos:start="131:26" pos:end="131:36"><name pos:start="131:26" pos:end="131:26">s</name><operator pos:start="131:27" pos:end="131:28">-&gt;</operator><name pos:start="131:29" pos:end="131:36">metadata</name></name></expr></argument>, <argument pos:start="131:39" pos:end="131:43"><expr pos:start="131:39" pos:end="131:43"><name pos:start="131:39" pos:end="131:43">token</name></expr></argument>, <argument pos:start="131:46" pos:end="131:50"><expr pos:start="131:46" pos:end="131:50"><name pos:start="131:46" pos:end="131:50">value</name></expr></argument>, <argument pos:start="131:53" pos:end="131:53"><expr pos:start="131:53" pos:end="131:53"><literal type="number" pos:start="131:53" pos:end="131:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

        <expr_stmt pos:start="135:9" pos:end="135:25"><expr pos:start="135:9" pos:end="135:24"><call pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:15">av_free</name><argument_list pos:start="135:16" pos:end="135:24">(<argument pos:start="135:17" pos:end="135:23"><expr pos:start="135:17" pos:end="135:23"><name pos:start="135:17" pos:end="135:23">strings</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="139:5" pos:end="141:18"><if pos:start="139:5" pos:end="141:18">if <condition pos:start="139:8" pos:end="139:24">(<expr pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:23"><name pos:start="139:9" pos:end="139:10">pb</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:18"><block_content pos:start="141:9" pos:end="141:18">

        <return pos:start="141:9" pos:end="141:18">return <expr pos:start="141:16" pos:end="141:17"><operator pos:start="141:16" pos:end="141:16">-</operator><literal type="number" pos:start="141:17" pos:end="141:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="145:5" pos:end="145:68"><expr pos:start="145:5" pos:end="145:67"><call pos:start="145:5" pos:end="145:67"><name pos:start="145:5" pos:end="145:11">av_dlog</name><argument_list pos:start="145:12" pos:end="145:67">(<argument pos:start="145:13" pos:end="145:13"><expr pos:start="145:13" pos:end="145:13"><name pos:start="145:13" pos:end="145:13">s</name></expr></argument>, <argument pos:start="145:16" pos:end="145:51"><expr pos:start="145:16" pos:end="145:51"><literal type="string" pos:start="145:16" pos:end="145:41">"NSV got infos; filepos %"</literal><name pos:start="145:42" pos:end="145:47">PRId64</name><literal type="string" pos:start="145:48" pos:end="145:51">"\n"</literal></expr></argument>, <argument pos:start="145:54" pos:end="145:66"><expr pos:start="145:54" pos:end="145:66"><call pos:start="145:54" pos:end="145:66"><name pos:start="145:54" pos:end="145:62">avio_tell</name><argument_list pos:start="145:63" pos:end="145:66">(<argument pos:start="145:64" pos:end="145:65"><expr pos:start="145:64" pos:end="145:65"><name pos:start="145:64" pos:end="145:65">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="183:5"><if pos:start="149:5" pos:end="183:5">if <condition pos:start="149:8" pos:end="149:31">(<expr pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:26">table_entries_used</name> <operator pos:start="149:28" pos:end="149:28">&gt;</operator> <literal type="number" pos:start="149:30" pos:end="149:30">0</literal></expr>)</condition> <block pos:start="149:33" pos:end="183:5">{<block_content pos:start="151:9" pos:end="181:9">

        <decl_stmt pos:start="151:9" pos:end="151:14"><decl pos:start="151:9" pos:end="151:13"><type pos:start="151:9" pos:end="151:11"><name pos:start="151:9" pos:end="151:11">int</name></type> <name pos:start="151:13" pos:end="151:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:48"><expr pos:start="153:9" pos:end="153:47"><name pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:11">nsv</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:26">index_entries</name></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <name pos:start="153:30" pos:end="153:47">table_entries_used</name></expr>;</expr_stmt>

        <if_stmt pos:start="155:9" pos:end="157:22"><if pos:start="155:9" pos:end="157:22">if<condition pos:start="155:11" pos:end="155:71">(<expr pos:start="155:12" pos:end="155:70"><operator pos:start="155:12" pos:end="155:12">(</operator><name pos:start="155:13" pos:end="155:20">unsigned</name><operator pos:start="155:21" pos:end="155:21">)</operator><name pos:start="155:22" pos:end="155:39">table_entries_used</name> <operator pos:start="155:41" pos:end="155:42">&gt;=</operator> <name pos:start="155:44" pos:end="155:51">UINT_MAX</name> <operator pos:start="155:53" pos:end="155:53">/</operator> <sizeof pos:start="155:55" pos:end="155:70">sizeof<argument_list pos:start="155:61" pos:end="155:70">(<argument pos:start="155:62" pos:end="155:69"><expr pos:start="155:62" pos:end="155:69"><name pos:start="155:62" pos:end="155:69">uint32_t</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="157:13" pos:end="157:22"><block_content pos:start="157:13" pos:end="157:22">

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:91"><expr pos:start="159:9" pos:end="159:90"><name pos:start="159:9" pos:end="159:29"><name pos:start="159:9" pos:end="159:11">nsv</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:29">nsvs_file_offset</name></name> <operator pos:start="159:31" pos:end="159:31">=</operator> <call pos:start="159:33" pos:end="159:90"><name pos:start="159:33" pos:end="159:41">av_malloc</name><argument_list pos:start="159:42" pos:end="159:90">(<argument pos:start="159:43" pos:end="159:89"><expr pos:start="159:43" pos:end="159:89"><operator pos:start="159:43" pos:end="159:43">(</operator><name pos:start="159:44" pos:end="159:51">unsigned</name><operator pos:start="159:52" pos:end="159:52">)</operator><name pos:start="159:53" pos:end="159:70">table_entries_used</name> <operator pos:start="159:72" pos:end="159:72">*</operator> <sizeof pos:start="159:74" pos:end="159:89">sizeof<argument_list pos:start="159:80" pos:end="159:89">(<argument pos:start="159:81" pos:end="159:88"><expr pos:start="159:81" pos:end="159:88"><name pos:start="159:81" pos:end="159:88">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="163:9" pos:end="165:60">for<control pos:start="163:12" pos:end="163:41">(<init pos:start="163:13" pos:end="163:16"><expr pos:start="163:13" pos:end="163:15"><name pos:start="163:13" pos:end="163:13">i</name><operator pos:start="163:14" pos:end="163:14">=</operator><literal type="number" pos:start="163:15" pos:end="163:15">0</literal></expr>;</init><condition pos:start="163:17" pos:end="163:37"><expr pos:start="163:17" pos:end="163:36"><name pos:start="163:17" pos:end="163:17">i</name><operator pos:start="163:18" pos:end="163:18">&lt;</operator><name pos:start="163:19" pos:end="163:36">table_entries_used</name></expr>;</condition><incr pos:start="163:38" pos:end="163:40"><expr pos:start="163:38" pos:end="163:40"><name pos:start="163:38" pos:end="163:38">i</name><operator pos:start="163:39" pos:end="163:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="165:13" pos:end="165:60"><block_content pos:start="165:13" pos:end="165:60">

            <expr_stmt pos:start="165:13" pos:end="165:60"><expr pos:start="165:13" pos:end="165:59"><name pos:start="165:13" pos:end="165:36"><name pos:start="165:13" pos:end="165:15">nsv</name><operator pos:start="165:16" pos:end="165:17">-&gt;</operator><name pos:start="165:18" pos:end="165:33">nsvs_file_offset</name><index pos:start="165:34" pos:end="165:36">[<expr pos:start="165:35" pos:end="165:35"><name pos:start="165:35" pos:end="165:35">i</name></expr>]</index></name> <operator pos:start="165:38" pos:end="165:38">=</operator> <call pos:start="165:40" pos:end="165:52"><name pos:start="165:40" pos:end="165:48">avio_rl32</name><argument_list pos:start="165:49" pos:end="165:52">(<argument pos:start="165:50" pos:end="165:51"><expr pos:start="165:50" pos:end="165:51"><name pos:start="165:50" pos:end="165:51">pb</name></expr></argument>)</argument_list></call> <operator pos:start="165:54" pos:end="165:54">+</operator> <name pos:start="165:56" pos:end="165:59">size</name></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="169:9" pos:end="181:9"><if pos:start="169:9" pos:end="181:9">if<condition pos:start="169:11" pos:end="171:51">(<expr pos:start="169:12" pos:end="171:50"><name pos:start="169:12" pos:end="169:24">table_entries</name> <operator pos:start="169:26" pos:end="169:26">&gt;</operator> <name pos:start="169:28" pos:end="169:45">table_entries_used</name> <operator pos:start="169:47" pos:end="169:48">&amp;&amp;</operator>

           <call pos:start="171:12" pos:end="171:24"><name pos:start="171:12" pos:end="171:20">avio_rl32</name><argument_list pos:start="171:21" pos:end="171:24">(<argument pos:start="171:22" pos:end="171:23"><expr pos:start="171:22" pos:end="171:23"><name pos:start="171:22" pos:end="171:23">pb</name></expr></argument>)</argument_list></call> <operator pos:start="171:26" pos:end="171:27">==</operator> <call pos:start="171:29" pos:end="171:50"><name pos:start="171:29" pos:end="171:33">MKTAG</name><argument_list pos:start="171:34" pos:end="171:50">(<argument pos:start="171:35" pos:end="171:37"><expr pos:start="171:35" pos:end="171:37"><literal type="char" pos:start="171:35" pos:end="171:37">'T'</literal></expr></argument>,<argument pos:start="171:39" pos:end="171:41"><expr pos:start="171:39" pos:end="171:41"><literal type="char" pos:start="171:39" pos:end="171:41">'O'</literal></expr></argument>,<argument pos:start="171:43" pos:end="171:45"><expr pos:start="171:43" pos:end="171:45"><literal type="char" pos:start="171:43" pos:end="171:45">'C'</literal></expr></argument>,<argument pos:start="171:47" pos:end="171:49"><expr pos:start="171:47" pos:end="171:49"><literal type="char" pos:start="171:47" pos:end="171:49">'2'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:53" pos:end="181:9">{<block_content pos:start="173:13" pos:end="179:13">

            <expr_stmt pos:start="173:13" pos:end="173:92"><expr pos:start="173:13" pos:end="173:91"><name pos:start="173:13" pos:end="173:32"><name pos:start="173:13" pos:end="173:15">nsv</name><operator pos:start="173:16" pos:end="173:17">-&gt;</operator><name pos:start="173:18" pos:end="173:32">nsvs_timestamps</name></name> <operator pos:start="173:34" pos:end="173:34">=</operator> <call pos:start="173:36" pos:end="173:91"><name pos:start="173:36" pos:end="173:44">av_malloc</name><argument_list pos:start="173:45" pos:end="173:91">(<argument pos:start="173:46" pos:end="173:90"><expr pos:start="173:46" pos:end="173:90"><operator pos:start="173:46" pos:end="173:46">(</operator><name pos:start="173:47" pos:end="173:54">unsigned</name><operator pos:start="173:55" pos:end="173:55">)</operator><name pos:start="173:56" pos:end="173:73">table_entries_used</name><operator pos:start="173:74" pos:end="173:74">*</operator><sizeof pos:start="173:75" pos:end="173:90">sizeof<argument_list pos:start="173:81" pos:end="173:90">(<argument pos:start="173:82" pos:end="173:89"><expr pos:start="173:82" pos:end="173:89"><name pos:start="173:82" pos:end="173:89">uint32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="175:13" pos:end="179:13">for<control pos:start="175:16" pos:end="175:45">(<init pos:start="175:17" pos:end="175:20"><expr pos:start="175:17" pos:end="175:19"><name pos:start="175:17" pos:end="175:17">i</name><operator pos:start="175:18" pos:end="175:18">=</operator><literal type="number" pos:start="175:19" pos:end="175:19">0</literal></expr>;</init><condition pos:start="175:21" pos:end="175:41"><expr pos:start="175:21" pos:end="175:40"><name pos:start="175:21" pos:end="175:21">i</name><operator pos:start="175:22" pos:end="175:22">&lt;</operator><name pos:start="175:23" pos:end="175:40">table_entries_used</name></expr>;</condition><incr pos:start="175:42" pos:end="175:44"><expr pos:start="175:42" pos:end="175:44"><name pos:start="175:42" pos:end="175:42">i</name><operator pos:start="175:43" pos:end="175:44">++</operator></expr></incr>)</control> <block pos:start="175:47" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:56">

                <expr_stmt pos:start="177:17" pos:end="177:56"><expr pos:start="177:17" pos:end="177:55"><name pos:start="177:17" pos:end="177:39"><name pos:start="177:17" pos:end="177:19">nsv</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:36">nsvs_timestamps</name><index pos:start="177:37" pos:end="177:39">[<expr pos:start="177:38" pos:end="177:38"><name pos:start="177:38" pos:end="177:38">i</name></expr>]</index></name> <operator pos:start="177:41" pos:end="177:41">=</operator> <call pos:start="177:43" pos:end="177:55"><name pos:start="177:43" pos:end="177:51">avio_rl32</name><argument_list pos:start="177:52" pos:end="177:55">(<argument pos:start="177:53" pos:end="177:54"><expr pos:start="177:53" pos:end="177:54"><name pos:start="177:53" pos:end="177:54">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="187:5" pos:end="194:0"><expr pos:start="187:5" pos:end="187:67"><call pos:start="187:5" pos:end="187:67"><name pos:start="187:5" pos:end="187:11">av_dlog</name><argument_list pos:start="187:12" pos:end="187:67">(<argument pos:start="187:13" pos:end="187:13"><expr pos:start="187:13" pos:end="187:13"><name pos:start="187:13" pos:end="187:13">s</name></expr></argument>, <argument pos:start="187:16" pos:end="187:51"><expr pos:start="187:16" pos:end="187:51"><literal type="string" pos:start="187:16" pos:end="187:41">"NSV got index; filepos %"</literal><name pos:start="187:42" pos:end="187:47">PRId64</name><literal type="string" pos:start="187:48" pos:end="187:51">"\n"</literal></expr></argument>, <argument pos:start="187:54" pos:end="187:66"><expr pos:start="187:54" pos:end="187:66"><call pos:start="187:54" pos:end="187:66"><name pos:start="187:54" pos:end="187:62">avio_tell</name><argument_list pos:start="187:63" pos:end="187:66">(<argument pos:start="187:64" pos:end="187:65"><expr pos:start="187:64" pos:end="187:65"><name pos:start="187:64" pos:end="187:65">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="191:1" pos:end="191:23">#<cpp:directive pos:start="191:2" pos:end="191:6">ifdef</cpp:directive> <name pos:start="191:8" pos:end="191:23">DEBUG_DUMP_INDEX</name></cpp:ifdef>

<cpp:define pos:start="193:1" pos:end="193:40">#<cpp:directive pos:start="193:2" pos:end="193:7">define</cpp:directive> <cpp:macro pos:start="193:9" pos:end="193:12"><name pos:start="193:9" pos:end="193:9">V</name><parameter_list pos:start="193:10" pos:end="193:12">(<parameter pos:start="193:11" pos:end="193:11"><type pos:start="193:11" pos:end="193:11"><name pos:start="193:11" pos:end="193:11">v</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="193:14" pos:end="193:40">((v&lt;0x20 || v &gt; 127)?'.':v)</cpp:value></cpp:define>

    <comment type="block" pos:start="195:5" pos:end="195:20">/* dump index */</comment>

    <expr_stmt pos:start="197:5" pos:end="197:57"><expr pos:start="197:5" pos:end="197:56"><call pos:start="197:5" pos:end="197:56"><name pos:start="197:5" pos:end="197:11">av_dlog</name><argument_list pos:start="197:12" pos:end="197:56">(<argument pos:start="197:13" pos:end="197:13"><expr pos:start="197:13" pos:end="197:13"><name pos:start="197:13" pos:end="197:13">s</name></expr></argument>, <argument pos:start="197:16" pos:end="197:40"><expr pos:start="197:16" pos:end="197:40"><literal type="string" pos:start="197:16" pos:end="197:40">"NSV %d INDEX ENTRIES:\n"</literal></expr></argument>, <argument pos:start="197:43" pos:end="197:55"><expr pos:start="197:43" pos:end="197:55"><name pos:start="197:43" pos:end="197:55">table_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:64"><expr pos:start="199:5" pos:end="199:63"><call pos:start="199:5" pos:end="199:63"><name pos:start="199:5" pos:end="199:11">av_dlog</name><argument_list pos:start="199:12" pos:end="199:63">(<argument pos:start="199:13" pos:end="199:13"><expr pos:start="199:13" pos:end="199:13"><name pos:start="199:13" pos:end="199:13">s</name></expr></argument>, <argument pos:start="199:16" pos:end="199:47"><expr pos:start="199:16" pos:end="199:47"><literal type="string" pos:start="199:16" pos:end="199:47">"NSV [dataoffset][fileoffset]\n"</literal></expr></argument>, <argument pos:start="199:50" pos:end="199:62"><expr pos:start="199:50" pos:end="199:62"><name pos:start="199:50" pos:end="199:62">table_entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="201:5" pos:end="226:0">for <control pos:start="201:9" pos:end="201:39">(<init pos:start="201:10" pos:end="201:15"><expr pos:start="201:10" pos:end="201:14"><name pos:start="201:10" pos:end="201:10">i</name> <operator pos:start="201:12" pos:end="201:12">=</operator> <literal type="number" pos:start="201:14" pos:end="201:14">0</literal></expr>;</init> <condition pos:start="201:17" pos:end="201:34"><expr pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:17">i</name> <operator pos:start="201:19" pos:end="201:19">&lt;</operator> <name pos:start="201:21" pos:end="201:33">table_entries</name></expr>;</condition> <incr pos:start="201:36" pos:end="201:38"><expr pos:start="201:36" pos:end="201:38"><name pos:start="201:36" pos:end="201:36">i</name><operator pos:start="201:37" pos:end="201:38">++</operator></expr></incr>)</control> <block pos:start="201:41" pos:end="226:0">{<block_content pos:start="203:9" pos:end="217:84">

        <decl_stmt pos:start="203:9" pos:end="203:27"><decl pos:start="203:9" pos:end="203:26"><type pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:16">unsigned</name> <name pos:start="203:18" pos:end="203:21">char</name></type> <name pos:start="203:23" pos:end="203:26"><name pos:start="203:23" pos:end="203:23">b</name><index pos:start="203:24" pos:end="203:26">[<expr pos:start="203:25" pos:end="203:25"><literal type="number" pos:start="203:25" pos:end="203:25">8</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:65"><expr pos:start="205:9" pos:end="205:64"><call pos:start="205:9" pos:end="205:64"><name pos:start="205:9" pos:end="205:17">avio_seek</name><argument_list pos:start="205:18" pos:end="205:64">(<argument pos:start="205:19" pos:end="205:20"><expr pos:start="205:19" pos:end="205:20"><name pos:start="205:19" pos:end="205:20">pb</name></expr></argument>, <argument pos:start="205:23" pos:end="205:53"><expr pos:start="205:23" pos:end="205:53"><name pos:start="205:23" pos:end="205:26">size</name> <operator pos:start="205:28" pos:end="205:28">+</operator> <name pos:start="205:30" pos:end="205:53"><name pos:start="205:30" pos:end="205:32">nsv</name><operator pos:start="205:33" pos:end="205:34">-&gt;</operator><name pos:start="205:35" pos:end="205:50">nsvs_file_offset</name><index pos:start="205:51" pos:end="205:53">[<expr pos:start="205:52" pos:end="205:52"><name pos:start="205:52" pos:end="205:52">i</name></expr>]</index></name></expr></argument>, <argument pos:start="205:56" pos:end="205:63"><expr pos:start="205:56" pos:end="205:63"><name pos:start="205:56" pos:end="205:63">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:28"><expr pos:start="207:9" pos:end="207:27"><call pos:start="207:9" pos:end="207:27"><name pos:start="207:9" pos:end="207:17">avio_read</name><argument_list pos:start="207:18" pos:end="207:27">(<argument pos:start="207:19" pos:end="207:20"><expr pos:start="207:19" pos:end="207:20"><name pos:start="207:19" pos:end="207:20">pb</name></expr></argument>, <argument pos:start="207:23" pos:end="207:23"><expr pos:start="207:23" pos:end="207:23"><name pos:start="207:23" pos:end="207:23">b</name></expr></argument>, <argument pos:start="207:26" pos:end="207:26"><expr pos:start="207:26" pos:end="207:26"><literal type="number" pos:start="207:26" pos:end="207:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="209:9" pos:end="217:84"><expr pos:start="209:9" pos:end="217:83"><call pos:start="209:9" pos:end="217:83"><name pos:start="209:9" pos:end="209:15">av_dlog</name><argument_list pos:start="209:16" pos:end="217:83">(<argument pos:start="209:17" pos:end="209:17"><expr pos:start="209:17" pos:end="209:17"><name pos:start="209:17" pos:end="209:17">s</name></expr></argument>, <argument pos:start="209:20" pos:end="211:31"><expr pos:start="209:20" pos:end="211:31"><literal type="string" pos:start="209:20" pos:end="209:84">"NSV [0x%08lx][0x%08lx]: %02x %02x %02x %02x %02x %02x %02x %02x"</literal>

           <literal type="string" pos:start="211:12" pos:end="211:31">"%c%c%c%c%c%c%c%c\n"</literal></expr></argument>,

           <argument pos:start="213:12" pos:end="213:35"><expr pos:start="213:12" pos:end="213:35"><name pos:start="213:12" pos:end="213:35"><name pos:start="213:12" pos:end="213:14">nsv</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:32">nsvs_file_offset</name><index pos:start="213:33" pos:end="213:35">[<expr pos:start="213:34" pos:end="213:34"><name pos:start="213:34" pos:end="213:34">i</name></expr>]</index></name></expr></argument>, <argument pos:start="213:38" pos:end="213:68"><expr pos:start="213:38" pos:end="213:68"><name pos:start="213:38" pos:end="213:41">size</name> <operator pos:start="213:43" pos:end="213:43">+</operator> <name pos:start="213:45" pos:end="213:68"><name pos:start="213:45" pos:end="213:47">nsv</name><operator pos:start="213:48" pos:end="213:49">-&gt;</operator><name pos:start="213:50" pos:end="213:65">nsvs_file_offset</name><index pos:start="213:66" pos:end="213:68">[<expr pos:start="213:67" pos:end="213:67"><name pos:start="213:67" pos:end="213:67">i</name></expr>]</index></name></expr></argument>,

           <argument pos:start="215:12" pos:end="215:15"><expr pos:start="215:12" pos:end="215:15"><name pos:start="215:12" pos:end="215:15"><name pos:start="215:12" pos:end="215:12">b</name><index pos:start="215:13" pos:end="215:15">[<expr pos:start="215:14" pos:end="215:14"><literal type="number" pos:start="215:14" pos:end="215:14">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:18" pos:end="215:21"><expr pos:start="215:18" pos:end="215:21"><name pos:start="215:18" pos:end="215:21"><name pos:start="215:18" pos:end="215:18">b</name><index pos:start="215:19" pos:end="215:21">[<expr pos:start="215:20" pos:end="215:20"><literal type="number" pos:start="215:20" pos:end="215:20">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:24" pos:end="215:27"><expr pos:start="215:24" pos:end="215:27"><name pos:start="215:24" pos:end="215:27"><name pos:start="215:24" pos:end="215:24">b</name><index pos:start="215:25" pos:end="215:27">[<expr pos:start="215:26" pos:end="215:26"><literal type="number" pos:start="215:26" pos:end="215:26">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:30" pos:end="215:33"><expr pos:start="215:30" pos:end="215:33"><name pos:start="215:30" pos:end="215:33"><name pos:start="215:30" pos:end="215:30">b</name><index pos:start="215:31" pos:end="215:33">[<expr pos:start="215:32" pos:end="215:32"><literal type="number" pos:start="215:32" pos:end="215:32">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:36" pos:end="215:39"><expr pos:start="215:36" pos:end="215:39"><name pos:start="215:36" pos:end="215:39"><name pos:start="215:36" pos:end="215:36">b</name><index pos:start="215:37" pos:end="215:39">[<expr pos:start="215:38" pos:end="215:38"><literal type="number" pos:start="215:38" pos:end="215:38">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:42" pos:end="215:45"><expr pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:42">b</name><index pos:start="215:43" pos:end="215:45">[<expr pos:start="215:44" pos:end="215:44"><literal type="number" pos:start="215:44" pos:end="215:44">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:48" pos:end="215:51"><expr pos:start="215:48" pos:end="215:51"><name pos:start="215:48" pos:end="215:51"><name pos:start="215:48" pos:end="215:48">b</name><index pos:start="215:49" pos:end="215:51">[<expr pos:start="215:50" pos:end="215:50"><literal type="number" pos:start="215:50" pos:end="215:50">6</literal></expr>]</index></name></expr></argument>, <argument pos:start="215:54" pos:end="215:57"><expr pos:start="215:54" pos:end="215:57"><name pos:start="215:54" pos:end="215:57"><name pos:start="215:54" pos:end="215:54">b</name><index pos:start="215:55" pos:end="215:57">[<expr pos:start="215:56" pos:end="215:56"><literal type="number" pos:start="215:56" pos:end="215:56">7</literal></expr>]</index></name></expr></argument>,

           <argument pos:start="217:12" pos:end="217:18"><expr pos:start="217:12" pos:end="217:18"><call pos:start="217:12" pos:end="217:18"><name pos:start="217:12" pos:end="217:12">V</name><argument_list pos:start="217:13" pos:end="217:18">(<argument pos:start="217:14" pos:end="217:17"><expr pos:start="217:14" pos:end="217:17"><name pos:start="217:14" pos:end="217:17"><name pos:start="217:14" pos:end="217:14">b</name><index pos:start="217:15" pos:end="217:17">[<expr pos:start="217:16" pos:end="217:16"><literal type="number" pos:start="217:16" pos:end="217:16">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:21" pos:end="217:27"><expr pos:start="217:21" pos:end="217:27"><call pos:start="217:21" pos:end="217:27"><name pos:start="217:21" pos:end="217:21">V</name><argument_list pos:start="217:22" pos:end="217:27">(<argument pos:start="217:23" pos:end="217:26"><expr pos:start="217:23" pos:end="217:26"><name pos:start="217:23" pos:end="217:26"><name pos:start="217:23" pos:end="217:23">b</name><index pos:start="217:24" pos:end="217:26">[<expr pos:start="217:25" pos:end="217:25"><literal type="number" pos:start="217:25" pos:end="217:25">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:30" pos:end="217:36"><expr pos:start="217:30" pos:end="217:36"><call pos:start="217:30" pos:end="217:36"><name pos:start="217:30" pos:end="217:30">V</name><argument_list pos:start="217:31" pos:end="217:36">(<argument pos:start="217:32" pos:end="217:35"><expr pos:start="217:32" pos:end="217:35"><name pos:start="217:32" pos:end="217:35"><name pos:start="217:32" pos:end="217:32">b</name><index pos:start="217:33" pos:end="217:35">[<expr pos:start="217:34" pos:end="217:34"><literal type="number" pos:start="217:34" pos:end="217:34">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:39" pos:end="217:45"><expr pos:start="217:39" pos:end="217:45"><call pos:start="217:39" pos:end="217:45"><name pos:start="217:39" pos:end="217:39">V</name><argument_list pos:start="217:40" pos:end="217:45">(<argument pos:start="217:41" pos:end="217:44"><expr pos:start="217:41" pos:end="217:44"><name pos:start="217:41" pos:end="217:44"><name pos:start="217:41" pos:end="217:41">b</name><index pos:start="217:42" pos:end="217:44">[<expr pos:start="217:43" pos:end="217:43"><literal type="number" pos:start="217:43" pos:end="217:43">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:48" pos:end="217:54"><expr pos:start="217:48" pos:end="217:54"><call pos:start="217:48" pos:end="217:54"><name pos:start="217:48" pos:end="217:48">V</name><argument_list pos:start="217:49" pos:end="217:54">(<argument pos:start="217:50" pos:end="217:53"><expr pos:start="217:50" pos:end="217:53"><name pos:start="217:50" pos:end="217:53"><name pos:start="217:50" pos:end="217:50">b</name><index pos:start="217:51" pos:end="217:53">[<expr pos:start="217:52" pos:end="217:52"><literal type="number" pos:start="217:52" pos:end="217:52">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:57" pos:end="217:63"><expr pos:start="217:57" pos:end="217:63"><call pos:start="217:57" pos:end="217:63"><name pos:start="217:57" pos:end="217:57">V</name><argument_list pos:start="217:58" pos:end="217:63">(<argument pos:start="217:59" pos:end="217:62"><expr pos:start="217:59" pos:end="217:62"><name pos:start="217:59" pos:end="217:62"><name pos:start="217:59" pos:end="217:59">b</name><index pos:start="217:60" pos:end="217:62">[<expr pos:start="217:61" pos:end="217:61"><literal type="number" pos:start="217:61" pos:end="217:61">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:66" pos:end="217:72"><expr pos:start="217:66" pos:end="217:72"><call pos:start="217:66" pos:end="217:72"><name pos:start="217:66" pos:end="217:66">V</name><argument_list pos:start="217:67" pos:end="217:72">(<argument pos:start="217:68" pos:end="217:71"><expr pos:start="217:68" pos:end="217:71"><name pos:start="217:68" pos:end="217:71"><name pos:start="217:68" pos:end="217:68">b</name><index pos:start="217:69" pos:end="217:71">[<expr pos:start="217:70" pos:end="217:70"><literal type="number" pos:start="217:70" pos:end="217:70">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:75" pos:end="217:81"><expr pos:start="217:75" pos:end="217:81"><call pos:start="217:75" pos:end="217:81"><name pos:start="217:75" pos:end="217:75">V</name><argument_list pos:start="217:76" pos:end="217:81">(<argument pos:start="217:77" pos:end="217:80"><expr pos:start="217:77" pos:end="217:80"><name pos:start="217:77" pos:end="217:80"><name pos:start="217:77" pos:end="217:77">b</name><index pos:start="217:78" pos:end="217:80">[<expr pos:start="217:79" pos:end="217:79"><literal type="number" pos:start="217:79" pos:end="217:79">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="line" pos:start="221:5" pos:end="221:67">//avio_seek(pb, size, SEEK_SET); /* go back to end of header */</comment>

<cpp:undef pos:start="223:1" pos:end="223:8">#<cpp:directive pos:start="223:2" pos:end="223:6">undef</cpp:directive> <name pos:start="223:8" pos:end="223:8">V</name></cpp:undef>

<cpp:endif pos:start="225:1" pos:end="225:6">#<cpp:directive pos:start="225:2" pos:end="225:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="229:5" pos:end="229:53"><expr pos:start="229:5" pos:end="229:52"><call pos:start="229:5" pos:end="229:52"><name pos:start="229:5" pos:end="229:13">avio_seek</name><argument_list pos:start="229:14" pos:end="229:52">(<argument pos:start="229:15" pos:end="229:16"><expr pos:start="229:15" pos:end="229:16"><name pos:start="229:15" pos:end="229:16">pb</name></expr></argument>, <argument pos:start="229:19" pos:end="229:41"><expr pos:start="229:19" pos:end="229:41"><name pos:start="229:19" pos:end="229:34"><name pos:start="229:19" pos:end="229:21">nsv</name><operator pos:start="229:22" pos:end="229:23">-&gt;</operator><name pos:start="229:24" pos:end="229:34">base_offset</name></name> <operator pos:start="229:36" pos:end="229:36">+</operator> <name pos:start="229:38" pos:end="229:41">size</name></expr></argument>, <argument pos:start="229:44" pos:end="229:51"><expr pos:start="229:44" pos:end="229:51"><name pos:start="229:44" pos:end="229:51">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="229:55" pos:end="229:108">/* required for dumbdriving-271.nsv (2 extra bytes) */</comment>



    <if_stmt pos:start="233:5" pos:end="235:18"><if pos:start="233:5" pos:end="235:18">if <condition pos:start="233:8" pos:end="233:24">(<expr pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:23"><name pos:start="233:9" pos:end="233:10">pb</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:23">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:18"><block_content pos:start="235:9" pos:end="235:18">

        <return pos:start="235:9" pos:end="235:18">return <expr pos:start="235:16" pos:end="235:17"><operator pos:start="235:16" pos:end="235:16">-</operator><literal type="number" pos:start="235:17" pos:end="235:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:35"><expr pos:start="237:5" pos:end="237:34"><name pos:start="237:5" pos:end="237:14"><name pos:start="237:5" pos:end="237:7">nsv</name><operator pos:start="237:8" pos:end="237:9">-&gt;</operator><name pos:start="237:10" pos:end="237:14">state</name></name> <operator pos:start="237:16" pos:end="237:16">=</operator> <name pos:start="237:18" pos:end="237:34">NSV_HAS_READ_NSVF</name></expr>;</expr_stmt>

    <return pos:start="239:5" pos:end="239:13">return <expr pos:start="239:12" pos:end="239:12"><literal type="number" pos:start="239:12" pos:end="239:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
