<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14513.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">local_mknod</name><parameter_list pos:start="1:23" pos:end="3:55">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:32">FsContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">fs_ctx</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:60"><decl pos:start="1:43" pos:end="1:60"><type pos:start="1:43" pos:end="1:60"><name pos:start="1:43" pos:end="1:50">V9fsPath</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:60">dir_path</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:39"><decl pos:start="3:24" pos:end="3:39"><type pos:start="3:24" pos:end="3:39"><specifier pos:start="3:24" pos:end="3:28">const</specifier> <name pos:start="3:30" pos:end="3:33">char</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:39">name</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:47">FsCred</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:54">credp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="125:1">{<block_content pos:start="7:5" pos:end="123:15">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">err</name> <init pos:start="9:13" pos:end="9:16">= <expr pos:start="9:15" pos:end="9:16"><operator pos:start="9:15" pos:end="9:15">-</operator><literal type="number" pos:start="9:16" pos:end="9:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:14">serrno</name> <init pos:start="11:16" pos:end="11:18">= <expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">V9fsString</name></type> <name pos:start="13:16" pos:end="13:23">fullname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:16">buffer</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:20">v9fs_string_init</name><argument_list pos:start="19:21" pos:end="19:31">(<argument pos:start="19:22" pos:end="19:30"><expr pos:start="19:22" pos:end="19:30"><operator pos:start="19:22" pos:end="19:22">&amp;</operator><name pos:start="19:23" pos:end="19:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:66"><expr pos:start="21:5" pos:end="21:65"><call pos:start="21:5" pos:end="21:65"><name pos:start="21:5" pos:end="21:23">v9fs_string_sprintf</name><argument_list pos:start="21:24" pos:end="21:65">(<argument pos:start="21:25" pos:end="21:33"><expr pos:start="21:25" pos:end="21:33"><operator pos:start="21:25" pos:end="21:25">&amp;</operator><name pos:start="21:26" pos:end="21:33">fullname</name></expr></argument>, <argument pos:start="21:36" pos:end="21:42"><expr pos:start="21:36" pos:end="21:42"><literal type="string" pos:start="21:36" pos:end="21:42">"%s/%s"</literal></expr></argument>, <argument pos:start="21:45" pos:end="21:58"><expr pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:52">dir_path</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">data</name></name></expr></argument>, <argument pos:start="21:61" pos:end="21:64"><expr pos:start="21:61" pos:end="21:64"><name pos:start="21:61" pos:end="21:64">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:8">path</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:24"><name pos:start="23:12" pos:end="23:19">fullname</name><operator pos:start="23:20" pos:end="23:20">.</operator><name pos:start="23:21" pos:end="23:24">data</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:38">/* Determine the security model */</comment>

    <if_stmt pos:start="29:5" pos:end="105:5"><if pos:start="29:5" pos:end="53:5">if <condition pos:start="29:8" pos:end="29:46">(<expr pos:start="29:9" pos:end="29:45"><name pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:14">fs_ctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:28">export_flags</name></name> <operator pos:start="29:30" pos:end="29:30">&amp;</operator> <name pos:start="29:32" pos:end="29:45">V9FS_SM_MAPPED</name></expr>)</condition> <block pos:start="29:48" pos:end="53:5">{<block_content pos:start="31:9" pos:end="51:9">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:14">buffer</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <call pos:start="31:18" pos:end="31:36"><name pos:start="31:18" pos:end="31:22">rpath</name><argument_list pos:start="31:23" pos:end="31:36">(<argument pos:start="31:24" pos:end="31:29"><expr pos:start="31:24" pos:end="31:29"><name pos:start="31:24" pos:end="31:29">fs_ctx</name></expr></argument>, <argument pos:start="31:32" pos:end="31:35"><expr pos:start="31:32" pos:end="31:35"><name pos:start="31:32" pos:end="31:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:59"><expr pos:start="33:9" pos:end="33:58"><name pos:start="33:9" pos:end="33:11">err</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:58"><name pos:start="33:15" pos:end="33:19">mknod</name><argument_list pos:start="33:20" pos:end="33:58">(<argument pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26">buffer</name></expr></argument>, <argument pos:start="33:29" pos:end="33:54"><expr pos:start="33:29" pos:end="33:54"><name pos:start="33:29" pos:end="33:46">SM_LOCAL_MODE_BITS</name><operator pos:start="33:47" pos:end="33:47">|</operator><name pos:start="33:48" pos:end="33:54">S_IFREG</name></expr></argument>, <argument pos:start="33:57" pos:end="33:57"><expr pos:start="33:57" pos:end="33:57"><literal type="number" pos:start="33:57" pos:end="33:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="41:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="35:22">(<expr pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:15">err</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>)</condition> <block pos:start="35:24" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:21">

            <expr_stmt pos:start="37:13" pos:end="37:27"><expr pos:start="37:13" pos:end="37:26"><call pos:start="37:13" pos:end="37:26"><name pos:start="37:13" pos:end="37:18">g_free</name><argument_list pos:start="37:19" pos:end="37:26">(<argument pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:25"><name pos:start="37:20" pos:end="37:25">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="39:13" pos:end="39:21">goto <name pos:start="39:18" pos:end="39:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:11">err</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:44"><name pos:start="43:15" pos:end="43:29">local_set_xattr</name><argument_list pos:start="43:30" pos:end="43:44">(<argument pos:start="43:31" pos:end="43:36"><expr pos:start="43:31" pos:end="43:36"><name pos:start="43:31" pos:end="43:36">buffer</name></expr></argument>, <argument pos:start="43:39" pos:end="43:43"><expr pos:start="43:39" pos:end="43:43"><name pos:start="43:39" pos:end="43:43">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:22">(<expr pos:start="45:13" pos:end="45:21"><name pos:start="45:13" pos:end="45:15">err</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <operator pos:start="45:20" pos:end="45:20">-</operator><literal type="number" pos:start="45:21" pos:end="45:21">1</literal></expr>)</condition> <block pos:start="45:24" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:25">

            <expr_stmt pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:18">serrno</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="49:13" pos:end="49:25">goto <name pos:start="49:18" pos:end="49:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="53:7" pos:end="79:5">else if <condition pos:start="53:15" pos:end="53:58">(<expr pos:start="53:16" pos:end="53:57"><name pos:start="53:16" pos:end="53:35"><name pos:start="53:16" pos:end="53:21">fs_ctx</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:35">export_flags</name></name> <operator pos:start="53:37" pos:end="53:37">&amp;</operator> <name pos:start="53:39" pos:end="53:57">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="53:60" pos:end="79:5">{<block_content pos:start="57:9" pos:end="77:9">



        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:14">buffer</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:36"><name pos:start="57:18" pos:end="57:22">rpath</name><argument_list pos:start="57:23" pos:end="57:36">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">fs_ctx</name></expr></argument>, <argument pos:start="57:32" pos:end="57:35"><expr pos:start="57:32" pos:end="57:35"><name pos:start="57:32" pos:end="57:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:59"><expr pos:start="59:9" pos:end="59:58"><name pos:start="59:9" pos:end="59:11">err</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:58"><name pos:start="59:15" pos:end="59:19">mknod</name><argument_list pos:start="59:20" pos:end="59:58">(<argument pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:26">buffer</name></expr></argument>, <argument pos:start="59:29" pos:end="59:54"><expr pos:start="59:29" pos:end="59:54"><name pos:start="59:29" pos:end="59:46">SM_LOCAL_MODE_BITS</name><operator pos:start="59:47" pos:end="59:47">|</operator><name pos:start="59:48" pos:end="59:54">S_IFREG</name></expr></argument>, <argument pos:start="59:57" pos:end="59:57"><expr pos:start="59:57" pos:end="59:57"><literal type="number" pos:start="59:57" pos:end="59:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:22">(<expr pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:15">err</name> <operator pos:start="61:17" pos:end="61:18">==</operator> <operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>)</condition> <block pos:start="61:24" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:21">

            <expr_stmt pos:start="63:13" pos:end="63:27"><expr pos:start="63:13" pos:end="63:26"><call pos:start="63:13" pos:end="63:26"><name pos:start="63:13" pos:end="63:18">g_free</name><argument_list pos:start="63:19" pos:end="63:26">(<argument pos:start="63:20" pos:end="63:25"><expr pos:start="63:20" pos:end="63:25"><name pos:start="63:20" pos:end="63:25">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="65:13" pos:end="65:21">goto <name pos:start="65:18" pos:end="65:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:62"><expr pos:start="69:9" pos:end="69:61"><name pos:start="69:9" pos:end="69:11">err</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:61"><name pos:start="69:15" pos:end="69:40">local_set_mapped_file_attr</name><argument_list pos:start="69:41" pos:end="69:61">(<argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><name pos:start="69:42" pos:end="69:47">fs_ctx</name></expr></argument>, <argument pos:start="69:50" pos:end="69:53"><expr pos:start="69:50" pos:end="69:53"><name pos:start="69:50" pos:end="69:53">path</name></expr></argument>, <argument pos:start="69:56" pos:end="69:60"><expr pos:start="69:56" pos:end="69:60"><name pos:start="69:56" pos:end="69:60">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:22">(<expr pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:15">err</name> <operator pos:start="71:17" pos:end="71:18">==</operator> <operator pos:start="71:20" pos:end="71:20">-</operator><literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>)</condition> <block pos:start="71:24" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:25">

            <expr_stmt pos:start="73:13" pos:end="73:27"><expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:18">serrno</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="75:13" pos:end="75:25">goto <name pos:start="75:18" pos:end="75:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="105:5">else if <condition pos:start="79:15" pos:end="81:53">(<expr pos:start="79:16" pos:end="81:52"><operator pos:start="79:16" pos:end="79:16">(</operator><name pos:start="79:17" pos:end="79:36"><name pos:start="79:17" pos:end="79:22">fs_ctx</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:36">export_flags</name></name> <operator pos:start="79:38" pos:end="79:38">&amp;</operator> <name pos:start="79:40" pos:end="79:58">V9FS_SM_PASSTHROUGH</name><operator pos:start="79:59" pos:end="79:59">)</operator> <operator pos:start="79:61" pos:end="79:62">||</operator>

               <operator pos:start="81:16" pos:end="81:16">(</operator><name pos:start="81:17" pos:end="81:36"><name pos:start="81:17" pos:end="81:22">fs_ctx</name><operator pos:start="81:23" pos:end="81:24">-&gt;</operator><name pos:start="81:25" pos:end="81:36">export_flags</name></name> <operator pos:start="81:38" pos:end="81:38">&amp;</operator> <name pos:start="81:40" pos:end="81:51">V9FS_SM_NONE</name><operator pos:start="81:52" pos:end="81:52">)</operator></expr>)</condition> <block pos:start="81:55" pos:end="105:5">{<block_content pos:start="83:9" pos:end="103:9">

        <expr_stmt pos:start="83:9" pos:end="83:37"><expr pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:14">buffer</name> <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:36"><name pos:start="83:18" pos:end="83:22">rpath</name><argument_list pos:start="83:23" pos:end="83:36">(<argument pos:start="83:24" pos:end="83:29"><expr pos:start="83:24" pos:end="83:29"><name pos:start="83:24" pos:end="83:29">fs_ctx</name></expr></argument>, <argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:60"><expr pos:start="85:9" pos:end="85:59"><name pos:start="85:9" pos:end="85:11">err</name> <operator pos:start="85:13" pos:end="85:13">=</operator> <call pos:start="85:15" pos:end="85:59"><name pos:start="85:15" pos:end="85:19">mknod</name><argument_list pos:start="85:20" pos:end="85:59">(<argument pos:start="85:21" pos:end="85:26"><expr pos:start="85:21" pos:end="85:26"><name pos:start="85:21" pos:end="85:26">buffer</name></expr></argument>, <argument pos:start="85:29" pos:end="85:42"><expr pos:start="85:29" pos:end="85:42"><name pos:start="85:29" pos:end="85:42"><name pos:start="85:29" pos:end="85:33">credp</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:42">fc_mode</name></name></expr></argument>, <argument pos:start="85:45" pos:end="85:58"><expr pos:start="85:45" pos:end="85:58"><name pos:start="85:45" pos:end="85:58"><name pos:start="85:45" pos:end="85:49">credp</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:58">fc_rdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="93:9"><if pos:start="87:9" pos:end="93:9">if <condition pos:start="87:12" pos:end="87:22">(<expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:15">err</name> <operator pos:start="87:17" pos:end="87:18">==</operator> <operator pos:start="87:20" pos:end="87:20">-</operator><literal type="number" pos:start="87:21" pos:end="87:21">1</literal></expr>)</condition> <block pos:start="87:24" pos:end="93:9">{<block_content pos:start="89:13" pos:end="91:21">

            <expr_stmt pos:start="89:13" pos:end="89:27"><expr pos:start="89:13" pos:end="89:26"><call pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:18">g_free</name><argument_list pos:start="89:19" pos:end="89:26">(<argument pos:start="89:20" pos:end="89:25"><expr pos:start="89:20" pos:end="89:25"><name pos:start="89:20" pos:end="89:25">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:21">goto <name pos:start="91:18" pos:end="91:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:65"><expr pos:start="95:9" pos:end="95:64"><name pos:start="95:9" pos:end="95:11">err</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:64"><name pos:start="95:15" pos:end="95:43">local_post_create_passthrough</name><argument_list pos:start="95:44" pos:end="95:64">(<argument pos:start="95:45" pos:end="95:50"><expr pos:start="95:45" pos:end="95:50"><name pos:start="95:45" pos:end="95:50">fs_ctx</name></expr></argument>, <argument pos:start="95:53" pos:end="95:56"><expr pos:start="95:53" pos:end="95:56"><name pos:start="95:53" pos:end="95:56">path</name></expr></argument>, <argument pos:start="95:59" pos:end="95:63"><expr pos:start="95:59" pos:end="95:63"><name pos:start="95:59" pos:end="95:63">credp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="103:9"><if pos:start="97:9" pos:end="103:9">if <condition pos:start="97:12" pos:end="97:22">(<expr pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:15">err</name> <operator pos:start="97:17" pos:end="97:18">==</operator> <operator pos:start="97:20" pos:end="97:20">-</operator><literal type="number" pos:start="97:21" pos:end="97:21">1</literal></expr>)</condition> <block pos:start="97:24" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:25">

            <expr_stmt pos:start="99:13" pos:end="99:27"><expr pos:start="99:13" pos:end="99:26"><name pos:start="99:13" pos:end="99:18">serrno</name> <operator pos:start="99:20" pos:end="99:20">=</operator> <name pos:start="99:22" pos:end="99:26">errno</name></expr>;</expr_stmt>

            <goto pos:start="101:13" pos:end="101:25">goto <name pos:start="101:18" pos:end="101:24">err_end</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <goto pos:start="107:5" pos:end="107:13">goto <name pos:start="107:10" pos:end="107:12">out</name>;</goto>



<label pos:start="111:1" pos:end="111:8"><name pos:start="111:1" pos:end="111:7">err_end</name>:</label>

    <expr_stmt pos:start="113:5" pos:end="113:19"><expr pos:start="113:5" pos:end="113:18"><call pos:start="113:5" pos:end="113:18"><name pos:start="113:5" pos:end="113:10">remove</name><argument_list pos:start="113:11" pos:end="113:18">(<argument pos:start="113:12" pos:end="113:17"><expr pos:start="113:12" pos:end="113:17"><name pos:start="113:12" pos:end="113:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:19"><expr pos:start="115:5" pos:end="115:18"><name pos:start="115:5" pos:end="115:9">errno</name> <operator pos:start="115:11" pos:end="115:11">=</operator> <name pos:start="115:13" pos:end="115:18">serrno</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:19"><expr pos:start="117:5" pos:end="117:18"><call pos:start="117:5" pos:end="117:18"><name pos:start="117:5" pos:end="117:10">g_free</name><argument_list pos:start="117:11" pos:end="117:18">(<argument pos:start="117:12" pos:end="117:17"><expr pos:start="117:12" pos:end="117:17"><name pos:start="117:12" pos:end="117:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="119:1" pos:end="119:4"><name pos:start="119:1" pos:end="119:3">out</name>:</label>

    <expr_stmt pos:start="121:5" pos:end="121:32"><expr pos:start="121:5" pos:end="121:31"><call pos:start="121:5" pos:end="121:31"><name pos:start="121:5" pos:end="121:20">v9fs_string_free</name><argument_list pos:start="121:21" pos:end="121:31">(<argument pos:start="121:22" pos:end="121:30"><expr pos:start="121:22" pos:end="121:30"><operator pos:start="121:22" pos:end="121:22">&amp;</operator><name pos:start="121:23" pos:end="121:30">fullname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="123:5" pos:end="123:15">return <expr pos:start="123:12" pos:end="123:14"><name pos:start="123:12" pos:end="123:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
