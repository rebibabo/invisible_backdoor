<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/22488.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">add_to_pool</name><parameter_list pos:start="1:24" pos:end="1:45">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:39">BufferPoolEntry</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">buf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:5">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">AVBufferPool</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:22">pool</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">BufferPoolEntry</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">cur</name></decl>, <decl pos:start="7:27" pos:end="7:36"><type ref="prev" pos:start="7:5" pos:end="7:21"><modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">end</name> <init pos:start="7:32" pos:end="7:36">= <expr pos:start="7:34" pos:end="7:36"><name pos:start="7:34" pos:end="7:36">buf</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:15"><if pos:start="11:5" pos:end="13:15">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:12">buf</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:15"><block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:21"><expr pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:8">pool</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <name pos:start="15:12" pos:end="15:20"><name pos:start="15:12" pos:end="15:14">buf</name><operator pos:start="15:15" pos:end="15:16">-&gt;</operator><name pos:start="15:17" pos:end="15:20">pool</name></name></expr>;</expr_stmt>



    <while pos:start="19:5" pos:end="21:24">while <condition pos:start="19:11" pos:end="19:21">(<expr pos:start="19:12" pos:end="19:20"><name pos:start="19:12" pos:end="19:20"><name pos:start="19:12" pos:end="19:14">end</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:20">next</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:24"><block_content pos:start="21:9" pos:end="21:24">

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:11">end</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:23"><name pos:start="21:15" pos:end="21:17">end</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:23">next</name></name></expr>;</expr_stmt></block_content></block></while>



    <while pos:start="25:5" pos:end="37:5">while <condition pos:start="25:11" pos:end="25:84">(<expr pos:start="25:12" pos:end="25:83"><operator pos:start="25:12" pos:end="25:12">(</operator><name pos:start="25:13" pos:end="25:15">cur</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:82"><name pos:start="25:19" pos:end="25:39">avpriv_atomic_ptr_cas</name><argument_list pos:start="25:40" pos:end="25:82">(<argument pos:start="25:41" pos:end="25:70"><expr pos:start="25:41" pos:end="25:70"><operator pos:start="25:41" pos:end="25:41">(</operator><name pos:start="25:42" pos:end="25:45">void</name> <operator pos:start="25:47" pos:end="25:47">*</operator> <specifier pos:start="25:49" pos:end="25:56">volatile</specifier> <operator pos:start="25:58" pos:end="25:58">*</operator><operator pos:start="25:59" pos:end="25:59">)</operator><operator pos:start="25:60" pos:end="25:60">&amp;</operator><name pos:start="25:61" pos:end="25:70"><name pos:start="25:61" pos:end="25:64">pool</name><operator pos:start="25:65" pos:end="25:66">-&gt;</operator><name pos:start="25:67" pos:end="25:70">pool</name></name></expr></argument>, <argument pos:start="25:73" pos:end="25:76"><expr pos:start="25:73" pos:end="25:76"><name pos:start="25:73" pos:end="25:76">NULL</name></expr></argument>, <argument pos:start="25:79" pos:end="25:81"><expr pos:start="25:79" pos:end="25:81"><name pos:start="25:79" pos:end="25:81">buf</name></expr></argument>)</argument_list></call><operator pos:start="25:83" pos:end="25:83">)</operator></expr>)</condition> <block pos:start="25:86" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:28">

        <comment type="block" pos:start="27:9" pos:end="27:70">/* pool is not empty, retrieve it and append it to our list */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:11">cur</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:28"><name pos:start="29:15" pos:end="29:22">get_pool</name><argument_list pos:start="29:23" pos:end="29:28">(<argument pos:start="29:24" pos:end="29:27"><expr pos:start="29:24" pos:end="29:27"><name pos:start="29:24" pos:end="29:27">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:24"><expr pos:start="31:9" pos:end="31:23"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:11">end</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:17">next</name></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <name pos:start="31:21" pos:end="31:23">cur</name></expr>;</expr_stmt>

        <while pos:start="33:9" pos:end="35:28">while <condition pos:start="33:15" pos:end="33:25">(<expr pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:24"><name pos:start="33:16" pos:end="33:18">end</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:24">next</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:28"><block_content pos:start="35:13" pos:end="35:28">

            <expr_stmt pos:start="35:13" pos:end="35:28"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:15">end</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:27"><name pos:start="35:19" pos:end="35:21">end</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:27">next</name></name></expr>;</expr_stmt></block_content></block></while>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
