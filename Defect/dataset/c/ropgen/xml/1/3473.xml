<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3473.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:26">gen_ins</name><parameter_list pos:start="1:27" pos:end="1:56">(<parameter pos:start="1:28" pos:end="1:42"><decl pos:start="1:28" pos:end="1:42"><type pos:start="1:28" pos:end="1:42"><name pos:start="1:28" pos:end="1:39">DisasContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:52">TCGMemOp</name></type> <name pos:start="1:54" pos:end="1:55">ot</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:5">

    <if_stmt pos:start="5:5" pos:end="9:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:43">(<expr pos:start="5:9" pos:end="5:42"><name pos:start="5:9" pos:end="5:26"><name pos:start="5:9" pos:end="5:9">s</name><operator pos:start="5:10" pos:end="5:11">-&gt;</operator><name pos:start="5:12" pos:end="5:15">base</name><operator pos:start="5:16" pos:end="5:16">.</operator><name pos:start="5:17" pos:end="5:18">tb</name><operator pos:start="5:19" pos:end="5:20">-&gt;</operator><name pos:start="5:21" pos:end="5:26">cflags</name></name> <operator pos:start="5:28" pos:end="5:28">&amp;</operator> <name pos:start="5:30" pos:end="5:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="5:45" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:23">

        <expr_stmt pos:start="7:9" pos:end="7:23"><expr pos:start="7:9" pos:end="7:22"><call pos:start="7:9" pos:end="7:22"><name pos:start="7:9" pos:end="7:20">gen_io_start</name><argument_list pos:start="7:21" pos:end="7:22">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:30"><expr pos:start="11:5" pos:end="11:29"><call pos:start="11:5" pos:end="11:29"><name pos:start="11:5" pos:end="11:26">gen_string_movl_A0_EDI</name><argument_list pos:start="11:27" pos:end="11:29">(<argument pos:start="11:28" pos:end="11:28"><expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="15:29">/* Note: we must do this dummy write first to be restartable in

       case of page fault. */</comment>

    <expr_stmt pos:start="17:5" pos:end="17:31"><expr pos:start="17:5" pos:end="17:30"><call pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:19">tcg_gen_movi_tl</name><argument_list pos:start="17:20" pos:end="17:30">(<argument pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:26">cpu_T0</name></expr></argument>, <argument pos:start="17:29" pos:end="17:29"><expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><call pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:15">gen_op_st_v</name><argument_list pos:start="19:16" pos:end="19:38">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">s</name></expr></argument>, <argument pos:start="19:20" pos:end="19:21"><expr pos:start="19:20" pos:end="19:21"><name pos:start="19:20" pos:end="19:21">ot</name></expr></argument>, <argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">cpu_T0</name></expr></argument>, <argument pos:start="19:32" pos:end="19:37"><expr pos:start="19:32" pos:end="19:37"><name pos:start="19:32" pos:end="19:37">cpu_A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:56"><expr pos:start="21:5" pos:end="21:55"><call pos:start="21:5" pos:end="21:55"><name pos:start="21:5" pos:end="21:24">tcg_gen_trunc_tl_i32</name><argument_list pos:start="21:25" pos:end="21:55">(<argument pos:start="21:26" pos:end="21:37"><expr pos:start="21:26" pos:end="21:37"><name pos:start="21:26" pos:end="21:37">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="21:40" pos:end="21:54"><expr pos:start="21:40" pos:end="21:54"><name pos:start="21:40" pos:end="21:54"><name pos:start="21:40" pos:end="21:47">cpu_regs</name><index pos:start="21:48" pos:end="21:54">[<expr pos:start="21:49" pos:end="21:53"><name pos:start="21:49" pos:end="21:53">R_EDX</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:57"><expr pos:start="23:5" pos:end="23:56"><call pos:start="23:5" pos:end="23:56"><name pos:start="23:5" pos:end="23:20">tcg_gen_andi_i32</name><argument_list pos:start="23:21" pos:end="23:56">(<argument pos:start="23:22" pos:end="23:33"><expr pos:start="23:22" pos:end="23:33"><name pos:start="23:22" pos:end="23:33">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="23:36" pos:end="23:47"><expr pos:start="23:36" pos:end="23:47"><name pos:start="23:36" pos:end="23:47">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="23:50" pos:end="23:55"><expr pos:start="23:50" pos:end="23:55"><literal type="number" pos:start="23:50" pos:end="23:55">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:49"><expr pos:start="25:5" pos:end="25:48"><call pos:start="25:5" pos:end="25:48"><name pos:start="25:5" pos:end="25:22">gen_helper_in_func</name><argument_list pos:start="25:23" pos:end="25:48">(<argument pos:start="25:24" pos:end="25:25"><expr pos:start="25:24" pos:end="25:25"><name pos:start="25:24" pos:end="25:25">ot</name></expr></argument>, <argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">cpu_T0</name></expr></argument>, <argument pos:start="25:36" pos:end="25:47"><expr pos:start="25:36" pos:end="25:47"><name pos:start="25:36" pos:end="25:47">cpu_tmp2_i32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:15">gen_op_st_v</name><argument_list pos:start="27:16" pos:end="27:38">(<argument pos:start="27:17" pos:end="27:17"><expr pos:start="27:17" pos:end="27:17"><name pos:start="27:17" pos:end="27:17">s</name></expr></argument>, <argument pos:start="27:20" pos:end="27:21"><expr pos:start="27:20" pos:end="27:21"><name pos:start="27:20" pos:end="27:21">ot</name></expr></argument>, <argument pos:start="27:24" pos:end="27:29"><expr pos:start="27:24" pos:end="27:29"><name pos:start="27:24" pos:end="27:29">cpu_T0</name></expr></argument>, <argument pos:start="27:32" pos:end="27:37"><expr pos:start="27:32" pos:end="27:37"><name pos:start="27:32" pos:end="27:37">cpu_A0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><call pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:25">gen_op_movl_T0_Dshift</name><argument_list pos:start="29:26" pos:end="29:29">(<argument pos:start="29:27" pos:end="29:28"><expr pos:start="29:27" pos:end="29:28"><name pos:start="29:27" pos:end="29:28">ot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><call pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:21">gen_op_add_reg_T0</name><argument_list pos:start="31:22" pos:end="31:38">(<argument pos:start="31:23" pos:end="31:30"><expr pos:start="31:23" pos:end="31:30"><name pos:start="31:23" pos:end="31:30"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:30">aflag</name></name></expr></argument>, <argument pos:start="31:33" pos:end="31:37"><expr pos:start="31:33" pos:end="31:37"><name pos:start="31:33" pos:end="31:37">R_EDI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:36"><expr pos:start="33:5" pos:end="33:35"><call pos:start="33:5" pos:end="33:35"><name pos:start="33:5" pos:end="33:14">gen_bpt_io</name><argument_list pos:start="33:15" pos:end="33:35">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="33:30"><expr pos:start="33:19" pos:end="33:30"><name pos:start="33:19" pos:end="33:30">cpu_tmp2_i32</name></expr></argument>, <argument pos:start="33:33" pos:end="33:34"><expr pos:start="33:33" pos:end="33:34"><name pos:start="33:33" pos:end="33:34">ot</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:43">(<expr pos:start="35:9" pos:end="35:42"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">base</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:18">tb</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:26">cflags</name></name> <operator pos:start="35:28" pos:end="35:28">&amp;</operator> <name pos:start="35:30" pos:end="35:42">CF_USE_ICOUNT</name></expr>)</condition> <block pos:start="35:45" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:21">

        <expr_stmt pos:start="37:9" pos:end="37:21"><expr pos:start="37:9" pos:end="37:20"><call pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:18">gen_io_end</name><argument_list pos:start="37:19" pos:end="37:20">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
