<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5868.c" pos:tabs="8"><function pos:start="1:1" pos:end="22:13"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:34">ff_mpv_reallocate_putbitbuffer</name><parameter_list pos:start="1:35" pos:end="1:93">(<parameter pos:start="1:36" pos:end="1:52"><decl pos:start="1:36" pos:end="1:52"><type pos:start="1:36" pos:end="1:52"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">s</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:70"><decl pos:start="1:55" pos:end="1:70"><type pos:start="1:55" pos:end="1:70"><name pos:start="1:55" pos:end="1:60">size_t</name></type> <name pos:start="1:62" pos:end="1:70">threshold</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:92"><decl pos:start="1:73" pos:end="1:92"><type pos:start="1:73" pos:end="1:92"><name pos:start="1:73" pos:end="1:78">size_t</name></type> <name pos:start="1:80" pos:end="1:92">size_increase</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="22:13">{<block_content pos:start="3:5" pos:end="22:13">
    <if_stmt pos:start="3:5" pos:end="22:13"><if pos:start="3:5" pos:end="22:13">if <condition pos:start="3:8" pos:end="5:56">(   <expr pos:start="3:12" pos:end="5:55"><name pos:start="3:12" pos:end="3:24"><name pos:start="3:12" pos:end="3:12">s</name><operator pos:start="3:13" pos:end="3:14">-&gt;</operator><name pos:start="3:15" pos:end="3:16">pb</name><operator pos:start="3:17" pos:end="3:17">.</operator><name pos:start="3:18" pos:end="3:24">buf_end</name></name> <operator pos:start="3:26" pos:end="3:26">-</operator> <name pos:start="3:28" pos:end="3:36"><name pos:start="3:28" pos:end="3:28">s</name><operator pos:start="3:29" pos:end="3:30">-&gt;</operator><name pos:start="3:31" pos:end="3:32">pb</name><operator pos:start="3:33" pos:end="3:33">.</operator><name pos:start="3:34" pos:end="3:36">buf</name></name> <operator pos:start="3:38" pos:end="3:38">-</operator> <operator pos:start="3:40" pos:end="3:40">(</operator><call pos:start="3:41" pos:end="3:62"><name pos:start="3:41" pos:end="3:54">put_bits_count</name><argument_list pos:start="3:55" pos:end="3:62">(<argument pos:start="3:56" pos:end="3:61"><expr pos:start="3:56" pos:end="3:61"><operator pos:start="3:56" pos:end="3:56">&amp;</operator><name pos:start="3:57" pos:end="3:61"><name pos:start="3:57" pos:end="3:57">s</name><operator pos:start="3:58" pos:end="3:59">-&gt;</operator><name pos:start="3:60" pos:end="3:61">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="3:63" pos:end="3:64">&gt;&gt;</operator><literal type="number" pos:start="3:65" pos:end="3:65">3</literal><operator pos:start="3:66" pos:end="3:66">)</operator> <operator pos:start="3:68" pos:end="3:68">&lt;</operator> <name pos:start="3:70" pos:end="3:78">threshold</name>
        <operator pos:start="4:9" pos:end="4:10">&amp;&amp;</operator> <name pos:start="4:12" pos:end="4:33"><name pos:start="4:12" pos:end="4:12">s</name><operator pos:start="4:13" pos:end="4:14">-&gt;</operator><name pos:start="4:15" pos:end="4:33">slice_context_count</name></name> <operator pos:start="4:35" pos:end="4:36">==</operator> <literal type="number" pos:start="4:38" pos:end="4:38">1</literal>
        <operator pos:start="5:9" pos:end="5:10">&amp;&amp;</operator> <name pos:start="5:12" pos:end="5:20"><name pos:start="5:12" pos:end="5:12">s</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:16">pb</name><operator pos:start="5:17" pos:end="5:17">.</operator><name pos:start="5:18" pos:end="5:20">buf</name></name> <operator pos:start="5:22" pos:end="5:23">==</operator> <name pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:42">internal</name><operator pos:start="5:43" pos:end="5:44">-&gt;</operator><name pos:start="5:45" pos:end="5:55">byte_buffer</name></name></expr>)</condition> <block pos:start="5:58" pos:end="22:13">{<block_content pos:start="6:9" pos:end="22:13">
        <decl_stmt pos:start="6:9" pos:end="6:53"><decl pos:start="6:9" pos:end="6:52"><type pos:start="6:9" pos:end="6:11"><name pos:start="6:9" pos:end="6:11">int</name></type> <name pos:start="6:13" pos:end="6:23">lastgob_pos</name> <init pos:start="6:25" pos:end="6:52">= <expr pos:start="6:27" pos:end="6:52"><name pos:start="6:27" pos:end="6:40"><name pos:start="6:27" pos:end="6:27">s</name><operator pos:start="6:28" pos:end="6:29">-&gt;</operator><name pos:start="6:30" pos:end="6:40">ptr_lastgob</name></name> <operator pos:start="6:42" pos:end="6:42">-</operator> <name pos:start="6:44" pos:end="6:52"><name pos:start="6:44" pos:end="6:44">s</name><operator pos:start="6:45" pos:end="6:46">-&gt;</operator><name pos:start="6:47" pos:end="6:48">pb</name><operator pos:start="6:49" pos:end="6:49">.</operator><name pos:start="6:50" pos:end="6:52">buf</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="7:9" pos:end="7:55"><decl pos:start="7:9" pos:end="7:54"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:19">vbv_pos</name>     <init pos:start="7:25" pos:end="7:54">= <expr pos:start="7:27" pos:end="7:54"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:42">vbv_delay_ptr</name></name> <operator pos:start="7:44" pos:end="7:44">-</operator> <name pos:start="7:46" pos:end="7:54"><name pos:start="7:46" pos:end="7:46">s</name><operator pos:start="7:47" pos:end="7:48">-&gt;</operator><name pos:start="7:49" pos:end="7:50">pb</name><operator pos:start="7:51" pos:end="7:51">.</operator><name pos:start="7:52" pos:end="7:54">buf</name></name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="8:9" pos:end="8:35"><decl pos:start="8:9" pos:end="8:34"><type pos:start="8:9" pos:end="8:17"><name pos:start="8:9" pos:end="8:15">uint8_t</name> <modifier pos:start="8:17" pos:end="8:17">*</modifier></type><name pos:start="8:18" pos:end="8:27">new_buffer</name> <init pos:start="8:29" pos:end="8:34">= <expr pos:start="8:31" pos:end="8:34"><name pos:start="8:31" pos:end="8:34">NULL</name></expr></init></decl>;</decl_stmt>
        <decl_stmt pos:start="9:9" pos:end="9:32"><decl pos:start="9:9" pos:end="9:31"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:27">new_buffer_size</name> <init pos:start="9:29" pos:end="9:31">= <expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="10:9" pos:end="11:84"><expr pos:start="10:9" pos:end="11:83"><call pos:start="10:9" pos:end="11:83"><name pos:start="10:9" pos:end="10:29">av_fast_padded_malloc</name><argument_list pos:start="10:30" pos:end="11:83">(<argument pos:start="10:31" pos:end="10:41"><expr pos:start="10:31" pos:end="10:41"><operator pos:start="10:31" pos:end="10:31">&amp;</operator><name pos:start="10:32" pos:end="10:41">new_buffer</name></expr></argument>, <argument pos:start="10:44" pos:end="10:59"><expr pos:start="10:44" pos:end="10:59"><operator pos:start="10:44" pos:end="10:44">&amp;</operator><name pos:start="10:45" pos:end="10:59">new_buffer_size</name></expr></argument>,
                              <argument pos:start="11:31" pos:end="11:82"><expr pos:start="11:31" pos:end="11:82"><name pos:start="11:31" pos:end="11:66"><name pos:start="11:31" pos:end="11:31">s</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:38">avctx</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:48">internal</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:66">byte_buffer_size</name></name> <operator pos:start="11:68" pos:end="11:68">+</operator> <name pos:start="11:70" pos:end="11:82">size_increase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="12:9" pos:end="13:98"><if pos:start="12:9" pos:end="13:98">if <condition pos:start="12:12" pos:end="12:24">(<expr pos:start="12:13" pos:end="12:23"><operator pos:start="12:13" pos:end="12:13">!</operator><name pos:start="12:14" pos:end="12:23">new_buffer</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:98"><block_content pos:start="13:9" pos:end="13:98">
        <expr_stmt pos:start="13:9" pos:end="13:98"><expr pos:start="13:9" pos:end="13:97"><call pos:start="13:9" pos:end="13:97"><name pos:start="13:9" pos:end="13:14">memcpy</name><argument_list pos:start="13:15" pos:end="13:97">(<argument pos:start="13:16" pos:end="13:25"><expr pos:start="13:16" pos:end="13:25"><name pos:start="13:16" pos:end="13:25">new_buffer</name></expr></argument>, <argument pos:start="13:28" pos:end="13:58"><expr pos:start="13:28" pos:end="13:58"><name pos:start="13:28" pos:end="13:58"><name pos:start="13:28" pos:end="13:28">s</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:35">avctx</name><operator pos:start="13:36" pos:end="13:37">-&gt;</operator><name pos:start="13:38" pos:end="13:45">internal</name><operator pos:start="13:46" pos:end="13:47">-&gt;</operator><name pos:start="13:48" pos:end="13:58">byte_buffer</name></name></expr></argument>, <argument pos:start="13:61" pos:end="13:96"><expr pos:start="13:61" pos:end="13:96"><name pos:start="13:61" pos:end="13:96"><name pos:start="13:61" pos:end="13:61">s</name><operator pos:start="13:62" pos:end="13:63">-&gt;</operator><name pos:start="13:64" pos:end="13:68">avctx</name><operator pos:start="13:69" pos:end="13:70">-&gt;</operator><name pos:start="13:71" pos:end="13:78">internal</name><operator pos:start="13:79" pos:end="13:80">-&gt;</operator><name pos:start="13:81" pos:end="13:96">byte_buffer_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <expr_stmt pos:start="14:9" pos:end="14:49"><expr pos:start="14:9" pos:end="14:48"><call pos:start="14:9" pos:end="14:48"><name pos:start="14:9" pos:end="14:15">av_free</name><argument_list pos:start="14:16" pos:end="14:48">(<argument pos:start="14:17" pos:end="14:47"><expr pos:start="14:17" pos:end="14:47"><name pos:start="14:17" pos:end="14:47"><name pos:start="14:17" pos:end="14:17">s</name><operator pos:start="14:18" pos:end="14:19">-&gt;</operator><name pos:start="14:20" pos:end="14:24">avctx</name><operator pos:start="14:25" pos:end="14:26">-&gt;</operator><name pos:start="14:27" pos:end="14:34">internal</name><operator pos:start="14:35" pos:end="14:36">-&gt;</operator><name pos:start="14:37" pos:end="14:47">byte_buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="15:9" pos:end="15:58"><expr pos:start="15:9" pos:end="15:57"><name pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">avctx</name><operator pos:start="15:17" pos:end="15:18">-&gt;</operator><name pos:start="15:19" pos:end="15:26">internal</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:39">byte_buffer</name></name>      <operator pos:start="15:46" pos:end="15:46">=</operator> <name pos:start="15:48" pos:end="15:57">new_buffer</name></expr>;</expr_stmt>
        <expr_stmt pos:start="16:9" pos:end="16:63"><expr pos:start="16:9" pos:end="16:62"><name pos:start="16:9" pos:end="16:44"><name pos:start="16:9" pos:end="16:9">s</name><operator pos:start="16:10" pos:end="16:11">-&gt;</operator><name pos:start="16:12" pos:end="16:16">avctx</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:26">internal</name><operator pos:start="16:27" pos:end="16:28">-&gt;</operator><name pos:start="16:29" pos:end="16:44">byte_buffer_size</name></name> <operator pos:start="16:46" pos:end="16:46">=</operator> <name pos:start="16:48" pos:end="16:62">new_buffer_size</name></expr>;</expr_stmt>
        <expr_stmt pos:start="17:9" pos:end="17:61"><expr pos:start="17:9" pos:end="17:60"><call pos:start="17:9" pos:end="17:60"><name pos:start="17:9" pos:end="17:23">rebase_put_bits</name><argument_list pos:start="17:24" pos:end="17:60">(<argument pos:start="17:25" pos:end="17:30"><expr pos:start="17:25" pos:end="17:30"><operator pos:start="17:25" pos:end="17:25">&amp;</operator><name pos:start="17:26" pos:end="17:30"><name pos:start="17:26" pos:end="17:26">s</name><operator pos:start="17:27" pos:end="17:28">-&gt;</operator><name pos:start="17:29" pos:end="17:30">pb</name></name></expr></argument>, <argument pos:start="17:33" pos:end="17:42"><expr pos:start="17:33" pos:end="17:42"><name pos:start="17:33" pos:end="17:42">new_buffer</name></expr></argument>, <argument pos:start="17:45" pos:end="17:59"><expr pos:start="17:45" pos:end="17:59"><name pos:start="17:45" pos:end="17:59">new_buffer_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="18:9" pos:end="18:51"><expr pos:start="18:9" pos:end="18:50"><name pos:start="18:9" pos:end="18:22"><name pos:start="18:9" pos:end="18:9">s</name><operator pos:start="18:10" pos:end="18:11">-&gt;</operator><name pos:start="18:12" pos:end="18:22">ptr_lastgob</name></name>   <operator pos:start="18:26" pos:end="18:26">=</operator> <name pos:start="18:28" pos:end="18:36"><name pos:start="18:28" pos:end="18:28">s</name><operator pos:start="18:29" pos:end="18:30">-&gt;</operator><name pos:start="18:31" pos:end="18:32">pb</name><operator pos:start="18:33" pos:end="18:33">.</operator><name pos:start="18:34" pos:end="18:36">buf</name></name> <operator pos:start="18:38" pos:end="18:38">+</operator> <name pos:start="18:40" pos:end="18:50">lastgob_pos</name></expr>;</expr_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:47"><expr pos:start="19:9" pos:end="19:46"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:24">vbv_delay_ptr</name></name> <operator pos:start="19:26" pos:end="19:26">=</operator> <name pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:32">pb</name><operator pos:start="19:33" pos:end="19:33">.</operator><name pos:start="19:34" pos:end="19:36">buf</name></name> <operator pos:start="19:38" pos:end="19:38">+</operator> <name pos:start="19:40" pos:end="19:46">vbv_pos</name></expr>;</expr_stmt>
    <if_stmt pos:start="20:5" pos:end="21:31"><if pos:start="20:5" pos:end="21:31">if <condition pos:start="20:8" pos:end="20:76">(<expr pos:start="20:9" pos:end="20:75"><name pos:start="20:9" pos:end="20:21"><name pos:start="20:9" pos:end="20:9">s</name><operator pos:start="20:10" pos:end="20:11">-&gt;</operator><name pos:start="20:12" pos:end="20:13">pb</name><operator pos:start="20:14" pos:end="20:14">.</operator><name pos:start="20:15" pos:end="20:21">buf_end</name></name> <operator pos:start="20:23" pos:end="20:23">-</operator> <name pos:start="20:25" pos:end="20:33"><name pos:start="20:25" pos:end="20:25">s</name><operator pos:start="20:26" pos:end="20:27">-&gt;</operator><name pos:start="20:28" pos:end="20:29">pb</name><operator pos:start="20:30" pos:end="20:30">.</operator><name pos:start="20:31" pos:end="20:33">buf</name></name> <operator pos:start="20:35" pos:end="20:35">-</operator> <operator pos:start="20:37" pos:end="20:37">(</operator><call pos:start="20:38" pos:end="20:59"><name pos:start="20:38" pos:end="20:51">put_bits_count</name><argument_list pos:start="20:52" pos:end="20:59">(<argument pos:start="20:53" pos:end="20:58"><expr pos:start="20:53" pos:end="20:58"><operator pos:start="20:53" pos:end="20:53">&amp;</operator><name pos:start="20:54" pos:end="20:58"><name pos:start="20:54" pos:end="20:54">s</name><operator pos:start="20:55" pos:end="20:56">-&gt;</operator><name pos:start="20:57" pos:end="20:58">pb</name></name></expr></argument>)</argument_list></call><operator pos:start="20:60" pos:end="20:61">&gt;&gt;</operator><literal type="number" pos:start="20:62" pos:end="20:62">3</literal><operator pos:start="20:63" pos:end="20:63">)</operator> <operator pos:start="20:65" pos:end="20:65">&lt;</operator> <name pos:start="20:67" pos:end="20:75">threshold</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:31"><block_content pos:start="21:9" pos:end="21:31">
        <return pos:start="21:9" pos:end="21:31">return <expr pos:start="21:16" pos:end="21:30"><call pos:start="21:16" pos:end="21:30"><name pos:start="21:16" pos:end="21:22">AVERROR</name><argument_list pos:start="21:23" pos:end="21:30">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>
    <return pos:start="22:5" pos:end="22:13">return <expr pos:start="22:12" pos:end="22:12"><literal type="number" pos:start="22:12" pos:end="22:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></function></unit>
