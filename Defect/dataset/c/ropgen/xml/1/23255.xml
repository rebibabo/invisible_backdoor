<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/23255.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:47">decode_nal_sei_decoded_picture_hash</name><parameter_list pos:start="1:48" pos:end="1:63">(<parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:59">HEVCContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:62">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">cIdx</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:21">hash_type</name></decl>;</decl_stmt>

    <comment type="line" pos:start="9:5" pos:end="9:27">//uint16_t picture_crc;</comment>

    <comment type="line" pos:start="11:5" pos:end="11:32">//uint32_t picture_checksum;</comment>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">GetBitContext</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">gb</name> <init pos:start="13:23" pos:end="13:38">= <expr pos:start="13:25" pos:end="13:38"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:26">s</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:34">HEVClc</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:32"><expr pos:start="15:5" pos:end="15:31"><name pos:start="15:5" pos:end="15:13">hash_type</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <call pos:start="15:17" pos:end="15:31"><name pos:start="15:17" pos:end="15:24">get_bits</name><argument_list pos:start="15:25" pos:end="15:31">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">gb</name></expr></argument>, <argument pos:start="15:30" pos:end="15:30"><expr pos:start="15:30" pos:end="15:30"><literal type="number" pos:start="15:30" pos:end="15:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="19:5" pos:end="43:5">for <control pos:start="19:9" pos:end="19:82">(<init pos:start="19:10" pos:end="19:18"><expr pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:13">cIdx</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</init> <condition pos:start="19:20" pos:end="19:74"><expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:23">cIdx</name> <operator pos:start="19:25" pos:end="19:25">&lt;</operator> <literal type="number" pos:start="19:27" pos:end="19:27">3</literal></expr><comment type="block" pos:start="19:28" pos:end="19:73">/*((s-&gt;sps-&gt;chroma_format_idc == 0) ? 1 : 3)*/</comment>;</condition> <incr pos:start="19:76" pos:end="19:81"><expr pos:start="19:76" pos:end="19:81"><name pos:start="19:76" pos:end="19:79">cIdx</name><operator pos:start="19:80" pos:end="19:81">++</operator></expr></incr>)</control> <block pos:start="19:84" pos:end="43:5">{<block_content pos:start="21:9" pos:end="41:9">

        <if_stmt pos:start="21:9" pos:end="41:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:21">hash_type</name> <operator pos:start="21:23" pos:end="21:24">==</operator> <literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr>)</condition> <block pos:start="21:29" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:50">

            <expr_stmt pos:start="23:13" pos:end="23:26"><expr pos:start="23:13" pos:end="23:25"><name pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:21">is_md5</name></name> <operator pos:start="23:23" pos:end="23:23">=</operator> <literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</expr_stmt>

            <for pos:start="25:13" pos:end="27:50">for <control pos:start="25:17" pos:end="25:36">(<init pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">i</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:31"><expr pos:start="25:25" pos:end="25:30"><name pos:start="25:25" pos:end="25:25">i</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <literal type="number" pos:start="25:29" pos:end="25:30">16</literal></expr>;</condition> <incr pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:33">i</name><operator pos:start="25:34" pos:end="25:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:17" pos:end="27:50"><block_content pos:start="27:17" pos:end="27:50">

                <expr_stmt pos:start="27:17" pos:end="27:50"><expr pos:start="27:17" pos:end="27:49"><name pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:17">s</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:22">md5</name><index pos:start="27:23" pos:end="27:28">[<expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">cIdx</name></expr>]</index><index pos:start="27:29" pos:end="27:31">[<expr pos:start="27:30" pos:end="27:30"><name pos:start="27:30" pos:end="27:30">i</name></expr>]</index></name> <operator pos:start="27:33" pos:end="27:33">=</operator> <call pos:start="27:35" pos:end="27:49"><name pos:start="27:35" pos:end="27:42">get_bits</name><argument_list pos:start="27:43" pos:end="27:49">(<argument pos:start="27:44" pos:end="27:45"><expr pos:start="27:44" pos:end="27:45"><name pos:start="27:44" pos:end="27:45">gb</name></expr></argument>, <argument pos:start="27:48" pos:end="27:48"><expr pos:start="27:48" pos:end="27:48"><literal type="number" pos:start="27:48" pos:end="27:48">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if> <if type="elseif" pos:start="29:11" pos:end="35:9">else if <condition pos:start="29:19" pos:end="29:34">(<expr pos:start="29:20" pos:end="29:33"><name pos:start="29:20" pos:end="29:28">hash_type</name> <operator pos:start="29:30" pos:end="29:31">==</operator> <literal type="number" pos:start="29:33" pos:end="29:33">1</literal></expr>)</condition> <block pos:start="29:36" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:30">

            <comment type="line" pos:start="31:13" pos:end="31:46">// picture_crc = get_bits(gb, 16);</comment>

            <expr_stmt pos:start="33:13" pos:end="33:30"><expr pos:start="33:13" pos:end="33:29"><call pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:21">skip_bits</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:24"><expr pos:start="33:23" pos:end="33:24"><name pos:start="33:23" pos:end="33:24">gb</name></expr></argument>, <argument pos:start="33:27" pos:end="33:28"><expr pos:start="33:27" pos:end="33:28"><literal type="number" pos:start="33:27" pos:end="33:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="35:11" pos:end="41:9">else if <condition pos:start="35:19" pos:end="35:34">(<expr pos:start="35:20" pos:end="35:33"><name pos:start="35:20" pos:end="35:28">hash_type</name> <operator pos:start="35:30" pos:end="35:31">==</operator> <literal type="number" pos:start="35:33" pos:end="35:33">2</literal></expr>)</condition> <block pos:start="35:36" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:30">

            <comment type="line" pos:start="37:13" pos:end="37:51">// picture_checksum = get_bits(gb, 32);</comment>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><call pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:21">skip_bits</name><argument_list pos:start="39:22" pos:end="39:29">(<argument pos:start="39:23" pos:end="39:24"><expr pos:start="39:23" pos:end="39:24"><name pos:start="39:23" pos:end="39:24">gb</name></expr></argument>, <argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><literal type="number" pos:start="39:27" pos:end="39:28">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
