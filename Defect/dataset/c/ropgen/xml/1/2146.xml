<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2146.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">char</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier><modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:23">breakline</name><parameter_list pos:start="1:24" pos:end="1:48">(<parameter pos:start="1:25" pos:end="1:35"><decl pos:start="1:25" pos:end="1:35"><type pos:start="1:25" pos:end="1:35"><name pos:start="1:25" pos:end="1:28">char</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:35">input</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:47"><decl pos:start="1:38" pos:end="1:47"><type pos:start="1:38" pos:end="1:47"><name pos:start="1:38" pos:end="1:40">int</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">count</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:16">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">c</name> <init pos:start="5:11" pos:end="5:13">= <expr pos:start="5:13" pos:end="5:13"><literal type="number" pos:start="5:13" pos:end="5:13">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:11">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:44"><decl pos:start="9:5" pos:end="9:43"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier><modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:15">rval</name> <init pos:start="9:17" pos:end="9:43">= <expr pos:start="9:19" pos:end="9:43"><call pos:start="9:19" pos:end="9:43"><name pos:start="9:19" pos:end="9:27">g_malloc0</name><argument_list pos:start="9:28" pos:end="9:43">(<argument pos:start="9:29" pos:end="9:42"><expr pos:start="9:29" pos:end="9:42"><sizeof pos:start="9:29" pos:end="9:42">sizeof<argument_list pos:start="9:35" pos:end="9:42">(<argument pos:start="9:36" pos:end="9:41"><expr pos:start="9:36" pos:end="9:41"><name pos:start="9:36" pos:end="9:39">char</name> <operator pos:start="9:41" pos:end="9:41">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier><modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">tmp</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="47:5">while <condition pos:start="15:11" pos:end="15:58">(<expr pos:start="15:12" pos:end="15:57"><name pos:start="15:12" pos:end="15:15">rval</name> <operator pos:start="15:17" pos:end="15:18">&amp;&amp;</operator> <operator pos:start="15:20" pos:end="15:20">(</operator><name pos:start="15:21" pos:end="15:21">p</name> <operator pos:start="15:23" pos:end="15:23">=</operator> <call pos:start="15:25" pos:end="15:48"><name pos:start="15:25" pos:end="15:35">qemu_strsep</name><argument_list pos:start="15:36" pos:end="15:48">(<argument pos:start="15:37" pos:end="15:42"><expr pos:start="15:37" pos:end="15:42"><operator pos:start="15:37" pos:end="15:37">&amp;</operator><name pos:start="15:38" pos:end="15:42">input</name></expr></argument>, <argument pos:start="15:45" pos:end="15:47"><expr pos:start="15:45" pos:end="15:47"><literal type="string" pos:start="15:45" pos:end="15:47">" "</literal></expr></argument>)</argument_list></call><operator pos:start="15:49" pos:end="15:49">)</operator> <operator pos:start="15:51" pos:end="15:52">!=</operator> <name pos:start="15:54" pos:end="15:57">NULL</name></expr>)</condition> <block pos:start="15:60" pos:end="47:5">{<block_content pos:start="17:9" pos:end="45:23">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><operator pos:start="17:13" pos:end="17:13">!</operator><operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:15">p</name></expr>)</condition> <block pos:start="17:18" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:21">

            <continue pos:start="19:13" pos:end="19:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">c</name><operator pos:start="23:10" pos:end="23:11">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:11">tmp</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:54"><name pos:start="25:15" pos:end="25:23">g_realloc</name><argument_list pos:start="25:24" pos:end="25:54">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">rval</name></expr></argument>, <argument pos:start="25:31" pos:end="25:53"><expr pos:start="25:31" pos:end="25:53"><sizeof pos:start="25:31" pos:end="25:43">sizeof<argument_list pos:start="25:37" pos:end="25:43">(<argument pos:start="25:38" pos:end="25:42"><expr pos:start="25:38" pos:end="25:42"><operator pos:start="25:38" pos:end="25:38">*</operator><name pos:start="25:39" pos:end="25:42">rval</name></expr></argument>)</argument_list></sizeof> <operator pos:start="25:45" pos:end="25:45">*</operator> <operator pos:start="25:47" pos:end="25:47">(</operator><name pos:start="25:48" pos:end="25:48">c</name> <operator pos:start="25:50" pos:end="25:50">+</operator> <literal type="number" pos:start="25:52" pos:end="25:52">1</literal><operator pos:start="25:53" pos:end="25:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="41:9"><if pos:start="27:9" pos:end="37:9">if <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:16">tmp</name></expr>)</condition> <block pos:start="27:19" pos:end="37:9">{<block_content pos:start="29:13" pos:end="35:18">

            <expr_stmt pos:start="29:13" pos:end="29:25"><expr pos:start="29:13" pos:end="29:24"><call pos:start="29:13" pos:end="29:24"><name pos:start="29:13" pos:end="29:18">g_free</name><argument_list pos:start="29:19" pos:end="29:24">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">rval</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:24"><expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:16">rval</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:23">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:18"><expr pos:start="33:13" pos:end="33:17"><name pos:start="33:13" pos:end="33:13">c</name> <operator pos:start="33:15" pos:end="33:15">=</operator> <literal type="number" pos:start="33:17" pos:end="33:17">0</literal></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if> <else pos:start="37:11" pos:end="41:9">else <block pos:start="37:16" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:23">

            <expr_stmt pos:start="39:13" pos:end="39:23"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:16">rval</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:22">tmp</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:12">rval</name><index pos:start="43:13" pos:end="43:19">[<expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">c</name> <operator pos:start="43:16" pos:end="43:16">-</operator> <literal type="number" pos:start="43:18" pos:end="43:18">1</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:23">p</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:23"><expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:15"><name pos:start="45:9" pos:end="45:12">rval</name><index pos:start="45:13" pos:end="45:15">[<expr pos:start="45:14" pos:end="45:14"><name pos:start="45:14" pos:end="45:14">c</name></expr>]</index></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <name pos:start="45:19" pos:end="45:22">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="49:5" pos:end="49:15"><expr pos:start="49:5" pos:end="49:14"><operator pos:start="49:5" pos:end="49:5">*</operator><name pos:start="49:6" pos:end="49:10">count</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <name pos:start="49:14" pos:end="49:14">c</name></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">rval</name></expr>;</return>

</block_content>}</block></function>
</unit>
