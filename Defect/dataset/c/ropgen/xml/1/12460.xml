<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/12460.c" pos:tabs="8"><function pos:start="1:1" pos:end="209:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">rm_read_header</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="209:1">{<block_content pos:start="5:5" pos:end="207:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">RMDemuxContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:22">rm</name> <init pos:start="5:24" pos:end="5:37">= <expr pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:37"><name pos:start="5:26" pos:end="5:26">s</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:20">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">tag_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:27">start_time</name></decl>, <decl pos:start="15:30" pos:end="15:37"><type ref="prev" pos:start="15:5" pos:end="15:16"/><name pos:start="15:30" pos:end="15:37">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:44"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:25">data_off</name> <init pos:start="17:27" pos:end="17:29">= <expr pos:start="17:29" pos:end="17:29"><literal type="number" pos:start="17:29" pos:end="17:29">0</literal></expr></init></decl>, <decl pos:start="17:32" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:32" pos:end="17:39">indx_off</name> <init pos:start="17:41" pos:end="17:43">= <expr pos:start="17:43" pos:end="17:43"><literal type="number" pos:start="17:43" pos:end="17:43">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:29"><decl pos:start="19:5" pos:end="19:17"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">char</name></type> <name pos:start="19:10" pos:end="19:17"><name pos:start="19:10" pos:end="19:12">buf</name><index pos:start="19:13" pos:end="19:17">[<expr pos:start="19:14" pos:end="19:16"><literal type="number" pos:start="19:14" pos:end="19:16">128</literal></expr>]</index></name></decl>, <decl pos:start="19:20" pos:end="19:28"><type ref="prev" pos:start="19:5" pos:end="19:8"/><name pos:start="19:20" pos:end="19:28"><name pos:start="19:20" pos:end="19:23">mime</name><index pos:start="19:24" pos:end="19:28">[<expr pos:start="19:25" pos:end="19:27"><literal type="number" pos:start="19:25" pos:end="19:27">128</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:18"><decl pos:start="21:5" pos:end="21:17"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:13">flags</name> <init pos:start="21:15" pos:end="21:17">= <expr pos:start="21:17" pos:end="21:17"><literal type="number" pos:start="21:17" pos:end="21:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:7">tag</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:23"><name pos:start="25:11" pos:end="25:19">avio_rl32</name><argument_list pos:start="25:20" pos:end="25:23">(<argument pos:start="25:21" pos:end="25:22"><expr pos:start="25:21" pos:end="25:22"><name pos:start="25:21" pos:end="25:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:42">(<expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:11">tag</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <call pos:start="27:16" pos:end="27:41"><name pos:start="27:16" pos:end="27:20">MKTAG</name><argument_list pos:start="27:21" pos:end="27:41">(<argument pos:start="27:22" pos:end="27:24"><expr pos:start="27:22" pos:end="27:24"><literal type="char" pos:start="27:22" pos:end="27:24">'.'</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:29"><expr pos:start="27:27" pos:end="27:29"><literal type="char" pos:start="27:27" pos:end="27:29">'r'</literal></expr></argument>, <argument pos:start="27:32" pos:end="27:34"><expr pos:start="27:32" pos:end="27:34"><literal type="char" pos:start="27:32" pos:end="27:34">'a'</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:40"><expr pos:start="27:37" pos:end="27:40"><literal type="number" pos:start="27:37" pos:end="27:40">0xfd</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:44" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:37">

        <comment type="block" pos:start="29:9" pos:end="29:33">/* very old .ra format */</comment>

        <return pos:start="31:9" pos:end="31:37">return <expr pos:start="31:16" pos:end="31:36"><call pos:start="31:16" pos:end="31:36"><name pos:start="31:16" pos:end="31:33">rm_read_header_old</name><argument_list pos:start="31:34" pos:end="31:36">(<argument pos:start="31:35" pos:end="31:35"><expr pos:start="31:35" pos:end="31:35"><name pos:start="31:35" pos:end="31:35">s</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="33:7" pos:end="37:5">else if <condition pos:start="33:15" pos:end="33:48">(<expr pos:start="33:16" pos:end="33:47"><name pos:start="33:16" pos:end="33:18">tag</name> <operator pos:start="33:20" pos:end="33:21">!=</operator> <call pos:start="33:23" pos:end="33:47"><name pos:start="33:23" pos:end="33:27">MKTAG</name><argument_list pos:start="33:28" pos:end="33:47">(<argument pos:start="33:29" pos:end="33:31"><expr pos:start="33:29" pos:end="33:31"><literal type="char" pos:start="33:29" pos:end="33:31">'.'</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:36"><expr pos:start="33:34" pos:end="33:36"><literal type="char" pos:start="33:34" pos:end="33:36">'R'</literal></expr></argument>, <argument pos:start="33:39" pos:end="33:41"><expr pos:start="33:39" pos:end="33:41"><literal type="char" pos:start="33:39" pos:end="33:41">'M'</literal></expr></argument>, <argument pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><literal type="char" pos:start="33:44" pos:end="33:46">'F'</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:50" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:28">

        <return pos:start="35:9" pos:end="35:28">return <expr pos:start="35:16" pos:end="35:27"><call pos:start="35:16" pos:end="35:27"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:27">(<argument pos:start="35:24" pos:end="35:26"><expr pos:start="35:24" pos:end="35:26"><name pos:start="35:24" pos:end="35:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:12">tag_size</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <call pos:start="41:16" pos:end="41:28"><name pos:start="41:16" pos:end="41:24">avio_rb32</name><argument_list pos:start="41:25" pos:end="41:28">(<argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><name pos:start="41:26" pos:end="41:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><call pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:13">avio_skip</name><argument_list pos:start="43:14" pos:end="43:31">(<argument pos:start="43:15" pos:end="43:16"><expr pos:start="43:15" pos:end="43:16"><name pos:start="43:15" pos:end="43:16">pb</name></expr></argument>, <argument pos:start="43:19" pos:end="43:30"><expr pos:start="43:19" pos:end="43:30"><name pos:start="43:19" pos:end="43:26">tag_size</name> <operator pos:start="43:28" pos:end="43:28">-</operator> <literal type="number" pos:start="43:30" pos:end="43:30">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="47:5" pos:end="177:5">for<control pos:start="47:8" pos:end="47:11">(<init pos:start="47:9" pos:end="47:9">;</init><condition pos:start="47:10" pos:end="47:10">;</condition><incr/>)</control> <block pos:start="47:13" pos:end="177:5">{<block_content pos:start="49:9" pos:end="175:9">

        <if_stmt pos:start="49:9" pos:end="51:22"><if pos:start="49:9" pos:end="51:22">if <condition pos:start="49:12" pos:end="49:25">(<expr pos:start="49:13" pos:end="49:24"><call pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:20">url_feof</name><argument_list pos:start="49:21" pos:end="49:24">(<argument pos:start="49:22" pos:end="49:23"><expr pos:start="49:22" pos:end="49:23"><name pos:start="49:22" pos:end="49:23">pb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:22"><block_content pos:start="51:13" pos:end="51:22">

            <return pos:start="51:13" pos:end="51:22">return <expr pos:start="51:20" pos:end="51:21"><operator pos:start="51:20" pos:end="51:20">-</operator><literal type="number" pos:start="51:21" pos:end="51:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:11">tag</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:27"><name pos:start="53:15" pos:end="53:23">avio_rl32</name><argument_list pos:start="53:24" pos:end="53:27">(<argument pos:start="53:25" pos:end="53:26"><expr pos:start="53:25" pos:end="53:26"><name pos:start="53:25" pos:end="53:26">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:16">tag_size</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:32"><name pos:start="55:20" pos:end="55:28">avio_rb32</name><argument_list pos:start="55:29" pos:end="55:32">(<argument pos:start="55:30" pos:end="55:31"><expr pos:start="55:30" pos:end="55:31"><name pos:start="55:30" pos:end="55:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:22"><expr pos:start="57:9" pos:end="57:21"><call pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:17">avio_rb16</name><argument_list pos:start="57:18" pos:end="57:21">(<argument pos:start="57:19" pos:end="57:20"><expr pos:start="57:19" pos:end="57:20"><name pos:start="57:19" pos:end="57:20">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="71:26"><expr pos:start="59:9" pos:end="71:25"><call pos:start="59:9" pos:end="71:25"><name pos:start="59:9" pos:end="59:15">av_dlog</name><argument_list pos:start="59:16" pos:end="71:25">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">s</name></expr></argument>, <argument pos:start="59:20" pos:end="59:50"><expr pos:start="59:20" pos:end="59:50"><literal type="string" pos:start="59:20" pos:end="59:50">"tag=%c%c%c%c (%08x) size=%d\n"</literal></expr></argument>,

                <argument pos:start="61:17" pos:end="61:34"><expr pos:start="61:17" pos:end="61:34"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:20">tag</name>      <operator pos:start="61:27" pos:end="61:27">)</operator> <operator pos:start="61:29" pos:end="61:29">&amp;</operator> <literal type="number" pos:start="61:31" pos:end="61:34">0xff</literal></expr></argument>,

                <argument pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:34"><operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:20">tag</name> <operator pos:start="63:22" pos:end="63:23">&gt;&gt;</operator>  <literal type="number" pos:start="63:26" pos:end="63:26">8</literal><operator pos:start="63:27" pos:end="63:27">)</operator> <operator pos:start="63:29" pos:end="63:29">&amp;</operator> <literal type="number" pos:start="63:31" pos:end="63:34">0xff</literal></expr></argument>,

                <argument pos:start="65:17" pos:end="65:34"><expr pos:start="65:17" pos:end="65:34"><operator pos:start="65:17" pos:end="65:17">(</operator><name pos:start="65:18" pos:end="65:20">tag</name> <operator pos:start="65:22" pos:end="65:23">&gt;&gt;</operator> <literal type="number" pos:start="65:25" pos:end="65:26">16</literal><operator pos:start="65:27" pos:end="65:27">)</operator> <operator pos:start="65:29" pos:end="65:29">&amp;</operator> <literal type="number" pos:start="65:31" pos:end="65:34">0xff</literal></expr></argument>,

                <argument pos:start="67:17" pos:end="67:34"><expr pos:start="67:17" pos:end="67:34"><operator pos:start="67:17" pos:end="67:17">(</operator><name pos:start="67:18" pos:end="67:20">tag</name> <operator pos:start="67:22" pos:end="67:23">&gt;&gt;</operator> <literal type="number" pos:start="67:25" pos:end="67:26">24</literal><operator pos:start="67:27" pos:end="67:27">)</operator> <operator pos:start="67:29" pos:end="67:29">&amp;</operator> <literal type="number" pos:start="67:31" pos:end="67:34">0xff</literal></expr></argument>,

                <argument pos:start="69:17" pos:end="69:19"><expr pos:start="69:17" pos:end="69:19"><name pos:start="69:17" pos:end="69:19">tag</name></expr></argument>,

                <argument pos:start="71:17" pos:end="71:24"><expr pos:start="71:17" pos:end="71:24"><name pos:start="71:17" pos:end="71:24">tag_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:22"><if pos:start="73:9" pos:end="75:22">if <condition pos:start="73:12" pos:end="73:62">(<expr pos:start="73:13" pos:end="73:61"><name pos:start="73:13" pos:end="73:20">tag_size</name> <operator pos:start="73:22" pos:end="73:22">&lt;</operator> <literal type="number" pos:start="73:24" pos:end="73:25">10</literal> <operator pos:start="73:27" pos:end="73:28">&amp;&amp;</operator> <name pos:start="73:30" pos:end="73:32">tag</name> <operator pos:start="73:34" pos:end="73:35">!=</operator> <call pos:start="73:37" pos:end="73:61"><name pos:start="73:37" pos:end="73:41">MKTAG</name><argument_list pos:start="73:42" pos:end="73:61">(<argument pos:start="73:43" pos:end="73:45"><expr pos:start="73:43" pos:end="73:45"><literal type="char" pos:start="73:43" pos:end="73:45">'D'</literal></expr></argument>, <argument pos:start="73:48" pos:end="73:50"><expr pos:start="73:48" pos:end="73:50"><literal type="char" pos:start="73:48" pos:end="73:50">'A'</literal></expr></argument>, <argument pos:start="73:53" pos:end="73:55"><expr pos:start="73:53" pos:end="73:55"><literal type="char" pos:start="73:53" pos:end="73:55">'T'</literal></expr></argument>, <argument pos:start="73:58" pos:end="73:60"><expr pos:start="73:58" pos:end="73:60"><literal type="char" pos:start="73:58" pos:end="73:60">'A'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:22"><block_content pos:start="75:13" pos:end="75:22">

            <return pos:start="75:13" pos:end="75:22">return <expr pos:start="75:20" pos:end="75:21"><operator pos:start="75:20" pos:end="75:20">-</operator><literal type="number" pos:start="75:21" pos:end="75:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <switch pos:start="77:9" pos:end="175:9">switch<condition pos:start="77:15" pos:end="77:19">(<expr pos:start="77:16" pos:end="77:18"><name pos:start="77:16" pos:end="77:18">tag</name></expr>)</condition> <block pos:start="77:21" pos:end="175:9">{<block_content pos:start="79:9" pos:end="173:18">

        <case pos:start="79:9" pos:end="79:39">case <expr pos:start="79:14" pos:end="79:38"><call pos:start="79:14" pos:end="79:38"><name pos:start="79:14" pos:end="79:18">MKTAG</name><argument_list pos:start="79:19" pos:end="79:38">(<argument pos:start="79:20" pos:end="79:22"><expr pos:start="79:20" pos:end="79:22"><literal type="char" pos:start="79:20" pos:end="79:22">'P'</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:27"><expr pos:start="79:25" pos:end="79:27"><literal type="char" pos:start="79:25" pos:end="79:27">'R'</literal></expr></argument>, <argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><literal type="char" pos:start="79:30" pos:end="79:32">'O'</literal></expr></argument>, <argument pos:start="79:35" pos:end="79:37"><expr pos:start="79:35" pos:end="79:37"><literal type="char" pos:start="79:35" pos:end="79:37">'P'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <comment type="block" pos:start="81:13" pos:end="81:29">/* file header */</comment>

            <expr_stmt pos:start="83:13" pos:end="83:26"><expr pos:start="83:13" pos:end="83:25"><call pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:21">avio_rb32</name><argument_list pos:start="83:22" pos:end="83:25">(<argument pos:start="83:23" pos:end="83:24"><expr pos:start="83:23" pos:end="83:24"><name pos:start="83:23" pos:end="83:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="83:28" pos:end="83:45">/* max bit rate */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:26"><expr pos:start="85:13" pos:end="85:25"><call pos:start="85:13" pos:end="85:25"><name pos:start="85:13" pos:end="85:21">avio_rb32</name><argument_list pos:start="85:22" pos:end="85:25">(<argument pos:start="85:23" pos:end="85:24"><expr pos:start="85:23" pos:end="85:24"><name pos:start="85:23" pos:end="85:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="85:28" pos:end="85:45">/* avg bit rate */</comment>

            <expr_stmt pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:25"><call pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:21">avio_rb32</name><argument_list pos:start="87:22" pos:end="87:25">(<argument pos:start="87:23" pos:end="87:24"><expr pos:start="87:23" pos:end="87:24"><name pos:start="87:23" pos:end="87:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="87:28" pos:end="87:48">/* max packet size */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><call pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">avio_rb32</name><argument_list pos:start="89:22" pos:end="89:25">(<argument pos:start="89:23" pos:end="89:24"><expr pos:start="89:23" pos:end="89:24"><name pos:start="89:23" pos:end="89:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="89:28" pos:end="89:48">/* avg packet size */</comment>

            <expr_stmt pos:start="91:13" pos:end="91:26"><expr pos:start="91:13" pos:end="91:25"><call pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:21">avio_rb32</name><argument_list pos:start="91:22" pos:end="91:25">(<argument pos:start="91:23" pos:end="91:24"><expr pos:start="91:23" pos:end="91:24"><name pos:start="91:23" pos:end="91:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="91:28" pos:end="91:43">/* nb packets */</comment>

            <expr_stmt pos:start="93:13" pos:end="93:37"><expr pos:start="93:13" pos:end="93:36"><name pos:start="93:13" pos:end="93:20">duration</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <call pos:start="93:24" pos:end="93:36"><name pos:start="93:24" pos:end="93:32">avio_rb32</name><argument_list pos:start="93:33" pos:end="93:36">(<argument pos:start="93:34" pos:end="93:35"><expr pos:start="93:34" pos:end="93:35"><name pos:start="93:34" pos:end="93:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="93:39" pos:end="93:52">/* duration */</comment>

            <expr_stmt pos:start="95:13" pos:end="95:67"><expr pos:start="95:13" pos:end="95:66"><name pos:start="95:13" pos:end="95:23"><name pos:start="95:13" pos:end="95:13">s</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:23">duration</name></name> <operator pos:start="95:25" pos:end="95:25">=</operator> <call pos:start="95:27" pos:end="95:66"><name pos:start="95:27" pos:end="95:36">av_rescale</name><argument_list pos:start="95:37" pos:end="95:66">(<argument pos:start="95:38" pos:end="95:45"><expr pos:start="95:38" pos:end="95:45"><name pos:start="95:38" pos:end="95:45">duration</name></expr></argument>, <argument pos:start="95:48" pos:end="95:59"><expr pos:start="95:48" pos:end="95:59"><name pos:start="95:48" pos:end="95:59">AV_TIME_BASE</name></expr></argument>, <argument pos:start="95:62" pos:end="95:65"><expr pos:start="95:62" pos:end="95:65"><literal type="number" pos:start="95:62" pos:end="95:65">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:26"><expr pos:start="97:13" pos:end="97:25"><call pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:21">avio_rb32</name><argument_list pos:start="97:22" pos:end="97:25">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="97:28" pos:end="97:40">/* preroll */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:37"><expr pos:start="99:13" pos:end="99:36"><name pos:start="99:13" pos:end="99:20">indx_off</name> <operator pos:start="99:22" pos:end="99:22">=</operator> <call pos:start="99:24" pos:end="99:36"><name pos:start="99:24" pos:end="99:32">avio_rb32</name><argument_list pos:start="99:33" pos:end="99:36">(<argument pos:start="99:34" pos:end="99:35"><expr pos:start="99:34" pos:end="99:35"><name pos:start="99:34" pos:end="99:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="99:39" pos:end="99:56">/* index offset */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:37"><expr pos:start="101:13" pos:end="101:36"><name pos:start="101:13" pos:end="101:20">data_off</name> <operator pos:start="101:22" pos:end="101:22">=</operator> <call pos:start="101:24" pos:end="101:36"><name pos:start="101:24" pos:end="101:32">avio_rb32</name><argument_list pos:start="101:33" pos:end="101:36">(<argument pos:start="101:34" pos:end="101:35"><expr pos:start="101:34" pos:end="101:35"><name pos:start="101:34" pos:end="101:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="101:39" pos:end="101:55">/* data offset */</comment>

            <expr_stmt pos:start="103:13" pos:end="103:26"><expr pos:start="103:13" pos:end="103:25"><call pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:21">avio_rb16</name><argument_list pos:start="103:22" pos:end="103:25">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="103:28" pos:end="103:43">/* nb streams */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:34"><expr pos:start="105:13" pos:end="105:33"><name pos:start="105:13" pos:end="105:17">flags</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <call pos:start="105:21" pos:end="105:33"><name pos:start="105:21" pos:end="105:29">avio_rb16</name><argument_list pos:start="105:30" pos:end="105:33">(<argument pos:start="105:31" pos:end="105:32"><expr pos:start="105:31" pos:end="105:32"><name pos:start="105:31" pos:end="105:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="105:36" pos:end="105:46">/* flags */</comment>

            <break pos:start="107:13" pos:end="107:18">break;</break>

        <case pos:start="109:9" pos:end="109:39">case <expr pos:start="109:14" pos:end="109:38"><call pos:start="109:14" pos:end="109:38"><name pos:start="109:14" pos:end="109:18">MKTAG</name><argument_list pos:start="109:19" pos:end="109:38">(<argument pos:start="109:20" pos:end="109:22"><expr pos:start="109:20" pos:end="109:22"><literal type="char" pos:start="109:20" pos:end="109:22">'C'</literal></expr></argument>, <argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><literal type="char" pos:start="109:25" pos:end="109:27">'O'</literal></expr></argument>, <argument pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:32"><literal type="char" pos:start="109:30" pos:end="109:32">'N'</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><literal type="char" pos:start="109:35" pos:end="109:37">'T'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><call pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:28">rm_read_metadata</name><argument_list pos:start="111:29" pos:end="111:34">(<argument pos:start="111:30" pos:end="111:30"><expr pos:start="111:30" pos:end="111:30"><name pos:start="111:30" pos:end="111:30">s</name></expr></argument>, <argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><literal type="number" pos:start="111:33" pos:end="111:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="113:13" pos:end="113:18">break;</break>

        <case pos:start="115:9" pos:end="115:39">case <expr pos:start="115:14" pos:end="115:38"><call pos:start="115:14" pos:end="115:38"><name pos:start="115:14" pos:end="115:18">MKTAG</name><argument_list pos:start="115:19" pos:end="115:38">(<argument pos:start="115:20" pos:end="115:22"><expr pos:start="115:20" pos:end="115:22"><literal type="char" pos:start="115:20" pos:end="115:22">'M'</literal></expr></argument>, <argument pos:start="115:25" pos:end="115:27"><expr pos:start="115:25" pos:end="115:27"><literal type="char" pos:start="115:25" pos:end="115:27">'D'</literal></expr></argument>, <argument pos:start="115:30" pos:end="115:32"><expr pos:start="115:30" pos:end="115:32"><literal type="char" pos:start="115:30" pos:end="115:32">'P'</literal></expr></argument>, <argument pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><literal type="char" pos:start="115:35" pos:end="115:37">'R'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <expr_stmt pos:start="117:13" pos:end="117:46"><expr pos:start="117:13" pos:end="117:45"><name pos:start="117:13" pos:end="117:14">st</name> <operator pos:start="117:16" pos:end="117:16">=</operator> <call pos:start="117:18" pos:end="117:45"><name pos:start="117:18" pos:end="117:36">avformat_new_stream</name><argument_list pos:start="117:37" pos:end="117:45">(<argument pos:start="117:38" pos:end="117:38"><expr pos:start="117:38" pos:end="117:38"><name pos:start="117:38" pos:end="117:38">s</name></expr></argument>, <argument pos:start="117:41" pos:end="117:44"><expr pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:39"><if pos:start="119:13" pos:end="121:39">if <condition pos:start="119:16" pos:end="119:20">(<expr pos:start="119:17" pos:end="119:19"><operator pos:start="119:17" pos:end="119:17">!</operator><name pos:start="119:18" pos:end="119:19">st</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:39"><block_content pos:start="121:17" pos:end="121:39">

                <return pos:start="121:17" pos:end="121:39">return <expr pos:start="121:24" pos:end="121:38"><call pos:start="121:24" pos:end="121:38"><name pos:start="121:24" pos:end="121:30">AVERROR</name><argument_list pos:start="121:31" pos:end="121:38">(<argument pos:start="121:32" pos:end="121:37"><expr pos:start="121:32" pos:end="121:37"><name pos:start="121:32" pos:end="121:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:35"><expr pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:14">st</name><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:18">id</name></name> <operator pos:start="123:20" pos:end="123:20">=</operator> <call pos:start="123:22" pos:end="123:34"><name pos:start="123:22" pos:end="123:30">avio_rb16</name><argument_list pos:start="123:31" pos:end="123:34">(<argument pos:start="123:32" pos:end="123:33"><expr pos:start="123:32" pos:end="123:33"><name pos:start="123:32" pos:end="123:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:26"><expr pos:start="125:13" pos:end="125:25"><call pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:21">avio_rb32</name><argument_list pos:start="125:22" pos:end="125:25">(<argument pos:start="125:23" pos:end="125:24"><expr pos:start="125:23" pos:end="125:24"><name pos:start="125:23" pos:end="125:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="125:28" pos:end="125:45">/* max bit rate */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:48"><expr pos:start="127:13" pos:end="127:47"><name pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:14">st</name><operator pos:start="127:15" pos:end="127:16">-&gt;</operator><name pos:start="127:17" pos:end="127:21">codec</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:31">bit_rate</name></name> <operator pos:start="127:33" pos:end="127:33">=</operator> <call pos:start="127:35" pos:end="127:47"><name pos:start="127:35" pos:end="127:43">avio_rb32</name><argument_list pos:start="127:44" pos:end="127:47">(<argument pos:start="127:45" pos:end="127:46"><expr pos:start="127:45" pos:end="127:46"><name pos:start="127:45" pos:end="127:46">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="127:50" pos:end="127:63">/* bit rate */</comment>

            <expr_stmt pos:start="129:13" pos:end="129:26"><expr pos:start="129:13" pos:end="129:25"><call pos:start="129:13" pos:end="129:25"><name pos:start="129:13" pos:end="129:21">avio_rb32</name><argument_list pos:start="129:22" pos:end="129:25">(<argument pos:start="129:23" pos:end="129:24"><expr pos:start="129:23" pos:end="129:24"><name pos:start="129:23" pos:end="129:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="129:28" pos:end="129:48">/* max packet size */</comment>

            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><call pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:21">avio_rb32</name><argument_list pos:start="131:22" pos:end="131:25">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="131:28" pos:end="131:48">/* avg packet size */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:39"><expr pos:start="133:13" pos:end="133:38"><name pos:start="133:13" pos:end="133:22">start_time</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <call pos:start="133:26" pos:end="133:38"><name pos:start="133:26" pos:end="133:34">avio_rb32</name><argument_list pos:start="133:35" pos:end="133:38">(<argument pos:start="133:36" pos:end="133:37"><expr pos:start="133:36" pos:end="133:37"><name pos:start="133:36" pos:end="133:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="133:41" pos:end="133:56">/* start time */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:26"><expr pos:start="135:13" pos:end="135:25"><call pos:start="135:13" pos:end="135:25"><name pos:start="135:13" pos:end="135:21">avio_rb32</name><argument_list pos:start="135:22" pos:end="135:25">(<argument pos:start="135:23" pos:end="135:24"><expr pos:start="135:23" pos:end="135:24"><name pos:start="135:23" pos:end="135:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="135:28" pos:end="135:40">/* preroll */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:37"><expr pos:start="137:13" pos:end="137:36"><name pos:start="137:13" pos:end="137:20">duration</name> <operator pos:start="137:22" pos:end="137:22">=</operator> <call pos:start="137:24" pos:end="137:36"><name pos:start="137:24" pos:end="137:32">avio_rb32</name><argument_list pos:start="137:33" pos:end="137:36">(<argument pos:start="137:34" pos:end="137:35"><expr pos:start="137:34" pos:end="137:35"><name pos:start="137:34" pos:end="137:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:39" pos:end="137:52">/* duration */</comment>

            <expr_stmt pos:start="139:13" pos:end="139:40"><expr pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:26"><name pos:start="139:13" pos:end="139:14">st</name><operator pos:start="139:15" pos:end="139:16">-&gt;</operator><name pos:start="139:17" pos:end="139:26">start_time</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <name pos:start="139:30" pos:end="139:39">start_time</name></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:36"><expr pos:start="141:13" pos:end="141:35"><name pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:14">st</name><operator pos:start="141:15" pos:end="141:16">-&gt;</operator><name pos:start="141:17" pos:end="141:24">duration</name></name> <operator pos:start="141:26" pos:end="141:26">=</operator> <name pos:start="141:28" pos:end="141:35">duration</name></expr>;</expr_stmt>

            <if_stmt pos:start="143:13" pos:end="145:45"><if pos:start="143:13" pos:end="145:45">if<condition pos:start="143:15" pos:end="143:26">(<expr pos:start="143:16" pos:end="143:25"><name pos:start="143:16" pos:end="143:23">duration</name><operator pos:start="143:24" pos:end="143:24">&gt;</operator><literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>)</condition><block type="pseudo" pos:start="145:17" pos:end="145:45"><block_content pos:start="145:17" pos:end="145:45">

                <expr_stmt pos:start="145:17" pos:end="145:45"><expr pos:start="145:17" pos:end="145:44"><name pos:start="145:17" pos:end="145:27"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:27">duration</name></name> <operator pos:start="145:29" pos:end="145:29">=</operator> <name pos:start="145:31" pos:end="145:44">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:43"><expr pos:start="147:13" pos:end="147:42"><call pos:start="147:13" pos:end="147:42"><name pos:start="147:13" pos:end="147:20">get_str8</name><argument_list pos:start="147:21" pos:end="147:42">(<argument pos:start="147:22" pos:end="147:23"><expr pos:start="147:22" pos:end="147:23"><name pos:start="147:22" pos:end="147:23">pb</name></expr></argument>, <argument pos:start="147:26" pos:end="147:28"><expr pos:start="147:26" pos:end="147:28"><name pos:start="147:26" pos:end="147:28">buf</name></expr></argument>, <argument pos:start="147:31" pos:end="147:41"><expr pos:start="147:31" pos:end="147:41"><sizeof pos:start="147:31" pos:end="147:41">sizeof<argument_list pos:start="147:37" pos:end="147:41">(<argument pos:start="147:38" pos:end="147:40"><expr pos:start="147:38" pos:end="147:40"><name pos:start="147:38" pos:end="147:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:45" pos:end="147:54">/* desc */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:45"><expr pos:start="149:13" pos:end="149:44"><call pos:start="149:13" pos:end="149:44"><name pos:start="149:13" pos:end="149:20">get_str8</name><argument_list pos:start="149:21" pos:end="149:44">(<argument pos:start="149:22" pos:end="149:23"><expr pos:start="149:22" pos:end="149:23"><name pos:start="149:22" pos:end="149:23">pb</name></expr></argument>, <argument pos:start="149:26" pos:end="149:29"><expr pos:start="149:26" pos:end="149:29"><name pos:start="149:26" pos:end="149:29">mime</name></expr></argument>, <argument pos:start="149:32" pos:end="149:43"><expr pos:start="149:32" pos:end="149:43"><sizeof pos:start="149:32" pos:end="149:43">sizeof<argument_list pos:start="149:38" pos:end="149:43">(<argument pos:start="149:39" pos:end="149:42"><expr pos:start="149:39" pos:end="149:42"><name pos:start="149:39" pos:end="149:42">mime</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="149:47" pos:end="149:60">/* mimetype */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:54"><expr pos:start="151:13" pos:end="151:53"><name pos:start="151:13" pos:end="151:33"><name pos:start="151:13" pos:end="151:14">st</name><operator pos:start="151:15" pos:end="151:16">-&gt;</operator><name pos:start="151:17" pos:end="151:21">codec</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:33">codec_type</name></name> <operator pos:start="151:35" pos:end="151:35">=</operator> <name pos:start="151:37" pos:end="151:53">AVMEDIA_TYPE_DATA</name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:51"><expr pos:start="153:13" pos:end="153:50"><name pos:start="153:13" pos:end="153:25"><name pos:start="153:13" pos:end="153:14">st</name><operator pos:start="153:15" pos:end="153:16">-&gt;</operator><name pos:start="153:17" pos:end="153:25">priv_data</name></name> <operator pos:start="153:27" pos:end="153:27">=</operator> <call pos:start="153:29" pos:end="153:50"><name pos:start="153:29" pos:end="153:48">ff_rm_alloc_rmstream</name><argument_list pos:start="153:49" pos:end="153:50">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="155:13" pos:end="159:26"><if pos:start="155:13" pos:end="159:26">if <condition pos:start="155:16" pos:end="157:67">(<expr pos:start="155:17" pos:end="157:66"><call pos:start="155:17" pos:end="157:62"><name pos:start="155:17" pos:end="155:41">ff_rm_read_mdpr_codecdata</name><argument_list pos:start="155:42" pos:end="157:62">(<argument pos:start="155:43" pos:end="155:43"><expr pos:start="155:43" pos:end="155:43"><name pos:start="155:43" pos:end="155:43">s</name></expr></argument>, <argument pos:start="155:46" pos:end="155:50"><expr pos:start="155:46" pos:end="155:50"><name pos:start="155:46" pos:end="155:50"><name pos:start="155:46" pos:end="155:46">s</name><operator pos:start="155:47" pos:end="155:48">-&gt;</operator><name pos:start="155:49" pos:end="155:50">pb</name></name></expr></argument>, <argument pos:start="155:53" pos:end="155:54"><expr pos:start="155:53" pos:end="155:54"><name pos:start="155:53" pos:end="155:54">st</name></expr></argument>, <argument pos:start="155:57" pos:end="155:69"><expr pos:start="155:57" pos:end="155:69"><name pos:start="155:57" pos:end="155:69"><name pos:start="155:57" pos:end="155:58">st</name><operator pos:start="155:59" pos:end="155:60">-&gt;</operator><name pos:start="155:61" pos:end="155:69">priv_data</name></name></expr></argument>,

                                          <argument pos:start="157:43" pos:end="157:55"><expr pos:start="157:43" pos:end="157:55"><call pos:start="157:43" pos:end="157:55"><name pos:start="157:43" pos:end="157:51">avio_rb32</name><argument_list pos:start="157:52" pos:end="157:55">(<argument pos:start="157:53" pos:end="157:54"><expr pos:start="157:53" pos:end="157:54"><name pos:start="157:53" pos:end="157:54">pb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:58" pos:end="157:61"><expr pos:start="157:58" pos:end="157:61"><name pos:start="157:58" pos:end="157:61">mime</name></expr></argument>)</argument_list></call> <operator pos:start="157:64" pos:end="157:64">&lt;</operator> <literal type="number" pos:start="157:66" pos:end="157:66">0</literal></expr>)</condition><block type="pseudo" pos:start="159:17" pos:end="159:26"><block_content pos:start="159:17" pos:end="159:26">

                <return pos:start="159:17" pos:end="159:26">return <expr pos:start="159:24" pos:end="159:25"><operator pos:start="159:24" pos:end="159:24">-</operator><literal type="number" pos:start="159:25" pos:end="159:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <break pos:start="161:13" pos:end="161:18">break;</break>

        <case pos:start="163:9" pos:end="163:39">case <expr pos:start="163:14" pos:end="163:38"><call pos:start="163:14" pos:end="163:38"><name pos:start="163:14" pos:end="163:18">MKTAG</name><argument_list pos:start="163:19" pos:end="163:38">(<argument pos:start="163:20" pos:end="163:22"><expr pos:start="163:20" pos:end="163:22"><literal type="char" pos:start="163:20" pos:end="163:22">'D'</literal></expr></argument>, <argument pos:start="163:25" pos:end="163:27"><expr pos:start="163:25" pos:end="163:27"><literal type="char" pos:start="163:25" pos:end="163:27">'A'</literal></expr></argument>, <argument pos:start="163:30" pos:end="163:32"><expr pos:start="163:30" pos:end="163:32"><literal type="char" pos:start="163:30" pos:end="163:32">'T'</literal></expr></argument>, <argument pos:start="163:35" pos:end="163:37"><expr pos:start="163:35" pos:end="163:37"><literal type="char" pos:start="163:35" pos:end="163:37">'A'</literal></expr></argument>)</argument_list></call></expr>:</case>

            <goto pos:start="165:13" pos:end="165:28">goto <name pos:start="165:18" pos:end="165:27">header_end</name>;</goto>

        <default pos:start="167:9" pos:end="167:16">default:</default>

            <comment type="block" pos:start="169:13" pos:end="169:38">/* unknown tag: skip it */</comment>

            <expr_stmt pos:start="171:13" pos:end="171:41"><expr pos:start="171:13" pos:end="171:40"><call pos:start="171:13" pos:end="171:40"><name pos:start="171:13" pos:end="171:21">avio_skip</name><argument_list pos:start="171:22" pos:end="171:40">(<argument pos:start="171:23" pos:end="171:24"><expr pos:start="171:23" pos:end="171:24"><name pos:start="171:23" pos:end="171:24">pb</name></expr></argument>, <argument pos:start="171:27" pos:end="171:39"><expr pos:start="171:27" pos:end="171:39"><name pos:start="171:27" pos:end="171:34">tag_size</name> <operator pos:start="171:36" pos:end="171:36">-</operator> <literal type="number" pos:start="171:38" pos:end="171:39">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>

 <label pos:start="179:2" pos:end="179:12"><name pos:start="179:2" pos:end="179:11">header_end</name>:</label>

    <expr_stmt pos:start="181:5" pos:end="181:35"><expr pos:start="181:5" pos:end="181:34"><name pos:start="181:5" pos:end="181:18"><name pos:start="181:5" pos:end="181:6">rm</name><operator pos:start="181:7" pos:end="181:8">-&gt;</operator><name pos:start="181:9" pos:end="181:18">nb_packets</name></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <call pos:start="181:22" pos:end="181:34"><name pos:start="181:22" pos:end="181:30">avio_rb32</name><argument_list pos:start="181:31" pos:end="181:34">(<argument pos:start="181:32" pos:end="181:33"><expr pos:start="181:32" pos:end="181:33"><name pos:start="181:32" pos:end="181:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="181:37" pos:end="181:59">/* number of packets */</comment>

    <if_stmt pos:start="183:5" pos:end="185:35"><if pos:start="183:5" pos:end="185:35">if <condition pos:start="183:8" pos:end="183:39">(<expr pos:start="183:9" pos:end="183:38"><operator pos:start="183:9" pos:end="183:9">!</operator><name pos:start="183:10" pos:end="183:23"><name pos:start="183:10" pos:end="183:11">rm</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:23">nb_packets</name></name> <operator pos:start="183:25" pos:end="183:26">&amp;&amp;</operator> <operator pos:start="183:28" pos:end="183:28">(</operator><name pos:start="183:29" pos:end="183:33">flags</name> <operator pos:start="183:35" pos:end="183:35">&amp;</operator> <literal type="number" pos:start="183:37" pos:end="183:37">4</literal><operator pos:start="183:38" pos:end="183:38">)</operator></expr>)</condition><block type="pseudo" pos:start="185:9" pos:end="185:35"><block_content pos:start="185:9" pos:end="185:35">

        <expr_stmt pos:start="185:9" pos:end="185:35"><expr pos:start="185:9" pos:end="185:34"><name pos:start="185:9" pos:end="185:22"><name pos:start="185:9" pos:end="185:10">rm</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:22">nb_packets</name></name> <operator pos:start="185:24" pos:end="185:24">=</operator> <literal type="number" pos:start="185:26" pos:end="185:29">3600</literal> <operator pos:start="185:31" pos:end="185:31">*</operator> <literal type="number" pos:start="185:33" pos:end="185:34">25</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="187:5" pos:end="187:18"><expr pos:start="187:5" pos:end="187:17"><call pos:start="187:5" pos:end="187:17"><name pos:start="187:5" pos:end="187:13">avio_rb32</name><argument_list pos:start="187:14" pos:end="187:17">(<argument pos:start="187:15" pos:end="187:16"><expr pos:start="187:15" pos:end="187:16"><name pos:start="187:15" pos:end="187:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="187:20" pos:end="187:41">/* next data header */</comment>



    <if_stmt pos:start="191:5" pos:end="193:38"><if pos:start="191:5" pos:end="193:38">if <condition pos:start="191:8" pos:end="191:18">(<expr pos:start="191:9" pos:end="191:17"><operator pos:start="191:9" pos:end="191:9">!</operator><name pos:start="191:10" pos:end="191:17">data_off</name></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:38"><block_content pos:start="193:9" pos:end="193:38">

        <expr_stmt pos:start="193:9" pos:end="193:38"><expr pos:start="193:9" pos:end="193:37"><name pos:start="193:9" pos:end="193:16">data_off</name> <operator pos:start="193:18" pos:end="193:18">=</operator> <call pos:start="193:20" pos:end="193:32"><name pos:start="193:20" pos:end="193:28">avio_tell</name><argument_list pos:start="193:29" pos:end="193:32">(<argument pos:start="193:30" pos:end="193:31"><expr pos:start="193:30" pos:end="193:31"><name pos:start="193:30" pos:end="193:31">pb</name></expr></argument>)</argument_list></call> <operator pos:start="193:34" pos:end="193:34">-</operator> <literal type="number" pos:start="193:36" pos:end="193:37">18</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="195:5" pos:end="203:5"><if pos:start="195:5" pos:end="203:5">if <condition pos:start="195:8" pos:end="197:47">(<expr pos:start="195:9" pos:end="197:46"><name pos:start="195:9" pos:end="195:16">indx_off</name> <operator pos:start="195:18" pos:end="195:19">&amp;&amp;</operator> <name pos:start="195:21" pos:end="195:32"><name pos:start="195:21" pos:end="195:22">pb</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:32">seekable</name></name> <operator pos:start="195:34" pos:end="195:35">&amp;&amp;</operator> <operator pos:start="195:37" pos:end="195:37">!</operator><operator pos:start="195:38" pos:end="195:38">(</operator><name pos:start="195:39" pos:end="195:46"><name pos:start="195:39" pos:end="195:39">s</name><operator pos:start="195:40" pos:end="195:41">-&gt;</operator><name pos:start="195:42" pos:end="195:46">flags</name></name> <operator pos:start="195:48" pos:end="195:48">&amp;</operator> <name pos:start="195:50" pos:end="195:66">AVFMT_FLAG_IGNIDX</name><operator pos:start="195:67" pos:end="195:67">)</operator> <operator pos:start="195:69" pos:end="195:70">&amp;&amp;</operator>

        <call pos:start="197:9" pos:end="197:41"><name pos:start="197:9" pos:end="197:17">avio_seek</name><argument_list pos:start="197:18" pos:end="197:41">(<argument pos:start="197:19" pos:end="197:20"><expr pos:start="197:19" pos:end="197:20"><name pos:start="197:19" pos:end="197:20">pb</name></expr></argument>, <argument pos:start="197:23" pos:end="197:30"><expr pos:start="197:23" pos:end="197:30"><name pos:start="197:23" pos:end="197:30">indx_off</name></expr></argument>, <argument pos:start="197:33" pos:end="197:40"><expr pos:start="197:33" pos:end="197:40"><name pos:start="197:33" pos:end="197:40">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="197:43" pos:end="197:44">&gt;=</operator> <literal type="number" pos:start="197:46" pos:end="197:46">0</literal></expr>)</condition> <block pos:start="197:49" pos:end="203:5">{<block_content pos:start="199:9" pos:end="201:47">

        <expr_stmt pos:start="199:9" pos:end="199:25"><expr pos:start="199:9" pos:end="199:24"><call pos:start="199:9" pos:end="199:24"><name pos:start="199:9" pos:end="199:21">rm_read_index</name><argument_list pos:start="199:22" pos:end="199:24">(<argument pos:start="199:23" pos:end="199:23"><expr pos:start="199:23" pos:end="199:23"><name pos:start="199:23" pos:end="199:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:47"><expr pos:start="201:9" pos:end="201:46"><call pos:start="201:9" pos:end="201:46"><name pos:start="201:9" pos:end="201:17">avio_seek</name><argument_list pos:start="201:18" pos:end="201:46">(<argument pos:start="201:19" pos:end="201:20"><expr pos:start="201:19" pos:end="201:20"><name pos:start="201:19" pos:end="201:20">pb</name></expr></argument>, <argument pos:start="201:23" pos:end="201:35"><expr pos:start="201:23" pos:end="201:35"><name pos:start="201:23" pos:end="201:30">data_off</name> <operator pos:start="201:32" pos:end="201:32">+</operator> <literal type="number" pos:start="201:34" pos:end="201:35">18</literal></expr></argument>, <argument pos:start="201:38" pos:end="201:45"><expr pos:start="201:38" pos:end="201:45"><name pos:start="201:38" pos:end="201:45">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="207:5" pos:end="207:13">return <expr pos:start="207:12" pos:end="207:12"><literal type="number" pos:start="207:12" pos:end="207:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
