<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11256.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:38">rgb32tobgr32</name>)<parameter_list pos:start="1:40" pos:end="1:96">(<parameter pos:start="1:41" pos:end="1:58"><decl pos:start="1:41" pos:end="1:58"><type pos:start="1:41" pos:end="1:58"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:53">uint8_t</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">src</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:67">uint8_t</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">dst</name></decl></parameter>, <parameter pos:start="1:75" pos:end="1:95"><decl pos:start="1:75" pos:end="1:95"><type pos:start="1:75" pos:end="1:95"><name pos:start="1:75" pos:end="1:82">unsigned</name> <name pos:start="1:84" pos:end="1:86">int</name></type> <name pos:start="1:88" pos:end="1:95">src_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="9:9" pos:end="90:0">

<cpp:ifdef pos:start="5:1" pos:end="5:15">#<cpp:directive pos:start="5:2" pos:end="5:6">ifdef</cpp:directive> <name pos:start="5:8" pos:end="5:15">HAVE_MMX</name></cpp:ifdef>

<comment type="block" pos:start="7:1" pos:end="7:28">/* TODO: unroll this loop */</comment>

	<asm pos:start="9:9" pos:end="60:0">asm <specifier pos:start="9:13" pos:end="9:20">volatile</specifier> (

		"xor %%"REG_a", %%"REG_a"	\n\t"

		".balign 16			\n\t"

		"1:				\n\t"

		PREFETCH" 32(%0, %%"REG_a")	\n\t"

		"movq (%0, %%"REG_a"), %%mm0	\n\t"

		"movq %%mm0, %%mm1		\n\t"

		"movq %%mm0, %%mm2		\n\t"

		"pslld $16, %%mm0		\n\t"

		"psrld $16, %%mm1		\n\t"

		"pand "MANGLE(mask32r)", %%mm0	\n\t"

		"pand "MANGLE(mask32g)", %%mm2	\n\t"

		"pand "MANGLE(mask32b)", %%mm1	\n\t"

		"por %%mm0, %%mm2		\n\t"

		"por %%mm1, %%mm2		\n\t"

		MOVNTQ" %%mm2, (%1, %%"REG_a")	\n\t"

		"add $8, %%"REG_a"		\n\t"

		"cmp %2, %%"REG_a"		\n\t"

		" jb 1b				\n\t"

		:: "r" (src), "r"(dst), "r" ((long)src_size-7)

		: "%"REG_a

	);</asm>



	<asm pos:start="55:9" pos:end="55:44">__asm __volatile(SFENCE:::"memory");</asm>

	<asm pos:start="57:9" pos:end="57:42">__asm __volatile(EMMS:::"memory");</asm>

<cpp:else pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:5">else</cpp:directive></cpp:else>

	<decl_stmt pos:start="61:9" pos:end="61:19"><decl pos:start="61:9" pos:end="61:18"><type pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">unsigned</name></type> <name pos:start="61:18" pos:end="61:18">i</name></decl>;</decl_stmt>

	<decl_stmt pos:start="63:9" pos:end="63:44"><decl pos:start="63:9" pos:end="63:43"><type pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:16">unsigned</name></type> <name pos:start="63:18" pos:end="63:27">num_pixels</name> <init pos:start="63:29" pos:end="63:43">= <expr pos:start="63:31" pos:end="63:43"><name pos:start="63:31" pos:end="63:38">src_size</name> <operator pos:start="63:40" pos:end="63:41">&gt;&gt;</operator> <literal type="number" pos:start="63:43" pos:end="63:43">2</literal></expr></init></decl>;</decl_stmt>

	<for pos:start="65:9" pos:end="90:0">for<control pos:start="65:12" pos:end="65:35">(<init pos:start="65:13" pos:end="65:16"><expr pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:13">i</name><operator pos:start="65:14" pos:end="65:14">=</operator><literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>;</init> <condition pos:start="65:18" pos:end="65:30"><expr pos:start="65:18" pos:end="65:29"><name pos:start="65:18" pos:end="65:18">i</name><operator pos:start="65:19" pos:end="65:19">&lt;</operator><name pos:start="65:20" pos:end="65:29">num_pixels</name></expr>;</condition> <incr pos:start="65:32" pos:end="65:34"><expr pos:start="65:32" pos:end="65:34"><name pos:start="65:32" pos:end="65:32">i</name><operator pos:start="65:33" pos:end="65:34">++</operator></expr></incr>)</control>

	<block pos:start="67:9" pos:end="90:0">{<block_content pos:start="71:11" pos:end="86:0">

<cpp:ifdef pos:start="69:1" pos:end="69:22">#<cpp:directive pos:start="69:2" pos:end="69:6">ifdef</cpp:directive> <name pos:start="69:8" pos:end="69:22">WORDS_BIGENDIAN</name></cpp:ifdef>  

	  <expr_stmt pos:start="71:11" pos:end="71:38"><expr pos:start="71:11" pos:end="71:37"><name pos:start="71:11" pos:end="71:22"><name pos:start="71:11" pos:end="71:13">dst</name><index pos:start="71:14" pos:end="71:22">[<expr pos:start="71:15" pos:end="71:21"><literal type="number" pos:start="71:15" pos:end="71:15">4</literal><operator pos:start="71:16" pos:end="71:16">*</operator><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">+</operator> <literal type="number" pos:start="71:21" pos:end="71:21">1</literal></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:28">src</name><index pos:start="71:29" pos:end="71:37">[<expr pos:start="71:30" pos:end="71:36"><literal type="number" pos:start="71:30" pos:end="71:30">4</literal><operator pos:start="71:31" pos:end="71:31">*</operator><name pos:start="71:32" pos:end="71:32">i</name> <operator pos:start="71:34" pos:end="71:34">+</operator> <literal type="number" pos:start="71:36" pos:end="71:36">3</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="73:11" pos:end="73:38"><expr pos:start="73:11" pos:end="73:37"><name pos:start="73:11" pos:end="73:22"><name pos:start="73:11" pos:end="73:13">dst</name><index pos:start="73:14" pos:end="73:22">[<expr pos:start="73:15" pos:end="73:21"><literal type="number" pos:start="73:15" pos:end="73:15">4</literal><operator pos:start="73:16" pos:end="73:16">*</operator><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">+</operator> <literal type="number" pos:start="73:21" pos:end="73:21">2</literal></expr>]</index></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <name pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:28">src</name><index pos:start="73:29" pos:end="73:37">[<expr pos:start="73:30" pos:end="73:36"><literal type="number" pos:start="73:30" pos:end="73:30">4</literal><operator pos:start="73:31" pos:end="73:31">*</operator><name pos:start="73:32" pos:end="73:32">i</name> <operator pos:start="73:34" pos:end="73:34">+</operator> <literal type="number" pos:start="73:36" pos:end="73:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="75:11" pos:end="78:0"><expr pos:start="75:11" pos:end="75:37"><name pos:start="75:11" pos:end="75:22"><name pos:start="75:11" pos:end="75:13">dst</name><index pos:start="75:14" pos:end="75:22">[<expr pos:start="75:15" pos:end="75:21"><literal type="number" pos:start="75:15" pos:end="75:15">4</literal><operator pos:start="75:16" pos:end="75:16">*</operator><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:19">+</operator> <literal type="number" pos:start="75:21" pos:end="75:21">3</literal></expr>]</index></name> <operator pos:start="75:24" pos:end="75:24">=</operator> <name pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:28">src</name><index pos:start="75:29" pos:end="75:37">[<expr pos:start="75:30" pos:end="75:36"><literal type="number" pos:start="75:30" pos:end="75:30">4</literal><operator pos:start="75:31" pos:end="75:31">*</operator><name pos:start="75:32" pos:end="75:32">i</name> <operator pos:start="75:34" pos:end="75:34">+</operator> <literal type="number" pos:start="75:36" pos:end="75:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:else pos:start="77:1" pos:end="77:5">#<cpp:directive pos:start="77:2" pos:end="77:5">else</cpp:directive></cpp:else>

	  <expr_stmt pos:start="79:11" pos:end="79:38"><expr pos:start="79:11" pos:end="79:37"><name pos:start="79:11" pos:end="79:22"><name pos:start="79:11" pos:end="79:13">dst</name><index pos:start="79:14" pos:end="79:22">[<expr pos:start="79:15" pos:end="79:21"><literal type="number" pos:start="79:15" pos:end="79:15">4</literal><operator pos:start="79:16" pos:end="79:16">*</operator><name pos:start="79:17" pos:end="79:17">i</name> <operator pos:start="79:19" pos:end="79:19">+</operator> <literal type="number" pos:start="79:21" pos:end="79:21">0</literal></expr>]</index></name> <operator pos:start="79:24" pos:end="79:24">=</operator> <name pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:28">src</name><index pos:start="79:29" pos:end="79:37">[<expr pos:start="79:30" pos:end="79:36"><literal type="number" pos:start="79:30" pos:end="79:30">4</literal><operator pos:start="79:31" pos:end="79:31">*</operator><name pos:start="79:32" pos:end="79:32">i</name> <operator pos:start="79:34" pos:end="79:34">+</operator> <literal type="number" pos:start="79:36" pos:end="79:36">2</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="81:11" pos:end="81:38"><expr pos:start="81:11" pos:end="81:37"><name pos:start="81:11" pos:end="81:22"><name pos:start="81:11" pos:end="81:13">dst</name><index pos:start="81:14" pos:end="81:22">[<expr pos:start="81:15" pos:end="81:21"><literal type="number" pos:start="81:15" pos:end="81:15">4</literal><operator pos:start="81:16" pos:end="81:16">*</operator><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">+</operator> <literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>]</index></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <name pos:start="81:26" pos:end="81:37"><name pos:start="81:26" pos:end="81:28">src</name><index pos:start="81:29" pos:end="81:37">[<expr pos:start="81:30" pos:end="81:36"><literal type="number" pos:start="81:30" pos:end="81:30">4</literal><operator pos:start="81:31" pos:end="81:31">*</operator><name pos:start="81:32" pos:end="81:32">i</name> <operator pos:start="81:34" pos:end="81:34">+</operator> <literal type="number" pos:start="81:36" pos:end="81:36">1</literal></expr>]</index></name></expr>;</expr_stmt>

	  <expr_stmt pos:start="83:11" pos:end="86:0"><expr pos:start="83:11" pos:end="83:37"><name pos:start="83:11" pos:end="83:22"><name pos:start="83:11" pos:end="83:13">dst</name><index pos:start="83:14" pos:end="83:22">[<expr pos:start="83:15" pos:end="83:21"><literal type="number" pos:start="83:15" pos:end="83:15">4</literal><operator pos:start="83:16" pos:end="83:16">*</operator><name pos:start="83:17" pos:end="83:17">i</name> <operator pos:start="83:19" pos:end="83:19">+</operator> <literal type="number" pos:start="83:21" pos:end="83:21">2</literal></expr>]</index></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:37"><name pos:start="83:26" pos:end="83:28">src</name><index pos:start="83:29" pos:end="83:37">[<expr pos:start="83:30" pos:end="83:36"><literal type="number" pos:start="83:30" pos:end="83:30">4</literal><operator pos:start="83:31" pos:end="83:31">*</operator><name pos:start="83:32" pos:end="83:32">i</name> <operator pos:start="83:34" pos:end="83:34">+</operator> <literal type="number" pos:start="83:36" pos:end="83:36">0</literal></expr>]</index></name></expr>;</expr_stmt>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>

	</block_content>}</block></for>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
