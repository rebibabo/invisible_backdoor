<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18452.c" pos:tabs="8"><function pos:start="1:1" pos:end="34:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:32">pxa2xx_gpio_read</name><parameter_list pos:start="1:33" pos:end="1:73">(<parameter pos:start="1:34" pos:end="1:45"><decl pos:start="1:34" pos:end="1:45"><type pos:start="1:34" pos:end="1:45"><name pos:start="1:34" pos:end="1:37">void</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:45">opaque</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:72"><decl pos:start="1:48" pos:end="1:72"><type pos:start="1:48" pos:end="1:72"><name pos:start="1:48" pos:end="1:65">target_phys_addr_t</name></type> <name pos:start="1:67" pos:end="1:72">offset</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="34:1">{<block_content pos:start="3:5" pos:end="33:13">
    <decl_stmt pos:start="3:5" pos:end="3:72"><decl pos:start="3:5" pos:end="3:71"><type pos:start="3:5" pos:end="3:31"><name pos:start="3:5" pos:end="3:29"><name pos:start="3:5" pos:end="3:10">struct</name> <name pos:start="3:12" pos:end="3:29">pxa2xx_gpio_info_s</name></name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:32">s</name> <init pos:start="3:34" pos:end="3:71">= <expr pos:start="3:36" pos:end="3:71"><operator pos:start="3:36" pos:end="3:36">(</operator>struct <name pos:start="3:44" pos:end="3:61">pxa2xx_gpio_info_s</name> <operator pos:start="3:63" pos:end="3:63">*</operator><operator pos:start="3:64" pos:end="3:64">)</operator> <name pos:start="3:66" pos:end="3:71">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:17"><decl pos:start="4:5" pos:end="4:16"><type pos:start="4:5" pos:end="4:12"><name pos:start="4:5" pos:end="4:12">uint32_t</name></type> <name pos:start="4:14" pos:end="4:16">ret</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">bank</name></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:22"><expr pos:start="6:5" pos:end="6:21"><name pos:start="6:5" pos:end="6:10">offset</name> <operator pos:start="6:12" pos:end="6:13">-=</operator> <name pos:start="6:15" pos:end="6:21"><name pos:start="6:15" pos:end="6:15">s</name><operator pos:start="6:16" pos:end="6:17">-&gt;</operator><name pos:start="6:18" pos:end="6:21">base</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="7:5" pos:end="8:17"><if pos:start="7:5" pos:end="8:17">if <condition pos:start="7:8" pos:end="7:24">(<expr pos:start="7:9" pos:end="7:23"><name pos:start="7:9" pos:end="7:14">offset</name> <operator pos:start="7:16" pos:end="7:17">&gt;=</operator> <literal type="number" pos:start="7:19" pos:end="7:23">0x200</literal></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:17"><block_content pos:start="8:9" pos:end="8:17">
        <return pos:start="8:9" pos:end="8:17">return <expr pos:start="8:16" pos:end="8:16"><literal type="number" pos:start="8:16" pos:end="8:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:41"><expr pos:start="9:5" pos:end="9:40"><name pos:start="9:5" pos:end="9:8">bank</name> <operator pos:start="9:10" pos:end="9:10">=</operator> <name pos:start="9:12" pos:end="9:35"><name pos:start="9:12" pos:end="9:27">pxa2xx_gpio_regs</name><index pos:start="9:28" pos:end="9:35">[<expr pos:start="9:29" pos:end="9:34"><name pos:start="9:29" pos:end="9:34">offset</name></expr>]</index></name><operator pos:start="9:36" pos:end="9:36">.</operator><name pos:start="9:37" pos:end="9:40">bank</name></expr>;</expr_stmt>
    <switch pos:start="10:5" pos:end="32:5">switch <condition pos:start="10:12" pos:end="10:41">(<expr pos:start="10:13" pos:end="10:40"><name pos:start="10:13" pos:end="10:36"><name pos:start="10:13" pos:end="10:28">pxa2xx_gpio_regs</name><index pos:start="10:29" pos:end="10:36">[<expr pos:start="10:30" pos:end="10:35"><name pos:start="10:30" pos:end="10:35">offset</name></expr>]</index></name><operator pos:start="10:37" pos:end="10:37">.</operator><name pos:start="10:38" pos:end="10:40">reg</name></expr>)</condition> <block pos:start="10:43" pos:end="32:5">{<block_content pos:start="11:5" pos:end="31:70">
    <case pos:start="11:5" pos:end="11:14">case <expr pos:start="11:10" pos:end="11:13"><name pos:start="11:10" pos:end="11:13">GPDR</name></expr>:</case>		<comment type="block" pos:start="11:25" pos:end="11:58">/* GPIO Pin-Direction registers */</comment>
        <return pos:start="12:9" pos:end="12:28">return <expr pos:start="12:16" pos:end="12:27"><name pos:start="12:16" pos:end="12:27"><name pos:start="12:16" pos:end="12:16">s</name><operator pos:start="12:17" pos:end="12:18">-&gt;</operator><name pos:start="12:19" pos:end="12:21">dir</name><index pos:start="12:22" pos:end="12:27">[<expr pos:start="12:23" pos:end="12:26"><name pos:start="12:23" pos:end="12:26">bank</name></expr>]</index></name></expr>;</return>
    <case pos:start="13:5" pos:end="13:14">case <expr pos:start="13:10" pos:end="13:13"><name pos:start="13:10" pos:end="13:13">GRER</name></expr>:</case>		<comment type="block" pos:start="13:25" pos:end="13:70">/* GPIO Rising-Edge Detect Enable registers */</comment>
        <return pos:start="14:9" pos:end="14:31">return <expr pos:start="14:16" pos:end="14:30"><name pos:start="14:16" pos:end="14:30"><name pos:start="14:16" pos:end="14:16">s</name><operator pos:start="14:17" pos:end="14:18">-&gt;</operator><name pos:start="14:19" pos:end="14:24">rising</name><index pos:start="14:25" pos:end="14:30">[<expr pos:start="14:26" pos:end="14:29"><name pos:start="14:26" pos:end="14:29">bank</name></expr>]</index></name></expr>;</return>
    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><name pos:start="15:10" pos:end="15:13">GFER</name></expr>:</case>		<comment type="block" pos:start="15:25" pos:end="15:71">/* GPIO Falling-Edge Detect Enable registers */</comment>
        <return pos:start="16:9" pos:end="16:32">return <expr pos:start="16:16" pos:end="16:31"><name pos:start="16:16" pos:end="16:31"><name pos:start="16:16" pos:end="16:16">s</name><operator pos:start="16:17" pos:end="16:18">-&gt;</operator><name pos:start="16:19" pos:end="16:25">falling</name><index pos:start="16:26" pos:end="16:31">[<expr pos:start="16:27" pos:end="16:30"><name pos:start="16:27" pos:end="16:30">bank</name></expr>]</index></name></expr>;</return>
    <case pos:start="17:5" pos:end="17:16">case <expr pos:start="17:10" pos:end="17:15"><name pos:start="17:10" pos:end="17:15">GAFR_L</name></expr>:</case>	<comment type="block" pos:start="17:25" pos:end="17:63">/* GPIO Alternate Function registers */</comment>
        <return pos:start="18:9" pos:end="18:33">return <expr pos:start="18:16" pos:end="18:32"><name pos:start="18:16" pos:end="18:32"><name pos:start="18:16" pos:end="18:16">s</name><operator pos:start="18:17" pos:end="18:18">-&gt;</operator><name pos:start="18:19" pos:end="18:22">gafr</name><index pos:start="18:23" pos:end="18:32">[<expr pos:start="18:24" pos:end="18:31"><name pos:start="18:24" pos:end="18:27">bank</name> <operator pos:start="18:29" pos:end="18:29">*</operator> <literal type="number" pos:start="18:31" pos:end="18:31">2</literal></expr>]</index></name></expr>;</return>
    <case pos:start="19:5" pos:end="19:16">case <expr pos:start="19:10" pos:end="19:15"><name pos:start="19:10" pos:end="19:15">GAFR_U</name></expr>:</case>	<comment type="block" pos:start="19:25" pos:end="19:63">/* GPIO Alternate Function registers */</comment>
        <return pos:start="20:9" pos:end="20:37">return <expr pos:start="20:16" pos:end="20:36"><name pos:start="20:16" pos:end="20:36"><name pos:start="20:16" pos:end="20:16">s</name><operator pos:start="20:17" pos:end="20:18">-&gt;</operator><name pos:start="20:19" pos:end="20:22">gafr</name><index pos:start="20:23" pos:end="20:36">[<expr pos:start="20:24" pos:end="20:35"><name pos:start="20:24" pos:end="20:27">bank</name> <operator pos:start="20:29" pos:end="20:29">*</operator> <literal type="number" pos:start="20:31" pos:end="20:33">2</literal> <operator pos:start="20:33" pos:end="20:33">+</operator> <literal type="number" pos:start="20:35" pos:end="20:35">1</literal></expr>]</index></name></expr>;</return>
    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><name pos:start="21:10" pos:end="21:13">GPLR</name></expr>:</case>		<comment type="block" pos:start="21:25" pos:end="21:54">/* GPIO Pin-Level registers */</comment>
        <expr_stmt pos:start="22:9" pos:end="23:50"><expr pos:start="22:9" pos:end="23:49"><name pos:start="22:9" pos:end="22:11">ret</name> <operator pos:start="22:13" pos:end="22:13">=</operator> <operator pos:start="22:15" pos:end="22:15">(</operator><name pos:start="22:16" pos:end="22:30"><name pos:start="22:16" pos:end="22:16">s</name><operator pos:start="22:17" pos:end="22:18">-&gt;</operator><name pos:start="22:19" pos:end="22:24">olevel</name><index pos:start="22:25" pos:end="22:30">[<expr pos:start="22:26" pos:end="22:29"><name pos:start="22:26" pos:end="22:29">bank</name></expr>]</index></name> <operator pos:start="22:32" pos:end="22:32">&amp;</operator> <name pos:start="22:34" pos:end="22:45"><name pos:start="22:34" pos:end="22:34">s</name><operator pos:start="22:35" pos:end="22:36">-&gt;</operator><name pos:start="22:37" pos:end="22:39">dir</name><index pos:start="22:40" pos:end="22:45">[<expr pos:start="22:41" pos:end="22:44"><name pos:start="22:41" pos:end="22:44">bank</name></expr>]</index></name><operator pos:start="22:46" pos:end="22:46">)</operator> <operator pos:start="22:48" pos:end="22:48">|</operator>
                <operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:32"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:26">ilevel</name><index pos:start="23:27" pos:end="23:32">[<expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">bank</name></expr>]</index></name> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <operator pos:start="23:36" pos:end="23:36">~</operator><name pos:start="23:37" pos:end="23:48"><name pos:start="23:37" pos:end="23:37">s</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:42">dir</name><index pos:start="23:43" pos:end="23:48">[<expr pos:start="23:44" pos:end="23:47"><name pos:start="23:44" pos:end="23:47">bank</name></expr>]</index></name><operator pos:start="23:49" pos:end="23:49">)</operator></expr>;</expr_stmt>
        <if_stmt pos:start="24:9" pos:end="25:38"><if pos:start="24:9" pos:end="25:38">if <condition pos:start="24:12" pos:end="24:27">(<expr pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:26"><name pos:start="24:13" pos:end="24:13">s</name><operator pos:start="24:14" pos:end="24:15">-&gt;</operator><name pos:start="24:16" pos:end="24:26">read_notify</name></name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:38"><block_content pos:start="25:13" pos:end="25:38">
            <expr_stmt pos:start="25:13" pos:end="25:38"><expr pos:start="25:13" pos:end="25:37"><call pos:start="25:13" pos:end="25:37"><name pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">read_notify</name></name><argument_list pos:start="25:27" pos:end="25:37">(<argument pos:start="25:28" pos:end="25:36"><expr pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:36"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:36">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
        <return pos:start="26:9" pos:end="26:19">return <expr pos:start="26:16" pos:end="26:18"><name pos:start="26:16" pos:end="26:18">ret</name></expr>;</return>
    <case pos:start="27:5" pos:end="27:14">case <expr pos:start="27:10" pos:end="27:13"><name pos:start="27:10" pos:end="27:13">GEDR</name></expr>:</case>		<comment type="block" pos:start="27:25" pos:end="27:63">/* GPIO Edge Detect Status registers */</comment>
        <return pos:start="28:9" pos:end="28:31">return <expr pos:start="28:16" pos:end="28:30"><name pos:start="28:16" pos:end="28:30"><name pos:start="28:16" pos:end="28:16">s</name><operator pos:start="28:17" pos:end="28:18">-&gt;</operator><name pos:start="28:19" pos:end="28:24">status</name><index pos:start="28:25" pos:end="28:30">[<expr pos:start="28:26" pos:end="28:29"><name pos:start="28:26" pos:end="28:29">bank</name></expr>]</index></name></expr>;</return>
    <default pos:start="29:5" pos:end="29:12">default:</default>
        <expr_stmt pos:start="30:9" pos:end="31:70"><expr pos:start="30:9" pos:end="31:69"><call pos:start="30:9" pos:end="31:69"><name pos:start="30:9" pos:end="30:17">cpu_abort</name><argument_list pos:start="30:18" pos:end="31:69">(<argument pos:start="30:19" pos:end="30:32"><expr pos:start="30:19" pos:end="30:32"><name pos:start="30:19" pos:end="30:32">cpu_single_env</name></expr></argument>,
                <argument pos:start="31:17" pos:end="31:46"><expr pos:start="31:17" pos:end="31:46"><literal type="string" pos:start="31:17" pos:end="31:33">"%s: Bad offset "</literal> <name pos:start="31:35" pos:end="31:41">REG_FMT</name> <literal type="string" pos:start="31:43" pos:end="31:46">"\n"</literal></expr></argument>, <argument pos:start="31:49" pos:end="31:60"><expr pos:start="31:49" pos:end="31:60"><name pos:start="31:49" pos:end="31:60">__FUNCTION__</name></expr></argument>, <argument pos:start="31:63" pos:end="31:68"><expr pos:start="31:63" pos:end="31:68"><name pos:start="31:63" pos:end="31:68">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></switch>
    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
