<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24832.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">parse_fade</name><parameter_list pos:start="1:22" pos:end="1:64">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:39">sbg_parser</name></name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">p</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:63"><decl pos:start="1:45" pos:end="1:63"><type pos:start="1:45" pos:end="1:63"><name pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:50">struct</name> <name pos:start="1:52" pos:end="1:59">sbg_fade</name></name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:63">fr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:19">sbg_fade</name></name></type> <name pos:start="5:21" pos:end="5:21">f</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="23:17"><if pos:start="9:5" pos:end="11:32">if <condition pos:start="9:8" pos:end="9:25">(<expr pos:start="9:9" pos:end="9:24"><call pos:start="9:9" pos:end="9:24"><name pos:start="9:9" pos:end="9:16">lex_char</name><argument_list pos:start="9:17" pos:end="9:24">(<argument pos:start="9:18" pos:end="9:18"><expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">p</name></expr></argument>, <argument pos:start="9:21" pos:end="9:23"><expr pos:start="9:21" pos:end="9:23"><literal type="char" pos:start="9:21" pos:end="9:23">'&lt;'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:32"><block_content pos:start="11:9" pos:end="11:32">

        <expr_stmt pos:start="11:9" pos:end="11:32"><expr pos:start="11:9" pos:end="11:31"><name pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:9">f</name><operator pos:start="11:10" pos:end="11:10">.</operator><name pos:start="11:11" pos:end="11:12">in</name></name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:31">SBG_FADE_SILENCE</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="13:5" pos:end="15:29">else if <condition pos:start="13:13" pos:end="13:30">(<expr pos:start="13:14" pos:end="13:29"><call pos:start="13:14" pos:end="13:29"><name pos:start="13:14" pos:end="13:21">lex_char</name><argument_list pos:start="13:22" pos:end="13:29">(<argument pos:start="13:23" pos:end="13:23"><expr pos:start="13:23" pos:end="13:23"><name pos:start="13:23" pos:end="13:23">p</name></expr></argument>, <argument pos:start="13:26" pos:end="13:28"><expr pos:start="13:26" pos:end="13:28"><literal type="char" pos:start="13:26" pos:end="13:28">'-'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:29"><block_content pos:start="15:9" pos:end="15:29">

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:12"><name pos:start="15:9" pos:end="15:9">f</name><operator pos:start="15:10" pos:end="15:10">.</operator><name pos:start="15:11" pos:end="15:12">in</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:28">SBG_FADE_SAME</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="17:5" pos:end="19:30">else if <condition pos:start="17:13" pos:end="17:30">(<expr pos:start="17:14" pos:end="17:29"><call pos:start="17:14" pos:end="17:29"><name pos:start="17:14" pos:end="17:21">lex_char</name><argument_list pos:start="17:22" pos:end="17:29">(<argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><name pos:start="17:23" pos:end="17:23">p</name></expr></argument>, <argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><literal type="char" pos:start="17:26" pos:end="17:28">'='</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:30"><block_content pos:start="19:9" pos:end="19:30">

        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:12"><name pos:start="19:9" pos:end="19:9">f</name><operator pos:start="19:10" pos:end="19:10">.</operator><name pos:start="19:11" pos:end="19:12">in</name></name> <operator pos:start="19:14" pos:end="19:14">=</operator> <name pos:start="19:16" pos:end="19:29">SBG_FADE_ADAPT</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:17">else<block type="pseudo" pos:start="23:9" pos:end="23:17"><block_content pos:start="23:9" pos:end="23:17">

        <return pos:start="23:9" pos:end="23:17">return <expr pos:start="23:16" pos:end="23:16"><literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</return></block_content></block></else></if_stmt>

    <if_stmt pos:start="25:5" pos:end="39:35"><if pos:start="25:5" pos:end="27:33">if <condition pos:start="25:8" pos:end="25:25">(<expr pos:start="25:9" pos:end="25:24"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:16">lex_char</name><argument_list pos:start="25:17" pos:end="25:24">(<argument pos:start="25:18" pos:end="25:18"><expr pos:start="25:18" pos:end="25:18"><name pos:start="25:18" pos:end="25:18">p</name></expr></argument>, <argument pos:start="25:21" pos:end="25:23"><expr pos:start="25:21" pos:end="25:23"><literal type="char" pos:start="25:21" pos:end="25:23">'&gt;'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:33"><block_content pos:start="27:9" pos:end="27:33">

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:9">f</name><operator pos:start="27:10" pos:end="27:10">.</operator><name pos:start="27:11" pos:end="27:13">out</name></name> <operator pos:start="27:15" pos:end="27:15">=</operator> <name pos:start="27:17" pos:end="27:32">SBG_FADE_SILENCE</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="29:5" pos:end="31:30">else if <condition pos:start="29:13" pos:end="29:30">(<expr pos:start="29:14" pos:end="29:29"><call pos:start="29:14" pos:end="29:29"><name pos:start="29:14" pos:end="29:21">lex_char</name><argument_list pos:start="29:22" pos:end="29:29">(<argument pos:start="29:23" pos:end="29:23"><expr pos:start="29:23" pos:end="29:23"><name pos:start="29:23" pos:end="29:23">p</name></expr></argument>, <argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><literal type="char" pos:start="29:26" pos:end="29:28">'-'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:30"><block_content pos:start="31:9" pos:end="31:30">

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:9">f</name><operator pos:start="31:10" pos:end="31:10">.</operator><name pos:start="31:11" pos:end="31:13">out</name></name> <operator pos:start="31:15" pos:end="31:15">=</operator> <name pos:start="31:17" pos:end="31:29">SBG_FADE_SAME</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="33:5" pos:end="35:31">else if <condition pos:start="33:13" pos:end="33:30">(<expr pos:start="33:14" pos:end="33:29"><call pos:start="33:14" pos:end="33:29"><name pos:start="33:14" pos:end="33:21">lex_char</name><argument_list pos:start="33:22" pos:end="33:29">(<argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><name pos:start="33:23" pos:end="33:23">p</name></expr></argument>, <argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><literal type="char" pos:start="33:26" pos:end="33:28">'='</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:31"><block_content pos:start="35:9" pos:end="35:31">

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:9">f</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:13">out</name></name> <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:30">SBG_FADE_ADAPT</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="37:5" pos:end="39:35">else<block type="pseudo" pos:start="39:9" pos:end="39:35"><block_content pos:start="39:9" pos:end="39:35">

        <return pos:start="39:9" pos:end="39:35">return <expr pos:start="39:16" pos:end="39:34"><name pos:start="39:16" pos:end="39:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:12"><expr pos:start="41:5" pos:end="41:11"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:7">fr</name> <operator pos:start="41:9" pos:end="41:9">=</operator> <name pos:start="41:11" pos:end="41:11">f</name></expr>;</expr_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
