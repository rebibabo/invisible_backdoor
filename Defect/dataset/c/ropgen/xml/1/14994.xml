<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14994.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">alac_linear_predictor</name><parameter_list pos:start="1:34" pos:end="1:63">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:51">AlacEncodeContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:62"><decl pos:start="1:57" pos:end="1:62"><type pos:start="1:57" pos:end="1:62"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:62">ch</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">LPCContext</name></type> <name pos:start="7:16" pos:end="7:18">lpc</name> <init pos:start="7:20" pos:end="7:31">= <expr pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:22">s</name><operator pos:start="7:23" pos:end="7:24">-&gt;</operator><name pos:start="7:25" pos:end="7:27">lpc</name><index pos:start="7:28" pos:end="7:31">[<expr pos:start="7:29" pos:end="7:30"><name pos:start="7:29" pos:end="7:30">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="25:5"><if pos:start="11:5" pos:end="25:5">if<condition pos:start="11:7" pos:end="11:27">(<expr pos:start="11:8" pos:end="11:26"><name pos:start="11:8" pos:end="11:20"><name pos:start="11:8" pos:end="11:10">lpc</name><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:20">lpc_order</name></name> <operator pos:start="11:22" pos:end="11:23">==</operator> <literal type="number" pos:start="11:25" pos:end="11:26">31</literal></expr>)</condition> <block pos:start="11:29" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:15">

        <expr_stmt pos:start="13:9" pos:end="13:51"><expr pos:start="13:9" pos:end="13:50"><name pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:24">predictor_buf</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">0</literal></expr>]</index></name> <operator pos:start="13:29" pos:end="13:29">=</operator> <name pos:start="13:31" pos:end="13:50"><name pos:start="13:31" pos:end="13:31">s</name><operator pos:start="13:32" pos:end="13:33">-&gt;</operator><name pos:start="13:34" pos:end="13:43">sample_buf</name><index pos:start="13:44" pos:end="13:47">[<expr pos:start="13:45" pos:end="13:46"><name pos:start="13:45" pos:end="13:46">ch</name></expr>]</index><index pos:start="13:48" pos:end="13:50">[<expr pos:start="13:49" pos:end="13:49"><literal type="number" pos:start="13:49" pos:end="13:49">0</literal></expr>]</index></name></expr>;</expr_stmt>



        <for pos:start="17:9" pos:end="19:80">for<control pos:start="17:12" pos:end="17:45">(<init pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">i</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">1</literal></expr>;</init> <condition pos:start="17:18" pos:end="17:40"><expr pos:start="17:18" pos:end="17:39"><name pos:start="17:18" pos:end="17:18">i</name><operator pos:start="17:19" pos:end="17:19">&lt;</operator><name pos:start="17:20" pos:end="17:39"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:27">avctx</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:39">frame_size</name></name></expr>;</condition> <incr pos:start="17:42" pos:end="17:44"><expr pos:start="17:42" pos:end="17:44"><name pos:start="17:42" pos:end="17:42">i</name><operator pos:start="17:43" pos:end="17:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="19:13" pos:end="19:80"><block_content pos:start="19:13" pos:end="19:80">

            <expr_stmt pos:start="19:13" pos:end="19:80"><expr pos:start="19:13" pos:end="19:79"><name pos:start="19:13" pos:end="19:31"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:28">predictor_buf</name><index pos:start="19:29" pos:end="19:31">[<expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">i</name></expr>]</index></name> <operator pos:start="19:33" pos:end="19:33">=</operator> <name pos:start="19:35" pos:end="19:54"><name pos:start="19:35" pos:end="19:35">s</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:47">sample_buf</name><index pos:start="19:48" pos:end="19:51">[<expr pos:start="19:49" pos:end="19:50"><name pos:start="19:49" pos:end="19:50">ch</name></expr>]</index><index pos:start="19:52" pos:end="19:54">[<expr pos:start="19:53" pos:end="19:53"><name pos:start="19:53" pos:end="19:53">i</name></expr>]</index></name> <operator pos:start="19:56" pos:end="19:56">-</operator> <name pos:start="19:58" pos:end="19:79"><name pos:start="19:58" pos:end="19:58">s</name><operator pos:start="19:59" pos:end="19:60">-&gt;</operator><name pos:start="19:61" pos:end="19:70">sample_buf</name><index pos:start="19:71" pos:end="19:74">[<expr pos:start="19:72" pos:end="19:73"><name pos:start="19:72" pos:end="19:73">ch</name></expr>]</index><index pos:start="19:75" pos:end="19:79">[<expr pos:start="19:76" pos:end="19:78"><name pos:start="19:76" pos:end="19:76">i</name><operator pos:start="19:77" pos:end="19:77">-</operator><literal type="number" pos:start="19:78" pos:end="19:78">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:35">// generalised linear predictor</comment>



    <if_stmt pos:start="33:5" pos:end="119:5"><if pos:start="33:5" pos:end="119:5">if<condition pos:start="33:7" pos:end="33:25">(<expr pos:start="33:8" pos:end="33:24"><name pos:start="33:8" pos:end="33:20"><name pos:start="33:8" pos:end="33:10">lpc</name><operator pos:start="33:11" pos:end="33:11">.</operator><name pos:start="33:12" pos:end="33:20">lpc_order</name></name> <operator pos:start="33:22" pos:end="33:22">&gt;</operator> <literal type="number" pos:start="33:24" pos:end="33:24">0</literal></expr>)</condition> <block pos:start="33:27" pos:end="119:5">{<block_content pos:start="35:9" pos:end="117:9">

        <decl_stmt pos:start="35:9" pos:end="35:46"><decl pos:start="35:9" pos:end="35:45"><type pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:15">int32_t</name> <modifier pos:start="35:17" pos:end="35:17">*</modifier></type><name pos:start="35:18" pos:end="35:24">samples</name>  <init pos:start="35:27" pos:end="35:45">= <expr pos:start="35:29" pos:end="35:45"><name pos:start="35:29" pos:end="35:45"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:41">sample_buf</name><index pos:start="35:42" pos:end="35:45">[<expr pos:start="35:43" pos:end="35:44"><name pos:start="35:43" pos:end="35:44">ch</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:45"><decl pos:start="37:9" pos:end="37:44"><type pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:15">int32_t</name> <modifier pos:start="37:17" pos:end="37:17">*</modifier></type><name pos:start="37:18" pos:end="37:25">residual</name> <init pos:start="37:27" pos:end="37:44">= <expr pos:start="37:29" pos:end="37:44"><name pos:start="37:29" pos:end="37:44"><name pos:start="37:29" pos:end="37:29">s</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:44">predictor_buf</name></name></expr></init></decl>;</decl_stmt>



        <comment type="line" pos:start="41:9" pos:end="41:35">// generate warm-up samples</comment>

        <expr_stmt pos:start="43:9" pos:end="43:33"><expr pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:16">residual</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>]</index></name> <operator pos:start="43:21" pos:end="43:21">=</operator> <name pos:start="43:23" pos:end="43:32"><name pos:start="43:23" pos:end="43:29">samples</name><index pos:start="43:30" pos:end="43:32">[<expr pos:start="43:31" pos:end="43:31"><literal type="number" pos:start="43:31" pos:end="43:31">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <for pos:start="45:9" pos:end="47:52">for<control pos:start="45:12" pos:end="45:37">(<init pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">=</operator><literal type="number" pos:start="45:15" pos:end="45:15">1</literal></expr>;</init><condition pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:17">i</name><operator pos:start="45:18" pos:end="45:19">&lt;=</operator><name pos:start="45:20" pos:end="45:32"><name pos:start="45:20" pos:end="45:22">lpc</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:32">lpc_order</name></name></expr>;</condition><incr pos:start="45:34" pos:end="45:36"><expr pos:start="45:34" pos:end="45:36"><name pos:start="45:34" pos:end="45:34">i</name><operator pos:start="45:35" pos:end="45:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="47:13" pos:end="47:52"><block_content pos:start="47:13" pos:end="47:52">

            <expr_stmt pos:start="47:13" pos:end="47:52"><expr pos:start="47:13" pos:end="47:51"><name pos:start="47:13" pos:end="47:23"><name pos:start="47:13" pos:end="47:20">residual</name><index pos:start="47:21" pos:end="47:23">[<expr pos:start="47:22" pos:end="47:22"><name pos:start="47:22" pos:end="47:22">i</name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:36"><name pos:start="47:27" pos:end="47:33">samples</name><index pos:start="47:34" pos:end="47:36">[<expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">i</name></expr>]</index></name> <operator pos:start="47:38" pos:end="47:38">-</operator> <name pos:start="47:40" pos:end="47:51"><name pos:start="47:40" pos:end="47:46">samples</name><index pos:start="47:47" pos:end="47:51">[<expr pos:start="47:48" pos:end="47:50"><name pos:start="47:48" pos:end="47:48">i</name><operator pos:start="47:49" pos:end="47:49">-</operator><literal type="number" pos:start="47:50" pos:end="47:50">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



        <comment type="line" pos:start="51:9" pos:end="51:43">// perform lpc on remaining samples</comment>

        <for pos:start="53:9" pos:end="117:9">for<control pos:start="53:12" pos:end="53:65">(<init pos:start="53:13" pos:end="53:34"><expr pos:start="53:13" pos:end="53:33"><name pos:start="53:13" pos:end="53:13">i</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <name pos:start="53:17" pos:end="53:29"><name pos:start="53:17" pos:end="53:19">lpc</name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:29">lpc_order</name></name> <operator pos:start="53:31" pos:end="53:31">+</operator> <literal type="number" pos:start="53:33" pos:end="53:33">1</literal></expr>;</init> <condition pos:start="53:36" pos:end="53:60"><expr pos:start="53:36" pos:end="53:59"><name pos:start="53:36" pos:end="53:36">i</name> <operator pos:start="53:38" pos:end="53:38">&lt;</operator> <name pos:start="53:40" pos:end="53:59"><name pos:start="53:40" pos:end="53:40">s</name><operator pos:start="53:41" pos:end="53:42">-&gt;</operator><name pos:start="53:43" pos:end="53:47">avctx</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:59">frame_size</name></name></expr>;</condition> <incr pos:start="53:62" pos:end="53:64"><expr pos:start="53:62" pos:end="53:64"><name pos:start="53:62" pos:end="53:62">i</name><operator pos:start="53:63" pos:end="53:64">++</operator></expr></incr>)</control> <block pos:start="53:67" pos:end="117:9">{<block_content pos:start="55:13" pos:end="115:22">

            <decl_stmt pos:start="55:13" pos:end="55:59"><decl pos:start="55:13" pos:end="55:46"><type pos:start="55:13" pos:end="55:15"><name pos:start="55:13" pos:end="55:15">int</name></type> <name pos:start="55:17" pos:end="55:19">sum</name> <init pos:start="55:21" pos:end="55:46">= <expr pos:start="55:23" pos:end="55:46"><literal type="number" pos:start="55:23" pos:end="55:23">1</literal> <operator pos:start="55:25" pos:end="55:26">&lt;&lt;</operator> <operator pos:start="55:28" pos:end="55:28">(</operator><name pos:start="55:29" pos:end="55:41"><name pos:start="55:29" pos:end="55:31">lpc</name><operator pos:start="55:32" pos:end="55:32">.</operator><name pos:start="55:33" pos:end="55:41">lpc_quant</name></name> <operator pos:start="55:43" pos:end="55:43">-</operator> <literal type="number" pos:start="55:45" pos:end="55:45">1</literal><operator pos:start="55:46" pos:end="55:46">)</operator></expr></init></decl>, <decl pos:start="55:49" pos:end="55:55"><type ref="prev" pos:start="55:13" pos:end="55:15"/><name pos:start="55:49" pos:end="55:55">res_val</name></decl>, <decl pos:start="55:58" pos:end="55:58"><type ref="prev" pos:start="55:13" pos:end="55:15"/><name pos:start="55:58" pos:end="55:58">j</name></decl>;</decl_stmt>



            <for pos:start="59:13" pos:end="65:13">for <control pos:start="59:17" pos:end="59:47">(<init pos:start="59:18" pos:end="59:23"><expr pos:start="59:18" pos:end="59:22"><name pos:start="59:18" pos:end="59:18">j</name> <operator pos:start="59:20" pos:end="59:20">=</operator> <literal type="number" pos:start="59:22" pos:end="59:22">0</literal></expr>;</init> <condition pos:start="59:25" pos:end="59:42"><expr pos:start="59:25" pos:end="59:41"><name pos:start="59:25" pos:end="59:25">j</name> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <name pos:start="59:29" pos:end="59:41"><name pos:start="59:29" pos:end="59:31">lpc</name><operator pos:start="59:32" pos:end="59:32">.</operator><name pos:start="59:33" pos:end="59:41">lpc_order</name></name></expr>;</condition> <incr pos:start="59:44" pos:end="59:46"><expr pos:start="59:44" pos:end="59:46"><name pos:start="59:44" pos:end="59:44">j</name><operator pos:start="59:45" pos:end="59:46">++</operator></expr></incr>)</control> <block pos:start="59:49" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:41">

                <expr_stmt pos:start="61:17" pos:end="63:41"><expr pos:start="61:17" pos:end="63:40"><name pos:start="61:17" pos:end="61:19">sum</name> <operator pos:start="61:21" pos:end="61:22">+=</operator> <operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:48"><name pos:start="61:25" pos:end="61:31">samples</name><index pos:start="61:32" pos:end="61:48">[<expr pos:start="61:33" pos:end="61:47"><name pos:start="61:33" pos:end="61:45"><name pos:start="61:33" pos:end="61:35">lpc</name><operator pos:start="61:36" pos:end="61:36">.</operator><name pos:start="61:37" pos:end="61:45">lpc_order</name></name><operator pos:start="61:46" pos:end="61:46">-</operator><name pos:start="61:47" pos:end="61:47">j</name></expr>]</index></name> <operator pos:start="61:50" pos:end="61:50">-</operator> <name pos:start="61:52" pos:end="61:61"><name pos:start="61:52" pos:end="61:58">samples</name><index pos:start="61:59" pos:end="61:61">[<expr pos:start="61:60" pos:end="61:60"><literal type="number" pos:start="61:60" pos:end="61:60">0</literal></expr>]</index></name><operator pos:start="61:62" pos:end="61:62">)</operator> <operator pos:start="61:64" pos:end="61:64">*</operator>

                        <name pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:27">lpc</name><operator pos:start="63:28" pos:end="63:28">.</operator><name pos:start="63:29" pos:end="63:37">lpc_coeff</name><index pos:start="63:38" pos:end="63:40">[<expr pos:start="63:39" pos:end="63:39"><name pos:start="63:39" pos:end="63:39">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>



            <expr_stmt pos:start="69:13" pos:end="69:34"><expr pos:start="69:13" pos:end="69:33"><name pos:start="69:13" pos:end="69:15">sum</name> <operator pos:start="69:17" pos:end="69:19">&gt;&gt;=</operator> <name pos:start="69:21" pos:end="69:33"><name pos:start="69:21" pos:end="69:23">lpc</name><operator pos:start="69:24" pos:end="69:24">.</operator><name pos:start="69:25" pos:end="69:33">lpc_quant</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:30"><expr pos:start="71:13" pos:end="71:29"><name pos:start="71:13" pos:end="71:15">sum</name> <operator pos:start="71:17" pos:end="71:18">+=</operator> <name pos:start="71:20" pos:end="71:29"><name pos:start="71:20" pos:end="71:26">samples</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:57"><expr pos:start="73:13" pos:end="73:56"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:20">residual</name><index pos:start="73:21" pos:end="73:23">[<expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">i</name></expr>]</index></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:50"><name pos:start="73:27" pos:end="73:33">samples</name><index pos:start="73:34" pos:end="73:50">[<expr pos:start="73:35" pos:end="73:49"><name pos:start="73:35" pos:end="73:47"><name pos:start="73:35" pos:end="73:37">lpc</name><operator pos:start="73:38" pos:end="73:38">.</operator><name pos:start="73:39" pos:end="73:47">lpc_order</name></name><operator pos:start="73:48" pos:end="73:48">+</operator><literal type="number" pos:start="73:49" pos:end="73:49">1</literal></expr>]</index></name> <operator pos:start="73:52" pos:end="73:52">-</operator> <name pos:start="73:54" pos:end="73:56">sum</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:19">res_val</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <name pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:30">residual</name><index pos:start="75:31" pos:end="75:33">[<expr pos:start="75:32" pos:end="75:32"><name pos:start="75:32" pos:end="75:32">i</name></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="79:13" pos:end="113:13"><if pos:start="79:13" pos:end="113:13">if<condition pos:start="79:15" pos:end="79:23">(<expr pos:start="79:16" pos:end="79:22"><name pos:start="79:16" pos:end="79:22">res_val</name></expr>)</condition> <block pos:start="79:25" pos:end="113:13">{<block_content pos:start="81:17" pos:end="111:17">

                <decl_stmt pos:start="81:17" pos:end="81:46"><decl pos:start="81:17" pos:end="81:45"><type pos:start="81:17" pos:end="81:19"><name pos:start="81:17" pos:end="81:19">int</name></type> <name pos:start="81:21" pos:end="81:25">index</name> <init pos:start="81:27" pos:end="81:45">= <expr pos:start="81:29" pos:end="81:45"><name pos:start="81:29" pos:end="81:41"><name pos:start="81:29" pos:end="81:31">lpc</name><operator pos:start="81:32" pos:end="81:32">.</operator><name pos:start="81:33" pos:end="81:41">lpc_order</name></name> <operator pos:start="81:43" pos:end="81:43">-</operator> <literal type="number" pos:start="81:45" pos:end="81:45">1</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="83:17" pos:end="83:40"><decl pos:start="83:17" pos:end="83:39"><type pos:start="83:17" pos:end="83:19"><name pos:start="83:17" pos:end="83:19">int</name></type> <name pos:start="83:21" pos:end="83:23">neg</name> <init pos:start="83:25" pos:end="83:39">= <expr pos:start="83:27" pos:end="83:39"><operator pos:start="83:27" pos:end="83:27">(</operator><name pos:start="83:28" pos:end="83:34">res_val</name> <operator pos:start="83:36" pos:end="83:36">&lt;</operator> <literal type="number" pos:start="83:38" pos:end="83:38">0</literal><operator pos:start="83:39" pos:end="83:39">)</operator></expr></init></decl>;</decl_stmt>



                <while pos:start="87:17" pos:end="111:17">while<condition pos:start="87:22" pos:end="87:72">(<expr pos:start="87:23" pos:end="87:71"><name pos:start="87:23" pos:end="87:27">index</name> <operator pos:start="87:29" pos:end="87:30">&gt;=</operator> <literal type="number" pos:start="87:32" pos:end="87:32">0</literal> <operator pos:start="87:34" pos:end="87:35">&amp;&amp;</operator> <operator pos:start="87:37" pos:end="87:37">(</operator><ternary pos:start="87:38" pos:end="87:70"><condition pos:start="87:38" pos:end="87:42"><expr pos:start="87:38" pos:end="87:40"><name pos:start="87:38" pos:end="87:40">neg</name></expr> ?</condition><then pos:start="87:44" pos:end="87:56"> <expr pos:start="87:44" pos:end="87:56"><operator pos:start="87:44" pos:end="87:44">(</operator><name pos:start="87:45" pos:end="87:51">res_val</name> <operator pos:start="87:53" pos:end="87:53">&lt;</operator> <literal type="number" pos:start="87:55" pos:end="87:55">0</literal><operator pos:start="87:56" pos:end="87:56">)</operator></expr></then><else pos:start="87:57" pos:end="87:70">:<expr pos:start="87:58" pos:end="87:70"><operator pos:start="87:58" pos:end="87:58">(</operator><name pos:start="87:59" pos:end="87:65">res_val</name> <operator pos:start="87:67" pos:end="87:67">&gt;</operator> <literal type="number" pos:start="87:69" pos:end="87:69">0</literal><operator pos:start="87:70" pos:end="87:70">)</operator></expr></else></ternary><operator pos:start="87:71" pos:end="87:71">)</operator></expr>)</condition> <block pos:start="87:74" pos:end="111:17">{<block_content pos:start="89:21" pos:end="109:28">

                    <decl_stmt pos:start="89:21" pos:end="89:74"><decl pos:start="89:21" pos:end="89:73"><type pos:start="89:21" pos:end="89:23"><name pos:start="89:21" pos:end="89:23">int</name></type> <name pos:start="89:25" pos:end="89:27">val</name> <init pos:start="89:29" pos:end="89:73">= <expr pos:start="89:31" pos:end="89:73"><name pos:start="89:31" pos:end="89:40"><name pos:start="89:31" pos:end="89:37">samples</name><index pos:start="89:38" pos:end="89:40">[<expr pos:start="89:39" pos:end="89:39"><literal type="number" pos:start="89:39" pos:end="89:39">0</literal></expr>]</index></name> <operator pos:start="89:42" pos:end="89:42">-</operator> <name pos:start="89:44" pos:end="89:73"><name pos:start="89:44" pos:end="89:50">samples</name><index pos:start="89:51" pos:end="89:73">[<expr pos:start="89:52" pos:end="89:72"><name pos:start="89:52" pos:end="89:64"><name pos:start="89:52" pos:end="89:54">lpc</name><operator pos:start="89:55" pos:end="89:55">.</operator><name pos:start="89:56" pos:end="89:64">lpc_order</name></name> <operator pos:start="89:66" pos:end="89:66">-</operator> <name pos:start="89:68" pos:end="89:72">index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="91:21" pos:end="91:55"><decl pos:start="91:21" pos:end="91:54"><type pos:start="91:21" pos:end="91:23"><name pos:start="91:21" pos:end="91:23">int</name></type> <name pos:start="91:25" pos:end="91:28">sign</name> <init pos:start="91:30" pos:end="91:54">= <expr pos:start="91:32" pos:end="91:54"><operator pos:start="91:32" pos:end="91:32">(</operator><ternary pos:start="91:33" pos:end="91:53"><condition pos:start="91:33" pos:end="91:37"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:35">val</name></expr> ?</condition><then pos:start="91:39" pos:end="91:49"> <expr pos:start="91:39" pos:end="91:49"><call pos:start="91:39" pos:end="91:49"><name pos:start="91:39" pos:end="91:44">FFSIGN</name><argument_list pos:start="91:45" pos:end="91:49">(<argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">val</name></expr></argument>)</argument_list></call></expr> </then><else pos:start="91:51" pos:end="91:53">: <expr pos:start="91:53" pos:end="91:53"><literal type="number" pos:start="91:53" pos:end="91:53">0</literal></expr></else></ternary><operator pos:start="91:54" pos:end="91:54">)</operator></expr></init></decl>;</decl_stmt>



                    <if_stmt pos:start="95:21" pos:end="97:33"><if pos:start="95:21" pos:end="97:33">if<condition pos:start="95:23" pos:end="95:27">(<expr pos:start="95:24" pos:end="95:26"><name pos:start="95:24" pos:end="95:26">neg</name></expr>)</condition><block type="pseudo" pos:start="97:25" pos:end="97:33"><block_content pos:start="97:25" pos:end="97:33">

                        <expr_stmt pos:start="97:25" pos:end="97:33"><expr pos:start="97:25" pos:end="97:32"><name pos:start="97:25" pos:end="97:28">sign</name><operator pos:start="97:29" pos:end="97:30">*=</operator><operator pos:start="97:31" pos:end="97:31">-</operator><literal type="number" pos:start="97:32" pos:end="97:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



                    <expr_stmt pos:start="101:21" pos:end="101:49"><expr pos:start="101:21" pos:end="101:48"><name pos:start="101:21" pos:end="101:40"><name pos:start="101:21" pos:end="101:23">lpc</name><operator pos:start="101:24" pos:end="101:24">.</operator><name pos:start="101:25" pos:end="101:33">lpc_coeff</name><index pos:start="101:34" pos:end="101:40">[<expr pos:start="101:35" pos:end="101:39"><name pos:start="101:35" pos:end="101:39">index</name></expr>]</index></name> <operator pos:start="101:42" pos:end="101:43">-=</operator> <name pos:start="101:45" pos:end="101:48">sign</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="103:21" pos:end="103:32"><expr pos:start="103:21" pos:end="103:31"><name pos:start="103:21" pos:end="103:23">val</name> <operator pos:start="103:25" pos:end="103:26">*=</operator> <name pos:start="103:28" pos:end="103:31">sign</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="105:21" pos:end="107:53"><expr pos:start="105:21" pos:end="107:52"><name pos:start="105:21" pos:end="105:27">res_val</name> <operator pos:start="105:29" pos:end="105:30">-=</operator> <operator pos:start="105:32" pos:end="105:32">(</operator><operator pos:start="105:33" pos:end="105:33">(</operator><name pos:start="105:34" pos:end="105:36">val</name> <operator pos:start="105:38" pos:end="105:39">&gt;&gt;</operator> <name pos:start="105:41" pos:end="105:53"><name pos:start="105:41" pos:end="105:43">lpc</name><operator pos:start="105:44" pos:end="105:44">.</operator><name pos:start="105:45" pos:end="105:53">lpc_quant</name></name><operator pos:start="105:54" pos:end="105:54">)</operator> <operator pos:start="105:56" pos:end="105:56">*</operator>

                            <operator pos:start="107:29" pos:end="107:29">(</operator><name pos:start="107:30" pos:end="107:42"><name pos:start="107:30" pos:end="107:32">lpc</name><operator pos:start="107:33" pos:end="107:33">.</operator><name pos:start="107:34" pos:end="107:42">lpc_order</name></name> <operator pos:start="107:44" pos:end="107:44">-</operator> <name pos:start="107:46" pos:end="107:50">index</name><operator pos:start="107:51" pos:end="107:51">)</operator><operator pos:start="107:52" pos:end="107:52">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="109:21" pos:end="109:28"><expr pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:25">index</name><operator pos:start="109:26" pos:end="109:27">--</operator></expr>;</expr_stmt>

                </block_content>}</block></while>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:22"><expr pos:start="115:13" pos:end="115:21"><name pos:start="115:13" pos:end="115:19">samples</name><operator pos:start="115:20" pos:end="115:21">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
