<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11876.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">sws_rgb2rgb_init</name><parameter_list pos:start="1:22" pos:end="1:32">(<parameter pos:start="1:23" pos:end="1:31"><decl pos:start="1:23" pos:end="1:31"><type pos:start="1:23" pos:end="1:25"><name pos:start="1:23" pos:end="1:25">int</name></type> <name pos:start="1:27" pos:end="1:31">flags</name></decl></parameter>)</parameter_list><block pos:start="1:33" pos:end="23:1">{<block_content pos:start="5:9" pos:end="21:33">

<cpp:if pos:start="3:1" pos:end="3:92">#<cpp:directive pos:start="3:2" pos:end="3:3">if</cpp:directive> <expr pos:start="3:5" pos:end="3:92"><operator pos:start="3:5" pos:end="3:5">(</operator><call pos:start="3:6" pos:end="3:23"><name pos:start="3:6" pos:end="3:12">defined</name><argument_list pos:start="3:13" pos:end="3:23">(<argument pos:start="3:14" pos:end="3:22"><expr pos:start="3:14" pos:end="3:22"><name pos:start="3:14" pos:end="3:22">HAVE_MMX2</name></expr></argument>)</argument_list></call> <operator pos:start="3:25" pos:end="3:26">||</operator> <call pos:start="3:28" pos:end="3:46"><name pos:start="3:28" pos:end="3:34">defined</name><argument_list pos:start="3:35" pos:end="3:46">(<argument pos:start="3:36" pos:end="3:45"><expr pos:start="3:36" pos:end="3:45"><name pos:start="3:36" pos:end="3:45">HAVE_3DNOW</name></expr></argument>)</argument_list></call> <operator pos:start="3:48" pos:end="3:49">||</operator> <call pos:start="3:51" pos:end="3:67"><name pos:start="3:51" pos:end="3:57">defined</name><argument_list pos:start="3:58" pos:end="3:67">(<argument pos:start="3:59" pos:end="3:66"><expr pos:start="3:59" pos:end="3:66"><name pos:start="3:59" pos:end="3:66">HAVE_MMX</name></expr></argument>)</argument_list></call><operator pos:start="3:68" pos:end="3:68">)</operator>  <operator pos:start="3:71" pos:end="3:72">&amp;&amp;</operator> <call pos:start="3:74" pos:end="3:92"><name pos:start="3:74" pos:end="3:80">defined</name><argument_list pos:start="3:81" pos:end="3:92">(<argument pos:start="3:82" pos:end="3:91"><expr pos:start="3:82" pos:end="3:91"><name pos:start="3:82" pos:end="3:91">CONFIG_GPL</name></expr></argument>)</argument_list></call></expr></cpp:if>

	<if_stmt pos:start="5:9" pos:end="21:33"><if pos:start="5:9" pos:end="7:36">if<condition pos:start="5:11" pos:end="5:37">(<expr pos:start="5:12" pos:end="5:36"><name pos:start="5:12" pos:end="5:16">flags</name> <operator pos:start="5:18" pos:end="5:18">&amp;</operator> <name pos:start="5:20" pos:end="5:36">SWS_CPU_CAPS_MMX2</name></expr>)</condition><block type="pseudo" pos:start="7:17" pos:end="7:36"><block_content pos:start="7:17" pos:end="7:36">

		<expr_stmt pos:start="7:17" pos:end="7:36"><expr pos:start="7:17" pos:end="7:35"><call pos:start="7:17" pos:end="7:35"><name pos:start="7:17" pos:end="7:33">rgb2rgb_init_MMX2</name><argument_list pos:start="7:34" pos:end="7:35">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<if type="elseif" pos:start="9:9" pos:end="11:37">else if<condition pos:start="9:16" pos:end="9:43">(<expr pos:start="9:17" pos:end="9:42"><name pos:start="9:17" pos:end="9:21">flags</name> <operator pos:start="9:23" pos:end="9:23">&amp;</operator> <name pos:start="9:25" pos:end="9:42">SWS_CPU_CAPS_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="11:17" pos:end="11:37"><block_content pos:start="11:17" pos:end="11:37">

		<expr_stmt pos:start="11:17" pos:end="11:37"><expr pos:start="11:17" pos:end="11:36"><call pos:start="11:17" pos:end="11:36"><name pos:start="11:17" pos:end="11:34">rgb2rgb_init_3DNOW</name><argument_list pos:start="11:35" pos:end="11:36">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<if type="elseif" pos:start="13:9" pos:end="15:35">else if<condition pos:start="13:16" pos:end="13:41">(<expr pos:start="13:17" pos:end="13:40"><name pos:start="13:17" pos:end="13:21">flags</name> <operator pos:start="13:23" pos:end="13:23">&amp;</operator> <name pos:start="13:25" pos:end="13:40">SWS_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="15:17" pos:end="15:35"><block_content pos:start="15:17" pos:end="15:35">

		<expr_stmt pos:start="15:17" pos:end="15:35"><expr pos:start="15:17" pos:end="15:34"><call pos:start="15:17" pos:end="15:34"><name pos:start="15:17" pos:end="15:32">rgb2rgb_init_MMX</name><argument_list pos:start="15:33" pos:end="15:34">()</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="17:9" pos:end="21:33">else<block type="pseudo" pos:start="21:17" pos:end="21:33"><block_content pos:start="21:17" pos:end="21:33">

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="19:8" pos:end="19:75">/* defined(HAVE_MMX2) || defined(HAVE_3DNOW) || defined(HAVE_MMX) */</comment>

		<expr_stmt pos:start="21:17" pos:end="21:33"><expr pos:start="21:17" pos:end="21:32"><call pos:start="21:17" pos:end="21:32"><name pos:start="21:17" pos:end="21:30">rgb2rgb_init_C</name><argument_list pos:start="21:31" pos:end="21:32">()</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
