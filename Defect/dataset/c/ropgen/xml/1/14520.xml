<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14520.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">cirrus_vga_load</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:38"><decl pos:start="1:28" pos:end="1:38"><type pos:start="1:28" pos:end="1:38"><name pos:start="1:28" pos:end="1:35">QEMUFile</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">f</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:44">void</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:52">opaque</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:68"><decl pos:start="1:55" pos:end="1:68"><type pos:start="1:55" pos:end="1:68"><name pos:start="1:55" pos:end="1:57">int</name></type> <name pos:start="1:59" pos:end="1:68">version_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">CirrusVGAState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:23"><if pos:start="11:5" pos:end="13:23">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:18">version_id</name> <operator pos:start="11:20" pos:end="11:20">&gt;</operator> <literal type="number" pos:start="11:22" pos:end="11:22">2</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:38">(<expr pos:start="17:9" pos:end="17:37"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">pci_dev</name></name> <operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator> <name pos:start="17:23" pos:end="17:32">version_id</name> <operator pos:start="17:34" pos:end="17:35">&gt;=</operator> <literal type="number" pos:start="17:37" pos:end="17:37">2</literal></expr>)</condition> <block pos:start="17:40" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:23">

        <expr_stmt pos:start="19:9" pos:end="19:45"><expr pos:start="19:9" pos:end="19:44"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:44"><name pos:start="19:15" pos:end="19:29">pci_device_load</name><argument_list pos:start="19:30" pos:end="19:44">(<argument pos:start="19:31" pos:end="19:40"><expr pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:40"><name pos:start="19:31" pos:end="19:31">s</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:40">pci_dev</name></name></expr></argument>, <argument pos:start="19:43" pos:end="19:43"><expr pos:start="19:43" pos:end="19:43"><name pos:start="19:43" pos:end="19:43">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:23"><if pos:start="21:9" pos:end="23:23">if <condition pos:start="21:12" pos:end="21:20">(<expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">ret</name> <operator pos:start="21:17" pos:end="21:17">&lt;</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:23"><block_content pos:start="23:13" pos:end="23:23">

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:33"><expr pos:start="29:5" pos:end="29:32"><call pos:start="29:5" pos:end="29:32"><name pos:start="29:5" pos:end="29:18">qemu_get_be32s</name><argument_list pos:start="29:19" pos:end="29:32">(<argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">f</name></expr></argument>, <argument pos:start="29:23" pos:end="29:31"><expr pos:start="29:23" pos:end="29:31"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:31"><name pos:start="29:24" pos:end="29:24">s</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:31">latch</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:33"><expr pos:start="31:5" pos:end="31:32"><call pos:start="31:5" pos:end="31:32"><name pos:start="31:5" pos:end="31:15">qemu_get_8s</name><argument_list pos:start="31:16" pos:end="31:32">(<argument pos:start="31:17" pos:end="31:17"><expr pos:start="31:17" pos:end="31:17"><name pos:start="31:17" pos:end="31:17">f</name></expr></argument>, <argument pos:start="31:20" pos:end="31:31"><expr pos:start="31:20" pos:end="31:31"><operator pos:start="31:20" pos:end="31:20">&amp;</operator><name pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:31">sr_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:35"><expr pos:start="33:5" pos:end="33:34"><call pos:start="33:5" pos:end="33:34"><name pos:start="33:5" pos:end="33:19">qemu_get_buffer</name><argument_list pos:start="33:20" pos:end="33:34">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">f</name></expr></argument>, <argument pos:start="33:24" pos:end="33:28"><expr pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:28"><name pos:start="33:24" pos:end="33:24">s</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:28">sr</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><literal type="number" pos:start="33:31" pos:end="33:33">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:15">qemu_get_8s</name><argument_list pos:start="35:16" pos:end="35:32">(<argument pos:start="35:17" pos:end="35:17"><expr pos:start="35:17" pos:end="35:17"><name pos:start="35:17" pos:end="35:17">f</name></expr></argument>, <argument pos:start="35:20" pos:end="35:31"><expr pos:start="35:20" pos:end="35:31"><operator pos:start="35:20" pos:end="35:20">&amp;</operator><name pos:start="35:21" pos:end="35:31"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:31">gr_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><call pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:15">qemu_get_8s</name><argument_list pos:start="37:16" pos:end="37:41">(<argument pos:start="37:17" pos:end="37:17"><expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">f</name></expr></argument>, <argument pos:start="37:20" pos:end="37:40"><expr pos:start="37:20" pos:end="37:40"><operator pos:start="37:20" pos:end="37:20">&amp;</operator><name pos:start="37:21" pos:end="37:40"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:40">cirrus_shadow_gr0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:42"><expr pos:start="39:5" pos:end="39:41"><call pos:start="39:5" pos:end="39:41"><name pos:start="39:5" pos:end="39:15">qemu_get_8s</name><argument_list pos:start="39:16" pos:end="39:41">(<argument pos:start="39:17" pos:end="39:17"><expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">f</name></expr></argument>, <argument pos:start="39:20" pos:end="39:40"><expr pos:start="39:20" pos:end="39:40"><operator pos:start="39:20" pos:end="39:20">&amp;</operator><name pos:start="39:21" pos:end="39:40"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:40">cirrus_shadow_gr1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:46"><expr pos:start="41:5" pos:end="41:45"><name pos:start="41:5" pos:end="41:15"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:9">gr</name><index pos:start="41:10" pos:end="41:15">[<expr pos:start="41:11" pos:end="41:14"><literal type="number" pos:start="41:11" pos:end="41:14">0x00</literal></expr>]</index></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:38"><name pos:start="41:19" pos:end="41:19">s</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:38">cirrus_shadow_gr0</name></name> <operator pos:start="41:40" pos:end="41:40">&amp;</operator> <literal type="number" pos:start="41:42" pos:end="41:45">0x0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:9">gr</name><index pos:start="43:10" pos:end="43:15">[<expr pos:start="43:11" pos:end="43:14"><literal type="number" pos:start="43:11" pos:end="43:14">0x01</literal></expr>]</index></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:38"><name pos:start="43:19" pos:end="43:19">s</name><operator pos:start="43:20" pos:end="43:21">-&gt;</operator><name pos:start="43:22" pos:end="43:38">cirrus_shadow_gr1</name></name> <operator pos:start="43:40" pos:end="43:40">&amp;</operator> <literal type="number" pos:start="43:42" pos:end="43:45">0x0f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><call pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:19">qemu_get_buffer</name><argument_list pos:start="45:20" pos:end="45:38">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">f</name></expr></argument>, <argument pos:start="45:24" pos:end="45:32"><expr pos:start="45:24" pos:end="45:32"><name pos:start="45:24" pos:end="45:28"><name pos:start="45:24" pos:end="45:24">s</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:28">gr</name></name> <operator pos:start="45:30" pos:end="45:30">+</operator> <literal type="number" pos:start="45:32" pos:end="45:32">2</literal></expr></argument>, <argument pos:start="45:35" pos:end="45:37"><expr pos:start="45:35" pos:end="45:37"><literal type="number" pos:start="45:35" pos:end="45:37">254</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:33"><expr pos:start="47:5" pos:end="47:32"><call pos:start="47:5" pos:end="47:32"><name pos:start="47:5" pos:end="47:15">qemu_get_8s</name><argument_list pos:start="47:16" pos:end="47:32">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">f</name></expr></argument>, <argument pos:start="47:20" pos:end="47:31"><expr pos:start="47:20" pos:end="47:31"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:31">ar_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><call pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:19">qemu_get_buffer</name><argument_list pos:start="49:20" pos:end="49:33">(<argument pos:start="49:21" pos:end="49:21"><expr pos:start="49:21" pos:end="49:21"><name pos:start="49:21" pos:end="49:21">f</name></expr></argument>, <argument pos:start="49:24" pos:end="49:28"><expr pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:28"><name pos:start="49:24" pos:end="49:24">s</name><operator pos:start="49:25" pos:end="49:26">-&gt;</operator><name pos:start="49:27" pos:end="49:28">ar</name></name></expr></argument>, <argument pos:start="49:31" pos:end="49:32"><expr pos:start="49:31" pos:end="49:32"><literal type="number" pos:start="49:31" pos:end="49:32">21</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:37"><expr pos:start="51:5" pos:end="51:36"><name pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:19">ar_flip_flop</name></name><operator pos:start="51:20" pos:end="51:20">=</operator><call pos:start="51:21" pos:end="51:36"><name pos:start="51:21" pos:end="51:33">qemu_get_be32</name><argument_list pos:start="51:34" pos:end="51:36">(<argument pos:start="51:35" pos:end="51:35"><expr pos:start="51:35" pos:end="51:35"><name pos:start="51:35" pos:end="51:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><call pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:15">qemu_get_8s</name><argument_list pos:start="53:16" pos:end="53:32">(<argument pos:start="53:17" pos:end="53:17"><expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">f</name></expr></argument>, <argument pos:start="53:20" pos:end="53:31"><expr pos:start="53:20" pos:end="53:31"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:31"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:31">cr_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><call pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:19">qemu_get_buffer</name><argument_list pos:start="55:20" pos:end="55:34">(<argument pos:start="55:21" pos:end="55:21"><expr pos:start="55:21" pos:end="55:21"><name pos:start="55:21" pos:end="55:21">f</name></expr></argument>, <argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:24">s</name><operator pos:start="55:25" pos:end="55:26">-&gt;</operator><name pos:start="55:27" pos:end="55:28">cr</name></name></expr></argument>, <argument pos:start="55:31" pos:end="55:33"><expr pos:start="55:31" pos:end="55:33"><literal type="number" pos:start="55:31" pos:end="55:33">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:28"><expr pos:start="57:5" pos:end="57:27"><call pos:start="57:5" pos:end="57:27"><name pos:start="57:5" pos:end="57:15">qemu_get_8s</name><argument_list pos:start="57:16" pos:end="57:27">(<argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">f</name></expr></argument>, <argument pos:start="57:20" pos:end="57:26"><expr pos:start="57:20" pos:end="57:26"><operator pos:start="57:20" pos:end="57:20">&amp;</operator><name pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">msr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><call pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:15">qemu_get_8s</name><argument_list pos:start="59:16" pos:end="59:27">(<argument pos:start="59:17" pos:end="59:17"><expr pos:start="59:17" pos:end="59:17"><name pos:start="59:17" pos:end="59:17">f</name></expr></argument>, <argument pos:start="59:20" pos:end="59:26"><expr pos:start="59:20" pos:end="59:26"><operator pos:start="59:20" pos:end="59:20">&amp;</operator><name pos:start="59:21" pos:end="59:26"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:26">fcr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:29"><expr pos:start="61:5" pos:end="61:28"><call pos:start="61:5" pos:end="61:28"><name pos:start="61:5" pos:end="61:15">qemu_get_8s</name><argument_list pos:start="61:16" pos:end="61:28">(<argument pos:start="61:17" pos:end="61:17"><expr pos:start="61:17" pos:end="61:17"><name pos:start="61:17" pos:end="61:17">f</name></expr></argument>, <argument pos:start="61:20" pos:end="61:27"><expr pos:start="61:20" pos:end="61:27"><operator pos:start="61:20" pos:end="61:20">&amp;</operator><name pos:start="61:21" pos:end="61:27"><name pos:start="61:21" pos:end="61:21">s</name><operator pos:start="61:22" pos:end="61:23">-&gt;</operator><name pos:start="61:24" pos:end="61:27">st00</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:29"><expr pos:start="63:5" pos:end="63:28"><call pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:15">qemu_get_8s</name><argument_list pos:start="63:16" pos:end="63:28">(<argument pos:start="63:17" pos:end="63:17"><expr pos:start="63:17" pos:end="63:17"><name pos:start="63:17" pos:end="63:17">f</name></expr></argument>, <argument pos:start="63:20" pos:end="63:27"><expr pos:start="63:20" pos:end="63:27"><operator pos:start="63:20" pos:end="63:20">&amp;</operator><name pos:start="63:21" pos:end="63:27"><name pos:start="63:21" pos:end="63:21">s</name><operator pos:start="63:22" pos:end="63:23">-&gt;</operator><name pos:start="63:24" pos:end="63:27">st01</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><call pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:15">qemu_get_8s</name><argument_list pos:start="67:16" pos:end="67:33">(<argument pos:start="67:17" pos:end="67:17"><expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">f</name></expr></argument>, <argument pos:start="67:20" pos:end="67:32"><expr pos:start="67:20" pos:end="67:32"><operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:32"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:32">dac_state</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:38"><expr pos:start="69:5" pos:end="69:37"><call pos:start="69:5" pos:end="69:37"><name pos:start="69:5" pos:end="69:15">qemu_get_8s</name><argument_list pos:start="69:16" pos:end="69:37">(<argument pos:start="69:17" pos:end="69:17"><expr pos:start="69:17" pos:end="69:17"><name pos:start="69:17" pos:end="69:17">f</name></expr></argument>, <argument pos:start="69:20" pos:end="69:36"><expr pos:start="69:20" pos:end="69:36"><operator pos:start="69:20" pos:end="69:20">&amp;</operator><name pos:start="69:21" pos:end="69:36"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:36">dac_sub_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:39"><expr pos:start="71:5" pos:end="71:38"><call pos:start="71:5" pos:end="71:38"><name pos:start="71:5" pos:end="71:15">qemu_get_8s</name><argument_list pos:start="71:16" pos:end="71:38">(<argument pos:start="71:17" pos:end="71:17"><expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">f</name></expr></argument>, <argument pos:start="71:20" pos:end="71:37"><expr pos:start="71:20" pos:end="71:37"><operator pos:start="71:20" pos:end="71:20">&amp;</operator><name pos:start="71:21" pos:end="71:37"><name pos:start="71:21" pos:end="71:21">s</name><operator pos:start="71:22" pos:end="71:23">-&gt;</operator><name pos:start="71:24" pos:end="71:37">dac_read_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:40"><expr pos:start="73:5" pos:end="73:39"><call pos:start="73:5" pos:end="73:39"><name pos:start="73:5" pos:end="73:15">qemu_get_8s</name><argument_list pos:start="73:16" pos:end="73:39">(<argument pos:start="73:17" pos:end="73:17"><expr pos:start="73:17" pos:end="73:17"><name pos:start="73:17" pos:end="73:17">f</name></expr></argument>, <argument pos:start="73:20" pos:end="73:38"><expr pos:start="73:20" pos:end="73:38"><operator pos:start="73:20" pos:end="73:20">&amp;</operator><name pos:start="73:21" pos:end="73:38"><name pos:start="73:21" pos:end="73:21">s</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:38">dac_write_index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:40"><expr pos:start="75:5" pos:end="75:39"><call pos:start="75:5" pos:end="75:39"><name pos:start="75:5" pos:end="75:19">qemu_get_buffer</name><argument_list pos:start="75:20" pos:end="75:39">(<argument pos:start="75:21" pos:end="75:21"><expr pos:start="75:21" pos:end="75:21"><name pos:start="75:21" pos:end="75:21">f</name></expr></argument>, <argument pos:start="75:24" pos:end="75:35"><expr pos:start="75:24" pos:end="75:35"><name pos:start="75:24" pos:end="75:35"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:35">dac_cache</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:38"><expr pos:start="75:38" pos:end="75:38"><literal type="number" pos:start="75:38" pos:end="75:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:40"><expr pos:start="77:5" pos:end="77:39"><call pos:start="77:5" pos:end="77:39"><name pos:start="77:5" pos:end="77:19">qemu_get_buffer</name><argument_list pos:start="77:20" pos:end="77:39">(<argument pos:start="77:21" pos:end="77:21"><expr pos:start="77:21" pos:end="77:21"><name pos:start="77:21" pos:end="77:21">f</name></expr></argument>, <argument pos:start="77:24" pos:end="77:33"><expr pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:33"><name pos:start="77:24" pos:end="77:24">s</name><operator pos:start="77:25" pos:end="77:26">-&gt;</operator><name pos:start="77:27" pos:end="77:33">palette</name></name></expr></argument>, <argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><literal type="number" pos:start="77:36" pos:end="77:38">768</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:36"><expr pos:start="81:5" pos:end="81:35"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:18">bank_offset</name></name><operator pos:start="81:19" pos:end="81:19">=</operator><call pos:start="81:20" pos:end="81:35"><name pos:start="81:20" pos:end="81:32">qemu_get_be32</name><argument_list pos:start="81:33" pos:end="81:35">(<argument pos:start="81:34" pos:end="81:34"><expr pos:start="81:34" pos:end="81:34"><name pos:start="81:34" pos:end="81:34">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:52"><expr pos:start="85:5" pos:end="85:51"><call pos:start="85:5" pos:end="85:51"><name pos:start="85:5" pos:end="85:15">qemu_get_8s</name><argument_list pos:start="85:16" pos:end="85:51">(<argument pos:start="85:17" pos:end="85:17"><expr pos:start="85:17" pos:end="85:17"><name pos:start="85:17" pos:end="85:17">f</name></expr></argument>, <argument pos:start="85:20" pos:end="85:50"><expr pos:start="85:20" pos:end="85:50"><operator pos:start="85:20" pos:end="85:20">&amp;</operator><name pos:start="85:21" pos:end="85:50"><name pos:start="85:21" pos:end="85:21">s</name><operator pos:start="85:22" pos:end="85:23">-&gt;</operator><name pos:start="85:24" pos:end="85:50">cirrus_hidden_dac_lockindex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><call pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:15">qemu_get_8s</name><argument_list pos:start="87:16" pos:end="87:46">(<argument pos:start="87:17" pos:end="87:17"><expr pos:start="87:17" pos:end="87:17"><name pos:start="87:17" pos:end="87:17">f</name></expr></argument>, <argument pos:start="87:20" pos:end="87:45"><expr pos:start="87:20" pos:end="87:45"><operator pos:start="87:20" pos:end="87:20">&amp;</operator><name pos:start="87:21" pos:end="87:45"><name pos:start="87:21" pos:end="87:21">s</name><operator pos:start="87:22" pos:end="87:23">-&gt;</operator><name pos:start="87:24" pos:end="87:45">cirrus_hidden_dac_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><call pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:18">qemu_get_be32s</name><argument_list pos:start="91:19" pos:end="91:38">(<argument pos:start="91:20" pos:end="91:20"><expr pos:start="91:20" pos:end="91:20"><name pos:start="91:20" pos:end="91:20">f</name></expr></argument>, <argument pos:start="91:23" pos:end="91:37"><expr pos:start="91:23" pos:end="91:37"><operator pos:start="91:23" pos:end="91:23">&amp;</operator><name pos:start="91:24" pos:end="91:37"><name pos:start="91:24" pos:end="91:24">s</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:37">hw_cursor_x</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:39"><expr pos:start="93:5" pos:end="93:38"><call pos:start="93:5" pos:end="93:38"><name pos:start="93:5" pos:end="93:18">qemu_get_be32s</name><argument_list pos:start="93:19" pos:end="93:38">(<argument pos:start="93:20" pos:end="93:20"><expr pos:start="93:20" pos:end="93:20"><name pos:start="93:20" pos:end="93:20">f</name></expr></argument>, <argument pos:start="93:23" pos:end="93:37"><expr pos:start="93:23" pos:end="93:37"><operator pos:start="93:23" pos:end="93:23">&amp;</operator><name pos:start="93:24" pos:end="93:37"><name pos:start="93:24" pos:end="93:24">s</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:37">hw_cursor_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:35"><expr pos:start="97:5" pos:end="97:34"><call pos:start="97:5" pos:end="97:34"><name pos:start="97:5" pos:end="97:31">cirrus_update_memory_access</name><argument_list pos:start="97:32" pos:end="97:34">(<argument pos:start="97:33" pos:end="97:33"><expr pos:start="97:33" pos:end="97:33"><name pos:start="97:33" pos:end="97:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="99:5" pos:end="99:23">/* force refresh */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:25"><expr pos:start="101:5" pos:end="101:24"><name pos:start="101:5" pos:end="101:19"><name pos:start="101:5" pos:end="101:5">s</name><operator pos:start="101:6" pos:end="101:7">-&gt;</operator><name pos:start="101:8" pos:end="101:19">graphic_mode</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <operator pos:start="101:23" pos:end="101:23">-</operator><literal type="number" pos:start="101:24" pos:end="101:24">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:33"><expr pos:start="103:5" pos:end="103:32"><call pos:start="103:5" pos:end="103:32"><name pos:start="103:5" pos:end="103:26">cirrus_update_bank_ptr</name><argument_list pos:start="103:27" pos:end="103:32">(<argument pos:start="103:28" pos:end="103:28"><expr pos:start="103:28" pos:end="103:28"><name pos:start="103:28" pos:end="103:28">s</name></expr></argument>, <argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:33"><expr pos:start="105:5" pos:end="105:32"><call pos:start="105:5" pos:end="105:32"><name pos:start="105:5" pos:end="105:26">cirrus_update_bank_ptr</name><argument_list pos:start="105:27" pos:end="105:32">(<argument pos:start="105:28" pos:end="105:28"><expr pos:start="105:28" pos:end="105:28"><name pos:start="105:28" pos:end="105:28">s</name></expr></argument>, <argument pos:start="105:31" pos:end="105:31"><expr pos:start="105:31" pos:end="105:31"><literal type="number" pos:start="105:31" pos:end="105:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:13">return <expr pos:start="107:12" pos:end="107:12"><literal type="number" pos:start="107:12" pos:end="107:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
