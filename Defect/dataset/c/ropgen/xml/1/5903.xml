<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5903.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">transcode_video</name><parameter_list pos:start="1:27" pos:end="1:112">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:43"><name pos:start="1:28" pos:end="1:38">InputStream</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">ist</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">AVPacket</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">pkt</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:75"><decl pos:start="1:61" pos:end="1:75"><type pos:start="1:61" pos:end="1:75"><name pos:start="1:61" pos:end="1:63">int</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:75">got_output</name></decl></parameter>, <parameter pos:start="1:78" pos:end="1:93"><decl pos:start="1:78" pos:end="1:93"><type pos:start="1:78" pos:end="1:93"><name pos:start="1:78" pos:end="1:84">int64_t</name> <modifier pos:start="1:86" pos:end="1:86">*</modifier></type><name pos:start="1:87" pos:end="1:93">pkt_pts</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:111"><decl pos:start="1:96" pos:end="1:111"><type pos:start="1:96" pos:end="1:111"><name pos:start="1:96" pos:end="1:102">int64_t</name> <modifier pos:start="1:104" pos:end="1:104">*</modifier></type><name pos:start="1:105" pos:end="1:111">pkt_dts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:15">

    <decl_stmt pos:start="5:5" pos:end="5:51"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVFrame</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:26">decoded_frame</name></decl>, <decl pos:start="5:29" pos:end="5:50"><type ref="prev" pos:start="5:5" pos:end="5:13"><modifier pos:start="5:29" pos:end="5:29">*</modifier></type><name pos:start="5:30" pos:end="5:43">filtered_frame</name> <init pos:start="5:45" pos:end="5:50">= <expr pos:start="5:47" pos:end="5:50"><name pos:start="5:47" pos:end="5:50">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:24">buffer_to_free</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">ret</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:17">quality</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="13:1" pos:end="13:19">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="18:0"><decl pos:start="15:5" pos:end="15:27"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:23">frame_available</name> <init pos:start="15:25" pos:end="15:27">= <expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">1</literal></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:16">duration</name><init pos:start="19:17" pos:end="19:18">=<expr pos:start="19:18" pos:end="19:18"><literal type="number" pos:start="19:18" pos:end="19:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:35"><decl pos:start="21:5" pos:end="21:34"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int64_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:34">best_effort_timestamp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:36"><decl pos:start="23:5" pos:end="23:35"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:14">AVRational</name> <modifier pos:start="23:16" pos:end="23:16">*</modifier></type><name pos:start="23:17" pos:end="23:35">frame_sample_aspect</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="33:55"><if pos:start="27:5" pos:end="29:31">if <condition pos:start="27:8" pos:end="27:77">(<expr pos:start="27:9" pos:end="27:76"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:12">ist</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:27">decoded_frame</name></name> <operator pos:start="27:29" pos:end="27:30">&amp;&amp;</operator> <operator pos:start="27:32" pos:end="27:32">!</operator><operator pos:start="27:33" pos:end="27:33">(</operator><name pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:36">ist</name><operator pos:start="27:37" pos:end="27:38">-&gt;</operator><name pos:start="27:39" pos:end="27:51">decoded_frame</name></name> <operator pos:start="27:53" pos:end="27:53">=</operator> <call pos:start="27:55" pos:end="27:75"><name pos:start="27:55" pos:end="27:73">avcodec_alloc_frame</name><argument_list pos:start="27:74" pos:end="27:75">()</argument_list></call><operator pos:start="27:76" pos:end="27:76">)</operator></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:31"><block_content pos:start="29:9" pos:end="29:31">

        <return pos:start="29:9" pos:end="29:31">return <expr pos:start="29:16" pos:end="29:30"><call pos:start="29:16" pos:end="29:30"><name pos:start="29:16" pos:end="29:22">AVERROR</name><argument_list pos:start="29:23" pos:end="29:30">(<argument pos:start="29:24" pos:end="29:29"><expr pos:start="29:24" pos:end="29:29"><name pos:start="29:24" pos:end="29:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if>

    <else pos:start="31:5" pos:end="33:55">else<block type="pseudo" pos:start="33:9" pos:end="33:55"><block_content pos:start="33:9" pos:end="33:55">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:34">avcodec_get_frame_defaults</name><argument_list pos:start="33:35" pos:end="33:54">(<argument pos:start="33:36" pos:end="33:53"><expr pos:start="33:36" pos:end="33:53"><name pos:start="33:36" pos:end="33:53"><name pos:start="33:36" pos:end="33:38">ist</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:53">decoded_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:39"><expr pos:start="35:5" pos:end="35:38"><name pos:start="35:5" pos:end="35:17">decoded_frame</name> <operator pos:start="35:19" pos:end="35:19">=</operator> <name pos:start="35:21" pos:end="35:38"><name pos:start="35:21" pos:end="35:23">ist</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:38">decoded_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:25"><expr pos:start="37:5" pos:end="37:24"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:7">pkt</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:12">pts</name></name>  <operator pos:start="37:15" pos:end="37:15">=</operator> <operator pos:start="37:17" pos:end="37:17">*</operator><name pos:start="37:18" pos:end="37:24">pkt_pts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:12"><name pos:start="39:5" pos:end="39:7">pkt</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:12">dts</name></name>  <operator pos:start="39:15" pos:end="39:15">=</operator> <operator pos:start="39:17" pos:end="39:17">*</operator><name pos:start="39:18" pos:end="39:24">pkt_dts</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:12">pkt_pts</name>  <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:30">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:22">(<expr pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:21"><name pos:start="45:9" pos:end="45:11">pkt</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:21">duration</name></name></expr>)</condition> <block pos:start="45:24" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:83">

        <expr_stmt pos:start="47:9" pos:end="47:83"><expr pos:start="47:9" pos:end="47:82"><name pos:start="47:9" pos:end="47:16">duration</name> <operator pos:start="47:18" pos:end="47:18">=</operator> <call pos:start="47:20" pos:end="47:82"><name pos:start="47:20" pos:end="47:31">av_rescale_q</name><argument_list pos:start="47:32" pos:end="47:82">(<argument pos:start="47:33" pos:end="47:45"><expr pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:45"><name pos:start="47:33" pos:end="47:35">pkt</name><operator pos:start="47:36" pos:end="47:37">-&gt;</operator><name pos:start="47:38" pos:end="47:45">duration</name></name></expr></argument>, <argument pos:start="47:48" pos:end="47:65"><expr pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:65"><name pos:start="47:48" pos:end="47:50">ist</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:54">st</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:65">time_base</name></name></expr></argument>, <argument pos:start="47:68" pos:end="47:81"><expr pos:start="47:68" pos:end="47:81"><name pos:start="47:68" pos:end="47:81">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="59:5">else if<condition pos:start="49:14" pos:end="49:49">(<expr pos:start="49:15" pos:end="49:48"><name pos:start="49:15" pos:end="49:43"><name pos:start="49:15" pos:end="49:17">ist</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:21">st</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">codec</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:39">time_base</name><operator pos:start="49:40" pos:end="49:40">.</operator><name pos:start="49:41" pos:end="49:43">num</name></name> <operator pos:start="49:45" pos:end="49:46">!=</operator> <literal type="number" pos:start="49:48" pos:end="49:48">0</literal></expr>)</condition> <block pos:start="49:51" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:56">

        <decl_stmt pos:start="51:9" pos:end="51:102"><decl pos:start="51:9" pos:end="51:101"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:17">ticks</name><init pos:start="51:18" pos:end="51:101">= <expr pos:start="51:20" pos:end="51:101"><ternary pos:start="51:20" pos:end="51:101"><condition pos:start="51:20" pos:end="51:36"><expr pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:34"><name pos:start="51:20" pos:end="51:22">ist</name><operator pos:start="51:23" pos:end="51:24">-&gt;</operator><name pos:start="51:25" pos:end="51:26">st</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:34">parser</name></name></expr> ?</condition><then pos:start="51:38" pos:end="51:67"> <expr pos:start="51:38" pos:end="51:67"><name pos:start="51:38" pos:end="51:65"><name pos:start="51:38" pos:end="51:40">ist</name><operator pos:start="51:41" pos:end="51:42">-&gt;</operator><name pos:start="51:43" pos:end="51:44">st</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:52">parser</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:65">repeat_pict</name></name><operator pos:start="51:66" pos:end="51:66">+</operator><literal type="number" pos:start="51:67" pos:end="51:67">1</literal></expr> </then><else pos:start="51:69" pos:end="51:101">: <expr pos:start="51:71" pos:end="51:101"><name pos:start="51:71" pos:end="51:101"><name pos:start="51:71" pos:end="51:73">ist</name><operator pos:start="51:74" pos:end="51:75">-&gt;</operator><name pos:start="51:76" pos:end="51:77">st</name><operator pos:start="51:78" pos:end="51:79">-&gt;</operator><name pos:start="51:80" pos:end="51:84">codec</name><operator pos:start="51:85" pos:end="51:86">-&gt;</operator><name pos:start="51:87" pos:end="51:101">ticks_per_frame</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="53:9" pos:end="57:56"><expr pos:start="53:9" pos:end="57:55"><name pos:start="53:9" pos:end="53:16">duration</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">(</operator><operator pos:start="53:21" pos:end="53:21">(</operator><name pos:start="53:22" pos:end="53:28">int64_t</name><operator pos:start="53:29" pos:end="53:29">)</operator><name pos:start="53:30" pos:end="53:41">AV_TIME_BASE</name> <operator pos:start="53:43" pos:end="53:43">*</operator>

                          <name pos:start="55:27" pos:end="55:55"><name pos:start="55:27" pos:end="55:29">ist</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:33">st</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:40">codec</name><operator pos:start="55:41" pos:end="55:42">-&gt;</operator><name pos:start="55:43" pos:end="55:51">time_base</name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:55">num</name></name> <operator pos:start="55:57" pos:end="55:57">*</operator> <name pos:start="55:59" pos:end="55:63">ticks</name><operator pos:start="55:64" pos:end="55:64">)</operator> <operator pos:start="55:66" pos:end="55:66">/</operator>

                          <name pos:start="57:27" pos:end="57:55"><name pos:start="57:27" pos:end="57:29">ist</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:33">st</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:40">codec</name><operator pos:start="57:41" pos:end="57:42">-&gt;</operator><name pos:start="57:43" pos:end="57:51">time_base</name><operator pos:start="57:52" pos:end="57:52">.</operator><name pos:start="57:53" pos:end="57:55">den</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="63:5" pos:end="69:34"><if pos:start="63:5" pos:end="67:5">if<condition pos:start="63:7" pos:end="63:46">(<expr pos:start="63:8" pos:end="63:45"><operator pos:start="63:8" pos:end="63:8">*</operator><name pos:start="63:9" pos:end="63:15">pkt_dts</name> <operator pos:start="63:17" pos:end="63:18">!=</operator> <name pos:start="63:20" pos:end="63:33">AV_NOPTS_VALUE</name> <operator pos:start="63:35" pos:end="63:36">&amp;&amp;</operator> <name pos:start="63:38" pos:end="63:45">duration</name></expr>)</condition> <block pos:start="63:48" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:29">

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><operator pos:start="65:9" pos:end="65:9">*</operator><name pos:start="65:10" pos:end="65:16">pkt_dts</name> <operator pos:start="65:18" pos:end="65:19">+=</operator> <name pos:start="65:21" pos:end="65:28">duration</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="67:6" pos:end="69:34">else<block type="pseudo" pos:start="69:9" pos:end="69:34"><block_content pos:start="69:9" pos:end="69:34">

        <expr_stmt pos:start="69:9" pos:end="69:34"><expr pos:start="69:9" pos:end="69:33"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:16">pkt_dts</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <name pos:start="69:20" pos:end="69:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="75:64"><expr pos:start="73:5" pos:end="75:63"><name pos:start="73:5" pos:end="73:7">ret</name> <operator pos:start="73:9" pos:end="73:9">=</operator> <call pos:start="73:11" pos:end="75:63"><name pos:start="73:11" pos:end="73:31">avcodec_decode_video2</name><argument_list pos:start="73:32" pos:end="75:63">(<argument pos:start="73:33" pos:end="73:46"><expr pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:35">ist</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:39">st</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:46">codec</name></name></expr></argument>,

                                <argument pos:start="75:33" pos:end="75:45"><expr pos:start="75:33" pos:end="75:45"><name pos:start="75:33" pos:end="75:45">decoded_frame</name></expr></argument>, <argument pos:start="75:48" pos:end="75:57"><expr pos:start="75:48" pos:end="75:57"><name pos:start="75:48" pos:end="75:57">got_output</name></expr></argument>, <argument pos:start="75:60" pos:end="75:62"><expr pos:start="75:60" pos:end="75:62"><name pos:start="75:60" pos:end="75:62">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:16">(<expr pos:start="77:9" pos:end="77:15"><name pos:start="77:9" pos:end="77:11">ret</name> <operator pos:start="77:13" pos:end="77:13">&lt;</operator> <literal type="number" pos:start="77:15" pos:end="77:15">0</literal></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <return pos:start="79:9" pos:end="79:19">return <expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:11">quality</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <ternary pos:start="83:15" pos:end="83:53"><condition pos:start="83:15" pos:end="83:26"><expr pos:start="83:15" pos:end="83:24"><name pos:start="83:15" pos:end="83:24">same_quant</name></expr> ?</condition><then pos:start="83:28" pos:end="83:49"> <expr pos:start="83:28" pos:end="83:49"><name pos:start="83:28" pos:end="83:49"><name pos:start="83:28" pos:end="83:40">decoded_frame</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:49">quality</name></name></expr> </then><else pos:start="83:51" pos:end="83:53">: <expr pos:start="83:53" pos:end="83:53"><literal type="number" pos:start="83:53" pos:end="83:53">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:21">(<expr pos:start="85:9" pos:end="85:20"><operator pos:start="85:9" pos:end="85:9">!</operator><operator pos:start="85:10" pos:end="85:10">*</operator><name pos:start="85:11" pos:end="85:20">got_output</name></expr>)</condition> <block pos:start="85:23" pos:end="91:5">{<block_content pos:start="89:9" pos:end="89:19">

        <comment type="block" pos:start="87:9" pos:end="87:28">/* no picture yet */</comment>

        <return pos:start="89:9" pos:end="89:19">return <expr pos:start="89:16" pos:end="89:18"><name pos:start="89:16" pos:end="89:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:105"><expr pos:start="95:5" pos:end="95:104"><name pos:start="95:5" pos:end="95:25">best_effort_timestamp</name><operator pos:start="95:26" pos:end="95:26">=</operator> <call pos:start="95:28" pos:end="95:104"><name pos:start="95:28" pos:end="95:37">av_opt_ptr</name><argument_list pos:start="95:38" pos:end="95:104">(<argument pos:start="95:39" pos:end="95:63"><expr pos:start="95:39" pos:end="95:63"><call pos:start="95:39" pos:end="95:63"><name pos:start="95:39" pos:end="95:61">avcodec_get_frame_class</name><argument_list pos:start="95:62" pos:end="95:63">()</argument_list></call></expr></argument>, <argument pos:start="95:66" pos:end="95:78"><expr pos:start="95:66" pos:end="95:78"><name pos:start="95:66" pos:end="95:78">decoded_frame</name></expr></argument>, <argument pos:start="95:81" pos:end="95:103"><expr pos:start="95:81" pos:end="95:103"><literal type="string" pos:start="95:81" pos:end="95:103">"best_effort_timestamp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:58"><if pos:start="97:5" pos:end="99:58">if<condition pos:start="97:7" pos:end="97:48">(<expr pos:start="97:8" pos:end="97:47"><operator pos:start="97:8" pos:end="97:8">*</operator><name pos:start="97:9" pos:end="97:29">best_effort_timestamp</name> <operator pos:start="97:31" pos:end="97:32">!=</operator> <name pos:start="97:34" pos:end="97:47">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:58"><block_content pos:start="99:9" pos:end="99:58">

        <expr_stmt pos:start="99:9" pos:end="99:58"><expr pos:start="99:9" pos:end="99:57"><name pos:start="99:9" pos:end="99:21"><name pos:start="99:9" pos:end="99:11">ist</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:21">next_pts</name></name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:32"><name pos:start="99:25" pos:end="99:27">ist</name><operator pos:start="99:28" pos:end="99:29">-&gt;</operator><name pos:start="99:30" pos:end="99:32">pts</name></name> <operator pos:start="99:34" pos:end="99:34">=</operator> <operator pos:start="99:36" pos:end="99:36">*</operator><name pos:start="99:37" pos:end="99:57">best_effort_timestamp</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:30"><expr pos:start="103:5" pos:end="103:29"><name pos:start="103:5" pos:end="103:17"><name pos:start="103:5" pos:end="103:7">ist</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:17">next_pts</name></name> <operator pos:start="103:19" pos:end="103:20">+=</operator> <name pos:start="103:22" pos:end="103:29">duration</name></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:18"><expr pos:start="105:5" pos:end="105:17"><name pos:start="105:5" pos:end="105:13"><name pos:start="105:5" pos:end="105:7">pkt</name><operator pos:start="105:8" pos:end="105:9">-&gt;</operator><name pos:start="105:10" pos:end="105:13">size</name></name> <operator pos:start="105:15" pos:end="105:15">=</operator> <literal type="number" pos:start="105:17" pos:end="105:17">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="114:0"><expr pos:start="109:5" pos:end="109:77"><call pos:start="109:5" pos:end="109:77"><name pos:start="109:5" pos:end="109:27">pre_process_video_frame</name><argument_list pos:start="109:28" pos:end="109:77">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><name pos:start="109:29" pos:end="109:31">ist</name></expr></argument>, <argument pos:start="109:34" pos:end="109:59"><expr pos:start="109:34" pos:end="109:59"><operator pos:start="109:34" pos:end="109:34">(</operator><name pos:start="109:35" pos:end="109:43">AVPicture</name> <operator pos:start="109:45" pos:end="109:45">*</operator><operator pos:start="109:46" pos:end="109:46">)</operator><name pos:start="109:47" pos:end="109:59">decoded_frame</name></expr></argument>, <argument pos:start="109:62" pos:end="109:76"><expr pos:start="109:62" pos:end="109:76"><operator pos:start="109:62" pos:end="109:62">&amp;</operator><name pos:start="109:63" pos:end="109:76">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="113:1" pos:end="113:19">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:19">CONFIG_AVFILTER</name></expr></cpp:if>

    <expr_stmt pos:start="115:5" pos:end="115:101"><expr pos:start="115:5" pos:end="115:100"><name pos:start="115:5" pos:end="115:23">frame_sample_aspect</name><operator pos:start="115:24" pos:end="115:24">=</operator> <call pos:start="115:26" pos:end="115:100"><name pos:start="115:26" pos:end="115:35">av_opt_ptr</name><argument_list pos:start="115:36" pos:end="115:100">(<argument pos:start="115:37" pos:end="115:61"><expr pos:start="115:37" pos:end="115:61"><call pos:start="115:37" pos:end="115:61"><name pos:start="115:37" pos:end="115:59">avcodec_get_frame_class</name><argument_list pos:start="115:60" pos:end="115:61">()</argument_list></call></expr></argument>, <argument pos:start="115:64" pos:end="115:76"><expr pos:start="115:64" pos:end="115:76"><name pos:start="115:64" pos:end="115:76">decoded_frame</name></expr></argument>, <argument pos:start="115:79" pos:end="115:99"><expr pos:start="115:79" pos:end="115:99"><literal type="string" pos:start="115:79" pos:end="115:99">"sample_aspect_ratio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="117:5" pos:end="138:0">for<control pos:start="117:8" pos:end="117:36">(<init pos:start="117:9" pos:end="117:12"><expr pos:start="117:9" pos:end="117:11"><name pos:start="117:9" pos:end="117:9">i</name><operator pos:start="117:10" pos:end="117:10">=</operator><literal type="number" pos:start="117:11" pos:end="117:11">0</literal></expr>;</init><condition pos:start="117:13" pos:end="117:32"><expr pos:start="117:13" pos:end="117:31"><name pos:start="117:13" pos:end="117:13">i</name><operator pos:start="117:14" pos:end="117:14">&lt;</operator><name pos:start="117:15" pos:end="117:31">nb_output_streams</name></expr>;</condition><incr pos:start="117:33" pos:end="117:35"><expr pos:start="117:33" pos:end="117:35"><name pos:start="117:33" pos:end="117:33">i</name><operator pos:start="117:34" pos:end="117:35">++</operator></expr></incr>)</control> <block pos:start="117:38" pos:end="138:0">{<block_content pos:start="119:9" pos:end="133:9">

        <decl_stmt pos:start="119:9" pos:end="119:53"><decl pos:start="119:9" pos:end="119:52"><type pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:20">OutputStream</name> <modifier pos:start="119:22" pos:end="119:22">*</modifier></type><name pos:start="119:23" pos:end="119:25">ost</name> <init pos:start="119:27" pos:end="119:52">= <expr pos:start="119:29" pos:end="119:52"><name pos:start="119:29" pos:end="119:31">ost</name> <operator pos:start="119:33" pos:end="119:33">=</operator> <operator pos:start="119:35" pos:end="119:35">&amp;</operator><name pos:start="119:36" pos:end="119:52"><name pos:start="119:36" pos:end="119:49">output_streams</name><index pos:start="119:50" pos:end="119:52">[<expr pos:start="119:51" pos:end="119:51"><name pos:start="119:51" pos:end="119:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="121:9" pos:end="133:9"><if pos:start="121:9" pos:end="133:9">if<condition pos:start="121:11" pos:end="121:46">(<expr pos:start="121:12" pos:end="121:45"><call pos:start="121:12" pos:end="121:45"><name pos:start="121:12" pos:end="121:35">check_output_constraints</name><argument_list pos:start="121:36" pos:end="121:45">(<argument pos:start="121:37" pos:end="121:39"><expr pos:start="121:37" pos:end="121:39"><name pos:start="121:37" pos:end="121:39">ist</name></expr></argument>, <argument pos:start="121:42" pos:end="121:44"><expr pos:start="121:42" pos:end="121:44"><name pos:start="121:42" pos:end="121:44">ost</name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="121:47" pos:end="133:9">{<block_content pos:start="123:13" pos:end="131:105">

            <if_stmt pos:start="123:13" pos:end="125:68"><if pos:start="123:13" pos:end="125:68">if <condition pos:start="123:16" pos:end="123:42">(<expr pos:start="123:17" pos:end="123:41"><operator pos:start="123:17" pos:end="123:17">!</operator><name pos:start="123:18" pos:end="123:41"><name pos:start="123:18" pos:end="123:36">frame_sample_aspect</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:41">num</name></name></expr>)</condition><block type="pseudo" pos:start="125:17" pos:end="125:68"><block_content pos:start="125:17" pos:end="125:68">

                <expr_stmt pos:start="125:17" pos:end="125:68"><expr pos:start="125:17" pos:end="125:67"><operator pos:start="125:17" pos:end="125:17">*</operator><name pos:start="125:18" pos:end="125:36">frame_sample_aspect</name> <operator pos:start="125:38" pos:end="125:38">=</operator> <name pos:start="125:40" pos:end="125:67"><name pos:start="125:40" pos:end="125:42">ist</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:46">st</name><operator pos:start="125:47" pos:end="125:48">-&gt;</operator><name pos:start="125:49" pos:end="125:67">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:42"><expr pos:start="127:13" pos:end="127:41"><name pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:25">decoded_frame</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:30">pts</name></name> <operator pos:start="127:32" pos:end="127:32">=</operator> <name pos:start="127:34" pos:end="127:41"><name pos:start="127:34" pos:end="127:36">ist</name><operator pos:start="127:37" pos:end="127:38">-&gt;</operator><name pos:start="127:39" pos:end="127:41">pts</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="131:13" pos:end="131:105"><expr pos:start="131:13" pos:end="131:104"><call pos:start="131:13" pos:end="131:104"><name pos:start="131:13" pos:end="131:36">av_vsrc_buffer_add_frame</name><argument_list pos:start="131:37" pos:end="131:104">(<argument pos:start="131:38" pos:end="131:60"><expr pos:start="131:38" pos:end="131:60"><name pos:start="131:38" pos:end="131:60"><name pos:start="131:38" pos:end="131:40">ost</name><operator pos:start="131:41" pos:end="131:42">-&gt;</operator><name pos:start="131:43" pos:end="131:60">input_video_filter</name></name></expr></argument>, <argument pos:start="131:63" pos:end="131:75"><expr pos:start="131:63" pos:end="131:75"><name pos:start="131:63" pos:end="131:75">decoded_frame</name></expr></argument>, <argument pos:start="131:78" pos:end="131:103"><expr pos:start="131:78" pos:end="131:103"><name pos:start="131:78" pos:end="131:103">AV_VSRC_BUF_FLAG_OVERWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="141:5" pos:end="141:24"><expr pos:start="141:5" pos:end="141:23"><call pos:start="141:5" pos:end="141:23"><name pos:start="141:5" pos:end="141:18">rate_emu_sleep</name><argument_list pos:start="141:19" pos:end="141:23">(<argument pos:start="141:20" pos:end="141:22"><expr pos:start="141:20" pos:end="141:22"><name pos:start="141:20" pos:end="141:22">ist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="145:5" pos:end="237:5">for <control pos:start="145:9" pos:end="145:43">(<init pos:start="145:10" pos:end="145:15"><expr pos:start="145:10" pos:end="145:14"><name pos:start="145:10" pos:end="145:10">i</name> <operator pos:start="145:12" pos:end="145:12">=</operator> <literal type="number" pos:start="145:14" pos:end="145:14">0</literal></expr>;</init> <condition pos:start="145:17" pos:end="145:38"><expr pos:start="145:17" pos:end="145:37"><name pos:start="145:17" pos:end="145:17">i</name> <operator pos:start="145:19" pos:end="145:19">&lt;</operator> <name pos:start="145:21" pos:end="145:37">nb_output_streams</name></expr>;</condition> <incr pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:40">i</name><operator pos:start="145:41" pos:end="145:42">++</operator></expr></incr>)</control> <block pos:start="145:45" pos:end="237:5">{<block_content pos:start="147:9" pos:end="236:0">

        <decl_stmt pos:start="147:9" pos:end="147:47"><decl pos:start="147:9" pos:end="147:46"><type pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:20">OutputStream</name> <modifier pos:start="147:22" pos:end="147:22">*</modifier></type><name pos:start="147:23" pos:end="147:25">ost</name> <init pos:start="147:27" pos:end="147:46">= <expr pos:start="147:29" pos:end="147:46"><operator pos:start="147:29" pos:end="147:29">&amp;</operator><name pos:start="147:30" pos:end="147:46"><name pos:start="147:30" pos:end="147:43">output_streams</name><index pos:start="147:44" pos:end="147:46">[<expr pos:start="147:45" pos:end="147:45"><name pos:start="147:45" pos:end="147:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="149:9" pos:end="149:23"><decl pos:start="149:9" pos:end="149:22"><type pos:start="149:9" pos:end="149:11"><name pos:start="149:9" pos:end="149:11">int</name></type> <name pos:start="149:13" pos:end="149:22">frame_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="153:9" pos:end="160:0"><if pos:start="153:9" pos:end="160:0">if <condition pos:start="153:12" pos:end="153:73">(<expr pos:start="153:13" pos:end="153:72"><operator pos:start="153:13" pos:end="153:13">!</operator><call pos:start="153:14" pos:end="153:47"><name pos:start="153:14" pos:end="153:37">check_output_constraints</name><argument_list pos:start="153:38" pos:end="153:47">(<argument pos:start="153:39" pos:end="153:41"><expr pos:start="153:39" pos:end="153:41"><name pos:start="153:39" pos:end="153:41">ist</name></expr></argument>, <argument pos:start="153:44" pos:end="153:46"><expr pos:start="153:44" pos:end="153:46"><name pos:start="153:44" pos:end="153:46">ost</name></expr></argument>)</argument_list></call> <operator pos:start="153:49" pos:end="153:50">||</operator> <operator pos:start="153:52" pos:end="153:52">!</operator><name pos:start="153:53" pos:end="153:72"><name pos:start="153:53" pos:end="153:55">ost</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:72">encoding_needed</name></name></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="160:0"><block_content pos:start="155:13" pos:end="160:0">

            <continue pos:start="155:13" pos:end="160:0">continue;</continue></block_content></block></if></if_stmt>



<cpp:if pos:start="159:1" pos:end="159:19">#<cpp:directive pos:start="159:2" pos:end="159:3">if</cpp:directive> <expr pos:start="159:5" pos:end="159:19"><name pos:start="159:5" pos:end="159:19">CONFIG_AVFILTER</name></expr></cpp:if>

        <if_stmt pos:start="161:9" pos:end="165:9"><if pos:start="161:9" pos:end="165:9">if <condition pos:start="161:12" pos:end="161:36">(<expr pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:35"><name pos:start="161:13" pos:end="161:15">ost</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:35">input_video_filter</name></name></expr>)</condition> <block pos:start="161:38" pos:end="165:9">{<block_content pos:start="163:13" pos:end="163:81">

            <expr_stmt pos:start="163:13" pos:end="163:81"><expr pos:start="163:13" pos:end="163:80"><name pos:start="163:13" pos:end="163:27">frame_available</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <call pos:start="163:31" pos:end="163:80"><name pos:start="163:31" pos:end="163:54">av_buffersink_poll_frame</name><argument_list pos:start="163:55" pos:end="163:80">(<argument pos:start="163:56" pos:end="163:79"><expr pos:start="163:56" pos:end="163:79"><name pos:start="163:56" pos:end="163:79"><name pos:start="163:56" pos:end="163:58">ost</name><operator pos:start="163:59" pos:end="163:60">-&gt;</operator><name pos:start="163:61" pos:end="163:79">output_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <while pos:start="167:9" pos:end="236:0">while <condition pos:start="167:15" pos:end="167:31">(<expr pos:start="167:16" pos:end="167:30"><name pos:start="167:16" pos:end="167:30">frame_available</name></expr>)</condition> <block pos:start="167:33" pos:end="236:0">{<block_content pos:start="169:13" pos:end="231:47">

            <if_stmt pos:start="169:13" pos:end="203:13"><if pos:start="169:13" pos:end="203:13">if <condition pos:start="169:16" pos:end="169:41">(<expr pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:40"><name pos:start="169:17" pos:end="169:19">ost</name><operator pos:start="169:20" pos:end="169:21">-&gt;</operator><name pos:start="169:22" pos:end="169:40">output_video_filter</name></name></expr>)</condition> <block pos:start="169:43" pos:end="203:13">{<block_content pos:start="171:17" pos:end="201:17">

                <decl_stmt pos:start="171:17" pos:end="171:87"><decl pos:start="171:17" pos:end="171:86"><type pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:26">AVRational</name></type> <name pos:start="171:28" pos:end="171:37">ist_pts_tb</name> <init pos:start="171:39" pos:end="171:86">= <expr pos:start="171:41" pos:end="171:86"><name pos:start="171:41" pos:end="171:75"><name pos:start="171:41" pos:end="171:43">ost</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:64">output_video_filter</name><operator pos:start="171:65" pos:end="171:66">-&gt;</operator><name pos:start="171:67" pos:end="171:72">inputs</name><index pos:start="171:73" pos:end="171:75">[<expr pos:start="171:74" pos:end="171:74"><literal type="number" pos:start="171:74" pos:end="171:74">0</literal></expr>]</index></name><operator pos:start="171:76" pos:end="171:77">-&gt;</operator><name pos:start="171:78" pos:end="171:86">time_base</name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="173:17" pos:end="179:17"><if pos:start="173:17" pos:end="179:17">if <condition pos:start="173:20" pos:end="173:96">(<expr pos:start="173:21" pos:end="173:95"><call pos:start="173:21" pos:end="173:91"><name pos:start="173:21" pos:end="173:48">av_buffersink_get_buffer_ref</name><argument_list pos:start="173:49" pos:end="173:91">(<argument pos:start="173:50" pos:end="173:73"><expr pos:start="173:50" pos:end="173:73"><name pos:start="173:50" pos:end="173:73"><name pos:start="173:50" pos:end="173:52">ost</name><operator pos:start="173:53" pos:end="173:54">-&gt;</operator><name pos:start="173:55" pos:end="173:73">output_video_filter</name></name></expr></argument>, <argument pos:start="173:76" pos:end="173:87"><expr pos:start="173:76" pos:end="173:87"><operator pos:start="173:76" pos:end="173:76">&amp;</operator><name pos:start="173:77" pos:end="173:87"><name pos:start="173:77" pos:end="173:79">ost</name><operator pos:start="173:80" pos:end="173:81">-&gt;</operator><name pos:start="173:82" pos:end="173:87">picref</name></name></expr></argument>, <argument pos:start="173:90" pos:end="173:90"><expr pos:start="173:90" pos:end="173:90"><literal type="number" pos:start="173:90" pos:end="173:90">0</literal></expr></argument>)</argument_list></call> <operator pos:start="173:93" pos:end="173:93">&lt;</operator> <literal type="number" pos:start="173:95" pos:end="173:95">0</literal></expr>)</condition><block pos:start="173:97" pos:end="179:17">{<block_content pos:start="175:21" pos:end="177:30">

                    <expr_stmt pos:start="175:21" pos:end="175:119"><expr pos:start="175:21" pos:end="175:118"><call pos:start="175:21" pos:end="175:118"><name pos:start="175:21" pos:end="175:26">av_log</name><argument_list pos:start="175:27" pos:end="175:118">(<argument pos:start="175:28" pos:end="175:28"><expr pos:start="175:28" pos:end="175:28"><literal type="number" pos:start="175:28" pos:end="175:28">0</literal></expr></argument>, <argument pos:start="175:31" pos:end="175:44"><expr pos:start="175:31" pos:end="175:44"><name pos:start="175:31" pos:end="175:44">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="175:47" pos:end="175:117"><expr pos:start="175:47" pos:end="175:117"><literal type="string" pos:start="175:47" pos:end="175:117">"AV Filter told us it has a frame available but failed to output one\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <goto pos:start="177:21" pos:end="177:30">goto <name pos:start="177:26" pos:end="177:29">cont</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="181:17" pos:end="189:68"><if pos:start="181:17" pos:end="187:17">if <condition pos:start="181:20" pos:end="181:91">(<expr pos:start="181:21" pos:end="181:90"><operator pos:start="181:21" pos:end="181:21">!</operator><name pos:start="181:22" pos:end="181:40"><name pos:start="181:22" pos:end="181:24">ist</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:40">filtered_frame</name></name> <operator pos:start="181:42" pos:end="181:43">&amp;&amp;</operator> <operator pos:start="181:45" pos:end="181:45">!</operator><operator pos:start="181:46" pos:end="181:46">(</operator><name pos:start="181:47" pos:end="181:65"><name pos:start="181:47" pos:end="181:49">ist</name><operator pos:start="181:50" pos:end="181:51">-&gt;</operator><name pos:start="181:52" pos:end="181:65">filtered_frame</name></name> <operator pos:start="181:67" pos:end="181:67">=</operator> <call pos:start="181:69" pos:end="181:89"><name pos:start="181:69" pos:end="181:87">avcodec_alloc_frame</name><argument_list pos:start="181:88" pos:end="181:89">()</argument_list></call><operator pos:start="181:90" pos:end="181:90">)</operator></expr>)</condition> <block pos:start="181:93" pos:end="187:17">{<block_content pos:start="183:21" pos:end="185:43">

                    <expr_stmt pos:start="183:21" pos:end="183:44"><expr pos:start="183:21" pos:end="183:43"><call pos:start="183:21" pos:end="183:43"><name pos:start="183:21" pos:end="183:27">av_free</name><argument_list pos:start="183:28" pos:end="183:43">(<argument pos:start="183:29" pos:end="183:42"><expr pos:start="183:29" pos:end="183:42"><name pos:start="183:29" pos:end="183:42">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="185:21" pos:end="185:43">return <expr pos:start="185:28" pos:end="185:42"><call pos:start="185:28" pos:end="185:42"><name pos:start="185:28" pos:end="185:34">AVERROR</name><argument_list pos:start="185:35" pos:end="185:42">(<argument pos:start="185:36" pos:end="185:41"><expr pos:start="185:36" pos:end="185:41"><name pos:start="185:36" pos:end="185:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if> <else pos:start="187:19" pos:end="189:68">else<block type="pseudo" pos:start="189:21" pos:end="189:68"><block_content pos:start="189:21" pos:end="189:68">

                    <expr_stmt pos:start="189:21" pos:end="189:68"><expr pos:start="189:21" pos:end="189:67"><call pos:start="189:21" pos:end="189:67"><name pos:start="189:21" pos:end="189:46">avcodec_get_frame_defaults</name><argument_list pos:start="189:47" pos:end="189:67">(<argument pos:start="189:48" pos:end="189:66"><expr pos:start="189:48" pos:end="189:66"><name pos:start="189:48" pos:end="189:66"><name pos:start="189:48" pos:end="189:50">ist</name><operator pos:start="189:51" pos:end="189:52">-&gt;</operator><name pos:start="189:53" pos:end="189:66">filtered_frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:53"><expr pos:start="191:17" pos:end="191:52"><name pos:start="191:17" pos:end="191:30">filtered_frame</name> <operator pos:start="191:32" pos:end="191:32">=</operator> <name pos:start="191:34" pos:end="191:52"><name pos:start="191:34" pos:end="191:36">ist</name><operator pos:start="191:37" pos:end="191:38">-&gt;</operator><name pos:start="191:39" pos:end="191:52">filtered_frame</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="193:17" pos:end="193:48"><expr pos:start="193:17" pos:end="193:47"><operator pos:start="193:17" pos:end="193:17">*</operator><name pos:start="193:18" pos:end="193:31">filtered_frame</name><operator pos:start="193:32" pos:end="193:32">=</operator> <operator pos:start="193:34" pos:end="193:34">*</operator><name pos:start="193:35" pos:end="193:47">decoded_frame</name></expr>;</expr_stmt> <comment type="line" pos:start="193:50" pos:end="193:67">//for me_threshold</comment>

                <if_stmt pos:start="195:17" pos:end="201:17"><if pos:start="195:17" pos:end="201:17">if <condition pos:start="195:20" pos:end="195:32">(<expr pos:start="195:21" pos:end="195:31"><name pos:start="195:21" pos:end="195:31"><name pos:start="195:21" pos:end="195:23">ost</name><operator pos:start="195:24" pos:end="195:25">-&gt;</operator><name pos:start="195:26" pos:end="195:31">picref</name></name></expr>)</condition> <block pos:start="195:34" pos:end="201:17">{<block_content pos:start="197:21" pos:end="199:90">

                    <expr_stmt pos:start="197:21" pos:end="197:91"><expr pos:start="197:21" pos:end="197:90"><call pos:start="197:21" pos:end="197:90"><name pos:start="197:21" pos:end="197:61">avfilter_fill_frame_from_video_buffer_ref</name><argument_list pos:start="197:62" pos:end="197:90">(<argument pos:start="197:63" pos:end="197:76"><expr pos:start="197:63" pos:end="197:76"><name pos:start="197:63" pos:end="197:76">filtered_frame</name></expr></argument>, <argument pos:start="197:79" pos:end="197:89"><expr pos:start="197:79" pos:end="197:89"><name pos:start="197:79" pos:end="197:89"><name pos:start="197:79" pos:end="197:81">ost</name><operator pos:start="197:82" pos:end="197:83">-&gt;</operator><name pos:start="197:84" pos:end="197:89">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:90"><expr pos:start="199:21" pos:end="199:89"><name pos:start="199:21" pos:end="199:28"><name pos:start="199:21" pos:end="199:23">ist</name><operator pos:start="199:24" pos:end="199:25">-&gt;</operator><name pos:start="199:26" pos:end="199:28">pts</name></name> <operator pos:start="199:30" pos:end="199:30">=</operator> <call pos:start="199:32" pos:end="199:89"><name pos:start="199:32" pos:end="199:43">av_rescale_q</name><argument_list pos:start="199:44" pos:end="199:89">(<argument pos:start="199:45" pos:end="199:60"><expr pos:start="199:45" pos:end="199:60"><name pos:start="199:45" pos:end="199:60"><name pos:start="199:45" pos:end="199:47">ost</name><operator pos:start="199:48" pos:end="199:49">-&gt;</operator><name pos:start="199:50" pos:end="199:55">picref</name><operator pos:start="199:56" pos:end="199:57">-&gt;</operator><name pos:start="199:58" pos:end="199:60">pts</name></name></expr></argument>, <argument pos:start="199:63" pos:end="199:72"><expr pos:start="199:63" pos:end="199:72"><name pos:start="199:63" pos:end="199:72">ist_pts_tb</name></expr></argument>, <argument pos:start="199:75" pos:end="199:88"><expr pos:start="199:75" pos:end="199:88"><name pos:start="199:75" pos:end="199:88">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="205:13" pos:end="210:0"><if pos:start="205:13" pos:end="210:0">if <condition pos:start="205:16" pos:end="205:63">(<expr pos:start="205:17" pos:end="205:62"><name pos:start="205:17" pos:end="205:34"><name pos:start="205:17" pos:end="205:19">ost</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:27">picref</name><operator pos:start="205:28" pos:end="205:29">-&gt;</operator><name pos:start="205:30" pos:end="205:34">video</name></name> <operator pos:start="205:36" pos:end="205:37">&amp;&amp;</operator> <operator pos:start="205:39" pos:end="205:39">!</operator><name pos:start="205:40" pos:end="205:62"><name pos:start="205:40" pos:end="205:42">ost</name><operator pos:start="205:43" pos:end="205:44">-&gt;</operator><name pos:start="205:45" pos:end="205:62">frame_aspect_ratio</name></name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="210:0"><block_content pos:start="207:17" pos:end="210:0">

                <expr_stmt pos:start="207:17" pos:end="210:0"><expr pos:start="207:17" pos:end="207:93"><name pos:start="207:17" pos:end="207:51"><name pos:start="207:17" pos:end="207:19">ost</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:23">st</name><operator pos:start="207:24" pos:end="207:25">-&gt;</operator><name pos:start="207:26" pos:end="207:30">codec</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:51">sample_aspect_ratio</name></name> <operator pos:start="207:53" pos:end="207:53">=</operator> <name pos:start="207:55" pos:end="207:93"><name pos:start="207:55" pos:end="207:57">ost</name><operator pos:start="207:58" pos:end="207:59">-&gt;</operator><name pos:start="207:60" pos:end="207:65">picref</name><operator pos:start="207:66" pos:end="207:67">-&gt;</operator><name pos:start="207:68" pos:end="207:72">video</name><operator pos:start="207:73" pos:end="207:74">-&gt;</operator><name pos:start="207:75" pos:end="207:93">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:else pos:start="209:1" pos:end="209:5">#<cpp:directive pos:start="209:2" pos:end="209:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="211:13" pos:end="214:0"><expr pos:start="211:13" pos:end="211:42"><name pos:start="211:13" pos:end="211:26">filtered_frame</name> <operator pos:start="211:28" pos:end="211:28">=</operator> <name pos:start="211:30" pos:end="211:42">decoded_frame</name></expr>;</expr_stmt>

<cpp:endif pos:start="213:1" pos:end="213:6">#<cpp:directive pos:start="213:2" pos:end="213:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="217:13" pos:end="219:80"><expr pos:start="217:13" pos:end="219:79"><call pos:start="217:13" pos:end="219:79"><name pos:start="217:13" pos:end="217:24">do_video_out</name><argument_list pos:start="217:25" pos:end="219:79">(<argument pos:start="217:26" pos:end="217:58"><expr pos:start="217:26" pos:end="217:58"><name pos:start="217:26" pos:end="217:54"><name pos:start="217:26" pos:end="217:37">output_files</name><index pos:start="217:38" pos:end="217:54">[<expr pos:start="217:39" pos:end="217:53"><name pos:start="217:39" pos:end="217:53"><name pos:start="217:39" pos:end="217:41">ost</name><operator pos:start="217:42" pos:end="217:43">-&gt;</operator><name pos:start="217:44" pos:end="217:53">file_index</name></name></expr>]</index></name><operator pos:start="217:55" pos:end="217:55">.</operator><name pos:start="217:56" pos:end="217:58">ctx</name></expr></argument>, <argument pos:start="217:61" pos:end="217:63"><expr pos:start="217:61" pos:end="217:63"><name pos:start="217:61" pos:end="217:63">ost</name></expr></argument>, <argument pos:start="217:66" pos:end="217:68"><expr pos:start="217:66" pos:end="217:68"><name pos:start="217:66" pos:end="217:68">ist</name></expr></argument>, <argument pos:start="217:71" pos:end="217:84"><expr pos:start="217:71" pos:end="217:84"><name pos:start="217:71" pos:end="217:84">filtered_frame</name></expr></argument>, <argument pos:start="217:87" pos:end="217:97"><expr pos:start="217:87" pos:end="217:97"><operator pos:start="217:87" pos:end="217:87">&amp;</operator><name pos:start="217:88" pos:end="217:97">frame_size</name></expr></argument>,

                         <argument pos:start="219:26" pos:end="219:78"><expr pos:start="219:26" pos:end="219:78"><ternary pos:start="219:26" pos:end="219:78"><condition pos:start="219:26" pos:end="219:37"><expr pos:start="219:26" pos:end="219:35"><name pos:start="219:26" pos:end="219:35">same_quant</name></expr> ?</condition><then pos:start="219:39" pos:end="219:45"> <expr pos:start="219:39" pos:end="219:45"><name pos:start="219:39" pos:end="219:45">quality</name></expr> </then><else pos:start="219:47" pos:end="219:78">: <expr pos:start="219:49" pos:end="219:78"><name pos:start="219:49" pos:end="219:78"><name pos:start="219:49" pos:end="219:51">ost</name><operator pos:start="219:52" pos:end="219:53">-&gt;</operator><name pos:start="219:54" pos:end="219:55">st</name><operator pos:start="219:56" pos:end="219:57">-&gt;</operator><name pos:start="219:58" pos:end="219:62">codec</name><operator pos:start="219:63" pos:end="219:64">-&gt;</operator><name pos:start="219:65" pos:end="219:78">global_quality</name></name></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="221:13" pos:end="226:0"><if pos:start="221:13" pos:end="226:0">if <condition pos:start="221:16" pos:end="221:46">(<expr pos:start="221:17" pos:end="221:45"><name pos:start="221:17" pos:end="221:31">vstats_filename</name> <operator pos:start="221:33" pos:end="221:34">&amp;&amp;</operator> <name pos:start="221:36" pos:end="221:45">frame_size</name></expr>)</condition><block type="pseudo" pos:start="223:17" pos:end="226:0"><block_content pos:start="223:17" pos:end="226:0">

                <expr_stmt pos:start="223:17" pos:end="226:0"><expr pos:start="223:17" pos:end="223:82"><call pos:start="223:17" pos:end="223:82"><name pos:start="223:17" pos:end="223:30">do_video_stats</name><argument_list pos:start="223:31" pos:end="223:82">(<argument pos:start="223:32" pos:end="223:64"><expr pos:start="223:32" pos:end="223:64"><name pos:start="223:32" pos:end="223:60"><name pos:start="223:32" pos:end="223:43">output_files</name><index pos:start="223:44" pos:end="223:60">[<expr pos:start="223:45" pos:end="223:59"><name pos:start="223:45" pos:end="223:59"><name pos:start="223:45" pos:end="223:47">ost</name><operator pos:start="223:48" pos:end="223:49">-&gt;</operator><name pos:start="223:50" pos:end="223:59">file_index</name></name></expr>]</index></name><operator pos:start="223:61" pos:end="223:61">.</operator><name pos:start="223:62" pos:end="223:64">ctx</name></expr></argument>, <argument pos:start="223:67" pos:end="223:69"><expr pos:start="223:67" pos:end="223:69"><name pos:start="223:67" pos:end="223:69">ost</name></expr></argument>, <argument pos:start="223:72" pos:end="223:81"><expr pos:start="223:72" pos:end="223:81"><name pos:start="223:72" pos:end="223:81">frame_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="225:1" pos:end="225:19">#<cpp:directive pos:start="225:2" pos:end="225:3">if</cpp:directive> <expr pos:start="225:5" pos:end="225:19"><name pos:start="225:5" pos:end="225:19">CONFIG_AVFILTER</name></expr></cpp:if>

            <label pos:start="227:13" pos:end="227:17"><name pos:start="227:13" pos:end="227:16">cont</name>:</label>

            <expr_stmt pos:start="229:13" pos:end="229:109"><expr pos:start="229:13" pos:end="229:108"><name pos:start="229:13" pos:end="229:27">frame_available</name> <operator pos:start="229:29" pos:end="229:29">=</operator> <name pos:start="229:31" pos:end="229:54"><name pos:start="229:31" pos:end="229:33">ost</name><operator pos:start="229:34" pos:end="229:35">-&gt;</operator><name pos:start="229:36" pos:end="229:54">output_video_filter</name></name> <operator pos:start="229:56" pos:end="229:57">&amp;&amp;</operator> <call pos:start="229:59" pos:end="229:108"><name pos:start="229:59" pos:end="229:82">av_buffersink_poll_frame</name><argument_list pos:start="229:83" pos:end="229:108">(<argument pos:start="229:84" pos:end="229:107"><expr pos:start="229:84" pos:end="229:107"><name pos:start="229:84" pos:end="229:107"><name pos:start="229:84" pos:end="229:86">ost</name><operator pos:start="229:87" pos:end="229:88">-&gt;</operator><name pos:start="229:89" pos:end="229:107">output_video_filter</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:47"><expr pos:start="231:13" pos:end="231:46"><call pos:start="231:13" pos:end="231:46"><name pos:start="231:13" pos:end="231:33">avfilter_unref_buffer</name><argument_list pos:start="231:34" pos:end="231:46">(<argument pos:start="231:35" pos:end="231:45"><expr pos:start="231:35" pos:end="231:45"><name pos:start="231:35" pos:end="231:45"><name pos:start="231:35" pos:end="231:37">ost</name><operator pos:start="231:38" pos:end="231:39">-&gt;</operator><name pos:start="231:40" pos:end="231:45">picref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></while>

<cpp:endif pos:start="235:1" pos:end="235:6">#<cpp:directive pos:start="235:2" pos:end="235:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></for>



    <expr_stmt pos:start="241:5" pos:end="241:28"><expr pos:start="241:5" pos:end="241:27"><call pos:start="241:5" pos:end="241:27"><name pos:start="241:5" pos:end="241:11">av_free</name><argument_list pos:start="241:12" pos:end="241:27">(<argument pos:start="241:13" pos:end="241:26"><expr pos:start="241:13" pos:end="241:26"><name pos:start="241:13" pos:end="241:26">buffer_to_free</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="243:5" pos:end="243:15">return <expr pos:start="243:12" pos:end="243:14"><name pos:start="243:12" pos:end="243:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
