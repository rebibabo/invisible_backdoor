<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/81.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">ram_init</name><parameter_list pos:start="1:21" pos:end="3:38">(<parameter pos:start="1:22" pos:end="1:44"><decl pos:start="1:22" pos:end="1:44"><type pos:start="1:22" pos:end="1:44"><name pos:start="1:22" pos:end="1:39">target_phys_addr_t</name></type> <name pos:start="1:41" pos:end="1:44">addr</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:65"><decl pos:start="1:47" pos:end="1:65"><type pos:start="1:47" pos:end="1:65"><name pos:start="1:47" pos:end="1:56">ram_addr_t</name></type> <name pos:start="1:58" pos:end="1:65">RAM_size</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:37"><decl pos:start="3:22" pos:end="3:37"><type pos:start="3:22" pos:end="3:37"><name pos:start="3:22" pos:end="3:29">uint64_t</name></type> <name pos:start="3:31" pos:end="3:37">max_mem</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:32">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">RamDevice</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">d</name></decl>;</decl_stmt>



    <comment type="block" pos:start="15:5" pos:end="15:22">/* allocate RAM */</comment>

    <if_stmt pos:start="17:5" pos:end="29:5"><if pos:start="17:5" pos:end="29:5">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><operator pos:start="17:9" pos:end="17:9">(</operator><name pos:start="17:10" pos:end="17:17">uint64_t</name><operator pos:start="17:18" pos:end="17:18">)</operator><name pos:start="17:19" pos:end="17:26">RAM_size</name> <operator pos:start="17:28" pos:end="17:28">&gt;</operator> <name pos:start="17:30" pos:end="17:36">max_mem</name></expr>)</condition> <block pos:start="17:39" pos:end="29:5">{<block_content pos:start="19:9" pos:end="27:16">

        <expr_stmt pos:start="19:9" pos:end="25:57"><expr pos:start="19:9" pos:end="25:56"><call pos:start="19:9" pos:end="25:56"><name pos:start="19:9" pos:end="19:15">fprintf</name><argument_list pos:start="19:16" pos:end="25:56">(<argument pos:start="19:17" pos:end="19:22"><expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22">stderr</name></expr></argument>,

                <argument pos:start="21:17" pos:end="21:74"><expr pos:start="21:17" pos:end="21:74"><literal type="string" pos:start="21:17" pos:end="21:74">"qemu: Too much memory for this machine: %d, maximum %d\n"</literal></expr></argument>,

                <argument pos:start="23:17" pos:end="23:56"><expr pos:start="23:17" pos:end="23:56"><operator pos:start="23:17" pos:end="23:17">(</operator><name pos:start="23:18" pos:end="23:25">unsigned</name> <name pos:start="23:27" pos:end="23:29">int</name><operator pos:start="23:30" pos:end="23:30">)</operator><operator pos:start="23:31" pos:end="23:31">(</operator><name pos:start="23:32" pos:end="23:39">RAM_size</name> <operator pos:start="23:41" pos:end="23:41">/</operator> <operator pos:start="23:43" pos:end="23:43">(</operator><literal type="number" pos:start="23:44" pos:end="23:47">1024</literal> <operator pos:start="23:49" pos:end="23:49">*</operator> <literal type="number" pos:start="23:51" pos:end="23:54">1024</literal><operator pos:start="23:55" pos:end="23:55">)</operator><operator pos:start="23:56" pos:end="23:56">)</operator></expr></argument>,

                <argument pos:start="25:17" pos:end="25:55"><expr pos:start="25:17" pos:end="25:55"><operator pos:start="25:17" pos:end="25:17">(</operator><name pos:start="25:18" pos:end="25:25">unsigned</name> <name pos:start="25:27" pos:end="25:29">int</name><operator pos:start="25:30" pos:end="25:30">)</operator><operator pos:start="25:31" pos:end="25:31">(</operator><name pos:start="25:32" pos:end="25:38">max_mem</name> <operator pos:start="25:40" pos:end="25:40">/</operator> <operator pos:start="25:42" pos:end="25:42">(</operator><literal type="number" pos:start="25:43" pos:end="25:46">1024</literal> <operator pos:start="25:48" pos:end="25:48">*</operator> <literal type="number" pos:start="25:50" pos:end="25:53">1024</literal><operator pos:start="25:54" pos:end="25:54">)</operator><operator pos:start="25:55" pos:end="25:55">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:16"><expr pos:start="27:9" pos:end="27:15"><call pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:12">exit</name><argument_list pos:start="27:13" pos:end="27:15">(<argument pos:start="27:14" pos:end="27:14"><expr pos:start="27:14" pos:end="27:14"><literal type="number" pos:start="27:14" pos:end="27:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:7">dev</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="31:37"><name pos:start="31:11" pos:end="31:21">qdev_create</name><argument_list pos:start="31:22" pos:end="31:37">(<argument pos:start="31:23" pos:end="31:26"><expr pos:start="31:23" pos:end="31:26"><name pos:start="31:23" pos:end="31:26">NULL</name></expr></argument>, <argument pos:start="31:29" pos:end="31:36"><expr pos:start="31:29" pos:end="31:36"><literal type="string" pos:start="31:29" pos:end="31:36">"memory"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:7">=</operator> <call pos:start="33:9" pos:end="33:29"><name pos:start="33:9" pos:end="33:24">sysbus_from_qdev</name><argument_list pos:start="33:25" pos:end="33:29">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:34"><expr pos:start="37:5" pos:end="37:33"><name pos:start="37:5" pos:end="37:5">d</name> <operator pos:start="37:7" pos:end="37:7">=</operator> <call pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:19">FROM_SYSBUS</name><argument_list pos:start="37:20" pos:end="37:33">(<argument pos:start="37:21" pos:end="37:29"><expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:29">RamDevice</name></expr></argument>, <argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><name pos:start="37:32" pos:end="37:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:23"><expr pos:start="39:5" pos:end="39:22"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:5">d</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:11">size</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:22">RAM_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:19"><expr pos:start="41:5" pos:end="41:18"><call pos:start="41:5" pos:end="41:18"><name pos:start="41:5" pos:end="41:13">qdev_init</name><argument_list pos:start="41:14" pos:end="41:18">(<argument pos:start="41:15" pos:end="41:17"><expr pos:start="41:15" pos:end="41:17"><name pos:start="41:15" pos:end="41:17">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:32"><expr pos:start="45:5" pos:end="45:31"><call pos:start="45:5" pos:end="45:31"><name pos:start="45:5" pos:end="45:19">sysbus_mmio_map</name><argument_list pos:start="45:20" pos:end="45:31">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">s</name></expr></argument>, <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><literal type="number" pos:start="45:24" pos:end="45:24">0</literal></expr></argument>, <argument pos:start="45:27" pos:end="45:30"><expr pos:start="45:27" pos:end="45:30"><name pos:start="45:27" pos:end="45:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
