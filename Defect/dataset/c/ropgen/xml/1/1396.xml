<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/1396.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">video_encode_example</name><parameter_list pos:start="1:26" pos:end="1:47">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:38"><specifier pos:start="1:27" pos:end="1:31">const</specifier> <name pos:start="1:33" pos:end="1:36">char</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:46">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:17">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">AVCodec</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:18">codec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">AVCodecContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">c</name><init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:19">out_size</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:25">size</name></decl>, <decl pos:start="9:28" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:28">x</name></decl>, <decl pos:start="9:31" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:31" pos:end="9:31">y</name></decl>, <decl pos:start="9:34" pos:end="9:44"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:34" pos:end="9:44">outbuf_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">FILE</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">AVFrame</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">picture</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:19"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:19">outbuf</name></decl>, <decl pos:start="15:22" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:33">picture_buf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><call pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:10">printf</name><argument_list pos:start="19:11" pos:end="19:30">(<argument pos:start="19:12" pos:end="19:29"><expr pos:start="19:12" pos:end="19:29"><literal type="string" pos:start="19:12" pos:end="19:29">"Video encoding\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:38">/* find the mpeg1 video encoder */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:54"><expr pos:start="25:5" pos:end="25:53"><name pos:start="25:5" pos:end="25:9">codec</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:53"><name pos:start="25:13" pos:end="25:32">avcodec_find_encoder</name><argument_list pos:start="25:33" pos:end="25:53">(<argument pos:start="25:34" pos:end="25:52"><expr pos:start="25:34" pos:end="25:52"><name pos:start="25:34" pos:end="25:52">CODEC_ID_MPEG1VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="33:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:14">codec</name></expr>)</condition> <block pos:start="27:17" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:16">

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="29:44">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="29:43"><expr pos:start="29:25" pos:end="29:43"><literal type="string" pos:start="29:25" pos:end="29:43">"codec not found\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:16"><expr pos:start="31:9" pos:end="31:15"><call pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:12">exit</name><argument_list pos:start="31:13" pos:end="31:15">(<argument pos:start="31:14" pos:end="31:14"><expr pos:start="31:14" pos:end="31:14"><literal type="number" pos:start="31:14" pos:end="31:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:5">c</name><operator pos:start="37:6" pos:end="37:6">=</operator> <call pos:start="37:8" pos:end="37:30"><name pos:start="37:8" pos:end="37:28">avcodec_alloc_context</name><argument_list pos:start="37:29" pos:end="37:30">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:11">picture</name><operator pos:start="39:12" pos:end="39:12">=</operator> <call pos:start="39:14" pos:end="39:34"><name pos:start="39:14" pos:end="39:32">avcodec_alloc_frame</name><argument_list pos:start="39:33" pos:end="39:34">()</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="43:5" pos:end="43:31">/* put sample parameters */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:25"><expr pos:start="45:5" pos:end="45:24"><name pos:start="45:5" pos:end="45:15"><name pos:start="45:5" pos:end="45:5">c</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:15">bit_rate</name></name> <operator pos:start="45:17" pos:end="45:17">=</operator> <literal type="number" pos:start="45:19" pos:end="45:24">400000</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="47:5" pos:end="47:46">/* resolution must be a multiple of two */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:19"><expr pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:5">c</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:12">width</name></name> <operator pos:start="49:14" pos:end="49:14">=</operator> <literal type="number" pos:start="49:16" pos:end="49:18">352</literal></expr>;</expr_stmt>  

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:13"><name pos:start="51:5" pos:end="51:5">c</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:13">height</name></name> <operator pos:start="51:15" pos:end="51:15">=</operator> <literal type="number" pos:start="51:17" pos:end="51:19">288</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="53:5" pos:end="53:27">/* frames per second */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:5">c</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:17">frame_rate</name></name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:22">25</literal></expr>;</expr_stmt>  

    <expr_stmt pos:start="57:5" pos:end="57:26"><expr pos:start="57:5" pos:end="57:25"><name pos:start="57:5" pos:end="57:22"><name pos:start="57:5" pos:end="57:5">c</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:22">frame_rate_base</name></name><operator pos:start="57:23" pos:end="57:23">=</operator> <literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:5">c</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:15">gop_size</name></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:20">10</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:23" pos:end="59:65">/* emit one intra frame every ten frames */</comment>

    <expr_stmt pos:start="61:5" pos:end="61:22"><expr pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:19"><name pos:start="61:5" pos:end="61:5">c</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:19">max_b_frames</name></name><operator pos:start="61:20" pos:end="61:20">=</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:17">/* open it */</comment>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:35">(<expr pos:start="67:9" pos:end="67:34"><call pos:start="67:9" pos:end="67:30"><name pos:start="67:9" pos:end="67:20">avcodec_open</name><argument_list pos:start="67:21" pos:end="67:30">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">c</name></expr></argument>, <argument pos:start="67:25" pos:end="67:29"><expr pos:start="67:25" pos:end="67:29"><name pos:start="67:25" pos:end="67:29">codec</name></expr></argument>)</argument_list></call> <operator pos:start="67:32" pos:end="67:32">&lt;</operator> <literal type="number" pos:start="67:34" pos:end="67:34">0</literal></expr>)</condition> <block pos:start="67:37" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:16">

        <expr_stmt pos:start="69:9" pos:end="69:50"><expr pos:start="69:9" pos:end="69:49"><call pos:start="69:9" pos:end="69:49"><name pos:start="69:9" pos:end="69:15">fprintf</name><argument_list pos:start="69:16" pos:end="69:49">(<argument pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:22">stderr</name></expr></argument>, <argument pos:start="69:25" pos:end="69:48"><expr pos:start="69:25" pos:end="69:48"><literal type="string" pos:start="69:25" pos:end="69:48">"could not open codec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:16"><expr pos:start="71:9" pos:end="71:15"><call pos:start="71:9" pos:end="71:15"><name pos:start="71:9" pos:end="71:12">exit</name><argument_list pos:start="71:13" pos:end="71:15">(<argument pos:start="71:14" pos:end="71:14"><expr pos:start="71:14" pos:end="71:14"><literal type="number" pos:start="71:14" pos:end="71:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="77:5" pos:end="77:55">/* the codec gives us the frame size, in samples */</comment>



    <expr_stmt pos:start="81:5" pos:end="81:29"><expr pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:5">f</name> <operator pos:start="81:7" pos:end="81:7">=</operator> <call pos:start="81:9" pos:end="81:28"><name pos:start="81:9" pos:end="81:13">fopen</name><argument_list pos:start="81:14" pos:end="81:28">(<argument pos:start="81:15" pos:end="81:22"><expr pos:start="81:15" pos:end="81:22"><name pos:start="81:15" pos:end="81:22">filename</name></expr></argument>, <argument pos:start="81:25" pos:end="81:27"><expr pos:start="81:25" pos:end="81:27"><literal type="string" pos:start="81:25" pos:end="81:27">"w"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:11">(<expr pos:start="83:9" pos:end="83:10"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:10">f</name></expr>)</condition> <block pos:start="83:13" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:16">

        <expr_stmt pos:start="85:9" pos:end="85:57"><expr pos:start="85:9" pos:end="85:56"><call pos:start="85:9" pos:end="85:56"><name pos:start="85:9" pos:end="85:15">fprintf</name><argument_list pos:start="85:16" pos:end="85:56">(<argument pos:start="85:17" pos:end="85:22"><expr pos:start="85:17" pos:end="85:22"><name pos:start="85:17" pos:end="85:22">stderr</name></expr></argument>, <argument pos:start="85:25" pos:end="85:45"><expr pos:start="85:25" pos:end="85:45"><literal type="string" pos:start="85:25" pos:end="85:45">"could not open %s\n"</literal></expr></argument>, <argument pos:start="85:48" pos:end="85:55"><expr pos:start="85:48" pos:end="85:55"><name pos:start="85:48" pos:end="85:55">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:16"><expr pos:start="87:9" pos:end="87:15"><call pos:start="87:9" pos:end="87:15"><name pos:start="87:9" pos:end="87:12">exit</name><argument_list pos:start="87:13" pos:end="87:15">(<argument pos:start="87:14" pos:end="87:14"><expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <comment type="block" pos:start="93:5" pos:end="93:39">/* alloc image and output buffer */</comment>

    <expr_stmt pos:start="95:5" pos:end="95:25"><expr pos:start="95:5" pos:end="95:24"><name pos:start="95:5" pos:end="95:15">outbuf_size</name> <operator pos:start="95:17" pos:end="95:17">=</operator> <literal type="number" pos:start="95:19" pos:end="95:24">100000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:33"><expr pos:start="97:5" pos:end="97:32"><name pos:start="97:5" pos:end="97:10">outbuf</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:32"><name pos:start="97:14" pos:end="97:19">malloc</name><argument_list pos:start="97:20" pos:end="97:32">(<argument pos:start="97:21" pos:end="97:31"><expr pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:31">outbuf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:32"><expr pos:start="99:5" pos:end="99:31"><name pos:start="99:5" pos:end="99:8">size</name> <operator pos:start="99:10" pos:end="99:10">=</operator> <name pos:start="99:12" pos:end="99:19"><name pos:start="99:12" pos:end="99:12">c</name><operator pos:start="99:13" pos:end="99:14">-&gt;</operator><name pos:start="99:15" pos:end="99:19">width</name></name> <operator pos:start="99:21" pos:end="99:21">*</operator> <name pos:start="99:23" pos:end="99:31"><name pos:start="99:23" pos:end="99:23">c</name><operator pos:start="99:24" pos:end="99:25">-&gt;</operator><name pos:start="99:26" pos:end="99:31">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:41"><expr pos:start="101:5" pos:end="101:40"><name pos:start="101:5" pos:end="101:15">picture_buf</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:40"><name pos:start="101:19" pos:end="101:24">malloc</name><argument_list pos:start="101:25" pos:end="101:40">(<argument pos:start="101:26" pos:end="101:39"><expr pos:start="101:26" pos:end="101:39"><operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:30">size</name> <operator pos:start="101:32" pos:end="101:32">*</operator> <literal type="number" pos:start="101:34" pos:end="101:34">3</literal><operator pos:start="101:35" pos:end="101:35">)</operator> <operator pos:start="101:37" pos:end="101:37">/</operator> <literal type="number" pos:start="101:39" pos:end="101:39">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="101:43" pos:end="101:64">/* size for YUV 420 */</comment>

    

    <expr_stmt pos:start="105:5" pos:end="105:35"><expr pos:start="105:5" pos:end="105:34"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:11">picture</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:17">data</name><index pos:start="105:18" pos:end="105:20">[<expr pos:start="105:19" pos:end="105:19"><literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>]</index></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:34">picture_buf</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:47"><expr pos:start="107:5" pos:end="107:46"><name pos:start="107:5" pos:end="107:20"><name pos:start="107:5" pos:end="107:11">picture</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:17">data</name><index pos:start="107:18" pos:end="107:20">[<expr pos:start="107:19" pos:end="107:19"><literal type="number" pos:start="107:19" pos:end="107:19">1</literal></expr>]</index></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <name pos:start="107:24" pos:end="107:39"><name pos:start="107:24" pos:end="107:30">picture</name><operator pos:start="107:31" pos:end="107:32">-&gt;</operator><name pos:start="107:33" pos:end="107:36">data</name><index pos:start="107:37" pos:end="107:39">[<expr pos:start="107:38" pos:end="107:38"><literal type="number" pos:start="107:38" pos:end="107:38">0</literal></expr>]</index></name> <operator pos:start="107:41" pos:end="107:41">+</operator> <name pos:start="107:43" pos:end="107:46">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:51"><expr pos:start="109:5" pos:end="109:50"><name pos:start="109:5" pos:end="109:20"><name pos:start="109:5" pos:end="109:11">picture</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:17">data</name><index pos:start="109:18" pos:end="109:20">[<expr pos:start="109:19" pos:end="109:19"><literal type="number" pos:start="109:19" pos:end="109:19">2</literal></expr>]</index></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:39"><name pos:start="109:24" pos:end="109:30">picture</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:36">data</name><index pos:start="109:37" pos:end="109:39">[<expr pos:start="109:38" pos:end="109:38"><literal type="number" pos:start="109:38" pos:end="109:38">1</literal></expr>]</index></name> <operator pos:start="109:41" pos:end="109:41">+</operator> <name pos:start="109:43" pos:end="109:46">size</name> <operator pos:start="109:48" pos:end="109:48">/</operator> <literal type="number" pos:start="109:50" pos:end="109:50">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:11">picture</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:21">linesize</name><index pos:start="111:22" pos:end="111:24">[<expr pos:start="111:23" pos:end="111:23"><literal type="number" pos:start="111:23" pos:end="111:23">0</literal></expr>]</index></name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:35"><name pos:start="111:28" pos:end="111:28">c</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:35">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:40"><expr pos:start="113:5" pos:end="113:39"><name pos:start="113:5" pos:end="113:24"><name pos:start="113:5" pos:end="113:11">picture</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:21">linesize</name><index pos:start="113:22" pos:end="113:24">[<expr pos:start="113:23" pos:end="113:23"><literal type="number" pos:start="113:23" pos:end="113:23">1</literal></expr>]</index></name> <operator pos:start="113:26" pos:end="113:26">=</operator> <name pos:start="113:28" pos:end="113:35"><name pos:start="113:28" pos:end="113:28">c</name><operator pos:start="113:29" pos:end="113:30">-&gt;</operator><name pos:start="113:31" pos:end="113:35">width</name></name> <operator pos:start="113:37" pos:end="113:37">/</operator> <literal type="number" pos:start="113:39" pos:end="113:39">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:40"><expr pos:start="115:5" pos:end="115:39"><name pos:start="115:5" pos:end="115:24"><name pos:start="115:5" pos:end="115:11">picture</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:21">linesize</name><index pos:start="115:22" pos:end="115:24">[<expr pos:start="115:23" pos:end="115:23"><literal type="number" pos:start="115:23" pos:end="115:23">2</literal></expr>]</index></name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:35"><name pos:start="115:28" pos:end="115:28">c</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:35">width</name></name> <operator pos:start="115:37" pos:end="115:37">/</operator> <literal type="number" pos:start="115:39" pos:end="115:39">2</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="119:5" pos:end="119:34">/* encode 1 second of video */</comment>

    <for pos:start="121:5" pos:end="165:5">for<control pos:start="121:8" pos:end="121:21">(<init pos:start="121:9" pos:end="121:12"><expr pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:9">i</name><operator pos:start="121:10" pos:end="121:10">=</operator><literal type="number" pos:start="121:11" pos:end="121:11">0</literal></expr>;</init><condition pos:start="121:13" pos:end="121:17"><expr pos:start="121:13" pos:end="121:16"><name pos:start="121:13" pos:end="121:13">i</name><operator pos:start="121:14" pos:end="121:14">&lt;</operator><literal type="number" pos:start="121:15" pos:end="121:16">25</literal></expr>;</condition><incr pos:start="121:18" pos:end="121:20"><expr pos:start="121:18" pos:end="121:20"><name pos:start="121:18" pos:end="121:18">i</name><operator pos:start="121:19" pos:end="121:20">++</operator></expr></incr>)</control> <block pos:start="121:23" pos:end="165:5">{<block_content pos:start="123:9" pos:end="163:39">

        <expr_stmt pos:start="123:9" pos:end="123:23"><expr pos:start="123:9" pos:end="123:22"><call pos:start="123:9" pos:end="123:22"><name pos:start="123:9" pos:end="123:14">fflush</name><argument_list pos:start="123:15" pos:end="123:22">(<argument pos:start="123:16" pos:end="123:21"><expr pos:start="123:16" pos:end="123:21"><name pos:start="123:16" pos:end="123:21">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="125:9" pos:end="125:35">/* prepare a dummy image */</comment>

        <comment type="block" pos:start="127:9" pos:end="127:15">/* Y */</comment>

        <for pos:start="129:9" pos:end="137:9">for<control pos:start="129:12" pos:end="129:32">(<init pos:start="129:13" pos:end="129:16"><expr pos:start="129:13" pos:end="129:15"><name pos:start="129:13" pos:end="129:13">y</name><operator pos:start="129:14" pos:end="129:14">=</operator><literal type="number" pos:start="129:15" pos:end="129:15">0</literal></expr>;</init><condition pos:start="129:17" pos:end="129:28"><expr pos:start="129:17" pos:end="129:27"><name pos:start="129:17" pos:end="129:17">y</name><operator pos:start="129:18" pos:end="129:18">&lt;</operator><name pos:start="129:19" pos:end="129:27"><name pos:start="129:19" pos:end="129:19">c</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:27">height</name></name></expr>;</condition><incr pos:start="129:29" pos:end="129:31"><expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:29">y</name><operator pos:start="129:30" pos:end="129:31">++</operator></expr></incr>)</control> <block pos:start="129:34" pos:end="137:9">{<block_content pos:start="131:13" pos:end="135:13">

            <for pos:start="131:13" pos:end="135:13">for<control pos:start="131:16" pos:end="131:35">(<init pos:start="131:17" pos:end="131:20"><expr pos:start="131:17" pos:end="131:19"><name pos:start="131:17" pos:end="131:17">x</name><operator pos:start="131:18" pos:end="131:18">=</operator><literal type="number" pos:start="131:19" pos:end="131:19">0</literal></expr>;</init><condition pos:start="131:21" pos:end="131:31"><expr pos:start="131:21" pos:end="131:30"><name pos:start="131:21" pos:end="131:21">x</name><operator pos:start="131:22" pos:end="131:22">&lt;</operator><name pos:start="131:23" pos:end="131:30"><name pos:start="131:23" pos:end="131:23">c</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:30">width</name></name></expr>;</condition><incr pos:start="131:32" pos:end="131:34"><expr pos:start="131:32" pos:end="131:34"><name pos:start="131:32" pos:end="131:32">x</name><operator pos:start="131:33" pos:end="131:34">++</operator></expr></incr>)</control> <block pos:start="131:37" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:79">

                <expr_stmt pos:start="133:17" pos:end="133:79"><expr pos:start="133:17" pos:end="133:78"><name pos:start="133:17" pos:end="133:62"><name pos:start="133:17" pos:end="133:23">picture</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:29">data</name><index pos:start="133:30" pos:end="133:32">[<expr pos:start="133:31" pos:end="133:31"><literal type="number" pos:start="133:31" pos:end="133:31">0</literal></expr>]</index><index pos:start="133:33" pos:end="133:62">[<expr pos:start="133:34" pos:end="133:61"><name pos:start="133:34" pos:end="133:34">y</name> <operator pos:start="133:36" pos:end="133:36">*</operator> <name pos:start="133:38" pos:end="133:57"><name pos:start="133:38" pos:end="133:44">picture</name><operator pos:start="133:45" pos:end="133:46">-&gt;</operator><name pos:start="133:47" pos:end="133:54">linesize</name><index pos:start="133:55" pos:end="133:57">[<expr pos:start="133:56" pos:end="133:56"><literal type="number" pos:start="133:56" pos:end="133:56">0</literal></expr>]</index></name> <operator pos:start="133:59" pos:end="133:59">+</operator> <name pos:start="133:61" pos:end="133:61">x</name></expr>]</index></name> <operator pos:start="133:64" pos:end="133:64">=</operator> <name pos:start="133:66" pos:end="133:66">x</name> <operator pos:start="133:68" pos:end="133:68">+</operator> <name pos:start="133:70" pos:end="133:70">y</name> <operator pos:start="133:72" pos:end="133:72">+</operator> <name pos:start="133:74" pos:end="133:74">i</name> <operator pos:start="133:76" pos:end="133:76">*</operator> <literal type="number" pos:start="133:78" pos:end="133:78">3</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <comment type="block" pos:start="141:9" pos:end="141:23">/* Cb and Cr */</comment>

        <for pos:start="143:9" pos:end="153:9">for<control pos:start="143:12" pos:end="143:34">(<init pos:start="143:13" pos:end="143:16"><expr pos:start="143:13" pos:end="143:15"><name pos:start="143:13" pos:end="143:13">y</name><operator pos:start="143:14" pos:end="143:14">=</operator><literal type="number" pos:start="143:15" pos:end="143:15">0</literal></expr>;</init><condition pos:start="143:17" pos:end="143:30"><expr pos:start="143:17" pos:end="143:29"><name pos:start="143:17" pos:end="143:17">y</name><operator pos:start="143:18" pos:end="143:18">&lt;</operator><name pos:start="143:19" pos:end="143:27"><name pos:start="143:19" pos:end="143:19">c</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:27">height</name></name><operator pos:start="143:28" pos:end="143:28">/</operator><literal type="number" pos:start="143:29" pos:end="143:29">2</literal></expr>;</condition><incr pos:start="143:31" pos:end="143:33"><expr pos:start="143:31" pos:end="143:33"><name pos:start="143:31" pos:end="143:31">y</name><operator pos:start="143:32" pos:end="143:33">++</operator></expr></incr>)</control> <block pos:start="143:36" pos:end="153:9">{<block_content pos:start="145:13" pos:end="151:13">

            <for pos:start="145:13" pos:end="151:13">for<control pos:start="145:16" pos:end="145:37">(<init pos:start="145:17" pos:end="145:20"><expr pos:start="145:17" pos:end="145:19"><name pos:start="145:17" pos:end="145:17">x</name><operator pos:start="145:18" pos:end="145:18">=</operator><literal type="number" pos:start="145:19" pos:end="145:19">0</literal></expr>;</init><condition pos:start="145:21" pos:end="145:33"><expr pos:start="145:21" pos:end="145:32"><name pos:start="145:21" pos:end="145:21">x</name><operator pos:start="145:22" pos:end="145:22">&lt;</operator><name pos:start="145:23" pos:end="145:30"><name pos:start="145:23" pos:end="145:23">c</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:30">width</name></name><operator pos:start="145:31" pos:end="145:31">/</operator><literal type="number" pos:start="145:32" pos:end="145:32">2</literal></expr>;</condition><incr pos:start="145:34" pos:end="145:36"><expr pos:start="145:34" pos:end="145:36"><name pos:start="145:34" pos:end="145:34">x</name><operator pos:start="145:35" pos:end="145:36">++</operator></expr></incr>)</control> <block pos:start="145:39" pos:end="151:13">{<block_content pos:start="147:17" pos:end="149:80">

                <expr_stmt pos:start="147:17" pos:end="147:81"><expr pos:start="147:17" pos:end="147:80"><name pos:start="147:17" pos:end="147:62"><name pos:start="147:17" pos:end="147:23">picture</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:29">data</name><index pos:start="147:30" pos:end="147:32">[<expr pos:start="147:31" pos:end="147:31"><literal type="number" pos:start="147:31" pos:end="147:31">1</literal></expr>]</index><index pos:start="147:33" pos:end="147:62">[<expr pos:start="147:34" pos:end="147:61"><name pos:start="147:34" pos:end="147:34">y</name> <operator pos:start="147:36" pos:end="147:36">*</operator> <name pos:start="147:38" pos:end="147:57"><name pos:start="147:38" pos:end="147:44">picture</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:54">linesize</name><index pos:start="147:55" pos:end="147:57">[<expr pos:start="147:56" pos:end="147:56"><literal type="number" pos:start="147:56" pos:end="147:56">1</literal></expr>]</index></name> <operator pos:start="147:59" pos:end="147:59">+</operator> <name pos:start="147:61" pos:end="147:61">x</name></expr>]</index></name> <operator pos:start="147:64" pos:end="147:64">=</operator> <literal type="number" pos:start="147:66" pos:end="147:70">128</literal> <operator pos:start="147:70" pos:end="147:70">+</operator> <name pos:start="147:72" pos:end="147:72">y</name> <operator pos:start="147:74" pos:end="147:74">+</operator> <name pos:start="147:76" pos:end="147:76">i</name> <operator pos:start="147:78" pos:end="147:78">*</operator> <literal type="number" pos:start="147:80" pos:end="147:80">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="149:17" pos:end="149:80"><expr pos:start="149:17" pos:end="149:79"><name pos:start="149:17" pos:end="149:62"><name pos:start="149:17" pos:end="149:23">picture</name><operator pos:start="149:24" pos:end="149:25">-&gt;</operator><name pos:start="149:26" pos:end="149:29">data</name><index pos:start="149:30" pos:end="149:32">[<expr pos:start="149:31" pos:end="149:31"><literal type="number" pos:start="149:31" pos:end="149:31">2</literal></expr>]</index><index pos:start="149:33" pos:end="149:62">[<expr pos:start="149:34" pos:end="149:61"><name pos:start="149:34" pos:end="149:34">y</name> <operator pos:start="149:36" pos:end="149:36">*</operator> <name pos:start="149:38" pos:end="149:57"><name pos:start="149:38" pos:end="149:44">picture</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:54">linesize</name><index pos:start="149:55" pos:end="149:57">[<expr pos:start="149:56" pos:end="149:56"><literal type="number" pos:start="149:56" pos:end="149:56">2</literal></expr>]</index></name> <operator pos:start="149:59" pos:end="149:59">+</operator> <name pos:start="149:61" pos:end="149:61">x</name></expr>]</index></name> <operator pos:start="149:64" pos:end="149:64">=</operator> <literal type="number" pos:start="149:66" pos:end="149:69">64</literal> <operator pos:start="149:69" pos:end="149:69">+</operator> <name pos:start="149:71" pos:end="149:71">x</name> <operator pos:start="149:73" pos:end="149:73">+</operator> <name pos:start="149:75" pos:end="149:75">i</name> <operator pos:start="149:77" pos:end="149:77">*</operator> <literal type="number" pos:start="149:79" pos:end="149:79">5</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <comment type="block" pos:start="157:9" pos:end="157:30">/* encode the image */</comment>

        <expr_stmt pos:start="159:9" pos:end="159:73"><expr pos:start="159:9" pos:end="159:72"><name pos:start="159:9" pos:end="159:16">out_size</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:72"><name pos:start="159:20" pos:end="159:39">avcodec_encode_video</name><argument_list pos:start="159:40" pos:end="159:72">(<argument pos:start="159:41" pos:end="159:41"><expr pos:start="159:41" pos:end="159:41"><name pos:start="159:41" pos:end="159:41">c</name></expr></argument>, <argument pos:start="159:44" pos:end="159:49"><expr pos:start="159:44" pos:end="159:49"><name pos:start="159:44" pos:end="159:49">outbuf</name></expr></argument>, <argument pos:start="159:52" pos:end="159:62"><expr pos:start="159:52" pos:end="159:62"><name pos:start="159:52" pos:end="159:62">outbuf_size</name></expr></argument>, <argument pos:start="159:65" pos:end="159:71"><expr pos:start="159:65" pos:end="159:71"><name pos:start="159:65" pos:end="159:71">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:63"><expr pos:start="161:9" pos:end="161:62"><call pos:start="161:9" pos:end="161:62"><name pos:start="161:9" pos:end="161:14">printf</name><argument_list pos:start="161:15" pos:end="161:62">(<argument pos:start="161:16" pos:end="161:48"><expr pos:start="161:16" pos:end="161:48"><literal type="string" pos:start="161:16" pos:end="161:48">"encoding frame %3d (size=%5d)\n"</literal></expr></argument>, <argument pos:start="161:51" pos:end="161:51"><expr pos:start="161:51" pos:end="161:51"><name pos:start="161:51" pos:end="161:51">i</name></expr></argument>, <argument pos:start="161:54" pos:end="161:61"><expr pos:start="161:54" pos:end="161:61"><name pos:start="161:54" pos:end="161:61">out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:39"><expr pos:start="163:9" pos:end="163:38"><call pos:start="163:9" pos:end="163:38"><name pos:start="163:9" pos:end="163:14">fwrite</name><argument_list pos:start="163:15" pos:end="163:38">(<argument pos:start="163:16" pos:end="163:21"><expr pos:start="163:16" pos:end="163:21"><name pos:start="163:16" pos:end="163:21">outbuf</name></expr></argument>, <argument pos:start="163:24" pos:end="163:24"><expr pos:start="163:24" pos:end="163:24"><literal type="number" pos:start="163:24" pos:end="163:24">1</literal></expr></argument>, <argument pos:start="163:27" pos:end="163:34"><expr pos:start="163:27" pos:end="163:34"><name pos:start="163:27" pos:end="163:34">out_size</name></expr></argument>, <argument pos:start="163:37" pos:end="163:37"><expr pos:start="163:37" pos:end="163:37"><name pos:start="163:37" pos:end="163:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="169:5" pos:end="169:32">/* get the delayed frames */</comment>

    <for pos:start="171:5" pos:end="183:5">for<control pos:start="171:8" pos:end="171:24">(<init pos:start="171:9" pos:end="171:9">;</init> <condition pos:start="171:11" pos:end="171:19"><expr pos:start="171:11" pos:end="171:18"><name pos:start="171:11" pos:end="171:18">out_size</name></expr>;</condition> <incr pos:start="171:21" pos:end="171:23"><expr pos:start="171:21" pos:end="171:23"><name pos:start="171:21" pos:end="171:21">i</name><operator pos:start="171:22" pos:end="171:23">++</operator></expr></incr>)</control> <block pos:start="171:26" pos:end="183:5">{<block_content pos:start="173:9" pos:end="181:39">

        <expr_stmt pos:start="173:9" pos:end="173:23"><expr pos:start="173:9" pos:end="173:22"><call pos:start="173:9" pos:end="173:22"><name pos:start="173:9" pos:end="173:14">fflush</name><argument_list pos:start="173:15" pos:end="173:22">(<argument pos:start="173:16" pos:end="173:21"><expr pos:start="173:16" pos:end="173:21"><name pos:start="173:16" pos:end="173:21">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <expr_stmt pos:start="177:9" pos:end="177:70"><expr pos:start="177:9" pos:end="177:69"><name pos:start="177:9" pos:end="177:16">out_size</name> <operator pos:start="177:18" pos:end="177:18">=</operator> <call pos:start="177:20" pos:end="177:69"><name pos:start="177:20" pos:end="177:39">avcodec_encode_video</name><argument_list pos:start="177:40" pos:end="177:69">(<argument pos:start="177:41" pos:end="177:41"><expr pos:start="177:41" pos:end="177:41"><name pos:start="177:41" pos:end="177:41">c</name></expr></argument>, <argument pos:start="177:44" pos:end="177:49"><expr pos:start="177:44" pos:end="177:49"><name pos:start="177:44" pos:end="177:49">outbuf</name></expr></argument>, <argument pos:start="177:52" pos:end="177:62"><expr pos:start="177:52" pos:end="177:62"><name pos:start="177:52" pos:end="177:62">outbuf_size</name></expr></argument>, <argument pos:start="177:65" pos:end="177:68"><expr pos:start="177:65" pos:end="177:68"><name pos:start="177:65" pos:end="177:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:60"><expr pos:start="179:9" pos:end="179:59"><call pos:start="179:9" pos:end="179:59"><name pos:start="179:9" pos:end="179:14">printf</name><argument_list pos:start="179:15" pos:end="179:59">(<argument pos:start="179:16" pos:end="179:45"><expr pos:start="179:16" pos:end="179:45"><literal type="string" pos:start="179:16" pos:end="179:45">"write frame %3d (size=%5d)\n"</literal></expr></argument>, <argument pos:start="179:48" pos:end="179:48"><expr pos:start="179:48" pos:end="179:48"><name pos:start="179:48" pos:end="179:48">i</name></expr></argument>, <argument pos:start="179:51" pos:end="179:58"><expr pos:start="179:51" pos:end="179:58"><name pos:start="179:51" pos:end="179:58">out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:39"><expr pos:start="181:9" pos:end="181:38"><call pos:start="181:9" pos:end="181:38"><name pos:start="181:9" pos:end="181:14">fwrite</name><argument_list pos:start="181:15" pos:end="181:38">(<argument pos:start="181:16" pos:end="181:21"><expr pos:start="181:16" pos:end="181:21"><name pos:start="181:16" pos:end="181:21">outbuf</name></expr></argument>, <argument pos:start="181:24" pos:end="181:24"><expr pos:start="181:24" pos:end="181:24"><literal type="number" pos:start="181:24" pos:end="181:24">1</literal></expr></argument>, <argument pos:start="181:27" pos:end="181:34"><expr pos:start="181:27" pos:end="181:34"><name pos:start="181:27" pos:end="181:34">out_size</name></expr></argument>, <argument pos:start="181:37" pos:end="181:37"><expr pos:start="181:37" pos:end="181:37"><name pos:start="181:37" pos:end="181:37">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="187:5" pos:end="187:56">/* add sequence end code to have a real mpeg file */</comment>

    <expr_stmt pos:start="189:5" pos:end="189:21"><expr pos:start="189:5" pos:end="189:20"><name pos:start="189:5" pos:end="189:13"><name pos:start="189:5" pos:end="189:10">outbuf</name><index pos:start="189:11" pos:end="189:13">[<expr pos:start="189:12" pos:end="189:12"><literal type="number" pos:start="189:12" pos:end="189:12">0</literal></expr>]</index></name> <operator pos:start="189:15" pos:end="189:15">=</operator> <literal type="number" pos:start="189:17" pos:end="189:20">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:21"><expr pos:start="191:5" pos:end="191:20"><name pos:start="191:5" pos:end="191:13"><name pos:start="191:5" pos:end="191:10">outbuf</name><index pos:start="191:11" pos:end="191:13">[<expr pos:start="191:12" pos:end="191:12"><literal type="number" pos:start="191:12" pos:end="191:12">1</literal></expr>]</index></name> <operator pos:start="191:15" pos:end="191:15">=</operator> <literal type="number" pos:start="191:17" pos:end="191:20">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:21"><expr pos:start="193:5" pos:end="193:20"><name pos:start="193:5" pos:end="193:13"><name pos:start="193:5" pos:end="193:10">outbuf</name><index pos:start="193:11" pos:end="193:13">[<expr pos:start="193:12" pos:end="193:12"><literal type="number" pos:start="193:12" pos:end="193:12">2</literal></expr>]</index></name> <operator pos:start="193:15" pos:end="193:15">=</operator> <literal type="number" pos:start="193:17" pos:end="193:20">0x01</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:21"><expr pos:start="195:5" pos:end="195:20"><name pos:start="195:5" pos:end="195:13"><name pos:start="195:5" pos:end="195:10">outbuf</name><index pos:start="195:11" pos:end="195:13">[<expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">3</literal></expr>]</index></name> <operator pos:start="195:15" pos:end="195:15">=</operator> <literal type="number" pos:start="195:17" pos:end="195:20">0xb7</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:28"><expr pos:start="197:5" pos:end="197:27"><call pos:start="197:5" pos:end="197:27"><name pos:start="197:5" pos:end="197:10">fwrite</name><argument_list pos:start="197:11" pos:end="197:27">(<argument pos:start="197:12" pos:end="197:17"><expr pos:start="197:12" pos:end="197:17"><name pos:start="197:12" pos:end="197:17">outbuf</name></expr></argument>, <argument pos:start="197:20" pos:end="197:20"><expr pos:start="197:20" pos:end="197:20"><literal type="number" pos:start="197:20" pos:end="197:20">1</literal></expr></argument>, <argument pos:start="197:23" pos:end="197:23"><expr pos:start="197:23" pos:end="197:23"><literal type="number" pos:start="197:23" pos:end="197:23">4</literal></expr></argument>, <argument pos:start="197:26" pos:end="197:26"><expr pos:start="197:26" pos:end="197:26"><name pos:start="197:26" pos:end="197:26">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:14"><expr pos:start="199:5" pos:end="199:13"><call pos:start="199:5" pos:end="199:13"><name pos:start="199:5" pos:end="199:10">fclose</name><argument_list pos:start="199:11" pos:end="199:13">(<argument pos:start="199:12" pos:end="199:12"><expr pos:start="199:12" pos:end="199:12"><name pos:start="199:12" pos:end="199:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:22"><expr pos:start="201:5" pos:end="201:21"><call pos:start="201:5" pos:end="201:21"><name pos:start="201:5" pos:end="201:8">free</name><argument_list pos:start="201:9" pos:end="201:21">(<argument pos:start="201:10" pos:end="201:20"><expr pos:start="201:10" pos:end="201:20"><name pos:start="201:10" pos:end="201:20">picture_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:17"><expr pos:start="203:5" pos:end="203:16"><call pos:start="203:5" pos:end="203:16"><name pos:start="203:5" pos:end="203:8">free</name><argument_list pos:start="203:9" pos:end="203:16">(<argument pos:start="203:10" pos:end="203:15"><expr pos:start="203:10" pos:end="203:15"><name pos:start="203:10" pos:end="203:15">outbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="207:5" pos:end="207:21"><expr pos:start="207:5" pos:end="207:20"><call pos:start="207:5" pos:end="207:20"><name pos:start="207:5" pos:end="207:17">avcodec_close</name><argument_list pos:start="207:18" pos:end="207:20">(<argument pos:start="207:19" pos:end="207:19"><expr pos:start="207:19" pos:end="207:19"><name pos:start="207:19" pos:end="207:19">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="209:5" pos:end="209:12"><expr pos:start="209:5" pos:end="209:11"><call pos:start="209:5" pos:end="209:11"><name pos:start="209:5" pos:end="209:8">free</name><argument_list pos:start="209:9" pos:end="209:11">(<argument pos:start="209:10" pos:end="209:10"><expr pos:start="209:10" pos:end="209:10"><name pos:start="209:10" pos:end="209:10">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:18"><expr pos:start="211:5" pos:end="211:17"><call pos:start="211:5" pos:end="211:17"><name pos:start="211:5" pos:end="211:8">free</name><argument_list pos:start="211:9" pos:end="211:17">(<argument pos:start="211:10" pos:end="211:16"><expr pos:start="211:10" pos:end="211:16"><name pos:start="211:10" pos:end="211:16">picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:17"><expr pos:start="213:5" pos:end="213:16"><call pos:start="213:5" pos:end="213:16"><name pos:start="213:5" pos:end="213:10">printf</name><argument_list pos:start="213:11" pos:end="213:16">(<argument pos:start="213:12" pos:end="213:15"><expr pos:start="213:12" pos:end="213:15"><literal type="string" pos:start="213:12" pos:end="213:15">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
