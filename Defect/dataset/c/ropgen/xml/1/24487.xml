<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24487.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">sdp_parse_rtpmap</name><parameter_list pos:start="1:28" pos:end="5:60">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:36">AVStream</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:40">st</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:61"><decl pos:start="3:43" pos:end="3:61"><type pos:start="3:43" pos:end="3:61"><name pos:start="3:43" pos:end="3:52">RTSPStream</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:61">rtsp_st</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:44"><decl pos:start="5:29" pos:end="5:44"><type pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:31">int</name></type> <name pos:start="5:33" pos:end="5:44">payload_type</name></decl></parameter>, <parameter pos:start="5:47" pos:end="5:59"><decl pos:start="5:47" pos:end="5:59"><type pos:start="5:47" pos:end="5:59"><specifier pos:start="5:47" pos:end="5:51">const</specifier> <name pos:start="5:53" pos:end="5:56">char</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:59">p</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="143:1">{<block_content pos:start="9:5" pos:end="141:13">

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:25">codec</name> <init pos:start="9:27" pos:end="9:37">= <expr pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:37"><name pos:start="9:29" pos:end="9:30">st</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:37">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:12">buf</name><index pos:start="11:13" pos:end="11:17">[<expr pos:start="11:14" pos:end="11:16"><literal type="number" pos:start="11:14" pos:end="11:16">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVCodec</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:23"><decl pos:start="17:5" pos:end="17:22"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:22">c_name</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="27:32">/* See if we can handle this kind of payload.

     * The space should normally not be there but some Real streams or

     * particular servers ("RealServer Version 6.1.3.970", see issue 1658)

     * have a trailing space. */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:16">get_word_sep</name><argument_list pos:start="29:17" pos:end="29:44">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">buf</name></expr></argument>, <argument pos:start="29:23" pos:end="29:33"><expr pos:start="29:23" pos:end="29:33"><sizeof pos:start="29:23" pos:end="29:33">sizeof<argument_list pos:start="29:29" pos:end="29:33">(<argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><literal type="string" pos:start="29:36" pos:end="29:39">"/ "</literal></expr></argument>, <argument pos:start="29:42" pos:end="29:43"><expr pos:start="29:42" pos:end="29:43"><operator pos:start="29:42" pos:end="29:42">&amp;</operator><name pos:start="29:43" pos:end="29:43">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="39:5"><if pos:start="31:5" pos:end="39:5">if <condition pos:start="31:8" pos:end="31:38">(<expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:20">payload_type</name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <name pos:start="31:24" pos:end="31:37">RTP_PT_PRIVATE</name></expr>)</condition> <block pos:start="31:40" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:66">

        <comment type="block" pos:start="33:9" pos:end="35:68">/* We are in a standard case

         * (from http://www.iana.org/assignments/rtp-parameters). */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:66"><expr pos:start="37:9" pos:end="37:65"><name pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:13">codec</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:23">codec_id</name></name> <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:65"><name pos:start="37:27" pos:end="37:41">ff_rtp_codec_id</name><argument_list pos:start="37:42" pos:end="37:65">(<argument pos:start="37:43" pos:end="37:45"><expr pos:start="37:43" pos:end="37:45"><name pos:start="37:43" pos:end="37:45">buf</name></expr></argument>, <argument pos:start="37:48" pos:end="37:64"><expr pos:start="37:48" pos:end="37:64"><name pos:start="37:48" pos:end="37:64"><name pos:start="37:48" pos:end="37:52">codec</name><operator pos:start="37:53" pos:end="37:54">-&gt;</operator><name pos:start="37:55" pos:end="37:64">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="63:5"><if pos:start="43:5" pos:end="63:5">if <condition pos:start="43:8" pos:end="43:44">(<expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:13">codec</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">codec_id</name></name> <operator pos:start="43:25" pos:end="43:26">==</operator> <name pos:start="43:28" pos:end="43:43">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="43:46" pos:end="63:5">{<block_content pos:start="45:9" pos:end="61:70">

        <decl_stmt pos:start="45:9" pos:end="47:64"><decl pos:start="45:9" pos:end="47:63"><type pos:start="45:9" pos:end="45:35"><name pos:start="45:9" pos:end="45:33">RTPDynamicProtocolHandler</name> <modifier pos:start="45:35" pos:end="45:35">*</modifier></type><name pos:start="45:36" pos:end="45:42">handler</name> <init pos:start="45:44" pos:end="47:63">=

            <expr pos:start="47:13" pos:end="47:63"><call pos:start="47:13" pos:end="47:63"><name pos:start="47:13" pos:end="47:39">ff_rtp_handler_find_by_name</name><argument_list pos:start="47:40" pos:end="47:63">(<argument pos:start="47:41" pos:end="47:43"><expr pos:start="47:41" pos:end="47:43"><name pos:start="47:41" pos:end="47:43">buf</name></expr></argument>, <argument pos:start="47:46" pos:end="47:62"><expr pos:start="47:46" pos:end="47:62"><name pos:start="47:46" pos:end="47:62"><name pos:start="47:46" pos:end="47:50">codec</name><operator pos:start="47:51" pos:end="47:52">-&gt;</operator><name pos:start="47:53" pos:end="47:62">codec_type</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:47"><expr pos:start="49:9" pos:end="49:46"><call pos:start="49:9" pos:end="49:46"><name pos:start="49:9" pos:end="49:24">init_rtp_handler</name><argument_list pos:start="49:25" pos:end="49:46">(<argument pos:start="49:26" pos:end="49:32"><expr pos:start="49:26" pos:end="49:32"><name pos:start="49:26" pos:end="49:32">handler</name></expr></argument>, <argument pos:start="49:35" pos:end="49:41"><expr pos:start="49:35" pos:end="49:41"><name pos:start="49:35" pos:end="49:41">rtsp_st</name></expr></argument>, <argument pos:start="49:44" pos:end="49:45"><expr pos:start="49:44" pos:end="49:45"><name pos:start="49:44" pos:end="49:45">st</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="51:9" pos:end="57:79">/* If no dynamic handler was found, check with the list of standard

         * allocated types, if such a stream for some reason happens to

         * use a private payload type. This isn't handled in rtpdec.c, since

         * the format name from the rtpmap line never is passed into rtpdec. */</comment>

        <if_stmt pos:start="59:9" pos:end="61:70"><if pos:start="59:9" pos:end="61:70">if <condition pos:start="59:12" pos:end="59:38">(<expr pos:start="59:13" pos:end="59:37"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:37"><name pos:start="59:14" pos:end="59:20">rtsp_st</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:37">dynamic_handler</name></name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:70"><block_content pos:start="61:13" pos:end="61:70">

            <expr_stmt pos:start="61:13" pos:end="61:70"><expr pos:start="61:13" pos:end="61:69"><name pos:start="61:13" pos:end="61:27"><name pos:start="61:13" pos:end="61:17">codec</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:27">codec_id</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <call pos:start="61:31" pos:end="61:69"><name pos:start="61:31" pos:end="61:45">ff_rtp_codec_id</name><argument_list pos:start="61:46" pos:end="61:69">(<argument pos:start="61:47" pos:end="61:49"><expr pos:start="61:47" pos:end="61:49"><name pos:start="61:47" pos:end="61:49">buf</name></expr></argument>, <argument pos:start="61:52" pos:end="61:68"><expr pos:start="61:52" pos:end="61:68"><name pos:start="61:52" pos:end="61:68"><name pos:start="61:52" pos:end="61:56">codec</name><operator pos:start="61:57" pos:end="61:58">-&gt;</operator><name pos:start="61:59" pos:end="61:68">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:46"><expr pos:start="67:5" pos:end="67:45"><name pos:start="67:5" pos:end="67:5">c</name> <operator pos:start="67:7" pos:end="67:7">=</operator> <call pos:start="67:9" pos:end="67:45"><name pos:start="67:9" pos:end="67:28">avcodec_find_decoder</name><argument_list pos:start="67:29" pos:end="67:45">(<argument pos:start="67:30" pos:end="67:44"><expr pos:start="67:30" pos:end="67:44"><name pos:start="67:30" pos:end="67:44"><name pos:start="67:30" pos:end="67:34">codec</name><operator pos:start="67:35" pos:end="67:36">-&gt;</operator><name pos:start="67:37" pos:end="67:44">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:26"><if pos:start="69:5" pos:end="71:25">if <condition pos:start="69:8" pos:end="69:21">(<expr pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:9">c</name> <operator pos:start="69:11" pos:end="69:12">&amp;&amp;</operator> <name pos:start="69:14" pos:end="69:20"><name pos:start="69:14" pos:end="69:14">c</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:20">name</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:25"><block_content pos:start="71:9" pos:end="71:25">

        <expr_stmt pos:start="71:9" pos:end="71:25"><expr pos:start="71:9" pos:end="71:24"><name pos:start="71:9" pos:end="71:14">c_name</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:24"><name pos:start="71:18" pos:end="71:18">c</name><operator pos:start="71:19" pos:end="71:20">-&gt;</operator><name pos:start="71:21" pos:end="71:24">name</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="73:5" pos:end="75:26">else<block type="pseudo" pos:start="75:9" pos:end="75:26"><block_content pos:start="75:9" pos:end="75:26">

        <expr_stmt pos:start="75:9" pos:end="75:26"><expr pos:start="75:9" pos:end="75:25"><name pos:start="75:9" pos:end="75:14">c_name</name> <operator pos:start="75:16" pos:end="75:16">=</operator> <literal type="string" pos:start="75:18" pos:end="75:25">"(null)"</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><call pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:16">get_word_sep</name><argument_list pos:start="79:17" pos:end="79:43">(<argument pos:start="79:18" pos:end="79:20"><expr pos:start="79:18" pos:end="79:20"><name pos:start="79:18" pos:end="79:20">buf</name></expr></argument>, <argument pos:start="79:23" pos:end="79:33"><expr pos:start="79:23" pos:end="79:33"><sizeof pos:start="79:23" pos:end="79:33">sizeof<argument_list pos:start="79:29" pos:end="79:33">(<argument pos:start="79:30" pos:end="79:32"><expr pos:start="79:30" pos:end="79:32"><name pos:start="79:30" pos:end="79:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="79:36" pos:end="79:38"><expr pos:start="79:36" pos:end="79:38"><literal type="string" pos:start="79:36" pos:end="79:38">"/"</literal></expr></argument>, <argument pos:start="79:41" pos:end="79:42"><expr pos:start="79:41" pos:end="79:42"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:42">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:18"><expr pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:5">i</name> <operator pos:start="81:7" pos:end="81:7">=</operator> <call pos:start="81:9" pos:end="81:17"><name pos:start="81:9" pos:end="81:12">atoi</name><argument_list pos:start="81:13" pos:end="81:17">(<argument pos:start="81:14" pos:end="81:16"><expr pos:start="81:14" pos:end="81:16"><name pos:start="81:14" pos:end="81:16">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="83:5" pos:end="133:5">switch <condition pos:start="83:12" pos:end="83:30">(<expr pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:29"><name pos:start="83:13" pos:end="83:17">codec</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:29">codec_type</name></name></expr>)</condition> <block pos:start="83:32" pos:end="133:5">{<block_content pos:start="85:5" pos:end="131:14">

    <case pos:start="85:5" pos:end="85:28">case <expr pos:start="85:10" pos:end="85:27"><name pos:start="85:10" pos:end="85:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:68"><expr pos:start="87:9" pos:end="87:67"><call pos:start="87:9" pos:end="87:67"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:67">(<argument pos:start="87:16" pos:end="87:16"><expr pos:start="87:16" pos:end="87:16"><name pos:start="87:16" pos:end="87:16">s</name></expr></argument>, <argument pos:start="87:19" pos:end="87:30"><expr pos:start="87:19" pos:end="87:30"><name pos:start="87:19" pos:end="87:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="87:33" pos:end="87:58"><expr pos:start="87:33" pos:end="87:58"><literal type="string" pos:start="87:33" pos:end="87:58">"audio codec set to: %s\n"</literal></expr></argument>, <argument pos:start="87:61" pos:end="87:66"><expr pos:start="87:61" pos:end="87:66"><name pos:start="87:61" pos:end="87:66">c_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:59"><expr pos:start="89:9" pos:end="89:58"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:13">codec</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:26">sample_rate</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <name pos:start="89:30" pos:end="89:58">RTSP_DEFAULT_AUDIO_SAMPLERATE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:57"><expr pos:start="91:9" pos:end="91:56"><name pos:start="91:9" pos:end="91:23"><name pos:start="91:9" pos:end="91:13">codec</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:23">channels</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <name pos:start="91:27" pos:end="91:56">RTSP_DEFAULT_NB_AUDIO_CHANNELS</name></expr>;</expr_stmt>

        <if_stmt pos:start="93:9" pos:end="107:9"><if pos:start="93:9" pos:end="107:9">if <condition pos:start="93:12" pos:end="93:18">(<expr pos:start="93:13" pos:end="93:17"><name pos:start="93:13" pos:end="93:13">i</name> <operator pos:start="93:15" pos:end="93:15">&gt;</operator> <literal type="number" pos:start="93:17" pos:end="93:17">0</literal></expr>)</condition> <block pos:start="93:20" pos:end="107:9">{<block_content pos:start="95:13" pos:end="105:36">

            <expr_stmt pos:start="95:13" pos:end="95:35"><expr pos:start="95:13" pos:end="95:34"><name pos:start="95:13" pos:end="95:30"><name pos:start="95:13" pos:end="95:17">codec</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:30">sample_rate</name></name> <operator pos:start="95:32" pos:end="95:32">=</operator> <name pos:start="95:34" pos:end="95:34">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:63"><expr pos:start="97:13" pos:end="97:62"><call pos:start="97:13" pos:end="97:62"><name pos:start="97:13" pos:end="97:31">avpriv_set_pts_info</name><argument_list pos:start="97:32" pos:end="97:62">(<argument pos:start="97:33" pos:end="97:34"><expr pos:start="97:33" pos:end="97:34"><name pos:start="97:33" pos:end="97:34">st</name></expr></argument>, <argument pos:start="97:37" pos:end="97:38"><expr pos:start="97:37" pos:end="97:38"><literal type="number" pos:start="97:37" pos:end="97:38">32</literal></expr></argument>, <argument pos:start="97:41" pos:end="97:41"><expr pos:start="97:41" pos:end="97:41"><literal type="number" pos:start="97:41" pos:end="97:41">1</literal></expr></argument>, <argument pos:start="97:44" pos:end="97:61"><expr pos:start="97:44" pos:end="97:61"><name pos:start="97:44" pos:end="97:61"><name pos:start="97:44" pos:end="97:48">codec</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:61">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:52"><expr pos:start="99:13" pos:end="99:51"><call pos:start="99:13" pos:end="99:51"><name pos:start="99:13" pos:end="99:24">get_word_sep</name><argument_list pos:start="99:25" pos:end="99:51">(<argument pos:start="99:26" pos:end="99:28"><expr pos:start="99:26" pos:end="99:28"><name pos:start="99:26" pos:end="99:28">buf</name></expr></argument>, <argument pos:start="99:31" pos:end="99:41"><expr pos:start="99:31" pos:end="99:41"><sizeof pos:start="99:31" pos:end="99:41">sizeof<argument_list pos:start="99:37" pos:end="99:41">(<argument pos:start="99:38" pos:end="99:40"><expr pos:start="99:38" pos:end="99:40"><name pos:start="99:38" pos:end="99:40">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="99:44" pos:end="99:46"><expr pos:start="99:44" pos:end="99:46"><literal type="string" pos:start="99:44" pos:end="99:46">"/"</literal></expr></argument>, <argument pos:start="99:49" pos:end="99:50"><expr pos:start="99:49" pos:end="99:50"><operator pos:start="99:49" pos:end="99:49">&amp;</operator><name pos:start="99:50" pos:end="99:50">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:26"><expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:13">i</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <call pos:start="101:17" pos:end="101:25"><name pos:start="101:17" pos:end="101:20">atoi</name><argument_list pos:start="101:21" pos:end="101:25">(<argument pos:start="101:22" pos:end="101:24"><expr pos:start="101:22" pos:end="101:24"><name pos:start="101:22" pos:end="101:24">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:36"><if pos:start="103:13" pos:end="105:36">if <condition pos:start="103:16" pos:end="103:22">(<expr pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&gt;</operator> <literal type="number" pos:start="103:21" pos:end="103:21">0</literal></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:36"><block_content pos:start="105:17" pos:end="105:36">

                <expr_stmt pos:start="105:17" pos:end="105:36"><expr pos:start="105:17" pos:end="105:35"><name pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:21">codec</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:31">channels</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:35">i</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="109:9" pos:end="111:35"><expr pos:start="109:9" pos:end="111:34"><call pos:start="109:9" pos:end="111:34"><name pos:start="109:9" pos:end="109:14">av_log</name><argument_list pos:start="109:15" pos:end="111:34">(<argument pos:start="109:16" pos:end="109:16"><expr pos:start="109:16" pos:end="109:16"><name pos:start="109:16" pos:end="109:16">s</name></expr></argument>, <argument pos:start="109:19" pos:end="109:30"><expr pos:start="109:19" pos:end="109:30"><name pos:start="109:19" pos:end="109:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="109:33" pos:end="109:63"><expr pos:start="109:33" pos:end="109:63"><literal type="string" pos:start="109:33" pos:end="109:63">"audio samplerate set to: %i\n"</literal></expr></argument>,

               <argument pos:start="111:16" pos:end="111:33"><expr pos:start="111:16" pos:end="111:33"><name pos:start="111:16" pos:end="111:33"><name pos:start="111:16" pos:end="111:20">codec</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:33">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="115:32"><expr pos:start="113:9" pos:end="115:31"><call pos:start="113:9" pos:end="115:31"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:31">(<argument pos:start="113:16" pos:end="113:16"><expr pos:start="113:16" pos:end="113:16"><name pos:start="113:16" pos:end="113:16">s</name></expr></argument>, <argument pos:start="113:19" pos:end="113:30"><expr pos:start="113:19" pos:end="113:30"><name pos:start="113:19" pos:end="113:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="113:33" pos:end="113:61"><expr pos:start="113:33" pos:end="113:61"><literal type="string" pos:start="113:33" pos:end="113:61">"audio channels set to: %i\n"</literal></expr></argument>,

               <argument pos:start="115:16" pos:end="115:30"><expr pos:start="115:16" pos:end="115:30"><name pos:start="115:16" pos:end="115:30"><name pos:start="115:16" pos:end="115:20">codec</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:30">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:28">case <expr pos:start="119:10" pos:end="119:27"><name pos:start="119:10" pos:end="119:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:68"><expr pos:start="121:9" pos:end="121:67"><call pos:start="121:9" pos:end="121:67"><name pos:start="121:9" pos:end="121:14">av_log</name><argument_list pos:start="121:15" pos:end="121:67">(<argument pos:start="121:16" pos:end="121:16"><expr pos:start="121:16" pos:end="121:16"><name pos:start="121:16" pos:end="121:16">s</name></expr></argument>, <argument pos:start="121:19" pos:end="121:30"><expr pos:start="121:19" pos:end="121:30"><name pos:start="121:19" pos:end="121:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="121:33" pos:end="121:58"><expr pos:start="121:33" pos:end="121:58"><literal type="string" pos:start="121:33" pos:end="121:58">"video codec set to: %s\n"</literal></expr></argument>, <argument pos:start="121:61" pos:end="121:66"><expr pos:start="121:61" pos:end="121:66"><name pos:start="121:61" pos:end="121:66">c_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="125:46"><if pos:start="123:9" pos:end="125:46">if <condition pos:start="123:12" pos:end="123:18">(<expr pos:start="123:13" pos:end="123:17"><name pos:start="123:13" pos:end="123:13">i</name> <operator pos:start="123:15" pos:end="123:15">&gt;</operator> <literal type="number" pos:start="123:17" pos:end="123:17">0</literal></expr>)</condition><block type="pseudo" pos:start="125:13" pos:end="125:46"><block_content pos:start="125:13" pos:end="125:46">

            <expr_stmt pos:start="125:13" pos:end="125:46"><expr pos:start="125:13" pos:end="125:45"><call pos:start="125:13" pos:end="125:45"><name pos:start="125:13" pos:end="125:31">avpriv_set_pts_info</name><argument_list pos:start="125:32" pos:end="125:45">(<argument pos:start="125:33" pos:end="125:34"><expr pos:start="125:33" pos:end="125:34"><name pos:start="125:33" pos:end="125:34">st</name></expr></argument>, <argument pos:start="125:37" pos:end="125:38"><expr pos:start="125:37" pos:end="125:38"><literal type="number" pos:start="125:37" pos:end="125:38">32</literal></expr></argument>, <argument pos:start="125:41" pos:end="125:41"><expr pos:start="125:41" pos:end="125:41"><literal type="number" pos:start="125:41" pos:end="125:41">1</literal></expr></argument>, <argument pos:start="125:44" pos:end="125:44"><expr pos:start="125:44" pos:end="125:44"><name pos:start="125:44" pos:end="125:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="127:9" pos:end="127:14">break;</break>

    <default pos:start="129:5" pos:end="129:12">default:</default>

        <break pos:start="131:9" pos:end="131:14">break;</break>

    </block_content>}</block></switch>

    <if_stmt pos:start="135:5" pos:end="139:74"><if pos:start="135:5" pos:end="139:74">if <condition pos:start="135:8" pos:end="135:67">(<expr pos:start="135:9" pos:end="135:66"><name pos:start="135:9" pos:end="135:32"><name pos:start="135:9" pos:end="135:15">rtsp_st</name><operator pos:start="135:16" pos:end="135:17">-&gt;</operator><name pos:start="135:18" pos:end="135:32">dynamic_handler</name></name> <operator pos:start="135:34" pos:end="135:35">&amp;&amp;</operator> <name pos:start="135:37" pos:end="135:66"><name pos:start="135:37" pos:end="135:43">rtsp_st</name><operator pos:start="135:44" pos:end="135:45">-&gt;</operator><name pos:start="135:46" pos:end="135:60">dynamic_handler</name><operator pos:start="135:61" pos:end="135:62">-&gt;</operator><name pos:start="135:63" pos:end="135:66">init</name></name></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="139:74"><block_content pos:start="137:9" pos:end="139:74">

        <expr_stmt pos:start="137:9" pos:end="139:74"><expr pos:start="137:9" pos:end="139:73"><call pos:start="137:9" pos:end="139:73"><name pos:start="137:9" pos:end="137:38"><name pos:start="137:9" pos:end="137:15">rtsp_st</name><operator pos:start="137:16" pos:end="137:17">-&gt;</operator><name pos:start="137:18" pos:end="137:32">dynamic_handler</name><operator pos:start="137:33" pos:end="137:34">-&gt;</operator><name pos:start="137:35" pos:end="137:38">init</name></name><argument_list pos:start="137:39" pos:end="139:73">(<argument pos:start="137:40" pos:end="137:40"><expr pos:start="137:40" pos:end="137:40"><name pos:start="137:40" pos:end="137:40">s</name></expr></argument>, <argument pos:start="137:43" pos:end="137:51"><expr pos:start="137:43" pos:end="137:51"><name pos:start="137:43" pos:end="137:51"><name pos:start="137:43" pos:end="137:44">st</name><operator pos:start="137:45" pos:end="137:46">-&gt;</operator><name pos:start="137:47" pos:end="137:51">index</name></name></expr></argument>,

                                       <argument pos:start="139:40" pos:end="139:72"><expr pos:start="139:40" pos:end="139:72"><name pos:start="139:40" pos:end="139:72"><name pos:start="139:40" pos:end="139:46">rtsp_st</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:72">dynamic_protocol_context</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
