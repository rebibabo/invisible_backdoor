<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7280.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:24">bdrv_iterate_format</name><parameter_list pos:start="1:25" pos:end="3:38">(<parameter pos:start="1:26" pos:end="1:67"><function_decl pos:start="1:26" pos:end="1:67"><type pos:start="1:26" pos:end="1:29"><name pos:start="1:26" pos:end="1:29">void</name></type> (<modifier pos:start="1:32" pos:end="1:32">*</modifier><name pos:start="1:33" pos:end="1:34">it</name>)<parameter_list pos:start="1:36" pos:end="1:67">(<parameter pos:start="1:37" pos:end="1:48"><decl pos:start="1:37" pos:end="1:48"><type pos:start="1:37" pos:end="1:48"><name pos:start="1:37" pos:end="1:40">void</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:48">opaque</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:66"><decl pos:start="1:51" pos:end="1:66"><type pos:start="1:51" pos:end="1:66"><specifier pos:start="1:51" pos:end="1:55">const</specifier> <name pos:start="1:57" pos:end="1:60">char</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">name</name></decl></parameter>)</parameter_list></function_decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:29">void</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:37">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:20">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">BlockDriver</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">count</name> <init pos:start="9:15" pos:end="9:17">= <expr pos:start="9:17" pos:end="9:17"><literal type="number" pos:start="9:17" pos:end="9:17">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier><modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:24">formats</name> <init pos:start="11:26" pos:end="11:31">= <expr pos:start="11:28" pos:end="11:31"><name pos:start="11:28" pos:end="11:31">NULL</name></expr></init></decl>;</decl_stmt>



    <macro pos:start="15:5" pos:end="15:43"><name pos:start="15:5" pos:end="15:17">QLIST_FOREACH</name><argument_list pos:start="15:18" pos:end="15:43">(<argument pos:start="15:19" pos:end="15:21">drv</argument>, <argument pos:start="15:24" pos:end="15:36">&amp;bdrv_drivers</argument>, <argument pos:start="15:39" pos:end="15:42">list</argument>)</argument_list></macro> <block pos:start="15:45" pos:end="43:5">{<block_content pos:start="17:9" pos:end="41:9">

        <if_stmt pos:start="17:9" pos:end="41:9"><if pos:start="17:9" pos:end="41:9">if <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:15">drv</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:28">format_name</name></name></expr>)</condition> <block pos:start="17:31" pos:end="41:9">{<block_content pos:start="19:13" pos:end="39:13">

            <decl_stmt pos:start="19:13" pos:end="19:31"><decl pos:start="19:13" pos:end="19:30"><type pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">bool</name></type> <name pos:start="19:18" pos:end="19:22">found</name> <init pos:start="19:24" pos:end="19:30">= <expr pos:start="19:26" pos:end="19:30"><name pos:start="19:26" pos:end="19:30">false</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:26"><decl pos:start="21:13" pos:end="21:25"><type pos:start="21:13" pos:end="21:15"><name pos:start="21:13" pos:end="21:15">int</name></type> <name pos:start="21:17" pos:end="21:17">i</name> <init pos:start="21:19" pos:end="21:25">= <expr pos:start="21:21" pos:end="21:25"><name pos:start="21:21" pos:end="21:25">count</name></expr></init></decl>;</decl_stmt>

            <while pos:start="23:13" pos:end="27:13">while <condition pos:start="23:19" pos:end="23:42">(<expr pos:start="23:20" pos:end="23:41"><name pos:start="23:20" pos:end="23:26">formats</name> <operator pos:start="23:28" pos:end="23:29">&amp;&amp;</operator> <name pos:start="23:31" pos:end="23:31">i</name> <operator pos:start="23:33" pos:end="23:34">&amp;&amp;</operator> <operator pos:start="23:36" pos:end="23:36">!</operator><name pos:start="23:37" pos:end="23:41">found</name></expr>)</condition> <block pos:start="23:44" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:64">

                <expr_stmt pos:start="25:17" pos:end="25:64"><expr pos:start="25:17" pos:end="25:63"><name pos:start="25:17" pos:end="25:21">found</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <operator pos:start="25:25" pos:end="25:25">!</operator><call pos:start="25:26" pos:end="25:63"><name pos:start="25:26" pos:end="25:31">strcmp</name><argument_list pos:start="25:32" pos:end="25:63">(<argument pos:start="25:33" pos:end="25:44"><expr pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:44"><name pos:start="25:33" pos:end="25:39">formats</name><index pos:start="25:40" pos:end="25:44">[<expr pos:start="25:41" pos:end="25:43"><operator pos:start="25:41" pos:end="25:42">--</operator><name pos:start="25:43" pos:end="25:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="25:47" pos:end="25:62"><expr pos:start="25:47" pos:end="25:62"><name pos:start="25:47" pos:end="25:62"><name pos:start="25:47" pos:end="25:49">drv</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:62">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></while>



            <if_stmt pos:start="31:13" pos:end="39:13"><if pos:start="31:13" pos:end="39:13">if <condition pos:start="31:16" pos:end="31:23">(<expr pos:start="31:17" pos:end="31:22"><operator pos:start="31:17" pos:end="31:17">!</operator><name pos:start="31:18" pos:end="31:22">found</name></expr>)</condition> <block pos:start="31:25" pos:end="39:13">{<block_content pos:start="33:17" pos:end="37:45">

                <expr_stmt pos:start="33:17" pos:end="33:75"><expr pos:start="33:17" pos:end="33:74"><name pos:start="33:17" pos:end="33:23">formats</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:74"><name pos:start="33:27" pos:end="33:35">g_realloc</name><argument_list pos:start="33:36" pos:end="33:74">(<argument pos:start="33:37" pos:end="33:43"><expr pos:start="33:37" pos:end="33:43"><name pos:start="33:37" pos:end="33:43">formats</name></expr></argument>, <argument pos:start="33:46" pos:end="33:73"><expr pos:start="33:46" pos:end="33:73"><operator pos:start="33:46" pos:end="33:46">(</operator><name pos:start="33:47" pos:end="33:51">count</name> <operator pos:start="33:53" pos:end="33:53">+</operator> <literal type="number" pos:start="33:55" pos:end="33:55">1</literal><operator pos:start="33:56" pos:end="33:56">)</operator> <operator pos:start="33:58" pos:end="33:58">*</operator> <sizeof pos:start="33:60" pos:end="33:73">sizeof<argument_list pos:start="33:66" pos:end="33:73">(<argument pos:start="33:67" pos:end="33:72"><expr pos:start="33:67" pos:end="33:72"><name pos:start="33:67" pos:end="33:70">char</name> <operator pos:start="33:72" pos:end="33:72">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="35:17" pos:end="35:52"><expr pos:start="35:17" pos:end="35:51"><name pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:23">formats</name><index pos:start="35:24" pos:end="35:32">[<expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:29">count</name><operator pos:start="35:30" pos:end="35:31">++</operator></expr>]</index></name> <operator pos:start="35:34" pos:end="35:34">=</operator> <name pos:start="35:36" pos:end="35:51"><name pos:start="35:36" pos:end="35:38">drv</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">format_name</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="37:17" pos:end="37:45"><expr pos:start="37:17" pos:end="37:44"><call pos:start="37:17" pos:end="37:44"><name pos:start="37:17" pos:end="37:18">it</name><argument_list pos:start="37:19" pos:end="37:44">(<argument pos:start="37:20" pos:end="37:25"><expr pos:start="37:20" pos:end="37:25"><name pos:start="37:20" pos:end="37:25">opaque</name></expr></argument>, <argument pos:start="37:28" pos:end="37:43"><expr pos:start="37:28" pos:end="37:43"><name pos:start="37:28" pos:end="37:43"><name pos:start="37:28" pos:end="37:30">drv</name><operator pos:start="37:31" pos:end="37:32">-&gt;</operator><name pos:start="37:33" pos:end="37:43">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="45:5" pos:end="45:20"><expr pos:start="45:5" pos:end="45:19"><call pos:start="45:5" pos:end="45:19"><name pos:start="45:5" pos:end="45:10">g_free</name><argument_list pos:start="45:11" pos:end="45:19">(<argument pos:start="45:12" pos:end="45:18"><expr pos:start="45:12" pos:end="45:18"><name pos:start="45:12" pos:end="45:18">formats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
