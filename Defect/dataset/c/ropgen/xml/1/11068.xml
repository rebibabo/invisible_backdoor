<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11068.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">mv_read_packet</name><parameter_list pos:start="1:26" pos:end="1:64">(<parameter pos:start="1:27" pos:end="1:48"><decl pos:start="1:27" pos:end="1:48"><type pos:start="1:27" pos:end="1:48"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:48">avctx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:63"><decl pos:start="1:51" pos:end="1:63"><type pos:start="1:51" pos:end="1:63"><name pos:start="1:51" pos:end="1:58">AVPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:63">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">MvContext</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:17">mv</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">AVIOContext</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:19">pb</name> <init pos:start="7:21" pos:end="7:31">= <expr pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:31"><name pos:start="7:23" pos:end="7:27">avctx</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name> <init pos:start="9:18" pos:end="9:51">= <expr pos:start="9:20" pos:end="9:51"><name pos:start="9:20" pos:end="9:51"><name pos:start="9:20" pos:end="9:24">avctx</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:33">streams</name><index pos:start="9:34" pos:end="9:51">[<expr pos:start="9:35" pos:end="9:50"><name pos:start="9:35" pos:end="9:50"><name pos:start="9:35" pos:end="9:36">mv</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:50">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:24"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:22">AVIndexEntry</name> <modifier pos:start="11:24" pos:end="11:24">*</modifier></type><name pos:start="11:25" pos:end="11:29">index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">frame</name> <init pos:start="13:15" pos:end="13:43">= <expr pos:start="13:17" pos:end="13:43"><name pos:start="13:17" pos:end="13:43"><name pos:start="13:17" pos:end="13:18">mv</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:25">frame</name><index pos:start="13:26" pos:end="13:43">[<expr pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:42"><name pos:start="13:27" pos:end="13:28">mv</name><operator pos:start="13:29" pos:end="13:30">-&gt;</operator><name pos:start="13:31" pos:end="13:42">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:16">pos</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="79:5"><if pos:start="21:5" pos:end="65:5">if <condition pos:start="21:8" pos:end="21:37">(<expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:13">frame</name> <operator pos:start="21:15" pos:end="21:15">&lt;</operator> <name pos:start="21:17" pos:end="21:36"><name pos:start="21:17" pos:end="21:18">st</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:36">nb_index_entries</name></name></expr>)</condition> <block pos:start="21:39" pos:end="65:5">{<block_content pos:start="23:9" pos:end="63:26">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:13">index</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:41"><name pos:start="23:18" pos:end="23:19">st</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:34">index_entries</name><index pos:start="23:35" pos:end="23:41">[<expr pos:start="23:36" pos:end="23:40"><name pos:start="23:36" pos:end="23:40">frame</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:30"><expr pos:start="25:9" pos:end="25:29"><name pos:start="25:9" pos:end="25:11">pos</name>   <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:25">avio_tell</name><argument_list pos:start="25:26" pos:end="25:29">(<argument pos:start="25:27" pos:end="25:28"><expr pos:start="25:27" pos:end="25:28"><name pos:start="25:27" pos:end="25:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="43:9"><if pos:start="27:9" pos:end="29:44">if <condition pos:start="27:12" pos:end="27:29">(<expr pos:start="27:13" pos:end="27:28"><name pos:start="27:13" pos:end="27:22"><name pos:start="27:13" pos:end="27:17">index</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:22">pos</name></name> <operator pos:start="27:24" pos:end="27:24">&gt;</operator> <name pos:start="27:26" pos:end="27:28">pos</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:44"><block_content pos:start="29:13" pos:end="29:44">

            <expr_stmt pos:start="29:13" pos:end="29:44"><expr pos:start="29:13" pos:end="29:43"><call pos:start="29:13" pos:end="29:43"><name pos:start="29:13" pos:end="29:21">avio_skip</name><argument_list pos:start="29:22" pos:end="29:43">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">pb</name></expr></argument>, <argument pos:start="29:27" pos:end="29:42"><expr pos:start="29:27" pos:end="29:42"><name pos:start="29:27" pos:end="29:36"><name pos:start="29:27" pos:end="29:31">index</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:36">pos</name></name> <operator pos:start="29:38" pos:end="29:38">-</operator> <name pos:start="29:40" pos:end="29:42">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="31:9" pos:end="43:9">else if <condition pos:start="31:17" pos:end="31:34">(<expr pos:start="31:18" pos:end="31:33"><name pos:start="31:18" pos:end="31:27"><name pos:start="31:18" pos:end="31:22">index</name><operator pos:start="31:23" pos:end="31:24">-&gt;</operator><name pos:start="31:25" pos:end="31:27">pos</name></name> <operator pos:start="31:29" pos:end="31:29">&lt;</operator> <name pos:start="31:31" pos:end="31:33">pos</name></expr>)</condition> <block pos:start="31:36" pos:end="43:9">{<block_content pos:start="33:13" pos:end="41:27">

            <if_stmt pos:start="33:13" pos:end="35:36"><if pos:start="33:13" pos:end="35:36">if <condition pos:start="33:16" pos:end="33:30">(<expr pos:start="33:17" pos:end="33:29"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:29"><name pos:start="33:18" pos:end="33:19">pb</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:29">seekable</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:36"><block_content pos:start="35:17" pos:end="35:36">

                <return pos:start="35:17" pos:end="35:36">return <expr pos:start="35:24" pos:end="35:35"><call pos:start="35:24" pos:end="35:35"><name pos:start="35:24" pos:end="35:30">AVERROR</name><argument_list pos:start="35:31" pos:end="35:35">(<argument pos:start="35:32" pos:end="35:34"><expr pos:start="35:32" pos:end="35:34"><name pos:start="35:32" pos:end="35:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:53"><name pos:start="37:19" pos:end="37:27">avio_seek</name><argument_list pos:start="37:28" pos:end="37:53">(<argument pos:start="37:29" pos:end="37:30"><expr pos:start="37:29" pos:end="37:30"><name pos:start="37:29" pos:end="37:30">pb</name></expr></argument>, <argument pos:start="37:33" pos:end="37:42"><expr pos:start="37:33" pos:end="37:42"><name pos:start="37:33" pos:end="37:42"><name pos:start="37:33" pos:end="37:37">index</name><operator pos:start="37:38" pos:end="37:39">-&gt;</operator><name pos:start="37:40" pos:end="37:42">pos</name></name></expr></argument>, <argument pos:start="37:45" pos:end="37:52"><expr pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:52">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="41:27"><if pos:start="39:13" pos:end="41:27">if <condition pos:start="39:16" pos:end="39:24">(<expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">ret</name> <operator pos:start="39:21" pos:end="39:21">&lt;</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition><block type="pseudo" pos:start="41:17" pos:end="41:27"><block_content pos:start="41:17" pos:end="41:27">

                <return pos:start="41:17" pos:end="41:27">return <expr pos:start="41:24" pos:end="41:26"><name pos:start="41:24" pos:end="41:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:50"><expr pos:start="45:9" pos:end="45:49"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:49"><name pos:start="45:15" pos:end="45:27">av_get_packet</name><argument_list pos:start="45:28" pos:end="45:49">(<argument pos:start="45:29" pos:end="45:30"><expr pos:start="45:29" pos:end="45:30"><name pos:start="45:29" pos:end="45:30">pb</name></expr></argument>, <argument pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:35">pkt</name></expr></argument>, <argument pos:start="45:38" pos:end="45:48"><expr pos:start="45:38" pos:end="45:48"><name pos:start="45:38" pos:end="45:48"><name pos:start="45:38" pos:end="45:42">index</name><operator pos:start="45:43" pos:end="45:44">-&gt;</operator><name pos:start="45:45" pos:end="45:48">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="49:23"><if pos:start="47:9" pos:end="49:23">if <condition pos:start="47:12" pos:end="47:20">(<expr pos:start="47:13" pos:end="47:19"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <literal type="number" pos:start="47:19" pos:end="47:19">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:23"><block_content pos:start="49:13" pos:end="49:23">

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:45"><expr pos:start="53:9" pos:end="53:44"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:11">pkt</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:25">stream_index</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:44"><name pos:start="53:29" pos:end="53:30">mv</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:44">stream_index</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:45"><expr pos:start="55:9" pos:end="55:44"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:11">pkt</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:16">pts</name></name>          <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:44"><name pos:start="55:29" pos:end="55:33">index</name><operator pos:start="55:34" pos:end="55:35">-&gt;</operator><name pos:start="55:36" pos:end="55:44">timestamp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:44"><expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:11">pkt</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:18">flags</name></name>       <operator pos:start="57:26" pos:end="57:27">|=</operator> <name pos:start="57:29" pos:end="57:43">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:38"><expr pos:start="61:9" pos:end="61:37"><name pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:10">mv</name><operator pos:start="61:11" pos:end="61:12">-&gt;</operator><name pos:start="61:13" pos:end="61:17">frame</name><index pos:start="61:18" pos:end="61:35">[<expr pos:start="61:19" pos:end="61:34"><name pos:start="61:19" pos:end="61:34"><name pos:start="61:19" pos:end="61:20">mv</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:34">stream_index</name></name></expr>]</index></name><operator pos:start="61:36" pos:end="61:37">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:21"><name pos:start="63:9" pos:end="63:10">mv</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:21">eof_count</name></name> <operator pos:start="63:23" pos:end="63:23">=</operator> <literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="79:5">else <block pos:start="65:12" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:31">

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:10">mv</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:21">eof_count</name></name><operator pos:start="67:22" pos:end="67:23">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:31"><if pos:start="69:9" pos:end="71:31">if <condition pos:start="69:12" pos:end="69:47">(<expr pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:14">mv</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:25">eof_count</name></name> <operator pos:start="69:27" pos:end="69:28">&gt;=</operator> <name pos:start="69:30" pos:end="69:46"><name pos:start="69:30" pos:end="69:34">avctx</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:46">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:31"><block_content pos:start="71:13" pos:end="71:31">

            <return pos:start="71:13" pos:end="71:31">return <expr pos:start="71:20" pos:end="71:30"><name pos:start="71:20" pos:end="71:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <comment type="line" pos:start="75:9" pos:end="75:45">// avoid returning 0 without a packet</comment>

        <return pos:start="77:9" pos:end="77:31">return <expr pos:start="77:16" pos:end="77:30"><call pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:22">AVERROR</name><argument_list pos:start="77:23" pos:end="77:30">(<argument pos:start="77:24" pos:end="77:29"><expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:29">EAGAIN</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:20"><name pos:start="83:5" pos:end="83:6">mv</name><operator pos:start="83:7" pos:end="83:8">-&gt;</operator><name pos:start="83:9" pos:end="83:20">stream_index</name></name><operator pos:start="83:21" pos:end="83:22">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:29"><if pos:start="85:5" pos:end="87:29">if <condition pos:start="85:8" pos:end="85:46">(<expr pos:start="85:9" pos:end="85:45"><name pos:start="85:9" pos:end="85:24"><name pos:start="85:9" pos:end="85:10">mv</name><operator pos:start="85:11" pos:end="85:12">-&gt;</operator><name pos:start="85:13" pos:end="85:24">stream_index</name></name> <operator pos:start="85:26" pos:end="85:27">&gt;=</operator> <name pos:start="85:29" pos:end="85:45"><name pos:start="85:29" pos:end="85:33">avctx</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:45">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:29"><block_content pos:start="87:9" pos:end="87:29">

        <expr_stmt pos:start="87:9" pos:end="87:29"><expr pos:start="87:9" pos:end="87:28"><name pos:start="87:9" pos:end="87:24"><name pos:start="87:9" pos:end="87:10">mv</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:24">stream_index</name></name> <operator pos:start="87:26" pos:end="87:26">=</operator> <literal type="number" pos:start="87:28" pos:end="87:28">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="91:5" pos:end="91:13">return <expr pos:start="91:12" pos:end="91:12"><literal type="number" pos:start="91:12" pos:end="91:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
