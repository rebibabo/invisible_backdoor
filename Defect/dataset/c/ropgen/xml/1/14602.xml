<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14602.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:26"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">uart_write</name><parameter_list pos:start="1:23" pos:end="3:56">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:35"><name pos:start="1:24" pos:end="1:27">void</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:35">opaque</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:43">hwaddr</name></type> <name pos:start="1:45" pos:end="1:50">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:26">{<block_content pos:start="7:5" pos:end="83:26">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">CadenceUARTState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:23">s</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:74"><expr pos:start="11:5" pos:end="11:73"><call pos:start="11:5" pos:end="11:73"><name pos:start="11:5" pos:end="11:12">DB_PRINT</name><argument_list pos:start="11:13" pos:end="11:73">(<argument pos:start="11:14" pos:end="11:37"><expr pos:start="11:14" pos:end="11:37"><literal type="string" pos:start="11:14" pos:end="11:37">" offset:%x data:%08x\n"</literal></expr></argument>, <argument pos:start="11:40" pos:end="11:55"><expr pos:start="11:40" pos:end="11:55"><operator pos:start="11:40" pos:end="11:40">(</operator><name pos:start="11:41" pos:end="11:48">unsigned</name><operator pos:start="11:49" pos:end="11:49">)</operator><name pos:start="11:50" pos:end="11:55">offset</name></expr></argument>, <argument pos:start="11:58" pos:end="11:72"><expr pos:start="11:58" pos:end="11:72"><operator pos:start="11:58" pos:end="11:58">(</operator><name pos:start="11:59" pos:end="11:66">unsigned</name><operator pos:start="11:67" pos:end="11:67">)</operator><name pos:start="11:68" pos:end="11:72">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:10">offset</name> <operator pos:start="13:12" pos:end="13:14">&gt;&gt;=</operator> <literal type="number" pos:start="13:16" pos:end="13:16">2</literal></expr>;</expr_stmt>




    <switch pos:start="18:5" pos:end="83:26">switch <condition pos:start="18:12" pos:end="18:19">(<expr pos:start="18:13" pos:end="18:18"><name pos:start="18:13" pos:end="18:18">offset</name></expr>)</condition> <block pos:start="18:21" pos:end="83:26">{<block_content pos:start="20:5" pos:end="83:26">

    <case pos:start="20:5" pos:end="20:15">case <expr pos:start="20:10" pos:end="20:14"><name pos:start="20:10" pos:end="20:14">R_IER</name></expr>:</case> <comment type="block" pos:start="20:17" pos:end="20:35">/* ier (wts imr) */</comment>

        <expr_stmt pos:start="22:9" pos:end="22:29"><expr pos:start="22:9" pos:end="22:28"><name pos:start="22:9" pos:end="22:19"><name pos:start="22:9" pos:end="22:9">s</name><operator pos:start="22:10" pos:end="22:11">-&gt;</operator><name pos:start="22:12" pos:end="22:12">r</name><index pos:start="22:13" pos:end="22:19">[<expr pos:start="22:14" pos:end="22:18"><name pos:start="22:14" pos:end="22:18">R_IMR</name></expr>]</index></name> <operator pos:start="22:21" pos:end="22:22">|=</operator> <name pos:start="22:24" pos:end="22:28">value</name></expr>;</expr_stmt>

        <break pos:start="24:9" pos:end="24:14">break;</break>

    <case pos:start="26:5" pos:end="26:15">case <expr pos:start="26:10" pos:end="26:14"><name pos:start="26:10" pos:end="26:14">R_IDR</name></expr>:</case> <comment type="block" pos:start="26:17" pos:end="26:35">/* idr (wtc imr) */</comment>

        <expr_stmt pos:start="28:9" pos:end="28:30"><expr pos:start="28:9" pos:end="28:29"><name pos:start="28:9" pos:end="28:19"><name pos:start="28:9" pos:end="28:9">s</name><operator pos:start="28:10" pos:end="28:11">-&gt;</operator><name pos:start="28:12" pos:end="28:12">r</name><index pos:start="28:13" pos:end="28:19">[<expr pos:start="28:14" pos:end="28:18"><name pos:start="28:14" pos:end="28:18">R_IMR</name></expr>]</index></name> <operator pos:start="28:21" pos:end="28:22">&amp;=</operator> <operator pos:start="28:24" pos:end="28:24">~</operator><name pos:start="28:25" pos:end="28:29">value</name></expr>;</expr_stmt>

        <break pos:start="30:9" pos:end="30:14">break;</break>

    <case pos:start="32:5" pos:end="32:15">case <expr pos:start="32:10" pos:end="32:14"><name pos:start="32:10" pos:end="32:14">R_IMR</name></expr>:</case> <comment type="block" pos:start="32:17" pos:end="32:37">/* imr (read only) */</comment>

        <break pos:start="34:9" pos:end="34:14">break;</break>

    <case pos:start="36:5" pos:end="36:16">case <expr pos:start="36:10" pos:end="36:15"><name pos:start="36:10" pos:end="36:15">R_CISR</name></expr>:</case> <comment type="block" pos:start="36:18" pos:end="36:33">/* cisr (wtc) */</comment>

        <expr_stmt pos:start="38:9" pos:end="38:31"><expr pos:start="38:9" pos:end="38:30"><name pos:start="38:9" pos:end="38:20"><name pos:start="38:9" pos:end="38:9">s</name><operator pos:start="38:10" pos:end="38:11">-&gt;</operator><name pos:start="38:12" pos:end="38:12">r</name><index pos:start="38:13" pos:end="38:20">[<expr pos:start="38:14" pos:end="38:19"><name pos:start="38:14" pos:end="38:19">R_CISR</name></expr>]</index></name> <operator pos:start="38:22" pos:end="38:23">&amp;=</operator> <operator pos:start="38:25" pos:end="38:25">~</operator><name pos:start="38:26" pos:end="38:30">value</name></expr>;</expr_stmt>

        <break pos:start="40:9" pos:end="40:14">break;</break>

    <case pos:start="42:5" pos:end="42:17">case <expr pos:start="42:10" pos:end="42:16"><name pos:start="42:10" pos:end="42:16">R_TX_RX</name></expr>:</case> <comment type="block" pos:start="42:19" pos:end="42:30">/* UARTDR */</comment>

        <switch pos:start="44:9" pos:end="83:26">switch <condition pos:start="44:16" pos:end="44:44">(<expr pos:start="44:17" pos:end="44:43"><name pos:start="44:17" pos:end="44:26"><name pos:start="44:17" pos:end="44:17">s</name><operator pos:start="44:18" pos:end="44:19">-&gt;</operator><name pos:start="44:20" pos:end="44:20">r</name><index pos:start="44:21" pos:end="44:26">[<expr pos:start="44:22" pos:end="44:25"><name pos:start="44:22" pos:end="44:25">R_MR</name></expr>]</index></name> <operator pos:start="44:28" pos:end="44:28">&amp;</operator> <name pos:start="44:30" pos:end="44:43">UART_MR_CHMODE</name></expr>)</condition> <block pos:start="44:46" pos:end="83:26">{<block_content pos:start="46:9" pos:end="83:26">

        <case pos:start="46:9" pos:end="46:25">case <expr pos:start="46:14" pos:end="46:24"><name pos:start="46:14" pos:end="46:24">NORMAL_MODE</name></expr>:</case>

            <expr_stmt pos:start="48:13" pos:end="48:57"><expr pos:start="48:13" pos:end="48:56"><call pos:start="48:13" pos:end="48:56"><name pos:start="48:13" pos:end="48:30">uart_write_tx_fifo</name><argument_list pos:start="48:31" pos:end="48:56">(<argument pos:start="48:32" pos:end="48:32"><expr pos:start="48:32" pos:end="48:32"><name pos:start="48:32" pos:end="48:32">s</name></expr></argument>, <argument pos:start="48:35" pos:end="48:52"><expr pos:start="48:35" pos:end="48:52"><operator pos:start="48:35" pos:end="48:35">(</operator><name pos:start="48:36" pos:end="48:42">uint8_t</name> <operator pos:start="48:44" pos:end="48:44">*</operator><operator pos:start="48:45" pos:end="48:45">)</operator> <operator pos:start="48:47" pos:end="48:47">&amp;</operator><name pos:start="48:48" pos:end="48:52">value</name></expr></argument>, <argument pos:start="48:55" pos:end="48:55"><expr pos:start="48:55" pos:end="48:55"><literal type="number" pos:start="48:55" pos:end="48:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="50:13" pos:end="50:18">break;</break>

        <case pos:start="52:9" pos:end="52:28">case <expr pos:start="52:14" pos:end="52:27"><name pos:start="52:14" pos:end="52:27">LOCAL_LOOPBACK</name></expr>:</case>

            <expr_stmt pos:start="54:13" pos:end="54:62"><expr pos:start="54:13" pos:end="54:61"><call pos:start="54:13" pos:end="54:61"><name pos:start="54:13" pos:end="54:30">uart_write_rx_fifo</name><argument_list pos:start="54:31" pos:end="54:61">(<argument pos:start="54:32" pos:end="54:37"><expr pos:start="54:32" pos:end="54:37"><name pos:start="54:32" pos:end="54:37">opaque</name></expr></argument>, <argument pos:start="54:40" pos:end="54:57"><expr pos:start="54:40" pos:end="54:57"><operator pos:start="54:40" pos:end="54:40">(</operator><name pos:start="54:41" pos:end="54:47">uint8_t</name> <operator pos:start="54:49" pos:end="54:49">*</operator><operator pos:start="54:50" pos:end="54:50">)</operator> <operator pos:start="54:52" pos:end="54:52">&amp;</operator><name pos:start="54:53" pos:end="54:57">value</name></expr></argument>, <argument pos:start="54:60" pos:end="54:60"><expr pos:start="54:60" pos:end="54:60"><literal type="number" pos:start="54:60" pos:end="54:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="56:13" pos:end="56:18">break;</break>


        <break pos:start="59:9" pos:end="59:14">break;</break>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:12">r</name><index pos:start="63:13" pos:end="63:20">[<expr pos:start="63:14" pos:end="63:19"><name pos:start="63:14" pos:end="63:19">offset</name></expr>]</index></name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:28">value</name></expr>;</expr_stmt>




    <switch pos:start="68:5" pos:end="83:26">switch <condition pos:start="68:12" pos:end="68:19">(<expr pos:start="68:13" pos:end="68:18"><name pos:start="68:13" pos:end="68:18">offset</name></expr>)</condition> <block pos:start="68:21" pos:end="83:26">{<block_content pos:start="70:5" pos:end="83:26">

    <case pos:start="70:5" pos:end="70:14">case <expr pos:start="70:10" pos:end="70:13"><name pos:start="70:10" pos:end="70:13">R_CR</name></expr>:</case>

        <expr_stmt pos:start="72:9" pos:end="72:28"><expr pos:start="72:9" pos:end="72:27"><call pos:start="72:9" pos:end="72:27"><name pos:start="72:9" pos:end="72:24">uart_ctrl_update</name><argument_list pos:start="72:25" pos:end="72:27">(<argument pos:start="72:26" pos:end="72:26"><expr pos:start="72:26" pos:end="72:26"><name pos:start="72:26" pos:end="72:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="74:9" pos:end="74:14">break;</break>

    <case pos:start="76:5" pos:end="76:14">case <expr pos:start="76:10" pos:end="76:13"><name pos:start="76:10" pos:end="76:13">R_MR</name></expr>:</case>

        <expr_stmt pos:start="78:9" pos:end="78:33"><expr pos:start="78:9" pos:end="78:32"><call pos:start="78:9" pos:end="78:32"><name pos:start="78:9" pos:end="78:29">uart_parameters_setup</name><argument_list pos:start="78:30" pos:end="78:32">(<argument pos:start="78:31" pos:end="78:31"><expr pos:start="78:31" pos:end="78:31"><name pos:start="78:31" pos:end="78:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="80:9" pos:end="80:14">break;</break>


    <expr_stmt pos:start="83:5" pos:end="83:26"><expr pos:start="83:5" pos:end="83:25"><call pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:22">uart_update_status</name><argument_list pos:start="83:23" pos:end="83:25">(<argument pos:start="83:24" pos:end="83:24"><expr pos:start="83:24" pos:end="83:24"><name pos:start="83:24" pos:end="83:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></switch></block_content></block></switch></block_content></block></switch></block_content></block></function>
</unit>
