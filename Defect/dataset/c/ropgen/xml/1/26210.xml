<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26210.c" pos:tabs="8"><function pos:start="1:1" pos:end="92:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">v9fs_xattrwalk</name><parameter_list pos:start="1:27" pos:end="1:40">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:33"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="92:1">{<block_content pos:start="3:5" pos:end="91:28">
    <decl_stmt pos:start="3:5" pos:end="3:17"><decl pos:start="3:5" pos:end="3:16"><type pos:start="3:5" pos:end="3:11"><name pos:start="3:5" pos:end="3:11">int64_t</name></type> <name pos:start="3:13" pos:end="3:16">size</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:20"><decl pos:start="4:5" pos:end="4:19"><type pos:start="4:5" pos:end="4:14"><name pos:start="4:5" pos:end="4:14">V9fsString</name></type> <name pos:start="4:16" pos:end="4:19">name</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">ssize_t</name></type> <name pos:start="5:13" pos:end="5:15">err</name> <init pos:start="5:17" pos:end="5:19">= <expr pos:start="5:19" pos:end="5:19"><literal type="number" pos:start="5:19" pos:end="5:19">0</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:22"><decl pos:start="6:5" pos:end="6:21"><type pos:start="6:5" pos:end="6:10"><name pos:start="6:5" pos:end="6:10">size_t</name></type> <name pos:start="6:12" pos:end="6:17">offset</name> <init pos:start="6:19" pos:end="6:21">= <expr pos:start="6:21" pos:end="6:21"><literal type="number" pos:start="6:21" pos:end="6:21">7</literal></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:15">fid</name></decl>, <decl pos:start="7:18" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:18" pos:end="7:23">newfid</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:28"><decl pos:start="8:5" pos:end="8:27"><type pos:start="8:5" pos:end="8:18"><name pos:start="8:5" pos:end="8:16">V9fsFidState</name> <modifier pos:start="8:18" pos:end="8:18">*</modifier></type><name pos:start="8:19" pos:end="8:27">file_fidp</name></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">V9fsFidState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:28">xattr_fidp</name> <init pos:start="9:30" pos:end="9:35">= <expr pos:start="9:32" pos:end="9:35"><name pos:start="9:32" pos:end="9:35">NULL</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="10:5" pos:end="10:26"><decl pos:start="10:5" pos:end="10:25"><type pos:start="10:5" pos:end="10:13"><name pos:start="10:5" pos:end="10:11">V9fsPDU</name> <modifier pos:start="10:13" pos:end="10:13">*</modifier></type><name pos:start="10:14" pos:end="10:16">pdu</name> <init pos:start="10:18" pos:end="10:25">= <expr pos:start="10:20" pos:end="10:25"><name pos:start="10:20" pos:end="10:25">opaque</name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="11:5" pos:end="11:26"><decl pos:start="11:5" pos:end="11:25"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">V9fsState</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:16">s</name> <init pos:start="11:18" pos:end="11:25">= <expr pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:25"><name pos:start="11:20" pos:end="11:22">pdu</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:25">s</name></name></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="12:5" pos:end="12:60"><expr pos:start="12:5" pos:end="12:59"><call pos:start="12:5" pos:end="12:59"><name pos:start="12:5" pos:end="12:17">pdu_unmarshal</name><argument_list pos:start="12:18" pos:end="12:59">(<argument pos:start="12:19" pos:end="12:21"><expr pos:start="12:19" pos:end="12:21"><name pos:start="12:19" pos:end="12:21">pdu</name></expr></argument>, <argument pos:start="12:24" pos:end="12:29"><expr pos:start="12:24" pos:end="12:29"><name pos:start="12:24" pos:end="12:29">offset</name></expr></argument>, <argument pos:start="12:32" pos:end="12:36"><expr pos:start="12:32" pos:end="12:36"><literal type="string" pos:start="12:32" pos:end="12:36">"dds"</literal></expr></argument>, <argument pos:start="12:39" pos:end="12:42"><expr pos:start="12:39" pos:end="12:42"><operator pos:start="12:39" pos:end="12:39">&amp;</operator><name pos:start="12:40" pos:end="12:42">fid</name></expr></argument>, <argument pos:start="12:45" pos:end="12:51"><expr pos:start="12:45" pos:end="12:51"><operator pos:start="12:45" pos:end="12:45">&amp;</operator><name pos:start="12:46" pos:end="12:51">newfid</name></expr></argument>, <argument pos:start="12:54" pos:end="12:58"><expr pos:start="12:54" pos:end="12:58"><operator pos:start="12:54" pos:end="12:54">&amp;</operator><name pos:start="12:55" pos:end="12:58">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:13">file_fidp</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <call pos:start="13:17" pos:end="13:33"><name pos:start="13:17" pos:end="13:23">get_fid</name><argument_list pos:start="13:24" pos:end="13:33">(<argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:27">pdu</name></expr></argument>, <argument pos:start="13:30" pos:end="13:32"><expr pos:start="13:30" pos:end="13:32"><name pos:start="13:30" pos:end="13:32">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="14:5" pos:end="17:5"><if pos:start="14:5" pos:end="17:5">if <condition pos:start="14:8" pos:end="14:26">(<expr pos:start="14:9" pos:end="14:25"><name pos:start="14:9" pos:end="14:17">file_fidp</name> <operator pos:start="14:19" pos:end="14:20">==</operator> <name pos:start="14:22" pos:end="14:25">NULL</name></expr>)</condition> <block pos:start="14:28" pos:end="17:5">{<block_content pos:start="15:9" pos:end="16:23">
        <expr_stmt pos:start="15:9" pos:end="15:22"><expr pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <operator pos:start="15:15" pos:end="15:15">-</operator><name pos:start="15:16" pos:end="15:21">ENOENT</name></expr>;</expr_stmt>
        <goto pos:start="16:9" pos:end="16:23">goto <name pos:start="16:14" pos:end="16:22">out_nofid</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:38"><expr pos:start="18:5" pos:end="18:37"><name pos:start="18:5" pos:end="18:14">xattr_fidp</name> <operator pos:start="18:16" pos:end="18:16">=</operator> <call pos:start="18:18" pos:end="18:37"><name pos:start="18:18" pos:end="18:26">alloc_fid</name><argument_list pos:start="18:27" pos:end="18:37">(<argument pos:start="18:28" pos:end="18:28"><expr pos:start="18:28" pos:end="18:28"><name pos:start="18:28" pos:end="18:28">s</name></expr></argument>, <argument pos:start="18:31" pos:end="18:36"><expr pos:start="18:31" pos:end="18:36"><name pos:start="18:31" pos:end="18:36">newfid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="22:5"><if pos:start="19:5" pos:end="22:5">if <condition pos:start="19:8" pos:end="19:27">(<expr pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:18">xattr_fidp</name> <operator pos:start="19:20" pos:end="19:21">==</operator> <name pos:start="19:23" pos:end="19:26">NULL</name></expr>)</condition> <block pos:start="19:29" pos:end="22:5">{<block_content pos:start="20:9" pos:end="21:17">
        <expr_stmt pos:start="20:9" pos:end="20:22"><expr pos:start="20:9" pos:end="20:21"><name pos:start="20:9" pos:end="20:11">err</name> <operator pos:start="20:13" pos:end="20:13">=</operator> <operator pos:start="20:15" pos:end="20:15">-</operator><name pos:start="20:16" pos:end="20:21">EINVAL</name></expr>;</expr_stmt>
        <goto pos:start="21:9" pos:end="21:17">goto <name pos:start="21:14" pos:end="21:16">out</name>;</goto>
    </block_content>}</block></if></if_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:56"><expr pos:start="23:5" pos:end="23:55"><call pos:start="23:5" pos:end="23:55"><name pos:start="23:5" pos:end="23:18">v9fs_path_copy</name><argument_list pos:start="23:19" pos:end="23:55">(<argument pos:start="23:20" pos:end="23:36"><expr pos:start="23:20" pos:end="23:36"><operator pos:start="23:20" pos:end="23:20">&amp;</operator><name pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:30">xattr_fidp</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:36">path</name></name></expr></argument>, <argument pos:start="23:39" pos:end="23:54"><expr pos:start="23:39" pos:end="23:54"><operator pos:start="23:39" pos:end="23:39">&amp;</operator><name pos:start="23:40" pos:end="23:54"><name pos:start="23:40" pos:end="23:48">file_fidp</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:54">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="82:5"><if pos:start="24:5" pos:end="52:5">if <condition pos:start="24:8" pos:end="24:26">(<expr pos:start="24:9" pos:end="24:25"><name pos:start="24:9" pos:end="24:20"><name pos:start="24:9" pos:end="24:12">name</name><operator pos:start="24:13" pos:end="24:13">.</operator><name pos:start="24:14" pos:end="24:17">data</name><index pos:start="24:18" pos:end="24:20">[<expr pos:start="24:19" pos:end="24:19"><literal type="number" pos:start="24:19" pos:end="24:19">0</literal></expr>]</index></name> <operator pos:start="24:22" pos:end="24:23">==</operator> <literal type="number" pos:start="24:25" pos:end="24:25">0</literal></expr>)</condition> <block pos:start="24:28" pos:end="52:5">{<block_content pos:start="28:9" pos:end="51:21">
        <comment type="block" pos:start="25:9" pos:end="27:11">/*
         * listxattr request. Get the size first
         */</comment>
        <expr_stmt pos:start="28:9" pos:end="28:67"><expr pos:start="28:9" pos:end="28:66"><name pos:start="28:9" pos:end="28:12">size</name> <operator pos:start="28:14" pos:end="28:14">=</operator> <call pos:start="28:16" pos:end="28:66"><name pos:start="28:16" pos:end="28:33">v9fs_co_llistxattr</name><argument_list pos:start="28:34" pos:end="28:66">(<argument pos:start="28:35" pos:end="28:37"><expr pos:start="28:35" pos:end="28:37"><name pos:start="28:35" pos:end="28:37">pdu</name></expr></argument>, <argument pos:start="28:40" pos:end="28:56"><expr pos:start="28:40" pos:end="28:56"><operator pos:start="28:40" pos:end="28:40">&amp;</operator><name pos:start="28:41" pos:end="28:56"><name pos:start="28:41" pos:end="28:50">xattr_fidp</name><operator pos:start="28:51" pos:end="28:52">-&gt;</operator><name pos:start="28:53" pos:end="28:56">path</name></name></expr></argument>, <argument pos:start="28:59" pos:end="28:62"><expr pos:start="28:59" pos:end="28:62"><name pos:start="28:59" pos:end="28:62">NULL</name></expr></argument>, <argument pos:start="28:65" pos:end="28:65"><expr pos:start="28:65" pos:end="28:65"><literal type="number" pos:start="28:65" pos:end="28:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:16">size</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition> <block pos:start="29:23" pos:end="33:9">{<block_content pos:start="30:13" pos:end="32:21">
            <expr_stmt pos:start="30:13" pos:end="30:23"><expr pos:start="30:13" pos:end="30:22"><name pos:start="30:13" pos:end="30:15">err</name> <operator pos:start="30:17" pos:end="30:17">=</operator> <name pos:start="30:19" pos:end="30:22">size</name></expr>;</expr_stmt>
            <expr_stmt pos:start="31:13" pos:end="31:42"><expr pos:start="31:13" pos:end="31:41"><call pos:start="31:13" pos:end="31:41"><name pos:start="31:13" pos:end="31:21">clunk_fid</name><argument_list pos:start="31:22" pos:end="31:41">(<argument pos:start="31:23" pos:end="31:23"><expr pos:start="31:23" pos:end="31:23"><name pos:start="31:23" pos:end="31:23">s</name></expr></argument>, <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:40"><name pos:start="31:26" pos:end="31:35">xattr_fidp</name><operator pos:start="31:36" pos:end="31:37">-&gt;</operator><name pos:start="31:38" pos:end="31:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="32:13" pos:end="32:21">goto <name pos:start="32:18" pos:end="32:20">out</name>;</goto>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="34:9" pos:end="36:11">/*
         * Read the xattr value
         */</comment>
        <expr_stmt pos:start="37:9" pos:end="37:40"><expr pos:start="37:9" pos:end="37:39"><name pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:18">xattr_fidp</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:22">fs</name><operator pos:start="37:23" pos:end="37:23">.</operator><name pos:start="37:24" pos:end="37:28">xattr</name><operator pos:start="37:29" pos:end="37:29">.</operator><name pos:start="37:30" pos:end="37:32">len</name></name> <operator pos:start="37:34" pos:end="37:34">=</operator> <name pos:start="37:36" pos:end="37:39">size</name></expr>;</expr_stmt>
        <expr_stmt pos:start="38:9" pos:end="38:44"><expr pos:start="38:9" pos:end="38:43"><name pos:start="38:9" pos:end="38:28"><name pos:start="38:9" pos:end="38:18">xattr_fidp</name><operator pos:start="38:19" pos:end="38:20">-&gt;</operator><name pos:start="38:21" pos:end="38:28">fid_type</name></name> <operator pos:start="38:30" pos:end="38:30">=</operator> <name pos:start="38:32" pos:end="38:43">P9_FID_XATTR</name></expr>;</expr_stmt>
        <expr_stmt pos:start="39:9" pos:end="39:45"><expr pos:start="39:9" pos:end="39:44"><name pos:start="39:9" pos:end="39:39"><name pos:start="39:9" pos:end="39:18">xattr_fidp</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:22">fs</name><operator pos:start="39:23" pos:end="39:23">.</operator><name pos:start="39:24" pos:end="39:28">xattr</name><operator pos:start="39:29" pos:end="39:29">.</operator><name pos:start="39:30" pos:end="39:39">copied_len</name></name> <operator pos:start="39:41" pos:end="39:41">=</operator> <operator pos:start="39:43" pos:end="39:43">-</operator><literal type="number" pos:start="39:44" pos:end="39:44">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="40:9" pos:end="49:9"><if pos:start="40:9" pos:end="49:9">if <condition pos:start="40:12" pos:end="40:17">(<expr pos:start="40:13" pos:end="40:16"><name pos:start="40:13" pos:end="40:16">size</name></expr>)</condition> <block pos:start="40:19" pos:end="49:9">{<block_content pos:start="41:13" pos:end="48:13">
            <expr_stmt pos:start="41:13" pos:end="41:56"><expr pos:start="41:13" pos:end="41:55"><name pos:start="41:13" pos:end="41:38"><name pos:start="41:13" pos:end="41:22">xattr_fidp</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:26">fs</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:32">xattr</name><operator pos:start="41:33" pos:end="41:33">.</operator><name pos:start="41:34" pos:end="41:38">value</name></name> <operator pos:start="41:40" pos:end="41:40">=</operator> <call pos:start="41:42" pos:end="41:55"><name pos:start="41:42" pos:end="41:49">g_malloc</name><argument_list pos:start="41:50" pos:end="41:55">(<argument pos:start="41:51" pos:end="41:54"><expr pos:start="41:51" pos:end="41:54"><name pos:start="41:51" pos:end="41:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="42:13" pos:end="44:63"><expr pos:start="42:13" pos:end="44:62"><name pos:start="42:13" pos:end="42:15">err</name> <operator pos:start="42:17" pos:end="42:17">=</operator> <call pos:start="42:19" pos:end="44:62"><name pos:start="42:19" pos:end="42:36">v9fs_co_llistxattr</name><argument_list pos:start="42:37" pos:end="44:62">(<argument pos:start="42:38" pos:end="42:40"><expr pos:start="42:38" pos:end="42:40"><name pos:start="42:38" pos:end="42:40">pdu</name></expr></argument>, <argument pos:start="42:43" pos:end="42:59"><expr pos:start="42:43" pos:end="42:59"><operator pos:start="42:43" pos:end="42:43">&amp;</operator><name pos:start="42:44" pos:end="42:59"><name pos:start="42:44" pos:end="42:53">xattr_fidp</name><operator pos:start="42:54" pos:end="42:55">-&gt;</operator><name pos:start="42:56" pos:end="42:59">path</name></name></expr></argument>,
                                     <argument pos:start="43:38" pos:end="43:63"><expr pos:start="43:38" pos:end="43:63"><name pos:start="43:38" pos:end="43:63"><name pos:start="43:38" pos:end="43:47">xattr_fidp</name><operator pos:start="43:48" pos:end="43:49">-&gt;</operator><name pos:start="43:50" pos:end="43:51">fs</name><operator pos:start="43:52" pos:end="43:52">.</operator><name pos:start="43:53" pos:end="43:57">xattr</name><operator pos:start="43:58" pos:end="43:58">.</operator><name pos:start="43:59" pos:end="43:63">value</name></name></expr></argument>,
                                     <argument pos:start="44:38" pos:end="44:61"><expr pos:start="44:38" pos:end="44:61"><name pos:start="44:38" pos:end="44:61"><name pos:start="44:38" pos:end="44:47">xattr_fidp</name><operator pos:start="44:48" pos:end="44:49">-&gt;</operator><name pos:start="44:50" pos:end="44:51">fs</name><operator pos:start="44:52" pos:end="44:52">.</operator><name pos:start="44:53" pos:end="44:57">xattr</name><operator pos:start="44:58" pos:end="44:58">.</operator><name pos:start="44:59" pos:end="44:61">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="45:13" pos:end="48:13"><if pos:start="45:13" pos:end="48:13">if <condition pos:start="45:16" pos:end="45:24">(<expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:19">err</name> <operator pos:start="45:21" pos:end="45:21">&lt;</operator> <literal type="number" pos:start="45:23" pos:end="45:23">0</literal></expr>)</condition> <block pos:start="45:26" pos:end="48:13">{<block_content pos:start="46:17" pos:end="47:25">
                <expr_stmt pos:start="46:17" pos:end="46:46"><expr pos:start="46:17" pos:end="46:45"><call pos:start="46:17" pos:end="46:45"><name pos:start="46:17" pos:end="46:25">clunk_fid</name><argument_list pos:start="46:26" pos:end="46:45">(<argument pos:start="46:27" pos:end="46:27"><expr pos:start="46:27" pos:end="46:27"><name pos:start="46:27" pos:end="46:27">s</name></expr></argument>, <argument pos:start="46:30" pos:end="46:44"><expr pos:start="46:30" pos:end="46:44"><name pos:start="46:30" pos:end="46:44"><name pos:start="46:30" pos:end="46:39">xattr_fidp</name><operator pos:start="46:40" pos:end="46:41">-&gt;</operator><name pos:start="46:42" pos:end="46:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <goto pos:start="47:17" pos:end="47:25">goto <name pos:start="47:22" pos:end="47:24">out</name>;</goto>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="50:9" pos:end="50:54"><expr pos:start="50:9" pos:end="50:53"><name pos:start="50:9" pos:end="50:14">offset</name> <operator pos:start="50:16" pos:end="50:17">+=</operator> <call pos:start="50:19" pos:end="50:53"><name pos:start="50:19" pos:end="50:29">pdu_marshal</name><argument_list pos:start="50:30" pos:end="50:53">(<argument pos:start="50:31" pos:end="50:33"><expr pos:start="50:31" pos:end="50:33"><name pos:start="50:31" pos:end="50:33">pdu</name></expr></argument>, <argument pos:start="50:36" pos:end="50:41"><expr pos:start="50:36" pos:end="50:41"><name pos:start="50:36" pos:end="50:41">offset</name></expr></argument>, <argument pos:start="50:44" pos:end="50:46"><expr pos:start="50:44" pos:end="50:46"><literal type="string" pos:start="50:44" pos:end="50:46">"q"</literal></expr></argument>, <argument pos:start="50:49" pos:end="50:52"><expr pos:start="50:49" pos:end="50:52"><name pos:start="50:49" pos:end="50:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">err</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <name pos:start="51:15" pos:end="51:20">offset</name></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="52:7" pos:end="82:5">else <block pos:start="52:12" pos:end="82:5">{<block_content pos:start="57:9" pos:end="81:21">
        <comment type="block" pos:start="53:9" pos:end="56:11">/*
         * specific xattr fid. We check for xattr
         * presence also collect the xattr size
         */</comment>
        <expr_stmt pos:start="57:9" pos:end="58:49"><expr pos:start="57:9" pos:end="58:48"><name pos:start="57:9" pos:end="57:12">size</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <call pos:start="57:16" pos:end="58:48"><name pos:start="57:16" pos:end="57:32">v9fs_co_lgetxattr</name><argument_list pos:start="57:33" pos:end="58:48">(<argument pos:start="57:34" pos:end="57:36"><expr pos:start="57:34" pos:end="57:36"><name pos:start="57:34" pos:end="57:36">pdu</name></expr></argument>, <argument pos:start="57:39" pos:end="57:55"><expr pos:start="57:39" pos:end="57:55"><operator pos:start="57:39" pos:end="57:39">&amp;</operator><name pos:start="57:40" pos:end="57:55"><name pos:start="57:40" pos:end="57:49">xattr_fidp</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:55">path</name></name></expr></argument>,
                                 <argument pos:start="58:34" pos:end="58:38"><expr pos:start="58:34" pos:end="58:38"><operator pos:start="58:34" pos:end="58:34">&amp;</operator><name pos:start="58:35" pos:end="58:38">name</name></expr></argument>, <argument pos:start="58:41" pos:end="58:44"><expr pos:start="58:41" pos:end="58:44"><name pos:start="58:41" pos:end="58:44">NULL</name></expr></argument>, <argument pos:start="58:47" pos:end="58:47"><expr pos:start="58:47" pos:end="58:47"><literal type="number" pos:start="58:47" pos:end="58:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="59:9" pos:end="63:9"><if pos:start="59:9" pos:end="63:9">if <condition pos:start="59:12" pos:end="59:21">(<expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:16">size</name> <operator pos:start="59:18" pos:end="59:18">&lt;</operator> <literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>)</condition> <block pos:start="59:23" pos:end="63:9">{<block_content pos:start="60:13" pos:end="62:21">
            <expr_stmt pos:start="60:13" pos:end="60:23"><expr pos:start="60:13" pos:end="60:22"><name pos:start="60:13" pos:end="60:15">err</name> <operator pos:start="60:17" pos:end="60:17">=</operator> <name pos:start="60:19" pos:end="60:22">size</name></expr>;</expr_stmt>
            <expr_stmt pos:start="61:13" pos:end="61:42"><expr pos:start="61:13" pos:end="61:41"><call pos:start="61:13" pos:end="61:41"><name pos:start="61:13" pos:end="61:21">clunk_fid</name><argument_list pos:start="61:22" pos:end="61:41">(<argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><name pos:start="61:23" pos:end="61:23">s</name></expr></argument>, <argument pos:start="61:26" pos:end="61:40"><expr pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:40"><name pos:start="61:26" pos:end="61:35">xattr_fidp</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:40">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <goto pos:start="62:13" pos:end="62:21">goto <name pos:start="62:18" pos:end="62:20">out</name>;</goto>
        </block_content>}</block></if></if_stmt>
        <comment type="block" pos:start="64:9" pos:end="66:11">/*
         * Read the xattr value
         */</comment>
        <expr_stmt pos:start="67:9" pos:end="67:40"><expr pos:start="67:9" pos:end="67:39"><name pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:18">xattr_fidp</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:22">fs</name><operator pos:start="67:23" pos:end="67:23">.</operator><name pos:start="67:24" pos:end="67:28">xattr</name><operator pos:start="67:29" pos:end="67:29">.</operator><name pos:start="67:30" pos:end="67:32">len</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <name pos:start="67:36" pos:end="67:39">size</name></expr>;</expr_stmt>
        <expr_stmt pos:start="68:9" pos:end="68:44"><expr pos:start="68:9" pos:end="68:43"><name pos:start="68:9" pos:end="68:28"><name pos:start="68:9" pos:end="68:18">xattr_fidp</name><operator pos:start="68:19" pos:end="68:20">-&gt;</operator><name pos:start="68:21" pos:end="68:28">fid_type</name></name> <operator pos:start="68:30" pos:end="68:30">=</operator> <name pos:start="68:32" pos:end="68:43">P9_FID_XATTR</name></expr>;</expr_stmt>
        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:39"><name pos:start="69:9" pos:end="69:18">xattr_fidp</name><operator pos:start="69:19" pos:end="69:20">-&gt;</operator><name pos:start="69:21" pos:end="69:22">fs</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:28">xattr</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:39">copied_len</name></name> <operator pos:start="69:41" pos:end="69:41">=</operator> <operator pos:start="69:43" pos:end="69:43">-</operator><literal type="number" pos:start="69:44" pos:end="69:44">1</literal></expr>;</expr_stmt>
        <if_stmt pos:start="70:9" pos:end="79:9"><if pos:start="70:9" pos:end="79:9">if <condition pos:start="70:12" pos:end="70:17">(<expr pos:start="70:13" pos:end="70:16"><name pos:start="70:13" pos:end="70:16">size</name></expr>)</condition> <block pos:start="70:19" pos:end="79:9">{<block_content pos:start="71:13" pos:end="78:13">
            <expr_stmt pos:start="71:13" pos:end="71:56"><expr pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:38"><name pos:start="71:13" pos:end="71:22">xattr_fidp</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:26">fs</name><operator pos:start="71:27" pos:end="71:27">.</operator><name pos:start="71:28" pos:end="71:32">xattr</name><operator pos:start="71:33" pos:end="71:33">.</operator><name pos:start="71:34" pos:end="71:38">value</name></name> <operator pos:start="71:40" pos:end="71:40">=</operator> <call pos:start="71:42" pos:end="71:55"><name pos:start="71:42" pos:end="71:49">g_malloc</name><argument_list pos:start="71:50" pos:end="71:55">(<argument pos:start="71:51" pos:end="71:54"><expr pos:start="71:51" pos:end="71:54"><name pos:start="71:51" pos:end="71:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <expr_stmt pos:start="72:13" pos:end="74:62"><expr pos:start="72:13" pos:end="74:61"><name pos:start="72:13" pos:end="72:15">err</name> <operator pos:start="72:17" pos:end="72:17">=</operator> <call pos:start="72:19" pos:end="74:61"><name pos:start="72:19" pos:end="72:35">v9fs_co_lgetxattr</name><argument_list pos:start="72:36" pos:end="74:61">(<argument pos:start="72:37" pos:end="72:39"><expr pos:start="72:37" pos:end="72:39"><name pos:start="72:37" pos:end="72:39">pdu</name></expr></argument>, <argument pos:start="72:42" pos:end="72:58"><expr pos:start="72:42" pos:end="72:58"><operator pos:start="72:42" pos:end="72:42">&amp;</operator><name pos:start="72:43" pos:end="72:58"><name pos:start="72:43" pos:end="72:52">xattr_fidp</name><operator pos:start="72:53" pos:end="72:54">-&gt;</operator><name pos:start="72:55" pos:end="72:58">path</name></name></expr></argument>,
                                    <argument pos:start="73:37" pos:end="73:41"><expr pos:start="73:37" pos:end="73:41"><operator pos:start="73:37" pos:end="73:37">&amp;</operator><name pos:start="73:38" pos:end="73:41">name</name></expr></argument>, <argument pos:start="73:44" pos:end="73:69"><expr pos:start="73:44" pos:end="73:69"><name pos:start="73:44" pos:end="73:69"><name pos:start="73:44" pos:end="73:53">xattr_fidp</name><operator pos:start="73:54" pos:end="73:55">-&gt;</operator><name pos:start="73:56" pos:end="73:57">fs</name><operator pos:start="73:58" pos:end="73:58">.</operator><name pos:start="73:59" pos:end="73:63">xattr</name><operator pos:start="73:64" pos:end="73:64">.</operator><name pos:start="73:65" pos:end="73:69">value</name></name></expr></argument>,
                                    <argument pos:start="74:37" pos:end="74:60"><expr pos:start="74:37" pos:end="74:60"><name pos:start="74:37" pos:end="74:60"><name pos:start="74:37" pos:end="74:46">xattr_fidp</name><operator pos:start="74:47" pos:end="74:48">-&gt;</operator><name pos:start="74:49" pos:end="74:50">fs</name><operator pos:start="74:51" pos:end="74:51">.</operator><name pos:start="74:52" pos:end="74:56">xattr</name><operator pos:start="74:57" pos:end="74:57">.</operator><name pos:start="74:58" pos:end="74:60">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <if_stmt pos:start="75:13" pos:end="78:13"><if pos:start="75:13" pos:end="78:13">if <condition pos:start="75:16" pos:end="75:24">(<expr pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:19">err</name> <operator pos:start="75:21" pos:end="75:21">&lt;</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>)</condition> <block pos:start="75:26" pos:end="78:13">{<block_content pos:start="76:17" pos:end="77:25">
                <expr_stmt pos:start="76:17" pos:end="76:46"><expr pos:start="76:17" pos:end="76:45"><call pos:start="76:17" pos:end="76:45"><name pos:start="76:17" pos:end="76:25">clunk_fid</name><argument_list pos:start="76:26" pos:end="76:45">(<argument pos:start="76:27" pos:end="76:27"><expr pos:start="76:27" pos:end="76:27"><name pos:start="76:27" pos:end="76:27">s</name></expr></argument>, <argument pos:start="76:30" pos:end="76:44"><expr pos:start="76:30" pos:end="76:44"><name pos:start="76:30" pos:end="76:44"><name pos:start="76:30" pos:end="76:39">xattr_fidp</name><operator pos:start="76:40" pos:end="76:41">-&gt;</operator><name pos:start="76:42" pos:end="76:44">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <goto pos:start="77:17" pos:end="77:25">goto <name pos:start="77:22" pos:end="77:24">out</name>;</goto>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="80:9" pos:end="80:54"><expr pos:start="80:9" pos:end="80:53"><name pos:start="80:9" pos:end="80:14">offset</name> <operator pos:start="80:16" pos:end="80:17">+=</operator> <call pos:start="80:19" pos:end="80:53"><name pos:start="80:19" pos:end="80:29">pdu_marshal</name><argument_list pos:start="80:30" pos:end="80:53">(<argument pos:start="80:31" pos:end="80:33"><expr pos:start="80:31" pos:end="80:33"><name pos:start="80:31" pos:end="80:33">pdu</name></expr></argument>, <argument pos:start="80:36" pos:end="80:41"><expr pos:start="80:36" pos:end="80:41"><name pos:start="80:36" pos:end="80:41">offset</name></expr></argument>, <argument pos:start="80:44" pos:end="80:46"><expr pos:start="80:44" pos:end="80:46"><literal type="string" pos:start="80:44" pos:end="80:46">"q"</literal></expr></argument>, <argument pos:start="80:49" pos:end="80:52"><expr pos:start="80:49" pos:end="80:52"><name pos:start="80:49" pos:end="80:52">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:11">err</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:20">offset</name></expr>;</expr_stmt>
    </block_content>}</block></else></if_stmt>
<label pos:start="83:1" pos:end="83:4"><name pos:start="83:1" pos:end="83:3">out</name>:</label>
    <expr_stmt pos:start="84:5" pos:end="84:28"><expr pos:start="84:5" pos:end="84:27"><call pos:start="84:5" pos:end="84:27"><name pos:start="84:5" pos:end="84:11">put_fid</name><argument_list pos:start="84:12" pos:end="84:27">(<argument pos:start="84:13" pos:end="84:15"><expr pos:start="84:13" pos:end="84:15"><name pos:start="84:13" pos:end="84:15">pdu</name></expr></argument>, <argument pos:start="84:18" pos:end="84:26"><expr pos:start="84:18" pos:end="84:26"><name pos:start="84:18" pos:end="84:26">file_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="85:5" pos:end="87:5"><if pos:start="85:5" pos:end="87:5">if <condition pos:start="85:8" pos:end="85:19">(<expr pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:18">xattr_fidp</name></expr>)</condition> <block pos:start="85:21" pos:end="87:5">{<block_content pos:start="86:9" pos:end="86:33">
        <expr_stmt pos:start="86:9" pos:end="86:33"><expr pos:start="86:9" pos:end="86:32"><call pos:start="86:9" pos:end="86:32"><name pos:start="86:9" pos:end="86:15">put_fid</name><argument_list pos:start="86:16" pos:end="86:32">(<argument pos:start="86:17" pos:end="86:19"><expr pos:start="86:17" pos:end="86:19"><name pos:start="86:17" pos:end="86:19">pdu</name></expr></argument>, <argument pos:start="86:22" pos:end="86:31"><expr pos:start="86:22" pos:end="86:31"><name pos:start="86:22" pos:end="86:31">xattr_fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
<label pos:start="88:1" pos:end="88:10"><name pos:start="88:1" pos:end="88:9">out_nofid</name>:</label>
    <expr_stmt pos:start="89:5" pos:end="89:57"><expr pos:start="89:5" pos:end="89:56"><call pos:start="89:5" pos:end="89:56"><name pos:start="89:5" pos:end="89:31">trace_v9fs_xattrwalk_return</name><argument_list pos:start="89:32" pos:end="89:56">(<argument pos:start="89:33" pos:end="89:40"><expr pos:start="89:33" pos:end="89:40"><name pos:start="89:33" pos:end="89:40"><name pos:start="89:33" pos:end="89:35">pdu</name><operator pos:start="89:36" pos:end="89:37">-&gt;</operator><name pos:start="89:38" pos:end="89:40">tag</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:49"><expr pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:49"><name pos:start="89:43" pos:end="89:45">pdu</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:49">id</name></name></expr></argument>, <argument pos:start="89:52" pos:end="89:55"><expr pos:start="89:52" pos:end="89:55"><name pos:start="89:52" pos:end="89:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="90:5" pos:end="90:30"><expr pos:start="90:5" pos:end="90:29"><call pos:start="90:5" pos:end="90:29"><name pos:start="90:5" pos:end="90:16">complete_pdu</name><argument_list pos:start="90:17" pos:end="90:29">(<argument pos:start="90:18" pos:end="90:18"><expr pos:start="90:18" pos:end="90:18"><name pos:start="90:18" pos:end="90:18">s</name></expr></argument>, <argument pos:start="90:21" pos:end="90:23"><expr pos:start="90:21" pos:end="90:23"><name pos:start="90:21" pos:end="90:23">pdu</name></expr></argument>, <argument pos:start="90:26" pos:end="90:28"><expr pos:start="90:26" pos:end="90:28"><name pos:start="90:26" pos:end="90:28">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="91:5" pos:end="91:28"><expr pos:start="91:5" pos:end="91:27"><call pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:20">v9fs_string_free</name><argument_list pos:start="91:21" pos:end="91:27">(<argument pos:start="91:22" pos:end="91:26"><expr pos:start="91:22" pos:end="91:26"><operator pos:start="91:22" pos:end="91:22">&amp;</operator><name pos:start="91:23" pos:end="91:26">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
</block_content>}</block></function></unit>
