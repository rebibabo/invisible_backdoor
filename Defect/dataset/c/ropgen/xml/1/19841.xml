<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19841.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">process_tns_coeffs</name><parameter_list pos:start="1:31" pos:end="3:61">(<parameter pos:start="1:32" pos:end="1:56"><decl pos:start="1:32" pos:end="1:56"><type pos:start="1:32" pos:end="1:56"><name pos:start="1:32" pos:end="1:51">TemporalNoiseShaping</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">tns</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:74"><decl pos:start="1:59" pos:end="1:74"><type pos:start="1:59" pos:end="1:74"><name pos:start="1:59" pos:end="1:64">double</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:74">coef_raw</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:34">int</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:43">order_p</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:50"><decl pos:start="3:46" pos:end="3:50"><type pos:start="3:46" pos:end="3:50"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:50">w</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:60"><decl pos:start="3:53" pos:end="3:60"><type pos:start="3:53" pos:end="3:60"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:60">filt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="79:1">{<block_content pos:start="7:5" pos:end="77:50">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>, <decl pos:start="7:15" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:19">order</name> <init pos:start="7:21" pos:end="7:30">= <expr pos:start="7:23" pos:end="7:30"><operator pos:start="7:23" pos:end="7:23">*</operator><name pos:start="7:24" pos:end="7:30">order_p</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:37"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">int</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">idx</name> <init pos:start="9:14" pos:end="9:37">= <expr pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:37"><name pos:start="9:16" pos:end="9:18">tns</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:28">coef_idx</name><index pos:start="9:29" pos:end="9:31">[<expr pos:start="9:30" pos:end="9:30"><name pos:start="9:30" pos:end="9:30">w</name></expr>]</index><index pos:start="9:32" pos:end="9:37">[<expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">filt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">float</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:14">lpc</name> <init pos:start="11:16" pos:end="11:35">= <expr pos:start="11:18" pos:end="11:35"><name pos:start="11:18" pos:end="11:35"><name pos:start="11:18" pos:end="11:20">tns</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:26">coef</name><index pos:start="11:27" pos:end="11:29">[<expr pos:start="11:28" pos:end="11:28"><name pos:start="11:28" pos:end="11:28">w</name></expr>]</index><index pos:start="11:30" pos:end="11:35">[<expr pos:start="11:31" pos:end="11:34"><name pos:start="11:31" pos:end="11:34">filt</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">float</name></type> <name pos:start="13:11" pos:end="13:29"><name pos:start="13:11" pos:end="13:14">temp</name><index pos:start="13:15" pos:end="13:29">[<expr pos:start="13:16" pos:end="13:28"><name pos:start="13:16" pos:end="13:28">TNS_MAX_ORDER</name></expr>]</index></name> <init pos:start="13:31" pos:end="13:38">= <expr pos:start="13:33" pos:end="13:38"><block pos:start="13:33" pos:end="13:38">{<expr pos:start="13:34" pos:end="13:37"><literal type="number" pos:start="13:34" pos:end="13:37">0.0f</literal></expr>}</block></expr></init></decl>, <decl pos:start="13:41" pos:end="13:67"><type ref="prev" pos:start="13:5" pos:end="13:9"/><name pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:43">out</name><index pos:start="13:44" pos:end="13:58">[<expr pos:start="13:45" pos:end="13:57"><name pos:start="13:45" pos:end="13:57">TNS_MAX_ORDER</name></expr>]</index></name> <init pos:start="13:60" pos:end="13:67">= <expr pos:start="13:62" pos:end="13:67"><block pos:start="13:62" pos:end="13:67">{<expr pos:start="13:63" pos:end="13:66"><literal type="number" pos:start="13:63" pos:end="13:66">0.0f</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:14">order</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <return pos:start="19:9" pos:end="19:15">return;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:49">/* Not what the specs say, but it's better */</comment>

    <for pos:start="25:5" pos:end="31:5">for <control pos:start="25:9" pos:end="25:31">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:25">order</name></expr>;</condition> <incr pos:start="25:28" pos:end="25:30"><expr pos:start="25:28" pos:end="25:30"><name pos:start="25:28" pos:end="25:28">i</name><operator pos:start="25:29" pos:end="25:30">++</operator></expr></incr>)</control> <block pos:start="25:33" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:42">

        <expr_stmt pos:start="27:9" pos:end="27:68"><expr pos:start="27:9" pos:end="27:67"><name pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">idx</name><index pos:start="27:12" pos:end="27:14">[<expr pos:start="27:13" pos:end="27:13"><name pos:start="27:13" pos:end="27:13">i</name></expr>]</index></name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:67"><name pos:start="27:18" pos:end="27:32">quant_array_idx</name><argument_list pos:start="27:33" pos:end="27:67">(<argument pos:start="27:34" pos:end="27:44"><expr pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:44"><name pos:start="27:34" pos:end="27:41">coef_raw</name><index pos:start="27:42" pos:end="27:44">[<expr pos:start="27:43" pos:end="27:43"><name pos:start="27:43" pos:end="27:43">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:47" pos:end="27:62"><expr pos:start="27:47" pos:end="27:62"><name pos:start="27:47" pos:end="27:62">tns_tmp2_map_0_4</name></expr></argument>, <argument pos:start="27:65" pos:end="27:66"><expr pos:start="27:65" pos:end="27:66"><literal type="number" pos:start="27:65" pos:end="27:66">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:42"><expr pos:start="29:9" pos:end="29:41"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:11">lpc</name><index pos:start="29:12" pos:end="29:14">[<expr pos:start="29:13" pos:end="29:13"><name pos:start="29:13" pos:end="29:13">i</name></expr>]</index></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <name pos:start="29:18" pos:end="29:41"><name pos:start="29:18" pos:end="29:33">tns_tmp2_map_0_4</name><index pos:start="29:34" pos:end="29:41">[<expr pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:40"><name pos:start="29:35" pos:end="29:37">idx</name><index pos:start="29:38" pos:end="29:40">[<expr pos:start="29:39" pos:end="29:39"><name pos:start="29:39" pos:end="29:39">i</name></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="35:5" pos:end="35:52">/* Trim any coeff less than 0.1f from the end */</comment>

    <for pos:start="37:5" pos:end="49:5">for <control pos:start="37:9" pos:end="37:34">(<init pos:start="37:10" pos:end="37:21"><expr pos:start="37:10" pos:end="37:20"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:18">order</name><operator pos:start="37:19" pos:end="37:19">-</operator><literal type="number" pos:start="37:20" pos:end="37:20">1</literal></expr>;</init> <condition pos:start="37:23" pos:end="37:29"><expr pos:start="37:23" pos:end="37:28"><name pos:start="37:23" pos:end="37:23">i</name> <operator pos:start="37:25" pos:end="37:25">&gt;</operator> <operator pos:start="37:27" pos:end="37:27">-</operator><literal type="number" pos:start="37:28" pos:end="37:28">1</literal></expr>;</condition> <incr pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:31">i</name><operator pos:start="37:32" pos:end="37:33">--</operator></expr></incr>)</control> <block pos:start="37:36" pos:end="49:5">{<block_content pos:start="39:9" pos:end="47:9">

        <expr_stmt pos:start="39:9" pos:end="39:55"><expr pos:start="39:9" pos:end="39:54"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:11">lpc</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><name pos:start="39:13" pos:end="39:13">i</name></expr>]</index></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <ternary pos:start="39:18" pos:end="39:54"><condition pos:start="39:18" pos:end="39:40"><expr pos:start="39:18" pos:end="39:38"><operator pos:start="39:18" pos:end="39:18">(</operator><call pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:22">fabs</name><argument_list pos:start="39:23" pos:end="39:30">(<argument pos:start="39:24" pos:end="39:29"><expr pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:29"><name pos:start="39:24" pos:end="39:26">lpc</name><index pos:start="39:27" pos:end="39:29">[<expr pos:start="39:28" pos:end="39:28"><name pos:start="39:28" pos:end="39:28">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="39:32" pos:end="39:32">&gt;</operator> <literal type="number" pos:start="39:34" pos:end="39:37">0.1f</literal><operator pos:start="39:38" pos:end="39:38">)</operator></expr> ?</condition><then pos:start="39:42" pos:end="39:47"> <expr pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:47"><name pos:start="39:42" pos:end="39:44">lpc</name><index pos:start="39:45" pos:end="39:47">[<expr pos:start="39:46" pos:end="39:46"><name pos:start="39:46" pos:end="39:46">i</name></expr>]</index></name></expr> </then><else pos:start="39:49" pos:end="39:54">: <expr pos:start="39:51" pos:end="39:54"><literal type="number" pos:start="39:51" pos:end="39:54">0.0f</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:27">(<expr pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:18"><name pos:start="41:13" pos:end="41:15">lpc</name><index pos:start="41:16" pos:end="41:18">[<expr pos:start="41:17" pos:end="41:17"><name pos:start="41:17" pos:end="41:17">i</name></expr>]</index></name> <operator pos:start="41:20" pos:end="41:21">!=</operator> <literal type="number" pos:start="41:23" pos:end="41:25">0.0</literal></expr> )</condition> <block pos:start="41:29" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:18">

            <expr_stmt pos:start="43:13" pos:end="43:22"><expr pos:start="43:13" pos:end="43:21"><name pos:start="43:13" pos:end="43:17">order</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <name pos:start="43:21" pos:end="43:21">i</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="53:5" pos:end="53:50">/* Step up procedure, convert to LPC coeffs */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:18"><expr pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:10"><name pos:start="55:5" pos:end="55:7">out</name><index pos:start="55:8" pos:end="55:10">[<expr pos:start="55:9" pos:end="55:9"><literal type="number" pos:start="55:9" pos:end="55:9">0</literal></expr>]</index></name> <operator pos:start="55:12" pos:end="55:12">=</operator> <literal type="number" pos:start="55:14" pos:end="55:17">1.0f</literal></expr>;</expr_stmt>

    <for pos:start="57:5" pos:end="73:5">for <control pos:start="57:9" pos:end="57:32">(<init pos:start="57:10" pos:end="57:15"><expr pos:start="57:10" pos:end="57:14"><name pos:start="57:10" pos:end="57:10">i</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <literal type="number" pos:start="57:14" pos:end="57:14">1</literal></expr>;</init> <condition pos:start="57:17" pos:end="57:27"><expr pos:start="57:17" pos:end="57:26"><name pos:start="57:17" pos:end="57:17">i</name> <operator pos:start="57:19" pos:end="57:20">&lt;=</operator> <name pos:start="57:22" pos:end="57:26">order</name></expr>;</condition> <incr pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:29">i</name><operator pos:start="57:30" pos:end="57:31">++</operator></expr></incr>)</control> <block pos:start="57:34" pos:end="73:5">{<block_content pos:start="59:9" pos:end="71:26">

        <for pos:start="59:9" pos:end="63:9">for <control pos:start="59:13" pos:end="59:31">(<init pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:18"><name pos:start="59:14" pos:end="59:14">j</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="number" pos:start="59:18" pos:end="59:18">1</literal></expr>;</init> <condition pos:start="59:21" pos:end="59:26"><expr pos:start="59:21" pos:end="59:25"><name pos:start="59:21" pos:end="59:21">j</name> <operator pos:start="59:23" pos:end="59:23">&lt;</operator> <name pos:start="59:25" pos:end="59:25">i</name></expr>;</condition> <incr pos:start="59:28" pos:end="59:30"><expr pos:start="59:28" pos:end="59:30"><name pos:start="59:28" pos:end="59:28">j</name><operator pos:start="59:29" pos:end="59:30">++</operator></expr></incr>)</control> <block pos:start="59:33" pos:end="63:9">{<block_content pos:start="61:13" pos:end="61:47">

            <expr_stmt pos:start="61:13" pos:end="61:47"><expr pos:start="61:13" pos:end="61:46"><name pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:16">temp</name><index pos:start="61:17" pos:end="61:19">[<expr pos:start="61:18" pos:end="61:18"><name pos:start="61:18" pos:end="61:18">j</name></expr>]</index></name> <operator pos:start="61:21" pos:end="61:21">=</operator> <name pos:start="61:23" pos:end="61:28"><name pos:start="61:23" pos:end="61:25">out</name><index pos:start="61:26" pos:end="61:28">[<expr pos:start="61:27" pos:end="61:27"><name pos:start="61:27" pos:end="61:27">j</name></expr>]</index></name> <operator pos:start="61:30" pos:end="61:30">+</operator> <name pos:start="61:32" pos:end="61:37"><name pos:start="61:32" pos:end="61:34">lpc</name><index pos:start="61:35" pos:end="61:37">[<expr pos:start="61:36" pos:end="61:36"><name pos:start="61:36" pos:end="61:36">i</name></expr>]</index></name><operator pos:start="61:38" pos:end="61:38">*</operator><name pos:start="61:39" pos:end="61:46"><name pos:start="61:39" pos:end="61:41">out</name><index pos:start="61:42" pos:end="61:46">[<expr pos:start="61:43" pos:end="61:45"><name pos:start="61:43" pos:end="61:43">i</name><operator pos:start="61:44" pos:end="61:44">-</operator><name pos:start="61:45" pos:end="61:45">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="65:9" pos:end="69:9">for <control pos:start="65:13" pos:end="65:32">(<init pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:18"><name pos:start="65:14" pos:end="65:14">j</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <literal type="number" pos:start="65:18" pos:end="65:18">1</literal></expr>;</init> <condition pos:start="65:21" pos:end="65:27"><expr pos:start="65:21" pos:end="65:26"><name pos:start="65:21" pos:end="65:21">j</name> <operator pos:start="65:23" pos:end="65:24">&lt;=</operator> <name pos:start="65:26" pos:end="65:26">i</name></expr>;</condition> <incr pos:start="65:29" pos:end="65:31"><expr pos:start="65:29" pos:end="65:31"><name pos:start="65:29" pos:end="65:29">j</name><operator pos:start="65:30" pos:end="65:31">++</operator></expr></incr>)</control> <block pos:start="65:34" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:29">

            <expr_stmt pos:start="67:13" pos:end="67:29"><expr pos:start="67:13" pos:end="67:28"><name pos:start="67:13" pos:end="67:18"><name pos:start="67:13" pos:end="67:15">out</name><index pos:start="67:16" pos:end="67:18">[<expr pos:start="67:17" pos:end="67:17"><name pos:start="67:17" pos:end="67:17">j</name></expr>]</index></name> <operator pos:start="67:20" pos:end="67:20">=</operator> <name pos:start="67:22" pos:end="67:28"><name pos:start="67:22" pos:end="67:25">temp</name><index pos:start="67:26" pos:end="67:28">[<expr pos:start="67:27" pos:end="67:27"><name pos:start="67:27" pos:end="67:27">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="71:9" pos:end="71:26"><expr pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:11">out</name><index pos:start="71:12" pos:end="71:14">[<expr pos:start="71:13" pos:end="71:13"><name pos:start="71:13" pos:end="71:13">i</name></expr>]</index></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:25"><name pos:start="71:18" pos:end="71:20">lpc</name><index pos:start="71:21" pos:end="71:25">[<expr pos:start="71:22" pos:end="71:24"><name pos:start="71:22" pos:end="71:22">i</name><operator pos:start="71:23" pos:end="71:23">-</operator><literal type="number" pos:start="71:24" pos:end="71:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="75:5" pos:end="75:21"><expr pos:start="75:5" pos:end="75:20"><operator pos:start="75:5" pos:end="75:5">*</operator><name pos:start="75:6" pos:end="75:12">order_p</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <name pos:start="75:16" pos:end="75:20">order</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:50"><expr pos:start="77:5" pos:end="77:49"><call pos:start="77:5" pos:end="77:49"><name pos:start="77:5" pos:end="77:10">memcpy</name><argument_list pos:start="77:11" pos:end="77:49">(<argument pos:start="77:12" pos:end="77:14"><expr pos:start="77:12" pos:end="77:14"><name pos:start="77:12" pos:end="77:14">lpc</name></expr></argument>, <argument pos:start="77:17" pos:end="77:19"><expr pos:start="77:17" pos:end="77:19"><name pos:start="77:17" pos:end="77:19">out</name></expr></argument>, <argument pos:start="77:22" pos:end="77:48"><expr pos:start="77:22" pos:end="77:48"><name pos:start="77:22" pos:end="77:34">TNS_MAX_ORDER</name><operator pos:start="77:35" pos:end="77:35">*</operator><sizeof pos:start="77:36" pos:end="77:48">sizeof<argument_list pos:start="77:42" pos:end="77:48">(<argument pos:start="77:43" pos:end="77:47"><expr pos:start="77:43" pos:end="77:47"><name pos:start="77:43" pos:end="77:47">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
