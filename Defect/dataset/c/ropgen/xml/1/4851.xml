<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4851.c" pos:tabs="8"><function pos:start="1:1" pos:end="140:17"><type pos:start="1:1" pos:end="1:29"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:27">FFAMediaCodec</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:41">codec_create</name><parameter_list pos:start="1:42" pos:end="1:70">(<parameter pos:start="1:43" pos:end="1:52"><decl pos:start="1:43" pos:end="1:52"><type pos:start="1:43" pos:end="1:52"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:52">method</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><specifier pos:start="1:55" pos:end="1:59">const</specifier> <name pos:start="1:61" pos:end="1:64">char</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="140:17">{<block_content pos:start="5:5" pos:end="140:17">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:16">= <expr pos:start="5:15" pos:end="5:16"><operator pos:start="5:15" pos:end="5:15">-</operator><literal type="number" pos:start="5:16" pos:end="5:16">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">JNIEnv</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">env</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">FFAMediaCodec</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:24">codec</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">jstring</name></type> <name pos:start="11:13" pos:end="11:16">jarg</name> <init pos:start="11:18" pos:end="11:23">= <expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">jobject</name></type> <name pos:start="13:13" pos:end="13:18">object</name> <init pos:start="13:20" pos:end="13:25">= <expr pos:start="13:22" pos:end="13:25"><name pos:start="13:22" pos:end="13:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">jmethodID</name></type> <name pos:start="15:15" pos:end="15:23">create_id</name> <init pos:start="15:25" pos:end="15:30">= <expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:9">codec</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:22">av_mallocz</name><argument_list pos:start="19:23" pos:end="19:45">(<argument pos:start="19:24" pos:end="19:44"><expr pos:start="19:24" pos:end="19:44"><sizeof pos:start="19:24" pos:end="19:44">sizeof<argument_list pos:start="19:30" pos:end="19:44">(<argument pos:start="19:31" pos:end="19:43"><expr pos:start="19:31" pos:end="19:43"><name pos:start="19:31" pos:end="19:43">FFAMediaCodec</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="140:17"><if pos:start="21:5" pos:end="140:17">if <condition pos:start="21:8" pos:end="21:15">(<expr pos:start="21:9" pos:end="21:14"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:14">codec</name></expr>)</condition> <block pos:start="21:17" pos:end="140:17">{<block_content pos:start="23:9" pos:end="140:17">

        <return pos:start="23:9" pos:end="23:20">return <expr pos:start="23:16" pos:end="23:19"><name pos:start="23:16" pos:end="23:19">NULL</name></expr>;</return>


    <expr_stmt pos:start="26:5" pos:end="26:38"><expr pos:start="26:5" pos:end="26:37"><name pos:start="26:5" pos:end="26:16"><name pos:start="26:5" pos:end="26:9">codec</name><operator pos:start="26:10" pos:end="26:11">-&gt;</operator><name pos:start="26:12" pos:end="26:16">class</name></name> <operator pos:start="26:18" pos:end="26:18">=</operator> <operator pos:start="26:20" pos:end="26:20">&amp;</operator><name pos:start="26:21" pos:end="26:37">amediacodec_class</name></expr>;</expr_stmt>



    <expr_stmt pos:start="30:5" pos:end="30:32"><expr pos:start="30:5" pos:end="30:31"><name pos:start="30:5" pos:end="30:7">env</name> <operator pos:start="30:9" pos:end="30:9">=</operator> <call pos:start="30:11" pos:end="30:31"><name pos:start="30:11" pos:end="30:24">ff_jni_get_env</name><argument_list pos:start="30:25" pos:end="30:31">(<argument pos:start="30:26" pos:end="30:30"><expr pos:start="30:26" pos:end="30:30"><name pos:start="30:26" pos:end="30:30">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="32:5" pos:end="140:17"><if pos:start="32:5" pos:end="140:17">if <condition pos:start="32:8" pos:end="32:13">(<expr pos:start="32:9" pos:end="32:12"><operator pos:start="32:9" pos:end="32:9">!</operator><name pos:start="32:10" pos:end="32:12">env</name></expr>)</condition> <block pos:start="32:15" pos:end="140:17">{<block_content pos:start="34:9" pos:end="140:17">

        <expr_stmt pos:start="34:9" pos:end="34:25"><expr pos:start="34:9" pos:end="34:24"><call pos:start="34:9" pos:end="34:24"><name pos:start="34:9" pos:end="34:16">av_freep</name><argument_list pos:start="34:17" pos:end="34:24">(<argument pos:start="34:18" pos:end="34:23"><expr pos:start="34:18" pos:end="34:23"><operator pos:start="34:18" pos:end="34:18">&amp;</operator><name pos:start="34:19" pos:end="34:23">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="36:9" pos:end="36:20">return <expr pos:start="36:16" pos:end="36:19"><name pos:start="36:16" pos:end="36:19">NULL</name></expr>;</return>




    <if_stmt pos:start="41:5" pos:end="140:17"><if pos:start="41:5" pos:end="140:17">if <condition pos:start="41:8" pos:end="41:89">(<expr pos:start="41:9" pos:end="41:88"><call pos:start="41:9" pos:end="41:84"><name pos:start="41:9" pos:end="41:27">ff_jni_init_jfields</name><argument_list pos:start="41:28" pos:end="41:84">(<argument pos:start="41:29" pos:end="41:31"><expr pos:start="41:29" pos:end="41:31"><name pos:start="41:29" pos:end="41:31">env</name></expr></argument>, <argument pos:start="41:34" pos:end="41:48"><expr pos:start="41:34" pos:end="41:48"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:48"><name pos:start="41:35" pos:end="41:39">codec</name><operator pos:start="41:40" pos:end="41:41">-&gt;</operator><name pos:start="41:42" pos:end="41:48">jfields</name></name></expr></argument>, <argument pos:start="41:51" pos:end="41:73"><expr pos:start="41:51" pos:end="41:73"><name pos:start="41:51" pos:end="41:73">jni_amediacodec_mapping</name></expr></argument>, <argument pos:start="41:76" pos:end="41:76"><expr pos:start="41:76" pos:end="41:76"><literal type="number" pos:start="41:76" pos:end="41:76">1</literal></expr></argument>, <argument pos:start="41:79" pos:end="41:83"><expr pos:start="41:79" pos:end="41:83"><name pos:start="41:79" pos:end="41:83">codec</name></expr></argument>)</argument_list></call> <operator pos:start="41:86" pos:end="41:86">&lt;</operator> <literal type="number" pos:start="41:88" pos:end="41:88">0</literal></expr>)</condition> <block pos:start="41:91" pos:end="140:17">{<block_content pos:start="43:9" pos:end="140:17">

        <goto pos:start="43:9" pos:end="43:18">goto <name pos:start="43:14" pos:end="43:17">fail</name>;</goto>




    <expr_stmt pos:start="48:5" pos:end="48:56"><expr pos:start="48:5" pos:end="48:55"><name pos:start="48:5" pos:end="48:8">jarg</name> <operator pos:start="48:10" pos:end="48:10">=</operator> <call pos:start="48:12" pos:end="48:55"><name pos:start="48:12" pos:end="48:38">ff_jni_utf_chars_to_jstring</name><argument_list pos:start="48:39" pos:end="48:55">(<argument pos:start="48:40" pos:end="48:42"><expr pos:start="48:40" pos:end="48:42"><name pos:start="48:40" pos:end="48:42">env</name></expr></argument>, <argument pos:start="48:45" pos:end="48:47"><expr pos:start="48:45" pos:end="48:47"><name pos:start="48:45" pos:end="48:47">arg</name></expr></argument>, <argument pos:start="48:50" pos:end="48:54"><expr pos:start="48:50" pos:end="48:54"><name pos:start="48:50" pos:end="48:54">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="50:5" pos:end="140:17"><if pos:start="50:5" pos:end="140:17">if <condition pos:start="50:8" pos:end="50:14">(<expr pos:start="50:9" pos:end="50:13"><operator pos:start="50:9" pos:end="50:9">!</operator><name pos:start="50:10" pos:end="50:13">jarg</name></expr>)</condition> <block pos:start="50:16" pos:end="140:17">{<block_content pos:start="52:9" pos:end="140:17">

        <goto pos:start="52:9" pos:end="52:18">goto <name pos:start="52:14" pos:end="52:17">fail</name>;</goto>




    <switch pos:start="57:5" pos:end="140:17">switch <condition pos:start="57:12" pos:end="57:19">(<expr pos:start="57:13" pos:end="57:18"><name pos:start="57:13" pos:end="57:18">method</name></expr>)</condition> <block pos:start="57:21" pos:end="140:17">{<block_content pos:start="59:5" pos:end="140:17">

    <case pos:start="59:5" pos:end="59:30">case <expr pos:start="59:10" pos:end="59:29"><name pos:start="59:10" pos:end="59:29">CREATE_CODEC_BY_NAME</name></expr>:</case>   <expr_stmt pos:start="59:34" pos:end="59:84"><expr pos:start="59:34" pos:end="59:83"><name pos:start="59:34" pos:end="59:42">create_id</name> <operator pos:start="59:44" pos:end="59:44">=</operator> <name pos:start="59:46" pos:end="59:83"><name pos:start="59:46" pos:end="59:50">codec</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:59">jfields</name><operator pos:start="59:60" pos:end="59:60">.</operator><name pos:start="59:61" pos:end="59:83">create_by_codec_name_id</name></name></expr>;</expr_stmt>   <break pos:start="59:88" pos:end="59:93">break;</break>

    <case pos:start="61:5" pos:end="61:32">case <expr pos:start="61:10" pos:end="61:31"><name pos:start="61:10" pos:end="61:31">CREATE_DECODER_BY_TYPE</name></expr>:</case> <expr_stmt pos:start="61:34" pos:end="61:86"><expr pos:start="61:34" pos:end="61:85"><name pos:start="61:34" pos:end="61:42">create_id</name> <operator pos:start="61:44" pos:end="61:44">=</operator> <name pos:start="61:46" pos:end="61:85"><name pos:start="61:46" pos:end="61:50">codec</name><operator pos:start="61:51" pos:end="61:52">-&gt;</operator><name pos:start="61:53" pos:end="61:59">jfields</name><operator pos:start="61:60" pos:end="61:60">.</operator><name pos:start="61:61" pos:end="61:85">create_decoder_by_type_id</name></name></expr>;</expr_stmt> <break pos:start="61:88" pos:end="61:93">break;</break>

    <case pos:start="63:5" pos:end="63:32">case <expr pos:start="63:10" pos:end="63:31"><name pos:start="63:10" pos:end="63:31">CREATE_ENCODER_BY_TYPE</name></expr>:</case> <expr_stmt pos:start="63:34" pos:end="63:86"><expr pos:start="63:34" pos:end="63:85"><name pos:start="63:34" pos:end="63:42">create_id</name> <operator pos:start="63:44" pos:end="63:44">=</operator> <name pos:start="63:46" pos:end="63:85"><name pos:start="63:46" pos:end="63:50">codec</name><operator pos:start="63:51" pos:end="63:52">-&gt;</operator><name pos:start="63:53" pos:end="63:59">jfields</name><operator pos:start="63:60" pos:end="63:60">.</operator><name pos:start="63:61" pos:end="63:85">create_encoder_by_type_id</name></name></expr>;</expr_stmt> <break pos:start="63:88" pos:end="63:93">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:22"><expr pos:start="67:9" pos:end="67:21"><call pos:start="67:9" pos:end="67:21"><name pos:start="67:9" pos:end="67:18">av_assert0</name><argument_list pos:start="67:19" pos:end="67:21">(<argument pos:start="67:20" pos:end="67:20"><expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <expr_stmt pos:start="72:5" pos:end="78:50"><expr pos:start="72:5" pos:end="78:49"><name pos:start="72:5" pos:end="72:10">object</name> <operator pos:start="72:12" pos:end="72:12">=</operator> <call pos:start="72:14" pos:end="78:49"><name pos:start="72:14" pos:end="72:43"><operator pos:start="72:14" pos:end="72:14">(</operator><operator pos:start="72:15" pos:end="72:15">*</operator><name pos:start="72:16" pos:end="72:18">env</name><operator pos:start="72:19" pos:end="72:19">)</operator><operator pos:start="72:20" pos:end="72:21">-&gt;</operator><name pos:start="72:22" pos:end="72:43">CallStaticObjectMethod</name></name><argument_list pos:start="72:44" pos:end="78:49">(<argument pos:start="72:45" pos:end="72:47"><expr pos:start="72:45" pos:end="72:47"><name pos:start="72:45" pos:end="72:47">env</name></expr></argument>,

                                            <argument pos:start="74:45" pos:end="74:75"><expr pos:start="74:45" pos:end="74:75"><name pos:start="74:45" pos:end="74:75"><name pos:start="74:45" pos:end="74:49">codec</name><operator pos:start="74:50" pos:end="74:51">-&gt;</operator><name pos:start="74:52" pos:end="74:58">jfields</name><operator pos:start="74:59" pos:end="74:59">.</operator><name pos:start="74:60" pos:end="74:75">mediacodec_class</name></name></expr></argument>,

                                            <argument pos:start="76:45" pos:end="76:53"><expr pos:start="76:45" pos:end="76:53"><name pos:start="76:45" pos:end="76:53">create_id</name></expr></argument>,

                                            <argument pos:start="78:45" pos:end="78:48"><expr pos:start="78:45" pos:end="78:48"><name pos:start="78:45" pos:end="78:48">jarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="80:5" pos:end="140:17"><if pos:start="80:5" pos:end="140:17">if <condition pos:start="80:8" pos:end="80:50">(<expr pos:start="80:9" pos:end="80:49"><call pos:start="80:9" pos:end="80:45"><name pos:start="80:9" pos:end="80:30">ff_jni_exception_check</name><argument_list pos:start="80:31" pos:end="80:45">(<argument pos:start="80:32" pos:end="80:34"><expr pos:start="80:32" pos:end="80:34"><name pos:start="80:32" pos:end="80:34">env</name></expr></argument>, <argument pos:start="80:37" pos:end="80:37"><expr pos:start="80:37" pos:end="80:37"><literal type="number" pos:start="80:37" pos:end="80:37">1</literal></expr></argument>, <argument pos:start="80:40" pos:end="80:44"><expr pos:start="80:40" pos:end="80:44"><name pos:start="80:40" pos:end="80:44">codec</name></expr></argument>)</argument_list></call> <operator pos:start="80:47" pos:end="80:47">&lt;</operator> <literal type="number" pos:start="80:49" pos:end="80:49">0</literal></expr>)</condition> <block pos:start="80:52" pos:end="140:17">{<block_content pos:start="82:9" pos:end="140:17">

        <goto pos:start="82:9" pos:end="82:18">goto <name pos:start="82:14" pos:end="82:17">fail</name>;</goto>




    <expr_stmt pos:start="87:5" pos:end="87:54"><expr pos:start="87:5" pos:end="87:53"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:9">codec</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:17">object</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:53"><name pos:start="87:21" pos:end="87:40"><operator pos:start="87:21" pos:end="87:21">(</operator><operator pos:start="87:22" pos:end="87:22">*</operator><name pos:start="87:23" pos:end="87:25">env</name><operator pos:start="87:26" pos:end="87:26">)</operator><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:40">NewGlobalRef</name></name><argument_list pos:start="87:41" pos:end="87:53">(<argument pos:start="87:42" pos:end="87:44"><expr pos:start="87:42" pos:end="87:44"><name pos:start="87:42" pos:end="87:44">env</name></expr></argument>, <argument pos:start="87:47" pos:end="87:52"><expr pos:start="87:47" pos:end="87:52"><name pos:start="87:47" pos:end="87:52">object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="140:17"><if pos:start="89:5" pos:end="140:17">if <condition pos:start="89:8" pos:end="89:23">(<expr pos:start="89:9" pos:end="89:22"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:22"><name pos:start="89:10" pos:end="89:14">codec</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:22">object</name></name></expr>)</condition> <block pos:start="89:25" pos:end="140:17">{<block_content pos:start="91:9" pos:end="140:17">

        <goto pos:start="91:9" pos:end="91:18">goto <name pos:start="91:14" pos:end="91:17">fail</name>;</goto>




    <if_stmt pos:start="96:5" pos:end="140:17"><if pos:start="96:5" pos:end="140:17">if <condition pos:start="96:8" pos:end="96:44">(<expr pos:start="96:9" pos:end="96:43"><call pos:start="96:9" pos:end="96:39"><name pos:start="96:9" pos:end="96:32">codec_init_static_fields</name><argument_list pos:start="96:33" pos:end="96:39">(<argument pos:start="96:34" pos:end="96:38"><expr pos:start="96:34" pos:end="96:38"><name pos:start="96:34" pos:end="96:38">codec</name></expr></argument>)</argument_list></call> <operator pos:start="96:41" pos:end="96:41">&lt;</operator> <literal type="number" pos:start="96:43" pos:end="96:43">0</literal></expr>)</condition> <block pos:start="96:46" pos:end="140:17">{<block_content pos:start="98:9" pos:end="140:17">

        <goto pos:start="98:9" pos:end="98:18">goto <name pos:start="98:14" pos:end="98:17">fail</name>;</goto>




    <if_stmt pos:start="103:5" pos:end="140:17"><if pos:start="103:5" pos:end="140:17">if <condition pos:start="103:8" pos:end="103:82">(<expr pos:start="103:9" pos:end="103:81"><name pos:start="103:9" pos:end="103:42"><name pos:start="103:9" pos:end="103:13">codec</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:22">jfields</name><operator pos:start="103:23" pos:end="103:23">.</operator><name pos:start="103:24" pos:end="103:42">get_input_buffer_id</name></name> <operator pos:start="103:44" pos:end="103:45">&amp;&amp;</operator> <name pos:start="103:47" pos:end="103:81"><name pos:start="103:47" pos:end="103:51">codec</name><operator pos:start="103:52" pos:end="103:53">-&gt;</operator><name pos:start="103:54" pos:end="103:60">jfields</name><operator pos:start="103:61" pos:end="103:61">.</operator><name pos:start="103:62" pos:end="103:81">get_output_buffer_id</name></name></expr>)</condition> <block pos:start="103:84" pos:end="140:17">{<block_content pos:start="105:9" pos:end="140:17">

        <expr_stmt pos:start="105:9" pos:end="105:38"><expr pos:start="105:9" pos:end="105:37"><name pos:start="105:9" pos:end="105:33"><name pos:start="105:9" pos:end="105:13">codec</name><operator pos:start="105:14" pos:end="105:15">-&gt;</operator><name pos:start="105:16" pos:end="105:33">has_get_i_o_buffer</name></name> <operator pos:start="105:35" pos:end="105:35">=</operator> <literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>;</expr_stmt>




    <expr_stmt pos:start="110:5" pos:end="110:12"><expr pos:start="110:5" pos:end="110:11"><name pos:start="110:5" pos:end="110:7">ret</name> <operator pos:start="110:9" pos:end="110:9">=</operator> <literal type="number" pos:start="110:11" pos:end="110:11">0</literal></expr>;</expr_stmt>

<label pos:start="112:1" pos:end="112:5"><name pos:start="112:1" pos:end="112:4">fail</name>:</label>

    <if_stmt pos:start="114:5" pos:end="140:17"><if pos:start="114:5" pos:end="140:17">if <condition pos:start="114:8" pos:end="114:13">(<expr pos:start="114:9" pos:end="114:12"><name pos:start="114:9" pos:end="114:12">jarg</name></expr>)</condition> <block pos:start="114:15" pos:end="140:17">{<block_content pos:start="116:9" pos:end="140:17">

        <expr_stmt pos:start="116:9" pos:end="116:42"><expr pos:start="116:9" pos:end="116:41"><call pos:start="116:9" pos:end="116:41"><name pos:start="116:9" pos:end="116:30"><operator pos:start="116:9" pos:end="116:9">(</operator><operator pos:start="116:10" pos:end="116:10">*</operator><name pos:start="116:11" pos:end="116:13">env</name><operator pos:start="116:14" pos:end="116:14">)</operator><operator pos:start="116:15" pos:end="116:16">-&gt;</operator><name pos:start="116:17" pos:end="116:30">DeleteLocalRef</name></name><argument_list pos:start="116:31" pos:end="116:41">(<argument pos:start="116:32" pos:end="116:34"><expr pos:start="116:32" pos:end="116:34"><name pos:start="116:32" pos:end="116:34">env</name></expr></argument>, <argument pos:start="116:37" pos:end="116:40"><expr pos:start="116:37" pos:end="116:40"><name pos:start="116:37" pos:end="116:40">jarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="121:5" pos:end="140:17"><if pos:start="121:5" pos:end="140:17">if <condition pos:start="121:8" pos:end="121:15">(<expr pos:start="121:9" pos:end="121:14"><name pos:start="121:9" pos:end="121:14">object</name></expr>)</condition> <block pos:start="121:17" pos:end="140:17">{<block_content pos:start="123:9" pos:end="140:17">

        <expr_stmt pos:start="123:9" pos:end="123:44"><expr pos:start="123:9" pos:end="123:43"><call pos:start="123:9" pos:end="123:43"><name pos:start="123:9" pos:end="123:30"><operator pos:start="123:9" pos:end="123:9">(</operator><operator pos:start="123:10" pos:end="123:10">*</operator><name pos:start="123:11" pos:end="123:13">env</name><operator pos:start="123:14" pos:end="123:14">)</operator><operator pos:start="123:15" pos:end="123:16">-&gt;</operator><name pos:start="123:17" pos:end="123:30">DeleteLocalRef</name></name><argument_list pos:start="123:31" pos:end="123:43">(<argument pos:start="123:32" pos:end="123:34"><expr pos:start="123:32" pos:end="123:34"><name pos:start="123:32" pos:end="123:34">env</name></expr></argument>, <argument pos:start="123:37" pos:end="123:42"><expr pos:start="123:37" pos:end="123:42"><name pos:start="123:37" pos:end="123:42">object</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <if_stmt pos:start="128:5" pos:end="140:17"><if pos:start="128:5" pos:end="140:17">if <condition pos:start="128:8" pos:end="128:16">(<expr pos:start="128:9" pos:end="128:15"><name pos:start="128:9" pos:end="128:11">ret</name> <operator pos:start="128:13" pos:end="128:13">&lt;</operator> <literal type="number" pos:start="128:15" pos:end="128:15">0</literal></expr>)</condition> <block pos:start="128:18" pos:end="140:17">{<block_content pos:start="133:9" pos:end="140:17">




        <expr_stmt pos:start="133:9" pos:end="133:86"><expr pos:start="133:9" pos:end="133:85"><call pos:start="133:9" pos:end="133:85"><name pos:start="133:9" pos:end="133:28">ff_jni_reset_jfields</name><argument_list pos:start="133:29" pos:end="133:85">(<argument pos:start="133:30" pos:end="133:32"><expr pos:start="133:30" pos:end="133:32"><name pos:start="133:30" pos:end="133:32">env</name></expr></argument>, <argument pos:start="133:35" pos:end="133:49"><expr pos:start="133:35" pos:end="133:49"><operator pos:start="133:35" pos:end="133:35">&amp;</operator><name pos:start="133:36" pos:end="133:49"><name pos:start="133:36" pos:end="133:40">codec</name><operator pos:start="133:41" pos:end="133:42">-&gt;</operator><name pos:start="133:43" pos:end="133:49">jfields</name></name></expr></argument>, <argument pos:start="133:52" pos:end="133:74"><expr pos:start="133:52" pos:end="133:74"><name pos:start="133:52" pos:end="133:74">jni_amediacodec_mapping</name></expr></argument>, <argument pos:start="133:77" pos:end="133:77"><expr pos:start="133:77" pos:end="133:77"><literal type="number" pos:start="133:77" pos:end="133:77">1</literal></expr></argument>, <argument pos:start="133:80" pos:end="133:84"><expr pos:start="133:80" pos:end="133:84"><name pos:start="133:80" pos:end="133:84">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:25"><expr pos:start="135:9" pos:end="135:24"><call pos:start="135:9" pos:end="135:24"><name pos:start="135:9" pos:end="135:16">av_freep</name><argument_list pos:start="135:17" pos:end="135:24">(<argument pos:start="135:18" pos:end="135:23"><expr pos:start="135:18" pos:end="135:23"><operator pos:start="135:18" pos:end="135:18">&amp;</operator><name pos:start="135:19" pos:end="135:23">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>




    <return pos:start="140:5" pos:end="140:17">return <expr pos:start="140:12" pos:end="140:16"><name pos:start="140:12" pos:end="140:16">codec</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></switch></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function>
</unit>
