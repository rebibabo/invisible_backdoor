<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26338.c" pos:tabs="8"><function pos:start="1:1" pos:end="143:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">encode_bitstream</name><parameter_list pos:start="1:28" pos:end="5:66">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">FlashSVContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:63"><decl pos:start="1:48" pos:end="1:63"><type pos:start="1:48" pos:end="1:63"><specifier pos:start="1:48" pos:end="1:52">const</specifier> <name pos:start="1:54" pos:end="1:60">AVFrame</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:63">p</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:72">uint8_t</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier></type><name pos:start="1:75" pos:end="1:77">buf</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:40"><decl pos:start="3:29" pos:end="3:40"><type pos:start="3:29" pos:end="3:40"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:40">buf_size</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:57"><decl pos:start="3:43" pos:end="3:57"><type pos:start="3:43" pos:end="3:57"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:57">block_width</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:75"><decl pos:start="3:60" pos:end="3:75"><type pos:start="3:60" pos:end="3:75"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:75">block_height</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:51"><decl pos:start="5:29" pos:end="5:51"><type pos:start="5:29" pos:end="5:51"><name pos:start="5:29" pos:end="5:35">uint8_t</name> <modifier pos:start="5:37" pos:end="5:37">*</modifier></type><name pos:start="5:38" pos:end="5:51">previous_frame</name></decl></parameter>, <parameter pos:start="5:54" pos:end="5:65"><decl pos:start="5:54" pos:end="5:65"><type pos:start="5:54" pos:end="5:65"><name pos:start="5:54" pos:end="5:56">int</name> <modifier pos:start="5:58" pos:end="5:58">*</modifier></type><name pos:start="5:59" pos:end="5:65">I_frame</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="143:1">{<block_content pos:start="11:5" pos:end="141:19">



    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:17">PutBitContext</name></type> <name pos:start="11:19" pos:end="11:20">pb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:49"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">h_blocks</name></decl>, <decl pos:start="13:19" pos:end="13:26"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:19" pos:end="13:26">v_blocks</name></decl>, <decl pos:start="13:29" pos:end="13:34"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:29" pos:end="13:34">h_part</name></decl>, <decl pos:start="13:37" pos:end="13:42"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:37" pos:end="13:42">v_part</name></decl>, <decl pos:start="13:45" pos:end="13:45"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:45" pos:end="13:45">i</name></decl>, <decl pos:start="13:48" pos:end="13:48"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:48" pos:end="13:48">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:15">buf_pos</name></decl>, <decl pos:start="15:18" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:18" pos:end="15:20">res</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:24"><decl pos:start="17:5" pos:end="17:23"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:19">pred_blocks</name> <init pos:start="17:21" pos:end="17:23">= <expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><call pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:17">init_put_bits</name><argument_list pos:start="21:18" pos:end="21:41">(<argument pos:start="21:19" pos:end="21:21"><expr pos:start="21:19" pos:end="21:21"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:21">pb</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">buf</name></expr></argument>, <argument pos:start="21:29" pos:end="21:40"><expr pos:start="21:29" pos:end="21:40"><name pos:start="21:29" pos:end="21:36">buf_size</name> <operator pos:start="21:38" pos:end="21:38">*</operator> <literal type="number" pos:start="21:40" pos:end="21:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:44"><expr pos:start="25:5" pos:end="25:43"><call pos:start="25:5" pos:end="25:43"><name pos:start="25:5" pos:end="25:12">put_bits</name><argument_list pos:start="25:13" pos:end="25:43">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:16">pb</name></expr></argument>,  <argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">4</literal></expr></argument>, <argument pos:start="25:23" pos:end="25:42"><expr pos:start="25:23" pos:end="25:42"><name pos:start="25:23" pos:end="25:33">block_width</name> <operator pos:start="25:35" pos:end="25:35">/</operator> <literal type="number" pos:start="25:37" pos:end="25:40">16</literal> <operator pos:start="25:40" pos:end="25:40">-</operator> <literal type="number" pos:start="25:42" pos:end="25:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><call pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:12">put_bits</name><argument_list pos:start="27:13" pos:end="27:37">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:16">pb</name></expr></argument>, <argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><literal type="number" pos:start="27:19" pos:end="27:20">12</literal></expr></argument>, <argument pos:start="27:23" pos:end="27:36"><expr pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:36"><name pos:start="27:23" pos:end="27:23">s</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:36">image_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:45"><expr pos:start="29:5" pos:end="29:44"><call pos:start="29:5" pos:end="29:44"><name pos:start="29:5" pos:end="29:12">put_bits</name><argument_list pos:start="29:13" pos:end="29:44">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><operator pos:start="29:14" pos:end="29:14">&amp;</operator><name pos:start="29:15" pos:end="29:16">pb</name></expr></argument>,  <argument pos:start="29:20" pos:end="29:20"><expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">4</literal></expr></argument>, <argument pos:start="29:23" pos:end="29:43"><expr pos:start="29:23" pos:end="29:43"><name pos:start="29:23" pos:end="29:34">block_height</name> <operator pos:start="29:36" pos:end="29:36">/</operator> <literal type="number" pos:start="29:38" pos:end="29:41">16</literal> <operator pos:start="29:41" pos:end="29:41">-</operator> <literal type="number" pos:start="29:43" pos:end="29:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><call pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:12">put_bits</name><argument_list pos:start="31:13" pos:end="31:38">(<argument pos:start="31:14" pos:end="31:16"><expr pos:start="31:14" pos:end="31:16"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:16">pb</name></expr></argument>, <argument pos:start="31:19" pos:end="31:20"><expr pos:start="31:19" pos:end="31:20"><literal type="number" pos:start="31:19" pos:end="31:20">12</literal></expr></argument>, <argument pos:start="31:23" pos:end="31:37"><expr pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:37">image_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:24"><expr pos:start="33:5" pos:end="33:23"><call pos:start="33:5" pos:end="33:23"><name pos:start="33:5" pos:end="33:18">flush_put_bits</name><argument_list pos:start="33:19" pos:end="33:23">(<argument pos:start="33:20" pos:end="33:22"><expr pos:start="33:20" pos:end="33:22"><operator pos:start="33:20" pos:end="33:20">&amp;</operator><name pos:start="33:21" pos:end="33:22">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:11">buf_pos</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:15">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:12">h_blocks</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <name pos:start="39:16" pos:end="39:29"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:29">image_width</name></name>  <operator pos:start="39:32" pos:end="39:32">/</operator> <name pos:start="39:34" pos:end="39:44">block_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:45"><expr pos:start="41:5" pos:end="41:44"><name pos:start="41:5" pos:end="41:10">h_part</name>   <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:29"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:29">image_width</name></name>  <operator pos:start="41:32" pos:end="41:32">%</operator> <name pos:start="41:34" pos:end="41:44">block_width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:12">v_blocks</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:30"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:30">image_height</name></name> <operator pos:start="43:32" pos:end="43:32">/</operator> <name pos:start="43:34" pos:end="43:45">block_height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:46"><expr pos:start="45:5" pos:end="45:45"><name pos:start="45:5" pos:end="45:10">v_part</name>   <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:30"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:30">image_height</name></name> <operator pos:start="45:32" pos:end="45:32">%</operator> <name pos:start="45:34" pos:end="45:45">block_height</name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:37">/* loop over all block columns */</comment>

    <for pos:start="51:5" pos:end="127:5">for <control pos:start="51:9" pos:end="51:53">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">j</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:48"><expr pos:start="51:17" pos:end="51:47"><name pos:start="51:17" pos:end="51:17">j</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:28">v_blocks</name> <operator pos:start="51:30" pos:end="51:30">+</operator> <operator pos:start="51:32" pos:end="51:32">(</operator><ternary pos:start="51:33" pos:end="51:46"><condition pos:start="51:33" pos:end="51:40"><expr pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:38">v_part</name></expr> ?</condition><then pos:start="51:42" pos:end="51:42"> <expr pos:start="51:42" pos:end="51:42"><literal type="number" pos:start="51:42" pos:end="51:42">1</literal></expr> </then><else pos:start="51:44" pos:end="51:46">: <expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">0</literal></expr></else></ternary><operator pos:start="51:47" pos:end="51:47">)</operator></expr>;</condition> <incr pos:start="51:50" pos:end="51:52"><expr pos:start="51:50" pos:end="51:52"><name pos:start="51:50" pos:end="51:50">j</name><operator pos:start="51:51" pos:end="51:52">++</operator></expr></incr>)</control> <block pos:start="51:55" pos:end="127:5">{<block_content pos:start="55:9" pos:end="125:9">



        <decl_stmt pos:start="55:9" pos:end="55:37"><decl pos:start="55:9" pos:end="55:36"><type pos:start="55:9" pos:end="55:11"><name pos:start="55:9" pos:end="55:11">int</name></type> <name pos:start="55:13" pos:end="55:17">y_pos</name> <init pos:start="55:19" pos:end="55:36">= <expr pos:start="55:21" pos:end="55:36"><name pos:start="55:21" pos:end="55:21">j</name> <operator pos:start="55:23" pos:end="55:23">*</operator> <name pos:start="55:25" pos:end="55:36">block_height</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="55:39" pos:end="55:67">// vertical position in frame</comment>

        <decl_stmt pos:start="57:9" pos:end="57:68"><decl pos:start="57:9" pos:end="57:67"><type pos:start="57:9" pos:end="57:11"><name pos:start="57:9" pos:end="57:11">int</name></type> <name pos:start="57:13" pos:end="57:26">cur_blk_height</name> <init pos:start="57:28" pos:end="57:67">= <expr pos:start="57:30" pos:end="57:67"><ternary pos:start="57:30" pos:end="57:67"><condition pos:start="57:30" pos:end="57:45"><expr pos:start="57:30" pos:end="57:43"><operator pos:start="57:30" pos:end="57:30">(</operator><name pos:start="57:31" pos:end="57:31">j</name> <operator pos:start="57:33" pos:end="57:33">&lt;</operator> <name pos:start="57:35" pos:end="57:42">v_blocks</name><operator pos:start="57:43" pos:end="57:43">)</operator></expr> ?</condition><then pos:start="57:47" pos:end="57:58"> <expr pos:start="57:47" pos:end="57:58"><name pos:start="57:47" pos:end="57:58">block_height</name></expr> </then><else pos:start="57:60" pos:end="57:67">: <expr pos:start="57:62" pos:end="57:67"><name pos:start="57:62" pos:end="57:67">v_part</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <comment type="block" pos:start="61:9" pos:end="61:38">/* loop over all block rows */</comment>

        <for pos:start="63:9" pos:end="125:9">for <control pos:start="63:13" pos:end="63:57">(<init pos:start="63:14" pos:end="63:19"><expr pos:start="63:14" pos:end="63:18"><name pos:start="63:14" pos:end="63:14">i</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <literal type="number" pos:start="63:18" pos:end="63:18">0</literal></expr>;</init> <condition pos:start="63:21" pos:end="63:52"><expr pos:start="63:21" pos:end="63:51"><name pos:start="63:21" pos:end="63:21">i</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <name pos:start="63:25" pos:end="63:32">h_blocks</name> <operator pos:start="63:34" pos:end="63:34">+</operator> <operator pos:start="63:36" pos:end="63:36">(</operator><ternary pos:start="63:37" pos:end="63:50"><condition pos:start="63:37" pos:end="63:44"><expr pos:start="63:37" pos:end="63:42"><name pos:start="63:37" pos:end="63:42">h_part</name></expr> ?</condition><then pos:start="63:46" pos:end="63:46"> <expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">1</literal></expr> </then><else pos:start="63:48" pos:end="63:50">: <expr pos:start="63:50" pos:end="63:50"><literal type="number" pos:start="63:50" pos:end="63:50">0</literal></expr></else></ternary><operator pos:start="63:51" pos:end="63:51">)</operator></expr>;</condition> <incr pos:start="63:54" pos:end="63:56"><expr pos:start="63:54" pos:end="63:56"><name pos:start="63:54" pos:end="63:54">i</name><operator pos:start="63:55" pos:end="63:56">++</operator></expr></incr>)</control> <block pos:start="63:59" pos:end="125:9">{<block_content pos:start="65:13" pos:end="123:13">

            <decl_stmt pos:start="65:13" pos:end="65:40"><decl pos:start="65:13" pos:end="65:39"><type pos:start="65:13" pos:end="65:15"><name pos:start="65:13" pos:end="65:15">int</name></type> <name pos:start="65:17" pos:end="65:21">x_pos</name> <init pos:start="65:23" pos:end="65:39">= <expr pos:start="65:25" pos:end="65:39"><name pos:start="65:25" pos:end="65:25">i</name> <operator pos:start="65:27" pos:end="65:27">*</operator> <name pos:start="65:29" pos:end="65:39">block_width</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="65:42" pos:end="65:72">// horizontal position in frame</comment>

            <decl_stmt pos:start="67:13" pos:end="67:70"><decl pos:start="67:13" pos:end="67:69"><type pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">int</name></type> <name pos:start="67:17" pos:end="67:29">cur_blk_width</name> <init pos:start="67:31" pos:end="67:69">= <expr pos:start="67:33" pos:end="67:69"><ternary pos:start="67:33" pos:end="67:69"><condition pos:start="67:33" pos:end="67:48"><expr pos:start="67:33" pos:end="67:46"><operator pos:start="67:33" pos:end="67:33">(</operator><name pos:start="67:34" pos:end="67:34">i</name> <operator pos:start="67:36" pos:end="67:36">&lt;</operator> <name pos:start="67:38" pos:end="67:45">h_blocks</name><operator pos:start="67:46" pos:end="67:46">)</operator></expr> ?</condition><then pos:start="67:50" pos:end="67:60"> <expr pos:start="67:50" pos:end="67:60"><name pos:start="67:50" pos:end="67:60">block_width</name></expr> </then><else pos:start="67:62" pos:end="67:69">: <expr pos:start="67:64" pos:end="67:69"><name pos:start="67:64" pos:end="67:69">h_part</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="69:13" pos:end="69:27"><decl pos:start="69:13" pos:end="69:26"><type pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:15">int</name></type> <name pos:start="69:17" pos:end="69:19">ret</name> <init pos:start="69:21" pos:end="69:26">= <expr pos:start="69:23" pos:end="69:26"><name pos:start="69:23" pos:end="69:26">Z_OK</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="71:13" pos:end="71:41"><decl pos:start="71:13" pos:end="71:40"><type pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:19">uint8_t</name> <modifier pos:start="71:21" pos:end="71:21">*</modifier></type><name pos:start="71:22" pos:end="71:24">ptr</name> <init pos:start="71:26" pos:end="71:40">= <expr pos:start="71:28" pos:end="71:40"><name pos:start="71:28" pos:end="71:30">buf</name> <operator pos:start="71:32" pos:end="71:32">+</operator> <name pos:start="71:34" pos:end="71:40">buf_pos</name></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="75:13" pos:end="77:65">/* copy the block to the temp buffer before compression

             * (if it differs from the previous frame's block) */</comment>

            <expr_stmt pos:start="79:13" pos:end="85:66"><expr pos:start="79:13" pos:end="85:65"><name pos:start="79:13" pos:end="79:15">res</name> <operator pos:start="79:17" pos:end="79:17">=</operator> <call pos:start="79:19" pos:end="85:65"><name pos:start="79:19" pos:end="79:33">copy_region_enc</name><argument_list pos:start="79:34" pos:end="85:65">(<argument pos:start="79:35" pos:end="79:44"><expr pos:start="79:35" pos:end="79:44"><name pos:start="79:35" pos:end="79:44"><name pos:start="79:35" pos:end="79:35">p</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:41">data</name><index pos:start="79:42" pos:end="79:44">[<expr pos:start="79:43" pos:end="79:43"><literal type="number" pos:start="79:43" pos:end="79:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="79:47" pos:end="79:57"><expr pos:start="79:47" pos:end="79:57"><name pos:start="79:47" pos:end="79:57"><name pos:start="79:47" pos:end="79:47">s</name><operator pos:start="79:48" pos:end="79:49">-&gt;</operator><name pos:start="79:50" pos:end="79:57">tmpblock</name></name></expr></argument>,

                                  <argument pos:start="81:35" pos:end="81:80"><expr pos:start="81:35" pos:end="81:80"><name pos:start="81:35" pos:end="81:49"><name pos:start="81:35" pos:end="81:35">s</name><operator pos:start="81:36" pos:end="81:37">-&gt;</operator><name pos:start="81:38" pos:end="81:49">image_height</name></name> <operator pos:start="81:51" pos:end="81:51">-</operator> <operator pos:start="81:53" pos:end="81:53">(</operator><name pos:start="81:54" pos:end="81:58">y_pos</name> <operator pos:start="81:60" pos:end="81:60">+</operator> <name pos:start="81:62" pos:end="81:75">cur_blk_height</name> <operator pos:start="81:77" pos:end="81:77">+</operator> <literal type="number" pos:start="81:79" pos:end="81:79">1</literal><operator pos:start="81:80" pos:end="81:80">)</operator></expr></argument>,

                                  <argument pos:start="83:35" pos:end="83:39"><expr pos:start="83:35" pos:end="83:39"><name pos:start="83:35" pos:end="83:39">x_pos</name></expr></argument>, <argument pos:start="83:42" pos:end="83:55"><expr pos:start="83:42" pos:end="83:55"><name pos:start="83:42" pos:end="83:55">cur_blk_height</name></expr></argument>, <argument pos:start="83:58" pos:end="83:70"><expr pos:start="83:58" pos:end="83:70"><name pos:start="83:58" pos:end="83:70">cur_blk_width</name></expr></argument>,

                                  <argument pos:start="85:35" pos:end="85:48"><expr pos:start="85:35" pos:end="85:48"><name pos:start="85:35" pos:end="85:48"><name pos:start="85:35" pos:end="85:35">p</name><operator pos:start="85:36" pos:end="85:37">-&gt;</operator><name pos:start="85:38" pos:end="85:45">linesize</name><index pos:start="85:46" pos:end="85:48">[<expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="85:51" pos:end="85:64"><expr pos:start="85:51" pos:end="85:64"><name pos:start="85:51" pos:end="85:64">previous_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="89:13" pos:end="123:13"><if pos:start="89:13" pos:end="115:13">if <condition pos:start="89:16" pos:end="89:32">(<expr pos:start="89:17" pos:end="89:31"><name pos:start="89:17" pos:end="89:19">res</name> <operator pos:start="89:21" pos:end="89:22">||</operator> <operator pos:start="89:24" pos:end="89:24">*</operator><name pos:start="89:25" pos:end="89:31">I_frame</name></expr>)</condition> <block pos:start="89:34" pos:end="115:13">{<block_content pos:start="91:17" pos:end="113:61">

                <decl_stmt pos:start="91:17" pos:end="91:69"><decl pos:start="91:17" pos:end="91:68"><type pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:24">unsigned</name> <name pos:start="91:26" pos:end="91:29">long</name></type> <name pos:start="91:31" pos:end="91:35">zsize</name> <init pos:start="91:37" pos:end="91:68">= <expr pos:start="91:39" pos:end="91:68"><literal type="number" pos:start="91:39" pos:end="91:39">3</literal> <operator pos:start="91:41" pos:end="91:41">*</operator> <name pos:start="91:43" pos:end="91:53">block_width</name> <operator pos:start="91:55" pos:end="91:55">*</operator> <name pos:start="91:57" pos:end="91:68">block_height</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="93:17" pos:end="95:71"><expr pos:start="93:17" pos:end="95:70"><name pos:start="93:17" pos:end="93:19">ret</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <call pos:start="93:23" pos:end="95:70"><name pos:start="93:23" pos:end="93:31">compress2</name><argument_list pos:start="93:32" pos:end="95:70">(<argument pos:start="93:33" pos:end="93:39"><expr pos:start="93:33" pos:end="93:39"><name pos:start="93:33" pos:end="93:35">ptr</name> <operator pos:start="93:37" pos:end="93:37">+</operator> <literal type="number" pos:start="93:39" pos:end="93:39">2</literal></expr></argument>, <argument pos:start="93:42" pos:end="93:47"><expr pos:start="93:42" pos:end="93:47"><operator pos:start="93:42" pos:end="93:42">&amp;</operator><name pos:start="93:43" pos:end="93:47">zsize</name></expr></argument>, <argument pos:start="93:50" pos:end="93:60"><expr pos:start="93:50" pos:end="93:60"><name pos:start="93:50" pos:end="93:60"><name pos:start="93:50" pos:end="93:50">s</name><operator pos:start="93:51" pos:end="93:52">-&gt;</operator><name pos:start="93:53" pos:end="93:60">tmpblock</name></name></expr></argument>,

                                <argument pos:start="95:33" pos:end="95:66"><expr pos:start="95:33" pos:end="95:66"><literal type="number" pos:start="95:33" pos:end="95:33">3</literal> <operator pos:start="95:35" pos:end="95:35">*</operator> <name pos:start="95:37" pos:end="95:49">cur_blk_width</name> <operator pos:start="95:51" pos:end="95:51">*</operator> <name pos:start="95:53" pos:end="95:66">cur_blk_height</name></expr></argument>, <argument pos:start="95:69" pos:end="95:69"><expr pos:start="95:69" pos:end="95:69"><literal type="number" pos:start="95:69" pos:end="95:69">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="line" pos:start="99:17" pos:end="99:50">//ret = deflateReset(&amp;s-&gt;zstream);</comment>

                <if_stmt pos:start="101:17" pos:end="105:74"><if pos:start="101:17" pos:end="105:74">if <condition pos:start="101:20" pos:end="101:32">(<expr pos:start="101:21" pos:end="101:31"><name pos:start="101:21" pos:end="101:23">ret</name> <operator pos:start="101:25" pos:end="101:26">!=</operator> <name pos:start="101:28" pos:end="101:31">Z_OK</name></expr>)</condition><block type="pseudo" pos:start="103:21" pos:end="105:74"><block_content pos:start="103:21" pos:end="105:74">

                    <expr_stmt pos:start="103:21" pos:end="105:74"><expr pos:start="103:21" pos:end="105:73"><call pos:start="103:21" pos:end="105:73"><name pos:start="103:21" pos:end="103:26">av_log</name><argument_list pos:start="103:27" pos:end="105:73">(<argument pos:start="103:28" pos:end="103:35"><expr pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:35"><name pos:start="103:28" pos:end="103:28">s</name><operator pos:start="103:29" pos:end="103:30">-&gt;</operator><name pos:start="103:31" pos:end="103:35">avctx</name></name></expr></argument>, <argument pos:start="103:38" pos:end="103:49"><expr pos:start="103:38" pos:end="103:49"><name pos:start="103:38" pos:end="103:49">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="105:28" pos:end="105:66"><expr pos:start="105:28" pos:end="105:66"><literal type="string" pos:start="105:28" pos:end="105:66">"error while compressing block %dx%d\n"</literal></expr></argument>, <argument pos:start="105:69" pos:end="105:69"><expr pos:start="105:69" pos:end="105:69"><name pos:start="105:69" pos:end="105:69">i</name></expr></argument>, <argument pos:start="105:72" pos:end="105:72"><expr pos:start="105:72" pos:end="105:72"><name pos:start="105:72" pos:end="105:72">j</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



                <expr_stmt pos:start="109:17" pos:end="109:49"><expr pos:start="109:17" pos:end="109:48"><call pos:start="109:17" pos:end="109:48"><name pos:start="109:17" pos:end="109:35">bytestream_put_be16</name><argument_list pos:start="109:36" pos:end="109:48">(<argument pos:start="109:37" pos:end="109:40"><expr pos:start="109:37" pos:end="109:40"><operator pos:start="109:37" pos:end="109:37">&amp;</operator><name pos:start="109:38" pos:end="109:40">ptr</name></expr></argument>, <argument pos:start="109:43" pos:end="109:47"><expr pos:start="109:43" pos:end="109:47"><name pos:start="109:43" pos:end="109:47">zsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="111:17" pos:end="111:37"><expr pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:23">buf_pos</name> <operator pos:start="111:25" pos:end="111:26">+=</operator> <name pos:start="111:28" pos:end="111:32">zsize</name> <operator pos:start="111:34" pos:end="111:34">+</operator> <literal type="number" pos:start="111:36" pos:end="111:36">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:61"><expr pos:start="113:17" pos:end="113:60"><call pos:start="113:17" pos:end="113:60"><name pos:start="113:17" pos:end="113:23">av_dlog</name><argument_list pos:start="113:24" pos:end="113:60">(<argument pos:start="113:25" pos:end="113:32"><expr pos:start="113:25" pos:end="113:32"><name pos:start="113:25" pos:end="113:32"><name pos:start="113:25" pos:end="113:25">s</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:32">avctx</name></name></expr></argument>, <argument pos:start="113:35" pos:end="113:50"><expr pos:start="113:35" pos:end="113:50"><literal type="string" pos:start="113:35" pos:end="113:50">"buf_pos = %d\n"</literal></expr></argument>, <argument pos:start="113:53" pos:end="113:59"><expr pos:start="113:53" pos:end="113:59"><name pos:start="113:53" pos:end="113:59">buf_pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="115:15" pos:end="123:13">else <block pos:start="115:20" pos:end="123:13">{<block_content pos:start="117:17" pos:end="121:29">

                <expr_stmt pos:start="117:17" pos:end="117:30"><expr pos:start="117:17" pos:end="117:29"><name pos:start="117:17" pos:end="117:27">pred_blocks</name><operator pos:start="117:28" pos:end="117:29">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="119:17" pos:end="119:45"><expr pos:start="119:17" pos:end="119:44"><call pos:start="119:17" pos:end="119:44"><name pos:start="119:17" pos:end="119:35">bytestream_put_be16</name><argument_list pos:start="119:36" pos:end="119:44">(<argument pos:start="119:37" pos:end="119:40"><expr pos:start="119:37" pos:end="119:40"><operator pos:start="119:37" pos:end="119:37">&amp;</operator><name pos:start="119:38" pos:end="119:40">ptr</name></expr></argument>, <argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="121:17" pos:end="121:29"><expr pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:23">buf_pos</name> <operator pos:start="121:25" pos:end="121:26">+=</operator> <literal type="number" pos:start="121:28" pos:end="121:28">2</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="131:5" pos:end="137:21"><if pos:start="131:5" pos:end="133:21">if <condition pos:start="131:8" pos:end="131:20">(<expr pos:start="131:9" pos:end="131:19"><name pos:start="131:9" pos:end="131:19">pred_blocks</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:21"><block_content pos:start="133:9" pos:end="133:21">

        <expr_stmt pos:start="133:9" pos:end="133:21"><expr pos:start="133:9" pos:end="133:20"><operator pos:start="133:9" pos:end="133:9">*</operator><name pos:start="133:10" pos:end="133:16">I_frame</name> <operator pos:start="133:18" pos:end="133:18">=</operator> <literal type="number" pos:start="133:20" pos:end="133:20">0</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="135:5" pos:end="137:21">else<block type="pseudo" pos:start="137:9" pos:end="137:21"><block_content pos:start="137:9" pos:end="137:21">

        <expr_stmt pos:start="137:9" pos:end="137:21"><expr pos:start="137:9" pos:end="137:20"><operator pos:start="137:9" pos:end="137:9">*</operator><name pos:start="137:10" pos:end="137:16">I_frame</name> <operator pos:start="137:18" pos:end="137:18">=</operator> <literal type="number" pos:start="137:20" pos:end="137:20">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="141:5" pos:end="141:19">return <expr pos:start="141:12" pos:end="141:18"><name pos:start="141:12" pos:end="141:18">buf_pos</name></expr>;</return>

</block_content>}</block></function>
</unit>
