<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7302.c" pos:tabs="8"><function pos:start="1:1" pos:end="54:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">mpegts_read_packet</name><parameter_list pos:start="1:30" pos:end="3:44">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:45">AVFormatContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:43"><decl pos:start="3:31" pos:end="3:43"><type pos:start="3:31" pos:end="3:43"><name pos:start="3:31" pos:end="3:38">AVPacket</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:43">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="54:1">{<block_content pos:start="7:5" pos:end="52:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">MpegTSContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">ts</name> <init pos:start="7:23" pos:end="7:36">= <expr pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>;</decl_stmt>




    <expr_stmt pos:start="14:5" pos:end="14:18"><expr pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:11"><name pos:start="14:5" pos:end="14:6">ts</name><operator pos:start="14:7" pos:end="14:8">-&gt;</operator><name pos:start="14:9" pos:end="14:11">pkt</name></name> <operator pos:start="14:13" pos:end="14:13">=</operator> <name pos:start="14:15" pos:end="14:17">pkt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="16:5" pos:end="16:32"><expr pos:start="16:5" pos:end="16:31"><name pos:start="16:5" pos:end="16:7">ret</name> <operator pos:start="16:9" pos:end="16:9">=</operator> <call pos:start="16:11" pos:end="16:31"><name pos:start="16:11" pos:end="16:24">handle_packets</name><argument_list pos:start="16:25" pos:end="16:31">(<argument pos:start="16:26" pos:end="16:27"><expr pos:start="16:26" pos:end="16:27"><name pos:start="16:26" pos:end="16:27">ts</name></expr></argument>, <argument pos:start="16:30" pos:end="16:30"><expr pos:start="16:30" pos:end="16:30"><literal type="number" pos:start="16:30" pos:end="16:30">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="18:5" pos:end="44:5"><if pos:start="18:5" pos:end="44:5">if <condition pos:start="18:8" pos:end="18:16">(<expr pos:start="18:9" pos:end="18:15"><name pos:start="18:9" pos:end="18:11">ret</name> <operator pos:start="18:13" pos:end="18:13">&lt;</operator> <literal type="number" pos:start="18:15" pos:end="18:15">0</literal></expr>)</condition> <block pos:start="18:18" pos:end="44:5">{<block_content pos:start="22:9" pos:end="42:9">

        <comment type="block" pos:start="20:9" pos:end="20:33">/* flush pes data left */</comment>

        <for pos:start="22:9" pos:end="42:9">for <control pos:start="22:13" pos:end="22:40">(<init pos:start="22:14" pos:end="22:19"><expr pos:start="22:14" pos:end="22:18"><name pos:start="22:14" pos:end="22:14">i</name> <operator pos:start="22:16" pos:end="22:16">=</operator> <literal type="number" pos:start="22:18" pos:end="22:18">0</literal></expr>;</init> <condition pos:start="22:21" pos:end="22:35"><expr pos:start="22:21" pos:end="22:34"><name pos:start="22:21" pos:end="22:21">i</name> <operator pos:start="22:23" pos:end="22:23">&lt;</operator> <name pos:start="22:25" pos:end="22:34">NB_PID_MAX</name></expr>;</condition> <incr pos:start="22:37" pos:end="22:39"><expr pos:start="22:37" pos:end="22:39"><name pos:start="22:37" pos:end="22:37">i</name><operator pos:start="22:38" pos:end="22:39">++</operator></expr></incr>)</control> <block pos:start="22:42" pos:end="42:9">{<block_content pos:start="24:13" pos:end="40:13">

            <if_stmt pos:start="24:13" pos:end="40:13"><if pos:start="24:13" pos:end="40:13">if <condition pos:start="24:16" pos:end="24:63">(<expr pos:start="24:17" pos:end="24:62"><name pos:start="24:17" pos:end="24:27"><name pos:start="24:17" pos:end="24:18">ts</name><operator pos:start="24:19" pos:end="24:20">-&gt;</operator><name pos:start="24:21" pos:end="24:24">pids</name><index pos:start="24:25" pos:end="24:27">[<expr pos:start="24:26" pos:end="24:26"><name pos:start="24:26" pos:end="24:26">i</name></expr>]</index></name> <operator pos:start="24:29" pos:end="24:30">&amp;&amp;</operator> <name pos:start="24:32" pos:end="24:42"><name pos:start="24:32" pos:end="24:33">ts</name><operator pos:start="24:34" pos:end="24:35">-&gt;</operator><name pos:start="24:36" pos:end="24:39">pids</name><index pos:start="24:40" pos:end="24:42">[<expr pos:start="24:41" pos:end="24:41"><name pos:start="24:41" pos:end="24:41">i</name></expr>]</index></name><operator pos:start="24:43" pos:end="24:44">-&gt;</operator><name pos:start="24:45" pos:end="24:48">type</name> <operator pos:start="24:50" pos:end="24:51">==</operator> <name pos:start="24:53" pos:end="24:62">MPEGTS_PES</name></expr>)</condition> <block pos:start="24:65" pos:end="40:13">{<block_content pos:start="26:17" pos:end="38:17">

                <decl_stmt pos:start="26:17" pos:end="26:67"><decl pos:start="26:17" pos:end="26:66"><type pos:start="26:17" pos:end="26:28"><name pos:start="26:17" pos:end="26:26">PESContext</name> <modifier pos:start="26:28" pos:end="26:28">*</modifier></type><name pos:start="26:29" pos:end="26:31">pes</name> <init pos:start="26:33" pos:end="26:66">= <expr pos:start="26:35" pos:end="26:66"><name pos:start="26:35" pos:end="26:45"><name pos:start="26:35" pos:end="26:36">ts</name><operator pos:start="26:37" pos:end="26:38">-&gt;</operator><name pos:start="26:39" pos:end="26:42">pids</name><index pos:start="26:43" pos:end="26:45">[<expr pos:start="26:44" pos:end="26:44"><name pos:start="26:44" pos:end="26:44">i</name></expr>]</index></name><operator pos:start="26:46" pos:end="26:47">-&gt;</operator><name pos:start="26:48" pos:end="26:66"><name pos:start="26:48" pos:end="26:48">u</name><operator pos:start="26:49" pos:end="26:49">.</operator><name pos:start="26:50" pos:end="26:59">pes_filter</name><operator pos:start="26:60" pos:end="26:60">.</operator><name pos:start="26:61" pos:end="26:66">opaque</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="28:17" pos:end="38:17"><if pos:start="28:17" pos:end="38:17">if <condition pos:start="28:20" pos:end="28:72">(<expr pos:start="28:21" pos:end="28:71"><name pos:start="28:21" pos:end="28:30"><name pos:start="28:21" pos:end="28:23">pes</name><operator pos:start="28:24" pos:end="28:25">-&gt;</operator><name pos:start="28:26" pos:end="28:30">state</name></name> <operator pos:start="28:32" pos:end="28:33">==</operator> <name pos:start="28:35" pos:end="28:48">MPEGTS_PAYLOAD</name> <operator pos:start="28:50" pos:end="28:51">&amp;&amp;</operator> <name pos:start="28:53" pos:end="28:67"><name pos:start="28:53" pos:end="28:55">pes</name><operator pos:start="28:56" pos:end="28:57">-&gt;</operator><name pos:start="28:58" pos:end="28:67">data_index</name></name> <operator pos:start="28:69" pos:end="28:69">&gt;</operator> <literal type="number" pos:start="28:71" pos:end="28:71">0</literal></expr>)</condition> <block pos:start="28:74" pos:end="38:17">{<block_content pos:start="30:21" pos:end="36:26">

                    <expr_stmt pos:start="30:21" pos:end="30:45"><expr pos:start="30:21" pos:end="30:44"><call pos:start="30:21" pos:end="30:44"><name pos:start="30:21" pos:end="30:34">new_pes_packet</name><argument_list pos:start="30:35" pos:end="30:44">(<argument pos:start="30:36" pos:end="30:38"><expr pos:start="30:36" pos:end="30:38"><name pos:start="30:36" pos:end="30:38">pes</name></expr></argument>, <argument pos:start="30:41" pos:end="30:43"><expr pos:start="30:41" pos:end="30:43"><name pos:start="30:41" pos:end="30:43">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="32:21" pos:end="32:45"><expr pos:start="32:21" pos:end="32:44"><name pos:start="32:21" pos:end="32:30"><name pos:start="32:21" pos:end="32:23">pes</name><operator pos:start="32:24" pos:end="32:25">-&gt;</operator><name pos:start="32:26" pos:end="32:30">state</name></name> <operator pos:start="32:32" pos:end="32:32">=</operator> <name pos:start="32:34" pos:end="32:44">MPEGTS_SKIP</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="34:21" pos:end="34:28"><expr pos:start="34:21" pos:end="34:27"><name pos:start="34:21" pos:end="34:23">ret</name> <operator pos:start="34:25" pos:end="34:25">=</operator> <literal type="number" pos:start="34:27" pos:end="34:27">0</literal></expr>;</expr_stmt>

                    <break pos:start="36:21" pos:end="36:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="48:5" pos:end="50:29"><if pos:start="48:5" pos:end="50:29">if <condition pos:start="48:8" pos:end="48:30">(<expr pos:start="48:9" pos:end="48:29"><operator pos:start="48:9" pos:end="48:9">!</operator><name pos:start="48:10" pos:end="48:12">ret</name> <operator pos:start="48:14" pos:end="48:15">&amp;&amp;</operator> <name pos:start="48:17" pos:end="48:25"><name pos:start="48:17" pos:end="48:19">pkt</name><operator pos:start="48:20" pos:end="48:21">-&gt;</operator><name pos:start="48:22" pos:end="48:25">size</name></name> <operator pos:start="48:27" pos:end="48:27">&lt;</operator> <literal type="number" pos:start="48:29" pos:end="48:29">0</literal></expr>)</condition><block type="pseudo" pos:start="50:9" pos:end="50:29"><block_content pos:start="50:9" pos:end="50:29">

        <expr_stmt pos:start="50:9" pos:end="50:29"><expr pos:start="50:9" pos:end="50:28"><name pos:start="50:9" pos:end="50:11">ret</name> <operator pos:start="50:13" pos:end="50:13">=</operator> <call pos:start="50:15" pos:end="50:28"><name pos:start="50:15" pos:end="50:21">AVERROR</name><argument_list pos:start="50:22" pos:end="50:28">(<argument pos:start="50:23" pos:end="50:27"><expr pos:start="50:23" pos:end="50:27"><name pos:start="50:23" pos:end="50:27">EINTR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="52:5" pos:end="52:15">return <expr pos:start="52:12" pos:end="52:14"><name pos:start="52:12" pos:end="52:14">ret</name></expr>;</return>

</block_content>}</block></function></unit>
