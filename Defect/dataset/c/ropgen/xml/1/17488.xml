<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17488.c" pos:tabs="8"><decl_stmt pos:start="1:1" pos:end="115:1"><decl pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">decode_pce</name><argument_list pos:start="1:22" pos:end="5:40">(<argument pos:start="1:23" pos:end="1:43"><expr pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <operator pos:start="1:38" pos:end="1:38">*</operator><name pos:start="1:39" pos:end="1:43">avctx</name></expr></argument>, <argument pos:start="1:46" pos:end="1:67"><expr pos:start="1:46" pos:end="1:67"><name pos:start="1:46" pos:end="1:61">MPEG4AudioConfig</name> <operator pos:start="1:63" pos:end="1:63">*</operator><name pos:start="1:64" pos:end="1:67">m4ac</name></expr></argument>,

                      <argument pos:start="3:23" pos:end="3:46"><expr pos:start="3:23" pos:end="3:46"><call pos:start="3:23" pos:end="3:43"><name pos:start="3:23" pos:end="3:29">uint8_t</name> <argument_list pos:start="3:31" pos:end="3:43">(<argument pos:start="3:32" pos:end="3:42"><expr pos:start="3:32" pos:end="3:42"><operator pos:start="3:32" pos:end="3:32">*</operator><name pos:start="3:33" pos:end="3:42">layout_map</name></expr></argument>)</argument_list></call><index pos:start="3:44" pos:end="3:46">[<expr pos:start="3:45" pos:end="3:45"><literal type="number" pos:start="3:45" pos:end="3:45">3</literal></expr>]</index></expr></argument>,

                      <argument pos:start="5:23" pos:end="5:39"><expr pos:start="5:23" pos:end="5:39"><name pos:start="5:23" pos:end="5:35">GetBitContext</name> <operator pos:start="5:37" pos:end="5:37">*</operator><name pos:start="5:38" pos:end="5:39">gb</name></expr></argument>)</argument_list>

<block pos:start="7:1" pos:end="115:1">{<block_content pos:start="9:5" pos:end="113:16">

    <decl_stmt pos:start="9:5" pos:end="9:87"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">num_front</name></decl>, <decl pos:start="9:20" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:27">num_side</name></decl>, <decl pos:start="9:30" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:30" pos:end="9:37">num_back</name></decl>, <decl pos:start="9:40" pos:end="9:46"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:40" pos:end="9:46">num_lfe</name></decl>, <decl pos:start="9:49" pos:end="9:62"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:49" pos:end="9:62">num_assoc_data</name></decl>, <decl pos:start="9:65" pos:end="9:70"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:65" pos:end="9:70">num_cc</name></decl>, <decl pos:start="9:73" pos:end="9:86"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:73" pos:end="9:86">sampling_index</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19">comment_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">tags</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:21"><expr pos:start="17:5" pos:end="17:20"><call pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:13">skip_bits</name><argument_list pos:start="17:14" pos:end="17:20">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">gb</name></expr></argument>, <argument pos:start="17:19" pos:end="17:19"><expr pos:start="17:19" pos:end="17:19"><literal type="number" pos:start="17:19" pos:end="17:19">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="17:24" pos:end="17:37">// object_type</comment>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:18">sampling_index</name> <operator pos:start="21:20" pos:end="21:20">=</operator> <call pos:start="21:22" pos:end="21:36"><name pos:start="21:22" pos:end="21:29">get_bits</name><argument_list pos:start="21:30" pos:end="21:36">(<argument pos:start="21:31" pos:end="21:32"><expr pos:start="21:31" pos:end="21:32"><name pos:start="21:31" pos:end="21:32">gb</name></expr></argument>, <argument pos:start="21:35" pos:end="21:35"><expr pos:start="21:35" pos:end="21:35"><literal type="number" pos:start="21:35" pos:end="21:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:153"><if pos:start="23:5" pos:end="25:153">if <condition pos:start="23:8" pos:end="23:47">(<expr pos:start="23:9" pos:end="23:46"><name pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:12">m4ac</name><operator pos:start="23:13" pos:end="23:14">-&gt;</operator><name pos:start="23:15" pos:end="23:28">sampling_index</name></name> <operator pos:start="23:30" pos:end="23:31">!=</operator> <name pos:start="23:33" pos:end="23:46">sampling_index</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:153"><block_content pos:start="25:9" pos:end="25:153">

        <expr_stmt pos:start="25:9" pos:end="25:153"><expr pos:start="25:9" pos:end="25:152"><call pos:start="25:9" pos:end="25:152"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:152">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:36"><expr pos:start="25:23" pos:end="25:36"><name pos:start="25:23" pos:end="25:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="25:39" pos:end="25:151"><expr pos:start="25:39" pos:end="25:151"><literal type="string" pos:start="25:39" pos:end="25:151">"Sample rate index in program config element does not match the sample rate index configured by the container.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:13">num_front</name>       <operator pos:start="29:21" pos:end="29:21">=</operator> <call pos:start="29:23" pos:end="29:37"><name pos:start="29:23" pos:end="29:30">get_bits</name><argument_list pos:start="29:31" pos:end="29:37">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">gb</name></expr></argument>, <argument pos:start="29:36" pos:end="29:36"><expr pos:start="29:36" pos:end="29:36"><literal type="number" pos:start="29:36" pos:end="29:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:38"><expr pos:start="31:5" pos:end="31:37"><name pos:start="31:5" pos:end="31:12">num_side</name>        <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:37"><name pos:start="31:23" pos:end="31:30">get_bits</name><argument_list pos:start="31:31" pos:end="31:37">(<argument pos:start="31:32" pos:end="31:33"><expr pos:start="31:32" pos:end="31:33"><name pos:start="31:32" pos:end="31:33">gb</name></expr></argument>, <argument pos:start="31:36" pos:end="31:36"><expr pos:start="31:36" pos:end="31:36"><literal type="number" pos:start="31:36" pos:end="31:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:38"><expr pos:start="33:5" pos:end="33:37"><name pos:start="33:5" pos:end="33:12">num_back</name>        <operator pos:start="33:21" pos:end="33:21">=</operator> <call pos:start="33:23" pos:end="33:37"><name pos:start="33:23" pos:end="33:30">get_bits</name><argument_list pos:start="33:31" pos:end="33:37">(<argument pos:start="33:32" pos:end="33:33"><expr pos:start="33:32" pos:end="33:33"><name pos:start="33:32" pos:end="33:33">gb</name></expr></argument>, <argument pos:start="33:36" pos:end="33:36"><expr pos:start="33:36" pos:end="33:36"><literal type="number" pos:start="33:36" pos:end="33:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:38"><expr pos:start="35:5" pos:end="35:37"><name pos:start="35:5" pos:end="35:11">num_lfe</name>         <operator pos:start="35:21" pos:end="35:21">=</operator> <call pos:start="35:23" pos:end="35:37"><name pos:start="35:23" pos:end="35:30">get_bits</name><argument_list pos:start="35:31" pos:end="35:37">(<argument pos:start="35:32" pos:end="35:33"><expr pos:start="35:32" pos:end="35:33"><name pos:start="35:32" pos:end="35:33">gb</name></expr></argument>, <argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><literal type="number" pos:start="35:36" pos:end="35:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:18">num_assoc_data</name>  <operator pos:start="37:21" pos:end="37:21">=</operator> <call pos:start="37:23" pos:end="37:37"><name pos:start="37:23" pos:end="37:30">get_bits</name><argument_list pos:start="37:31" pos:end="37:37">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">gb</name></expr></argument>, <argument pos:start="37:36" pos:end="37:36"><expr pos:start="37:36" pos:end="37:36"><literal type="number" pos:start="37:36" pos:end="37:36">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:38"><expr pos:start="39:5" pos:end="39:37"><name pos:start="39:5" pos:end="39:10">num_cc</name>          <operator pos:start="39:21" pos:end="39:21">=</operator> <call pos:start="39:23" pos:end="39:37"><name pos:start="39:23" pos:end="39:30">get_bits</name><argument_list pos:start="39:31" pos:end="39:37">(<argument pos:start="39:32" pos:end="39:33"><expr pos:start="39:32" pos:end="39:33"><name pos:start="39:32" pos:end="39:33">gb</name></expr></argument>, <argument pos:start="39:36" pos:end="39:36"><expr pos:start="39:36" pos:end="39:36"><literal type="number" pos:start="39:36" pos:end="39:36">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="45:25"><if pos:start="43:5" pos:end="45:25">if <condition pos:start="43:8" pos:end="43:22">(<expr pos:start="43:9" pos:end="43:21"><call pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:17">get_bits1</name><argument_list pos:start="43:18" pos:end="43:21">(<argument pos:start="43:19" pos:end="43:20"><expr pos:start="43:19" pos:end="43:20"><name pos:start="43:19" pos:end="43:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:25"><block_content pos:start="45:9" pos:end="45:25">

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:17">skip_bits</name><argument_list pos:start="45:18" pos:end="45:24">(<argument pos:start="45:19" pos:end="45:20"><expr pos:start="45:19" pos:end="45:20"><name pos:start="45:19" pos:end="45:20">gb</name></expr></argument>, <argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><literal type="number" pos:start="45:23" pos:end="45:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="45:27" pos:end="45:45">// mono_mixdown_tag</comment>

    <if_stmt pos:start="47:5" pos:end="49:25"><if pos:start="47:5" pos:end="49:25">if <condition pos:start="47:8" pos:end="47:22">(<expr pos:start="47:9" pos:end="47:21"><call pos:start="47:9" pos:end="47:21"><name pos:start="47:9" pos:end="47:17">get_bits1</name><argument_list pos:start="47:18" pos:end="47:21">(<argument pos:start="47:19" pos:end="47:20"><expr pos:start="47:19" pos:end="47:20"><name pos:start="47:19" pos:end="47:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:25"><block_content pos:start="49:9" pos:end="49:25">

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><call pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17">skip_bits</name><argument_list pos:start="49:18" pos:end="49:24">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">gb</name></expr></argument>, <argument pos:start="49:23" pos:end="49:23"><expr pos:start="49:23" pos:end="49:23"><literal type="number" pos:start="49:23" pos:end="49:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="49:27" pos:end="49:47">// stereo_mixdown_tag</comment>



    <if_stmt pos:start="53:5" pos:end="55:25"><if pos:start="53:5" pos:end="55:25">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><call pos:start="53:9" pos:end="53:21"><name pos:start="53:9" pos:end="53:17">get_bits1</name><argument_list pos:start="53:18" pos:end="53:21">(<argument pos:start="53:19" pos:end="53:20"><expr pos:start="53:19" pos:end="53:20"><name pos:start="53:19" pos:end="53:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:25"><block_content pos:start="55:9" pos:end="55:25">

        <expr_stmt pos:start="55:9" pos:end="55:25"><expr pos:start="55:9" pos:end="55:24"><call pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:17">skip_bits</name><argument_list pos:start="55:18" pos:end="55:24">(<argument pos:start="55:19" pos:end="55:20"><expr pos:start="55:19" pos:end="55:20"><name pos:start="55:19" pos:end="55:20">gb</name></expr></argument>, <argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><literal type="number" pos:start="55:23" pos:end="55:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="55:27" pos:end="55:68">// mixdown_coeff_index and pseudo_surround</comment>



    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:102">(<expr pos:start="59:9" pos:end="59:101"><call pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:21">get_bits_left</name><argument_list pos:start="59:22" pos:end="59:25">(<argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="59:27" pos:end="59:27">&lt;</operator> <literal type="number" pos:start="59:29" pos:end="59:29">4</literal> <operator pos:start="59:31" pos:end="59:31">*</operator> <operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:42">num_front</name> <operator pos:start="59:44" pos:end="59:44">+</operator> <name pos:start="59:46" pos:end="59:53">num_side</name> <operator pos:start="59:55" pos:end="59:55">+</operator> <name pos:start="59:57" pos:end="59:64">num_back</name> <operator pos:start="59:66" pos:end="59:66">+</operator> <name pos:start="59:68" pos:end="59:74">num_lfe</name> <operator pos:start="59:76" pos:end="59:76">+</operator> <name pos:start="59:78" pos:end="59:91">num_assoc_data</name> <operator pos:start="59:93" pos:end="59:93">+</operator> <name pos:start="59:95" pos:end="59:100">num_cc</name><operator pos:start="59:101" pos:end="59:101">)</operator></expr>)</condition> <block pos:start="59:104" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:18">

        <expr_stmt pos:start="61:9" pos:end="61:50"><expr pos:start="61:9" pos:end="61:49"><call pos:start="61:9" pos:end="61:49"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:49">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">avctx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:37" pos:end="61:48"><expr pos:start="61:37" pos:end="61:48"><name pos:start="61:37" pos:end="61:48">overread_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:18">return <expr pos:start="63:16" pos:end="63:17"><operator pos:start="63:16" pos:end="63:16">-</operator><literal type="number" pos:start="63:17" pos:end="63:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:76"><expr pos:start="67:5" pos:end="67:75"><call pos:start="67:5" pos:end="67:75"><name pos:start="67:5" pos:end="67:22">decode_channel_map</name><argument_list pos:start="67:23" pos:end="67:75">(<argument pos:start="67:24" pos:end="67:33"><expr pos:start="67:24" pos:end="67:33"><name pos:start="67:24" pos:end="67:33">layout_map</name></expr></argument>       , <argument pos:start="67:43" pos:end="67:59"><expr pos:start="67:43" pos:end="67:59"><name pos:start="67:43" pos:end="67:59">AAC_CHANNEL_FRONT</name></expr></argument>, <argument pos:start="67:62" pos:end="67:63"><expr pos:start="67:62" pos:end="67:63"><name pos:start="67:62" pos:end="67:63">gb</name></expr></argument>, <argument pos:start="67:66" pos:end="67:74"><expr pos:start="67:66" pos:end="67:74"><name pos:start="67:66" pos:end="67:74">num_front</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:21"><expr pos:start="69:5" pos:end="69:20"><name pos:start="69:5" pos:end="69:8">tags</name> <operator pos:start="69:10" pos:end="69:10">=</operator> <name pos:start="69:12" pos:end="69:20">num_front</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:75"><expr pos:start="71:5" pos:end="71:74"><call pos:start="71:5" pos:end="71:74"><name pos:start="71:5" pos:end="71:22">decode_channel_map</name><argument_list pos:start="71:23" pos:end="71:74">(<argument pos:start="71:24" pos:end="71:40"><expr pos:start="71:24" pos:end="71:40"><name pos:start="71:24" pos:end="71:33">layout_map</name> <operator pos:start="71:35" pos:end="71:35">+</operator> <name pos:start="71:37" pos:end="71:40">tags</name></expr></argument>, <argument pos:start="71:43" pos:end="71:58"><expr pos:start="71:43" pos:end="71:58"><name pos:start="71:43" pos:end="71:58">AAC_CHANNEL_SIDE</name></expr></argument>,  <argument pos:start="71:62" pos:end="71:63"><expr pos:start="71:62" pos:end="71:63"><name pos:start="71:62" pos:end="71:63">gb</name></expr></argument>, <argument pos:start="71:66" pos:end="71:73"><expr pos:start="71:66" pos:end="71:73"><name pos:start="71:66" pos:end="71:73">num_side</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:21"><expr pos:start="73:5" pos:end="73:20"><name pos:start="73:5" pos:end="73:8">tags</name> <operator pos:start="73:10" pos:end="73:11">+=</operator> <name pos:start="73:13" pos:end="73:20">num_side</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:75"><expr pos:start="75:5" pos:end="75:74"><call pos:start="75:5" pos:end="75:74"><name pos:start="75:5" pos:end="75:22">decode_channel_map</name><argument_list pos:start="75:23" pos:end="75:74">(<argument pos:start="75:24" pos:end="75:40"><expr pos:start="75:24" pos:end="75:40"><name pos:start="75:24" pos:end="75:33">layout_map</name> <operator pos:start="75:35" pos:end="75:35">+</operator> <name pos:start="75:37" pos:end="75:40">tags</name></expr></argument>, <argument pos:start="75:43" pos:end="75:58"><expr pos:start="75:43" pos:end="75:58"><name pos:start="75:43" pos:end="75:58">AAC_CHANNEL_BACK</name></expr></argument>,  <argument pos:start="75:62" pos:end="75:63"><expr pos:start="75:62" pos:end="75:63"><name pos:start="75:62" pos:end="75:63">gb</name></expr></argument>, <argument pos:start="75:66" pos:end="75:73"><expr pos:start="75:66" pos:end="75:73"><name pos:start="75:66" pos:end="75:73">num_back</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:21"><expr pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:8">tags</name> <operator pos:start="77:10" pos:end="77:11">+=</operator> <name pos:start="77:13" pos:end="77:20">num_back</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:74"><expr pos:start="79:5" pos:end="79:73"><call pos:start="79:5" pos:end="79:73"><name pos:start="79:5" pos:end="79:22">decode_channel_map</name><argument_list pos:start="79:23" pos:end="79:73">(<argument pos:start="79:24" pos:end="79:40"><expr pos:start="79:24" pos:end="79:40"><name pos:start="79:24" pos:end="79:33">layout_map</name> <operator pos:start="79:35" pos:end="79:35">+</operator> <name pos:start="79:37" pos:end="79:40">tags</name></expr></argument>, <argument pos:start="79:43" pos:end="79:57"><expr pos:start="79:43" pos:end="79:57"><name pos:start="79:43" pos:end="79:57">AAC_CHANNEL_LFE</name></expr></argument>,   <argument pos:start="79:62" pos:end="79:63"><expr pos:start="79:62" pos:end="79:63"><name pos:start="79:62" pos:end="79:63">gb</name></expr></argument>, <argument pos:start="79:66" pos:end="79:72"><expr pos:start="79:66" pos:end="79:72"><name pos:start="79:66" pos:end="79:72">num_lfe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:20"><expr pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:8">tags</name> <operator pos:start="81:10" pos:end="81:11">+=</operator> <name pos:start="81:13" pos:end="81:19">num_lfe</name></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:43"><expr pos:start="85:5" pos:end="85:42"><call pos:start="85:5" pos:end="85:42"><name pos:start="85:5" pos:end="85:18">skip_bits_long</name><argument_list pos:start="85:19" pos:end="85:42">(<argument pos:start="85:20" pos:end="85:21"><expr pos:start="85:20" pos:end="85:21"><name pos:start="85:20" pos:end="85:21">gb</name></expr></argument>, <argument pos:start="85:24" pos:end="85:41"><expr pos:start="85:24" pos:end="85:41"><literal type="number" pos:start="85:24" pos:end="85:24">4</literal> <operator pos:start="85:26" pos:end="85:26">*</operator> <name pos:start="85:28" pos:end="85:41">num_assoc_data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:73"><expr pos:start="89:5" pos:end="89:72"><call pos:start="89:5" pos:end="89:72"><name pos:start="89:5" pos:end="89:22">decode_channel_map</name><argument_list pos:start="89:23" pos:end="89:72">(<argument pos:start="89:24" pos:end="89:40"><expr pos:start="89:24" pos:end="89:40"><name pos:start="89:24" pos:end="89:33">layout_map</name> <operator pos:start="89:35" pos:end="89:35">+</operator> <name pos:start="89:37" pos:end="89:40">tags</name></expr></argument>, <argument pos:start="89:43" pos:end="89:56"><expr pos:start="89:43" pos:end="89:56"><name pos:start="89:43" pos:end="89:56">AAC_CHANNEL_CC</name></expr></argument>,    <argument pos:start="89:62" pos:end="89:63"><expr pos:start="89:62" pos:end="89:63"><name pos:start="89:62" pos:end="89:63">gb</name></expr></argument>, <argument pos:start="89:66" pos:end="89:71"><expr pos:start="89:66" pos:end="89:71"><name pos:start="89:66" pos:end="89:71">num_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:19"><expr pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:8">tags</name> <operator pos:start="91:10" pos:end="91:11">+=</operator> <name pos:start="91:13" pos:end="91:18">num_cc</name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><call pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:18">align_get_bits</name><argument_list pos:start="95:19" pos:end="95:22">(<argument pos:start="95:20" pos:end="95:21"><expr pos:start="95:20" pos:end="95:21"><name pos:start="95:20" pos:end="95:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="99:5" pos:end="99:45">/* comment field, first byte is length */</comment>

    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:15">comment_len</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <call pos:start="101:19" pos:end="101:33"><name pos:start="101:19" pos:end="101:26">get_bits</name><argument_list pos:start="101:27" pos:end="101:33">(<argument pos:start="101:28" pos:end="101:29"><expr pos:start="101:28" pos:end="101:29"><name pos:start="101:28" pos:end="101:29">gb</name></expr></argument>, <argument pos:start="101:32" pos:end="101:32"><expr pos:start="101:32" pos:end="101:32"><literal type="number" pos:start="101:32" pos:end="101:32">8</literal></expr></argument>)</argument_list></call> <operator pos:start="101:35" pos:end="101:35">*</operator> <literal type="number" pos:start="101:37" pos:end="101:37">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:40">(<expr pos:start="103:9" pos:end="103:39"><call pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:21">get_bits_left</name><argument_list pos:start="103:22" pos:end="103:25">(<argument pos:start="103:23" pos:end="103:24"><expr pos:start="103:23" pos:end="103:24"><name pos:start="103:23" pos:end="103:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="103:27" pos:end="103:27">&lt;</operator> <name pos:start="103:29" pos:end="103:39">comment_len</name></expr>)</condition> <block pos:start="103:42" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:18">

        <expr_stmt pos:start="105:9" pos:end="105:50"><expr pos:start="105:9" pos:end="105:49"><call pos:start="105:9" pos:end="105:49"><name pos:start="105:9" pos:end="105:14">av_log</name><argument_list pos:start="105:15" pos:end="105:49">(<argument pos:start="105:16" pos:end="105:20"><expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">avctx</name></expr></argument>, <argument pos:start="105:23" pos:end="105:34"><expr pos:start="105:23" pos:end="105:34"><name pos:start="105:23" pos:end="105:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="105:37" pos:end="105:48"><expr pos:start="105:37" pos:end="105:48"><name pos:start="105:37" pos:end="105:48">overread_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:36"><expr pos:start="111:5" pos:end="111:35"><call pos:start="111:5" pos:end="111:35"><name pos:start="111:5" pos:end="111:18">skip_bits_long</name><argument_list pos:start="111:19" pos:end="111:35">(<argument pos:start="111:20" pos:end="111:21"><expr pos:start="111:20" pos:end="111:21"><name pos:start="111:20" pos:end="111:21">gb</name></expr></argument>, <argument pos:start="111:24" pos:end="111:34"><expr pos:start="111:24" pos:end="111:34"><name pos:start="111:24" pos:end="111:34">comment_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:16">return <expr pos:start="113:12" pos:end="113:15"><name pos:start="113:12" pos:end="113:15">tags</name></expr>;</return>

</block_content>}</block></decl></decl_stmt>
</unit>
