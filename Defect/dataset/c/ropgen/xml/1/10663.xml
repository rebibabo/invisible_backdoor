<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10663.c" pos:tabs="8"><function pos:start="1:1" pos:end="42:13"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">ipvideo_decode_block_opcode_0xA</name><parameter_list pos:start="1:43" pos:end="1:77">(<parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:57">IpvideoContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:76"><decl pos:start="1:63" pos:end="1:76"><type pos:start="1:63" pos:end="1:76"><name pos:start="1:63" pos:end="1:69">AVFrame</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:76">frame</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="42:13">{<block_content pos:start="3:5" pos:end="42:13">
    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">x</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">y</name></decl>;</decl_stmt>
    <decl_stmt pos:start="4:5" pos:end="4:23"><decl pos:start="4:5" pos:end="4:22"><type pos:start="4:5" pos:end="4:17"><name pos:start="4:5" pos:end="4:12">unsigned</name> <name pos:start="4:14" pos:end="4:17">char</name></type> <name pos:start="4:19" pos:end="4:22"><name pos:start="4:19" pos:end="4:19">P</name><index pos:start="4:20" pos:end="4:22">[<expr pos:start="4:21" pos:end="4:21"><literal type="number" pos:start="4:21" pos:end="4:21">8</literal></expr>]</index></name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">flags</name> <init pos:start="5:15" pos:end="5:17">= <expr pos:start="5:17" pos:end="5:17"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="6:5" pos:end="6:49"><expr pos:start="6:5" pos:end="6:48"><call pos:start="6:5" pos:end="6:48"><name pos:start="6:5" pos:end="6:26">bytestream2_get_buffer</name><argument_list pos:start="6:27" pos:end="6:48">(<argument pos:start="6:28" pos:end="6:41"><expr pos:start="6:28" pos:end="6:41"><operator pos:start="6:28" pos:end="6:28">&amp;</operator><name pos:start="6:29" pos:end="6:41"><name pos:start="6:29" pos:end="6:29">s</name><operator pos:start="6:30" pos:end="6:31">-&gt;</operator><name pos:start="6:32" pos:end="6:41">stream_ptr</name></name></expr></argument>, <argument pos:start="6:44" pos:end="6:44"><expr pos:start="6:44" pos:end="6:44"><name pos:start="6:44" pos:end="6:44">P</name></expr></argument>, <argument pos:start="6:47" pos:end="6:47"><expr pos:start="6:47" pos:end="6:47"><literal type="number" pos:start="6:47" pos:end="6:47">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="7:5" pos:end="8:56">/* 4-color encoding for each 4x4 quadrant, or 4-color encoding on
     * either top and bottom or left and right halves */</comment>
    <if_stmt pos:start="9:5" pos:end="42:13"><if pos:start="9:5" pos:end="42:13">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:9">P</name><index pos:start="9:10" pos:end="9:12">[<expr pos:start="9:11" pos:end="9:11"><literal type="number" pos:start="9:11" pos:end="9:11">0</literal></expr>]</index></name> <operator pos:start="9:14" pos:end="9:15">&lt;=</operator> <name pos:start="9:17" pos:end="9:20"><name pos:start="9:17" pos:end="9:17">P</name><index pos:start="9:18" pos:end="9:20">[<expr pos:start="9:19" pos:end="9:19"><literal type="number" pos:start="9:19" pos:end="9:19">1</literal></expr>]</index></name></expr>)</condition> <block pos:start="9:23" pos:end="42:13">{<block_content pos:start="11:9" pos:end="42:13">
        <comment type="block" pos:start="10:9" pos:end="10:63">/* 4-color encoding for each quadrant; need 32 bytes */</comment>
        <for pos:start="11:9" pos:end="42:13">for <control pos:start="11:13" pos:end="11:32">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">y</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:27"><expr pos:start="11:21" pos:end="11:26"><name pos:start="11:21" pos:end="11:21">y</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <literal type="number" pos:start="11:25" pos:end="11:26">16</literal></expr>;</condition> <incr pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:29">y</name><operator pos:start="11:30" pos:end="11:31">++</operator></expr></incr>)</control> <block pos:start="11:34" pos:end="42:13">{<block_content pos:start="13:13" pos:end="42:13">
            <comment type="line" pos:start="12:13" pos:end="12:44">// new values for each 4x4 block</comment>
            <if_stmt pos:start="13:13" pos:end="42:13"><if pos:start="13:13" pos:end="21:5">if <condition pos:start="13:16" pos:end="13:25">(<expr pos:start="13:17" pos:end="13:24"><operator pos:start="13:17" pos:end="13:17">!</operator><operator pos:start="13:18" pos:end="13:18">(</operator><name pos:start="13:19" pos:end="13:19">y</name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <literal type="number" pos:start="13:23" pos:end="13:23">3</literal><operator pos:start="13:24" pos:end="13:24">)</operator></expr>)</condition> <block pos:start="13:27" pos:end="21:5">{<block_content pos:start="14:17" pos:end="20:58">
                <if_stmt pos:start="14:17" pos:end="14:68"><if pos:start="14:17" pos:end="14:68">if <condition pos:start="14:20" pos:end="14:22">(<expr pos:start="14:21" pos:end="14:21"><name pos:start="14:21" pos:end="14:21">y</name></expr>)</condition><block type="pseudo" pos:start="14:24" pos:end="14:68"><block_content pos:start="14:24" pos:end="14:68"> <expr_stmt pos:start="14:24" pos:end="14:68"><expr pos:start="14:24" pos:end="14:67"><call pos:start="14:24" pos:end="14:67"><name pos:start="14:24" pos:end="14:45">bytestream2_get_buffer</name><argument_list pos:start="14:46" pos:end="14:67">(<argument pos:start="14:47" pos:end="14:60"><expr pos:start="14:47" pos:end="14:60"><operator pos:start="14:47" pos:end="14:47">&amp;</operator><name pos:start="14:48" pos:end="14:60"><name pos:start="14:48" pos:end="14:48">s</name><operator pos:start="14:49" pos:end="14:50">-&gt;</operator><name pos:start="14:51" pos:end="14:60">stream_ptr</name></name></expr></argument>, <argument pos:start="14:63" pos:end="14:63"><expr pos:start="14:63" pos:end="14:63"><name pos:start="14:63" pos:end="14:63">P</name></expr></argument>, <argument pos:start="14:66" pos:end="14:66"><expr pos:start="14:66" pos:end="14:66"><literal type="number" pos:start="14:66" pos:end="14:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
                <expr_stmt pos:start="15:17" pos:end="15:61"><expr pos:start="15:17" pos:end="15:60"><name pos:start="15:17" pos:end="15:21">flags</name> <operator pos:start="15:23" pos:end="15:23">=</operator> <call pos:start="15:25" pos:end="15:60"><name pos:start="15:25" pos:end="15:44">bytestream2_get_le32</name><argument_list pos:start="15:45" pos:end="15:60">(<argument pos:start="15:46" pos:end="15:59"><expr pos:start="15:46" pos:end="15:59"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:59"><name pos:start="15:47" pos:end="15:47">s</name><operator pos:start="15:48" pos:end="15:49">-&gt;</operator><name pos:start="15:50" pos:end="15:59">stream_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
            <for pos:start="16:13" pos:end="17:50">for <control pos:start="16:17" pos:end="16:48">(<init pos:start="16:18" pos:end="16:23"><expr pos:start="16:18" pos:end="16:22"><name pos:start="16:18" pos:end="16:18">x</name> <operator pos:start="16:20" pos:end="16:20">=</operator> <literal type="number" pos:start="16:22" pos:end="16:22">0</literal></expr>;</init> <condition pos:start="16:25" pos:end="16:30"><expr pos:start="16:25" pos:end="16:29"><name pos:start="16:25" pos:end="16:25">x</name> <operator pos:start="16:27" pos:end="16:27">&lt;</operator> <literal type="number" pos:start="16:29" pos:end="16:29">4</literal></expr>;</condition> <incr pos:start="16:32" pos:end="16:47"><expr pos:start="16:32" pos:end="16:34"><name pos:start="16:32" pos:end="16:32">x</name><operator pos:start="16:33" pos:end="16:34">++</operator></expr><operator pos:start="16:35" pos:end="16:35">,</operator> <expr pos:start="16:37" pos:end="16:47"><name pos:start="16:37" pos:end="16:41">flags</name> <operator pos:start="16:43" pos:end="16:45">&gt;&gt;=</operator> <literal type="number" pos:start="16:47" pos:end="16:47">2</literal></expr></incr>)</control><block type="pseudo" pos:start="17:17" pos:end="17:50"><block_content pos:start="17:17" pos:end="17:50">
                <expr_stmt pos:start="17:17" pos:end="17:50"><expr pos:start="17:17" pos:end="17:49"><operator pos:start="17:17" pos:end="17:17">*</operator><name pos:start="17:18" pos:end="17:29"><name pos:start="17:18" pos:end="17:18">s</name><operator pos:start="17:19" pos:end="17:20">-&gt;</operator><name pos:start="17:21" pos:end="17:29">pixel_ptr</name></name><operator pos:start="17:30" pos:end="17:31">++</operator> <operator pos:start="17:33" pos:end="17:33">=</operator> <name pos:start="17:35" pos:end="17:49"><name pos:start="17:35" pos:end="17:35">P</name><index pos:start="17:36" pos:end="17:49">[<expr pos:start="17:37" pos:end="17:48"><name pos:start="17:37" pos:end="17:41">flags</name> <operator pos:start="17:43" pos:end="17:43">&amp;</operator> <literal type="number" pos:start="17:45" pos:end="17:48">0x03</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
            <expr_stmt pos:start="18:13" pos:end="18:42"><expr pos:start="18:13" pos:end="18:41"><name pos:start="18:13" pos:end="18:24"><name pos:start="18:13" pos:end="18:13">s</name><operator pos:start="18:14" pos:end="18:15">-&gt;</operator><name pos:start="18:16" pos:end="18:24">pixel_ptr</name></name> <operator pos:start="18:26" pos:end="18:27">+=</operator> <name pos:start="18:29" pos:end="18:37"><name pos:start="18:29" pos:end="18:29">s</name><operator pos:start="18:30" pos:end="18:31">-&gt;</operator><name pos:start="18:32" pos:end="18:37">stride</name></name> <operator pos:start="18:39" pos:end="18:39">-</operator> <literal type="number" pos:start="18:41" pos:end="18:41">4</literal></expr>;</expr_stmt>
            <comment type="line" pos:start="19:13" pos:end="19:35">// switch to right half</comment>
            <if_stmt pos:start="20:13" pos:end="20:58"><if pos:start="20:13" pos:end="20:58">if <condition pos:start="20:16" pos:end="20:23">(<expr pos:start="20:17" pos:end="20:22"><name pos:start="20:17" pos:end="20:17">y</name> <operator pos:start="20:19" pos:end="20:20">==</operator> <literal type="number" pos:start="20:22" pos:end="20:22">7</literal></expr>)</condition><block type="pseudo" pos:start="20:25" pos:end="20:58"><block_content pos:start="20:25" pos:end="20:58"> <expr_stmt pos:start="20:25" pos:end="20:58"><expr pos:start="20:25" pos:end="20:57"><name pos:start="20:25" pos:end="20:36"><name pos:start="20:25" pos:end="20:25">s</name><operator pos:start="20:26" pos:end="20:27">-&gt;</operator><name pos:start="20:28" pos:end="20:36">pixel_ptr</name></name> <operator pos:start="20:38" pos:end="20:39">-=</operator> <literal type="number" pos:start="20:41" pos:end="20:41">8</literal> <operator pos:start="20:43" pos:end="20:43">*</operator> <name pos:start="20:45" pos:end="20:53"><name pos:start="20:45" pos:end="20:45">s</name><operator pos:start="20:46" pos:end="20:47">-&gt;</operator><name pos:start="20:48" pos:end="20:53">stride</name></name> <operator pos:start="20:55" pos:end="20:55">-</operator> <literal type="number" pos:start="20:57" pos:end="20:57">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
    </block_content>}</block></if> <else pos:start="21:7" pos:end="42:13">else <block pos:start="21:12" pos:end="42:13">{<block_content pos:start="23:9" pos:end="42:13">
        <comment type="line" pos:start="22:9" pos:end="22:26">// vertical split?</comment>
        <decl_stmt pos:start="23:9" pos:end="23:17"><decl pos:start="23:9" pos:end="23:16"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:16">vert</name></decl>;</decl_stmt>
        <decl_stmt pos:start="24:9" pos:end="24:62"><decl pos:start="24:9" pos:end="24:61"><type pos:start="24:9" pos:end="24:16"><name pos:start="24:9" pos:end="24:16">uint64_t</name></type> <name pos:start="24:18" pos:end="24:22">flags</name> <init pos:start="24:24" pos:end="24:61">= <expr pos:start="24:26" pos:end="24:61"><call pos:start="24:26" pos:end="24:61"><name pos:start="24:26" pos:end="24:45">bytestream2_get_le64</name><argument_list pos:start="24:46" pos:end="24:61">(<argument pos:start="24:47" pos:end="24:60"><expr pos:start="24:47" pos:end="24:60"><operator pos:start="24:47" pos:end="24:47">&amp;</operator><name pos:start="24:48" pos:end="24:60"><name pos:start="24:48" pos:end="24:48">s</name><operator pos:start="24:49" pos:end="24:50">-&gt;</operator><name pos:start="24:51" pos:end="24:60">stream_ptr</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>
        <expr_stmt pos:start="25:9" pos:end="25:57"><expr pos:start="25:9" pos:end="25:56"><call pos:start="25:9" pos:end="25:56"><name pos:start="25:9" pos:end="25:30">bytestream2_get_buffer</name><argument_list pos:start="25:31" pos:end="25:56">(<argument pos:start="25:32" pos:end="25:45"><expr pos:start="25:32" pos:end="25:45"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:45"><name pos:start="25:33" pos:end="25:33">s</name><operator pos:start="25:34" pos:end="25:35">-&gt;</operator><name pos:start="25:36" pos:end="25:45">stream_ptr</name></name></expr></argument>, <argument pos:start="25:48" pos:end="25:52"><expr pos:start="25:48" pos:end="25:52"><name pos:start="25:48" pos:end="25:48">P</name> <operator pos:start="25:50" pos:end="25:50">+</operator> <literal type="number" pos:start="25:52" pos:end="25:52">4</literal></expr></argument>, <argument pos:start="25:55" pos:end="25:55"><expr pos:start="25:55" pos:end="25:55"><literal type="number" pos:start="25:55" pos:end="25:55">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="26:9" pos:end="26:28"><expr pos:start="26:9" pos:end="26:27"><name pos:start="26:9" pos:end="26:12">vert</name> <operator pos:start="26:14" pos:end="26:14">=</operator> <name pos:start="26:16" pos:end="26:19"><name pos:start="26:16" pos:end="26:16">P</name><index pos:start="26:17" pos:end="26:19">[<expr pos:start="26:18" pos:end="26:18"><literal type="number" pos:start="26:18" pos:end="26:18">4</literal></expr>]</index></name> <operator pos:start="26:21" pos:end="26:22">&lt;=</operator> <name pos:start="26:24" pos:end="26:27"><name pos:start="26:24" pos:end="26:24">P</name><index pos:start="26:25" pos:end="26:27">[<expr pos:start="26:26" pos:end="26:26"><literal type="number" pos:start="26:26" pos:end="26:26">5</literal></expr>]</index></name></expr>;</expr_stmt>
        <comment type="block" pos:start="27:9" pos:end="28:20">/* 4-color encoding for either left and right or top and bottom
         * halves */</comment>
        <for pos:start="29:9" pos:end="42:13">for <control pos:start="29:13" pos:end="29:32">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">y</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:21">y</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:26">16</literal></expr>;</condition> <incr pos:start="29:29" pos:end="29:31"><expr pos:start="29:29" pos:end="29:31"><name pos:start="29:29" pos:end="29:29">y</name><operator pos:start="29:30" pos:end="29:31">++</operator></expr></incr>)</control> <block pos:start="29:34" pos:end="42:13">{<block_content pos:start="30:13" pos:end="42:13">
            <for pos:start="30:13" pos:end="31:50">for <control pos:start="30:17" pos:end="30:48">(<init pos:start="30:18" pos:end="30:23"><expr pos:start="30:18" pos:end="30:22"><name pos:start="30:18" pos:end="30:18">x</name> <operator pos:start="30:20" pos:end="30:20">=</operator> <literal type="number" pos:start="30:22" pos:end="30:22">0</literal></expr>;</init> <condition pos:start="30:25" pos:end="30:30"><expr pos:start="30:25" pos:end="30:29"><name pos:start="30:25" pos:end="30:25">x</name> <operator pos:start="30:27" pos:end="30:27">&lt;</operator> <literal type="number" pos:start="30:29" pos:end="30:29">4</literal></expr>;</condition> <incr pos:start="30:32" pos:end="30:47"><expr pos:start="30:32" pos:end="30:34"><name pos:start="30:32" pos:end="30:32">x</name><operator pos:start="30:33" pos:end="30:34">++</operator></expr><operator pos:start="30:35" pos:end="30:35">,</operator> <expr pos:start="30:37" pos:end="30:47"><name pos:start="30:37" pos:end="30:41">flags</name> <operator pos:start="30:43" pos:end="30:45">&gt;&gt;=</operator> <literal type="number" pos:start="30:47" pos:end="30:47">2</literal></expr></incr>)</control><block type="pseudo" pos:start="31:17" pos:end="31:50"><block_content pos:start="31:17" pos:end="31:50">
                <expr_stmt pos:start="31:17" pos:end="31:50"><expr pos:start="31:17" pos:end="31:49"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:29"><name pos:start="31:18" pos:end="31:18">s</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:29">pixel_ptr</name></name><operator pos:start="31:30" pos:end="31:31">++</operator> <operator pos:start="31:33" pos:end="31:33">=</operator> <name pos:start="31:35" pos:end="31:49"><name pos:start="31:35" pos:end="31:35">P</name><index pos:start="31:36" pos:end="31:49">[<expr pos:start="31:37" pos:end="31:48"><name pos:start="31:37" pos:end="31:41">flags</name> <operator pos:start="31:43" pos:end="31:43">&amp;</operator> <literal type="number" pos:start="31:45" pos:end="31:48">0x03</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>
            <if_stmt pos:start="32:13" pos:end="36:58"><if pos:start="32:13" pos:end="36:13">if <condition pos:start="32:16" pos:end="32:21">(<expr pos:start="32:17" pos:end="32:20"><name pos:start="32:17" pos:end="32:20">vert</name></expr>)</condition> <block pos:start="32:23" pos:end="36:13">{<block_content pos:start="33:17" pos:end="35:62">
                <expr_stmt pos:start="33:17" pos:end="33:46"><expr pos:start="33:17" pos:end="33:45"><name pos:start="33:17" pos:end="33:28"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:28">pixel_ptr</name></name> <operator pos:start="33:30" pos:end="33:31">+=</operator> <name pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:41">stride</name></name> <operator pos:start="33:43" pos:end="33:43">-</operator> <literal type="number" pos:start="33:45" pos:end="33:45">4</literal></expr>;</expr_stmt>
                <comment type="line" pos:start="34:17" pos:end="34:39">// switch to right half</comment>
                <if_stmt pos:start="35:17" pos:end="35:62"><if pos:start="35:17" pos:end="35:62">if <condition pos:start="35:20" pos:end="35:27">(<expr pos:start="35:21" pos:end="35:26"><name pos:start="35:21" pos:end="35:21">y</name> <operator pos:start="35:23" pos:end="35:24">==</operator> <literal type="number" pos:start="35:26" pos:end="35:26">7</literal></expr>)</condition><block type="pseudo" pos:start="35:29" pos:end="35:62"><block_content pos:start="35:29" pos:end="35:62"> <expr_stmt pos:start="35:29" pos:end="35:62"><expr pos:start="35:29" pos:end="35:61"><name pos:start="35:29" pos:end="35:40"><name pos:start="35:29" pos:end="35:29">s</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:40">pixel_ptr</name></name> <operator pos:start="35:42" pos:end="35:43">-=</operator> <literal type="number" pos:start="35:45" pos:end="35:45">8</literal> <operator pos:start="35:47" pos:end="35:47">*</operator> <name pos:start="35:49" pos:end="35:57"><name pos:start="35:49" pos:end="35:49">s</name><operator pos:start="35:50" pos:end="35:51">-&gt;</operator><name pos:start="35:52" pos:end="35:57">stride</name></name> <operator pos:start="35:59" pos:end="35:59">-</operator> <literal type="number" pos:start="35:61" pos:end="35:61">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>
            </block_content>}</block></if> <if type="elseif" pos:start="36:15" pos:end="36:58">else if <condition pos:start="36:23" pos:end="36:29">(<expr pos:start="36:24" pos:end="36:28"><name pos:start="36:24" pos:end="36:24">y</name> <operator pos:start="36:26" pos:end="36:26">&amp;</operator> <literal type="number" pos:start="36:28" pos:end="36:28">1</literal></expr>)</condition><block type="pseudo" pos:start="36:31" pos:end="36:58"><block_content pos:start="36:31" pos:end="36:58"> <expr_stmt pos:start="36:31" pos:end="36:58"><expr pos:start="36:31" pos:end="36:57"><name pos:start="36:31" pos:end="36:42"><name pos:start="36:31" pos:end="36:31">s</name><operator pos:start="36:32" pos:end="36:33">-&gt;</operator><name pos:start="36:34" pos:end="36:42">pixel_ptr</name></name> <operator pos:start="36:44" pos:end="36:45">+=</operator> <name pos:start="36:47" pos:end="36:57"><name pos:start="36:47" pos:end="36:47">s</name><operator pos:start="36:48" pos:end="36:49">-&gt;</operator><name pos:start="36:50" pos:end="36:57">line_inc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>
            <comment type="line" pos:start="37:13" pos:end="37:42">// load values for second half</comment>
            <if_stmt pos:start="38:13" pos:end="42:13"><if pos:start="38:13" pos:end="42:13">if <condition pos:start="38:16" pos:end="38:23">(<expr pos:start="38:17" pos:end="38:22"><name pos:start="38:17" pos:end="38:17">y</name> <operator pos:start="38:19" pos:end="38:20">==</operator> <literal type="number" pos:start="38:22" pos:end="38:22">7</literal></expr>)</condition> <block pos:start="38:25" pos:end="42:13">{<block_content pos:start="39:17" pos:end="42:13">
                <expr_stmt pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><call pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:22">memcpy</name><argument_list pos:start="39:23" pos:end="39:35">(<argument pos:start="39:24" pos:end="39:24"><expr pos:start="39:24" pos:end="39:24"><name pos:start="39:24" pos:end="39:24">P</name></expr></argument>, <argument pos:start="39:27" pos:end="39:31"><expr pos:start="39:27" pos:end="39:31"><name pos:start="39:27" pos:end="39:27">P</name> <operator pos:start="39:29" pos:end="39:29">+</operator> <literal type="number" pos:start="39:31" pos:end="39:31">4</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="40:17" pos:end="40:61"><expr pos:start="40:17" pos:end="40:60"><name pos:start="40:17" pos:end="40:21">flags</name> <operator pos:start="40:23" pos:end="40:23">=</operator> <call pos:start="40:25" pos:end="40:60"><name pos:start="40:25" pos:end="40:44">bytestream2_get_le64</name><argument_list pos:start="40:45" pos:end="40:60">(<argument pos:start="40:46" pos:end="40:59"><expr pos:start="40:46" pos:end="40:59"><operator pos:start="40:46" pos:end="40:46">&amp;</operator><name pos:start="40:47" pos:end="40:59"><name pos:start="40:47" pos:end="40:47">s</name><operator pos:start="40:48" pos:end="40:49">-&gt;</operator><name pos:start="40:50" pos:end="40:59">stream_ptr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <comment type="block" pos:start="41:5" pos:end="41:24">/* report success */</comment>
    <return pos:start="42:5" pos:end="42:13">return <expr pos:start="42:12" pos:end="42:12"><literal type="number" pos:start="42:12" pos:end="42:12">0</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for></block_content></block></else></if_stmt></block_content></block></for></block_content></block></if></if_stmt></block_content></block></function></unit>
