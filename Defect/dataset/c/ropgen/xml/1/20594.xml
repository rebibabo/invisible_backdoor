<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20594.c" pos:tabs="8"><function pos:start="1:1" pos:end="461:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">shorten_decode_frame</name><parameter_list pos:start="1:32" pos:end="5:35">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:18"><decl pos:start="3:9" pos:end="3:18"><type pos:start="3:9" pos:end="3:18"><name pos:start="3:9" pos:end="3:12">void</name> <modifier pos:start="3:14" pos:end="3:14">*</modifier></type><name pos:start="3:15" pos:end="3:18">data</name></decl></parameter>, <parameter pos:start="3:21" pos:end="3:34"><decl pos:start="3:21" pos:end="3:34"><type pos:start="3:21" pos:end="3:34"><name pos:start="3:21" pos:end="3:23">int</name> <modifier pos:start="3:25" pos:end="3:25">*</modifier></type><name pos:start="3:26" pos:end="3:34">data_size</name></decl></parameter>,

        <parameter pos:start="5:9" pos:end="5:20"><decl pos:start="5:9" pos:end="5:20"><type pos:start="5:9" pos:end="5:20"><name pos:start="5:9" pos:end="5:15">uint8_t</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">buf</name></decl></parameter>, <parameter pos:start="5:23" pos:end="5:34"><decl pos:start="5:23" pos:end="5:34"><type pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:25">int</name></type> <name pos:start="5:27" pos:end="5:34">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="461:1">{<block_content pos:start="9:5" pos:end="459:17">

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">ShortenContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:21">s</name> <init pos:start="9:23" pos:end="9:40">= <expr pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:40"><name pos:start="9:25" pos:end="9:29">avctx</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:29"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:25">input_buf_size</name> <init pos:start="11:27" pos:end="11:29">= <expr pos:start="11:29" pos:end="11:29"><literal type="number" pos:start="11:29" pos:end="11:29">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">int16_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">samples</name> <init pos:start="13:22" pos:end="13:27">= <expr pos:start="13:24" pos:end="13:27"><name pos:start="13:24" pos:end="13:27">data</name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if<condition pos:start="15:7" pos:end="15:29">(<expr pos:start="15:8" pos:end="15:28"><name pos:start="15:8" pos:end="15:23"><name pos:start="15:8" pos:end="15:8">s</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:23">max_framesize</name></name> <operator pos:start="15:25" pos:end="15:26">==</operator> <literal type="number" pos:start="15:28" pos:end="15:28">0</literal></expr>)</condition><block pos:start="15:30" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:100">

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:24">max_framesize</name></name><operator pos:start="17:25" pos:end="17:25">=</operator> <literal type="number" pos:start="17:27" pos:end="17:30">1024</literal></expr>;</expr_stmt> <comment type="line" pos:start="17:33" pos:end="17:82">// should hopefully be enough for the first header</comment>

        <expr_stmt pos:start="19:9" pos:end="19:100"><expr pos:start="19:9" pos:end="19:99"><name pos:start="19:9" pos:end="19:20"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:20">bitstream</name></name><operator pos:start="19:21" pos:end="19:21">=</operator> <call pos:start="19:23" pos:end="19:99"><name pos:start="19:23" pos:end="19:37">av_fast_realloc</name><argument_list pos:start="19:38" pos:end="19:99">(<argument pos:start="19:39" pos:end="19:50"><expr pos:start="19:39" pos:end="19:50"><name pos:start="19:39" pos:end="19:50"><name pos:start="19:39" pos:end="19:39">s</name><operator pos:start="19:40" pos:end="19:41">-&gt;</operator><name pos:start="19:42" pos:end="19:50">bitstream</name></name></expr></argument>, <argument pos:start="19:53" pos:end="19:80"><expr pos:start="19:53" pos:end="19:80"><operator pos:start="19:53" pos:end="19:53">&amp;</operator><name pos:start="19:54" pos:end="19:80"><name pos:start="19:54" pos:end="19:54">s</name><operator pos:start="19:55" pos:end="19:56">-&gt;</operator><name pos:start="19:57" pos:end="19:80">allocated_bitstream_size</name></name></expr></argument>, <argument pos:start="19:83" pos:end="19:98"><expr pos:start="19:83" pos:end="19:98"><name pos:start="19:83" pos:end="19:98"><name pos:start="19:83" pos:end="19:83">s</name><operator pos:start="19:84" pos:end="19:85">-&gt;</operator><name pos:start="19:86" pos:end="19:98">max_framesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="61:5"><if pos:start="25:5" pos:end="61:5">if<condition pos:start="25:7" pos:end="25:29">(<expr pos:start="25:8" pos:end="25:28"><literal type="number" pos:start="25:8" pos:end="25:8">1</literal> <operator pos:start="25:10" pos:end="25:11">&amp;&amp;</operator> <name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:28">max_framesize</name></name></expr>)</condition><block pos:start="25:30" pos:end="61:5">{<block_content pos:start="27:9" pos:end="59:9"><comment type="line" pos:start="25:31" pos:end="25:47">//FIXME truncated</comment>

        <expr_stmt pos:start="27:9" pos:end="27:72"><expr pos:start="27:9" pos:end="27:71"><name pos:start="27:9" pos:end="27:16">buf_size</name><operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:71"><name pos:start="27:19" pos:end="27:23">FFMIN</name><argument_list pos:start="27:24" pos:end="27:71">(<argument pos:start="27:25" pos:end="27:32"><expr pos:start="27:25" pos:end="27:32"><name pos:start="27:25" pos:end="27:32">buf_size</name></expr></argument>, <argument pos:start="27:35" pos:end="27:70"><expr pos:start="27:35" pos:end="27:70"><name pos:start="27:35" pos:end="27:50"><name pos:start="27:35" pos:end="27:35">s</name><operator pos:start="27:36" pos:end="27:37">-&gt;</operator><name pos:start="27:38" pos:end="27:50">max_framesize</name></name> <operator pos:start="27:52" pos:end="27:52">-</operator> <name pos:start="27:54" pos:end="27:70"><name pos:start="27:54" pos:end="27:54">s</name><operator pos:start="27:55" pos:end="27:56">-&gt;</operator><name pos:start="27:57" pos:end="27:70">bitstream_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:22">input_buf_size</name><operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:32">buf_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="41:9"><if pos:start="33:9" pos:end="41:9">if<condition pos:start="33:11" pos:end="33:91">(<expr pos:start="33:12" pos:end="33:90"><name pos:start="33:12" pos:end="33:29"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:29">bitstream_index</name></name> <operator pos:start="33:31" pos:end="33:31">+</operator> <name pos:start="33:33" pos:end="33:49"><name pos:start="33:33" pos:end="33:33">s</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:49">bitstream_size</name></name> <operator pos:start="33:51" pos:end="33:51">+</operator> <name pos:start="33:53" pos:end="33:60">buf_size</name> <operator pos:start="33:62" pos:end="33:62">&gt;</operator> <name pos:start="33:64" pos:end="33:90"><name pos:start="33:64" pos:end="33:64">s</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:90">allocated_bitstream_size</name></name></expr>)</condition><block pos:start="33:92" pos:end="41:9">{<block_content pos:start="37:13" pos:end="39:33">

            <comment type="line" pos:start="35:13" pos:end="35:50">//                printf("memmove\n");</comment>

            <expr_stmt pos:start="37:13" pos:end="37:88"><expr pos:start="37:13" pos:end="37:87"><call pos:start="37:13" pos:end="37:87"><name pos:start="37:13" pos:end="37:19">memmove</name><argument_list pos:start="37:20" pos:end="37:87">(<argument pos:start="37:21" pos:end="37:32"><expr pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:32"><name pos:start="37:21" pos:end="37:21">s</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:32">bitstream</name></name></expr></argument>, <argument pos:start="37:35" pos:end="37:67"><expr pos:start="37:35" pos:end="37:67"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:67"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:47">bitstream</name><index pos:start="37:48" pos:end="37:67">[<expr pos:start="37:49" pos:end="37:66"><name pos:start="37:49" pos:end="37:66"><name pos:start="37:49" pos:end="37:49">s</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:66">bitstream_index</name></name></expr>]</index></name></expr></argument>, <argument pos:start="37:70" pos:end="37:86"><expr pos:start="37:70" pos:end="37:86"><name pos:start="37:70" pos:end="37:86"><name pos:start="37:70" pos:end="37:70">s</name><operator pos:start="37:71" pos:end="37:72">-&gt;</operator><name pos:start="37:73" pos:end="37:86">bitstream_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:33"><expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:30"><name pos:start="39:13" pos:end="39:13">s</name><operator pos:start="39:14" pos:end="39:15">-&gt;</operator><name pos:start="39:16" pos:end="39:30">bitstream_index</name></name><operator pos:start="39:31" pos:end="39:31">=</operator><literal type="number" pos:start="39:32" pos:end="39:32">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:85"><expr pos:start="43:9" pos:end="43:84"><call pos:start="43:9" pos:end="43:84"><name pos:start="43:9" pos:end="43:14">memcpy</name><argument_list pos:start="43:15" pos:end="43:84">(<argument pos:start="43:16" pos:end="43:68"><expr pos:start="43:16" pos:end="43:68"><operator pos:start="43:16" pos:end="43:16">&amp;</operator><name pos:start="43:17" pos:end="43:68"><name pos:start="43:17" pos:end="43:17">s</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:28">bitstream</name><index pos:start="43:29" pos:end="43:68">[<expr pos:start="43:30" pos:end="43:67"><name pos:start="43:30" pos:end="43:47"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:47">bitstream_index</name></name> <operator pos:start="43:49" pos:end="43:49">+</operator> <name pos:start="43:51" pos:end="43:67"><name pos:start="43:51" pos:end="43:51">s</name><operator pos:start="43:52" pos:end="43:53">-&gt;</operator><name pos:start="43:54" pos:end="43:67">bitstream_size</name></name></expr>]</index></name></expr></argument>, <argument pos:start="43:71" pos:end="43:73"><expr pos:start="43:71" pos:end="43:73"><name pos:start="43:71" pos:end="43:73">buf</name></expr></argument>, <argument pos:start="43:76" pos:end="43:83"><expr pos:start="43:76" pos:end="43:83"><name pos:start="43:76" pos:end="43:83">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:11">buf</name><operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">&amp;</operator><name pos:start="45:15" pos:end="45:46"><name pos:start="45:15" pos:end="45:15">s</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:26">bitstream</name><index pos:start="45:27" pos:end="45:46">[<expr pos:start="45:28" pos:end="45:45"><name pos:start="45:28" pos:end="45:45"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:45">bitstream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:16">buf_size</name> <operator pos:start="47:18" pos:end="47:19">+=</operator> <name pos:start="47:21" pos:end="47:37"><name pos:start="47:21" pos:end="47:21">s</name><operator pos:start="47:22" pos:end="47:23">-&gt;</operator><name pos:start="47:24" pos:end="47:37">bitstream_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:25"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:25">bitstream_size</name></name><operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:35">buf_size</name></expr>;</expr_stmt>



        <if_stmt pos:start="53:9" pos:end="59:9"><if pos:start="53:9" pos:end="59:9">if<condition pos:start="53:11" pos:end="53:39">(<expr pos:start="53:12" pos:end="53:38"><name pos:start="53:12" pos:end="53:19">buf_size</name> <operator pos:start="53:21" pos:end="53:21">&lt;</operator> <name pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:38">max_framesize</name></name></expr>)</condition><block pos:start="53:40" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:34">

            <comment type="line" pos:start="55:13" pos:end="55:60">//dprintf("wanna more data ... %d\n", buf_size);</comment>

            <return pos:start="57:13" pos:end="57:34">return <expr pos:start="57:20" pos:end="57:33"><name pos:start="57:20" pos:end="57:33">input_buf_size</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:43"><expr pos:start="63:5" pos:end="63:42"><call pos:start="63:5" pos:end="63:42"><name pos:start="63:5" pos:end="63:17">init_get_bits</name><argument_list pos:start="63:18" pos:end="63:42">(<argument pos:start="63:19" pos:end="63:24"><expr pos:start="63:19" pos:end="63:24"><operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:24">gb</name></name></expr></argument>, <argument pos:start="63:27" pos:end="63:29"><expr pos:start="63:27" pos:end="63:29"><name pos:start="63:27" pos:end="63:29">buf</name></expr></argument>, <argument pos:start="63:32" pos:end="63:41"><expr pos:start="63:32" pos:end="63:41"><name pos:start="63:32" pos:end="63:39">buf_size</name><operator pos:start="63:40" pos:end="63:40">*</operator><literal type="number" pos:start="63:41" pos:end="63:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:34"><expr pos:start="65:5" pos:end="65:33"><call pos:start="65:5" pos:end="65:33"><name pos:start="65:5" pos:end="65:12">get_bits</name><argument_list pos:start="65:13" pos:end="65:33">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:19">gb</name></name></expr></argument>, <argument pos:start="65:22" pos:end="65:32"><expr pos:start="65:22" pos:end="65:32"><name pos:start="65:22" pos:end="65:32"><name pos:start="65:22" pos:end="65:22">s</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:32">bitindex</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="423:5"><if pos:start="67:5" pos:end="191:5">if <condition pos:start="67:8" pos:end="67:22">(<expr pos:start="67:9" pos:end="67:21"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:21"><name pos:start="67:10" pos:end="67:10">s</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:21">blocksize</name></name></expr>)</condition>

    <block pos:start="69:5" pos:end="191:5">{<block_content pos:start="71:9" pos:end="189:24">

        <decl_stmt pos:start="71:9" pos:end="71:24"><decl pos:start="71:9" pos:end="71:23"><type pos:start="71:9" pos:end="71:11"><name pos:start="71:9" pos:end="71:11">int</name></type> <name pos:start="71:13" pos:end="71:19">maxnlpc</name> <init pos:start="71:21" pos:end="71:23">= <expr pos:start="71:23" pos:end="71:23"><literal type="number" pos:start="71:23" pos:end="71:23">0</literal></expr></init></decl>;</decl_stmt>

        <comment type="block" pos:start="73:9" pos:end="73:31">/* shorten signature */</comment>

        <if_stmt pos:start="75:9" pos:end="81:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:73">(<expr pos:start="75:13" pos:end="75:72"><call pos:start="75:13" pos:end="75:37"><name pos:start="75:13" pos:end="75:25">get_bits_long</name><argument_list pos:start="75:26" pos:end="75:37">(<argument pos:start="75:27" pos:end="75:32"><expr pos:start="75:27" pos:end="75:32"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:32"><name pos:start="75:28" pos:end="75:28">s</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:32">gb</name></name></expr></argument>, <argument pos:start="75:35" pos:end="75:36"><expr pos:start="75:35" pos:end="75:36"><literal type="number" pos:start="75:35" pos:end="75:36">32</literal></expr></argument>)</argument_list></call> <operator pos:start="75:39" pos:end="75:40">!=</operator> <call pos:start="75:42" pos:end="75:72"><name pos:start="75:42" pos:end="75:49">bswap_32</name><argument_list pos:start="75:50" pos:end="75:72">(<argument pos:start="75:51" pos:end="75:71"><expr pos:start="75:51" pos:end="75:71"><call pos:start="75:51" pos:end="75:71"><name pos:start="75:51" pos:end="75:63">ff_get_fourcc</name><argument_list pos:start="75:64" pos:end="75:71">(<argument pos:start="75:65" pos:end="75:70"><expr pos:start="75:65" pos:end="75:70"><literal type="string" pos:start="75:65" pos:end="75:70">"ajkg"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:75" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:22">

            <expr_stmt pos:start="77:13" pos:end="77:77"><expr pos:start="77:13" pos:end="77:76"><call pos:start="77:13" pos:end="77:76"><name pos:start="77:13" pos:end="77:18">av_log</name><argument_list pos:start="77:19" pos:end="77:76">(<argument pos:start="77:20" pos:end="77:27"><expr pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:27"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:27">avctx</name></name></expr></argument>, <argument pos:start="77:30" pos:end="77:41"><expr pos:start="77:30" pos:end="77:41"><name pos:start="77:30" pos:end="77:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:44" pos:end="77:75"><expr pos:start="77:44" pos:end="77:75"><literal type="string" pos:start="77:44" pos:end="77:75">"missing shorten magic 'ajkg'\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:9">s</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:21">lpcqoffset</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <literal type="number" pos:start="85:25" pos:end="85:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:42"><expr pos:start="87:9" pos:end="87:41"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">blocksize</name></name> <operator pos:start="87:22" pos:end="87:22">=</operator> <name pos:start="87:24" pos:end="87:41">DEFAULT_BLOCK_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:24"><expr pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">channels</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <literal type="number" pos:start="89:23" pos:end="89:23">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:16">nmean</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <operator pos:start="91:20" pos:end="91:20">-</operator><literal type="number" pos:start="91:21" pos:end="91:21">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:41"><expr pos:start="93:9" pos:end="93:40"><name pos:start="93:9" pos:end="93:18"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:18">version</name></name> <operator pos:start="93:20" pos:end="93:20">=</operator> <call pos:start="93:22" pos:end="93:40"><name pos:start="93:22" pos:end="93:29">get_bits</name><argument_list pos:start="93:30" pos:end="93:40">(<argument pos:start="93:31" pos:end="93:36"><expr pos:start="93:31" pos:end="93:36"><operator pos:start="93:31" pos:end="93:31">&amp;</operator><name pos:start="93:32" pos:end="93:36"><name pos:start="93:32" pos:end="93:32">s</name><operator pos:start="93:33" pos:end="93:34">-&gt;</operator><name pos:start="93:35" pos:end="93:36">gb</name></name></expr></argument>, <argument pos:start="93:39" pos:end="93:39"><expr pos:start="93:39" pos:end="93:39"><literal type="number" pos:start="93:39" pos:end="93:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:50"><expr pos:start="95:9" pos:end="95:49"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:25">internal_ftype</name></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <call pos:start="95:29" pos:end="95:49"><name pos:start="95:29" pos:end="95:36">get_uint</name><argument_list pos:start="95:37" pos:end="95:49">(<argument pos:start="95:38" pos:end="95:38"><expr pos:start="95:38" pos:end="95:38"><name pos:start="95:38" pos:end="95:38">s</name></expr></argument>, <argument pos:start="95:41" pos:end="95:48"><expr pos:start="95:41" pos:end="95:48"><name pos:start="95:41" pos:end="95:48">TYPESIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:44"><expr pos:start="99:9" pos:end="99:43"><name pos:start="99:9" pos:end="99:19"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:19">channels</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:43"><name pos:start="99:23" pos:end="99:30">get_uint</name><argument_list pos:start="99:31" pos:end="99:43">(<argument pos:start="99:32" pos:end="99:32"><expr pos:start="99:32" pos:end="99:32"><name pos:start="99:32" pos:end="99:32">s</name></expr></argument>, <argument pos:start="99:35" pos:end="99:42"><expr pos:start="99:35" pos:end="99:42"><name pos:start="99:35" pos:end="99:42">CHANSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="107:9"><if pos:start="101:9" pos:end="107:9">if <condition pos:start="101:12" pos:end="101:39">(<expr pos:start="101:13" pos:end="101:38"><name pos:start="101:13" pos:end="101:23"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:23">channels</name></name> <operator pos:start="101:25" pos:end="101:25">&gt;</operator> <name pos:start="101:27" pos:end="101:38">MAX_CHANNELS</name></expr>)</condition> <block pos:start="101:41" pos:end="107:9">{<block_content pos:start="103:13" pos:end="105:22">

            <expr_stmt pos:start="103:13" pos:end="103:83"><expr pos:start="103:13" pos:end="103:82"><call pos:start="103:13" pos:end="103:82"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:82">(<argument pos:start="103:20" pos:end="103:27"><expr pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:27"><name pos:start="103:20" pos:end="103:20">s</name><operator pos:start="103:21" pos:end="103:22">-&gt;</operator><name pos:start="103:23" pos:end="103:27">avctx</name></name></expr></argument>, <argument pos:start="103:30" pos:end="103:41"><expr pos:start="103:30" pos:end="103:41"><name pos:start="103:30" pos:end="103:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:44" pos:end="103:68"><expr pos:start="103:44" pos:end="103:68"><literal type="string" pos:start="103:44" pos:end="103:68">"too many channels: %d\n"</literal></expr></argument>, <argument pos:start="103:71" pos:end="103:81"><expr pos:start="103:71" pos:end="103:81"><name pos:start="103:71" pos:end="103:81"><name pos:start="103:71" pos:end="103:71">s</name><operator pos:start="103:72" pos:end="103:73">-&gt;</operator><name pos:start="103:74" pos:end="103:81">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="105:13" pos:end="105:22">return <expr pos:start="105:20" pos:end="105:21"><operator pos:start="105:20" pos:end="105:20">-</operator><literal type="number" pos:start="105:21" pos:end="105:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:42">/* get blocksize if version &gt; 0 */</comment>

        <if_stmt pos:start="113:9" pos:end="133:9"><if pos:start="113:9" pos:end="133:9">if <condition pos:start="113:12" pos:end="113:27">(<expr pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:22"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:22">version</name></name> <operator pos:start="113:24" pos:end="113:24">&gt;</operator> <literal type="number" pos:start="113:26" pos:end="113:26">0</literal></expr>)</condition> <block pos:start="113:29" pos:end="133:9">{<block_content pos:start="115:13" pos:end="131:13">

            <decl_stmt pos:start="115:13" pos:end="115:27"><decl pos:start="115:13" pos:end="115:26"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:26">skip_bytes</name></decl>;</decl_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:68"><expr pos:start="117:13" pos:end="117:67"><name pos:start="117:13" pos:end="117:24"><name pos:start="117:13" pos:end="117:13">s</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:24">blocksize</name></name> <operator pos:start="117:26" pos:end="117:26">=</operator> <call pos:start="117:28" pos:end="117:67"><name pos:start="117:28" pos:end="117:35">get_uint</name><argument_list pos:start="117:36" pos:end="117:67">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">s</name></expr></argument>, <argument pos:start="117:40" pos:end="117:66"><expr pos:start="117:40" pos:end="117:66"><call pos:start="117:40" pos:end="117:66"><name pos:start="117:40" pos:end="117:46">av_log2</name><argument_list pos:start="117:47" pos:end="117:66">(<argument pos:start="117:48" pos:end="117:65"><expr pos:start="117:48" pos:end="117:65"><name pos:start="117:48" pos:end="117:65">DEFAULT_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:44"><expr pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:19">maxnlpc</name> <operator pos:start="119:21" pos:end="119:21">=</operator> <call pos:start="119:23" pos:end="119:43"><name pos:start="119:23" pos:end="119:30">get_uint</name><argument_list pos:start="119:31" pos:end="119:43">(<argument pos:start="119:32" pos:end="119:32"><expr pos:start="119:32" pos:end="119:32"><name pos:start="119:32" pos:end="119:32">s</name></expr></argument>, <argument pos:start="119:35" pos:end="119:42"><expr pos:start="119:35" pos:end="119:42"><name pos:start="119:35" pos:end="119:42">LPCQSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:38"><expr pos:start="121:13" pos:end="121:37"><name pos:start="121:13" pos:end="121:20"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:20">nmean</name></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <call pos:start="121:24" pos:end="121:37"><name pos:start="121:24" pos:end="121:31">get_uint</name><argument_list pos:start="121:32" pos:end="121:37">(<argument pos:start="121:33" pos:end="121:33"><expr pos:start="121:33" pos:end="121:33"><name pos:start="121:33" pos:end="121:33">s</name></expr></argument>, <argument pos:start="121:36" pos:end="121:36"><expr pos:start="121:36" pos:end="121:36"><literal type="number" pos:start="121:36" pos:end="121:36">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:48"><expr pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:22">skip_bytes</name> <operator pos:start="125:24" pos:end="125:24">=</operator> <call pos:start="125:26" pos:end="125:47"><name pos:start="125:26" pos:end="125:33">get_uint</name><argument_list pos:start="125:34" pos:end="125:47">(<argument pos:start="125:35" pos:end="125:35"><expr pos:start="125:35" pos:end="125:35"><name pos:start="125:35" pos:end="125:35">s</name></expr></argument>, <argument pos:start="125:38" pos:end="125:46"><expr pos:start="125:38" pos:end="125:46"><name pos:start="125:38" pos:end="125:46">NSKIPSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="127:13" pos:end="131:13">for <control pos:start="127:17" pos:end="127:40">(<init pos:start="127:18" pos:end="127:21"><expr pos:start="127:18" pos:end="127:20"><name pos:start="127:18" pos:end="127:18">i</name><operator pos:start="127:19" pos:end="127:19">=</operator><literal type="number" pos:start="127:20" pos:end="127:20">0</literal></expr>;</init> <condition pos:start="127:23" pos:end="127:35"><expr pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:23">i</name><operator pos:start="127:24" pos:end="127:24">&lt;</operator><name pos:start="127:25" pos:end="127:34">skip_bytes</name></expr>;</condition> <incr pos:start="127:37" pos:end="127:39"><expr pos:start="127:37" pos:end="127:39"><name pos:start="127:37" pos:end="127:37">i</name><operator pos:start="127:38" pos:end="127:39">++</operator></expr></incr>)</control> <block pos:start="127:42" pos:end="131:13">{<block_content pos:start="129:17" pos:end="129:37">

                <expr_stmt pos:start="129:17" pos:end="129:37"><expr pos:start="129:17" pos:end="129:36"><call pos:start="129:17" pos:end="129:36"><name pos:start="129:17" pos:end="129:25">skip_bits</name><argument_list pos:start="129:26" pos:end="129:36">(<argument pos:start="129:27" pos:end="129:32"><expr pos:start="129:27" pos:end="129:32"><operator pos:start="129:27" pos:end="129:27">&amp;</operator><name pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:28">s</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:32">gb</name></name></expr></argument>, <argument pos:start="129:35" pos:end="129:35"><expr pos:start="129:35" pos:end="129:35"><literal type="number" pos:start="129:35" pos:end="129:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:41"><expr pos:start="135:9" pos:end="135:40"><name pos:start="135:9" pos:end="135:16"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:16">nwrap</name></name> <operator pos:start="135:18" pos:end="135:18">=</operator> <call pos:start="135:20" pos:end="135:40"><name pos:start="135:20" pos:end="135:24">FFMAX</name><argument_list pos:start="135:25" pos:end="135:40">(<argument pos:start="135:26" pos:end="135:30"><expr pos:start="135:26" pos:end="135:30"><name pos:start="135:26" pos:end="135:30">NWRAP</name></expr></argument>, <argument pos:start="135:33" pos:end="135:39"><expr pos:start="135:33" pos:end="135:39"><name pos:start="135:33" pos:end="135:39">maxnlpc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:28"><expr pos:start="139:9" pos:end="139:27"><call pos:start="139:9" pos:end="139:27"><name pos:start="139:9" pos:end="139:24">allocate_buffers</name><argument_list pos:start="139:25" pos:end="139:27">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:23"><expr pos:start="143:9" pos:end="143:22"><call pos:start="143:9" pos:end="143:22"><name pos:start="143:9" pos:end="143:19">init_offset</name><argument_list pos:start="143:20" pos:end="143:22">(<argument pos:start="143:21" pos:end="143:21"><expr pos:start="143:21" pos:end="143:21"><name pos:start="143:21" pos:end="143:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="147:9" pos:end="149:41"><if pos:start="147:9" pos:end="149:41">if <condition pos:start="147:12" pos:end="147:27">(<expr pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:22"><name pos:start="147:13" pos:end="147:13">s</name><operator pos:start="147:14" pos:end="147:15">-&gt;</operator><name pos:start="147:16" pos:end="147:22">version</name></name> <operator pos:start="147:24" pos:end="147:24">&gt;</operator> <literal type="number" pos:start="147:26" pos:end="147:26">1</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:41"><block_content pos:start="149:13" pos:end="149:41">

            <expr_stmt pos:start="149:13" pos:end="149:41"><expr pos:start="149:13" pos:end="149:40"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:13">s</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:25">lpcqoffset</name></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:40">V2LPCQOFFSET</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="153:9" pos:end="159:9"><if pos:start="153:9" pos:end="159:9">if <condition pos:start="153:12" pos:end="153:65">(<expr pos:start="153:13" pos:end="153:64"><call pos:start="153:13" pos:end="153:49"><name pos:start="153:13" pos:end="153:33">get_ur_golomb_shorten</name><argument_list pos:start="153:34" pos:end="153:49">(<argument pos:start="153:35" pos:end="153:40"><expr pos:start="153:35" pos:end="153:40"><operator pos:start="153:35" pos:end="153:35">&amp;</operator><name pos:start="153:36" pos:end="153:40"><name pos:start="153:36" pos:end="153:36">s</name><operator pos:start="153:37" pos:end="153:38">-&gt;</operator><name pos:start="153:39" pos:end="153:40">gb</name></name></expr></argument>, <argument pos:start="153:43" pos:end="153:48"><expr pos:start="153:43" pos:end="153:48"><name pos:start="153:43" pos:end="153:48">FNSIZE</name></expr></argument>)</argument_list></call> <operator pos:start="153:51" pos:end="153:52">!=</operator> <name pos:start="153:54" pos:end="153:64">FN_VERBATIM</name></expr>)</condition> <block pos:start="153:67" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:22">

            <expr_stmt pos:start="155:13" pos:end="155:95"><expr pos:start="155:13" pos:end="155:94"><call pos:start="155:13" pos:end="155:94"><name pos:start="155:13" pos:end="155:18">av_log</name><argument_list pos:start="155:19" pos:end="155:94">(<argument pos:start="155:20" pos:end="155:27"><expr pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:27"><name pos:start="155:20" pos:end="155:20">s</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:27">avctx</name></name></expr></argument>, <argument pos:start="155:30" pos:end="155:41"><expr pos:start="155:30" pos:end="155:41"><name pos:start="155:30" pos:end="155:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="155:44" pos:end="155:93"><expr pos:start="155:44" pos:end="155:93"><literal type="string" pos:start="155:44" pos:end="155:93">"missing verbatim section at begining of stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="157:13" pos:end="157:22">return <expr pos:start="157:20" pos:end="157:21"><operator pos:start="157:20" pos:end="157:20">-</operator><literal type="number" pos:start="157:21" pos:end="157:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="163:9" pos:end="163:77"><expr pos:start="163:9" pos:end="163:76"><name pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:22">header_size</name></name> <operator pos:start="163:24" pos:end="163:24">=</operator> <call pos:start="163:26" pos:end="163:76"><name pos:start="163:26" pos:end="163:46">get_ur_golomb_shorten</name><argument_list pos:start="163:47" pos:end="163:76">(<argument pos:start="163:48" pos:end="163:53"><expr pos:start="163:48" pos:end="163:53"><operator pos:start="163:48" pos:end="163:48">&amp;</operator><name pos:start="163:49" pos:end="163:53"><name pos:start="163:49" pos:end="163:49">s</name><operator pos:start="163:50" pos:end="163:51">-&gt;</operator><name pos:start="163:52" pos:end="163:53">gb</name></name></expr></argument>, <argument pos:start="163:56" pos:end="163:75"><expr pos:start="163:56" pos:end="163:75"><name pos:start="163:56" pos:end="163:75">VERBATIM_CKSIZE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="171:9"><if pos:start="165:9" pos:end="171:9">if <condition pos:start="165:12" pos:end="165:88">(<expr pos:start="165:13" pos:end="165:87"><name pos:start="165:13" pos:end="165:26"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:26">header_size</name></name> <operator pos:start="165:28" pos:end="165:29">&gt;=</operator> <name pos:start="165:31" pos:end="165:45">OUT_BUFFER_SIZE</name> <operator pos:start="165:47" pos:end="165:48">||</operator> <name pos:start="165:50" pos:end="165:63"><name pos:start="165:50" pos:end="165:50">s</name><operator pos:start="165:51" pos:end="165:52">-&gt;</operator><name pos:start="165:53" pos:end="165:63">header_size</name></name> <operator pos:start="165:65" pos:end="165:65">&lt;</operator> <name pos:start="165:67" pos:end="165:87">CANONICAL_HEADER_SIZE</name></expr>)</condition> <block pos:start="165:90" pos:end="171:9">{<block_content pos:start="167:13" pos:end="169:22">

            <expr_stmt pos:start="167:13" pos:end="167:89"><expr pos:start="167:13" pos:end="167:88"><call pos:start="167:13" pos:end="167:88"><name pos:start="167:13" pos:end="167:18">av_log</name><argument_list pos:start="167:19" pos:end="167:88">(<argument pos:start="167:20" pos:end="167:27"><expr pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:27"><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:27">avctx</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:41"><expr pos:start="167:30" pos:end="167:41"><name pos:start="167:30" pos:end="167:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="167:44" pos:end="167:71"><expr pos:start="167:44" pos:end="167:71"><literal type="string" pos:start="167:44" pos:end="167:71">"header is wrong size: %d\n"</literal></expr></argument>, <argument pos:start="167:74" pos:end="167:87"><expr pos:start="167:74" pos:end="167:87"><name pos:start="167:74" pos:end="167:87"><name pos:start="167:74" pos:end="167:74">s</name><operator pos:start="167:75" pos:end="167:76">-&gt;</operator><name pos:start="167:77" pos:end="167:87">header_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="169:13" pos:end="169:22">return <expr pos:start="169:20" pos:end="169:21"><operator pos:start="169:20" pos:end="169:20">-</operator><literal type="number" pos:start="169:21" pos:end="169:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <for pos:start="175:9" pos:end="177:83">for <control pos:start="175:13" pos:end="175:40">(<init pos:start="175:14" pos:end="175:17"><expr pos:start="175:14" pos:end="175:16"><name pos:start="175:14" pos:end="175:14">i</name><operator pos:start="175:15" pos:end="175:15">=</operator><literal type="number" pos:start="175:16" pos:end="175:16">0</literal></expr>;</init> <condition pos:start="175:19" pos:end="175:35"><expr pos:start="175:19" pos:end="175:34"><name pos:start="175:19" pos:end="175:19">i</name><operator pos:start="175:20" pos:end="175:20">&lt;</operator><name pos:start="175:21" pos:end="175:34"><name pos:start="175:21" pos:end="175:21">s</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:34">header_size</name></name></expr>;</condition> <incr pos:start="175:37" pos:end="175:39"><expr pos:start="175:37" pos:end="175:39"><name pos:start="175:37" pos:end="175:37">i</name><operator pos:start="175:38" pos:end="175:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="177:13" pos:end="177:83"><block_content pos:start="177:13" pos:end="177:83">

            <expr_stmt pos:start="177:13" pos:end="177:83"><expr pos:start="177:13" pos:end="177:82"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:13">s</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:21">header</name><index pos:start="177:22" pos:end="177:24">[<expr pos:start="177:23" pos:end="177:23"><name pos:start="177:23" pos:end="177:23">i</name></expr>]</index></name> <operator pos:start="177:26" pos:end="177:26">=</operator> <operator pos:start="177:28" pos:end="177:28">(</operator><name pos:start="177:29" pos:end="177:32">char</name><operator pos:start="177:33" pos:end="177:33">)</operator><call pos:start="177:34" pos:end="177:82"><name pos:start="177:34" pos:end="177:54">get_ur_golomb_shorten</name><argument_list pos:start="177:55" pos:end="177:82">(<argument pos:start="177:56" pos:end="177:61"><expr pos:start="177:56" pos:end="177:61"><operator pos:start="177:56" pos:end="177:56">&amp;</operator><name pos:start="177:57" pos:end="177:61"><name pos:start="177:57" pos:end="177:57">s</name><operator pos:start="177:58" pos:end="177:59">-&gt;</operator><name pos:start="177:60" pos:end="177:61">gb</name></name></expr></argument>, <argument pos:start="177:64" pos:end="177:81"><expr pos:start="177:64" pos:end="177:81"><name pos:start="177:64" pos:end="177:81">VERBATIM_BYTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="181:9" pos:end="183:22"><if pos:start="181:9" pos:end="183:22">if <condition pos:start="181:12" pos:end="181:69">(<expr pos:start="181:13" pos:end="181:68"><call pos:start="181:13" pos:end="181:64"><name pos:start="181:13" pos:end="181:30">decode_wave_header</name><argument_list pos:start="181:31" pos:end="181:64">(<argument pos:start="181:32" pos:end="181:36"><expr pos:start="181:32" pos:end="181:36"><name pos:start="181:32" pos:end="181:36">avctx</name></expr></argument>, <argument pos:start="181:39" pos:end="181:47"><expr pos:start="181:39" pos:end="181:47"><name pos:start="181:39" pos:end="181:47"><name pos:start="181:39" pos:end="181:39">s</name><operator pos:start="181:40" pos:end="181:41">-&gt;</operator><name pos:start="181:42" pos:end="181:47">header</name></name></expr></argument>, <argument pos:start="181:50" pos:end="181:63"><expr pos:start="181:50" pos:end="181:63"><name pos:start="181:50" pos:end="181:63"><name pos:start="181:50" pos:end="181:50">s</name><operator pos:start="181:51" pos:end="181:52">-&gt;</operator><name pos:start="181:53" pos:end="181:63">header_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="181:66" pos:end="181:66">&lt;</operator> <literal type="number" pos:start="181:68" pos:end="181:68">0</literal></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:22"><block_content pos:start="183:13" pos:end="183:22">

            <return pos:start="183:13" pos:end="183:22">return <expr pos:start="183:20" pos:end="183:21"><operator pos:start="183:20" pos:end="183:20">-</operator><literal type="number" pos:start="183:21" pos:end="183:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="187:9" pos:end="187:24"><expr pos:start="187:9" pos:end="187:23"><name pos:start="187:9" pos:end="187:19"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:19">cur_chan</name></name> <operator pos:start="187:21" pos:end="187:21">=</operator> <literal type="number" pos:start="187:23" pos:end="187:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:24"><expr pos:start="189:9" pos:end="189:23"><name pos:start="189:9" pos:end="189:19"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:19">bitshift</name></name> <operator pos:start="189:21" pos:end="189:21">=</operator> <literal type="number" pos:start="189:23" pos:end="189:23">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="193:5" pos:end="423:5">else

    <block pos:start="195:5" pos:end="423:5">{<block_content pos:start="197:9" pos:end="421:9">

        <decl_stmt pos:start="197:9" pos:end="197:16"><decl pos:start="197:9" pos:end="197:15"><type pos:start="197:9" pos:end="197:11"><name pos:start="197:9" pos:end="197:11">int</name></type> <name pos:start="197:13" pos:end="197:15">cmd</name></decl>;</decl_stmt>

        <decl_stmt pos:start="199:9" pos:end="199:16"><decl pos:start="199:9" pos:end="199:15"><type pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">int</name></type> <name pos:start="199:13" pos:end="199:15">len</name></decl>;</decl_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:52"><expr pos:start="201:9" pos:end="201:51"><name pos:start="201:9" pos:end="201:11">cmd</name> <operator pos:start="201:13" pos:end="201:13">=</operator> <call pos:start="201:15" pos:end="201:51"><name pos:start="201:15" pos:end="201:35">get_ur_golomb_shorten</name><argument_list pos:start="201:36" pos:end="201:51">(<argument pos:start="201:37" pos:end="201:42"><expr pos:start="201:37" pos:end="201:42"><operator pos:start="201:37" pos:end="201:37">&amp;</operator><name pos:start="201:38" pos:end="201:42"><name pos:start="201:38" pos:end="201:38">s</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:42">gb</name></name></expr></argument>, <argument pos:start="201:45" pos:end="201:50"><expr pos:start="201:45" pos:end="201:50"><name pos:start="201:45" pos:end="201:50">FNSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="203:9" pos:end="421:9">switch <condition pos:start="203:16" pos:end="203:20">(<expr pos:start="203:17" pos:end="203:19"><name pos:start="203:17" pos:end="203:19">cmd</name></expr>)</condition> <block pos:start="203:22" pos:end="421:9">{<block_content pos:start="205:13" pos:end="419:22">

            <case pos:start="205:13" pos:end="205:25">case <expr pos:start="205:18" pos:end="205:24"><name pos:start="205:18" pos:end="205:24">FN_ZERO</name></expr>:</case>

            <case pos:start="207:13" pos:end="207:26">case <expr pos:start="207:18" pos:end="207:25"><name pos:start="207:18" pos:end="207:25">FN_DIFF0</name></expr>:</case>

            <case pos:start="209:13" pos:end="209:26">case <expr pos:start="209:18" pos:end="209:25"><name pos:start="209:18" pos:end="209:25">FN_DIFF1</name></expr>:</case>

            <case pos:start="211:13" pos:end="211:26">case <expr pos:start="211:18" pos:end="211:25"><name pos:start="211:18" pos:end="211:25">FN_DIFF2</name></expr>:</case>

            <case pos:start="213:13" pos:end="213:26">case <expr pos:start="213:18" pos:end="213:25"><name pos:start="213:18" pos:end="213:25">FN_DIFF3</name></expr>:</case>

            <case pos:start="215:13" pos:end="215:25">case <expr pos:start="215:18" pos:end="215:24"><name pos:start="215:18" pos:end="215:24">FN_QLPC</name></expr>:</case>

                <block pos:start="217:17" pos:end="379:17">{<block_content pos:start="219:21" pos:end="377:26">

                    <decl_stmt pos:start="219:21" pos:end="219:42"><decl pos:start="219:21" pos:end="219:41"><type pos:start="219:21" pos:end="219:23"><name pos:start="219:21" pos:end="219:23">int</name></type> <name pos:start="219:25" pos:end="219:37">residual_size</name> <init pos:start="219:39" pos:end="219:41">= <expr pos:start="219:41" pos:end="219:41"><literal type="number" pos:start="219:41" pos:end="219:41">0</literal></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="221:21" pos:end="221:46"><decl pos:start="221:21" pos:end="221:45"><type pos:start="221:21" pos:end="221:23"><name pos:start="221:21" pos:end="221:23">int</name></type> <name pos:start="221:25" pos:end="221:31">channel</name> <init pos:start="221:33" pos:end="221:45">= <expr pos:start="221:35" pos:end="221:45"><name pos:start="221:35" pos:end="221:45"><name pos:start="221:35" pos:end="221:35">s</name><operator pos:start="221:36" pos:end="221:37">-&gt;</operator><name pos:start="221:38" pos:end="221:45">cur_chan</name></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="223:21" pos:end="223:36"><decl pos:start="223:21" pos:end="223:35"><type pos:start="223:21" pos:end="223:27"><name pos:start="223:21" pos:end="223:27">int32_t</name></type> <name pos:start="223:29" pos:end="223:35">coffset</name></decl>;</decl_stmt>

                    <if_stmt pos:start="225:21" pos:end="235:21"><if pos:start="225:21" pos:end="235:21">if <condition pos:start="225:24" pos:end="225:39">(<expr pos:start="225:25" pos:end="225:38"><name pos:start="225:25" pos:end="225:27">cmd</name> <operator pos:start="225:29" pos:end="225:30">!=</operator> <name pos:start="225:32" pos:end="225:38">FN_ZERO</name></expr>)</condition> <block pos:start="225:41" pos:end="235:21">{<block_content pos:start="227:25" pos:end="233:44">

                        <expr_stmt pos:start="227:25" pos:end="227:82"><expr pos:start="227:25" pos:end="227:81"><name pos:start="227:25" pos:end="227:37">residual_size</name> <operator pos:start="227:39" pos:end="227:39">=</operator> <call pos:start="227:41" pos:end="227:81"><name pos:start="227:41" pos:end="227:61">get_ur_golomb_shorten</name><argument_list pos:start="227:62" pos:end="227:81">(<argument pos:start="227:63" pos:end="227:68"><expr pos:start="227:63" pos:end="227:68"><operator pos:start="227:63" pos:end="227:63">&amp;</operator><name pos:start="227:64" pos:end="227:68"><name pos:start="227:64" pos:end="227:64">s</name><operator pos:start="227:65" pos:end="227:66">-&gt;</operator><name pos:start="227:67" pos:end="227:68">gb</name></name></expr></argument>, <argument pos:start="227:71" pos:end="227:80"><expr pos:start="227:71" pos:end="227:80"><name pos:start="227:71" pos:end="227:80">ENERGYSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <comment type="block" pos:start="229:25" pos:end="229:104">/* this is a hack as version 0 differed in defintion of get_sr_golomb_shorten */</comment>

                        <if_stmt pos:start="231:25" pos:end="233:44"><if pos:start="231:25" pos:end="233:44">if <condition pos:start="231:28" pos:end="231:44">(<expr pos:start="231:29" pos:end="231:43"><name pos:start="231:29" pos:end="231:38"><name pos:start="231:29" pos:end="231:29">s</name><operator pos:start="231:30" pos:end="231:31">-&gt;</operator><name pos:start="231:32" pos:end="231:38">version</name></name> <operator pos:start="231:40" pos:end="231:41">==</operator> <literal type="number" pos:start="231:43" pos:end="231:43">0</literal></expr>)</condition><block type="pseudo" pos:start="233:29" pos:end="233:44"><block_content pos:start="233:29" pos:end="233:44">

                            <expr_stmt pos:start="233:29" pos:end="233:44"><expr pos:start="233:29" pos:end="233:43"><name pos:start="233:29" pos:end="233:41">residual_size</name><operator pos:start="233:42" pos:end="233:43">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>



                    <if_stmt pos:start="239:21" pos:end="257:21"><if pos:start="239:21" pos:end="241:56">if <condition pos:start="239:24" pos:end="239:38">(<expr pos:start="239:25" pos:end="239:37"><name pos:start="239:25" pos:end="239:32"><name pos:start="239:25" pos:end="239:25">s</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:32">nmean</name></name> <operator pos:start="239:34" pos:end="239:35">==</operator> <literal type="number" pos:start="239:37" pos:end="239:37">0</literal></expr>)</condition><block type="pseudo" pos:start="241:25" pos:end="241:56"><block_content pos:start="241:25" pos:end="241:56">

                        <expr_stmt pos:start="241:25" pos:end="241:56"><expr pos:start="241:25" pos:end="241:55"><name pos:start="241:25" pos:end="241:31">coffset</name> <operator pos:start="241:33" pos:end="241:33">=</operator> <name pos:start="241:35" pos:end="241:55"><name pos:start="241:35" pos:end="241:35">s</name><operator pos:start="241:36" pos:end="241:37">-&gt;</operator><name pos:start="241:38" pos:end="241:43">offset</name><index pos:start="241:44" pos:end="241:52">[<expr pos:start="241:45" pos:end="241:51"><name pos:start="241:45" pos:end="241:51">channel</name></expr>]</index><index pos:start="241:53" pos:end="241:55">[<expr pos:start="241:54" pos:end="241:54"><literal type="number" pos:start="241:54" pos:end="241:54">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="243:21" pos:end="257:21">else <block pos:start="243:26" pos:end="257:21">{<block_content pos:start="245:25" pos:end="255:62">

                        <decl_stmt pos:start="245:25" pos:end="245:74"><decl pos:start="245:25" pos:end="245:73"><type pos:start="245:25" pos:end="245:31"><name pos:start="245:25" pos:end="245:31">int32_t</name></type> <name pos:start="245:33" pos:end="245:35">sum</name> <init pos:start="245:37" pos:end="245:73">= <expr pos:start="245:39" pos:end="245:73"><ternary pos:start="245:39" pos:end="245:73"><condition pos:start="245:39" pos:end="245:56"><expr pos:start="245:39" pos:end="245:54"><operator pos:start="245:39" pos:end="245:39">(</operator><name pos:start="245:40" pos:end="245:49"><name pos:start="245:40" pos:end="245:40">s</name><operator pos:start="245:41" pos:end="245:42">-&gt;</operator><name pos:start="245:43" pos:end="245:49">version</name></name> <operator pos:start="245:51" pos:end="245:51">&lt;</operator> <literal type="number" pos:start="245:53" pos:end="245:53">2</literal><operator pos:start="245:54" pos:end="245:54">)</operator></expr> ?</condition><then pos:start="245:58" pos:end="245:58"> <expr pos:start="245:58" pos:end="245:58"><literal type="number" pos:start="245:58" pos:end="245:58">0</literal></expr> </then><else pos:start="245:60" pos:end="245:73">: <expr pos:start="245:62" pos:end="245:73"><name pos:start="245:62" pos:end="245:69"><name pos:start="245:62" pos:end="245:62">s</name><operator pos:start="245:63" pos:end="245:64">-&gt;</operator><name pos:start="245:65" pos:end="245:69">nmean</name></name> <operator pos:start="245:71" pos:end="245:71">/</operator> <literal type="number" pos:start="245:73" pos:end="245:73">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                        <for pos:start="247:25" pos:end="249:57">for <control pos:start="247:29" pos:end="247:50">(<init pos:start="247:30" pos:end="247:33"><expr pos:start="247:30" pos:end="247:32"><name pos:start="247:30" pos:end="247:30">i</name><operator pos:start="247:31" pos:end="247:31">=</operator><literal type="number" pos:start="247:32" pos:end="247:32">0</literal></expr>;</init> <condition pos:start="247:35" pos:end="247:45"><expr pos:start="247:35" pos:end="247:44"><name pos:start="247:35" pos:end="247:35">i</name><operator pos:start="247:36" pos:end="247:36">&lt;</operator><name pos:start="247:37" pos:end="247:44"><name pos:start="247:37" pos:end="247:37">s</name><operator pos:start="247:38" pos:end="247:39">-&gt;</operator><name pos:start="247:40" pos:end="247:44">nmean</name></name></expr>;</condition> <incr pos:start="247:47" pos:end="247:49"><expr pos:start="247:47" pos:end="247:49"><name pos:start="247:47" pos:end="247:47">i</name><operator pos:start="247:48" pos:end="247:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="249:29" pos:end="249:57"><block_content pos:start="249:29" pos:end="249:57">

                            <expr_stmt pos:start="249:29" pos:end="249:57"><expr pos:start="249:29" pos:end="249:56"><name pos:start="249:29" pos:end="249:31">sum</name> <operator pos:start="249:33" pos:end="249:34">+=</operator> <name pos:start="249:36" pos:end="249:56"><name pos:start="249:36" pos:end="249:36">s</name><operator pos:start="249:37" pos:end="249:38">-&gt;</operator><name pos:start="249:39" pos:end="249:44">offset</name><index pos:start="249:45" pos:end="249:53">[<expr pos:start="249:46" pos:end="249:52"><name pos:start="249:46" pos:end="249:52">channel</name></expr>]</index><index pos:start="249:54" pos:end="249:56">[<expr pos:start="249:55" pos:end="249:55"><name pos:start="249:55" pos:end="249:55">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                        <expr_stmt pos:start="251:25" pos:end="251:49"><expr pos:start="251:25" pos:end="251:48"><name pos:start="251:25" pos:end="251:31">coffset</name> <operator pos:start="251:33" pos:end="251:33">=</operator> <name pos:start="251:35" pos:end="251:37">sum</name> <operator pos:start="251:39" pos:end="251:39">/</operator> <name pos:start="251:41" pos:end="251:48"><name pos:start="251:41" pos:end="251:41">s</name><operator pos:start="251:42" pos:end="251:43">-&gt;</operator><name pos:start="251:44" pos:end="251:48">nmean</name></name></expr>;</expr_stmt>

                        <if_stmt pos:start="253:25" pos:end="255:62"><if pos:start="253:25" pos:end="255:62">if <condition pos:start="253:28" pos:end="253:44">(<expr pos:start="253:29" pos:end="253:43"><name pos:start="253:29" pos:end="253:38"><name pos:start="253:29" pos:end="253:29">s</name><operator pos:start="253:30" pos:end="253:31">-&gt;</operator><name pos:start="253:32" pos:end="253:38">version</name></name> <operator pos:start="253:40" pos:end="253:41">&gt;=</operator> <literal type="number" pos:start="253:43" pos:end="253:43">2</literal></expr>)</condition><block type="pseudo" pos:start="255:29" pos:end="255:62"><block_content pos:start="255:29" pos:end="255:62">

                            <expr_stmt pos:start="255:29" pos:end="255:62"><expr pos:start="255:29" pos:end="255:61"><name pos:start="255:29" pos:end="255:35">coffset</name> <operator pos:start="255:37" pos:end="255:39">&gt;&gt;=</operator> <call pos:start="255:41" pos:end="255:61"><name pos:start="255:41" pos:end="255:45">FFMIN</name><argument_list pos:start="255:46" pos:end="255:61">(<argument pos:start="255:47" pos:end="255:47"><expr pos:start="255:47" pos:end="255:47"><literal type="number" pos:start="255:47" pos:end="255:47">1</literal></expr></argument>, <argument pos:start="255:50" pos:end="255:60"><expr pos:start="255:50" pos:end="255:60"><name pos:start="255:50" pos:end="255:60"><name pos:start="255:50" pos:end="255:50">s</name><operator pos:start="255:51" pos:end="255:52">-&gt;</operator><name pos:start="255:53" pos:end="255:60">bitshift</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <switch pos:start="259:21" pos:end="327:21">switch <condition pos:start="259:28" pos:end="259:32">(<expr pos:start="259:29" pos:end="259:31"><name pos:start="259:29" pos:end="259:31">cmd</name></expr>)</condition> <block pos:start="259:34" pos:end="327:21">{<block_content pos:start="261:25" pos:end="325:29">

                        <case pos:start="261:25" pos:end="261:37">case <expr pos:start="261:30" pos:end="261:36"><name pos:start="261:30" pos:end="261:36">FN_ZERO</name></expr>:</case>

                            <for pos:start="263:29" pos:end="265:59">for <control pos:start="263:33" pos:end="263:58">(<init pos:start="263:34" pos:end="263:37"><expr pos:start="263:34" pos:end="263:36"><name pos:start="263:34" pos:end="263:34">i</name><operator pos:start="263:35" pos:end="263:35">=</operator><literal type="number" pos:start="263:36" pos:end="263:36">0</literal></expr>;</init> <condition pos:start="263:39" pos:end="263:53"><expr pos:start="263:39" pos:end="263:52"><name pos:start="263:39" pos:end="263:39">i</name><operator pos:start="263:40" pos:end="263:40">&lt;</operator><name pos:start="263:41" pos:end="263:52"><name pos:start="263:41" pos:end="263:41">s</name><operator pos:start="263:42" pos:end="263:43">-&gt;</operator><name pos:start="263:44" pos:end="263:52">blocksize</name></name></expr>;</condition> <incr pos:start="263:55" pos:end="263:57"><expr pos:start="263:55" pos:end="263:57"><name pos:start="263:55" pos:end="263:55">i</name><operator pos:start="263:56" pos:end="263:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="265:33" pos:end="265:59"><block_content pos:start="265:33" pos:end="265:59">

                                <expr_stmt pos:start="265:33" pos:end="265:59"><expr pos:start="265:33" pos:end="265:58"><name pos:start="265:33" pos:end="265:54"><name pos:start="265:33" pos:end="265:33">s</name><operator pos:start="265:34" pos:end="265:35">-&gt;</operator><name pos:start="265:36" pos:end="265:42">decoded</name><index pos:start="265:43" pos:end="265:51">[<expr pos:start="265:44" pos:end="265:50"><name pos:start="265:44" pos:end="265:50">channel</name></expr>]</index><index pos:start="265:52" pos:end="265:54">[<expr pos:start="265:53" pos:end="265:53"><name pos:start="265:53" pos:end="265:53">i</name></expr>]</index></name> <operator pos:start="265:56" pos:end="265:56">=</operator> <literal type="number" pos:start="265:58" pos:end="265:58">0</literal></expr>;</expr_stmt></block_content></block></for>

                            <break pos:start="267:29" pos:end="267:34">break;</break>

                        <case pos:start="269:25" pos:end="269:38">case <expr pos:start="269:30" pos:end="269:37"><name pos:start="269:30" pos:end="269:37">FN_DIFF0</name></expr>:</case>

                            <for pos:start="271:29" pos:end="273:112">for <control pos:start="271:33" pos:end="271:58">(<init pos:start="271:34" pos:end="271:37"><expr pos:start="271:34" pos:end="271:36"><name pos:start="271:34" pos:end="271:34">i</name><operator pos:start="271:35" pos:end="271:35">=</operator><literal type="number" pos:start="271:36" pos:end="271:36">0</literal></expr>;</init> <condition pos:start="271:39" pos:end="271:53"><expr pos:start="271:39" pos:end="271:52"><name pos:start="271:39" pos:end="271:39">i</name><operator pos:start="271:40" pos:end="271:40">&lt;</operator><name pos:start="271:41" pos:end="271:52"><name pos:start="271:41" pos:end="271:41">s</name><operator pos:start="271:42" pos:end="271:43">-&gt;</operator><name pos:start="271:44" pos:end="271:52">blocksize</name></name></expr>;</condition> <incr pos:start="271:55" pos:end="271:57"><expr pos:start="271:55" pos:end="271:57"><name pos:start="271:55" pos:end="271:55">i</name><operator pos:start="271:56" pos:end="271:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="273:33" pos:end="273:112"><block_content pos:start="273:33" pos:end="273:112">

                                <expr_stmt pos:start="273:33" pos:end="273:112"><expr pos:start="273:33" pos:end="273:111"><name pos:start="273:33" pos:end="273:54"><name pos:start="273:33" pos:end="273:33">s</name><operator pos:start="273:34" pos:end="273:35">-&gt;</operator><name pos:start="273:36" pos:end="273:42">decoded</name><index pos:start="273:43" pos:end="273:51">[<expr pos:start="273:44" pos:end="273:50"><name pos:start="273:44" pos:end="273:50">channel</name></expr>]</index><index pos:start="273:52" pos:end="273:54">[<expr pos:start="273:53" pos:end="273:53"><name pos:start="273:53" pos:end="273:53">i</name></expr>]</index></name> <operator pos:start="273:56" pos:end="273:56">=</operator> <call pos:start="273:58" pos:end="273:101"><name pos:start="273:58" pos:end="273:78">get_sr_golomb_shorten</name><argument_list pos:start="273:79" pos:end="273:101">(<argument pos:start="273:80" pos:end="273:85"><expr pos:start="273:80" pos:end="273:85"><operator pos:start="273:80" pos:end="273:80">&amp;</operator><name pos:start="273:81" pos:end="273:85"><name pos:start="273:81" pos:end="273:81">s</name><operator pos:start="273:82" pos:end="273:83">-&gt;</operator><name pos:start="273:84" pos:end="273:85">gb</name></name></expr></argument>, <argument pos:start="273:88" pos:end="273:100"><expr pos:start="273:88" pos:end="273:100"><name pos:start="273:88" pos:end="273:100">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="273:103" pos:end="273:103">+</operator> <name pos:start="273:105" pos:end="273:111">coffset</name></expr>;</expr_stmt></block_content></block></for>

                            <break pos:start="275:29" pos:end="275:34">break;</break>

                        <case pos:start="277:25" pos:end="277:38">case <expr pos:start="277:30" pos:end="277:37"><name pos:start="277:30" pos:end="277:37">FN_DIFF1</name></expr>:</case>

                            <for pos:start="279:29" pos:end="281:131">for <control pos:start="279:33" pos:end="279:58">(<init pos:start="279:34" pos:end="279:37"><expr pos:start="279:34" pos:end="279:36"><name pos:start="279:34" pos:end="279:34">i</name><operator pos:start="279:35" pos:end="279:35">=</operator><literal type="number" pos:start="279:36" pos:end="279:36">0</literal></expr>;</init> <condition pos:start="279:39" pos:end="279:53"><expr pos:start="279:39" pos:end="279:52"><name pos:start="279:39" pos:end="279:39">i</name><operator pos:start="279:40" pos:end="279:40">&lt;</operator><name pos:start="279:41" pos:end="279:52"><name pos:start="279:41" pos:end="279:41">s</name><operator pos:start="279:42" pos:end="279:43">-&gt;</operator><name pos:start="279:44" pos:end="279:52">blocksize</name></name></expr>;</condition> <incr pos:start="279:55" pos:end="279:57"><expr pos:start="279:55" pos:end="279:57"><name pos:start="279:55" pos:end="279:55">i</name><operator pos:start="279:56" pos:end="279:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="281:33" pos:end="281:131"><block_content pos:start="281:33" pos:end="281:131">

                                <expr_stmt pos:start="281:33" pos:end="281:131"><expr pos:start="281:33" pos:end="281:130"><name pos:start="281:33" pos:end="281:54"><name pos:start="281:33" pos:end="281:33">s</name><operator pos:start="281:34" pos:end="281:35">-&gt;</operator><name pos:start="281:36" pos:end="281:42">decoded</name><index pos:start="281:43" pos:end="281:51">[<expr pos:start="281:44" pos:end="281:50"><name pos:start="281:44" pos:end="281:50">channel</name></expr>]</index><index pos:start="281:52" pos:end="281:54">[<expr pos:start="281:53" pos:end="281:53"><name pos:start="281:53" pos:end="281:53">i</name></expr>]</index></name> <operator pos:start="281:56" pos:end="281:56">=</operator> <call pos:start="281:58" pos:end="281:101"><name pos:start="281:58" pos:end="281:78">get_sr_golomb_shorten</name><argument_list pos:start="281:79" pos:end="281:101">(<argument pos:start="281:80" pos:end="281:85"><expr pos:start="281:80" pos:end="281:85"><operator pos:start="281:80" pos:end="281:80">&amp;</operator><name pos:start="281:81" pos:end="281:85"><name pos:start="281:81" pos:end="281:81">s</name><operator pos:start="281:82" pos:end="281:83">-&gt;</operator><name pos:start="281:84" pos:end="281:85">gb</name></name></expr></argument>, <argument pos:start="281:88" pos:end="281:100"><expr pos:start="281:88" pos:end="281:100"><name pos:start="281:88" pos:end="281:100">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="281:103" pos:end="281:103">+</operator> <name pos:start="281:105" pos:end="281:130"><name pos:start="281:105" pos:end="281:105">s</name><operator pos:start="281:106" pos:end="281:107">-&gt;</operator><name pos:start="281:108" pos:end="281:114">decoded</name><index pos:start="281:115" pos:end="281:123">[<expr pos:start="281:116" pos:end="281:122"><name pos:start="281:116" pos:end="281:122">channel</name></expr>]</index><index pos:start="281:124" pos:end="281:130">[<expr pos:start="281:125" pos:end="281:129"><name pos:start="281:125" pos:end="281:125">i</name> <operator pos:start="281:127" pos:end="281:127">-</operator> <literal type="number" pos:start="281:129" pos:end="281:129">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                            <break pos:start="283:29" pos:end="283:34">break;</break>

                        <case pos:start="285:25" pos:end="285:38">case <expr pos:start="285:30" pos:end="285:37"><name pos:start="285:30" pos:end="285:37">FN_DIFF2</name></expr>:</case>

                            <for pos:start="287:29" pos:end="291:131">for <control pos:start="287:33" pos:end="287:58">(<init pos:start="287:34" pos:end="287:37"><expr pos:start="287:34" pos:end="287:36"><name pos:start="287:34" pos:end="287:34">i</name><operator pos:start="287:35" pos:end="287:35">=</operator><literal type="number" pos:start="287:36" pos:end="287:36">0</literal></expr>;</init> <condition pos:start="287:39" pos:end="287:53"><expr pos:start="287:39" pos:end="287:52"><name pos:start="287:39" pos:end="287:39">i</name><operator pos:start="287:40" pos:end="287:40">&lt;</operator><name pos:start="287:41" pos:end="287:52"><name pos:start="287:41" pos:end="287:41">s</name><operator pos:start="287:42" pos:end="287:43">-&gt;</operator><name pos:start="287:44" pos:end="287:52">blocksize</name></name></expr>;</condition> <incr pos:start="287:55" pos:end="287:57"><expr pos:start="287:55" pos:end="287:57"><name pos:start="287:55" pos:end="287:55">i</name><operator pos:start="287:56" pos:end="287:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="289:33" pos:end="291:131"><block_content pos:start="289:33" pos:end="291:131">

                                <expr_stmt pos:start="289:33" pos:end="291:131"><expr pos:start="289:33" pos:end="291:130"><name pos:start="289:33" pos:end="289:54"><name pos:start="289:33" pos:end="289:33">s</name><operator pos:start="289:34" pos:end="289:35">-&gt;</operator><name pos:start="289:36" pos:end="289:42">decoded</name><index pos:start="289:43" pos:end="289:51">[<expr pos:start="289:44" pos:end="289:50"><name pos:start="289:44" pos:end="289:50">channel</name></expr>]</index><index pos:start="289:52" pos:end="289:54">[<expr pos:start="289:53" pos:end="289:53"><name pos:start="289:53" pos:end="289:53">i</name></expr>]</index></name> <operator pos:start="289:56" pos:end="289:56">=</operator> <call pos:start="289:58" pos:end="289:101"><name pos:start="289:58" pos:end="289:78">get_sr_golomb_shorten</name><argument_list pos:start="289:79" pos:end="289:101">(<argument pos:start="289:80" pos:end="289:85"><expr pos:start="289:80" pos:end="289:85"><operator pos:start="289:80" pos:end="289:80">&amp;</operator><name pos:start="289:81" pos:end="289:85"><name pos:start="289:81" pos:end="289:81">s</name><operator pos:start="289:82" pos:end="289:83">-&gt;</operator><name pos:start="289:84" pos:end="289:85">gb</name></name></expr></argument>, <argument pos:start="289:88" pos:end="289:100"><expr pos:start="289:88" pos:end="289:100"><name pos:start="289:88" pos:end="289:100">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="289:103" pos:end="289:103">+</operator> <literal type="number" pos:start="289:105" pos:end="289:105">2</literal><operator pos:start="289:106" pos:end="289:106">*</operator><name pos:start="289:107" pos:end="289:130"><name pos:start="289:107" pos:end="289:107">s</name><operator pos:start="289:108" pos:end="289:109">-&gt;</operator><name pos:start="289:110" pos:end="289:116">decoded</name><index pos:start="289:117" pos:end="289:125">[<expr pos:start="289:118" pos:end="289:124"><name pos:start="289:118" pos:end="289:124">channel</name></expr>]</index><index pos:start="289:126" pos:end="289:130">[<expr pos:start="289:127" pos:end="289:129"><name pos:start="289:127" pos:end="289:127">i</name><operator pos:start="289:128" pos:end="289:128">-</operator><literal type="number" pos:start="289:129" pos:end="289:129">1</literal></expr>]</index></name>

                                                                                                      <operator pos:start="291:103" pos:end="291:103">-</operator>   <name pos:start="291:107" pos:end="291:130"><name pos:start="291:107" pos:end="291:107">s</name><operator pos:start="291:108" pos:end="291:109">-&gt;</operator><name pos:start="291:110" pos:end="291:116">decoded</name><index pos:start="291:117" pos:end="291:125">[<expr pos:start="291:118" pos:end="291:124"><name pos:start="291:118" pos:end="291:124">channel</name></expr>]</index><index pos:start="291:126" pos:end="291:130">[<expr pos:start="291:127" pos:end="291:129"><name pos:start="291:127" pos:end="291:127">i</name><operator pos:start="291:128" pos:end="291:128">-</operator><literal type="number" pos:start="291:129" pos:end="291:129">2</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                            <break pos:start="293:29" pos:end="293:34">break;</break>

                        <case pos:start="295:25" pos:end="295:38">case <expr pos:start="295:30" pos:end="295:37"><name pos:start="295:30" pos:end="295:37">FN_DIFF3</name></expr>:</case>

                            <for pos:start="297:29" pos:end="303:131">for <control pos:start="297:33" pos:end="297:58">(<init pos:start="297:34" pos:end="297:37"><expr pos:start="297:34" pos:end="297:36"><name pos:start="297:34" pos:end="297:34">i</name><operator pos:start="297:35" pos:end="297:35">=</operator><literal type="number" pos:start="297:36" pos:end="297:36">0</literal></expr>;</init> <condition pos:start="297:39" pos:end="297:53"><expr pos:start="297:39" pos:end="297:52"><name pos:start="297:39" pos:end="297:39">i</name><operator pos:start="297:40" pos:end="297:40">&lt;</operator><name pos:start="297:41" pos:end="297:52"><name pos:start="297:41" pos:end="297:41">s</name><operator pos:start="297:42" pos:end="297:43">-&gt;</operator><name pos:start="297:44" pos:end="297:52">blocksize</name></name></expr>;</condition> <incr pos:start="297:55" pos:end="297:57"><expr pos:start="297:55" pos:end="297:57"><name pos:start="297:55" pos:end="297:55">i</name><operator pos:start="297:56" pos:end="297:57">++</operator></expr></incr>)</control><block type="pseudo" pos:start="299:33" pos:end="303:131"><block_content pos:start="299:33" pos:end="303:131">

                                <expr_stmt pos:start="299:33" pos:end="303:131"><expr pos:start="299:33" pos:end="303:130"><name pos:start="299:33" pos:end="299:54"><name pos:start="299:33" pos:end="299:33">s</name><operator pos:start="299:34" pos:end="299:35">-&gt;</operator><name pos:start="299:36" pos:end="299:42">decoded</name><index pos:start="299:43" pos:end="299:51">[<expr pos:start="299:44" pos:end="299:50"><name pos:start="299:44" pos:end="299:50">channel</name></expr>]</index><index pos:start="299:52" pos:end="299:54">[<expr pos:start="299:53" pos:end="299:53"><name pos:start="299:53" pos:end="299:53">i</name></expr>]</index></name> <operator pos:start="299:56" pos:end="299:56">=</operator> <call pos:start="299:58" pos:end="299:101"><name pos:start="299:58" pos:end="299:78">get_sr_golomb_shorten</name><argument_list pos:start="299:79" pos:end="299:101">(<argument pos:start="299:80" pos:end="299:85"><expr pos:start="299:80" pos:end="299:85"><operator pos:start="299:80" pos:end="299:80">&amp;</operator><name pos:start="299:81" pos:end="299:85"><name pos:start="299:81" pos:end="299:81">s</name><operator pos:start="299:82" pos:end="299:83">-&gt;</operator><name pos:start="299:84" pos:end="299:85">gb</name></name></expr></argument>, <argument pos:start="299:88" pos:end="299:100"><expr pos:start="299:88" pos:end="299:100"><name pos:start="299:88" pos:end="299:100">residual_size</name></expr></argument>)</argument_list></call> <operator pos:start="299:103" pos:end="299:103">+</operator> <literal type="number" pos:start="299:105" pos:end="299:105">3</literal><operator pos:start="299:106" pos:end="299:106">*</operator><name pos:start="299:107" pos:end="299:130"><name pos:start="299:107" pos:end="299:107">s</name><operator pos:start="299:108" pos:end="299:109">-&gt;</operator><name pos:start="299:110" pos:end="299:116">decoded</name><index pos:start="299:117" pos:end="299:125">[<expr pos:start="299:118" pos:end="299:124"><name pos:start="299:118" pos:end="299:124">channel</name></expr>]</index><index pos:start="299:126" pos:end="299:130">[<expr pos:start="299:127" pos:end="299:129"><name pos:start="299:127" pos:end="299:127">i</name><operator pos:start="299:128" pos:end="299:128">-</operator><literal type="number" pos:start="299:129" pos:end="299:129">1</literal></expr>]</index></name>

                                                                                                      <operator pos:start="301:103" pos:end="301:103">-</operator> <literal type="number" pos:start="301:105" pos:end="301:105">3</literal><operator pos:start="301:106" pos:end="301:106">*</operator><name pos:start="301:107" pos:end="301:130"><name pos:start="301:107" pos:end="301:107">s</name><operator pos:start="301:108" pos:end="301:109">-&gt;</operator><name pos:start="301:110" pos:end="301:116">decoded</name><index pos:start="301:117" pos:end="301:125">[<expr pos:start="301:118" pos:end="301:124"><name pos:start="301:118" pos:end="301:124">channel</name></expr>]</index><index pos:start="301:126" pos:end="301:130">[<expr pos:start="301:127" pos:end="301:129"><name pos:start="301:127" pos:end="301:127">i</name><operator pos:start="301:128" pos:end="301:128">-</operator><literal type="number" pos:start="301:129" pos:end="301:129">2</literal></expr>]</index></name>

                                                                                                      <operator pos:start="303:103" pos:end="303:103">+</operator>   <name pos:start="303:107" pos:end="303:130"><name pos:start="303:107" pos:end="303:107">s</name><operator pos:start="303:108" pos:end="303:109">-&gt;</operator><name pos:start="303:110" pos:end="303:116">decoded</name><index pos:start="303:117" pos:end="303:125">[<expr pos:start="303:118" pos:end="303:124"><name pos:start="303:118" pos:end="303:124">channel</name></expr>]</index><index pos:start="303:126" pos:end="303:130">[<expr pos:start="303:127" pos:end="303:129"><name pos:start="303:127" pos:end="303:127">i</name><operator pos:start="303:128" pos:end="303:128">-</operator><literal type="number" pos:start="303:129" pos:end="303:129">3</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                            <break pos:start="305:29" pos:end="305:34">break;</break>

                        <case pos:start="307:25" pos:end="307:37">case <expr pos:start="307:30" pos:end="307:36"><name pos:start="307:30" pos:end="307:36">FN_QLPC</name></expr>:</case>

                            <block pos:start="309:29" pos:end="325:29">{<block_content pos:start="311:33" pos:end="323:74">

                                <decl_stmt pos:start="311:33" pos:end="311:89"><decl pos:start="311:33" pos:end="311:88"><type pos:start="311:33" pos:end="311:35"><name pos:start="311:33" pos:end="311:35">int</name></type> <name pos:start="311:37" pos:end="311:46">pred_order</name> <init pos:start="311:48" pos:end="311:88">= <expr pos:start="311:50" pos:end="311:88"><call pos:start="311:50" pos:end="311:88"><name pos:start="311:50" pos:end="311:70">get_ur_golomb_shorten</name><argument_list pos:start="311:71" pos:end="311:88">(<argument pos:start="311:72" pos:end="311:77"><expr pos:start="311:72" pos:end="311:77"><operator pos:start="311:72" pos:end="311:72">&amp;</operator><name pos:start="311:73" pos:end="311:77"><name pos:start="311:73" pos:end="311:73">s</name><operator pos:start="311:74" pos:end="311:75">-&gt;</operator><name pos:start="311:76" pos:end="311:77">gb</name></name></expr></argument>, <argument pos:start="311:80" pos:end="311:87"><expr pos:start="311:80" pos:end="311:87"><name pos:start="311:80" pos:end="311:87">LPCQSIZE</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                                <for pos:start="313:33" pos:end="315:83">for <control pos:start="313:37" pos:end="313:60">(<init pos:start="313:38" pos:end="313:41"><expr pos:start="313:38" pos:end="313:40"><name pos:start="313:38" pos:end="313:38">i</name><operator pos:start="313:39" pos:end="313:39">=</operator><literal type="number" pos:start="313:40" pos:end="313:40">0</literal></expr>;</init> <condition pos:start="313:43" pos:end="313:55"><expr pos:start="313:43" pos:end="313:54"><name pos:start="313:43" pos:end="313:43">i</name><operator pos:start="313:44" pos:end="313:44">&lt;</operator><name pos:start="313:45" pos:end="313:54">pred_order</name></expr>;</condition> <incr pos:start="313:57" pos:end="313:59"><expr pos:start="313:57" pos:end="313:59"><name pos:start="313:57" pos:end="313:57">i</name><operator pos:start="313:58" pos:end="313:59">++</operator></expr></incr>)</control><block type="pseudo" pos:start="315:37" pos:end="315:83"><block_content pos:start="315:37" pos:end="315:83">

                                    <expr_stmt pos:start="315:37" pos:end="315:83"><expr pos:start="315:37" pos:end="315:82"><name pos:start="315:37" pos:end="315:71"><name pos:start="315:37" pos:end="315:37">s</name><operator pos:start="315:38" pos:end="315:39">-&gt;</operator><name pos:start="315:40" pos:end="315:46">decoded</name><index pos:start="315:47" pos:end="315:55">[<expr pos:start="315:48" pos:end="315:54"><name pos:start="315:48" pos:end="315:54">channel</name></expr>]</index><index pos:start="315:56" pos:end="315:71">[<expr pos:start="315:57" pos:end="315:70"><name pos:start="315:57" pos:end="315:57">i</name> <operator pos:start="315:59" pos:end="315:59">-</operator> <name pos:start="315:61" pos:end="315:70">pred_order</name></expr>]</index></name> <operator pos:start="315:73" pos:end="315:74">-=</operator> <name pos:start="315:76" pos:end="315:82">coffset</name></expr>;</expr_stmt></block_content></block></for>

                                <expr_stmt pos:start="317:33" pos:end="317:91"><expr pos:start="317:33" pos:end="317:90"><call pos:start="317:33" pos:end="317:90"><name pos:start="317:33" pos:end="317:51">decode_subframe_lpc</name><argument_list pos:start="317:52" pos:end="317:90">(<argument pos:start="317:53" pos:end="317:53"><expr pos:start="317:53" pos:end="317:53"><name pos:start="317:53" pos:end="317:53">s</name></expr></argument>, <argument pos:start="317:56" pos:end="317:62"><expr pos:start="317:56" pos:end="317:62"><name pos:start="317:56" pos:end="317:62">channel</name></expr></argument>, <argument pos:start="317:65" pos:end="317:77"><expr pos:start="317:65" pos:end="317:77"><name pos:start="317:65" pos:end="317:77">residual_size</name></expr></argument>, <argument pos:start="317:80" pos:end="317:89"><expr pos:start="317:80" pos:end="317:89"><name pos:start="317:80" pos:end="317:89">pred_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <if_stmt pos:start="319:33" pos:end="323:74"><if pos:start="319:33" pos:end="323:74">if <condition pos:start="319:36" pos:end="319:49">(<expr pos:start="319:37" pos:end="319:48"><name pos:start="319:37" pos:end="319:43">coffset</name> <operator pos:start="319:45" pos:end="319:46">!=</operator> <literal type="number" pos:start="319:48" pos:end="319:48">0</literal></expr>)</condition><block type="pseudo" pos:start="321:37" pos:end="323:74"><block_content pos:start="321:37" pos:end="323:74">

                                    <for pos:start="321:37" pos:end="323:74">for <control pos:start="321:41" pos:end="321:68">(<init pos:start="321:42" pos:end="321:45"><expr pos:start="321:42" pos:end="321:44"><name pos:start="321:42" pos:end="321:42">i</name><operator pos:start="321:43" pos:end="321:43">=</operator><literal type="number" pos:start="321:44" pos:end="321:44">0</literal></expr>;</init> <condition pos:start="321:47" pos:end="321:63"><expr pos:start="321:47" pos:end="321:62"><name pos:start="321:47" pos:end="321:47">i</name> <operator pos:start="321:49" pos:end="321:49">&lt;</operator> <name pos:start="321:51" pos:end="321:62"><name pos:start="321:51" pos:end="321:51">s</name><operator pos:start="321:52" pos:end="321:53">-&gt;</operator><name pos:start="321:54" pos:end="321:62">blocksize</name></name></expr>;</condition> <incr pos:start="321:65" pos:end="321:67"><expr pos:start="321:65" pos:end="321:67"><name pos:start="321:65" pos:end="321:65">i</name><operator pos:start="321:66" pos:end="321:67">++</operator></expr></incr>)</control><block type="pseudo" pos:start="323:41" pos:end="323:74"><block_content pos:start="323:41" pos:end="323:74">

                                        <expr_stmt pos:start="323:41" pos:end="323:74"><expr pos:start="323:41" pos:end="323:73"><name pos:start="323:41" pos:end="323:62"><name pos:start="323:41" pos:end="323:41">s</name><operator pos:start="323:42" pos:end="323:43">-&gt;</operator><name pos:start="323:44" pos:end="323:50">decoded</name><index pos:start="323:51" pos:end="323:59">[<expr pos:start="323:52" pos:end="323:58"><name pos:start="323:52" pos:end="323:58">channel</name></expr>]</index><index pos:start="323:60" pos:end="323:62">[<expr pos:start="323:61" pos:end="323:61"><name pos:start="323:61" pos:end="323:61">i</name></expr>]</index></name> <operator pos:start="323:64" pos:end="323:65">+=</operator> <name pos:start="323:67" pos:end="323:73">coffset</name></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

                            </block_content>}</block>

                    </block_content>}</block></switch>

                    <if_stmt pos:start="329:21" pos:end="353:21"><if pos:start="329:21" pos:end="353:21">if <condition pos:start="329:24" pos:end="329:37">(<expr pos:start="329:25" pos:end="329:36"><name pos:start="329:25" pos:end="329:32"><name pos:start="329:25" pos:end="329:25">s</name><operator pos:start="329:26" pos:end="329:27">-&gt;</operator><name pos:start="329:28" pos:end="329:32">nmean</name></name> <operator pos:start="329:34" pos:end="329:34">&gt;</operator> <literal type="number" pos:start="329:36" pos:end="329:36">0</literal></expr>)</condition> <block pos:start="329:39" pos:end="353:21">{<block_content pos:start="331:25" pos:end="351:99">

                        <decl_stmt pos:start="331:25" pos:end="331:78"><decl pos:start="331:25" pos:end="331:77"><type pos:start="331:25" pos:end="331:31"><name pos:start="331:25" pos:end="331:31">int32_t</name></type> <name pos:start="331:33" pos:end="331:35">sum</name> <init pos:start="331:37" pos:end="331:77">= <expr pos:start="331:39" pos:end="331:77"><ternary pos:start="331:39" pos:end="331:77"><condition pos:start="331:39" pos:end="331:56"><expr pos:start="331:39" pos:end="331:54"><operator pos:start="331:39" pos:end="331:39">(</operator><name pos:start="331:40" pos:end="331:49"><name pos:start="331:40" pos:end="331:40">s</name><operator pos:start="331:41" pos:end="331:42">-&gt;</operator><name pos:start="331:43" pos:end="331:49">version</name></name> <operator pos:start="331:51" pos:end="331:51">&lt;</operator> <literal type="number" pos:start="331:53" pos:end="331:53">2</literal><operator pos:start="331:54" pos:end="331:54">)</operator></expr> ?</condition><then pos:start="331:58" pos:end="331:58"> <expr pos:start="331:58" pos:end="331:58"><literal type="number" pos:start="331:58" pos:end="331:58">0</literal></expr> </then><else pos:start="331:60" pos:end="331:77">: <expr pos:start="331:62" pos:end="331:77"><name pos:start="331:62" pos:end="331:73"><name pos:start="331:62" pos:end="331:62">s</name><operator pos:start="331:63" pos:end="331:64">-&gt;</operator><name pos:start="331:65" pos:end="331:73">blocksize</name></name> <operator pos:start="331:75" pos:end="331:75">/</operator> <literal type="number" pos:start="331:77" pos:end="331:77">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

                        <for pos:start="333:25" pos:end="335:58">for <control pos:start="333:29" pos:end="333:54">(<init pos:start="333:30" pos:end="333:33"><expr pos:start="333:30" pos:end="333:32"><name pos:start="333:30" pos:end="333:30">i</name><operator pos:start="333:31" pos:end="333:31">=</operator><literal type="number" pos:start="333:32" pos:end="333:32">0</literal></expr>;</init> <condition pos:start="333:35" pos:end="333:49"><expr pos:start="333:35" pos:end="333:48"><name pos:start="333:35" pos:end="333:35">i</name><operator pos:start="333:36" pos:end="333:36">&lt;</operator><name pos:start="333:37" pos:end="333:48"><name pos:start="333:37" pos:end="333:37">s</name><operator pos:start="333:38" pos:end="333:39">-&gt;</operator><name pos:start="333:40" pos:end="333:48">blocksize</name></name></expr>;</condition> <incr pos:start="333:51" pos:end="333:53"><expr pos:start="333:51" pos:end="333:53"><name pos:start="333:51" pos:end="333:51">i</name><operator pos:start="333:52" pos:end="333:53">++</operator></expr></incr>)</control><block type="pseudo" pos:start="335:29" pos:end="335:58"><block_content pos:start="335:29" pos:end="335:58">

                            <expr_stmt pos:start="335:29" pos:end="335:58"><expr pos:start="335:29" pos:end="335:57"><name pos:start="335:29" pos:end="335:31">sum</name> <operator pos:start="335:33" pos:end="335:34">+=</operator> <name pos:start="335:36" pos:end="335:57"><name pos:start="335:36" pos:end="335:36">s</name><operator pos:start="335:37" pos:end="335:38">-&gt;</operator><name pos:start="335:39" pos:end="335:45">decoded</name><index pos:start="335:46" pos:end="335:54">[<expr pos:start="335:47" pos:end="335:53"><name pos:start="335:47" pos:end="335:53">channel</name></expr>]</index><index pos:start="335:55" pos:end="335:57">[<expr pos:start="335:56" pos:end="335:56"><name pos:start="335:56" pos:end="335:56">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                        <for pos:start="339:25" pos:end="341:76">for <control pos:start="339:29" pos:end="339:50">(<init pos:start="339:30" pos:end="339:33"><expr pos:start="339:30" pos:end="339:32"><name pos:start="339:30" pos:end="339:30">i</name><operator pos:start="339:31" pos:end="339:31">=</operator><literal type="number" pos:start="339:32" pos:end="339:32">1</literal></expr>;</init> <condition pos:start="339:35" pos:end="339:45"><expr pos:start="339:35" pos:end="339:44"><name pos:start="339:35" pos:end="339:35">i</name><operator pos:start="339:36" pos:end="339:36">&lt;</operator><name pos:start="339:37" pos:end="339:44"><name pos:start="339:37" pos:end="339:37">s</name><operator pos:start="339:38" pos:end="339:39">-&gt;</operator><name pos:start="339:40" pos:end="339:44">nmean</name></name></expr>;</condition> <incr pos:start="339:47" pos:end="339:49"><expr pos:start="339:47" pos:end="339:49"><name pos:start="339:47" pos:end="339:47">i</name><operator pos:start="339:48" pos:end="339:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="341:29" pos:end="341:76"><block_content pos:start="341:29" pos:end="341:76">

                            <expr_stmt pos:start="341:29" pos:end="341:76"><expr pos:start="341:29" pos:end="341:75"><name pos:start="341:29" pos:end="341:51"><name pos:start="341:29" pos:end="341:29">s</name><operator pos:start="341:30" pos:end="341:31">-&gt;</operator><name pos:start="341:32" pos:end="341:37">offset</name><index pos:start="341:38" pos:end="341:46">[<expr pos:start="341:39" pos:end="341:45"><name pos:start="341:39" pos:end="341:45">channel</name></expr>]</index><index pos:start="341:47" pos:end="341:51">[<expr pos:start="341:48" pos:end="341:50"><name pos:start="341:48" pos:end="341:48">i</name><operator pos:start="341:49" pos:end="341:49">-</operator><literal type="number" pos:start="341:50" pos:end="341:50">1</literal></expr>]</index></name> <operator pos:start="341:53" pos:end="341:53">=</operator> <name pos:start="341:55" pos:end="341:75"><name pos:start="341:55" pos:end="341:55">s</name><operator pos:start="341:56" pos:end="341:57">-&gt;</operator><name pos:start="341:58" pos:end="341:63">offset</name><index pos:start="341:64" pos:end="341:72">[<expr pos:start="341:65" pos:end="341:71"><name pos:start="341:65" pos:end="341:71">channel</name></expr>]</index><index pos:start="341:73" pos:end="341:75">[<expr pos:start="341:74" pos:end="341:74"><name pos:start="341:74" pos:end="341:74">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                        <if_stmt pos:start="345:25" pos:end="351:99"><if pos:start="345:25" pos:end="347:82">if <condition pos:start="345:28" pos:end="345:43">(<expr pos:start="345:29" pos:end="345:42"><name pos:start="345:29" pos:end="345:38"><name pos:start="345:29" pos:end="345:29">s</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:38">version</name></name> <operator pos:start="345:40" pos:end="345:40">&lt;</operator> <literal type="number" pos:start="345:42" pos:end="345:42">2</literal></expr>)</condition><block type="pseudo" pos:start="347:29" pos:end="347:82"><block_content pos:start="347:29" pos:end="347:82">

                            <expr_stmt pos:start="347:29" pos:end="347:82"><expr pos:start="347:29" pos:end="347:81"><name pos:start="347:29" pos:end="347:60"><name pos:start="347:29" pos:end="347:29">s</name><operator pos:start="347:30" pos:end="347:31">-&gt;</operator><name pos:start="347:32" pos:end="347:37">offset</name><index pos:start="347:38" pos:end="347:46">[<expr pos:start="347:39" pos:end="347:45"><name pos:start="347:39" pos:end="347:45">channel</name></expr>]</index><index pos:start="347:47" pos:end="347:60">[<expr pos:start="347:48" pos:end="347:59"><name pos:start="347:48" pos:end="347:55"><name pos:start="347:48" pos:end="347:48">s</name><operator pos:start="347:49" pos:end="347:50">-&gt;</operator><name pos:start="347:51" pos:end="347:55">nmean</name></name> <operator pos:start="347:57" pos:end="347:57">-</operator> <literal type="number" pos:start="347:59" pos:end="347:59">1</literal></expr>]</index></name> <operator pos:start="347:62" pos:end="347:62">=</operator> <name pos:start="347:64" pos:end="347:66">sum</name> <operator pos:start="347:68" pos:end="347:68">/</operator> <name pos:start="347:70" pos:end="347:81"><name pos:start="347:70" pos:end="347:70">s</name><operator pos:start="347:71" pos:end="347:72">-&gt;</operator><name pos:start="347:73" pos:end="347:81">blocksize</name></name></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="349:25" pos:end="351:99">else<block type="pseudo" pos:start="351:29" pos:end="351:99"><block_content pos:start="351:29" pos:end="351:99">

                            <expr_stmt pos:start="351:29" pos:end="351:99"><expr pos:start="351:29" pos:end="351:98"><name pos:start="351:29" pos:end="351:60"><name pos:start="351:29" pos:end="351:29">s</name><operator pos:start="351:30" pos:end="351:31">-&gt;</operator><name pos:start="351:32" pos:end="351:37">offset</name><index pos:start="351:38" pos:end="351:46">[<expr pos:start="351:39" pos:end="351:45"><name pos:start="351:39" pos:end="351:45">channel</name></expr>]</index><index pos:start="351:47" pos:end="351:60">[<expr pos:start="351:48" pos:end="351:59"><name pos:start="351:48" pos:end="351:55"><name pos:start="351:48" pos:end="351:48">s</name><operator pos:start="351:49" pos:end="351:50">-&gt;</operator><name pos:start="351:51" pos:end="351:55">nmean</name></name> <operator pos:start="351:57" pos:end="351:57">-</operator> <literal type="number" pos:start="351:59" pos:end="351:59">1</literal></expr>]</index></name> <operator pos:start="351:62" pos:end="351:62">=</operator> <operator pos:start="351:64" pos:end="351:64">(</operator><name pos:start="351:65" pos:end="351:67">sum</name> <operator pos:start="351:69" pos:end="351:69">/</operator> <name pos:start="351:71" pos:end="351:82"><name pos:start="351:71" pos:end="351:71">s</name><operator pos:start="351:72" pos:end="351:73">-&gt;</operator><name pos:start="351:74" pos:end="351:82">blocksize</name></name><operator pos:start="351:83" pos:end="351:83">)</operator> <operator pos:start="351:85" pos:end="351:86">&lt;&lt;</operator> <name pos:start="351:88" pos:end="351:98"><name pos:start="351:88" pos:end="351:88">s</name><operator pos:start="351:89" pos:end="351:90">-&gt;</operator><name pos:start="351:91" pos:end="351:98">bitshift</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <for pos:start="355:21" pos:end="357:87">for <control pos:start="355:25" pos:end="355:47">(<init pos:start="355:26" pos:end="355:37"><expr pos:start="355:26" pos:end="355:36"><name pos:start="355:26" pos:end="355:26">i</name><operator pos:start="355:27" pos:end="355:27">=</operator><operator pos:start="355:28" pos:end="355:28">-</operator><name pos:start="355:29" pos:end="355:36"><name pos:start="355:29" pos:end="355:29">s</name><operator pos:start="355:30" pos:end="355:31">-&gt;</operator><name pos:start="355:32" pos:end="355:36">nwrap</name></name></expr>;</init> <condition pos:start="355:39" pos:end="355:42"><expr pos:start="355:39" pos:end="355:41"><name pos:start="355:39" pos:end="355:39">i</name><operator pos:start="355:40" pos:end="355:40">&lt;</operator><literal type="number" pos:start="355:41" pos:end="355:41">0</literal></expr>;</condition> <incr pos:start="355:44" pos:end="355:46"><expr pos:start="355:44" pos:end="355:46"><name pos:start="355:44" pos:end="355:44">i</name><operator pos:start="355:45" pos:end="355:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="357:25" pos:end="357:87"><block_content pos:start="357:25" pos:end="357:87">

                        <expr_stmt pos:start="357:25" pos:end="357:87"><expr pos:start="357:25" pos:end="357:86"><name pos:start="357:25" pos:end="357:46"><name pos:start="357:25" pos:end="357:25">s</name><operator pos:start="357:26" pos:end="357:27">-&gt;</operator><name pos:start="357:28" pos:end="357:34">decoded</name><index pos:start="357:35" pos:end="357:43">[<expr pos:start="357:36" pos:end="357:42"><name pos:start="357:36" pos:end="357:42">channel</name></expr>]</index><index pos:start="357:44" pos:end="357:46">[<expr pos:start="357:45" pos:end="357:45"><name pos:start="357:45" pos:end="357:45">i</name></expr>]</index></name> <operator pos:start="357:48" pos:end="357:48">=</operator> <name pos:start="357:50" pos:end="357:86"><name pos:start="357:50" pos:end="357:50">s</name><operator pos:start="357:51" pos:end="357:52">-&gt;</operator><name pos:start="357:53" pos:end="357:59">decoded</name><index pos:start="357:60" pos:end="357:68">[<expr pos:start="357:61" pos:end="357:67"><name pos:start="357:61" pos:end="357:67">channel</name></expr>]</index><index pos:start="357:69" pos:end="357:86">[<expr pos:start="357:70" pos:end="357:85"><name pos:start="357:70" pos:end="357:70">i</name> <operator pos:start="357:72" pos:end="357:72">+</operator> <name pos:start="357:74" pos:end="357:85"><name pos:start="357:74" pos:end="357:74">s</name><operator pos:start="357:75" pos:end="357:76">-&gt;</operator><name pos:start="357:77" pos:end="357:85">blocksize</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



                    <expr_stmt pos:start="361:21" pos:end="361:57"><expr pos:start="361:21" pos:end="361:56"><call pos:start="361:21" pos:end="361:56"><name pos:start="361:21" pos:end="361:32">fix_bitshift</name><argument_list pos:start="361:33" pos:end="361:56">(<argument pos:start="361:34" pos:end="361:34"><expr pos:start="361:34" pos:end="361:34"><name pos:start="361:34" pos:end="361:34">s</name></expr></argument>, <argument pos:start="361:37" pos:end="361:55"><expr pos:start="361:37" pos:end="361:55"><name pos:start="361:37" pos:end="361:55"><name pos:start="361:37" pos:end="361:37">s</name><operator pos:start="361:38" pos:end="361:39">-&gt;</operator><name pos:start="361:40" pos:end="361:46">decoded</name><index pos:start="361:47" pos:end="361:55">[<expr pos:start="361:48" pos:end="361:54"><name pos:start="361:48" pos:end="361:54">channel</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="365:21" pos:end="365:34"><expr pos:start="365:21" pos:end="365:33"><name pos:start="365:21" pos:end="365:31"><name pos:start="365:21" pos:end="365:21">s</name><operator pos:start="365:22" pos:end="365:23">-&gt;</operator><name pos:start="365:24" pos:end="365:31">cur_chan</name></name><operator pos:start="365:32" pos:end="365:33">++</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="367:21" pos:end="375:21"><if pos:start="367:21" pos:end="375:21">if <condition pos:start="367:24" pos:end="367:51">(<expr pos:start="367:25" pos:end="367:50"><name pos:start="367:25" pos:end="367:35"><name pos:start="367:25" pos:end="367:25">s</name><operator pos:start="367:26" pos:end="367:27">-&gt;</operator><name pos:start="367:28" pos:end="367:35">cur_chan</name></name> <operator pos:start="367:37" pos:end="367:38">==</operator> <name pos:start="367:40" pos:end="367:50"><name pos:start="367:40" pos:end="367:40">s</name><operator pos:start="367:41" pos:end="367:42">-&gt;</operator><name pos:start="367:43" pos:end="367:50">channels</name></name></expr>)</condition> <block pos:start="367:53" pos:end="375:21">{<block_content pos:start="369:25" pos:end="373:40">

                        <expr_stmt pos:start="369:25" pos:end="369:100"><expr pos:start="369:25" pos:end="369:99"><name pos:start="369:25" pos:end="369:31">samples</name> <operator pos:start="369:33" pos:end="369:33">=</operator> <call pos:start="369:35" pos:end="369:99"><name pos:start="369:35" pos:end="369:51">interleave_buffer</name><argument_list pos:start="369:52" pos:end="369:99">(<argument pos:start="369:53" pos:end="369:59"><expr pos:start="369:53" pos:end="369:59"><name pos:start="369:53" pos:end="369:59">samples</name></expr></argument>, <argument pos:start="369:62" pos:end="369:72"><expr pos:start="369:62" pos:end="369:72"><name pos:start="369:62" pos:end="369:72"><name pos:start="369:62" pos:end="369:62">s</name><operator pos:start="369:63" pos:end="369:64">-&gt;</operator><name pos:start="369:65" pos:end="369:72">channels</name></name></expr></argument>, <argument pos:start="369:75" pos:end="369:86"><expr pos:start="369:75" pos:end="369:86"><name pos:start="369:75" pos:end="369:86"><name pos:start="369:75" pos:end="369:75">s</name><operator pos:start="369:76" pos:end="369:77">-&gt;</operator><name pos:start="369:78" pos:end="369:86">blocksize</name></name></expr></argument>, <argument pos:start="369:89" pos:end="369:98"><expr pos:start="369:89" pos:end="369:98"><name pos:start="369:89" pos:end="369:98"><name pos:start="369:89" pos:end="369:89">s</name><operator pos:start="369:90" pos:end="369:91">-&gt;</operator><name pos:start="369:92" pos:end="369:98">decoded</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="371:25" pos:end="371:40"><expr pos:start="371:25" pos:end="371:39"><name pos:start="371:25" pos:end="371:35"><name pos:start="371:25" pos:end="371:25">s</name><operator pos:start="371:26" pos:end="371:27">-&gt;</operator><name pos:start="371:28" pos:end="371:35">cur_chan</name></name> <operator pos:start="371:37" pos:end="371:37">=</operator> <literal type="number" pos:start="371:39" pos:end="371:39">0</literal></expr>;</expr_stmt>

                        <goto pos:start="373:25" pos:end="373:40">goto <name pos:start="373:30" pos:end="373:39">frame_done</name>;</goto>

                    </block_content>}</block></if></if_stmt>

                    <break pos:start="377:21" pos:end="377:26">break;</break>

                </block_content>}</block>

                <break pos:start="381:17" pos:end="381:22">break;</break>

            <case pos:start="383:13" pos:end="383:29">case <expr pos:start="383:18" pos:end="383:28"><name pos:start="383:18" pos:end="383:28">FN_VERBATIM</name></expr>:</case>

                <expr_stmt pos:start="385:17" pos:end="385:74"><expr pos:start="385:17" pos:end="385:73"><name pos:start="385:17" pos:end="385:19">len</name> <operator pos:start="385:21" pos:end="385:21">=</operator> <call pos:start="385:23" pos:end="385:73"><name pos:start="385:23" pos:end="385:43">get_ur_golomb_shorten</name><argument_list pos:start="385:44" pos:end="385:73">(<argument pos:start="385:45" pos:end="385:50"><expr pos:start="385:45" pos:end="385:50"><operator pos:start="385:45" pos:end="385:45">&amp;</operator><name pos:start="385:46" pos:end="385:50"><name pos:start="385:46" pos:end="385:46">s</name><operator pos:start="385:47" pos:end="385:48">-&gt;</operator><name pos:start="385:49" pos:end="385:50">gb</name></name></expr></argument>, <argument pos:start="385:53" pos:end="385:72"><expr pos:start="385:53" pos:end="385:72"><name pos:start="385:53" pos:end="385:72">VERBATIM_CKSIZE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <while pos:start="387:17" pos:end="391:17">while <condition pos:start="387:23" pos:end="387:29">(<expr pos:start="387:24" pos:end="387:28"><name pos:start="387:24" pos:end="387:26">len</name><operator pos:start="387:27" pos:end="387:28">--</operator></expr>)</condition> <block pos:start="387:31" pos:end="391:17">{<block_content pos:start="389:21" pos:end="389:70">

                    <expr_stmt pos:start="389:21" pos:end="389:70"><expr pos:start="389:21" pos:end="389:69"><call pos:start="389:21" pos:end="389:69"><name pos:start="389:21" pos:end="389:41">get_ur_golomb_shorten</name><argument_list pos:start="389:42" pos:end="389:69">(<argument pos:start="389:43" pos:end="389:48"><expr pos:start="389:43" pos:end="389:48"><operator pos:start="389:43" pos:end="389:43">&amp;</operator><name pos:start="389:44" pos:end="389:48"><name pos:start="389:44" pos:end="389:44">s</name><operator pos:start="389:45" pos:end="389:46">-&gt;</operator><name pos:start="389:47" pos:end="389:48">gb</name></name></expr></argument>, <argument pos:start="389:51" pos:end="389:68"><expr pos:start="389:51" pos:end="389:68"><name pos:start="389:51" pos:end="389:68">VERBATIM_BYTE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></while>

                <break pos:start="393:17" pos:end="393:22">break;</break>

            <case pos:start="395:13" pos:end="395:29">case <expr pos:start="395:18" pos:end="395:28"><name pos:start="395:18" pos:end="395:28">FN_BITSHIFT</name></expr>:</case>

                <expr_stmt pos:start="397:17" pos:end="397:74"><expr pos:start="397:17" pos:end="397:73"><name pos:start="397:17" pos:end="397:27"><name pos:start="397:17" pos:end="397:17">s</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:27">bitshift</name></name> <operator pos:start="397:29" pos:end="397:29">=</operator> <call pos:start="397:31" pos:end="397:73"><name pos:start="397:31" pos:end="397:51">get_ur_golomb_shorten</name><argument_list pos:start="397:52" pos:end="397:73">(<argument pos:start="397:53" pos:end="397:58"><expr pos:start="397:53" pos:end="397:58"><operator pos:start="397:53" pos:end="397:53">&amp;</operator><name pos:start="397:54" pos:end="397:58"><name pos:start="397:54" pos:end="397:54">s</name><operator pos:start="397:55" pos:end="397:56">-&gt;</operator><name pos:start="397:57" pos:end="397:58">gb</name></name></expr></argument>, <argument pos:start="397:61" pos:end="397:72"><expr pos:start="397:61" pos:end="397:72"><name pos:start="397:61" pos:end="397:72">BITSHIFTSIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="399:17" pos:end="399:22">break;</break>

            <case pos:start="401:13" pos:end="401:30">case <expr pos:start="401:18" pos:end="401:29"><name pos:start="401:18" pos:end="401:29">FN_BLOCKSIZE</name></expr>:</case>

                <expr_stmt pos:start="403:17" pos:end="403:66"><expr pos:start="403:17" pos:end="403:65"><name pos:start="403:17" pos:end="403:28"><name pos:start="403:17" pos:end="403:17">s</name><operator pos:start="403:18" pos:end="403:19">-&gt;</operator><name pos:start="403:20" pos:end="403:28">blocksize</name></name> <operator pos:start="403:30" pos:end="403:30">=</operator> <call pos:start="403:32" pos:end="403:65"><name pos:start="403:32" pos:end="403:39">get_uint</name><argument_list pos:start="403:40" pos:end="403:65">(<argument pos:start="403:41" pos:end="403:41"><expr pos:start="403:41" pos:end="403:41"><name pos:start="403:41" pos:end="403:41">s</name></expr></argument>, <argument pos:start="403:44" pos:end="403:64"><expr pos:start="403:44" pos:end="403:64"><call pos:start="403:44" pos:end="403:64"><name pos:start="403:44" pos:end="403:50">av_log2</name><argument_list pos:start="403:51" pos:end="403:64">(<argument pos:start="403:52" pos:end="403:63"><expr pos:start="403:52" pos:end="403:63"><name pos:start="403:52" pos:end="403:63"><name pos:start="403:52" pos:end="403:52">s</name><operator pos:start="403:53" pos:end="403:54">-&gt;</operator><name pos:start="403:55" pos:end="403:63">blocksize</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="405:17" pos:end="405:22">break;</break>

            <case pos:start="407:13" pos:end="407:25">case <expr pos:start="407:18" pos:end="407:24"><name pos:start="407:18" pos:end="407:24">FN_QUIT</name></expr>:</case>

                <return pos:start="409:17" pos:end="409:32">return <expr pos:start="409:24" pos:end="409:31"><name pos:start="409:24" pos:end="409:31">buf_size</name></expr>;</return>

                <break pos:start="411:17" pos:end="411:22">break;</break>

            <default pos:start="413:13" pos:end="413:20">default:</default>

                <expr_stmt pos:start="415:17" pos:end="415:82"><expr pos:start="415:17" pos:end="415:81"><call pos:start="415:17" pos:end="415:81"><name pos:start="415:17" pos:end="415:22">av_log</name><argument_list pos:start="415:23" pos:end="415:81">(<argument pos:start="415:24" pos:end="415:28"><expr pos:start="415:24" pos:end="415:28"><name pos:start="415:24" pos:end="415:28">avctx</name></expr></argument>, <argument pos:start="415:31" pos:end="415:42"><expr pos:start="415:31" pos:end="415:42"><name pos:start="415:31" pos:end="415:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="415:45" pos:end="415:75"><expr pos:start="415:45" pos:end="415:75"><literal type="string" pos:start="415:45" pos:end="415:75">"unknown shorten function %d\n"</literal></expr></argument>, <argument pos:start="415:78" pos:end="415:80"><expr pos:start="415:78" pos:end="415:80"><name pos:start="415:78" pos:end="415:80">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="417:17" pos:end="417:26">return <expr pos:start="417:24" pos:end="417:25"><operator pos:start="417:24" pos:end="417:24">-</operator><literal type="number" pos:start="417:25" pos:end="417:25">1</literal></expr>;</return>

                <break pos:start="419:17" pos:end="419:22">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

<label pos:start="425:1" pos:end="425:11"><name pos:start="425:1" pos:end="425:10">frame_done</name>:</label>

    <expr_stmt pos:start="427:5" pos:end="427:52"><expr pos:start="427:5" pos:end="427:51"><operator pos:start="427:5" pos:end="427:5">*</operator><name pos:start="427:6" pos:end="427:14">data_size</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <operator pos:start="427:18" pos:end="427:18">(</operator><name pos:start="427:19" pos:end="427:24">int8_t</name> <operator pos:start="427:26" pos:end="427:26">*</operator><operator pos:start="427:27" pos:end="427:27">)</operator><name pos:start="427:28" pos:end="427:34">samples</name> <operator pos:start="427:36" pos:end="427:36">-</operator> <operator pos:start="427:38" pos:end="427:38">(</operator><name pos:start="427:39" pos:end="427:44">int8_t</name> <operator pos:start="427:46" pos:end="427:46">*</operator><operator pos:start="427:47" pos:end="427:47">)</operator><name pos:start="427:48" pos:end="427:51">data</name></expr>;</expr_stmt>



    <comment type="line" pos:start="431:5" pos:end="431:43">//    s-&gt;last_blocksize = s-&gt;blocksize;</comment>

    <expr_stmt pos:start="433:5" pos:end="433:74"><expr pos:start="433:5" pos:end="433:73"><name pos:start="433:5" pos:end="433:15"><name pos:start="433:5" pos:end="433:5">s</name><operator pos:start="433:6" pos:end="433:7">-&gt;</operator><name pos:start="433:8" pos:end="433:15">bitindex</name></name> <operator pos:start="433:17" pos:end="433:17">=</operator> <call pos:start="433:19" pos:end="433:40"><name pos:start="433:19" pos:end="433:32">get_bits_count</name><argument_list pos:start="433:33" pos:end="433:40">(<argument pos:start="433:34" pos:end="433:39"><expr pos:start="433:34" pos:end="433:39"><operator pos:start="433:34" pos:end="433:34">&amp;</operator><name pos:start="433:35" pos:end="433:39"><name pos:start="433:35" pos:end="433:35">s</name><operator pos:start="433:36" pos:end="433:37">-&gt;</operator><name pos:start="433:38" pos:end="433:39">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="433:42" pos:end="433:42">-</operator> <literal type="number" pos:start="433:44" pos:end="433:44">8</literal><operator pos:start="433:45" pos:end="433:45">*</operator><operator pos:start="433:46" pos:end="433:46">(</operator><operator pos:start="433:47" pos:end="433:47">(</operator><call pos:start="433:48" pos:end="433:69"><name pos:start="433:48" pos:end="433:61">get_bits_count</name><argument_list pos:start="433:62" pos:end="433:69">(<argument pos:start="433:63" pos:end="433:68"><expr pos:start="433:63" pos:end="433:68"><operator pos:start="433:63" pos:end="433:63">&amp;</operator><name pos:start="433:64" pos:end="433:68"><name pos:start="433:64" pos:end="433:64">s</name><operator pos:start="433:65" pos:end="433:66">-&gt;</operator><name pos:start="433:67" pos:end="433:68">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="433:70" pos:end="433:70">)</operator><operator pos:start="433:71" pos:end="433:71">/</operator><literal type="number" pos:start="433:72" pos:end="433:72">8</literal><operator pos:start="433:73" pos:end="433:73">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="435:5" pos:end="435:34"><expr pos:start="435:5" pos:end="435:33"><name pos:start="435:5" pos:end="435:5">i</name><operator pos:start="435:6" pos:end="435:6">=</operator> <operator pos:start="435:8" pos:end="435:8">(</operator><call pos:start="435:9" pos:end="435:30"><name pos:start="435:9" pos:end="435:22">get_bits_count</name><argument_list pos:start="435:23" pos:end="435:30">(<argument pos:start="435:24" pos:end="435:29"><expr pos:start="435:24" pos:end="435:29"><operator pos:start="435:24" pos:end="435:24">&amp;</operator><name pos:start="435:25" pos:end="435:29"><name pos:start="435:25" pos:end="435:25">s</name><operator pos:start="435:26" pos:end="435:27">-&gt;</operator><name pos:start="435:28" pos:end="435:29">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="435:31" pos:end="435:31">)</operator><operator pos:start="435:32" pos:end="435:32">/</operator><literal type="number" pos:start="435:33" pos:end="435:33">8</literal></expr>;</expr_stmt>

    <if_stmt pos:start="437:5" pos:end="447:5"><if pos:start="437:5" pos:end="447:5">if <condition pos:start="437:8" pos:end="437:21">(<expr pos:start="437:9" pos:end="437:20"><name pos:start="437:9" pos:end="437:9">i</name> <operator pos:start="437:11" pos:end="437:11">&gt;</operator> <name pos:start="437:13" pos:end="437:20">buf_size</name></expr>)</condition> <block pos:start="437:23" pos:end="447:5">{<block_content pos:start="439:9" pos:end="445:18">

        <expr_stmt pos:start="439:9" pos:end="439:71"><expr pos:start="439:9" pos:end="439:70"><call pos:start="439:9" pos:end="439:70"><name pos:start="439:9" pos:end="439:14">av_log</name><argument_list pos:start="439:15" pos:end="439:70">(<argument pos:start="439:16" pos:end="439:23"><expr pos:start="439:16" pos:end="439:23"><name pos:start="439:16" pos:end="439:23"><name pos:start="439:16" pos:end="439:16">s</name><operator pos:start="439:17" pos:end="439:18">-&gt;</operator><name pos:start="439:19" pos:end="439:23">avctx</name></name></expr></argument>, <argument pos:start="439:26" pos:end="439:37"><expr pos:start="439:26" pos:end="439:37"><name pos:start="439:26" pos:end="439:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="439:40" pos:end="439:55"><expr pos:start="439:40" pos:end="439:55"><literal type="string" pos:start="439:40" pos:end="439:55">"overread: %d\n"</literal></expr></argument>, <argument pos:start="439:58" pos:end="439:69"><expr pos:start="439:58" pos:end="439:69"><name pos:start="439:58" pos:end="439:58">i</name> <operator pos:start="439:60" pos:end="439:60">-</operator> <name pos:start="439:62" pos:end="439:69">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="441:9" pos:end="441:28"><expr pos:start="441:9" pos:end="441:27"><name pos:start="441:9" pos:end="441:25"><name pos:start="441:9" pos:end="441:9">s</name><operator pos:start="441:10" pos:end="441:11">-&gt;</operator><name pos:start="441:12" pos:end="441:25">bitstream_size</name></name><operator pos:start="441:26" pos:end="441:26">=</operator><literal type="number" pos:start="441:27" pos:end="441:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="443:9" pos:end="443:29"><expr pos:start="443:9" pos:end="443:28"><name pos:start="443:9" pos:end="443:26"><name pos:start="443:9" pos:end="443:9">s</name><operator pos:start="443:10" pos:end="443:11">-&gt;</operator><name pos:start="443:12" pos:end="443:26">bitstream_index</name></name><operator pos:start="443:27" pos:end="443:27">=</operator><literal type="number" pos:start="443:28" pos:end="443:28">0</literal></expr>;</expr_stmt>

        <return pos:start="445:9" pos:end="445:18">return <expr pos:start="445:16" pos:end="445:17"><operator pos:start="445:16" pos:end="445:16">-</operator><literal type="number" pos:start="445:17" pos:end="445:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="449:5" pos:end="459:17"><if pos:start="449:5" pos:end="457:5">if <condition pos:start="449:8" pos:end="449:26">(<expr pos:start="449:9" pos:end="449:25"><name pos:start="449:9" pos:end="449:25"><name pos:start="449:9" pos:end="449:9">s</name><operator pos:start="449:10" pos:end="449:11">-&gt;</operator><name pos:start="449:12" pos:end="449:25">bitstream_size</name></name></expr>)</condition> <block pos:start="449:28" pos:end="457:5">{<block_content pos:start="451:9" pos:end="455:30">

        <expr_stmt pos:start="451:9" pos:end="451:32"><expr pos:start="451:9" pos:end="451:31"><name pos:start="451:9" pos:end="451:26"><name pos:start="451:9" pos:end="451:9">s</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:26">bitstream_index</name></name> <operator pos:start="451:28" pos:end="451:29">+=</operator> <name pos:start="451:31" pos:end="451:31">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:32"><expr pos:start="453:9" pos:end="453:31"><name pos:start="453:9" pos:end="453:25"><name pos:start="453:9" pos:end="453:9">s</name><operator pos:start="453:10" pos:end="453:11">-&gt;</operator><name pos:start="453:12" pos:end="453:25">bitstream_size</name></name>  <operator pos:start="453:28" pos:end="453:29">-=</operator> <name pos:start="453:31" pos:end="453:31">i</name></expr>;</expr_stmt>

        <return pos:start="455:9" pos:end="455:30">return <expr pos:start="455:16" pos:end="455:29"><name pos:start="455:16" pos:end="455:29">input_buf_size</name></expr>;</return>

    </block_content>}</block></if> <else pos:start="457:7" pos:end="459:17">else<block type="pseudo" pos:start="459:9" pos:end="459:17"><block_content pos:start="459:9" pos:end="459:17">

        <return pos:start="459:9" pos:end="459:17">return <expr pos:start="459:16" pos:end="459:16"><name pos:start="459:16" pos:end="459:16">i</name></expr>;</return></block_content></block></else></if_stmt>

</block_content>}</block></function>
</unit>
