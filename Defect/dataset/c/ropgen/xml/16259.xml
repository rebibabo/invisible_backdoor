<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16259.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">ac3_decode_frame</name><parameter_list pos:start="1:28" pos:end="1:108">(<parameter pos:start="1:29" pos:end="1:50"><decl pos:start="1:29" pos:end="1:50"><type pos:start="1:29" pos:end="1:50"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:62"><decl pos:start="1:53" pos:end="1:62"><type pos:start="1:53" pos:end="1:62"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">data</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:78"><decl pos:start="1:65" pos:end="1:78"><type pos:start="1:65" pos:end="1:78"><name pos:start="1:65" pos:end="1:67">int</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:78">data_size</name></decl></parameter>, <parameter pos:start="1:81" pos:end="1:93"><decl pos:start="1:81" pos:end="1:93"><type pos:start="1:81" pos:end="1:93"><name pos:start="1:81" pos:end="1:87">uint8_t</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type> <name pos:start="1:91" pos:end="1:93">buf</name></decl></parameter>, <parameter pos:start="1:96" pos:end="1:107"><decl pos:start="1:96" pos:end="1:107"><type pos:start="1:96" pos:end="1:107"><name pos:start="1:96" pos:end="1:98">int</name></type> <name pos:start="1:100" pos:end="1:107">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:36">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">AC3DecodeContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:25">ctx</name> <init pos:start="5:27" pos:end="5:44">= <expr pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:44"><name pos:start="5:29" pos:end="5:33">avctx</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:44">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">frame_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:12"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:12">j</name></decl>, <decl pos:start="9:15" pos:end="9:15"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:15">k</name></decl>, <decl pos:start="9:18" pos:end="9:18"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:18" pos:end="9:18">l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:41"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">float</name></type> <name pos:start="11:11" pos:end="11:19"><name pos:start="11:11" pos:end="11:14">tmp0</name><index pos:start="11:15" pos:end="11:19">[<expr pos:start="11:16" pos:end="11:18"><literal type="number" pos:start="11:16" pos:end="11:18">128</literal></expr>]</index></name></decl>, <decl pos:start="11:22" pos:end="11:30"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:22" pos:end="11:30"><name pos:start="11:22" pos:end="11:25">tmp1</name><index pos:start="11:26" pos:end="11:30">[<expr pos:start="11:27" pos:end="11:29"><literal type="number" pos:start="11:27" pos:end="11:29">128</literal></expr>]</index></name></decl>, <decl pos:start="11:33" pos:end="11:40"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:33" pos:end="11:40"><name pos:start="11:33" pos:end="11:35">tmp</name><index pos:start="11:36" pos:end="11:40">[<expr pos:start="11:37" pos:end="11:39"><literal type="number" pos:start="11:37" pos:end="11:39">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">short</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:22">out_samples</name> <init pos:start="13:24" pos:end="13:38">= <expr pos:start="13:26" pos:end="13:38"><operator pos:start="13:26" pos:end="13:26">(</operator><name pos:start="13:27" pos:end="13:31">short</name> <operator pos:start="13:33" pos:end="13:33">*</operator><operator pos:start="13:34" pos:end="13:34">)</operator><name pos:start="13:35" pos:end="13:38">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:33"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">float</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:18">samples</name> <init pos:start="15:20" pos:end="15:33">= <expr pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:33"><name pos:start="15:22" pos:end="15:24">ctx</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:33">samples</name></name></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="19:5" pos:end="19:28">//Synchronize the frame.</comment>

    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:15">frame_start</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <call pos:start="21:19" pos:end="21:48"><name pos:start="21:19" pos:end="21:33">ac3_synchronize</name><argument_list pos:start="21:34" pos:end="21:48">(<argument pos:start="21:35" pos:end="21:37"><expr pos:start="21:35" pos:end="21:37"><name pos:start="21:35" pos:end="21:37">buf</name></expr></argument>, <argument pos:start="21:40" pos:end="21:47"><expr pos:start="21:40" pos:end="21:47"><name pos:start="21:40" pos:end="21:47">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="31:5"><if pos:start="23:5" pos:end="31:5">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:19">frame_start</name> <operator pos:start="23:21" pos:end="23:22">==</operator> <operator pos:start="23:24" pos:end="23:24">-</operator><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>)</condition> <block pos:start="23:28" pos:end="31:5">{<block_content pos:start="25:9" pos:end="29:18">

        <expr_stmt pos:start="25:9" pos:end="25:67"><expr pos:start="25:9" pos:end="25:66"><call pos:start="25:9" pos:end="25:66"><name pos:start="25:9" pos:end="25:14">av_log</name><argument_list pos:start="25:15" pos:end="25:66">(<argument pos:start="25:16" pos:end="25:20"><expr pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:20">avctx</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="25:37" pos:end="25:65"><expr pos:start="25:37" pos:end="25:65"><literal type="string" pos:start="25:37" pos:end="25:65">"frame is not synchronized\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:23"><expr pos:start="27:9" pos:end="27:22"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:18">data_size</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</expr_stmt>

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:69">//Initialize the GetBitContext with the start of valid AC3 Frame.</comment>

    <expr_stmt pos:start="37:5" pos:end="37:79"><expr pos:start="37:5" pos:end="37:78"><call pos:start="37:5" pos:end="37:78"><name pos:start="37:5" pos:end="37:17">init_get_bits</name><argument_list pos:start="37:18" pos:end="37:78">(<argument pos:start="37:19" pos:end="37:28"><expr pos:start="37:19" pos:end="37:28"><operator pos:start="37:19" pos:end="37:19">&amp;</operator><operator pos:start="37:20" pos:end="37:20">(</operator><name pos:start="37:21" pos:end="37:27"><name pos:start="37:21" pos:end="37:23">ctx</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">gb</name></name><operator pos:start="37:28" pos:end="37:28">)</operator></expr></argument>, <argument pos:start="37:31" pos:end="37:47"><expr pos:start="37:31" pos:end="37:47"><name pos:start="37:31" pos:end="37:33">buf</name> <operator pos:start="37:35" pos:end="37:35">+</operator> <name pos:start="37:37" pos:end="37:47">frame_start</name></expr></argument>, <argument pos:start="37:50" pos:end="37:77"><expr pos:start="37:50" pos:end="37:77"><operator pos:start="37:50" pos:end="37:50">(</operator><name pos:start="37:51" pos:end="37:58">buf_size</name> <operator pos:start="37:60" pos:end="37:60">-</operator> <name pos:start="37:62" pos:end="37:72">frame_start</name><operator pos:start="37:73" pos:end="37:73">)</operator> <operator pos:start="37:75" pos:end="37:75">*</operator> <literal type="number" pos:start="37:77" pos:end="37:77">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="39:5" pos:end="39:25">//Parse the syncinfo.</comment>

    <comment type="line" format="doxygen" pos:start="41:5" pos:end="41:75">////If 'fscod' is not valid the decoder shall mute as per the standard.</comment>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:33">(<expr pos:start="43:9" pos:end="43:32"><call pos:start="43:9" pos:end="43:32"><name pos:start="43:9" pos:end="43:27">ac3_parse_sync_info</name><argument_list pos:start="43:28" pos:end="43:32">(<argument pos:start="43:29" pos:end="43:31"><expr pos:start="43:29" pos:end="43:31"><name pos:start="43:29" pos:end="43:31">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:35" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:18">

        <expr_stmt pos:start="45:9" pos:end="45:60"><expr pos:start="45:9" pos:end="45:59"><call pos:start="45:9" pos:end="45:59"><name pos:start="45:9" pos:end="45:14">av_log</name><argument_list pos:start="45:15" pos:end="45:59">(<argument pos:start="45:16" pos:end="45:20"><expr pos:start="45:16" pos:end="45:20"><name pos:start="45:16" pos:end="45:20">avctx</name></expr></argument>, <argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:37" pos:end="45:58"><expr pos:start="45:37" pos:end="45:58"><literal type="string" pos:start="45:37" pos:end="45:58">"fscod is not valid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><operator pos:start="47:9" pos:end="47:9">*</operator><name pos:start="47:10" pos:end="47:18">data_size</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <literal type="number" pos:start="47:22" pos:end="47:22">0</literal></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="55:5" pos:end="55:27">//Check for the errors.</comment>

    <comment type="block" pos:start="57:5" pos:end="63:8">/* if (ac3_error_check(ctx)) {

        *data_size = 0;

        return -1;

    } */</comment>



    <comment type="line" pos:start="67:5" pos:end="67:20">//Parse the BSI.</comment>

    <comment type="line" pos:start="69:5" pos:end="69:84">//If 'bsid' is not valid decoder shall not decode the audio as per the standard.</comment>

    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="71:27">(<expr pos:start="71:9" pos:end="71:26"><call pos:start="71:9" pos:end="71:26"><name pos:start="71:9" pos:end="71:21">ac3_parse_bsi</name><argument_list pos:start="71:22" pos:end="71:26">(<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><name pos:start="71:23" pos:end="71:25">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:29" pos:end="79:5">{<block_content pos:start="73:9" pos:end="77:18">

        <expr_stmt pos:start="73:9" pos:end="73:59"><expr pos:start="73:9" pos:end="73:58"><call pos:start="73:9" pos:end="73:58"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:58">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:57"><expr pos:start="73:37" pos:end="73:57"><literal type="string" pos:start="73:37" pos:end="73:57">"bsid is not valid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:23"><expr pos:start="75:9" pos:end="75:22"><operator pos:start="75:9" pos:end="75:9">*</operator><name pos:start="75:10" pos:end="75:18">data_size</name> <operator pos:start="75:20" pos:end="75:20">=</operator> <literal type="number" pos:start="75:22" pos:end="75:22">0</literal></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:54"><expr pos:start="83:5" pos:end="83:53"><name pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:9">avctx</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:22">sample_rate</name></name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:53"><name pos:start="83:26" pos:end="83:28">ctx</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:39">sync_info</name><operator pos:start="83:40" pos:end="83:40">.</operator><name pos:start="83:41" pos:end="83:53">sampling_rate</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="119:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:29">(<expr pos:start="85:9" pos:end="85:28"><name pos:start="85:9" pos:end="85:23"><name pos:start="85:9" pos:end="85:13">avctx</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:23">channels</name></name> <operator pos:start="85:25" pos:end="85:26">==</operator> <literal type="number" pos:start="85:28" pos:end="85:28">0</literal></expr>)</condition> <block pos:start="85:31" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:44">

        <expr_stmt pos:start="87:9" pos:end="87:88"><expr pos:start="87:9" pos:end="87:87"><name pos:start="87:9" pos:end="87:23"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:23">channels</name></name> <operator pos:start="87:25" pos:end="87:25">=</operator> <name pos:start="87:27" pos:end="87:42"><name pos:start="87:27" pos:end="87:29">ctx</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:34">bsi</name><operator pos:start="87:35" pos:end="87:35">.</operator><name pos:start="87:36" pos:end="87:42">nfchans</name></name> <operator pos:start="87:44" pos:end="87:44">+</operator> <operator pos:start="87:46" pos:end="87:46">(</operator><ternary pos:start="87:47" pos:end="87:86"><condition pos:start="87:47" pos:end="87:80"><expr pos:start="87:47" pos:end="87:78"><operator pos:start="87:47" pos:end="87:47">(</operator><name pos:start="87:48" pos:end="87:61"><name pos:start="87:48" pos:end="87:50">ctx</name><operator pos:start="87:51" pos:end="87:52">-&gt;</operator><name pos:start="87:53" pos:end="87:55">bsi</name><operator pos:start="87:56" pos:end="87:56">.</operator><name pos:start="87:57" pos:end="87:61">flags</name></name> <operator pos:start="87:63" pos:end="87:63">&amp;</operator> <name pos:start="87:65" pos:end="87:77">AC3_BSI_LFEON</name><operator pos:start="87:78" pos:end="87:78">)</operator></expr> ?</condition><then pos:start="87:82" pos:end="87:82"> <expr pos:start="87:82" pos:end="87:82"><literal type="number" pos:start="87:82" pos:end="87:82">1</literal></expr> </then><else pos:start="87:84" pos:end="87:86">: <expr pos:start="87:86" pos:end="87:86"><literal type="number" pos:start="87:86" pos:end="87:86">0</literal></expr></else></ternary><operator pos:start="87:87" pos:end="87:87">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:44"><expr pos:start="89:9" pos:end="89:43"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:11">ctx</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:19">output</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:43">AC3_OUTPUT_UNMODIFIED</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <if type="elseif" pos:start="93:5" pos:end="103:5">else if <condition pos:start="93:13" pos:end="93:95">(<expr pos:start="93:14" pos:end="93:94"><operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:30"><name pos:start="93:15" pos:end="93:17">ctx</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:22">bsi</name><operator pos:start="93:23" pos:end="93:23">.</operator><name pos:start="93:24" pos:end="93:30">nfchans</name></name> <operator pos:start="93:32" pos:end="93:32">+</operator> <operator pos:start="93:34" pos:end="93:34">(</operator><ternary pos:start="93:35" pos:end="93:74"><condition pos:start="93:35" pos:end="93:68"><expr pos:start="93:35" pos:end="93:66"><operator pos:start="93:35" pos:end="93:35">(</operator><name pos:start="93:36" pos:end="93:49"><name pos:start="93:36" pos:end="93:38">ctx</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:43">bsi</name><operator pos:start="93:44" pos:end="93:44">.</operator><name pos:start="93:45" pos:end="93:49">flags</name></name> <operator pos:start="93:51" pos:end="93:51">&amp;</operator> <name pos:start="93:53" pos:end="93:65">AC3_BSI_LFEON</name><operator pos:start="93:66" pos:end="93:66">)</operator></expr> ?</condition><then pos:start="93:70" pos:end="93:70"> <expr pos:start="93:70" pos:end="93:70"><literal type="number" pos:start="93:70" pos:end="93:70">1</literal></expr> </then><else pos:start="93:72" pos:end="93:74">: <expr pos:start="93:74" pos:end="93:74"><literal type="number" pos:start="93:74" pos:end="93:74">0</literal></expr></else></ternary><operator pos:start="93:75" pos:end="93:75">)</operator><operator pos:start="93:76" pos:end="93:76">)</operator> <operator pos:start="93:78" pos:end="93:78">&lt;</operator> <name pos:start="93:80" pos:end="93:94"><name pos:start="93:80" pos:end="93:84">avctx</name><operator pos:start="93:85" pos:end="93:86">-&gt;</operator><name pos:start="93:87" pos:end="93:94">channels</name></name></expr>)</condition> <block pos:start="93:97" pos:end="103:5">{<block_content pos:start="95:9" pos:end="101:44">

        <expr_stmt pos:start="95:9" pos:end="97:98"><expr pos:start="95:9" pos:end="97:97"><call pos:start="95:9" pos:end="97:97"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="97:97">(<argument pos:start="95:16" pos:end="95:20"><expr pos:start="95:16" pos:end="95:20"><name pos:start="95:16" pos:end="95:20">avctx</name></expr></argument>, <argument pos:start="95:23" pos:end="95:33"><expr pos:start="95:23" pos:end="95:33"><name pos:start="95:23" pos:end="95:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="95:36" pos:end="95:121"><expr pos:start="95:36" pos:end="95:121"><literal type="string" pos:start="95:36" pos:end="95:121">"ac3_decoder: AC3 Source Channels Are Less Then Specified %d: Output to %d Channels\n"</literal></expr></argument>,

                <argument pos:start="97:17" pos:end="97:31"><expr pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:31"><name pos:start="97:17" pos:end="97:21">avctx</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:31">channels</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:96"><expr pos:start="97:34" pos:end="97:96"><operator pos:start="97:34" pos:end="97:34">(</operator><name pos:start="97:35" pos:end="97:50"><name pos:start="97:35" pos:end="97:37">ctx</name><operator pos:start="97:38" pos:end="97:39">-&gt;</operator><name pos:start="97:40" pos:end="97:42">bsi</name><operator pos:start="97:43" pos:end="97:43">.</operator><name pos:start="97:44" pos:end="97:50">nfchans</name></name> <operator pos:start="97:52" pos:end="97:52">+</operator> <operator pos:start="97:54" pos:end="97:54">(</operator><ternary pos:start="97:55" pos:end="97:94"><condition pos:start="97:55" pos:end="97:88"><expr pos:start="97:55" pos:end="97:86"><operator pos:start="97:55" pos:end="97:55">(</operator><name pos:start="97:56" pos:end="97:69"><name pos:start="97:56" pos:end="97:58">ctx</name><operator pos:start="97:59" pos:end="97:60">-&gt;</operator><name pos:start="97:61" pos:end="97:63">bsi</name><operator pos:start="97:64" pos:end="97:64">.</operator><name pos:start="97:65" pos:end="97:69">flags</name></name> <operator pos:start="97:71" pos:end="97:71">&amp;</operator> <name pos:start="97:73" pos:end="97:85">AC3_BSI_LFEON</name><operator pos:start="97:86" pos:end="97:86">)</operator></expr> ?</condition><then pos:start="97:90" pos:end="97:90"> <expr pos:start="97:90" pos:end="97:90"><literal type="number" pos:start="97:90" pos:end="97:90">1</literal></expr> </then><else pos:start="97:92" pos:end="97:94">: <expr pos:start="97:94" pos:end="97:94"><literal type="number" pos:start="97:94" pos:end="97:94">0</literal></expr></else></ternary><operator pos:start="97:95" pos:end="97:95">)</operator><operator pos:start="97:96" pos:end="97:96">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:88"><expr pos:start="99:9" pos:end="99:87"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:23">channels</name></name> <operator pos:start="99:25" pos:end="99:25">=</operator> <name pos:start="99:27" pos:end="99:42"><name pos:start="99:27" pos:end="99:29">ctx</name><operator pos:start="99:30" pos:end="99:31">-&gt;</operator><name pos:start="99:32" pos:end="99:34">bsi</name><operator pos:start="99:35" pos:end="99:35">.</operator><name pos:start="99:36" pos:end="99:42">nfchans</name></name> <operator pos:start="99:44" pos:end="99:44">+</operator> <operator pos:start="99:46" pos:end="99:46">(</operator><ternary pos:start="99:47" pos:end="99:86"><condition pos:start="99:47" pos:end="99:80"><expr pos:start="99:47" pos:end="99:78"><operator pos:start="99:47" pos:end="99:47">(</operator><name pos:start="99:48" pos:end="99:61"><name pos:start="99:48" pos:end="99:50">ctx</name><operator pos:start="99:51" pos:end="99:52">-&gt;</operator><name pos:start="99:53" pos:end="99:55">bsi</name><operator pos:start="99:56" pos:end="99:56">.</operator><name pos:start="99:57" pos:end="99:61">flags</name></name> <operator pos:start="99:63" pos:end="99:63">&amp;</operator> <name pos:start="99:65" pos:end="99:77">AC3_BSI_LFEON</name><operator pos:start="99:78" pos:end="99:78">)</operator></expr> ?</condition><then pos:start="99:82" pos:end="99:82"> <expr pos:start="99:82" pos:end="99:82"><literal type="number" pos:start="99:82" pos:end="99:82">1</literal></expr> </then><else pos:start="99:84" pos:end="99:86">: <expr pos:start="99:86" pos:end="99:86"><literal type="number" pos:start="99:86" pos:end="99:86">0</literal></expr></else></ternary><operator pos:start="99:87" pos:end="99:87">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:44"><expr pos:start="101:9" pos:end="101:43"><name pos:start="101:9" pos:end="101:19"><name pos:start="101:9" pos:end="101:11">ctx</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:19">output</name></name> <operator pos:start="101:21" pos:end="101:21">=</operator> <name pos:start="101:23" pos:end="101:43">AC3_OUTPUT_UNMODIFIED</name></expr>;</expr_stmt>

    </block_content>}</block></if>

    <if type="elseif" pos:start="105:5" pos:end="109:5">else if <condition pos:start="105:13" pos:end="105:34">(<expr pos:start="105:14" pos:end="105:33"><name pos:start="105:14" pos:end="105:28"><name pos:start="105:14" pos:end="105:18">avctx</name><operator pos:start="105:19" pos:end="105:20">-&gt;</operator><name pos:start="105:21" pos:end="105:28">channels</name></name> <operator pos:start="105:30" pos:end="105:31">==</operator> <literal type="number" pos:start="105:33" pos:end="105:33">1</literal></expr>)</condition> <block pos:start="105:36" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:38">

        <expr_stmt pos:start="107:9" pos:end="107:38"><expr pos:start="107:9" pos:end="107:37"><name pos:start="107:9" pos:end="107:19"><name pos:start="107:9" pos:end="107:11">ctx</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:19">output</name></name> <operator pos:start="107:21" pos:end="107:21">=</operator> <name pos:start="107:23" pos:end="107:37">AC3_OUTPUT_MONO</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="109:7" pos:end="119:5">else if <condition pos:start="109:15" pos:end="109:36">(<expr pos:start="109:16" pos:end="109:35"><name pos:start="109:16" pos:end="109:30"><name pos:start="109:16" pos:end="109:20">avctx</name><operator pos:start="109:21" pos:end="109:22">-&gt;</operator><name pos:start="109:23" pos:end="109:30">channels</name></name> <operator pos:start="109:32" pos:end="109:33">==</operator> <literal type="number" pos:start="109:35" pos:end="109:35">2</literal></expr>)</condition> <block pos:start="109:38" pos:end="119:5">{<block_content pos:start="111:9" pos:end="117:44">

        <if_stmt pos:start="111:9" pos:end="117:44"><if pos:start="111:9" pos:end="113:43">if <condition pos:start="111:12" pos:end="111:37">(<expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:15">ctx</name><operator pos:start="111:16" pos:end="111:17">-&gt;</operator><name pos:start="111:18" pos:end="111:20">bsi</name><operator pos:start="111:21" pos:end="111:21">.</operator><name pos:start="111:22" pos:end="111:28">dsurmod</name></name> <operator pos:start="111:30" pos:end="111:31">==</operator> <literal type="number" pos:start="111:33" pos:end="111:36">0x02</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:43"><block_content pos:start="113:13" pos:end="113:43">

            <expr_stmt pos:start="113:13" pos:end="113:43"><expr pos:start="113:13" pos:end="113:42"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:15">ctx</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:23">output</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:42">AC3_OUTPUT_DOLBY</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="115:9" pos:end="117:44">else<block type="pseudo" pos:start="117:13" pos:end="117:44"><block_content pos:start="117:13" pos:end="117:44">

            <expr_stmt pos:start="117:13" pos:end="117:44"><expr pos:start="117:13" pos:end="117:43"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:15">ctx</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:23">output</name></name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:43">AC3_OUTPUT_STEREO</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>





    <expr_stmt pos:start="125:5" pos:end="125:46"><expr pos:start="125:5" pos:end="125:45"><name pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:9">avctx</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:19">bit_rate</name></name> <operator pos:start="125:21" pos:end="125:21">=</operator> <name pos:start="125:23" pos:end="125:45"><name pos:start="125:23" pos:end="125:25">ctx</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:36">sync_info</name><operator pos:start="125:37" pos:end="125:37">.</operator><name pos:start="125:38" pos:end="125:45">bit_rate</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:144"><expr pos:start="127:5" pos:end="127:143"><call pos:start="127:5" pos:end="127:143"><name pos:start="127:5" pos:end="127:10">av_log</name><argument_list pos:start="127:11" pos:end="127:143">(<argument pos:start="127:12" pos:end="127:16"><expr pos:start="127:12" pos:end="127:16"><name pos:start="127:12" pos:end="127:16">avctx</name></expr></argument>, <argument pos:start="127:19" pos:end="127:29"><expr pos:start="127:19" pos:end="127:29"><name pos:start="127:19" pos:end="127:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="127:32" pos:end="127:88"><expr pos:start="127:32" pos:end="127:88"><literal type="string" pos:start="127:32" pos:end="127:88">"channels = %d \t bit rate = %d \t sampling rate = %d \n"</literal></expr></argument>, <argument pos:start="127:91" pos:end="127:105"><expr pos:start="127:91" pos:end="127:105"><name pos:start="127:91" pos:end="127:105"><name pos:start="127:91" pos:end="127:95">avctx</name><operator pos:start="127:96" pos:end="127:97">-&gt;</operator><name pos:start="127:98" pos:end="127:105">channels</name></name></expr></argument>, <argument pos:start="127:108" pos:end="127:125"><expr pos:start="127:108" pos:end="127:125"><name pos:start="127:108" pos:end="127:125"><name pos:start="127:108" pos:end="127:112">avctx</name><operator pos:start="127:113" pos:end="127:114">-&gt;</operator><name pos:start="127:115" pos:end="127:125">sample_rate</name></name></expr></argument>, <argument pos:start="127:128" pos:end="127:142"><expr pos:start="127:128" pos:end="127:142"><name pos:start="127:128" pos:end="127:142"><name pos:start="127:128" pos:end="127:132">avctx</name><operator pos:start="127:133" pos:end="127:134">-&gt;</operator><name pos:start="127:135" pos:end="127:142">bit_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="131:5" pos:end="131:29">//Parse the Audio Blocks.</comment>

    <for pos:start="133:5" pos:end="211:5">for <control pos:start="133:9" pos:end="133:27">(<init pos:start="133:10" pos:end="133:15"><expr pos:start="133:10" pos:end="133:14"><name pos:start="133:10" pos:end="133:10">i</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <literal type="number" pos:start="133:14" pos:end="133:14">0</literal></expr>;</init> <condition pos:start="133:17" pos:end="133:22"><expr pos:start="133:17" pos:end="133:21"><name pos:start="133:17" pos:end="133:17">i</name> <operator pos:start="133:19" pos:end="133:19">&lt;</operator> <literal type="number" pos:start="133:21" pos:end="133:21">6</literal></expr>;</condition> <incr pos:start="133:24" pos:end="133:26"><expr pos:start="133:24" pos:end="133:26"><name pos:start="133:24" pos:end="133:24">i</name><operator pos:start="133:25" pos:end="133:26">++</operator></expr></incr>)</control> <block pos:start="133:29" pos:end="211:5">{<block_content pos:start="135:9" pos:end="209:9">

        <if_stmt pos:start="135:9" pos:end="143:9"><if pos:start="135:9" pos:end="143:9">if <condition pos:start="135:12" pos:end="135:42">(<expr pos:start="135:13" pos:end="135:41"><call pos:start="135:13" pos:end="135:41"><name pos:start="135:13" pos:end="135:33">ac3_parse_audio_block</name><argument_list pos:start="135:34" pos:end="135:41">(<argument pos:start="135:35" pos:end="135:37"><expr pos:start="135:35" pos:end="135:37"><name pos:start="135:35" pos:end="135:37">ctx</name></expr></argument>, <argument pos:start="135:40" pos:end="135:40"><expr pos:start="135:40" pos:end="135:40"><name pos:start="135:40" pos:end="135:40">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:44" pos:end="143:9">{<block_content pos:start="137:13" pos:end="141:22">

            <expr_stmt pos:start="137:13" pos:end="137:75"><expr pos:start="137:13" pos:end="137:74"><call pos:start="137:13" pos:end="137:74"><name pos:start="137:13" pos:end="137:18">av_log</name><argument_list pos:start="137:19" pos:end="137:74">(<argument pos:start="137:20" pos:end="137:24"><expr pos:start="137:20" pos:end="137:24"><name pos:start="137:20" pos:end="137:24">avctx</name></expr></argument>, <argument pos:start="137:27" pos:end="137:38"><expr pos:start="137:27" pos:end="137:38"><name pos:start="137:27" pos:end="137:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:41" pos:end="137:73"><expr pos:start="137:41" pos:end="137:73"><literal type="string" pos:start="137:41" pos:end="137:73">"error parsing the audio block\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:27"><expr pos:start="139:13" pos:end="139:26"><operator pos:start="139:13" pos:end="139:13">*</operator><name pos:start="139:14" pos:end="139:22">data_size</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>;</expr_stmt>

            <return pos:start="141:13" pos:end="141:22">return <expr pos:start="141:20" pos:end="141:21"><operator pos:start="141:20" pos:end="141:20">-</operator><literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:31"><expr pos:start="145:9" pos:end="145:30"><name pos:start="145:9" pos:end="145:15">samples</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <name pos:start="145:19" pos:end="145:30"><name pos:start="145:19" pos:end="145:21">ctx</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:30">samples</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="161:9"><if pos:start="147:9" pos:end="161:9">if <condition pos:start="147:12" pos:end="147:43">(<expr pos:start="147:13" pos:end="147:42"><name pos:start="147:13" pos:end="147:26"><name pos:start="147:13" pos:end="147:15">ctx</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:20">bsi</name><operator pos:start="147:21" pos:end="147:21">.</operator><name pos:start="147:22" pos:end="147:26">flags</name></name> <operator pos:start="147:28" pos:end="147:28">&amp;</operator> <name pos:start="147:30" pos:end="147:42">AC3_BSI_LFEON</name></expr>)</condition> <block pos:start="147:45" pos:end="161:9">{<block_content pos:start="149:13" pos:end="159:31">

            <expr_stmt pos:start="149:13" pos:end="149:82"><expr pos:start="149:13" pos:end="149:81"><call pos:start="149:13" pos:end="149:81"><name pos:start="149:13" pos:end="149:25">ff_imdct_calc</name><argument_list pos:start="149:26" pos:end="149:81">(<argument pos:start="149:27" pos:end="149:45"><expr pos:start="149:27" pos:end="149:45"><operator pos:start="149:27" pos:end="149:27">&amp;</operator><name pos:start="149:28" pos:end="149:45"><name pos:start="149:28" pos:end="149:30">ctx</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:45">imdct_ctx_512</name></name></expr></argument>, <argument pos:start="149:48" pos:end="149:66"><expr pos:start="149:48" pos:end="149:66"><name pos:start="149:48" pos:end="149:59"><name pos:start="149:48" pos:end="149:50">ctx</name><operator pos:start="149:51" pos:end="149:52">-&gt;</operator><name pos:start="149:53" pos:end="149:59">samples</name></name> <operator pos:start="149:61" pos:end="149:61">+</operator> <literal type="number" pos:start="149:63" pos:end="149:66">1536</literal></expr></argument>, <argument pos:start="149:69" pos:end="149:75"><expr pos:start="149:69" pos:end="149:75"><name pos:start="149:69" pos:end="149:75">samples</name></expr></argument>, <argument pos:start="149:78" pos:end="149:80"><expr pos:start="149:78" pos:end="149:80"><name pos:start="149:78" pos:end="149:80">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="151:13" pos:end="153:54">for <control pos:start="151:17" pos:end="151:37">(<init pos:start="151:18" pos:end="151:23"><expr pos:start="151:18" pos:end="151:22"><name pos:start="151:18" pos:end="151:18">l</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">0</literal></expr>;</init> <condition pos:start="151:25" pos:end="151:32"><expr pos:start="151:25" pos:end="151:31"><name pos:start="151:25" pos:end="151:25">l</name> <operator pos:start="151:27" pos:end="151:27">&lt;</operator> <literal type="number" pos:start="151:29" pos:end="151:31">256</literal></expr>;</condition> <incr pos:start="151:34" pos:end="151:36"><expr pos:start="151:34" pos:end="151:36"><name pos:start="151:34" pos:end="151:34">l</name><operator pos:start="151:35" pos:end="151:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="153:17" pos:end="153:54"><block_content pos:start="153:17" pos:end="153:54">

                <expr_stmt pos:start="153:17" pos:end="153:54"><expr pos:start="153:17" pos:end="153:53"><name pos:start="153:17" pos:end="153:26"><name pos:start="153:17" pos:end="153:23">samples</name><index pos:start="153:24" pos:end="153:26">[<expr pos:start="153:25" pos:end="153:25"><name pos:start="153:25" pos:end="153:25">l</name></expr>]</index></name> <operator pos:start="153:28" pos:end="153:28">=</operator> <operator pos:start="153:30" pos:end="153:30">(</operator><name pos:start="153:31" pos:end="153:42"><name pos:start="153:31" pos:end="153:33">ctx</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:42">samples</name></name> <operator pos:start="153:44" pos:end="153:44">+</operator> <literal type="number" pos:start="153:46" pos:end="153:49">1536</literal><operator pos:start="153:50" pos:end="153:50">)</operator><index pos:start="153:51" pos:end="153:53">[<expr pos:start="153:52" pos:end="153:52"><name pos:start="153:52" pos:end="153:52">l</name></expr>]</index></expr>;</expr_stmt></block_content></block></for>

            <expr_stmt pos:start="155:13" pos:end="155:52"><expr pos:start="155:13" pos:end="155:51"><call pos:start="155:13" pos:end="155:51"><name pos:start="155:13" pos:end="155:24">float_to_int</name><argument_list pos:start="155:25" pos:end="155:51">(<argument pos:start="155:26" pos:end="155:32"><expr pos:start="155:26" pos:end="155:32"><name pos:start="155:26" pos:end="155:32">samples</name></expr></argument>, <argument pos:start="155:35" pos:end="155:45"><expr pos:start="155:35" pos:end="155:45"><name pos:start="155:35" pos:end="155:45">out_samples</name></expr></argument>, <argument pos:start="155:48" pos:end="155:50"><expr pos:start="155:48" pos:end="155:50"><literal type="number" pos:start="155:48" pos:end="155:50">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:27"><expr pos:start="157:13" pos:end="157:26"><name pos:start="157:13" pos:end="157:19">samples</name> <operator pos:start="157:21" pos:end="157:22">+=</operator> <literal type="number" pos:start="157:24" pos:end="157:26">256</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:31"><expr pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:23">out_samples</name> <operator pos:start="159:25" pos:end="159:26">+=</operator> <literal type="number" pos:start="159:28" pos:end="159:30">256</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <for pos:start="163:9" pos:end="209:9">for <control pos:start="163:13" pos:end="163:46">(<init pos:start="163:14" pos:end="163:19"><expr pos:start="163:14" pos:end="163:18"><name pos:start="163:14" pos:end="163:14">j</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <literal type="number" pos:start="163:18" pos:end="163:18">0</literal></expr>;</init> <condition pos:start="163:21" pos:end="163:41"><expr pos:start="163:21" pos:end="163:40"><name pos:start="163:21" pos:end="163:21">j</name> <operator pos:start="163:23" pos:end="163:23">&lt;</operator> <name pos:start="163:25" pos:end="163:40"><name pos:start="163:25" pos:end="163:27">ctx</name><operator pos:start="163:28" pos:end="163:29">-&gt;</operator><name pos:start="163:30" pos:end="163:32">bsi</name><operator pos:start="163:33" pos:end="163:33">.</operator><name pos:start="163:34" pos:end="163:40">nfchans</name></name></expr>;</condition> <incr pos:start="163:43" pos:end="163:45"><expr pos:start="163:43" pos:end="163:45"><name pos:start="163:43" pos:end="163:43">j</name><operator pos:start="163:44" pos:end="163:45">++</operator></expr></incr>)</control> <block pos:start="163:48" pos:end="209:9">{<block_content pos:start="165:13" pos:end="207:13">

            <if_stmt pos:start="165:13" pos:end="207:13"><if pos:start="165:13" pos:end="189:13">if <condition pos:start="165:16" pos:end="165:50">(<expr pos:start="165:17" pos:end="165:49"><name pos:start="165:17" pos:end="165:38"><name pos:start="165:17" pos:end="165:19">ctx</name><operator pos:start="165:20" pos:end="165:21">-&gt;</operator><name pos:start="165:22" pos:end="165:32">audio_block</name><operator pos:start="165:33" pos:end="165:33">.</operator><name pos:start="165:34" pos:end="165:38">blksw</name></name> <operator pos:start="165:40" pos:end="165:40">&amp;</operator> <operator pos:start="165:42" pos:end="165:42">(</operator><literal type="number" pos:start="165:43" pos:end="165:43">1</literal> <operator pos:start="165:45" pos:end="165:46">&lt;&lt;</operator> <name pos:start="165:48" pos:end="165:48">j</name><operator pos:start="165:49" pos:end="165:49">)</operator></expr>)</condition> <block pos:start="165:52" pos:end="189:13">{<block_content pos:start="167:17" pos:end="187:35">

                <for pos:start="167:17" pos:end="173:17">for <control pos:start="167:21" pos:end="167:41">(<init pos:start="167:22" pos:end="167:27"><expr pos:start="167:22" pos:end="167:26"><name pos:start="167:22" pos:end="167:22">k</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <literal type="number" pos:start="167:26" pos:end="167:26">0</literal></expr>;</init> <condition pos:start="167:29" pos:end="167:36"><expr pos:start="167:29" pos:end="167:35"><name pos:start="167:29" pos:end="167:29">k</name> <operator pos:start="167:31" pos:end="167:31">&lt;</operator> <literal type="number" pos:start="167:33" pos:end="167:35">128</literal></expr>;</condition> <incr pos:start="167:38" pos:end="167:40"><expr pos:start="167:38" pos:end="167:40"><name pos:start="167:38" pos:end="167:38">k</name><operator pos:start="167:39" pos:end="167:40">++</operator></expr></incr>)</control> <block pos:start="167:43" pos:end="173:17">{<block_content pos:start="169:21" pos:end="171:49">

                    <expr_stmt pos:start="169:21" pos:end="169:45"><expr pos:start="169:21" pos:end="169:44"><name pos:start="169:21" pos:end="169:27"><name pos:start="169:21" pos:end="169:24">tmp0</name><index pos:start="169:25" pos:end="169:27">[<expr pos:start="169:26" pos:end="169:26"><name pos:start="169:26" pos:end="169:26">k</name></expr>]</index></name> <operator pos:start="169:29" pos:end="169:29">=</operator> <name pos:start="169:31" pos:end="169:44"><name pos:start="169:31" pos:end="169:37">samples</name><index pos:start="169:38" pos:end="169:44">[<expr pos:start="169:39" pos:end="169:43"><literal type="number" pos:start="169:39" pos:end="169:39">2</literal> <operator pos:start="169:41" pos:end="169:41">*</operator> <name pos:start="169:43" pos:end="169:43">k</name></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:49"><expr pos:start="171:21" pos:end="171:48"><name pos:start="171:21" pos:end="171:27"><name pos:start="171:21" pos:end="171:24">tmp1</name><index pos:start="171:25" pos:end="171:27">[<expr pos:start="171:26" pos:end="171:26"><name pos:start="171:26" pos:end="171:26">k</name></expr>]</index></name> <operator pos:start="171:29" pos:end="171:29">=</operator> <name pos:start="171:31" pos:end="171:48"><name pos:start="171:31" pos:end="171:37">samples</name><index pos:start="171:38" pos:end="171:48">[<expr pos:start="171:39" pos:end="171:47"><literal type="number" pos:start="171:39" pos:end="171:39">2</literal> <operator pos:start="171:41" pos:end="171:41">*</operator> <name pos:start="171:43" pos:end="171:43">k</name> <operator pos:start="171:45" pos:end="171:45">+</operator> <literal type="number" pos:start="171:47" pos:end="171:47">1</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="175:17" pos:end="175:83"><expr pos:start="175:17" pos:end="175:82"><call pos:start="175:17" pos:end="175:82"><name pos:start="175:17" pos:end="175:29">ff_imdct_calc</name><argument_list pos:start="175:30" pos:end="175:82">(<argument pos:start="175:31" pos:end="175:49"><expr pos:start="175:31" pos:end="175:49"><operator pos:start="175:31" pos:end="175:31">&amp;</operator><name pos:start="175:32" pos:end="175:49"><name pos:start="175:32" pos:end="175:34">ctx</name><operator pos:start="175:35" pos:end="175:36">-&gt;</operator><name pos:start="175:37" pos:end="175:49">imdct_ctx_256</name></name></expr></argument>, <argument pos:start="175:52" pos:end="175:70"><expr pos:start="175:52" pos:end="175:70"><name pos:start="175:52" pos:end="175:63"><name pos:start="175:52" pos:end="175:54">ctx</name><operator pos:start="175:55" pos:end="175:56">-&gt;</operator><name pos:start="175:57" pos:end="175:63">samples</name></name> <operator pos:start="175:65" pos:end="175:65">+</operator> <literal type="number" pos:start="175:67" pos:end="175:70">1536</literal></expr></argument>, <argument pos:start="175:73" pos:end="175:76"><expr pos:start="175:73" pos:end="175:76"><name pos:start="175:73" pos:end="175:76">tmp0</name></expr></argument>, <argument pos:start="175:79" pos:end="175:81"><expr pos:start="175:79" pos:end="175:81"><name pos:start="175:79" pos:end="175:81">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="177:17" pos:end="179:115">for <control pos:start="177:21" pos:end="177:41">(<init pos:start="177:22" pos:end="177:27"><expr pos:start="177:22" pos:end="177:26"><name pos:start="177:22" pos:end="177:22">l</name> <operator pos:start="177:24" pos:end="177:24">=</operator> <literal type="number" pos:start="177:26" pos:end="177:26">0</literal></expr>;</init> <condition pos:start="177:29" pos:end="177:36"><expr pos:start="177:29" pos:end="177:35"><name pos:start="177:29" pos:end="177:29">l</name> <operator pos:start="177:31" pos:end="177:31">&lt;</operator> <literal type="number" pos:start="177:33" pos:end="177:35">256</literal></expr>;</condition> <incr pos:start="177:38" pos:end="177:40"><expr pos:start="177:38" pos:end="177:40"><name pos:start="177:38" pos:end="177:38">l</name><operator pos:start="177:39" pos:end="177:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="179:21" pos:end="179:115"><block_content pos:start="179:21" pos:end="179:115">

                    <expr_stmt pos:start="179:21" pos:end="179:115"><expr pos:start="179:21" pos:end="179:114"><name pos:start="179:21" pos:end="179:30"><name pos:start="179:21" pos:end="179:27">samples</name><index pos:start="179:28" pos:end="179:30">[<expr pos:start="179:29" pos:end="179:29"><name pos:start="179:29" pos:end="179:29">l</name></expr>]</index></name> <operator pos:start="179:32" pos:end="179:32">=</operator> <operator pos:start="179:34" pos:end="179:34">(</operator><name pos:start="179:35" pos:end="179:46"><name pos:start="179:35" pos:end="179:37">ctx</name><operator pos:start="179:38" pos:end="179:39">-&gt;</operator><name pos:start="179:40" pos:end="179:46">samples</name></name> <operator pos:start="179:48" pos:end="179:48">+</operator> <literal type="number" pos:start="179:50" pos:end="179:53">1536</literal><operator pos:start="179:54" pos:end="179:54">)</operator><index pos:start="179:55" pos:end="179:57">[<expr pos:start="179:56" pos:end="179:56"><name pos:start="179:56" pos:end="179:56">l</name></expr>]</index> <operator pos:start="179:59" pos:end="179:59">*</operator> <name pos:start="179:61" pos:end="179:69"><name pos:start="179:61" pos:end="179:66">window</name><index pos:start="179:67" pos:end="179:69">[<expr pos:start="179:68" pos:end="179:68"><name pos:start="179:68" pos:end="179:68">l</name></expr>]</index></name> <operator pos:start="179:71" pos:end="179:71">+</operator> <operator pos:start="179:73" pos:end="179:73">(</operator><name pos:start="179:74" pos:end="179:85"><name pos:start="179:74" pos:end="179:76">ctx</name><operator pos:start="179:77" pos:end="179:78">-&gt;</operator><name pos:start="179:79" pos:end="179:85">samples</name></name> <operator pos:start="179:87" pos:end="179:87">+</operator> <literal type="number" pos:start="179:89" pos:end="179:92">2048</literal><operator pos:start="179:93" pos:end="179:93">)</operator><index pos:start="179:94" pos:end="179:96">[<expr pos:start="179:95" pos:end="179:95"><name pos:start="179:95" pos:end="179:95">l</name></expr>]</index> <operator pos:start="179:98" pos:end="179:98">*</operator> <name pos:start="179:100" pos:end="179:114"><name pos:start="179:100" pos:end="179:105">window</name><index pos:start="179:106" pos:end="179:114">[<expr pos:start="179:107" pos:end="179:113"><literal type="number" pos:start="179:107" pos:end="179:111">255</literal> <operator pos:start="179:111" pos:end="179:111">-</operator> <name pos:start="179:113" pos:end="179:113">l</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="181:17" pos:end="181:83"><expr pos:start="181:17" pos:end="181:82"><call pos:start="181:17" pos:end="181:82"><name pos:start="181:17" pos:end="181:29">ff_imdct_calc</name><argument_list pos:start="181:30" pos:end="181:82">(<argument pos:start="181:31" pos:end="181:49"><expr pos:start="181:31" pos:end="181:49"><operator pos:start="181:31" pos:end="181:31">&amp;</operator><name pos:start="181:32" pos:end="181:49"><name pos:start="181:32" pos:end="181:34">ctx</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:49">imdct_ctx_256</name></name></expr></argument>, <argument pos:start="181:52" pos:end="181:70"><expr pos:start="181:52" pos:end="181:70"><name pos:start="181:52" pos:end="181:63"><name pos:start="181:52" pos:end="181:54">ctx</name><operator pos:start="181:55" pos:end="181:56">-&gt;</operator><name pos:start="181:57" pos:end="181:63">samples</name></name> <operator pos:start="181:65" pos:end="181:65">+</operator> <literal type="number" pos:start="181:67" pos:end="181:70">2048</literal></expr></argument>, <argument pos:start="181:73" pos:end="181:76"><expr pos:start="181:73" pos:end="181:76"><name pos:start="181:73" pos:end="181:76">tmp1</name></expr></argument>, <argument pos:start="181:79" pos:end="181:81"><expr pos:start="181:79" pos:end="181:81"><name pos:start="181:79" pos:end="181:81">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:56"><expr pos:start="183:17" pos:end="183:55"><call pos:start="183:17" pos:end="183:55"><name pos:start="183:17" pos:end="183:28">float_to_int</name><argument_list pos:start="183:29" pos:end="183:55">(<argument pos:start="183:30" pos:end="183:36"><expr pos:start="183:30" pos:end="183:36"><name pos:start="183:30" pos:end="183:36">samples</name></expr></argument>, <argument pos:start="183:39" pos:end="183:49"><expr pos:start="183:39" pos:end="183:49"><name pos:start="183:39" pos:end="183:49">out_samples</name></expr></argument>, <argument pos:start="183:52" pos:end="183:54"><expr pos:start="183:52" pos:end="183:54"><literal type="number" pos:start="183:52" pos:end="183:54">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="185:17" pos:end="185:31"><expr pos:start="185:17" pos:end="185:30"><name pos:start="185:17" pos:end="185:23">samples</name> <operator pos:start="185:25" pos:end="185:26">+=</operator> <literal type="number" pos:start="185:28" pos:end="185:30">256</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:35"><expr pos:start="187:17" pos:end="187:34"><name pos:start="187:17" pos:end="187:27">out_samples</name> <operator pos:start="187:29" pos:end="187:30">+=</operator> <literal type="number" pos:start="187:32" pos:end="187:34">256</literal></expr>;</expr_stmt>

            </block_content>}</block></if>

            <else pos:start="191:13" pos:end="207:13">else <block pos:start="191:18" pos:end="207:13">{<block_content pos:start="193:17" pos:end="205:35">

                <expr_stmt pos:start="193:17" pos:end="193:86"><expr pos:start="193:17" pos:end="193:85"><call pos:start="193:17" pos:end="193:85"><name pos:start="193:17" pos:end="193:29">ff_imdct_calc</name><argument_list pos:start="193:30" pos:end="193:85">(<argument pos:start="193:31" pos:end="193:49"><expr pos:start="193:31" pos:end="193:49"><operator pos:start="193:31" pos:end="193:31">&amp;</operator><name pos:start="193:32" pos:end="193:49"><name pos:start="193:32" pos:end="193:34">ctx</name><operator pos:start="193:35" pos:end="193:36">-&gt;</operator><name pos:start="193:37" pos:end="193:49">imdct_ctx_512</name></name></expr></argument>, <argument pos:start="193:52" pos:end="193:70"><expr pos:start="193:52" pos:end="193:70"><name pos:start="193:52" pos:end="193:63"><name pos:start="193:52" pos:end="193:54">ctx</name><operator pos:start="193:55" pos:end="193:56">-&gt;</operator><name pos:start="193:57" pos:end="193:63">samples</name></name> <operator pos:start="193:65" pos:end="193:65">+</operator> <literal type="number" pos:start="193:67" pos:end="193:70">1536</literal></expr></argument>, <argument pos:start="193:73" pos:end="193:79"><expr pos:start="193:73" pos:end="193:79"><name pos:start="193:73" pos:end="193:79">samples</name></expr></argument>, <argument pos:start="193:82" pos:end="193:84"><expr pos:start="193:82" pos:end="193:84"><name pos:start="193:82" pos:end="193:84">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="195:17" pos:end="197:115">for <control pos:start="195:21" pos:end="195:41">(<init pos:start="195:22" pos:end="195:27"><expr pos:start="195:22" pos:end="195:26"><name pos:start="195:22" pos:end="195:22">l</name> <operator pos:start="195:24" pos:end="195:24">=</operator> <literal type="number" pos:start="195:26" pos:end="195:26">0</literal></expr>;</init> <condition pos:start="195:29" pos:end="195:36"><expr pos:start="195:29" pos:end="195:35"><name pos:start="195:29" pos:end="195:29">l</name> <operator pos:start="195:31" pos:end="195:31">&lt;</operator> <literal type="number" pos:start="195:33" pos:end="195:35">256</literal></expr>;</condition> <incr pos:start="195:38" pos:end="195:40"><expr pos:start="195:38" pos:end="195:40"><name pos:start="195:38" pos:end="195:38">l</name><operator pos:start="195:39" pos:end="195:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="197:21" pos:end="197:115"><block_content pos:start="197:21" pos:end="197:115">

                    <expr_stmt pos:start="197:21" pos:end="197:115"><expr pos:start="197:21" pos:end="197:114"><name pos:start="197:21" pos:end="197:30"><name pos:start="197:21" pos:end="197:27">samples</name><index pos:start="197:28" pos:end="197:30">[<expr pos:start="197:29" pos:end="197:29"><name pos:start="197:29" pos:end="197:29">l</name></expr>]</index></name> <operator pos:start="197:32" pos:end="197:32">=</operator> <operator pos:start="197:34" pos:end="197:34">(</operator><name pos:start="197:35" pos:end="197:46"><name pos:start="197:35" pos:end="197:37">ctx</name><operator pos:start="197:38" pos:end="197:39">-&gt;</operator><name pos:start="197:40" pos:end="197:46">samples</name></name> <operator pos:start="197:48" pos:end="197:48">+</operator> <literal type="number" pos:start="197:50" pos:end="197:53">1536</literal><operator pos:start="197:54" pos:end="197:54">)</operator><index pos:start="197:55" pos:end="197:57">[<expr pos:start="197:56" pos:end="197:56"><name pos:start="197:56" pos:end="197:56">l</name></expr>]</index> <operator pos:start="197:59" pos:end="197:59">*</operator> <name pos:start="197:61" pos:end="197:69"><name pos:start="197:61" pos:end="197:66">window</name><index pos:start="197:67" pos:end="197:69">[<expr pos:start="197:68" pos:end="197:68"><name pos:start="197:68" pos:end="197:68">l</name></expr>]</index></name> <operator pos:start="197:71" pos:end="197:71">+</operator> <operator pos:start="197:73" pos:end="197:73">(</operator><name pos:start="197:74" pos:end="197:85"><name pos:start="197:74" pos:end="197:76">ctx</name><operator pos:start="197:77" pos:end="197:78">-&gt;</operator><name pos:start="197:79" pos:end="197:85">samples</name></name> <operator pos:start="197:87" pos:end="197:87">+</operator> <literal type="number" pos:start="197:89" pos:end="197:92">2048</literal><operator pos:start="197:93" pos:end="197:93">)</operator><index pos:start="197:94" pos:end="197:96">[<expr pos:start="197:95" pos:end="197:95"><name pos:start="197:95" pos:end="197:95">l</name></expr>]</index> <operator pos:start="197:98" pos:end="197:98">*</operator> <name pos:start="197:100" pos:end="197:114"><name pos:start="197:100" pos:end="197:105">window</name><index pos:start="197:106" pos:end="197:114">[<expr pos:start="197:107" pos:end="197:113"><literal type="number" pos:start="197:107" pos:end="197:111">255</literal> <operator pos:start="197:111" pos:end="197:111">-</operator> <name pos:start="197:113" pos:end="197:113">l</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="199:17" pos:end="199:56"><expr pos:start="199:17" pos:end="199:55"><call pos:start="199:17" pos:end="199:55"><name pos:start="199:17" pos:end="199:28">float_to_int</name><argument_list pos:start="199:29" pos:end="199:55">(<argument pos:start="199:30" pos:end="199:36"><expr pos:start="199:30" pos:end="199:36"><name pos:start="199:30" pos:end="199:36">samples</name></expr></argument>, <argument pos:start="199:39" pos:end="199:49"><expr pos:start="199:39" pos:end="199:49"><name pos:start="199:39" pos:end="199:49">out_samples</name></expr></argument>, <argument pos:start="199:52" pos:end="199:54"><expr pos:start="199:52" pos:end="199:54"><literal type="number" pos:start="199:52" pos:end="199:54">256</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:87"><expr pos:start="201:17" pos:end="201:86"><call pos:start="201:17" pos:end="201:86"><name pos:start="201:17" pos:end="201:22">memcpy</name><argument_list pos:start="201:23" pos:end="201:86">(<argument pos:start="201:24" pos:end="201:42"><expr pos:start="201:24" pos:end="201:42"><name pos:start="201:24" pos:end="201:35"><name pos:start="201:24" pos:end="201:26">ctx</name><operator pos:start="201:27" pos:end="201:28">-&gt;</operator><name pos:start="201:29" pos:end="201:35">samples</name></name> <operator pos:start="201:37" pos:end="201:37">+</operator> <literal type="number" pos:start="201:39" pos:end="201:42">2048</literal></expr></argument>, <argument pos:start="201:45" pos:end="201:63"><expr pos:start="201:45" pos:end="201:63"><name pos:start="201:45" pos:end="201:56"><name pos:start="201:45" pos:end="201:47">ctx</name><operator pos:start="201:48" pos:end="201:49">-&gt;</operator><name pos:start="201:50" pos:end="201:56">samples</name></name> <operator pos:start="201:58" pos:end="201:58">+</operator> <literal type="number" pos:start="201:60" pos:end="201:63">1792</literal></expr></argument>, <argument pos:start="201:66" pos:end="201:85"><expr pos:start="201:66" pos:end="201:85"><literal type="number" pos:start="201:66" pos:end="201:68">256</literal> <operator pos:start="201:70" pos:end="201:70">*</operator> <sizeof pos:start="201:72" pos:end="201:85">sizeof <argument_list pos:start="201:79" pos:end="201:85">(<argument pos:start="201:80" pos:end="201:84"><expr pos:start="201:80" pos:end="201:84"><name pos:start="201:80" pos:end="201:84">float</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="203:17" pos:end="203:31"><expr pos:start="203:17" pos:end="203:30"><name pos:start="203:17" pos:end="203:23">samples</name> <operator pos:start="203:25" pos:end="203:26">+=</operator> <literal type="number" pos:start="203:28" pos:end="203:30">256</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:35"><expr pos:start="205:17" pos:end="205:34"><name pos:start="205:17" pos:end="205:27">out_samples</name> <operator pos:start="205:29" pos:end="205:30">+=</operator> <literal type="number" pos:start="205:32" pos:end="205:34">256</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <expr_stmt pos:start="213:5" pos:end="213:63"><expr pos:start="213:5" pos:end="213:62"><operator pos:start="213:5" pos:end="213:5">*</operator><name pos:start="213:6" pos:end="213:14">data_size</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">6</literal> <operator pos:start="213:20" pos:end="213:20">*</operator> <name pos:start="213:22" pos:end="213:37"><name pos:start="213:22" pos:end="213:24">ctx</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:29">bsi</name><operator pos:start="213:30" pos:end="213:30">.</operator><name pos:start="213:31" pos:end="213:37">nfchans</name></name> <operator pos:start="213:39" pos:end="213:39">*</operator> <literal type="number" pos:start="213:41" pos:end="213:43">256</literal> <operator pos:start="213:45" pos:end="213:45">*</operator> <sizeof pos:start="213:47" pos:end="213:62">sizeof <argument_list pos:start="213:54" pos:end="213:62">(<argument pos:start="213:55" pos:end="213:61"><expr pos:start="213:55" pos:end="213:61"><name pos:start="213:55" pos:end="213:61">int16_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <return pos:start="217:5" pos:end="217:36">return <expr pos:start="217:12" pos:end="217:35"><operator pos:start="217:12" pos:end="217:12">(</operator><name pos:start="217:13" pos:end="217:20">buf_size</name> <operator pos:start="217:22" pos:end="217:22">-</operator> <name pos:start="217:24" pos:end="217:34">frame_start</name><operator pos:start="217:35" pos:end="217:35">)</operator></expr>;</return>

</block_content>}</block></function>
</unit>
