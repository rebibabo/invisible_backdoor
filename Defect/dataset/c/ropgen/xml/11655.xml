<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11655.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">render_fragments</name><parameter_list pos:start="1:29" pos:end="9:65">(<parameter pos:start="1:30" pos:end="1:48"><decl pos:start="1:30" pos:end="1:48"><type pos:start="1:30" pos:end="1:48"><name pos:start="1:30" pos:end="1:45">Vp3DecodeContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:47">first_fragment</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:47"><decl pos:start="5:30" pos:end="5:47"><type pos:start="5:30" pos:end="5:47"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:47">fragment_width</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:48"><decl pos:start="7:30" pos:end="7:48"><type pos:start="7:30" pos:end="7:48"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:48">fragment_height</name></decl></parameter>,

                             <parameter pos:start="9:30" pos:end="9:38"><decl pos:start="9:30" pos:end="9:38"><type pos:start="9:30" pos:end="9:38"><name pos:start="9:30" pos:end="9:32">int</name></type> <name pos:start="9:34" pos:end="9:38">plane</name></decl></parameter> <comment type="block" pos:start="9:40" pos:end="9:64">/* 0 = Y, 1 = U, 2 = V */</comment>)</parameter_list> 

<block pos:start="11:1" pos:end="201:1">{<block_content pos:start="13:5" pos:end="197:13">

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">x</name></decl>, <decl pos:start="13:12" pos:end="13:12"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">m</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:26"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name> <init pos:start="17:11" pos:end="17:26">= <expr pos:start="17:13" pos:end="17:26"><name pos:start="17:13" pos:end="17:26">first_fragment</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:10"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">int16_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:24">dequantizer</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:30"><decl pos:start="23:5" pos:end="23:29"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">DCTELEM</name></type> <name pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:25">dequant_block</name><index pos:start="23:26" pos:end="23:29">[<expr pos:start="23:27" pos:end="23:28"><literal type="number" pos:start="23:27" pos:end="23:28">64</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:32"><decl pos:start="25:5" pos:end="25:31"><type pos:start="25:5" pos:end="25:19"><name pos:start="25:5" pos:end="25:12">unsigned</name> <name pos:start="25:14" pos:end="25:17">char</name> <modifier pos:start="25:19" pos:end="25:19">*</modifier></type><name pos:start="25:20" pos:end="25:31">output_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:30"><decl pos:start="27:5" pos:end="27:29"><type pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:12">unsigned</name> <name pos:start="27:14" pos:end="27:17">char</name> <modifier pos:start="27:19" pos:end="27:19">*</modifier></type><name pos:start="27:20" pos:end="27:29">last_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:32"><decl pos:start="29:5" pos:end="29:31"><type pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:12">unsigned</name> <name pos:start="29:14" pos:end="29:17">char</name> <modifier pos:start="29:19" pos:end="29:19">*</modifier></type><name pos:start="29:20" pos:end="29:31">golden_plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:15"><decl pos:start="31:5" pos:end="31:14"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:14">stride</name></decl>;</decl_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:73"><expr pos:start="35:5" pos:end="37:72"><call pos:start="35:5" pos:end="37:72"><name pos:start="35:5" pos:end="35:13">debug_vp3</name><argument_list pos:start="35:14" pos:end="37:72">(<argument pos:start="35:15" pos:end="35:57"><expr pos:start="35:15" pos:end="35:57"><literal type="string" pos:start="35:15" pos:end="35:57">"  vp3: rendering final fragments for %s\n"</literal></expr></argument>,

        <argument pos:start="37:9" pos:end="37:71"><expr pos:start="37:9" pos:end="37:71"><ternary pos:start="37:9" pos:end="37:71"><condition pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:20"><operator pos:start="37:9" pos:end="37:9">(</operator><name pos:start="37:10" pos:end="37:14">plane</name> <operator pos:start="37:16" pos:end="37:17">==</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal><operator pos:start="37:20" pos:end="37:20">)</operator></expr> ?</condition><then pos:start="37:24" pos:end="37:32"> <expr pos:start="37:24" pos:end="37:32"><literal type="string" pos:start="37:24" pos:end="37:32">"Y plane"</literal></expr> </then><else pos:start="37:34" pos:end="37:71">: <expr pos:start="37:36" pos:end="37:71"><ternary pos:start="37:36" pos:end="37:71"><condition pos:start="37:36" pos:end="37:49"><expr pos:start="37:36" pos:end="37:47"><operator pos:start="37:36" pos:end="37:36">(</operator><name pos:start="37:37" pos:end="37:41">plane</name> <operator pos:start="37:43" pos:end="37:44">==</operator> <literal type="number" pos:start="37:46" pos:end="37:46">1</literal><operator pos:start="37:47" pos:end="37:47">)</operator></expr> ?</condition><then pos:start="37:51" pos:end="37:59"> <expr pos:start="37:51" pos:end="37:59"><literal type="string" pos:start="37:51" pos:end="37:59">"U plane"</literal></expr> </then><else pos:start="37:61" pos:end="37:71">: <expr pos:start="37:63" pos:end="37:71"><literal type="string" pos:start="37:63" pos:end="37:71">"V plane"</literal></expr></else></ternary></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:42">/* set up plane-specific parameters */</comment>

    <if_stmt pos:start="43:5" pos:end="79:5"><if pos:start="43:5" pos:end="55:5">if <condition pos:start="43:8" pos:end="43:19">(<expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:13">plane</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>)</condition> <block pos:start="43:21" pos:end="55:5">{<block_content pos:start="45:9" pos:end="53:47">

        <expr_stmt pos:start="45:9" pos:end="45:41"><expr pos:start="45:9" pos:end="45:40"><name pos:start="45:9" pos:end="45:19">dequantizer</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <name pos:start="45:23" pos:end="45:40"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:40">intra_y_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:48"><expr pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:20">output_plane</name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:47"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:39">current_frame</name><operator pos:start="47:40" pos:end="47:40">.</operator><name pos:start="47:41" pos:end="47:44">data</name><index pos:start="47:45" pos:end="47:47">[<expr pos:start="47:46" pos:end="47:46"><literal type="number" pos:start="47:46" pos:end="47:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:18">last_plane</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <name pos:start="49:22" pos:end="49:45"><name pos:start="49:22" pos:end="49:22">s</name><operator pos:start="49:23" pos:end="49:24">-&gt;</operator><name pos:start="49:25" pos:end="49:37">current_frame</name><operator pos:start="49:38" pos:end="49:38">.</operator><name pos:start="49:39" pos:end="49:42">data</name><index pos:start="49:43" pos:end="49:45">[<expr pos:start="49:44" pos:end="49:44"><literal type="number" pos:start="49:44" pos:end="49:44">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:48"><expr pos:start="51:9" pos:end="51:47"><name pos:start="51:9" pos:end="51:20">golden_plane</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <name pos:start="51:24" pos:end="51:47"><name pos:start="51:24" pos:end="51:24">s</name><operator pos:start="51:25" pos:end="51:26">-&gt;</operator><name pos:start="51:27" pos:end="51:39">current_frame</name><operator pos:start="51:40" pos:end="51:40">.</operator><name pos:start="51:41" pos:end="51:44">data</name><index pos:start="51:45" pos:end="51:47">[<expr pos:start="51:46" pos:end="51:46"><literal type="number" pos:start="51:46" pos:end="51:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:47"><expr pos:start="53:9" pos:end="53:46"><name pos:start="53:9" pos:end="53:14">stride</name> <operator pos:start="53:16" pos:end="53:16">=</operator> <operator pos:start="53:18" pos:end="53:18">-</operator><name pos:start="53:19" pos:end="53:46"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:34">current_frame</name><operator pos:start="53:35" pos:end="53:35">.</operator><name pos:start="53:36" pos:end="53:43">linesize</name><index pos:start="53:44" pos:end="53:46">[<expr pos:start="53:45" pos:end="53:45"><literal type="number" pos:start="53:45" pos:end="53:45">0</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="55:7" pos:end="67:5">else if <condition pos:start="55:15" pos:end="55:26">(<expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:20">plane</name> <operator pos:start="55:22" pos:end="55:23">==</operator> <literal type="number" pos:start="55:25" pos:end="55:25">1</literal></expr>)</condition> <block pos:start="55:28" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:47">

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:19">dequantizer</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:40"><name pos:start="57:23" pos:end="57:23">s</name><operator pos:start="57:24" pos:end="57:25">-&gt;</operator><name pos:start="57:26" pos:end="57:40">intra_c_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:20">output_plane</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:47"><name pos:start="59:24" pos:end="59:24">s</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:39">current_frame</name><operator pos:start="59:40" pos:end="59:40">.</operator><name pos:start="59:41" pos:end="59:44">data</name><index pos:start="59:45" pos:end="59:47">[<expr pos:start="59:46" pos:end="59:46"><literal type="number" pos:start="59:46" pos:end="59:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:46"><expr pos:start="61:9" pos:end="61:45"><name pos:start="61:9" pos:end="61:18">last_plane</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:45"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:37">current_frame</name><operator pos:start="61:38" pos:end="61:38">.</operator><name pos:start="61:39" pos:end="61:42">data</name><index pos:start="61:43" pos:end="61:45">[<expr pos:start="61:44" pos:end="61:44"><literal type="number" pos:start="61:44" pos:end="61:44">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:48"><expr pos:start="63:9" pos:end="63:47"><name pos:start="63:9" pos:end="63:20">golden_plane</name> <operator pos:start="63:22" pos:end="63:22">=</operator> <name pos:start="63:24" pos:end="63:47"><name pos:start="63:24" pos:end="63:24">s</name><operator pos:start="63:25" pos:end="63:26">-&gt;</operator><name pos:start="63:27" pos:end="63:39">current_frame</name><operator pos:start="63:40" pos:end="63:40">.</operator><name pos:start="63:41" pos:end="63:44">data</name><index pos:start="63:45" pos:end="63:47">[<expr pos:start="63:46" pos:end="63:46"><literal type="number" pos:start="63:46" pos:end="63:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:47"><expr pos:start="65:9" pos:end="65:46"><name pos:start="65:9" pos:end="65:14">stride</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <operator pos:start="65:18" pos:end="65:18">-</operator><name pos:start="65:19" pos:end="65:46"><name pos:start="65:19" pos:end="65:19">s</name><operator pos:start="65:20" pos:end="65:21">-&gt;</operator><name pos:start="65:22" pos:end="65:34">current_frame</name><operator pos:start="65:35" pos:end="65:35">.</operator><name pos:start="65:36" pos:end="65:43">linesize</name><index pos:start="65:44" pos:end="65:46">[<expr pos:start="65:45" pos:end="65:45"><literal type="number" pos:start="65:45" pos:end="65:45">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="79:5">else <block pos:start="67:12" pos:end="79:5">{<block_content pos:start="69:9" pos:end="77:47">

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:19">dequantizer</name> <operator pos:start="69:21" pos:end="69:21">=</operator> <name pos:start="69:23" pos:end="69:40"><name pos:start="69:23" pos:end="69:23">s</name><operator pos:start="69:24" pos:end="69:25">-&gt;</operator><name pos:start="69:26" pos:end="69:40">intra_c_dequant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:48"><expr pos:start="71:9" pos:end="71:47"><name pos:start="71:9" pos:end="71:20">output_plane</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:47"><name pos:start="71:24" pos:end="71:24">s</name><operator pos:start="71:25" pos:end="71:26">-&gt;</operator><name pos:start="71:27" pos:end="71:39">current_frame</name><operator pos:start="71:40" pos:end="71:40">.</operator><name pos:start="71:41" pos:end="71:44">data</name><index pos:start="71:45" pos:end="71:47">[<expr pos:start="71:46" pos:end="71:46"><literal type="number" pos:start="71:46" pos:end="71:46">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:46"><expr pos:start="73:9" pos:end="73:45"><name pos:start="73:9" pos:end="73:18">last_plane</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:45"><name pos:start="73:22" pos:end="73:22">s</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:37">current_frame</name><operator pos:start="73:38" pos:end="73:38">.</operator><name pos:start="73:39" pos:end="73:42">data</name><index pos:start="73:43" pos:end="73:45">[<expr pos:start="73:44" pos:end="73:44"><literal type="number" pos:start="73:44" pos:end="73:44">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:48"><expr pos:start="75:9" pos:end="75:47"><name pos:start="75:9" pos:end="75:20">golden_plane</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <name pos:start="75:24" pos:end="75:47"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:39">current_frame</name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:44">data</name><index pos:start="75:45" pos:end="75:47">[<expr pos:start="75:46" pos:end="75:46"><literal type="number" pos:start="75:46" pos:end="75:46">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:47"><expr pos:start="77:9" pos:end="77:46"><name pos:start="77:9" pos:end="77:14">stride</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <operator pos:start="77:18" pos:end="77:18">-</operator><name pos:start="77:19" pos:end="77:46"><name pos:start="77:19" pos:end="77:19">s</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:34">current_frame</name><operator pos:start="77:35" pos:end="77:35">.</operator><name pos:start="77:36" pos:end="77:43">linesize</name><index pos:start="77:44" pos:end="77:46">[<expr pos:start="77:45" pos:end="77:45"><literal type="number" pos:start="77:45" pos:end="77:45">2</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:34">/* for each fragment row... */</comment>

    <for pos:start="85:5" pos:end="193:5">for <control pos:start="85:9" pos:end="85:41">(<init pos:start="85:10" pos:end="85:15"><expr pos:start="85:10" pos:end="85:14"><name pos:start="85:10" pos:end="85:10">y</name> <operator pos:start="85:12" pos:end="85:12">=</operator> <literal type="number" pos:start="85:14" pos:end="85:14">0</literal></expr>;</init> <condition pos:start="85:17" pos:end="85:36"><expr pos:start="85:17" pos:end="85:35"><name pos:start="85:17" pos:end="85:17">y</name> <operator pos:start="85:19" pos:end="85:19">&lt;</operator> <name pos:start="85:21" pos:end="85:35">fragment_height</name></expr>;</condition> <incr pos:start="85:38" pos:end="85:40"><expr pos:start="85:38" pos:end="85:40"><name pos:start="85:38" pos:end="85:38">y</name><operator pos:start="85:39" pos:end="85:40">++</operator></expr></incr>)</control> <block pos:start="85:43" pos:end="193:5">{<block_content pos:start="91:9" pos:end="191:9">



        <comment type="block" pos:start="89:9" pos:end="89:43">/* for each fragment in a row... */</comment>

        <for pos:start="91:9" pos:end="191:9">for <control pos:start="91:13" pos:end="91:49">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">x</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:39"><expr pos:start="91:21" pos:end="91:38"><name pos:start="91:21" pos:end="91:21">x</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:38">fragment_width</name></expr>;</condition> <incr pos:start="91:41" pos:end="91:48"><expr pos:start="91:41" pos:end="91:43"><name pos:start="91:41" pos:end="91:41">x</name><operator pos:start="91:42" pos:end="91:43">++</operator></expr><operator pos:start="91:44" pos:end="91:44">,</operator> <expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:46">i</name><operator pos:start="91:47" pos:end="91:48">++</operator></expr></incr>)</control> <block pos:start="91:51" pos:end="191:9">{<block_content pos:start="97:13" pos:end="189:13">



            <comment type="block" pos:start="95:13" pos:end="95:51">/* transform if this block was coded */</comment>

            <if_stmt pos:start="97:13" pos:end="189:13"><if pos:start="97:13" pos:end="163:13">if <condition pos:start="97:16" pos:end="97:64">(<expr pos:start="97:17" pos:end="97:63"><name pos:start="97:17" pos:end="97:35"><name pos:start="97:17" pos:end="97:17">s</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:32">all_fragments</name><index pos:start="97:33" pos:end="97:35">[<expr pos:start="97:34" pos:end="97:34"><name pos:start="97:34" pos:end="97:34">i</name></expr>]</index></name><operator pos:start="97:36" pos:end="97:36">.</operator><name pos:start="97:37" pos:end="97:49">coding_method</name> <operator pos:start="97:51" pos:end="97:52">==</operator> <name pos:start="97:54" pos:end="97:63">MODE_INTRA</name></expr>)</condition> <block pos:start="97:66" pos:end="163:13">{<block_content pos:start="101:17" pos:end="139:43">

                <comment type="block" pos:start="99:17" pos:end="99:53">/* dequantize the DCT coefficients */</comment>

                <for pos:start="101:17" pos:end="107:39">for <control pos:start="101:21" pos:end="101:40">(<init pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:26"><name pos:start="101:22" pos:end="101:22">j</name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</init> <condition pos:start="101:29" pos:end="101:35"><expr pos:start="101:29" pos:end="101:34"><name pos:start="101:29" pos:end="101:29">j</name> <operator pos:start="101:31" pos:end="101:31">&lt;</operator> <literal type="number" pos:start="101:33" pos:end="101:34">64</literal></expr>;</condition> <incr pos:start="101:37" pos:end="101:39"><expr pos:start="101:37" pos:end="101:39"><name pos:start="101:37" pos:end="101:37">j</name><operator pos:start="101:38" pos:end="101:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="103:21" pos:end="107:39"><block_content pos:start="103:21" pos:end="107:39">

                    <expr_stmt pos:start="103:21" pos:end="107:39"><expr pos:start="103:21" pos:end="107:38"><name pos:start="103:21" pos:end="103:51"><name pos:start="103:21" pos:end="103:33">dequant_block</name><index pos:start="103:34" pos:end="103:51">[<expr pos:start="103:35" pos:end="103:50"><name pos:start="103:35" pos:end="103:50"><name pos:start="103:35" pos:end="103:47">dequant_index</name><index pos:start="103:48" pos:end="103:50">[<expr pos:start="103:49" pos:end="103:49"><name pos:start="103:49" pos:end="103:49">j</name></expr>]</index></name></expr>]</index></name> <operator pos:start="103:53" pos:end="103:53">=</operator>

                        <name pos:start="105:25" pos:end="105:43"><name pos:start="105:25" pos:end="105:25">s</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:40">all_fragments</name><index pos:start="105:41" pos:end="105:43">[<expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">i</name></expr>]</index></name><operator pos:start="105:44" pos:end="105:44">.</operator><name pos:start="105:45" pos:end="105:53"><name pos:start="105:45" pos:end="105:50">coeffs</name><index pos:start="105:51" pos:end="105:53">[<expr pos:start="105:52" pos:end="105:52"><name pos:start="105:52" pos:end="105:52">j</name></expr>]</index></name> <operator pos:start="105:55" pos:end="105:55">*</operator>

                        <name pos:start="107:25" pos:end="107:38"><name pos:start="107:25" pos:end="107:35">dequantizer</name><index pos:start="107:36" pos:end="107:38">[<expr pos:start="107:37" pos:end="107:37"><name pos:start="107:37" pos:end="107:37">j</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="109:17" pos:end="109:41"><expr pos:start="109:17" pos:end="109:40"><name pos:start="109:17" pos:end="109:32"><name pos:start="109:17" pos:end="109:29">dequant_block</name><index pos:start="109:30" pos:end="109:32">[<expr pos:start="109:31" pos:end="109:31"><literal type="number" pos:start="109:31" pos:end="109:31">0</literal></expr>]</index></name> <operator pos:start="109:34" pos:end="109:35">+=</operator> <literal type="number" pos:start="109:37" pos:end="109:40">1024</literal></expr>;</expr_stmt>



                <expr_stmt pos:start="113:17" pos:end="113:48"><expr pos:start="113:17" pos:end="113:47"><call pos:start="113:17" pos:end="113:47"><name pos:start="113:17" pos:end="113:26">debug_idct</name><argument_list pos:start="113:27" pos:end="113:47">(<argument pos:start="113:28" pos:end="113:43"><expr pos:start="113:28" pos:end="113:43"><literal type="string" pos:start="113:28" pos:end="113:43">"fragment %d:\n"</literal></expr></argument>, <argument pos:start="113:46" pos:end="113:46"><expr pos:start="113:46" pos:end="113:46"><name pos:start="113:46" pos:end="113:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:51"><expr pos:start="115:17" pos:end="115:50"><call pos:start="115:17" pos:end="115:50"><name pos:start="115:17" pos:end="115:26">debug_idct</name><argument_list pos:start="115:27" pos:end="115:50">(<argument pos:start="115:28" pos:end="115:49"><expr pos:start="115:28" pos:end="115:49"><literal type="string" pos:start="115:28" pos:end="115:49">"dequantized block:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="117:17" pos:end="127:17">for <control pos:start="117:21" pos:end="117:39">(<init pos:start="117:22" pos:end="117:27"><expr pos:start="117:22" pos:end="117:26"><name pos:start="117:22" pos:end="117:22">m</name> <operator pos:start="117:24" pos:end="117:24">=</operator> <literal type="number" pos:start="117:26" pos:end="117:26">0</literal></expr>;</init> <condition pos:start="117:29" pos:end="117:34"><expr pos:start="117:29" pos:end="117:33"><name pos:start="117:29" pos:end="117:29">m</name> <operator pos:start="117:31" pos:end="117:31">&lt;</operator> <literal type="number" pos:start="117:33" pos:end="117:33">8</literal></expr>;</condition> <incr pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><name pos:start="117:36" pos:end="117:36">m</name><operator pos:start="117:37" pos:end="117:38">++</operator></expr></incr>)</control> <block pos:start="117:41" pos:end="127:17">{<block_content pos:start="119:21" pos:end="125:37">

                    <for pos:start="119:21" pos:end="123:21">for <control pos:start="119:25" pos:end="119:43">(<init pos:start="119:26" pos:end="119:31"><expr pos:start="119:26" pos:end="119:30"><name pos:start="119:26" pos:end="119:26">n</name> <operator pos:start="119:28" pos:end="119:28">=</operator> <literal type="number" pos:start="119:30" pos:end="119:30">0</literal></expr>;</init> <condition pos:start="119:33" pos:end="119:38"><expr pos:start="119:33" pos:end="119:37"><name pos:start="119:33" pos:end="119:33">n</name> <operator pos:start="119:35" pos:end="119:35">&lt;</operator> <literal type="number" pos:start="119:37" pos:end="119:37">8</literal></expr>;</condition> <incr pos:start="119:40" pos:end="119:42"><expr pos:start="119:40" pos:end="119:42"><name pos:start="119:40" pos:end="119:40">n</name><operator pos:start="119:41" pos:end="119:42">++</operator></expr></incr>)</control> <block pos:start="119:45" pos:end="123:21">{<block_content pos:start="121:25" pos:end="121:69">

                        <expr_stmt pos:start="121:25" pos:end="121:69"><expr pos:start="121:25" pos:end="121:68"><call pos:start="121:25" pos:end="121:68"><name pos:start="121:25" pos:end="121:34">debug_idct</name><argument_list pos:start="121:35" pos:end="121:68">(<argument pos:start="121:36" pos:end="121:41"><expr pos:start="121:36" pos:end="121:41"><literal type="string" pos:start="121:36" pos:end="121:41">" %5d"</literal></expr></argument>, <argument pos:start="121:44" pos:end="121:67"><expr pos:start="121:44" pos:end="121:67"><name pos:start="121:44" pos:end="121:67"><name pos:start="121:44" pos:end="121:56">dequant_block</name><index pos:start="121:57" pos:end="121:67">[<expr pos:start="121:58" pos:end="121:66"><name pos:start="121:58" pos:end="121:58">m</name> <operator pos:start="121:60" pos:end="121:60">*</operator> <literal type="number" pos:start="121:62" pos:end="121:64">8</literal> <operator pos:start="121:64" pos:end="121:64">+</operator> <name pos:start="121:66" pos:end="121:66">n</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="125:21" pos:end="125:37"><expr pos:start="125:21" pos:end="125:36"><call pos:start="125:21" pos:end="125:36"><name pos:start="125:21" pos:end="125:30">debug_idct</name><argument_list pos:start="125:31" pos:end="125:36">(<argument pos:start="125:32" pos:end="125:35"><expr pos:start="125:32" pos:end="125:35"><literal type="string" pos:start="125:32" pos:end="125:35">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <expr_stmt pos:start="129:17" pos:end="129:33"><expr pos:start="129:17" pos:end="129:32"><call pos:start="129:17" pos:end="129:32"><name pos:start="129:17" pos:end="129:26">debug_idct</name><argument_list pos:start="129:27" pos:end="129:32">(<argument pos:start="129:28" pos:end="129:31"><expr pos:start="129:28" pos:end="129:31"><literal type="string" pos:start="129:28" pos:end="129:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="133:17" pos:end="133:58">/* invert DCT and place in final output */</comment>

                <expr_stmt pos:start="135:17" pos:end="139:43"><expr pos:start="135:17" pos:end="139:42"><call pos:start="135:17" pos:end="139:42"><name pos:start="135:17" pos:end="135:31"><name pos:start="135:17" pos:end="135:17">s</name><operator pos:start="135:18" pos:end="135:19">-&gt;</operator><name pos:start="135:20" pos:end="135:22">dsp</name><operator pos:start="135:23" pos:end="135:23">.</operator><name pos:start="135:24" pos:end="135:31">idct_put</name></name><argument_list pos:start="135:32" pos:end="139:42">(

                    <argument pos:start="137:21" pos:end="137:66"><expr pos:start="137:21" pos:end="137:66"><name pos:start="137:21" pos:end="137:32">output_plane</name> <operator pos:start="137:34" pos:end="137:34">+</operator> <name pos:start="137:36" pos:end="137:54"><name pos:start="137:36" pos:end="137:36">s</name><operator pos:start="137:37" pos:end="137:38">-&gt;</operator><name pos:start="137:39" pos:end="137:51">all_fragments</name><index pos:start="137:52" pos:end="137:54">[<expr pos:start="137:53" pos:end="137:53"><name pos:start="137:53" pos:end="137:53">i</name></expr>]</index></name><operator pos:start="137:55" pos:end="137:55">.</operator><name pos:start="137:56" pos:end="137:66">first_pixel</name></expr></argument>,

                    <argument pos:start="139:21" pos:end="139:26"><expr pos:start="139:21" pos:end="139:26"><name pos:start="139:21" pos:end="139:26">stride</name></expr></argument>, <argument pos:start="139:29" pos:end="139:41"><expr pos:start="139:29" pos:end="139:41"><name pos:start="139:29" pos:end="139:41">dequant_block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<comment type="block" pos:start="143:1" pos:end="161:2">/*

                debug_idct("idct block:\n");

                for (m = 0; m &lt; 8; m++) {

                    for (n = 0; n &lt; 8; n++) {

                        debug_idct(" %3d", pixels[m * 8 + n]);

                    }

                    debug_idct("\n");

                }

                debug_idct("\n");

*/</comment>

            </block_content>}</block></if> <if type="elseif" pos:start="163:15" pos:end="181:13">else if <condition pos:start="163:23" pos:end="163:70">(<expr pos:start="163:24" pos:end="163:69"><name pos:start="163:24" pos:end="163:42"><name pos:start="163:24" pos:end="163:24">s</name><operator pos:start="163:25" pos:end="163:26">-&gt;</operator><name pos:start="163:27" pos:end="163:39">all_fragments</name><index pos:start="163:40" pos:end="163:42">[<expr pos:start="163:41" pos:end="163:41"><name pos:start="163:41" pos:end="163:41">i</name></expr>]</index></name><operator pos:start="163:43" pos:end="163:43">.</operator><name pos:start="163:44" pos:end="163:56">coding_method</name> <operator pos:start="163:58" pos:end="163:59">==</operator> <name pos:start="163:61" pos:end="163:69">MODE_COPY</name></expr>)</condition> <block pos:start="163:72" pos:end="181:13">{<block_content pos:start="169:17" pos:end="177:27">



                <comment type="block" pos:start="167:17" pos:end="167:59">/* copy directly from the previous frame */</comment>

                <for pos:start="169:17" pos:end="177:27">for <control pos:start="169:21" pos:end="169:39">(<init pos:start="169:22" pos:end="169:27"><expr pos:start="169:22" pos:end="169:26"><name pos:start="169:22" pos:end="169:22">m</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="number" pos:start="169:26" pos:end="169:26">0</literal></expr>;</init> <condition pos:start="169:29" pos:end="169:34"><expr pos:start="169:29" pos:end="169:33"><name pos:start="169:29" pos:end="169:29">m</name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <literal type="number" pos:start="169:33" pos:end="169:33">8</literal></expr>;</condition> <incr pos:start="169:36" pos:end="169:38"><expr pos:start="169:36" pos:end="169:38"><name pos:start="169:36" pos:end="169:36">m</name><operator pos:start="169:37" pos:end="169:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="171:21" pos:end="177:27"><block_content pos:start="171:21" pos:end="177:27">

                    <expr_stmt pos:start="171:21" pos:end="177:27"><expr pos:start="171:21" pos:end="177:26"><call pos:start="171:21" pos:end="177:26"><name pos:start="171:21" pos:end="171:26">memcpy</name><argument_list pos:start="171:27" pos:end="177:26">(

                        <argument pos:start="173:25" pos:end="173:83"><expr pos:start="173:25" pos:end="173:83"><name pos:start="173:25" pos:end="173:36">output_plane</name> <operator pos:start="173:38" pos:end="173:38">+</operator> <name pos:start="173:40" pos:end="173:58"><name pos:start="173:40" pos:end="173:40">s</name><operator pos:start="173:41" pos:end="173:42">-&gt;</operator><name pos:start="173:43" pos:end="173:55">all_fragments</name><index pos:start="173:56" pos:end="173:58">[<expr pos:start="173:57" pos:end="173:57"><name pos:start="173:57" pos:end="173:57">i</name></expr>]</index></name><operator pos:start="173:59" pos:end="173:59">.</operator><name pos:start="173:60" pos:end="173:70">first_pixel</name> <operator pos:start="173:72" pos:end="173:72">+</operator> <name pos:start="173:74" pos:end="173:79">stride</name> <operator pos:start="173:81" pos:end="173:81">*</operator> <name pos:start="173:83" pos:end="173:83">m</name></expr></argument>,

                        <argument pos:start="175:25" pos:end="175:81"><expr pos:start="175:25" pos:end="175:81"><name pos:start="175:25" pos:end="175:34">last_plane</name> <operator pos:start="175:36" pos:end="175:36">+</operator> <name pos:start="175:38" pos:end="175:56"><name pos:start="175:38" pos:end="175:38">s</name><operator pos:start="175:39" pos:end="175:40">-&gt;</operator><name pos:start="175:41" pos:end="175:53">all_fragments</name><index pos:start="175:54" pos:end="175:56">[<expr pos:start="175:55" pos:end="175:55"><name pos:start="175:55" pos:end="175:55">i</name></expr>]</index></name><operator pos:start="175:57" pos:end="175:57">.</operator><name pos:start="175:58" pos:end="175:68">first_pixel</name> <operator pos:start="175:70" pos:end="175:70">+</operator> <name pos:start="175:72" pos:end="175:77">stride</name> <operator pos:start="175:79" pos:end="175:79">*</operator> <name pos:start="175:81" pos:end="175:81">m</name></expr></argument>,

                        <argument pos:start="177:25" pos:end="177:25"><expr pos:start="177:25" pos:end="177:25"><literal type="number" pos:start="177:25" pos:end="177:25">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            </block_content>}</block></if> <else pos:start="181:15" pos:end="189:13">else <block pos:start="181:20" pos:end="189:13">{<block_content>



                <comment type="block" pos:start="185:17" pos:end="185:55">/* carry out the motion compensation */</comment>



            </block_content>}</block></else></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="197:5" pos:end="197:13"><expr pos:start="197:5" pos:end="197:12"><call pos:start="197:5" pos:end="197:12"><name pos:start="197:5" pos:end="197:10">emms_c</name><argument_list pos:start="197:11" pos:end="197:12">()</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
