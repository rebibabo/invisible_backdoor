<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/7891.c" pos:tabs="8"><function pos:start="1:1" pos:end="491:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">decode_simple_internal</name><parameter_list pos:start="1:34" pos:end="1:72">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:64">AVFrame</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:71">frame</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="491:1">{<block_content pos:start="5:5" pos:end="489:29">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:45"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:19">AVCodecInternal</name>   <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:27">avci</name> <init pos:start="5:29" pos:end="5:45">= <expr pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:35">avctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:45">internal</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">DecodeSimpleContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:27">ds</name> <init pos:start="7:29" pos:end="7:39">= <expr pos:start="7:31" pos:end="7:39"><operator pos:start="7:31" pos:end="7:31">&amp;</operator><name pos:start="7:32" pos:end="7:39"><name pos:start="7:32" pos:end="7:35">avci</name><operator pos:start="7:36" pos:end="7:37">-&gt;</operator><name pos:start="7:38" pos:end="7:39">ds</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:12">AVPacket</name>           <modifier pos:start="9:24" pos:end="9:24">*</modifier></type><name pos:start="9:25" pos:end="9:27">pkt</name> <init pos:start="9:29" pos:end="9:40">= <expr pos:start="9:31" pos:end="9:40"><name pos:start="9:31" pos:end="9:40"><name pos:start="9:31" pos:end="9:32">ds</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:40">in_pkt</name></name></expr></init></decl>;</decl_stmt>

    <comment type="line" pos:start="11:5" pos:end="11:42">// copy to ensure we do not change pkt</comment>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:47"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">got_frame</name></decl>, <decl pos:start="15:20" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:35">actual_got_frame</name></decl>, <decl pos:start="15:38" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:38" pos:end="15:46">did_split</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:12"><decl pos:start="17:5" pos:end="17:11"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="31:5"><if pos:start="21:5" pos:end="31:5">if <condition pos:start="21:8" pos:end="21:38">(<expr pos:start="21:9" pos:end="21:37"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:12">pkt</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:18">data</name></name> <operator pos:start="21:20" pos:end="21:21">&amp;&amp;</operator> <operator pos:start="21:23" pos:end="21:23">!</operator><name pos:start="21:24" pos:end="21:37"><name pos:start="21:24" pos:end="21:27">avci</name><operator pos:start="21:28" pos:end="21:29">-&gt;</operator><name pos:start="21:30" pos:end="21:37">draining</name></name></expr>)</condition> <block pos:start="21:40" pos:end="31:5">{<block_content pos:start="23:9" pos:end="29:23">

        <expr_stmt pos:start="23:9" pos:end="23:29"><expr pos:start="23:9" pos:end="23:28"><call pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:23">av_packet_unref</name><argument_list pos:start="23:24" pos:end="23:28">(<argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:47"><expr pos:start="25:9" pos:end="25:46"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:46"><name pos:start="25:15" pos:end="25:34">ff_decode_get_packet</name><argument_list pos:start="25:35" pos:end="25:46">(<argument pos:start="25:36" pos:end="25:40"><expr pos:start="25:36" pos:end="25:40"><name pos:start="25:36" pos:end="25:40">avctx</name></expr></argument>, <argument pos:start="25:43" pos:end="25:45"><expr pos:start="25:43" pos:end="25:45"><name pos:start="25:43" pos:end="25:45">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:23"><if pos:start="27:9" pos:end="29:23">if <condition pos:start="27:12" pos:end="27:42">(<expr pos:start="27:13" pos:end="27:41"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">&lt;</operator> <literal type="number" pos:start="27:19" pos:end="27:19">0</literal> <operator pos:start="27:21" pos:end="27:22">&amp;&amp;</operator> <name pos:start="27:24" pos:end="27:26">ret</name> <operator pos:start="27:28" pos:end="27:29">!=</operator> <name pos:start="27:31" pos:end="27:41">AVERROR_EOF</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:23"><block_content pos:start="29:13" pos:end="29:23">

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="35:5" pos:end="35:80">// Some codecs (at least wma lossless) will crash when feeding drain packets</comment>

    <comment type="line" pos:start="37:5" pos:end="37:30">// after EOF was signaled.</comment>

    <if_stmt pos:start="39:5" pos:end="41:27"><if pos:start="39:5" pos:end="41:27">if <condition pos:start="39:8" pos:end="39:28">(<expr pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:12">avci</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:27">draining_done</name></name></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:27"><block_content pos:start="41:9" pos:end="41:27">

        <return pos:start="41:9" pos:end="41:27">return <expr pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="51:27"><if pos:start="45:5" pos:end="51:27">if <condition pos:start="45:8" pos:end="49:55">(<expr pos:start="45:9" pos:end="49:54"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:12">pkt</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:18">data</name></name> <operator pos:start="45:20" pos:end="45:21">&amp;&amp;</operator>

        <operator pos:start="47:9" pos:end="47:9">!</operator><operator pos:start="47:10" pos:end="47:10">(</operator><name pos:start="47:11" pos:end="47:36"><name pos:start="47:11" pos:end="47:15">avctx</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:22">codec</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:36">capabilities</name></name> <operator pos:start="47:38" pos:end="47:38">&amp;</operator> <name pos:start="47:40" pos:end="47:57">AV_CODEC_CAP_DELAY</name> <operator pos:start="47:59" pos:end="47:60">||</operator>

          <name pos:start="49:11" pos:end="49:35"><name pos:start="49:11" pos:end="49:15">avctx</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:35">active_thread_type</name></name> <operator pos:start="49:37" pos:end="49:37">&amp;</operator> <name pos:start="49:39" pos:end="49:53">FF_THREAD_FRAME</name><operator pos:start="49:54" pos:end="49:54">)</operator></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:27"><block_content pos:start="51:9" pos:end="51:27">

        <return pos:start="51:9" pos:end="51:27">return <expr pos:start="51:16" pos:end="51:26"><name pos:start="51:16" pos:end="51:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="58:0"><expr pos:start="55:5" pos:end="55:14"><name pos:start="55:5" pos:end="55:7">tmp</name> <operator pos:start="55:9" pos:end="55:9">=</operator> <operator pos:start="55:11" pos:end="55:11">*</operator><name pos:start="55:12" pos:end="55:14">pkt</name></expr>;</expr_stmt>

<cpp:if pos:start="57:1" pos:end="57:19">#<cpp:directive pos:start="57:2" pos:end="57:3">if</cpp:directive> <expr pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:19">FF_API_MERGE_SD</name></expr></cpp:if>

<decl_stmt pos:start="59:1" pos:end="61:48"><decl pos:start="59:1" pos:end="61:47"><type pos:start="59:1" pos:end="59:31"><name pos:start="59:1" pos:end="59:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="61:5" pos:end="61:13">did_split</name> <init pos:start="61:15" pos:end="61:47">= <expr pos:start="61:17" pos:end="61:47"><call pos:start="61:17" pos:end="61:47"><name pos:start="61:17" pos:end="61:41">av_packet_split_side_data</name><argument_list pos:start="61:42" pos:end="61:47">(<argument pos:start="61:43" pos:end="61:46"><expr pos:start="61:43" pos:end="61:46"><operator pos:start="61:43" pos:end="61:43">&amp;</operator><name pos:start="61:44" pos:end="61:46">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="65:5" pos:end="81:5"><if pos:start="65:5" pos:end="81:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:17">did_split</name></expr>)</condition> <block pos:start="65:20" pos:end="81:5">{<block_content pos:start="67:9" pos:end="79:23">

        <expr_stmt pos:start="67:9" pos:end="67:58"><expr pos:start="67:9" pos:end="67:57"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:57"><name pos:start="67:15" pos:end="67:34">extract_packet_props</name><argument_list pos:start="67:35" pos:end="67:57">(<argument pos:start="67:36" pos:end="67:50"><expr pos:start="67:36" pos:end="67:50"><name pos:start="67:36" pos:end="67:50"><name pos:start="67:36" pos:end="67:40">avctx</name><operator pos:start="67:41" pos:end="67:42">-&gt;</operator><name pos:start="67:43" pos:end="67:50">internal</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:56"><expr pos:start="67:53" pos:end="67:56"><operator pos:start="67:53" pos:end="67:53">&amp;</operator><name pos:start="67:54" pos:end="67:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:15">ret</name> <operator pos:start="69:17" pos:end="69:17">&lt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:45"><name pos:start="75:15" pos:end="75:32">apply_param_change</name><argument_list pos:start="75:33" pos:end="75:45">(<argument pos:start="75:34" pos:end="75:38"><expr pos:start="75:34" pos:end="75:38"><name pos:start="75:34" pos:end="75:38">avctx</name></expr></argument>, <argument pos:start="75:41" pos:end="75:44"><expr pos:start="75:41" pos:end="75:44"><operator pos:start="75:41" pos:end="75:41">&amp;</operator><name pos:start="75:42" pos:end="75:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="79:23"><if pos:start="77:9" pos:end="79:23">if <condition pos:start="77:12" pos:end="77:20">(<expr pos:start="77:13" pos:end="77:19"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:17">&lt;</operator> <literal type="number" pos:start="77:19" pos:end="77:19">0</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:23"><block_content pos:start="79:13" pos:end="79:23">

            <return pos:start="79:13" pos:end="79:23">return <expr pos:start="79:20" pos:end="79:22"><name pos:start="79:20" pos:end="79:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<decl_stmt pos:start="83:1" pos:end="89:18"><decl pos:start="83:1" pos:end="89:17"><type pos:start="83:1" pos:end="86:0"><name pos:start="83:1" pos:end="86:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="85:1" pos:end="85:6">#<cpp:directive pos:start="85:2" pos:end="85:6">endif</cpp:directive></cpp:endif>



    <name pos:start="89:5" pos:end="89:13">got_frame</name> <init pos:start="89:15" pos:end="89:17">= <expr pos:start="89:17" pos:end="89:17"><literal type="number" pos:start="89:17" pos:end="89:17">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="93:5" pos:end="131:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:68">(<expr pos:start="93:9" pos:end="93:67"><name pos:start="93:9" pos:end="93:20">HAVE_THREADS</name> <operator pos:start="93:22" pos:end="93:23">&amp;&amp;</operator> <name pos:start="93:25" pos:end="93:49"><name pos:start="93:25" pos:end="93:29">avctx</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:49">active_thread_type</name></name> <operator pos:start="93:51" pos:end="93:51">&amp;</operator> <name pos:start="93:53" pos:end="93:67">FF_THREAD_FRAME</name></expr>)</condition> <block pos:start="93:70" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:69">

        <expr_stmt pos:start="95:9" pos:end="95:69"><expr pos:start="95:9" pos:end="95:68"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <call pos:start="95:15" pos:end="95:68"><name pos:start="95:15" pos:end="95:36">ff_thread_decode_frame</name><argument_list pos:start="95:37" pos:end="95:68">(<argument pos:start="95:38" pos:end="95:42"><expr pos:start="95:38" pos:end="95:42"><name pos:start="95:38" pos:end="95:42">avctx</name></expr></argument>, <argument pos:start="95:45" pos:end="95:49"><expr pos:start="95:45" pos:end="95:49"><name pos:start="95:45" pos:end="95:49">frame</name></expr></argument>, <argument pos:start="95:52" pos:end="95:61"><expr pos:start="95:52" pos:end="95:61"><operator pos:start="95:52" pos:end="95:52">&amp;</operator><name pos:start="95:53" pos:end="95:61">got_frame</name></expr></argument>, <argument pos:start="95:64" pos:end="95:67"><expr pos:start="95:64" pos:end="95:67"><operator pos:start="95:64" pos:end="95:64">&amp;</operator><name pos:start="95:65" pos:end="95:67">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="97:7" pos:end="131:5">else <block pos:start="97:12" pos:end="131:5">{<block_content pos:start="99:9" pos:end="129:9">

        <expr_stmt pos:start="99:9" pos:end="99:67"><expr pos:start="99:9" pos:end="99:66"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">=</operator> <call pos:start="99:15" pos:end="99:66"><name pos:start="99:15" pos:end="99:34"><name pos:start="99:15" pos:end="99:19">avctx</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:26">codec</name><operator pos:start="99:27" pos:end="99:28">-&gt;</operator><name pos:start="99:29" pos:end="99:34">decode</name></name><argument_list pos:start="99:35" pos:end="99:66">(<argument pos:start="99:36" pos:end="99:40"><expr pos:start="99:36" pos:end="99:40"><name pos:start="99:36" pos:end="99:40">avctx</name></expr></argument>, <argument pos:start="99:43" pos:end="99:47"><expr pos:start="99:43" pos:end="99:47"><name pos:start="99:43" pos:end="99:47">frame</name></expr></argument>, <argument pos:start="99:50" pos:end="99:59"><expr pos:start="99:50" pos:end="99:59"><operator pos:start="99:50" pos:end="99:50">&amp;</operator><name pos:start="99:51" pos:end="99:59">got_frame</name></expr></argument>, <argument pos:start="99:62" pos:end="99:65"><expr pos:start="99:62" pos:end="99:65"><operator pos:start="99:62" pos:end="99:62">&amp;</operator><name pos:start="99:63" pos:end="99:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="103:9" pos:end="105:38"><if pos:start="103:9" pos:end="105:38">if <condition pos:start="103:12" pos:end="103:71">(<expr pos:start="103:13" pos:end="103:70"><operator pos:start="103:13" pos:end="103:13">!</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:41"><name pos:start="103:15" pos:end="103:19">avctx</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:26">codec</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:41">caps_internal</name></name> <operator pos:start="103:43" pos:end="103:43">&amp;</operator> <name pos:start="103:45" pos:end="103:69">FF_CODEC_CAP_SETS_PKT_DTS</name><operator pos:start="103:70" pos:end="103:70">)</operator></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:38"><block_content pos:start="105:13" pos:end="105:38">

            <expr_stmt pos:start="105:13" pos:end="105:38"><expr pos:start="105:13" pos:end="105:37"><name pos:start="105:13" pos:end="105:26"><name pos:start="105:13" pos:end="105:17">frame</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:26">pkt_dts</name></name> <operator pos:start="105:28" pos:end="105:28">=</operator> <name pos:start="105:30" pos:end="105:37"><name pos:start="105:30" pos:end="105:32">pkt</name><operator pos:start="105:33" pos:end="105:34">-&gt;</operator><name pos:start="105:35" pos:end="105:37">dts</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="129:9"><if pos:start="107:9" pos:end="129:9">if <condition pos:start="107:12" pos:end="107:53">(<expr pos:start="107:13" pos:end="107:52"><name pos:start="107:13" pos:end="107:30"><name pos:start="107:13" pos:end="107:17">avctx</name><operator pos:start="107:18" pos:end="107:19">-&gt;</operator><name pos:start="107:20" pos:end="107:24">codec</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:30">type</name></name> <operator pos:start="107:32" pos:end="107:33">==</operator> <name pos:start="107:35" pos:end="107:52">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="107:55" pos:end="129:9">{<block_content pos:start="109:13" pos:end="127:13">

            <if_stmt pos:start="109:13" pos:end="111:42"><if pos:start="109:13" pos:end="111:42">if<condition pos:start="109:15" pos:end="109:36">(<expr pos:start="109:16" pos:end="109:35"><operator pos:start="109:16" pos:end="109:16">!</operator><name pos:start="109:17" pos:end="109:35"><name pos:start="109:17" pos:end="109:21">avctx</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:35">has_b_frames</name></name></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:42"><block_content pos:start="111:17" pos:end="111:42">

                <expr_stmt pos:start="111:17" pos:end="111:42"><expr pos:start="111:17" pos:end="111:41"><name pos:start="111:17" pos:end="111:30"><name pos:start="111:17" pos:end="111:21">frame</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:30">pkt_pos</name></name> <operator pos:start="111:32" pos:end="111:32">=</operator> <name pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:36">pkt</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:41">pos</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="line" pos:start="113:13" pos:end="113:66">//FIXME these should be under if(!avctx-&gt;has_b_frames)</comment>

            <comment type="block" pos:start="115:13" pos:end="115:64">/* get_buffer is supposed to set frame parameters */</comment>

            <if_stmt pos:start="117:13" pos:end="127:13"><if pos:start="117:13" pos:end="127:13">if <condition pos:start="117:16" pos:end="117:65">(<expr pos:start="117:17" pos:end="117:64"><operator pos:start="117:17" pos:end="117:17">!</operator><operator pos:start="117:18" pos:end="117:18">(</operator><name pos:start="117:19" pos:end="117:44"><name pos:start="117:19" pos:end="117:23">avctx</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:30">codec</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:44">capabilities</name></name> <operator pos:start="117:46" pos:end="117:46">&amp;</operator> <name pos:start="117:48" pos:end="117:63">AV_CODEC_CAP_DR1</name><operator pos:start="117:64" pos:end="117:64">)</operator></expr>)</condition> <block pos:start="117:67" pos:end="127:13">{<block_content pos:start="119:17" pos:end="125:98">

                <if_stmt pos:start="119:17" pos:end="119:110"><if pos:start="119:17" pos:end="119:110">if <condition pos:start="119:20" pos:end="119:52">(<expr pos:start="119:21" pos:end="119:51"><operator pos:start="119:21" pos:end="119:21">!</operator><name pos:start="119:22" pos:end="119:51"><name pos:start="119:22" pos:end="119:26">frame</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:47">sample_aspect_ratio</name><operator pos:start="119:48" pos:end="119:48">.</operator><name pos:start="119:49" pos:end="119:51">num</name></name></expr>)</condition><block type="pseudo" pos:start="119:55" pos:end="119:110"><block_content pos:start="119:55" pos:end="119:110">  <expr_stmt pos:start="119:55" pos:end="119:110"><expr pos:start="119:55" pos:end="119:109"><name pos:start="119:55" pos:end="119:80"><name pos:start="119:55" pos:end="119:59">frame</name><operator pos:start="119:60" pos:end="119:61">-&gt;</operator><name pos:start="119:62" pos:end="119:80">sample_aspect_ratio</name></name> <operator pos:start="119:82" pos:end="119:82">=</operator> <name pos:start="119:84" pos:end="119:109"><name pos:start="119:84" pos:end="119:88">avctx</name><operator pos:start="119:89" pos:end="119:90">-&gt;</operator><name pos:start="119:91" pos:end="119:109">sample_aspect_ratio</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="121:17" pos:end="121:96"><if pos:start="121:17" pos:end="121:96">if <condition pos:start="121:20" pos:end="121:34">(<expr pos:start="121:21" pos:end="121:33"><operator pos:start="121:21" pos:end="121:21">!</operator><name pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:26">frame</name><operator pos:start="121:27" pos:end="121:28">-&gt;</operator><name pos:start="121:29" pos:end="121:33">width</name></name></expr>)</condition><block type="pseudo" pos:start="121:55" pos:end="121:96"><block_content pos:start="121:55" pos:end="121:96">                    <expr_stmt pos:start="121:55" pos:end="121:96"><expr pos:start="121:55" pos:end="121:95"><name pos:start="121:55" pos:end="121:66"><name pos:start="121:55" pos:end="121:59">frame</name><operator pos:start="121:60" pos:end="121:61">-&gt;</operator><name pos:start="121:62" pos:end="121:66">width</name></name>               <operator pos:start="121:82" pos:end="121:82">=</operator> <name pos:start="121:84" pos:end="121:95"><name pos:start="121:84" pos:end="121:88">avctx</name><operator pos:start="121:89" pos:end="121:90">-&gt;</operator><name pos:start="121:91" pos:end="121:95">width</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="123:17" pos:end="123:97"><if pos:start="123:17" pos:end="123:97">if <condition pos:start="123:20" pos:end="123:35">(<expr pos:start="123:21" pos:end="123:34"><operator pos:start="123:21" pos:end="123:21">!</operator><name pos:start="123:22" pos:end="123:34"><name pos:start="123:22" pos:end="123:26">frame</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:34">height</name></name></expr>)</condition><block type="pseudo" pos:start="123:55" pos:end="123:97"><block_content pos:start="123:55" pos:end="123:97">                   <expr_stmt pos:start="123:55" pos:end="123:97"><expr pos:start="123:55" pos:end="123:96"><name pos:start="123:55" pos:end="123:67"><name pos:start="123:55" pos:end="123:59">frame</name><operator pos:start="123:60" pos:end="123:61">-&gt;</operator><name pos:start="123:62" pos:end="123:67">height</name></name>              <operator pos:start="123:82" pos:end="123:82">=</operator> <name pos:start="123:84" pos:end="123:96"><name pos:start="123:84" pos:end="123:88">avctx</name><operator pos:start="123:89" pos:end="123:90">-&gt;</operator><name pos:start="123:91" pos:end="123:96">height</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="125:17" pos:end="125:98"><if pos:start="125:17" pos:end="125:98">if <condition pos:start="125:20" pos:end="125:53">(<expr pos:start="125:21" pos:end="125:52"><name pos:start="125:21" pos:end="125:33"><name pos:start="125:21" pos:end="125:25">frame</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:33">format</name></name> <operator pos:start="125:35" pos:end="125:36">==</operator> <name pos:start="125:38" pos:end="125:52">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="125:55" pos:end="125:98"><block_content pos:start="125:55" pos:end="125:98"> <expr_stmt pos:start="125:55" pos:end="125:98"><expr pos:start="125:55" pos:end="125:97"><name pos:start="125:55" pos:end="125:67"><name pos:start="125:55" pos:end="125:59">frame</name><operator pos:start="125:60" pos:end="125:61">-&gt;</operator><name pos:start="125:62" pos:end="125:67">format</name></name>              <operator pos:start="125:82" pos:end="125:82">=</operator> <name pos:start="125:84" pos:end="125:97"><name pos:start="125:84" pos:end="125:88">avctx</name><operator pos:start="125:89" pos:end="125:90">-&gt;</operator><name pos:start="125:91" pos:end="125:97">pix_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:13"><expr pos:start="133:5" pos:end="133:12"><call pos:start="133:5" pos:end="133:12"><name pos:start="133:5" pos:end="133:10">emms_c</name><argument_list pos:start="133:11" pos:end="133:12">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:33"><expr pos:start="135:5" pos:end="135:32"><name pos:start="135:5" pos:end="135:20">actual_got_frame</name> <operator pos:start="135:22" pos:end="135:22">=</operator> <name pos:start="135:24" pos:end="135:32">got_frame</name></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="360:0"><if pos:start="139:5" pos:end="153:5">if <condition pos:start="139:8" pos:end="139:49">(<expr pos:start="139:9" pos:end="139:48"><name pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:13">avctx</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:20">codec</name><operator pos:start="139:21" pos:end="139:22">-&gt;</operator><name pos:start="139:23" pos:end="139:26">type</name></name> <operator pos:start="139:28" pos:end="139:29">==</operator> <name pos:start="139:31" pos:end="139:48">AVMEDIA_TYPE_VIDEO</name></expr>)</condition> <block pos:start="139:51" pos:end="153:5">{<block_content pos:start="141:9" pos:end="151:77">

        <if_stmt pos:start="141:9" pos:end="143:26"><if pos:start="141:9" pos:end="143:26">if <condition pos:start="141:12" pos:end="141:49">(<expr pos:start="141:13" pos:end="141:48"><name pos:start="141:13" pos:end="141:24"><name pos:start="141:13" pos:end="141:17">frame</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:24">flags</name></name> <operator pos:start="141:26" pos:end="141:26">&amp;</operator> <name pos:start="141:28" pos:end="141:48">AV_FRAME_FLAG_DISCARD</name></expr>)</condition><block type="pseudo" pos:start="143:13" pos:end="143:26"><block_content pos:start="143:13" pos:end="143:26">

            <expr_stmt pos:start="143:13" pos:end="143:26"><expr pos:start="143:13" pos:end="143:25"><name pos:start="143:13" pos:end="143:21">got_frame</name> <operator pos:start="143:23" pos:end="143:23">=</operator> <literal type="number" pos:start="143:25" pos:end="143:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="145:9" pos:end="151:77"><if pos:start="145:9" pos:end="151:77">if <condition pos:start="145:12" pos:end="145:22">(<expr pos:start="145:13" pos:end="145:21"><name pos:start="145:13" pos:end="145:21">got_frame</name></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="151:77"><block_content pos:start="147:13" pos:end="151:77">

            <expr_stmt pos:start="147:13" pos:end="151:77"><expr pos:start="147:13" pos:end="151:76"><name pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:17">frame</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:40">best_effort_timestamp</name></name> <operator pos:start="147:42" pos:end="147:42">=</operator> <call pos:start="147:44" pos:end="151:76"><name pos:start="147:44" pos:end="147:60">guess_correct_pts</name><argument_list pos:start="147:61" pos:end="151:76">(<argument pos:start="147:62" pos:end="147:66"><expr pos:start="147:62" pos:end="147:66"><name pos:start="147:62" pos:end="147:66">avctx</name></expr></argument>,

                                                             <argument pos:start="149:62" pos:end="149:71"><expr pos:start="149:62" pos:end="149:71"><name pos:start="149:62" pos:end="149:71"><name pos:start="149:62" pos:end="149:66">frame</name><operator pos:start="149:67" pos:end="149:68">-&gt;</operator><name pos:start="149:69" pos:end="149:71">pts</name></name></expr></argument>,

                                                             <argument pos:start="151:62" pos:end="151:75"><expr pos:start="151:62" pos:end="151:75"><name pos:start="151:62" pos:end="151:75"><name pos:start="151:62" pos:end="151:66">frame</name><operator pos:start="151:67" pos:end="151:68">-&gt;</operator><name pos:start="151:69" pos:end="151:75">pkt_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="153:7" pos:end="360:0">else if <condition pos:start="153:15" pos:end="153:56">(<expr pos:start="153:16" pos:end="153:55"><name pos:start="153:16" pos:end="153:33"><name pos:start="153:16" pos:end="153:20">avctx</name><operator pos:start="153:21" pos:end="153:22">-&gt;</operator><name pos:start="153:23" pos:end="153:27">codec</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:33">type</name></name> <operator pos:start="153:35" pos:end="153:36">==</operator> <name pos:start="153:38" pos:end="153:55">AVMEDIA_TYPE_AUDIO</name></expr>)</condition> <block pos:start="153:58" pos:end="360:0">{<block_content pos:start="155:9" pos:end="355:9">

        <decl_stmt pos:start="155:9" pos:end="155:22"><decl pos:start="155:9" pos:end="155:21"><type pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:15">uint8_t</name> <modifier pos:start="155:17" pos:end="155:17">*</modifier></type><name pos:start="155:18" pos:end="155:21">side</name></decl>;</decl_stmt>

        <decl_stmt pos:start="157:9" pos:end="157:22"><decl pos:start="157:9" pos:end="157:21"><type pos:start="157:9" pos:end="157:11"><name pos:start="157:9" pos:end="157:11">int</name></type> <name pos:start="157:13" pos:end="157:21">side_size</name></decl>;</decl_stmt>

        <decl_stmt pos:start="159:9" pos:end="159:37"><decl pos:start="159:9" pos:end="159:36"><type pos:start="159:9" pos:end="159:16"><name pos:start="159:9" pos:end="159:16">uint32_t</name></type> <name pos:start="159:18" pos:end="159:32">discard_padding</name> <init pos:start="159:34" pos:end="159:36">= <expr pos:start="159:36" pos:end="159:36"><literal type="number" pos:start="159:36" pos:end="159:36">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="161:9" pos:end="161:32"><decl pos:start="161:9" pos:end="161:31"><type pos:start="161:9" pos:end="161:15"><name pos:start="161:9" pos:end="161:15">uint8_t</name></type> <name pos:start="161:17" pos:end="161:27">skip_reason</name> <init pos:start="161:29" pos:end="161:31">= <expr pos:start="161:31" pos:end="161:31"><literal type="number" pos:start="161:31" pos:end="161:31">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="163:9" pos:end="163:35"><decl pos:start="163:9" pos:end="163:34"><type pos:start="163:9" pos:end="163:15"><name pos:start="163:9" pos:end="163:15">uint8_t</name></type> <name pos:start="163:17" pos:end="163:30">discard_reason</name> <init pos:start="163:32" pos:end="163:34">= <expr pos:start="163:34" pos:end="163:34"><literal type="number" pos:start="163:34" pos:end="163:34">0</literal></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="167:9" pos:end="191:9"><if pos:start="167:9" pos:end="191:9">if <condition pos:start="167:12" pos:end="167:34">(<expr pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:15">ret</name> <operator pos:start="167:17" pos:end="167:18">&gt;=</operator> <literal type="number" pos:start="167:20" pos:end="167:20">0</literal> <operator pos:start="167:22" pos:end="167:23">&amp;&amp;</operator> <name pos:start="167:25" pos:end="167:33">got_frame</name></expr>)</condition> <block pos:start="167:36" pos:end="191:9">{<block_content pos:start="169:13" pos:end="189:56">

            <expr_stmt pos:start="169:13" pos:end="173:77"><expr pos:start="169:13" pos:end="173:76"><name pos:start="169:13" pos:end="169:40"><name pos:start="169:13" pos:end="169:17">frame</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:40">best_effort_timestamp</name></name> <operator pos:start="169:42" pos:end="169:42">=</operator> <call pos:start="169:44" pos:end="173:76"><name pos:start="169:44" pos:end="169:60">guess_correct_pts</name><argument_list pos:start="169:61" pos:end="173:76">(<argument pos:start="169:62" pos:end="169:66"><expr pos:start="169:62" pos:end="169:66"><name pos:start="169:62" pos:end="169:66">avctx</name></expr></argument>,

                                                             <argument pos:start="171:62" pos:end="171:71"><expr pos:start="171:62" pos:end="171:71"><name pos:start="171:62" pos:end="171:71"><name pos:start="171:62" pos:end="171:66">frame</name><operator pos:start="171:67" pos:end="171:68">-&gt;</operator><name pos:start="171:69" pos:end="171:71">pts</name></name></expr></argument>,

                                                             <argument pos:start="173:62" pos:end="173:75"><expr pos:start="173:62" pos:end="173:75"><name pos:start="173:62" pos:end="173:75"><name pos:start="173:62" pos:end="173:66">frame</name><operator pos:start="173:67" pos:end="173:68">-&gt;</operator><name pos:start="173:69" pos:end="173:75">pkt_dts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="175:13" pos:end="177:50"><if pos:start="175:13" pos:end="177:50">if <condition pos:start="175:16" pos:end="175:52">(<expr pos:start="175:17" pos:end="175:51"><name pos:start="175:17" pos:end="175:29"><name pos:start="175:17" pos:end="175:21">frame</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:29">format</name></name> <operator pos:start="175:31" pos:end="175:32">==</operator> <name pos:start="175:34" pos:end="175:51">AV_SAMPLE_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:50"><block_content pos:start="177:17" pos:end="177:50">

                <expr_stmt pos:start="177:17" pos:end="177:50"><expr pos:start="177:17" pos:end="177:49"><name pos:start="177:17" pos:end="177:29"><name pos:start="177:17" pos:end="177:21">frame</name><operator pos:start="177:22" pos:end="177:23">-&gt;</operator><name pos:start="177:24" pos:end="177:29">format</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <name pos:start="177:33" pos:end="177:49"><name pos:start="177:33" pos:end="177:37">avctx</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:49">sample_fmt</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="179:13" pos:end="181:62"><if pos:start="179:13" pos:end="181:62">if <condition pos:start="179:16" pos:end="179:39">(<expr pos:start="179:17" pos:end="179:38"><operator pos:start="179:17" pos:end="179:17">!</operator><name pos:start="179:18" pos:end="179:38"><name pos:start="179:18" pos:end="179:22">frame</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:38">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="181:17" pos:end="181:62"><block_content pos:start="181:17" pos:end="181:62">

                <expr_stmt pos:start="181:17" pos:end="181:62"><expr pos:start="181:17" pos:end="181:61"><name pos:start="181:17" pos:end="181:37"><name pos:start="181:17" pos:end="181:21">frame</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:37">channel_layout</name></name> <operator pos:start="181:39" pos:end="181:39">=</operator> <name pos:start="181:41" pos:end="181:61"><name pos:start="181:41" pos:end="181:45">avctx</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:61">channel_layout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="183:13" pos:end="185:50"><if pos:start="183:13" pos:end="185:50">if <condition pos:start="183:16" pos:end="183:33">(<expr pos:start="183:17" pos:end="183:32"><operator pos:start="183:17" pos:end="183:17">!</operator><name pos:start="183:18" pos:end="183:32"><name pos:start="183:18" pos:end="183:22">frame</name><operator pos:start="183:23" pos:end="183:24">-&gt;</operator><name pos:start="183:25" pos:end="183:32">channels</name></name></expr>)</condition><block type="pseudo" pos:start="185:17" pos:end="185:50"><block_content pos:start="185:17" pos:end="185:50">

                <expr_stmt pos:start="185:17" pos:end="185:50"><expr pos:start="185:17" pos:end="185:49"><name pos:start="185:17" pos:end="185:31"><name pos:start="185:17" pos:end="185:21">frame</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:31">channels</name></name> <operator pos:start="185:33" pos:end="185:33">=</operator> <name pos:start="185:35" pos:end="185:49"><name pos:start="185:35" pos:end="185:39">avctx</name><operator pos:start="185:40" pos:end="185:41">-&gt;</operator><name pos:start="185:42" pos:end="185:49">channels</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="187:13" pos:end="189:56"><if pos:start="187:13" pos:end="189:56">if <condition pos:start="187:16" pos:end="187:36">(<expr pos:start="187:17" pos:end="187:35"><operator pos:start="187:17" pos:end="187:17">!</operator><name pos:start="187:18" pos:end="187:35"><name pos:start="187:18" pos:end="187:22">frame</name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:35">sample_rate</name></name></expr>)</condition><block type="pseudo" pos:start="189:17" pos:end="189:56"><block_content pos:start="189:17" pos:end="189:56">

                <expr_stmt pos:start="189:17" pos:end="189:56"><expr pos:start="189:17" pos:end="189:55"><name pos:start="189:17" pos:end="189:34"><name pos:start="189:17" pos:end="189:21">frame</name><operator pos:start="189:22" pos:end="189:23">-&gt;</operator><name pos:start="189:24" pos:end="189:34">sample_rate</name></name> <operator pos:start="189:36" pos:end="189:36">=</operator> <name pos:start="189:38" pos:end="189:55"><name pos:start="189:38" pos:end="189:42">avctx</name><operator pos:start="189:43" pos:end="189:44">-&gt;</operator><name pos:start="189:45" pos:end="189:55">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:81"><expr pos:start="195:9" pos:end="195:80"><name pos:start="195:9" pos:end="195:12">side</name><operator pos:start="195:13" pos:end="195:13">=</operator> <call pos:start="195:15" pos:end="195:80"><name pos:start="195:15" pos:end="195:37">av_packet_get_side_data</name><argument_list pos:start="195:38" pos:end="195:80">(<argument pos:start="195:39" pos:end="195:41"><expr pos:start="195:39" pos:end="195:41"><name pos:start="195:39" pos:end="195:41">pkt</name></expr></argument>, <argument pos:start="195:44" pos:end="195:67"><expr pos:start="195:44" pos:end="195:67"><name pos:start="195:44" pos:end="195:67">AV_PKT_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="195:70" pos:end="195:79"><expr pos:start="195:70" pos:end="195:79"><operator pos:start="195:70" pos:end="195:70">&amp;</operator><name pos:start="195:71" pos:end="195:79">side_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="197:9" pos:end="211:9"><if pos:start="197:9" pos:end="211:9">if<condition pos:start="197:11" pos:end="197:33">(<expr pos:start="197:12" pos:end="197:32"><name pos:start="197:12" pos:end="197:15">side</name> <operator pos:start="197:17" pos:end="197:18">&amp;&amp;</operator> <name pos:start="197:20" pos:end="197:28">side_size</name><operator pos:start="197:29" pos:end="197:30">&gt;=</operator><literal type="number" pos:start="197:31" pos:end="197:32">10</literal></expr>)</condition> <block pos:start="197:35" pos:end="211:9">{<block_content pos:start="199:13" pos:end="209:46">

            <expr_stmt pos:start="199:13" pos:end="199:101"><expr pos:start="199:13" pos:end="199:100"><name pos:start="199:13" pos:end="199:41"><name pos:start="199:13" pos:end="199:17">avctx</name><operator pos:start="199:18" pos:end="199:19">-&gt;</operator><name pos:start="199:20" pos:end="199:27">internal</name><operator pos:start="199:28" pos:end="199:29">-&gt;</operator><name pos:start="199:30" pos:end="199:41">skip_samples</name></name> <operator pos:start="199:43" pos:end="199:43">=</operator> <call pos:start="199:45" pos:end="199:57"><name pos:start="199:45" pos:end="199:51">AV_RL32</name><argument_list pos:start="199:52" pos:end="199:57">(<argument pos:start="199:53" pos:end="199:56"><expr pos:start="199:53" pos:end="199:56"><name pos:start="199:53" pos:end="199:56">side</name></expr></argument>)</argument_list></call> <operator pos:start="199:59" pos:end="199:59">*</operator> <name pos:start="199:61" pos:end="199:100"><name pos:start="199:61" pos:end="199:65">avctx</name><operator pos:start="199:66" pos:end="199:67">-&gt;</operator><name pos:start="199:68" pos:end="199:75">internal</name><operator pos:start="199:76" pos:end="199:77">-&gt;</operator><name pos:start="199:78" pos:end="199:100">skip_samples_multiplier</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:48"><expr pos:start="201:13" pos:end="201:47"><name pos:start="201:13" pos:end="201:27">discard_padding</name> <operator pos:start="201:29" pos:end="201:29">=</operator> <call pos:start="201:31" pos:end="201:47"><name pos:start="201:31" pos:end="201:37">AV_RL32</name><argument_list pos:start="201:38" pos:end="201:47">(<argument pos:start="201:39" pos:end="201:46"><expr pos:start="201:39" pos:end="201:46"><name pos:start="201:39" pos:end="201:42">side</name> <operator pos:start="201:44" pos:end="201:44">+</operator> <literal type="number" pos:start="201:46" pos:end="201:46">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="205:72"><expr pos:start="203:13" pos:end="205:71"><call pos:start="203:13" pos:end="205:71"><name pos:start="203:13" pos:end="203:18">av_log</name><argument_list pos:start="203:19" pos:end="205:71">(<argument pos:start="203:20" pos:end="203:24"><expr pos:start="203:20" pos:end="203:24"><name pos:start="203:20" pos:end="203:24">avctx</name></expr></argument>, <argument pos:start="203:27" pos:end="203:38"><expr pos:start="203:27" pos:end="203:38"><name pos:start="203:27" pos:end="203:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="203:41" pos:end="203:89"><expr pos:start="203:41" pos:end="203:89"><literal type="string" pos:start="203:41" pos:end="203:89">"skip %d / discard %d samples due to side data\n"</literal></expr></argument>,

                   <argument pos:start="205:20" pos:end="205:48"><expr pos:start="205:20" pos:end="205:48"><name pos:start="205:20" pos:end="205:48"><name pos:start="205:20" pos:end="205:24">avctx</name><operator pos:start="205:25" pos:end="205:26">-&gt;</operator><name pos:start="205:27" pos:end="205:34">internal</name><operator pos:start="205:35" pos:end="205:36">-&gt;</operator><name pos:start="205:37" pos:end="205:48">skip_samples</name></name></expr></argument>, <argument pos:start="205:51" pos:end="205:70"><expr pos:start="205:51" pos:end="205:70"><operator pos:start="205:51" pos:end="205:51">(</operator><name pos:start="205:52" pos:end="205:54">int</name><operator pos:start="205:55" pos:end="205:55">)</operator><name pos:start="205:56" pos:end="205:70">discard_padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:43"><expr pos:start="207:13" pos:end="207:42"><name pos:start="207:13" pos:end="207:23">skip_reason</name> <operator pos:start="207:25" pos:end="207:25">=</operator> <call pos:start="207:27" pos:end="207:42"><name pos:start="207:27" pos:end="207:32">AV_RL8</name><argument_list pos:start="207:33" pos:end="207:42">(<argument pos:start="207:34" pos:end="207:41"><expr pos:start="207:34" pos:end="207:41"><name pos:start="207:34" pos:end="207:37">side</name> <operator pos:start="207:39" pos:end="207:39">+</operator> <literal type="number" pos:start="207:41" pos:end="207:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:46"><expr pos:start="209:13" pos:end="209:45"><name pos:start="209:13" pos:end="209:26">discard_reason</name> <operator pos:start="209:28" pos:end="209:28">=</operator> <call pos:start="209:30" pos:end="209:45"><name pos:start="209:30" pos:end="209:35">AV_RL8</name><argument_list pos:start="209:36" pos:end="209:45">(<argument pos:start="209:37" pos:end="209:44"><expr pos:start="209:37" pos:end="209:44"><name pos:start="209:37" pos:end="209:40">side</name> <operator pos:start="209:42" pos:end="209:42">+</operator> <literal type="number" pos:start="209:44" pos:end="209:44">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="215:9" pos:end="223:9"><if pos:start="215:9" pos:end="223:9">if <condition pos:start="215:12" pos:end="217:58">(<expr pos:start="215:13" pos:end="217:57"><operator pos:start="215:13" pos:end="215:13">(</operator><name pos:start="215:14" pos:end="215:25"><name pos:start="215:14" pos:end="215:18">frame</name><operator pos:start="215:19" pos:end="215:20">-&gt;</operator><name pos:start="215:21" pos:end="215:25">flags</name></name> <operator pos:start="215:27" pos:end="215:27">&amp;</operator> <name pos:start="215:29" pos:end="215:49">AV_FRAME_FLAG_DISCARD</name><operator pos:start="215:50" pos:end="215:50">)</operator> <operator pos:start="215:52" pos:end="215:53">&amp;&amp;</operator> <name pos:start="215:55" pos:end="215:63">got_frame</name> <operator pos:start="215:65" pos:end="215:66">&amp;&amp;</operator>

            <operator pos:start="217:13" pos:end="217:13">!</operator><operator pos:start="217:14" pos:end="217:14">(</operator><name pos:start="217:15" pos:end="217:27"><name pos:start="217:15" pos:end="217:19">avctx</name><operator pos:start="217:20" pos:end="217:21">-&gt;</operator><name pos:start="217:22" pos:end="217:27">flags2</name></name> <operator pos:start="217:29" pos:end="217:29">&amp;</operator> <name pos:start="217:31" pos:end="217:56">AV_CODEC_FLAG2_SKIP_MANUAL</name><operator pos:start="217:57" pos:end="217:57">)</operator></expr>)</condition> <block pos:start="217:60" pos:end="223:9">{<block_content pos:start="219:13" pos:end="221:26">

            <expr_stmt pos:start="219:13" pos:end="219:104"><expr pos:start="219:13" pos:end="219:103"><name pos:start="219:13" pos:end="219:41"><name pos:start="219:13" pos:end="219:17">avctx</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:27">internal</name><operator pos:start="219:28" pos:end="219:29">-&gt;</operator><name pos:start="219:30" pos:end="219:41">skip_samples</name></name> <operator pos:start="219:43" pos:end="219:43">=</operator> <call pos:start="219:45" pos:end="219:103"><name pos:start="219:45" pos:end="219:49">FFMAX</name><argument_list pos:start="219:50" pos:end="219:103">(<argument pos:start="219:51" pos:end="219:51"><expr pos:start="219:51" pos:end="219:51"><literal type="number" pos:start="219:51" pos:end="219:51">0</literal></expr></argument>, <argument pos:start="219:54" pos:end="219:102"><expr pos:start="219:54" pos:end="219:102"><name pos:start="219:54" pos:end="219:82"><name pos:start="219:54" pos:end="219:58">avctx</name><operator pos:start="219:59" pos:end="219:60">-&gt;</operator><name pos:start="219:61" pos:end="219:68">internal</name><operator pos:start="219:69" pos:end="219:70">-&gt;</operator><name pos:start="219:71" pos:end="219:82">skip_samples</name></name> <operator pos:start="219:84" pos:end="219:84">-</operator> <name pos:start="219:86" pos:end="219:102"><name pos:start="219:86" pos:end="219:90">frame</name><operator pos:start="219:91" pos:end="219:92">-&gt;</operator><name pos:start="219:93" pos:end="219:102">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:26"><expr pos:start="221:13" pos:end="221:25"><name pos:start="221:13" pos:end="221:21">got_frame</name> <operator pos:start="221:23" pos:end="221:23">=</operator> <literal type="number" pos:start="221:25" pos:end="221:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="227:9" pos:end="295:9"><if pos:start="227:9" pos:end="295:9">if <condition pos:start="227:12" pos:end="229:58">(<expr pos:start="227:13" pos:end="229:57"><name pos:start="227:13" pos:end="227:41"><name pos:start="227:13" pos:end="227:17">avctx</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:27">internal</name><operator pos:start="227:28" pos:end="227:29">-&gt;</operator><name pos:start="227:30" pos:end="227:41">skip_samples</name></name> <operator pos:start="227:43" pos:end="227:43">&gt;</operator> <literal type="number" pos:start="227:45" pos:end="227:45">0</literal> <operator pos:start="227:47" pos:end="227:48">&amp;&amp;</operator> <name pos:start="227:50" pos:end="227:58">got_frame</name> <operator pos:start="227:60" pos:end="227:61">&amp;&amp;</operator>

            <operator pos:start="229:13" pos:end="229:13">!</operator><operator pos:start="229:14" pos:end="229:14">(</operator><name pos:start="229:15" pos:end="229:27"><name pos:start="229:15" pos:end="229:19">avctx</name><operator pos:start="229:20" pos:end="229:21">-&gt;</operator><name pos:start="229:22" pos:end="229:27">flags2</name></name> <operator pos:start="229:29" pos:end="229:29">&amp;</operator> <name pos:start="229:31" pos:end="229:56">AV_CODEC_FLAG2_SKIP_MANUAL</name><operator pos:start="229:57" pos:end="229:57">)</operator></expr>)</condition> <block pos:start="229:60" pos:end="295:9">{<block_content pos:start="231:13" pos:end="293:13">

            <if_stmt pos:start="231:13" pos:end="293:13"><if pos:start="231:13" pos:end="241:13">if<condition pos:start="231:15" pos:end="231:66">(<expr pos:start="231:16" pos:end="231:65"><name pos:start="231:16" pos:end="231:32"><name pos:start="231:16" pos:end="231:20">frame</name><operator pos:start="231:21" pos:end="231:22">-&gt;</operator><name pos:start="231:23" pos:end="231:32">nb_samples</name></name> <operator pos:start="231:34" pos:end="231:35">&lt;=</operator> <name pos:start="231:37" pos:end="231:65"><name pos:start="231:37" pos:end="231:41">avctx</name><operator pos:start="231:42" pos:end="231:43">-&gt;</operator><name pos:start="231:44" pos:end="231:51">internal</name><operator pos:start="231:52" pos:end="231:53">-&gt;</operator><name pos:start="231:54" pos:end="231:65">skip_samples</name></name></expr>)</condition><block pos:start="231:67" pos:end="241:13">{<block_content pos:start="233:17" pos:end="239:54">

                <expr_stmt pos:start="233:17" pos:end="233:30"><expr pos:start="233:17" pos:end="233:29"><name pos:start="233:17" pos:end="233:25">got_frame</name> <operator pos:start="233:27" pos:end="233:27">=</operator> <literal type="number" pos:start="233:29" pos:end="233:29">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:67"><expr pos:start="235:17" pos:end="235:66"><name pos:start="235:17" pos:end="235:45"><name pos:start="235:17" pos:end="235:21">avctx</name><operator pos:start="235:22" pos:end="235:23">-&gt;</operator><name pos:start="235:24" pos:end="235:31">internal</name><operator pos:start="235:32" pos:end="235:33">-&gt;</operator><name pos:start="235:34" pos:end="235:45">skip_samples</name></name> <operator pos:start="235:47" pos:end="235:48">-=</operator> <name pos:start="235:50" pos:end="235:66"><name pos:start="235:50" pos:end="235:54">frame</name><operator pos:start="235:55" pos:end="235:56">-&gt;</operator><name pos:start="235:57" pos:end="235:66">nb_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="237:17" pos:end="239:54"><expr pos:start="237:17" pos:end="239:53"><call pos:start="237:17" pos:end="239:53"><name pos:start="237:17" pos:end="237:22">av_log</name><argument_list pos:start="237:23" pos:end="239:53">(<argument pos:start="237:24" pos:end="237:28"><expr pos:start="237:24" pos:end="237:28"><name pos:start="237:24" pos:end="237:28">avctx</name></expr></argument>, <argument pos:start="237:31" pos:end="237:42"><expr pos:start="237:31" pos:end="237:42"><name pos:start="237:31" pos:end="237:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="237:45" pos:end="237:79"><expr pos:start="237:45" pos:end="237:79"><literal type="string" pos:start="237:45" pos:end="237:79">"skip whole frame, skip left: %d\n"</literal></expr></argument>,

                       <argument pos:start="239:24" pos:end="239:52"><expr pos:start="239:24" pos:end="239:52"><name pos:start="239:24" pos:end="239:52"><name pos:start="239:24" pos:end="239:28">avctx</name><operator pos:start="239:29" pos:end="239:30">-&gt;</operator><name pos:start="239:31" pos:end="239:38">internal</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:52">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="241:15" pos:end="293:13">else <block pos:start="241:20" pos:end="293:13">{<block_content pos:start="243:17" pos:end="291:50">

                <expr_stmt pos:start="243:17" pos:end="245:115"><expr pos:start="243:17" pos:end="245:114"><call pos:start="243:17" pos:end="245:114"><name pos:start="243:17" pos:end="243:31">av_samples_copy</name><argument_list pos:start="243:32" pos:end="245:114">(<argument pos:start="243:33" pos:end="243:52"><expr pos:start="243:33" pos:end="243:52"><name pos:start="243:33" pos:end="243:52"><name pos:start="243:33" pos:end="243:37">frame</name><operator pos:start="243:38" pos:end="243:39">-&gt;</operator><name pos:start="243:40" pos:end="243:52">extended_data</name></name></expr></argument>, <argument pos:start="243:55" pos:end="243:74"><expr pos:start="243:55" pos:end="243:74"><name pos:start="243:55" pos:end="243:74"><name pos:start="243:55" pos:end="243:59">frame</name><operator pos:start="243:60" pos:end="243:61">-&gt;</operator><name pos:start="243:62" pos:end="243:74">extended_data</name></name></expr></argument>, <argument pos:start="243:77" pos:end="243:77"><expr pos:start="243:77" pos:end="243:77"><literal type="number" pos:start="243:77" pos:end="243:77">0</literal></expr></argument>, <argument pos:start="243:80" pos:end="243:108"><expr pos:start="243:80" pos:end="243:108"><name pos:start="243:80" pos:end="243:108"><name pos:start="243:80" pos:end="243:84">avctx</name><operator pos:start="243:85" pos:end="243:86">-&gt;</operator><name pos:start="243:87" pos:end="243:94">internal</name><operator pos:start="243:95" pos:end="243:96">-&gt;</operator><name pos:start="243:97" pos:end="243:108">skip_samples</name></name></expr></argument>,

                                <argument pos:start="245:33" pos:end="245:81"><expr pos:start="245:33" pos:end="245:81"><name pos:start="245:33" pos:end="245:49"><name pos:start="245:33" pos:end="245:37">frame</name><operator pos:start="245:38" pos:end="245:39">-&gt;</operator><name pos:start="245:40" pos:end="245:49">nb_samples</name></name> <operator pos:start="245:51" pos:end="245:51">-</operator> <name pos:start="245:53" pos:end="245:81"><name pos:start="245:53" pos:end="245:57">avctx</name><operator pos:start="245:58" pos:end="245:59">-&gt;</operator><name pos:start="245:60" pos:end="245:67">internal</name><operator pos:start="245:68" pos:end="245:69">-&gt;</operator><name pos:start="245:70" pos:end="245:81">skip_samples</name></name></expr></argument>, <argument pos:start="245:84" pos:end="245:98"><expr pos:start="245:84" pos:end="245:98"><name pos:start="245:84" pos:end="245:98"><name pos:start="245:84" pos:end="245:88">avctx</name><operator pos:start="245:89" pos:end="245:90">-&gt;</operator><name pos:start="245:91" pos:end="245:98">channels</name></name></expr></argument>, <argument pos:start="245:101" pos:end="245:113"><expr pos:start="245:101" pos:end="245:113"><name pos:start="245:101" pos:end="245:113"><name pos:start="245:101" pos:end="245:105">frame</name><operator pos:start="245:106" pos:end="245:107">-&gt;</operator><name pos:start="245:108" pos:end="245:113">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="247:17" pos:end="283:17"><if pos:start="247:17" pos:end="279:17">if<condition pos:start="247:19" pos:end="247:65">(<expr pos:start="247:20" pos:end="247:64"><name pos:start="247:20" pos:end="247:42"><name pos:start="247:20" pos:end="247:24">avctx</name><operator pos:start="247:25" pos:end="247:26">-&gt;</operator><name pos:start="247:27" pos:end="247:38">pkt_timebase</name><operator pos:start="247:39" pos:end="247:39">.</operator><name pos:start="247:40" pos:end="247:42">num</name></name> <operator pos:start="247:44" pos:end="247:45">&amp;&amp;</operator> <name pos:start="247:47" pos:end="247:64"><name pos:start="247:47" pos:end="247:51">avctx</name><operator pos:start="247:52" pos:end="247:53">-&gt;</operator><name pos:start="247:54" pos:end="247:64">sample_rate</name></name></expr>)</condition> <block pos:start="247:67" pos:end="279:17">{<block_content pos:start="249:21" pos:end="277:55">

                    <decl_stmt pos:start="249:21" pos:end="253:72"><decl pos:start="249:21" pos:end="253:71"><type pos:start="249:21" pos:end="249:27"><name pos:start="249:21" pos:end="249:27">int64_t</name></type> <name pos:start="249:29" pos:end="249:35">diff_ts</name> <init pos:start="249:37" pos:end="253:71">= <macro pos:start="249:39" pos:end="253:71"><name pos:start="249:39" pos:end="249:50">av_rescale_q</name><argument_list pos:start="249:51" pos:end="253:71">(<argument pos:start="249:52" pos:end="249:80">avctx-&gt;internal-&gt;skip_samples</argument>,

                                                   <argument pos:start="251:52" pos:end="251:65">(AVRational){<literal type="number" pos:start="251:65" pos:end="251:65">1</literal></argument>, <argument pos:start="251:68" pos:end="251:86">avctx-&gt;sample_rate}</argument>,

                                                   <argument pos:start="253:52" pos:end="253:70">avctx-&gt;pkt_timebase</argument>)</argument_list></macro></init></decl>;</decl_stmt>

                    <if_stmt pos:start="255:21" pos:end="260:0"><if pos:start="255:21" pos:end="260:0">if<condition pos:start="255:23" pos:end="255:50">(<expr pos:start="255:24" pos:end="255:49"><name pos:start="255:24" pos:end="255:33"><name pos:start="255:24" pos:end="255:28">frame</name><operator pos:start="255:29" pos:end="255:30">-&gt;</operator><name pos:start="255:31" pos:end="255:33">pts</name></name><operator pos:start="255:34" pos:end="255:35">!=</operator><name pos:start="255:36" pos:end="255:49">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="257:25" pos:end="260:0"><block_content pos:start="257:25" pos:end="260:0">

                        <expr_stmt pos:start="257:25" pos:end="260:0"><expr pos:start="257:25" pos:end="257:45"><name pos:start="257:25" pos:end="257:34"><name pos:start="257:25" pos:end="257:29">frame</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:34">pts</name></name> <operator pos:start="257:36" pos:end="257:37">+=</operator> <name pos:start="257:39" pos:end="257:45">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:if pos:start="259:1" pos:end="259:18">#<cpp:directive pos:start="259:2" pos:end="259:3">if</cpp:directive> <expr pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:18">FF_API_PKT_PTS</name></expr></cpp:if>

<macro pos:start="261:1" pos:end="261:31"><name pos:start="261:1" pos:end="261:31">FF_DISABLE_DEPRECATION_WARNINGS</name></macro>

                    <if_stmt pos:start="263:21" pos:end="265:50"><if pos:start="263:21" pos:end="265:50">if<condition pos:start="263:23" pos:end="263:54">(<expr pos:start="263:24" pos:end="263:53"><name pos:start="263:24" pos:end="263:37"><name pos:start="263:24" pos:end="263:28">frame</name><operator pos:start="263:29" pos:end="263:30">-&gt;</operator><name pos:start="263:31" pos:end="263:37">pkt_pts</name></name><operator pos:start="263:38" pos:end="263:39">!=</operator><name pos:start="263:40" pos:end="263:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="265:25" pos:end="265:50"><block_content pos:start="265:25" pos:end="265:50">

                        <expr_stmt pos:start="265:25" pos:end="265:50"><expr pos:start="265:25" pos:end="265:49"><name pos:start="265:25" pos:end="265:38"><name pos:start="265:25" pos:end="265:29">frame</name><operator pos:start="265:30" pos:end="265:31">-&gt;</operator><name pos:start="265:32" pos:end="265:38">pkt_pts</name></name> <operator pos:start="265:40" pos:end="265:41">+=</operator> <name pos:start="265:43" pos:end="265:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

<macro pos:start="267:1" pos:end="270:0"><name pos:start="267:1" pos:end="270:0">FF_ENABLE_DEPRECATION_WARNINGS</name></macro>

<cpp:endif pos:start="269:1" pos:end="269:6">#<cpp:directive pos:start="269:2" pos:end="269:6">endif</cpp:directive></cpp:endif>

                    <if_stmt pos:start="271:21" pos:end="273:50"><if pos:start="271:21" pos:end="273:50">if<condition pos:start="271:23" pos:end="271:54">(<expr pos:start="271:24" pos:end="271:53"><name pos:start="271:24" pos:end="271:37"><name pos:start="271:24" pos:end="271:28">frame</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:37">pkt_dts</name></name><operator pos:start="271:38" pos:end="271:39">!=</operator><name pos:start="271:40" pos:end="271:53">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="273:25" pos:end="273:50"><block_content pos:start="273:25" pos:end="273:50">

                        <expr_stmt pos:start="273:25" pos:end="273:50"><expr pos:start="273:25" pos:end="273:49"><name pos:start="273:25" pos:end="273:38"><name pos:start="273:25" pos:end="273:29">frame</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:38">pkt_dts</name></name> <operator pos:start="273:40" pos:end="273:41">+=</operator> <name pos:start="273:43" pos:end="273:49">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="275:21" pos:end="277:55"><if pos:start="275:21" pos:end="277:55">if <condition pos:start="275:24" pos:end="275:55">(<expr pos:start="275:25" pos:end="275:54"><name pos:start="275:25" pos:end="275:43"><name pos:start="275:25" pos:end="275:29">frame</name><operator pos:start="275:30" pos:end="275:31">-&gt;</operator><name pos:start="275:32" pos:end="275:43">pkt_duration</name></name> <operator pos:start="275:45" pos:end="275:46">&gt;=</operator> <name pos:start="275:48" pos:end="275:54">diff_ts</name></expr>)</condition><block type="pseudo" pos:start="277:25" pos:end="277:55"><block_content pos:start="277:25" pos:end="277:55">

                        <expr_stmt pos:start="277:25" pos:end="277:55"><expr pos:start="277:25" pos:end="277:54"><name pos:start="277:25" pos:end="277:43"><name pos:start="277:25" pos:end="277:29">frame</name><operator pos:start="277:30" pos:end="277:31">-&gt;</operator><name pos:start="277:32" pos:end="277:43">pkt_duration</name></name> <operator pos:start="277:45" pos:end="277:46">-=</operator> <name pos:start="277:48" pos:end="277:54">diff_ts</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="279:19" pos:end="283:17">else <block pos:start="279:24" pos:end="283:17">{<block_content pos:start="281:21" pos:end="281:104">

                    <expr_stmt pos:start="281:21" pos:end="281:104"><expr pos:start="281:21" pos:end="281:103"><call pos:start="281:21" pos:end="281:103"><name pos:start="281:21" pos:end="281:26">av_log</name><argument_list pos:start="281:27" pos:end="281:103">(<argument pos:start="281:28" pos:end="281:32"><expr pos:start="281:28" pos:end="281:32"><name pos:start="281:28" pos:end="281:32">avctx</name></expr></argument>, <argument pos:start="281:35" pos:end="281:48"><expr pos:start="281:35" pos:end="281:48"><name pos:start="281:35" pos:end="281:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="281:51" pos:end="281:102"><expr pos:start="281:51" pos:end="281:102"><literal type="string" pos:start="281:51" pos:end="281:102">"Could not update timestamps for skipped samples.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="285:17" pos:end="287:73"><expr pos:start="285:17" pos:end="287:72"><call pos:start="285:17" pos:end="287:72"><name pos:start="285:17" pos:end="285:22">av_log</name><argument_list pos:start="285:23" pos:end="287:72">(<argument pos:start="285:24" pos:end="285:28"><expr pos:start="285:24" pos:end="285:28"><name pos:start="285:24" pos:end="285:28">avctx</name></expr></argument>, <argument pos:start="285:31" pos:end="285:42"><expr pos:start="285:31" pos:end="285:42"><name pos:start="285:31" pos:end="285:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="285:45" pos:end="285:66"><expr pos:start="285:45" pos:end="285:66"><literal type="string" pos:start="285:45" pos:end="285:66">"skip %d/%d samples\n"</literal></expr></argument>,

                       <argument pos:start="287:24" pos:end="287:52"><expr pos:start="287:24" pos:end="287:52"><name pos:start="287:24" pos:end="287:52"><name pos:start="287:24" pos:end="287:28">avctx</name><operator pos:start="287:29" pos:end="287:30">-&gt;</operator><name pos:start="287:31" pos:end="287:38">internal</name><operator pos:start="287:39" pos:end="287:40">-&gt;</operator><name pos:start="287:41" pos:end="287:52">skip_samples</name></name></expr></argument>, <argument pos:start="287:55" pos:end="287:71"><expr pos:start="287:55" pos:end="287:71"><name pos:start="287:55" pos:end="287:71"><name pos:start="287:55" pos:end="287:59">frame</name><operator pos:start="287:60" pos:end="287:61">-&gt;</operator><name pos:start="287:62" pos:end="287:71">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:67"><expr pos:start="289:17" pos:end="289:66"><name pos:start="289:17" pos:end="289:33"><name pos:start="289:17" pos:end="289:21">frame</name><operator pos:start="289:22" pos:end="289:23">-&gt;</operator><name pos:start="289:24" pos:end="289:33">nb_samples</name></name> <operator pos:start="289:35" pos:end="289:36">-=</operator> <name pos:start="289:38" pos:end="289:66"><name pos:start="289:38" pos:end="289:42">avctx</name><operator pos:start="289:43" pos:end="289:44">-&gt;</operator><name pos:start="289:45" pos:end="289:52">internal</name><operator pos:start="289:53" pos:end="289:54">-&gt;</operator><name pos:start="289:55" pos:end="289:66">skip_samples</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:50"><expr pos:start="291:17" pos:end="291:49"><name pos:start="291:17" pos:end="291:45"><name pos:start="291:17" pos:end="291:21">avctx</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:31">internal</name><operator pos:start="291:32" pos:end="291:33">-&gt;</operator><name pos:start="291:34" pos:end="291:45">skip_samples</name></name> <operator pos:start="291:47" pos:end="291:47">=</operator> <literal type="number" pos:start="291:49" pos:end="291:49">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="299:9" pos:end="333:9"><if pos:start="299:9" pos:end="333:9">if <condition pos:start="299:12" pos:end="301:58">(<expr pos:start="299:13" pos:end="301:57"><name pos:start="299:13" pos:end="299:27">discard_padding</name> <operator pos:start="299:29" pos:end="299:29">&gt;</operator> <literal type="number" pos:start="299:31" pos:end="299:31">0</literal> <operator pos:start="299:33" pos:end="299:34">&amp;&amp;</operator> <name pos:start="299:36" pos:end="299:50">discard_padding</name> <operator pos:start="299:52" pos:end="299:53">&lt;=</operator> <name pos:start="299:55" pos:end="299:71"><name pos:start="299:55" pos:end="299:59">frame</name><operator pos:start="299:60" pos:end="299:61">-&gt;</operator><name pos:start="299:62" pos:end="299:71">nb_samples</name></name> <operator pos:start="299:73" pos:end="299:74">&amp;&amp;</operator> <name pos:start="299:76" pos:end="299:84">got_frame</name> <operator pos:start="299:86" pos:end="299:87">&amp;&amp;</operator>

            <operator pos:start="301:13" pos:end="301:13">!</operator><operator pos:start="301:14" pos:end="301:14">(</operator><name pos:start="301:15" pos:end="301:27"><name pos:start="301:15" pos:end="301:19">avctx</name><operator pos:start="301:20" pos:end="301:21">-&gt;</operator><name pos:start="301:22" pos:end="301:27">flags2</name></name> <operator pos:start="301:29" pos:end="301:29">&amp;</operator> <name pos:start="301:31" pos:end="301:56">AV_CODEC_FLAG2_SKIP_MANUAL</name><operator pos:start="301:57" pos:end="301:57">)</operator></expr>)</condition> <block pos:start="301:60" pos:end="333:9">{<block_content pos:start="303:13" pos:end="331:13">

            <if_stmt pos:start="303:13" pos:end="331:13"><if pos:start="303:13" pos:end="307:13">if <condition pos:start="303:16" pos:end="303:53">(<expr pos:start="303:17" pos:end="303:52"><name pos:start="303:17" pos:end="303:31">discard_padding</name> <operator pos:start="303:33" pos:end="303:34">==</operator> <name pos:start="303:36" pos:end="303:52"><name pos:start="303:36" pos:end="303:40">frame</name><operator pos:start="303:41" pos:end="303:42">-&gt;</operator><name pos:start="303:43" pos:end="303:52">nb_samples</name></name></expr>)</condition> <block pos:start="303:55" pos:end="307:13">{<block_content pos:start="305:17" pos:end="305:30">

                <expr_stmt pos:start="305:17" pos:end="305:30"><expr pos:start="305:17" pos:end="305:29"><name pos:start="305:17" pos:end="305:25">got_frame</name> <operator pos:start="305:27" pos:end="305:27">=</operator> <literal type="number" pos:start="305:29" pos:end="305:29">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="307:15" pos:end="331:13">else <block pos:start="307:20" pos:end="331:13">{<block_content pos:start="309:17" pos:end="329:53">

                <if_stmt pos:start="309:17" pos:end="323:17"><if pos:start="309:17" pos:end="319:17">if<condition pos:start="309:19" pos:end="309:65">(<expr pos:start="309:20" pos:end="309:64"><name pos:start="309:20" pos:end="309:42"><name pos:start="309:20" pos:end="309:24">avctx</name><operator pos:start="309:25" pos:end="309:26">-&gt;</operator><name pos:start="309:27" pos:end="309:38">pkt_timebase</name><operator pos:start="309:39" pos:end="309:39">.</operator><name pos:start="309:40" pos:end="309:42">num</name></name> <operator pos:start="309:44" pos:end="309:45">&amp;&amp;</operator> <name pos:start="309:47" pos:end="309:64"><name pos:start="309:47" pos:end="309:51">avctx</name><operator pos:start="309:52" pos:end="309:53">-&gt;</operator><name pos:start="309:54" pos:end="309:64">sample_rate</name></name></expr>)</condition> <block pos:start="309:67" pos:end="319:17">{<block_content pos:start="311:21" pos:end="317:50">

                    <decl_stmt pos:start="311:21" pos:end="315:72"><decl pos:start="311:21" pos:end="315:71"><type pos:start="311:21" pos:end="311:27"><name pos:start="311:21" pos:end="311:27">int64_t</name></type> <name pos:start="311:29" pos:end="311:35">diff_ts</name> <init pos:start="311:37" pos:end="315:71">= <macro pos:start="311:39" pos:end="315:71"><name pos:start="311:39" pos:end="311:50">av_rescale_q</name><argument_list pos:start="311:51" pos:end="315:71">(<argument pos:start="311:52" pos:end="311:86">frame-&gt;nb_samples - discard_padding</argument>,

                                                   <argument pos:start="313:52" pos:end="313:65">(AVRational){<literal type="number" pos:start="313:65" pos:end="313:65">1</literal></argument>, <argument pos:start="313:68" pos:end="313:86">avctx-&gt;sample_rate}</argument>,

                                                   <argument pos:start="315:52" pos:end="315:70">avctx-&gt;pkt_timebase</argument>)</argument_list></macro></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="317:21" pos:end="317:50"><expr pos:start="317:21" pos:end="317:49"><name pos:start="317:21" pos:end="317:39"><name pos:start="317:21" pos:end="317:25">frame</name><operator pos:start="317:26" pos:end="317:27">-&gt;</operator><name pos:start="317:28" pos:end="317:39">pkt_duration</name></name> <operator pos:start="317:41" pos:end="317:41">=</operator> <name pos:start="317:43" pos:end="317:49">diff_ts</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="319:19" pos:end="323:17">else <block pos:start="319:24" pos:end="323:17">{<block_content pos:start="321:21" pos:end="321:106">

                    <expr_stmt pos:start="321:21" pos:end="321:106"><expr pos:start="321:21" pos:end="321:105"><call pos:start="321:21" pos:end="321:105"><name pos:start="321:21" pos:end="321:26">av_log</name><argument_list pos:start="321:27" pos:end="321:105">(<argument pos:start="321:28" pos:end="321:32"><expr pos:start="321:28" pos:end="321:32"><name pos:start="321:28" pos:end="321:32">avctx</name></expr></argument>, <argument pos:start="321:35" pos:end="321:48"><expr pos:start="321:35" pos:end="321:48"><name pos:start="321:35" pos:end="321:48">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="321:51" pos:end="321:104"><expr pos:start="321:51" pos:end="321:104"><literal type="string" pos:start="321:51" pos:end="321:104">"Could not update timestamps for discarded samples.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="325:17" pos:end="327:64"><expr pos:start="325:17" pos:end="327:63"><call pos:start="325:17" pos:end="327:63"><name pos:start="325:17" pos:end="325:22">av_log</name><argument_list pos:start="325:23" pos:end="327:63">(<argument pos:start="325:24" pos:end="325:28"><expr pos:start="325:24" pos:end="325:28"><name pos:start="325:24" pos:end="325:28">avctx</name></expr></argument>, <argument pos:start="325:31" pos:end="325:42"><expr pos:start="325:31" pos:end="325:42"><name pos:start="325:31" pos:end="325:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="325:45" pos:end="325:69"><expr pos:start="325:45" pos:end="325:69"><literal type="string" pos:start="325:45" pos:end="325:69">"discard %d/%d samples\n"</literal></expr></argument>,

                       <argument pos:start="327:24" pos:end="327:43"><expr pos:start="327:24" pos:end="327:43"><operator pos:start="327:24" pos:end="327:24">(</operator><name pos:start="327:25" pos:end="327:27">int</name><operator pos:start="327:28" pos:end="327:28">)</operator><name pos:start="327:29" pos:end="327:43">discard_padding</name></expr></argument>, <argument pos:start="327:46" pos:end="327:62"><expr pos:start="327:46" pos:end="327:62"><name pos:start="327:46" pos:end="327:62"><name pos:start="327:46" pos:end="327:50">frame</name><operator pos:start="327:51" pos:end="327:52">-&gt;</operator><name pos:start="327:53" pos:end="327:62">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="329:17" pos:end="329:53"><expr pos:start="329:17" pos:end="329:52"><name pos:start="329:17" pos:end="329:33"><name pos:start="329:17" pos:end="329:21">frame</name><operator pos:start="329:22" pos:end="329:23">-&gt;</operator><name pos:start="329:24" pos:end="329:33">nb_samples</name></name> <operator pos:start="329:35" pos:end="329:36">-=</operator> <name pos:start="329:38" pos:end="329:52">discard_padding</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="337:9" pos:end="355:9"><if pos:start="337:9" pos:end="355:9">if <condition pos:start="337:12" pos:end="337:70">(<expr pos:start="337:13" pos:end="337:69"><operator pos:start="337:13" pos:end="337:13">(</operator><name pos:start="337:14" pos:end="337:26"><name pos:start="337:14" pos:end="337:18">avctx</name><operator pos:start="337:19" pos:end="337:20">-&gt;</operator><name pos:start="337:21" pos:end="337:26">flags2</name></name> <operator pos:start="337:28" pos:end="337:28">&amp;</operator> <name pos:start="337:30" pos:end="337:55">AV_CODEC_FLAG2_SKIP_MANUAL</name><operator pos:start="337:56" pos:end="337:56">)</operator> <operator pos:start="337:58" pos:end="337:59">&amp;&amp;</operator> <name pos:start="337:61" pos:end="337:69">got_frame</name></expr>)</condition> <block pos:start="337:72" pos:end="355:9">{<block_content pos:start="339:13" pos:end="353:13">

            <decl_stmt pos:start="339:13" pos:end="339:99"><decl pos:start="339:13" pos:end="339:98"><type pos:start="339:13" pos:end="339:29"><name pos:start="339:13" pos:end="339:27">AVFrameSideData</name> <modifier pos:start="339:29" pos:end="339:29">*</modifier></type><name pos:start="339:30" pos:end="339:34">fside</name> <init pos:start="339:36" pos:end="339:98">= <expr pos:start="339:38" pos:end="339:98"><call pos:start="339:38" pos:end="339:98"><name pos:start="339:38" pos:end="339:59">av_frame_new_side_data</name><argument_list pos:start="339:60" pos:end="339:98">(<argument pos:start="339:61" pos:end="339:65"><expr pos:start="339:61" pos:end="339:65"><name pos:start="339:61" pos:end="339:65">frame</name></expr></argument>, <argument pos:start="339:68" pos:end="339:93"><expr pos:start="339:68" pos:end="339:93"><name pos:start="339:68" pos:end="339:93">AV_FRAME_DATA_SKIP_SAMPLES</name></expr></argument>, <argument pos:start="339:96" pos:end="339:97"><expr pos:start="339:96" pos:end="339:97"><literal type="number" pos:start="339:96" pos:end="339:97">10</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="341:13" pos:end="353:13"><if pos:start="341:13" pos:end="353:13">if <condition pos:start="341:16" pos:end="341:22">(<expr pos:start="341:17" pos:end="341:21"><name pos:start="341:17" pos:end="341:21">fside</name></expr>)</condition> <block pos:start="341:24" pos:end="353:13">{<block_content pos:start="343:17" pos:end="351:50">

                <expr_stmt pos:start="343:17" pos:end="343:68"><expr pos:start="343:17" pos:end="343:67"><call pos:start="343:17" pos:end="343:67"><name pos:start="343:17" pos:end="343:23">AV_WL32</name><argument_list pos:start="343:24" pos:end="343:67">(<argument pos:start="343:25" pos:end="343:35"><expr pos:start="343:25" pos:end="343:35"><name pos:start="343:25" pos:end="343:35"><name pos:start="343:25" pos:end="343:29">fside</name><operator pos:start="343:30" pos:end="343:31">-&gt;</operator><name pos:start="343:32" pos:end="343:35">data</name></name></expr></argument>, <argument pos:start="343:38" pos:end="343:66"><expr pos:start="343:38" pos:end="343:66"><name pos:start="343:38" pos:end="343:66"><name pos:start="343:38" pos:end="343:42">avctx</name><operator pos:start="343:43" pos:end="343:44">-&gt;</operator><name pos:start="343:45" pos:end="343:52">internal</name><operator pos:start="343:53" pos:end="343:54">-&gt;</operator><name pos:start="343:55" pos:end="343:66">skip_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:58"><expr pos:start="345:17" pos:end="345:57"><call pos:start="345:17" pos:end="345:57"><name pos:start="345:17" pos:end="345:23">AV_WL32</name><argument_list pos:start="345:24" pos:end="345:57">(<argument pos:start="345:25" pos:end="345:39"><expr pos:start="345:25" pos:end="345:39"><name pos:start="345:25" pos:end="345:35"><name pos:start="345:25" pos:end="345:29">fside</name><operator pos:start="345:30" pos:end="345:31">-&gt;</operator><name pos:start="345:32" pos:end="345:35">data</name></name> <operator pos:start="345:37" pos:end="345:37">+</operator> <literal type="number" pos:start="345:39" pos:end="345:39">4</literal></expr></argument>, <argument pos:start="345:42" pos:end="345:56"><expr pos:start="345:42" pos:end="345:56"><name pos:start="345:42" pos:end="345:56">discard_padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:53"><expr pos:start="347:17" pos:end="347:52"><call pos:start="347:17" pos:end="347:52"><name pos:start="347:17" pos:end="347:22">AV_WL8</name><argument_list pos:start="347:23" pos:end="347:52">(<argument pos:start="347:24" pos:end="347:38"><expr pos:start="347:24" pos:end="347:38"><name pos:start="347:24" pos:end="347:34"><name pos:start="347:24" pos:end="347:28">fside</name><operator pos:start="347:29" pos:end="347:30">-&gt;</operator><name pos:start="347:31" pos:end="347:34">data</name></name> <operator pos:start="347:36" pos:end="347:36">+</operator> <literal type="number" pos:start="347:38" pos:end="347:38">8</literal></expr></argument>, <argument pos:start="347:41" pos:end="347:51"><expr pos:start="347:41" pos:end="347:51"><name pos:start="347:41" pos:end="347:51">skip_reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:56"><expr pos:start="349:17" pos:end="349:55"><call pos:start="349:17" pos:end="349:55"><name pos:start="349:17" pos:end="349:22">AV_WL8</name><argument_list pos:start="349:23" pos:end="349:55">(<argument pos:start="349:24" pos:end="349:38"><expr pos:start="349:24" pos:end="349:38"><name pos:start="349:24" pos:end="349:34"><name pos:start="349:24" pos:end="349:28">fside</name><operator pos:start="349:29" pos:end="349:30">-&gt;</operator><name pos:start="349:31" pos:end="349:34">data</name></name> <operator pos:start="349:36" pos:end="349:36">+</operator> <literal type="number" pos:start="349:38" pos:end="349:38">9</literal></expr></argument>, <argument pos:start="349:41" pos:end="349:54"><expr pos:start="349:41" pos:end="349:54"><name pos:start="349:41" pos:end="349:54">discard_reason</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:50"><expr pos:start="351:17" pos:end="351:49"><name pos:start="351:17" pos:end="351:45"><name pos:start="351:17" pos:end="351:21">avctx</name><operator pos:start="351:22" pos:end="351:23">-&gt;</operator><name pos:start="351:24" pos:end="351:31">internal</name><operator pos:start="351:32" pos:end="351:33">-&gt;</operator><name pos:start="351:34" pos:end="351:45">skip_samples</name></name> <operator pos:start="351:47" pos:end="351:47">=</operator> <literal type="number" pos:start="351:49" pos:end="351:49">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:if pos:start="359:1" pos:end="359:19">#<cpp:directive pos:start="359:2" pos:end="359:3">if</cpp:directive> <expr pos:start="359:5" pos:end="359:19"><name pos:start="359:5" pos:end="359:19">FF_API_MERGE_SD</name></expr></cpp:if>

    <if_stmt pos:start="361:5" pos:end="372:0"><if pos:start="361:5" pos:end="372:0">if <condition pos:start="361:8" pos:end="361:18">(<expr pos:start="361:9" pos:end="361:17"><name pos:start="361:9" pos:end="361:17">did_split</name></expr>)</condition> <block pos:start="361:20" pos:end="372:0">{<block_content pos:start="363:9" pos:end="367:28">

        <expr_stmt pos:start="363:9" pos:end="363:39"><expr pos:start="363:9" pos:end="363:38"><call pos:start="363:9" pos:end="363:38"><name pos:start="363:9" pos:end="363:32">av_packet_free_side_data</name><argument_list pos:start="363:33" pos:end="363:38">(<argument pos:start="363:34" pos:end="363:37"><expr pos:start="363:34" pos:end="363:37"><operator pos:start="363:34" pos:end="363:34">&amp;</operator><name pos:start="363:35" pos:end="363:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="365:9" pos:end="367:28"><if pos:start="365:9" pos:end="367:28">if<condition pos:start="365:11" pos:end="365:27">(<expr pos:start="365:12" pos:end="365:26"><name pos:start="365:12" pos:end="365:14">ret</name> <operator pos:start="365:16" pos:end="365:17">==</operator> <name pos:start="365:19" pos:end="365:26"><name pos:start="365:19" pos:end="365:21">tmp</name><operator pos:start="365:22" pos:end="365:22">.</operator><name pos:start="365:23" pos:end="365:26">size</name></name></expr>)</condition><block type="pseudo" pos:start="367:13" pos:end="367:28"><block_content pos:start="367:13" pos:end="367:28">

            <expr_stmt pos:start="367:13" pos:end="367:28"><expr pos:start="367:13" pos:end="367:27"><name pos:start="367:13" pos:end="367:15">ret</name> <operator pos:start="367:17" pos:end="367:17">=</operator> <name pos:start="367:19" pos:end="367:27"><name pos:start="367:19" pos:end="367:21">pkt</name><operator pos:start="367:22" pos:end="367:23">-&gt;</operator><name pos:start="367:24" pos:end="367:27">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="371:1" pos:end="371:6">#<cpp:directive pos:start="371:2" pos:end="371:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="375:5" pos:end="385:5"><if pos:start="375:5" pos:end="385:5">if <condition pos:start="375:8" pos:end="379:95">(<expr pos:start="375:9" pos:end="379:94"><name pos:start="375:9" pos:end="375:26"><name pos:start="375:9" pos:end="375:13">avctx</name><operator pos:start="375:14" pos:end="375:15">-&gt;</operator><name pos:start="375:16" pos:end="375:20">codec</name><operator pos:start="375:21" pos:end="375:22">-&gt;</operator><name pos:start="375:23" pos:end="375:26">type</name></name> <operator pos:start="375:28" pos:end="375:29">==</operator> <name pos:start="375:31" pos:end="375:48">AVMEDIA_TYPE_AUDIO</name> <operator pos:start="375:50" pos:end="375:51">&amp;&amp;</operator>

        <operator pos:start="377:9" pos:end="377:9">!</operator><name pos:start="377:10" pos:end="377:42"><name pos:start="377:10" pos:end="377:13">avci</name><operator pos:start="377:14" pos:end="377:15">-&gt;</operator><name pos:start="377:16" pos:end="377:42">showed_multi_packet_warning</name></name> <operator pos:start="377:44" pos:end="377:45">&amp;&amp;</operator>

        <name pos:start="379:9" pos:end="379:11">ret</name> <operator pos:start="379:13" pos:end="379:14">&gt;=</operator> <literal type="number" pos:start="379:16" pos:end="379:16">0</literal> <operator pos:start="379:18" pos:end="379:19">&amp;&amp;</operator> <name pos:start="379:21" pos:end="379:23">ret</name> <operator pos:start="379:25" pos:end="379:26">!=</operator> <name pos:start="379:28" pos:end="379:36"><name pos:start="379:28" pos:end="379:30">pkt</name><operator pos:start="379:31" pos:end="379:32">-&gt;</operator><name pos:start="379:33" pos:end="379:36">size</name></name> <operator pos:start="379:38" pos:end="379:39">&amp;&amp;</operator> <operator pos:start="379:41" pos:end="379:41">!</operator><operator pos:start="379:42" pos:end="379:42">(</operator><name pos:start="379:43" pos:end="379:68"><name pos:start="379:43" pos:end="379:47">avctx</name><operator pos:start="379:48" pos:end="379:49">-&gt;</operator><name pos:start="379:50" pos:end="379:54">codec</name><operator pos:start="379:55" pos:end="379:56">-&gt;</operator><name pos:start="379:57" pos:end="379:68">capabilities</name></name> <operator pos:start="379:70" pos:end="379:70">&amp;</operator> <name pos:start="379:72" pos:end="379:93">AV_CODEC_CAP_SUBFRAMES</name><operator pos:start="379:94" pos:end="379:94">)</operator></expr>)</condition> <block pos:start="379:97" pos:end="385:5">{<block_content pos:start="381:9" pos:end="383:46">

        <expr_stmt pos:start="381:9" pos:end="381:72"><expr pos:start="381:9" pos:end="381:71"><call pos:start="381:9" pos:end="381:71"><name pos:start="381:9" pos:end="381:14">av_log</name><argument_list pos:start="381:15" pos:end="381:71">(<argument pos:start="381:16" pos:end="381:20"><expr pos:start="381:16" pos:end="381:20"><name pos:start="381:16" pos:end="381:20">avctx</name></expr></argument>, <argument pos:start="381:23" pos:end="381:36"><expr pos:start="381:23" pos:end="381:36"><name pos:start="381:23" pos:end="381:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="381:39" pos:end="381:70"><expr pos:start="381:39" pos:end="381:70"><literal type="string" pos:start="381:39" pos:end="381:70">"Multiple frames in a packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="383:9" pos:end="383:46"><expr pos:start="383:9" pos:end="383:45"><name pos:start="383:9" pos:end="383:41"><name pos:start="383:9" pos:end="383:12">avci</name><operator pos:start="383:13" pos:end="383:14">-&gt;</operator><name pos:start="383:15" pos:end="383:41">showed_multi_packet_warning</name></name> <operator pos:start="383:43" pos:end="383:43">=</operator> <literal type="number" pos:start="383:45" pos:end="383:45">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="389:5" pos:end="391:30"><if pos:start="389:5" pos:end="391:30">if <condition pos:start="389:8" pos:end="389:19">(<expr pos:start="389:9" pos:end="389:18"><operator pos:start="389:9" pos:end="389:9">!</operator><name pos:start="389:10" pos:end="389:18">got_frame</name></expr>)</condition><block type="pseudo" pos:start="391:9" pos:end="391:30"><block_content pos:start="391:9" pos:end="391:30">

        <expr_stmt pos:start="391:9" pos:end="391:30"><expr pos:start="391:9" pos:end="391:29"><call pos:start="391:9" pos:end="391:29"><name pos:start="391:9" pos:end="391:22">av_frame_unref</name><argument_list pos:start="391:23" pos:end="391:29">(<argument pos:start="391:24" pos:end="391:28"><expr pos:start="391:24" pos:end="391:28"><name pos:start="391:24" pos:end="391:28">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="395:5" pos:end="402:0"><if pos:start="395:5" pos:end="402:0">if <condition pos:start="395:8" pos:end="395:106">(<expr pos:start="395:9" pos:end="395:105"><name pos:start="395:9" pos:end="395:11">ret</name> <operator pos:start="395:13" pos:end="395:14">&gt;=</operator> <literal type="number" pos:start="395:16" pos:end="395:16">0</literal> <operator pos:start="395:18" pos:end="395:19">&amp;&amp;</operator> <name pos:start="395:21" pos:end="395:38"><name pos:start="395:21" pos:end="395:25">avctx</name><operator pos:start="395:26" pos:end="395:27">-&gt;</operator><name pos:start="395:28" pos:end="395:32">codec</name><operator pos:start="395:33" pos:end="395:34">-&gt;</operator><name pos:start="395:35" pos:end="395:38">type</name></name> <operator pos:start="395:40" pos:end="395:41">==</operator> <name pos:start="395:43" pos:end="395:60">AVMEDIA_TYPE_VIDEO</name> <operator pos:start="395:62" pos:end="395:63">&amp;&amp;</operator> <operator pos:start="395:65" pos:end="395:65">!</operator><operator pos:start="395:66" pos:end="395:66">(</operator><name pos:start="395:67" pos:end="395:78"><name pos:start="395:67" pos:end="395:71">avctx</name><operator pos:start="395:72" pos:end="395:73">-&gt;</operator><name pos:start="395:74" pos:end="395:78">flags</name></name> <operator pos:start="395:80" pos:end="395:80">&amp;</operator> <name pos:start="395:82" pos:end="395:104">AV_CODEC_FLAG_TRUNCATED</name><operator pos:start="395:105" pos:end="395:105">)</operator></expr>)</condition><block type="pseudo" pos:start="397:9" pos:end="402:0"><block_content pos:start="397:9" pos:end="402:0">

        <expr_stmt pos:start="397:9" pos:end="402:0"><expr pos:start="397:9" pos:end="397:23"><name pos:start="397:9" pos:end="397:11">ret</name> <operator pos:start="397:13" pos:end="397:13">=</operator> <name pos:start="397:15" pos:end="397:23"><name pos:start="397:15" pos:end="397:17">pkt</name><operator pos:start="397:18" pos:end="397:19">-&gt;</operator><name pos:start="397:20" pos:end="397:23">size</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="401:1" pos:end="401:25">#<cpp:directive pos:start="401:2" pos:end="401:3">if</cpp:directive> <expr pos:start="401:5" pos:end="401:25"><name pos:start="401:5" pos:end="401:25">FF_API_AVCTX_TIMEBASE</name></expr></cpp:if>

    <if_stmt pos:start="403:5" pos:end="408:0"><if pos:start="403:5" pos:end="408:0">if <condition pos:start="403:8" pos:end="403:61">(<expr pos:start="403:9" pos:end="403:60"><name pos:start="403:9" pos:end="403:28"><name pos:start="403:9" pos:end="403:13">avctx</name><operator pos:start="403:14" pos:end="403:15">-&gt;</operator><name pos:start="403:16" pos:end="403:24">framerate</name><operator pos:start="403:25" pos:end="403:25">.</operator><name pos:start="403:26" pos:end="403:28">num</name></name> <operator pos:start="403:30" pos:end="403:30">&gt;</operator> <literal type="number" pos:start="403:32" pos:end="403:32">0</literal> <operator pos:start="403:34" pos:end="403:35">&amp;&amp;</operator> <name pos:start="403:37" pos:end="403:56"><name pos:start="403:37" pos:end="403:41">avctx</name><operator pos:start="403:42" pos:end="403:43">-&gt;</operator><name pos:start="403:44" pos:end="403:52">framerate</name><operator pos:start="403:53" pos:end="403:53">.</operator><name pos:start="403:54" pos:end="403:56">den</name></name> <operator pos:start="403:58" pos:end="403:58">&gt;</operator> <literal type="number" pos:start="403:60" pos:end="403:60">0</literal></expr>)</condition><block type="pseudo" pos:start="405:9" pos:end="408:0"><block_content pos:start="405:9" pos:end="408:0">

        <expr_stmt pos:start="405:9" pos:end="408:0"><expr pos:start="405:9" pos:end="405:104"><name pos:start="405:9" pos:end="405:24"><name pos:start="405:9" pos:end="405:13">avctx</name><operator pos:start="405:14" pos:end="405:15">-&gt;</operator><name pos:start="405:16" pos:end="405:24">time_base</name></name> <operator pos:start="405:26" pos:end="405:26">=</operator> <macro pos:start="405:28" pos:end="405:104"><name pos:start="405:28" pos:end="405:35">av_inv_q</name><argument_list pos:start="405:36" pos:end="405:104">(<argument pos:start="405:37" pos:end="405:103">av_mul_q(avctx-&gt;framerate, (AVRational){avctx-&gt;ticks_per_frame, <literal type="number" pos:start="405:101" pos:end="405:101">1</literal>})</argument>)</argument_list></macro></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:endif pos:start="407:1" pos:end="407:6">#<cpp:directive pos:start="407:2" pos:end="407:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="411:5" pos:end="411:68">/* do not stop draining when actual_got_frame != 0 or ret &lt; 0 */</comment>

    <comment type="block" pos:start="413:5" pos:end="413:74">/* got_frame == 0 but actual_got_frame != 0 when frame is discarded */</comment>

    <if_stmt pos:start="415:5" pos:end="447:5"><if pos:start="415:5" pos:end="447:5">if <condition pos:start="415:8" pos:end="415:55">(<expr pos:start="415:9" pos:end="415:54"><name pos:start="415:9" pos:end="415:33"><name pos:start="415:9" pos:end="415:13">avctx</name><operator pos:start="415:14" pos:end="415:15">-&gt;</operator><name pos:start="415:16" pos:end="415:23">internal</name><operator pos:start="415:24" pos:end="415:25">-&gt;</operator><name pos:start="415:26" pos:end="415:33">draining</name></name> <operator pos:start="415:35" pos:end="415:36">&amp;&amp;</operator> <operator pos:start="415:38" pos:end="415:38">!</operator><name pos:start="415:39" pos:end="415:54">actual_got_frame</name></expr>)</condition> <block pos:start="415:57" pos:end="447:5">{<block_content pos:start="417:9" pos:end="445:9">

        <if_stmt pos:start="417:9" pos:end="445:9"><if pos:start="417:9" pos:end="441:9">if <condition pos:start="417:12" pos:end="417:20">(<expr pos:start="417:13" pos:end="417:19"><name pos:start="417:13" pos:end="417:15">ret</name> <operator pos:start="417:17" pos:end="417:17">&lt;</operator> <literal type="number" pos:start="417:19" pos:end="417:19">0</literal></expr>)</condition> <block pos:start="417:22" pos:end="441:9">{<block_content pos:start="423:13" pos:end="439:13">

            <comment type="block" pos:start="419:13" pos:end="419:92">/* prevent infinite loop if a decoder wrongly always return error on draining */</comment>

            <comment type="block" pos:start="421:13" pos:end="421:76">/* reasonable nb_errors_max = maximum b frames + thread count */</comment>

            <decl_stmt pos:start="423:13" pos:end="425:57"><decl pos:start="423:13" pos:end="425:56"><type pos:start="423:13" pos:end="423:15"><name pos:start="423:13" pos:end="423:15">int</name></type> <name pos:start="423:17" pos:end="423:29">nb_errors_max</name> <init pos:start="423:31" pos:end="425:56">= <expr pos:start="423:33" pos:end="425:56"><literal type="number" pos:start="423:33" pos:end="423:36">20</literal> <operator pos:start="423:36" pos:end="423:36">+</operator> <operator pos:start="423:38" pos:end="423:38">(</operator><ternary pos:start="423:39" pos:end="425:55"><condition pos:start="423:39" pos:end="423:99"><expr pos:start="423:39" pos:end="423:97"><name pos:start="423:39" pos:end="423:50">HAVE_THREADS</name> <operator pos:start="423:52" pos:end="423:53">&amp;&amp;</operator> <name pos:start="423:55" pos:end="423:79"><name pos:start="423:55" pos:end="423:59">avctx</name><operator pos:start="423:60" pos:end="423:61">-&gt;</operator><name pos:start="423:62" pos:end="423:79">active_thread_type</name></name> <operator pos:start="423:81" pos:end="423:81">&amp;</operator> <name pos:start="423:83" pos:end="423:97">FF_THREAD_FRAME</name></expr> ?</condition><then pos:start="425:33" pos:end="425:51">

                                <expr pos:start="425:33" pos:end="425:51"><name pos:start="425:33" pos:end="425:51"><name pos:start="425:33" pos:end="425:37">avctx</name><operator pos:start="425:38" pos:end="425:39">-&gt;</operator><name pos:start="425:40" pos:end="425:51">thread_count</name></name></expr> </then><else pos:start="425:53" pos:end="425:55">: <expr pos:start="425:55" pos:end="425:55"><literal type="number" pos:start="425:55" pos:end="425:55">1</literal></expr></else></ternary><operator pos:start="425:56" pos:end="425:56">)</operator></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="429:13" pos:end="439:13"><if pos:start="429:13" pos:end="439:13">if <condition pos:start="429:16" pos:end="429:60">(<expr pos:start="429:17" pos:end="429:59"><name pos:start="429:17" pos:end="429:40"><name pos:start="429:17" pos:end="429:20">avci</name><operator pos:start="429:21" pos:end="429:22">-&gt;</operator><name pos:start="429:23" pos:end="429:40">nb_draining_errors</name></name><operator pos:start="429:41" pos:end="429:42">++</operator> <operator pos:start="429:44" pos:end="429:45">&gt;=</operator> <name pos:start="429:47" pos:end="429:59">nb_errors_max</name></expr>)</condition> <block pos:start="429:62" pos:end="439:13">{<block_content pos:start="431:17" pos:end="437:34">

                <expr_stmt pos:start="431:17" pos:end="433:57"><expr pos:start="431:17" pos:end="433:56"><call pos:start="431:17" pos:end="433:56"><name pos:start="431:17" pos:end="431:22">av_log</name><argument_list pos:start="431:23" pos:end="433:56">(<argument pos:start="431:24" pos:end="431:28"><expr pos:start="431:24" pos:end="431:28"><name pos:start="431:24" pos:end="431:28">avctx</name></expr></argument>, <argument pos:start="431:31" pos:end="431:42"><expr pos:start="431:31" pos:end="431:42"><name pos:start="431:31" pos:end="431:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="431:45" pos:end="433:55"><expr pos:start="431:45" pos:end="433:55"><literal type="string" pos:start="431:45" pos:end="431:92">"Too many errors when draining, this is a bug. "</literal>

                       <literal type="string" pos:start="433:24" pos:end="433:55">"Stop draining and force EOF.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="435:17" pos:end="435:40"><expr pos:start="435:17" pos:end="435:39"><name pos:start="435:17" pos:end="435:35"><name pos:start="435:17" pos:end="435:20">avci</name><operator pos:start="435:21" pos:end="435:22">-&gt;</operator><name pos:start="435:23" pos:end="435:35">draining_done</name></name> <operator pos:start="435:37" pos:end="435:37">=</operator> <literal type="number" pos:start="435:39" pos:end="435:39">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="437:17" pos:end="437:34"><expr pos:start="437:17" pos:end="437:33"><name pos:start="437:17" pos:end="437:19">ret</name> <operator pos:start="437:21" pos:end="437:21">=</operator> <name pos:start="437:23" pos:end="437:33">AVERROR_BUG</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="441:11" pos:end="445:9">else <block pos:start="441:16" pos:end="445:9">{<block_content pos:start="443:13" pos:end="443:36">

            <expr_stmt pos:start="443:13" pos:end="443:36"><expr pos:start="443:13" pos:end="443:35"><name pos:start="443:13" pos:end="443:31"><name pos:start="443:13" pos:end="443:16">avci</name><operator pos:start="443:17" pos:end="443:18">-&gt;</operator><name pos:start="443:19" pos:end="443:31">draining_done</name></name> <operator pos:start="443:33" pos:end="443:33">=</operator> <literal type="number" pos:start="443:35" pos:end="443:35">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:40"><expr pos:start="451:5" pos:end="451:39"><name pos:start="451:5" pos:end="451:32"><name pos:start="451:5" pos:end="451:8">avci</name><operator pos:start="451:9" pos:end="451:10">-&gt;</operator><name pos:start="451:11" pos:end="451:32">compat_decode_consumed</name></name> <operator pos:start="451:34" pos:end="451:35">+=</operator> <name pos:start="451:37" pos:end="451:39">ret</name></expr>;</expr_stmt>



    <if_stmt pos:start="455:5" pos:end="479:5"><if pos:start="455:5" pos:end="459:5">if <condition pos:start="455:8" pos:end="455:36">(<expr pos:start="455:9" pos:end="455:35"><name pos:start="455:9" pos:end="455:11">ret</name> <operator pos:start="455:13" pos:end="455:14">&gt;=</operator> <name pos:start="455:16" pos:end="455:24"><name pos:start="455:16" pos:end="455:18">pkt</name><operator pos:start="455:19" pos:end="455:20">-&gt;</operator><name pos:start="455:21" pos:end="455:24">size</name></name> <operator pos:start="455:26" pos:end="455:27">||</operator> <name pos:start="455:29" pos:end="455:31">ret</name> <operator pos:start="455:33" pos:end="455:33">&lt;</operator> <literal type="number" pos:start="455:35" pos:end="455:35">0</literal></expr>)</condition> <block pos:start="455:38" pos:end="459:5">{<block_content pos:start="457:9" pos:end="457:29">

        <expr_stmt pos:start="457:9" pos:end="457:29"><expr pos:start="457:9" pos:end="457:28"><call pos:start="457:9" pos:end="457:28"><name pos:start="457:9" pos:end="457:23">av_packet_unref</name><argument_list pos:start="457:24" pos:end="457:28">(<argument pos:start="457:25" pos:end="457:27"><expr pos:start="457:25" pos:end="457:27"><name pos:start="457:25" pos:end="457:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="459:7" pos:end="479:5">else <block pos:start="459:12" pos:end="479:5">{<block_content pos:start="461:9" pos:end="477:51">

        <decl_stmt pos:start="461:9" pos:end="461:27"><decl pos:start="461:9" pos:end="461:26"><type pos:start="461:9" pos:end="461:11"><name pos:start="461:9" pos:end="461:11">int</name></type> <name pos:start="461:13" pos:end="461:20">consumed</name> <init pos:start="461:22" pos:end="461:26">= <expr pos:start="461:24" pos:end="461:26"><name pos:start="461:24" pos:end="461:26">ret</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="465:9" pos:end="465:45"><expr pos:start="465:9" pos:end="465:44"><name pos:start="465:9" pos:end="465:17"><name pos:start="465:9" pos:end="465:11">pkt</name><operator pos:start="465:12" pos:end="465:13">-&gt;</operator><name pos:start="465:14" pos:end="465:17">data</name></name>                <operator pos:start="465:34" pos:end="465:35">+=</operator> <name pos:start="465:37" pos:end="465:44">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="467:9" pos:end="467:45"><expr pos:start="467:9" pos:end="467:44"><name pos:start="467:9" pos:end="467:17"><name pos:start="467:9" pos:end="467:11">pkt</name><operator pos:start="467:12" pos:end="467:13">-&gt;</operator><name pos:start="467:14" pos:end="467:17">size</name></name>                <operator pos:start="467:34" pos:end="467:35">-=</operator> <name pos:start="467:37" pos:end="467:44">consumed</name></expr>;</expr_stmt>

        <expr_stmt pos:start="469:9" pos:end="469:47"><expr pos:start="469:9" pos:end="469:46"><name pos:start="469:9" pos:end="469:34"><name pos:start="469:9" pos:end="469:12">avci</name><operator pos:start="469:13" pos:end="469:14">-&gt;</operator><name pos:start="469:15" pos:end="469:28">last_pkt_props</name><operator pos:start="469:29" pos:end="469:30">-&gt;</operator><name pos:start="469:31" pos:end="469:34">size</name></name> <operator pos:start="469:36" pos:end="469:37">-=</operator> <name pos:start="469:39" pos:end="469:46">consumed</name></expr>;</expr_stmt> <comment type="line" pos:start="469:49" pos:end="469:86">// See extract_packet_props() comment.</comment>

        <expr_stmt pos:start="471:9" pos:end="471:51"><expr pos:start="471:9" pos:end="471:50"><name pos:start="471:9" pos:end="471:16"><name pos:start="471:9" pos:end="471:11">pkt</name><operator pos:start="471:12" pos:end="471:13">-&gt;</operator><name pos:start="471:14" pos:end="471:16">pts</name></name>                  <operator pos:start="471:35" pos:end="471:35">=</operator> <name pos:start="471:37" pos:end="471:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="473:9" pos:end="473:51"><expr pos:start="473:9" pos:end="473:50"><name pos:start="473:9" pos:end="473:16"><name pos:start="473:9" pos:end="473:11">pkt</name><operator pos:start="473:12" pos:end="473:13">-&gt;</operator><name pos:start="473:14" pos:end="473:16">dts</name></name>                  <operator pos:start="473:35" pos:end="473:35">=</operator> <name pos:start="473:37" pos:end="473:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="475:9" pos:end="475:51"><expr pos:start="475:9" pos:end="475:50"><name pos:start="475:9" pos:end="475:33"><name pos:start="475:9" pos:end="475:12">avci</name><operator pos:start="475:13" pos:end="475:14">-&gt;</operator><name pos:start="475:15" pos:end="475:28">last_pkt_props</name><operator pos:start="475:29" pos:end="475:30">-&gt;</operator><name pos:start="475:31" pos:end="475:33">pts</name></name> <operator pos:start="475:35" pos:end="475:35">=</operator> <name pos:start="475:37" pos:end="475:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="477:9" pos:end="477:51"><expr pos:start="477:9" pos:end="477:50"><name pos:start="477:9" pos:end="477:33"><name pos:start="477:9" pos:end="477:12">avci</name><operator pos:start="477:13" pos:end="477:14">-&gt;</operator><name pos:start="477:15" pos:end="477:28">last_pkt_props</name><operator pos:start="477:29" pos:end="477:30">-&gt;</operator><name pos:start="477:31" pos:end="477:33">dts</name></name> <operator pos:start="477:35" pos:end="477:35">=</operator> <name pos:start="477:37" pos:end="477:50">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="483:5" pos:end="485:34"><if pos:start="483:5" pos:end="485:34">if <condition pos:start="483:8" pos:end="483:18">(<expr pos:start="483:9" pos:end="483:17"><name pos:start="483:9" pos:end="483:17">got_frame</name></expr>)</condition><block type="pseudo" pos:start="485:9" pos:end="485:34"><block_content pos:start="485:9" pos:end="485:34">

        <expr_stmt pos:start="485:9" pos:end="485:34"><expr pos:start="485:9" pos:end="485:33"><call pos:start="485:9" pos:end="485:33"><name pos:start="485:9" pos:end="485:18">av_assert0</name><argument_list pos:start="485:19" pos:end="485:33">(<argument pos:start="485:20" pos:end="485:32"><expr pos:start="485:20" pos:end="485:32"><name pos:start="485:20" pos:end="485:32"><name pos:start="485:20" pos:end="485:24">frame</name><operator pos:start="485:25" pos:end="485:26">-&gt;</operator><name pos:start="485:27" pos:end="485:29">buf</name><index pos:start="485:30" pos:end="485:32">[<expr pos:start="485:31" pos:end="485:31"><literal type="number" pos:start="485:31" pos:end="485:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="489:5" pos:end="489:29">return <expr pos:start="489:12" pos:end="489:28"><ternary pos:start="489:12" pos:end="489:28"><condition pos:start="489:12" pos:end="489:20"><expr pos:start="489:12" pos:end="489:18"><name pos:start="489:12" pos:end="489:14">ret</name> <operator pos:start="489:16" pos:end="489:16">&lt;</operator> <literal type="number" pos:start="489:18" pos:end="489:18">0</literal></expr> ?</condition><then pos:start="489:22" pos:end="489:24"> <expr pos:start="489:22" pos:end="489:24"><name pos:start="489:22" pos:end="489:24">ret</name></expr> </then><else pos:start="489:26" pos:end="489:28">: <expr pos:start="489:28" pos:end="489:28"><literal type="number" pos:start="489:28" pos:end="489:28">0</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
