<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14060.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_random</name><parameter_list pos:start="1:23" pos:end="1:55">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:31">uint32_t</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">dst</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><specifier pos:start="1:39" pos:end="1:43">const</specifier> <name pos:start="1:45" pos:end="1:48">char</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">file</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">fd</name> <init pos:start="5:12" pos:end="5:33">= <expr pos:start="5:14" pos:end="5:33"><call pos:start="5:14" pos:end="5:33"><name pos:start="5:14" pos:end="5:17">open</name><argument_list pos:start="5:18" pos:end="5:33">(<argument pos:start="5:19" pos:end="5:22"><expr pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">file</name></expr></argument>, <argument pos:start="5:25" pos:end="5:32"><expr pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:32">O_RDONLY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:16">= <expr pos:start="7:15" pos:end="7:16"><operator pos:start="7:15" pos:end="7:15">-</operator><literal type="number" pos:start="7:16" pos:end="7:16">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="16:0"><if pos:start="11:5" pos:end="16:0">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:10">fd</name> <operator pos:start="11:12" pos:end="11:13">==</operator> <operator pos:start="11:15" pos:end="11:15">-</operator><literal type="number" pos:start="11:16" pos:end="11:16">1</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="16:0"><block_content pos:start="13:9" pos:end="16:0">

        <return pos:start="13:9" pos:end="16:0">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

<cpp:if pos:start="15:1" pos:end="15:37">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:14">HAVE_FCNTL</name> <operator pos:start="15:16" pos:end="15:17">&amp;&amp;</operator> <call pos:start="15:19" pos:end="15:37"><name pos:start="15:19" pos:end="15:25">defined</name><argument_list pos:start="15:26" pos:end="15:37">(<argument pos:start="15:27" pos:end="15:36"><expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <if_stmt pos:start="17:5" pos:end="21:42"><if pos:start="17:5" pos:end="21:42">if <condition pos:start="17:8" pos:end="20:0">(<expr pos:start="17:9" pos:end="17:65"><call pos:start="17:9" pos:end="17:59"><name pos:start="17:9" pos:end="17:13">fcntl</name><argument_list pos:start="17:14" pos:end="17:59">(<argument pos:start="17:15" pos:end="17:16"><expr pos:start="17:15" pos:end="17:16"><name pos:start="17:15" pos:end="17:16">fd</name></expr></argument>, <argument pos:start="17:19" pos:end="17:25"><expr pos:start="17:19" pos:end="17:25"><name pos:start="17:19" pos:end="17:25">F_SETFL</name></expr></argument>, <argument pos:start="17:28" pos:end="17:58"><expr pos:start="17:28" pos:end="17:58"><call pos:start="17:28" pos:end="17:45"><name pos:start="17:28" pos:end="17:32">fcntl</name><argument_list pos:start="17:33" pos:end="17:45">(<argument pos:start="17:34" pos:end="17:35"><expr pos:start="17:34" pos:end="17:35"><name pos:start="17:34" pos:end="17:35">fd</name></expr></argument>, <argument pos:start="17:38" pos:end="17:44"><expr pos:start="17:38" pos:end="17:44"><name pos:start="17:38" pos:end="17:44">F_GETFL</name></expr></argument>)</argument_list></call> <operator pos:start="17:47" pos:end="17:47">|</operator> <name pos:start="17:49" pos:end="17:58">O_NONBLOCK</name></expr></argument>)</argument_list></call> <operator pos:start="17:61" pos:end="17:62">!=</operator> <operator pos:start="17:64" pos:end="17:64">-</operator><literal type="number" pos:start="17:65" pos:end="17:65">1</literal></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:42"><block_content pos:start="21:9" pos:end="21:42">

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:11">err</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="21:41"><name pos:start="21:15" pos:end="21:18">read</name><argument_list pos:start="21:19" pos:end="21:41">(<argument pos:start="21:20" pos:end="21:21"><expr pos:start="21:20" pos:end="21:21"><name pos:start="21:20" pos:end="21:21">fd</name></expr></argument>, <argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">dst</name></expr></argument>, <argument pos:start="21:29" pos:end="21:40"><expr pos:start="21:29" pos:end="21:40"><sizeof pos:start="21:29" pos:end="21:40">sizeof<argument_list pos:start="21:35" pos:end="21:40">(<argument pos:start="21:36" pos:end="21:39"><expr pos:start="21:36" pos:end="21:39"><operator pos:start="21:36" pos:end="21:36">*</operator><name pos:start="21:37" pos:end="21:39">dst</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:14"><expr pos:start="23:5" pos:end="23:13"><call pos:start="23:5" pos:end="23:13"><name pos:start="23:5" pos:end="23:9">close</name><argument_list pos:start="23:10" pos:end="23:13">(<argument pos:start="23:11" pos:end="23:12"><expr pos:start="23:11" pos:end="23:12"><name pos:start="23:11" pos:end="23:12">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="27:5" pos:end="27:15">return <expr pos:start="27:12" pos:end="27:14"><name pos:start="27:12" pos:end="27:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
