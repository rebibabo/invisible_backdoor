<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2054.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">cpu_x86_load_seg</name><parameter_list pos:start="1:22" pos:end="1:64">(<parameter pos:start="1:23" pos:end="1:36"><decl pos:start="1:23" pos:end="1:36"><type pos:start="1:23" pos:end="1:36"><name pos:start="1:23" pos:end="1:33">CPUX86State</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">s</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:49">seg_reg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:63">selector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:20">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">CPUX86State</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:26">saved_env</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:20"><expr pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:13">saved_env</name> <operator pos:start="9:15" pos:end="9:15">=</operator> <name pos:start="9:17" pos:end="9:19">env</name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:12"><expr pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:7">env</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:11">s</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="37:5"><if pos:start="13:5" pos:end="33:5">if <condition pos:start="13:8" pos:end="13:30">(<expr pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:11">env</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:19">eflags</name></name> <operator pos:start="13:21" pos:end="13:21">&amp;</operator> <name pos:start="13:23" pos:end="13:29">VM_MASK</name></expr>)</condition> <block pos:start="13:32" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:38">

        <decl_stmt pos:start="15:9" pos:end="15:25"><decl pos:start="15:9" pos:end="15:24"><type pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:20">SegmentCache</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">sc</name></decl>;</decl_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:16">selector</name> <operator pos:start="17:18" pos:end="17:19">&amp;=</operator> <literal type="number" pos:start="17:21" pos:end="17:26">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:10">sc</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:37"><name pos:start="19:15" pos:end="19:17">env</name><operator pos:start="19:18" pos:end="19:19">-&gt;</operator><name pos:start="19:20" pos:end="19:28">seg_cache</name><index pos:start="19:29" pos:end="19:37">[<expr pos:start="19:30" pos:end="19:36"><name pos:start="19:30" pos:end="19:36">seg_reg</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="block" pos:start="21:9" pos:end="23:39">/* NOTE: in VM86 mode, limit and seg_32bit are never reloaded,

           so we must load them here */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:10">sc</name><operator pos:start="25:11" pos:end="25:12">-&gt;</operator><name pos:start="25:13" pos:end="25:16">base</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <operator pos:start="25:20" pos:end="25:20">(</operator><name pos:start="25:21" pos:end="25:24">void</name> <operator pos:start="25:26" pos:end="25:26">*</operator><operator pos:start="25:27" pos:end="25:27">)</operator><operator pos:start="25:28" pos:end="25:28">(</operator><name pos:start="25:29" pos:end="25:36">selector</name> <operator pos:start="25:38" pos:end="25:39">&lt;&lt;</operator> <literal type="number" pos:start="25:41" pos:end="25:41">4</literal><operator pos:start="25:42" pos:end="25:42">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:27"><expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:10">sc</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">limit</name></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:26">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:10">sc</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:21">seg_32bit</name></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:38"><expr pos:start="31:9" pos:end="31:37"><name pos:start="31:9" pos:end="31:26"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:17">segs</name><index pos:start="31:18" pos:end="31:26">[<expr pos:start="31:19" pos:end="31:25"><name pos:start="31:19" pos:end="31:25">seg_reg</name></expr>]</index></name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:37">selector</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:39">

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><call pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:16">load_seg</name><argument_list pos:start="35:17" pos:end="35:38">(<argument pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:24"><name pos:start="35:18" pos:end="35:24">seg_reg</name></expr></argument>, <argument pos:start="35:27" pos:end="35:34"><expr pos:start="35:27" pos:end="35:34"><name pos:start="35:27" pos:end="35:34">selector</name></expr></argument>, <argument pos:start="35:37" pos:end="35:37"><expr pos:start="35:37" pos:end="35:37"><literal type="number" pos:start="35:37" pos:end="35:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:20"><expr pos:start="39:5" pos:end="39:19"><name pos:start="39:5" pos:end="39:7">env</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:19">saved_env</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
