<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22466.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">handle_qmp_command</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:56"><decl pos:start="1:32" pos:end="1:56"><type pos:start="1:32" pos:end="1:56"><name pos:start="1:32" pos:end="1:48">JSONMessageParser</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:56">parser</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:71"><decl pos:start="1:59" pos:end="1:71"><type pos:start="1:59" pos:end="1:71"><name pos:start="1:59" pos:end="1:63">QList</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:71">tokens</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:18">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">Error</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:20">local_err</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">QObject</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">obj</name></decl>, <decl pos:start="7:19" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:13"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QDict</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">input</name></decl>, <decl pos:start="9:19" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:11"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:23">args</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:21"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:19">mon_cmd_t</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">cmd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:24">cmd_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:27"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">Monitor</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:16">mon</name> <init pos:start="15:18" pos:end="15:26">= <expr pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:26">cur_mon</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:24"><expr pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:8">args</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:16">input</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <name pos:start="19:20" pos:end="19:23">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:8">data</name> <operator pos:start="21:10" pos:end="21:10">=</operator> <name pos:start="21:12" pos:end="21:15">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:7">obj</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:41"><name pos:start="25:11" pos:end="25:27">json_parser_parse</name><argument_list pos:start="25:28" pos:end="25:41">(<argument pos:start="25:29" pos:end="25:34"><expr pos:start="25:29" pos:end="25:34"><name pos:start="25:29" pos:end="25:34">tokens</name></expr></argument>, <argument pos:start="25:37" pos:end="25:40"><expr pos:start="25:37" pos:end="25:40"><name pos:start="25:37" pos:end="25:40">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">obj</name></expr>)</condition> <block pos:start="27:15" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:21">

        <comment type="line" pos:start="29:9" pos:end="29:60">// FIXME: should be triggered in json_parser_parse()</comment>

        <expr_stmt pos:start="31:9" pos:end="31:41"><expr pos:start="31:9" pos:end="31:40"><call pos:start="31:9" pos:end="31:40"><name pos:start="31:9" pos:end="31:21">qerror_report</name><argument_list pos:start="31:22" pos:end="31:40">(<argument pos:start="31:23" pos:end="31:39"><expr pos:start="31:23" pos:end="31:39"><name pos:start="31:23" pos:end="31:39">QERR_JSON_PARSING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:21">goto <name pos:start="33:14" pos:end="33:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:49"><expr pos:start="39:5" pos:end="39:48"><name pos:start="39:5" pos:end="39:9">input</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <call pos:start="39:13" pos:end="39:48"><name pos:start="39:13" pos:end="39:31">qmp_check_input_obj</name><argument_list pos:start="39:32" pos:end="39:48">(<argument pos:start="39:33" pos:end="39:35"><expr pos:start="39:33" pos:end="39:35"><name pos:start="39:33" pos:end="39:35">obj</name></expr></argument>, <argument pos:start="39:38" pos:end="39:47"><expr pos:start="39:38" pos:end="39:47"><operator pos:start="39:38" pos:end="39:38">&amp;</operator><name pos:start="39:39" pos:end="39:47">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="49:5"><if pos:start="41:5" pos:end="49:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:14">input</name></expr>)</condition> <block pos:start="41:17" pos:end="49:5">{<block_content pos:start="43:9" pos:end="47:21">

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:25">qerror_report_err</name><argument_list pos:start="43:26" pos:end="43:36">(<argument pos:start="43:27" pos:end="43:35"><expr pos:start="43:27" pos:end="43:35"><name pos:start="43:27" pos:end="43:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><call pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:22">qobject_decref</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="47:9" pos:end="47:21">goto <name pos:start="47:14" pos:end="47:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:15"><name pos:start="53:5" pos:end="53:7">mon</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:11">mc</name><operator pos:start="53:12" pos:end="53:13">-&gt;</operator><name pos:start="53:14" pos:end="53:15">id</name></name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:40"><name pos:start="53:19" pos:end="53:27">qdict_get</name><argument_list pos:start="53:28" pos:end="53:40">(<argument pos:start="53:29" pos:end="53:33"><expr pos:start="53:29" pos:end="53:33"><name pos:start="53:29" pos:end="53:33">input</name></expr></argument>, <argument pos:start="53:36" pos:end="53:39"><expr pos:start="53:36" pos:end="53:39"><literal type="string" pos:start="53:36" pos:end="53:39">"id"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:32"><expr pos:start="55:5" pos:end="55:31"><call pos:start="55:5" pos:end="55:31"><name pos:start="55:5" pos:end="55:18">qobject_incref</name><argument_list pos:start="55:19" pos:end="55:31">(<argument pos:start="55:20" pos:end="55:30"><expr pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:30"><name pos:start="55:20" pos:end="55:22">mon</name><operator pos:start="55:23" pos:end="55:24">-&gt;</operator><name pos:start="55:25" pos:end="55:26">mc</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:30">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:47"><expr pos:start="59:5" pos:end="59:46"><name pos:start="59:5" pos:end="59:12">cmd_name</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <call pos:start="59:16" pos:end="59:46"><name pos:start="59:16" pos:end="59:28">qdict_get_str</name><argument_list pos:start="59:29" pos:end="59:46">(<argument pos:start="59:30" pos:end="59:34"><expr pos:start="59:30" pos:end="59:34"><name pos:start="59:30" pos:end="59:34">input</name></expr></argument>, <argument pos:start="59:37" pos:end="59:45"><expr pos:start="59:37" pos:end="59:45"><literal type="string" pos:start="59:37" pos:end="59:45">"execute"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><call pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:28">trace_handle_qmp_command</name><argument_list pos:start="61:29" pos:end="61:43">(<argument pos:start="61:30" pos:end="61:32"><expr pos:start="61:30" pos:end="61:32"><name pos:start="61:30" pos:end="61:32">mon</name></expr></argument>, <argument pos:start="61:35" pos:end="61:42"><expr pos:start="61:35" pos:end="61:42"><name pos:start="61:35" pos:end="61:42">cmd_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:33"><expr pos:start="63:5" pos:end="63:32"><name pos:start="63:5" pos:end="63:7">cmd</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <call pos:start="63:11" pos:end="63:32"><name pos:start="63:11" pos:end="63:22">qmp_find_cmd</name><argument_list pos:start="63:23" pos:end="63:32">(<argument pos:start="63:24" pos:end="63:31"><expr pos:start="63:24" pos:end="63:31"><name pos:start="63:24" pos:end="63:31">cmd_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="73:5"><if pos:start="65:5" pos:end="73:5">if <condition pos:start="65:8" pos:end="65:13">(<expr pos:start="65:9" pos:end="65:12"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:12">cmd</name></expr>)</condition> <block pos:start="65:15" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:21">

        <expr_stmt pos:start="67:9" pos:end="69:69"><expr pos:start="67:9" pos:end="69:68"><call pos:start="67:9" pos:end="69:68"><name pos:start="67:9" pos:end="67:21">qerror_report</name><argument_list pos:start="67:22" pos:end="69:68">(<argument pos:start="67:23" pos:end="67:51"><expr pos:start="67:23" pos:end="67:51"><name pos:start="67:23" pos:end="67:51">ERROR_CLASS_COMMAND_NOT_FOUND</name></expr></argument>,

                      <argument pos:start="69:23" pos:end="69:57"><expr pos:start="69:23" pos:end="69:57"><literal type="string" pos:start="69:23" pos:end="69:57">"The command %s has not been found"</literal></expr></argument>, <argument pos:start="69:60" pos:end="69:67"><expr pos:start="69:60" pos:end="69:67"><name pos:start="69:60" pos:end="69:67">cmd_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="71:9" pos:end="71:21">goto <name pos:start="71:14" pos:end="71:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="79:5"><if pos:start="75:5" pos:end="79:5">if <condition pos:start="75:8" pos:end="75:35">(<expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:24">invalid_qmp_mode</name><argument_list pos:start="75:25" pos:end="75:34">(<argument pos:start="75:26" pos:end="75:28"><expr pos:start="75:26" pos:end="75:28"><name pos:start="75:26" pos:end="75:28">mon</name></expr></argument>, <argument pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:33">cmd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="75:37" pos:end="79:5">{<block_content pos:start="77:9" pos:end="77:21">

        <goto pos:start="77:9" pos:end="77:21">goto <name pos:start="77:14" pos:end="77:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:40"><expr pos:start="83:5" pos:end="83:39"><name pos:start="83:5" pos:end="83:7">obj</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:39"><name pos:start="83:11" pos:end="83:19">qdict_get</name><argument_list pos:start="83:20" pos:end="83:39">(<argument pos:start="83:21" pos:end="83:25"><expr pos:start="83:21" pos:end="83:25"><name pos:start="83:21" pos:end="83:25">input</name></expr></argument>, <argument pos:start="83:28" pos:end="83:38"><expr pos:start="83:28" pos:end="83:38"><literal type="string" pos:start="83:28" pos:end="83:38">"arguments"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="95:5"><if pos:start="85:5" pos:end="89:5">if <condition pos:start="85:8" pos:end="85:13">(<expr pos:start="85:9" pos:end="85:12"><operator pos:start="85:9" pos:end="85:9">!</operator><name pos:start="85:10" pos:end="85:12">obj</name></expr>)</condition> <block pos:start="85:15" pos:end="89:5">{<block_content pos:start="87:9" pos:end="87:27">

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:12">args</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:26"><name pos:start="87:16" pos:end="87:24">qdict_new</name><argument_list pos:start="87:25" pos:end="87:26">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="95:5">else <block pos:start="89:12" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:22">

        <expr_stmt pos:start="91:9" pos:end="91:37"><expr pos:start="91:9" pos:end="91:36"><name pos:start="91:9" pos:end="91:12">args</name> <operator pos:start="91:14" pos:end="91:14">=</operator> <call pos:start="91:16" pos:end="91:36"><name pos:start="91:16" pos:end="91:31">qobject_to_qdict</name><argument_list pos:start="91:32" pos:end="91:36">(<argument pos:start="91:33" pos:end="91:35"><expr pos:start="91:33" pos:end="91:35"><name pos:start="91:33" pos:end="91:35">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><call pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:15">QINCREF</name><argument_list pos:start="93:16" pos:end="93:21">(<argument pos:start="93:17" pos:end="93:20"><expr pos:start="93:17" pos:end="93:20"><name pos:start="93:17" pos:end="93:20">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:49"><expr pos:start="99:5" pos:end="99:48"><call pos:start="99:5" pos:end="99:48"><name pos:start="99:5" pos:end="99:25">qmp_check_client_args</name><argument_list pos:start="99:26" pos:end="99:48">(<argument pos:start="99:27" pos:end="99:29"><expr pos:start="99:27" pos:end="99:29"><name pos:start="99:27" pos:end="99:29">cmd</name></expr></argument>, <argument pos:start="99:32" pos:end="99:35"><expr pos:start="99:32" pos:end="99:35"><name pos:start="99:32" pos:end="99:35">args</name></expr></argument>, <argument pos:start="99:38" pos:end="99:47"><expr pos:start="99:38" pos:end="99:47"><operator pos:start="99:38" pos:end="99:38">&amp;</operator><name pos:start="99:39" pos:end="99:47">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:18">(<expr pos:start="101:9" pos:end="101:17"><name pos:start="101:9" pos:end="101:17">local_err</name></expr>)</condition> <block pos:start="101:20" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:21">

        <expr_stmt pos:start="103:9" pos:end="103:37"><expr pos:start="103:9" pos:end="103:36"><call pos:start="103:9" pos:end="103:36"><name pos:start="103:9" pos:end="103:25">qerror_report_err</name><argument_list pos:start="103:26" pos:end="103:36">(<argument pos:start="103:27" pos:end="103:35"><expr pos:start="103:27" pos:end="103:35"><name pos:start="103:27" pos:end="103:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="105:9" pos:end="105:21">goto <name pos:start="105:14" pos:end="105:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="123:5"><if pos:start="111:5" pos:end="123:5">if <condition pos:start="111:8" pos:end="111:48">(<expr pos:start="111:9" pos:end="111:47"><call pos:start="111:9" pos:end="111:47"><name pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:11">cmd</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:21">mhandler</name><operator pos:start="111:22" pos:end="111:22">.</operator><name pos:start="111:23" pos:end="111:29">cmd_new</name></name><argument_list pos:start="111:30" pos:end="111:47">(<argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">mon</name></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">args</name></expr></argument>, <argument pos:start="111:42" pos:end="111:46"><expr pos:start="111:42" pos:end="111:46"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:46">data</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="111:50" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:9">

        <comment type="block" pos:start="113:9" pos:end="113:31">/* Command failed... */</comment>

        <if_stmt pos:start="115:9" pos:end="121:9"><if pos:start="115:9" pos:end="121:9">if <condition pos:start="115:12" pos:end="115:36">(<expr pos:start="115:13" pos:end="115:35"><operator pos:start="115:13" pos:end="115:13">!</operator><call pos:start="115:14" pos:end="115:35"><name pos:start="115:14" pos:end="115:30">monitor_has_error</name><argument_list pos:start="115:31" pos:end="115:35">(<argument pos:start="115:32" pos:end="115:34"><expr pos:start="115:32" pos:end="115:34"><name pos:start="115:32" pos:end="115:34">mon</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="115:38" pos:end="121:9">{<block_content pos:start="119:13" pos:end="119:48">

            <comment type="block" pos:start="117:13" pos:end="117:62">/* ... without setting an error, so make one up */</comment>

            <expr_stmt pos:start="119:13" pos:end="119:48"><expr pos:start="119:13" pos:end="119:47"><call pos:start="119:13" pos:end="119:47"><name pos:start="119:13" pos:end="119:25">qerror_report</name><argument_list pos:start="119:26" pos:end="119:47">(<argument pos:start="119:27" pos:end="119:46"><expr pos:start="119:27" pos:end="119:46"><name pos:start="119:27" pos:end="119:46">QERR_UNDEFINED_ERROR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="127:1" pos:end="127:8"><name pos:start="127:1" pos:end="127:7">err_out</name>:</label>

    <expr_stmt pos:start="129:5" pos:end="129:40"><expr pos:start="129:5" pos:end="129:39"><call pos:start="129:5" pos:end="129:39"><name pos:start="129:5" pos:end="129:28">monitor_protocol_emitter</name><argument_list pos:start="129:29" pos:end="129:39">(<argument pos:start="129:30" pos:end="129:32"><expr pos:start="129:30" pos:end="129:32"><name pos:start="129:30" pos:end="129:32">mon</name></expr></argument>, <argument pos:start="129:35" pos:end="129:38"><expr pos:start="129:35" pos:end="129:38"><name pos:start="129:35" pos:end="129:38">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:25"><expr pos:start="131:5" pos:end="131:24"><call pos:start="131:5" pos:end="131:24"><name pos:start="131:5" pos:end="131:18">qobject_decref</name><argument_list pos:start="131:19" pos:end="131:24">(<argument pos:start="131:20" pos:end="131:23"><expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:23">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:19"><expr pos:start="133:5" pos:end="133:18"><call pos:start="133:5" pos:end="133:18"><name pos:start="133:5" pos:end="133:11">QDECREF</name><argument_list pos:start="133:12" pos:end="133:18">(<argument pos:start="133:13" pos:end="133:17"><expr pos:start="133:13" pos:end="133:17"><name pos:start="133:13" pos:end="133:17">input</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:18"><expr pos:start="135:5" pos:end="135:17"><call pos:start="135:5" pos:end="135:17"><name pos:start="135:5" pos:end="135:11">QDECREF</name><argument_list pos:start="135:12" pos:end="135:17">(<argument pos:start="135:13" pos:end="135:16"><expr pos:start="135:13" pos:end="135:16"><name pos:start="135:13" pos:end="135:16">args</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
