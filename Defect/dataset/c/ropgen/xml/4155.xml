<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4155.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:14"><name pos:start="1:1" pos:end="1:12">DisplayState</name> <modifier pos:start="1:14" pos:end="1:14">*</modifier></type><name pos:start="1:15" pos:end="1:31">init_displaystate</name><parameter_list pos:start="1:32" pos:end="1:37">(<parameter pos:start="1:33" pos:end="1:36"><decl pos:start="1:33" pos:end="1:36"><type pos:start="1:33" pos:end="1:36"><name pos:start="1:33" pos:end="1:36">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:25">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:9">gchar</name> <modifier pos:start="5:11" pos:end="5:11">*</modifier></type><name pos:start="5:12" pos:end="5:15">name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><operator pos:start="11:9" pos:end="11:9">!</operator><name pos:start="11:10" pos:end="11:22">display_state</name></expr>)</condition> <block pos:start="11:25" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:48">

        <expr_stmt pos:start="13:9" pos:end="13:48"><expr pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:21">display_state</name> <operator pos:start="13:23" pos:end="13:23">=</operator> <call pos:start="13:25" pos:end="13:47"><name pos:start="13:25" pos:end="13:30">g_new0</name><argument_list pos:start="13:31" pos:end="13:47">(<argument pos:start="13:32" pos:end="13:43"><expr pos:start="13:32" pos:end="13:43"><name pos:start="13:32" pos:end="13:43">DisplayState</name></expr></argument>, <argument pos:start="13:46" pos:end="13:46"><expr pos:start="13:46" pos:end="13:46"><literal type="number" pos:start="13:46" pos:end="13:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="19:5" pos:end="45:5">for <control pos:start="19:9" pos:end="19:37">(<init pos:start="19:10" pos:end="19:15"><expr pos:start="19:10" pos:end="19:14"><name pos:start="19:10" pos:end="19:10">i</name> <operator pos:start="19:12" pos:end="19:12">=</operator> <literal type="number" pos:start="19:14" pos:end="19:14">0</literal></expr>;</init> <condition pos:start="19:17" pos:end="19:32"><expr pos:start="19:17" pos:end="19:31"><name pos:start="19:17" pos:end="19:17">i</name> <operator pos:start="19:19" pos:end="19:19">&lt;</operator> <name pos:start="19:21" pos:end="19:31">nb_consoles</name></expr>;</condition> <incr pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:34">i</name><operator pos:start="19:35" pos:end="19:36">++</operator></expr></incr>)</control> <block pos:start="19:39" pos:end="45:5">{<block_content pos:start="21:9" pos:end="43:21">

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="23:36">(<expr pos:start="21:13" pos:end="23:35"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:20">consoles</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">i</name></expr>]</index></name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:37">console_type</name> <operator pos:start="21:39" pos:end="21:40">!=</operator> <name pos:start="21:42" pos:end="21:56">GRAPHIC_CONSOLE</name> <operator pos:start="21:58" pos:end="21:59">&amp;&amp;</operator>

            <name pos:start="23:13" pos:end="23:23"><name pos:start="23:13" pos:end="23:20">consoles</name><index pos:start="23:21" pos:end="23:23">[<expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">i</name></expr>]</index></name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:27">ds</name> <operator pos:start="23:29" pos:end="23:30">==</operator> <name pos:start="23:32" pos:end="23:35">NULL</name></expr>)</condition> <block pos:start="23:38" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:66">

            <expr_stmt pos:start="25:13" pos:end="25:66"><expr pos:start="25:13" pos:end="25:65"><call pos:start="25:13" pos:end="25:65"><name pos:start="25:13" pos:end="25:32">text_console_do_init</name><argument_list pos:start="25:33" pos:end="25:65">(<argument pos:start="25:34" pos:end="25:49"><expr pos:start="25:34" pos:end="25:49"><name pos:start="25:34" pos:end="25:44"><name pos:start="25:34" pos:end="25:41">consoles</name><index pos:start="25:42" pos:end="25:44">[<expr pos:start="25:43" pos:end="25:43"><name pos:start="25:43" pos:end="25:43">i</name></expr>]</index></name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:49">chr</name></expr></argument>, <argument pos:start="25:52" pos:end="25:64"><expr pos:start="25:52" pos:end="25:64"><name pos:start="25:52" pos:end="25:64">display_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="31:9" pos:end="35:37">/* Hook up into the qom tree here (not in new_console()), once

         * all QemuConsoles are created and the order / numbering

         * doesn't change any more */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:49"><expr pos:start="37:9" pos:end="37:48"><name pos:start="37:9" pos:end="37:12">name</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:48"><name pos:start="37:16" pos:end="37:30">g_strdup_printf</name><argument_list pos:start="37:31" pos:end="37:48">(<argument pos:start="37:32" pos:end="37:44"><expr pos:start="37:32" pos:end="37:44"><literal type="string" pos:start="37:32" pos:end="37:44">"console[%d]"</literal></expr></argument>, <argument pos:start="37:47" pos:end="37:47"><expr pos:start="37:47" pos:end="37:47"><name pos:start="37:47" pos:end="37:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="41:75"><expr pos:start="39:9" pos:end="41:74"><call pos:start="39:9" pos:end="41:74"><name pos:start="39:9" pos:end="39:33">object_property_add_child</name><argument_list pos:start="39:34" pos:end="41:74">(<argument pos:start="39:35" pos:end="39:78"><expr pos:start="39:35" pos:end="39:78"><call pos:start="39:35" pos:end="39:78"><name pos:start="39:35" pos:end="39:47">container_get</name><argument_list pos:start="39:48" pos:end="39:78">(<argument pos:start="39:49" pos:end="39:65"><expr pos:start="39:49" pos:end="39:65"><call pos:start="39:49" pos:end="39:65"><name pos:start="39:49" pos:end="39:63">object_get_root</name><argument_list pos:start="39:64" pos:end="39:65">()</argument_list></call></expr></argument>, <argument pos:start="39:68" pos:end="39:77"><expr pos:start="39:68" pos:end="39:77"><literal type="string" pos:start="39:68" pos:end="39:77">"/backend"</literal></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="41:35" pos:end="41:38"><expr pos:start="41:35" pos:end="41:38"><name pos:start="41:35" pos:end="41:38">name</name></expr></argument>, <argument pos:start="41:41" pos:end="41:59"><expr pos:start="41:41" pos:end="41:59"><call pos:start="41:41" pos:end="41:59"><name pos:start="41:41" pos:end="41:46">OBJECT</name><argument_list pos:start="41:47" pos:end="41:59">(<argument pos:start="41:48" pos:end="41:58"><expr pos:start="41:48" pos:end="41:58"><name pos:start="41:48" pos:end="41:58"><name pos:start="41:48" pos:end="41:55">consoles</name><index pos:start="41:56" pos:end="41:58">[<expr pos:start="41:57" pos:end="41:57"><name pos:start="41:57" pos:end="41:57">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:62" pos:end="41:73"><expr pos:start="41:62" pos:end="41:73"><operator pos:start="41:62" pos:end="41:62">&amp;</operator><name pos:start="41:63" pos:end="41:73">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><call pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:20">(<argument pos:start="43:16" pos:end="43:19"><expr pos:start="43:16" pos:end="43:19"><name pos:start="43:16" pos:end="43:19">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="49:5" pos:end="49:25">return <expr pos:start="49:12" pos:end="49:24"><name pos:start="49:12" pos:end="49:24">display_state</name></expr>;</return>

</block_content>}</block></function>
</unit>
