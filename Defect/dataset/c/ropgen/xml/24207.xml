<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24207.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">bmdma_write</name><parameter_list pos:start="1:24" pos:end="3:52">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:61"><decl pos:start="1:39" pos:end="1:61"><type pos:start="1:39" pos:end="1:61"><name pos:start="1:39" pos:end="1:56">target_phys_addr_t</name></type> <name pos:start="1:58" pos:end="1:61">addr</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:36"><decl pos:start="3:25" pos:end="3:36"><type pos:start="3:25" pos:end="3:36"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:36">val</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:51"><decl pos:start="3:39" pos:end="3:51"><type pos:start="3:39" pos:end="3:51"><name pos:start="3:39" pos:end="3:46">unsigned</name></type> <name pos:start="3:48" pos:end="3:51">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:5">

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">BMDMAState</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">bm</name> <init pos:start="7:20" pos:end="7:27">= <expr pos:start="7:22" pos:end="7:27"><name pos:start="7:22" pos:end="7:27">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="20:0"><if pos:start="11:5" pos:end="20:0">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>)</condition> <block pos:start="11:20" pos:end="20:0">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



<cpp:ifdef pos:start="19:1" pos:end="19:16">#<cpp:directive pos:start="19:2" pos:end="19:6">ifdef</cpp:directive> <name pos:start="19:8" pos:end="19:16">DEBUG_IDE</name></cpp:ifdef>

    <expr_stmt pos:start="21:5" pos:end="24:0"><expr pos:start="21:5" pos:end="21:56"><call pos:start="21:5" pos:end="21:56"><name pos:start="21:5" pos:end="21:10">printf</name><argument_list pos:start="21:11" pos:end="21:56">(<argument pos:start="21:12" pos:end="21:44"><expr pos:start="21:12" pos:end="21:44"><literal type="string" pos:start="21:12" pos:end="21:44">"bmdma: writeb 0x%02x : 0x%02x\n"</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><name pos:start="21:47" pos:end="21:50">addr</name></expr></argument>, <argument pos:start="21:53" pos:end="21:55"><expr pos:start="21:53" pos:end="21:55"><name pos:start="21:53" pos:end="21:55">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>

    <switch pos:start="25:5" pos:end="41:5">switch <condition pos:start="25:12" pos:end="25:21">(<expr pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:16">addr</name> <operator pos:start="25:18" pos:end="25:18">&amp;</operator> <literal type="number" pos:start="25:20" pos:end="25:20">3</literal></expr>)</condition> <block pos:start="25:23" pos:end="41:5">{<block_content pos:start="27:5" pos:end="39:13">

    <case pos:start="27:5" pos:end="27:11">case <expr pos:start="27:10" pos:end="27:10"><literal type="number" pos:start="27:10" pos:end="27:10">0</literal></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:34"><expr pos:start="29:9" pos:end="29:33"><call pos:start="29:9" pos:end="29:33"><name pos:start="29:9" pos:end="29:24">bmdma_cmd_writeb</name><argument_list pos:start="29:25" pos:end="29:33">(<argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><name pos:start="29:26" pos:end="29:27">bm</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:82"><expr pos:start="35:9" pos:end="35:81"><name pos:start="35:9" pos:end="35:18"><name pos:start="35:9" pos:end="35:10">bm</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:18">status</name></name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">(</operator><name pos:start="35:23" pos:end="35:25">val</name> <operator pos:start="35:27" pos:end="35:27">&amp;</operator> <literal type="number" pos:start="35:29" pos:end="35:32">0x60</literal><operator pos:start="35:33" pos:end="35:33">)</operator> <operator pos:start="35:35" pos:end="35:35">|</operator> <operator pos:start="35:37" pos:end="35:37">(</operator><name pos:start="35:38" pos:end="35:47"><name pos:start="35:38" pos:end="35:39">bm</name><operator pos:start="35:40" pos:end="35:41">-&gt;</operator><name pos:start="35:42" pos:end="35:47">status</name></name> <operator pos:start="35:49" pos:end="35:49">&amp;</operator> <literal type="number" pos:start="35:51" pos:end="35:51">1</literal><operator pos:start="35:52" pos:end="35:52">)</operator> <operator pos:start="35:54" pos:end="35:54">|</operator> <operator pos:start="35:56" pos:end="35:56">(</operator><name pos:start="35:57" pos:end="35:66"><name pos:start="35:57" pos:end="35:58">bm</name><operator pos:start="35:59" pos:end="35:60">-&gt;</operator><name pos:start="35:61" pos:end="35:66">status</name></name> <operator pos:start="35:68" pos:end="35:68">&amp;</operator> <operator pos:start="35:70" pos:end="35:70">~</operator><name pos:start="35:71" pos:end="35:73">val</name> <operator pos:start="35:75" pos:end="35:75">&amp;</operator> <literal type="number" pos:start="35:77" pos:end="35:80">0x06</literal><operator pos:start="35:81" pos:end="35:81">)</operator></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <default pos:start="39:5" pos:end="39:12">default:</default><empty_stmt pos:start="39:13" pos:end="39:13">;</empty_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
