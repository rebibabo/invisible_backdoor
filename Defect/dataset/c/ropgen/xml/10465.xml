<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10465.c" pos:tabs="8"><function pos:start="1:1" pos:end="44:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">rtl8139_can_receive</name><parameter_list pos:start="1:31" pos:end="1:51">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">VLANClientState</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">nc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="44:1">{<block_content pos:start="5:5" pos:end="42:5">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:57"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">RTL8139State</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:57">= <expr pos:start="5:23" pos:end="5:57"><call pos:start="5:23" pos:end="5:49"><name pos:start="5:23" pos:end="5:31">DO_UPCAST</name><argument_list pos:start="5:32" pos:end="5:49">(<argument pos:start="5:33" pos:end="5:40"><expr pos:start="5:33" pos:end="5:40"><name pos:start="5:33" pos:end="5:40">NICState</name></expr></argument>, <argument pos:start="5:43" pos:end="5:44"><expr pos:start="5:43" pos:end="5:44"><name pos:start="5:43" pos:end="5:44">nc</name></expr></argument>, <argument pos:start="5:47" pos:end="5:48"><expr pos:start="5:47" pos:end="5:48"><name pos:start="5:47" pos:end="5:48">nc</name></expr></argument>)</argument_list></call><operator pos:start="5:50" pos:end="5:51">-&gt;</operator><name pos:start="5:52" pos:end="5:57">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">avail</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:54">/* Receive (drop) packets if card is disabled.  */</comment>

    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:26">(<expr pos:start="13:9" pos:end="13:25"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:10">s</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:25">clock_enabled</name></name></expr>)</condition><block type="pseudo" pos:start="15:7" pos:end="15:15"><block_content pos:start="15:7" pos:end="15:15">

      <return pos:start="15:7" pos:end="15:15">return <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="17:5" pos:end="19:15"><if pos:start="17:5" pos:end="19:15">if <condition pos:start="17:8" pos:end="17:37">(<expr pos:start="17:9" pos:end="17:36"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:36"><name pos:start="17:10" pos:end="17:33">rtl8139_receiver_enabled</name><argument_list pos:start="17:34" pos:end="17:36">(<argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><name pos:start="17:35" pos:end="17:35">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:7" pos:end="19:15"><block_content pos:start="19:7" pos:end="19:15">

      <return pos:start="19:7" pos:end="19:15">return <expr pos:start="19:14" pos:end="19:14"><literal type="number" pos:start="19:14" pos:end="19:14">1</literal></expr>;</return></block_content></block></if></if_stmt>






    <if_stmt pos:start="26:5" pos:end="42:5"><if pos:start="26:5" pos:end="34:5">if <condition pos:start="26:8" pos:end="26:39">(<expr pos:start="26:9" pos:end="26:38"><call pos:start="26:9" pos:end="26:38"><name pos:start="26:9" pos:end="26:35">rtl8139_cp_receiver_enabled</name><argument_list pos:start="26:36" pos:end="26:38">(<argument pos:start="26:37" pos:end="26:37"><expr pos:start="26:37" pos:end="26:37"><name pos:start="26:37" pos:end="26:37">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="26:41" pos:end="34:5">{<block_content pos:start="32:9" pos:end="32:17">

        <comment type="block" pos:start="28:9" pos:end="30:71">/* ??? Flow control not implemented in c+ mode.

           This is a hack to work around slirp deficiencies anyway.  */</comment>

        <return pos:start="32:9" pos:end="32:17">return <expr pos:start="32:16" pos:end="32:16"><literal type="number" pos:start="32:16" pos:end="32:16">1</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="34:7" pos:end="42:5">else <block pos:start="34:12" pos:end="42:5">{<block_content pos:start="36:9" pos:end="40:45">

        <expr_stmt pos:start="36:9" pos:end="38:38"><expr pos:start="36:9" pos:end="38:37"><name pos:start="36:9" pos:end="36:13">avail</name> <operator pos:start="36:15" pos:end="36:15">=</operator> <call pos:start="36:17" pos:end="38:37"><name pos:start="36:17" pos:end="36:20">MOD2</name><argument_list pos:start="36:21" pos:end="38:37">(<argument pos:start="36:22" pos:end="36:65"><expr pos:start="36:22" pos:end="36:65"><name pos:start="36:22" pos:end="36:36"><name pos:start="36:22" pos:end="36:22">s</name><operator pos:start="36:23" pos:end="36:24">-&gt;</operator><name pos:start="36:25" pos:end="36:36">RxBufferSize</name></name> <operator pos:start="36:38" pos:end="36:38">+</operator> <name pos:start="36:40" pos:end="36:50"><name pos:start="36:40" pos:end="36:40">s</name><operator pos:start="36:41" pos:end="36:42">-&gt;</operator><name pos:start="36:43" pos:end="36:50">RxBufPtr</name></name> <operator pos:start="36:52" pos:end="36:52">-</operator> <name pos:start="36:54" pos:end="36:65"><name pos:start="36:54" pos:end="36:54">s</name><operator pos:start="36:55" pos:end="36:56">-&gt;</operator><name pos:start="36:57" pos:end="36:65">RxBufAddr</name></name></expr></argument>,

                     <argument pos:start="38:22" pos:end="38:36"><expr pos:start="38:22" pos:end="38:36"><name pos:start="38:22" pos:end="38:36"><name pos:start="38:22" pos:end="38:22">s</name><operator pos:start="38:23" pos:end="38:24">-&gt;</operator><name pos:start="38:25" pos:end="38:36">RxBufferSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="40:9" pos:end="40:45">return <expr pos:start="40:16" pos:end="40:44"><operator pos:start="40:16" pos:end="40:16">(</operator><name pos:start="40:17" pos:end="40:21">avail</name> <operator pos:start="40:23" pos:end="40:24">==</operator> <literal type="number" pos:start="40:26" pos:end="40:26">0</literal> <operator pos:start="40:28" pos:end="40:29">||</operator> <name pos:start="40:31" pos:end="40:35">avail</name> <operator pos:start="40:37" pos:end="40:38">&gt;=</operator> <literal type="number" pos:start="40:40" pos:end="40:43">1514</literal><operator pos:start="40:44" pos:end="40:44">)</operator></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function></unit>
