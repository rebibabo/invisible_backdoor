<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10111.c" pos:tabs="8"><function pos:start="1:1" pos:end="407:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">decompress_i</name><parameter_list pos:start="1:24" pos:end="1:75">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">uint32_t</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">dst</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:74">linesize</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="407:1">{<block_content pos:start="5:5" pos:end="405:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCPRContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">GetByteContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:22">gb</name> <init pos:start="7:24" pos:end="7:31">= <expr pos:start="7:26" pos:end="7:31"><operator pos:start="7:26" pos:end="7:26">&amp;</operator><name pos:start="7:27" pos:end="7:31"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:40"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">cx</name> <init pos:start="9:12" pos:end="9:14">= <expr pos:start="9:14" pos:end="9:14"><literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr></init></decl>, <decl pos:start="9:17" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:19">cx1</name> <init pos:start="9:21" pos:end="9:23">= <expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr></init></decl>, <decl pos:start="9:26" pos:end="9:30"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:26" pos:end="9:26">k</name> <init pos:start="9:28" pos:end="9:30">= <expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">0</literal></expr></init></decl>, <decl pos:start="9:33" pos:end="9:39"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:33" pos:end="9:35">clr</name> <init pos:start="9:37" pos:end="9:39">= <expr pos:start="9:39" pos:end="9:39"><literal type="number" pos:start="9:39" pos:end="9:39">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">run</name></decl>, <decl pos:start="11:14" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:14">r</name></decl>, <decl pos:start="11:17" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:17" pos:end="11:17">g</name></decl>, <decl pos:start="11:20" pos:end="11:20"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:20">b</name></decl>, <decl pos:start="11:23" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:23" pos:end="11:25">off</name></decl>, <decl pos:start="11:28" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:28">y</name> <init pos:start="11:30" pos:end="11:32">= <expr pos:start="11:32" pos:end="11:32"><literal type="number" pos:start="11:32" pos:end="11:32">0</literal></expr></init></decl>, <decl pos:start="11:35" pos:end="11:39"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:35" pos:end="11:35">x</name> <init pos:start="11:37" pos:end="11:39">= <expr pos:start="11:39" pos:end="11:39"><literal type="number" pos:start="11:39" pos:end="11:39">0</literal></expr></init></decl>, <decl pos:start="11:42" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:42" pos:end="11:42">z</name></decl>, <decl pos:start="11:45" pos:end="11:47"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:47">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:48"><decl pos:start="13:5" pos:end="13:47"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:21">backstep</name> <init pos:start="13:23" pos:end="13:47">= <expr pos:start="13:25" pos:end="13:47"><name pos:start="13:25" pos:end="13:32">linesize</name> <operator pos:start="13:34" pos:end="13:34">-</operator> <name pos:start="13:36" pos:end="13:47"><name pos:start="13:36" pos:end="13:40">avctx</name><operator pos:start="13:41" pos:end="13:42">-&gt;</operator><name pos:start="13:43" pos:end="13:47">width</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:35"><decl pos:start="15:5" pos:end="15:34"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:21">cxshift</name> <init pos:start="15:23" pos:end="15:34">= <expr pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:34"><name pos:start="15:25" pos:end="15:25">s</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:34">cxshift</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:15">lx</name></decl>, <decl pos:start="17:18" pos:end="17:19"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:18" pos:end="17:19">ly</name></decl>, <decl pos:start="17:22" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:22" pos:end="17:26">ptype</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><call pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:17">reinit_tables</name><argument_list pos:start="21:18" pos:end="21:20">(<argument pos:start="21:19" pos:end="21:19"><expr pos:start="21:19" pos:end="21:19"><name pos:start="21:19" pos:end="21:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:28"><expr pos:start="23:5" pos:end="23:27"><call pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:20">bytestream2_skip</name><argument_list pos:start="23:21" pos:end="23:27">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">gb</name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><call pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:19">init_rangecoder</name><argument_list pos:start="25:20" pos:end="25:31">(<argument pos:start="25:21" pos:end="25:26"><expr pos:start="25:21" pos:end="25:26"><operator pos:start="25:21" pos:end="25:21">&amp;</operator><name pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:22">s</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:26">rc</name></name></expr></argument>, <argument pos:start="25:29" pos:end="25:30"><expr pos:start="25:29" pos:end="25:30"><name pos:start="25:29" pos:end="25:30">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="107:5">while <condition pos:start="29:11" pos:end="29:32">(<expr pos:start="29:12" pos:end="29:31"><name pos:start="29:12" pos:end="29:12">k</name> <operator pos:start="29:14" pos:end="29:14">&lt;</operator> <name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:20">avctx</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:27">width</name></name> <operator pos:start="29:29" pos:end="29:29">+</operator> <literal type="number" pos:start="29:31" pos:end="29:31">1</literal></expr>)</condition> <block pos:start="29:34" pos:end="107:5">{<block_content pos:start="31:9" pos:end="105:9">

        <expr_stmt pos:start="31:9" pos:end="31:68"><expr pos:start="31:9" pos:end="31:67"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:67"><name pos:start="31:15" pos:end="31:25">decode_unit</name><argument_list pos:start="31:26" pos:end="31:67">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">s</name></expr></argument>, <argument pos:start="31:30" pos:end="31:57"><expr pos:start="31:30" pos:end="31:57"><operator pos:start="31:30" pos:end="31:30">&amp;</operator><name pos:start="31:31" pos:end="31:57"><name pos:start="31:31" pos:end="31:31">s</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:44">pixel_model</name><index pos:start="31:45" pos:end="31:47">[<expr pos:start="31:46" pos:end="31:46"><literal type="number" pos:start="31:46" pos:end="31:46">0</literal></expr>]</index><index pos:start="31:48" pos:end="31:57">[<expr pos:start="31:49" pos:end="31:56"><name pos:start="31:49" pos:end="31:50">cx</name> <operator pos:start="31:52" pos:end="31:52">+</operator> <name pos:start="31:54" pos:end="31:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="31:60" pos:end="31:62"><expr pos:start="31:60" pos:end="31:62"><literal type="number" pos:start="31:60" pos:end="31:62">400</literal></expr></argument>, <argument pos:start="31:65" pos:end="31:66"><expr pos:start="31:65" pos:end="31:66"><operator pos:start="31:65" pos:end="31:65">&amp;</operator><name pos:start="31:66" pos:end="31:66">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:23"><if pos:start="33:9" pos:end="35:23">if <condition pos:start="33:12" pos:end="33:20">(<expr pos:start="33:13" pos:end="33:19"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">&lt;</operator> <literal type="number" pos:start="33:19" pos:end="33:19">0</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:23"><block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:32"><expr pos:start="39:9" pos:end="39:31"><name pos:start="39:9" pos:end="39:11">cx1</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <operator pos:start="39:15" pos:end="39:15">(</operator><name pos:start="39:16" pos:end="39:17">cx</name> <operator pos:start="39:19" pos:end="39:20">&lt;&lt;</operator> <literal type="number" pos:start="39:22" pos:end="39:22">6</literal><operator pos:start="39:23" pos:end="39:23">)</operator> <operator pos:start="39:25" pos:end="39:25">&amp;</operator> <literal type="number" pos:start="39:27" pos:end="39:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:10">cx</name> <operator pos:start="41:12" pos:end="41:12">=</operator> <name pos:start="41:14" pos:end="41:14">r</name> <operator pos:start="41:16" pos:end="41:17">&gt;&gt;</operator> <name pos:start="41:19" pos:end="41:25">cxshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:68"><expr pos:start="43:9" pos:end="43:67"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:67"><name pos:start="43:15" pos:end="43:25">decode_unit</name><argument_list pos:start="43:26" pos:end="43:67">(<argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><name pos:start="43:27" pos:end="43:27">s</name></expr></argument>, <argument pos:start="43:30" pos:end="43:57"><expr pos:start="43:30" pos:end="43:57"><operator pos:start="43:30" pos:end="43:30">&amp;</operator><name pos:start="43:31" pos:end="43:57"><name pos:start="43:31" pos:end="43:31">s</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:44">pixel_model</name><index pos:start="43:45" pos:end="43:47">[<expr pos:start="43:46" pos:end="43:46"><literal type="number" pos:start="43:46" pos:end="43:46">1</literal></expr>]</index><index pos:start="43:48" pos:end="43:57">[<expr pos:start="43:49" pos:end="43:56"><name pos:start="43:49" pos:end="43:50">cx</name> <operator pos:start="43:52" pos:end="43:52">+</operator> <name pos:start="43:54" pos:end="43:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="43:60" pos:end="43:62"><expr pos:start="43:60" pos:end="43:62"><literal type="number" pos:start="43:60" pos:end="43:62">400</literal></expr></argument>, <argument pos:start="43:65" pos:end="43:66"><expr pos:start="43:65" pos:end="43:66"><operator pos:start="43:65" pos:end="43:65">&amp;</operator><name pos:start="43:66" pos:end="43:66">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:23"><if pos:start="45:9" pos:end="47:23">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:23"><block_content pos:start="47:13" pos:end="47:23">

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:32"><expr pos:start="51:9" pos:end="51:31"><name pos:start="51:9" pos:end="51:11">cx1</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">(</operator><name pos:start="51:16" pos:end="51:17">cx</name> <operator pos:start="51:19" pos:end="51:20">&lt;&lt;</operator> <literal type="number" pos:start="51:22" pos:end="51:22">6</literal><operator pos:start="51:23" pos:end="51:23">)</operator> <operator pos:start="51:25" pos:end="51:25">&amp;</operator> <literal type="number" pos:start="51:27" pos:end="51:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:26"><expr pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:10">cx</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:14">g</name> <operator pos:start="53:16" pos:end="53:17">&gt;&gt;</operator> <name pos:start="53:19" pos:end="53:25">cxshift</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:68"><expr pos:start="55:9" pos:end="55:67"><name pos:start="55:9" pos:end="55:11">ret</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:67"><name pos:start="55:15" pos:end="55:25">decode_unit</name><argument_list pos:start="55:26" pos:end="55:67">(<argument pos:start="55:27" pos:end="55:27"><expr pos:start="55:27" pos:end="55:27"><name pos:start="55:27" pos:end="55:27">s</name></expr></argument>, <argument pos:start="55:30" pos:end="55:57"><expr pos:start="55:30" pos:end="55:57"><operator pos:start="55:30" pos:end="55:30">&amp;</operator><name pos:start="55:31" pos:end="55:57"><name pos:start="55:31" pos:end="55:31">s</name><operator pos:start="55:32" pos:end="55:33">-&gt;</operator><name pos:start="55:34" pos:end="55:44">pixel_model</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">2</literal></expr>]</index><index pos:start="55:48" pos:end="55:57">[<expr pos:start="55:49" pos:end="55:56"><name pos:start="55:49" pos:end="55:50">cx</name> <operator pos:start="55:52" pos:end="55:52">+</operator> <name pos:start="55:54" pos:end="55:56">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="55:60" pos:end="55:62"><expr pos:start="55:60" pos:end="55:62"><literal type="number" pos:start="55:60" pos:end="55:62">400</literal></expr></argument>, <argument pos:start="55:65" pos:end="55:66"><expr pos:start="55:65" pos:end="55:66"><operator pos:start="55:65" pos:end="55:65">&amp;</operator><name pos:start="55:66" pos:end="55:66">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:23"><if pos:start="57:9" pos:end="59:23">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:23"><block_content pos:start="59:13" pos:end="59:23">

            <return pos:start="59:13" pos:end="59:23">return <expr pos:start="59:20" pos:end="59:22"><name pos:start="59:20" pos:end="59:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:11">cx1</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">(</operator><name pos:start="63:16" pos:end="63:17">cx</name> <operator pos:start="63:19" pos:end="63:20">&lt;&lt;</operator> <literal type="number" pos:start="63:22" pos:end="63:22">6</literal><operator pos:start="63:23" pos:end="63:23">)</operator> <operator pos:start="63:25" pos:end="63:25">&amp;</operator> <literal type="number" pos:start="63:27" pos:end="63:31">0xFC0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:10">cx</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <name pos:start="65:14" pos:end="65:14">b</name> <operator pos:start="65:16" pos:end="65:17">&gt;&gt;</operator> <name pos:start="65:19" pos:end="65:25">cxshift</name></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:11">ret</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:62"><name pos:start="69:15" pos:end="69:26">decode_value</name><argument_list pos:start="69:27" pos:end="69:62">(<argument pos:start="69:28" pos:end="69:28"><expr pos:start="69:28" pos:end="69:28"><name pos:start="69:28" pos:end="69:28">s</name></expr></argument>, <argument pos:start="69:31" pos:end="69:45"><expr pos:start="69:31" pos:end="69:45"><name pos:start="69:31" pos:end="69:45"><name pos:start="69:31" pos:end="69:31">s</name><operator pos:start="69:32" pos:end="69:33">-&gt;</operator><name pos:start="69:34" pos:end="69:42">run_model</name><index pos:start="69:43" pos:end="69:45">[<expr pos:start="69:44" pos:end="69:44"><literal type="number" pos:start="69:44" pos:end="69:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="69:48" pos:end="69:50"><expr pos:start="69:48" pos:end="69:50"><literal type="number" pos:start="69:48" pos:end="69:50">256</literal></expr></argument>, <argument pos:start="69:53" pos:end="69:55"><expr pos:start="69:53" pos:end="69:55"><literal type="number" pos:start="69:53" pos:end="69:55">400</literal></expr></argument>, <argument pos:start="69:58" pos:end="69:61"><expr pos:start="69:58" pos:end="69:61"><operator pos:start="69:58" pos:end="69:58">&amp;</operator><name pos:start="69:59" pos:end="69:61">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="71:9" pos:end="73:23"><if pos:start="71:9" pos:end="73:23">if <condition pos:start="71:12" pos:end="71:20">(<expr pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:15">ret</name> <operator pos:start="71:17" pos:end="71:17">&lt;</operator> <literal type="number" pos:start="71:19" pos:end="71:19">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:23"><block_content pos:start="73:13" pos:end="73:23">

            <return pos:start="73:13" pos:end="73:23">return <expr pos:start="73:20" pos:end="73:22"><name pos:start="73:20" pos:end="73:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:39"><expr pos:start="77:9" pos:end="77:38"><name pos:start="77:9" pos:end="77:11">clr</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <operator pos:start="77:15" pos:end="77:15">(</operator><name pos:start="77:16" pos:end="77:16">b</name> <operator pos:start="77:18" pos:end="77:19">&lt;&lt;</operator> <literal type="number" pos:start="77:21" pos:end="77:22">16</literal><operator pos:start="77:23" pos:end="77:23">)</operator> <operator pos:start="77:25" pos:end="77:25">+</operator> <operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:28">g</name> <operator pos:start="77:30" pos:end="77:31">&lt;&lt;</operator> <literal type="number" pos:start="77:33" pos:end="77:33">8</literal><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:36">+</operator> <name pos:start="77:38" pos:end="77:38">r</name></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:17"><expr pos:start="79:9" pos:end="79:16"><name pos:start="79:9" pos:end="79:9">k</name> <operator pos:start="79:11" pos:end="79:12">+=</operator> <name pos:start="79:14" pos:end="79:16">run</name></expr>;</expr_stmt>

        <while pos:start="81:9" pos:end="105:9">while <condition pos:start="81:15" pos:end="81:25">(<expr pos:start="81:16" pos:end="81:24"><name pos:start="81:16" pos:end="81:18">run</name><operator pos:start="81:19" pos:end="81:20">--</operator> <operator pos:start="81:22" pos:end="81:22">&gt;</operator> <literal type="number" pos:start="81:24" pos:end="81:24">0</literal></expr>)</condition> <block pos:start="81:27" pos:end="105:9">{<block_content pos:start="83:13" pos:end="103:13">

            <if_stmt pos:start="83:13" pos:end="85:43"><if pos:start="83:13" pos:end="85:43">if <condition pos:start="83:16" pos:end="83:35">(<expr pos:start="83:17" pos:end="83:34"><name pos:start="83:17" pos:end="83:17">y</name> <operator pos:start="83:19" pos:end="83:20">&gt;=</operator> <name pos:start="83:22" pos:end="83:34"><name pos:start="83:22" pos:end="83:26">avctx</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:34">height</name></name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:43"><block_content pos:start="85:17" pos:end="85:43">

                <return pos:start="85:17" pos:end="85:43">return <expr pos:start="85:24" pos:end="85:42"><name pos:start="85:24" pos:end="85:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="89:13" pos:end="89:40"><expr pos:start="89:13" pos:end="89:39"><name pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:15">dst</name><index pos:start="89:16" pos:end="89:33">[<expr pos:start="89:17" pos:end="89:32"><name pos:start="89:17" pos:end="89:17">y</name> <operator pos:start="89:19" pos:end="89:19">*</operator> <name pos:start="89:21" pos:end="89:28">linesize</name> <operator pos:start="89:30" pos:end="89:30">+</operator> <name pos:start="89:32" pos:end="89:32">x</name></expr>]</index></name> <operator pos:start="89:35" pos:end="89:35">=</operator> <name pos:start="89:37" pos:end="89:39">clr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:19"><expr pos:start="91:13" pos:end="91:18"><name pos:start="91:13" pos:end="91:14">lx</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:18">x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:19"><expr pos:start="93:13" pos:end="93:18"><name pos:start="93:13" pos:end="93:14">ly</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <name pos:start="93:18" pos:end="93:18">y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:16"><expr pos:start="95:13" pos:end="95:15"><name pos:start="95:13" pos:end="95:13">x</name><operator pos:start="95:14" pos:end="95:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="103:13"><if pos:start="97:13" pos:end="103:13">if <condition pos:start="97:16" pos:end="97:34">(<expr pos:start="97:17" pos:end="97:33"><name pos:start="97:17" pos:end="97:17">x</name> <operator pos:start="97:19" pos:end="97:20">&gt;=</operator> <name pos:start="97:22" pos:end="97:33"><name pos:start="97:22" pos:end="97:26">avctx</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:33">width</name></name></expr>)</condition> <block pos:start="97:36" pos:end="103:13">{<block_content pos:start="99:17" pos:end="101:20">

                <expr_stmt pos:start="99:17" pos:end="99:22"><expr pos:start="99:17" pos:end="99:21"><name pos:start="99:17" pos:end="99:17">x</name> <operator pos:start="99:19" pos:end="99:19">=</operator> <literal type="number" pos:start="99:21" pos:end="99:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:20"><expr pos:start="101:17" pos:end="101:19"><name pos:start="101:17" pos:end="101:17">y</name><operator pos:start="101:18" pos:end="101:19">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></while>

    </block_content>}</block></while>

    <expr_stmt pos:start="109:5" pos:end="109:24"><expr pos:start="109:5" pos:end="109:23"><name pos:start="109:5" pos:end="109:7">off</name> <operator pos:start="109:9" pos:end="109:9">=</operator> <operator pos:start="109:11" pos:end="109:11">-</operator><name pos:start="109:12" pos:end="109:19">linesize</name> <operator pos:start="109:21" pos:end="109:21">-</operator> <literal type="number" pos:start="109:23" pos:end="109:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:14"><expr pos:start="111:5" pos:end="111:13"><name pos:start="111:5" pos:end="111:9">ptype</name> <operator pos:start="111:11" pos:end="111:11">=</operator> <literal type="number" pos:start="111:13" pos:end="111:13">0</literal></expr>;</expr_stmt>



    <while pos:start="115:5" pos:end="401:5">while <condition pos:start="115:11" pos:end="115:49">(<expr pos:start="115:12" pos:end="115:48"><name pos:start="115:12" pos:end="115:12">x</name> <operator pos:start="115:14" pos:end="115:14">&lt;</operator> <name pos:start="115:16" pos:end="115:27"><name pos:start="115:16" pos:end="115:20">avctx</name><operator pos:start="115:21" pos:end="115:22">-&gt;</operator><name pos:start="115:23" pos:end="115:27">width</name></name> <operator pos:start="115:29" pos:end="115:30">&amp;&amp;</operator> <name pos:start="115:32" pos:end="115:32">y</name> <operator pos:start="115:34" pos:end="115:34">&lt;</operator> <name pos:start="115:36" pos:end="115:48"><name pos:start="115:36" pos:end="115:40">avctx</name><operator pos:start="115:41" pos:end="115:42">-&gt;</operator><name pos:start="115:43" pos:end="115:48">height</name></name></expr>)</condition> <block pos:start="115:51" pos:end="401:5">{<block_content pos:start="117:9" pos:end="399:9">

        <expr_stmt pos:start="117:9" pos:end="117:67"><expr pos:start="117:9" pos:end="117:66"><name pos:start="117:9" pos:end="117:11">ret</name> <operator pos:start="117:13" pos:end="117:13">=</operator> <call pos:start="117:15" pos:end="117:66"><name pos:start="117:15" pos:end="117:26">decode_value</name><argument_list pos:start="117:27" pos:end="117:66">(<argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><name pos:start="117:28" pos:end="117:28">s</name></expr></argument>, <argument pos:start="117:31" pos:end="117:48"><expr pos:start="117:31" pos:end="117:48"><name pos:start="117:31" pos:end="117:48"><name pos:start="117:31" pos:end="117:31">s</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:41">op_model</name><index pos:start="117:42" pos:end="117:48">[<expr pos:start="117:43" pos:end="117:47"><name pos:start="117:43" pos:end="117:47">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="117:51" pos:end="117:51"><expr pos:start="117:51" pos:end="117:51"><literal type="number" pos:start="117:51" pos:end="117:51">6</literal></expr></argument>, <argument pos:start="117:54" pos:end="117:57"><expr pos:start="117:54" pos:end="117:57"><literal type="number" pos:start="117:54" pos:end="117:57">1000</literal></expr></argument>, <argument pos:start="117:60" pos:end="117:65"><expr pos:start="117:60" pos:end="117:65"><operator pos:start="117:60" pos:end="117:60">&amp;</operator><name pos:start="117:61" pos:end="117:65">ptype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="121:23"><if pos:start="119:9" pos:end="121:23">if <condition pos:start="119:12" pos:end="119:20">(<expr pos:start="119:13" pos:end="119:19"><name pos:start="119:13" pos:end="119:15">ret</name> <operator pos:start="119:17" pos:end="119:17">&lt;</operator> <literal type="number" pos:start="119:19" pos:end="119:19">0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:23"><block_content pos:start="121:13" pos:end="121:23">

            <return pos:start="121:13" pos:end="121:23">return <expr pos:start="121:20" pos:end="121:22"><name pos:start="121:20" pos:end="121:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="159:9"><if pos:start="123:9" pos:end="159:9">if <condition pos:start="123:12" pos:end="123:23">(<expr pos:start="123:13" pos:end="123:22"><name pos:start="123:13" pos:end="123:17">ptype</name> <operator pos:start="123:19" pos:end="123:20">==</operator> <literal type="number" pos:start="123:22" pos:end="123:22">0</literal></expr>)</condition> <block pos:start="123:25" pos:end="159:9">{<block_content pos:start="125:13" pos:end="157:43">

            <expr_stmt pos:start="125:13" pos:end="125:72"><expr pos:start="125:13" pos:end="125:71"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:71"><name pos:start="125:19" pos:end="125:29">decode_unit</name><argument_list pos:start="125:30" pos:end="125:71">(<argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">s</name></expr></argument>, <argument pos:start="125:34" pos:end="125:61"><expr pos:start="125:34" pos:end="125:61"><operator pos:start="125:34" pos:end="125:34">&amp;</operator><name pos:start="125:35" pos:end="125:61"><name pos:start="125:35" pos:end="125:35">s</name><operator pos:start="125:36" pos:end="125:37">-&gt;</operator><name pos:start="125:38" pos:end="125:48">pixel_model</name><index pos:start="125:49" pos:end="125:51">[<expr pos:start="125:50" pos:end="125:50"><literal type="number" pos:start="125:50" pos:end="125:50">0</literal></expr>]</index><index pos:start="125:52" pos:end="125:61">[<expr pos:start="125:53" pos:end="125:60"><name pos:start="125:53" pos:end="125:54">cx</name> <operator pos:start="125:56" pos:end="125:56">+</operator> <name pos:start="125:58" pos:end="125:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="125:64" pos:end="125:66"><expr pos:start="125:64" pos:end="125:66"><literal type="number" pos:start="125:64" pos:end="125:66">400</literal></expr></argument>, <argument pos:start="125:69" pos:end="125:70"><expr pos:start="125:69" pos:end="125:70"><operator pos:start="125:69" pos:end="125:69">&amp;</operator><name pos:start="125:70" pos:end="125:70">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="129:27"><if pos:start="127:13" pos:end="129:27">if <condition pos:start="127:16" pos:end="127:24">(<expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">ret</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:27"><block_content pos:start="129:17" pos:end="129:27">

                <return pos:start="129:17" pos:end="129:27">return <expr pos:start="129:24" pos:end="129:26"><name pos:start="129:24" pos:end="129:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="133:13" pos:end="133:36"><expr pos:start="133:13" pos:end="133:35"><name pos:start="133:13" pos:end="133:15">cx1</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <operator pos:start="133:19" pos:end="133:19">(</operator><name pos:start="133:20" pos:end="133:21">cx</name> <operator pos:start="133:23" pos:end="133:24">&lt;&lt;</operator> <literal type="number" pos:start="133:26" pos:end="133:26">6</literal><operator pos:start="133:27" pos:end="133:27">)</operator> <operator pos:start="133:29" pos:end="133:29">&amp;</operator> <literal type="number" pos:start="133:31" pos:end="133:35">0xFC0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:30"><expr pos:start="135:13" pos:end="135:29"><name pos:start="135:13" pos:end="135:14">cx</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <name pos:start="135:18" pos:end="135:18">r</name> <operator pos:start="135:20" pos:end="135:21">&gt;&gt;</operator> <name pos:start="135:23" pos:end="135:29">cxshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:72"><expr pos:start="137:13" pos:end="137:71"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:71"><name pos:start="137:19" pos:end="137:29">decode_unit</name><argument_list pos:start="137:30" pos:end="137:71">(<argument pos:start="137:31" pos:end="137:31"><expr pos:start="137:31" pos:end="137:31"><name pos:start="137:31" pos:end="137:31">s</name></expr></argument>, <argument pos:start="137:34" pos:end="137:61"><expr pos:start="137:34" pos:end="137:61"><operator pos:start="137:34" pos:end="137:34">&amp;</operator><name pos:start="137:35" pos:end="137:61"><name pos:start="137:35" pos:end="137:35">s</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:48">pixel_model</name><index pos:start="137:49" pos:end="137:51">[<expr pos:start="137:50" pos:end="137:50"><literal type="number" pos:start="137:50" pos:end="137:50">1</literal></expr>]</index><index pos:start="137:52" pos:end="137:61">[<expr pos:start="137:53" pos:end="137:60"><name pos:start="137:53" pos:end="137:54">cx</name> <operator pos:start="137:56" pos:end="137:56">+</operator> <name pos:start="137:58" pos:end="137:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="137:64" pos:end="137:66"><expr pos:start="137:64" pos:end="137:66"><literal type="number" pos:start="137:64" pos:end="137:66">400</literal></expr></argument>, <argument pos:start="137:69" pos:end="137:70"><expr pos:start="137:69" pos:end="137:70"><operator pos:start="137:69" pos:end="137:69">&amp;</operator><name pos:start="137:70" pos:end="137:70">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="139:13" pos:end="141:27"><if pos:start="139:13" pos:end="141:27">if <condition pos:start="139:16" pos:end="139:24">(<expr pos:start="139:17" pos:end="139:23"><name pos:start="139:17" pos:end="139:19">ret</name> <operator pos:start="139:21" pos:end="139:21">&lt;</operator> <literal type="number" pos:start="139:23" pos:end="139:23">0</literal></expr>)</condition><block type="pseudo" pos:start="141:17" pos:end="141:27"><block_content pos:start="141:17" pos:end="141:27">

                <return pos:start="141:17" pos:end="141:27">return <expr pos:start="141:24" pos:end="141:26"><name pos:start="141:24" pos:end="141:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="145:13" pos:end="145:36"><expr pos:start="145:13" pos:end="145:35"><name pos:start="145:13" pos:end="145:15">cx1</name> <operator pos:start="145:17" pos:end="145:17">=</operator> <operator pos:start="145:19" pos:end="145:19">(</operator><name pos:start="145:20" pos:end="145:21">cx</name> <operator pos:start="145:23" pos:end="145:24">&lt;&lt;</operator> <literal type="number" pos:start="145:26" pos:end="145:26">6</literal><operator pos:start="145:27" pos:end="145:27">)</operator> <operator pos:start="145:29" pos:end="145:29">&amp;</operator> <literal type="number" pos:start="145:31" pos:end="145:35">0xFC0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:30"><expr pos:start="147:13" pos:end="147:29"><name pos:start="147:13" pos:end="147:14">cx</name> <operator pos:start="147:16" pos:end="147:16">=</operator> <name pos:start="147:18" pos:end="147:18">g</name> <operator pos:start="147:20" pos:end="147:21">&gt;&gt;</operator> <name pos:start="147:23" pos:end="147:29">cxshift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:72"><expr pos:start="149:13" pos:end="149:71"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="149:71"><name pos:start="149:19" pos:end="149:29">decode_unit</name><argument_list pos:start="149:30" pos:end="149:71">(<argument pos:start="149:31" pos:end="149:31"><expr pos:start="149:31" pos:end="149:31"><name pos:start="149:31" pos:end="149:31">s</name></expr></argument>, <argument pos:start="149:34" pos:end="149:61"><expr pos:start="149:34" pos:end="149:61"><operator pos:start="149:34" pos:end="149:34">&amp;</operator><name pos:start="149:35" pos:end="149:61"><name pos:start="149:35" pos:end="149:35">s</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:48">pixel_model</name><index pos:start="149:49" pos:end="149:51">[<expr pos:start="149:50" pos:end="149:50"><literal type="number" pos:start="149:50" pos:end="149:50">2</literal></expr>]</index><index pos:start="149:52" pos:end="149:61">[<expr pos:start="149:53" pos:end="149:60"><name pos:start="149:53" pos:end="149:54">cx</name> <operator pos:start="149:56" pos:end="149:56">+</operator> <name pos:start="149:58" pos:end="149:60">cx1</name></expr>]</index></name></expr></argument>, <argument pos:start="149:64" pos:end="149:66"><expr pos:start="149:64" pos:end="149:66"><literal type="number" pos:start="149:64" pos:end="149:66">400</literal></expr></argument>, <argument pos:start="149:69" pos:end="149:70"><expr pos:start="149:69" pos:end="149:70"><operator pos:start="149:69" pos:end="149:69">&amp;</operator><name pos:start="149:70" pos:end="149:70">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:27"><if pos:start="151:13" pos:end="153:27">if <condition pos:start="151:16" pos:end="151:24">(<expr pos:start="151:17" pos:end="151:23"><name pos:start="151:17" pos:end="151:19">ret</name> <operator pos:start="151:21" pos:end="151:21">&lt;</operator> <literal type="number" pos:start="151:23" pos:end="151:23">0</literal></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:27"><block_content pos:start="153:17" pos:end="153:27">

                <return pos:start="153:17" pos:end="153:27">return <expr pos:start="153:24" pos:end="153:26"><name pos:start="153:24" pos:end="153:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:15">clr</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <operator pos:start="157:19" pos:end="157:19">(</operator><name pos:start="157:20" pos:end="157:20">b</name> <operator pos:start="157:22" pos:end="157:23">&lt;&lt;</operator> <literal type="number" pos:start="157:25" pos:end="157:26">16</literal><operator pos:start="157:27" pos:end="157:27">)</operator> <operator pos:start="157:29" pos:end="157:29">+</operator> <operator pos:start="157:31" pos:end="157:31">(</operator><name pos:start="157:32" pos:end="157:32">g</name> <operator pos:start="157:34" pos:end="157:35">&lt;&lt;</operator> <literal type="number" pos:start="157:37" pos:end="157:37">8</literal><operator pos:start="157:38" pos:end="157:38">)</operator> <operator pos:start="157:40" pos:end="157:40">+</operator> <name pos:start="157:42" pos:end="157:42">r</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="161:9" pos:end="163:39"><if pos:start="161:9" pos:end="163:39">if <condition pos:start="161:12" pos:end="161:22">(<expr pos:start="161:13" pos:end="161:21"><name pos:start="161:13" pos:end="161:17">ptype</name> <operator pos:start="161:19" pos:end="161:19">&gt;</operator> <literal type="number" pos:start="161:21" pos:end="161:21">5</literal></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:39"><block_content pos:start="163:13" pos:end="163:39">

            <return pos:start="163:13" pos:end="163:39">return <expr pos:start="163:20" pos:end="163:38"><name pos:start="163:20" pos:end="163:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:67"><expr pos:start="165:9" pos:end="165:66"><name pos:start="165:9" pos:end="165:11">ret</name> <operator pos:start="165:13" pos:end="165:13">=</operator> <call pos:start="165:15" pos:end="165:66"><name pos:start="165:15" pos:end="165:26">decode_value</name><argument_list pos:start="165:27" pos:end="165:66">(<argument pos:start="165:28" pos:end="165:28"><expr pos:start="165:28" pos:end="165:28"><name pos:start="165:28" pos:end="165:28">s</name></expr></argument>, <argument pos:start="165:31" pos:end="165:49"><expr pos:start="165:31" pos:end="165:49"><name pos:start="165:31" pos:end="165:49"><name pos:start="165:31" pos:end="165:31">s</name><operator pos:start="165:32" pos:end="165:33">-&gt;</operator><name pos:start="165:34" pos:end="165:42">run_model</name><index pos:start="165:43" pos:end="165:49">[<expr pos:start="165:44" pos:end="165:48"><name pos:start="165:44" pos:end="165:48">ptype</name></expr>]</index></name></expr></argument>, <argument pos:start="165:52" pos:end="165:54"><expr pos:start="165:52" pos:end="165:54"><literal type="number" pos:start="165:52" pos:end="165:54">256</literal></expr></argument>, <argument pos:start="165:57" pos:end="165:59"><expr pos:start="165:57" pos:end="165:59"><literal type="number" pos:start="165:57" pos:end="165:59">400</literal></expr></argument>, <argument pos:start="165:62" pos:end="165:65"><expr pos:start="165:62" pos:end="165:65"><operator pos:start="165:62" pos:end="165:62">&amp;</operator><name pos:start="165:63" pos:end="165:65">run</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="169:23"><if pos:start="167:9" pos:end="169:23">if <condition pos:start="167:12" pos:end="167:20">(<expr pos:start="167:13" pos:end="167:19"><name pos:start="167:13" pos:end="167:15">ret</name> <operator pos:start="167:17" pos:end="167:17">&lt;</operator> <literal type="number" pos:start="167:19" pos:end="167:19">0</literal></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:23"><block_content pos:start="169:13" pos:end="169:23">

            <return pos:start="169:13" pos:end="169:23">return <expr pos:start="169:20" pos:end="169:22"><name pos:start="169:20" pos:end="169:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <switch pos:start="173:9" pos:end="383:9">switch <condition pos:start="173:16" pos:end="173:22">(<expr pos:start="173:17" pos:end="173:21"><name pos:start="173:17" pos:end="173:21">ptype</name></expr>)</condition> <block pos:start="173:24" pos:end="383:9">{<block_content pos:start="175:9" pos:end="381:18">

        <case pos:start="175:9" pos:end="175:15">case <expr pos:start="175:14" pos:end="175:14"><literal type="number" pos:start="175:14" pos:end="175:14">0</literal></expr>:</case>

            <while pos:start="177:13" pos:end="201:13">while <condition pos:start="177:19" pos:end="177:29">(<expr pos:start="177:20" pos:end="177:28"><name pos:start="177:20" pos:end="177:22">run</name><operator pos:start="177:23" pos:end="177:24">--</operator> <operator pos:start="177:26" pos:end="177:26">&gt;</operator> <literal type="number" pos:start="177:28" pos:end="177:28">0</literal></expr>)</condition> <block pos:start="177:31" pos:end="201:13">{<block_content pos:start="179:17" pos:end="199:17">

                <if_stmt pos:start="179:17" pos:end="181:47"><if pos:start="179:17" pos:end="181:47">if <condition pos:start="179:20" pos:end="179:39">(<expr pos:start="179:21" pos:end="179:38"><name pos:start="179:21" pos:end="179:21">y</name> <operator pos:start="179:23" pos:end="179:24">&gt;=</operator> <name pos:start="179:26" pos:end="179:38"><name pos:start="179:26" pos:end="179:30">avctx</name><operator pos:start="179:31" pos:end="179:32">-&gt;</operator><name pos:start="179:33" pos:end="179:38">height</name></name></expr>)</condition><block type="pseudo" pos:start="181:21" pos:end="181:47"><block_content pos:start="181:21" pos:end="181:47">

                    <return pos:start="181:21" pos:end="181:47">return <expr pos:start="181:28" pos:end="181:46"><name pos:start="181:28" pos:end="181:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="185:17" pos:end="185:44"><expr pos:start="185:17" pos:end="185:43"><name pos:start="185:17" pos:end="185:37"><name pos:start="185:17" pos:end="185:19">dst</name><index pos:start="185:20" pos:end="185:37">[<expr pos:start="185:21" pos:end="185:36"><name pos:start="185:21" pos:end="185:21">y</name> <operator pos:start="185:23" pos:end="185:23">*</operator> <name pos:start="185:25" pos:end="185:32">linesize</name> <operator pos:start="185:34" pos:end="185:34">+</operator> <name pos:start="185:36" pos:end="185:36">x</name></expr>]</index></name> <operator pos:start="185:39" pos:end="185:39">=</operator> <name pos:start="185:41" pos:end="185:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:23"><expr pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:18">lx</name> <operator pos:start="187:20" pos:end="187:20">=</operator> <name pos:start="187:22" pos:end="187:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:23"><expr pos:start="189:17" pos:end="189:22"><name pos:start="189:17" pos:end="189:18">ly</name> <operator pos:start="189:20" pos:end="189:20">=</operator> <name pos:start="189:22" pos:end="189:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="191:17" pos:end="191:20"><expr pos:start="191:17" pos:end="191:19"><name pos:start="191:17" pos:end="191:17">x</name><operator pos:start="191:18" pos:end="191:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="193:17" pos:end="199:17"><if pos:start="193:17" pos:end="199:17">if <condition pos:start="193:20" pos:end="193:38">(<expr pos:start="193:21" pos:end="193:37"><name pos:start="193:21" pos:end="193:21">x</name> <operator pos:start="193:23" pos:end="193:24">&gt;=</operator> <name pos:start="193:26" pos:end="193:37"><name pos:start="193:26" pos:end="193:30">avctx</name><operator pos:start="193:31" pos:end="193:32">-&gt;</operator><name pos:start="193:33" pos:end="193:37">width</name></name></expr>)</condition> <block pos:start="193:40" pos:end="199:17">{<block_content pos:start="195:21" pos:end="197:24">

                    <expr_stmt pos:start="195:21" pos:end="195:26"><expr pos:start="195:21" pos:end="195:25"><name pos:start="195:21" pos:end="195:21">x</name> <operator pos:start="195:23" pos:end="195:23">=</operator> <literal type="number" pos:start="195:25" pos:end="195:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="197:21" pos:end="197:24"><expr pos:start="197:21" pos:end="197:23"><name pos:start="197:21" pos:end="197:21">y</name><operator pos:start="197:22" pos:end="197:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:15">case <expr pos:start="205:14" pos:end="205:14"><literal type="number" pos:start="205:14" pos:end="205:14">1</literal></expr>:</case>

            <while pos:start="207:13" pos:end="231:13">while <condition pos:start="207:19" pos:end="207:29">(<expr pos:start="207:20" pos:end="207:28"><name pos:start="207:20" pos:end="207:22">run</name><operator pos:start="207:23" pos:end="207:24">--</operator> <operator pos:start="207:26" pos:end="207:26">&gt;</operator> <literal type="number" pos:start="207:28" pos:end="207:28">0</literal></expr>)</condition> <block pos:start="207:31" pos:end="231:13">{<block_content pos:start="209:17" pos:end="229:17">

                <if_stmt pos:start="209:17" pos:end="211:47"><if pos:start="209:17" pos:end="211:47">if <condition pos:start="209:20" pos:end="209:39">(<expr pos:start="209:21" pos:end="209:38"><name pos:start="209:21" pos:end="209:21">y</name> <operator pos:start="209:23" pos:end="209:24">&gt;=</operator> <name pos:start="209:26" pos:end="209:38"><name pos:start="209:26" pos:end="209:30">avctx</name><operator pos:start="209:31" pos:end="209:32">-&gt;</operator><name pos:start="209:33" pos:end="209:38">height</name></name></expr>)</condition><block type="pseudo" pos:start="211:21" pos:end="211:47"><block_content pos:start="211:21" pos:end="211:47">

                    <return pos:start="211:21" pos:end="211:47">return <expr pos:start="211:28" pos:end="211:46"><name pos:start="211:28" pos:end="211:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="215:17" pos:end="215:64"><expr pos:start="215:17" pos:end="215:63"><name pos:start="215:17" pos:end="215:37"><name pos:start="215:17" pos:end="215:19">dst</name><index pos:start="215:20" pos:end="215:37">[<expr pos:start="215:21" pos:end="215:36"><name pos:start="215:21" pos:end="215:21">y</name> <operator pos:start="215:23" pos:end="215:23">*</operator> <name pos:start="215:25" pos:end="215:32">linesize</name> <operator pos:start="215:34" pos:end="215:34">+</operator> <name pos:start="215:36" pos:end="215:36">x</name></expr>]</index></name> <operator pos:start="215:39" pos:end="215:39">=</operator> <name pos:start="215:41" pos:end="215:63"><name pos:start="215:41" pos:end="215:43">dst</name><index pos:start="215:44" pos:end="215:63">[<expr pos:start="215:45" pos:end="215:62"><name pos:start="215:45" pos:end="215:46">ly</name> <operator pos:start="215:48" pos:end="215:48">*</operator> <name pos:start="215:50" pos:end="215:57">linesize</name> <operator pos:start="215:59" pos:end="215:59">+</operator> <name pos:start="215:61" pos:end="215:62">lx</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="217:17" pos:end="217:23"><expr pos:start="217:17" pos:end="217:22"><name pos:start="217:17" pos:end="217:18">lx</name> <operator pos:start="217:20" pos:end="217:20">=</operator> <name pos:start="217:22" pos:end="217:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="219:17" pos:end="219:23"><expr pos:start="219:17" pos:end="219:22"><name pos:start="219:17" pos:end="219:18">ly</name> <operator pos:start="219:20" pos:end="219:20">=</operator> <name pos:start="219:22" pos:end="219:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="221:17" pos:end="221:20"><expr pos:start="221:17" pos:end="221:19"><name pos:start="221:17" pos:end="221:17">x</name><operator pos:start="221:18" pos:end="221:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="223:17" pos:end="229:17"><if pos:start="223:17" pos:end="229:17">if <condition pos:start="223:20" pos:end="223:38">(<expr pos:start="223:21" pos:end="223:37"><name pos:start="223:21" pos:end="223:21">x</name> <operator pos:start="223:23" pos:end="223:24">&gt;=</operator> <name pos:start="223:26" pos:end="223:37"><name pos:start="223:26" pos:end="223:30">avctx</name><operator pos:start="223:31" pos:end="223:32">-&gt;</operator><name pos:start="223:33" pos:end="223:37">width</name></name></expr>)</condition> <block pos:start="223:40" pos:end="229:17">{<block_content pos:start="225:21" pos:end="227:24">

                    <expr_stmt pos:start="225:21" pos:end="225:26"><expr pos:start="225:21" pos:end="225:25"><name pos:start="225:21" pos:end="225:21">x</name> <operator pos:start="225:23" pos:end="225:23">=</operator> <literal type="number" pos:start="225:25" pos:end="225:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="227:21" pos:end="227:24"><expr pos:start="227:21" pos:end="227:23"><name pos:start="227:21" pos:end="227:21">y</name><operator pos:start="227:22" pos:end="227:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <expr_stmt pos:start="233:13" pos:end="233:42"><expr pos:start="233:13" pos:end="233:41"><name pos:start="233:13" pos:end="233:15">clr</name> <operator pos:start="233:17" pos:end="233:17">=</operator> <name pos:start="233:19" pos:end="233:41"><name pos:start="233:19" pos:end="233:21">dst</name><index pos:start="233:22" pos:end="233:41">[<expr pos:start="233:23" pos:end="233:40"><name pos:start="233:23" pos:end="233:24">ly</name> <operator pos:start="233:26" pos:end="233:26">*</operator> <name pos:start="233:28" pos:end="233:35">linesize</name> <operator pos:start="233:37" pos:end="233:37">+</operator> <name pos:start="233:39" pos:end="233:40">lx</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="235:13" pos:end="235:18">break;</break>

        <case pos:start="237:9" pos:end="237:15">case <expr pos:start="237:14" pos:end="237:14"><literal type="number" pos:start="237:14" pos:end="237:14">2</literal></expr>:</case>

            <while pos:start="239:13" pos:end="265:13">while <condition pos:start="239:19" pos:end="239:29">(<expr pos:start="239:20" pos:end="239:28"><name pos:start="239:20" pos:end="239:22">run</name><operator pos:start="239:23" pos:end="239:24">--</operator> <operator pos:start="239:26" pos:end="239:26">&gt;</operator> <literal type="number" pos:start="239:28" pos:end="239:28">0</literal></expr>)</condition> <block pos:start="239:31" pos:end="265:13">{<block_content pos:start="241:17" pos:end="263:17">

                <if_stmt pos:start="241:17" pos:end="243:47"><if pos:start="241:17" pos:end="243:47">if <condition pos:start="241:20" pos:end="241:48">(<expr pos:start="241:21" pos:end="241:47"><name pos:start="241:21" pos:end="241:21">y</name> <operator pos:start="241:23" pos:end="241:23">&lt;</operator> <literal type="number" pos:start="241:25" pos:end="241:25">1</literal> <operator pos:start="241:27" pos:end="241:28">||</operator> <name pos:start="241:30" pos:end="241:30">y</name> <operator pos:start="241:32" pos:end="241:33">&gt;=</operator> <name pos:start="241:35" pos:end="241:47"><name pos:start="241:35" pos:end="241:39">avctx</name><operator pos:start="241:40" pos:end="241:41">-&gt;</operator><name pos:start="241:42" pos:end="241:47">height</name></name></expr>)</condition><block type="pseudo" pos:start="243:21" pos:end="243:47"><block_content pos:start="243:21" pos:end="243:47">

                    <return pos:start="243:21" pos:end="243:47">return <expr pos:start="243:28" pos:end="243:46"><name pos:start="243:28" pos:end="243:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <expr_stmt pos:start="247:17" pos:end="247:54"><expr pos:start="247:17" pos:end="247:53"><name pos:start="247:17" pos:end="247:19">clr</name> <operator pos:start="247:21" pos:end="247:21">=</operator> <name pos:start="247:23" pos:end="247:53"><name pos:start="247:23" pos:end="247:25">dst</name><index pos:start="247:26" pos:end="247:53">[<expr pos:start="247:27" pos:end="247:52"><name pos:start="247:27" pos:end="247:27">y</name> <operator pos:start="247:29" pos:end="247:29">*</operator> <name pos:start="247:31" pos:end="247:38">linesize</name> <operator pos:start="247:40" pos:end="247:40">+</operator> <name pos:start="247:42" pos:end="247:42">x</name> <operator pos:start="247:44" pos:end="247:44">+</operator> <name pos:start="247:46" pos:end="247:48">off</name> <operator pos:start="247:50" pos:end="247:50">+</operator> <literal type="number" pos:start="247:52" pos:end="247:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="249:17" pos:end="249:44"><expr pos:start="249:17" pos:end="249:43"><name pos:start="249:17" pos:end="249:37"><name pos:start="249:17" pos:end="249:19">dst</name><index pos:start="249:20" pos:end="249:37">[<expr pos:start="249:21" pos:end="249:36"><name pos:start="249:21" pos:end="249:21">y</name> <operator pos:start="249:23" pos:end="249:23">*</operator> <name pos:start="249:25" pos:end="249:32">linesize</name> <operator pos:start="249:34" pos:end="249:34">+</operator> <name pos:start="249:36" pos:end="249:36">x</name></expr>]</index></name> <operator pos:start="249:39" pos:end="249:39">=</operator> <name pos:start="249:41" pos:end="249:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:23"><expr pos:start="251:17" pos:end="251:22"><name pos:start="251:17" pos:end="251:18">lx</name> <operator pos:start="251:20" pos:end="251:20">=</operator> <name pos:start="251:22" pos:end="251:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="253:17" pos:end="253:23"><expr pos:start="253:17" pos:end="253:22"><name pos:start="253:17" pos:end="253:18">ly</name> <operator pos:start="253:20" pos:end="253:20">=</operator> <name pos:start="253:22" pos:end="253:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="255:17" pos:end="255:20"><expr pos:start="255:17" pos:end="255:19"><name pos:start="255:17" pos:end="255:17">x</name><operator pos:start="255:18" pos:end="255:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="257:17" pos:end="263:17"><if pos:start="257:17" pos:end="263:17">if <condition pos:start="257:20" pos:end="257:38">(<expr pos:start="257:21" pos:end="257:37"><name pos:start="257:21" pos:end="257:21">x</name> <operator pos:start="257:23" pos:end="257:24">&gt;=</operator> <name pos:start="257:26" pos:end="257:37"><name pos:start="257:26" pos:end="257:30">avctx</name><operator pos:start="257:31" pos:end="257:32">-&gt;</operator><name pos:start="257:33" pos:end="257:37">width</name></name></expr>)</condition> <block pos:start="257:40" pos:end="263:17">{<block_content pos:start="259:21" pos:end="261:24">

                    <expr_stmt pos:start="259:21" pos:end="259:26"><expr pos:start="259:21" pos:end="259:25"><name pos:start="259:21" pos:end="259:21">x</name> <operator pos:start="259:23" pos:end="259:23">=</operator> <literal type="number" pos:start="259:25" pos:end="259:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:24"><expr pos:start="261:21" pos:end="261:23"><name pos:start="261:21" pos:end="261:21">y</name><operator pos:start="261:22" pos:end="261:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="267:13" pos:end="267:18">break;</break>

        <case pos:start="269:9" pos:end="269:15">case <expr pos:start="269:14" pos:end="269:14"><literal type="number" pos:start="269:14" pos:end="269:14">4</literal></expr>:</case>

            <while pos:start="271:13" pos:end="333:13">while <condition pos:start="271:19" pos:end="271:29">(<expr pos:start="271:20" pos:end="271:28"><name pos:start="271:20" pos:end="271:22">run</name><operator pos:start="271:23" pos:end="271:24">--</operator> <operator pos:start="271:26" pos:end="271:26">&gt;</operator> <literal type="number" pos:start="271:28" pos:end="271:28">0</literal></expr>)</condition> <block pos:start="271:31" pos:end="333:13">{<block_content pos:start="273:17" pos:end="331:17">

                <decl_stmt pos:start="273:17" pos:end="273:47"><decl pos:start="273:17" pos:end="273:46"><type pos:start="273:17" pos:end="273:25"><name pos:start="273:17" pos:end="273:23">uint8_t</name> <modifier pos:start="273:25" pos:end="273:25">*</modifier></type><name pos:start="273:26" pos:end="273:29">odst</name> <init pos:start="273:31" pos:end="273:46">= <expr pos:start="273:33" pos:end="273:46"><operator pos:start="273:33" pos:end="273:33">(</operator><name pos:start="273:34" pos:end="273:40">uint8_t</name> <operator pos:start="273:42" pos:end="273:42">*</operator><operator pos:start="273:43" pos:end="273:43">)</operator><name pos:start="273:44" pos:end="273:46">dst</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="277:17" pos:end="281:47"><if pos:start="277:17" pos:end="281:47">if <condition pos:start="277:20" pos:end="279:39">(<expr pos:start="277:21" pos:end="279:38"><name pos:start="277:21" pos:end="277:21">y</name> <operator pos:start="277:23" pos:end="277:23">&lt;</operator> <literal type="number" pos:start="277:25" pos:end="277:25">1</literal> <operator pos:start="277:27" pos:end="277:28">||</operator> <name pos:start="277:30" pos:end="277:30">y</name> <operator pos:start="277:32" pos:end="277:33">&gt;=</operator> <name pos:start="277:35" pos:end="277:47"><name pos:start="277:35" pos:end="277:39">avctx</name><operator pos:start="277:40" pos:end="277:41">-&gt;</operator><name pos:start="277:42" pos:end="277:47">height</name></name> <operator pos:start="277:49" pos:end="277:50">||</operator>

                    <operator pos:start="279:21" pos:end="279:21">(</operator><name pos:start="279:22" pos:end="279:22">y</name> <operator pos:start="279:24" pos:end="279:25">==</operator> <literal type="number" pos:start="279:27" pos:end="279:27">1</literal> <operator pos:start="279:29" pos:end="279:30">&amp;&amp;</operator> <name pos:start="279:32" pos:end="279:32">x</name> <operator pos:start="279:34" pos:end="279:35">==</operator> <literal type="number" pos:start="279:37" pos:end="279:37">0</literal><operator pos:start="279:38" pos:end="279:38">)</operator></expr>)</condition><block type="pseudo" pos:start="281:21" pos:end="281:47"><block_content pos:start="281:21" pos:end="281:47">

                    <return pos:start="281:21" pos:end="281:47">return <expr pos:start="281:28" pos:end="281:46"><name pos:start="281:28" pos:end="281:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="285:17" pos:end="293:17"><if pos:start="285:17" pos:end="289:17">if <condition pos:start="285:20" pos:end="285:27">(<expr pos:start="285:21" pos:end="285:26"><name pos:start="285:21" pos:end="285:21">x</name> <operator pos:start="285:23" pos:end="285:24">==</operator> <literal type="number" pos:start="285:26" pos:end="285:26">0</literal></expr>)</condition> <block pos:start="285:29" pos:end="289:17">{<block_content pos:start="287:21" pos:end="287:33">

                    <expr_stmt pos:start="287:21" pos:end="287:33"><expr pos:start="287:21" pos:end="287:32"><name pos:start="287:21" pos:end="287:21">z</name> <operator pos:start="287:23" pos:end="287:23">=</operator> <name pos:start="287:25" pos:end="287:32">backstep</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="289:19" pos:end="293:17">else <block pos:start="289:24" pos:end="293:17">{<block_content pos:start="291:21" pos:end="291:26">

                    <expr_stmt pos:start="291:21" pos:end="291:26"><expr pos:start="291:21" pos:end="291:25"><name pos:start="291:21" pos:end="291:21">z</name> <operator pos:start="291:23" pos:end="291:23">=</operator> <literal type="number" pos:start="291:25" pos:end="291:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="297:17" pos:end="301:61"><expr pos:start="297:17" pos:end="301:60"><name pos:start="297:17" pos:end="297:17">r</name> <operator pos:start="297:19" pos:end="297:19">=</operator> <name pos:start="297:21" pos:end="297:50"><name pos:start="297:21" pos:end="297:24">odst</name><index pos:start="297:25" pos:end="297:50">[<expr pos:start="297:26" pos:end="297:49"><operator pos:start="297:26" pos:end="297:26">(</operator><name pos:start="297:27" pos:end="297:28">ly</name> <operator pos:start="297:30" pos:end="297:30">*</operator> <name pos:start="297:32" pos:end="297:39">linesize</name> <operator pos:start="297:41" pos:end="297:41">+</operator> <name pos:start="297:43" pos:end="297:44">lx</name><operator pos:start="297:45" pos:end="297:45">)</operator> <operator pos:start="297:47" pos:end="297:47">*</operator> <literal type="number" pos:start="297:49" pos:end="297:49">4</literal></expr>]</index></name> <operator pos:start="297:52" pos:end="297:52">+</operator>

                    <name pos:start="299:21" pos:end="299:64"><name pos:start="299:21" pos:end="299:24">odst</name><index pos:start="299:25" pos:end="299:64">[<expr pos:start="299:26" pos:end="299:63"><operator pos:start="299:26" pos:end="299:26">(</operator><operator pos:start="299:27" pos:end="299:27">(</operator><name pos:start="299:28" pos:end="299:28">y</name> <operator pos:start="299:30" pos:end="299:30">*</operator> <name pos:start="299:32" pos:end="299:39">linesize</name> <operator pos:start="299:41" pos:end="299:41">+</operator> <name pos:start="299:43" pos:end="299:43">x</name><operator pos:start="299:44" pos:end="299:44">)</operator> <operator pos:start="299:46" pos:end="299:46">+</operator> <name pos:start="299:48" pos:end="299:50">off</name> <operator pos:start="299:52" pos:end="299:52">-</operator> <name pos:start="299:54" pos:end="299:54">z</name><operator pos:start="299:55" pos:end="299:55">)</operator> <operator pos:start="299:57" pos:end="299:57">*</operator> <literal type="number" pos:start="299:59" pos:end="299:61">4</literal> <operator pos:start="299:61" pos:end="299:61">+</operator> <literal type="number" pos:start="299:63" pos:end="299:63">4</literal></expr>]</index></name> <operator pos:start="299:66" pos:end="299:66">-</operator>

                    <name pos:start="301:21" pos:end="301:60"><name pos:start="301:21" pos:end="301:24">odst</name><index pos:start="301:25" pos:end="301:60">[<expr pos:start="301:26" pos:end="301:59"><operator pos:start="301:26" pos:end="301:26">(</operator><operator pos:start="301:27" pos:end="301:27">(</operator><name pos:start="301:28" pos:end="301:28">y</name> <operator pos:start="301:30" pos:end="301:30">*</operator> <name pos:start="301:32" pos:end="301:39">linesize</name> <operator pos:start="301:41" pos:end="301:41">+</operator> <name pos:start="301:43" pos:end="301:43">x</name><operator pos:start="301:44" pos:end="301:44">)</operator> <operator pos:start="301:46" pos:end="301:46">+</operator> <name pos:start="301:48" pos:end="301:50">off</name> <operator pos:start="301:52" pos:end="301:52">-</operator> <name pos:start="301:54" pos:end="301:54">z</name><operator pos:start="301:55" pos:end="301:55">)</operator> <operator pos:start="301:57" pos:end="301:57">*</operator> <literal type="number" pos:start="301:59" pos:end="301:59">4</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="303:17" pos:end="307:65"><expr pos:start="303:17" pos:end="307:64"><name pos:start="303:17" pos:end="303:17">g</name> <operator pos:start="303:19" pos:end="303:19">=</operator> <name pos:start="303:21" pos:end="303:54"><name pos:start="303:21" pos:end="303:24">odst</name><index pos:start="303:25" pos:end="303:54">[<expr pos:start="303:26" pos:end="303:53"><operator pos:start="303:26" pos:end="303:26">(</operator><name pos:start="303:27" pos:end="303:28">ly</name> <operator pos:start="303:30" pos:end="303:30">*</operator> <name pos:start="303:32" pos:end="303:39">linesize</name> <operator pos:start="303:41" pos:end="303:41">+</operator> <name pos:start="303:43" pos:end="303:44">lx</name><operator pos:start="303:45" pos:end="303:45">)</operator> <operator pos:start="303:47" pos:end="303:47">*</operator> <literal type="number" pos:start="303:49" pos:end="303:51">4</literal> <operator pos:start="303:51" pos:end="303:51">+</operator> <literal type="number" pos:start="303:53" pos:end="303:53">1</literal></expr>]</index></name> <operator pos:start="303:56" pos:end="303:56">+</operator>

                    <name pos:start="305:21" pos:end="305:64"><name pos:start="305:21" pos:end="305:24">odst</name><index pos:start="305:25" pos:end="305:64">[<expr pos:start="305:26" pos:end="305:63"><operator pos:start="305:26" pos:end="305:26">(</operator><operator pos:start="305:27" pos:end="305:27">(</operator><name pos:start="305:28" pos:end="305:28">y</name> <operator pos:start="305:30" pos:end="305:30">*</operator> <name pos:start="305:32" pos:end="305:39">linesize</name> <operator pos:start="305:41" pos:end="305:41">+</operator> <name pos:start="305:43" pos:end="305:43">x</name><operator pos:start="305:44" pos:end="305:44">)</operator> <operator pos:start="305:46" pos:end="305:46">+</operator> <name pos:start="305:48" pos:end="305:50">off</name> <operator pos:start="305:52" pos:end="305:52">-</operator> <name pos:start="305:54" pos:end="305:54">z</name><operator pos:start="305:55" pos:end="305:55">)</operator> <operator pos:start="305:57" pos:end="305:57">*</operator> <literal type="number" pos:start="305:59" pos:end="305:61">4</literal> <operator pos:start="305:61" pos:end="305:61">+</operator> <literal type="number" pos:start="305:63" pos:end="305:63">5</literal></expr>]</index></name> <operator pos:start="305:66" pos:end="305:66">-</operator>

                    <name pos:start="307:21" pos:end="307:64"><name pos:start="307:21" pos:end="307:24">odst</name><index pos:start="307:25" pos:end="307:64">[<expr pos:start="307:26" pos:end="307:63"><operator pos:start="307:26" pos:end="307:26">(</operator><operator pos:start="307:27" pos:end="307:27">(</operator><name pos:start="307:28" pos:end="307:28">y</name> <operator pos:start="307:30" pos:end="307:30">*</operator> <name pos:start="307:32" pos:end="307:39">linesize</name> <operator pos:start="307:41" pos:end="307:41">+</operator> <name pos:start="307:43" pos:end="307:43">x</name><operator pos:start="307:44" pos:end="307:44">)</operator> <operator pos:start="307:46" pos:end="307:46">+</operator> <name pos:start="307:48" pos:end="307:50">off</name> <operator pos:start="307:52" pos:end="307:52">-</operator> <name pos:start="307:54" pos:end="307:54">z</name><operator pos:start="307:55" pos:end="307:55">)</operator> <operator pos:start="307:57" pos:end="307:57">*</operator> <literal type="number" pos:start="307:59" pos:end="307:61">4</literal> <operator pos:start="307:61" pos:end="307:61">+</operator> <literal type="number" pos:start="307:63" pos:end="307:63">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="313:65"><expr pos:start="309:17" pos:end="313:64"><name pos:start="309:17" pos:end="309:17">b</name> <operator pos:start="309:19" pos:end="309:19">=</operator> <name pos:start="309:21" pos:end="309:54"><name pos:start="309:21" pos:end="309:24">odst</name><index pos:start="309:25" pos:end="309:54">[<expr pos:start="309:26" pos:end="309:53"><operator pos:start="309:26" pos:end="309:26">(</operator><name pos:start="309:27" pos:end="309:28">ly</name> <operator pos:start="309:30" pos:end="309:30">*</operator> <name pos:start="309:32" pos:end="309:39">linesize</name> <operator pos:start="309:41" pos:end="309:41">+</operator> <name pos:start="309:43" pos:end="309:44">lx</name><operator pos:start="309:45" pos:end="309:45">)</operator> <operator pos:start="309:47" pos:end="309:47">*</operator> <literal type="number" pos:start="309:49" pos:end="309:51">4</literal> <operator pos:start="309:51" pos:end="309:51">+</operator> <literal type="number" pos:start="309:53" pos:end="309:53">2</literal></expr>]</index></name> <operator pos:start="309:56" pos:end="309:56">+</operator>

                    <name pos:start="311:21" pos:end="311:64"><name pos:start="311:21" pos:end="311:24">odst</name><index pos:start="311:25" pos:end="311:64">[<expr pos:start="311:26" pos:end="311:63"><operator pos:start="311:26" pos:end="311:26">(</operator><operator pos:start="311:27" pos:end="311:27">(</operator><name pos:start="311:28" pos:end="311:28">y</name> <operator pos:start="311:30" pos:end="311:30">*</operator> <name pos:start="311:32" pos:end="311:39">linesize</name> <operator pos:start="311:41" pos:end="311:41">+</operator> <name pos:start="311:43" pos:end="311:43">x</name><operator pos:start="311:44" pos:end="311:44">)</operator> <operator pos:start="311:46" pos:end="311:46">+</operator> <name pos:start="311:48" pos:end="311:50">off</name> <operator pos:start="311:52" pos:end="311:52">-</operator> <name pos:start="311:54" pos:end="311:54">z</name><operator pos:start="311:55" pos:end="311:55">)</operator> <operator pos:start="311:57" pos:end="311:57">*</operator> <literal type="number" pos:start="311:59" pos:end="311:61">4</literal> <operator pos:start="311:61" pos:end="311:61">+</operator> <literal type="number" pos:start="311:63" pos:end="311:63">6</literal></expr>]</index></name> <operator pos:start="311:66" pos:end="311:66">-</operator>

                    <name pos:start="313:21" pos:end="313:64"><name pos:start="313:21" pos:end="313:24">odst</name><index pos:start="313:25" pos:end="313:64">[<expr pos:start="313:26" pos:end="313:63"><operator pos:start="313:26" pos:end="313:26">(</operator><operator pos:start="313:27" pos:end="313:27">(</operator><name pos:start="313:28" pos:end="313:28">y</name> <operator pos:start="313:30" pos:end="313:30">*</operator> <name pos:start="313:32" pos:end="313:39">linesize</name> <operator pos:start="313:41" pos:end="313:41">+</operator> <name pos:start="313:43" pos:end="313:43">x</name><operator pos:start="313:44" pos:end="313:44">)</operator> <operator pos:start="313:46" pos:end="313:46">+</operator> <name pos:start="313:48" pos:end="313:50">off</name> <operator pos:start="313:52" pos:end="313:52">-</operator> <name pos:start="313:54" pos:end="313:54">z</name><operator pos:start="313:55" pos:end="313:55">)</operator> <operator pos:start="313:57" pos:end="313:57">*</operator> <literal type="number" pos:start="313:59" pos:end="313:61">4</literal> <operator pos:start="313:61" pos:end="313:61">+</operator> <literal type="number" pos:start="313:63" pos:end="313:63">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="315:17" pos:end="315:74"><expr pos:start="315:17" pos:end="315:73"><name pos:start="315:17" pos:end="315:19">clr</name> <operator pos:start="315:21" pos:end="315:21">=</operator> <operator pos:start="315:23" pos:end="315:23">(</operator><operator pos:start="315:24" pos:end="315:24">(</operator><name pos:start="315:25" pos:end="315:25">b</name> <operator pos:start="315:27" pos:end="315:27">&amp;</operator> <literal type="number" pos:start="315:29" pos:end="315:32">0xFF</literal><operator pos:start="315:33" pos:end="315:33">)</operator> <operator pos:start="315:35" pos:end="315:36">&lt;&lt;</operator> <literal type="number" pos:start="315:38" pos:end="315:39">16</literal><operator pos:start="315:40" pos:end="315:40">)</operator> <operator pos:start="315:42" pos:end="315:42">+</operator> <operator pos:start="315:44" pos:end="315:44">(</operator><operator pos:start="315:45" pos:end="315:45">(</operator><name pos:start="315:46" pos:end="315:46">g</name> <operator pos:start="315:48" pos:end="315:48">&amp;</operator> <literal type="number" pos:start="315:50" pos:end="315:53">0xFF</literal><operator pos:start="315:54" pos:end="315:54">)</operator> <operator pos:start="315:56" pos:end="315:57">&lt;&lt;</operator> <literal type="number" pos:start="315:59" pos:end="315:59">8</literal><operator pos:start="315:60" pos:end="315:60">)</operator> <operator pos:start="315:62" pos:end="315:62">+</operator> <operator pos:start="315:64" pos:end="315:64">(</operator><name pos:start="315:65" pos:end="315:65">r</name> <operator pos:start="315:67" pos:end="315:67">&amp;</operator> <literal type="number" pos:start="315:69" pos:end="315:72">0xFF</literal><operator pos:start="315:73" pos:end="315:73">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="317:17" pos:end="317:44"><expr pos:start="317:17" pos:end="317:43"><name pos:start="317:17" pos:end="317:37"><name pos:start="317:17" pos:end="317:19">dst</name><index pos:start="317:20" pos:end="317:37">[<expr pos:start="317:21" pos:end="317:36"><name pos:start="317:21" pos:end="317:21">y</name> <operator pos:start="317:23" pos:end="317:23">*</operator> <name pos:start="317:25" pos:end="317:32">linesize</name> <operator pos:start="317:34" pos:end="317:34">+</operator> <name pos:start="317:36" pos:end="317:36">x</name></expr>]</index></name> <operator pos:start="317:39" pos:end="317:39">=</operator> <name pos:start="317:41" pos:end="317:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:23"><expr pos:start="319:17" pos:end="319:22"><name pos:start="319:17" pos:end="319:18">lx</name> <operator pos:start="319:20" pos:end="319:20">=</operator> <name pos:start="319:22" pos:end="319:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="321:17" pos:end="321:23"><expr pos:start="321:17" pos:end="321:22"><name pos:start="321:17" pos:end="321:18">ly</name> <operator pos:start="321:20" pos:end="321:20">=</operator> <name pos:start="321:22" pos:end="321:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:20"><expr pos:start="323:17" pos:end="323:19"><name pos:start="323:17" pos:end="323:17">x</name><operator pos:start="323:18" pos:end="323:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="325:17" pos:end="331:17"><if pos:start="325:17" pos:end="331:17">if <condition pos:start="325:20" pos:end="325:38">(<expr pos:start="325:21" pos:end="325:37"><name pos:start="325:21" pos:end="325:21">x</name> <operator pos:start="325:23" pos:end="325:24">&gt;=</operator> <name pos:start="325:26" pos:end="325:37"><name pos:start="325:26" pos:end="325:30">avctx</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:37">width</name></name></expr>)</condition> <block pos:start="325:40" pos:end="331:17">{<block_content pos:start="327:21" pos:end="329:24">

                    <expr_stmt pos:start="327:21" pos:end="327:26"><expr pos:start="327:21" pos:end="327:25"><name pos:start="327:21" pos:end="327:21">x</name> <operator pos:start="327:23" pos:end="327:23">=</operator> <literal type="number" pos:start="327:25" pos:end="327:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="329:21" pos:end="329:24"><expr pos:start="329:21" pos:end="329:23"><name pos:start="329:21" pos:end="329:21">y</name><operator pos:start="329:22" pos:end="329:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="335:13" pos:end="335:18">break;</break>

        <case pos:start="337:9" pos:end="337:15">case <expr pos:start="337:14" pos:end="337:14"><literal type="number" pos:start="337:14" pos:end="337:14">5</literal></expr>:</case>

            <while pos:start="339:13" pos:end="379:13">while <condition pos:start="339:19" pos:end="339:29">(<expr pos:start="339:20" pos:end="339:28"><name pos:start="339:20" pos:end="339:22">run</name><operator pos:start="339:23" pos:end="339:24">--</operator> <operator pos:start="339:26" pos:end="339:26">&gt;</operator> <literal type="number" pos:start="339:28" pos:end="339:28">0</literal></expr>)</condition> <block pos:start="339:31" pos:end="379:13">{<block_content pos:start="341:17" pos:end="377:17">

                <if_stmt pos:start="341:17" pos:end="345:47"><if pos:start="341:17" pos:end="345:47">if <condition pos:start="341:20" pos:end="343:39">(<expr pos:start="341:21" pos:end="343:38"><name pos:start="341:21" pos:end="341:21">y</name> <operator pos:start="341:23" pos:end="341:23">&lt;</operator> <literal type="number" pos:start="341:25" pos:end="341:25">1</literal> <operator pos:start="341:27" pos:end="341:28">||</operator> <name pos:start="341:30" pos:end="341:30">y</name> <operator pos:start="341:32" pos:end="341:33">&gt;=</operator> <name pos:start="341:35" pos:end="341:47"><name pos:start="341:35" pos:end="341:39">avctx</name><operator pos:start="341:40" pos:end="341:41">-&gt;</operator><name pos:start="341:42" pos:end="341:47">height</name></name> <operator pos:start="341:49" pos:end="341:50">||</operator>

                    <operator pos:start="343:21" pos:end="343:21">(</operator><name pos:start="343:22" pos:end="343:22">y</name> <operator pos:start="343:24" pos:end="343:25">==</operator> <literal type="number" pos:start="343:27" pos:end="343:27">1</literal> <operator pos:start="343:29" pos:end="343:30">&amp;&amp;</operator> <name pos:start="343:32" pos:end="343:32">x</name> <operator pos:start="343:34" pos:end="343:35">==</operator> <literal type="number" pos:start="343:37" pos:end="343:37">0</literal><operator pos:start="343:38" pos:end="343:38">)</operator></expr>)</condition><block type="pseudo" pos:start="345:21" pos:end="345:47"><block_content pos:start="345:21" pos:end="345:47">

                    <return pos:start="345:21" pos:end="345:47">return <expr pos:start="345:28" pos:end="345:46"><name pos:start="345:28" pos:end="345:46">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



                <if_stmt pos:start="349:17" pos:end="357:17"><if pos:start="349:17" pos:end="353:17">if <condition pos:start="349:20" pos:end="349:27">(<expr pos:start="349:21" pos:end="349:26"><name pos:start="349:21" pos:end="349:21">x</name> <operator pos:start="349:23" pos:end="349:24">==</operator> <literal type="number" pos:start="349:26" pos:end="349:26">0</literal></expr>)</condition> <block pos:start="349:29" pos:end="353:17">{<block_content pos:start="351:21" pos:end="351:33">

                    <expr_stmt pos:start="351:21" pos:end="351:33"><expr pos:start="351:21" pos:end="351:32"><name pos:start="351:21" pos:end="351:21">z</name> <operator pos:start="351:23" pos:end="351:23">=</operator> <name pos:start="351:25" pos:end="351:32">backstep</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="353:19" pos:end="357:17">else <block pos:start="353:24" pos:end="357:17">{<block_content pos:start="355:21" pos:end="355:26">

                    <expr_stmt pos:start="355:21" pos:end="355:26"><expr pos:start="355:21" pos:end="355:25"><name pos:start="355:21" pos:end="355:21">z</name> <operator pos:start="355:23" pos:end="355:23">=</operator> <literal type="number" pos:start="355:25" pos:end="355:25">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>



                <expr_stmt pos:start="361:17" pos:end="361:54"><expr pos:start="361:17" pos:end="361:53"><name pos:start="361:17" pos:end="361:19">clr</name> <operator pos:start="361:21" pos:end="361:21">=</operator> <name pos:start="361:23" pos:end="361:53"><name pos:start="361:23" pos:end="361:25">dst</name><index pos:start="361:26" pos:end="361:53">[<expr pos:start="361:27" pos:end="361:52"><name pos:start="361:27" pos:end="361:27">y</name> <operator pos:start="361:29" pos:end="361:29">*</operator> <name pos:start="361:31" pos:end="361:38">linesize</name> <operator pos:start="361:40" pos:end="361:40">+</operator> <name pos:start="361:42" pos:end="361:42">x</name> <operator pos:start="361:44" pos:end="361:44">+</operator> <name pos:start="361:46" pos:end="361:48">off</name> <operator pos:start="361:50" pos:end="361:50">-</operator> <name pos:start="361:52" pos:end="361:52">z</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="363:17" pos:end="363:44"><expr pos:start="363:17" pos:end="363:43"><name pos:start="363:17" pos:end="363:37"><name pos:start="363:17" pos:end="363:19">dst</name><index pos:start="363:20" pos:end="363:37">[<expr pos:start="363:21" pos:end="363:36"><name pos:start="363:21" pos:end="363:21">y</name> <operator pos:start="363:23" pos:end="363:23">*</operator> <name pos:start="363:25" pos:end="363:32">linesize</name> <operator pos:start="363:34" pos:end="363:34">+</operator> <name pos:start="363:36" pos:end="363:36">x</name></expr>]</index></name> <operator pos:start="363:39" pos:end="363:39">=</operator> <name pos:start="363:41" pos:end="363:43">clr</name></expr>;</expr_stmt>

                <expr_stmt pos:start="365:17" pos:end="365:23"><expr pos:start="365:17" pos:end="365:22"><name pos:start="365:17" pos:end="365:18">lx</name> <operator pos:start="365:20" pos:end="365:20">=</operator> <name pos:start="365:22" pos:end="365:22">x</name></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:23"><expr pos:start="367:17" pos:end="367:22"><name pos:start="367:17" pos:end="367:18">ly</name> <operator pos:start="367:20" pos:end="367:20">=</operator> <name pos:start="367:22" pos:end="367:22">y</name></expr>;</expr_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:20"><expr pos:start="369:17" pos:end="369:19"><name pos:start="369:17" pos:end="369:17">x</name><operator pos:start="369:18" pos:end="369:19">++</operator></expr>;</expr_stmt>

                <if_stmt pos:start="371:17" pos:end="377:17"><if pos:start="371:17" pos:end="377:17">if <condition pos:start="371:20" pos:end="371:38">(<expr pos:start="371:21" pos:end="371:37"><name pos:start="371:21" pos:end="371:21">x</name> <operator pos:start="371:23" pos:end="371:24">&gt;=</operator> <name pos:start="371:26" pos:end="371:37"><name pos:start="371:26" pos:end="371:30">avctx</name><operator pos:start="371:31" pos:end="371:32">-&gt;</operator><name pos:start="371:33" pos:end="371:37">width</name></name></expr>)</condition> <block pos:start="371:40" pos:end="377:17">{<block_content pos:start="373:21" pos:end="375:24">

                    <expr_stmt pos:start="373:21" pos:end="373:26"><expr pos:start="373:21" pos:end="373:25"><name pos:start="373:21" pos:end="373:21">x</name> <operator pos:start="373:23" pos:end="373:23">=</operator> <literal type="number" pos:start="373:25" pos:end="373:25">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="375:21" pos:end="375:24"><expr pos:start="375:21" pos:end="375:23"><name pos:start="375:21" pos:end="375:21">y</name><operator pos:start="375:22" pos:end="375:23">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></while>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        </block_content>}</block></switch>



        <if_stmt pos:start="387:9" pos:end="399:9"><if pos:start="387:9" pos:end="393:9">if <condition pos:start="387:12" pos:end="387:47">(<expr pos:start="387:13" pos:end="387:46"><name pos:start="387:13" pos:end="387:40"><name pos:start="387:13" pos:end="387:17">avctx</name><operator pos:start="387:18" pos:end="387:19">-&gt;</operator><name pos:start="387:20" pos:end="387:40">bits_per_coded_sample</name></name> <operator pos:start="387:42" pos:end="387:43">==</operator> <literal type="number" pos:start="387:45" pos:end="387:46">16</literal></expr>)</condition> <block pos:start="387:49" pos:end="393:9">{<block_content pos:start="389:13" pos:end="391:40">

            <expr_stmt pos:start="389:13" pos:end="389:38"><expr pos:start="389:13" pos:end="389:37"><name pos:start="389:13" pos:end="389:15">cx1</name> <operator pos:start="389:17" pos:end="389:17">=</operator> <operator pos:start="389:19" pos:end="389:19">(</operator><name pos:start="389:20" pos:end="389:22">clr</name> <operator pos:start="389:24" pos:end="389:24">&amp;</operator> <literal type="number" pos:start="389:26" pos:end="389:31">0x3F00</literal><operator pos:start="389:32" pos:end="389:32">)</operator> <operator pos:start="389:34" pos:end="389:35">&gt;&gt;</operator> <literal type="number" pos:start="389:37" pos:end="389:37">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:40"><expr pos:start="391:13" pos:end="391:39"><name pos:start="391:13" pos:end="391:14">cx</name> <operator pos:start="391:16" pos:end="391:16">=</operator> <operator pos:start="391:18" pos:end="391:18">(</operator><name pos:start="391:19" pos:end="391:21">clr</name> <operator pos:start="391:23" pos:end="391:23">&amp;</operator> <literal type="number" pos:start="391:25" pos:end="391:32">0xFFFFFF</literal><operator pos:start="391:33" pos:end="391:33">)</operator> <operator pos:start="391:35" pos:end="391:36">&gt;&gt;</operator> <literal type="number" pos:start="391:38" pos:end="391:39">16</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="393:11" pos:end="399:9">else <block pos:start="393:16" pos:end="399:9">{<block_content pos:start="395:13" pos:end="397:40">

            <expr_stmt pos:start="395:13" pos:end="395:38"><expr pos:start="395:13" pos:end="395:37"><name pos:start="395:13" pos:end="395:15">cx1</name> <operator pos:start="395:17" pos:end="395:17">=</operator> <operator pos:start="395:19" pos:end="395:19">(</operator><name pos:start="395:20" pos:end="395:22">clr</name> <operator pos:start="395:24" pos:end="395:24">&amp;</operator> <literal type="number" pos:start="395:26" pos:end="395:31">0xFC00</literal><operator pos:start="395:32" pos:end="395:32">)</operator> <operator pos:start="395:34" pos:end="395:35">&gt;&gt;</operator> <literal type="number" pos:start="395:37" pos:end="395:37">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:40"><expr pos:start="397:13" pos:end="397:39"><name pos:start="397:13" pos:end="397:14">cx</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <operator pos:start="397:18" pos:end="397:18">(</operator><name pos:start="397:19" pos:end="397:21">clr</name> <operator pos:start="397:23" pos:end="397:23">&amp;</operator> <literal type="number" pos:start="397:25" pos:end="397:32">0xFFFFFF</literal><operator pos:start="397:33" pos:end="397:33">)</operator> <operator pos:start="397:35" pos:end="397:36">&gt;&gt;</operator> <literal type="number" pos:start="397:38" pos:end="397:39">18</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>



    <return pos:start="405:5" pos:end="405:13">return <expr pos:start="405:12" pos:end="405:12"><literal type="number" pos:start="405:12" pos:end="405:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
