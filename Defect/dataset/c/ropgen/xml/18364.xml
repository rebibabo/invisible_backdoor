<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18364.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">escc_mem_write</name><parameter_list pos:start="1:27" pos:end="3:55">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:39">val</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:49">unsigned</name></type> <name pos:start="3:51" pos:end="3:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="201:1">{<block_content pos:start="7:5" pos:end="199:5">

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SerialState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">serial</name> <init pos:start="7:25" pos:end="7:32">= <expr pos:start="7:27" pos:end="7:32"><name pos:start="7:27" pos:end="7:32">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">ChannelState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">saddr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:14">newreg</name></decl>, <decl pos:start="13:17" pos:end="13:23"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:17" pos:end="13:23">channel</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:16"><expr pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:7">val</name> <operator pos:start="17:9" pos:end="17:10">&amp;=</operator> <literal type="number" pos:start="17:12" pos:end="17:15">0xff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:9">saddr</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:17">addr</name> <operator pos:start="19:19" pos:end="19:20">&gt;&gt;</operator> <name pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:27">serial</name><operator pos:start="19:28" pos:end="19:29">-&gt;</operator><name pos:start="19:30" pos:end="19:37">it_shift</name></name><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">&amp;</operator> <literal type="number" pos:start="19:42" pos:end="19:42">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:11">channel</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <operator pos:start="21:15" pos:end="21:15">(</operator><name pos:start="21:16" pos:end="21:19">addr</name> <operator pos:start="21:21" pos:end="21:22">&gt;&gt;</operator> <operator pos:start="21:24" pos:end="21:24">(</operator><name pos:start="21:25" pos:end="21:40"><name pos:start="21:25" pos:end="21:30">serial</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:40">it_shift</name></name> <operator pos:start="21:42" pos:end="21:42">+</operator> <literal type="number" pos:start="21:44" pos:end="21:44">1</literal><operator pos:start="21:45" pos:end="21:45">)</operator><operator pos:start="21:46" pos:end="21:46">)</operator> <operator pos:start="21:48" pos:end="21:48">&amp;</operator> <literal type="number" pos:start="21:50" pos:end="21:50">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">s</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <operator pos:start="23:9" pos:end="23:9">&amp;</operator><name pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:15">serial</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">chn</name><index pos:start="23:21" pos:end="23:29">[<expr pos:start="23:22" pos:end="23:28"><name pos:start="23:22" pos:end="23:28">channel</name></expr>]</index></name></expr>;</expr_stmt>

    <switch pos:start="25:5" pos:end="199:5">switch <condition pos:start="25:12" pos:end="25:18">(<expr pos:start="25:13" pos:end="25:17"><name pos:start="25:13" pos:end="25:17">saddr</name></expr>)</condition> <block pos:start="25:20" pos:end="199:5">{<block_content pos:start="27:5" pos:end="197:14">

    <case pos:start="27:5" pos:end="27:21">case <expr pos:start="27:10" pos:end="27:20"><name pos:start="27:10" pos:end="27:20">SERIAL_CTRL</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:65"><expr pos:start="29:9" pos:end="29:64"><call pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:34">trace_escc_mem_writeb_ctrl</name><argument_list pos:start="29:35" pos:end="29:64">(<argument pos:start="29:36" pos:end="29:43"><expr pos:start="29:36" pos:end="29:43"><call pos:start="29:36" pos:end="29:43"><name pos:start="29:36" pos:end="29:40">CHN_C</name><argument_list pos:start="29:41" pos:end="29:43">(<argument pos:start="29:42" pos:end="29:42"><expr pos:start="29:42" pos:end="29:42"><name pos:start="29:42" pos:end="29:42">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:46" pos:end="29:51"><expr pos:start="29:46" pos:end="29:51"><name pos:start="29:46" pos:end="29:51"><name pos:start="29:46" pos:end="29:46">s</name><operator pos:start="29:47" pos:end="29:48">-&gt;</operator><name pos:start="29:49" pos:end="29:51">reg</name></name></expr></argument>, <argument pos:start="29:54" pos:end="29:63"><expr pos:start="29:54" pos:end="29:63"><name pos:start="29:54" pos:end="29:56">val</name> <operator pos:start="29:58" pos:end="29:58">&amp;</operator> <literal type="number" pos:start="29:60" pos:end="29:63">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:19"><expr pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:14">newreg</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <literal type="number" pos:start="31:18" pos:end="31:18">0</literal></expr>;</expr_stmt>

        <switch pos:start="33:9" pos:end="155:9">switch <condition pos:start="33:16" pos:end="33:23">(<expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:17">s</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:22">reg</name></name></expr>)</condition> <block pos:start="33:25" pos:end="155:9">{<block_content pos:start="35:9" pos:end="153:18">

        <case pos:start="35:9" pos:end="35:19">case <expr pos:start="35:14" pos:end="35:18"><name pos:start="35:14" pos:end="35:18">W_CMD</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:40"><expr pos:start="37:13" pos:end="37:39"><name pos:start="37:13" pos:end="37:18">newreg</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:24">val</name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:39">CMD_PTR_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="39:13" pos:end="39:32"><expr pos:start="39:13" pos:end="39:31"><name pos:start="39:13" pos:end="39:15">val</name> <operator pos:start="39:17" pos:end="39:18">&amp;=</operator> <name pos:start="39:20" pos:end="39:31">CMD_CMD_MASK</name></expr>;</expr_stmt>

            <switch pos:start="41:13" pos:end="81:13">switch <condition pos:start="41:20" pos:end="41:24">(<expr pos:start="41:21" pos:end="41:23"><name pos:start="41:21" pos:end="41:23">val</name></expr>)</condition> <block pos:start="41:26" pos:end="81:13">{<block_content pos:start="43:13" pos:end="79:22">

            <case pos:start="43:13" pos:end="43:24">case <expr pos:start="43:18" pos:end="43:23"><name pos:start="43:18" pos:end="43:23">CMD_HI</name></expr>:</case>

                <expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:22">newreg</name> <operator pos:start="45:24" pos:end="45:25">|=</operator> <name pos:start="45:27" pos:end="45:32">CMD_HI</name></expr>;</expr_stmt>

                <break pos:start="47:17" pos:end="47:22">break;</break>

            <case pos:start="49:13" pos:end="49:31">case <expr pos:start="49:18" pos:end="49:30"><name pos:start="49:18" pos:end="49:30">CMD_CLR_TXINT</name></expr>:</case>

                <expr_stmt pos:start="51:17" pos:end="51:29"><expr pos:start="51:17" pos:end="51:28"><call pos:start="51:17" pos:end="51:28"><name pos:start="51:17" pos:end="51:25">clr_txint</name><argument_list pos:start="51:26" pos:end="51:28">(<argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><name pos:start="51:27" pos:end="51:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="53:17" pos:end="53:22">break;</break>

            <case pos:start="55:13" pos:end="55:29">case <expr pos:start="55:18" pos:end="55:28"><name pos:start="55:18" pos:end="55:28">CMD_CLR_IUS</name></expr>:</case>

                <if_stmt pos:start="57:17" pos:end="71:17"><if pos:start="57:17" pos:end="67:17">if <condition pos:start="57:20" pos:end="57:39">(<expr pos:start="57:21" pos:end="57:38"><name pos:start="57:21" pos:end="57:38"><name pos:start="57:21" pos:end="57:21">s</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:38">rxint_under_svc</name></name></expr>)</condition> <block pos:start="57:41" pos:end="67:17">{<block_content pos:start="59:21" pos:end="65:21">

                    <expr_stmt pos:start="59:21" pos:end="59:43"><expr pos:start="59:21" pos:end="59:42"><name pos:start="59:21" pos:end="59:38"><name pos:start="59:21" pos:end="59:21">s</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:38">rxint_under_svc</name></name> <operator pos:start="59:40" pos:end="59:40">=</operator> <literal type="number" pos:start="59:42" pos:end="59:42">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="61:21" pos:end="65:21"><if pos:start="61:21" pos:end="65:21">if <condition pos:start="61:24" pos:end="61:33">(<expr pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:32"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:32">txint</name></name></expr>)</condition> <block pos:start="61:35" pos:end="65:21">{<block_content pos:start="63:25" pos:end="63:37">

                        <expr_stmt pos:start="63:25" pos:end="63:37"><expr pos:start="63:25" pos:end="63:36"><call pos:start="63:25" pos:end="63:36"><name pos:start="63:25" pos:end="63:33">set_txint</name><argument_list pos:start="63:34" pos:end="63:36">(<argument pos:start="63:35" pos:end="63:35"><expr pos:start="63:35" pos:end="63:35"><name pos:start="63:35" pos:end="63:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="67:19" pos:end="71:17">else if <condition pos:start="67:27" pos:end="67:46">(<expr pos:start="67:28" pos:end="67:45"><name pos:start="67:28" pos:end="67:45"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:45">txint_under_svc</name></name></expr>)</condition> <block pos:start="67:48" pos:end="71:17">{<block_content pos:start="69:21" pos:end="69:43">

                    <expr_stmt pos:start="69:21" pos:end="69:43"><expr pos:start="69:21" pos:end="69:42"><name pos:start="69:21" pos:end="69:38"><name pos:start="69:21" pos:end="69:21">s</name><operator pos:start="69:22" pos:end="69:23">-&gt;</operator><name pos:start="69:24" pos:end="69:38">txint_under_svc</name></name> <operator pos:start="69:40" pos:end="69:40">=</operator> <literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:35"><expr pos:start="73:17" pos:end="73:34"><call pos:start="73:17" pos:end="73:34"><name pos:start="73:17" pos:end="73:31">escc_update_irq</name><argument_list pos:start="73:32" pos:end="73:34">(<argument pos:start="73:33" pos:end="73:33"><expr pos:start="73:33" pos:end="73:33"><name pos:start="73:33" pos:end="73:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="75:17" pos:end="75:22">break;</break>

            <default pos:start="77:13" pos:end="77:20">default:</default>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></switch>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:33">case <expr pos:start="85:14" pos:end="85:32"><name pos:start="85:14" pos:end="85:19">W_INTR</name> <operator pos:start="85:21" pos:end="85:23">...</operator> <name pos:start="85:25" pos:end="85:32">W_RXCTRL</name></expr>:</case>

        <case pos:start="87:9" pos:end="87:33">case <expr pos:start="87:14" pos:end="87:32"><name pos:start="87:14" pos:end="87:20">W_SYNC1</name> <operator pos:start="87:22" pos:end="87:24">...</operator> <name pos:start="87:26" pos:end="87:32">W_TXBUF</name></expr>:</case>

        <case pos:start="89:9" pos:end="89:33">case <expr pos:start="89:14" pos:end="89:32"><name pos:start="89:14" pos:end="89:20">W_MISC1</name> <operator pos:start="89:22" pos:end="89:24">...</operator> <name pos:start="89:26" pos:end="89:32">W_CLOCK</name></expr>:</case>

        <case pos:start="91:9" pos:end="91:34">case <expr pos:start="91:14" pos:end="91:33"><name pos:start="91:14" pos:end="91:20">W_MISC2</name> <operator pos:start="91:22" pos:end="91:24">...</operator> <name pos:start="91:26" pos:end="91:33">W_EXTINT</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:28"><name pos:start="93:13" pos:end="93:13">s</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:20">wregs</name><index pos:start="93:21" pos:end="93:28">[<expr pos:start="93:22" pos:end="93:27"><name pos:start="93:22" pos:end="93:27"><name pos:start="93:22" pos:end="93:22">s</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:27">reg</name></name></expr>]</index></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <name pos:start="93:32" pos:end="93:34">val</name></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <case pos:start="97:9" pos:end="97:23">case <expr pos:start="97:14" pos:end="97:22"><name pos:start="97:14" pos:end="97:22">W_TXCTRL1</name></expr>:</case>

        <case pos:start="99:9" pos:end="99:23">case <expr pos:start="99:14" pos:end="99:22"><name pos:start="99:14" pos:end="99:22">W_TXCTRL2</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:35"><expr pos:start="101:13" pos:end="101:34"><name pos:start="101:13" pos:end="101:28"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:20">wregs</name><index pos:start="101:21" pos:end="101:28">[<expr pos:start="101:22" pos:end="101:27"><name pos:start="101:22" pos:end="101:27"><name pos:start="101:22" pos:end="101:22">s</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:27">reg</name></name></expr>]</index></name> <operator pos:start="101:30" pos:end="101:30">=</operator> <name pos:start="101:32" pos:end="101:34">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:38"><expr pos:start="103:13" pos:end="103:37"><call pos:start="103:13" pos:end="103:37"><name pos:start="103:13" pos:end="103:34">escc_update_parameters</name><argument_list pos:start="103:35" pos:end="103:37">(<argument pos:start="103:36" pos:end="103:36"><expr pos:start="103:36" pos:end="103:36"><name pos:start="103:36" pos:end="103:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="105:13" pos:end="105:18">break;</break>

        <case pos:start="107:9" pos:end="107:21">case <expr pos:start="107:14" pos:end="107:20"><name pos:start="107:14" pos:end="107:20">W_BRGLO</name></expr>:</case>

        <case pos:start="109:9" pos:end="109:21">case <expr pos:start="109:14" pos:end="109:20"><name pos:start="109:14" pos:end="109:20">W_BRGHI</name></expr>:</case>

            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:28"><name pos:start="111:13" pos:end="111:13">s</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:20">wregs</name><index pos:start="111:21" pos:end="111:28">[<expr pos:start="111:22" pos:end="111:27"><name pos:start="111:22" pos:end="111:27"><name pos:start="111:22" pos:end="111:22">s</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:27">reg</name></name></expr>]</index></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:34">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:20">rregs</name><index pos:start="113:21" pos:end="113:28">[<expr pos:start="113:22" pos:end="113:27"><name pos:start="113:22" pos:end="113:27"><name pos:start="113:22" pos:end="113:22">s</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:27">reg</name></name></expr>]</index></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:34">val</name></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:38"><expr pos:start="115:13" pos:end="115:37"><call pos:start="115:13" pos:end="115:37"><name pos:start="115:13" pos:end="115:34">escc_update_parameters</name><argument_list pos:start="115:35" pos:end="115:37">(<argument pos:start="115:36" pos:end="115:36"><expr pos:start="115:36" pos:end="115:36"><name pos:start="115:36" pos:end="115:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:21">case <expr pos:start="119:14" pos:end="119:20"><name pos:start="119:14" pos:end="119:20">W_MINTR</name></expr>:</case>

            <switch pos:start="121:13" pos:end="147:13">switch <condition pos:start="121:20" pos:end="121:41">(<expr pos:start="121:21" pos:end="121:40"><name pos:start="121:21" pos:end="121:23">val</name> <operator pos:start="121:25" pos:end="121:25">&amp;</operator> <name pos:start="121:27" pos:end="121:40">MINTR_RST_MASK</name></expr>)</condition> <block pos:start="121:43" pos:end="147:13">{<block_content pos:start="123:13" pos:end="145:23">

            <case pos:start="123:13" pos:end="123:19">case <expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">0</literal></expr>:</case>

            <default pos:start="125:13" pos:end="125:20">default:</default>

                <break pos:start="127:17" pos:end="127:22">break;</break>

            <case pos:start="129:13" pos:end="129:29">case <expr pos:start="129:18" pos:end="129:28"><name pos:start="129:18" pos:end="129:28">MINTR_RST_B</name></expr>:</case>

                <expr_stmt pos:start="131:17" pos:end="131:48"><expr pos:start="131:17" pos:end="131:47"><call pos:start="131:17" pos:end="131:47"><name pos:start="131:17" pos:end="131:30">escc_reset_chn</name><argument_list pos:start="131:31" pos:end="131:47">(<argument pos:start="131:32" pos:end="131:46"><expr pos:start="131:32" pos:end="131:46"><operator pos:start="131:32" pos:end="131:32">&amp;</operator><name pos:start="131:33" pos:end="131:46"><name pos:start="131:33" pos:end="131:38">serial</name><operator pos:start="131:39" pos:end="131:40">-&gt;</operator><name pos:start="131:41" pos:end="131:43">chn</name><index pos:start="131:44" pos:end="131:46">[<expr pos:start="131:45" pos:end="131:45"><literal type="number" pos:start="131:45" pos:end="131:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="133:17" pos:end="133:23">return;</return>

            <case pos:start="135:13" pos:end="135:29">case <expr pos:start="135:18" pos:end="135:28"><name pos:start="135:18" pos:end="135:28">MINTR_RST_A</name></expr>:</case>

                <expr_stmt pos:start="137:17" pos:end="137:48"><expr pos:start="137:17" pos:end="137:47"><call pos:start="137:17" pos:end="137:47"><name pos:start="137:17" pos:end="137:30">escc_reset_chn</name><argument_list pos:start="137:31" pos:end="137:47">(<argument pos:start="137:32" pos:end="137:46"><expr pos:start="137:32" pos:end="137:46"><operator pos:start="137:32" pos:end="137:32">&amp;</operator><name pos:start="137:33" pos:end="137:46"><name pos:start="137:33" pos:end="137:38">serial</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:43">chn</name><index pos:start="137:44" pos:end="137:46">[<expr pos:start="137:45" pos:end="137:45"><literal type="number" pos:start="137:45" pos:end="137:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="139:17" pos:end="139:23">return;</return>

            <case pos:start="141:13" pos:end="141:31">case <expr pos:start="141:18" pos:end="141:30"><name pos:start="141:18" pos:end="141:30">MINTR_RST_ALL</name></expr>:</case>

                <expr_stmt pos:start="143:17" pos:end="143:49"><expr pos:start="143:17" pos:end="143:48"><call pos:start="143:17" pos:end="143:48"><name pos:start="143:17" pos:end="143:26">escc_reset</name><argument_list pos:start="143:27" pos:end="143:48">(<argument pos:start="143:28" pos:end="143:47"><expr pos:start="143:28" pos:end="143:47"><operator pos:start="143:28" pos:end="143:28">&amp;</operator><name pos:start="143:29" pos:end="143:47"><name pos:start="143:29" pos:end="143:34">serial</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:42">busdev</name><operator pos:start="143:43" pos:end="143:43">.</operator><name pos:start="143:44" pos:end="143:47">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="145:17" pos:end="145:23">return;</return>

            </block_content>}</block></switch>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <default pos:start="151:9" pos:end="151:16">default:</default>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="157:9" pos:end="163:23"><if pos:start="157:9" pos:end="159:28">if <condition pos:start="157:12" pos:end="157:24">(<expr pos:start="157:13" pos:end="157:23"><name pos:start="157:13" pos:end="157:18"><name pos:start="157:13" pos:end="157:13">s</name><operator pos:start="157:14" pos:end="157:15">-&gt;</operator><name pos:start="157:16" pos:end="157:18">reg</name></name> <operator pos:start="157:20" pos:end="157:21">==</operator> <literal type="number" pos:start="157:23" pos:end="157:23">0</literal></expr>)</condition><block type="pseudo" pos:start="159:13" pos:end="159:28"><block_content pos:start="159:13" pos:end="159:28">

            <expr_stmt pos:start="159:13" pos:end="159:28"><expr pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:18"><name pos:start="159:13" pos:end="159:13">s</name><operator pos:start="159:14" pos:end="159:15">-&gt;</operator><name pos:start="159:16" pos:end="159:18">reg</name></name> <operator pos:start="159:20" pos:end="159:20">=</operator> <name pos:start="159:22" pos:end="159:27">newreg</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="161:9" pos:end="163:23">else<block type="pseudo" pos:start="163:13" pos:end="163:23"><block_content pos:start="163:13" pos:end="163:23">

            <expr_stmt pos:start="163:13" pos:end="163:23"><expr pos:start="163:13" pos:end="163:22"><name pos:start="163:13" pos:end="163:18"><name pos:start="163:13" pos:end="163:13">s</name><operator pos:start="163:14" pos:end="163:15">-&gt;</operator><name pos:start="163:16" pos:end="163:18">reg</name></name> <operator pos:start="163:20" pos:end="163:20">=</operator> <literal type="number" pos:start="163:22" pos:end="163:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:21">case <expr pos:start="167:10" pos:end="167:20"><name pos:start="167:10" pos:end="167:20">SERIAL_DATA</name></expr>:</case>

        <expr_stmt pos:start="169:9" pos:end="169:50"><expr pos:start="169:9" pos:end="169:49"><call pos:start="169:9" pos:end="169:49"><name pos:start="169:9" pos:end="169:34">trace_escc_mem_writeb_data</name><argument_list pos:start="169:35" pos:end="169:49">(<argument pos:start="169:36" pos:end="169:43"><expr pos:start="169:36" pos:end="169:43"><call pos:start="169:36" pos:end="169:43"><name pos:start="169:36" pos:end="169:40">CHN_C</name><argument_list pos:start="169:41" pos:end="169:43">(<argument pos:start="169:42" pos:end="169:42"><expr pos:start="169:42" pos:end="169:42"><name pos:start="169:42" pos:end="169:42">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:46" pos:end="169:48"><expr pos:start="169:46" pos:end="169:48"><name pos:start="169:46" pos:end="169:48">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:20"><expr pos:start="171:9" pos:end="171:19"><name pos:start="171:9" pos:end="171:13"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:13">tx</name></name> <operator pos:start="171:15" pos:end="171:15">=</operator> <name pos:start="171:17" pos:end="171:19">val</name></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="185:9"><if pos:start="173:9" pos:end="185:9">if <condition pos:start="173:12" pos:end="173:47">(<expr pos:start="173:13" pos:end="173:46"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:13">s</name><operator pos:start="173:14" pos:end="173:15">-&gt;</operator><name pos:start="173:16" pos:end="173:20">wregs</name><index pos:start="173:21" pos:end="173:31">[<expr pos:start="173:22" pos:end="173:30"><name pos:start="173:22" pos:end="173:30">W_TXCTRL2</name></expr>]</index></name> <operator pos:start="173:33" pos:end="173:33">&amp;</operator> <name pos:start="173:35" pos:end="173:46">TXCTRL2_TXEN</name></expr>)</condition> <block pos:start="173:49" pos:end="185:9">{<block_content pos:start="175:13" pos:end="183:13"> <comment type="line" pos:start="173:51" pos:end="173:63">// tx enabled</comment>

            <if_stmt pos:start="175:13" pos:end="183:13"><if pos:start="175:13" pos:end="177:53">if <condition pos:start="175:16" pos:end="175:23">(<expr pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:17">s</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:22">chr</name></name></expr>)</condition><block type="pseudo" pos:start="177:17" pos:end="177:53"><block_content pos:start="177:17" pos:end="177:53">

                <expr_stmt pos:start="177:17" pos:end="177:53"><expr pos:start="177:17" pos:end="177:52"><call pos:start="177:17" pos:end="177:52"><name pos:start="177:17" pos:end="177:33">qemu_chr_fe_write</name><argument_list pos:start="177:34" pos:end="177:52">(<argument pos:start="177:35" pos:end="177:40"><expr pos:start="177:35" pos:end="177:40"><name pos:start="177:35" pos:end="177:40"><name pos:start="177:35" pos:end="177:35">s</name><operator pos:start="177:36" pos:end="177:37">-&gt;</operator><name pos:start="177:38" pos:end="177:40">chr</name></name></expr></argument>, <argument pos:start="177:43" pos:end="177:48"><expr pos:start="177:43" pos:end="177:48"><operator pos:start="177:43" pos:end="177:43">&amp;</operator><name pos:start="177:44" pos:end="177:48"><name pos:start="177:44" pos:end="177:44">s</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:48">tx</name></name></expr></argument>, <argument pos:start="177:51" pos:end="177:51"><expr pos:start="177:51" pos:end="177:51"><literal type="number" pos:start="177:51" pos:end="177:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="179:13" pos:end="183:13">else if <condition pos:start="179:21" pos:end="179:52">(<expr pos:start="179:22" pos:end="179:51"><name pos:start="179:22" pos:end="179:28"><name pos:start="179:22" pos:end="179:22">s</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:28">type</name></name> <operator pos:start="179:30" pos:end="179:31">==</operator> <name pos:start="179:33" pos:end="179:35">kbd</name> <operator pos:start="179:37" pos:end="179:38">&amp;&amp;</operator> <operator pos:start="179:40" pos:end="179:40">!</operator><name pos:start="179:41" pos:end="179:51"><name pos:start="179:41" pos:end="179:41">s</name><operator pos:start="179:42" pos:end="179:43">-&gt;</operator><name pos:start="179:44" pos:end="179:51">disabled</name></name></expr>)</condition> <block pos:start="179:54" pos:end="183:13">{<block_content pos:start="181:17" pos:end="181:43">

                <expr_stmt pos:start="181:17" pos:end="181:43"><expr pos:start="181:17" pos:end="181:42"><call pos:start="181:17" pos:end="181:42"><name pos:start="181:17" pos:end="181:34">handle_kbd_command</name><argument_list pos:start="181:35" pos:end="181:42">(<argument pos:start="181:36" pos:end="181:36"><expr pos:start="181:36" pos:end="181:36"><name pos:start="181:36" pos:end="181:36">s</name></expr></argument>, <argument pos:start="181:39" pos:end="181:41"><expr pos:start="181:39" pos:end="181:41"><name pos:start="181:39" pos:end="181:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:45"><expr pos:start="187:9" pos:end="187:44"><name pos:start="187:9" pos:end="187:26"><name pos:start="187:9" pos:end="187:9">s</name><operator pos:start="187:10" pos:end="187:11">-&gt;</operator><name pos:start="187:12" pos:end="187:16">rregs</name><index pos:start="187:17" pos:end="187:26">[<expr pos:start="187:18" pos:end="187:25"><name pos:start="187:18" pos:end="187:25">R_STATUS</name></expr>]</index></name> <operator pos:start="187:28" pos:end="187:29">|=</operator> <name pos:start="187:31" pos:end="187:44">STATUS_TXEMPTY</name></expr>;</expr_stmt> <comment type="line" pos:start="187:47" pos:end="187:64">// Tx buffer empty</comment>

        <expr_stmt pos:start="189:9" pos:end="189:41"><expr pos:start="189:9" pos:end="189:40"><name pos:start="189:9" pos:end="189:24"><name pos:start="189:9" pos:end="189:9">s</name><operator pos:start="189:10" pos:end="189:11">-&gt;</operator><name pos:start="189:12" pos:end="189:16">rregs</name><index pos:start="189:17" pos:end="189:24">[<expr pos:start="189:18" pos:end="189:23"><name pos:start="189:18" pos:end="189:23">R_SPEC</name></expr>]</index></name> <operator pos:start="189:26" pos:end="189:27">|=</operator> <name pos:start="189:29" pos:end="189:40">SPEC_ALLSENT</name></expr>;</expr_stmt> <comment type="line" pos:start="189:43" pos:end="189:53">// All sent</comment>

        <expr_stmt pos:start="191:9" pos:end="191:21"><expr pos:start="191:9" pos:end="191:20"><call pos:start="191:9" pos:end="191:20"><name pos:start="191:9" pos:end="191:17">set_txint</name><argument_list pos:start="191:18" pos:end="191:20">(<argument pos:start="191:19" pos:end="191:19"><expr pos:start="191:19" pos:end="191:19"><name pos:start="191:19" pos:end="191:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="193:9" pos:end="193:14">break;</break>

    <default pos:start="195:5" pos:end="195:12">default:</default>

        <break pos:start="197:9" pos:end="197:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
