<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22950.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:39"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:34">av_flatten</name> <name pos:start="1:36" pos:end="1:39">void</name></type> <name pos:start="1:41" pos:end="1:63">h264_loop_filter_luma_c</name><parameter_list pos:start="1:64" pos:end="1:137">(<parameter pos:start="1:65" pos:end="1:76"><decl pos:start="1:65" pos:end="1:76"><type pos:start="1:65" pos:end="1:76"><name pos:start="1:65" pos:end="1:71">uint8_t</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:76">pix</name></decl></parameter>, <parameter pos:start="1:79" pos:end="1:89"><decl pos:start="1:79" pos:end="1:89"><type pos:start="1:79" pos:end="1:89"><name pos:start="1:79" pos:end="1:81">int</name></type> <name pos:start="1:83" pos:end="1:89">xstride</name></decl></parameter>, <parameter pos:start="1:92" pos:end="1:102"><decl pos:start="1:92" pos:end="1:102"><type pos:start="1:92" pos:end="1:102"><name pos:start="1:92" pos:end="1:94">int</name></type> <name pos:start="1:96" pos:end="1:102">ystride</name></decl></parameter>, <parameter pos:start="1:105" pos:end="1:113"><decl pos:start="1:105" pos:end="1:113"><type pos:start="1:105" pos:end="1:113"><name pos:start="1:105" pos:end="1:107">int</name></type> <name pos:start="1:109" pos:end="1:113">alpha</name></decl></parameter>, <parameter pos:start="1:116" pos:end="1:123"><decl pos:start="1:116" pos:end="1:123"><type pos:start="1:116" pos:end="1:123"><name pos:start="1:116" pos:end="1:118">int</name></type> <name pos:start="1:120" pos:end="1:123">beta</name></decl></parameter>, <parameter pos:start="1:126" pos:end="1:136"><decl pos:start="1:126" pos:end="1:136"><type pos:start="1:126" pos:end="1:136"><name pos:start="1:126" pos:end="1:131">int8_t</name> <modifier pos:start="1:133" pos:end="1:133">*</modifier></type><name pos:start="1:134" pos:end="1:136">tc0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:5">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">d</name></decl>;</decl_stmt>

    <for pos:start="7:5" pos:end="81:5">for<control pos:start="7:8" pos:end="7:28">( <init pos:start="7:10" pos:end="7:15"><expr pos:start="7:10" pos:end="7:14"><name pos:start="7:10" pos:end="7:10">i</name> <operator pos:start="7:12" pos:end="7:12">=</operator> <literal type="number" pos:start="7:14" pos:end="7:14">0</literal></expr>;</init> <condition pos:start="7:17" pos:end="7:22"><expr pos:start="7:17" pos:end="7:21"><name pos:start="7:17" pos:end="7:17">i</name> <operator pos:start="7:19" pos:end="7:19">&lt;</operator> <literal type="number" pos:start="7:21" pos:end="7:21">4</literal></expr>;</condition> <incr pos:start="7:24" pos:end="7:26"><expr pos:start="7:24" pos:end="7:26"><name pos:start="7:24" pos:end="7:24">i</name><operator pos:start="7:25" pos:end="7:26">++</operator></expr></incr> )</control> <block pos:start="7:30" pos:end="81:5">{<block_content pos:start="9:9" pos:end="79:9">

        <if_stmt pos:start="9:9" pos:end="15:9"><if pos:start="9:9" pos:end="15:9">if<condition pos:start="9:11" pos:end="9:24">( <expr pos:start="9:13" pos:end="9:22"><name pos:start="9:13" pos:end="9:18"><name pos:start="9:13" pos:end="9:15">tc0</name><index pos:start="9:16" pos:end="9:18">[<expr pos:start="9:17" pos:end="9:17"><name pos:start="9:17" pos:end="9:17">i</name></expr>]</index></name> <operator pos:start="9:20" pos:end="9:20">&lt;</operator> <literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr> )</condition> <block pos:start="9:26" pos:end="15:9">{<block_content pos:start="11:13" pos:end="13:21">

            <expr_stmt pos:start="11:13" pos:end="11:29"><expr pos:start="11:13" pos:end="11:28"><name pos:start="11:13" pos:end="11:15">pix</name> <operator pos:start="11:17" pos:end="11:18">+=</operator> <literal type="number" pos:start="11:20" pos:end="11:20">4</literal><operator pos:start="11:21" pos:end="11:21">*</operator><name pos:start="11:22" pos:end="11:28">ystride</name></expr>;</expr_stmt>

            <continue pos:start="13:13" pos:end="13:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <for pos:start="17:9" pos:end="79:9">for<control pos:start="17:12" pos:end="17:32">( <init pos:start="17:14" pos:end="17:19"><expr pos:start="17:14" pos:end="17:18"><name pos:start="17:14" pos:end="17:14">d</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</init> <condition pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:25"><name pos:start="17:21" pos:end="17:21">d</name> <operator pos:start="17:23" pos:end="17:23">&lt;</operator> <literal type="number" pos:start="17:25" pos:end="17:25">4</literal></expr>;</condition> <incr pos:start="17:28" pos:end="17:30"><expr pos:start="17:28" pos:end="17:30"><name pos:start="17:28" pos:end="17:28">d</name><operator pos:start="17:29" pos:end="17:30">++</operator></expr></incr> )</control> <block pos:start="17:34" pos:end="79:9">{<block_content pos:start="19:13" pos:end="77:27">

            <decl_stmt pos:start="19:13" pos:end="19:43"><decl pos:start="19:13" pos:end="19:42"><type pos:start="19:13" pos:end="19:21"><specifier pos:start="19:13" pos:end="19:17">const</specifier> <name pos:start="19:19" pos:end="19:21">int</name></type> <name pos:start="19:23" pos:end="19:24">p0</name> <init pos:start="19:26" pos:end="19:42">= <expr pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:30">pix</name><index pos:start="19:31" pos:end="19:42">[<expr pos:start="19:32" pos:end="19:41"><operator pos:start="19:32" pos:end="19:32">-</operator><literal type="number" pos:start="19:33" pos:end="19:33">1</literal><operator pos:start="19:34" pos:end="19:34">*</operator><name pos:start="19:35" pos:end="19:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="21:13" pos:end="21:43"><decl pos:start="21:13" pos:end="21:42"><type pos:start="21:13" pos:end="21:21"><specifier pos:start="21:13" pos:end="21:17">const</specifier> <name pos:start="21:19" pos:end="21:21">int</name></type> <name pos:start="21:23" pos:end="21:24">p1</name> <init pos:start="21:26" pos:end="21:42">= <expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:30">pix</name><index pos:start="21:31" pos:end="21:42">[<expr pos:start="21:32" pos:end="21:41"><operator pos:start="21:32" pos:end="21:32">-</operator><literal type="number" pos:start="21:33" pos:end="21:33">2</literal><operator pos:start="21:34" pos:end="21:34">*</operator><name pos:start="21:35" pos:end="21:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="23:13" pos:end="23:43"><decl pos:start="23:13" pos:end="23:42"><type pos:start="23:13" pos:end="23:21"><specifier pos:start="23:13" pos:end="23:17">const</specifier> <name pos:start="23:19" pos:end="23:21">int</name></type> <name pos:start="23:23" pos:end="23:24">p2</name> <init pos:start="23:26" pos:end="23:42">= <expr pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:42"><name pos:start="23:28" pos:end="23:30">pix</name><index pos:start="23:31" pos:end="23:42">[<expr pos:start="23:32" pos:end="23:41"><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">3</literal><operator pos:start="23:34" pos:end="23:34">*</operator><name pos:start="23:35" pos:end="23:41">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:34"><decl pos:start="25:13" pos:end="25:33"><type pos:start="25:13" pos:end="25:21"><specifier pos:start="25:13" pos:end="25:17">const</specifier> <name pos:start="25:19" pos:end="25:21">int</name></type> <name pos:start="25:23" pos:end="25:24">q0</name> <init pos:start="25:26" pos:end="25:33">= <expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:30">pix</name><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:42"><decl pos:start="27:13" pos:end="27:41"><type pos:start="27:13" pos:end="27:21"><specifier pos:start="27:13" pos:end="27:17">const</specifier> <name pos:start="27:19" pos:end="27:21">int</name></type> <name pos:start="27:23" pos:end="27:24">q1</name> <init pos:start="27:26" pos:end="27:41">= <expr pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:30">pix</name><index pos:start="27:31" pos:end="27:41">[<expr pos:start="27:32" pos:end="27:40"><literal type="number" pos:start="27:32" pos:end="27:32">1</literal><operator pos:start="27:33" pos:end="27:33">*</operator><name pos:start="27:34" pos:end="27:40">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="29:13" pos:end="29:42"><decl pos:start="29:13" pos:end="29:41"><type pos:start="29:13" pos:end="29:21"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:21">int</name></type> <name pos:start="29:23" pos:end="29:24">q2</name> <init pos:start="29:26" pos:end="29:41">= <expr pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:30">pix</name><index pos:start="29:31" pos:end="29:41">[<expr pos:start="29:32" pos:end="29:40"><literal type="number" pos:start="29:32" pos:end="29:32">2</literal><operator pos:start="29:33" pos:end="29:33">*</operator><name pos:start="29:34" pos:end="29:40">xstride</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="33:13" pos:end="75:13"><if pos:start="33:13" pos:end="75:13">if<condition pos:start="33:15" pos:end="37:41">( <expr pos:start="33:17" pos:end="37:39"><call pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:21">FFABS</name><argument_list pos:start="33:22" pos:end="33:32">( <argument pos:start="33:24" pos:end="33:30"><expr pos:start="33:24" pos:end="33:30"><name pos:start="33:24" pos:end="33:25">p0</name> <operator pos:start="33:27" pos:end="33:27">-</operator> <name pos:start="33:29" pos:end="33:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="33:34" pos:end="33:34">&lt;</operator> <name pos:start="33:36" pos:end="33:40">alpha</name> <operator pos:start="33:42" pos:end="33:43">&amp;&amp;</operator>

                <call pos:start="35:17" pos:end="35:32"><name pos:start="35:17" pos:end="35:21">FFABS</name><argument_list pos:start="35:22" pos:end="35:32">( <argument pos:start="35:24" pos:end="35:30"><expr pos:start="35:24" pos:end="35:30"><name pos:start="35:24" pos:end="35:25">p1</name> <operator pos:start="35:27" pos:end="35:27">-</operator> <name pos:start="35:29" pos:end="35:30">p0</name></expr></argument> )</argument_list></call> <operator pos:start="35:34" pos:end="35:34">&lt;</operator> <name pos:start="35:36" pos:end="35:39">beta</name> <operator pos:start="35:41" pos:end="35:42">&amp;&amp;</operator>

                <call pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:21">FFABS</name><argument_list pos:start="37:22" pos:end="37:32">( <argument pos:start="37:24" pos:end="37:30"><expr pos:start="37:24" pos:end="37:30"><name pos:start="37:24" pos:end="37:25">q1</name> <operator pos:start="37:27" pos:end="37:27">-</operator> <name pos:start="37:29" pos:end="37:30">q0</name></expr></argument> )</argument_list></call> <operator pos:start="37:34" pos:end="37:34">&lt;</operator> <name pos:start="37:36" pos:end="37:39">beta</name></expr> )</condition> <block pos:start="37:43" pos:end="75:13">{<block_content pos:start="41:17" pos:end="73:62">



                <decl_stmt pos:start="41:17" pos:end="41:32"><decl pos:start="41:17" pos:end="41:31"><type pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">int</name></type> <name pos:start="41:21" pos:end="41:22">tc</name> <init pos:start="41:24" pos:end="41:31">= <expr pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:31"><name pos:start="41:26" pos:end="41:28">tc0</name><index pos:start="41:29" pos:end="41:31">[<expr pos:start="41:30" pos:end="41:30"><name pos:start="41:30" pos:end="41:30">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="43:17" pos:end="43:28"><decl pos:start="43:17" pos:end="43:27"><type pos:start="43:17" pos:end="43:19"><name pos:start="43:17" pos:end="43:19">int</name></type> <name pos:start="43:21" pos:end="43:27">i_delta</name></decl>;</decl_stmt>



                <if_stmt pos:start="47:17" pos:end="55:17"><if pos:start="47:17" pos:end="55:17">if<condition pos:start="47:19" pos:end="47:45">( <expr pos:start="47:21" pos:end="47:43"><call pos:start="47:21" pos:end="47:36"><name pos:start="47:21" pos:end="47:25">FFABS</name><argument_list pos:start="47:26" pos:end="47:36">( <argument pos:start="47:28" pos:end="47:34"><expr pos:start="47:28" pos:end="47:34"><name pos:start="47:28" pos:end="47:29">p2</name> <operator pos:start="47:31" pos:end="47:31">-</operator> <name pos:start="47:33" pos:end="47:34">p0</name></expr></argument> )</argument_list></call> <operator pos:start="47:38" pos:end="47:38">&lt;</operator> <name pos:start="47:40" pos:end="47:43">beta</name></expr> )</condition> <block pos:start="47:47" pos:end="55:17">{<block_content pos:start="49:21" pos:end="53:25">

                    <if_stmt pos:start="49:21" pos:end="51:117"><if pos:start="49:21" pos:end="51:117">if<condition pos:start="49:23" pos:end="49:30">(<expr pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:29"><name pos:start="49:24" pos:end="49:26">tc0</name><index pos:start="49:27" pos:end="49:29">[<expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="51:21" pos:end="51:117"><block_content pos:start="51:21" pos:end="51:117">

                    <expr_stmt pos:start="51:21" pos:end="51:117"><expr pos:start="51:21" pos:end="51:116"><name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:23">pix</name><index pos:start="51:24" pos:end="51:35">[<expr pos:start="51:25" pos:end="51:34"><operator pos:start="51:25" pos:end="51:25">-</operator><literal type="number" pos:start="51:26" pos:end="51:26">2</literal><operator pos:start="51:27" pos:end="51:27">*</operator><name pos:start="51:28" pos:end="51:34">xstride</name></expr>]</index></name> <operator pos:start="51:37" pos:end="51:37">=</operator> <name pos:start="51:39" pos:end="51:40">p1</name> <operator pos:start="51:42" pos:end="51:42">+</operator> <call pos:start="51:44" pos:end="51:116"><name pos:start="51:44" pos:end="51:50">av_clip</name><argument_list pos:start="51:51" pos:end="51:116">( <argument pos:start="51:53" pos:end="51:97"><expr pos:start="51:53" pos:end="51:97"><operator pos:start="51:53" pos:end="51:53">(</operator><operator pos:start="51:54" pos:end="51:54">(</operator> <name pos:start="51:56" pos:end="51:57">p2</name> <operator pos:start="51:59" pos:end="51:59">+</operator> <operator pos:start="51:61" pos:end="51:61">(</operator> <operator pos:start="51:63" pos:end="51:63">(</operator> <name pos:start="51:65" pos:end="51:66">p0</name> <operator pos:start="51:68" pos:end="51:68">+</operator> <name pos:start="51:70" pos:end="51:71">q0</name> <operator pos:start="51:73" pos:end="51:73">+</operator> <literal type="number" pos:start="51:75" pos:end="51:75">1</literal> <operator pos:start="51:77" pos:end="51:77">)</operator> <operator pos:start="51:79" pos:end="51:80">&gt;&gt;</operator> <literal type="number" pos:start="51:82" pos:end="51:82">1</literal> <operator pos:start="51:84" pos:end="51:84">)</operator> <operator pos:start="51:86" pos:end="51:86">)</operator> <operator pos:start="51:88" pos:end="51:89">&gt;&gt;</operator> <literal type="number" pos:start="51:91" pos:end="51:91">1</literal><operator pos:start="51:92" pos:end="51:92">)</operator> <operator pos:start="51:94" pos:end="51:94">-</operator> <name pos:start="51:96" pos:end="51:97">p1</name></expr></argument>, <argument pos:start="51:100" pos:end="51:106"><expr pos:start="51:100" pos:end="51:106"><operator pos:start="51:100" pos:end="51:100">-</operator><name pos:start="51:101" pos:end="51:106"><name pos:start="51:101" pos:end="51:103">tc0</name><index pos:start="51:104" pos:end="51:106">[<expr pos:start="51:105" pos:end="51:105"><name pos:start="51:105" pos:end="51:105">i</name></expr>]</index></name></expr></argument>, <argument pos:start="51:109" pos:end="51:114"><expr pos:start="51:109" pos:end="51:114"><name pos:start="51:109" pos:end="51:114"><name pos:start="51:109" pos:end="51:111">tc0</name><index pos:start="51:112" pos:end="51:114">[<expr pos:start="51:113" pos:end="51:113"><name pos:start="51:113" pos:end="51:113">i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="53:21" pos:end="53:25"><expr pos:start="53:21" pos:end="53:24"><name pos:start="53:21" pos:end="53:22">tc</name><operator pos:start="53:23" pos:end="53:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="57:17" pos:end="65:17"><if pos:start="57:17" pos:end="65:17">if<condition pos:start="57:19" pos:end="57:45">( <expr pos:start="57:21" pos:end="57:43"><call pos:start="57:21" pos:end="57:36"><name pos:start="57:21" pos:end="57:25">FFABS</name><argument_list pos:start="57:26" pos:end="57:36">( <argument pos:start="57:28" pos:end="57:34"><expr pos:start="57:28" pos:end="57:34"><name pos:start="57:28" pos:end="57:29">q2</name> <operator pos:start="57:31" pos:end="57:31">-</operator> <name pos:start="57:33" pos:end="57:34">q0</name></expr></argument> )</argument_list></call> <operator pos:start="57:38" pos:end="57:38">&lt;</operator> <name pos:start="57:40" pos:end="57:43">beta</name></expr> )</condition> <block pos:start="57:47" pos:end="65:17">{<block_content pos:start="59:21" pos:end="63:25">

                    <if_stmt pos:start="59:21" pos:end="61:117"><if pos:start="59:21" pos:end="61:117">if<condition pos:start="59:23" pos:end="59:30">(<expr pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:29"><name pos:start="59:24" pos:end="59:26">tc0</name><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="61:21" pos:end="61:117"><block_content pos:start="61:21" pos:end="61:117">

                    <expr_stmt pos:start="61:21" pos:end="61:117"><expr pos:start="61:21" pos:end="61:116"><name pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:23">pix</name><index pos:start="61:24" pos:end="61:35">[   <expr pos:start="61:28" pos:end="61:34"><name pos:start="61:28" pos:end="61:34">xstride</name></expr>]</index></name> <operator pos:start="61:37" pos:end="61:37">=</operator> <name pos:start="61:39" pos:end="61:40">q1</name> <operator pos:start="61:42" pos:end="61:42">+</operator> <call pos:start="61:44" pos:end="61:116"><name pos:start="61:44" pos:end="61:50">av_clip</name><argument_list pos:start="61:51" pos:end="61:116">( <argument pos:start="61:53" pos:end="61:97"><expr pos:start="61:53" pos:end="61:97"><operator pos:start="61:53" pos:end="61:53">(</operator><operator pos:start="61:54" pos:end="61:54">(</operator> <name pos:start="61:56" pos:end="61:57">q2</name> <operator pos:start="61:59" pos:end="61:59">+</operator> <operator pos:start="61:61" pos:end="61:61">(</operator> <operator pos:start="61:63" pos:end="61:63">(</operator> <name pos:start="61:65" pos:end="61:66">p0</name> <operator pos:start="61:68" pos:end="61:68">+</operator> <name pos:start="61:70" pos:end="61:71">q0</name> <operator pos:start="61:73" pos:end="61:73">+</operator> <literal type="number" pos:start="61:75" pos:end="61:75">1</literal> <operator pos:start="61:77" pos:end="61:77">)</operator> <operator pos:start="61:79" pos:end="61:80">&gt;&gt;</operator> <literal type="number" pos:start="61:82" pos:end="61:82">1</literal> <operator pos:start="61:84" pos:end="61:84">)</operator> <operator pos:start="61:86" pos:end="61:86">)</operator> <operator pos:start="61:88" pos:end="61:89">&gt;&gt;</operator> <literal type="number" pos:start="61:91" pos:end="61:91">1</literal><operator pos:start="61:92" pos:end="61:92">)</operator> <operator pos:start="61:94" pos:end="61:94">-</operator> <name pos:start="61:96" pos:end="61:97">q1</name></expr></argument>, <argument pos:start="61:100" pos:end="61:106"><expr pos:start="61:100" pos:end="61:106"><operator pos:start="61:100" pos:end="61:100">-</operator><name pos:start="61:101" pos:end="61:106"><name pos:start="61:101" pos:end="61:103">tc0</name><index pos:start="61:104" pos:end="61:106">[<expr pos:start="61:105" pos:end="61:105"><name pos:start="61:105" pos:end="61:105">i</name></expr>]</index></name></expr></argument>, <argument pos:start="61:109" pos:end="61:114"><expr pos:start="61:109" pos:end="61:114"><name pos:start="61:109" pos:end="61:114"><name pos:start="61:109" pos:end="61:111">tc0</name><index pos:start="61:112" pos:end="61:114">[<expr pos:start="61:113" pos:end="61:113"><name pos:start="61:113" pos:end="61:113">i</name></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:25"><expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:22">tc</name><operator pos:start="63:23" pos:end="63:24">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:87"><expr pos:start="69:17" pos:end="69:86"><name pos:start="69:17" pos:end="69:23">i_delta</name> <operator pos:start="69:25" pos:end="69:25">=</operator> <call pos:start="69:27" pos:end="69:86"><name pos:start="69:27" pos:end="69:33">av_clip</name><argument_list pos:start="69:34" pos:end="69:86">( <argument pos:start="69:36" pos:end="69:75"><expr pos:start="69:36" pos:end="69:75"><operator pos:start="69:36" pos:end="69:36">(</operator><operator pos:start="69:37" pos:end="69:37">(</operator><operator pos:start="69:38" pos:end="69:38">(</operator><name pos:start="69:39" pos:end="69:40">q0</name> <operator pos:start="69:42" pos:end="69:42">-</operator> <name pos:start="69:44" pos:end="69:45">p0</name> <operator pos:start="69:47" pos:end="69:47">)</operator> <operator pos:start="69:49" pos:end="69:50">&lt;&lt;</operator> <literal type="number" pos:start="69:52" pos:end="69:52">2</literal><operator pos:start="69:53" pos:end="69:53">)</operator> <operator pos:start="69:55" pos:end="69:55">+</operator> <operator pos:start="69:57" pos:end="69:57">(</operator><name pos:start="69:58" pos:end="69:59">p1</name> <operator pos:start="69:61" pos:end="69:61">-</operator> <name pos:start="69:63" pos:end="69:64">q1</name><operator pos:start="69:65" pos:end="69:65">)</operator> <operator pos:start="69:67" pos:end="69:67">+</operator> <literal type="number" pos:start="69:69" pos:end="69:69">4</literal><operator pos:start="69:70" pos:end="69:70">)</operator> <operator pos:start="69:72" pos:end="69:73">&gt;&gt;</operator> <literal type="number" pos:start="69:75" pos:end="69:75">3</literal></expr></argument>, <argument pos:start="69:78" pos:end="69:80"><expr pos:start="69:78" pos:end="69:80"><operator pos:start="69:78" pos:end="69:78">-</operator><name pos:start="69:79" pos:end="69:80">tc</name></expr></argument>, <argument pos:start="69:83" pos:end="69:84"><expr pos:start="69:83" pos:end="69:84"><name pos:start="69:83" pos:end="69:84">tc</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:62"><expr pos:start="71:17" pos:end="71:61"><name pos:start="71:17" pos:end="71:29"><name pos:start="71:17" pos:end="71:19">pix</name><index pos:start="71:20" pos:end="71:29">[<expr pos:start="71:21" pos:end="71:28"><operator pos:start="71:21" pos:end="71:21">-</operator><name pos:start="71:22" pos:end="71:28">xstride</name></expr>]</index></name> <operator pos:start="71:31" pos:end="71:31">=</operator> <call pos:start="71:33" pos:end="71:61"><name pos:start="71:33" pos:end="71:45">av_clip_uint8</name><argument_list pos:start="71:46" pos:end="71:61">( <argument pos:start="71:48" pos:end="71:59"><expr pos:start="71:48" pos:end="71:59"><name pos:start="71:48" pos:end="71:49">p0</name> <operator pos:start="71:51" pos:end="71:51">+</operator> <name pos:start="71:53" pos:end="71:59">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="71:67" pos:end="71:75">/* p0' */</comment>

                <expr_stmt pos:start="73:17" pos:end="73:62"><expr pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:22"><name pos:start="73:17" pos:end="73:19">pix</name><index pos:start="73:20" pos:end="73:22">[<expr pos:start="73:21" pos:end="73:21"><literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>]</index></name>        <operator pos:start="73:31" pos:end="73:31">=</operator> <call pos:start="73:33" pos:end="73:61"><name pos:start="73:33" pos:end="73:45">av_clip_uint8</name><argument_list pos:start="73:46" pos:end="73:61">( <argument pos:start="73:48" pos:end="73:59"><expr pos:start="73:48" pos:end="73:59"><name pos:start="73:48" pos:end="73:49">q0</name> <operator pos:start="73:51" pos:end="73:51">-</operator> <name pos:start="73:53" pos:end="73:59">i_delta</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>    <comment type="block" pos:start="73:67" pos:end="73:75">/* q0' */</comment>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:27"><expr pos:start="77:13" pos:end="77:26"><name pos:start="77:13" pos:end="77:15">pix</name> <operator pos:start="77:17" pos:end="77:18">+=</operator> <name pos:start="77:20" pos:end="77:26">ystride</name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
