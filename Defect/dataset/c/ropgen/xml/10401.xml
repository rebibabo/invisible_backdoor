<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10401.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">mjpeg_decode_com</name><parameter_list pos:start="1:28" pos:end="1:50">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:48"><name pos:start="1:29" pos:end="1:46">MJpegDecodeContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="7:5" pos:end="69:13">

    <comment type="block" pos:start="5:5" pos:end="5:40">/* XXX: verify len field validity */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name> <init pos:start="7:13" pos:end="7:34">= <expr pos:start="7:15" pos:end="7:34"><call pos:start="7:15" pos:end="7:34"><name pos:start="7:15" pos:end="7:22">get_bits</name><argument_list pos:start="7:23" pos:end="7:34">(<argument pos:start="7:24" pos:end="7:29"><expr pos:start="7:24" pos:end="7:29"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:29"><name pos:start="7:25" pos:end="7:25">s</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:29">gb</name></name></expr></argument>, <argument pos:start="7:32" pos:end="7:33"><expr pos:start="7:32" pos:end="7:33"><literal type="number" pos:start="7:32" pos:end="7:33">16</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="9:5" pos:end="65:5"><if pos:start="9:5" pos:end="65:5">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:11">len</name> <operator pos:start="9:13" pos:end="9:14">&gt;=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">2</literal> <operator pos:start="9:18" pos:end="9:19">&amp;&amp;</operator> <name pos:start="9:21" pos:end="9:23">len</name> <operator pos:start="9:25" pos:end="9:25">&lt;</operator> <literal type="number" pos:start="9:27" pos:end="9:31">32768</literal></expr>)</condition> <block pos:start="9:34" pos:end="65:5">{<block_content pos:start="13:9" pos:end="63:9">

	<comment type="block" pos:start="11:9" pos:end="11:41">/* XXX: any better upper bound */</comment>

	<decl_stmt pos:start="13:9" pos:end="13:43"><decl pos:start="13:9" pos:end="13:42"><type pos:start="13:9" pos:end="13:17"><name pos:start="13:9" pos:end="13:15">uint8_t</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:21">cbuf</name> <init pos:start="13:23" pos:end="13:42">= <expr pos:start="13:25" pos:end="13:42"><call pos:start="13:25" pos:end="13:42"><name pos:start="13:25" pos:end="13:33">av_malloc</name><argument_list pos:start="13:34" pos:end="13:42">(<argument pos:start="13:35" pos:end="13:41"><expr pos:start="13:35" pos:end="13:41"><name pos:start="13:35" pos:end="13:37">len</name> <operator pos:start="13:39" pos:end="13:39">-</operator> <literal type="number" pos:start="13:41" pos:end="13:41">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="15:9" pos:end="63:9"><if pos:start="15:9" pos:end="63:9">if <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">cbuf</name></expr>)</condition> <block pos:start="15:19" pos:end="63:9">{<block_content pos:start="17:13" pos:end="61:26">

	    <decl_stmt pos:start="17:13" pos:end="17:18"><decl pos:start="17:13" pos:end="17:17"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:17">i</name></decl>;</decl_stmt>

	    <for pos:start="19:13" pos:end="21:46">for <control pos:start="19:17" pos:end="19:41">(<init pos:start="19:18" pos:end="19:23"><expr pos:start="19:18" pos:end="19:22"><name pos:start="19:18" pos:end="19:18">i</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>;</init> <condition pos:start="19:25" pos:end="19:36"><expr pos:start="19:25" pos:end="19:35"><name pos:start="19:25" pos:end="19:25">i</name> <operator pos:start="19:27" pos:end="19:27">&lt;</operator> <name pos:start="19:29" pos:end="19:31">len</name> <operator pos:start="19:33" pos:end="19:33">-</operator> <literal type="number" pos:start="19:35" pos:end="19:35">2</literal></expr>;</condition> <incr pos:start="19:38" pos:end="19:40"><expr pos:start="19:38" pos:end="19:40"><name pos:start="19:38" pos:end="19:38">i</name><operator pos:start="19:39" pos:end="19:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:17" pos:end="21:46"><block_content pos:start="21:17" pos:end="21:46">

		<expr_stmt pos:start="21:17" pos:end="21:46"><expr pos:start="21:17" pos:end="21:45"><name pos:start="21:17" pos:end="21:23"><name pos:start="21:17" pos:end="21:20">cbuf</name><index pos:start="21:21" pos:end="21:23">[<expr pos:start="21:22" pos:end="21:22"><name pos:start="21:22" pos:end="21:22">i</name></expr>]</index></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:45"><name pos:start="21:27" pos:end="21:34">get_bits</name><argument_list pos:start="21:35" pos:end="21:45">(<argument pos:start="21:36" pos:end="21:41"><expr pos:start="21:36" pos:end="21:41"><operator pos:start="21:36" pos:end="21:36">&amp;</operator><name pos:start="21:37" pos:end="21:41"><name pos:start="21:37" pos:end="21:37">s</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:41">gb</name></name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <if_stmt pos:start="23:13" pos:end="29:28"><if pos:start="23:13" pos:end="25:30">if <condition pos:start="23:16" pos:end="23:43">(<expr pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&gt;</operator> <literal type="number" pos:start="23:21" pos:end="23:21">0</literal> <operator pos:start="23:23" pos:end="23:24">&amp;&amp;</operator> <name pos:start="23:26" pos:end="23:34"><name pos:start="23:26" pos:end="23:29">cbuf</name><index pos:start="23:30" pos:end="23:34">[<expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:31">i</name><operator pos:start="23:32" pos:end="23:32">-</operator><literal type="number" pos:start="23:33" pos:end="23:33">1</literal></expr>]</index></name> <operator pos:start="23:36" pos:end="23:37">==</operator> <literal type="char" pos:start="23:39" pos:end="23:42">'\n'</literal></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:30"><block_content pos:start="25:17" pos:end="25:30">

		<expr_stmt pos:start="25:17" pos:end="25:30"><expr pos:start="25:17" pos:end="25:29"><name pos:start="25:17" pos:end="25:25"><name pos:start="25:17" pos:end="25:20">cbuf</name><index pos:start="25:21" pos:end="25:25">[<expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:22">i</name><operator pos:start="25:23" pos:end="25:23">-</operator><literal type="number" pos:start="25:24" pos:end="25:24">1</literal></expr>]</index></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr>;</expr_stmt></block_content></block></if>

	    <else pos:start="27:13" pos:end="29:28">else<block type="pseudo" pos:start="29:17" pos:end="29:28"><block_content pos:start="29:17" pos:end="29:28">

		<expr_stmt pos:start="29:17" pos:end="29:28"><expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:20">cbuf</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><name pos:start="29:22" pos:end="29:22">i</name></expr>]</index></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="33:13" pos:end="35:77"><if pos:start="33:13" pos:end="35:77">if<condition pos:start="33:15" pos:end="33:52">(<expr pos:start="33:16" pos:end="33:51"><name pos:start="33:16" pos:end="33:30"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:30">debug</name></name> <operator pos:start="33:32" pos:end="33:32">&amp;</operator> <name pos:start="33:34" pos:end="33:51">FF_DEBUG_PICT_INFO</name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:77"><block_content pos:start="35:17" pos:end="35:77">

                <expr_stmt pos:start="35:17" pos:end="35:77"><expr pos:start="35:17" pos:end="35:76"><call pos:start="35:17" pos:end="35:76"><name pos:start="35:17" pos:end="35:22">av_log</name><argument_list pos:start="35:23" pos:end="35:76">(<argument pos:start="35:24" pos:end="35:31"><expr pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:31"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:31">avctx</name></name></expr></argument>, <argument pos:start="35:34" pos:end="35:44"><expr pos:start="35:34" pos:end="35:44"><name pos:start="35:34" pos:end="35:44">AV_LOG_INFO</name></expr></argument>, <argument pos:start="35:47" pos:end="35:69"><expr pos:start="35:47" pos:end="35:69"><literal type="string" pos:start="35:47" pos:end="35:69">"mjpeg comment: '%s'\n"</literal></expr></argument>, <argument pos:start="35:72" pos:end="35:75"><expr pos:start="35:72" pos:end="35:75"><name pos:start="35:72" pos:end="35:75">cbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



	    <comment type="block" pos:start="39:13" pos:end="39:66">/* buggy avid, it puts EOI only at every 10th frame */</comment>

	    <if_stmt pos:start="41:13" pos:end="57:13"><if pos:start="41:13" pos:end="51:13">if <condition pos:start="41:16" pos:end="41:38">(<expr pos:start="41:17" pos:end="41:37"><operator pos:start="41:17" pos:end="41:17">!</operator><call pos:start="41:18" pos:end="41:37"><name pos:start="41:18" pos:end="41:23">strcmp</name><argument_list pos:start="41:24" pos:end="41:37">(<argument pos:start="41:25" pos:end="41:28"><expr pos:start="41:25" pos:end="41:28"><name pos:start="41:25" pos:end="41:28">cbuf</name></expr></argument>, <argument pos:start="41:31" pos:end="41:36"><expr pos:start="41:31" pos:end="41:36"><literal type="string" pos:start="41:31" pos:end="41:36">"AVID"</literal></expr></argument>)</argument_list></call></expr>)</condition>

	    <block pos:start="43:13" pos:end="51:13">{<block_content pos:start="45:17" pos:end="45:34">

		<expr_stmt pos:start="45:17" pos:end="45:34"><expr pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:17">s</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:29">buggy_avid</name></name> <operator pos:start="45:31" pos:end="45:31">=</operator> <literal type="number" pos:start="45:33" pos:end="45:33">1</literal></expr>;</expr_stmt>

		<comment type="line" pos:start="47:17" pos:end="47:45">//	if (s-&gt;first_picture)</comment>

		<comment type="line" pos:start="49:17" pos:end="49:72">//	    printf("mjpeg: workarounding buggy AVID\n");</comment>

	    </block_content>}</block></if>

            <if type="elseif" pos:start="53:13" pos:end="57:13">else if<condition pos:start="53:20" pos:end="53:47">(<expr pos:start="53:21" pos:end="53:46"><operator pos:start="53:21" pos:end="53:21">!</operator><call pos:start="53:22" pos:end="53:46"><name pos:start="53:22" pos:end="53:27">strcmp</name><argument_list pos:start="53:28" pos:end="53:46">(<argument pos:start="53:29" pos:end="53:32"><expr pos:start="53:29" pos:end="53:32"><name pos:start="53:29" pos:end="53:32">cbuf</name></expr></argument>, <argument pos:start="53:35" pos:end="53:45"><expr pos:start="53:35" pos:end="53:45"><literal type="string" pos:start="53:35" pos:end="53:45">"CS=ITU601"</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="53:48" pos:end="57:13">{<block_content pos:start="55:17" pos:end="55:32">

                <expr_stmt pos:start="55:17" pos:end="55:32"><expr pos:start="55:17" pos:end="55:31"><name pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:28">cs_itu601</name></name><operator pos:start="55:29" pos:end="55:29">=</operator> <literal type="number" pos:start="55:31" pos:end="55:31">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



	    <expr_stmt pos:start="61:13" pos:end="61:26"><expr pos:start="61:13" pos:end="61:25"><call pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:19">av_free</name><argument_list pos:start="61:20" pos:end="61:25">(<argument pos:start="61:21" pos:end="61:24"><expr pos:start="61:21" pos:end="61:24"><name pos:start="61:21" pos:end="61:24">cbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="69:5" pos:end="69:13">return <expr pos:start="69:12" pos:end="69:12"><literal type="number" pos:start="69:12" pos:end="69:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
