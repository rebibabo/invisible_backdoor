<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6117.c" pos:tabs="8"><function pos:start="1:1" pos:end="30:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">encode_frame</name><parameter_list pos:start="1:24" pos:end="2:66">(<parameter pos:start="1:25" pos:end="1:45"><decl pos:start="1:25" pos:end="1:45"><type pos:start="1:25" pos:end="1:45"><name pos:start="1:25" pos:end="1:38">AVCodecContext</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:45">avctx</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:62"><decl pos:start="1:48" pos:end="1:62"><type pos:start="1:48" pos:end="1:62"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">avpkt</name></decl></parameter>,
                        <parameter pos:start="2:25" pos:end="2:44"><decl pos:start="2:25" pos:end="2:44"><type pos:start="2:25" pos:end="2:44"><specifier pos:start="2:25" pos:end="2:29">const</specifier> <name pos:start="2:31" pos:end="2:37">AVFrame</name> <modifier pos:start="2:39" pos:end="2:39">*</modifier></type><name pos:start="2:40" pos:end="2:44">frame</name></decl></parameter>, <parameter pos:start="2:47" pos:end="2:65"><decl pos:start="2:47" pos:end="2:65"><type pos:start="2:47" pos:end="2:65"><name pos:start="2:47" pos:end="2:49">int</name> <modifier pos:start="2:51" pos:end="2:51">*</modifier></type><name pos:start="2:52" pos:end="2:65">got_packet_ptr</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="30:1">{<block_content pos:start="4:5" pos:end="29:13">
    <decl_stmt pos:start="4:5" pos:end="4:40"><decl pos:start="4:5" pos:end="4:39"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">DCAEncContext</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:20">c</name> <init pos:start="4:22" pos:end="4:39">= <expr pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:39"><name pos:start="4:24" pos:end="4:28">avctx</name><operator pos:start="4:29" pos:end="4:30">-&gt;</operator><name pos:start="4:31" pos:end="4:39">priv_data</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">int32_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:26">samples</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:15"><decl pos:start="6:5" pos:end="6:11"><type pos:start="6:5" pos:end="6:7"><name pos:start="6:5" pos:end="6:7">int</name></type> <name pos:start="6:9" pos:end="6:11">ret</name></decl>, <decl pos:start="6:14" pos:end="6:14"><type ref="prev" pos:start="6:5" pos:end="6:7"/><name pos:start="6:14" pos:end="6:14">i</name></decl>;</decl_stmt>
    <if_stmt pos:start="7:5" pos:end="8:19"><if pos:start="7:5" pos:end="8:19">if <condition pos:start="7:8" pos:end="7:70">(<expr pos:start="7:9" pos:end="7:69"><operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:12">ret</name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:64"><name pos:start="7:16" pos:end="7:31">ff_alloc_packet2</name><argument_list pos:start="7:32" pos:end="7:64">(<argument pos:start="7:33" pos:end="7:37"><expr pos:start="7:33" pos:end="7:37"><name pos:start="7:33" pos:end="7:37">avctx</name></expr></argument>, <argument pos:start="7:40" pos:end="7:44"><expr pos:start="7:40" pos:end="7:44"><name pos:start="7:40" pos:end="7:44">avpkt</name></expr></argument>, <argument pos:start="7:47" pos:end="7:59"><expr pos:start="7:47" pos:end="7:59"><name pos:start="7:47" pos:end="7:59"><name pos:start="7:47" pos:end="7:47">c</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:59">frame_size</name></name></expr></argument> , <argument pos:start="7:63" pos:end="7:63"><expr pos:start="7:63" pos:end="7:63"><literal type="number" pos:start="7:63" pos:end="7:63">0</literal></expr></argument>)</argument_list></call><operator pos:start="7:65" pos:end="7:65">)</operator> <operator pos:start="7:67" pos:end="7:67">&lt;</operator> <literal type="number" pos:start="7:69" pos:end="7:69">0</literal></expr>)</condition><block type="pseudo" pos:start="8:9" pos:end="8:19"><block_content pos:start="8:9" pos:end="8:19">
        <return pos:start="8:9" pos:end="8:19">return <expr pos:start="8:16" pos:end="8:18"><name pos:start="8:16" pos:end="8:18">ret</name></expr>;</return></block_content></block></if></if_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:46"><expr pos:start="9:5" pos:end="9:45"><name pos:start="9:5" pos:end="9:11">samples</name> <operator pos:start="9:13" pos:end="9:13">=</operator> <operator pos:start="9:15" pos:end="9:15">(</operator><specifier pos:start="9:16" pos:end="9:20">const</specifier> <name pos:start="9:22" pos:end="9:28">int32_t</name> <operator pos:start="9:30" pos:end="9:30">*</operator><operator pos:start="9:31" pos:end="9:31">)</operator><name pos:start="9:32" pos:end="9:45"><name pos:start="9:32" pos:end="9:36">frame</name><operator pos:start="9:37" pos:end="9:38">-&gt;</operator><name pos:start="9:39" pos:end="9:42">data</name><index pos:start="9:43" pos:end="9:45">[<expr pos:start="9:44" pos:end="9:44"><literal type="number" pos:start="9:44" pos:end="9:44">0</literal></expr>]</index></name></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:34"><expr pos:start="10:5" pos:end="10:33"><call pos:start="10:5" pos:end="10:33"><name pos:start="10:5" pos:end="10:21">subband_transform</name><argument_list pos:start="10:22" pos:end="10:33">(<argument pos:start="10:23" pos:end="10:23"><expr pos:start="10:23" pos:end="10:23"><name pos:start="10:23" pos:end="10:23">c</name></expr></argument>, <argument pos:start="10:26" pos:end="10:32"><expr pos:start="10:26" pos:end="10:32"><name pos:start="10:26" pos:end="10:32">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="12:35"><if pos:start="11:5" pos:end="12:35">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:9">c</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:22">lfe_channel</name></name></expr>)</condition><block type="pseudo" pos:start="12:9" pos:end="12:35"><block_content pos:start="12:9" pos:end="12:35">
        <expr_stmt pos:start="12:9" pos:end="12:35"><expr pos:start="12:9" pos:end="12:34"><call pos:start="12:9" pos:end="12:34"><name pos:start="12:9" pos:end="12:22">lfe_downsample</name><argument_list pos:start="12:23" pos:end="12:34">(<argument pos:start="12:24" pos:end="12:24"><expr pos:start="12:24" pos:end="12:24"><name pos:start="12:24" pos:end="12:24">c</name></expr></argument>, <argument pos:start="12:27" pos:end="12:33"><expr pos:start="12:27" pos:end="12:33"><name pos:start="12:27" pos:end="12:33">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><call pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:16">calc_masking</name><argument_list pos:start="13:17" pos:end="13:28">(<argument pos:start="13:18" pos:end="13:18"><expr pos:start="13:18" pos:end="13:18"><name pos:start="13:18" pos:end="13:18">c</name></expr></argument>, <argument pos:start="13:21" pos:end="13:27"><expr pos:start="13:21" pos:end="13:27"><name pos:start="13:21" pos:end="13:27">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="14:5" pos:end="14:18"><expr pos:start="14:5" pos:end="14:17"><call pos:start="14:5" pos:end="14:17"><name pos:start="14:5" pos:end="14:14">find_peaks</name><argument_list pos:start="14:15" pos:end="14:17">(<argument pos:start="14:16" pos:end="14:16"><expr pos:start="14:16" pos:end="14:16"><name pos:start="14:16" pos:end="14:16">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><call pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:15">assign_bits</name><argument_list pos:start="15:16" pos:end="15:18">(<argument pos:start="15:17" pos:end="15:17"><expr pos:start="15:17" pos:end="15:17"><name pos:start="15:17" pos:end="15:17">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:19"><expr pos:start="16:5" pos:end="16:18"><call pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:15">calc_scales</name><argument_list pos:start="16:16" pos:end="16:18">(<argument pos:start="16:17" pos:end="16:17"><expr pos:start="16:17" pos:end="16:17"><name pos:start="16:17" pos:end="16:17">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><call pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:16">quantize_all</name><argument_list pos:start="17:17" pos:end="17:19">(<argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:30"><expr pos:start="18:5" pos:end="18:29"><call pos:start="18:5" pos:end="18:29"><name pos:start="18:5" pos:end="18:17">shift_history</name><argument_list pos:start="18:18" pos:end="18:29">(<argument pos:start="18:19" pos:end="18:19"><expr pos:start="18:19" pos:end="18:19"><name pos:start="18:19" pos:end="18:19">c</name></expr></argument>, <argument pos:start="18:22" pos:end="18:28"><expr pos:start="18:22" pos:end="18:28"><name pos:start="18:22" pos:end="18:28">samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="19:5" pos:end="19:52"><expr pos:start="19:5" pos:end="19:51"><call pos:start="19:5" pos:end="19:51"><name pos:start="19:5" pos:end="19:17">init_put_bits</name><argument_list pos:start="19:18" pos:end="19:51">(<argument pos:start="19:19" pos:end="19:24"><expr pos:start="19:19" pos:end="19:24"><operator pos:start="19:19" pos:end="19:19">&amp;</operator><name pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">c</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:24">pb</name></name></expr></argument>, <argument pos:start="19:27" pos:end="19:37"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:31">avpkt</name><operator pos:start="19:32" pos:end="19:33">-&gt;</operator><name pos:start="19:34" pos:end="19:37">data</name></name></expr></argument>, <argument pos:start="19:40" pos:end="19:50"><expr pos:start="19:40" pos:end="19:50"><name pos:start="19:40" pos:end="19:50"><name pos:start="19:40" pos:end="19:44">avpkt</name><operator pos:start="19:45" pos:end="19:46">-&gt;</operator><name pos:start="19:47" pos:end="19:50">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="20:5" pos:end="20:24"><expr pos:start="20:5" pos:end="20:23"><call pos:start="20:5" pos:end="20:23"><name pos:start="20:5" pos:end="20:20">put_frame_header</name><argument_list pos:start="20:21" pos:end="20:23">(<argument pos:start="20:22" pos:end="20:22"><expr pos:start="20:22" pos:end="20:22"><name pos:start="20:22" pos:end="20:22">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="21:5" pos:end="21:32"><expr pos:start="21:5" pos:end="21:31"><call pos:start="21:5" pos:end="21:31"><name pos:start="21:5" pos:end="21:28">put_primary_audio_header</name><argument_list pos:start="21:29" pos:end="21:31">(<argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><name pos:start="21:30" pos:end="21:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <for pos:start="22:5" pos:end="23:27">for <control pos:start="22:9" pos:end="22:35">(<init pos:start="22:10" pos:end="22:15"><expr pos:start="22:10" pos:end="22:14"><name pos:start="22:10" pos:end="22:10">i</name> <operator pos:start="22:12" pos:end="22:12">=</operator> <literal type="number" pos:start="22:14" pos:end="22:14">0</literal></expr>;</init> <condition pos:start="22:17" pos:end="22:30"><expr pos:start="22:17" pos:end="22:29"><name pos:start="22:17" pos:end="22:17">i</name> <operator pos:start="22:19" pos:end="22:19">&lt;</operator> <name pos:start="22:21" pos:end="22:29">SUBFRAMES</name></expr>;</condition> <incr pos:start="22:32" pos:end="22:34"><expr pos:start="22:32" pos:end="22:34"><name pos:start="22:32" pos:end="22:32">i</name><operator pos:start="22:33" pos:end="22:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="23:9" pos:end="23:27"><block_content pos:start="23:9" pos:end="23:27">
        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><call pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:20">put_subframe</name><argument_list pos:start="23:21" pos:end="23:26">(<argument pos:start="23:22" pos:end="23:22"><expr pos:start="23:22" pos:end="23:22"><name pos:start="23:22" pos:end="23:22">c</name></expr></argument>, <argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>
    <expr_stmt pos:start="24:5" pos:end="24:27"><expr pos:start="24:5" pos:end="24:26"><call pos:start="24:5" pos:end="24:26"><name pos:start="24:5" pos:end="24:18">flush_put_bits</name><argument_list pos:start="24:19" pos:end="24:26">(<argument pos:start="24:20" pos:end="24:25"><expr pos:start="24:20" pos:end="24:25"><operator pos:start="24:20" pos:end="24:20">&amp;</operator><name pos:start="24:21" pos:end="24:25"><name pos:start="24:21" pos:end="24:21">c</name><operator pos:start="24:22" pos:end="24:23">-&gt;</operator><name pos:start="24:24" pos:end="24:25">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:9">avpkt</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:14">pts</name></name>      <operator pos:start="25:21" pos:end="25:21">=</operator> <name pos:start="25:23" pos:end="25:32"><name pos:start="25:23" pos:end="25:27">frame</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:32">pts</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:72"><expr pos:start="26:5" pos:end="26:71"><name pos:start="26:5" pos:end="26:19"><name pos:start="26:5" pos:end="26:9">avpkt</name><operator pos:start="26:10" pos:end="26:11">-&gt;</operator><name pos:start="26:12" pos:end="26:19">duration</name></name> <operator pos:start="26:21" pos:end="26:21">=</operator> <call pos:start="26:23" pos:end="26:71"><name pos:start="26:23" pos:end="26:45">ff_samples_to_time_base</name><argument_list pos:start="26:46" pos:end="26:71">(<argument pos:start="26:47" pos:end="26:51"><expr pos:start="26:47" pos:end="26:51"><name pos:start="26:47" pos:end="26:51">avctx</name></expr></argument>, <argument pos:start="26:54" pos:end="26:70"><expr pos:start="26:54" pos:end="26:70"><name pos:start="26:54" pos:end="26:70"><name pos:start="26:54" pos:end="26:58">frame</name><operator pos:start="26:59" pos:end="26:60">-&gt;</operator><name pos:start="26:61" pos:end="26:70">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:9">avpkt</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">size</name></name>     <operator pos:start="27:21" pos:end="27:21">=</operator> <name pos:start="27:23" pos:end="27:35"><name pos:start="27:23" pos:end="27:23">c</name><operator pos:start="27:24" pos:end="27:25">-&gt;</operator><name pos:start="27:26" pos:end="27:35">frame_size</name></name> <operator pos:start="27:37" pos:end="27:37">+</operator> <literal type="number" pos:start="27:39" pos:end="27:39">1</literal></expr>;</expr_stmt>
    <expr_stmt pos:start="28:5" pos:end="28:24"><expr pos:start="28:5" pos:end="28:23"><operator pos:start="28:5" pos:end="28:5">*</operator><name pos:start="28:6" pos:end="28:19">got_packet_ptr</name> <operator pos:start="28:21" pos:end="28:21">=</operator> <literal type="number" pos:start="28:23" pos:end="28:23">1</literal></expr>;</expr_stmt>
    <return pos:start="29:5" pos:end="29:13">return <expr pos:start="29:12" pos:end="29:12"><literal type="number" pos:start="29:12" pos:end="29:12">0</literal></expr>;</return>
</block_content>}</block></function></unit>
