<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21375.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">intel_hda_realize</name><parameter_list pos:start="1:30" pos:end="1:59">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:39">PCIDevice</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:44">pci</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:58"><decl pos:start="1:47" pos:end="1:58"><type pos:start="1:47" pos:end="1:58"><name pos:start="1:47" pos:end="1:51">Error</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier><modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:59">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">IntelHDAState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">d</name> <init pos:start="5:22" pos:end="5:37">= <expr pos:start="5:24" pos:end="5:37"><call pos:start="5:24" pos:end="5:37"><name pos:start="5:24" pos:end="5:32">INTEL_HDA</name><argument_list pos:start="5:33" pos:end="5:37">(<argument pos:start="5:34" pos:end="5:36"><expr pos:start="5:34" pos:end="5:36"><name pos:start="5:34" pos:end="5:36">pci</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">conf</name> <init pos:start="7:19" pos:end="7:33">= <expr pos:start="7:21" pos:end="7:33"><name pos:start="7:21" pos:end="7:33"><name pos:start="7:21" pos:end="7:21">d</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:26">pci</name><operator pos:start="7:27" pos:end="7:27">.</operator><name pos:start="7:28" pos:end="7:33">config</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:45"><expr pos:start="11:5" pos:end="11:44"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:5">d</name><operator pos:start="11:6" pos:end="11:7">-&gt;</operator><name pos:start="11:8" pos:end="11:11">name</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:44"><name pos:start="11:15" pos:end="11:33">object_get_typename</name><argument_list pos:start="11:34" pos:end="11:44">(<argument pos:start="11:35" pos:end="11:43"><expr pos:start="11:35" pos:end="11:43"><call pos:start="11:35" pos:end="11:43"><name pos:start="11:35" pos:end="11:40">OBJECT</name><argument_list pos:start="11:41" pos:end="11:43">(<argument pos:start="11:42" pos:end="11:42"><expr pos:start="11:42" pos:end="11:42"><name pos:start="11:42" pos:end="11:42">d</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><call pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:32">pci_config_set_interrupt_pin</name><argument_list pos:start="15:33" pos:end="15:41">(<argument pos:start="15:34" pos:end="15:37"><expr pos:start="15:34" pos:end="15:37"><name pos:start="15:34" pos:end="15:37">conf</name></expr></argument>, <argument pos:start="15:40" pos:end="15:40"><expr pos:start="15:40" pos:end="15:40"><literal type="number" pos:start="15:40" pos:end="15:40">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:79">/* HDCTL off 0x40 bit 0 selects signaling mode (1-HDA, 0 - Ac97) 18.1.19 */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:8">conf</name><index pos:start="21:9" pos:end="21:14">[<expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x40</literal></expr>]</index></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <literal type="number" pos:start="21:18" pos:end="21:21">0x01</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="27:47"><expr pos:start="25:5" pos:end="27:46"><call pos:start="25:5" pos:end="27:46"><name pos:start="25:5" pos:end="25:25">memory_region_init_io</name><argument_list pos:start="25:26" pos:end="27:46">(<argument pos:start="25:27" pos:end="25:34"><expr pos:start="25:27" pos:end="25:34"><operator pos:start="25:27" pos:end="25:27">&amp;</operator><name pos:start="25:28" pos:end="25:34"><name pos:start="25:28" pos:end="25:28">d</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:34">mmio</name></name></expr></argument>, <argument pos:start="25:37" pos:end="25:45"><expr pos:start="25:37" pos:end="25:45"><call pos:start="25:37" pos:end="25:45"><name pos:start="25:37" pos:end="25:42">OBJECT</name><argument_list pos:start="25:43" pos:end="25:45">(<argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:48" pos:end="25:66"><expr pos:start="25:48" pos:end="25:66"><operator pos:start="25:48" pos:end="25:48">&amp;</operator><name pos:start="25:49" pos:end="25:66">intel_hda_mmio_ops</name></expr></argument>, <argument pos:start="25:69" pos:end="25:69"><expr pos:start="25:69" pos:end="25:69"><name pos:start="25:69" pos:end="25:69">d</name></expr></argument>,

                          <argument pos:start="27:27" pos:end="27:37"><expr pos:start="27:27" pos:end="27:37"><literal type="string" pos:start="27:27" pos:end="27:37">"intel-hda"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:45"><expr pos:start="27:40" pos:end="27:45"><literal type="number" pos:start="27:40" pos:end="27:45">0x4000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:46"><expr pos:start="29:5" pos:end="29:45"><call pos:start="29:5" pos:end="29:45"><name pos:start="29:5" pos:end="29:20">pci_register_bar</name><argument_list pos:start="29:21" pos:end="29:45">(<argument pos:start="29:22" pos:end="29:28"><expr pos:start="29:22" pos:end="29:28"><operator pos:start="29:22" pos:end="29:22">&amp;</operator><name pos:start="29:23" pos:end="29:28"><name pos:start="29:23" pos:end="29:23">d</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:28">pci</name></name></expr></argument>, <argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><literal type="number" pos:start="29:31" pos:end="29:31">0</literal></expr></argument>, <argument pos:start="29:34" pos:end="29:34"><expr pos:start="29:34" pos:end="29:34"><literal type="number" pos:start="29:34" pos:end="29:34">0</literal></expr></argument>, <argument pos:start="29:37" pos:end="29:44"><expr pos:start="29:37" pos:end="29:44"><operator pos:start="29:37" pos:end="29:37">&amp;</operator><name pos:start="29:38" pos:end="29:44"><name pos:start="29:38" pos:end="29:38">d</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:44">mmio</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:34">(<expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:9">d</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:14">msi</name></name> <operator pos:start="31:16" pos:end="31:17">!=</operator> <name pos:start="31:19" pos:end="31:33">ON_OFF_AUTO_OFF</name></expr>)</condition> <block pos:start="31:36" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:73">

         <comment type="block" pos:start="33:10" pos:end="33:36">/* TODO check for errors */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:73"><expr pos:start="35:9" pos:end="35:72"><call pos:start="35:9" pos:end="35:72"><name pos:start="35:9" pos:end="35:16">msi_init</name><argument_list pos:start="35:17" pos:end="35:72">(<argument pos:start="35:18" pos:end="35:24"><expr pos:start="35:18" pos:end="35:24"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:24"><name pos:start="35:19" pos:end="35:19">d</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:24">pci</name></name></expr></argument>, <argument pos:start="35:27" pos:end="35:55"><expr pos:start="35:27" pos:end="35:55"><ternary pos:start="35:27" pos:end="35:55"><condition pos:start="35:27" pos:end="35:43"><expr pos:start="35:27" pos:end="35:41"><name pos:start="35:27" pos:end="35:41"><name pos:start="35:27" pos:end="35:27">d</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:41">old_msi_addr</name></name></expr> ?</condition><then pos:start="35:45" pos:end="35:48"> <expr pos:start="35:45" pos:end="35:48"><literal type="number" pos:start="35:45" pos:end="35:48">0x50</literal></expr> </then><else pos:start="35:50" pos:end="35:55">: <expr pos:start="35:52" pos:end="35:55"><literal type="number" pos:start="35:52" pos:end="35:55">0x60</literal></expr></else></ternary></expr></argument>, <argument pos:start="35:58" pos:end="35:58"><expr pos:start="35:58" pos:end="35:58"><literal type="number" pos:start="35:58" pos:end="35:58">1</literal></expr></argument>, <argument pos:start="35:61" pos:end="35:64"><expr pos:start="35:61" pos:end="35:64"><name pos:start="35:61" pos:end="35:64">true</name></expr></argument>, <argument pos:start="35:67" pos:end="35:71"><expr pos:start="35:67" pos:end="35:71"><name pos:start="35:67" pos:end="35:71">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:59"><expr pos:start="41:5" pos:end="43:58"><call pos:start="41:5" pos:end="43:58"><name pos:start="41:5" pos:end="41:22">hda_codec_bus_init</name><argument_list pos:start="41:23" pos:end="43:58">(<argument pos:start="41:24" pos:end="41:34"><expr pos:start="41:24" pos:end="41:34"><call pos:start="41:24" pos:end="41:34"><name pos:start="41:24" pos:end="41:29">DEVICE</name><argument_list pos:start="41:30" pos:end="41:34">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">pci</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:37" pos:end="41:46"><expr pos:start="41:37" pos:end="41:46"><operator pos:start="41:37" pos:end="41:37">&amp;</operator><name pos:start="41:38" pos:end="41:46"><name pos:start="41:38" pos:end="41:38">d</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:46">codecs</name></name></expr></argument>, <argument pos:start="41:49" pos:end="41:65"><expr pos:start="41:49" pos:end="41:65"><sizeof pos:start="41:49" pos:end="41:65">sizeof<argument_list pos:start="41:55" pos:end="41:65">(<argument pos:start="41:56" pos:end="41:64"><expr pos:start="41:56" pos:end="41:64"><name pos:start="41:56" pos:end="41:64"><name pos:start="41:56" pos:end="41:56">d</name><operator pos:start="41:57" pos:end="41:58">-&gt;</operator><name pos:start="41:59" pos:end="41:64">codecs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                       <argument pos:start="43:24" pos:end="43:41"><expr pos:start="43:24" pos:end="43:41"><name pos:start="43:24" pos:end="43:41">intel_hda_response</name></expr></argument>, <argument pos:start="43:44" pos:end="43:57"><expr pos:start="43:44" pos:end="43:57"><name pos:start="43:44" pos:end="43:57">intel_hda_xfer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
