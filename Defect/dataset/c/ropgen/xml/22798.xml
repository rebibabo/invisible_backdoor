<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22798.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">gen_check_bw</name><parameter_list pos:start="1:24" pos:end="1:55">(<parameter pos:start="1:25" pos:end="1:37"><decl pos:start="1:25" pos:end="1:37"><type pos:start="1:25" pos:end="1:37"><name pos:start="1:25" pos:end="1:34">URLContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:54"><decl pos:start="1:40" pos:end="1:54"><type pos:start="1:40" pos:end="1:54"><name pos:start="1:40" pos:end="1:50">RTMPContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:54">rt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:15">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:14">RTMPPacket</name></type> <name pos:start="5:16" pos:end="5:18">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:19"><if pos:start="13:5" pos:end="17:19">if <condition pos:start="13:8" pos:end="15:49">(<expr pos:start="13:9" pos:end="15:48"><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:12">ret</name> <operator pos:start="13:14" pos:end="13:14">=</operator> <call pos:start="13:16" pos:end="15:43"><name pos:start="13:16" pos:end="13:36">ff_rtmp_packet_create</name><argument_list pos:start="13:37" pos:end="15:43">(<argument pos:start="13:38" pos:end="13:41"><expr pos:start="13:38" pos:end="13:41"><operator pos:start="13:38" pos:end="13:38">&amp;</operator><name pos:start="13:39" pos:end="13:41">pkt</name></expr></argument>, <argument pos:start="13:44" pos:end="13:62"><expr pos:start="13:44" pos:end="13:62"><name pos:start="13:44" pos:end="13:62">RTMP_SYSTEM_CHANNEL</name></expr></argument>, <argument pos:start="13:65" pos:end="13:78"><expr pos:start="13:65" pos:end="13:78"><name pos:start="13:65" pos:end="13:78">RTMP_PT_INVOKE</name></expr></argument>,

                                     <argument pos:start="15:38" pos:end="15:38"><expr pos:start="15:38" pos:end="15:38"><literal type="number" pos:start="15:38" pos:end="15:38">0</literal></expr></argument>, <argument pos:start="15:41" pos:end="15:42"><expr pos:start="15:41" pos:end="15:42"><literal type="number" pos:start="15:41" pos:end="15:42">21</literal></expr></argument>)</argument_list></call><operator pos:start="15:44" pos:end="15:44">)</operator> <operator pos:start="15:46" pos:end="15:46">&lt;</operator> <literal type="number" pos:start="15:48" pos:end="15:48">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:19"><block_content pos:start="17:9" pos:end="17:19">

        <return pos:start="17:9" pos:end="17:19">return <expr pos:start="17:16" pos:end="17:18"><name pos:start="17:16" pos:end="17:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:17"><expr pos:start="21:5" pos:end="21:16"><name pos:start="21:5" pos:end="21:5">p</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:11">pkt</name><operator pos:start="21:12" pos:end="21:12">.</operator><name pos:start="21:13" pos:end="21:16">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><call pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:23">ff_amf_write_string</name><argument_list pos:start="23:24" pos:end="23:39">(<argument pos:start="23:25" pos:end="23:26"><expr pos:start="23:25" pos:end="23:26"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:26">p</name></expr></argument>, <argument pos:start="23:29" pos:end="23:38"><expr pos:start="23:29" pos:end="23:38"><literal type="string" pos:start="23:29" pos:end="23:38">"_checkbw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:23">ff_amf_write_number</name><argument_list pos:start="25:24" pos:end="25:45">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><operator pos:start="25:25" pos:end="25:25">&amp;</operator><name pos:start="25:26" pos:end="25:26">p</name></expr></argument>, <argument pos:start="25:29" pos:end="25:44"><expr pos:start="25:29" pos:end="25:44"><operator pos:start="25:29" pos:end="25:30">++</operator><name pos:start="25:31" pos:end="25:44"><name pos:start="25:31" pos:end="25:32">rt</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:44">nb_invokes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:26"><expr pos:start="27:5" pos:end="27:25"><call pos:start="27:5" pos:end="27:25"><name pos:start="27:5" pos:end="27:21">ff_amf_write_null</name><argument_list pos:start="27:22" pos:end="27:25">(<argument pos:start="27:23" pos:end="27:24"><expr pos:start="27:23" pos:end="27:24"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:24">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:48"><expr pos:start="31:5" pos:end="33:47"><name pos:start="31:5" pos:end="31:7">ret</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <call pos:start="31:11" pos:end="33:47"><name pos:start="31:11" pos:end="31:30">ff_rtmp_packet_write</name><argument_list pos:start="31:31" pos:end="33:47">(<argument pos:start="31:32" pos:end="31:41"><expr pos:start="31:32" pos:end="31:41"><name pos:start="31:32" pos:end="31:41"><name pos:start="31:32" pos:end="31:33">rt</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:41">stream</name></name></expr></argument>, <argument pos:start="31:44" pos:end="31:47"><expr pos:start="31:44" pos:end="31:47"><operator pos:start="31:44" pos:end="31:44">&amp;</operator><name pos:start="31:45" pos:end="31:47">pkt</name></expr></argument>, <argument pos:start="31:50" pos:end="31:63"><expr pos:start="31:50" pos:end="31:63"><name pos:start="31:50" pos:end="31:63"><name pos:start="31:50" pos:end="31:51">rt</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:63">chunk_size</name></name></expr></argument>,

                               <argument pos:start="33:32" pos:end="33:46"><expr pos:start="33:32" pos:end="33:46"><name pos:start="33:32" pos:end="33:46"><name pos:start="33:32" pos:end="33:33">rt</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:43">prev_pkt</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:33"><expr pos:start="35:5" pos:end="35:32"><call pos:start="35:5" pos:end="35:32"><name pos:start="35:5" pos:end="35:26">ff_rtmp_packet_destroy</name><argument_list pos:start="35:27" pos:end="35:32">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><operator pos:start="35:28" pos:end="35:28">&amp;</operator><name pos:start="35:29" pos:end="35:31">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="39:5" pos:end="39:15">return <expr pos:start="39:12" pos:end="39:14"><name pos:start="39:12" pos:end="39:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
