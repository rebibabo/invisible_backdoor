<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6456.c" pos:tabs="8"><function pos:start="1:1" pos:end="159:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:25">void</name></type> <name pos:start="1:27" pos:end="1:47">fload_invalid_op_excp</name> <parameter_list pos:start="1:49" pos:end="1:56">(<parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:52"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">op</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="159:1">{<block_content pos:start="5:5" pos:end="157:5">

    <decl_stmt pos:start="5:5" pos:end="5:11"><decl pos:start="5:5" pos:end="5:10"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:10">ve</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:6">ve</name> <operator pos:start="9:8" pos:end="9:8">=</operator> <name pos:start="9:10" pos:end="9:17">fpscr_ve</name></expr>;</expr_stmt>

    <if_stmt pos:start="11:5" pos:end="17:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:36">(<expr pos:start="11:9" pos:end="11:35"><name pos:start="11:9" pos:end="11:10">op</name> <operator pos:start="11:12" pos:end="11:12">&amp;</operator> <name pos:start="11:14" pos:end="11:35">POWERPC_EXCP_FP_VXSNAN</name></expr>)</condition> <block pos:start="11:38" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:40">

        <comment type="block" pos:start="13:9" pos:end="13:40">/* Operation on signaling NaN */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:40"><expr pos:start="15:9" pos:end="15:39"><name pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:11">env</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:18">fpscr</name></name> <operator pos:start="15:20" pos:end="15:21">|=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">1</literal> <operator pos:start="15:25" pos:end="15:26">&lt;&lt;</operator> <name pos:start="15:28" pos:end="15:39">FPSCR_VXSNAN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:36">(<expr pos:start="19:9" pos:end="19:35"><name pos:start="19:9" pos:end="19:10">op</name> <operator pos:start="19:12" pos:end="19:12">&amp;</operator> <name pos:start="19:14" pos:end="19:35">POWERPC_EXCP_FP_VXSOFT</name></expr>)</condition> <block pos:start="19:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:40">

        <comment type="block" pos:start="21:9" pos:end="21:40">/* Software-defined condition */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">env</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:18">fpscr</name></name> <operator pos:start="23:20" pos:end="23:21">|=</operator> <literal type="number" pos:start="23:23" pos:end="23:23">1</literal> <operator pos:start="23:25" pos:end="23:26">&lt;&lt;</operator> <name pos:start="23:28" pos:end="23:39">FPSCR_VXSOFT</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <switch pos:start="27:5" pos:end="137:5">switch <condition pos:start="27:12" pos:end="27:68">(<expr pos:start="27:13" pos:end="27:67"><name pos:start="27:13" pos:end="27:14">op</name> <operator pos:start="27:16" pos:end="27:16">&amp;</operator> <operator pos:start="27:18" pos:end="27:18">~</operator><operator pos:start="27:19" pos:end="27:19">(</operator><name pos:start="27:20" pos:end="27:41">POWERPC_EXCP_FP_VXSOFT</name> <operator pos:start="27:43" pos:end="27:43">|</operator> <name pos:start="27:45" pos:end="27:66">POWERPC_EXCP_FP_VXSNAN</name><operator pos:start="27:67" pos:end="27:67">)</operator></expr>)</condition> <block pos:start="27:70" pos:end="137:5">{<block_content pos:start="29:5" pos:end="135:14">

    <case pos:start="29:5" pos:end="29:31">case <expr pos:start="29:10" pos:end="29:30"><name pos:start="29:10" pos:end="29:30">POWERPC_EXCP_FP_VXISI</name></expr>:</case>

        <comment type="block" pos:start="31:9" pos:end="31:49">/* Magnitude subtraction of infinities */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:39"><expr pos:start="33:9" pos:end="33:38"><name pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:11">env</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">fpscr</name></name> <operator pos:start="33:20" pos:end="33:21">|=</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal> <operator pos:start="33:25" pos:end="33:26">&lt;&lt;</operator> <name pos:start="33:28" pos:end="33:38">FPSCR_VXISI</name></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:26">goto <name pos:start="35:14" pos:end="35:25">update_arith</name>;</goto>

    <case pos:start="37:5" pos:end="37:31">case <expr pos:start="37:10" pos:end="37:30"><name pos:start="37:10" pos:end="37:30">POWERPC_EXCP_FP_VXIDI</name></expr>:</case>

        <comment type="block" pos:start="39:9" pos:end="39:46">/* Division of infinity by infinity */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:39"><expr pos:start="41:9" pos:end="41:38"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">env</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">fpscr</name></name> <operator pos:start="41:20" pos:end="41:21">|=</operator> <literal type="number" pos:start="41:23" pos:end="41:23">1</literal> <operator pos:start="41:25" pos:end="41:26">&lt;&lt;</operator> <name pos:start="41:28" pos:end="41:38">FPSCR_VXIDI</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:26">goto <name pos:start="43:14" pos:end="43:25">update_arith</name>;</goto>

    <case pos:start="45:5" pos:end="45:31">case <expr pos:start="45:10" pos:end="45:30"><name pos:start="45:10" pos:end="45:30">POWERPC_EXCP_FP_VXZDZ</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:38">/* Division of zero by zero */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:39"><expr pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:18"><name pos:start="49:9" pos:end="49:11">env</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:18">fpscr</name></name> <operator pos:start="49:20" pos:end="49:21">|=</operator> <literal type="number" pos:start="49:23" pos:end="49:23">1</literal> <operator pos:start="49:25" pos:end="49:26">&lt;&lt;</operator> <name pos:start="49:28" pos:end="49:38">FPSCR_VXZDZ</name></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:26">goto <name pos:start="51:14" pos:end="51:25">update_arith</name>;</goto>

    <case pos:start="53:5" pos:end="53:31">case <expr pos:start="53:10" pos:end="53:30"><name pos:start="53:10" pos:end="53:30">POWERPC_EXCP_FP_VXIMZ</name></expr>:</case>

        <comment type="block" pos:start="55:9" pos:end="55:48">/* Multiplication of zero by infinity */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:39"><expr pos:start="57:9" pos:end="57:38"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:11">env</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:18">fpscr</name></name> <operator pos:start="57:20" pos:end="57:21">|=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">1</literal> <operator pos:start="57:25" pos:end="57:26">&lt;&lt;</operator> <name pos:start="57:28" pos:end="57:38">FPSCR_VXIMZ</name></expr>;</expr_stmt>

        <goto pos:start="59:9" pos:end="59:26">goto <name pos:start="59:14" pos:end="59:25">update_arith</name>;</goto>

    <case pos:start="61:5" pos:end="61:30">case <expr pos:start="61:10" pos:end="61:29"><name pos:start="61:10" pos:end="61:29">POWERPC_EXCP_FP_VXVC</name></expr>:</case>

        <comment type="block" pos:start="63:9" pos:end="63:39">/* Ordered comparison of NaN */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:38"><expr pos:start="65:9" pos:end="65:37"><name pos:start="65:9" pos:end="65:18"><name pos:start="65:9" pos:end="65:11">env</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:18">fpscr</name></name> <operator pos:start="65:20" pos:end="65:21">|=</operator> <literal type="number" pos:start="65:23" pos:end="65:23">1</literal> <operator pos:start="65:25" pos:end="65:26">&lt;&lt;</operator> <name pos:start="65:28" pos:end="65:37">FPSCR_VXVC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:43"><expr pos:start="67:9" pos:end="67:42"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">env</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">fpscr</name></name> <operator pos:start="67:20" pos:end="67:21">&amp;=</operator> <operator pos:start="67:23" pos:end="67:23">~</operator><operator pos:start="67:24" pos:end="67:24">(</operator><literal type="number" pos:start="67:25" pos:end="67:27">0xF</literal> <operator pos:start="67:29" pos:end="67:30">&lt;&lt;</operator> <name pos:start="67:32" pos:end="67:41">FPSCR_FPCC</name><operator pos:start="67:42" pos:end="67:42">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:18"><name pos:start="69:9" pos:end="69:11">env</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:18">fpscr</name></name> <operator pos:start="69:20" pos:end="69:21">|=</operator> <literal type="number" pos:start="69:23" pos:end="69:26">0x11</literal> <operator pos:start="69:28" pos:end="69:29">&lt;&lt;</operator> <name pos:start="69:31" pos:end="69:40">FPSCR_FPCC</name></expr>;</expr_stmt>

        <comment type="block" pos:start="71:9" pos:end="71:72">/* We must update the target FPR before raising the exception */</comment>

        <if_stmt pos:start="73:9" pos:end="87:9"><if pos:start="73:9" pos:end="87:9">if <condition pos:start="73:12" pos:end="73:20">(<expr pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:14">ve</name> <operator pos:start="73:16" pos:end="73:17">!=</operator> <literal type="number" pos:start="73:19" pos:end="73:19">0</literal></expr>)</condition> <block pos:start="73:22" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:19">

            <expr_stmt pos:start="75:13" pos:end="75:56"><expr pos:start="75:13" pos:end="75:55"><name pos:start="75:13" pos:end="75:32"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:32">exception_index</name></name> <operator pos:start="75:34" pos:end="75:34">=</operator> <name pos:start="75:36" pos:end="75:55">POWERPC_EXCP_PROGRAM</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:27"><name pos:start="77:13" pos:end="77:15">env</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:27">error_code</name></name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:45">POWERPC_EXCP_FP</name> <operator pos:start="77:47" pos:end="77:47">|</operator> <name pos:start="77:49" pos:end="77:68">POWERPC_EXCP_FP_VXVC</name></expr>;</expr_stmt>

            <comment type="block" pos:start="79:13" pos:end="79:69">/* Update the floating-point enabled exception summary */</comment>

            <expr_stmt pos:start="81:13" pos:end="81:41"><expr pos:start="81:13" pos:end="81:40"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:15">env</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:22">fpscr</name></name> <operator pos:start="81:24" pos:end="81:25">|=</operator> <literal type="number" pos:start="81:27" pos:end="81:27">1</literal> <operator pos:start="81:29" pos:end="81:30">&lt;&lt;</operator> <name pos:start="81:32" pos:end="81:40">FPSCR_FEX</name></expr>;</expr_stmt>

            <comment type="block" pos:start="83:13" pos:end="83:39">/* Exception is differed */</comment>

            <expr_stmt pos:start="85:13" pos:end="85:19"><expr pos:start="85:13" pos:end="85:18"><name pos:start="85:13" pos:end="85:14">ve</name> <operator pos:start="85:16" pos:end="85:16">=</operator> <literal type="number" pos:start="85:18" pos:end="85:18">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:32">case <expr pos:start="91:10" pos:end="91:31"><name pos:start="91:10" pos:end="91:31">POWERPC_EXCP_FP_VXSQRT</name></expr>:</case>

        <comment type="block" pos:start="93:9" pos:end="93:46">/* Square root of a negative number */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:11">env</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:18">fpscr</name></name> <operator pos:start="95:20" pos:end="95:21">|=</operator> <literal type="number" pos:start="95:23" pos:end="95:23">1</literal> <operator pos:start="95:25" pos:end="95:26">&lt;&lt;</operator> <name pos:start="95:28" pos:end="95:39">FPSCR_VXSQRT</name></expr>;</expr_stmt>

    <label pos:start="97:5" pos:end="97:17"><name pos:start="97:5" pos:end="97:16">update_arith</name>:</label>

        <expr_stmt pos:start="99:9" pos:end="99:59"><expr pos:start="99:9" pos:end="99:58"><name pos:start="99:9" pos:end="99:18"><name pos:start="99:9" pos:end="99:11">env</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:18">fpscr</name></name> <operator pos:start="99:20" pos:end="99:21">&amp;=</operator> <operator pos:start="99:23" pos:end="99:23">~</operator><operator pos:start="99:24" pos:end="99:24">(</operator><operator pos:start="99:25" pos:end="99:25">(</operator><literal type="number" pos:start="99:26" pos:end="99:26">1</literal> <operator pos:start="99:28" pos:end="99:29">&lt;&lt;</operator> <name pos:start="99:31" pos:end="99:38">FPSCR_FR</name><operator pos:start="99:39" pos:end="99:39">)</operator> <operator pos:start="99:41" pos:end="99:41">|</operator> <operator pos:start="99:43" pos:end="99:43">(</operator><literal type="number" pos:start="99:44" pos:end="99:44">1</literal> <operator pos:start="99:46" pos:end="99:47">&lt;&lt;</operator> <name pos:start="99:49" pos:end="99:56">FPSCR_FI</name><operator pos:start="99:57" pos:end="99:57">)</operator><operator pos:start="99:58" pos:end="99:58">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:20">(<expr pos:start="101:13" pos:end="101:19"><name pos:start="101:13" pos:end="101:14">ve</name> <operator pos:start="101:16" pos:end="101:17">==</operator> <literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>)</condition> <block pos:start="101:22" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:45">

            <comment type="block" pos:start="103:13" pos:end="103:45">/* Set the result to quiet NaN */</comment>

            <expr_stmt pos:start="105:13" pos:end="105:31"><expr pos:start="105:13" pos:end="105:30"><name pos:start="105:13" pos:end="105:15">FT0</name> <operator pos:start="105:17" pos:end="105:17">=</operator> <operator pos:start="105:19" pos:end="105:19">(</operator><name pos:start="105:20" pos:end="105:27">uint64_t</name><operator pos:start="105:28" pos:end="105:28">)</operator><operator pos:start="105:29" pos:end="105:29">-</operator><literal type="number" pos:start="105:30" pos:end="105:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:15">env</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">fpscr</name></name> <operator pos:start="107:24" pos:end="107:25">&amp;=</operator> <operator pos:start="107:27" pos:end="107:27">~</operator><operator pos:start="107:28" pos:end="107:28">(</operator><literal type="number" pos:start="107:29" pos:end="107:31">0xF</literal> <operator pos:start="107:33" pos:end="107:34">&lt;&lt;</operator> <name pos:start="107:36" pos:end="107:45">FPSCR_FPCC</name><operator pos:start="107:46" pos:end="107:46">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:22"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:22">fpscr</name></name> <operator pos:start="109:24" pos:end="109:25">|=</operator> <literal type="number" pos:start="109:27" pos:end="109:30">0x11</literal> <operator pos:start="109:32" pos:end="109:33">&lt;&lt;</operator> <name pos:start="109:35" pos:end="109:44">FPSCR_FPCC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:31">case <expr pos:start="115:10" pos:end="115:30"><name pos:start="115:10" pos:end="115:30">POWERPC_EXCP_FP_VXCVI</name></expr>:</case>

        <comment type="block" pos:start="117:9" pos:end="117:32">/* Invalid conversion */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:39"><expr pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:11">env</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:18">fpscr</name></name> <operator pos:start="119:20" pos:end="119:21">|=</operator> <literal type="number" pos:start="119:23" pos:end="119:23">1</literal> <operator pos:start="119:25" pos:end="119:26">&lt;&lt;</operator> <name pos:start="119:28" pos:end="119:38">FPSCR_VXCVI</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:59"><expr pos:start="121:9" pos:end="121:58"><name pos:start="121:9" pos:end="121:18"><name pos:start="121:9" pos:end="121:11">env</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:18">fpscr</name></name> <operator pos:start="121:20" pos:end="121:21">&amp;=</operator> <operator pos:start="121:23" pos:end="121:23">~</operator><operator pos:start="121:24" pos:end="121:24">(</operator><operator pos:start="121:25" pos:end="121:25">(</operator><literal type="number" pos:start="121:26" pos:end="121:26">1</literal> <operator pos:start="121:28" pos:end="121:29">&lt;&lt;</operator> <name pos:start="121:31" pos:end="121:38">FPSCR_FR</name><operator pos:start="121:39" pos:end="121:39">)</operator> <operator pos:start="121:41" pos:end="121:41">|</operator> <operator pos:start="121:43" pos:end="121:43">(</operator><literal type="number" pos:start="121:44" pos:end="121:44">1</literal> <operator pos:start="121:46" pos:end="121:47">&lt;&lt;</operator> <name pos:start="121:49" pos:end="121:56">FPSCR_FI</name><operator pos:start="121:57" pos:end="121:57">)</operator><operator pos:start="121:58" pos:end="121:58">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="133:9"><if pos:start="123:9" pos:end="133:9">if <condition pos:start="123:12" pos:end="123:20">(<expr pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:14">ve</name> <operator pos:start="123:16" pos:end="123:17">==</operator> <literal type="number" pos:start="123:19" pos:end="123:19">0</literal></expr>)</condition> <block pos:start="123:22" pos:end="133:9">{<block_content pos:start="127:13" pos:end="131:45">

            <comment type="block" pos:start="125:13" pos:end="125:45">/* Set the result to quiet NaN */</comment>

            <expr_stmt pos:start="127:13" pos:end="127:31"><expr pos:start="127:13" pos:end="127:30"><name pos:start="127:13" pos:end="127:15">FT0</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <operator pos:start="127:19" pos:end="127:19">(</operator><name pos:start="127:20" pos:end="127:27">uint64_t</name><operator pos:start="127:28" pos:end="127:28">)</operator><operator pos:start="127:29" pos:end="127:29">-</operator><literal type="number" pos:start="127:30" pos:end="127:30">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:47"><expr pos:start="129:13" pos:end="129:46"><name pos:start="129:13" pos:end="129:22"><name pos:start="129:13" pos:end="129:15">env</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:22">fpscr</name></name> <operator pos:start="129:24" pos:end="129:25">&amp;=</operator> <operator pos:start="129:27" pos:end="129:27">~</operator><operator pos:start="129:28" pos:end="129:28">(</operator><literal type="number" pos:start="129:29" pos:end="129:31">0xF</literal> <operator pos:start="129:33" pos:end="129:34">&lt;&lt;</operator> <name pos:start="129:36" pos:end="129:45">FPSCR_FPCC</name><operator pos:start="129:46" pos:end="129:46">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:22"><name pos:start="131:13" pos:end="131:15">env</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:22">fpscr</name></name> <operator pos:start="131:24" pos:end="131:25">|=</operator> <literal type="number" pos:start="131:27" pos:end="131:30">0x11</literal> <operator pos:start="131:32" pos:end="131:33">&lt;&lt;</operator> <name pos:start="131:35" pos:end="131:44">FPSCR_FPCC</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="139:5" pos:end="139:61">/* Update the floating-point invalid operation summary */</comment>

    <expr_stmt pos:start="141:5" pos:end="141:32"><expr pos:start="141:5" pos:end="141:31"><name pos:start="141:5" pos:end="141:14"><name pos:start="141:5" pos:end="141:7">env</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:14">fpscr</name></name> <operator pos:start="141:16" pos:end="141:17">|=</operator> <literal type="number" pos:start="141:19" pos:end="141:19">1</literal> <operator pos:start="141:21" pos:end="141:22">&lt;&lt;</operator> <name pos:start="141:24" pos:end="141:31">FPSCR_VX</name></expr>;</expr_stmt>

    <comment type="block" pos:start="143:5" pos:end="143:53">/* Update the floating-point exception summary */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:32"><expr pos:start="145:5" pos:end="145:31"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:7">env</name><operator pos:start="145:8" pos:end="145:9">-&gt;</operator><name pos:start="145:10" pos:end="145:14">fpscr</name></name> <operator pos:start="145:16" pos:end="145:17">|=</operator> <literal type="number" pos:start="145:19" pos:end="145:19">1</literal> <operator pos:start="145:21" pos:end="145:22">&lt;&lt;</operator> <name pos:start="145:24" pos:end="145:31">FPSCR_FX</name></expr>;</expr_stmt>

    <if_stmt pos:start="147:5" pos:end="157:5"><if pos:start="147:5" pos:end="157:5">if <condition pos:start="147:8" pos:end="147:16">(<expr pos:start="147:9" pos:end="147:15"><name pos:start="147:9" pos:end="147:10">ve</name> <operator pos:start="147:12" pos:end="147:13">!=</operator> <literal type="number" pos:start="147:15" pos:end="147:15">0</literal></expr>)</condition> <block pos:start="147:18" pos:end="157:5">{<block_content pos:start="151:9" pos:end="155:79">

        <comment type="block" pos:start="149:9" pos:end="149:65">/* Update the floating-point enabled exception summary */</comment>

        <expr_stmt pos:start="151:9" pos:end="151:37"><expr pos:start="151:9" pos:end="151:36"><name pos:start="151:9" pos:end="151:18"><name pos:start="151:9" pos:end="151:11">env</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:18">fpscr</name></name> <operator pos:start="151:20" pos:end="151:21">|=</operator> <literal type="number" pos:start="151:23" pos:end="151:23">1</literal> <operator pos:start="151:25" pos:end="151:26">&lt;&lt;</operator> <name pos:start="151:28" pos:end="151:36">FPSCR_FEX</name></expr>;</expr_stmt>

        <if_stmt pos:start="153:9" pos:end="155:79"><if pos:start="153:9" pos:end="155:79">if <condition pos:start="153:12" pos:end="153:41">(<expr pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:19">msr_fe0</name> <operator pos:start="153:21" pos:end="153:22">!=</operator> <literal type="number" pos:start="153:24" pos:end="153:24">0</literal> <operator pos:start="153:26" pos:end="153:27">||</operator> <name pos:start="153:29" pos:end="153:35">msr_fe1</name> <operator pos:start="153:37" pos:end="153:38">!=</operator> <literal type="number" pos:start="153:40" pos:end="153:40">0</literal></expr>)</condition><block type="pseudo" pos:start="155:13" pos:end="155:79"><block_content pos:start="155:13" pos:end="155:79">

            <expr_stmt pos:start="155:13" pos:end="155:79"><expr pos:start="155:13" pos:end="155:78"><call pos:start="155:13" pos:end="155:78"><name pos:start="155:13" pos:end="155:34">do_raise_exception_err</name><argument_list pos:start="155:35" pos:end="155:78">(<argument pos:start="155:36" pos:end="155:55"><expr pos:start="155:36" pos:end="155:55"><name pos:start="155:36" pos:end="155:55">POWERPC_EXCP_PROGRAM</name></expr></argument>, <argument pos:start="155:58" pos:end="155:77"><expr pos:start="155:58" pos:end="155:77"><name pos:start="155:58" pos:end="155:72">POWERPC_EXCP_FP</name> <operator pos:start="155:74" pos:end="155:74">|</operator> <name pos:start="155:76" pos:end="155:77">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
