<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22779.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">rom_load_all</name><parameter_list pos:start="1:17" pos:end="1:22">(<parameter pos:start="1:18" pos:end="1:21"><decl pos:start="1:18" pos:end="1:21"><type pos:start="1:18" pos:end="1:21"><name pos:start="1:18" pos:end="1:21">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:22">target_phys_addr_t</name></type> <name pos:start="5:24" pos:end="5:27">addr</name> <init pos:start="5:29" pos:end="5:31">= <expr pos:start="5:31" pos:end="5:31"><literal type="number" pos:start="5:31" pos:end="5:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:23">MemoryRegionSection</name></type> <name pos:start="7:25" pos:end="7:31">section</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:9"><name pos:start="9:5" pos:end="9:7">Rom</name> <modifier pos:start="9:9" pos:end="9:9">*</modifier></type><name pos:start="9:10" pos:end="9:12">rom</name></decl>;</decl_stmt>



    <macro pos:start="13:5" pos:end="13:36"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:36">(<argument pos:start="13:20" pos:end="13:22">rom</argument>, <argument pos:start="13:25" pos:end="13:29">&amp;roms</argument>, <argument pos:start="13:32" pos:end="13:35">next</argument>)</argument_list></macro> <block pos:start="13:38" pos:end="43:5">{<block_content pos:start="15:9" pos:end="41:70">

        <if_stmt pos:start="15:9" pos:end="19:9"><if pos:start="15:9" pos:end="19:9">if <condition pos:start="15:12" pos:end="15:25">(<expr pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">rom</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:24">fw_file</name></name></expr>)</condition> <block pos:start="15:27" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="33:9"><if pos:start="21:9" pos:end="33:9">if <condition pos:start="21:12" pos:end="21:29">(<expr pos:start="21:13" pos:end="21:28"><name pos:start="21:13" pos:end="21:16">addr</name> <operator pos:start="21:18" pos:end="21:18">&gt;</operator> <name pos:start="21:20" pos:end="21:28"><name pos:start="21:20" pos:end="21:22">rom</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:28">addr</name></name></expr>)</condition> <block pos:start="21:31" pos:end="33:9">{<block_content pos:start="23:13" pos:end="31:22">

            <expr_stmt pos:start="23:13" pos:end="29:48"><expr pos:start="23:13" pos:end="29:47"><call pos:start="23:13" pos:end="29:47"><name pos:start="23:13" pos:end="23:19">fprintf</name><argument_list pos:start="23:20" pos:end="29:47">(<argument pos:start="23:21" pos:end="23:26"><expr pos:start="23:21" pos:end="23:26"><name pos:start="23:21" pos:end="23:26">stderr</name></expr></argument>, <argument pos:start="23:29" pos:end="27:52"><expr pos:start="23:29" pos:end="27:52"><literal type="string" pos:start="23:29" pos:end="23:61">"rom: requested regions overlap "</literal>

                    <literal type="string" pos:start="25:21" pos:end="25:38">"(rom %s. free=0x"</literal> <name pos:start="25:40" pos:end="25:53">TARGET_FMT_plx</name>

                    <literal type="string" pos:start="27:21" pos:end="27:31">", addr=0x"</literal> <name pos:start="27:33" pos:end="27:46">TARGET_FMT_plx</name> <literal type="string" pos:start="27:48" pos:end="27:52">")\n"</literal></expr></argument>,

                    <argument pos:start="29:21" pos:end="29:29"><expr pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:29"><name pos:start="29:21" pos:end="29:23">rom</name><operator pos:start="29:24" pos:end="29:25">-&gt;</operator><name pos:start="29:26" pos:end="29:29">name</name></name></expr></argument>, <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">addr</name></expr></argument>, <argument pos:start="29:38" pos:end="29:46"><expr pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:46"><name pos:start="29:38" pos:end="29:40">rom</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:46">addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><operator pos:start="31:20" pos:end="31:20">-</operator><literal type="number" pos:start="31:21" pos:end="31:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:26"><expr pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:12">addr</name>  <operator pos:start="35:15" pos:end="35:15">=</operator> <name pos:start="35:17" pos:end="35:25"><name pos:start="35:17" pos:end="35:19">rom</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">addr</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:29"><expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:12">addr</name> <operator pos:start="37:14" pos:end="37:15">+=</operator> <name pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:19">rom</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:28">romsize</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:15">section</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:71"><name pos:start="39:19" pos:end="39:36">memory_region_find</name><argument_list pos:start="39:37" pos:end="39:71">(<argument pos:start="39:38" pos:end="39:56"><expr pos:start="39:38" pos:end="39:56"><call pos:start="39:38" pos:end="39:56"><name pos:start="39:38" pos:end="39:54">get_system_memory</name><argument_list pos:start="39:55" pos:end="39:56">()</argument_list></call></expr></argument>, <argument pos:start="39:59" pos:end="39:67"><expr pos:start="39:59" pos:end="39:67"><name pos:start="39:59" pos:end="39:67"><name pos:start="39:59" pos:end="39:61">rom</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:67">addr</name></name></expr></argument>, <argument pos:start="39:70" pos:end="39:70"><expr pos:start="39:70" pos:end="39:70"><literal type="number" pos:start="39:70" pos:end="39:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:70"><expr pos:start="41:9" pos:end="41:69"><name pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:11">rom</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">isrom</name></name> <operator pos:start="41:20" pos:end="41:20">=</operator> <name pos:start="41:22" pos:end="41:33"><name pos:start="41:22" pos:end="41:28">section</name><operator pos:start="41:29" pos:end="41:29">.</operator><name pos:start="41:30" pos:end="41:33">size</name></name> <operator pos:start="41:35" pos:end="41:36">&amp;&amp;</operator> <call pos:start="41:38" pos:end="41:69"><name pos:start="41:38" pos:end="41:57">memory_region_is_rom</name><argument_list pos:start="41:58" pos:end="41:69">(<argument pos:start="41:59" pos:end="41:68"><expr pos:start="41:59" pos:end="41:68"><name pos:start="41:59" pos:end="41:68"><name pos:start="41:59" pos:end="41:65">section</name><operator pos:start="41:66" pos:end="41:66">.</operator><name pos:start="41:67" pos:end="41:68">mr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><call pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:23">qemu_register_reset</name><argument_list pos:start="45:24" pos:end="45:40">(<argument pos:start="45:25" pos:end="45:33"><expr pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:33">rom_reset</name></expr></argument>, <argument pos:start="45:36" pos:end="45:39"><expr pos:start="45:36" pos:end="45:39"><name pos:start="45:36" pos:end="45:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:20"><expr pos:start="47:5" pos:end="47:19"><name pos:start="47:5" pos:end="47:15">roms_loaded</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">1</literal></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
