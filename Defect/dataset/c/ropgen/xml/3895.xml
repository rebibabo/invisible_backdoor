<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3895.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">qcow2_snapshot_goto</name><parameter_list pos:start="1:24" pos:end="1:70">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:40">BlockDriverState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">bs</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:69"><decl pos:start="1:47" pos:end="1:69"><type pos:start="1:47" pos:end="1:69"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:69">snapshot_id</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">QCowSnapshot</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">sn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>, <decl pos:start="9:12" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:25">snapshot_index</name></decl>, <decl pos:start="9:28" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:28" pos:end="9:35">l1_size2</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:66"><expr pos:start="13:5" pos:end="13:65"><name pos:start="13:5" pos:end="13:18">snapshot_index</name> <operator pos:start="13:20" pos:end="13:20">=</operator> <call pos:start="13:22" pos:end="13:65"><name pos:start="13:22" pos:end="13:48">find_snapshot_by_id_or_name</name><argument_list pos:start="13:49" pos:end="13:65">(<argument pos:start="13:50" pos:end="13:51"><expr pos:start="13:50" pos:end="13:51"><name pos:start="13:50" pos:end="13:51">bs</name></expr></argument>, <argument pos:start="13:54" pos:end="13:64"><expr pos:start="13:54" pos:end="13:64"><name pos:start="13:54" pos:end="13:64">snapshot_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:23"><if pos:start="15:5" pos:end="17:23">if <condition pos:start="15:8" pos:end="15:27">(<expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:22">snapshot_index</name> <operator pos:start="15:24" pos:end="15:24">&lt;</operator> <literal type="number" pos:start="15:26" pos:end="15:26">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:23"><block_content pos:start="17:9" pos:end="17:23">

        <return pos:start="17:9" pos:end="17:23">return <expr pos:start="17:16" pos:end="17:22"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:22">ENOENT</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:39"><expr pos:start="19:5" pos:end="19:38"><name pos:start="19:5" pos:end="19:6">sn</name> <operator pos:start="19:8" pos:end="19:8">=</operator> <operator pos:start="19:10" pos:end="19:10">&amp;</operator><name pos:start="19:11" pos:end="19:38"><name pos:start="19:11" pos:end="19:11">s</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:22">snapshots</name><index pos:start="19:23" pos:end="19:38">[<expr pos:start="19:24" pos:end="19:37"><name pos:start="19:24" pos:end="19:37">snapshot_index</name></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="25:18"><if pos:start="23:5" pos:end="25:18">if <condition pos:start="23:8" pos:end="23:83">(<expr pos:start="23:9" pos:end="23:82"><call pos:start="23:9" pos:end="23:78"><name pos:start="23:9" pos:end="23:38">qcow2_update_snapshot_refcount</name><argument_list pos:start="23:39" pos:end="23:78">(<argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><name pos:start="23:40" pos:end="23:41">bs</name></expr></argument>, <argument pos:start="23:44" pos:end="23:61"><expr pos:start="23:44" pos:end="23:61"><name pos:start="23:44" pos:end="23:61"><name pos:start="23:44" pos:end="23:44">s</name><operator pos:start="23:45" pos:end="23:46">-&gt;</operator><name pos:start="23:47" pos:end="23:61">l1_table_offset</name></name></expr></argument>, <argument pos:start="23:64" pos:end="23:73"><expr pos:start="23:64" pos:end="23:73"><name pos:start="23:64" pos:end="23:73"><name pos:start="23:64" pos:end="23:64">s</name><operator pos:start="23:65" pos:end="23:66">-&gt;</operator><name pos:start="23:67" pos:end="23:73">l1_size</name></name></expr></argument>, <argument pos:start="23:76" pos:end="23:77"><expr pos:start="23:76" pos:end="23:77"><operator pos:start="23:76" pos:end="23:76">-</operator><literal type="number" pos:start="23:77" pos:end="23:77">1</literal></expr></argument>)</argument_list></call> <operator pos:start="23:80" pos:end="23:80">&lt;</operator> <literal type="number" pos:start="23:82" pos:end="23:82">0</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:18"><block_content pos:start="25:9" pos:end="25:18">

        <goto pos:start="25:9" pos:end="25:18">goto <name pos:start="25:14" pos:end="25:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:49">(<expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:27">qcow2_grow_l1_table</name><argument_list pos:start="29:28" pos:end="29:44">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">bs</name></expr></argument>, <argument pos:start="29:33" pos:end="29:43"><expr pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:43"><name pos:start="29:33" pos:end="29:34">sn</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:43">l1_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:46" pos:end="29:46">&lt;</operator> <literal type="number" pos:start="29:48" pos:end="29:48">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <goto pos:start="31:9" pos:end="31:18">goto <name pos:start="31:14" pos:end="31:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">l1_size</name></name> <operator pos:start="35:16" pos:end="35:16">=</operator> <name pos:start="35:18" pos:end="35:28"><name pos:start="35:18" pos:end="35:19">sn</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:28">l1_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:12">l1_size2</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:25"><name pos:start="37:16" pos:end="37:16">s</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:25">l1_size</name></name> <operator pos:start="37:27" pos:end="37:27">*</operator> <sizeof pos:start="37:29" pos:end="37:44">sizeof<argument_list pos:start="37:35" pos:end="37:44">(<argument pos:start="37:36" pos:end="37:43"><expr pos:start="37:36" pos:end="37:43"><name pos:start="37:36" pos:end="37:43">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <comment type="block" pos:start="39:5" pos:end="39:60">/* copy the snapshot l1 table to the current l1 table */</comment>

    <if_stmt pos:start="41:5" pos:end="45:18"><if pos:start="41:5" pos:end="45:18">if <condition pos:start="41:8" pos:end="43:54">(<expr pos:start="41:9" pos:end="43:53"><call pos:start="41:9" pos:end="43:41"><name pos:start="41:9" pos:end="41:18">bdrv_pread</name><argument_list pos:start="41:19" pos:end="43:41">(<argument pos:start="41:20" pos:end="41:27"><expr pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:27"><name pos:start="41:20" pos:end="41:21">bs</name><operator pos:start="41:22" pos:end="41:23">-&gt;</operator><name pos:start="41:24" pos:end="41:27">file</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:48"><expr pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:48"><name pos:start="41:30" pos:end="41:31">sn</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:48">l1_table_offset</name></name></expr></argument>,

                   <argument pos:start="43:20" pos:end="43:30"><expr pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:30"><name pos:start="43:20" pos:end="43:20">s</name><operator pos:start="43:21" pos:end="43:22">-&gt;</operator><name pos:start="43:23" pos:end="43:30">l1_table</name></name></expr></argument>, <argument pos:start="43:33" pos:end="43:40"><expr pos:start="43:33" pos:end="43:40"><name pos:start="43:33" pos:end="43:40">l1_size2</name></expr></argument>)</argument_list></call> <operator pos:start="43:43" pos:end="43:44">!=</operator> <name pos:start="43:46" pos:end="43:53">l1_size2</name></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:18"><block_content pos:start="45:9" pos:end="45:18">

        <goto pos:start="45:9" pos:end="45:18">goto <name pos:start="45:14" pos:end="45:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:18"><if pos:start="47:5" pos:end="51:18">if <condition pos:start="47:8" pos:end="49:55">(<expr pos:start="47:9" pos:end="49:54"><call pos:start="47:9" pos:end="49:42"><name pos:start="47:9" pos:end="47:19">bdrv_pwrite</name><argument_list pos:start="47:20" pos:end="49:42">(<argument pos:start="47:21" pos:end="47:28"><expr pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:28"><name pos:start="47:21" pos:end="47:22">bs</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:28">file</name></name></expr></argument>, <argument pos:start="47:31" pos:end="47:48"><expr pos:start="47:31" pos:end="47:48"><name pos:start="47:31" pos:end="47:48"><name pos:start="47:31" pos:end="47:31">s</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:48">l1_table_offset</name></name></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:31"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:31">l1_table</name></name></expr></argument>, <argument pos:start="49:34" pos:end="49:41"><expr pos:start="49:34" pos:end="49:41"><name pos:start="49:34" pos:end="49:41">l1_size2</name></expr></argument>)</argument_list></call> <operator pos:start="49:44" pos:end="49:45">!=</operator> <name pos:start="49:47" pos:end="49:54">l1_size2</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <goto pos:start="51:9" pos:end="51:18">goto <name pos:start="51:14" pos:end="51:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="53:5" pos:end="57:5">for<control pos:start="53:8" pos:end="53:34">(<init pos:start="53:9" pos:end="53:14"><expr pos:start="53:9" pos:end="53:13"><name pos:start="53:9" pos:end="53:9">i</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <literal type="number" pos:start="53:13" pos:end="53:13">0</literal></expr>;</init><condition pos:start="53:15" pos:end="53:29"><expr pos:start="53:15" pos:end="53:28"><name pos:start="53:15" pos:end="53:15">i</name> <operator pos:start="53:17" pos:end="53:17">&lt;</operator> <name pos:start="53:19" pos:end="53:28"><name pos:start="53:19" pos:end="53:19">s</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:28">l1_size</name></name></expr>;</condition> <incr pos:start="53:31" pos:end="53:33"><expr pos:start="53:31" pos:end="53:33"><name pos:start="53:31" pos:end="53:31">i</name><operator pos:start="53:32" pos:end="53:33">++</operator></expr></incr>)</control> <block pos:start="53:36" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:38">

        <expr_stmt pos:start="55:9" pos:end="55:38"><expr pos:start="55:9" pos:end="55:37"><call pos:start="55:9" pos:end="55:37"><name pos:start="55:9" pos:end="55:20">be64_to_cpus</name><argument_list pos:start="55:21" pos:end="55:37">(<argument pos:start="55:22" pos:end="55:36"><expr pos:start="55:22" pos:end="55:36"><operator pos:start="55:22" pos:end="55:22">&amp;</operator><name pos:start="55:23" pos:end="55:36"><name pos:start="55:23" pos:end="55:23">s</name><operator pos:start="55:24" pos:end="55:25">-&gt;</operator><name pos:start="55:26" pos:end="55:33">l1_table</name><index pos:start="55:34" pos:end="55:36">[<expr pos:start="55:35" pos:end="55:35"><name pos:start="55:35" pos:end="55:35">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="61:5" pos:end="68:0"><if pos:start="61:5" pos:end="68:0">if <condition pos:start="61:8" pos:end="61:82">(<expr pos:start="61:9" pos:end="61:81"><call pos:start="61:9" pos:end="61:77"><name pos:start="61:9" pos:end="61:38">qcow2_update_snapshot_refcount</name><argument_list pos:start="61:39" pos:end="61:77">(<argument pos:start="61:40" pos:end="61:41"><expr pos:start="61:40" pos:end="61:41"><name pos:start="61:40" pos:end="61:41">bs</name></expr></argument>, <argument pos:start="61:44" pos:end="61:61"><expr pos:start="61:44" pos:end="61:61"><name pos:start="61:44" pos:end="61:61"><name pos:start="61:44" pos:end="61:44">s</name><operator pos:start="61:45" pos:end="61:46">-&gt;</operator><name pos:start="61:47" pos:end="61:61">l1_table_offset</name></name></expr></argument>, <argument pos:start="61:64" pos:end="61:73"><expr pos:start="61:64" pos:end="61:73"><name pos:start="61:64" pos:end="61:73"><name pos:start="61:64" pos:end="61:64">s</name><operator pos:start="61:65" pos:end="61:66">-&gt;</operator><name pos:start="61:67" pos:end="61:73">l1_size</name></name></expr></argument>, <argument pos:start="61:76" pos:end="61:76"><expr pos:start="61:76" pos:end="61:76"><literal type="number" pos:start="61:76" pos:end="61:76">1</literal></expr></argument>)</argument_list></call> <operator pos:start="61:79" pos:end="61:79">&lt;</operator> <literal type="number" pos:start="61:81" pos:end="61:81">0</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="68:0"><block_content pos:start="63:9" pos:end="68:0">

        <goto pos:start="63:9" pos:end="68:0">goto <name pos:start="63:14" pos:end="63:17">fail</name>;</goto></block_content></block></if></if_stmt>



<cpp:ifdef pos:start="67:1" pos:end="67:18">#<cpp:directive pos:start="67:2" pos:end="67:6">ifdef</cpp:directive> <name pos:start="67:8" pos:end="67:18">DEBUG_ALLOC</name></cpp:ifdef>

    <expr_stmt pos:start="69:5" pos:end="72:0"><expr pos:start="69:5" pos:end="69:29"><call pos:start="69:5" pos:end="69:29"><name pos:start="69:5" pos:end="69:25">qcow2_check_refcounts</name><argument_list pos:start="69:26" pos:end="69:29">(<argument pos:start="69:27" pos:end="69:28"><expr pos:start="69:27" pos:end="69:28"><name pos:start="69:27" pos:end="69:28">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

    <return pos:start="73:5" pos:end="73:13">return <expr pos:start="73:12" pos:end="73:12"><literal type="number" pos:start="73:12" pos:end="73:12">0</literal></expr>;</return>

 <label pos:start="75:2" pos:end="75:6"><name pos:start="75:2" pos:end="75:5">fail</name>:</label>

    <return pos:start="77:5" pos:end="77:16">return <expr pos:start="77:12" pos:end="77:15"><operator pos:start="77:12" pos:end="77:12">-</operator><name pos:start="77:13" pos:end="77:15">EIO</name></expr>;</return>

</block_content>}</block></function>
</unit>
