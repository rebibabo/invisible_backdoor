<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1302.c" pos:tabs="8"><function pos:start="1:1" pos:end="279:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">bdrv_img_create</name><parameter_list pos:start="1:21" pos:end="7:46">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">filename</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:58">fmt</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:46"><decl pos:start="3:22" pos:end="3:46"><type pos:start="3:22" pos:end="3:46"><specifier pos:start="3:22" pos:end="3:26">const</specifier> <name pos:start="3:28" pos:end="3:31">char</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:46">base_filename</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:68"><decl pos:start="3:49" pos:end="3:68"><type pos:start="3:49" pos:end="3:68"><specifier pos:start="3:49" pos:end="3:53">const</specifier> <name pos:start="3:55" pos:end="3:58">char</name> <modifier pos:start="3:60" pos:end="3:60">*</modifier></type><name pos:start="3:61" pos:end="3:68">base_fmt</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:34"><decl pos:start="5:22" pos:end="5:34"><type pos:start="5:22" pos:end="5:34"><name pos:start="5:22" pos:end="5:25">char</name> <modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:34">options</name></decl></parameter>, <parameter pos:start="5:37" pos:end="5:53"><decl pos:start="5:37" pos:end="5:53"><type pos:start="5:37" pos:end="5:53"><name pos:start="5:37" pos:end="5:44">uint64_t</name></type> <name pos:start="5:46" pos:end="5:53">img_size</name></decl></parameter>, <parameter pos:start="5:56" pos:end="5:64"><decl pos:start="5:56" pos:end="5:64"><type pos:start="5:56" pos:end="5:64"><name pos:start="5:56" pos:end="5:58">int</name></type> <name pos:start="5:60" pos:end="5:64">flags</name></decl></parameter>,

                     <parameter pos:start="7:22" pos:end="7:33"><decl pos:start="7:22" pos:end="7:33"><type pos:start="7:22" pos:end="7:33"><name pos:start="7:22" pos:end="7:26">Error</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier><modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:33">errp</name></decl></parameter>, <parameter pos:start="7:36" pos:end="7:45"><decl pos:start="7:36" pos:end="7:45"><type pos:start="7:36" pos:end="7:45"><name pos:start="7:36" pos:end="7:39">bool</name></type> <name pos:start="7:41" pos:end="7:45">quiet</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="279:1">{<block_content pos:start="11:5" pos:end="277:5">

    <decl_stmt pos:start="11:5" pos:end="11:62"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:23">QEMUOptionParameter</name> <modifier pos:start="11:25" pos:end="11:25">*</modifier></type><name pos:start="11:26" pos:end="11:30">param</name> <init pos:start="11:32" pos:end="11:37">= <expr pos:start="11:34" pos:end="11:37"><name pos:start="11:34" pos:end="11:37">NULL</name></expr></init></decl>, <decl pos:start="11:40" pos:end="11:61"><type ref="prev" pos:start="11:5" pos:end="11:25"><modifier pos:start="11:40" pos:end="11:40">*</modifier></type><name pos:start="11:41" pos:end="11:54">create_options</name> <init pos:start="11:56" pos:end="11:61">= <expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:59"><decl pos:start="13:5" pos:end="13:36"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:23">QEMUOptionParameter</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:36">backing_fmt</name></decl>, <decl pos:start="13:39" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:25"><modifier pos:start="13:39" pos:end="13:39">*</modifier></type><name pos:start="13:40" pos:end="13:51">backing_file</name></decl>, <decl pos:start="13:54" pos:end="13:58"><type ref="prev" pos:start="13:5" pos:end="13:25"><modifier pos:start="13:54" pos:end="13:54">*</modifier></type><name pos:start="13:55" pos:end="13:58">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:32"><decl pos:start="15:5" pos:end="15:31"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:20">BlockDriverState</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier></type><name pos:start="15:23" pos:end="15:24">bs</name> <init pos:start="15:26" pos:end="15:31">= <expr pos:start="15:28" pos:end="15:31"><name pos:start="15:28" pos:end="15:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:15">BlockDriver</name> <modifier pos:start="17:17" pos:end="17:17">*</modifier></type><name pos:start="17:18" pos:end="17:20">drv</name></decl>, <decl pos:start="17:23" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:17"><modifier pos:start="17:23" pos:end="17:23">*</modifier></type><name pos:start="17:24" pos:end="17:32">proto_drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:36"><decl pos:start="19:5" pos:end="19:35"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">BlockDriver</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:28">backing_drv</name> <init pos:start="19:30" pos:end="19:35">= <expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:43">/* Find driver and parse its options */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:7">drv</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:31"><name pos:start="27:11" pos:end="27:26">bdrv_find_format</name><argument_list pos:start="27:27" pos:end="27:31">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">drv</name></expr>)</condition> <block pos:start="29:15" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:15">

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><call pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:18">error_setg</name><argument_list pos:start="31:19" pos:end="31:57">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">errp</name></expr></argument>, <argument pos:start="31:26" pos:end="31:51"><expr pos:start="31:26" pos:end="31:51"><literal type="string" pos:start="31:26" pos:end="31:51">"Unknown file format '%s'"</literal></expr></argument>, <argument pos:start="31:54" pos:end="31:56"><expr pos:start="31:54" pos:end="31:56"><name pos:start="31:54" pos:end="31:56">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:45"><expr pos:start="39:5" pos:end="39:44"><name pos:start="39:5" pos:end="39:13">proto_drv</name> <operator pos:start="39:15" pos:end="39:15">=</operator> <call pos:start="39:17" pos:end="39:44"><name pos:start="39:17" pos:end="39:34">bdrv_find_protocol</name><argument_list pos:start="39:35" pos:end="39:44">(<argument pos:start="39:36" pos:end="39:43"><expr pos:start="39:36" pos:end="39:43"><name pos:start="39:36" pos:end="39:43">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:19">(<expr pos:start="41:9" pos:end="41:18"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:18">proto_drv</name></expr>)</condition> <block pos:start="41:21" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:15">

        <expr_stmt pos:start="43:9" pos:end="43:60"><expr pos:start="43:9" pos:end="43:59"><call pos:start="43:9" pos:end="43:59"><name pos:start="43:9" pos:end="43:18">error_setg</name><argument_list pos:start="43:19" pos:end="43:59">(<argument pos:start="43:20" pos:end="43:23"><expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">errp</name></expr></argument>, <argument pos:start="43:26" pos:end="43:48"><expr pos:start="43:26" pos:end="43:48"><literal type="string" pos:start="43:26" pos:end="43:48">"Unknown protocol '%s'"</literal></expr></argument>, <argument pos:start="43:51" pos:end="43:58"><expr pos:start="43:51" pos:end="43:58"><name pos:start="43:51" pos:end="43:58">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="51:5" pos:end="53:67"><expr pos:start="51:5" pos:end="53:66"><name pos:start="51:5" pos:end="51:18">create_options</name> <operator pos:start="51:20" pos:end="51:20">=</operator> <call pos:start="51:22" pos:end="53:66"><name pos:start="51:22" pos:end="51:45">append_option_parameters</name><argument_list pos:start="51:46" pos:end="53:66">(<argument pos:start="51:47" pos:end="51:60"><expr pos:start="51:47" pos:end="51:60"><name pos:start="51:47" pos:end="51:60">create_options</name></expr></argument>,

                                              <argument pos:start="53:47" pos:end="53:65"><expr pos:start="53:47" pos:end="53:65"><name pos:start="53:47" pos:end="53:65"><name pos:start="53:47" pos:end="53:49">drv</name><operator pos:start="53:50" pos:end="53:51">-&gt;</operator><name pos:start="53:52" pos:end="53:65">create_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:73"><expr pos:start="55:5" pos:end="57:72"><name pos:start="55:5" pos:end="55:18">create_options</name> <operator pos:start="55:20" pos:end="55:20">=</operator> <call pos:start="55:22" pos:end="57:72"><name pos:start="55:22" pos:end="55:45">append_option_parameters</name><argument_list pos:start="55:46" pos:end="57:72">(<argument pos:start="55:47" pos:end="55:60"><expr pos:start="55:47" pos:end="55:60"><name pos:start="55:47" pos:end="55:60">create_options</name></expr></argument>,

                                              <argument pos:start="57:47" pos:end="57:71"><expr pos:start="57:47" pos:end="57:71"><name pos:start="57:47" pos:end="57:71"><name pos:start="57:47" pos:end="57:55">proto_drv</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:71">create_options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:51">/* Create parameter list with default values */</comment>

    <expr_stmt pos:start="63:5" pos:end="63:63"><expr pos:start="63:5" pos:end="63:62"><name pos:start="63:5" pos:end="63:9">param</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:62"><name pos:start="63:13" pos:end="63:35">parse_option_parameters</name><argument_list pos:start="63:36" pos:end="63:62">(<argument pos:start="63:37" pos:end="63:38"><expr pos:start="63:37" pos:end="63:38"><literal type="string" pos:start="63:37" pos:end="63:38">""</literal></expr></argument>, <argument pos:start="63:41" pos:end="63:54"><expr pos:start="63:41" pos:end="63:54"><name pos:start="63:41" pos:end="63:54">create_options</name></expr></argument>, <argument pos:start="63:57" pos:end="63:61"><expr pos:start="63:57" pos:end="63:61"><name pos:start="63:57" pos:end="63:61">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:62"><expr pos:start="67:5" pos:end="67:61"><call pos:start="67:5" pos:end="67:61"><name pos:start="67:5" pos:end="67:28">set_option_parameter_int</name><argument_list pos:start="67:29" pos:end="67:61">(<argument pos:start="67:30" pos:end="67:34"><expr pos:start="67:30" pos:end="67:34"><name pos:start="67:30" pos:end="67:34">param</name></expr></argument>, <argument pos:start="67:37" pos:end="67:50"><expr pos:start="67:37" pos:end="67:50"><name pos:start="67:37" pos:end="67:50">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="67:53" pos:end="67:60"><expr pos:start="67:53" pos:end="67:60"><name pos:start="67:53" pos:end="67:60">img_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:26">/* Parse -o options */</comment>

    <if_stmt pos:start="73:5" pos:end="85:5"><if pos:start="73:5" pos:end="85:5">if <condition pos:start="73:8" pos:end="73:16">(<expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:15">options</name></expr>)</condition> <block pos:start="73:18" pos:end="85:5">{<block_content pos:start="75:9" pos:end="83:9">

        <expr_stmt pos:start="75:9" pos:end="75:72"><expr pos:start="75:9" pos:end="75:71"><name pos:start="75:9" pos:end="75:13">param</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <call pos:start="75:17" pos:end="75:71"><name pos:start="75:17" pos:end="75:39">parse_option_parameters</name><argument_list pos:start="75:40" pos:end="75:71">(<argument pos:start="75:41" pos:end="75:47"><expr pos:start="75:41" pos:end="75:47"><name pos:start="75:41" pos:end="75:47">options</name></expr></argument>, <argument pos:start="75:50" pos:end="75:63"><expr pos:start="75:50" pos:end="75:63"><name pos:start="75:50" pos:end="75:63">create_options</name></expr></argument>, <argument pos:start="75:66" pos:end="75:70"><expr pos:start="75:66" pos:end="75:70"><name pos:start="75:66" pos:end="75:70">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:26">(<expr pos:start="77:13" pos:end="77:25"><name pos:start="77:13" pos:end="77:17">param</name> <operator pos:start="77:19" pos:end="77:20">==</operator> <name pos:start="77:22" pos:end="77:25">NULL</name></expr>)</condition> <block pos:start="77:28" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:21">

            <expr_stmt pos:start="79:13" pos:end="79:75"><expr pos:start="79:13" pos:end="79:74"><call pos:start="79:13" pos:end="79:74"><name pos:start="79:13" pos:end="79:22">error_setg</name><argument_list pos:start="79:23" pos:end="79:74">(<argument pos:start="79:24" pos:end="79:27"><expr pos:start="79:24" pos:end="79:27"><name pos:start="79:24" pos:end="79:27">errp</name></expr></argument>, <argument pos:start="79:30" pos:end="79:68"><expr pos:start="79:30" pos:end="79:68"><literal type="string" pos:start="79:30" pos:end="79:68">"Invalid options for file format '%s'."</literal></expr></argument>, <argument pos:start="79:71" pos:end="79:73"><expr pos:start="79:71" pos:end="79:73"><name pos:start="79:71" pos:end="79:73">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="81:13" pos:end="81:21">goto <name pos:start="81:18" pos:end="81:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="103:5"><if pos:start="89:5" pos:end="103:5">if <condition pos:start="89:8" pos:end="89:22">(<expr pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:21">base_filename</name></expr>)</condition> <block pos:start="89:24" pos:end="103:5">{<block_content pos:start="91:9" pos:end="101:9">

        <if_stmt pos:start="91:9" pos:end="101:9"><if pos:start="91:9" pos:end="101:9">if <condition pos:start="91:12" pos:end="93:48">(<expr pos:start="91:13" pos:end="93:47"><call pos:start="91:13" pos:end="93:47"><name pos:start="91:13" pos:end="91:32">set_option_parameter</name><argument_list pos:start="91:33" pos:end="93:47">(<argument pos:start="91:34" pos:end="91:38"><expr pos:start="91:34" pos:end="91:38"><name pos:start="91:34" pos:end="91:38">param</name></expr></argument>, <argument pos:start="91:41" pos:end="91:62"><expr pos:start="91:41" pos:end="91:62"><name pos:start="91:41" pos:end="91:62">BLOCK_OPT_BACKING_FILE</name></expr></argument>,

                                 <argument pos:start="93:34" pos:end="93:46"><expr pos:start="93:34" pos:end="93:46"><name pos:start="93:34" pos:end="93:46">base_filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="93:50" pos:end="101:9">{<block_content pos:start="95:13" pos:end="99:21">

            <expr_stmt pos:start="95:13" pos:end="97:28"><expr pos:start="95:13" pos:end="97:27"><call pos:start="95:13" pos:end="97:27"><name pos:start="95:13" pos:end="95:22">error_setg</name><argument_list pos:start="95:23" pos:end="97:27">(<argument pos:start="95:24" pos:end="95:27"><expr pos:start="95:24" pos:end="95:27"><name pos:start="95:24" pos:end="95:27">errp</name></expr></argument>, <argument pos:start="95:30" pos:end="95:78"><expr pos:start="95:30" pos:end="95:78"><literal type="string" pos:start="95:30" pos:end="95:78">"Backing file not supported for file format '%s'"</literal></expr></argument>,

                       <argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="99:13" pos:end="99:21">goto <name pos:start="99:18" pos:end="99:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="107:5" pos:end="119:5"><if pos:start="107:5" pos:end="119:5">if <condition pos:start="107:8" pos:end="107:17">(<expr pos:start="107:9" pos:end="107:16"><name pos:start="107:9" pos:end="107:16">base_fmt</name></expr>)</condition> <block pos:start="107:19" pos:end="119:5">{<block_content pos:start="109:9" pos:end="117:9">

        <if_stmt pos:start="109:9" pos:end="117:9"><if pos:start="109:9" pos:end="117:9">if <condition pos:start="109:12" pos:end="109:73">(<expr pos:start="109:13" pos:end="109:72"><call pos:start="109:13" pos:end="109:72"><name pos:start="109:13" pos:end="109:32">set_option_parameter</name><argument_list pos:start="109:33" pos:end="109:72">(<argument pos:start="109:34" pos:end="109:38"><expr pos:start="109:34" pos:end="109:38"><name pos:start="109:34" pos:end="109:38">param</name></expr></argument>, <argument pos:start="109:41" pos:end="109:61"><expr pos:start="109:41" pos:end="109:61"><name pos:start="109:41" pos:end="109:61">BLOCK_OPT_BACKING_FMT</name></expr></argument>, <argument pos:start="109:64" pos:end="109:71"><expr pos:start="109:64" pos:end="109:71"><name pos:start="109:64" pos:end="109:71">base_fmt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:75" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:21">

            <expr_stmt pos:start="111:13" pos:end="113:49"><expr pos:start="111:13" pos:end="113:48"><call pos:start="111:13" pos:end="113:48"><name pos:start="111:13" pos:end="111:22">error_setg</name><argument_list pos:start="111:23" pos:end="113:48">(<argument pos:start="111:24" pos:end="111:27"><expr pos:start="111:24" pos:end="111:27"><name pos:start="111:24" pos:end="111:27">errp</name></expr></argument>, <argument pos:start="111:30" pos:end="113:42"><expr pos:start="111:30" pos:end="113:42"><literal type="string" pos:start="111:30" pos:end="111:74">"Backing file format not supported for file "</literal>

                             <literal type="string" pos:start="113:30" pos:end="113:42">"format '%s'"</literal></expr></argument>, <argument pos:start="113:45" pos:end="113:47"><expr pos:start="113:45" pos:end="113:47"><name pos:start="113:45" pos:end="113:47">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="115:13" pos:end="115:21">goto <name pos:start="115:18" pos:end="115:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:71"><expr pos:start="123:5" pos:end="123:70"><name pos:start="123:5" pos:end="123:16">backing_file</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:70"><name pos:start="123:20" pos:end="123:39">get_option_parameter</name><argument_list pos:start="123:40" pos:end="123:70">(<argument pos:start="123:41" pos:end="123:45"><expr pos:start="123:41" pos:end="123:45"><name pos:start="123:41" pos:end="123:45">param</name></expr></argument>, <argument pos:start="123:48" pos:end="123:69"><expr pos:start="123:48" pos:end="123:69"><name pos:start="123:48" pos:end="123:69">BLOCK_OPT_BACKING_FILE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="137:5"><if pos:start="125:5" pos:end="137:5">if <condition pos:start="125:8" pos:end="125:46">(<expr pos:start="125:9" pos:end="125:45"><name pos:start="125:9" pos:end="125:20">backing_file</name> <operator pos:start="125:22" pos:end="125:23">&amp;&amp;</operator> <name pos:start="125:25" pos:end="125:45"><name pos:start="125:25" pos:end="125:36">backing_file</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:43">value</name><operator pos:start="125:44" pos:end="125:44">.</operator><name pos:start="125:45" pos:end="125:45">s</name></name></expr>)</condition> <block pos:start="125:48" pos:end="137:5">{<block_content pos:start="127:9" pos:end="135:9">

        <if_stmt pos:start="127:9" pos:end="135:9"><if pos:start="127:9" pos:end="135:9">if <condition pos:start="127:12" pos:end="127:53">(<expr pos:start="127:13" pos:end="127:52"><operator pos:start="127:13" pos:end="127:13">!</operator><call pos:start="127:14" pos:end="127:52"><name pos:start="127:14" pos:end="127:19">strcmp</name><argument_list pos:start="127:20" pos:end="127:52">(<argument pos:start="127:21" pos:end="127:28"><expr pos:start="127:21" pos:end="127:28"><name pos:start="127:21" pos:end="127:28">filename</name></expr></argument>, <argument pos:start="127:31" pos:end="127:51"><expr pos:start="127:31" pos:end="127:51"><name pos:start="127:31" pos:end="127:51"><name pos:start="127:31" pos:end="127:42">backing_file</name><operator pos:start="127:43" pos:end="127:44">-&gt;</operator><name pos:start="127:45" pos:end="127:49">value</name><operator pos:start="127:50" pos:end="127:50">.</operator><name pos:start="127:51" pos:end="127:51">s</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:55" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:21">

            <expr_stmt pos:start="129:13" pos:end="131:66"><expr pos:start="129:13" pos:end="131:65"><call pos:start="129:13" pos:end="131:65"><name pos:start="129:13" pos:end="129:22">error_setg</name><argument_list pos:start="129:23" pos:end="131:65">(<argument pos:start="129:24" pos:end="129:27"><expr pos:start="129:24" pos:end="129:27"><name pos:start="129:24" pos:end="129:27">errp</name></expr></argument>, <argument pos:start="129:30" pos:end="131:64"><expr pos:start="129:30" pos:end="131:64"><literal type="string" pos:start="129:30" pos:end="129:73">"Error: Trying to create an image with the "</literal>

                             <literal type="string" pos:start="131:30" pos:end="131:64">"same filename as the backing file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="133:13" pos:end="133:21">goto <name pos:start="133:18" pos:end="133:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="141:5" pos:end="141:69"><expr pos:start="141:5" pos:end="141:68"><name pos:start="141:5" pos:end="141:15">backing_fmt</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:68"><name pos:start="141:19" pos:end="141:38">get_option_parameter</name><argument_list pos:start="141:39" pos:end="141:68">(<argument pos:start="141:40" pos:end="141:44"><expr pos:start="141:40" pos:end="141:44"><name pos:start="141:40" pos:end="141:44">param</name></expr></argument>, <argument pos:start="141:47" pos:end="141:67"><expr pos:start="141:47" pos:end="141:67"><name pos:start="141:47" pos:end="141:67">BLOCK_OPT_BACKING_FMT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="157:5"><if pos:start="143:5" pos:end="157:5">if <condition pos:start="143:8" pos:end="143:44">(<expr pos:start="143:9" pos:end="143:43"><name pos:start="143:9" pos:end="143:19">backing_fmt</name> <operator pos:start="143:21" pos:end="143:22">&amp;&amp;</operator> <name pos:start="143:24" pos:end="143:43"><name pos:start="143:24" pos:end="143:34">backing_fmt</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:41">value</name><operator pos:start="143:42" pos:end="143:42">.</operator><name pos:start="143:43" pos:end="143:43">s</name></name></expr>)</condition> <block pos:start="143:46" pos:end="157:5">{<block_content pos:start="145:9" pos:end="155:9">

        <expr_stmt pos:start="145:9" pos:end="145:61"><expr pos:start="145:9" pos:end="145:60"><name pos:start="145:9" pos:end="145:19">backing_drv</name> <operator pos:start="145:21" pos:end="145:21">=</operator> <call pos:start="145:23" pos:end="145:60"><name pos:start="145:23" pos:end="145:38">bdrv_find_format</name><argument_list pos:start="145:39" pos:end="145:60">(<argument pos:start="145:40" pos:end="145:59"><expr pos:start="145:40" pos:end="145:59"><name pos:start="145:40" pos:end="145:59"><name pos:start="145:40" pos:end="145:50">backing_fmt</name><operator pos:start="145:51" pos:end="145:52">-&gt;</operator><name pos:start="145:53" pos:end="145:57">value</name><operator pos:start="145:58" pos:end="145:58">.</operator><name pos:start="145:59" pos:end="145:59">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="147:9" pos:end="155:9"><if pos:start="147:9" pos:end="155:9">if <condition pos:start="147:12" pos:end="147:25">(<expr pos:start="147:13" pos:end="147:24"><operator pos:start="147:13" pos:end="147:13">!</operator><name pos:start="147:14" pos:end="147:24">backing_drv</name></expr>)</condition> <block pos:start="147:27" pos:end="155:9">{<block_content pos:start="149:13" pos:end="153:21">

            <expr_stmt pos:start="149:13" pos:end="151:45"><expr pos:start="149:13" pos:end="151:44"><call pos:start="149:13" pos:end="151:44"><name pos:start="149:13" pos:end="149:22">error_setg</name><argument_list pos:start="149:23" pos:end="151:44">(<argument pos:start="149:24" pos:end="149:27"><expr pos:start="149:24" pos:end="149:27"><name pos:start="149:24" pos:end="149:27">errp</name></expr></argument>, <argument pos:start="149:30" pos:end="149:63"><expr pos:start="149:30" pos:end="149:63"><literal type="string" pos:start="149:30" pos:end="149:63">"Unknown backing file format '%s'"</literal></expr></argument>,

                       <argument pos:start="151:24" pos:end="151:43"><expr pos:start="151:24" pos:end="151:43"><name pos:start="151:24" pos:end="151:43"><name pos:start="151:24" pos:end="151:34">backing_fmt</name><operator pos:start="151:35" pos:end="151:36">-&gt;</operator><name pos:start="151:37" pos:end="151:41">value</name><operator pos:start="151:42" pos:end="151:42">.</operator><name pos:start="151:43" pos:end="151:43">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="153:13" pos:end="153:21">goto <name pos:start="153:18" pos:end="153:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="161:5" pos:end="161:75">// The size for the image must always be specified, with one exception:</comment>

    <comment type="line" pos:start="163:5" pos:end="163:72">// If we are using a backing file, we can obtain the size from there</comment>

    <expr_stmt pos:start="165:5" pos:end="165:55"><expr pos:start="165:5" pos:end="165:54"><name pos:start="165:5" pos:end="165:8">size</name> <operator pos:start="165:10" pos:end="165:10">=</operator> <call pos:start="165:12" pos:end="165:54"><name pos:start="165:12" pos:end="165:31">get_option_parameter</name><argument_list pos:start="165:32" pos:end="165:54">(<argument pos:start="165:33" pos:end="165:37"><expr pos:start="165:33" pos:end="165:37"><name pos:start="165:33" pos:end="165:37">param</name></expr></argument>, <argument pos:start="165:40" pos:end="165:53"><expr pos:start="165:40" pos:end="165:53"><name pos:start="165:40" pos:end="165:53">BLOCK_OPT_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="223:5"><if pos:start="167:5" pos:end="223:5">if <condition pos:start="167:8" pos:end="167:36">(<expr pos:start="167:9" pos:end="167:35"><name pos:start="167:9" pos:end="167:12">size</name> <operator pos:start="167:14" pos:end="167:15">&amp;&amp;</operator> <name pos:start="167:17" pos:end="167:29"><name pos:start="167:17" pos:end="167:20">size</name><operator pos:start="167:21" pos:end="167:22">-&gt;</operator><name pos:start="167:23" pos:end="167:27">value</name><operator pos:start="167:28" pos:end="167:28">.</operator><name pos:start="167:29" pos:end="167:29">n</name></name> <operator pos:start="167:31" pos:end="167:32">==</operator> <operator pos:start="167:34" pos:end="167:34">-</operator><literal type="number" pos:start="167:35" pos:end="167:35">1</literal></expr>)</condition> <block pos:start="167:38" pos:end="223:5">{<block_content pos:start="169:9" pos:end="221:9">

        <if_stmt pos:start="169:9" pos:end="221:9"><if pos:start="169:9" pos:end="215:9">if <condition pos:start="169:12" pos:end="169:50">(<expr pos:start="169:13" pos:end="169:49"><name pos:start="169:13" pos:end="169:24">backing_file</name> <operator pos:start="169:26" pos:end="169:27">&amp;&amp;</operator> <name pos:start="169:29" pos:end="169:49"><name pos:start="169:29" pos:end="169:40">backing_file</name><operator pos:start="169:41" pos:end="169:42">-&gt;</operator><name pos:start="169:43" pos:end="169:47">value</name><operator pos:start="169:48" pos:end="169:48">.</operator><name pos:start="169:49" pos:end="169:49">s</name></name></expr>)</condition> <block pos:start="169:52" pos:end="215:9">{<block_content pos:start="171:13" pos:end="213:61">

            <decl_stmt pos:start="171:13" pos:end="171:26"><decl pos:start="171:13" pos:end="171:25"><type pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:20">uint64_t</name></type> <name pos:start="171:22" pos:end="171:25">size</name></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:25"><decl pos:start="173:13" pos:end="173:24"><type pos:start="173:13" pos:end="173:16"><name pos:start="173:13" pos:end="173:16">char</name></type> <name pos:start="173:18" pos:end="173:24"><name pos:start="173:18" pos:end="173:20">buf</name><index pos:start="173:21" pos:end="173:24">[<expr pos:start="173:22" pos:end="173:23"><literal type="number" pos:start="173:22" pos:end="173:23">32</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="175:13" pos:end="175:27"><decl pos:start="175:13" pos:end="175:26"><type pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">int</name></type> <name pos:start="175:17" pos:end="175:26">back_flags</name></decl>;</decl_stmt>



            <comment type="block" pos:start="179:13" pos:end="179:55">/* backing files always opened read-only */</comment>

            <expr_stmt pos:start="181:13" pos:end="183:77"><expr pos:start="181:13" pos:end="183:76"><name pos:start="181:13" pos:end="181:22">back_flags</name> <operator pos:start="181:24" pos:end="181:24">=</operator>

                <name pos:start="183:17" pos:end="183:21">flags</name> <operator pos:start="183:23" pos:end="183:23">&amp;</operator> <operator pos:start="183:25" pos:end="183:25">~</operator><operator pos:start="183:26" pos:end="183:26">(</operator><name pos:start="183:27" pos:end="183:37">BDRV_O_RDWR</name> <operator pos:start="183:39" pos:end="183:39">|</operator> <name pos:start="183:41" pos:end="183:55">BDRV_O_SNAPSHOT</name> <operator pos:start="183:57" pos:end="183:57">|</operator> <name pos:start="183:59" pos:end="183:75">BDRV_O_NO_BACKING</name><operator pos:start="183:76" pos:end="183:76">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:30"><expr pos:start="187:13" pos:end="187:29"><name pos:start="187:13" pos:end="187:14">bs</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <call pos:start="187:18" pos:end="187:29"><name pos:start="187:18" pos:end="187:25">bdrv_new</name><argument_list pos:start="187:26" pos:end="187:29">(<argument pos:start="187:27" pos:end="187:28"><expr pos:start="187:27" pos:end="187:28"><literal type="string" pos:start="187:27" pos:end="187:28">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="191:13" pos:end="193:41"><expr pos:start="191:13" pos:end="193:40"><name pos:start="191:13" pos:end="191:15">ret</name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="193:40"><name pos:start="191:19" pos:end="191:27">bdrv_open</name><argument_list pos:start="191:28" pos:end="193:40">(<argument pos:start="191:29" pos:end="191:30"><expr pos:start="191:29" pos:end="191:30"><name pos:start="191:29" pos:end="191:30">bs</name></expr></argument>, <argument pos:start="191:33" pos:end="191:53"><expr pos:start="191:33" pos:end="191:53"><name pos:start="191:33" pos:end="191:53"><name pos:start="191:33" pos:end="191:44">backing_file</name><operator pos:start="191:45" pos:end="191:46">-&gt;</operator><name pos:start="191:47" pos:end="191:51">value</name><operator pos:start="191:52" pos:end="191:52">.</operator><name pos:start="191:53" pos:end="191:53">s</name></name></expr></argument>, <argument pos:start="191:56" pos:end="191:59"><expr pos:start="191:56" pos:end="191:59"><name pos:start="191:56" pos:end="191:59">NULL</name></expr></argument>, <argument pos:start="191:62" pos:end="191:71"><expr pos:start="191:62" pos:end="191:71"><name pos:start="191:62" pos:end="191:71">back_flags</name></expr></argument>,

                            <argument pos:start="193:29" pos:end="193:39"><expr pos:start="193:29" pos:end="193:39"><name pos:start="193:29" pos:end="193:39">backing_drv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="195:13" pos:end="203:13"><if pos:start="195:13" pos:end="203:13">if <condition pos:start="195:16" pos:end="195:24">(<expr pos:start="195:17" pos:end="195:23"><name pos:start="195:17" pos:end="195:19">ret</name> <operator pos:start="195:21" pos:end="195:21">&lt;</operator> <literal type="number" pos:start="195:23" pos:end="195:23">0</literal></expr>)</condition> <block pos:start="195:26" pos:end="203:13">{<block_content pos:start="197:17" pos:end="201:25">

                <expr_stmt pos:start="197:17" pos:end="199:56"><expr pos:start="197:17" pos:end="199:55"><call pos:start="197:17" pos:end="199:55"><name pos:start="197:17" pos:end="197:32">error_setg_errno</name><argument_list pos:start="197:33" pos:end="199:55">(<argument pos:start="197:34" pos:end="197:37"><expr pos:start="197:34" pos:end="197:37"><name pos:start="197:34" pos:end="197:37">errp</name></expr></argument>, <argument pos:start="197:40" pos:end="197:43"><expr pos:start="197:40" pos:end="197:43"><operator pos:start="197:40" pos:end="197:40">-</operator><name pos:start="197:41" pos:end="197:43">ret</name></expr></argument>, <argument pos:start="197:46" pos:end="197:66"><expr pos:start="197:46" pos:end="197:66"><literal type="string" pos:start="197:46" pos:end="197:66">"Could not open '%s'"</literal></expr></argument>,

                                 <argument pos:start="199:34" pos:end="199:54"><expr pos:start="199:34" pos:end="199:54"><name pos:start="199:34" pos:end="199:54"><name pos:start="199:34" pos:end="199:45">backing_file</name><operator pos:start="199:46" pos:end="199:47">-&gt;</operator><name pos:start="199:48" pos:end="199:52">value</name><operator pos:start="199:53" pos:end="199:53">.</operator><name pos:start="199:54" pos:end="199:54">s</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="201:17" pos:end="201:25">goto <name pos:start="201:22" pos:end="201:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:41"><expr pos:start="205:13" pos:end="205:40"><call pos:start="205:13" pos:end="205:40"><name pos:start="205:13" pos:end="205:29">bdrv_get_geometry</name><argument_list pos:start="205:30" pos:end="205:40">(<argument pos:start="205:31" pos:end="205:32"><expr pos:start="205:31" pos:end="205:32"><name pos:start="205:31" pos:end="205:32">bs</name></expr></argument>, <argument pos:start="205:35" pos:end="205:39"><expr pos:start="205:35" pos:end="205:39"><operator pos:start="205:35" pos:end="205:35">&amp;</operator><name pos:start="205:36" pos:end="205:39">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:24"><expr pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:16">size</name> <operator pos:start="207:18" pos:end="207:19">*=</operator> <literal type="number" pos:start="207:21" pos:end="207:23">512</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="211:13" pos:end="211:57"><expr pos:start="211:13" pos:end="211:56"><call pos:start="211:13" pos:end="211:56"><name pos:start="211:13" pos:end="211:20">snprintf</name><argument_list pos:start="211:21" pos:end="211:56">(<argument pos:start="211:22" pos:end="211:24"><expr pos:start="211:22" pos:end="211:24"><name pos:start="211:22" pos:end="211:24">buf</name></expr></argument>, <argument pos:start="211:27" pos:end="211:37"><expr pos:start="211:27" pos:end="211:37"><sizeof pos:start="211:27" pos:end="211:37">sizeof<argument_list pos:start="211:33" pos:end="211:37">(<argument pos:start="211:34" pos:end="211:36"><expr pos:start="211:34" pos:end="211:36"><name pos:start="211:34" pos:end="211:36">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="211:40" pos:end="211:49"><expr pos:start="211:40" pos:end="211:49"><literal type="string" pos:start="211:40" pos:end="211:42">"%"</literal> <name pos:start="211:44" pos:end="211:49">PRId64</name></expr></argument>, <argument pos:start="211:52" pos:end="211:55"><expr pos:start="211:52" pos:end="211:55"><name pos:start="211:52" pos:end="211:55">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:61"><expr pos:start="213:13" pos:end="213:60"><call pos:start="213:13" pos:end="213:60"><name pos:start="213:13" pos:end="213:32">set_option_parameter</name><argument_list pos:start="213:33" pos:end="213:60">(<argument pos:start="213:34" pos:end="213:38"><expr pos:start="213:34" pos:end="213:38"><name pos:start="213:34" pos:end="213:38">param</name></expr></argument>, <argument pos:start="213:41" pos:end="213:54"><expr pos:start="213:41" pos:end="213:54"><name pos:start="213:41" pos:end="213:54">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="213:57" pos:end="213:59"><expr pos:start="213:57" pos:end="213:59"><name pos:start="213:57" pos:end="213:59">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="215:11" pos:end="221:9">else <block pos:start="215:16" pos:end="221:9">{<block_content pos:start="217:13" pos:end="219:21">

            <expr_stmt pos:start="217:13" pos:end="217:70"><expr pos:start="217:13" pos:end="217:69"><call pos:start="217:13" pos:end="217:69"><name pos:start="217:13" pos:end="217:22">error_setg</name><argument_list pos:start="217:23" pos:end="217:69">(<argument pos:start="217:24" pos:end="217:27"><expr pos:start="217:24" pos:end="217:27"><name pos:start="217:24" pos:end="217:27">errp</name></expr></argument>, <argument pos:start="217:30" pos:end="217:68"><expr pos:start="217:30" pos:end="217:68"><literal type="string" pos:start="217:30" pos:end="217:68">"Image creation needs a size parameter"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="219:13" pos:end="219:21">goto <name pos:start="219:18" pos:end="219:20">out</name>;</goto>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="227:5" pos:end="235:5"><if pos:start="227:5" pos:end="235:5">if <condition pos:start="227:8" pos:end="227:15">(<expr pos:start="227:9" pos:end="227:14"><operator pos:start="227:9" pos:end="227:9">!</operator><name pos:start="227:10" pos:end="227:14">quiet</name></expr>)</condition> <block pos:start="227:17" pos:end="235:5">{<block_content pos:start="229:9" pos:end="233:17">

        <expr_stmt pos:start="229:9" pos:end="229:58"><expr pos:start="229:9" pos:end="229:57"><call pos:start="229:9" pos:end="229:57"><name pos:start="229:9" pos:end="229:14">printf</name><argument_list pos:start="229:15" pos:end="229:57">(<argument pos:start="229:16" pos:end="229:41"><expr pos:start="229:16" pos:end="229:41"><literal type="string" pos:start="229:16" pos:end="229:41">"Formatting '%s', fmt=%s "</literal></expr></argument>, <argument pos:start="229:44" pos:end="229:51"><expr pos:start="229:44" pos:end="229:51"><name pos:start="229:44" pos:end="229:51">filename</name></expr></argument>, <argument pos:start="229:54" pos:end="229:56"><expr pos:start="229:54" pos:end="229:56"><name pos:start="229:54" pos:end="229:56">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:39"><expr pos:start="231:9" pos:end="231:38"><call pos:start="231:9" pos:end="231:38"><name pos:start="231:9" pos:end="231:31">print_option_parameters</name><argument_list pos:start="231:32" pos:end="231:38">(<argument pos:start="231:33" pos:end="231:37"><expr pos:start="231:33" pos:end="231:37"><name pos:start="231:33" pos:end="231:37">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:17"><expr pos:start="233:9" pos:end="233:16"><call pos:start="233:9" pos:end="233:16"><name pos:start="233:9" pos:end="233:12">puts</name><argument_list pos:start="233:13" pos:end="233:16">(<argument pos:start="233:14" pos:end="233:15"><expr pos:start="233:14" pos:end="233:15"><literal type="string" pos:start="233:14" pos:end="233:15">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:44"><expr pos:start="237:5" pos:end="237:43"><name pos:start="237:5" pos:end="237:7">ret</name> <operator pos:start="237:9" pos:end="237:9">=</operator> <call pos:start="237:11" pos:end="237:43"><name pos:start="237:11" pos:end="237:21">bdrv_create</name><argument_list pos:start="237:22" pos:end="237:43">(<argument pos:start="237:23" pos:end="237:25"><expr pos:start="237:23" pos:end="237:25"><name pos:start="237:23" pos:end="237:25">drv</name></expr></argument>, <argument pos:start="237:28" pos:end="237:35"><expr pos:start="237:28" pos:end="237:35"><name pos:start="237:28" pos:end="237:35">filename</name></expr></argument>, <argument pos:start="237:38" pos:end="237:42"><expr pos:start="237:38" pos:end="237:42"><name pos:start="237:38" pos:end="237:42">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="239:5" pos:end="261:5"><if pos:start="239:5" pos:end="261:5">if <condition pos:start="239:8" pos:end="239:16">(<expr pos:start="239:9" pos:end="239:15"><name pos:start="239:9" pos:end="239:11">ret</name> <operator pos:start="239:13" pos:end="239:13">&lt;</operator> <literal type="number" pos:start="239:15" pos:end="239:15">0</literal></expr>)</condition> <block pos:start="239:18" pos:end="261:5">{<block_content pos:start="241:9" pos:end="259:9">

        <if_stmt pos:start="241:9" pos:end="259:9"><if pos:start="241:9" pos:end="247:9">if <condition pos:start="241:12" pos:end="241:28">(<expr pos:start="241:13" pos:end="241:27"><name pos:start="241:13" pos:end="241:15">ret</name> <operator pos:start="241:17" pos:end="241:18">==</operator> <operator pos:start="241:20" pos:end="241:20">-</operator><name pos:start="241:21" pos:end="241:27">ENOTSUP</name></expr>)</condition> <block pos:start="241:30" pos:end="247:9">{<block_content pos:start="243:13" pos:end="245:53">

            <expr_stmt pos:start="243:13" pos:end="245:53"><expr pos:start="243:13" pos:end="245:52"><call pos:start="243:13" pos:end="245:52"><name pos:start="243:13" pos:end="243:22">error_setg</name><argument_list pos:start="243:23" pos:end="245:52">(<argument pos:start="243:24" pos:end="243:27"><expr pos:start="243:24" pos:end="243:27"><name pos:start="243:24" pos:end="243:27">errp</name></expr></argument>,<argument pos:start="243:29" pos:end="245:46"><expr pos:start="243:29" pos:end="245:46"><literal type="string" pos:start="243:29" pos:end="243:80">"Formatting or formatting option not supported for "</literal>

                            <literal type="string" pos:start="245:29" pos:end="245:46">"file format '%s'"</literal></expr></argument>, <argument pos:start="245:49" pos:end="245:51"><expr pos:start="245:49" pos:end="245:51"><name pos:start="245:49" pos:end="245:51">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="247:11" pos:end="253:9">else if <condition pos:start="247:19" pos:end="247:33">(<expr pos:start="247:20" pos:end="247:32"><name pos:start="247:20" pos:end="247:22">ret</name> <operator pos:start="247:24" pos:end="247:25">==</operator> <operator pos:start="247:27" pos:end="247:27">-</operator><name pos:start="247:28" pos:end="247:32">EFBIG</name></expr>)</condition> <block pos:start="247:35" pos:end="253:9">{<block_content pos:start="249:13" pos:end="251:28">

            <expr_stmt pos:start="249:13" pos:end="251:28"><expr pos:start="249:13" pos:end="251:27"><call pos:start="249:13" pos:end="251:27"><name pos:start="249:13" pos:end="249:22">error_setg</name><argument_list pos:start="249:23" pos:end="251:27">(<argument pos:start="249:24" pos:end="249:27"><expr pos:start="249:24" pos:end="249:27"><name pos:start="249:24" pos:end="249:27">errp</name></expr></argument>, <argument pos:start="249:30" pos:end="249:79"><expr pos:start="249:30" pos:end="249:79"><literal type="string" pos:start="249:30" pos:end="249:79">"The image size is too large for file format '%s'"</literal></expr></argument>,

                       <argument pos:start="251:24" pos:end="251:26"><expr pos:start="251:24" pos:end="251:26"><name pos:start="251:24" pos:end="251:26">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="253:11" pos:end="259:9">else <block pos:start="253:16" pos:end="259:9">{<block_content pos:start="255:13" pos:end="257:39">

            <expr_stmt pos:start="255:13" pos:end="257:39"><expr pos:start="255:13" pos:end="257:38"><call pos:start="255:13" pos:end="257:38"><name pos:start="255:13" pos:end="255:22">error_setg</name><argument_list pos:start="255:23" pos:end="257:38">(<argument pos:start="255:24" pos:end="255:27"><expr pos:start="255:24" pos:end="255:27"><name pos:start="255:24" pos:end="255:27">errp</name></expr></argument>, <argument pos:start="255:30" pos:end="255:62"><expr pos:start="255:30" pos:end="255:62"><literal type="string" pos:start="255:30" pos:end="255:62">"%s: error while creating %s: %s"</literal></expr></argument>, <argument pos:start="255:65" pos:end="255:72"><expr pos:start="255:65" pos:end="255:72"><name pos:start="255:65" pos:end="255:72">filename</name></expr></argument>, <argument pos:start="255:75" pos:end="255:77"><expr pos:start="255:75" pos:end="255:77"><name pos:start="255:75" pos:end="255:77">fmt</name></expr></argument>,

                       <argument pos:start="257:24" pos:end="257:37"><expr pos:start="257:24" pos:end="257:37"><call pos:start="257:24" pos:end="257:37"><name pos:start="257:24" pos:end="257:31">strerror</name><argument_list pos:start="257:32" pos:end="257:37">(<argument pos:start="257:33" pos:end="257:36"><expr pos:start="257:33" pos:end="257:36"><operator pos:start="257:33" pos:end="257:33">-</operator><name pos:start="257:34" pos:end="257:36">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="265:1" pos:end="265:4"><name pos:start="265:1" pos:end="265:3">out</name>:</label>

    <expr_stmt pos:start="267:5" pos:end="267:43"><expr pos:start="267:5" pos:end="267:42"><call pos:start="267:5" pos:end="267:42"><name pos:start="267:5" pos:end="267:26">free_option_parameters</name><argument_list pos:start="267:27" pos:end="267:42">(<argument pos:start="267:28" pos:end="267:41"><expr pos:start="267:28" pos:end="267:41"><name pos:start="267:28" pos:end="267:41">create_options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:34"><expr pos:start="269:5" pos:end="269:33"><call pos:start="269:5" pos:end="269:33"><name pos:start="269:5" pos:end="269:26">free_option_parameters</name><argument_list pos:start="269:27" pos:end="269:33">(<argument pos:start="269:28" pos:end="269:32"><expr pos:start="269:28" pos:end="269:32"><name pos:start="269:28" pos:end="269:32">param</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="273:5" pos:end="277:5"><if pos:start="273:5" pos:end="277:5">if <condition pos:start="273:8" pos:end="273:11">(<expr pos:start="273:9" pos:end="273:10"><name pos:start="273:9" pos:end="273:10">bs</name></expr>)</condition> <block pos:start="273:13" pos:end="277:5">{<block_content pos:start="275:9" pos:end="275:24">

        <expr_stmt pos:start="275:9" pos:end="275:24"><expr pos:start="275:9" pos:end="275:23"><call pos:start="275:9" pos:end="275:23"><name pos:start="275:9" pos:end="275:19">bdrv_delete</name><argument_list pos:start="275:20" pos:end="275:23">(<argument pos:start="275:21" pos:end="275:22"><expr pos:start="275:21" pos:end="275:22"><name pos:start="275:21" pos:end="275:22">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
