<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24788.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">show_programs</name><parameter_list pos:start="1:26" pos:end="1:69">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:39">WriterContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">w</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:68"><decl pos:start="1:45" pos:end="1:68"><type pos:start="1:45" pos:end="1:68"><name pos:start="1:45" pos:end="1:59">AVFormatContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:68">fmt_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:35">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:56"><expr pos:start="9:5" pos:end="9:55"><call pos:start="9:5" pos:end="9:55"><name pos:start="9:5" pos:end="9:31">writer_print_section_header</name><argument_list pos:start="9:32" pos:end="9:55">(<argument pos:start="9:33" pos:end="9:33"><expr pos:start="9:33" pos:end="9:33"><name pos:start="9:33" pos:end="9:33">w</name></expr></argument>, <argument pos:start="9:36" pos:end="9:54"><expr pos:start="9:36" pos:end="9:54"><name pos:start="9:36" pos:end="9:54">SECTION_ID_PROGRAMS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="11:5" pos:end="21:5">for <control pos:start="11:9" pos:end="11:46">(<init pos:start="11:10" pos:end="11:15"><expr pos:start="11:10" pos:end="11:14"><name pos:start="11:10" pos:end="11:10">i</name> <operator pos:start="11:12" pos:end="11:12">=</operator> <literal type="number" pos:start="11:14" pos:end="11:14">0</literal></expr>;</init> <condition pos:start="11:17" pos:end="11:41"><expr pos:start="11:17" pos:end="11:40"><name pos:start="11:17" pos:end="11:17">i</name> <operator pos:start="11:19" pos:end="11:19">&lt;</operator> <name pos:start="11:21" pos:end="11:40"><name pos:start="11:21" pos:end="11:27">fmt_ctx</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:40">nb_programs</name></name></expr>;</condition> <incr pos:start="11:43" pos:end="11:45"><expr pos:start="11:43" pos:end="11:45"><name pos:start="11:43" pos:end="11:43">i</name><operator pos:start="11:44" pos:end="11:45">++</operator></expr></incr>)</control> <block pos:start="11:48" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:42">

        <decl_stmt pos:start="13:9" pos:end="13:50"><decl pos:start="13:9" pos:end="13:49"><type pos:start="13:9" pos:end="13:19"><name pos:start="13:9" pos:end="13:17">AVProgram</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">program</name> <init pos:start="13:28" pos:end="13:49">= <expr pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:49"><name pos:start="13:30" pos:end="13:36">fmt_ctx</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:46">programs</name><index pos:start="13:47" pos:end="13:49">[<expr pos:start="13:48" pos:end="13:48"><name pos:start="13:48" pos:end="13:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="15:9" pos:end="17:21"><if pos:start="15:9" pos:end="17:21">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><operator pos:start="15:13" pos:end="15:13">!</operator><name pos:start="15:14" pos:end="15:20">program</name></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:21"><block_content pos:start="17:13" pos:end="17:21">

            <continue pos:start="17:13" pos:end="17:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:42"><expr pos:start="19:9" pos:end="19:41"><call pos:start="19:9" pos:end="19:41"><name pos:start="19:9" pos:end="19:20">show_program</name><argument_list pos:start="19:21" pos:end="19:41">(<argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><name pos:start="19:22" pos:end="19:22">w</name></expr></argument>, <argument pos:start="19:25" pos:end="19:31"><expr pos:start="19:25" pos:end="19:31"><name pos:start="19:25" pos:end="19:31">fmt_ctx</name></expr></argument>, <argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40">program</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><call pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:31">writer_print_section_footer</name><argument_list pos:start="23:32" pos:end="23:34">(<argument pos:start="23:33" pos:end="23:33"><expr pos:start="23:33" pos:end="23:33"><name pos:start="23:33" pos:end="23:33">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
