<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/10518.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">FWCfgState</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:30">fw_cfg_init_io_dma</name><parameter_list pos:start="1:31" pos:end="3:53">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:39">uint32_t</name></type> <name pos:start="1:41" pos:end="1:46">iobase</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:67"><decl pos:start="1:49" pos:end="1:67"><type pos:start="1:49" pos:end="1:67"><name pos:start="1:49" pos:end="1:56">uint32_t</name></type> <name pos:start="1:58" pos:end="1:67">dma_iobase</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:52"><decl pos:start="3:33" pos:end="3:52"><type pos:start="3:33" pos:end="3:52"><name pos:start="3:33" pos:end="3:44">AddressSpace</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:52">dma_as</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:21">sbd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">FWCfgIoState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:21">ios</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:14">FWCfgState</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:22">dma_requested</name> <init pos:start="15:24" pos:end="15:45">= <expr pos:start="15:26" pos:end="15:45"><name pos:start="15:26" pos:end="15:35">dma_iobase</name> <operator pos:start="15:37" pos:end="15:38">&amp;&amp;</operator> <name pos:start="15:40" pos:end="15:45">dma_as</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:44"><expr pos:start="19:5" pos:end="19:43"><name pos:start="19:5" pos:end="19:7">dev</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <call pos:start="19:11" pos:end="19:43"><name pos:start="19:11" pos:end="19:21">qdev_create</name><argument_list pos:start="19:22" pos:end="19:43">(<argument pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:26"><name pos:start="19:23" pos:end="19:26">NULL</name></expr></argument>, <argument pos:start="19:29" pos:end="19:42"><expr pos:start="19:29" pos:end="19:42"><name pos:start="19:29" pos:end="19:42">TYPE_FW_CFG_IO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:22">dma_requested</name></expr>)</condition> <block pos:start="21:25" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:53">

        <expr_stmt pos:start="23:9" pos:end="23:53"><expr pos:start="23:9" pos:end="23:52"><call pos:start="23:9" pos:end="23:52"><name pos:start="23:9" pos:end="23:25">qdev_prop_set_bit</name><argument_list pos:start="23:26" pos:end="23:52">(<argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">dev</name></expr></argument>, <argument pos:start="23:32" pos:end="23:44"><expr pos:start="23:32" pos:end="23:44"><literal type="string" pos:start="23:32" pos:end="23:44">"dma_enabled"</literal></expr></argument>, <argument pos:start="23:47" pos:end="23:51"><expr pos:start="23:47" pos:end="23:51"><name pos:start="23:47" pos:end="23:51">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:22"><expr pos:start="29:5" pos:end="29:21"><call pos:start="29:5" pos:end="29:21"><name pos:start="29:5" pos:end="29:16">fw_cfg_init1</name><argument_list pos:start="29:17" pos:end="29:21">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:30"><expr pos:start="33:5" pos:end="33:29"><name pos:start="33:5" pos:end="33:7">sbd</name> <operator pos:start="33:9" pos:end="33:9">=</operator> <call pos:start="33:11" pos:end="33:29"><name pos:start="33:11" pos:end="33:24">SYS_BUS_DEVICE</name><argument_list pos:start="33:25" pos:end="33:29">(<argument pos:start="33:26" pos:end="33:28"><expr pos:start="33:26" pos:end="33:28"><name pos:start="33:26" pos:end="33:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:7">ios</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <call pos:start="35:11" pos:end="35:24"><name pos:start="35:11" pos:end="35:19">FW_CFG_IO</name><argument_list pos:start="35:20" pos:end="35:24">(<argument pos:start="35:21" pos:end="35:23"><expr pos:start="35:21" pos:end="35:23"><name pos:start="35:21" pos:end="35:23">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:49"><expr pos:start="37:5" pos:end="37:48"><call pos:start="37:5" pos:end="37:48"><name pos:start="37:5" pos:end="37:17">sysbus_add_io</name><argument_list pos:start="37:18" pos:end="37:48">(<argument pos:start="37:19" pos:end="37:21"><expr pos:start="37:19" pos:end="37:21"><name pos:start="37:19" pos:end="37:21">sbd</name></expr></argument>, <argument pos:start="37:24" pos:end="37:29"><expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:29">iobase</name></expr></argument>, <argument pos:start="37:32" pos:end="37:47"><expr pos:start="37:32" pos:end="37:47"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:47"><name pos:start="37:33" pos:end="37:35">ios</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:47">comb_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <call pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:14">FW_CFG</name><argument_list pos:start="41:15" pos:end="41:19">(<argument pos:start="41:16" pos:end="41:18"><expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:23">(<expr pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">dma_enabled</name></name></expr>)</condition> <block pos:start="45:25" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:54">

        <comment type="block" pos:start="47:9" pos:end="47:43">/* 64 bits for the address field */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:17">dma_as</name></name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:26">dma_as</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:24"><expr pos:start="51:9" pos:end="51:23"><name pos:start="51:9" pos:end="51:19"><name pos:start="51:9" pos:end="51:9">s</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:19">dma_addr</name></name> <operator pos:start="51:21" pos:end="51:21">=</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:54"><expr pos:start="53:9" pos:end="53:53"><call pos:start="53:9" pos:end="53:53"><name pos:start="53:9" pos:end="53:21">sysbus_add_io</name><argument_list pos:start="53:22" pos:end="53:53">(<argument pos:start="53:23" pos:end="53:25"><expr pos:start="53:23" pos:end="53:25"><name pos:start="53:23" pos:end="53:25">sbd</name></expr></argument>, <argument pos:start="53:28" pos:end="53:37"><expr pos:start="53:28" pos:end="53:37"><name pos:start="53:28" pos:end="53:37">dma_iobase</name></expr></argument>, <argument pos:start="53:40" pos:end="53:52"><expr pos:start="53:40" pos:end="53:52"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:52"><name pos:start="53:41" pos:end="53:41">s</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:52">dma_iomem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><name pos:start="59:12" pos:end="59:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
