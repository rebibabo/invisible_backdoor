<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5223.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:25"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:25">bt_device_s</name></name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:40">bt_device_add</name><parameter_list pos:start="1:41" pos:end="1:57">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:53"><specifier pos:start="1:42" pos:end="1:46">const</specifier> <name pos:start="1:48" pos:end="1:51">char</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">opt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:28"><name pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:26">bt_scatternet_s</name></name> <modifier pos:start="5:28" pos:end="5:28">*</modifier></type><name pos:start="5:29" pos:end="5:32">vlan</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">vlan_id</name> <init pos:start="7:17" pos:end="7:19">= <expr pos:start="7:19" pos:end="7:19"><literal type="number" pos:start="7:19" pos:end="7:19">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14">endp</name> <init pos:start="9:16" pos:end="9:38">= <expr pos:start="9:18" pos:end="9:38"><call pos:start="9:18" pos:end="9:38"><name pos:start="9:18" pos:end="9:23">strstr</name><argument_list pos:start="9:24" pos:end="9:38">(<argument pos:start="9:25" pos:end="9:27"><expr pos:start="9:25" pos:end="9:27"><name pos:start="9:25" pos:end="9:27">opt</name></expr></argument>, <argument pos:start="9:30" pos:end="9:37"><expr pos:start="9:30" pos:end="9:37"><literal type="string" pos:start="9:30" pos:end="9:37">",vlan="</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">len</name> <init pos:start="11:13" pos:end="11:51">= <expr pos:start="11:15" pos:end="11:51"><operator pos:start="11:15" pos:end="11:15">(</operator><ternary pos:start="11:16" pos:end="11:46"><condition pos:start="11:16" pos:end="11:21"><expr pos:start="11:16" pos:end="11:19"><name pos:start="11:16" pos:end="11:19">endp</name></expr> ?</condition><then pos:start="11:23" pos:end="11:32"> <expr pos:start="11:23" pos:end="11:32"><name pos:start="11:23" pos:end="11:26">endp</name> <operator pos:start="11:28" pos:end="11:28">-</operator> <name pos:start="11:30" pos:end="11:32">opt</name></expr> </then><else pos:start="11:34" pos:end="11:46">: <expr pos:start="11:36" pos:end="11:46"><call pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:41">strlen</name><argument_list pos:start="11:42" pos:end="11:46">(<argument pos:start="11:43" pos:end="11:45"><expr pos:start="11:43" pos:end="11:45"><name pos:start="11:43" pos:end="11:45">opt</name></expr></argument>)</argument_list></call></expr></else></ternary><operator pos:start="11:47" pos:end="11:47">)</operator> <operator pos:start="11:49" pos:end="11:49">+</operator> <literal type="number" pos:start="11:51" pos:end="11:51">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:20"><name pos:start="13:10" pos:end="13:16">devname</name><index pos:start="13:17" pos:end="13:20">[<expr pos:start="13:18" pos:end="13:19"><literal type="number" pos:start="13:18" pos:end="13:19">10</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><call pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:11">pstrcpy</name><argument_list pos:start="17:12" pos:end="17:52">(<argument pos:start="17:13" pos:end="17:19"><expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:19">devname</name></expr></argument>, <argument pos:start="17:22" pos:end="17:46"><expr pos:start="17:22" pos:end="17:46"><call pos:start="17:22" pos:end="17:46"><name pos:start="17:22" pos:end="17:24">MIN</name><argument_list pos:start="17:25" pos:end="17:46">(<argument pos:start="17:26" pos:end="17:40"><expr pos:start="17:26" pos:end="17:40"><sizeof pos:start="17:26" pos:end="17:40">sizeof<argument_list pos:start="17:32" pos:end="17:40">(<argument pos:start="17:33" pos:end="17:39"><expr pos:start="17:33" pos:end="17:39"><name pos:start="17:33" pos:end="17:39">devname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:43" pos:end="17:45"><expr pos:start="17:43" pos:end="17:45"><name pos:start="17:43" pos:end="17:45">len</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:49" pos:end="17:51"><expr pos:start="17:49" pos:end="17:51"><name pos:start="17:49" pos:end="17:51">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="33:5">if <condition pos:start="21:8" pos:end="21:13">(<expr pos:start="21:9" pos:end="21:12"><name pos:start="21:9" pos:end="21:12">endp</name></expr>)</condition> <block pos:start="21:15" pos:end="33:5">{<block_content pos:start="23:9" pos:end="31:9">

        <expr_stmt pos:start="23:9" pos:end="23:45"><expr pos:start="23:9" pos:end="23:44"><name pos:start="23:9" pos:end="23:15">vlan_id</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:44"><name pos:start="23:19" pos:end="23:24">strtol</name><argument_list pos:start="23:25" pos:end="23:44">(<argument pos:start="23:26" pos:end="23:33"><expr pos:start="23:26" pos:end="23:33"><name pos:start="23:26" pos:end="23:29">endp</name> <operator pos:start="23:31" pos:end="23:31">+</operator> <literal type="number" pos:start="23:33" pos:end="23:33">6</literal></expr></argument>, <argument pos:start="23:36" pos:end="23:40"><expr pos:start="23:36" pos:end="23:40"><operator pos:start="23:36" pos:end="23:36">&amp;</operator><name pos:start="23:37" pos:end="23:40">endp</name></expr></argument>, <argument pos:start="23:43" pos:end="23:43"><expr pos:start="23:43" pos:end="23:43"><literal type="number" pos:start="23:43" pos:end="23:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:18">(<expr pos:start="25:13" pos:end="25:17"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:17">endp</name></expr>)</condition> <block pos:start="25:20" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:21">

            <expr_stmt pos:start="27:13" pos:end="27:70"><expr pos:start="27:13" pos:end="27:69"><call pos:start="27:13" pos:end="27:69"><name pos:start="27:13" pos:end="27:19">fprintf</name><argument_list pos:start="27:20" pos:end="27:69">(<argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:26">stderr</name></expr></argument>, <argument pos:start="27:29" pos:end="27:68"><expr pos:start="27:29" pos:end="27:68"><literal type="string" pos:start="27:29" pos:end="27:68">"qemu: unrecognised bluetooth vlan Id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:21">return <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:38"><expr pos:start="37:5" pos:end="37:37"><name pos:start="37:5" pos:end="37:8">vlan</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:37"><name pos:start="37:12" pos:end="37:28">qemu_find_bt_vlan</name><argument_list pos:start="37:29" pos:end="37:37">(<argument pos:start="37:30" pos:end="37:36"><expr pos:start="37:30" pos:end="37:36"><name pos:start="37:30" pos:end="37:36">vlan_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:61"><if pos:start="41:5" pos:end="45:61">if <condition pos:start="41:8" pos:end="41:21">(<expr pos:start="41:9" pos:end="41:20"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:20"><name pos:start="41:10" pos:end="41:13">vlan</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:20">slave</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="45:61"><block_content pos:start="43:9" pos:end="45:61">

        <expr_stmt pos:start="43:9" pos:end="45:61"><expr pos:start="43:9" pos:end="45:60"><call pos:start="43:9" pos:end="45:60"><name pos:start="43:9" pos:end="43:15">fprintf</name><argument_list pos:start="43:16" pos:end="45:60">(<argument pos:start="43:17" pos:end="43:22"><expr pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:22">stderr</name></expr></argument>, <argument pos:start="43:25" pos:end="45:50"><expr pos:start="43:25" pos:end="45:50"><literal type="string" pos:start="43:25" pos:end="43:66">"qemu: warning: adding a slave device to "</literal>

                        <literal type="string" pos:start="45:25" pos:end="45:50">"an empty scatternet %i\n"</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:59"><expr pos:start="45:53" pos:end="45:59"><name pos:start="45:53" pos:end="45:59">vlan_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:38"><if pos:start="49:5" pos:end="51:38">if <condition pos:start="49:8" pos:end="49:37">(<expr pos:start="49:9" pos:end="49:36"><operator pos:start="49:9" pos:end="49:9">!</operator><call pos:start="49:10" pos:end="49:36"><name pos:start="49:10" pos:end="49:15">strcmp</name><argument_list pos:start="49:16" pos:end="49:36">(<argument pos:start="49:17" pos:end="49:23"><expr pos:start="49:17" pos:end="49:23"><name pos:start="49:17" pos:end="49:23">devname</name></expr></argument>, <argument pos:start="49:26" pos:end="49:35"><expr pos:start="49:26" pos:end="49:35"><literal type="string" pos:start="49:26" pos:end="49:35">"keyboard"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:38"><block_content pos:start="51:9" pos:end="51:38">

        <return pos:start="51:9" pos:end="51:38">return <expr pos:start="51:16" pos:end="51:37"><call pos:start="51:16" pos:end="51:37"><name pos:start="51:16" pos:end="51:31">bt_keyboard_init</name><argument_list pos:start="51:32" pos:end="51:37">(<argument pos:start="51:33" pos:end="51:36"><expr pos:start="51:33" pos:end="51:36"><name pos:start="51:33" pos:end="51:36">vlan</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:74"><expr pos:start="55:5" pos:end="55:73"><call pos:start="55:5" pos:end="55:73"><name pos:start="55:5" pos:end="55:11">fprintf</name><argument_list pos:start="55:12" pos:end="55:73">(<argument pos:start="55:13" pos:end="55:18"><expr pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">stderr</name></expr></argument>, <argument pos:start="55:21" pos:end="55:63"><expr pos:start="55:21" pos:end="55:63"><literal type="string" pos:start="55:21" pos:end="55:63">"qemu: unsupported bluetooth device `%s'\n"</literal></expr></argument>, <argument pos:start="55:66" pos:end="55:72"><expr pos:start="55:66" pos:end="55:72"><name pos:start="55:66" pos:end="55:72">devname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="57:5" pos:end="57:13">return <expr pos:start="57:12" pos:end="57:12"><literal type="number" pos:start="57:12" pos:end="57:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
