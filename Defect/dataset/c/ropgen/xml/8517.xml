<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8517.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">mpeg_decode_slice</name><parameter_list pos:start="1:29" pos:end="7:55">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, 

                              <parameter pos:start="3:31" pos:end="3:45"><decl pos:start="3:31" pos:end="3:45"><type pos:start="3:31" pos:end="3:45"><name pos:start="3:31" pos:end="3:39">AVPicture</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">pict</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:44"><decl pos:start="5:31" pos:end="5:44"><type pos:start="5:31" pos:end="5:44"><name pos:start="5:31" pos:end="5:33">int</name></type> <name pos:start="5:35" pos:end="5:44">start_code</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:40"><decl pos:start="7:31" pos:end="7:40"><type pos:start="7:31" pos:end="7:40"><name pos:start="7:31" pos:end="7:35">UINT8</name> <modifier pos:start="7:37" pos:end="7:37">*</modifier></type><name pos:start="7:38" pos:end="7:40">buf</name></decl></parameter>, <parameter pos:start="7:43" pos:end="7:54"><decl pos:start="7:43" pos:end="7:54"><type pos:start="7:43" pos:end="7:54"><name pos:start="7:43" pos:end="7:45">int</name></type> <name pos:start="7:47" pos:end="7:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="171:1">{<block_content pos:start="11:5" pos:end="169:5">

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">Mpeg1Context</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:20">s1</name> <init pos:start="11:22" pos:end="11:39">= <expr pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:39"><name pos:start="11:24" pos:end="11:28">avctx</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:42"><decl pos:start="13:5" pos:end="13:41"><type pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:18">MpegEncContext</name> <modifier pos:start="13:20" pos:end="13:20">*</modifier></type><name pos:start="13:21" pos:end="13:21">s</name> <init pos:start="13:23" pos:end="13:41">= <expr pos:start="13:25" pos:end="13:41"><operator pos:start="13:25" pos:end="13:25">&amp;</operator><name pos:start="13:26" pos:end="13:41"><name pos:start="13:26" pos:end="13:27">s1</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:41">mpeg_enc_ctx</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:41"><expr pos:start="19:5" pos:end="19:40"><name pos:start="19:5" pos:end="19:14">start_code</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:28">start_code</name> <operator pos:start="19:30" pos:end="19:30">-</operator> <literal type="number" pos:start="19:32" pos:end="19:32">1</literal><operator pos:start="19:33" pos:end="19:33">)</operator> <operator pos:start="19:35" pos:end="19:35">&amp;</operator> <literal type="number" pos:start="19:37" pos:end="19:40">0xff</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:35">(<expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:18">start_code</name> <operator pos:start="21:20" pos:end="21:21">&gt;=</operator> <name pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:23">s</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:34">mb_height</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:53"><expr pos:start="25:5" pos:end="25:52"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:14">last_dc</name><index pos:start="25:15" pos:end="25:17">[<expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>]</index></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="number" pos:start="25:21" pos:end="25:21">1</literal> <operator pos:start="25:23" pos:end="25:24">&lt;&lt;</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><literal type="number" pos:start="25:27" pos:end="25:29">7</literal> <operator pos:start="25:29" pos:end="25:29">+</operator> <name pos:start="25:31" pos:end="25:51"><name pos:start="25:31" pos:end="25:31">s</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:51">intra_dc_precision</name></name><operator pos:start="25:52" pos:end="25:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:34"><expr pos:start="27:5" pos:end="27:33"><name pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:14">last_dc</name><index pos:start="27:15" pos:end="27:17">[<expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">1</literal></expr>]</index></name> <operator pos:start="27:19" pos:end="27:19">=</operator> <name pos:start="27:21" pos:end="27:33"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:30">last_dc</name><index pos:start="27:31" pos:end="27:33">[<expr pos:start="27:32" pos:end="27:32"><literal type="number" pos:start="27:32" pos:end="27:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:34"><expr pos:start="29:5" pos:end="29:33"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:14">last_dc</name><index pos:start="29:15" pos:end="29:17">[<expr pos:start="29:16" pos:end="29:16"><literal type="number" pos:start="29:16" pos:end="29:16">2</literal></expr>]</index></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <name pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:21">s</name><operator pos:start="29:22" pos:end="29:23">-&gt;</operator><name pos:start="29:24" pos:end="29:30">last_dc</name><index pos:start="29:31" pos:end="29:33">[<expr pos:start="29:32" pos:end="29:32"><literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:46"><expr pos:start="31:5" pos:end="31:45"><call pos:start="31:5" pos:end="31:45"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:45">(<argument pos:start="31:12" pos:end="31:21"><expr pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:21"><name pos:start="31:12" pos:end="31:12">s</name><operator pos:start="31:13" pos:end="31:14">-&gt;</operator><name pos:start="31:15" pos:end="31:21">last_mv</name></name></expr></argument>, <argument pos:start="31:24" pos:end="31:24"><expr pos:start="31:24" pos:end="31:24"><literal type="number" pos:start="31:24" pos:end="31:24">0</literal></expr></argument>, <argument pos:start="31:27" pos:end="31:44"><expr pos:start="31:27" pos:end="31:44"><sizeof pos:start="31:27" pos:end="31:44">sizeof<argument_list pos:start="31:33" pos:end="31:44">(<argument pos:start="31:34" pos:end="31:43"><expr pos:start="31:34" pos:end="31:43"><name pos:start="31:34" pos:end="31:43"><name pos:start="31:34" pos:end="31:34">s</name><operator pos:start="31:35" pos:end="31:36">-&gt;</operator><name pos:start="31:37" pos:end="31:43">last_mv</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:11"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">mb_x</name></name> <operator pos:start="33:13" pos:end="33:13">=</operator> <operator pos:start="33:15" pos:end="33:15">-</operator><literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:25"><expr pos:start="35:5" pos:end="35:24"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">mb_y</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:24">start_code</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:19"><expr pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:14">mb_incr</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:30">/* start frame decoding */</comment>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:23">(<expr pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:22">first_slice</name></name></expr>)</condition> <block pos:start="43:25" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:27">

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:22"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:22">first_slice</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <literal type="number" pos:start="45:26" pos:end="45:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><call pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:23">MPV_frame_start</name><argument_list pos:start="47:24" pos:end="47:26">(<argument pos:start="47:25" pos:end="47:25"><expr pos:start="47:25" pos:end="47:25"><name pos:start="47:25" pos:end="47:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><call pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:17">init_get_bits</name><argument_list pos:start="53:18" pos:end="53:40">(<argument pos:start="53:19" pos:end="53:24"><expr pos:start="53:19" pos:end="53:24"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:24"><name pos:start="53:20" pos:end="53:20">s</name><operator pos:start="53:21" pos:end="53:22">-&gt;</operator><name pos:start="53:23" pos:end="53:24">gb</name></name></expr></argument>, <argument pos:start="53:27" pos:end="53:29"><expr pos:start="53:27" pos:end="53:29"><name pos:start="53:27" pos:end="53:29">buf</name></expr></argument>, <argument pos:start="53:32" pos:end="53:39"><expr pos:start="53:32" pos:end="53:39"><name pos:start="53:32" pos:end="53:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:13">qscale</name></name> <operator pos:start="57:15" pos:end="57:15">=</operator> <call pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:26">get_qscale</name><argument_list pos:start="57:27" pos:end="57:29">(<argument pos:start="57:28" pos:end="57:28"><expr pos:start="57:28" pos:end="57:28"><name pos:start="57:28" pos:end="57:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="59:5" pos:end="59:26">/* extra slice info */</comment>

    <while pos:start="61:5" pos:end="65:5">while <condition pos:start="61:11" pos:end="61:34">(<expr pos:start="61:12" pos:end="61:33"><call pos:start="61:12" pos:end="61:28"><name pos:start="61:12" pos:end="61:20">get_bits1</name><argument_list pos:start="61:21" pos:end="61:28">(<argument pos:start="61:22" pos:end="61:27"><expr pos:start="61:22" pos:end="61:27"><operator pos:start="61:22" pos:end="61:22">&amp;</operator><name pos:start="61:23" pos:end="61:27"><name pos:start="61:23" pos:end="61:23">s</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:27">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="61:30" pos:end="61:31">!=</operator> <literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>)</condition> <block pos:start="61:36" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:29">

        <expr_stmt pos:start="63:9" pos:end="63:29"><expr pos:start="63:9" pos:end="63:28"><call pos:start="63:9" pos:end="63:28"><name pos:start="63:9" pos:end="63:17">skip_bits</name><argument_list pos:start="63:18" pos:end="63:28">(<argument pos:start="63:19" pos:end="63:24"><expr pos:start="63:19" pos:end="63:24"><operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:24">gb</name></name></expr></argument>, <argument pos:start="63:27" pos:end="63:27"><expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>



    <for pos:start="69:5" pos:end="89:5">for<control pos:start="69:8" pos:end="69:11">(<init pos:start="69:9" pos:end="69:9">;</init><condition pos:start="69:10" pos:end="69:10">;</condition><incr/>)</control> <block pos:start="69:13" pos:end="89:5">{<block_content pos:start="71:9" pos:end="87:35">

        <expr_stmt pos:start="71:9" pos:end="71:34"><expr pos:start="71:9" pos:end="71:33"><call pos:start="71:9" pos:end="71:33"><name pos:start="71:9" pos:end="71:20">clear_blocks</name><argument_list pos:start="71:21" pos:end="71:33">(<argument pos:start="71:22" pos:end="71:32"><expr pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:32"><name pos:start="71:22" pos:end="71:22">s</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:29">block</name><index pos:start="71:30" pos:end="71:32">[<expr pos:start="71:31" pos:end="71:31"><literal type="number" pos:start="71:31" pos:end="71:31">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:17"><expr pos:start="73:9" pos:end="73:16"><call pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:14">emms_c</name><argument_list pos:start="73:15" pos:end="73:16">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:42"><expr pos:start="75:9" pos:end="75:41"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:41"><name pos:start="75:15" pos:end="75:28">mpeg_decode_mb</name><argument_list pos:start="75:29" pos:end="75:41">(<argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">s</name></expr></argument>, <argument pos:start="75:33" pos:end="75:40"><expr pos:start="75:33" pos:end="75:40"><name pos:start="75:33" pos:end="75:40"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:40">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:33"><expr pos:start="77:9" pos:end="77:32"><call pos:start="77:9" pos:end="77:32"><name pos:start="77:9" pos:end="77:15">dprintf</name><argument_list pos:start="77:16" pos:end="77:32">(<argument pos:start="77:17" pos:end="77:26"><expr pos:start="77:17" pos:end="77:26"><literal type="string" pos:start="77:17" pos:end="77:26">"ret=%d\n"</literal></expr></argument>, <argument pos:start="77:29" pos:end="77:31"><expr pos:start="77:29" pos:end="77:31"><name pos:start="77:29" pos:end="77:31">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:22"><if pos:start="79:9" pos:end="81:22">if <condition pos:start="79:12" pos:end="79:20">(<expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:15">ret</name> <operator pos:start="79:17" pos:end="79:17">&lt;</operator> <literal type="number" pos:start="79:19" pos:end="79:19">0</literal></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:22"><block_content pos:start="81:13" pos:end="81:22">

            <return pos:start="81:13" pos:end="81:22">return <expr pos:start="81:20" pos:end="81:21"><operator pos:start="81:20" pos:end="81:20">-</operator><literal type="number" pos:start="81:21" pos:end="81:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="83:9" pos:end="85:18"><if pos:start="83:9" pos:end="85:18">if <condition pos:start="83:12" pos:end="83:21">(<expr pos:start="83:13" pos:end="83:20"><name pos:start="83:13" pos:end="83:15">ret</name> <operator pos:start="83:17" pos:end="83:18">==</operator> <literal type="number" pos:start="83:20" pos:end="83:20">1</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:18"><block_content pos:start="85:13" pos:end="85:18">

            <break pos:start="85:13" pos:end="85:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:35"><expr pos:start="87:9" pos:end="87:34"><call pos:start="87:9" pos:end="87:34"><name pos:start="87:9" pos:end="87:21">MPV_decode_mb</name><argument_list pos:start="87:22" pos:end="87:34">(<argument pos:start="87:23" pos:end="87:23"><expr pos:start="87:23" pos:end="87:23"><name pos:start="87:23" pos:end="87:23">s</name></expr></argument>, <argument pos:start="87:26" pos:end="87:33"><expr pos:start="87:26" pos:end="87:33"><name pos:start="87:26" pos:end="87:33"><name pos:start="87:26" pos:end="87:26">s</name><operator pos:start="87:27" pos:end="87:28">-&gt;</operator><name pos:start="87:29" pos:end="87:33">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="91:5" pos:end="91:13"><expr pos:start="91:5" pos:end="91:12"><call pos:start="91:5" pos:end="91:12"><name pos:start="91:5" pos:end="91:10">emms_c</name><argument_list pos:start="91:11" pos:end="91:12">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="95:5" pos:end="95:30">/* end of slice reached */</comment>

    <if_stmt pos:start="97:5" pos:end="169:5"><if pos:start="97:5" pos:end="165:5">if <condition pos:start="97:8" pos:end="99:38">(<expr pos:start="97:9" pos:end="99:37"><name pos:start="97:9" pos:end="97:15"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:15">mb_x</name></name> <operator pos:start="97:17" pos:end="97:18">==</operator> <operator pos:start="97:20" pos:end="97:20">(</operator><name pos:start="97:21" pos:end="97:31"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:31">mb_width</name></name> <operator pos:start="97:33" pos:end="97:33">-</operator> <literal type="number" pos:start="97:35" pos:end="97:35">1</literal><operator pos:start="97:36" pos:end="97:36">)</operator> <operator pos:start="97:38" pos:end="97:39">&amp;&amp;</operator>

        <name pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:9">s</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:15">mb_y</name></name> <operator pos:start="99:17" pos:end="99:18">==</operator> <operator pos:start="99:20" pos:end="99:20">(</operator><name pos:start="99:21" pos:end="99:32"><name pos:start="99:21" pos:end="99:21">s</name><operator pos:start="99:22" pos:end="99:23">-&gt;</operator><name pos:start="99:24" pos:end="99:32">mb_height</name></name> <operator pos:start="99:34" pos:end="99:34">-</operator> <literal type="number" pos:start="99:36" pos:end="99:36">1</literal><operator pos:start="99:37" pos:end="99:37">)</operator></expr>)</condition> <block pos:start="99:40" pos:end="165:5">{<block_content pos:start="103:9" pos:end="163:9">

        <comment type="block" pos:start="101:9" pos:end="101:26">/* end of image */</comment>

        <decl_stmt pos:start="103:9" pos:end="103:24"><decl pos:start="103:9" pos:end="103:23"><type pos:start="103:9" pos:end="103:16"><name pos:start="103:9" pos:end="103:13">UINT8</name> <modifier pos:start="103:15" pos:end="103:15">*</modifier><modifier pos:start="103:16" pos:end="103:16">*</modifier></type><name pos:start="103:17" pos:end="103:23">picture</name></decl>;</decl_stmt>



        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><call pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:21">MPV_frame_end</name><argument_list pos:start="107:22" pos:end="107:24">(<argument pos:start="107:23" pos:end="107:23"><expr pos:start="107:23" pos:end="107:23"><name pos:start="107:23" pos:end="107:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="111:9" pos:end="111:54">/* XXX: incorrect reported qscale for mpeg2 */</comment>

        <if_stmt pos:start="113:9" pos:end="141:9"><if pos:start="113:9" pos:end="119:9">if <condition pos:start="113:12" pos:end="113:35">(<expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:24"><name pos:start="113:13" pos:end="113:13">s</name><operator pos:start="113:14" pos:end="113:15">-&gt;</operator><name pos:start="113:16" pos:end="113:24">pict_type</name></name> <operator pos:start="113:26" pos:end="113:27">==</operator> <name pos:start="113:29" pos:end="113:34">B_TYPE</name></expr>)</condition> <block pos:start="113:37" pos:end="119:9">{<block_content pos:start="115:13" pos:end="117:39">

            <expr_stmt pos:start="115:13" pos:end="115:41"><expr pos:start="115:13" pos:end="115:40"><name pos:start="115:13" pos:end="115:19">picture</name> <operator pos:start="115:21" pos:end="115:21">=</operator> <name pos:start="115:23" pos:end="115:40"><name pos:start="115:23" pos:end="115:23">s</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:40">current_picture</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:39"><expr pos:start="117:13" pos:end="117:38"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:17">avctx</name><operator pos:start="117:18" pos:end="117:19">-&gt;</operator><name pos:start="117:20" pos:end="117:26">quality</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:38"><name pos:start="117:30" pos:end="117:30">s</name><operator pos:start="117:31" pos:end="117:32">-&gt;</operator><name pos:start="117:33" pos:end="117:38">qscale</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="141:9">else <block pos:start="119:16" pos:end="141:9">{<block_content pos:start="125:13" pos:end="139:32">

            <comment type="block" pos:start="121:13" pos:end="121:55">/* latency of 1 frame for I and P frames */</comment>

            <comment type="block" pos:start="123:13" pos:end="123:63">/* XXX: use another variable than picture_number */</comment>

            <if_stmt pos:start="125:13" pos:end="135:13"><if pos:start="125:13" pos:end="129:13">if <condition pos:start="125:16" pos:end="125:39">(<expr pos:start="125:17" pos:end="125:38"><name pos:start="125:17" pos:end="125:33"><name pos:start="125:17" pos:end="125:17">s</name><operator pos:start="125:18" pos:end="125:19">-&gt;</operator><name pos:start="125:20" pos:end="125:33">picture_number</name></name> <operator pos:start="125:35" pos:end="125:36">==</operator> <literal type="number" pos:start="125:38" pos:end="125:38">0</literal></expr>)</condition> <block pos:start="125:41" pos:end="129:13">{<block_content pos:start="127:17" pos:end="127:31">

                <expr_stmt pos:start="127:17" pos:end="127:31"><expr pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:23">picture</name> <operator pos:start="127:25" pos:end="127:25">=</operator> <name pos:start="127:27" pos:end="127:30">NULL</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="129:15" pos:end="135:13">else <block pos:start="129:20" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:48">

                <expr_stmt pos:start="131:17" pos:end="131:42"><expr pos:start="131:17" pos:end="131:41"><name pos:start="131:17" pos:end="131:23">picture</name> <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:41"><name pos:start="131:27" pos:end="131:27">s</name><operator pos:start="131:28" pos:end="131:29">-&gt;</operator><name pos:start="131:30" pos:end="131:41">last_picture</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:48"><expr pos:start="133:17" pos:end="133:47"><name pos:start="133:17" pos:end="133:30"><name pos:start="133:17" pos:end="133:21">avctx</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:30">quality</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <name pos:start="133:34" pos:end="133:47"><name pos:start="133:34" pos:end="133:34">s</name><operator pos:start="133:35" pos:end="133:36">-&gt;</operator><name pos:start="133:37" pos:end="133:47">last_qscale</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:39"><expr pos:start="137:13" pos:end="137:38"><name pos:start="137:13" pos:end="137:26"><name pos:start="137:13" pos:end="137:13">s</name><operator pos:start="137:14" pos:end="137:15">-&gt;</operator><name pos:start="137:16" pos:end="137:26">last_qscale</name></name> <operator pos:start="137:28" pos:end="137:28">=</operator> <name pos:start="137:30" pos:end="137:38"><name pos:start="137:30" pos:end="137:30">s</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:38">qscale</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:32"><expr pos:start="139:13" pos:end="139:31"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:13">s</name><operator pos:start="139:14" pos:end="139:15">-&gt;</operator><name pos:start="139:16" pos:end="139:29">picture_number</name></name><operator pos:start="139:30" pos:end="139:31">++</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="143:9" pos:end="163:9"><if pos:start="143:9" pos:end="159:9">if <condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><name pos:start="143:13" pos:end="143:19">picture</name></expr>)</condition> <block pos:start="143:22" pos:end="159:9">{<block_content pos:start="145:13" pos:end="157:21">

            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:25"><name pos:start="145:13" pos:end="145:16">pict</name><operator pos:start="145:17" pos:end="145:18">-&gt;</operator><name pos:start="145:19" pos:end="145:22">data</name><index pos:start="145:23" pos:end="145:25">[<expr pos:start="145:24" pos:end="145:24"><literal type="number" pos:start="145:24" pos:end="145:24">0</literal></expr>]</index></name> <operator pos:start="145:27" pos:end="145:27">=</operator> <name pos:start="145:29" pos:end="145:38"><name pos:start="145:29" pos:end="145:35">picture</name><index pos:start="145:36" pos:end="145:38">[<expr pos:start="145:37" pos:end="145:37"><literal type="number" pos:start="145:37" pos:end="145:37">0</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:39"><expr pos:start="147:13" pos:end="147:38"><name pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:16">pict</name><operator pos:start="147:17" pos:end="147:18">-&gt;</operator><name pos:start="147:19" pos:end="147:22">data</name><index pos:start="147:23" pos:end="147:25">[<expr pos:start="147:24" pos:end="147:24"><literal type="number" pos:start="147:24" pos:end="147:24">1</literal></expr>]</index></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <name pos:start="147:29" pos:end="147:38"><name pos:start="147:29" pos:end="147:35">picture</name><index pos:start="147:36" pos:end="147:38">[<expr pos:start="147:37" pos:end="147:37"><literal type="number" pos:start="147:37" pos:end="147:37">1</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:39"><expr pos:start="149:13" pos:end="149:38"><name pos:start="149:13" pos:end="149:25"><name pos:start="149:13" pos:end="149:16">pict</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:22">data</name><index pos:start="149:23" pos:end="149:25">[<expr pos:start="149:24" pos:end="149:24"><literal type="number" pos:start="149:24" pos:end="149:24">2</literal></expr>]</index></name> <operator pos:start="149:27" pos:end="149:27">=</operator> <name pos:start="149:29" pos:end="149:38"><name pos:start="149:29" pos:end="149:35">picture</name><index pos:start="149:36" pos:end="149:38">[<expr pos:start="149:37" pos:end="149:37"><literal type="number" pos:start="149:37" pos:end="149:37">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:44"><expr pos:start="151:13" pos:end="151:43"><name pos:start="151:13" pos:end="151:29"><name pos:start="151:13" pos:end="151:16">pict</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:26">linesize</name><index pos:start="151:27" pos:end="151:29">[<expr pos:start="151:28" pos:end="151:28"><literal type="number" pos:start="151:28" pos:end="151:28">0</literal></expr>]</index></name> <operator pos:start="151:31" pos:end="151:31">=</operator> <name pos:start="151:33" pos:end="151:43"><name pos:start="151:33" pos:end="151:33">s</name><operator pos:start="151:34" pos:end="151:35">-&gt;</operator><name pos:start="151:36" pos:end="151:43">linesize</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:48"><expr pos:start="153:13" pos:end="153:47"><name pos:start="153:13" pos:end="153:29"><name pos:start="153:13" pos:end="153:16">pict</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:26">linesize</name><index pos:start="153:27" pos:end="153:29">[<expr pos:start="153:28" pos:end="153:28"><literal type="number" pos:start="153:28" pos:end="153:28">1</literal></expr>]</index></name> <operator pos:start="153:31" pos:end="153:31">=</operator> <name pos:start="153:33" pos:end="153:43"><name pos:start="153:33" pos:end="153:33">s</name><operator pos:start="153:34" pos:end="153:35">-&gt;</operator><name pos:start="153:36" pos:end="153:43">linesize</name></name> <operator pos:start="153:45" pos:end="153:45">/</operator> <literal type="number" pos:start="153:47" pos:end="153:47">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:48"><expr pos:start="155:13" pos:end="155:47"><name pos:start="155:13" pos:end="155:29"><name pos:start="155:13" pos:end="155:16">pict</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:26">linesize</name><index pos:start="155:27" pos:end="155:29">[<expr pos:start="155:28" pos:end="155:28"><literal type="number" pos:start="155:28" pos:end="155:28">2</literal></expr>]</index></name> <operator pos:start="155:31" pos:end="155:31">=</operator> <name pos:start="155:33" pos:end="155:43"><name pos:start="155:33" pos:end="155:33">s</name><operator pos:start="155:34" pos:end="155:35">-&gt;</operator><name pos:start="155:36" pos:end="155:43">linesize</name></name> <operator pos:start="155:45" pos:end="155:45">/</operator> <literal type="number" pos:start="155:47" pos:end="155:47">2</literal></expr>;</expr_stmt>

            <return pos:start="157:13" pos:end="157:21">return <expr pos:start="157:20" pos:end="157:20"><literal type="number" pos:start="157:20" pos:end="157:20">1</literal></expr>;</return>

        </block_content>}</block></if> <else pos:start="159:11" pos:end="163:9">else <block pos:start="159:16" pos:end="163:9">{<block_content pos:start="161:13" pos:end="161:21">

            <return pos:start="161:13" pos:end="161:21">return <expr pos:start="161:20" pos:end="161:20"><literal type="number" pos:start="161:20" pos:end="161:20">0</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="165:7" pos:end="169:5">else <block pos:start="165:12" pos:end="169:5">{<block_content pos:start="167:9" pos:end="167:17">

        <return pos:start="167:9" pos:end="167:17">return <expr pos:start="167:16" pos:end="167:16"><literal type="number" pos:start="167:16" pos:end="167:16">0</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
