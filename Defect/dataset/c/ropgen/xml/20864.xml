<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20864.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">nsv_read_close</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="7:5" pos:end="47:13">

<comment type="block" pos:start="5:1" pos:end="5:16">/*     int i; */</comment>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">NSVContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">nsv</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:37"><expr pos:start="11:5" pos:end="11:36"><call pos:start="11:5" pos:end="11:36"><name pos:start="11:5" pos:end="11:12">av_freep</name><argument_list pos:start="11:13" pos:end="11:36">(<argument pos:start="11:14" pos:end="11:35"><expr pos:start="11:14" pos:end="11:35"><operator pos:start="11:14" pos:end="11:14">&amp;</operator><name pos:start="11:15" pos:end="11:35"><name pos:start="11:15" pos:end="11:17">nsv</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:35">nsvs_file_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="46:0"><expr pos:start="13:5" pos:end="13:35"><call pos:start="13:5" pos:end="13:35"><name pos:start="13:5" pos:end="13:12">av_freep</name><argument_list pos:start="13:13" pos:end="13:35">(<argument pos:start="13:14" pos:end="13:34"><expr pos:start="13:14" pos:end="13:34"><operator pos:start="13:14" pos:end="13:14">&amp;</operator><name pos:start="13:15" pos:end="13:34"><name pos:start="13:15" pos:end="13:17">nsv</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:34">nsvs_timestamps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>







<cpp:if pos:start="21:1" pos:end="21:5">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:5"><literal type="number" pos:start="21:5" pos:end="21:5">0</literal></expr></cpp:if>



    for(i=0;i&lt;s-&gt;nb_streams;i++) {

        AVStream *st = s-&gt;streams[i];

        NSVStream *ast = st-&gt;priv_data;

        if(ast){

            av_free(ast-&gt;index_entries);

            av_free(ast);

        }

        av_free(st-&gt;codec-&gt;palctrl);

    }



<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function></unit>
