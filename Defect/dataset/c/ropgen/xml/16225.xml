<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16225.c" pos:tabs="8"><function pos:start="1:1" pos:end="275:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">smacker_read_header</name><parameter_list pos:start="1:31" pos:end="1:50">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:49">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="275:1">{<block_content pos:start="5:5" pos:end="273:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">SmackerContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:23">smk</name> <init pos:start="7:25" pos:end="7:38">= <expr pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:38"><name pos:start="7:27" pos:end="7:27">s</name><operator pos:start="7:28" pos:end="7:29">-&gt;</operator><name pos:start="7:30" pos:end="7:38">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>, <decl pos:start="9:19" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:25"><name pos:start="9:20" pos:end="9:22">ast</name><index pos:start="9:23" pos:end="9:25">[<expr pos:start="9:24" pos:end="9:24"><literal type="number" pos:start="9:24" pos:end="9:24">7</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>, <decl pos:start="11:12" pos:end="11:14"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:14">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">tbase</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:31">/* read and check header */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:7">smk</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:14">magic</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <call pos:start="19:18" pos:end="19:30"><name pos:start="19:18" pos:end="19:26">avio_rl32</name><argument_list pos:start="19:27" pos:end="19:30">(<argument pos:start="19:28" pos:end="19:29"><expr pos:start="19:28" pos:end="19:29"><name pos:start="19:28" pos:end="19:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:35"><if pos:start="21:5" pos:end="23:35">if <condition pos:start="21:8" pos:end="21:91">(<expr pos:start="21:9" pos:end="21:90"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">smk</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">magic</name></name> <operator pos:start="21:20" pos:end="21:21">!=</operator> <call pos:start="21:23" pos:end="21:47"><name pos:start="21:23" pos:end="21:27">MKTAG</name><argument_list pos:start="21:28" pos:end="21:47">(<argument pos:start="21:29" pos:end="21:31"><expr pos:start="21:29" pos:end="21:31"><literal type="char" pos:start="21:29" pos:end="21:31">'S'</literal></expr></argument>, <argument pos:start="21:34" pos:end="21:36"><expr pos:start="21:34" pos:end="21:36"><literal type="char" pos:start="21:34" pos:end="21:36">'M'</literal></expr></argument>, <argument pos:start="21:39" pos:end="21:41"><expr pos:start="21:39" pos:end="21:41"><literal type="char" pos:start="21:39" pos:end="21:41">'K'</literal></expr></argument>, <argument pos:start="21:44" pos:end="21:46"><expr pos:start="21:44" pos:end="21:46"><literal type="char" pos:start="21:44" pos:end="21:46">'2'</literal></expr></argument>)</argument_list></call> <operator pos:start="21:49" pos:end="21:50">&amp;&amp;</operator> <name pos:start="21:52" pos:end="21:61"><name pos:start="21:52" pos:end="21:54">smk</name><operator pos:start="21:55" pos:end="21:56">-&gt;</operator><name pos:start="21:57" pos:end="21:61">magic</name></name> <operator pos:start="21:63" pos:end="21:64">!=</operator> <call pos:start="21:66" pos:end="21:90"><name pos:start="21:66" pos:end="21:70">MKTAG</name><argument_list pos:start="21:71" pos:end="21:90">(<argument pos:start="21:72" pos:end="21:74"><expr pos:start="21:72" pos:end="21:74"><literal type="char" pos:start="21:72" pos:end="21:74">'S'</literal></expr></argument>, <argument pos:start="21:77" pos:end="21:79"><expr pos:start="21:77" pos:end="21:79"><literal type="char" pos:start="21:77" pos:end="21:79">'M'</literal></expr></argument>, <argument pos:start="21:82" pos:end="21:84"><expr pos:start="21:82" pos:end="21:84"><literal type="char" pos:start="21:82" pos:end="21:84">'K'</literal></expr></argument>, <argument pos:start="21:87" pos:end="21:89"><expr pos:start="21:87" pos:end="21:89"><literal type="char" pos:start="21:87" pos:end="21:89">'4'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:35"><block_content pos:start="23:9" pos:end="23:35">

        <return pos:start="23:9" pos:end="23:35">return <expr pos:start="23:16" pos:end="23:34"><name pos:start="23:16" pos:end="23:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:31"><expr pos:start="25:5" pos:end="25:30"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:7">smk</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:14">width</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:30"><name pos:start="25:18" pos:end="25:26">avio_rl32</name><argument_list pos:start="25:27" pos:end="25:30">(<argument pos:start="25:28" pos:end="25:29"><expr pos:start="25:28" pos:end="25:29"><name pos:start="25:28" pos:end="25:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:7">smk</name><operator pos:start="27:8" pos:end="27:9">-&gt;</operator><name pos:start="27:10" pos:end="27:15">height</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:31"><name pos:start="27:19" pos:end="27:27">avio_rl32</name><argument_list pos:start="27:28" pos:end="27:31">(<argument pos:start="27:29" pos:end="27:30"><expr pos:start="27:29" pos:end="27:30"><name pos:start="27:29" pos:end="27:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:32"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:7">smk</name><operator pos:start="29:8" pos:end="29:9">-&gt;</operator><name pos:start="29:10" pos:end="29:15">frames</name></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <call pos:start="29:19" pos:end="29:31"><name pos:start="29:19" pos:end="29:27">avio_rl32</name><argument_list pos:start="29:28" pos:end="29:31">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:42"><expr pos:start="31:5" pos:end="31:41"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:7">smk</name><operator pos:start="31:8" pos:end="31:9">-&gt;</operator><name pos:start="31:10" pos:end="31:16">pts_inc</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:27">int32_t</name><operator pos:start="31:28" pos:end="31:28">)</operator><call pos:start="31:29" pos:end="31:41"><name pos:start="31:29" pos:end="31:37">avio_rl32</name><argument_list pos:start="31:38" pos:end="31:41">(<argument pos:start="31:39" pos:end="31:40"><expr pos:start="31:39" pos:end="31:40"><name pos:start="31:39" pos:end="31:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:14"><name pos:start="33:5" pos:end="33:7">smk</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:14">flags</name></name> <operator pos:start="33:16" pos:end="33:16">=</operator> <call pos:start="33:18" pos:end="33:30"><name pos:start="33:18" pos:end="33:26">avio_rl32</name><argument_list pos:start="33:27" pos:end="33:30">(<argument pos:start="33:28" pos:end="33:29"><expr pos:start="33:28" pos:end="33:29"><name pos:start="33:28" pos:end="33:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:22"><if pos:start="35:5" pos:end="37:22">if<condition pos:start="35:7" pos:end="35:44">(<expr pos:start="35:8" pos:end="35:43"><name pos:start="35:8" pos:end="35:17"><name pos:start="35:8" pos:end="35:10">smk</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">flags</name></name> <operator pos:start="35:19" pos:end="35:19">&amp;</operator> <name pos:start="35:21" pos:end="35:43">SMACKER_FLAG_RING_FRAME</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:22"><block_content pos:start="37:9" pos:end="37:22">

        <expr_stmt pos:start="37:9" pos:end="37:22"><expr pos:start="37:9" pos:end="37:21"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:11">smk</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:19">frames</name></name><operator pos:start="37:20" pos:end="37:21">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <for pos:start="39:5" pos:end="41:38">for<control pos:start="39:8" pos:end="39:26">(<init pos:start="39:9" pos:end="39:14"><expr pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:9">i</name> <operator pos:start="39:11" pos:end="39:11">=</operator> <literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>;</init> <condition pos:start="39:16" pos:end="39:21"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">i</name> <operator pos:start="39:18" pos:end="39:18">&lt;</operator> <literal type="number" pos:start="39:20" pos:end="39:20">7</literal></expr>;</condition> <incr pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:23">i</name><operator pos:start="39:24" pos:end="39:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="41:9" pos:end="41:38"><block_content pos:start="41:9" pos:end="41:38">

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:21"><name pos:start="41:9" pos:end="41:11">smk</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:18">audio</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><name pos:start="41:20" pos:end="41:20">i</name></expr>]</index></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:33">avio_rl32</name><argument_list pos:start="41:34" pos:end="41:37">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="43:5" pos:end="43:34"><expr pos:start="43:5" pos:end="43:33"><name pos:start="43:5" pos:end="43:17"><name pos:start="43:5" pos:end="43:7">smk</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:17">treesize</name></name> <operator pos:start="43:19" pos:end="43:19">=</operator> <call pos:start="43:21" pos:end="43:33"><name pos:start="43:21" pos:end="43:29">avio_rl32</name><argument_list pos:start="43:30" pos:end="43:33">(<argument pos:start="43:31" pos:end="43:32"><expr pos:start="43:31" pos:end="43:32"><name pos:start="43:31" pos:end="43:32">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:35">(<expr pos:start="47:8" pos:end="47:34"><name pos:start="47:8" pos:end="47:20"><name pos:start="47:8" pos:end="47:10">smk</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:20">treesize</name></name> <operator pos:start="47:22" pos:end="47:23">&gt;=</operator> <name pos:start="47:25" pos:end="47:32">UINT_MAX</name><operator pos:start="47:33" pos:end="47:33">/</operator><literal type="number" pos:start="47:34" pos:end="47:34">4</literal></expr>)</condition><block pos:start="47:36" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:35"> <comment type="line" pos:start="47:38" pos:end="47:111">// smk-&gt;treesize + 16 must not overflow (this check is probably redundant)</comment>

        <expr_stmt pos:start="49:9" pos:end="49:56"><expr pos:start="49:9" pos:end="49:55"><call pos:start="49:9" pos:end="49:55"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="49:55">(<argument pos:start="49:16" pos:end="49:16"><expr pos:start="49:16" pos:end="49:16"><name pos:start="49:16" pos:end="49:16">s</name></expr></argument>, <argument pos:start="49:19" pos:end="49:30"><expr pos:start="49:19" pos:end="49:30"><name pos:start="49:19" pos:end="49:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:33" pos:end="49:54"><expr pos:start="49:33" pos:end="49:54"><literal type="string" pos:start="49:33" pos:end="49:54">"treesize too large\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:35">return <expr pos:start="51:16" pos:end="51:34"><name pos:start="51:16" pos:end="51:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<comment type="line" pos:start="57:1" pos:end="57:37">//FIXME remove extradata "rebuilding"</comment>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:7">smk</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:18">mmap_size</name></name> <operator pos:start="59:20" pos:end="59:20">=</operator> <call pos:start="59:22" pos:end="59:34"><name pos:start="59:22" pos:end="59:30">avio_rl32</name><argument_list pos:start="59:31" pos:end="59:34">(<argument pos:start="59:32" pos:end="59:33"><expr pos:start="59:32" pos:end="59:33"><name pos:start="59:32" pos:end="59:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:35"><expr pos:start="61:5" pos:end="61:34"><name pos:start="61:5" pos:end="61:18"><name pos:start="61:5" pos:end="61:7">smk</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:18">mclr_size</name></name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:34"><name pos:start="61:22" pos:end="61:30">avio_rl32</name><argument_list pos:start="61:31" pos:end="61:34">(<argument pos:start="61:32" pos:end="61:33"><expr pos:start="61:32" pos:end="61:33"><name pos:start="61:32" pos:end="61:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:35"><expr pos:start="63:5" pos:end="63:34"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">smk</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:18">full_size</name></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:34"><name pos:start="63:22" pos:end="63:30">avio_rl32</name><argument_list pos:start="63:31" pos:end="63:34">(<argument pos:start="63:32" pos:end="63:33"><expr pos:start="63:32" pos:end="63:33"><name pos:start="63:32" pos:end="63:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:35"><expr pos:start="65:5" pos:end="65:34"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:7">smk</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:18">type_size</name></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <call pos:start="65:22" pos:end="65:34"><name pos:start="65:22" pos:end="65:30">avio_rl32</name><argument_list pos:start="65:31" pos:end="65:34">(<argument pos:start="65:32" pos:end="65:33"><expr pos:start="65:32" pos:end="65:33"><name pos:start="65:32" pos:end="65:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="73:5">for<control pos:start="67:8" pos:end="67:26">(<init pos:start="67:9" pos:end="67:14"><expr pos:start="67:9" pos:end="67:13"><name pos:start="67:9" pos:end="67:9">i</name> <operator pos:start="67:11" pos:end="67:11">=</operator> <literal type="number" pos:start="67:13" pos:end="67:13">0</literal></expr>;</init> <condition pos:start="67:16" pos:end="67:21"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:16">i</name> <operator pos:start="67:18" pos:end="67:18">&lt;</operator> <literal type="number" pos:start="67:20" pos:end="67:20">7</literal></expr>;</condition> <incr pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:23">i</name><operator pos:start="67:24" pos:end="67:25">++</operator></expr></incr>)</control> <block pos:start="67:28" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:37">

        <expr_stmt pos:start="69:9" pos:end="69:39"><expr pos:start="69:9" pos:end="69:38"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:11">smk</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:18">rates</name><index pos:start="69:19" pos:end="69:21">[<expr pos:start="69:20" pos:end="69:20"><name pos:start="69:20" pos:end="69:20">i</name></expr>]</index></name>  <operator pos:start="69:24" pos:end="69:24">=</operator> <call pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:34">avio_rl24</name><argument_list pos:start="69:35" pos:end="69:38">(<argument pos:start="69:36" pos:end="69:37"><expr pos:start="69:36" pos:end="69:37"><name pos:start="69:36" pos:end="69:37">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:37"><expr pos:start="71:9" pos:end="71:36"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:11">smk</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:19">aflags</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">i</name></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <call pos:start="71:26" pos:end="71:36"><name pos:start="71:26" pos:end="71:32">avio_r8</name><argument_list pos:start="71:33" pos:end="71:36">(<argument pos:start="71:34" pos:end="71:35"><expr pos:start="71:34" pos:end="71:35"><name pos:start="71:34" pos:end="71:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="75:5" pos:end="75:29"><expr pos:start="75:5" pos:end="75:28"><name pos:start="75:5" pos:end="75:12"><name pos:start="75:5" pos:end="75:7">smk</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:12">pad</name></name> <operator pos:start="75:14" pos:end="75:14">=</operator> <call pos:start="75:16" pos:end="75:28"><name pos:start="75:16" pos:end="75:24">avio_rl32</name><argument_list pos:start="75:25" pos:end="75:28">(<argument pos:start="75:26" pos:end="75:27"><expr pos:start="75:26" pos:end="75:27"><name pos:start="75:26" pos:end="75:27">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="77:5" pos:end="77:20">/* setup data */</comment>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:30">(<expr pos:start="79:8" pos:end="79:29"><name pos:start="79:8" pos:end="79:18"><name pos:start="79:8" pos:end="79:10">smk</name><operator pos:start="79:11" pos:end="79:12">-&gt;</operator><name pos:start="79:13" pos:end="79:18">frames</name></name> <operator pos:start="79:20" pos:end="79:20">&gt;</operator> <literal type="number" pos:start="79:22" pos:end="79:29">0xFFFFFF</literal></expr>)</condition> <block pos:start="79:32" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:35">

        <expr_stmt pos:start="81:9" pos:end="81:70"><expr pos:start="81:9" pos:end="81:69"><call pos:start="81:9" pos:end="81:69"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:69">(<argument pos:start="81:16" pos:end="81:16"><expr pos:start="81:16" pos:end="81:16"><name pos:start="81:16" pos:end="81:16">s</name></expr></argument>, <argument pos:start="81:19" pos:end="81:30"><expr pos:start="81:19" pos:end="81:30"><name pos:start="81:19" pos:end="81:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:33" pos:end="81:55"><expr pos:start="81:33" pos:end="81:55"><literal type="string" pos:start="81:33" pos:end="81:55">"Too many frames: %i\n"</literal></expr></argument>, <argument pos:start="81:58" pos:end="81:68"><expr pos:start="81:58" pos:end="81:68"><name pos:start="81:58" pos:end="81:68"><name pos:start="81:58" pos:end="81:60">smk</name><operator pos:start="81:61" pos:end="81:62">-&gt;</operator><name pos:start="81:63" pos:end="81:68">frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:35">return <expr pos:start="83:16" pos:end="83:34"><name pos:start="83:16" pos:end="83:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:47"><expr pos:start="87:5" pos:end="87:46"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:7">smk</name><operator pos:start="87:8" pos:end="87:9">-&gt;</operator><name pos:start="87:10" pos:end="87:17">frm_size</name></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <call pos:start="87:21" pos:end="87:46"><name pos:start="87:21" pos:end="87:29">av_malloc</name><argument_list pos:start="87:30" pos:end="87:46">(<argument pos:start="87:31" pos:end="87:45"><expr pos:start="87:31" pos:end="87:45"><name pos:start="87:31" pos:end="87:41"><name pos:start="87:31" pos:end="87:33">smk</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:41">frames</name></name> <operator pos:start="87:43" pos:end="87:43">*</operator> <literal type="number" pos:start="87:45" pos:end="87:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:44"><expr pos:start="89:5" pos:end="89:43"><name pos:start="89:5" pos:end="89:18"><name pos:start="89:5" pos:end="89:7">smk</name><operator pos:start="89:8" pos:end="89:9">-&gt;</operator><name pos:start="89:10" pos:end="89:18">frm_flags</name></name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:43"><name pos:start="89:22" pos:end="89:30">av_malloc</name><argument_list pos:start="89:31" pos:end="89:43">(<argument pos:start="89:32" pos:end="89:42"><expr pos:start="89:32" pos:end="89:42"><name pos:start="89:32" pos:end="89:42"><name pos:start="89:32" pos:end="89:34">smk</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:42">frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:61"><expr pos:start="93:5" pos:end="93:60"><name pos:start="93:5" pos:end="93:16"><name pos:start="93:5" pos:end="93:7">smk</name><operator pos:start="93:8" pos:end="93:9">-&gt;</operator><name pos:start="93:10" pos:end="93:16">is_ver4</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <operator pos:start="93:20" pos:end="93:20">(</operator><name pos:start="93:21" pos:end="93:30"><name pos:start="93:21" pos:end="93:23">smk</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:30">magic</name></name> <operator pos:start="93:32" pos:end="93:33">!=</operator> <call pos:start="93:35" pos:end="93:59"><name pos:start="93:35" pos:end="93:39">MKTAG</name><argument_list pos:start="93:40" pos:end="93:59">(<argument pos:start="93:41" pos:end="93:43"><expr pos:start="93:41" pos:end="93:43"><literal type="char" pos:start="93:41" pos:end="93:43">'S'</literal></expr></argument>, <argument pos:start="93:46" pos:end="93:48"><expr pos:start="93:46" pos:end="93:48"><literal type="char" pos:start="93:46" pos:end="93:48">'M'</literal></expr></argument>, <argument pos:start="93:51" pos:end="93:53"><expr pos:start="93:51" pos:end="93:53"><literal type="char" pos:start="93:51" pos:end="93:53">'K'</literal></expr></argument>, <argument pos:start="93:56" pos:end="93:58"><expr pos:start="93:56" pos:end="93:58"><literal type="char" pos:start="93:56" pos:end="93:58">'2'</literal></expr></argument>)</argument_list></call><operator pos:start="93:60" pos:end="93:60">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:25">/* read frame info */</comment>

    <for pos:start="99:5" pos:end="103:5">for<control pos:start="99:8" pos:end="99:36">(<init pos:start="99:9" pos:end="99:14"><expr pos:start="99:9" pos:end="99:13"><name pos:start="99:9" pos:end="99:9">i</name> <operator pos:start="99:11" pos:end="99:11">=</operator> <literal type="number" pos:start="99:13" pos:end="99:13">0</literal></expr>;</init> <condition pos:start="99:16" pos:end="99:31"><expr pos:start="99:16" pos:end="99:30"><name pos:start="99:16" pos:end="99:16">i</name> <operator pos:start="99:18" pos:end="99:18">&lt;</operator> <name pos:start="99:20" pos:end="99:30"><name pos:start="99:20" pos:end="99:22">smk</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:30">frames</name></name></expr>;</condition> <incr pos:start="99:33" pos:end="99:35"><expr pos:start="99:33" pos:end="99:35"><name pos:start="99:33" pos:end="99:33">i</name><operator pos:start="99:34" pos:end="99:35">++</operator></expr></incr>)</control> <block pos:start="99:38" pos:end="103:5">{<block_content pos:start="101:9" pos:end="101:41">

        <expr_stmt pos:start="101:9" pos:end="101:41"><expr pos:start="101:9" pos:end="101:40"><name pos:start="101:9" pos:end="101:24"><name pos:start="101:9" pos:end="101:11">smk</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:21">frm_size</name><index pos:start="101:22" pos:end="101:24">[<expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">i</name></expr>]</index></name> <operator pos:start="101:26" pos:end="101:26">=</operator> <call pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:36">avio_rl32</name><argument_list pos:start="101:37" pos:end="101:40">(<argument pos:start="101:38" pos:end="101:39"><expr pos:start="101:38" pos:end="101:39"><name pos:start="101:38" pos:end="101:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="105:5" pos:end="109:5">for<control pos:start="105:8" pos:end="105:36">(<init pos:start="105:9" pos:end="105:14"><expr pos:start="105:9" pos:end="105:13"><name pos:start="105:9" pos:end="105:9">i</name> <operator pos:start="105:11" pos:end="105:11">=</operator> <literal type="number" pos:start="105:13" pos:end="105:13">0</literal></expr>;</init> <condition pos:start="105:16" pos:end="105:31"><expr pos:start="105:16" pos:end="105:30"><name pos:start="105:16" pos:end="105:16">i</name> <operator pos:start="105:18" pos:end="105:18">&lt;</operator> <name pos:start="105:20" pos:end="105:30"><name pos:start="105:20" pos:end="105:22">smk</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:30">frames</name></name></expr>;</condition> <incr pos:start="105:33" pos:end="105:35"><expr pos:start="105:33" pos:end="105:35"><name pos:start="105:33" pos:end="105:33">i</name><operator pos:start="105:34" pos:end="105:35">++</operator></expr></incr>)</control> <block pos:start="105:38" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:40">

        <expr_stmt pos:start="107:9" pos:end="107:40"><expr pos:start="107:9" pos:end="107:39"><name pos:start="107:9" pos:end="107:25"><name pos:start="107:9" pos:end="107:11">smk</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:22">frm_flags</name><index pos:start="107:23" pos:end="107:25">[<expr pos:start="107:24" pos:end="107:24"><name pos:start="107:24" pos:end="107:24">i</name></expr>]</index></name> <operator pos:start="107:27" pos:end="107:27">=</operator> <call pos:start="107:29" pos:end="107:39"><name pos:start="107:29" pos:end="107:35">avio_r8</name><argument_list pos:start="107:36" pos:end="107:39">(<argument pos:start="107:37" pos:end="107:38"><expr pos:start="107:37" pos:end="107:38"><name pos:start="107:37" pos:end="107:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="113:5" pos:end="113:26">/* init video codec */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:38"><expr pos:start="115:5" pos:end="115:37"><name pos:start="115:5" pos:end="115:6">st</name> <operator pos:start="115:8" pos:end="115:8">=</operator> <call pos:start="115:10" pos:end="115:37"><name pos:start="115:10" pos:end="115:28">avformat_new_stream</name><argument_list pos:start="115:29" pos:end="115:37">(<argument pos:start="115:30" pos:end="115:30"><expr pos:start="115:30" pos:end="115:30"><name pos:start="115:30" pos:end="115:30">s</name></expr></argument>, <argument pos:start="115:33" pos:end="115:36"><expr pos:start="115:33" pos:end="115:36"><name pos:start="115:33" pos:end="115:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="119:31"><if pos:start="117:5" pos:end="119:31">if <condition pos:start="117:8" pos:end="117:12">(<expr pos:start="117:9" pos:end="117:11"><operator pos:start="117:9" pos:end="117:9">!</operator><name pos:start="117:10" pos:end="117:11">st</name></expr>)</condition><block type="pseudo" pos:start="119:9" pos:end="119:31"><block_content pos:start="119:9" pos:end="119:31">

        <return pos:start="119:9" pos:end="119:31">return <expr pos:start="119:16" pos:end="119:30"><call pos:start="119:16" pos:end="119:30"><name pos:start="119:16" pos:end="119:22">AVERROR</name><argument_list pos:start="119:23" pos:end="119:30">(<argument pos:start="119:24" pos:end="119:29"><expr pos:start="119:24" pos:end="119:29"><name pos:start="119:24" pos:end="119:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:32"><expr pos:start="121:5" pos:end="121:31"><name pos:start="121:5" pos:end="121:19"><name pos:start="121:5" pos:end="121:7">smk</name><operator pos:start="121:8" pos:end="121:9">-&gt;</operator><name pos:start="121:10" pos:end="121:19">videoindex</name></name> <operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:31"><name pos:start="121:23" pos:end="121:24">st</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:31">index</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:34"><expr pos:start="123:5" pos:end="123:33"><name pos:start="123:5" pos:end="123:20"><name pos:start="123:5" pos:end="123:6">st</name><operator pos:start="123:7" pos:end="123:8">-&gt;</operator><name pos:start="123:9" pos:end="123:13">codec</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:20">width</name></name> <operator pos:start="123:22" pos:end="123:22">=</operator> <name pos:start="123:24" pos:end="123:33"><name pos:start="123:24" pos:end="123:26">smk</name><operator pos:start="123:27" pos:end="123:28">-&gt;</operator><name pos:start="123:29" pos:end="123:33">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:36"><expr pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:6">st</name><operator pos:start="125:7" pos:end="125:8">-&gt;</operator><name pos:start="125:9" pos:end="125:13">codec</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:21">height</name></name> <operator pos:start="125:23" pos:end="125:23">=</operator> <name pos:start="125:25" pos:end="125:35"><name pos:start="125:25" pos:end="125:27">smk</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:35">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:41"><expr pos:start="127:5" pos:end="127:40"><name pos:start="127:5" pos:end="127:22"><name pos:start="127:5" pos:end="127:6">st</name><operator pos:start="127:7" pos:end="127:8">-&gt;</operator><name pos:start="127:9" pos:end="127:13">codec</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:22">pix_fmt</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <name pos:start="127:26" pos:end="127:40">AV_PIX_FMT_PAL8</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:47"><expr pos:start="129:5" pos:end="129:46"><name pos:start="129:5" pos:end="129:25"><name pos:start="129:5" pos:end="129:6">st</name><operator pos:start="129:7" pos:end="129:8">-&gt;</operator><name pos:start="129:9" pos:end="129:13">codec</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:25">codec_type</name></name> <operator pos:start="129:27" pos:end="129:27">=</operator> <name pos:start="129:29" pos:end="129:46">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:49"><expr pos:start="131:5" pos:end="131:48"><name pos:start="131:5" pos:end="131:23"><name pos:start="131:5" pos:end="131:6">st</name><operator pos:start="131:7" pos:end="131:8">-&gt;</operator><name pos:start="131:9" pos:end="131:13">codec</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:23">codec_id</name></name> <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:48">AV_CODEC_ID_SMACKVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:38"><expr pos:start="133:5" pos:end="133:37"><name pos:start="133:5" pos:end="133:24"><name pos:start="133:5" pos:end="133:6">st</name><operator pos:start="133:7" pos:end="133:8">-&gt;</operator><name pos:start="133:9" pos:end="133:13">codec</name><operator pos:start="133:14" pos:end="133:15">-&gt;</operator><name pos:start="133:16" pos:end="133:24">codec_tag</name></name> <operator pos:start="133:26" pos:end="133:26">=</operator> <name pos:start="133:28" pos:end="133:37"><name pos:start="133:28" pos:end="133:30">smk</name><operator pos:start="133:31" pos:end="133:32">-&gt;</operator><name pos:start="133:33" pos:end="133:37">magic</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="135:5" pos:end="135:50">/* Smacker uses 100000 as internal timebase */</comment>

    <if_stmt pos:start="137:5" pos:end="143:28"><if pos:start="137:5" pos:end="139:37">if<condition pos:start="137:7" pos:end="137:24">(<expr pos:start="137:8" pos:end="137:23"><name pos:start="137:8" pos:end="137:19"><name pos:start="137:8" pos:end="137:10">smk</name><operator pos:start="137:11" pos:end="137:12">-&gt;</operator><name pos:start="137:13" pos:end="137:19">pts_inc</name></name> <operator pos:start="137:21" pos:end="137:21">&lt;</operator> <literal type="number" pos:start="137:23" pos:end="137:23">0</literal></expr>)</condition><block type="pseudo" pos:start="139:9" pos:end="139:37"><block_content pos:start="139:9" pos:end="139:37">

        <expr_stmt pos:start="139:9" pos:end="139:37"><expr pos:start="139:9" pos:end="139:36"><name pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:11">smk</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:20">pts_inc</name></name> <operator pos:start="139:22" pos:end="139:22">=</operator> <operator pos:start="139:24" pos:end="139:24">-</operator><name pos:start="139:25" pos:end="139:36"><name pos:start="139:25" pos:end="139:27">smk</name><operator pos:start="139:28" pos:end="139:29">-&gt;</operator><name pos:start="139:30" pos:end="139:36">pts_inc</name></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="141:5" pos:end="143:28">else<block type="pseudo" pos:start="143:9" pos:end="143:28"><block_content pos:start="143:9" pos:end="143:28">

        <expr_stmt pos:start="143:9" pos:end="143:28"><expr pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:11">smk</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">pts_inc</name></name> <operator pos:start="143:22" pos:end="143:23">*=</operator> <literal type="number" pos:start="143:25" pos:end="143:27">100</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:19"><expr pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:9">tbase</name> <operator pos:start="145:11" pos:end="145:11">=</operator> <literal type="number" pos:start="145:13" pos:end="145:18">100000</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:71"><expr pos:start="147:5" pos:end="147:70"><call pos:start="147:5" pos:end="147:70"><name pos:start="147:5" pos:end="147:13">av_reduce</name><argument_list pos:start="147:14" pos:end="147:70">(<argument pos:start="147:15" pos:end="147:20"><expr pos:start="147:15" pos:end="147:20"><operator pos:start="147:15" pos:end="147:15">&amp;</operator><name pos:start="147:16" pos:end="147:20">tbase</name></expr></argument>, <argument pos:start="147:23" pos:end="147:35"><expr pos:start="147:23" pos:end="147:35"><operator pos:start="147:23" pos:end="147:23">&amp;</operator><name pos:start="147:24" pos:end="147:35"><name pos:start="147:24" pos:end="147:26">smk</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:35">pts_inc</name></name></expr></argument>, <argument pos:start="147:38" pos:end="147:42"><expr pos:start="147:38" pos:end="147:42"><name pos:start="147:38" pos:end="147:42">tbase</name></expr></argument>, <argument pos:start="147:45" pos:end="147:56"><expr pos:start="147:45" pos:end="147:56"><name pos:start="147:45" pos:end="147:56"><name pos:start="147:45" pos:end="147:47">smk</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:56">pts_inc</name></name></expr></argument>, <argument pos:start="147:59" pos:end="147:69"><expr pos:start="147:59" pos:end="147:69"><operator pos:start="147:59" pos:end="147:59">(</operator><literal type="number" pos:start="147:60" pos:end="147:62">1UL</literal><operator pos:start="147:63" pos:end="147:64">&lt;&lt;</operator><literal type="number" pos:start="147:65" pos:end="147:66">31</literal><operator pos:start="147:67" pos:end="147:67">)</operator><operator pos:start="147:68" pos:end="147:68">-</operator><literal type="number" pos:start="147:69" pos:end="147:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:53"><expr pos:start="149:5" pos:end="149:52"><call pos:start="149:5" pos:end="149:52"><name pos:start="149:5" pos:end="149:23">avpriv_set_pts_info</name><argument_list pos:start="149:24" pos:end="149:52">(<argument pos:start="149:25" pos:end="149:26"><expr pos:start="149:25" pos:end="149:26"><name pos:start="149:25" pos:end="149:26">st</name></expr></argument>, <argument pos:start="149:29" pos:end="149:30"><expr pos:start="149:29" pos:end="149:30"><literal type="number" pos:start="149:29" pos:end="149:30">33</literal></expr></argument>, <argument pos:start="149:33" pos:end="149:44"><expr pos:start="149:33" pos:end="149:44"><name pos:start="149:33" pos:end="149:44"><name pos:start="149:33" pos:end="149:35">smk</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:44">pts_inc</name></name></expr></argument>, <argument pos:start="149:47" pos:end="149:51"><expr pos:start="149:47" pos:end="149:51"><name pos:start="149:47" pos:end="149:51">tbase</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:31"><expr pos:start="151:5" pos:end="151:30"><name pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:6">st</name><operator pos:start="151:7" pos:end="151:8">-&gt;</operator><name pos:start="151:9" pos:end="151:16">duration</name></name> <operator pos:start="151:18" pos:end="151:18">=</operator> <name pos:start="151:20" pos:end="151:30"><name pos:start="151:20" pos:end="151:22">smk</name><operator pos:start="151:23" pos:end="151:24">-&gt;</operator><name pos:start="151:25" pos:end="151:30">frames</name></name></expr>;</expr_stmt>

    <comment type="block" pos:start="153:5" pos:end="153:39">/* handle possible audio streams */</comment>

    <for pos:start="155:5" pos:end="219:5">for<control pos:start="155:8" pos:end="155:26">(<init pos:start="155:9" pos:end="155:14"><expr pos:start="155:9" pos:end="155:13"><name pos:start="155:9" pos:end="155:9">i</name> <operator pos:start="155:11" pos:end="155:11">=</operator> <literal type="number" pos:start="155:13" pos:end="155:13">0</literal></expr>;</init> <condition pos:start="155:16" pos:end="155:21"><expr pos:start="155:16" pos:end="155:20"><name pos:start="155:16" pos:end="155:16">i</name> <operator pos:start="155:18" pos:end="155:18">&lt;</operator> <literal type="number" pos:start="155:20" pos:end="155:20">7</literal></expr>;</condition> <incr pos:start="155:23" pos:end="155:25"><expr pos:start="155:23" pos:end="155:25"><name pos:start="155:23" pos:end="155:23">i</name><operator pos:start="155:24" pos:end="155:25">++</operator></expr></incr>)</control> <block pos:start="155:28" pos:end="219:5">{<block_content pos:start="157:9" pos:end="217:9">

        <expr_stmt pos:start="157:9" pos:end="157:29"><expr pos:start="157:9" pos:end="157:28"><name pos:start="157:9" pos:end="157:23"><name pos:start="157:9" pos:end="157:11">smk</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:20">indexes</name><index pos:start="157:21" pos:end="157:23">[<expr pos:start="157:22" pos:end="157:22"><name pos:start="157:22" pos:end="157:22">i</name></expr>]</index></name> <operator pos:start="157:25" pos:end="157:25">=</operator> <operator pos:start="157:27" pos:end="157:27">-</operator><literal type="number" pos:start="157:28" pos:end="157:28">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="159:9" pos:end="217:9"><if pos:start="159:9" pos:end="217:9">if <condition pos:start="159:12" pos:end="159:26">(<expr pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:25"><name pos:start="159:13" pos:end="159:15">smk</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:22">rates</name><index pos:start="159:23" pos:end="159:25">[<expr pos:start="159:24" pos:end="159:24"><name pos:start="159:24" pos:end="159:24">i</name></expr>]</index></name></expr>)</condition> <block pos:start="159:28" pos:end="217:9">{<block_content pos:start="161:13" pos:end="215:90">

            <expr_stmt pos:start="161:13" pos:end="161:50"><expr pos:start="161:13" pos:end="161:49"><name pos:start="161:13" pos:end="161:18"><name pos:start="161:13" pos:end="161:15">ast</name><index pos:start="161:16" pos:end="161:18">[<expr pos:start="161:17" pos:end="161:17"><name pos:start="161:17" pos:end="161:17">i</name></expr>]</index></name> <operator pos:start="161:20" pos:end="161:20">=</operator> <call pos:start="161:22" pos:end="161:49"><name pos:start="161:22" pos:end="161:40">avformat_new_stream</name><argument_list pos:start="161:41" pos:end="161:49">(<argument pos:start="161:42" pos:end="161:42"><expr pos:start="161:42" pos:end="161:42"><name pos:start="161:42" pos:end="161:42">s</name></expr></argument>, <argument pos:start="161:45" pos:end="161:48"><expr pos:start="161:45" pos:end="161:48"><name pos:start="161:45" pos:end="161:48">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="165:39"><if pos:start="163:13" pos:end="165:39">if <condition pos:start="163:16" pos:end="163:24">(<expr pos:start="163:17" pos:end="163:23"><operator pos:start="163:17" pos:end="163:17">!</operator><name pos:start="163:18" pos:end="163:23"><name pos:start="163:18" pos:end="163:20">ast</name><index pos:start="163:21" pos:end="163:23">[<expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:39"><block_content pos:start="165:17" pos:end="165:39">

                <return pos:start="165:17" pos:end="165:39">return <expr pos:start="165:24" pos:end="165:38"><call pos:start="165:24" pos:end="165:38"><name pos:start="165:24" pos:end="165:30">AVERROR</name><argument_list pos:start="165:31" pos:end="165:38">(<argument pos:start="165:32" pos:end="165:37"><expr pos:start="165:32" pos:end="165:37"><name pos:start="165:32" pos:end="165:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:44"><expr pos:start="167:13" pos:end="167:43"><name pos:start="167:13" pos:end="167:27"><name pos:start="167:13" pos:end="167:15">smk</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:24">indexes</name><index pos:start="167:25" pos:end="167:27">[<expr pos:start="167:26" pos:end="167:26"><name pos:start="167:26" pos:end="167:26">i</name></expr>]</index></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:36"><name pos:start="167:31" pos:end="167:33">ast</name><index pos:start="167:34" pos:end="167:36">[<expr pos:start="167:35" pos:end="167:35"><name pos:start="167:35" pos:end="167:35">i</name></expr>]</index></name><operator pos:start="167:37" pos:end="167:38">-&gt;</operator><name pos:start="167:39" pos:end="167:43">index</name></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:59"><expr pos:start="169:13" pos:end="169:58"><name pos:start="169:13" pos:end="169:18"><name pos:start="169:13" pos:end="169:15">ast</name><index pos:start="169:16" pos:end="169:18">[<expr pos:start="169:17" pos:end="169:17"><name pos:start="169:17" pos:end="169:17">i</name></expr>]</index></name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:37"><name pos:start="169:21" pos:end="169:25">codec</name><operator pos:start="169:26" pos:end="169:27">-&gt;</operator><name pos:start="169:28" pos:end="169:37">codec_type</name></name> <operator pos:start="169:39" pos:end="169:39">=</operator> <name pos:start="169:41" pos:end="169:58">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="189:13"><if pos:start="171:13" pos:end="175:13">if <condition pos:start="171:16" pos:end="171:49">(<expr pos:start="171:17" pos:end="171:48"><name pos:start="171:17" pos:end="171:30"><name pos:start="171:17" pos:end="171:19">smk</name><operator pos:start="171:20" pos:end="171:21">-&gt;</operator><name pos:start="171:22" pos:end="171:27">aflags</name><index pos:start="171:28" pos:end="171:30">[<expr pos:start="171:29" pos:end="171:29"><name pos:start="171:29" pos:end="171:29">i</name></expr>]</index></name> <operator pos:start="171:32" pos:end="171:32">&amp;</operator> <name pos:start="171:34" pos:end="171:48">SMK_AUD_BINKAUD</name></expr>)</condition> <block pos:start="171:51" pos:end="175:13">{<block_content pos:start="173:17" pos:end="173:69">

                <expr_stmt pos:start="173:17" pos:end="173:69"><expr pos:start="173:17" pos:end="173:68"><name pos:start="173:17" pos:end="173:22"><name pos:start="173:17" pos:end="173:19">ast</name><index pos:start="173:20" pos:end="173:22">[<expr pos:start="173:21" pos:end="173:21"><name pos:start="173:21" pos:end="173:21">i</name></expr>]</index></name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:39"><name pos:start="173:25" pos:end="173:29">codec</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:39">codec_id</name></name> <operator pos:start="173:41" pos:end="173:41">=</operator> <name pos:start="173:43" pos:end="173:68">AV_CODEC_ID_BINKAUDIO_RDFT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="175:15" pos:end="179:13">else if <condition pos:start="175:23" pos:end="175:55">(<expr pos:start="175:24" pos:end="175:54"><name pos:start="175:24" pos:end="175:37"><name pos:start="175:24" pos:end="175:26">smk</name><operator pos:start="175:27" pos:end="175:28">-&gt;</operator><name pos:start="175:29" pos:end="175:34">aflags</name><index pos:start="175:35" pos:end="175:37">[<expr pos:start="175:36" pos:end="175:36"><name pos:start="175:36" pos:end="175:36">i</name></expr>]</index></name> <operator pos:start="175:39" pos:end="175:39">&amp;</operator> <name pos:start="175:41" pos:end="175:54">SMK_AUD_USEDCT</name></expr>)</condition> <block pos:start="175:57" pos:end="179:13">{<block_content pos:start="177:17" pos:end="177:68">

                <expr_stmt pos:start="177:17" pos:end="177:68"><expr pos:start="177:17" pos:end="177:67"><name pos:start="177:17" pos:end="177:22"><name pos:start="177:17" pos:end="177:19">ast</name><index pos:start="177:20" pos:end="177:22">[<expr pos:start="177:21" pos:end="177:21"><name pos:start="177:21" pos:end="177:21">i</name></expr>]</index></name><operator pos:start="177:23" pos:end="177:24">-&gt;</operator><name pos:start="177:25" pos:end="177:39"><name pos:start="177:25" pos:end="177:29">codec</name><operator pos:start="177:30" pos:end="177:31">-&gt;</operator><name pos:start="177:32" pos:end="177:39">codec_id</name></name> <operator pos:start="177:41" pos:end="177:41">=</operator> <name pos:start="177:43" pos:end="177:67">AV_CODEC_ID_BINKAUDIO_DCT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="179:15" pos:end="185:13">else if <condition pos:start="179:23" pos:end="179:55">(<expr pos:start="179:24" pos:end="179:54"><name pos:start="179:24" pos:end="179:37"><name pos:start="179:24" pos:end="179:26">smk</name><operator pos:start="179:27" pos:end="179:28">-&gt;</operator><name pos:start="179:29" pos:end="179:34">aflags</name><index pos:start="179:35" pos:end="179:37">[<expr pos:start="179:36" pos:end="179:36"><name pos:start="179:36" pos:end="179:36">i</name></expr>]</index></name> <operator pos:start="179:39" pos:end="179:39">&amp;</operator> <name pos:start="179:41" pos:end="179:54">SMK_AUD_PACKED</name></expr>)</condition><block pos:start="179:56" pos:end="185:13">{<block_content pos:start="181:17" pos:end="183:69">

                <expr_stmt pos:start="181:17" pos:end="181:65"><expr pos:start="181:17" pos:end="181:64"><name pos:start="181:17" pos:end="181:22"><name pos:start="181:17" pos:end="181:19">ast</name><index pos:start="181:20" pos:end="181:22">[<expr pos:start="181:21" pos:end="181:21"><name pos:start="181:21" pos:end="181:21">i</name></expr>]</index></name><operator pos:start="181:23" pos:end="181:24">-&gt;</operator><name pos:start="181:25" pos:end="181:39"><name pos:start="181:25" pos:end="181:29">codec</name><operator pos:start="181:30" pos:end="181:31">-&gt;</operator><name pos:start="181:32" pos:end="181:39">codec_id</name></name> <operator pos:start="181:41" pos:end="181:41">=</operator> <name pos:start="181:43" pos:end="181:64">AV_CODEC_ID_SMACKAUDIO</name></expr>;</expr_stmt>

                <expr_stmt pos:start="183:17" pos:end="183:69"><expr pos:start="183:17" pos:end="183:68"><name pos:start="183:17" pos:end="183:22"><name pos:start="183:17" pos:end="183:19">ast</name><index pos:start="183:20" pos:end="183:22">[<expr pos:start="183:21" pos:end="183:21"><name pos:start="183:21" pos:end="183:21">i</name></expr>]</index></name><operator pos:start="183:23" pos:end="183:24">-&gt;</operator><name pos:start="183:25" pos:end="183:40"><name pos:start="183:25" pos:end="183:29">codec</name><operator pos:start="183:30" pos:end="183:31">-&gt;</operator><name pos:start="183:32" pos:end="183:40">codec_tag</name></name> <operator pos:start="183:42" pos:end="183:42">=</operator> <call pos:start="183:44" pos:end="183:68"><name pos:start="183:44" pos:end="183:48">MKTAG</name><argument_list pos:start="183:49" pos:end="183:68">(<argument pos:start="183:50" pos:end="183:52"><expr pos:start="183:50" pos:end="183:52"><literal type="char" pos:start="183:50" pos:end="183:52">'S'</literal></expr></argument>, <argument pos:start="183:55" pos:end="183:57"><expr pos:start="183:55" pos:end="183:57"><literal type="char" pos:start="183:55" pos:end="183:57">'M'</literal></expr></argument>, <argument pos:start="183:60" pos:end="183:62"><expr pos:start="183:60" pos:end="183:62"><literal type="char" pos:start="183:60" pos:end="183:62">'K'</literal></expr></argument>, <argument pos:start="183:65" pos:end="183:67"><expr pos:start="183:65" pos:end="183:67"><literal type="char" pos:start="183:65" pos:end="183:67">'A'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="185:15" pos:end="189:13">else <block pos:start="185:20" pos:end="189:13">{<block_content pos:start="187:17" pos:end="187:61">

                <expr_stmt pos:start="187:17" pos:end="187:61"><expr pos:start="187:17" pos:end="187:60"><name pos:start="187:17" pos:end="187:22"><name pos:start="187:17" pos:end="187:19">ast</name><index pos:start="187:20" pos:end="187:22">[<expr pos:start="187:21" pos:end="187:21"><name pos:start="187:21" pos:end="187:21">i</name></expr>]</index></name><operator pos:start="187:23" pos:end="187:24">-&gt;</operator><name pos:start="187:25" pos:end="187:39"><name pos:start="187:25" pos:end="187:29">codec</name><operator pos:start="187:30" pos:end="187:31">-&gt;</operator><name pos:start="187:32" pos:end="187:39">codec_id</name></name> <operator pos:start="187:41" pos:end="187:41">=</operator> <name pos:start="187:43" pos:end="187:60">AV_CODEC_ID_PCM_U8</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="191:13" pos:end="203:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:48">(<expr pos:start="191:17" pos:end="191:47"><name pos:start="191:17" pos:end="191:30"><name pos:start="191:17" pos:end="191:19">smk</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:27">aflags</name><index pos:start="191:28" pos:end="191:30">[<expr pos:start="191:29" pos:end="191:29"><name pos:start="191:29" pos:end="191:29">i</name></expr>]</index></name> <operator pos:start="191:32" pos:end="191:32">&amp;</operator> <name pos:start="191:34" pos:end="191:47">SMK_AUD_STEREO</name></expr>)</condition> <block pos:start="191:50" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:68">

                <expr_stmt pos:start="193:17" pos:end="193:50"><expr pos:start="193:17" pos:end="193:49"><name pos:start="193:17" pos:end="193:22"><name pos:start="193:17" pos:end="193:19">ast</name><index pos:start="193:20" pos:end="193:22">[<expr pos:start="193:21" pos:end="193:21"><name pos:start="193:21" pos:end="193:21">i</name></expr>]</index></name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:39"><name pos:start="193:25" pos:end="193:29">codec</name><operator pos:start="193:30" pos:end="193:31">-&gt;</operator><name pos:start="193:32" pos:end="193:39">channels</name></name>       <operator pos:start="193:47" pos:end="193:47">=</operator> <literal type="number" pos:start="193:49" pos:end="193:49">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="195:17" pos:end="195:68"><expr pos:start="195:17" pos:end="195:67"><name pos:start="195:17" pos:end="195:22"><name pos:start="195:17" pos:end="195:19">ast</name><index pos:start="195:20" pos:end="195:22">[<expr pos:start="195:21" pos:end="195:21"><name pos:start="195:21" pos:end="195:21">i</name></expr>]</index></name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:45"><name pos:start="195:25" pos:end="195:29">codec</name><operator pos:start="195:30" pos:end="195:31">-&gt;</operator><name pos:start="195:32" pos:end="195:45">channel_layout</name></name> <operator pos:start="195:47" pos:end="195:47">=</operator> <name pos:start="195:49" pos:end="195:67">AV_CH_LAYOUT_STEREO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="197:15" pos:end="203:13">else <block pos:start="197:20" pos:end="203:13">{<block_content pos:start="199:17" pos:end="201:66">

                <expr_stmt pos:start="199:17" pos:end="199:50"><expr pos:start="199:17" pos:end="199:49"><name pos:start="199:17" pos:end="199:22"><name pos:start="199:17" pos:end="199:19">ast</name><index pos:start="199:20" pos:end="199:22">[<expr pos:start="199:21" pos:end="199:21"><name pos:start="199:21" pos:end="199:21">i</name></expr>]</index></name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:39"><name pos:start="199:25" pos:end="199:29">codec</name><operator pos:start="199:30" pos:end="199:31">-&gt;</operator><name pos:start="199:32" pos:end="199:39">channels</name></name>       <operator pos:start="199:47" pos:end="199:47">=</operator> <literal type="number" pos:start="199:49" pos:end="199:49">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:66"><expr pos:start="201:17" pos:end="201:65"><name pos:start="201:17" pos:end="201:22"><name pos:start="201:17" pos:end="201:19">ast</name><index pos:start="201:20" pos:end="201:22">[<expr pos:start="201:21" pos:end="201:21"><name pos:start="201:21" pos:end="201:21">i</name></expr>]</index></name><operator pos:start="201:23" pos:end="201:24">-&gt;</operator><name pos:start="201:25" pos:end="201:45"><name pos:start="201:25" pos:end="201:29">codec</name><operator pos:start="201:30" pos:end="201:31">-&gt;</operator><name pos:start="201:32" pos:end="201:45">channel_layout</name></name> <operator pos:start="201:47" pos:end="201:47">=</operator> <name pos:start="201:49" pos:end="201:65">AV_CH_LAYOUT_MONO</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:55"><expr pos:start="205:13" pos:end="205:54"><name pos:start="205:13" pos:end="205:18"><name pos:start="205:13" pos:end="205:15">ast</name><index pos:start="205:16" pos:end="205:18">[<expr pos:start="205:17" pos:end="205:17"><name pos:start="205:17" pos:end="205:17">i</name></expr>]</index></name><operator pos:start="205:19" pos:end="205:20">-&gt;</operator><name pos:start="205:21" pos:end="205:38"><name pos:start="205:21" pos:end="205:25">codec</name><operator pos:start="205:26" pos:end="205:27">-&gt;</operator><name pos:start="205:28" pos:end="205:38">sample_rate</name></name> <operator pos:start="205:40" pos:end="205:40">=</operator> <name pos:start="205:42" pos:end="205:54"><name pos:start="205:42" pos:end="205:44">smk</name><operator pos:start="205:45" pos:end="205:46">-&gt;</operator><name pos:start="205:47" pos:end="205:51">rates</name><index pos:start="205:52" pos:end="205:54">[<expr pos:start="205:53" pos:end="205:53"><name pos:start="205:53" pos:end="205:53">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:94"><expr pos:start="207:13" pos:end="207:93"><name pos:start="207:13" pos:end="207:18"><name pos:start="207:13" pos:end="207:15">ast</name><index pos:start="207:16" pos:end="207:18">[<expr pos:start="207:17" pos:end="207:17"><name pos:start="207:17" pos:end="207:17">i</name></expr>]</index></name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:48"><name pos:start="207:21" pos:end="207:25">codec</name><operator pos:start="207:26" pos:end="207:27">-&gt;</operator><name pos:start="207:28" pos:end="207:48">bits_per_coded_sample</name></name> <operator pos:start="207:50" pos:end="207:50">=</operator> <ternary pos:start="207:52" pos:end="207:93"><condition pos:start="207:52" pos:end="207:86"><expr pos:start="207:52" pos:end="207:84"><operator pos:start="207:52" pos:end="207:52">(</operator><name pos:start="207:53" pos:end="207:66"><name pos:start="207:53" pos:end="207:55">smk</name><operator pos:start="207:56" pos:end="207:57">-&gt;</operator><name pos:start="207:58" pos:end="207:63">aflags</name><index pos:start="207:64" pos:end="207:66">[<expr pos:start="207:65" pos:end="207:65"><name pos:start="207:65" pos:end="207:65">i</name></expr>]</index></name> <operator pos:start="207:68" pos:end="207:68">&amp;</operator> <name pos:start="207:70" pos:end="207:83">SMK_AUD_16BITS</name><operator pos:start="207:84" pos:end="207:84">)</operator></expr> ?</condition><then pos:start="207:88" pos:end="207:89"> <expr pos:start="207:88" pos:end="207:89"><literal type="number" pos:start="207:88" pos:end="207:89">16</literal></expr> </then><else pos:start="207:91" pos:end="207:93">: <expr pos:start="207:93" pos:end="207:93"><literal type="number" pos:start="207:93" pos:end="207:93">8</literal></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="211:64"><if pos:start="209:13" pos:end="211:64">if<condition pos:start="209:15" pos:end="209:107">(<expr pos:start="209:16" pos:end="209:106"><name pos:start="209:16" pos:end="209:21"><name pos:start="209:16" pos:end="209:18">ast</name><index pos:start="209:19" pos:end="209:21">[<expr pos:start="209:20" pos:end="209:20"><name pos:start="209:20" pos:end="209:20">i</name></expr>]</index></name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:51"><name pos:start="209:24" pos:end="209:28">codec</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:51">bits_per_coded_sample</name></name> <operator pos:start="209:53" pos:end="209:54">==</operator> <literal type="number" pos:start="209:56" pos:end="209:57">16</literal> <operator pos:start="209:59" pos:end="209:60">&amp;&amp;</operator> <name pos:start="209:62" pos:end="209:67"><name pos:start="209:62" pos:end="209:64">ast</name><index pos:start="209:65" pos:end="209:67">[<expr pos:start="209:66" pos:end="209:66"><name pos:start="209:66" pos:end="209:66">i</name></expr>]</index></name><operator pos:start="209:68" pos:end="209:69">-&gt;</operator><name pos:start="209:70" pos:end="209:84"><name pos:start="209:70" pos:end="209:74">codec</name><operator pos:start="209:75" pos:end="209:76">-&gt;</operator><name pos:start="209:77" pos:end="209:84">codec_id</name></name> <operator pos:start="209:86" pos:end="209:87">==</operator> <name pos:start="209:89" pos:end="209:106">AV_CODEC_ID_PCM_U8</name></expr>)</condition><block type="pseudo" pos:start="211:17" pos:end="211:64"><block_content pos:start="211:17" pos:end="211:64">

                <expr_stmt pos:start="211:17" pos:end="211:64"><expr pos:start="211:17" pos:end="211:63"><name pos:start="211:17" pos:end="211:22"><name pos:start="211:17" pos:end="211:19">ast</name><index pos:start="211:20" pos:end="211:22">[<expr pos:start="211:21" pos:end="211:21"><name pos:start="211:21" pos:end="211:21">i</name></expr>]</index></name><operator pos:start="211:23" pos:end="211:24">-&gt;</operator><name pos:start="211:25" pos:end="211:39"><name pos:start="211:25" pos:end="211:29">codec</name><operator pos:start="211:30" pos:end="211:31">-&gt;</operator><name pos:start="211:32" pos:end="211:39">codec_id</name></name> <operator pos:start="211:41" pos:end="211:41">=</operator> <name pos:start="211:43" pos:end="211:63">AV_CODEC_ID_PCM_S16LE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="213:13" pos:end="215:90"><expr pos:start="213:13" pos:end="215:89"><call pos:start="213:13" pos:end="215:89"><name pos:start="213:13" pos:end="213:31">avpriv_set_pts_info</name><argument_list pos:start="213:32" pos:end="215:89">(<argument pos:start="213:33" pos:end="213:38"><expr pos:start="213:33" pos:end="213:38"><name pos:start="213:33" pos:end="213:38"><name pos:start="213:33" pos:end="213:35">ast</name><index pos:start="213:36" pos:end="213:38">[<expr pos:start="213:37" pos:end="213:37"><name pos:start="213:37" pos:end="213:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="213:41" pos:end="213:42"><expr pos:start="213:41" pos:end="213:42"><literal type="number" pos:start="213:41" pos:end="213:42">64</literal></expr></argument>, <argument pos:start="213:45" pos:end="213:45"><expr pos:start="213:45" pos:end="213:45"><literal type="number" pos:start="213:45" pos:end="213:45">1</literal></expr></argument>, <argument pos:start="213:48" pos:end="215:88"><expr pos:start="213:48" pos:end="215:88"><name pos:start="213:48" pos:end="213:53"><name pos:start="213:48" pos:end="213:50">ast</name><index pos:start="213:51" pos:end="213:53">[<expr pos:start="213:52" pos:end="213:52"><name pos:start="213:52" pos:end="213:52">i</name></expr>]</index></name><operator pos:start="213:54" pos:end="213:55">-&gt;</operator><name pos:start="213:56" pos:end="213:73"><name pos:start="213:56" pos:end="213:60">codec</name><operator pos:start="213:61" pos:end="213:62">-&gt;</operator><name pos:start="213:63" pos:end="213:73">sample_rate</name></name>

                    <operator pos:start="215:21" pos:end="215:21">*</operator> <name pos:start="215:23" pos:end="215:28"><name pos:start="215:23" pos:end="215:25">ast</name><index pos:start="215:26" pos:end="215:28">[<expr pos:start="215:27" pos:end="215:27"><name pos:start="215:27" pos:end="215:27">i</name></expr>]</index></name><operator pos:start="215:29" pos:end="215:30">-&gt;</operator><name pos:start="215:31" pos:end="215:45"><name pos:start="215:31" pos:end="215:35">codec</name><operator pos:start="215:36" pos:end="215:37">-&gt;</operator><name pos:start="215:38" pos:end="215:45">channels</name></name> <operator pos:start="215:47" pos:end="215:47">*</operator> <name pos:start="215:49" pos:end="215:54"><name pos:start="215:49" pos:end="215:51">ast</name><index pos:start="215:52" pos:end="215:54">[<expr pos:start="215:53" pos:end="215:53"><name pos:start="215:53" pos:end="215:53">i</name></expr>]</index></name><operator pos:start="215:55" pos:end="215:56">-&gt;</operator><name pos:start="215:57" pos:end="215:84"><name pos:start="215:57" pos:end="215:61">codec</name><operator pos:start="215:62" pos:end="215:63">-&gt;</operator><name pos:start="215:64" pos:end="215:84">bits_per_coded_sample</name></name> <operator pos:start="215:86" pos:end="215:86">/</operator> <literal type="number" pos:start="215:88" pos:end="215:88">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>





    <comment type="block" pos:start="225:5" pos:end="225:67">/* load trees to extradata, they will be unpacked by decoder */</comment>

    <expr_stmt pos:start="227:5" pos:end="229:68"><expr pos:start="227:5" pos:end="229:67"><name pos:start="227:5" pos:end="227:24"><name pos:start="227:5" pos:end="227:6">st</name><operator pos:start="227:7" pos:end="227:8">-&gt;</operator><name pos:start="227:9" pos:end="227:13">codec</name><operator pos:start="227:14" pos:end="227:15">-&gt;</operator><name pos:start="227:16" pos:end="227:24">extradata</name></name> <operator pos:start="227:26" pos:end="227:26">=</operator> <call pos:start="227:28" pos:end="229:67"><name pos:start="227:28" pos:end="227:37">av_mallocz</name><argument_list pos:start="227:38" pos:end="229:67">(<argument pos:start="227:39" pos:end="229:66"><expr pos:start="227:39" pos:end="229:66"><name pos:start="227:39" pos:end="227:51"><name pos:start="227:39" pos:end="227:41">smk</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:51">treesize</name></name> <operator pos:start="227:53" pos:end="227:53">+</operator> <literal type="number" pos:start="227:55" pos:end="227:58">16</literal> <operator pos:start="227:58" pos:end="227:58">+</operator>

                                      <name pos:start="229:39" pos:end="229:66">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:51"><expr pos:start="231:5" pos:end="231:50"><name pos:start="231:5" pos:end="231:29"><name pos:start="231:5" pos:end="231:6">st</name><operator pos:start="231:7" pos:end="231:8">-&gt;</operator><name pos:start="231:9" pos:end="231:13">codec</name><operator pos:start="231:14" pos:end="231:15">-&gt;</operator><name pos:start="231:16" pos:end="231:29">extradata_size</name></name> <operator pos:start="231:31" pos:end="231:31">=</operator> <name pos:start="231:33" pos:end="231:45"><name pos:start="231:33" pos:end="231:35">smk</name><operator pos:start="231:36" pos:end="231:37">-&gt;</operator><name pos:start="231:38" pos:end="231:45">treesize</name></name> <operator pos:start="231:47" pos:end="231:47">+</operator> <literal type="number" pos:start="231:49" pos:end="231:50">16</literal></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="243:5"><if pos:start="233:5" pos:end="243:5">if<condition pos:start="233:7" pos:end="233:29">(<expr pos:start="233:8" pos:end="233:28"><operator pos:start="233:8" pos:end="233:8">!</operator><name pos:start="233:9" pos:end="233:28"><name pos:start="233:9" pos:end="233:10">st</name><operator pos:start="233:11" pos:end="233:12">-&gt;</operator><name pos:start="233:13" pos:end="233:17">codec</name><operator pos:start="233:18" pos:end="233:19">-&gt;</operator><name pos:start="233:20" pos:end="233:28">extradata</name></name></expr>)</condition><block pos:start="233:30" pos:end="243:5">{<block_content pos:start="235:9" pos:end="241:31">

        <expr_stmt pos:start="235:9" pos:end="235:95"><expr pos:start="235:9" pos:end="235:94"><call pos:start="235:9" pos:end="235:94"><name pos:start="235:9" pos:end="235:14">av_log</name><argument_list pos:start="235:15" pos:end="235:94">(<argument pos:start="235:16" pos:end="235:16"><expr pos:start="235:16" pos:end="235:16"><name pos:start="235:16" pos:end="235:16">s</name></expr></argument>, <argument pos:start="235:19" pos:end="235:30"><expr pos:start="235:19" pos:end="235:30"><name pos:start="235:19" pos:end="235:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="235:33" pos:end="235:73"><expr pos:start="235:33" pos:end="235:73"><literal type="string" pos:start="235:33" pos:end="235:73">"Cannot allocate %i bytes of extradata\n"</literal></expr></argument>, <argument pos:start="235:76" pos:end="235:93"><expr pos:start="235:76" pos:end="235:93"><name pos:start="235:76" pos:end="235:88"><name pos:start="235:76" pos:end="235:78">smk</name><operator pos:start="235:79" pos:end="235:80">-&gt;</operator><name pos:start="235:81" pos:end="235:88">treesize</name></name> <operator pos:start="235:90" pos:end="235:90">+</operator> <literal type="number" pos:start="235:92" pos:end="235:93">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:33"><expr pos:start="237:9" pos:end="237:32"><call pos:start="237:9" pos:end="237:32"><name pos:start="237:9" pos:end="237:16">av_freep</name><argument_list pos:start="237:17" pos:end="237:32">(<argument pos:start="237:18" pos:end="237:31"><expr pos:start="237:18" pos:end="237:31"><operator pos:start="237:18" pos:end="237:18">&amp;</operator><name pos:start="237:19" pos:end="237:31"><name pos:start="237:19" pos:end="237:21">smk</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:31">frm_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="239:9" pos:end="239:34"><expr pos:start="239:9" pos:end="239:33"><call pos:start="239:9" pos:end="239:33"><name pos:start="239:9" pos:end="239:16">av_freep</name><argument_list pos:start="239:17" pos:end="239:33">(<argument pos:start="239:18" pos:end="239:32"><expr pos:start="239:18" pos:end="239:32"><operator pos:start="239:18" pos:end="239:18">&amp;</operator><name pos:start="239:19" pos:end="239:32"><name pos:start="239:19" pos:end="239:21">smk</name><operator pos:start="239:22" pos:end="239:23">-&gt;</operator><name pos:start="239:24" pos:end="239:32">frm_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="241:9" pos:end="241:31">return <expr pos:start="241:16" pos:end="241:30"><call pos:start="241:16" pos:end="241:30"><name pos:start="241:16" pos:end="241:22">AVERROR</name><argument_list pos:start="241:23" pos:end="241:30">(<argument pos:start="241:24" pos:end="241:29"><expr pos:start="241:24" pos:end="241:29"><name pos:start="241:24" pos:end="241:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:83"><expr pos:start="245:5" pos:end="245:82"><name pos:start="245:5" pos:end="245:7">ret</name> <operator pos:start="245:9" pos:end="245:9">=</operator> <call pos:start="245:11" pos:end="245:82"><name pos:start="245:11" pos:end="245:19">avio_read</name><argument_list pos:start="245:20" pos:end="245:82">(<argument pos:start="245:21" pos:end="245:22"><expr pos:start="245:21" pos:end="245:22"><name pos:start="245:21" pos:end="245:22">pb</name></expr></argument>, <argument pos:start="245:25" pos:end="245:49"><expr pos:start="245:25" pos:end="245:49"><name pos:start="245:25" pos:end="245:44"><name pos:start="245:25" pos:end="245:26">st</name><operator pos:start="245:27" pos:end="245:28">-&gt;</operator><name pos:start="245:29" pos:end="245:33">codec</name><operator pos:start="245:34" pos:end="245:35">-&gt;</operator><name pos:start="245:36" pos:end="245:44">extradata</name></name> <operator pos:start="245:46" pos:end="245:46">+</operator> <literal type="number" pos:start="245:48" pos:end="245:49">16</literal></expr></argument>, <argument pos:start="245:52" pos:end="245:81"><expr pos:start="245:52" pos:end="245:81"><name pos:start="245:52" pos:end="245:76"><name pos:start="245:52" pos:end="245:53">st</name><operator pos:start="245:54" pos:end="245:55">-&gt;</operator><name pos:start="245:56" pos:end="245:60">codec</name><operator pos:start="245:61" pos:end="245:62">-&gt;</operator><name pos:start="245:63" pos:end="245:76">extradata_size</name></name> <operator pos:start="245:78" pos:end="245:78">-</operator> <literal type="number" pos:start="245:80" pos:end="245:81">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="247:5" pos:end="255:5"><if pos:start="247:5" pos:end="255:5">if<condition pos:start="247:7" pos:end="247:45">(<expr pos:start="247:8" pos:end="247:44"><name pos:start="247:8" pos:end="247:10">ret</name> <operator pos:start="247:12" pos:end="247:13">!=</operator> <name pos:start="247:15" pos:end="247:39"><name pos:start="247:15" pos:end="247:16">st</name><operator pos:start="247:17" pos:end="247:18">-&gt;</operator><name pos:start="247:19" pos:end="247:23">codec</name><operator pos:start="247:24" pos:end="247:25">-&gt;</operator><name pos:start="247:26" pos:end="247:39">extradata_size</name></name> <operator pos:start="247:41" pos:end="247:41">-</operator> <literal type="number" pos:start="247:43" pos:end="247:44">16</literal></expr>)</condition><block pos:start="247:46" pos:end="255:5">{<block_content pos:start="249:9" pos:end="253:28">

        <expr_stmt pos:start="249:9" pos:end="249:33"><expr pos:start="249:9" pos:end="249:32"><call pos:start="249:9" pos:end="249:32"><name pos:start="249:9" pos:end="249:16">av_freep</name><argument_list pos:start="249:17" pos:end="249:32">(<argument pos:start="249:18" pos:end="249:31"><expr pos:start="249:18" pos:end="249:31"><operator pos:start="249:18" pos:end="249:18">&amp;</operator><name pos:start="249:19" pos:end="249:31"><name pos:start="249:19" pos:end="249:21">smk</name><operator pos:start="249:22" pos:end="249:23">-&gt;</operator><name pos:start="249:24" pos:end="249:31">frm_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:34"><expr pos:start="251:9" pos:end="251:33"><call pos:start="251:9" pos:end="251:33"><name pos:start="251:9" pos:end="251:16">av_freep</name><argument_list pos:start="251:17" pos:end="251:33">(<argument pos:start="251:18" pos:end="251:32"><expr pos:start="251:18" pos:end="251:32"><operator pos:start="251:18" pos:end="251:18">&amp;</operator><name pos:start="251:19" pos:end="251:32"><name pos:start="251:19" pos:end="251:21">smk</name><operator pos:start="251:22" pos:end="251:23">-&gt;</operator><name pos:start="251:24" pos:end="251:32">frm_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="253:9" pos:end="253:28">return <expr pos:start="253:16" pos:end="253:27"><call pos:start="253:16" pos:end="253:27"><name pos:start="253:16" pos:end="253:22">AVERROR</name><argument_list pos:start="253:23" pos:end="253:27">(<argument pos:start="253:24" pos:end="253:26"><expr pos:start="253:24" pos:end="253:26"><name pos:start="253:24" pos:end="253:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:69"><expr pos:start="257:5" pos:end="257:68"><operator pos:start="257:5" pos:end="257:5">(</operator><operator pos:start="257:6" pos:end="257:6">(</operator><name pos:start="257:7" pos:end="257:13">int32_t</name><operator pos:start="257:14" pos:end="257:14">*</operator><operator pos:start="257:15" pos:end="257:15">)</operator><name pos:start="257:16" pos:end="257:35"><name pos:start="257:16" pos:end="257:17">st</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:24">codec</name><operator pos:start="257:25" pos:end="257:26">-&gt;</operator><name pos:start="257:27" pos:end="257:35">extradata</name></name><operator pos:start="257:36" pos:end="257:36">)</operator><index pos:start="257:37" pos:end="257:39">[<expr pos:start="257:38" pos:end="257:38"><literal type="number" pos:start="257:38" pos:end="257:38">0</literal></expr>]</index> <operator pos:start="257:41" pos:end="257:41">=</operator> <call pos:start="257:43" pos:end="257:68"><name pos:start="257:43" pos:end="257:52">av_le2ne32</name><argument_list pos:start="257:53" pos:end="257:68">(<argument pos:start="257:54" pos:end="257:67"><expr pos:start="257:54" pos:end="257:67"><name pos:start="257:54" pos:end="257:67"><name pos:start="257:54" pos:end="257:56">smk</name><operator pos:start="257:57" pos:end="257:58">-&gt;</operator><name pos:start="257:59" pos:end="257:67">mmap_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:69"><expr pos:start="259:5" pos:end="259:68"><operator pos:start="259:5" pos:end="259:5">(</operator><operator pos:start="259:6" pos:end="259:6">(</operator><name pos:start="259:7" pos:end="259:13">int32_t</name><operator pos:start="259:14" pos:end="259:14">*</operator><operator pos:start="259:15" pos:end="259:15">)</operator><name pos:start="259:16" pos:end="259:35"><name pos:start="259:16" pos:end="259:17">st</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:24">codec</name><operator pos:start="259:25" pos:end="259:26">-&gt;</operator><name pos:start="259:27" pos:end="259:35">extradata</name></name><operator pos:start="259:36" pos:end="259:36">)</operator><index pos:start="259:37" pos:end="259:39">[<expr pos:start="259:38" pos:end="259:38"><literal type="number" pos:start="259:38" pos:end="259:38">1</literal></expr>]</index> <operator pos:start="259:41" pos:end="259:41">=</operator> <call pos:start="259:43" pos:end="259:68"><name pos:start="259:43" pos:end="259:52">av_le2ne32</name><argument_list pos:start="259:53" pos:end="259:68">(<argument pos:start="259:54" pos:end="259:67"><expr pos:start="259:54" pos:end="259:67"><name pos:start="259:54" pos:end="259:67"><name pos:start="259:54" pos:end="259:56">smk</name><operator pos:start="259:57" pos:end="259:58">-&gt;</operator><name pos:start="259:59" pos:end="259:67">mclr_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:69"><expr pos:start="261:5" pos:end="261:68"><operator pos:start="261:5" pos:end="261:5">(</operator><operator pos:start="261:6" pos:end="261:6">(</operator><name pos:start="261:7" pos:end="261:13">int32_t</name><operator pos:start="261:14" pos:end="261:14">*</operator><operator pos:start="261:15" pos:end="261:15">)</operator><name pos:start="261:16" pos:end="261:35"><name pos:start="261:16" pos:end="261:17">st</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:24">codec</name><operator pos:start="261:25" pos:end="261:26">-&gt;</operator><name pos:start="261:27" pos:end="261:35">extradata</name></name><operator pos:start="261:36" pos:end="261:36">)</operator><index pos:start="261:37" pos:end="261:39">[<expr pos:start="261:38" pos:end="261:38"><literal type="number" pos:start="261:38" pos:end="261:38">2</literal></expr>]</index> <operator pos:start="261:41" pos:end="261:41">=</operator> <call pos:start="261:43" pos:end="261:68"><name pos:start="261:43" pos:end="261:52">av_le2ne32</name><argument_list pos:start="261:53" pos:end="261:68">(<argument pos:start="261:54" pos:end="261:67"><expr pos:start="261:54" pos:end="261:67"><name pos:start="261:54" pos:end="261:67"><name pos:start="261:54" pos:end="261:56">smk</name><operator pos:start="261:57" pos:end="261:58">-&gt;</operator><name pos:start="261:59" pos:end="261:67">full_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:69"><expr pos:start="263:5" pos:end="263:68"><operator pos:start="263:5" pos:end="263:5">(</operator><operator pos:start="263:6" pos:end="263:6">(</operator><name pos:start="263:7" pos:end="263:13">int32_t</name><operator pos:start="263:14" pos:end="263:14">*</operator><operator pos:start="263:15" pos:end="263:15">)</operator><name pos:start="263:16" pos:end="263:35"><name pos:start="263:16" pos:end="263:17">st</name><operator pos:start="263:18" pos:end="263:19">-&gt;</operator><name pos:start="263:20" pos:end="263:24">codec</name><operator pos:start="263:25" pos:end="263:26">-&gt;</operator><name pos:start="263:27" pos:end="263:35">extradata</name></name><operator pos:start="263:36" pos:end="263:36">)</operator><index pos:start="263:37" pos:end="263:39">[<expr pos:start="263:38" pos:end="263:38"><literal type="number" pos:start="263:38" pos:end="263:38">3</literal></expr>]</index> <operator pos:start="263:41" pos:end="263:41">=</operator> <call pos:start="263:43" pos:end="263:68"><name pos:start="263:43" pos:end="263:52">av_le2ne32</name><argument_list pos:start="263:53" pos:end="263:68">(<argument pos:start="263:54" pos:end="263:67"><expr pos:start="263:54" pos:end="263:67"><name pos:start="263:54" pos:end="263:67"><name pos:start="263:54" pos:end="263:56">smk</name><operator pos:start="263:57" pos:end="263:58">-&gt;</operator><name pos:start="263:59" pos:end="263:67">type_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="267:5" pos:end="267:24"><expr pos:start="267:5" pos:end="267:23"><name pos:start="267:5" pos:end="267:18"><name pos:start="267:5" pos:end="267:7">smk</name><operator pos:start="267:8" pos:end="267:9">-&gt;</operator><name pos:start="267:10" pos:end="267:18">curstream</name></name> <operator pos:start="267:20" pos:end="267:20">=</operator> <operator pos:start="267:22" pos:end="267:22">-</operator><literal type="number" pos:start="267:23" pos:end="267:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="269:5" pos:end="269:33"><expr pos:start="269:5" pos:end="269:32"><name pos:start="269:5" pos:end="269:16"><name pos:start="269:5" pos:end="269:7">smk</name><operator pos:start="269:8" pos:end="269:9">-&gt;</operator><name pos:start="269:10" pos:end="269:16">nextpos</name></name> <operator pos:start="269:18" pos:end="269:18">=</operator> <call pos:start="269:20" pos:end="269:32"><name pos:start="269:20" pos:end="269:28">avio_tell</name><argument_list pos:start="269:29" pos:end="269:32">(<argument pos:start="269:30" pos:end="269:31"><expr pos:start="269:30" pos:end="269:31"><name pos:start="269:30" pos:end="269:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="273:5" pos:end="273:13">return <expr pos:start="273:12" pos:end="273:12"><literal type="number" pos:start="273:12" pos:end="273:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
