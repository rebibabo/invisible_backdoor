<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6003.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:22">do_sendkey</name><parameter_list pos:start="1:23" pos:end="1:42">(<parameter pos:start="1:24" pos:end="1:41"><decl pos:start="1:24" pos:end="1:41"><type pos:start="1:24" pos:end="1:35"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:33">char</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">string</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:24"><name pos:start="5:13" pos:end="5:20">keycodes</name><index pos:start="5:21" pos:end="5:24">[<expr pos:start="5:22" pos:end="5:23"><literal type="number" pos:start="5:22" pos:end="5:23">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:19">nb_keycodes</name> <init pos:start="7:21" pos:end="7:23">= <expr pos:start="7:23" pos:end="7:23"><literal type="number" pos:start="7:23" pos:end="7:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:24"><name pos:start="9:10" pos:end="9:20">keyname_buf</name><index pos:start="9:21" pos:end="9:24">[<expr pos:start="9:22" pos:end="9:23"><literal type="number" pos:start="9:22" pos:end="9:23">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:19">separator</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:32"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">keyname_len</name></decl>, <decl pos:start="13:22" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:28">keycode</name></decl>, <decl pos:start="13:31" pos:end="13:31"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:31" pos:end="13:31">i</name></decl>;</decl_stmt>



    <while pos:start="17:5" pos:end="65:5">while <condition pos:start="17:11" pos:end="17:13">(<expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>)</condition> <block pos:start="17:15" pos:end="65:5">{<block_content pos:start="19:9" pos:end="63:31">

        <expr_stmt pos:start="19:9" pos:end="19:40"><expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:17">separator</name> <operator pos:start="19:19" pos:end="19:19">=</operator> <call pos:start="19:21" pos:end="19:39"><name pos:start="19:21" pos:end="19:26">strchr</name><argument_list pos:start="19:27" pos:end="19:39">(<argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">string</name></expr></argument>, <argument pos:start="19:36" pos:end="19:38"><expr pos:start="19:36" pos:end="19:38"><literal type="char" pos:start="19:36" pos:end="19:38">'-'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:70"><expr pos:start="21:9" pos:end="21:69"><name pos:start="21:9" pos:end="21:19">keyname_len</name> <operator pos:start="21:21" pos:end="21:21">=</operator> <ternary pos:start="21:23" pos:end="21:69"><condition pos:start="21:23" pos:end="21:33"><expr pos:start="21:23" pos:end="21:31"><name pos:start="21:23" pos:end="21:31">separator</name></expr> ?</condition><then pos:start="21:35" pos:end="21:52"> <expr pos:start="21:35" pos:end="21:52"><name pos:start="21:35" pos:end="21:43">separator</name> <operator pos:start="21:45" pos:end="21:45">-</operator> <name pos:start="21:47" pos:end="21:52">string</name></expr> </then><else pos:start="21:54" pos:end="21:69">: <expr pos:start="21:56" pos:end="21:69"><call pos:start="21:56" pos:end="21:69"><name pos:start="21:56" pos:end="21:61">strlen</name><argument_list pos:start="21:62" pos:end="21:69">(<argument pos:start="21:63" pos:end="21:68"><expr pos:start="21:63" pos:end="21:68"><name pos:start="21:63" pos:end="21:68">string</name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="57:9"><if pos:start="23:9" pos:end="57:9">if <condition pos:start="23:12" pos:end="23:28">(<expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:23">keyname_len</name> <operator pos:start="23:25" pos:end="23:25">&gt;</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>)</condition> <block pos:start="23:30" pos:end="57:9">{<block_content pos:start="25:13" pos:end="55:46">

            <expr_stmt pos:start="25:13" pos:end="25:62"><expr pos:start="25:13" pos:end="25:61"><call pos:start="25:13" pos:end="25:61"><name pos:start="25:13" pos:end="25:19">pstrcpy</name><argument_list pos:start="25:20" pos:end="25:61">(<argument pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:31">keyname_buf</name></expr></argument>, <argument pos:start="25:34" pos:end="25:52"><expr pos:start="25:34" pos:end="25:52"><sizeof pos:start="25:34" pos:end="25:52">sizeof<argument_list pos:start="25:40" pos:end="25:52">(<argument pos:start="25:41" pos:end="25:51"><expr pos:start="25:41" pos:end="25:51"><name pos:start="25:41" pos:end="25:51">keyname_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="25:55" pos:end="25:60"><expr pos:start="25:55" pos:end="25:60"><name pos:start="25:55" pos:end="25:60">string</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="27:13" pos:end="33:13"><if pos:start="27:13" pos:end="33:13">if <condition pos:start="27:16" pos:end="27:54">(<expr pos:start="27:17" pos:end="27:53"><name pos:start="27:17" pos:end="27:27">keyname_len</name> <operator pos:start="27:29" pos:end="27:29">&gt;</operator> <sizeof pos:start="27:31" pos:end="27:49">sizeof<argument_list pos:start="27:37" pos:end="27:49">(<argument pos:start="27:38" pos:end="27:48"><expr pos:start="27:38" pos:end="27:48"><name pos:start="27:38" pos:end="27:48">keyname_buf</name></expr></argument>)</argument_list></sizeof> <operator pos:start="27:51" pos:end="27:51">-</operator> <literal type="number" pos:start="27:53" pos:end="27:53">1</literal></expr>)</condition> <block pos:start="27:56" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:23">

                <expr_stmt pos:start="29:17" pos:end="29:67"><expr pos:start="29:17" pos:end="29:66"><call pos:start="29:17" pos:end="29:66"><name pos:start="29:17" pos:end="29:27">term_printf</name><argument_list pos:start="29:28" pos:end="29:66">(<argument pos:start="29:29" pos:end="29:52"><expr pos:start="29:29" pos:end="29:52"><literal type="string" pos:start="29:29" pos:end="29:52">"invalid key: '%s...'\n"</literal></expr></argument>, <argument pos:start="29:55" pos:end="29:65"><expr pos:start="29:55" pos:end="29:65"><name pos:start="29:55" pos:end="29:65">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="31:17" pos:end="31:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:48">(<expr pos:start="35:17" pos:end="35:47"><name pos:start="35:17" pos:end="35:27">nb_keycodes</name> <operator pos:start="35:29" pos:end="35:30">==</operator> <sizeof pos:start="35:32" pos:end="35:47">sizeof<argument_list pos:start="35:38" pos:end="35:47">(<argument pos:start="35:39" pos:end="35:46"><expr pos:start="35:39" pos:end="35:46"><name pos:start="35:39" pos:end="35:46">keycodes</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="35:50" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:23">

                <expr_stmt pos:start="37:17" pos:end="37:47"><expr pos:start="37:17" pos:end="37:46"><call pos:start="37:17" pos:end="37:46"><name pos:start="37:17" pos:end="37:27">term_printf</name><argument_list pos:start="37:28" pos:end="37:46">(<argument pos:start="37:29" pos:end="37:45"><expr pos:start="37:29" pos:end="37:45"><literal type="string" pos:start="37:29" pos:end="37:45">"too many keys\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="39:17" pos:end="39:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:41"><expr pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:36"><name pos:start="43:13" pos:end="43:23">keyname_buf</name><index pos:start="43:24" pos:end="43:36">[<expr pos:start="43:25" pos:end="43:35"><name pos:start="43:25" pos:end="43:35">keyname_len</name></expr>]</index></name> <operator pos:start="43:38" pos:end="43:38">=</operator> <literal type="number" pos:start="43:40" pos:end="43:40">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:47"><expr pos:start="45:13" pos:end="45:46"><name pos:start="45:13" pos:end="45:19">keycode</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:46"><name pos:start="45:23" pos:end="45:33">get_keycode</name><argument_list pos:start="45:34" pos:end="45:46">(<argument pos:start="45:35" pos:end="45:45"><expr pos:start="45:35" pos:end="45:45"><name pos:start="45:35" pos:end="45:45">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="53:13"><if pos:start="47:13" pos:end="53:13">if <condition pos:start="47:16" pos:end="47:28">(<expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:23">keycode</name> <operator pos:start="47:25" pos:end="47:25">&lt;</operator> <literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>)</condition> <block pos:start="47:30" pos:end="53:13">{<block_content pos:start="49:17" pos:end="51:23">

                <expr_stmt pos:start="49:17" pos:end="49:64"><expr pos:start="49:17" pos:end="49:63"><call pos:start="49:17" pos:end="49:63"><name pos:start="49:17" pos:end="49:27">term_printf</name><argument_list pos:start="49:28" pos:end="49:63">(<argument pos:start="49:29" pos:end="49:49"><expr pos:start="49:29" pos:end="49:49"><literal type="string" pos:start="49:29" pos:end="49:49">"unknown key: '%s'\n"</literal></expr></argument>, <argument pos:start="49:52" pos:end="49:62"><expr pos:start="49:52" pos:end="49:62"><name pos:start="49:52" pos:end="49:62">keyname_buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="51:17" pos:end="51:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:35"><name pos:start="55:13" pos:end="55:20">keycodes</name><index pos:start="55:21" pos:end="55:35">[<expr pos:start="55:22" pos:end="55:34"><name pos:start="55:22" pos:end="55:32">nb_keycodes</name><operator pos:start="55:33" pos:end="55:34">++</operator></expr>]</index></name> <operator pos:start="55:37" pos:end="55:37">=</operator> <name pos:start="55:39" pos:end="55:45">keycode</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="61:18"><if pos:start="59:9" pos:end="61:18">if <condition pos:start="59:12" pos:end="59:23">(<expr pos:start="59:13" pos:end="59:22"><operator pos:start="59:13" pos:end="59:13">!</operator><name pos:start="59:14" pos:end="59:22">separator</name></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:18"><block_content pos:start="61:13" pos:end="61:18">

            <break pos:start="61:13" pos:end="61:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:31"><expr pos:start="63:9" pos:end="63:30"><name pos:start="63:9" pos:end="63:14">string</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:26">separator</name> <operator pos:start="63:28" pos:end="63:28">+</operator> <literal type="number" pos:start="63:30" pos:end="63:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></while>

    <comment type="block" pos:start="67:5" pos:end="67:25">/* key down events */</comment>

    <for pos:start="69:5" pos:end="79:5">for<control pos:start="69:8" pos:end="69:36">(<init pos:start="69:9" pos:end="69:14"><expr pos:start="69:9" pos:end="69:13"><name pos:start="69:9" pos:end="69:9">i</name> <operator pos:start="69:11" pos:end="69:11">=</operator> <literal type="number" pos:start="69:13" pos:end="69:13">0</literal></expr>;</init> <condition pos:start="69:16" pos:end="69:31"><expr pos:start="69:16" pos:end="69:30"><name pos:start="69:16" pos:end="69:16">i</name> <operator pos:start="69:18" pos:end="69:18">&lt;</operator> <name pos:start="69:20" pos:end="69:30">nb_keycodes</name></expr>;</condition> <incr pos:start="69:33" pos:end="69:35"><expr pos:start="69:33" pos:end="69:35"><name pos:start="69:33" pos:end="69:33">i</name><operator pos:start="69:34" pos:end="69:35">++</operator></expr></incr>)</control> <block pos:start="69:38" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:40">

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:15">keycode</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:29"><name pos:start="71:19" pos:end="71:26">keycodes</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:34"><if pos:start="73:9" pos:end="75:34">if <condition pos:start="73:12" pos:end="73:27">(<expr pos:start="73:13" pos:end="73:26"><name pos:start="73:13" pos:end="73:19">keycode</name> <operator pos:start="73:21" pos:end="73:21">&amp;</operator> <literal type="number" pos:start="73:23" pos:end="73:26">0x80</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:34"><block_content pos:start="75:13" pos:end="75:34">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><call pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:27">kbd_put_keycode</name><argument_list pos:start="75:28" pos:end="75:33">(<argument pos:start="75:29" pos:end="75:32"><expr pos:start="75:29" pos:end="75:32"><literal type="number" pos:start="75:29" pos:end="75:32">0xe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:40"><expr pos:start="77:9" pos:end="77:39"><call pos:start="77:9" pos:end="77:39"><name pos:start="77:9" pos:end="77:23">kbd_put_keycode</name><argument_list pos:start="77:24" pos:end="77:39">(<argument pos:start="77:25" pos:end="77:38"><expr pos:start="77:25" pos:end="77:38"><name pos:start="77:25" pos:end="77:31">keycode</name> <operator pos:start="77:33" pos:end="77:33">&amp;</operator> <literal type="number" pos:start="77:35" pos:end="77:38">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="81:5" pos:end="81:23">/* key up events */</comment>

    <for pos:start="83:5" pos:end="93:5">for<control pos:start="83:8" pos:end="83:41">(<init pos:start="83:9" pos:end="83:28"><expr pos:start="83:9" pos:end="83:27"><name pos:start="83:9" pos:end="83:9">i</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <name pos:start="83:13" pos:end="83:23">nb_keycodes</name> <operator pos:start="83:25" pos:end="83:25">-</operator> <literal type="number" pos:start="83:27" pos:end="83:27">1</literal></expr>;</init> <condition pos:start="83:30" pos:end="83:36"><expr pos:start="83:30" pos:end="83:35"><name pos:start="83:30" pos:end="83:30">i</name> <operator pos:start="83:32" pos:end="83:33">&gt;=</operator> <literal type="number" pos:start="83:35" pos:end="83:35">0</literal></expr>;</condition> <incr pos:start="83:38" pos:end="83:40"><expr pos:start="83:38" pos:end="83:40"><name pos:start="83:38" pos:end="83:38">i</name><operator pos:start="83:39" pos:end="83:40">--</operator></expr></incr>)</control> <block pos:start="83:43" pos:end="93:5">{<block_content pos:start="85:9" pos:end="91:40">

        <expr_stmt pos:start="85:9" pos:end="85:30"><expr pos:start="85:9" pos:end="85:29"><name pos:start="85:9" pos:end="85:15">keycode</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:29"><name pos:start="85:19" pos:end="85:26">keycodes</name><index pos:start="85:27" pos:end="85:29">[<expr pos:start="85:28" pos:end="85:28"><name pos:start="85:28" pos:end="85:28">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="87:9" pos:end="89:34"><if pos:start="87:9" pos:end="89:34">if <condition pos:start="87:12" pos:end="87:27">(<expr pos:start="87:13" pos:end="87:26"><name pos:start="87:13" pos:end="87:19">keycode</name> <operator pos:start="87:21" pos:end="87:21">&amp;</operator> <literal type="number" pos:start="87:23" pos:end="87:26">0x80</literal></expr>)</condition><block type="pseudo" pos:start="89:13" pos:end="89:34"><block_content pos:start="89:13" pos:end="89:34">

            <expr_stmt pos:start="89:13" pos:end="89:34"><expr pos:start="89:13" pos:end="89:33"><call pos:start="89:13" pos:end="89:33"><name pos:start="89:13" pos:end="89:27">kbd_put_keycode</name><argument_list pos:start="89:28" pos:end="89:33">(<argument pos:start="89:29" pos:end="89:32"><expr pos:start="89:29" pos:end="89:32"><literal type="number" pos:start="89:29" pos:end="89:32">0xe0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><call pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:23">kbd_put_keycode</name><argument_list pos:start="91:24" pos:end="91:39">(<argument pos:start="91:25" pos:end="91:38"><expr pos:start="91:25" pos:end="91:38"><name pos:start="91:25" pos:end="91:31">keycode</name> <operator pos:start="91:33" pos:end="91:33">|</operator> <literal type="number" pos:start="91:35" pos:end="91:38">0x80</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
