<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/4982.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">qemu_set_log</name><parameter_list pos:start="1:18" pos:end="1:54">(<parameter pos:start="1:19" pos:end="1:31"><decl pos:start="1:19" pos:end="1:31"><type pos:start="1:19" pos:end="1:31"><name pos:start="1:19" pos:end="1:21">int</name></type> <name pos:start="1:23" pos:end="1:31">log_flags</name></decl></parameter>, <parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:37">bool</name></type> <name pos:start="1:39" pos:end="1:53">use_own_buffers</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:5">

    <expr_stmt pos:start="5:5" pos:end="5:30"><expr pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:17">qemu_loglevel</name> <operator pos:start="5:19" pos:end="5:19">=</operator> <name pos:start="5:21" pos:end="5:29">log_flags</name></expr>;</expr_stmt>

    <if_stmt pos:start="7:5" pos:end="47:5"><if pos:start="7:5" pos:end="47:5">if <condition pos:start="7:8" pos:end="7:39">(<expr pos:start="7:9" pos:end="7:38"><name pos:start="7:9" pos:end="7:21">qemu_loglevel</name> <operator pos:start="7:23" pos:end="7:24">&amp;&amp;</operator> <operator pos:start="7:26" pos:end="7:26">!</operator><name pos:start="7:27" pos:end="7:38">qemu_logfile</name></expr>)</condition> <block pos:start="7:41" pos:end="47:5">{<block_content pos:start="9:9" pos:end="45:9">

        <expr_stmt pos:start="9:9" pos:end="9:66"><expr pos:start="9:9" pos:end="9:65"><name pos:start="9:9" pos:end="9:20">qemu_logfile</name> <operator pos:start="9:22" pos:end="9:22">=</operator> <call pos:start="9:24" pos:end="9:65"><name pos:start="9:24" pos:end="9:28">fopen</name><argument_list pos:start="9:29" pos:end="9:65">(<argument pos:start="9:30" pos:end="9:40"><expr pos:start="9:30" pos:end="9:40"><name pos:start="9:30" pos:end="9:40">logfilename</name></expr></argument>, <argument pos:start="9:43" pos:end="9:64"><expr pos:start="9:43" pos:end="9:64"><ternary pos:start="9:43" pos:end="9:64"><condition pos:start="9:43" pos:end="9:54"><expr pos:start="9:43" pos:end="9:52"><name pos:start="9:43" pos:end="9:52">log_append</name></expr> ?</condition><then pos:start="9:56" pos:end="9:58"> <expr pos:start="9:56" pos:end="9:58"><literal type="string" pos:start="9:56" pos:end="9:58">"a"</literal></expr> </then><else pos:start="9:60" pos:end="9:64">: <expr pos:start="9:62" pos:end="9:64"><literal type="string" pos:start="9:62" pos:end="9:64">"w"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="11:9" pos:end="17:9"><if pos:start="11:9" pos:end="17:9">if <condition pos:start="11:12" pos:end="11:26">(<expr pos:start="11:13" pos:end="11:25"><operator pos:start="11:13" pos:end="11:13">!</operator><name pos:start="11:14" pos:end="11:25">qemu_logfile</name></expr>)</condition> <block pos:start="11:28" pos:end="17:9">{<block_content pos:start="13:13" pos:end="15:21">

            <expr_stmt pos:start="13:13" pos:end="13:32"><expr pos:start="13:13" pos:end="13:31"><call pos:start="13:13" pos:end="13:31"><name pos:start="13:13" pos:end="13:18">perror</name><argument_list pos:start="13:19" pos:end="13:31">(<argument pos:start="13:20" pos:end="13:30"><expr pos:start="13:20" pos:end="13:30"><name pos:start="13:20" pos:end="13:30">logfilename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="15:21"><expr pos:start="15:13" pos:end="15:20"><call pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:17">_exit</name><argument_list pos:start="15:18" pos:end="15:20">(<argument pos:start="15:19" pos:end="15:19"><expr pos:start="15:19" pos:end="15:19"><literal type="number" pos:start="15:19" pos:end="15:19">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="19:9" pos:end="19:76">/* must avoid mmap() usage of glibc by setting a buffer "by hand" */</comment>

        <if_stmt pos:start="21:9" pos:end="45:9"><if pos:start="21:9" pos:end="29:9">if <condition pos:start="21:12" pos:end="21:28">(<expr pos:start="21:13" pos:end="21:27"><name pos:start="21:13" pos:end="21:27">use_own_buffers</name></expr>)</condition> <block pos:start="21:30" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:76">

            <decl_stmt pos:start="23:13" pos:end="23:42"><decl pos:start="23:13" pos:end="23:41"><type pos:start="23:13" pos:end="23:23"><specifier pos:start="23:13" pos:end="23:18">static</specifier> <name pos:start="23:20" pos:end="23:23">char</name></type> <name pos:start="23:25" pos:end="23:41"><name pos:start="23:25" pos:end="23:35">logfile_buf</name><index pos:start="23:36" pos:end="23:41">[<expr pos:start="23:37" pos:end="23:40"><literal type="number" pos:start="23:37" pos:end="23:40">4096</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="27:13" pos:end="27:76"><expr pos:start="27:13" pos:end="27:75"><call pos:start="27:13" pos:end="27:75"><name pos:start="27:13" pos:end="27:19">setvbuf</name><argument_list pos:start="27:20" pos:end="27:75">(<argument pos:start="27:21" pos:end="27:32"><expr pos:start="27:21" pos:end="27:32"><name pos:start="27:21" pos:end="27:32">qemu_logfile</name></expr></argument>, <argument pos:start="27:35" pos:end="27:45"><expr pos:start="27:35" pos:end="27:45"><name pos:start="27:35" pos:end="27:45">logfile_buf</name></expr></argument>, <argument pos:start="27:48" pos:end="27:53"><expr pos:start="27:48" pos:end="27:53"><name pos:start="27:48" pos:end="27:53">_IOLBF</name></expr></argument>, <argument pos:start="27:56" pos:end="27:74"><expr pos:start="27:56" pos:end="27:74"><sizeof pos:start="27:56" pos:end="27:74">sizeof<argument_list pos:start="27:62" pos:end="27:74">(<argument pos:start="27:63" pos:end="27:73"><expr pos:start="27:63" pos:end="27:73"><name pos:start="27:63" pos:end="27:73">logfile_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="29:11" pos:end="45:9">else <block pos:start="29:16" pos:end="45:9">{<block_content pos:start="35:13" pos:end="43:27">

<cpp:if pos:start="31:1" pos:end="31:19">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:19"><call pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:11">defined</name><argument_list pos:start="31:12" pos:end="31:19">(<argument pos:start="31:13" pos:end="31:18"><expr pos:start="31:13" pos:end="31:18"><name pos:start="31:13" pos:end="31:18">_WIN32</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <comment type="block" pos:start="33:13" pos:end="33:81">/* Win32 doesn't support line-buffering, so use unbuffered output. */</comment>

            <expr_stmt pos:start="35:13" pos:end="38:0"><expr pos:start="35:13" pos:end="35:50"><call pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:19">setvbuf</name><argument_list pos:start="35:20" pos:end="35:50">(<argument pos:start="35:21" pos:end="35:32"><expr pos:start="35:21" pos:end="35:32"><name pos:start="35:21" pos:end="35:32">qemu_logfile</name></expr></argument>, <argument pos:start="35:35" pos:end="35:38"><expr pos:start="35:35" pos:end="35:38"><name pos:start="35:35" pos:end="35:38">NULL</name></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><name pos:start="35:41" pos:end="35:46">_IONBF</name></expr></argument>, <argument pos:start="35:49" pos:end="35:49"><expr pos:start="35:49" pos:end="35:49"><literal type="number" pos:start="35:49" pos:end="35:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="37:1" pos:end="37:5">#<cpp:directive pos:start="37:2" pos:end="37:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="39:13" pos:end="42:0"><expr pos:start="39:13" pos:end="39:50"><call pos:start="39:13" pos:end="39:50"><name pos:start="39:13" pos:end="39:19">setvbuf</name><argument_list pos:start="39:20" pos:end="39:50">(<argument pos:start="39:21" pos:end="39:32"><expr pos:start="39:21" pos:end="39:32"><name pos:start="39:21" pos:end="39:32">qemu_logfile</name></expr></argument>, <argument pos:start="39:35" pos:end="39:38"><expr pos:start="39:35" pos:end="39:38"><name pos:start="39:35" pos:end="39:38">NULL</name></expr></argument>, <argument pos:start="39:41" pos:end="39:46"><expr pos:start="39:41" pos:end="39:46"><name pos:start="39:41" pos:end="39:46">_IOLBF</name></expr></argument>, <argument pos:start="39:49" pos:end="39:49"><expr pos:start="39:49" pos:end="39:49"><literal type="number" pos:start="39:49" pos:end="39:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="43:13" pos:end="43:27"><expr pos:start="43:13" pos:end="43:26"><name pos:start="43:13" pos:end="43:22">log_append</name> <operator pos:start="43:24" pos:end="43:24">=</operator> <literal type="number" pos:start="43:26" pos:end="43:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:39">(<expr pos:start="49:9" pos:end="49:38"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:22">qemu_loglevel</name> <operator pos:start="49:24" pos:end="49:25">&amp;&amp;</operator> <name pos:start="49:27" pos:end="49:38">qemu_logfile</name></expr>)</condition> <block pos:start="49:41" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:28">

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><call pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:14">fclose</name><argument_list pos:start="51:15" pos:end="51:28">(<argument pos:start="51:16" pos:end="51:27"><expr pos:start="51:16" pos:end="51:27"><name pos:start="51:16" pos:end="51:27">qemu_logfile</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:28"><expr pos:start="53:9" pos:end="53:27"><name pos:start="53:9" pos:end="53:20">qemu_logfile</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:27">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
