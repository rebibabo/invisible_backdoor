<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7588.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:26"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:24"><name pos:start="1:8" pos:end="1:13">struct</name> <name pos:start="1:15" pos:end="1:24">omap_lpg_s</name></name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:39">omap_lpg_init</name><parameter_list pos:start="1:40" pos:end="1:78">(<parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:63">base</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:73">omap_clk</name></type> <name pos:start="1:75" pos:end="1:77">clk</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:17">iomemtype</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="9:52"><decl pos:start="7:5" pos:end="9:51"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_lpg_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="9:51">= <expr pos:start="7:28" pos:end="9:51"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_lpg_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator>

            <call pos:start="9:13" pos:end="9:51"><name pos:start="9:13" pos:end="9:24">qemu_mallocz</name><argument_list pos:start="9:25" pos:end="9:51">(<argument pos:start="9:26" pos:end="9:50"><expr pos:start="9:26" pos:end="9:50"><sizeof pos:start="9:26" pos:end="9:50">sizeof<argument_list pos:start="9:32" pos:end="9:50">(<argument pos:start="9:33" pos:end="9:49"><expr pos:start="9:33" pos:end="9:49">struct <name pos:start="9:40" pos:end="9:49">omap_lpg_s</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:55"><expr pos:start="13:5" pos:end="13:54"><name pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:9">tm</name></name> <operator pos:start="13:11" pos:end="13:11">=</operator> <call pos:start="13:13" pos:end="13:54"><name pos:start="13:13" pos:end="13:26">qemu_new_timer</name><argument_list pos:start="13:27" pos:end="13:54">(<argument pos:start="13:28" pos:end="13:35"><expr pos:start="13:28" pos:end="13:35"><name pos:start="13:28" pos:end="13:35">rt_clock</name></expr></argument>, <argument pos:start="13:38" pos:end="13:50"><expr pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:50">omap_lpg_tick</name></expr></argument>, <argument pos:start="13:53" pos:end="13:53"><expr pos:start="13:53" pos:end="13:53"><name pos:start="13:53" pos:end="13:53">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><call pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:18">omap_lpg_reset</name><argument_list pos:start="17:19" pos:end="17:21">(<argument pos:start="17:20" pos:end="17:20"><expr pos:start="17:20" pos:end="17:20"><name pos:start="17:20" pos:end="17:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="23:63"><expr pos:start="21:5" pos:end="23:62"><name pos:start="21:5" pos:end="21:13">iomemtype</name> <operator pos:start="21:15" pos:end="21:15">=</operator> <call pos:start="21:17" pos:end="23:62"><name pos:start="21:17" pos:end="21:38">cpu_register_io_memory</name><argument_list pos:start="21:39" pos:end="23:62">(<argument pos:start="21:40" pos:end="21:54"><expr pos:start="21:40" pos:end="21:54"><name pos:start="21:40" pos:end="21:54">omap_lpg_readfn</name></expr></argument>,

                    <argument pos:start="23:21" pos:end="23:36"><expr pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:36">omap_lpg_writefn</name></expr></argument>, <argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">s</name></expr></argument>, <argument pos:start="23:42" pos:end="23:61"><expr pos:start="23:42" pos:end="23:61"><name pos:start="23:42" pos:end="23:61">DEVICE_NATIVE_ENDIAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:57"><expr pos:start="25:5" pos:end="25:56"><call pos:start="25:5" pos:end="25:56"><name pos:start="25:5" pos:end="25:32">cpu_register_physical_memory</name><argument_list pos:start="25:33" pos:end="25:56">(<argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">base</name></expr></argument>, <argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><literal type="number" pos:start="25:40" pos:end="25:44">0x800</literal></expr></argument>, <argument pos:start="25:47" pos:end="25:55"><expr pos:start="25:47" pos:end="25:55"><name pos:start="25:47" pos:end="25:55">iomemtype</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:76"><expr pos:start="29:5" pos:end="29:75"><call pos:start="29:5" pos:end="29:75"><name pos:start="29:5" pos:end="29:20">omap_clk_adduser</name><argument_list pos:start="29:21" pos:end="29:75">(<argument pos:start="29:22" pos:end="29:24"><expr pos:start="29:22" pos:end="29:24"><name pos:start="29:22" pos:end="29:24">clk</name></expr></argument>, <argument pos:start="29:27" pos:end="29:74"><expr pos:start="29:27" pos:end="29:74"><call pos:start="29:27" pos:end="29:71"><name pos:start="29:27" pos:end="29:44">qemu_allocate_irqs</name><argument_list pos:start="29:45" pos:end="29:71">(<argument pos:start="29:46" pos:end="29:64"><expr pos:start="29:46" pos:end="29:64"><name pos:start="29:46" pos:end="29:64">omap_lpg_clk_update</name></expr></argument>, <argument pos:start="29:67" pos:end="29:67"><expr pos:start="29:67" pos:end="29:67"><name pos:start="29:67" pos:end="29:67">s</name></expr></argument>, <argument pos:start="29:70" pos:end="29:70"><expr pos:start="29:70" pos:end="29:70"><literal type="number" pos:start="29:70" pos:end="29:70">1</literal></expr></argument>)</argument_list></call><index pos:start="29:72" pos:end="29:74">[<expr pos:start="29:73" pos:end="29:73"><literal type="number" pos:start="29:73" pos:end="29:73">0</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><name pos:start="33:12" pos:end="33:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
