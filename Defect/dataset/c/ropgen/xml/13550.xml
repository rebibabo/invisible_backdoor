<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13550.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:12">av_free</name><parameter_list pos:start="1:13" pos:end="1:23">(<parameter pos:start="1:14" pos:end="1:22"><decl pos:start="1:14" pos:end="1:22"><type pos:start="1:14" pos:end="1:19"><name pos:start="1:14" pos:end="1:17">void</name> <modifier pos:start="1:19" pos:end="1:19">*</modifier></type><name pos:start="1:20" pos:end="1:22">ptr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="7:5" pos:end="20:0">

<cpp:if pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:3">if</cpp:directive> <expr pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:24">CONFIG_MEMALIGN_HACK</name></expr></cpp:if>

    <if_stmt pos:start="7:5" pos:end="12:0"><if pos:start="7:5" pos:end="12:0">if <condition pos:start="7:8" pos:end="7:12">(<expr pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">ptr</name></expr>)</condition><block type="pseudo" pos:start="9:9" pos:end="12:0"><block_content pos:start="9:9" pos:end="12:0">

        <expr_stmt pos:start="9:9" pos:end="12:0"><expr pos:start="9:9" pos:end="9:45"><call pos:start="9:9" pos:end="9:45"><name pos:start="9:9" pos:end="9:12">free</name><argument_list pos:start="9:13" pos:end="9:45">(<argument pos:start="9:14" pos:end="9:44"><expr pos:start="9:14" pos:end="9:44"><operator pos:start="9:14" pos:end="9:14">(</operator><name pos:start="9:15" pos:end="9:18">char</name> <operator pos:start="9:20" pos:end="9:20">*</operator><operator pos:start="9:21" pos:end="9:21">)</operator><name pos:start="9:22" pos:end="9:24">ptr</name> <operator pos:start="9:26" pos:end="9:26">-</operator> <operator pos:start="9:28" pos:end="9:28">(</operator><operator pos:start="9:29" pos:end="9:29">(</operator><name pos:start="9:30" pos:end="9:33">char</name> <operator pos:start="9:35" pos:end="9:35">*</operator><operator pos:start="9:36" pos:end="9:36">)</operator><name pos:start="9:37" pos:end="9:39">ptr</name><operator pos:start="9:40" pos:end="9:40">)</operator><index pos:start="9:41" pos:end="9:44">[<expr pos:start="9:42" pos:end="9:43"><operator pos:start="9:42" pos:end="9:42">-</operator><literal type="number" pos:start="9:43" pos:end="9:43">1</literal></expr>]</index></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<cpp:elif pos:start="11:1" pos:end="11:25">#<cpp:directive pos:start="11:2" pos:end="11:5">elif</cpp:directive> <expr pos:start="11:7" pos:end="11:25"><name pos:start="11:7" pos:end="11:25">HAVE_ALIGNED_MALLOC</name></expr></cpp:elif>

    <expr_stmt pos:start="13:5" pos:end="16:0"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:17">_aligned_free</name><argument_list pos:start="13:18" pos:end="13:22">(<argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><name pos:start="13:19" pos:end="13:21">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="15:1" pos:end="15:5">#<cpp:directive pos:start="15:2" pos:end="15:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="17:5" pos:end="20:0"><expr pos:start="17:5" pos:end="17:13"><call pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">free</name><argument_list pos:start="17:9" pos:end="17:13">(<argument pos:start="17:10" pos:end="17:12"><expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="19:1" pos:end="19:6">#<cpp:directive pos:start="19:2" pos:end="19:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
