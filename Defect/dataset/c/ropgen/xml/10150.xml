<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10150.c" pos:tabs="8"><function pos:start="1:1" pos:end="437:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">audio_decode_frame</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:40">VideoState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">is</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="437:1">{<block_content pos:start="5:5" pos:end="435:5">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVPacket</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">pkt_temp</name> <init pos:start="5:24" pos:end="5:44">= <expr pos:start="5:26" pos:end="5:44"><operator pos:start="5:26" pos:end="5:26">&amp;</operator><name pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:28">is</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:44">audio_pkt_temp</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVPacket</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:17">pkt</name> <init pos:start="7:19" pos:end="7:34">= <expr pos:start="7:21" pos:end="7:34"><operator pos:start="7:21" pos:end="7:21">&amp;</operator><name pos:start="7:22" pos:end="7:34"><name pos:start="7:22" pos:end="7:23">is</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">audio_pkt</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">dec</name> <init pos:start="9:25" pos:end="9:45">= <expr pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:28">is</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:38">audio_st</name><operator pos:start="9:39" pos:end="9:40">-&gt;</operator><name pos:start="9:41" pos:end="9:45">codec</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">len1</name></decl>, <decl pos:start="11:15" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:23">data_size</name></decl>, <decl pos:start="11:26" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:26" pos:end="11:44">resampled_data_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:30">dec_channel_layout</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">got_frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:20"><name pos:start="17:5" pos:end="17:13">av_unused</name> <name pos:start="17:15" pos:end="17:20">double</name></type> <name pos:start="17:22" pos:end="17:33">audio_clock0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:18">new_packet</name> <init pos:start="19:20" pos:end="19:22">= <expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:27"><decl pos:start="21:5" pos:end="21:26"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:22">flush_complete</name> <init pos:start="21:24" pos:end="21:26">= <expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:26"><decl pos:start="23:5" pos:end="23:25"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:25">wanted_nb_samples</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:18"><decl pos:start="25:5" pos:end="25:17"><type pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:14">AVRational</name></type> <name pos:start="25:16" pos:end="25:17">tb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:12"><decl pos:start="27:5" pos:end="27:11"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:20"><decl pos:start="29:5" pos:end="29:19"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:19">reconfigure</name></decl>;</decl_stmt>



    <for pos:start="33:5" pos:end="435:5">for <control pos:start="33:9" pos:end="33:12">(<init pos:start="33:10" pos:end="33:10">;</init><condition pos:start="33:11" pos:end="33:11">;</condition><incr/>)</control> <block pos:start="33:14" pos:end="435:5">{<block_content pos:start="37:9" pos:end="433:25">

        <comment type="block" pos:start="35:9" pos:end="35:63">/* NOTE: the audio packet can contain several frames */</comment>

        <while pos:start="37:9" pos:end="385:9">while <condition pos:start="37:15" pos:end="37:101">(<expr pos:start="37:16" pos:end="37:100"><name pos:start="37:16" pos:end="37:29"><name pos:start="37:16" pos:end="37:23">pkt_temp</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:29">size</name></name> <operator pos:start="37:31" pos:end="37:31">&gt;</operator> <literal type="number" pos:start="37:33" pos:end="37:33">0</literal> <operator pos:start="37:35" pos:end="37:36">||</operator> <operator pos:start="37:38" pos:end="37:38">(</operator><operator pos:start="37:39" pos:end="37:39">!</operator><name pos:start="37:40" pos:end="37:53"><name pos:start="37:40" pos:end="37:47">pkt_temp</name><operator pos:start="37:48" pos:end="37:49">-&gt;</operator><name pos:start="37:50" pos:end="37:53">data</name></name> <operator pos:start="37:55" pos:end="37:56">&amp;&amp;</operator> <name pos:start="37:58" pos:end="37:67">new_packet</name><operator pos:start="37:68" pos:end="37:68">)</operator> <operator pos:start="37:70" pos:end="37:71">||</operator> <name pos:start="37:73" pos:end="37:100"><name pos:start="37:73" pos:end="37:74">is</name><operator pos:start="37:75" pos:end="37:76">-&gt;</operator><name pos:start="37:77" pos:end="37:100">audio_buf_frames_pending</name></name></expr>)</condition> <block pos:start="37:103" pos:end="385:9">{<block_content pos:start="39:13" pos:end="383:39">

            <if_stmt pos:start="39:13" pos:end="51:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:27">(<expr pos:start="39:17" pos:end="39:26"><operator pos:start="39:17" pos:end="39:17">!</operator><name pos:start="39:18" pos:end="39:26"><name pos:start="39:18" pos:end="39:19">is</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:26">frame</name></name></expr>)</condition> <block pos:start="39:29" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:43">

                <if_stmt pos:start="41:17" pos:end="43:43"><if pos:start="41:17" pos:end="43:43">if <condition pos:start="41:20" pos:end="41:57">(<expr pos:start="41:21" pos:end="41:56"><operator pos:start="41:21" pos:end="41:21">!</operator><operator pos:start="41:22" pos:end="41:22">(</operator><name pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:24">is</name><operator pos:start="41:25" pos:end="41:26">-&gt;</operator><name pos:start="41:27" pos:end="41:31">frame</name></name> <operator pos:start="41:33" pos:end="41:33">=</operator> <call pos:start="41:35" pos:end="41:55"><name pos:start="41:35" pos:end="41:53">avcodec_alloc_frame</name><argument_list pos:start="41:54" pos:end="41:55">()</argument_list></call><operator pos:start="41:56" pos:end="41:56">)</operator></expr>)</condition><block type="pseudo" pos:start="43:21" pos:end="43:43"><block_content pos:start="43:21" pos:end="43:43">

                    <return pos:start="43:21" pos:end="43:43">return <expr pos:start="43:28" pos:end="43:42"><call pos:start="43:28" pos:end="43:42"><name pos:start="43:28" pos:end="43:34">AVERROR</name><argument_list pos:start="43:35" pos:end="43:42">(<argument pos:start="43:36" pos:end="43:41"><expr pos:start="43:36" pos:end="43:41"><name pos:start="43:36" pos:end="43:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="45:15" pos:end="51:13">else <block pos:start="45:20" pos:end="51:13">{<block_content pos:start="47:17" pos:end="49:54">

                <expr_stmt pos:start="47:17" pos:end="47:42"><expr pos:start="47:17" pos:end="47:41"><call pos:start="47:17" pos:end="47:41"><name pos:start="47:17" pos:end="47:30">av_frame_unref</name><argument_list pos:start="47:31" pos:end="47:41">(<argument pos:start="47:32" pos:end="47:40"><expr pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:40"><name pos:start="47:32" pos:end="47:33">is</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:54"><expr pos:start="49:17" pos:end="49:53"><call pos:start="49:17" pos:end="49:53"><name pos:start="49:17" pos:end="49:42">avcodec_get_frame_defaults</name><argument_list pos:start="49:43" pos:end="49:53">(<argument pos:start="49:44" pos:end="49:52"><expr pos:start="49:44" pos:end="49:52"><name pos:start="49:44" pos:end="49:52"><name pos:start="49:44" pos:end="49:45">is</name><operator pos:start="49:46" pos:end="49:47">-&gt;</operator><name pos:start="49:48" pos:end="49:52">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <if_stmt pos:start="55:13" pos:end="57:22"><if pos:start="55:13" pos:end="57:22">if <condition pos:start="55:16" pos:end="55:63">(<expr pos:start="55:17" pos:end="55:62"><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:18">is</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:26">audioq</name><operator pos:start="55:27" pos:end="55:27">.</operator><name pos:start="55:28" pos:end="55:33">serial</name></name> <operator pos:start="55:35" pos:end="55:36">!=</operator> <name pos:start="55:38" pos:end="55:62"><name pos:start="55:38" pos:end="55:39">is</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:62">audio_pkt_temp_serial</name></name></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:22"><block_content pos:start="57:17" pos:end="57:22">

                <break pos:start="57:17" pos:end="57:22">break;</break></block_content></block></if></if_stmt>



            <if_stmt pos:start="61:13" pos:end="63:26"><if pos:start="61:13" pos:end="63:26">if <condition pos:start="61:16" pos:end="61:27">(<expr pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:26"><name pos:start="61:17" pos:end="61:18">is</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">paused</name></name></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:26"><block_content pos:start="63:17" pos:end="63:26">

                <return pos:start="63:17" pos:end="63:26">return <expr pos:start="63:24" pos:end="63:25"><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="67:13" pos:end="194:0"><if pos:start="67:13" pos:end="194:0">if <condition pos:start="67:16" pos:end="67:46">(<expr pos:start="67:17" pos:end="67:45"><operator pos:start="67:17" pos:end="67:17">!</operator><name pos:start="67:18" pos:end="67:45"><name pos:start="67:18" pos:end="67:19">is</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:45">audio_buf_frames_pending</name></name></expr>)</condition> <block pos:start="67:48" pos:end="194:0">{<block_content pos:start="69:17" pos:end="190:0">

                <if_stmt pos:start="69:17" pos:end="71:26"><if pos:start="69:17" pos:end="71:26">if <condition pos:start="69:20" pos:end="69:35">(<expr pos:start="69:21" pos:end="69:34"><name pos:start="69:21" pos:end="69:34">flush_complete</name></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:26"><block_content pos:start="71:21" pos:end="71:26">

                    <break pos:start="71:21" pos:end="71:26">break;</break></block_content></block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:31"><expr pos:start="73:17" pos:end="73:30"><name pos:start="73:17" pos:end="73:26">new_packet</name> <operator pos:start="73:28" pos:end="73:28">=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:83"><expr pos:start="75:17" pos:end="75:82"><name pos:start="75:17" pos:end="75:20">len1</name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:82"><name pos:start="75:24" pos:end="75:44">avcodec_decode_audio4</name><argument_list pos:start="75:45" pos:end="75:82">(<argument pos:start="75:46" pos:end="75:48"><expr pos:start="75:46" pos:end="75:48"><name pos:start="75:46" pos:end="75:48">dec</name></expr></argument>, <argument pos:start="75:51" pos:end="75:59"><expr pos:start="75:51" pos:end="75:59"><name pos:start="75:51" pos:end="75:59"><name pos:start="75:51" pos:end="75:52">is</name><operator pos:start="75:53" pos:end="75:54">-&gt;</operator><name pos:start="75:55" pos:end="75:59">frame</name></name></expr></argument>, <argument pos:start="75:62" pos:end="75:71"><expr pos:start="75:62" pos:end="75:71"><operator pos:start="75:62" pos:end="75:62">&amp;</operator><name pos:start="75:63" pos:end="75:71">got_frame</name></expr></argument>, <argument pos:start="75:74" pos:end="75:81"><expr pos:start="75:74" pos:end="75:81"><name pos:start="75:74" pos:end="75:81">pkt_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="77:17" pos:end="85:17"><if pos:start="77:17" pos:end="85:17">if <condition pos:start="77:20" pos:end="77:29">(<expr pos:start="77:21" pos:end="77:28"><name pos:start="77:21" pos:end="77:24">len1</name> <operator pos:start="77:26" pos:end="77:26">&lt;</operator> <literal type="number" pos:start="77:28" pos:end="77:28">0</literal></expr>)</condition> <block pos:start="77:31" pos:end="85:17">{<block_content pos:start="81:21" pos:end="83:26">

                    <comment type="block" pos:start="79:21" pos:end="79:53">/* if error, we skip the frame */</comment>

                    <expr_stmt pos:start="81:21" pos:end="81:39"><expr pos:start="81:21" pos:end="81:38"><name pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:28">pkt_temp</name><operator pos:start="81:29" pos:end="81:30">-&gt;</operator><name pos:start="81:31" pos:end="81:34">size</name></name> <operator pos:start="81:36" pos:end="81:36">=</operator> <literal type="number" pos:start="81:38" pos:end="81:38">0</literal></expr>;</expr_stmt>

                    <break pos:start="83:21" pos:end="83:26">break;</break>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="89:17" pos:end="89:39"><expr pos:start="89:17" pos:end="89:38"><name pos:start="89:17" pos:end="89:30"><name pos:start="89:17" pos:end="89:24">pkt_temp</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:30">data</name></name> <operator pos:start="89:32" pos:end="89:33">+=</operator> <name pos:start="89:35" pos:end="89:38">len1</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:39"><expr pos:start="91:17" pos:end="91:38"><name pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:24">pkt_temp</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:30">size</name></name> <operator pos:start="91:32" pos:end="91:33">-=</operator> <name pos:start="91:35" pos:end="91:38">len1</name></expr>;</expr_stmt>



                <if_stmt pos:start="95:17" pos:end="105:17"><if pos:start="95:17" pos:end="105:17">if <condition pos:start="95:20" pos:end="95:31">(<expr pos:start="95:21" pos:end="95:30"><operator pos:start="95:21" pos:end="95:21">!</operator><name pos:start="95:22" pos:end="95:30">got_frame</name></expr>)</condition> <block pos:start="95:33" pos:end="105:17">{<block_content pos:start="99:21" pos:end="103:29">

                    <comment type="block" pos:start="97:21" pos:end="97:79">/* stop sending empty packets if the decoder is finished */</comment>

                    <if_stmt pos:start="99:21" pos:end="101:43"><if pos:start="99:21" pos:end="101:43">if <condition pos:start="99:24" pos:end="99:86">(<expr pos:start="99:25" pos:end="99:85"><operator pos:start="99:25" pos:end="99:25">!</operator><name pos:start="99:26" pos:end="99:39"><name pos:start="99:26" pos:end="99:33">pkt_temp</name><operator pos:start="99:34" pos:end="99:35">-&gt;</operator><name pos:start="99:36" pos:end="99:39">data</name></name> <operator pos:start="99:41" pos:end="99:42">&amp;&amp;</operator> <name pos:start="99:44" pos:end="99:67"><name pos:start="99:44" pos:end="99:46">dec</name><operator pos:start="99:47" pos:end="99:48">-&gt;</operator><name pos:start="99:49" pos:end="99:53">codec</name><operator pos:start="99:54" pos:end="99:55">-&gt;</operator><name pos:start="99:56" pos:end="99:67">capabilities</name></name> <operator pos:start="99:69" pos:end="99:69">&amp;</operator> <name pos:start="99:71" pos:end="99:85">CODEC_CAP_DELAY</name></expr>)</condition><block type="pseudo" pos:start="101:25" pos:end="101:43"><block_content pos:start="101:25" pos:end="101:43">

                        <expr_stmt pos:start="101:25" pos:end="101:43"><expr pos:start="101:25" pos:end="101:42"><name pos:start="101:25" pos:end="101:38">flush_complete</name> <operator pos:start="101:40" pos:end="101:40">=</operator> <literal type="number" pos:start="101:42" pos:end="101:42">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <continue pos:start="103:21" pos:end="103:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="109:17" pos:end="109:61"><expr pos:start="109:17" pos:end="109:60"><name pos:start="109:17" pos:end="109:18">tb</name> <operator pos:start="109:20" pos:end="109:20">=</operator> <operator pos:start="109:22" pos:end="109:22">(</operator><name pos:start="109:23" pos:end="109:32">AVRational</name><operator pos:start="109:33" pos:end="109:33">)</operator><block pos:start="109:34" pos:end="109:60">{<expr pos:start="109:35" pos:end="109:35"><literal type="number" pos:start="109:35" pos:end="109:35">1</literal></expr>, <expr pos:start="109:38" pos:end="109:59"><name pos:start="109:38" pos:end="109:59"><name pos:start="109:38" pos:end="109:39">is</name><operator pos:start="109:40" pos:end="109:41">-&gt;</operator><name pos:start="109:42" pos:end="109:46">frame</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:59">sample_rate</name></name></expr>}</block></expr>;</expr_stmt>

                <if_stmt pos:start="111:17" pos:end="117:99"><if pos:start="111:17" pos:end="113:86">if <condition pos:start="111:20" pos:end="111:53">(<expr pos:start="111:21" pos:end="111:52"><name pos:start="111:21" pos:end="111:34"><name pos:start="111:21" pos:end="111:22">is</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:29">frame</name><operator pos:start="111:30" pos:end="111:31">-&gt;</operator><name pos:start="111:32" pos:end="111:34">pts</name></name> <operator pos:start="111:36" pos:end="111:37">!=</operator> <name pos:start="111:39" pos:end="111:52">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="113:21" pos:end="113:86"><block_content pos:start="113:21" pos:end="113:86">

                    <expr_stmt pos:start="113:21" pos:end="113:86"><expr pos:start="113:21" pos:end="113:85"><name pos:start="113:21" pos:end="113:34"><name pos:start="113:21" pos:end="113:22">is</name><operator pos:start="113:23" pos:end="113:24">-&gt;</operator><name pos:start="113:25" pos:end="113:29">frame</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:34">pts</name></name> <operator pos:start="113:36" pos:end="113:36">=</operator> <call pos:start="113:38" pos:end="113:85"><name pos:start="113:38" pos:end="113:49">av_rescale_q</name><argument_list pos:start="113:50" pos:end="113:85">(<argument pos:start="113:51" pos:end="113:64"><expr pos:start="113:51" pos:end="113:64"><name pos:start="113:51" pos:end="113:64"><name pos:start="113:51" pos:end="113:52">is</name><operator pos:start="113:53" pos:end="113:54">-&gt;</operator><name pos:start="113:55" pos:end="113:59">frame</name><operator pos:start="113:60" pos:end="113:61">-&gt;</operator><name pos:start="113:62" pos:end="113:64">pts</name></name></expr></argument>, <argument pos:start="113:67" pos:end="113:80"><expr pos:start="113:67" pos:end="113:80"><name pos:start="113:67" pos:end="113:80"><name pos:start="113:67" pos:end="113:69">dec</name><operator pos:start="113:70" pos:end="113:71">-&gt;</operator><name pos:start="113:72" pos:end="113:80">time_base</name></name></expr></argument>, <argument pos:start="113:83" pos:end="113:84"><expr pos:start="113:83" pos:end="113:84"><name pos:start="113:83" pos:end="113:84">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="115:17" pos:end="117:99">else if <condition pos:start="115:25" pos:end="115:62">(<expr pos:start="115:26" pos:end="115:61"><name pos:start="115:26" pos:end="115:43"><name pos:start="115:26" pos:end="115:27">is</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:34">frame</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:43">pkt_pts</name></name> <operator pos:start="115:45" pos:end="115:46">!=</operator> <name pos:start="115:48" pos:end="115:61">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="117:21" pos:end="117:99"><block_content pos:start="117:21" pos:end="117:99">

                    <expr_stmt pos:start="117:21" pos:end="117:99"><expr pos:start="117:21" pos:end="117:98"><name pos:start="117:21" pos:end="117:34"><name pos:start="117:21" pos:end="117:22">is</name><operator pos:start="117:23" pos:end="117:24">-&gt;</operator><name pos:start="117:25" pos:end="117:29">frame</name><operator pos:start="117:30" pos:end="117:31">-&gt;</operator><name pos:start="117:32" pos:end="117:34">pts</name></name> <operator pos:start="117:36" pos:end="117:36">=</operator> <call pos:start="117:38" pos:end="117:98"><name pos:start="117:38" pos:end="117:49">av_rescale_q</name><argument_list pos:start="117:50" pos:end="117:98">(<argument pos:start="117:51" pos:end="117:68"><expr pos:start="117:51" pos:end="117:68"><name pos:start="117:51" pos:end="117:68"><name pos:start="117:51" pos:end="117:52">is</name><operator pos:start="117:53" pos:end="117:54">-&gt;</operator><name pos:start="117:55" pos:end="117:59">frame</name><operator pos:start="117:60" pos:end="117:61">-&gt;</operator><name pos:start="117:62" pos:end="117:68">pkt_pts</name></name></expr></argument>, <argument pos:start="117:71" pos:end="117:93"><expr pos:start="117:71" pos:end="117:93"><name pos:start="117:71" pos:end="117:93"><name pos:start="117:71" pos:end="117:72">is</name><operator pos:start="117:73" pos:end="117:74">-&gt;</operator><name pos:start="117:75" pos:end="117:82">audio_st</name><operator pos:start="117:83" pos:end="117:84">-&gt;</operator><name pos:start="117:85" pos:end="117:93">time_base</name></name></expr></argument>, <argument pos:start="117:96" pos:end="117:97"><expr pos:start="117:96" pos:end="117:97"><name pos:start="117:96" pos:end="117:97">tb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="119:17" pos:end="126:0"><if pos:start="119:17" pos:end="126:0">if <condition pos:start="119:20" pos:end="119:52">(<expr pos:start="119:21" pos:end="119:51"><name pos:start="119:21" pos:end="119:33"><name pos:start="119:21" pos:end="119:28">pkt_temp</name><operator pos:start="119:29" pos:end="119:30">-&gt;</operator><name pos:start="119:31" pos:end="119:33">pts</name></name> <operator pos:start="119:35" pos:end="119:36">!=</operator> <name pos:start="119:38" pos:end="119:51">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="121:21" pos:end="126:0"><block_content pos:start="121:21" pos:end="126:0">

                    <expr_stmt pos:start="121:21" pos:end="126:0"><expr pos:start="121:21" pos:end="121:126"><name pos:start="121:21" pos:end="121:33"><name pos:start="121:21" pos:end="121:28">pkt_temp</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:33">pts</name></name> <operator pos:start="121:35" pos:end="121:36">+=</operator> <operator pos:start="121:38" pos:end="121:38">(</operator><name pos:start="121:39" pos:end="121:44">double</name><operator pos:start="121:45" pos:end="121:45">)</operator> <name pos:start="121:47" pos:end="121:67"><name pos:start="121:47" pos:end="121:48">is</name><operator pos:start="121:49" pos:end="121:50">-&gt;</operator><name pos:start="121:51" pos:end="121:55">frame</name><operator pos:start="121:56" pos:end="121:57">-&gt;</operator><name pos:start="121:58" pos:end="121:67">nb_samples</name></name> <operator pos:start="121:69" pos:end="121:69">/</operator> <name pos:start="121:71" pos:end="121:92"><name pos:start="121:71" pos:end="121:72">is</name><operator pos:start="121:73" pos:end="121:74">-&gt;</operator><name pos:start="121:75" pos:end="121:79">frame</name><operator pos:start="121:80" pos:end="121:81">-&gt;</operator><name pos:start="121:82" pos:end="121:92">sample_rate</name></name> <operator pos:start="121:94" pos:end="121:94">/</operator> <call pos:start="121:96" pos:end="121:126"><name pos:start="121:96" pos:end="121:101">av_q2d</name><argument_list pos:start="121:102" pos:end="121:126">(<argument pos:start="121:103" pos:end="121:125"><expr pos:start="121:103" pos:end="121:125"><name pos:start="121:103" pos:end="121:125"><name pos:start="121:103" pos:end="121:104">is</name><operator pos:start="121:105" pos:end="121:106">-&gt;</operator><name pos:start="121:107" pos:end="121:114">audio_st</name><operator pos:start="121:115" pos:end="121:116">-&gt;</operator><name pos:start="121:117" pos:end="121:125">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="125:1" pos:end="125:19">#<cpp:directive pos:start="125:2" pos:end="125:3">if</cpp:directive> <expr pos:start="125:5" pos:end="125:19"><name pos:start="125:5" pos:end="125:19">CONFIG_AVFILTER</name></expr></cpp:if>

                <expr_stmt pos:start="127:17" pos:end="127:123"><expr pos:start="127:17" pos:end="127:122"><name pos:start="127:17" pos:end="127:34">dec_channel_layout</name> <operator pos:start="127:36" pos:end="127:36">=</operator> <call pos:start="127:38" pos:end="127:122"><name pos:start="127:38" pos:end="127:61">get_valid_channel_layout</name><argument_list pos:start="127:62" pos:end="127:122">(<argument pos:start="127:63" pos:end="127:87"><expr pos:start="127:63" pos:end="127:87"><name pos:start="127:63" pos:end="127:87"><name pos:start="127:63" pos:end="127:64">is</name><operator pos:start="127:65" pos:end="127:66">-&gt;</operator><name pos:start="127:67" pos:end="127:71">frame</name><operator pos:start="127:72" pos:end="127:73">-&gt;</operator><name pos:start="127:74" pos:end="127:87">channel_layout</name></name></expr></argument>, <argument pos:start="127:90" pos:end="127:121"><expr pos:start="127:90" pos:end="127:121"><call pos:start="127:90" pos:end="127:121"><name pos:start="127:90" pos:end="127:110">av_frame_get_channels</name><argument_list pos:start="127:111" pos:end="127:121">(<argument pos:start="127:112" pos:end="127:120"><expr pos:start="127:112" pos:end="127:120"><name pos:start="127:112" pos:end="127:120"><name pos:start="127:112" pos:end="127:113">is</name><operator pos:start="127:114" pos:end="127:115">-&gt;</operator><name pos:start="127:116" pos:end="127:120">frame</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="131:17" pos:end="141:81"><expr pos:start="131:17" pos:end="141:80"><name pos:start="131:17" pos:end="131:27">reconfigure</name> <operator pos:start="131:29" pos:end="131:29">=</operator>

                    <call pos:start="133:21" pos:end="135:87"><name pos:start="133:21" pos:end="133:34">cmp_audio_fmts</name><argument_list pos:start="133:35" pos:end="135:87">(<argument pos:start="133:36" pos:end="133:59"><expr pos:start="133:36" pos:end="133:59"><name pos:start="133:36" pos:end="133:59"><name pos:start="133:36" pos:end="133:37">is</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:55">audio_filter_src</name><operator pos:start="133:56" pos:end="133:56">.</operator><name pos:start="133:57" pos:end="133:59">fmt</name></name></expr></argument>, <argument pos:start="133:62" pos:end="133:90"><expr pos:start="133:62" pos:end="133:90"><name pos:start="133:62" pos:end="133:90"><name pos:start="133:62" pos:end="133:63">is</name><operator pos:start="133:64" pos:end="133:65">-&gt;</operator><name pos:start="133:66" pos:end="133:81">audio_filter_src</name><operator pos:start="133:82" pos:end="133:82">.</operator><name pos:start="133:83" pos:end="133:90">channels</name></name></expr></argument>,

                                   <argument pos:start="135:36" pos:end="135:52"><expr pos:start="135:36" pos:end="135:52"><name pos:start="135:36" pos:end="135:52"><name pos:start="135:36" pos:end="135:37">is</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:44">frame</name><operator pos:start="135:45" pos:end="135:46">-&gt;</operator><name pos:start="135:47" pos:end="135:52">format</name></name></expr></argument>, <argument pos:start="135:55" pos:end="135:86"><expr pos:start="135:55" pos:end="135:86"><call pos:start="135:55" pos:end="135:86"><name pos:start="135:55" pos:end="135:75">av_frame_get_channels</name><argument_list pos:start="135:76" pos:end="135:86">(<argument pos:start="135:77" pos:end="135:85"><expr pos:start="135:77" pos:end="135:85"><name pos:start="135:77" pos:end="135:85"><name pos:start="135:77" pos:end="135:78">is</name><operator pos:start="135:79" pos:end="135:80">-&gt;</operator><name pos:start="135:81" pos:end="135:85">frame</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call>    <operator pos:start="135:92" pos:end="135:93">||</operator>

                    <name pos:start="137:21" pos:end="137:55"><name pos:start="137:21" pos:end="137:22">is</name><operator pos:start="137:23" pos:end="137:24">-&gt;</operator><name pos:start="137:25" pos:end="137:40">audio_filter_src</name><operator pos:start="137:41" pos:end="137:41">.</operator><name pos:start="137:42" pos:end="137:55">channel_layout</name></name> <operator pos:start="137:57" pos:end="137:58">!=</operator> <name pos:start="137:60" pos:end="137:77">dec_channel_layout</name> <operator pos:start="137:79" pos:end="137:80">||</operator>

                    <name pos:start="139:21" pos:end="139:45"><name pos:start="139:21" pos:end="139:22">is</name><operator pos:start="139:23" pos:end="139:24">-&gt;</operator><name pos:start="139:25" pos:end="139:40">audio_filter_src</name><operator pos:start="139:41" pos:end="139:41">.</operator><name pos:start="139:42" pos:end="139:45">freq</name></name>           <operator pos:start="139:57" pos:end="139:58">!=</operator> <name pos:start="139:60" pos:end="139:81"><name pos:start="139:60" pos:end="139:61">is</name><operator pos:start="139:62" pos:end="139:63">-&gt;</operator><name pos:start="139:64" pos:end="139:68">frame</name><operator pos:start="139:69" pos:end="139:70">-&gt;</operator><name pos:start="139:71" pos:end="139:81">sample_rate</name></name> <operator pos:start="139:83" pos:end="139:84">||</operator>

                    <name pos:start="141:21" pos:end="141:45"><name pos:start="141:21" pos:end="141:22">is</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:45">audio_pkt_temp_serial</name></name>           <operator pos:start="141:57" pos:end="141:58">!=</operator> <name pos:start="141:60" pos:end="141:80"><name pos:start="141:60" pos:end="141:61">is</name><operator pos:start="141:62" pos:end="141:63">-&gt;</operator><name pos:start="141:64" pos:end="141:80">audio_last_serial</name></name></expr>;</expr_stmt>



                <if_stmt pos:start="145:17" pos:end="179:17"><if pos:start="145:17" pos:end="179:17">if <condition pos:start="145:20" pos:end="145:32">(<expr pos:start="145:21" pos:end="145:31"><name pos:start="145:21" pos:end="145:31">reconfigure</name></expr>)</condition> <block pos:start="145:34" pos:end="179:17">{<block_content pos:start="147:21" pos:end="177:35">

                    <decl_stmt pos:start="147:21" pos:end="147:48"><decl pos:start="147:21" pos:end="147:35"><type pos:start="147:21" pos:end="147:24"><name pos:start="147:21" pos:end="147:24">char</name></type> <name pos:start="147:26" pos:end="147:35"><name pos:start="147:26" pos:end="147:29">buf1</name><index pos:start="147:30" pos:end="147:35">[<expr pos:start="147:31" pos:end="147:34"><literal type="number" pos:start="147:31" pos:end="147:34">1024</literal></expr>]</index></name></decl>, <decl pos:start="147:38" pos:end="147:47"><type ref="prev" pos:start="147:21" pos:end="147:24"/><name pos:start="147:38" pos:end="147:47"><name pos:start="147:38" pos:end="147:41">buf2</name><index pos:start="147:42" pos:end="147:47">[<expr pos:start="147:43" pos:end="147:46"><literal type="number" pos:start="147:43" pos:end="147:46">1024</literal></expr>]</index></name></decl>;</decl_stmt>

                    <expr_stmt pos:start="149:21" pos:end="149:110"><expr pos:start="149:21" pos:end="149:109"><call pos:start="149:21" pos:end="149:109"><name pos:start="149:21" pos:end="149:48">av_get_channel_layout_string</name><argument_list pos:start="149:49" pos:end="149:109">(<argument pos:start="149:50" pos:end="149:53"><expr pos:start="149:50" pos:end="149:53"><name pos:start="149:50" pos:end="149:53">buf1</name></expr></argument>, <argument pos:start="149:56" pos:end="149:67"><expr pos:start="149:56" pos:end="149:67"><sizeof pos:start="149:56" pos:end="149:67">sizeof<argument_list pos:start="149:62" pos:end="149:67">(<argument pos:start="149:63" pos:end="149:66"><expr pos:start="149:63" pos:end="149:66"><name pos:start="149:63" pos:end="149:66">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="149:70" pos:end="149:71"><expr pos:start="149:70" pos:end="149:71"><operator pos:start="149:70" pos:end="149:70">-</operator><literal type="number" pos:start="149:71" pos:end="149:71">1</literal></expr></argument>, <argument pos:start="149:74" pos:end="149:108"><expr pos:start="149:74" pos:end="149:108"><name pos:start="149:74" pos:end="149:108"><name pos:start="149:74" pos:end="149:75">is</name><operator pos:start="149:76" pos:end="149:77">-&gt;</operator><name pos:start="149:78" pos:end="149:93">audio_filter_src</name><operator pos:start="149:94" pos:end="149:94">.</operator><name pos:start="149:95" pos:end="149:108">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="151:21" pos:end="151:93"><expr pos:start="151:21" pos:end="151:92"><call pos:start="151:21" pos:end="151:92"><name pos:start="151:21" pos:end="151:48">av_get_channel_layout_string</name><argument_list pos:start="151:49" pos:end="151:92">(<argument pos:start="151:50" pos:end="151:53"><expr pos:start="151:50" pos:end="151:53"><name pos:start="151:50" pos:end="151:53">buf2</name></expr></argument>, <argument pos:start="151:56" pos:end="151:67"><expr pos:start="151:56" pos:end="151:67"><sizeof pos:start="151:56" pos:end="151:67">sizeof<argument_list pos:start="151:62" pos:end="151:67">(<argument pos:start="151:63" pos:end="151:66"><expr pos:start="151:63" pos:end="151:66"><name pos:start="151:63" pos:end="151:66">buf2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="151:70" pos:end="151:71"><expr pos:start="151:70" pos:end="151:71"><operator pos:start="151:70" pos:end="151:70">-</operator><literal type="number" pos:start="151:71" pos:end="151:71">1</literal></expr></argument>, <argument pos:start="151:74" pos:end="151:91"><expr pos:start="151:74" pos:end="151:91"><name pos:start="151:74" pos:end="151:91">dec_channel_layout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="153:21" pos:end="159:161"><expr pos:start="153:21" pos:end="159:160"><call pos:start="153:21" pos:end="159:160"><name pos:start="153:21" pos:end="153:26">av_log</name><argument_list pos:start="153:27" pos:end="159:160">(<argument pos:start="153:28" pos:end="153:31"><expr pos:start="153:28" pos:end="153:31"><name pos:start="153:28" pos:end="153:31">NULL</name></expr></argument>, <argument pos:start="153:34" pos:end="153:45"><expr pos:start="153:34" pos:end="153:45"><name pos:start="153:34" pos:end="153:45">AV_LOG_DEBUG</name></expr></argument>,

                           <argument pos:start="155:28" pos:end="155:140"><expr pos:start="155:28" pos:end="155:140"><literal type="string" pos:start="155:28" pos:end="155:140">"Audio frame changed from rate:%d ch:%d fmt:%s layout:%s serial:%d to rate:%d ch:%d fmt:%s layout:%s serial:%d\n"</literal></expr></argument>,

                           <argument pos:start="157:28" pos:end="157:52"><expr pos:start="157:28" pos:end="157:52"><name pos:start="157:28" pos:end="157:52"><name pos:start="157:28" pos:end="157:29">is</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:47">audio_filter_src</name><operator pos:start="157:48" pos:end="157:48">.</operator><name pos:start="157:49" pos:end="157:52">freq</name></name></expr></argument>, <argument pos:start="157:55" pos:end="157:83"><expr pos:start="157:55" pos:end="157:83"><name pos:start="157:55" pos:end="157:83"><name pos:start="157:55" pos:end="157:56">is</name><operator pos:start="157:57" pos:end="157:58">-&gt;</operator><name pos:start="157:59" pos:end="157:74">audio_filter_src</name><operator pos:start="157:75" pos:end="157:75">.</operator><name pos:start="157:76" pos:end="157:83">channels</name></name></expr></argument>, <argument pos:start="157:86" pos:end="157:133"><expr pos:start="157:86" pos:end="157:133"><call pos:start="157:86" pos:end="157:133"><name pos:start="157:86" pos:end="157:107">av_get_sample_fmt_name</name><argument_list pos:start="157:108" pos:end="157:133">(<argument pos:start="157:109" pos:end="157:132"><expr pos:start="157:109" pos:end="157:132"><name pos:start="157:109" pos:end="157:132"><name pos:start="157:109" pos:end="157:110">is</name><operator pos:start="157:111" pos:end="157:112">-&gt;</operator><name pos:start="157:113" pos:end="157:128">audio_filter_src</name><operator pos:start="157:129" pos:end="157:129">.</operator><name pos:start="157:130" pos:end="157:132">fmt</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:136" pos:end="157:139"><expr pos:start="157:136" pos:end="157:139"><name pos:start="157:136" pos:end="157:139">buf1</name></expr></argument>, <argument pos:start="157:142" pos:end="157:162"><expr pos:start="157:142" pos:end="157:162"><name pos:start="157:142" pos:end="157:162"><name pos:start="157:142" pos:end="157:143">is</name><operator pos:start="157:144" pos:end="157:145">-&gt;</operator><name pos:start="157:146" pos:end="157:162">audio_last_serial</name></name></expr></argument>,

                           <argument pos:start="159:28" pos:end="159:49"><expr pos:start="159:28" pos:end="159:49"><name pos:start="159:28" pos:end="159:49"><name pos:start="159:28" pos:end="159:29">is</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:36">frame</name><operator pos:start="159:37" pos:end="159:38">-&gt;</operator><name pos:start="159:39" pos:end="159:49">sample_rate</name></name></expr></argument>, <argument pos:start="159:52" pos:end="159:83"><expr pos:start="159:52" pos:end="159:83"><call pos:start="159:52" pos:end="159:83"><name pos:start="159:52" pos:end="159:72">av_frame_get_channels</name><argument_list pos:start="159:73" pos:end="159:83">(<argument pos:start="159:74" pos:end="159:82"><expr pos:start="159:74" pos:end="159:82"><name pos:start="159:74" pos:end="159:82"><name pos:start="159:74" pos:end="159:75">is</name><operator pos:start="159:76" pos:end="159:77">-&gt;</operator><name pos:start="159:78" pos:end="159:82">frame</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:86" pos:end="159:126"><expr pos:start="159:86" pos:end="159:126"><call pos:start="159:86" pos:end="159:126"><name pos:start="159:86" pos:end="159:107">av_get_sample_fmt_name</name><argument_list pos:start="159:108" pos:end="159:126">(<argument pos:start="159:109" pos:end="159:125"><expr pos:start="159:109" pos:end="159:125"><name pos:start="159:109" pos:end="159:125"><name pos:start="159:109" pos:end="159:110">is</name><operator pos:start="159:111" pos:end="159:112">-&gt;</operator><name pos:start="159:113" pos:end="159:117">frame</name><operator pos:start="159:118" pos:end="159:119">-&gt;</operator><name pos:start="159:120" pos:end="159:125">format</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="159:129" pos:end="159:132"><expr pos:start="159:129" pos:end="159:132"><name pos:start="159:129" pos:end="159:132">buf2</name></expr></argument>, <argument pos:start="159:135" pos:end="159:159"><expr pos:start="159:135" pos:end="159:159"><name pos:start="159:135" pos:end="159:159"><name pos:start="159:135" pos:end="159:136">is</name><operator pos:start="159:137" pos:end="159:138">-&gt;</operator><name pos:start="159:139" pos:end="159:159">audio_pkt_temp_serial</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <expr_stmt pos:start="163:21" pos:end="163:76"><expr pos:start="163:21" pos:end="163:75"><name pos:start="163:21" pos:end="163:44"><name pos:start="163:21" pos:end="163:22">is</name><operator pos:start="163:23" pos:end="163:24">-&gt;</operator><name pos:start="163:25" pos:end="163:40">audio_filter_src</name><operator pos:start="163:41" pos:end="163:41">.</operator><name pos:start="163:42" pos:end="163:44">fmt</name></name>            <operator pos:start="163:57" pos:end="163:57">=</operator> <name pos:start="163:59" pos:end="163:75"><name pos:start="163:59" pos:end="163:60">is</name><operator pos:start="163:61" pos:end="163:62">-&gt;</operator><name pos:start="163:63" pos:end="163:67">frame</name><operator pos:start="163:68" pos:end="163:69">-&gt;</operator><name pos:start="163:70" pos:end="163:75">format</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="165:21" pos:end="165:91"><expr pos:start="165:21" pos:end="165:90"><name pos:start="165:21" pos:end="165:49"><name pos:start="165:21" pos:end="165:22">is</name><operator pos:start="165:23" pos:end="165:24">-&gt;</operator><name pos:start="165:25" pos:end="165:40">audio_filter_src</name><operator pos:start="165:41" pos:end="165:41">.</operator><name pos:start="165:42" pos:end="165:49">channels</name></name>       <operator pos:start="165:57" pos:end="165:57">=</operator> <call pos:start="165:59" pos:end="165:90"><name pos:start="165:59" pos:end="165:79">av_frame_get_channels</name><argument_list pos:start="165:80" pos:end="165:90">(<argument pos:start="165:81" pos:end="165:89"><expr pos:start="165:81" pos:end="165:89"><name pos:start="165:81" pos:end="165:89"><name pos:start="165:81" pos:end="165:82">is</name><operator pos:start="165:83" pos:end="165:84">-&gt;</operator><name pos:start="165:85" pos:end="165:89">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="167:21" pos:end="167:77"><expr pos:start="167:21" pos:end="167:76"><name pos:start="167:21" pos:end="167:55"><name pos:start="167:21" pos:end="167:22">is</name><operator pos:start="167:23" pos:end="167:24">-&gt;</operator><name pos:start="167:25" pos:end="167:40">audio_filter_src</name><operator pos:start="167:41" pos:end="167:41">.</operator><name pos:start="167:42" pos:end="167:55">channel_layout</name></name> <operator pos:start="167:57" pos:end="167:57">=</operator> <name pos:start="167:59" pos:end="167:76">dec_channel_layout</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="169:21" pos:end="169:81"><expr pos:start="169:21" pos:end="169:80"><name pos:start="169:21" pos:end="169:45"><name pos:start="169:21" pos:end="169:22">is</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:40">audio_filter_src</name><operator pos:start="169:41" pos:end="169:41">.</operator><name pos:start="169:42" pos:end="169:45">freq</name></name>           <operator pos:start="169:57" pos:end="169:57">=</operator> <name pos:start="169:59" pos:end="169:80"><name pos:start="169:59" pos:end="169:60">is</name><operator pos:start="169:61" pos:end="169:62">-&gt;</operator><name pos:start="169:63" pos:end="169:67">frame</name><operator pos:start="169:68" pos:end="169:69">-&gt;</operator><name pos:start="169:70" pos:end="169:80">sample_rate</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="171:21" pos:end="171:84"><expr pos:start="171:21" pos:end="171:83"><name pos:start="171:21" pos:end="171:41"><name pos:start="171:21" pos:end="171:22">is</name><operator pos:start="171:23" pos:end="171:24">-&gt;</operator><name pos:start="171:25" pos:end="171:41">audio_last_serial</name></name>               <operator pos:start="171:57" pos:end="171:57">=</operator> <name pos:start="171:59" pos:end="171:83"><name pos:start="171:59" pos:end="171:60">is</name><operator pos:start="171:61" pos:end="171:62">-&gt;</operator><name pos:start="171:63" pos:end="171:83">audio_pkt_temp_serial</name></name></expr>;</expr_stmt>



                    <if_stmt pos:start="175:21" pos:end="177:35"><if pos:start="175:21" pos:end="177:35">if <condition pos:start="175:24" pos:end="175:77">(<expr pos:start="175:25" pos:end="175:76"><operator pos:start="175:25" pos:end="175:25">(</operator><name pos:start="175:26" pos:end="175:28">ret</name> <operator pos:start="175:30" pos:end="175:30">=</operator> <call pos:start="175:32" pos:end="175:71"><name pos:start="175:32" pos:end="175:54">configure_audio_filters</name><argument_list pos:start="175:55" pos:end="175:71">(<argument pos:start="175:56" pos:end="175:57"><expr pos:start="175:56" pos:end="175:57"><name pos:start="175:56" pos:end="175:57">is</name></expr></argument>, <argument pos:start="175:60" pos:end="175:67"><expr pos:start="175:60" pos:end="175:67"><name pos:start="175:60" pos:end="175:67">afilters</name></expr></argument>, <argument pos:start="175:70" pos:end="175:70"><expr pos:start="175:70" pos:end="175:70"><literal type="number" pos:start="175:70" pos:end="175:70">1</literal></expr></argument>)</argument_list></call><operator pos:start="175:72" pos:end="175:72">)</operator> <operator pos:start="175:74" pos:end="175:74">&lt;</operator> <literal type="number" pos:start="175:76" pos:end="175:76">0</literal></expr>)</condition><block type="pseudo" pos:start="177:25" pos:end="177:35"><block_content pos:start="177:25" pos:end="177:35">

                        <return pos:start="177:25" pos:end="177:35">return <expr pos:start="177:32" pos:end="177:34"><name pos:start="177:32" pos:end="177:34">ret</name></expr>;</return></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="183:17" pos:end="185:31"><if pos:start="183:17" pos:end="185:31">if <condition pos:start="183:20" pos:end="183:87">(<expr pos:start="183:21" pos:end="183:86"><operator pos:start="183:21" pos:end="183:21">(</operator><name pos:start="183:22" pos:end="183:24">ret</name> <operator pos:start="183:26" pos:end="183:26">=</operator> <call pos:start="183:28" pos:end="183:81"><name pos:start="183:28" pos:end="183:49">av_buffersrc_add_frame</name><argument_list pos:start="183:50" pos:end="183:81">(<argument pos:start="183:51" pos:end="183:69"><expr pos:start="183:51" pos:end="183:69"><name pos:start="183:51" pos:end="183:69"><name pos:start="183:51" pos:end="183:52">is</name><operator pos:start="183:53" pos:end="183:54">-&gt;</operator><name pos:start="183:55" pos:end="183:69">in_audio_filter</name></name></expr></argument>, <argument pos:start="183:72" pos:end="183:80"><expr pos:start="183:72" pos:end="183:80"><name pos:start="183:72" pos:end="183:80"><name pos:start="183:72" pos:end="183:73">is</name><operator pos:start="183:74" pos:end="183:75">-&gt;</operator><name pos:start="183:76" pos:end="183:80">frame</name></name></expr></argument>)</argument_list></call><operator pos:start="183:82" pos:end="183:82">)</operator> <operator pos:start="183:84" pos:end="183:84">&lt;</operator> <literal type="number" pos:start="183:86" pos:end="183:86">0</literal></expr>)</condition><block type="pseudo" pos:start="185:21" pos:end="185:31"><block_content pos:start="185:21" pos:end="185:31">

                    <return pos:start="185:21" pos:end="185:31">return <expr pos:start="185:28" pos:end="185:30"><name pos:start="185:28" pos:end="185:30">ret</name></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="187:17" pos:end="190:0"><expr pos:start="187:17" pos:end="187:41"><call pos:start="187:17" pos:end="187:41"><name pos:start="187:17" pos:end="187:30">av_frame_unref</name><argument_list pos:start="187:31" pos:end="187:41">(<argument pos:start="187:32" pos:end="187:40"><expr pos:start="187:32" pos:end="187:40"><name pos:start="187:32" pos:end="187:40"><name pos:start="187:32" pos:end="187:33">is</name><operator pos:start="187:34" pos:end="187:35">-&gt;</operator><name pos:start="187:36" pos:end="187:40">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="189:1" pos:end="189:6">#<cpp:directive pos:start="189:2" pos:end="189:6">endif</cpp:directive></cpp:endif>

            </block_content>}</block></if></if_stmt>

<cpp:if pos:start="193:1" pos:end="193:19">#<cpp:directive pos:start="193:2" pos:end="193:3">if</cpp:directive> <expr pos:start="193:5" pos:end="193:19"><name pos:start="193:5" pos:end="193:19">CONFIG_AVFILTER</name></expr></cpp:if>

            <if_stmt pos:start="195:13" pos:end="207:13"><if pos:start="195:13" pos:end="207:13">if <condition pos:start="195:16" pos:end="195:94">(<expr pos:start="195:17" pos:end="195:93"><operator pos:start="195:17" pos:end="195:17">(</operator><name pos:start="195:18" pos:end="195:20">ret</name> <operator pos:start="195:22" pos:end="195:22">=</operator> <call pos:start="195:24" pos:end="195:88"><name pos:start="195:24" pos:end="195:52">av_buffersink_get_frame_flags</name><argument_list pos:start="195:53" pos:end="195:88">(<argument pos:start="195:54" pos:end="195:73"><expr pos:start="195:54" pos:end="195:73"><name pos:start="195:54" pos:end="195:73"><name pos:start="195:54" pos:end="195:55">is</name><operator pos:start="195:56" pos:end="195:57">-&gt;</operator><name pos:start="195:58" pos:end="195:73">out_audio_filter</name></name></expr></argument>, <argument pos:start="195:76" pos:end="195:84"><expr pos:start="195:76" pos:end="195:84"><name pos:start="195:76" pos:end="195:84"><name pos:start="195:76" pos:end="195:77">is</name><operator pos:start="195:78" pos:end="195:79">-&gt;</operator><name pos:start="195:80" pos:end="195:84">frame</name></name></expr></argument>, <argument pos:start="195:87" pos:end="195:87"><expr pos:start="195:87" pos:end="195:87"><literal type="number" pos:start="195:87" pos:end="195:87">0</literal></expr></argument>)</argument_list></call><operator pos:start="195:89" pos:end="195:89">)</operator> <operator pos:start="195:91" pos:end="195:91">&lt;</operator> <literal type="number" pos:start="195:93" pos:end="195:93">0</literal></expr>)</condition> <block pos:start="195:96" pos:end="207:13">{<block_content pos:start="197:17" pos:end="205:27">

                <if_stmt pos:start="197:17" pos:end="203:17"><if pos:start="197:17" pos:end="203:17">if <condition pos:start="197:20" pos:end="197:43">(<expr pos:start="197:21" pos:end="197:42"><name pos:start="197:21" pos:end="197:23">ret</name> <operator pos:start="197:25" pos:end="197:26">==</operator> <call pos:start="197:28" pos:end="197:42"><name pos:start="197:28" pos:end="197:34">AVERROR</name><argument_list pos:start="197:35" pos:end="197:42">(<argument pos:start="197:36" pos:end="197:41"><expr pos:start="197:36" pos:end="197:41"><name pos:start="197:36" pos:end="197:41">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:45" pos:end="203:17">{<block_content pos:start="199:21" pos:end="201:29">

                    <expr_stmt pos:start="199:21" pos:end="199:53"><expr pos:start="199:21" pos:end="199:52"><name pos:start="199:21" pos:end="199:48"><name pos:start="199:21" pos:end="199:22">is</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:48">audio_buf_frames_pending</name></name> <operator pos:start="199:50" pos:end="199:50">=</operator> <literal type="number" pos:start="199:52" pos:end="199:52">0</literal></expr>;</expr_stmt>

                    <continue pos:start="201:21" pos:end="201:29">continue;</continue>

                </block_content>}</block></if></if_stmt>

                <return pos:start="205:17" pos:end="205:27">return <expr pos:start="205:24" pos:end="205:26"><name pos:start="205:24" pos:end="205:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:45"><expr pos:start="209:13" pos:end="209:44"><name pos:start="209:13" pos:end="209:40"><name pos:start="209:13" pos:end="209:14">is</name><operator pos:start="209:15" pos:end="209:16">-&gt;</operator><name pos:start="209:17" pos:end="209:40">audio_buf_frames_pending</name></name> <operator pos:start="209:42" pos:end="209:42">=</operator> <literal type="number" pos:start="209:44" pos:end="209:44">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="214:0"><expr pos:start="211:13" pos:end="211:59"><name pos:start="211:13" pos:end="211:14">tb</name> <operator pos:start="211:16" pos:end="211:16">=</operator> <name pos:start="211:18" pos:end="211:48"><name pos:start="211:18" pos:end="211:19">is</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:37">out_audio_filter</name><operator pos:start="211:38" pos:end="211:39">-&gt;</operator><name pos:start="211:40" pos:end="211:45">inputs</name><index pos:start="211:46" pos:end="211:48">[<expr pos:start="211:47" pos:end="211:47"><literal type="number" pos:start="211:47" pos:end="211:47">0</literal></expr>]</index></name><operator pos:start="211:49" pos:end="211:50">-&gt;</operator><name pos:start="211:51" pos:end="211:59">time_base</name></expr>;</expr_stmt>

<cpp:endif pos:start="213:1" pos:end="213:6">#<cpp:directive pos:start="213:2" pos:end="213:6">endif</cpp:directive></cpp:endif>



            <expr_stmt pos:start="217:13" pos:end="221:73"><expr pos:start="217:13" pos:end="221:72"><name pos:start="217:13" pos:end="217:21">data_size</name> <operator pos:start="217:23" pos:end="217:23">=</operator> <call pos:start="217:25" pos:end="221:72"><name pos:start="217:25" pos:end="217:50">av_samples_get_buffer_size</name><argument_list pos:start="217:51" pos:end="221:72">(<argument pos:start="217:52" pos:end="217:55"><expr pos:start="217:52" pos:end="217:55"><name pos:start="217:52" pos:end="217:55">NULL</name></expr></argument>, <argument pos:start="217:58" pos:end="217:89"><expr pos:start="217:58" pos:end="217:89"><call pos:start="217:58" pos:end="217:89"><name pos:start="217:58" pos:end="217:78">av_frame_get_channels</name><argument_list pos:start="217:79" pos:end="217:89">(<argument pos:start="217:80" pos:end="217:88"><expr pos:start="217:80" pos:end="217:88"><name pos:start="217:80" pos:end="217:88"><name pos:start="217:80" pos:end="217:81">is</name><operator pos:start="217:82" pos:end="217:83">-&gt;</operator><name pos:start="217:84" pos:end="217:88">frame</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                                   <argument pos:start="219:52" pos:end="219:72"><expr pos:start="219:52" pos:end="219:72"><name pos:start="219:52" pos:end="219:72"><name pos:start="219:52" pos:end="219:53">is</name><operator pos:start="219:54" pos:end="219:55">-&gt;</operator><name pos:start="219:56" pos:end="219:60">frame</name><operator pos:start="219:61" pos:end="219:62">-&gt;</operator><name pos:start="219:63" pos:end="219:72">nb_samples</name></name></expr></argument>,

                                                   <argument pos:start="221:52" pos:end="221:68"><expr pos:start="221:52" pos:end="221:68"><name pos:start="221:52" pos:end="221:68"><name pos:start="221:52" pos:end="221:53">is</name><operator pos:start="221:54" pos:end="221:55">-&gt;</operator><name pos:start="221:56" pos:end="221:60">frame</name><operator pos:start="221:61" pos:end="221:62">-&gt;</operator><name pos:start="221:63" pos:end="221:68">format</name></name></expr></argument>, <argument pos:start="221:71" pos:end="221:71"><expr pos:start="221:71" pos:end="221:71"><literal type="number" pos:start="221:71" pos:end="221:71">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="225:13" pos:end="229:108"><expr pos:start="225:13" pos:end="229:107"><name pos:start="225:13" pos:end="225:30">dec_channel_layout</name> <operator pos:start="225:32" pos:end="225:32">=</operator>

                <ternary pos:start="227:17" pos:end="229:107"><condition pos:start="227:17" pos:end="227:145"><expr pos:start="227:17" pos:end="227:143"><operator pos:start="227:17" pos:end="227:17">(</operator><name pos:start="227:18" pos:end="227:42"><name pos:start="227:18" pos:end="227:19">is</name><operator pos:start="227:20" pos:end="227:21">-&gt;</operator><name pos:start="227:22" pos:end="227:26">frame</name><operator pos:start="227:27" pos:end="227:28">-&gt;</operator><name pos:start="227:29" pos:end="227:42">channel_layout</name></name> <operator pos:start="227:44" pos:end="227:45">&amp;&amp;</operator> <call pos:start="227:47" pos:end="227:78"><name pos:start="227:47" pos:end="227:67">av_frame_get_channels</name><argument_list pos:start="227:68" pos:end="227:78">(<argument pos:start="227:69" pos:end="227:77"><expr pos:start="227:69" pos:end="227:77"><name pos:start="227:69" pos:end="227:77"><name pos:start="227:69" pos:end="227:70">is</name><operator pos:start="227:71" pos:end="227:72">-&gt;</operator><name pos:start="227:73" pos:end="227:77">frame</name></name></expr></argument>)</argument_list></call> <operator pos:start="227:80" pos:end="227:81">==</operator> <call pos:start="227:83" pos:end="227:142"><name pos:start="227:83" pos:end="227:115">av_get_channel_layout_nb_channels</name><argument_list pos:start="227:116" pos:end="227:142">(<argument pos:start="227:117" pos:end="227:141"><expr pos:start="227:117" pos:end="227:141"><name pos:start="227:117" pos:end="227:141"><name pos:start="227:117" pos:end="227:118">is</name><operator pos:start="227:119" pos:end="227:120">-&gt;</operator><name pos:start="227:121" pos:end="227:125">frame</name><operator pos:start="227:126" pos:end="227:127">-&gt;</operator><name pos:start="227:128" pos:end="227:141">channel_layout</name></name></expr></argument>)</argument_list></call><operator pos:start="227:143" pos:end="227:143">)</operator></expr> ?</condition><then pos:start="229:17" pos:end="229:41">

                <expr pos:start="229:17" pos:end="229:41"><name pos:start="229:17" pos:end="229:41"><name pos:start="229:17" pos:end="229:18">is</name><operator pos:start="229:19" pos:end="229:20">-&gt;</operator><name pos:start="229:21" pos:end="229:25">frame</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:41">channel_layout</name></name></expr> </then><else pos:start="229:43" pos:end="229:107">: <expr pos:start="229:45" pos:end="229:107"><call pos:start="229:45" pos:end="229:107"><name pos:start="229:45" pos:end="229:73">av_get_default_channel_layout</name><argument_list pos:start="229:74" pos:end="229:107">(<argument pos:start="229:75" pos:end="229:106"><expr pos:start="229:75" pos:end="229:106"><call pos:start="229:75" pos:end="229:106"><name pos:start="229:75" pos:end="229:95">av_frame_get_channels</name><argument_list pos:start="229:96" pos:end="229:106">(<argument pos:start="229:97" pos:end="229:105"><expr pos:start="229:97" pos:end="229:105"><name pos:start="229:97" pos:end="229:105"><name pos:start="229:97" pos:end="229:98">is</name><operator pos:start="229:99" pos:end="229:100">-&gt;</operator><name pos:start="229:101" pos:end="229:105">frame</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:77"><expr pos:start="231:13" pos:end="231:76"><name pos:start="231:13" pos:end="231:29">wanted_nb_samples</name> <operator pos:start="231:31" pos:end="231:31">=</operator> <call pos:start="231:33" pos:end="231:76"><name pos:start="231:33" pos:end="231:49">synchronize_audio</name><argument_list pos:start="231:50" pos:end="231:76">(<argument pos:start="231:51" pos:end="231:52"><expr pos:start="231:51" pos:end="231:52"><name pos:start="231:51" pos:end="231:52">is</name></expr></argument>, <argument pos:start="231:55" pos:end="231:75"><expr pos:start="231:55" pos:end="231:75"><name pos:start="231:55" pos:end="231:75"><name pos:start="231:55" pos:end="231:56">is</name><operator pos:start="231:57" pos:end="231:58">-&gt;</operator><name pos:start="231:59" pos:end="231:63">frame</name><operator pos:start="231:64" pos:end="231:65">-&gt;</operator><name pos:start="231:66" pos:end="231:75">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="235:13" pos:end="275:13"><if pos:start="235:13" pos:end="275:13">if <condition pos:start="235:16" pos:end="241:83">(<expr pos:start="235:17" pos:end="241:82"><name pos:start="235:17" pos:end="235:33"><name pos:start="235:17" pos:end="235:18">is</name><operator pos:start="235:19" pos:end="235:20">-&gt;</operator><name pos:start="235:21" pos:end="235:25">frame</name><operator pos:start="235:26" pos:end="235:27">-&gt;</operator><name pos:start="235:28" pos:end="235:33">format</name></name>        <operator pos:start="235:42" pos:end="235:43">!=</operator> <name pos:start="235:45" pos:end="235:61"><name pos:start="235:45" pos:end="235:46">is</name><operator pos:start="235:47" pos:end="235:48">-&gt;</operator><name pos:start="235:49" pos:end="235:57">audio_src</name><operator pos:start="235:58" pos:end="235:58">.</operator><name pos:start="235:59" pos:end="235:61">fmt</name></name>            <operator pos:start="235:74" pos:end="235:75">||</operator>

                <name pos:start="237:17" pos:end="237:34">dec_channel_layout</name>       <operator pos:start="237:42" pos:end="237:43">!=</operator> <name pos:start="237:45" pos:end="237:72"><name pos:start="237:45" pos:end="237:46">is</name><operator pos:start="237:47" pos:end="237:48">-&gt;</operator><name pos:start="237:49" pos:end="237:57">audio_src</name><operator pos:start="237:58" pos:end="237:58">.</operator><name pos:start="237:59" pos:end="237:72">channel_layout</name></name> <operator pos:start="237:74" pos:end="237:75">||</operator>

                <name pos:start="239:17" pos:end="239:38"><name pos:start="239:17" pos:end="239:18">is</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:25">frame</name><operator pos:start="239:26" pos:end="239:27">-&gt;</operator><name pos:start="239:28" pos:end="239:38">sample_rate</name></name>   <operator pos:start="239:42" pos:end="239:43">!=</operator> <name pos:start="239:45" pos:end="239:62"><name pos:start="239:45" pos:end="239:46">is</name><operator pos:start="239:47" pos:end="239:48">-&gt;</operator><name pos:start="239:49" pos:end="239:57">audio_src</name><operator pos:start="239:58" pos:end="239:58">.</operator><name pos:start="239:59" pos:end="239:62">freq</name></name>           <operator pos:start="239:74" pos:end="239:75">||</operator>

                <operator pos:start="241:17" pos:end="241:17">(</operator><name pos:start="241:18" pos:end="241:34">wanted_nb_samples</name>       <operator pos:start="241:42" pos:end="241:43">!=</operator> <name pos:start="241:45" pos:end="241:65"><name pos:start="241:45" pos:end="241:46">is</name><operator pos:start="241:47" pos:end="241:48">-&gt;</operator><name pos:start="241:49" pos:end="241:53">frame</name><operator pos:start="241:54" pos:end="241:55">-&gt;</operator><name pos:start="241:56" pos:end="241:65">nb_samples</name></name> <operator pos:start="241:67" pos:end="241:68">&amp;&amp;</operator> <operator pos:start="241:70" pos:end="241:70">!</operator><name pos:start="241:71" pos:end="241:81"><name pos:start="241:71" pos:end="241:72">is</name><operator pos:start="241:73" pos:end="241:74">-&gt;</operator><name pos:start="241:75" pos:end="241:81">swr_ctx</name></name><operator pos:start="241:82" pos:end="241:82">)</operator></expr>)</condition> <block pos:start="241:85" pos:end="275:13">{<block_content pos:start="243:17" pos:end="273:54">

                <expr_stmt pos:start="243:17" pos:end="243:39"><expr pos:start="243:17" pos:end="243:38"><call pos:start="243:17" pos:end="243:38"><name pos:start="243:17" pos:end="243:24">swr_free</name><argument_list pos:start="243:25" pos:end="243:38">(<argument pos:start="243:26" pos:end="243:37"><expr pos:start="243:26" pos:end="243:37"><operator pos:start="243:26" pos:end="243:26">&amp;</operator><name pos:start="243:27" pos:end="243:37"><name pos:start="243:27" pos:end="243:28">is</name><operator pos:start="243:29" pos:end="243:30">-&gt;</operator><name pos:start="243:31" pos:end="243:37">swr_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="251:58"><expr pos:start="245:17" pos:end="251:57"><name pos:start="245:17" pos:end="245:27"><name pos:start="245:17" pos:end="245:18">is</name><operator pos:start="245:19" pos:end="245:20">-&gt;</operator><name pos:start="245:21" pos:end="245:27">swr_ctx</name></name> <operator pos:start="245:29" pos:end="245:29">=</operator> <call pos:start="245:31" pos:end="251:57"><name pos:start="245:31" pos:end="245:48">swr_alloc_set_opts</name><argument_list pos:start="245:49" pos:end="251:57">(<argument pos:start="245:50" pos:end="245:53"><expr pos:start="245:50" pos:end="245:53"><name pos:start="245:50" pos:end="245:53">NULL</name></expr></argument>,

                                                 <argument pos:start="247:50" pos:end="247:77"><expr pos:start="247:50" pos:end="247:77"><name pos:start="247:50" pos:end="247:77"><name pos:start="247:50" pos:end="247:51">is</name><operator pos:start="247:52" pos:end="247:53">-&gt;</operator><name pos:start="247:54" pos:end="247:62">audio_tgt</name><operator pos:start="247:63" pos:end="247:63">.</operator><name pos:start="247:64" pos:end="247:77">channel_layout</name></name></expr></argument>, <argument pos:start="247:80" pos:end="247:96"><expr pos:start="247:80" pos:end="247:96"><name pos:start="247:80" pos:end="247:96"><name pos:start="247:80" pos:end="247:81">is</name><operator pos:start="247:82" pos:end="247:83">-&gt;</operator><name pos:start="247:84" pos:end="247:92">audio_tgt</name><operator pos:start="247:93" pos:end="247:93">.</operator><name pos:start="247:94" pos:end="247:96">fmt</name></name></expr></argument>, <argument pos:start="247:99" pos:end="247:116"><expr pos:start="247:99" pos:end="247:116"><name pos:start="247:99" pos:end="247:116"><name pos:start="247:99" pos:end="247:100">is</name><operator pos:start="247:101" pos:end="247:102">-&gt;</operator><name pos:start="247:103" pos:end="247:111">audio_tgt</name><operator pos:start="247:112" pos:end="247:112">.</operator><name pos:start="247:113" pos:end="247:116">freq</name></name></expr></argument>,

                                                 <argument pos:start="249:50" pos:end="249:67"><expr pos:start="249:50" pos:end="249:67"><name pos:start="249:50" pos:end="249:67">dec_channel_layout</name></expr></argument>,           <argument pos:start="249:80" pos:end="249:96"><expr pos:start="249:80" pos:end="249:96"><name pos:start="249:80" pos:end="249:96"><name pos:start="249:80" pos:end="249:81">is</name><operator pos:start="249:82" pos:end="249:83">-&gt;</operator><name pos:start="249:84" pos:end="249:88">frame</name><operator pos:start="249:89" pos:end="249:90">-&gt;</operator><name pos:start="249:91" pos:end="249:96">format</name></name></expr></argument>, <argument pos:start="249:99" pos:end="249:120"><expr pos:start="249:99" pos:end="249:120"><name pos:start="249:99" pos:end="249:120"><name pos:start="249:99" pos:end="249:100">is</name><operator pos:start="249:101" pos:end="249:102">-&gt;</operator><name pos:start="249:103" pos:end="249:107">frame</name><operator pos:start="249:108" pos:end="249:109">-&gt;</operator><name pos:start="249:110" pos:end="249:120">sample_rate</name></name></expr></argument>,

                                                 <argument pos:start="251:50" pos:end="251:50"><expr pos:start="251:50" pos:end="251:50"><literal type="number" pos:start="251:50" pos:end="251:50">0</literal></expr></argument>, <argument pos:start="251:53" pos:end="251:56"><expr pos:start="251:53" pos:end="251:56"><name pos:start="251:53" pos:end="251:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="253:17" pos:end="265:17"><if pos:start="253:17" pos:end="265:17">if <condition pos:start="253:20" pos:end="253:62">(<expr pos:start="253:21" pos:end="253:61"><operator pos:start="253:21" pos:end="253:21">!</operator><name pos:start="253:22" pos:end="253:32"><name pos:start="253:22" pos:end="253:23">is</name><operator pos:start="253:24" pos:end="253:25">-&gt;</operator><name pos:start="253:26" pos:end="253:32">swr_ctx</name></name> <operator pos:start="253:34" pos:end="253:35">||</operator> <call pos:start="253:37" pos:end="253:57"><name pos:start="253:37" pos:end="253:44">swr_init</name><argument_list pos:start="253:45" pos:end="253:57">(<argument pos:start="253:46" pos:end="253:56"><expr pos:start="253:46" pos:end="253:56"><name pos:start="253:46" pos:end="253:56"><name pos:start="253:46" pos:end="253:47">is</name><operator pos:start="253:48" pos:end="253:49">-&gt;</operator><name pos:start="253:50" pos:end="253:56">swr_ctx</name></name></expr></argument>)</argument_list></call> <operator pos:start="253:59" pos:end="253:59">&lt;</operator> <literal type="number" pos:start="253:61" pos:end="253:61">0</literal></expr>)</condition> <block pos:start="253:64" pos:end="265:17">{<block_content pos:start="255:21" pos:end="263:26">

                    <expr_stmt pos:start="255:21" pos:end="261:115"><expr pos:start="255:21" pos:end="261:114"><call pos:start="255:21" pos:end="261:114"><name pos:start="255:21" pos:end="255:26">av_log</name><argument_list pos:start="255:27" pos:end="261:114">(<argument pos:start="255:28" pos:end="255:31"><expr pos:start="255:28" pos:end="255:31"><name pos:start="255:28" pos:end="255:31">NULL</name></expr></argument>, <argument pos:start="255:34" pos:end="255:45"><expr pos:start="255:34" pos:end="255:45"><name pos:start="255:34" pos:end="255:45">AV_LOG_ERROR</name></expr></argument>,

                           <argument pos:start="257:28" pos:end="257:130"><expr pos:start="257:28" pos:end="257:130"><literal type="string" pos:start="257:28" pos:end="257:130">"Cannot create sample rate converter for conversion of %d Hz %s %d channels to %d Hz %s %d channels!\n"</literal></expr></argument>,

                            <argument pos:start="259:29" pos:end="259:50"><expr pos:start="259:29" pos:end="259:50"><name pos:start="259:29" pos:end="259:50"><name pos:start="259:29" pos:end="259:30">is</name><operator pos:start="259:31" pos:end="259:32">-&gt;</operator><name pos:start="259:33" pos:end="259:37">frame</name><operator pos:start="259:38" pos:end="259:39">-&gt;</operator><name pos:start="259:40" pos:end="259:50">sample_rate</name></name></expr></argument>, <argument pos:start="259:53" pos:end="259:93"><expr pos:start="259:53" pos:end="259:93"><call pos:start="259:53" pos:end="259:93"><name pos:start="259:53" pos:end="259:74">av_get_sample_fmt_name</name><argument_list pos:start="259:75" pos:end="259:93">(<argument pos:start="259:76" pos:end="259:92"><expr pos:start="259:76" pos:end="259:92"><name pos:start="259:76" pos:end="259:92"><name pos:start="259:76" pos:end="259:77">is</name><operator pos:start="259:78" pos:end="259:79">-&gt;</operator><name pos:start="259:80" pos:end="259:84">frame</name><operator pos:start="259:85" pos:end="259:86">-&gt;</operator><name pos:start="259:87" pos:end="259:92">format</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="259:96" pos:end="259:127"><expr pos:start="259:96" pos:end="259:127"><call pos:start="259:96" pos:end="259:127"><name pos:start="259:96" pos:end="259:116">av_frame_get_channels</name><argument_list pos:start="259:117" pos:end="259:127">(<argument pos:start="259:118" pos:end="259:126"><expr pos:start="259:118" pos:end="259:126"><name pos:start="259:118" pos:end="259:126"><name pos:start="259:118" pos:end="259:119">is</name><operator pos:start="259:120" pos:end="259:121">-&gt;</operator><name pos:start="259:122" pos:end="259:126">frame</name></name></expr></argument>)</argument_list></call></expr></argument>,

                            <argument pos:start="261:29" pos:end="261:46"><expr pos:start="261:29" pos:end="261:46"><name pos:start="261:29" pos:end="261:46"><name pos:start="261:29" pos:end="261:30">is</name><operator pos:start="261:31" pos:end="261:32">-&gt;</operator><name pos:start="261:33" pos:end="261:41">audio_tgt</name><operator pos:start="261:42" pos:end="261:42">.</operator><name pos:start="261:43" pos:end="261:46">freq</name></name></expr></argument>, <argument pos:start="261:49" pos:end="261:89"><expr pos:start="261:49" pos:end="261:89"><call pos:start="261:49" pos:end="261:89"><name pos:start="261:49" pos:end="261:70">av_get_sample_fmt_name</name><argument_list pos:start="261:71" pos:end="261:89">(<argument pos:start="261:72" pos:end="261:88"><expr pos:start="261:72" pos:end="261:88"><name pos:start="261:72" pos:end="261:88"><name pos:start="261:72" pos:end="261:73">is</name><operator pos:start="261:74" pos:end="261:75">-&gt;</operator><name pos:start="261:76" pos:end="261:84">audio_tgt</name><operator pos:start="261:85" pos:end="261:85">.</operator><name pos:start="261:86" pos:end="261:88">fmt</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="261:92" pos:end="261:113"><expr pos:start="261:92" pos:end="261:113"><name pos:start="261:92" pos:end="261:113"><name pos:start="261:92" pos:end="261:93">is</name><operator pos:start="261:94" pos:end="261:95">-&gt;</operator><name pos:start="261:96" pos:end="261:104">audio_tgt</name><operator pos:start="261:105" pos:end="261:105">.</operator><name pos:start="261:106" pos:end="261:113">channels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="263:21" pos:end="263:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:66"><expr pos:start="267:17" pos:end="267:65"><name pos:start="267:17" pos:end="267:44"><name pos:start="267:17" pos:end="267:18">is</name><operator pos:start="267:19" pos:end="267:20">-&gt;</operator><name pos:start="267:21" pos:end="267:29">audio_src</name><operator pos:start="267:30" pos:end="267:30">.</operator><name pos:start="267:31" pos:end="267:44">channel_layout</name></name> <operator pos:start="267:46" pos:end="267:46">=</operator> <name pos:start="267:48" pos:end="267:65">dec_channel_layout</name></expr>;</expr_stmt>

                <expr_stmt pos:start="269:17" pos:end="269:80"><expr pos:start="269:17" pos:end="269:79"><name pos:start="269:17" pos:end="269:38"><name pos:start="269:17" pos:end="269:18">is</name><operator pos:start="269:19" pos:end="269:20">-&gt;</operator><name pos:start="269:21" pos:end="269:29">audio_src</name><operator pos:start="269:30" pos:end="269:30">.</operator><name pos:start="269:31" pos:end="269:38">channels</name></name>       <operator pos:start="269:46" pos:end="269:46">=</operator> <call pos:start="269:48" pos:end="269:79"><name pos:start="269:48" pos:end="269:68">av_frame_get_channels</name><argument_list pos:start="269:69" pos:end="269:79">(<argument pos:start="269:70" pos:end="269:78"><expr pos:start="269:70" pos:end="269:78"><name pos:start="269:70" pos:end="269:78"><name pos:start="269:70" pos:end="269:71">is</name><operator pos:start="269:72" pos:end="269:73">-&gt;</operator><name pos:start="269:74" pos:end="269:78">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:60"><expr pos:start="271:17" pos:end="271:59"><name pos:start="271:17" pos:end="271:34"><name pos:start="271:17" pos:end="271:18">is</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:29">audio_src</name><operator pos:start="271:30" pos:end="271:30">.</operator><name pos:start="271:31" pos:end="271:34">freq</name></name> <operator pos:start="271:36" pos:end="271:36">=</operator> <name pos:start="271:38" pos:end="271:59"><name pos:start="271:38" pos:end="271:39">is</name><operator pos:start="271:40" pos:end="271:41">-&gt;</operator><name pos:start="271:42" pos:end="271:46">frame</name><operator pos:start="271:47" pos:end="271:48">-&gt;</operator><name pos:start="271:49" pos:end="271:59">sample_rate</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="273:17" pos:end="273:54"><expr pos:start="273:17" pos:end="273:53"><name pos:start="273:17" pos:end="273:33"><name pos:start="273:17" pos:end="273:18">is</name><operator pos:start="273:19" pos:end="273:20">-&gt;</operator><name pos:start="273:21" pos:end="273:29">audio_src</name><operator pos:start="273:30" pos:end="273:30">.</operator><name pos:start="273:31" pos:end="273:33">fmt</name></name> <operator pos:start="273:35" pos:end="273:35">=</operator> <name pos:start="273:37" pos:end="273:53"><name pos:start="273:37" pos:end="273:38">is</name><operator pos:start="273:39" pos:end="273:40">-&gt;</operator><name pos:start="273:41" pos:end="273:45">frame</name><operator pos:start="273:46" pos:end="273:47">-&gt;</operator><name pos:start="273:48" pos:end="273:53">format</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="279:13" pos:end="347:13"><if pos:start="279:13" pos:end="341:13">if <condition pos:start="279:16" pos:end="279:28">(<expr pos:start="279:17" pos:end="279:27"><name pos:start="279:17" pos:end="279:27"><name pos:start="279:17" pos:end="279:18">is</name><operator pos:start="279:19" pos:end="279:20">-&gt;</operator><name pos:start="279:21" pos:end="279:27">swr_ctx</name></name></expr>)</condition> <block pos:start="279:30" pos:end="341:13">{<block_content pos:start="281:17" pos:end="339:113">

                <decl_stmt pos:start="281:17" pos:end="281:80"><decl pos:start="281:17" pos:end="281:79"><type pos:start="281:17" pos:end="281:32"><specifier pos:start="281:17" pos:end="281:21">const</specifier> <name pos:start="281:23" pos:end="281:29">uint8_t</name> <modifier pos:start="281:31" pos:end="281:31">*</modifier><modifier pos:start="281:32" pos:end="281:32">*</modifier></type><name pos:start="281:33" pos:end="281:34">in</name> <init pos:start="281:36" pos:end="281:79">= <expr pos:start="281:38" pos:end="281:79"><operator pos:start="281:38" pos:end="281:38">(</operator><specifier pos:start="281:39" pos:end="281:43">const</specifier> <name pos:start="281:45" pos:end="281:51">uint8_t</name> <operator pos:start="281:53" pos:end="281:53">*</operator><operator pos:start="281:54" pos:end="281:54">*</operator><operator pos:start="281:55" pos:end="281:55">)</operator><name pos:start="281:56" pos:end="281:79"><name pos:start="281:56" pos:end="281:57">is</name><operator pos:start="281:58" pos:end="281:59">-&gt;</operator><name pos:start="281:60" pos:end="281:64">frame</name><operator pos:start="281:65" pos:end="281:66">-&gt;</operator><name pos:start="281:67" pos:end="281:79">extended_data</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="283:17" pos:end="283:48"><decl pos:start="283:17" pos:end="283:47"><type pos:start="283:17" pos:end="283:26"><name pos:start="283:17" pos:end="283:23">uint8_t</name> <modifier pos:start="283:25" pos:end="283:25">*</modifier><modifier pos:start="283:26" pos:end="283:26">*</modifier></type><name pos:start="283:27" pos:end="283:29">out</name> <init pos:start="283:31" pos:end="283:47">= <expr pos:start="283:33" pos:end="283:47"><operator pos:start="283:33" pos:end="283:33">&amp;</operator><name pos:start="283:34" pos:end="283:47"><name pos:start="283:34" pos:end="283:35">is</name><operator pos:start="283:36" pos:end="283:37">-&gt;</operator><name pos:start="283:38" pos:end="283:47">audio_buf1</name></name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="285:17" pos:end="285:111"><decl pos:start="285:17" pos:end="285:110"><type pos:start="285:17" pos:end="285:19"><name pos:start="285:17" pos:end="285:19">int</name></type> <name pos:start="285:21" pos:end="285:29">out_count</name> <init pos:start="285:31" pos:end="285:110">= <expr pos:start="285:33" pos:end="285:110"><operator pos:start="285:33" pos:end="285:33">(</operator><name pos:start="285:34" pos:end="285:40">int64_t</name><operator pos:start="285:41" pos:end="285:41">)</operator><name pos:start="285:42" pos:end="285:58">wanted_nb_samples</name> <operator pos:start="285:60" pos:end="285:60">*</operator> <name pos:start="285:62" pos:end="285:79"><name pos:start="285:62" pos:end="285:63">is</name><operator pos:start="285:64" pos:end="285:65">-&gt;</operator><name pos:start="285:66" pos:end="285:74">audio_tgt</name><operator pos:start="285:75" pos:end="285:75">.</operator><name pos:start="285:76" pos:end="285:79">freq</name></name> <operator pos:start="285:81" pos:end="285:81">/</operator> <name pos:start="285:83" pos:end="285:104"><name pos:start="285:83" pos:end="285:84">is</name><operator pos:start="285:85" pos:end="285:86">-&gt;</operator><name pos:start="285:87" pos:end="285:91">frame</name><operator pos:start="285:92" pos:end="285:93">-&gt;</operator><name pos:start="285:94" pos:end="285:104">sample_rate</name></name> <operator pos:start="285:106" pos:end="285:106">+</operator> <literal type="number" pos:start="285:108" pos:end="285:110">256</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="287:17" pos:end="287:122"><decl pos:start="287:17" pos:end="287:121"><type pos:start="287:17" pos:end="287:19"><name pos:start="287:17" pos:end="287:19">int</name></type> <name pos:start="287:21" pos:end="287:28">out_size</name>  <init pos:start="287:31" pos:end="287:121">= <expr pos:start="287:33" pos:end="287:121"><call pos:start="287:33" pos:end="287:121"><name pos:start="287:33" pos:end="287:58">av_samples_get_buffer_size</name><argument_list pos:start="287:59" pos:end="287:121">(<argument pos:start="287:60" pos:end="287:63"><expr pos:start="287:60" pos:end="287:63"><name pos:start="287:60" pos:end="287:63">NULL</name></expr></argument>, <argument pos:start="287:66" pos:end="287:87"><expr pos:start="287:66" pos:end="287:87"><name pos:start="287:66" pos:end="287:87"><name pos:start="287:66" pos:end="287:67">is</name><operator pos:start="287:68" pos:end="287:69">-&gt;</operator><name pos:start="287:70" pos:end="287:78">audio_tgt</name><operator pos:start="287:79" pos:end="287:79">.</operator><name pos:start="287:80" pos:end="287:87">channels</name></name></expr></argument>, <argument pos:start="287:90" pos:end="287:98"><expr pos:start="287:90" pos:end="287:98"><name pos:start="287:90" pos:end="287:98">out_count</name></expr></argument>, <argument pos:start="287:101" pos:end="287:117"><expr pos:start="287:101" pos:end="287:117"><name pos:start="287:101" pos:end="287:117"><name pos:start="287:101" pos:end="287:102">is</name><operator pos:start="287:103" pos:end="287:104">-&gt;</operator><name pos:start="287:105" pos:end="287:113">audio_tgt</name><operator pos:start="287:114" pos:end="287:114">.</operator><name pos:start="287:115" pos:end="287:117">fmt</name></name></expr></argument>, <argument pos:start="287:120" pos:end="287:120"><expr pos:start="287:120" pos:end="287:120"><literal type="number" pos:start="287:120" pos:end="287:120">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="289:17" pos:end="289:25"><decl pos:start="289:17" pos:end="289:24"><type pos:start="289:17" pos:end="289:19"><name pos:start="289:17" pos:end="289:19">int</name></type> <name pos:start="289:21" pos:end="289:24">len2</name></decl>;</decl_stmt>

                <if_stmt pos:start="291:17" pos:end="297:17"><if pos:start="291:17" pos:end="297:17">if <condition pos:start="291:20" pos:end="291:33">(<expr pos:start="291:21" pos:end="291:32"><name pos:start="291:21" pos:end="291:28">out_size</name> <operator pos:start="291:30" pos:end="291:30">&lt;</operator> <literal type="number" pos:start="291:32" pos:end="291:32">0</literal></expr>)</condition> <block pos:start="291:35" pos:end="297:17">{<block_content pos:start="293:21" pos:end="295:26">

                    <expr_stmt pos:start="293:21" pos:end="293:88"><expr pos:start="293:21" pos:end="293:87"><call pos:start="293:21" pos:end="293:87"><name pos:start="293:21" pos:end="293:26">av_log</name><argument_list pos:start="293:27" pos:end="293:87">(<argument pos:start="293:28" pos:end="293:31"><expr pos:start="293:28" pos:end="293:31"><name pos:start="293:28" pos:end="293:31">NULL</name></expr></argument>, <argument pos:start="293:34" pos:end="293:45"><expr pos:start="293:34" pos:end="293:45"><name pos:start="293:34" pos:end="293:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="293:48" pos:end="293:86"><expr pos:start="293:48" pos:end="293:86"><literal type="string" pos:start="293:48" pos:end="293:86">"av_samples_get_buffer_size() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="295:21" pos:end="295:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="299:17" pos:end="311:17"><if pos:start="299:17" pos:end="311:17">if <condition pos:start="299:20" pos:end="299:63">(<expr pos:start="299:21" pos:end="299:62"><name pos:start="299:21" pos:end="299:37">wanted_nb_samples</name> <operator pos:start="299:39" pos:end="299:40">!=</operator> <name pos:start="299:42" pos:end="299:62"><name pos:start="299:42" pos:end="299:43">is</name><operator pos:start="299:44" pos:end="299:45">-&gt;</operator><name pos:start="299:46" pos:end="299:50">frame</name><operator pos:start="299:51" pos:end="299:52">-&gt;</operator><name pos:start="299:53" pos:end="299:62">nb_samples</name></name></expr>)</condition> <block pos:start="299:65" pos:end="311:17">{<block_content pos:start="301:21" pos:end="309:21">

                    <if_stmt pos:start="301:21" pos:end="309:21"><if pos:start="301:21" pos:end="309:21">if <condition pos:start="301:24" pos:end="303:117">(<expr pos:start="301:25" pos:end="303:116"><call pos:start="301:25" pos:end="303:112"><name pos:start="301:25" pos:end="301:44">swr_set_compensation</name><argument_list pos:start="301:45" pos:end="303:112">(<argument pos:start="301:46" pos:end="301:56"><expr pos:start="301:46" pos:end="301:56"><name pos:start="301:46" pos:end="301:56"><name pos:start="301:46" pos:end="301:47">is</name><operator pos:start="301:48" pos:end="301:49">-&gt;</operator><name pos:start="301:50" pos:end="301:56">swr_ctx</name></name></expr></argument>, <argument pos:start="301:59" pos:end="301:147"><expr pos:start="301:59" pos:end="301:147"><operator pos:start="301:59" pos:end="301:59">(</operator><name pos:start="301:60" pos:end="301:76">wanted_nb_samples</name> <operator pos:start="301:78" pos:end="301:78">-</operator> <name pos:start="301:80" pos:end="301:100"><name pos:start="301:80" pos:end="301:81">is</name><operator pos:start="301:82" pos:end="301:83">-&gt;</operator><name pos:start="301:84" pos:end="301:88">frame</name><operator pos:start="301:89" pos:end="301:90">-&gt;</operator><name pos:start="301:91" pos:end="301:100">nb_samples</name></name><operator pos:start="301:101" pos:end="301:101">)</operator> <operator pos:start="301:103" pos:end="301:103">*</operator> <name pos:start="301:105" pos:end="301:122"><name pos:start="301:105" pos:end="301:106">is</name><operator pos:start="301:107" pos:end="301:108">-&gt;</operator><name pos:start="301:109" pos:end="301:117">audio_tgt</name><operator pos:start="301:118" pos:end="301:118">.</operator><name pos:start="301:119" pos:end="301:122">freq</name></name> <operator pos:start="301:124" pos:end="301:124">/</operator> <name pos:start="301:126" pos:end="301:147"><name pos:start="301:126" pos:end="301:127">is</name><operator pos:start="301:128" pos:end="301:129">-&gt;</operator><name pos:start="301:130" pos:end="301:134">frame</name><operator pos:start="301:135" pos:end="301:136">-&gt;</operator><name pos:start="301:137" pos:end="301:147">sample_rate</name></name></expr></argument>,

                                                <argument pos:start="303:49" pos:end="303:111"><expr pos:start="303:49" pos:end="303:111"><name pos:start="303:49" pos:end="303:65">wanted_nb_samples</name> <operator pos:start="303:67" pos:end="303:67">*</operator> <name pos:start="303:69" pos:end="303:86"><name pos:start="303:69" pos:end="303:70">is</name><operator pos:start="303:71" pos:end="303:72">-&gt;</operator><name pos:start="303:73" pos:end="303:81">audio_tgt</name><operator pos:start="303:82" pos:end="303:82">.</operator><name pos:start="303:83" pos:end="303:86">freq</name></name> <operator pos:start="303:88" pos:end="303:88">/</operator> <name pos:start="303:90" pos:end="303:111"><name pos:start="303:90" pos:end="303:91">is</name><operator pos:start="303:92" pos:end="303:93">-&gt;</operator><name pos:start="303:94" pos:end="303:98">frame</name><operator pos:start="303:99" pos:end="303:100">-&gt;</operator><name pos:start="303:101" pos:end="303:111">sample_rate</name></name></expr></argument>)</argument_list></call> <operator pos:start="303:114" pos:end="303:114">&lt;</operator> <literal type="number" pos:start="303:116" pos:end="303:116">0</literal></expr>)</condition> <block pos:start="303:119" pos:end="309:21">{<block_content pos:start="305:25" pos:end="307:30">

                        <expr_stmt pos:start="305:25" pos:end="305:86"><expr pos:start="305:25" pos:end="305:85"><call pos:start="305:25" pos:end="305:85"><name pos:start="305:25" pos:end="305:30">av_log</name><argument_list pos:start="305:31" pos:end="305:85">(<argument pos:start="305:32" pos:end="305:35"><expr pos:start="305:32" pos:end="305:35"><name pos:start="305:32" pos:end="305:35">NULL</name></expr></argument>, <argument pos:start="305:38" pos:end="305:49"><expr pos:start="305:38" pos:end="305:49"><name pos:start="305:38" pos:end="305:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="305:52" pos:end="305:84"><expr pos:start="305:52" pos:end="305:84"><literal type="string" pos:start="305:52" pos:end="305:84">"swr_set_compensation() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="307:25" pos:end="307:30">break;</break>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:80"><expr pos:start="313:17" pos:end="313:79"><call pos:start="313:17" pos:end="313:79"><name pos:start="313:17" pos:end="313:30">av_fast_malloc</name><argument_list pos:start="313:31" pos:end="313:79">(<argument pos:start="313:32" pos:end="313:46"><expr pos:start="313:32" pos:end="313:46"><operator pos:start="313:32" pos:end="313:32">&amp;</operator><name pos:start="313:33" pos:end="313:46"><name pos:start="313:33" pos:end="313:34">is</name><operator pos:start="313:35" pos:end="313:36">-&gt;</operator><name pos:start="313:37" pos:end="313:46">audio_buf1</name></name></expr></argument>, <argument pos:start="313:49" pos:end="313:68"><expr pos:start="313:49" pos:end="313:68"><operator pos:start="313:49" pos:end="313:49">&amp;</operator><name pos:start="313:50" pos:end="313:68"><name pos:start="313:50" pos:end="313:51">is</name><operator pos:start="313:52" pos:end="313:53">-&gt;</operator><name pos:start="313:54" pos:end="313:68">audio_buf1_size</name></name></expr></argument>, <argument pos:start="313:71" pos:end="313:78"><expr pos:start="313:71" pos:end="313:78"><name pos:start="313:71" pos:end="313:78">out_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="315:17" pos:end="317:43"><if pos:start="315:17" pos:end="317:43">if <condition pos:start="315:20" pos:end="315:36">(<expr pos:start="315:21" pos:end="315:35"><operator pos:start="315:21" pos:end="315:21">!</operator><name pos:start="315:22" pos:end="315:35"><name pos:start="315:22" pos:end="315:23">is</name><operator pos:start="315:24" pos:end="315:25">-&gt;</operator><name pos:start="315:26" pos:end="315:35">audio_buf1</name></name></expr>)</condition><block type="pseudo" pos:start="317:21" pos:end="317:43"><block_content pos:start="317:21" pos:end="317:43">

                    <return pos:start="317:21" pos:end="317:43">return <expr pos:start="317:28" pos:end="317:42"><call pos:start="317:28" pos:end="317:42"><name pos:start="317:28" pos:end="317:34">AVERROR</name><argument_list pos:start="317:35" pos:end="317:42">(<argument pos:start="317:36" pos:end="317:41"><expr pos:start="317:36" pos:end="317:41"><name pos:start="317:36" pos:end="317:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="319:17" pos:end="319:91"><expr pos:start="319:17" pos:end="319:90"><name pos:start="319:17" pos:end="319:20">len2</name> <operator pos:start="319:22" pos:end="319:22">=</operator> <call pos:start="319:24" pos:end="319:90"><name pos:start="319:24" pos:end="319:34">swr_convert</name><argument_list pos:start="319:35" pos:end="319:90">(<argument pos:start="319:36" pos:end="319:46"><expr pos:start="319:36" pos:end="319:46"><name pos:start="319:36" pos:end="319:46"><name pos:start="319:36" pos:end="319:37">is</name><operator pos:start="319:38" pos:end="319:39">-&gt;</operator><name pos:start="319:40" pos:end="319:46">swr_ctx</name></name></expr></argument>, <argument pos:start="319:49" pos:end="319:51"><expr pos:start="319:49" pos:end="319:51"><name pos:start="319:49" pos:end="319:51">out</name></expr></argument>, <argument pos:start="319:54" pos:end="319:62"><expr pos:start="319:54" pos:end="319:62"><name pos:start="319:54" pos:end="319:62">out_count</name></expr></argument>, <argument pos:start="319:65" pos:end="319:66"><expr pos:start="319:65" pos:end="319:66"><name pos:start="319:65" pos:end="319:66">in</name></expr></argument>, <argument pos:start="319:69" pos:end="319:89"><expr pos:start="319:69" pos:end="319:89"><name pos:start="319:69" pos:end="319:89"><name pos:start="319:69" pos:end="319:70">is</name><operator pos:start="319:71" pos:end="319:72">-&gt;</operator><name pos:start="319:73" pos:end="319:77">frame</name><operator pos:start="319:78" pos:end="319:79">-&gt;</operator><name pos:start="319:80" pos:end="319:89">nb_samples</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="321:17" pos:end="327:17"><if pos:start="321:17" pos:end="327:17">if <condition pos:start="321:20" pos:end="321:29">(<expr pos:start="321:21" pos:end="321:28"><name pos:start="321:21" pos:end="321:24">len2</name> <operator pos:start="321:26" pos:end="321:26">&lt;</operator> <literal type="number" pos:start="321:28" pos:end="321:28">0</literal></expr>)</condition> <block pos:start="321:31" pos:end="327:17">{<block_content pos:start="323:21" pos:end="325:26">

                    <expr_stmt pos:start="323:21" pos:end="323:73"><expr pos:start="323:21" pos:end="323:72"><call pos:start="323:21" pos:end="323:72"><name pos:start="323:21" pos:end="323:26">av_log</name><argument_list pos:start="323:27" pos:end="323:72">(<argument pos:start="323:28" pos:end="323:31"><expr pos:start="323:28" pos:end="323:31"><name pos:start="323:28" pos:end="323:31">NULL</name></expr></argument>, <argument pos:start="323:34" pos:end="323:45"><expr pos:start="323:34" pos:end="323:45"><name pos:start="323:34" pos:end="323:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="323:48" pos:end="323:71"><expr pos:start="323:48" pos:end="323:71"><literal type="string" pos:start="323:48" pos:end="323:71">"swr_convert() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="325:21" pos:end="325:26">break;</break>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="329:17" pos:end="335:17"><if pos:start="329:17" pos:end="335:17">if <condition pos:start="329:20" pos:end="329:38">(<expr pos:start="329:21" pos:end="329:37"><name pos:start="329:21" pos:end="329:24">len2</name> <operator pos:start="329:26" pos:end="329:27">==</operator> <name pos:start="329:29" pos:end="329:37">out_count</name></expr>)</condition> <block pos:start="329:40" pos:end="335:17">{<block_content pos:start="331:21" pos:end="333:42">

                    <expr_stmt pos:start="331:21" pos:end="331:89"><expr pos:start="331:21" pos:end="331:88"><call pos:start="331:21" pos:end="331:88"><name pos:start="331:21" pos:end="331:26">av_log</name><argument_list pos:start="331:27" pos:end="331:88">(<argument pos:start="331:28" pos:end="331:31"><expr pos:start="331:28" pos:end="331:31"><name pos:start="331:28" pos:end="331:31">NULL</name></expr></argument>, <argument pos:start="331:34" pos:end="331:47"><expr pos:start="331:34" pos:end="331:47"><name pos:start="331:34" pos:end="331:47">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="331:50" pos:end="331:87"><expr pos:start="331:50" pos:end="331:87"><literal type="string" pos:start="331:50" pos:end="331:87">"audio buffer is probably too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="333:21" pos:end="333:42"><expr pos:start="333:21" pos:end="333:41"><call pos:start="333:21" pos:end="333:41"><name pos:start="333:21" pos:end="333:28">swr_init</name><argument_list pos:start="333:29" pos:end="333:41">(<argument pos:start="333:30" pos:end="333:40"><expr pos:start="333:30" pos:end="333:40"><name pos:start="333:30" pos:end="333:40"><name pos:start="333:30" pos:end="333:31">is</name><operator pos:start="333:32" pos:end="333:33">-&gt;</operator><name pos:start="333:34" pos:end="333:40">swr_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:47"><expr pos:start="337:17" pos:end="337:46"><name pos:start="337:17" pos:end="337:29"><name pos:start="337:17" pos:end="337:18">is</name><operator pos:start="337:19" pos:end="337:20">-&gt;</operator><name pos:start="337:21" pos:end="337:29">audio_buf</name></name> <operator pos:start="337:31" pos:end="337:31">=</operator> <name pos:start="337:33" pos:end="337:46"><name pos:start="337:33" pos:end="337:34">is</name><operator pos:start="337:35" pos:end="337:36">-&gt;</operator><name pos:start="337:37" pos:end="337:46">audio_buf1</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:113"><expr pos:start="339:17" pos:end="339:112"><name pos:start="339:17" pos:end="339:35">resampled_data_size</name> <operator pos:start="339:37" pos:end="339:37">=</operator> <name pos:start="339:39" pos:end="339:42">len2</name> <operator pos:start="339:44" pos:end="339:44">*</operator> <name pos:start="339:46" pos:end="339:67"><name pos:start="339:46" pos:end="339:47">is</name><operator pos:start="339:48" pos:end="339:49">-&gt;</operator><name pos:start="339:50" pos:end="339:58">audio_tgt</name><operator pos:start="339:59" pos:end="339:59">.</operator><name pos:start="339:60" pos:end="339:67">channels</name></name> <operator pos:start="339:69" pos:end="339:69">*</operator> <call pos:start="339:71" pos:end="339:112"><name pos:start="339:71" pos:end="339:93">av_get_bytes_per_sample</name><argument_list pos:start="339:94" pos:end="339:112">(<argument pos:start="339:95" pos:end="339:111"><expr pos:start="339:95" pos:end="339:111"><name pos:start="339:95" pos:end="339:111"><name pos:start="339:95" pos:end="339:96">is</name><operator pos:start="339:97" pos:end="339:98">-&gt;</operator><name pos:start="339:99" pos:end="339:107">audio_tgt</name><operator pos:start="339:108" pos:end="339:108">.</operator><name pos:start="339:109" pos:end="339:111">fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="341:15" pos:end="347:13">else <block pos:start="341:20" pos:end="347:13">{<block_content pos:start="343:17" pos:end="345:48">

                <expr_stmt pos:start="343:17" pos:end="343:51"><expr pos:start="343:17" pos:end="343:50"><name pos:start="343:17" pos:end="343:29"><name pos:start="343:17" pos:end="343:18">is</name><operator pos:start="343:19" pos:end="343:20">-&gt;</operator><name pos:start="343:21" pos:end="343:29">audio_buf</name></name> <operator pos:start="343:31" pos:end="343:31">=</operator> <name pos:start="343:33" pos:end="343:50"><name pos:start="343:33" pos:end="343:34">is</name><operator pos:start="343:35" pos:end="343:36">-&gt;</operator><name pos:start="343:37" pos:end="343:41">frame</name><operator pos:start="343:42" pos:end="343:43">-&gt;</operator><name pos:start="343:44" pos:end="343:47">data</name><index pos:start="343:48" pos:end="343:50">[<expr pos:start="343:49" pos:end="343:49"><literal type="number" pos:start="343:49" pos:end="343:49">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="345:17" pos:end="345:48"><expr pos:start="345:17" pos:end="345:47"><name pos:start="345:17" pos:end="345:35">resampled_data_size</name> <operator pos:start="345:37" pos:end="345:37">=</operator> <name pos:start="345:39" pos:end="345:47">data_size</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="351:13" pos:end="351:43"><expr pos:start="351:13" pos:end="351:42"><name pos:start="351:13" pos:end="351:24">audio_clock0</name> <operator pos:start="351:26" pos:end="351:26">=</operator> <name pos:start="351:28" pos:end="351:42"><name pos:start="351:28" pos:end="351:29">is</name><operator pos:start="351:30" pos:end="351:31">-&gt;</operator><name pos:start="351:32" pos:end="351:42">audio_clock</name></name></expr>;</expr_stmt>

            <comment type="block" pos:start="353:13" pos:end="353:53">/* update the audio clock with the pts */</comment>

            <if_stmt pos:start="355:13" pos:end="361:38"><if pos:start="355:13" pos:end="357:120">if <condition pos:start="355:16" pos:end="355:49">(<expr pos:start="355:17" pos:end="355:48"><name pos:start="355:17" pos:end="355:30"><name pos:start="355:17" pos:end="355:18">is</name><operator pos:start="355:19" pos:end="355:20">-&gt;</operator><name pos:start="355:21" pos:end="355:25">frame</name><operator pos:start="355:26" pos:end="355:27">-&gt;</operator><name pos:start="355:28" pos:end="355:30">pts</name></name> <operator pos:start="355:32" pos:end="355:33">!=</operator> <name pos:start="355:35" pos:end="355:48">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="357:17" pos:end="357:120"><block_content pos:start="357:17" pos:end="357:120">

                <expr_stmt pos:start="357:17" pos:end="357:120"><expr pos:start="357:17" pos:end="357:119"><name pos:start="357:17" pos:end="357:31"><name pos:start="357:17" pos:end="357:18">is</name><operator pos:start="357:19" pos:end="357:20">-&gt;</operator><name pos:start="357:21" pos:end="357:31">audio_clock</name></name> <operator pos:start="357:33" pos:end="357:33">=</operator> <name pos:start="357:35" pos:end="357:48"><name pos:start="357:35" pos:end="357:36">is</name><operator pos:start="357:37" pos:end="357:38">-&gt;</operator><name pos:start="357:39" pos:end="357:43">frame</name><operator pos:start="357:44" pos:end="357:45">-&gt;</operator><name pos:start="357:46" pos:end="357:48">pts</name></name> <operator pos:start="357:50" pos:end="357:50">*</operator> <call pos:start="357:52" pos:end="357:61"><name pos:start="357:52" pos:end="357:57">av_q2d</name><argument_list pos:start="357:58" pos:end="357:61">(<argument pos:start="357:59" pos:end="357:60"><expr pos:start="357:59" pos:end="357:60"><name pos:start="357:59" pos:end="357:60">tb</name></expr></argument>)</argument_list></call> <operator pos:start="357:63" pos:end="357:63">+</operator> <operator pos:start="357:65" pos:end="357:65">(</operator><name pos:start="357:66" pos:end="357:71">double</name><operator pos:start="357:72" pos:end="357:72">)</operator> <name pos:start="357:74" pos:end="357:94"><name pos:start="357:74" pos:end="357:75">is</name><operator pos:start="357:76" pos:end="357:77">-&gt;</operator><name pos:start="357:78" pos:end="357:82">frame</name><operator pos:start="357:83" pos:end="357:84">-&gt;</operator><name pos:start="357:85" pos:end="357:94">nb_samples</name></name> <operator pos:start="357:96" pos:end="357:96">/</operator> <name pos:start="357:98" pos:end="357:119"><name pos:start="357:98" pos:end="357:99">is</name><operator pos:start="357:100" pos:end="357:101">-&gt;</operator><name pos:start="357:102" pos:end="357:106">frame</name><operator pos:start="357:107" pos:end="357:108">-&gt;</operator><name pos:start="357:109" pos:end="357:119">sample_rate</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="359:13" pos:end="361:38">else<block type="pseudo" pos:start="361:17" pos:end="361:38"><block_content pos:start="361:17" pos:end="361:38">

                <expr_stmt pos:start="361:17" pos:end="361:38"><expr pos:start="361:17" pos:end="361:37"><name pos:start="361:17" pos:end="361:31"><name pos:start="361:17" pos:end="361:18">is</name><operator pos:start="361:19" pos:end="361:20">-&gt;</operator><name pos:start="361:21" pos:end="361:31">audio_clock</name></name> <operator pos:start="361:33" pos:end="361:33">=</operator> <name pos:start="361:35" pos:end="361:37">NAN</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="363:13" pos:end="366:0"><expr pos:start="363:13" pos:end="363:62"><name pos:start="363:13" pos:end="363:34"><name pos:start="363:13" pos:end="363:14">is</name><operator pos:start="363:15" pos:end="363:16">-&gt;</operator><name pos:start="363:17" pos:end="363:34">audio_clock_serial</name></name> <operator pos:start="363:36" pos:end="363:36">=</operator> <name pos:start="363:38" pos:end="363:62"><name pos:start="363:38" pos:end="363:39">is</name><operator pos:start="363:40" pos:end="363:41">-&gt;</operator><name pos:start="363:42" pos:end="363:62">audio_pkt_temp_serial</name></name></expr>;</expr_stmt>

<cpp:ifdef pos:start="365:1" pos:end="365:12">#<cpp:directive pos:start="365:2" pos:end="365:6">ifdef</cpp:directive> <name pos:start="365:8" pos:end="365:12">DEBUG</name></cpp:ifdef>

            <block pos:start="367:13" pos:end="382:0">{<block_content pos:start="369:17" pos:end="377:45">

                <decl_stmt pos:start="369:17" pos:end="369:41"><decl pos:start="369:17" pos:end="369:40"><type pos:start="369:17" pos:end="369:29"><specifier pos:start="369:17" pos:end="369:22">static</specifier> <name pos:start="369:24" pos:end="369:29">double</name></type> <name pos:start="369:31" pos:end="369:40">last_clock</name></decl>;</decl_stmt>

                <expr_stmt pos:start="371:17" pos:end="375:54"><expr pos:start="371:17" pos:end="375:53"><call pos:start="371:17" pos:end="375:53"><name pos:start="371:17" pos:end="371:22">printf</name><argument_list pos:start="371:23" pos:end="375:53">(<argument pos:start="371:24" pos:end="371:70"><expr pos:start="371:24" pos:end="371:70"><literal type="string" pos:start="371:24" pos:end="371:70">"audio: delay=%0.3f clock=%0.3f clock0=%0.3f\n"</literal></expr></argument>,

                       <argument pos:start="373:24" pos:end="373:51"><expr pos:start="373:24" pos:end="373:51"><name pos:start="373:24" pos:end="373:38"><name pos:start="373:24" pos:end="373:25">is</name><operator pos:start="373:26" pos:end="373:27">-&gt;</operator><name pos:start="373:28" pos:end="373:38">audio_clock</name></name> <operator pos:start="373:40" pos:end="373:40">-</operator> <name pos:start="373:42" pos:end="373:51">last_clock</name></expr></argument>,

                       <argument pos:start="375:24" pos:end="375:38"><expr pos:start="375:24" pos:end="375:38"><name pos:start="375:24" pos:end="375:38"><name pos:start="375:24" pos:end="375:25">is</name><operator pos:start="375:26" pos:end="375:27">-&gt;</operator><name pos:start="375:28" pos:end="375:38">audio_clock</name></name></expr></argument>, <argument pos:start="375:41" pos:end="375:52"><expr pos:start="375:41" pos:end="375:52"><name pos:start="375:41" pos:end="375:52">audio_clock0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="377:17" pos:end="377:45"><expr pos:start="377:17" pos:end="377:44"><name pos:start="377:17" pos:end="377:26">last_clock</name> <operator pos:start="377:28" pos:end="377:28">=</operator> <name pos:start="377:30" pos:end="377:44"><name pos:start="377:30" pos:end="377:31">is</name><operator pos:start="377:32" pos:end="377:33">-&gt;</operator><name pos:start="377:34" pos:end="377:44">audio_clock</name></name></expr>;</expr_stmt>

            </block_content>}</block>

<cpp:endif pos:start="381:1" pos:end="381:6">#<cpp:directive pos:start="381:2" pos:end="381:6">endif</cpp:directive></cpp:endif>

            <return pos:start="383:13" pos:end="383:39">return <expr pos:start="383:20" pos:end="383:38"><name pos:start="383:20" pos:end="383:38">resampled_data_size</name></expr>;</return>

        </block_content>}</block></while>



        <comment type="block" pos:start="389:9" pos:end="389:37">/* free the current packet */</comment>

        <if_stmt pos:start="391:9" pos:end="393:32"><if pos:start="391:9" pos:end="393:32">if <condition pos:start="391:12" pos:end="391:22">(<expr pos:start="391:13" pos:end="391:21"><name pos:start="391:13" pos:end="391:21"><name pos:start="391:13" pos:end="391:15">pkt</name><operator pos:start="391:16" pos:end="391:17">-&gt;</operator><name pos:start="391:18" pos:end="391:21">data</name></name></expr>)</condition><block type="pseudo" pos:start="393:13" pos:end="393:32"><block_content pos:start="393:13" pos:end="393:32">

            <expr_stmt pos:start="393:13" pos:end="393:32"><expr pos:start="393:13" pos:end="393:31"><call pos:start="393:13" pos:end="393:31"><name pos:start="393:13" pos:end="393:26">av_free_packet</name><argument_list pos:start="393:27" pos:end="393:31">(<argument pos:start="393:28" pos:end="393:30"><expr pos:start="393:28" pos:end="393:30"><name pos:start="393:28" pos:end="393:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="395:9" pos:end="395:47"><expr pos:start="395:9" pos:end="395:46"><call pos:start="395:9" pos:end="395:46"><name pos:start="395:9" pos:end="395:14">memset</name><argument_list pos:start="395:15" pos:end="395:46">(<argument pos:start="395:16" pos:end="395:23"><expr pos:start="395:16" pos:end="395:23"><name pos:start="395:16" pos:end="395:23">pkt_temp</name></expr></argument>, <argument pos:start="395:26" pos:end="395:26"><expr pos:start="395:26" pos:end="395:26"><literal type="number" pos:start="395:26" pos:end="395:26">0</literal></expr></argument>, <argument pos:start="395:29" pos:end="395:45"><expr pos:start="395:29" pos:end="395:45"><sizeof pos:start="395:29" pos:end="395:45">sizeof<argument_list pos:start="395:35" pos:end="395:45">(<argument pos:start="395:36" pos:end="395:44"><expr pos:start="395:36" pos:end="395:44"><operator pos:start="395:36" pos:end="395:36">*</operator><name pos:start="395:37" pos:end="395:44">pkt_temp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="399:9" pos:end="403:9"><if pos:start="399:9" pos:end="403:9">if <condition pos:start="399:12" pos:end="399:37">(<expr pos:start="399:13" pos:end="399:36"><name pos:start="399:13" pos:end="399:36"><name pos:start="399:13" pos:end="399:14">is</name><operator pos:start="399:15" pos:end="399:16">-&gt;</operator><name pos:start="399:17" pos:end="399:22">audioq</name><operator pos:start="399:23" pos:end="399:23">.</operator><name pos:start="399:24" pos:end="399:36">abort_request</name></name></expr>)</condition> <block pos:start="399:39" pos:end="403:9">{<block_content pos:start="401:13" pos:end="401:22">

            <return pos:start="401:13" pos:end="401:22">return <expr pos:start="401:20" pos:end="401:21"><operator pos:start="401:20" pos:end="401:20">-</operator><literal type="number" pos:start="401:21" pos:end="401:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="407:9" pos:end="409:53"><if pos:start="407:9" pos:end="409:53">if <condition pos:start="407:12" pos:end="407:39">(<expr pos:start="407:13" pos:end="407:38"><name pos:start="407:13" pos:end="407:33"><name pos:start="407:13" pos:end="407:14">is</name><operator pos:start="407:15" pos:end="407:16">-&gt;</operator><name pos:start="407:17" pos:end="407:22">audioq</name><operator pos:start="407:23" pos:end="407:23">.</operator><name pos:start="407:24" pos:end="407:33">nb_packets</name></name> <operator pos:start="407:35" pos:end="407:36">==</operator> <literal type="number" pos:start="407:38" pos:end="407:38">0</literal></expr>)</condition><block type="pseudo" pos:start="409:13" pos:end="409:53"><block_content pos:start="409:13" pos:end="409:53">

            <expr_stmt pos:start="409:13" pos:end="409:53"><expr pos:start="409:13" pos:end="409:52"><call pos:start="409:13" pos:end="409:52"><name pos:start="409:13" pos:end="409:26">SDL_CondSignal</name><argument_list pos:start="409:27" pos:end="409:52">(<argument pos:start="409:28" pos:end="409:51"><expr pos:start="409:28" pos:end="409:51"><name pos:start="409:28" pos:end="409:51"><name pos:start="409:28" pos:end="409:29">is</name><operator pos:start="409:30" pos:end="409:31">-&gt;</operator><name pos:start="409:32" pos:end="409:51">continue_read_thread</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="413:9" pos:end="413:30">/* read next packet */</comment>

        <if_stmt pos:start="415:9" pos:end="417:22"><if pos:start="415:9" pos:end="417:22">if <condition pos:start="415:12" pos:end="415:97">(<expr pos:start="415:13" pos:end="415:96"><operator pos:start="415:13" pos:end="415:13">(</operator><name pos:start="415:14" pos:end="415:23">new_packet</name> <operator pos:start="415:25" pos:end="415:25">=</operator> <call pos:start="415:27" pos:end="415:91"><name pos:start="415:27" pos:end="415:42">packet_queue_get</name><argument_list pos:start="415:43" pos:end="415:91">(<argument pos:start="415:44" pos:end="415:54"><expr pos:start="415:44" pos:end="415:54"><operator pos:start="415:44" pos:end="415:44">&amp;</operator><name pos:start="415:45" pos:end="415:54"><name pos:start="415:45" pos:end="415:46">is</name><operator pos:start="415:47" pos:end="415:48">-&gt;</operator><name pos:start="415:49" pos:end="415:54">audioq</name></name></expr></argument>, <argument pos:start="415:57" pos:end="415:59"><expr pos:start="415:57" pos:end="415:59"><name pos:start="415:57" pos:end="415:59">pkt</name></expr></argument>, <argument pos:start="415:62" pos:end="415:62"><expr pos:start="415:62" pos:end="415:62"><literal type="number" pos:start="415:62" pos:end="415:62">1</literal></expr></argument>, <argument pos:start="415:65" pos:end="415:90"><expr pos:start="415:65" pos:end="415:90"><operator pos:start="415:65" pos:end="415:65">&amp;</operator><name pos:start="415:66" pos:end="415:90"><name pos:start="415:66" pos:end="415:67">is</name><operator pos:start="415:68" pos:end="415:69">-&gt;</operator><name pos:start="415:70" pos:end="415:90">audio_pkt_temp_serial</name></name></expr></argument>)</argument_list></call><operator pos:start="415:92" pos:end="415:92">)</operator> <operator pos:start="415:94" pos:end="415:94">&lt;</operator> <literal type="number" pos:start="415:96" pos:end="415:96">0</literal></expr>)</condition><block type="pseudo" pos:start="417:13" pos:end="417:22"><block_content pos:start="417:13" pos:end="417:22">

            <return pos:start="417:13" pos:end="417:22">return <expr pos:start="417:20" pos:end="417:21"><operator pos:start="417:20" pos:end="417:20">-</operator><literal type="number" pos:start="417:21" pos:end="417:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="421:9" pos:end="429:9"><if pos:start="421:9" pos:end="429:9">if <condition pos:start="421:12" pos:end="421:40">(<expr pos:start="421:13" pos:end="421:39"><name pos:start="421:13" pos:end="421:21"><name pos:start="421:13" pos:end="421:15">pkt</name><operator pos:start="421:16" pos:end="421:17">-&gt;</operator><name pos:start="421:18" pos:end="421:21">data</name></name> <operator pos:start="421:23" pos:end="421:24">==</operator> <name pos:start="421:26" pos:end="421:39"><name pos:start="421:26" pos:end="421:34">flush_pkt</name><operator pos:start="421:35" pos:end="421:35">.</operator><name pos:start="421:36" pos:end="421:39">data</name></name></expr>)</condition> <block pos:start="421:42" pos:end="429:9">{<block_content pos:start="423:13" pos:end="427:45">

            <expr_stmt pos:start="423:13" pos:end="423:39"><expr pos:start="423:13" pos:end="423:38"><call pos:start="423:13" pos:end="423:38"><name pos:start="423:13" pos:end="423:33">avcodec_flush_buffers</name><argument_list pos:start="423:34" pos:end="423:38">(<argument pos:start="423:35" pos:end="423:37"><expr pos:start="423:35" pos:end="423:37"><name pos:start="423:35" pos:end="423:37">dec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="425:31"><expr pos:start="425:13" pos:end="425:30"><name pos:start="425:13" pos:end="425:26">flush_complete</name> <operator pos:start="425:28" pos:end="425:28">=</operator> <literal type="number" pos:start="425:30" pos:end="425:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="427:13" pos:end="427:45"><expr pos:start="427:13" pos:end="427:44"><name pos:start="427:13" pos:end="427:40"><name pos:start="427:13" pos:end="427:14">is</name><operator pos:start="427:15" pos:end="427:16">-&gt;</operator><name pos:start="427:17" pos:end="427:40">audio_buf_frames_pending</name></name> <operator pos:start="427:42" pos:end="427:42">=</operator> <literal type="number" pos:start="427:44" pos:end="427:44">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="433:9" pos:end="433:25"><expr pos:start="433:9" pos:end="433:24"><operator pos:start="433:9" pos:end="433:9">*</operator><name pos:start="433:10" pos:end="433:17">pkt_temp</name> <operator pos:start="433:19" pos:end="433:19">=</operator> <operator pos:start="433:21" pos:end="433:21">*</operator><name pos:start="433:22" pos:end="433:24">pkt</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
