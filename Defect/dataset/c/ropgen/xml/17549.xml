<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17549.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">uint8_t</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:34">av_packet_pack_dictionary</name><parameter_list pos:start="1:35" pos:end="1:65">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:47">AVDictionary</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:53">dict</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:64"><decl pos:start="1:56" pos:end="1:64"><type pos:start="1:56" pos:end="1:64"><name pos:start="1:56" pos:end="1:58">int</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:16">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21">AVDictionaryEntry</name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">t</name> <init pos:start="5:26" pos:end="5:31">= <expr pos:start="5:28" pos:end="5:31"><name pos:start="5:28" pos:end="5:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">data</name> <init pos:start="7:19" pos:end="7:24">= <expr pos:start="7:21" pos:end="7:24"><name pos:start="7:21" pos:end="7:24">NULL</name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:14"><expr pos:start="9:5" pos:end="9:13"><operator pos:start="9:5" pos:end="9:5">*</operator><name pos:start="9:6" pos:end="9:9">size</name> <operator pos:start="9:11" pos:end="9:11">=</operator> <literal type="number" pos:start="9:13" pos:end="9:13">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">dict</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="19:5" pos:end="47:5">while <condition pos:start="19:11" pos:end="19:65">(<expr pos:start="19:12" pos:end="19:64"><operator pos:start="19:12" pos:end="19:12">(</operator><name pos:start="19:13" pos:end="19:13">t</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:63"><name pos:start="19:17" pos:end="19:27">av_dict_get</name><argument_list pos:start="19:28" pos:end="19:63">(<argument pos:start="19:29" pos:end="19:32"><expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">dict</name></expr></argument>, <argument pos:start="19:35" pos:end="19:36"><expr pos:start="19:35" pos:end="19:36"><literal type="string" pos:start="19:35" pos:end="19:36">""</literal></expr></argument>, <argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">t</name></expr></argument>, <argument pos:start="19:42" pos:end="19:62"><expr pos:start="19:42" pos:end="19:62"><name pos:start="19:42" pos:end="19:62">AV_DICT_IGNORE_SUFFIX</name></expr></argument>)</argument_list></call><operator pos:start="19:64" pos:end="19:64">)</operator></expr>)</condition> <block pos:start="19:67" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:25">

        <decl_stmt pos:start="21:9" pos:end="21:42"><decl pos:start="21:9" pos:end="21:41"><type pos:start="21:9" pos:end="21:17"><specifier pos:start="21:9" pos:end="21:13">const</specifier> <name pos:start="21:15" pos:end="21:17">int</name></type> <name pos:start="21:19" pos:end="21:24">keylen</name> <init pos:start="21:26" pos:end="21:41">= <expr pos:start="21:28" pos:end="21:41"><call pos:start="21:28" pos:end="21:41"><name pos:start="21:28" pos:end="21:33">strlen</name><argument_list pos:start="21:34" pos:end="21:41">(<argument pos:start="21:35" pos:end="21:40"><expr pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:40"><name pos:start="21:35" pos:end="21:35">t</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:40">key</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="23:9" pos:end="23:46"><decl pos:start="23:9" pos:end="23:45"><type pos:start="23:9" pos:end="23:17"><specifier pos:start="23:9" pos:end="23:13">const</specifier> <name pos:start="23:15" pos:end="23:17">int</name></type> <name pos:start="23:19" pos:end="23:26">valuelen</name> <init pos:start="23:28" pos:end="23:45">= <expr pos:start="23:30" pos:end="23:45"><call pos:start="23:30" pos:end="23:45"><name pos:start="23:30" pos:end="23:35">strlen</name><argument_list pos:start="23:36" pos:end="23:45">(<argument pos:start="23:37" pos:end="23:44"><expr pos:start="23:37" pos:end="23:44"><name pos:start="23:37" pos:end="23:44"><name pos:start="23:37" pos:end="23:37">t</name><operator pos:start="23:38" pos:end="23:39">-&gt;</operator><name pos:start="23:40" pos:end="23:44">value</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:66"><decl pos:start="25:9" pos:end="25:65"><type pos:start="25:9" pos:end="25:20"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:20">size_t</name></type> <name pos:start="25:22" pos:end="25:29">new_size</name> <init pos:start="25:31" pos:end="25:65">= <expr pos:start="25:33" pos:end="25:65"><operator pos:start="25:33" pos:end="25:33">*</operator><name pos:start="25:34" pos:end="25:37">size</name> <operator pos:start="25:39" pos:end="25:39">+</operator> <name pos:start="25:41" pos:end="25:46">keylen</name> <operator pos:start="25:48" pos:end="25:48">+</operator> <literal type="number" pos:start="25:50" pos:end="25:52">1</literal> <operator pos:start="25:52" pos:end="25:52">+</operator> <name pos:start="25:54" pos:end="25:61">valuelen</name> <operator pos:start="25:63" pos:end="25:63">+</operator> <literal type="number" pos:start="25:65" pos:end="25:65">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:61"><decl pos:start="27:9" pos:end="27:60"><type pos:start="27:9" pos:end="27:22"><name pos:start="27:9" pos:end="27:15">uint8_t</name> <modifier pos:start="27:17" pos:end="27:17">*</modifier><specifier pos:start="27:18" pos:end="27:22">const</specifier></type> <name pos:start="27:24" pos:end="27:31">new_data</name> <init pos:start="27:33" pos:end="27:60">= <expr pos:start="27:35" pos:end="27:60"><call pos:start="27:35" pos:end="27:60"><name pos:start="27:35" pos:end="27:44">av_realloc</name><argument_list pos:start="27:45" pos:end="27:60">(<argument pos:start="27:46" pos:end="27:49"><expr pos:start="27:46" pos:end="27:49"><name pos:start="27:46" pos:end="27:49">data</name></expr></argument>, <argument pos:start="27:52" pos:end="27:59"><expr pos:start="27:52" pos:end="27:59"><name pos:start="27:52" pos:end="27:59">new_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="31:9" pos:end="33:22"><if pos:start="31:9" pos:end="33:22">if <condition pos:start="31:12" pos:end="31:22">(<expr pos:start="31:13" pos:end="31:21"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:21">new_data</name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:22"><block_content pos:start="33:13" pos:end="33:22">

            <goto pos:start="33:13" pos:end="33:22">goto <name pos:start="33:18" pos:end="33:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:24"><expr pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:12">data</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <name pos:start="35:16" pos:end="35:23">new_data</name></expr>;</expr_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:14">memcpy</name><argument_list pos:start="39:15" pos:end="39:48">(<argument pos:start="39:16" pos:end="39:27"><expr pos:start="39:16" pos:end="39:27"><name pos:start="39:16" pos:end="39:19">data</name> <operator pos:start="39:21" pos:end="39:21">+</operator> <operator pos:start="39:23" pos:end="39:23">*</operator><name pos:start="39:24" pos:end="39:27">size</name></expr></argument>, <argument pos:start="39:30" pos:end="39:35"><expr pos:start="39:30" pos:end="39:35"><name pos:start="39:30" pos:end="39:35"><name pos:start="39:30" pos:end="39:30">t</name><operator pos:start="39:31" pos:end="39:32">-&gt;</operator><name pos:start="39:33" pos:end="39:35">key</name></name></expr></argument>, <argument pos:start="39:38" pos:end="39:47"><expr pos:start="39:38" pos:end="39:47"><name pos:start="39:38" pos:end="39:43">keylen</name> <operator pos:start="39:45" pos:end="39:45">+</operator> <literal type="number" pos:start="39:47" pos:end="39:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:66"><expr pos:start="41:9" pos:end="41:65"><call pos:start="41:9" pos:end="41:65"><name pos:start="41:9" pos:end="41:14">memcpy</name><argument_list pos:start="41:15" pos:end="41:65">(<argument pos:start="41:16" pos:end="41:40"><expr pos:start="41:16" pos:end="41:40"><name pos:start="41:16" pos:end="41:19">data</name> <operator pos:start="41:21" pos:end="41:21">+</operator> <operator pos:start="41:23" pos:end="41:23">*</operator><name pos:start="41:24" pos:end="41:27">size</name> <operator pos:start="41:29" pos:end="41:29">+</operator> <name pos:start="41:31" pos:end="41:36">keylen</name> <operator pos:start="41:38" pos:end="41:38">+</operator> <literal type="number" pos:start="41:40" pos:end="41:40">1</literal></expr></argument>, <argument pos:start="41:43" pos:end="41:50"><expr pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:50"><name pos:start="41:43" pos:end="41:43">t</name><operator pos:start="41:44" pos:end="41:45">-&gt;</operator><name pos:start="41:46" pos:end="41:50">value</name></name></expr></argument>, <argument pos:start="41:53" pos:end="41:64"><expr pos:start="41:53" pos:end="41:64"><name pos:start="41:53" pos:end="41:60">valuelen</name> <operator pos:start="41:62" pos:end="41:62">+</operator> <literal type="number" pos:start="41:64" pos:end="41:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><operator pos:start="45:9" pos:end="45:9">*</operator><name pos:start="45:10" pos:end="45:13">size</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <name pos:start="45:17" pos:end="45:24">new_size</name></expr>;</expr_stmt>

    </block_content>}</block></while>



    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">data</name></expr>;</return>



<label pos:start="55:1" pos:end="55:5"><name pos:start="55:1" pos:end="55:4">fail</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:20"><expr pos:start="57:5" pos:end="57:19"><call pos:start="57:5" pos:end="57:19"><name pos:start="57:5" pos:end="57:12">av_freep</name><argument_list pos:start="57:13" pos:end="57:19">(<argument pos:start="57:14" pos:end="57:18"><expr pos:start="57:14" pos:end="57:18"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:18">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:14"><expr pos:start="59:5" pos:end="59:13"><operator pos:start="59:5" pos:end="59:5">*</operator><name pos:start="59:6" pos:end="59:9">size</name> <operator pos:start="59:11" pos:end="59:11">=</operator> <literal type="number" pos:start="59:13" pos:end="59:13">0</literal></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:16">return <expr pos:start="61:12" pos:end="61:15"><name pos:start="61:12" pos:end="61:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
