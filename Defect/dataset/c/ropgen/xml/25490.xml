<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25490.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">migration_bitmap_extend</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:39">ram_addr_t</name></type> <name pos:start="1:41" pos:end="1:43">old</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:59"><decl pos:start="1:46" pos:end="1:59"><type pos:start="1:46" pos:end="1:59"><name pos:start="1:46" pos:end="1:55">ram_addr_t</name></type> <name pos:start="1:57" pos:end="1:59">new</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="45:5">

    <comment type="block" pos:start="5:5" pos:end="9:7">/* called in qemu main thread, so there is

     * no writing race against this migration_bitmap

     */</comment>

    <if_stmt pos:start="11:5" pos:end="45:5"><if pos:start="11:5" pos:end="45:5">if <condition pos:start="11:8" pos:end="11:25">(<expr pos:start="11:9" pos:end="11:24"><name pos:start="11:9" pos:end="11:24">migration_bitmap</name></expr>)</condition> <block pos:start="11:27" pos:end="45:5">{<block_content pos:start="13:9" pos:end="43:27">

        <decl_stmt pos:start="13:9" pos:end="13:62"><decl pos:start="13:9" pos:end="13:52"><type pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:16">unsigned</name> <name pos:start="13:18" pos:end="13:21">long</name> <modifier pos:start="13:23" pos:end="13:23">*</modifier></type><name pos:start="13:24" pos:end="13:33">old_bitmap</name> <init pos:start="13:35" pos:end="13:52">= <expr pos:start="13:37" pos:end="13:52"><name pos:start="13:37" pos:end="13:52">migration_bitmap</name></expr></init></decl>, <decl pos:start="13:55" pos:end="13:61"><type ref="prev" pos:start="13:9" pos:end="13:23"><modifier pos:start="13:55" pos:end="13:55">*</modifier></type><name pos:start="13:56" pos:end="13:61">bitmap</name></decl>;</decl_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:14">bitmap</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:32"><name pos:start="15:18" pos:end="15:27">bitmap_new</name><argument_list pos:start="15:28" pos:end="15:32">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">new</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="19:9" pos:end="27:11">/* prevent migration_bitmap content from being set bit

         * by migration_bitmap_sync_range() at the same time.

         * it is safe to migration if migration_bitmap is cleared bit

         * at the same time.

         */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:49"><expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:23">qemu_mutex_lock</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:47"><expr pos:start="29:25" pos:end="29:47"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:47">migration_bitmap_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:45"><expr pos:start="31:9" pos:end="31:44"><call pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:19">bitmap_copy</name><argument_list pos:start="31:20" pos:end="31:44">(<argument pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">bitmap</name></expr></argument>, <argument pos:start="31:29" pos:end="31:38"><expr pos:start="31:29" pos:end="31:38"><name pos:start="31:29" pos:end="31:38">old_bitmap</name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><call pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:18">bitmap_set</name><argument_list pos:start="33:19" pos:end="33:42">(<argument pos:start="33:20" pos:end="33:25"><expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:25">bitmap</name></expr></argument>, <argument pos:start="33:28" pos:end="33:30"><expr pos:start="33:28" pos:end="33:30"><name pos:start="33:28" pos:end="33:30">old</name></expr></argument>, <argument pos:start="33:33" pos:end="33:41"><expr pos:start="33:33" pos:end="33:41"><name pos:start="33:33" pos:end="33:35">new</name> <operator pos:start="33:37" pos:end="33:37">-</operator> <name pos:start="33:39" pos:end="33:41">old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:50"><expr pos:start="35:9" pos:end="35:49"><call pos:start="35:9" pos:end="35:49"><name pos:start="35:9" pos:end="35:22">atomic_rcu_set</name><argument_list pos:start="35:23" pos:end="35:49">(<argument pos:start="35:24" pos:end="35:40"><expr pos:start="35:24" pos:end="35:40"><operator pos:start="35:24" pos:end="35:24">&amp;</operator><name pos:start="35:25" pos:end="35:40">migration_bitmap</name></expr></argument>, <argument pos:start="35:43" pos:end="35:48"><expr pos:start="35:43" pos:end="35:48"><name pos:start="35:43" pos:end="35:48">bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:51"><expr pos:start="37:9" pos:end="37:50"><call pos:start="37:9" pos:end="37:50"><name pos:start="37:9" pos:end="37:25">qemu_mutex_unlock</name><argument_list pos:start="37:26" pos:end="37:50">(<argument pos:start="37:27" pos:end="37:49"><expr pos:start="37:27" pos:end="37:49"><operator pos:start="37:27" pos:end="37:27">&amp;</operator><name pos:start="37:28" pos:end="37:49">migration_bitmap_mutex</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:43"><expr pos:start="39:9" pos:end="39:42"><name pos:start="39:9" pos:end="39:29">migration_dirty_pages</name> <operator pos:start="39:31" pos:end="39:32">+=</operator> <name pos:start="39:34" pos:end="39:36">new</name> <operator pos:start="39:38" pos:end="39:38">-</operator> <name pos:start="39:40" pos:end="39:42">old</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><call pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:23">synchronize_rcu</name><argument_list pos:start="41:24" pos:end="41:25">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:27"><expr pos:start="43:9" pos:end="43:26"><call pos:start="43:9" pos:end="43:26"><name pos:start="43:9" pos:end="43:14">g_free</name><argument_list pos:start="43:15" pos:end="43:26">(<argument pos:start="43:16" pos:end="43:25"><expr pos:start="43:16" pos:end="43:25"><name pos:start="43:16" pos:end="43:25">old_bitmap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
