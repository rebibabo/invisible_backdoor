<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17178.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:41">replay_account_executed_instructions</name><parameter_list pos:start="1:42" pos:end="1:47">(<parameter pos:start="1:43" pos:end="1:46"><decl pos:start="1:43" pos:end="1:46"><type pos:start="1:43" pos:end="1:46"><name pos:start="1:43" pos:end="1:46">void</name></type></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="21:1">{<block_content pos:start="3:5" pos:end="20:5">
    <if_stmt pos:start="3:5" pos:end="20:5"><if pos:start="3:5" pos:end="20:5">if <condition pos:start="3:8" pos:end="3:40">(<expr pos:start="3:9" pos:end="3:39"><name pos:start="3:9" pos:end="3:19">replay_mode</name> <operator pos:start="3:21" pos:end="3:22">==</operator> <name pos:start="3:24" pos:end="3:39">REPLAY_MODE_PLAY</name></expr>)</condition> <block pos:start="3:42" pos:end="20:5">{<block_content pos:start="4:9" pos:end="19:30">
        <expr_stmt pos:start="4:9" pos:end="4:28"><expr pos:start="4:9" pos:end="4:27"><call pos:start="4:9" pos:end="4:27"><name pos:start="4:9" pos:end="4:25">replay_mutex_lock</name><argument_list pos:start="4:26" pos:end="4:27">()</argument_list></call></expr>;</expr_stmt>
        <if_stmt pos:start="5:9" pos:end="18:9"><if pos:start="5:9" pos:end="18:9">if <condition pos:start="5:12" pos:end="5:48">(<expr pos:start="5:13" pos:end="5:47"><name pos:start="5:13" pos:end="5:43"><name pos:start="5:13" pos:end="5:24">replay_state</name><operator pos:start="5:25" pos:end="5:25">.</operator><name pos:start="5:26" pos:end="5:43">instructions_count</name></name> <operator pos:start="5:45" pos:end="5:45">&gt;</operator> <literal type="number" pos:start="5:47" pos:end="5:47">0</literal></expr>)</condition> <block pos:start="5:50" pos:end="18:9">{<block_content pos:start="6:13" pos:end="17:13">
            <decl_stmt pos:start="6:13" pos:end="7:59"><decl pos:start="6:13" pos:end="7:58"><type pos:start="6:13" pos:end="6:15"><name pos:start="6:13" pos:end="6:15">int</name></type> <name pos:start="6:17" pos:end="6:21">count</name> <init pos:start="6:23" pos:end="7:58">= <expr pos:start="6:25" pos:end="7:58"><operator pos:start="6:25" pos:end="6:25">(</operator><name pos:start="6:26" pos:end="6:28">int</name><operator pos:start="6:29" pos:end="6:29">)</operator><operator pos:start="6:30" pos:end="6:30">(</operator><call pos:start="6:31" pos:end="6:55"><name pos:start="6:31" pos:end="6:53">replay_get_current_step</name><argument_list pos:start="6:54" pos:end="6:55">()</argument_list></call>
                              <operator pos:start="7:31" pos:end="7:31">-</operator> <name pos:start="7:33" pos:end="7:57"><name pos:start="7:33" pos:end="7:44">replay_state</name><operator pos:start="7:45" pos:end="7:45">.</operator><name pos:start="7:46" pos:end="7:57">current_step</name></name><operator pos:start="7:58" pos:end="7:58">)</operator></expr></init></decl>;</decl_stmt>
            <expr_stmt pos:start="8:13" pos:end="8:53"><expr pos:start="8:13" pos:end="8:52"><name pos:start="8:13" pos:end="8:43"><name pos:start="8:13" pos:end="8:24">replay_state</name><operator pos:start="8:25" pos:end="8:25">.</operator><name pos:start="8:26" pos:end="8:43">instructions_count</name></name> <operator pos:start="8:45" pos:end="8:46">-=</operator> <name pos:start="8:48" pos:end="8:52">count</name></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:47"><expr pos:start="9:13" pos:end="9:46"><name pos:start="9:13" pos:end="9:37"><name pos:start="9:13" pos:end="9:24">replay_state</name><operator pos:start="9:25" pos:end="9:25">.</operator><name pos:start="9:26" pos:end="9:37">current_step</name></name> <operator pos:start="9:39" pos:end="9:40">+=</operator> <name pos:start="9:42" pos:end="9:46">count</name></expr>;</expr_stmt>
            <if_stmt pos:start="10:13" pos:end="17:13"><if pos:start="10:13" pos:end="17:13">if <condition pos:start="10:16" pos:end="10:53">(<expr pos:start="10:17" pos:end="10:52"><name pos:start="10:17" pos:end="10:47"><name pos:start="10:17" pos:end="10:28">replay_state</name><operator pos:start="10:29" pos:end="10:29">.</operator><name pos:start="10:30" pos:end="10:47">instructions_count</name></name> <operator pos:start="10:49" pos:end="10:50">==</operator> <literal type="number" pos:start="10:52" pos:end="10:52">0</literal></expr>)</condition> <block pos:start="10:55" pos:end="17:13">{<block_content pos:start="11:17" pos:end="16:36">
                <expr_stmt pos:start="11:17" pos:end="11:68"><expr pos:start="11:17" pos:end="11:67"><call pos:start="11:17" pos:end="11:67"><name pos:start="11:17" pos:end="11:22">assert</name><argument_list pos:start="11:23" pos:end="11:67">(<argument pos:start="11:24" pos:end="11:66"><expr pos:start="11:24" pos:end="11:66"><name pos:start="11:24" pos:end="11:45"><name pos:start="11:24" pos:end="11:35">replay_state</name><operator pos:start="11:36" pos:end="11:36">.</operator><name pos:start="11:37" pos:end="11:45">data_kind</name></name> <operator pos:start="11:47" pos:end="11:48">==</operator> <name pos:start="11:50" pos:end="11:66">EVENT_INSTRUCTION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
                <expr_stmt pos:start="12:17" pos:end="12:38"><expr pos:start="12:17" pos:end="12:37"><call pos:start="12:17" pos:end="12:37"><name pos:start="12:17" pos:end="12:35">replay_finish_event</name><argument_list pos:start="12:36" pos:end="12:37">()</argument_list></call></expr>;</expr_stmt>
                <comment type="block" pos:start="13:17" pos:end="15:48">/* Wake up iothread. This is required because
                   timers will not expire until clock counters
                   will be read from the log. */</comment>
                <expr_stmt pos:start="16:17" pos:end="16:36"><expr pos:start="16:17" pos:end="16:35"><call pos:start="16:17" pos:end="16:35"><name pos:start="16:17" pos:end="16:33">qemu_notify_event</name><argument_list pos:start="16:34" pos:end="16:35">()</argument_list></call></expr>;</expr_stmt>
            </block_content>}</block></if></if_stmt>
        </block_content>}</block></if></if_stmt>
        <expr_stmt pos:start="19:9" pos:end="19:30"><expr pos:start="19:9" pos:end="19:29"><call pos:start="19:9" pos:end="19:29"><name pos:start="19:9" pos:end="19:27">replay_mutex_unlock</name><argument_list pos:start="19:28" pos:end="19:29">()</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function></unit>
