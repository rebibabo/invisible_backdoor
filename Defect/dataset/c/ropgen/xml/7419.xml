<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7419.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:23">mvc_asc</name><parameter_list pos:start="1:24" pos:end="3:68">(<parameter pos:start="1:25" pos:end="1:42"><decl pos:start="1:25" pos:end="1:42"><type pos:start="1:25" pos:end="1:42"><name pos:start="1:25" pos:end="1:37">CPUS390XState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:53"><decl pos:start="1:45" pos:end="1:53"><type pos:start="1:45" pos:end="1:53"><name pos:start="1:45" pos:end="1:51">int64_t</name></type> <name pos:start="1:53" pos:end="1:53">l</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:63">uint64_t</name></type> <name pos:start="1:65" pos:end="1:66">a1</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:38"><decl pos:start="3:25" pos:end="3:38"><type pos:start="3:25" pos:end="3:38"><name pos:start="3:25" pos:end="3:32">uint64_t</name></type> <name pos:start="3:34" pos:end="3:38">mode1</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:51"><decl pos:start="3:41" pos:end="3:51"><type pos:start="3:41" pos:end="3:51"><name pos:start="3:41" pos:end="3:48">uint64_t</name></type> <name pos:start="3:50" pos:end="3:51">a2</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:67"><decl pos:start="3:54" pos:end="3:67"><type pos:start="3:54" pos:end="3:67"><name pos:start="3:54" pos:end="3:61">uint64_t</name></type> <name pos:start="3:63" pos:end="3:67">mode2</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:14">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:45">= <expr pos:start="7:20" pos:end="7:45"><call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:45">(<argument pos:start="7:24" pos:end="7:44"><expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">s390_env_get_cpu</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:16">target_ulong</name></type> <name pos:start="9:18" pos:end="9:20">src</name></decl>, <decl pos:start="9:23" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:16"/><name pos:start="9:23" pos:end="9:26">dest</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">flags</name></decl>, <decl pos:start="11:16" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:16" pos:end="11:17">cc</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>, <decl pos:start="11:24" pos:end="11:24"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:24">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="27:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:11">(<expr pos:start="15:9" pos:end="15:10"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:10">l</name></expr>)</condition> <block pos:start="15:13" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="19:7" pos:end="27:5">else if <condition pos:start="19:15" pos:end="19:23">(<expr pos:start="19:16" pos:end="19:22"><name pos:start="19:16" pos:end="19:16">l</name> <operator pos:start="19:18" pos:end="19:18">&gt;</operator> <literal type="number" pos:start="19:20" pos:end="19:22">256</literal></expr>)</condition> <block pos:start="19:25" pos:end="27:5">{<block_content pos:start="23:9" pos:end="25:15">

        <comment type="block" pos:start="21:9" pos:end="21:21">/* max 256 */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:16"><expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:9">l</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <literal type="number" pos:start="23:13" pos:end="23:15">256</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:15"><expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:10">cc</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:62">(<expr pos:start="31:9" pos:end="31:61"><call pos:start="31:9" pos:end="31:61"><name pos:start="31:9" pos:end="31:21">mmu_translate</name><argument_list pos:start="31:22" pos:end="31:61">(<argument pos:start="31:23" pos:end="31:25"><expr pos:start="31:23" pos:end="31:25"><name pos:start="31:23" pos:end="31:25">env</name></expr></argument>, <argument pos:start="31:28" pos:end="31:29"><expr pos:start="31:28" pos:end="31:29"><name pos:start="31:28" pos:end="31:29">a1</name></expr></argument>, <argument pos:start="31:32" pos:end="31:32"><expr pos:start="31:32" pos:end="31:32"><literal type="number" pos:start="31:32" pos:end="31:32">1</literal></expr></argument>, <argument pos:start="31:35" pos:end="31:39"><expr pos:start="31:35" pos:end="31:39"><name pos:start="31:35" pos:end="31:39">mode1</name></expr></argument>, <argument pos:start="31:42" pos:end="31:46"><expr pos:start="31:42" pos:end="31:46"><operator pos:start="31:42" pos:end="31:42">&amp;</operator><name pos:start="31:43" pos:end="31:46">dest</name></expr></argument>, <argument pos:start="31:49" pos:end="31:54"><expr pos:start="31:49" pos:end="31:54"><operator pos:start="31:49" pos:end="31:49">&amp;</operator><name pos:start="31:50" pos:end="31:54">flags</name></expr></argument>, <argument pos:start="31:57" pos:end="31:60"><expr pos:start="31:57" pos:end="31:60"><name pos:start="31:57" pos:end="31:60">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:64" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:50">

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><call pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:21">cpu_loop_exit</name><argument_list pos:start="33:22" pos:end="33:49">(<argument pos:start="33:23" pos:end="33:48"><expr pos:start="33:23" pos:end="33:48"><call pos:start="33:23" pos:end="33:48"><name pos:start="33:23" pos:end="33:25">CPU</name><argument_list pos:start="33:26" pos:end="33:48">(<argument pos:start="33:27" pos:end="33:47"><expr pos:start="33:27" pos:end="33:47"><call pos:start="33:27" pos:end="33:47"><name pos:start="33:27" pos:end="33:42">s390_env_get_cpu</name><argument_list pos:start="33:43" pos:end="33:47">(<argument pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><name pos:start="33:44" pos:end="33:46">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:8">dest</name> <operator pos:start="37:10" pos:end="37:11">|=</operator> <name pos:start="37:13" pos:end="37:14">a1</name> <operator pos:start="37:16" pos:end="37:16">&amp;</operator> <operator pos:start="37:18" pos:end="37:18">~</operator><name pos:start="37:19" pos:end="37:34">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="45:5"><if pos:start="41:5" pos:end="45:5">if <condition pos:start="41:8" pos:end="41:61">(<expr pos:start="41:9" pos:end="41:60"><call pos:start="41:9" pos:end="41:60"><name pos:start="41:9" pos:end="41:21">mmu_translate</name><argument_list pos:start="41:22" pos:end="41:60">(<argument pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:25">env</name></expr></argument>, <argument pos:start="41:28" pos:end="41:29"><expr pos:start="41:28" pos:end="41:29"><name pos:start="41:28" pos:end="41:29">a2</name></expr></argument>, <argument pos:start="41:32" pos:end="41:32"><expr pos:start="41:32" pos:end="41:32"><literal type="number" pos:start="41:32" pos:end="41:32">0</literal></expr></argument>, <argument pos:start="41:35" pos:end="41:39"><expr pos:start="41:35" pos:end="41:39"><name pos:start="41:35" pos:end="41:39">mode2</name></expr></argument>, <argument pos:start="41:42" pos:end="41:45"><expr pos:start="41:42" pos:end="41:45"><operator pos:start="41:42" pos:end="41:42">&amp;</operator><name pos:start="41:43" pos:end="41:45">src</name></expr></argument>, <argument pos:start="41:48" pos:end="41:53"><expr pos:start="41:48" pos:end="41:53"><operator pos:start="41:48" pos:end="41:48">&amp;</operator><name pos:start="41:49" pos:end="41:53">flags</name></expr></argument>, <argument pos:start="41:56" pos:end="41:59"><expr pos:start="41:56" pos:end="41:59"><name pos:start="41:56" pos:end="41:59">true</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:63" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:50">

        <expr_stmt pos:start="43:9" pos:end="43:50"><expr pos:start="43:9" pos:end="43:49"><call pos:start="43:9" pos:end="43:49"><name pos:start="43:9" pos:end="43:21">cpu_loop_exit</name><argument_list pos:start="43:22" pos:end="43:49">(<argument pos:start="43:23" pos:end="43:48"><expr pos:start="43:23" pos:end="43:48"><call pos:start="43:23" pos:end="43:48"><name pos:start="43:23" pos:end="43:25">CPU</name><argument_list pos:start="43:26" pos:end="43:48">(<argument pos:start="43:27" pos:end="43:47"><expr pos:start="43:27" pos:end="43:47"><call pos:start="43:27" pos:end="43:47"><name pos:start="43:27" pos:end="43:42">s390_env_get_cpu</name><argument_list pos:start="43:43" pos:end="43:47">(<argument pos:start="43:44" pos:end="43:46"><expr pos:start="43:44" pos:end="43:46"><name pos:start="43:44" pos:end="43:46">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:7">src</name> <operator pos:start="47:9" pos:end="47:10">|=</operator> <name pos:start="47:12" pos:end="47:13">a2</name> <operator pos:start="47:15" pos:end="47:15">&amp;</operator> <operator pos:start="47:17" pos:end="47:17">~</operator><name pos:start="47:18" pos:end="47:33">TARGET_PAGE_MASK</name></expr>;</expr_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:31">/* XXX replace w/ memcpy */</comment>

    <for pos:start="53:5" pos:end="69:5">for <control pos:start="53:9" pos:end="53:27">(<init pos:start="53:10" pos:end="53:15"><expr pos:start="53:10" pos:end="53:14"><name pos:start="53:10" pos:end="53:10">i</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <literal type="number" pos:start="53:14" pos:end="53:14">0</literal></expr>;</init> <condition pos:start="53:17" pos:end="53:22"><expr pos:start="53:17" pos:end="53:21"><name pos:start="53:17" pos:end="53:17">i</name> <operator pos:start="53:19" pos:end="53:19">&lt;</operator> <name pos:start="53:21" pos:end="53:21">l</name></expr>;</condition> <incr pos:start="53:24" pos:end="53:26"><expr pos:start="53:24" pos:end="53:26"><name pos:start="53:24" pos:end="53:24">i</name><operator pos:start="53:25" pos:end="53:26">++</operator></expr></incr>)</control> <block pos:start="53:29" pos:end="69:5">{<block_content pos:start="57:9" pos:end="67:63">

        <comment type="block" pos:start="55:9" pos:end="55:32">/* XXX be more clever */</comment>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="65:9">if <condition pos:start="57:12" pos:end="59:73">(<expr pos:start="57:13" pos:end="59:72"><operator pos:start="57:13" pos:end="57:13">(</operator><operator pos:start="57:14" pos:end="57:14">(</operator><operator pos:start="57:15" pos:end="57:15">(</operator><name pos:start="57:16" pos:end="57:19">dest</name> <operator pos:start="57:21" pos:end="57:21">+</operator> <name pos:start="57:23" pos:end="57:23">i</name><operator pos:start="57:24" pos:end="57:24">)</operator> <operator pos:start="57:26" pos:end="57:26">&amp;</operator> <name pos:start="57:28" pos:end="57:43">TARGET_PAGE_MASK</name><operator pos:start="57:44" pos:end="57:44">)</operator> <operator pos:start="57:46" pos:end="57:47">!=</operator> <operator pos:start="57:49" pos:end="57:49">(</operator><name pos:start="57:50" pos:end="57:53">dest</name> <operator pos:start="57:55" pos:end="57:55">&amp;</operator> <name pos:start="57:57" pos:end="57:72">TARGET_PAGE_MASK</name><operator pos:start="57:73" pos:end="57:73">)</operator><operator pos:start="57:74" pos:end="57:74">)</operator> <operator pos:start="57:76" pos:end="57:77">||</operator>

            <operator pos:start="59:13" pos:end="59:13">(</operator><operator pos:start="59:14" pos:end="59:14">(</operator><operator pos:start="59:15" pos:end="59:15">(</operator><name pos:start="59:16" pos:end="59:18">src</name> <operator pos:start="59:20" pos:end="59:20">+</operator> <name pos:start="59:22" pos:end="59:22">i</name><operator pos:start="59:23" pos:end="59:23">)</operator> <operator pos:start="59:25" pos:end="59:25">&amp;</operator> <name pos:start="59:27" pos:end="59:42">TARGET_PAGE_MASK</name><operator pos:start="59:43" pos:end="59:43">)</operator> <operator pos:start="59:45" pos:end="59:46">!=</operator> <operator pos:start="59:48" pos:end="59:48">(</operator><name pos:start="59:49" pos:end="59:51">src</name> <operator pos:start="59:53" pos:end="59:53">&amp;</operator> <name pos:start="59:55" pos:end="59:70">TARGET_PAGE_MASK</name><operator pos:start="59:71" pos:end="59:71">)</operator><operator pos:start="59:72" pos:end="59:72">)</operator></expr>)</condition> <block pos:start="59:75" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:18">

            <expr_stmt pos:start="61:13" pos:end="61:62"><expr pos:start="61:13" pos:end="61:61"><call pos:start="61:13" pos:end="61:61"><name pos:start="61:13" pos:end="61:19">mvc_asc</name><argument_list pos:start="61:20" pos:end="61:61">(<argument pos:start="61:21" pos:end="61:23"><expr pos:start="61:21" pos:end="61:23"><name pos:start="61:21" pos:end="61:23">env</name></expr></argument>, <argument pos:start="61:26" pos:end="61:30"><expr pos:start="61:26" pos:end="61:30"><name pos:start="61:26" pos:end="61:26">l</name> <operator pos:start="61:28" pos:end="61:28">-</operator> <name pos:start="61:30" pos:end="61:30">i</name></expr></argument>, <argument pos:start="61:33" pos:end="61:38"><expr pos:start="61:33" pos:end="61:38"><name pos:start="61:33" pos:end="61:34">a1</name> <operator pos:start="61:36" pos:end="61:36">+</operator> <name pos:start="61:38" pos:end="61:38">i</name></expr></argument>, <argument pos:start="61:41" pos:end="61:45"><expr pos:start="61:41" pos:end="61:45"><name pos:start="61:41" pos:end="61:45">mode1</name></expr></argument>, <argument pos:start="61:48" pos:end="61:53"><expr pos:start="61:48" pos:end="61:53"><name pos:start="61:48" pos:end="61:49">a2</name> <operator pos:start="61:51" pos:end="61:51">+</operator> <name pos:start="61:53" pos:end="61:53">i</name></expr></argument>, <argument pos:start="61:56" pos:end="61:60"><expr pos:start="61:56" pos:end="61:60"><name pos:start="61:56" pos:end="61:60">mode2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:63"><expr pos:start="67:9" pos:end="67:62"><call pos:start="67:9" pos:end="67:62"><name pos:start="67:9" pos:end="67:16">stb_phys</name><argument_list pos:start="67:17" pos:end="67:62">(<argument pos:start="67:18" pos:end="67:23"><expr pos:start="67:18" pos:end="67:23"><name pos:start="67:18" pos:end="67:23"><name pos:start="67:18" pos:end="67:19">cs</name><operator pos:start="67:20" pos:end="67:21">-&gt;</operator><name pos:start="67:22" pos:end="67:23">as</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:33"><expr pos:start="67:26" pos:end="67:33"><name pos:start="67:26" pos:end="67:29">dest</name> <operator pos:start="67:31" pos:end="67:31">+</operator> <name pos:start="67:33" pos:end="67:33">i</name></expr></argument>, <argument pos:start="67:36" pos:end="67:61"><expr pos:start="67:36" pos:end="67:61"><call pos:start="67:36" pos:end="67:61"><name pos:start="67:36" pos:end="67:44">ldub_phys</name><argument_list pos:start="67:45" pos:end="67:61">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:47">cs</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:51">as</name></name></expr></argument>, <argument pos:start="67:54" pos:end="67:60"><expr pos:start="67:54" pos:end="67:60"><name pos:start="67:54" pos:end="67:56">src</name> <operator pos:start="67:58" pos:end="67:58">+</operator> <name pos:start="67:60" pos:end="67:60">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="73:5" pos:end="73:14">return <expr pos:start="73:12" pos:end="73:13"><name pos:start="73:12" pos:end="73:13">cc</name></expr>;</return>

</block_content>}</block></function>
</unit>
