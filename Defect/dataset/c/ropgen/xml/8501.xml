<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/8501.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">parallels_open</name><parameter_list pos:start="1:26" pos:end="1:58">(<parameter pos:start="1:27" pos:end="1:46"><decl pos:start="1:27" pos:end="1:46"><type pos:start="1:27" pos:end="1:46"><name pos:start="1:27" pos:end="1:42">BlockDriverState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:46">bs</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:57"><decl pos:start="1:49" pos:end="1:57"><type pos:start="1:49" pos:end="1:57"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:57">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:14">

    <decl_stmt pos:start="5:5" pos:end="5:39"><decl pos:start="5:5" pos:end="5:38"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">BDRVParallelsState</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:25">s</name> <init pos:start="5:27" pos:end="5:38">= <expr pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:38"><name pos:start="5:29" pos:end="5:30">bs</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:38">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:27">parallels_header</name></name></type> <name pos:start="9:29" pos:end="9:30">ph</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:6">bs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:17">read_only</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="13:24" pos:end="13:46">// no write support yet</comment>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:63">(<expr pos:start="17:9" pos:end="17:62"><call pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:18">bdrv_pread</name><argument_list pos:start="17:19" pos:end="17:48">(<argument pos:start="17:20" pos:end="17:27"><expr pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:27"><name pos:start="17:20" pos:end="17:21">bs</name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:27">file</name></name></expr></argument>, <argument pos:start="17:30" pos:end="17:30"><expr pos:start="17:30" pos:end="17:30"><literal type="number" pos:start="17:30" pos:end="17:30">0</literal></expr></argument>, <argument pos:start="17:33" pos:end="17:35"><expr pos:start="17:33" pos:end="17:35"><operator pos:start="17:33" pos:end="17:33">&amp;</operator><name pos:start="17:34" pos:end="17:35">ph</name></expr></argument>, <argument pos:start="17:38" pos:end="17:47"><expr pos:start="17:38" pos:end="17:47"><sizeof pos:start="17:38" pos:end="17:47">sizeof<argument_list pos:start="17:44" pos:end="17:47">(<argument pos:start="17:45" pos:end="17:46"><expr pos:start="17:45" pos:end="17:46"><name pos:start="17:45" pos:end="17:46">ph</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="17:50" pos:end="17:51">!=</operator> <sizeof pos:start="17:53" pos:end="17:62">sizeof<argument_list pos:start="17:59" pos:end="17:62">(<argument pos:start="17:60" pos:end="17:61"><expr pos:start="17:60" pos:end="17:61"><name pos:start="17:60" pos:end="17:61">ph</name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <goto pos:start="19:9" pos:end="19:18">goto <name pos:start="19:14" pos:end="19:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="25:52">(<expr pos:start="23:9" pos:end="25:51"><call pos:start="23:9" pos:end="23:42"><name pos:start="23:9" pos:end="23:14">memcmp</name><argument_list pos:start="23:15" pos:end="23:42">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:17">ph</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:23">magic</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:37"><expr pos:start="23:26" pos:end="23:37"><name pos:start="23:26" pos:end="23:37">HEADER_MAGIC</name></expr></argument>, <argument pos:start="23:40" pos:end="23:41"><expr pos:start="23:40" pos:end="23:41"><literal type="number" pos:start="23:40" pos:end="23:41">16</literal></expr></argument>)</argument_list></call> <operator pos:start="23:44" pos:end="23:45">||</operator>

	<operator pos:start="25:9" pos:end="25:9">(</operator><call pos:start="25:10" pos:end="25:32"><name pos:start="25:10" pos:end="25:20">le32_to_cpu</name><argument_list pos:start="25:21" pos:end="25:32">(<argument pos:start="25:22" pos:end="25:31"><expr pos:start="25:22" pos:end="25:31"><name pos:start="25:22" pos:end="25:31"><name pos:start="25:22" pos:end="25:23">ph</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:31">version</name></name></expr></argument>)</argument_list></call> <operator pos:start="25:34" pos:end="25:35">!=</operator> <name pos:start="25:37" pos:end="25:50">HEADER_VERSION</name><operator pos:start="25:51" pos:end="25:51">)</operator></expr>)</condition> <block pos:start="25:54" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:18">

        <goto pos:start="27:9" pos:end="27:18">goto <name pos:start="27:14" pos:end="27:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:51"><expr pos:start="33:5" pos:end="33:50"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:6">bs</name><operator pos:start="33:7" pos:end="33:8">-&gt;</operator><name pos:start="33:9" pos:end="33:21">total_sectors</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <call pos:start="33:25" pos:end="33:50"><name pos:start="33:25" pos:end="33:35">le32_to_cpu</name><argument_list pos:start="33:36" pos:end="33:50">(<argument pos:start="33:37" pos:end="33:49"><expr pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:49"><name pos:start="33:37" pos:end="33:38">ph</name><operator pos:start="33:39" pos:end="33:39">.</operator><name pos:start="33:40" pos:end="33:49">nb_sectors</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:39"><expr pos:start="37:5" pos:end="37:38"><name pos:start="37:5" pos:end="37:13"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:13">tracks</name></name> <operator pos:start="37:15" pos:end="37:15">=</operator> <call pos:start="37:17" pos:end="37:38"><name pos:start="37:17" pos:end="37:27">le32_to_cpu</name><argument_list pos:start="37:28" pos:end="37:38">(<argument pos:start="37:29" pos:end="37:37"><expr pos:start="37:29" pos:end="37:37"><name pos:start="37:29" pos:end="37:37"><name pos:start="37:29" pos:end="37:30">ph</name><operator pos:start="37:31" pos:end="37:31">.</operator><name pos:start="37:32" pos:end="37:37">tracks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:54"><expr pos:start="41:5" pos:end="41:53"><name pos:start="41:5" pos:end="41:19"><name pos:start="41:5" pos:end="41:5">s</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:19">catalog_size</name></name> <operator pos:start="41:21" pos:end="41:21">=</operator> <call pos:start="41:23" pos:end="41:53"><name pos:start="41:23" pos:end="41:33">le32_to_cpu</name><argument_list pos:start="41:34" pos:end="41:53">(<argument pos:start="41:35" pos:end="41:52"><expr pos:start="41:35" pos:end="41:52"><name pos:start="41:35" pos:end="41:52"><name pos:start="41:35" pos:end="41:36">ph</name><operator pos:start="41:37" pos:end="41:37">.</operator><name pos:start="41:38" pos:end="41:52">catalog_entries</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:54"><expr pos:start="43:5" pos:end="43:53"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:21">catalog_bitmap</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <call pos:start="43:25" pos:end="43:53"><name pos:start="43:25" pos:end="43:32">g_malloc</name><argument_list pos:start="43:33" pos:end="43:53">(<argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><name pos:start="43:34" pos:end="43:48"><name pos:start="43:34" pos:end="43:34">s</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:48">catalog_size</name></name> <operator pos:start="43:50" pos:end="43:50">*</operator> <literal type="number" pos:start="43:52" pos:end="43:52">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:18"><if pos:start="45:5" pos:end="49:18">if <condition pos:start="45:8" pos:end="47:28">(<expr pos:start="45:9" pos:end="47:27"><call pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:18">bdrv_pread</name><argument_list pos:start="45:19" pos:end="45:72">(<argument pos:start="45:20" pos:end="45:27"><expr pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:27"><name pos:start="45:20" pos:end="45:21">bs</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:27">file</name></name></expr></argument>, <argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><literal type="number" pos:start="45:30" pos:end="45:31">64</literal></expr></argument>, <argument pos:start="45:34" pos:end="45:50"><expr pos:start="45:34" pos:end="45:50"><name pos:start="45:34" pos:end="45:50"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:50">catalog_bitmap</name></name></expr></argument>, <argument pos:start="45:53" pos:end="45:71"><expr pos:start="45:53" pos:end="45:71"><name pos:start="45:53" pos:end="45:67"><name pos:start="45:53" pos:end="45:53">s</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:67">catalog_size</name></name> <operator pos:start="45:69" pos:end="45:69">*</operator> <literal type="number" pos:start="45:71" pos:end="45:71">4</literal></expr></argument>)</argument_list></call> <operator pos:start="45:74" pos:end="45:75">!=</operator>

	<name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:23">catalog_size</name></name> <operator pos:start="47:25" pos:end="47:25">*</operator> <literal type="number" pos:start="47:27" pos:end="47:27">4</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

	<goto pos:start="49:9" pos:end="49:18">goto <name pos:start="49:14" pos:end="49:17">fail</name>;</goto></block_content></block></if></if_stmt>

    <for pos:start="51:5" pos:end="53:44">for <control pos:start="51:9" pos:end="51:41">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <name pos:start="51:21" pos:end="51:35"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:35">catalog_size</name></name></expr>;</condition> <incr pos:start="51:38" pos:end="51:40"><expr pos:start="51:38" pos:end="51:40"><name pos:start="51:38" pos:end="51:38">i</name><operator pos:start="51:39" pos:end="51:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:9" pos:end="53:44"><block_content pos:start="53:9" pos:end="53:44">

	<expr_stmt pos:start="53:9" pos:end="53:44"><expr pos:start="53:9" pos:end="53:43"><call pos:start="53:9" pos:end="53:43"><name pos:start="53:9" pos:end="53:20">le32_to_cpus</name><argument_list pos:start="53:21" pos:end="53:43">(<argument pos:start="53:22" pos:end="53:42"><expr pos:start="53:22" pos:end="53:42"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:42"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:39">catalog_bitmap</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><name pos:start="53:41" pos:end="53:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="57:5" pos:end="57:33"><expr pos:start="57:5" pos:end="57:32"><call pos:start="57:5" pos:end="57:32"><name pos:start="57:5" pos:end="57:22">qemu_co_mutex_init</name><argument_list pos:start="57:23" pos:end="57:32">(<argument pos:start="57:24" pos:end="57:31"><expr pos:start="57:24" pos:end="57:31"><operator pos:start="57:24" pos:end="57:24">&amp;</operator><name pos:start="57:25" pos:end="57:31"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:31">lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

<label pos:start="61:1" pos:end="61:5"><name pos:start="61:1" pos:end="61:4">fail</name>:</label>

    <if_stmt pos:start="63:5" pos:end="65:34"><if pos:start="63:5" pos:end="65:34">if <condition pos:start="63:8" pos:end="63:26">(<expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:9">s</name><operator pos:start="63:10" pos:end="63:11">-&gt;</operator><name pos:start="63:12" pos:end="63:25">catalog_bitmap</name></name></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:34"><block_content pos:start="65:9" pos:end="65:34">

	<expr_stmt pos:start="65:9" pos:end="65:34"><expr pos:start="65:9" pos:end="65:33"><call pos:start="65:9" pos:end="65:33"><name pos:start="65:9" pos:end="65:14">g_free</name><argument_list pos:start="65:15" pos:end="65:33">(<argument pos:start="65:16" pos:end="65:32"><expr pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:32"><name pos:start="65:16" pos:end="65:16">s</name><operator pos:start="65:17" pos:end="65:18">-&gt;</operator><name pos:start="65:19" pos:end="65:32">catalog_bitmap</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:14">return <expr pos:start="67:12" pos:end="67:13"><operator pos:start="67:12" pos:end="67:12">-</operator><literal type="number" pos:start="67:13" pos:end="67:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
