<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/19811.c" pos:tabs="8"><function pos:start="1:1" pos:end="829:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">SwsContext</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:26">sws_getContext</name><parameter_list pos:start="1:27" pos:end="5:91">(<parameter pos:start="1:28" pos:end="1:35"><decl pos:start="1:28" pos:end="1:35"><type pos:start="1:28" pos:end="1:35"><name pos:start="1:28" pos:end="1:30">int</name></type> <name pos:start="1:32" pos:end="1:35">srcW</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:45"><decl pos:start="1:38" pos:end="1:45"><type pos:start="1:38" pos:end="1:45"><name pos:start="1:38" pos:end="1:40">int</name></type> <name pos:start="1:42" pos:end="1:45">srcH</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:73"><decl pos:start="1:48" pos:end="1:73"><type pos:start="1:48" pos:end="1:73"><name pos:start="1:48" pos:end="1:63"><name pos:start="1:48" pos:end="1:51">enum</name> <name pos:start="1:53" pos:end="1:63">PixelFormat</name></name></type> <name pos:start="1:65" pos:end="1:73">srcFormat</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:35"><decl pos:start="3:28" pos:end="3:35"><type pos:start="3:28" pos:end="3:35"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:35">dstW</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:45"><decl pos:start="3:38" pos:end="3:45"><type pos:start="3:38" pos:end="3:45"><name pos:start="3:38" pos:end="3:40">int</name></type> <name pos:start="3:42" pos:end="3:45">dstH</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:73"><decl pos:start="3:48" pos:end="3:73"><type pos:start="3:48" pos:end="3:73"><name pos:start="3:48" pos:end="3:63"><name pos:start="3:48" pos:end="3:51">enum</name> <name pos:start="3:53" pos:end="3:63">PixelFormat</name></name></type> <name pos:start="3:65" pos:end="3:73">dstFormat</name></decl></parameter>, <parameter pos:start="3:76" pos:end="3:84"><decl pos:start="3:76" pos:end="3:84"><type pos:start="3:76" pos:end="3:84"><name pos:start="3:76" pos:end="3:78">int</name></type> <name pos:start="3:80" pos:end="3:84">flags</name></decl></parameter>,

                           <parameter pos:start="5:28" pos:end="5:47"><decl pos:start="5:28" pos:end="5:47"><type pos:start="5:28" pos:end="5:47"><name pos:start="5:28" pos:end="5:36">SwsFilter</name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:47">srcFilter</name></decl></parameter>, <parameter pos:start="5:50" pos:end="5:69"><decl pos:start="5:50" pos:end="5:69"><type pos:start="5:50" pos:end="5:69"><name pos:start="5:50" pos:end="5:58">SwsFilter</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:69">dstFilter</name></decl></parameter>, <parameter pos:start="5:72" pos:end="5:90"><decl pos:start="5:72" pos:end="5:90"><type pos:start="5:72" pos:end="5:90"><specifier pos:start="5:72" pos:end="5:76">const</specifier> <name pos:start="5:78" pos:end="5:83">double</name> <modifier pos:start="5:85" pos:end="5:85">*</modifier></type><name pos:start="5:86" pos:end="5:90">param</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="829:1">{<block_content pos:start="9:5" pos:end="827:16">

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:14">SwsContext</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">usesVFilter</name></decl>, <decl pos:start="13:22" pos:end="13:32"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:22" pos:end="13:32">usesHFilter</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">unscaled</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:27"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">srcRange</name></decl>, <decl pos:start="17:19" pos:end="17:26"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:19" pos:end="17:26">dstRange</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="22:0"><decl pos:start="19:5" pos:end="19:51"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:13">SwsFilter</name></type> <name pos:start="19:15" pos:end="19:25">dummyFilter</name><init pos:start="19:26" pos:end="19:51">= <expr pos:start="19:28" pos:end="19:51"><block pos:start="19:28" pos:end="19:51">{<expr pos:start="19:29" pos:end="19:32"><name pos:start="19:29" pos:end="19:32">NULL</name></expr>, <expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">NULL</name></expr>, <expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">NULL</name></expr>, <expr pos:start="19:47" pos:end="19:50"><name pos:start="19:47" pos:end="19:50">NULL</name></expr>}</block></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="21:1" pos:end="21:12">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">ARCH_X86</name></expr></cpp:if>

    <if_stmt pos:start="23:5" pos:end="32:0"><if pos:start="23:5" pos:end="32:0">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:13">flags</name> <operator pos:start="23:15" pos:end="23:15">&amp;</operator> <name pos:start="23:17" pos:end="23:32">SWS_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="32:0"><block_content pos:start="25:9" pos:end="32:0">

        <asm pos:start="25:9" pos:end="32:0">__asm__ <specifier pos:start="25:17" pos:end="25:24">volatile</specifier>("emms\n\t"::: "memory");</asm></block_content></block></if></if_stmt>

<cpp:endif pos:start="27:1" pos:end="27:6">#<cpp:directive pos:start="27:2" pos:end="27:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="31:1" pos:end="31:29">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:29"><operator pos:start="31:5" pos:end="31:5">!</operator><name pos:start="31:6" pos:end="31:29">CONFIG_RUNTIME_CPUDETECT</name></expr></cpp:if> <comment type="line" pos:start="31:31" pos:end="31:100">//ensure that the flags match the compiled variant if cpudetect is off</comment>

    <expr_stmt pos:start="33:5" pos:end="33:109"><expr pos:start="33:5" pos:end="33:108"><name pos:start="33:5" pos:end="33:9">flags</name> <operator pos:start="33:11" pos:end="33:12">&amp;=</operator> <operator pos:start="33:14" pos:end="33:14">~</operator><operator pos:start="33:15" pos:end="33:15">(</operator><name pos:start="33:16" pos:end="33:31">SWS_CPU_CAPS_MMX</name><operator pos:start="33:32" pos:end="33:32">|</operator><name pos:start="33:33" pos:end="33:49">SWS_CPU_CAPS_MMX2</name><operator pos:start="33:50" pos:end="33:50">|</operator><name pos:start="33:51" pos:end="33:68">SWS_CPU_CAPS_3DNOW</name><operator pos:start="33:69" pos:end="33:69">|</operator><name pos:start="33:70" pos:end="33:89">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="33:90" pos:end="33:90">|</operator><name pos:start="33:91" pos:end="33:107">SWS_CPU_CAPS_BFIN</name><operator pos:start="33:108" pos:end="33:108">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:9">flags</name> <operator pos:start="35:11" pos:end="35:12">|=</operator> <call pos:start="35:14" pos:end="35:35"><name pos:start="35:14" pos:end="35:33">ff_hardcodedcpuflags</name><argument_list pos:start="35:34" pos:end="35:35">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="37:8" pos:end="37:37">/* CONFIG_RUNTIME_CPUDETECT */</comment>

    <if_stmt pos:start="39:5" pos:end="39:44"><if pos:start="39:5" pos:end="39:44">if <condition pos:start="39:8" pos:end="39:19">(<expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">!</operator><name pos:start="39:10" pos:end="39:18">rgb15to16</name></expr>)</condition><block type="pseudo" pos:start="39:21" pos:end="39:44"><block_content pos:start="39:21" pos:end="39:44"> <expr_stmt pos:start="39:21" pos:end="39:44"><expr pos:start="39:21" pos:end="39:43"><call pos:start="39:21" pos:end="39:43"><name pos:start="39:21" pos:end="39:36">sws_rgb2rgb_init</name><argument_list pos:start="39:37" pos:end="39:43">(<argument pos:start="39:38" pos:end="39:42"><expr pos:start="39:38" pos:end="39:42"><name pos:start="39:38" pos:end="39:42">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:46"><expr pos:start="43:5" pos:end="43:45"><name pos:start="43:5" pos:end="43:12">unscaled</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <operator pos:start="43:16" pos:end="43:16">(</operator><name pos:start="43:17" pos:end="43:20">srcW</name> <operator pos:start="43:22" pos:end="43:23">==</operator> <name pos:start="43:25" pos:end="43:28">dstW</name> <operator pos:start="43:30" pos:end="43:31">&amp;&amp;</operator> <name pos:start="43:33" pos:end="43:36">srcH</name> <operator pos:start="43:38" pos:end="43:39">==</operator> <name pos:start="43:41" pos:end="43:44">dstH</name><operator pos:start="43:45" pos:end="43:45">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:12">srcRange</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <call pos:start="47:16" pos:end="47:38"><name pos:start="47:16" pos:end="47:26">handle_jpeg</name><argument_list pos:start="47:27" pos:end="47:38">(<argument pos:start="47:28" pos:end="47:37"><expr pos:start="47:28" pos:end="47:37"><operator pos:start="47:28" pos:end="47:28">&amp;</operator><name pos:start="47:29" pos:end="47:37">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:39"><expr pos:start="49:5" pos:end="49:38"><name pos:start="49:5" pos:end="49:12">dstRange</name> <operator pos:start="49:14" pos:end="49:14">=</operator> <call pos:start="49:16" pos:end="49:38"><name pos:start="49:16" pos:end="49:26">handle_jpeg</name><argument_list pos:start="49:27" pos:end="49:38">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:37">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="53:5" pos:end="59:5"><if pos:start="53:5" pos:end="59:5">if <condition pos:start="53:8" pos:end="53:34">(<expr pos:start="53:9" pos:end="53:33"><operator pos:start="53:9" pos:end="53:9">!</operator><call pos:start="53:10" pos:end="53:33"><name pos:start="53:10" pos:end="53:22">isSupportedIn</name><argument_list pos:start="53:23" pos:end="53:33">(<argument pos:start="53:24" pos:end="53:32"><expr pos:start="53:24" pos:end="53:32"><name pos:start="53:24" pos:end="53:32">srcFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="53:36" pos:end="59:5">{<block_content pos:start="55:9" pos:end="57:20">

        <expr_stmt pos:start="55:9" pos:end="55:120"><expr pos:start="55:9" pos:end="55:119"><call pos:start="55:9" pos:end="55:119"><name pos:start="55:9" pos:end="55:14">av_log</name><argument_list pos:start="55:15" pos:end="55:119">(<argument pos:start="55:16" pos:end="55:19"><expr pos:start="55:16" pos:end="55:19"><name pos:start="55:16" pos:end="55:19">NULL</name></expr></argument>, <argument pos:start="55:22" pos:end="55:33"><expr pos:start="55:22" pos:end="55:33"><name pos:start="55:22" pos:end="55:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:36" pos:end="55:90"><expr pos:start="55:36" pos:end="55:90"><literal type="string" pos:start="55:36" pos:end="55:90">"swScaler: %s is not supported as input pixel format\n"</literal></expr></argument>, <argument pos:start="55:93" pos:end="55:118"><expr pos:start="55:93" pos:end="55:118"><call pos:start="55:93" pos:end="55:118"><name pos:start="55:93" pos:end="55:107">sws_format_name</name><argument_list pos:start="55:108" pos:end="55:118">(<argument pos:start="55:109" pos:end="55:117"><expr pos:start="55:109" pos:end="55:117"><name pos:start="55:109" pos:end="55:117">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:20">return <expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="67:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:35">(<expr pos:start="61:9" pos:end="61:34"><operator pos:start="61:9" pos:end="61:9">!</operator><call pos:start="61:10" pos:end="61:34"><name pos:start="61:10" pos:end="61:23">isSupportedOut</name><argument_list pos:start="61:24" pos:end="61:34">(<argument pos:start="61:25" pos:end="61:33"><expr pos:start="61:25" pos:end="61:33"><name pos:start="61:25" pos:end="61:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="61:37" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:20">

        <expr_stmt pos:start="63:9" pos:end="63:121"><expr pos:start="63:9" pos:end="63:120"><call pos:start="63:9" pos:end="63:120"><name pos:start="63:9" pos:end="63:14">av_log</name><argument_list pos:start="63:15" pos:end="63:120">(<argument pos:start="63:16" pos:end="63:19"><expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr></argument>, <argument pos:start="63:22" pos:end="63:33"><expr pos:start="63:22" pos:end="63:33"><name pos:start="63:22" pos:end="63:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="63:36" pos:end="63:91"><expr pos:start="63:36" pos:end="63:91"><literal type="string" pos:start="63:36" pos:end="63:91">"swScaler: %s is not supported as output pixel format\n"</literal></expr></argument>, <argument pos:start="63:94" pos:end="63:119"><expr pos:start="63:94" pos:end="63:119"><call pos:start="63:94" pos:end="63:119"><name pos:start="63:94" pos:end="63:108">sws_format_name</name><argument_list pos:start="63:109" pos:end="63:119">(<argument pos:start="63:110" pos:end="63:118"><expr pos:start="63:110" pos:end="63:118"><name pos:start="63:110" pos:end="63:118">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:20">return <expr pos:start="65:16" pos:end="65:19"><name pos:start="65:16" pos:end="65:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="91:31"><expr pos:start="71:5" pos:end="91:30"><name pos:start="71:5" pos:end="71:5">i</name><operator pos:start="71:6" pos:end="71:6">=</operator> <name pos:start="71:8" pos:end="71:12">flags</name> <operator pos:start="71:14" pos:end="71:14">&amp;</operator> <operator pos:start="71:16" pos:end="71:16">(</operator> <name pos:start="71:18" pos:end="71:26">SWS_POINT</name>

                <operator pos:start="73:17" pos:end="73:17">|</operator><name pos:start="73:18" pos:end="73:25">SWS_AREA</name>

                <operator pos:start="75:17" pos:end="75:17">|</operator><name pos:start="75:18" pos:end="75:29">SWS_BILINEAR</name>

                <operator pos:start="77:17" pos:end="77:17">|</operator><name pos:start="77:18" pos:end="77:34">SWS_FAST_BILINEAR</name>

                <operator pos:start="79:17" pos:end="79:17">|</operator><name pos:start="79:18" pos:end="79:28">SWS_BICUBIC</name>

                <operator pos:start="81:17" pos:end="81:17">|</operator><name pos:start="81:18" pos:end="81:22">SWS_X</name>

                <operator pos:start="83:17" pos:end="83:17">|</operator><name pos:start="83:18" pos:end="83:26">SWS_GAUSS</name>

                <operator pos:start="85:17" pos:end="85:17">|</operator><name pos:start="85:18" pos:end="85:28">SWS_LANCZOS</name>

                <operator pos:start="87:17" pos:end="87:17">|</operator><name pos:start="87:18" pos:end="87:25">SWS_SINC</name>

                <operator pos:start="89:17" pos:end="89:17">|</operator><name pos:start="89:18" pos:end="89:27">SWS_SPLINE</name>

                <operator pos:start="91:17" pos:end="91:17">|</operator><name pos:start="91:18" pos:end="91:29">SWS_BICUBLIN</name><operator pos:start="91:30" pos:end="91:30">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if<condition pos:start="93:7" pos:end="93:25">(<expr pos:start="93:8" pos:end="93:24"><operator pos:start="93:8" pos:end="93:8">!</operator><name pos:start="93:9" pos:end="93:9">i</name> <operator pos:start="93:11" pos:end="93:12">||</operator> <operator pos:start="93:14" pos:end="93:14">(</operator><name pos:start="93:15" pos:end="93:15">i</name> <operator pos:start="93:17" pos:end="93:17">&amp;</operator> <operator pos:start="93:19" pos:end="93:19">(</operator><name pos:start="93:20" pos:end="93:20">i</name><operator pos:start="93:21" pos:end="93:21">-</operator><literal type="number" pos:start="93:22" pos:end="93:22">1</literal><operator pos:start="93:23" pos:end="93:23">)</operator><operator pos:start="93:24" pos:end="93:24">)</operator></expr>)</condition> <block pos:start="93:27" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:20">

        <expr_stmt pos:start="95:9" pos:end="95:94"><expr pos:start="95:9" pos:end="95:93"><call pos:start="95:9" pos:end="95:93"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:93">(<argument pos:start="95:16" pos:end="95:19"><expr pos:start="95:16" pos:end="95:19"><name pos:start="95:16" pos:end="95:19">NULL</name></expr></argument>, <argument pos:start="95:22" pos:end="95:33"><expr pos:start="95:22" pos:end="95:33"><name pos:start="95:22" pos:end="95:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:36" pos:end="95:92"><expr pos:start="95:36" pos:end="95:92"><literal type="string" pos:start="95:36" pos:end="95:92">"swScaler: Exactly one scaler algorithm must be chosen\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="97:9" pos:end="97:20">return <expr pos:start="97:16" pos:end="97:19"><name pos:start="97:16" pos:end="97:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:22">/* sanity check */</comment>

    <if_stmt pos:start="105:5" pos:end="113:5"><if pos:start="105:5" pos:end="113:5">if <condition pos:start="105:8" pos:end="105:45">(<expr pos:start="105:9" pos:end="105:44"><name pos:start="105:9" pos:end="105:12">srcW</name><operator pos:start="105:13" pos:end="105:13">&lt;</operator><literal type="number" pos:start="105:14" pos:end="105:14">4</literal> <operator pos:start="105:16" pos:end="105:17">||</operator> <name pos:start="105:19" pos:end="105:22">srcH</name><operator pos:start="105:23" pos:end="105:23">&lt;</operator><literal type="number" pos:start="105:24" pos:end="105:24">1</literal> <operator pos:start="105:26" pos:end="105:27">||</operator> <name pos:start="105:29" pos:end="105:32">dstW</name><operator pos:start="105:33" pos:end="105:33">&lt;</operator><literal type="number" pos:start="105:34" pos:end="105:34">8</literal> <operator pos:start="105:36" pos:end="105:37">||</operator> <name pos:start="105:39" pos:end="105:42">dstH</name><operator pos:start="105:43" pos:end="105:43">&lt;</operator><literal type="number" pos:start="105:44" pos:end="105:44">1</literal></expr>)</condition> <block pos:start="105:47" pos:end="113:5">{<block_content pos:start="107:9" pos:end="111:20"> <comment type="line" pos:start="105:49" pos:end="105:148">//FIXME check if these are enough and try to lowwer them after fixing the relevant parts of the code</comment>

        <expr_stmt pos:start="107:9" pos:end="109:39"><expr pos:start="107:9" pos:end="109:38"><call pos:start="107:9" pos:end="109:38"><name pos:start="107:9" pos:end="107:14">av_log</name><argument_list pos:start="107:15" pos:end="109:38">(<argument pos:start="107:16" pos:end="107:19"><expr pos:start="107:16" pos:end="107:19"><name pos:start="107:16" pos:end="107:19">NULL</name></expr></argument>, <argument pos:start="107:22" pos:end="107:33"><expr pos:start="107:22" pos:end="107:33"><name pos:start="107:22" pos:end="107:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="107:36" pos:end="107:92"><expr pos:start="107:36" pos:end="107:92"><literal type="string" pos:start="107:36" pos:end="107:92">"swScaler: %dx%d -&gt; %dx%d is invalid scaling dimension\n"</literal></expr></argument>,

               <argument pos:start="109:16" pos:end="109:19"><expr pos:start="109:16" pos:end="109:19"><name pos:start="109:16" pos:end="109:19">srcW</name></expr></argument>, <argument pos:start="109:22" pos:end="109:25"><expr pos:start="109:22" pos:end="109:25"><name pos:start="109:22" pos:end="109:25">srcH</name></expr></argument>, <argument pos:start="109:28" pos:end="109:31"><expr pos:start="109:28" pos:end="109:31"><name pos:start="109:28" pos:end="109:31">dstW</name></expr></argument>, <argument pos:start="109:34" pos:end="109:37"><expr pos:start="109:34" pos:end="109:37"><name pos:start="109:34" pos:end="109:37">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="111:9" pos:end="111:20">return <expr pos:start="111:16" pos:end="111:19"><name pos:start="111:16" pos:end="111:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if<condition pos:start="115:7" pos:end="115:34">(<expr pos:start="115:8" pos:end="115:33"><name pos:start="115:8" pos:end="115:11">srcW</name> <operator pos:start="115:13" pos:end="115:13">&gt;</operator> <name pos:start="115:15" pos:end="115:18">VOFW</name> <operator pos:start="115:20" pos:end="115:21">||</operator> <name pos:start="115:23" pos:end="115:26">dstW</name> <operator pos:start="115:28" pos:end="115:28">&gt;</operator> <name pos:start="115:30" pos:end="115:33">VOFW</name></expr>)</condition> <block pos:start="115:36" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:20">

        <expr_stmt pos:start="117:9" pos:end="117:131"><expr pos:start="117:9" pos:end="117:130"><call pos:start="117:9" pos:end="117:130"><name pos:start="117:9" pos:end="117:14">av_log</name><argument_list pos:start="117:15" pos:end="117:130">(<argument pos:start="117:16" pos:end="117:19"><expr pos:start="117:16" pos:end="117:19"><name pos:start="117:16" pos:end="117:19">NULL</name></expr></argument>, <argument pos:start="117:22" pos:end="117:33"><expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="117:36" pos:end="117:129"><expr pos:start="117:36" pos:end="117:129"><literal type="string" pos:start="117:36" pos:end="117:77">"swScaler: Compile-time maximum width is "</literal><call pos:start="117:78" pos:end="117:95"><name pos:start="117:78" pos:end="117:89">AV_STRINGIFY</name><argument_list pos:start="117:90" pos:end="117:95">(<argument pos:start="117:91" pos:end="117:94"><expr pos:start="117:91" pos:end="117:94"><name pos:start="117:91" pos:end="117:94">VOFW</name></expr></argument>)</argument_list></call><literal type="string" pos:start="117:96" pos:end="117:129">" change VOF/VOFW and recompile\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:20">return <expr pos:start="119:16" pos:end="119:19"><name pos:start="119:16" pos:end="119:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="125:44"><if pos:start="125:5" pos:end="125:44">if <condition pos:start="125:8" pos:end="125:19">(<expr pos:start="125:9" pos:end="125:18"><operator pos:start="125:9" pos:end="125:9">!</operator><name pos:start="125:10" pos:end="125:18">dstFilter</name></expr>)</condition><block type="pseudo" pos:start="125:21" pos:end="125:44"><block_content pos:start="125:21" pos:end="125:44"> <expr_stmt pos:start="125:21" pos:end="125:44"><expr pos:start="125:21" pos:end="125:43"><name pos:start="125:21" pos:end="125:29">dstFilter</name><operator pos:start="125:30" pos:end="125:30">=</operator> <operator pos:start="125:32" pos:end="125:32">&amp;</operator><name pos:start="125:33" pos:end="125:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="127:5" pos:end="127:44"><if pos:start="127:5" pos:end="127:44">if <condition pos:start="127:8" pos:end="127:19">(<expr pos:start="127:9" pos:end="127:18"><operator pos:start="127:9" pos:end="127:9">!</operator><name pos:start="127:10" pos:end="127:18">srcFilter</name></expr>)</condition><block type="pseudo" pos:start="127:21" pos:end="127:44"><block_content pos:start="127:21" pos:end="127:44"> <expr_stmt pos:start="127:21" pos:end="127:44"><expr pos:start="127:21" pos:end="127:43"><name pos:start="127:21" pos:end="127:29">srcFilter</name><operator pos:start="127:30" pos:end="127:30">=</operator> <operator pos:start="127:32" pos:end="127:32">&amp;</operator><name pos:start="127:33" pos:end="127:43">dummyFilter</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="131:5" pos:end="131:57"><expr pos:start="131:5" pos:end="131:56"><call pos:start="131:5" pos:end="131:56"><name pos:start="131:5" pos:end="131:21">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="131:22" pos:end="131:56">(<argument pos:start="131:23" pos:end="131:26"><expr pos:start="131:23" pos:end="131:26"><name pos:start="131:23" pos:end="131:26">NULL</name></expr></argument>, <argument pos:start="131:29" pos:end="131:29"><expr pos:start="131:29" pos:end="131:29"><name pos:start="131:29" pos:end="131:29">c</name></expr></argument>, <argument pos:start="131:32" pos:end="131:49"><expr pos:start="131:32" pos:end="131:49"><sizeof pos:start="131:32" pos:end="131:49">sizeof<argument_list pos:start="131:38" pos:end="131:49">(<argument pos:start="131:39" pos:end="131:48"><expr pos:start="131:39" pos:end="131:48"><name pos:start="131:39" pos:end="131:48">SwsContext</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="131:52" pos:end="131:55"><expr pos:start="131:52" pos:end="131:55"><name pos:start="131:52" pos:end="131:55">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:37"><expr pos:start="135:5" pos:end="135:36"><name pos:start="135:5" pos:end="135:15"><name pos:start="135:5" pos:end="135:5">c</name><operator pos:start="135:6" pos:end="135:7">-&gt;</operator><name pos:start="135:8" pos:end="135:15">av_class</name></name> <operator pos:start="135:17" pos:end="135:17">=</operator> <operator pos:start="135:19" pos:end="135:19">&amp;</operator><name pos:start="135:20" pos:end="135:36">sws_context_class</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:18"><expr pos:start="137:5" pos:end="137:17"><name pos:start="137:5" pos:end="137:11"><name pos:start="137:5" pos:end="137:5">c</name><operator pos:start="137:6" pos:end="137:7">-&gt;</operator><name pos:start="137:8" pos:end="137:11">srcW</name></name><operator pos:start="137:12" pos:end="137:12">=</operator> <name pos:start="137:14" pos:end="137:17">srcW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:18"><expr pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:11"><name pos:start="139:5" pos:end="139:5">c</name><operator pos:start="139:6" pos:end="139:7">-&gt;</operator><name pos:start="139:8" pos:end="139:11">srcH</name></name><operator pos:start="139:12" pos:end="139:12">=</operator> <name pos:start="139:14" pos:end="139:17">srcH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:18"><expr pos:start="141:5" pos:end="141:17"><name pos:start="141:5" pos:end="141:11"><name pos:start="141:5" pos:end="141:5">c</name><operator pos:start="141:6" pos:end="141:7">-&gt;</operator><name pos:start="141:8" pos:end="141:11">dstW</name></name><operator pos:start="141:12" pos:end="141:12">=</operator> <name pos:start="141:14" pos:end="141:17">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:18"><expr pos:start="143:5" pos:end="143:17"><name pos:start="143:5" pos:end="143:11"><name pos:start="143:5" pos:end="143:5">c</name><operator pos:start="143:6" pos:end="143:7">-&gt;</operator><name pos:start="143:8" pos:end="143:11">dstH</name></name><operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:17">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:46"><expr pos:start="145:5" pos:end="145:45"><name pos:start="145:5" pos:end="145:14"><name pos:start="145:5" pos:end="145:5">c</name><operator pos:start="145:6" pos:end="145:7">-&gt;</operator><name pos:start="145:8" pos:end="145:14">lumXInc</name></name><operator pos:start="145:15" pos:end="145:15">=</operator> <operator pos:start="145:17" pos:end="145:17">(</operator><operator pos:start="145:18" pos:end="145:18">(</operator><name pos:start="145:19" pos:end="145:22">srcW</name><operator pos:start="145:23" pos:end="145:24">&lt;&lt;</operator><literal type="number" pos:start="145:25" pos:end="145:26">16</literal><operator pos:start="145:27" pos:end="145:27">)</operator> <operator pos:start="145:29" pos:end="145:29">+</operator> <operator pos:start="145:31" pos:end="145:31">(</operator><name pos:start="145:32" pos:end="145:35">dstW</name><operator pos:start="145:36" pos:end="145:37">&gt;&gt;</operator><literal type="number" pos:start="145:38" pos:end="145:38">1</literal><operator pos:start="145:39" pos:end="145:39">)</operator><operator pos:start="145:40" pos:end="145:40">)</operator><operator pos:start="145:41" pos:end="145:41">/</operator><name pos:start="145:42" pos:end="145:45">dstW</name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:46"><expr pos:start="147:5" pos:end="147:45"><name pos:start="147:5" pos:end="147:14"><name pos:start="147:5" pos:end="147:5">c</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:14">lumYInc</name></name><operator pos:start="147:15" pos:end="147:15">=</operator> <operator pos:start="147:17" pos:end="147:17">(</operator><operator pos:start="147:18" pos:end="147:18">(</operator><name pos:start="147:19" pos:end="147:22">srcH</name><operator pos:start="147:23" pos:end="147:24">&lt;&lt;</operator><literal type="number" pos:start="147:25" pos:end="147:26">16</literal><operator pos:start="147:27" pos:end="147:27">)</operator> <operator pos:start="147:29" pos:end="147:29">+</operator> <operator pos:start="147:31" pos:end="147:31">(</operator><name pos:start="147:32" pos:end="147:35">dstH</name><operator pos:start="147:36" pos:end="147:37">&gt;&gt;</operator><literal type="number" pos:start="147:38" pos:end="147:38">1</literal><operator pos:start="147:39" pos:end="147:39">)</operator><operator pos:start="147:40" pos:end="147:40">)</operator><operator pos:start="147:41" pos:end="147:41">/</operator><name pos:start="147:42" pos:end="147:45">dstH</name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:20"><expr pos:start="149:5" pos:end="149:19"><name pos:start="149:5" pos:end="149:12"><name pos:start="149:5" pos:end="149:5">c</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:12">flags</name></name><operator pos:start="149:13" pos:end="149:13">=</operator> <name pos:start="149:15" pos:end="149:19">flags</name></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:5">c</name><operator pos:start="151:6" pos:end="151:7">-&gt;</operator><name pos:start="151:8" pos:end="151:16">dstFormat</name></name><operator pos:start="151:17" pos:end="151:17">=</operator> <name pos:start="151:19" pos:end="151:27">dstFormat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:28"><expr pos:start="153:5" pos:end="153:27"><name pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:5">c</name><operator pos:start="153:6" pos:end="153:7">-&gt;</operator><name pos:start="153:8" pos:end="153:16">srcFormat</name></name><operator pos:start="153:17" pos:end="153:17">=</operator> <name pos:start="153:19" pos:end="153:27">srcFormat</name></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:80"><expr pos:start="155:5" pos:end="155:79"><name pos:start="155:5" pos:end="155:19"><name pos:start="155:5" pos:end="155:5">c</name><operator pos:start="155:6" pos:end="155:7">-&gt;</operator><name pos:start="155:8" pos:end="155:19">dstFormatBpp</name></name> <operator pos:start="155:21" pos:end="155:21">=</operator> <call pos:start="155:23" pos:end="155:79"><name pos:start="155:23" pos:end="155:43">av_get_bits_per_pixel</name><argument_list pos:start="155:44" pos:end="155:79">(<argument pos:start="155:45" pos:end="155:78"><expr pos:start="155:45" pos:end="155:78"><operator pos:start="155:45" pos:end="155:45">&amp;</operator><name pos:start="155:46" pos:end="155:78"><name pos:start="155:46" pos:end="155:67">av_pix_fmt_descriptors</name><index pos:start="155:68" pos:end="155:78">[<expr pos:start="155:69" pos:end="155:77"><name pos:start="155:69" pos:end="155:77">dstFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="157:5" pos:end="157:80"><expr pos:start="157:5" pos:end="157:79"><name pos:start="157:5" pos:end="157:19"><name pos:start="157:5" pos:end="157:5">c</name><operator pos:start="157:6" pos:end="157:7">-&gt;</operator><name pos:start="157:8" pos:end="157:19">srcFormatBpp</name></name> <operator pos:start="157:21" pos:end="157:21">=</operator> <call pos:start="157:23" pos:end="157:79"><name pos:start="157:23" pos:end="157:43">av_get_bits_per_pixel</name><argument_list pos:start="157:44" pos:end="157:79">(<argument pos:start="157:45" pos:end="157:78"><expr pos:start="157:45" pos:end="157:78"><operator pos:start="157:45" pos:end="157:45">&amp;</operator><name pos:start="157:46" pos:end="157:78"><name pos:start="157:46" pos:end="157:67">av_pix_fmt_descriptors</name><index pos:start="157:68" pos:end="157:78">[<expr pos:start="157:69" pos:end="157:77"><name pos:start="157:69" pos:end="157:77">srcFormat</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:42"><expr pos:start="159:5" pos:end="159:41"><name pos:start="159:5" pos:end="159:15"><name pos:start="159:5" pos:end="159:5">c</name><operator pos:start="159:6" pos:end="159:7">-&gt;</operator><name pos:start="159:8" pos:end="159:15">vRounder</name></name><operator pos:start="159:16" pos:end="159:16">=</operator> <literal type="number" pos:start="159:18" pos:end="159:18">4</literal><operator pos:start="159:19" pos:end="159:19">*</operator> <literal type="number" pos:start="159:21" pos:end="159:41">0x0001000100010001ULL</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="163:5" pos:end="169:65"><expr pos:start="163:5" pos:end="169:64"><name pos:start="163:5" pos:end="163:15">usesVFilter</name> <operator pos:start="163:17" pos:end="163:17">=</operator> <operator pos:start="163:19" pos:end="163:19">(</operator><name pos:start="163:20" pos:end="163:34"><name pos:start="163:20" pos:end="163:28">srcFilter</name><operator pos:start="163:29" pos:end="163:30">-&gt;</operator><name pos:start="163:31" pos:end="163:34">lumV</name></name> <operator pos:start="163:36" pos:end="163:37">&amp;&amp;</operator> <name pos:start="163:39" pos:end="163:61"><name pos:start="163:39" pos:end="163:47">srcFilter</name><operator pos:start="163:48" pos:end="163:49">-&gt;</operator><name pos:start="163:50" pos:end="163:53">lumV</name><operator pos:start="163:54" pos:end="163:55">-&gt;</operator><name pos:start="163:56" pos:end="163:61">length</name></name><operator pos:start="163:62" pos:end="163:62">&gt;</operator><literal type="number" pos:start="163:63" pos:end="163:63">1</literal><operator pos:start="163:64" pos:end="163:64">)</operator> <operator pos:start="163:66" pos:end="163:67">||</operator>

                  <operator pos:start="165:19" pos:end="165:19">(</operator><name pos:start="165:20" pos:end="165:34"><name pos:start="165:20" pos:end="165:28">srcFilter</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:34">chrV</name></name> <operator pos:start="165:36" pos:end="165:37">&amp;&amp;</operator> <name pos:start="165:39" pos:end="165:61"><name pos:start="165:39" pos:end="165:47">srcFilter</name><operator pos:start="165:48" pos:end="165:49">-&gt;</operator><name pos:start="165:50" pos:end="165:53">chrV</name><operator pos:start="165:54" pos:end="165:55">-&gt;</operator><name pos:start="165:56" pos:end="165:61">length</name></name><operator pos:start="165:62" pos:end="165:62">&gt;</operator><literal type="number" pos:start="165:63" pos:end="165:63">1</literal><operator pos:start="165:64" pos:end="165:64">)</operator> <operator pos:start="165:66" pos:end="165:67">||</operator>

                  <operator pos:start="167:19" pos:end="167:19">(</operator><name pos:start="167:20" pos:end="167:34"><name pos:start="167:20" pos:end="167:28">dstFilter</name><operator pos:start="167:29" pos:end="167:30">-&gt;</operator><name pos:start="167:31" pos:end="167:34">lumV</name></name> <operator pos:start="167:36" pos:end="167:37">&amp;&amp;</operator> <name pos:start="167:39" pos:end="167:61"><name pos:start="167:39" pos:end="167:47">dstFilter</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:53">lumV</name><operator pos:start="167:54" pos:end="167:55">-&gt;</operator><name pos:start="167:56" pos:end="167:61">length</name></name><operator pos:start="167:62" pos:end="167:62">&gt;</operator><literal type="number" pos:start="167:63" pos:end="167:63">1</literal><operator pos:start="167:64" pos:end="167:64">)</operator> <operator pos:start="167:66" pos:end="167:67">||</operator>

                  <operator pos:start="169:19" pos:end="169:19">(</operator><name pos:start="169:20" pos:end="169:34"><name pos:start="169:20" pos:end="169:28">dstFilter</name><operator pos:start="169:29" pos:end="169:30">-&gt;</operator><name pos:start="169:31" pos:end="169:34">chrV</name></name> <operator pos:start="169:36" pos:end="169:37">&amp;&amp;</operator> <name pos:start="169:39" pos:end="169:61"><name pos:start="169:39" pos:end="169:47">dstFilter</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:53">chrV</name><operator pos:start="169:54" pos:end="169:55">-&gt;</operator><name pos:start="169:56" pos:end="169:61">length</name></name><operator pos:start="169:62" pos:end="169:62">&gt;</operator><literal type="number" pos:start="169:63" pos:end="169:63">1</literal><operator pos:start="169:64" pos:end="169:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="171:5" pos:end="177:65"><expr pos:start="171:5" pos:end="177:64"><name pos:start="171:5" pos:end="171:15">usesHFilter</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <operator pos:start="171:19" pos:end="171:19">(</operator><name pos:start="171:20" pos:end="171:34"><name pos:start="171:20" pos:end="171:28">srcFilter</name><operator pos:start="171:29" pos:end="171:30">-&gt;</operator><name pos:start="171:31" pos:end="171:34">lumH</name></name> <operator pos:start="171:36" pos:end="171:37">&amp;&amp;</operator> <name pos:start="171:39" pos:end="171:61"><name pos:start="171:39" pos:end="171:47">srcFilter</name><operator pos:start="171:48" pos:end="171:49">-&gt;</operator><name pos:start="171:50" pos:end="171:53">lumH</name><operator pos:start="171:54" pos:end="171:55">-&gt;</operator><name pos:start="171:56" pos:end="171:61">length</name></name><operator pos:start="171:62" pos:end="171:62">&gt;</operator><literal type="number" pos:start="171:63" pos:end="171:63">1</literal><operator pos:start="171:64" pos:end="171:64">)</operator> <operator pos:start="171:66" pos:end="171:67">||</operator>

                  <operator pos:start="173:19" pos:end="173:19">(</operator><name pos:start="173:20" pos:end="173:34"><name pos:start="173:20" pos:end="173:28">srcFilter</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:34">chrH</name></name> <operator pos:start="173:36" pos:end="173:37">&amp;&amp;</operator> <name pos:start="173:39" pos:end="173:61"><name pos:start="173:39" pos:end="173:47">srcFilter</name><operator pos:start="173:48" pos:end="173:49">-&gt;</operator><name pos:start="173:50" pos:end="173:53">chrH</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:61">length</name></name><operator pos:start="173:62" pos:end="173:62">&gt;</operator><literal type="number" pos:start="173:63" pos:end="173:63">1</literal><operator pos:start="173:64" pos:end="173:64">)</operator> <operator pos:start="173:66" pos:end="173:67">||</operator>

                  <operator pos:start="175:19" pos:end="175:19">(</operator><name pos:start="175:20" pos:end="175:34"><name pos:start="175:20" pos:end="175:28">dstFilter</name><operator pos:start="175:29" pos:end="175:30">-&gt;</operator><name pos:start="175:31" pos:end="175:34">lumH</name></name> <operator pos:start="175:36" pos:end="175:37">&amp;&amp;</operator> <name pos:start="175:39" pos:end="175:61"><name pos:start="175:39" pos:end="175:47">dstFilter</name><operator pos:start="175:48" pos:end="175:49">-&gt;</operator><name pos:start="175:50" pos:end="175:53">lumH</name><operator pos:start="175:54" pos:end="175:55">-&gt;</operator><name pos:start="175:56" pos:end="175:61">length</name></name><operator pos:start="175:62" pos:end="175:62">&gt;</operator><literal type="number" pos:start="175:63" pos:end="175:63">1</literal><operator pos:start="175:64" pos:end="175:64">)</operator> <operator pos:start="175:66" pos:end="175:67">||</operator>

                  <operator pos:start="177:19" pos:end="177:19">(</operator><name pos:start="177:20" pos:end="177:34"><name pos:start="177:20" pos:end="177:28">dstFilter</name><operator pos:start="177:29" pos:end="177:30">-&gt;</operator><name pos:start="177:31" pos:end="177:34">chrH</name></name> <operator pos:start="177:36" pos:end="177:37">&amp;&amp;</operator> <name pos:start="177:39" pos:end="177:61"><name pos:start="177:39" pos:end="177:47">dstFilter</name><operator pos:start="177:48" pos:end="177:49">-&gt;</operator><name pos:start="177:50" pos:end="177:53">chrH</name><operator pos:start="177:54" pos:end="177:55">-&gt;</operator><name pos:start="177:56" pos:end="177:61">length</name></name><operator pos:start="177:62" pos:end="177:62">&gt;</operator><literal type="number" pos:start="177:63" pos:end="177:63">1</literal><operator pos:start="177:64" pos:end="177:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:79"><expr pos:start="181:5" pos:end="181:78"><call pos:start="181:5" pos:end="181:78"><name pos:start="181:5" pos:end="181:23">getSubSampleFactors</name><argument_list pos:start="181:24" pos:end="181:78">(<argument pos:start="181:25" pos:end="181:44"><expr pos:start="181:25" pos:end="181:44"><operator pos:start="181:25" pos:end="181:25">&amp;</operator><name pos:start="181:26" pos:end="181:44"><name pos:start="181:26" pos:end="181:26">c</name><operator pos:start="181:27" pos:end="181:28">-&gt;</operator><name pos:start="181:29" pos:end="181:44">chrSrcHSubSample</name></name></expr></argument>, <argument pos:start="181:47" pos:end="181:66"><expr pos:start="181:47" pos:end="181:66"><operator pos:start="181:47" pos:end="181:47">&amp;</operator><name pos:start="181:48" pos:end="181:66"><name pos:start="181:48" pos:end="181:48">c</name><operator pos:start="181:49" pos:end="181:50">-&gt;</operator><name pos:start="181:51" pos:end="181:66">chrSrcVSubSample</name></name></expr></argument>, <argument pos:start="181:69" pos:end="181:77"><expr pos:start="181:69" pos:end="181:77"><name pos:start="181:69" pos:end="181:77">srcFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:79"><expr pos:start="183:5" pos:end="183:78"><call pos:start="183:5" pos:end="183:78"><name pos:start="183:5" pos:end="183:23">getSubSampleFactors</name><argument_list pos:start="183:24" pos:end="183:78">(<argument pos:start="183:25" pos:end="183:44"><expr pos:start="183:25" pos:end="183:44"><operator pos:start="183:25" pos:end="183:25">&amp;</operator><name pos:start="183:26" pos:end="183:44"><name pos:start="183:26" pos:end="183:26">c</name><operator pos:start="183:27" pos:end="183:28">-&gt;</operator><name pos:start="183:29" pos:end="183:44">chrDstHSubSample</name></name></expr></argument>, <argument pos:start="183:47" pos:end="183:66"><expr pos:start="183:47" pos:end="183:66"><operator pos:start="183:47" pos:end="183:47">&amp;</operator><name pos:start="183:48" pos:end="183:66"><name pos:start="183:48" pos:end="183:48">c</name><operator pos:start="183:49" pos:end="183:50">-&gt;</operator><name pos:start="183:51" pos:end="183:66">chrDstVSubSample</name></name></expr></argument>, <argument pos:start="183:69" pos:end="183:77"><expr pos:start="183:69" pos:end="183:77"><name pos:start="183:69" pos:end="183:77">dstFormat</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="187:5" pos:end="187:84">// reuse chroma for 2 pixels RGB/BGR unless user wants full chroma interpolation</comment>

    <if_stmt pos:start="189:5" pos:end="189:82"><if pos:start="189:5" pos:end="189:82">if <condition pos:start="189:8" pos:end="189:59">(<expr pos:start="189:9" pos:end="189:58"><call pos:start="189:9" pos:end="189:27"><name pos:start="189:9" pos:end="189:16">isAnyRGB</name><argument_list pos:start="189:17" pos:end="189:27">(<argument pos:start="189:18" pos:end="189:26"><expr pos:start="189:18" pos:end="189:26"><name pos:start="189:18" pos:end="189:26">dstFormat</name></expr></argument>)</argument_list></call> <operator pos:start="189:29" pos:end="189:30">&amp;&amp;</operator> <operator pos:start="189:32" pos:end="189:32">!</operator><operator pos:start="189:33" pos:end="189:33">(</operator><name pos:start="189:34" pos:end="189:38">flags</name><operator pos:start="189:39" pos:end="189:39">&amp;</operator><name pos:start="189:40" pos:end="189:57">SWS_FULL_CHR_H_INT</name><operator pos:start="189:58" pos:end="189:58">)</operator></expr>)</condition><block type="pseudo" pos:start="189:61" pos:end="189:82"><block_content pos:start="189:61" pos:end="189:82"> <expr_stmt pos:start="189:61" pos:end="189:82"><expr pos:start="189:61" pos:end="189:81"><name pos:start="189:61" pos:end="189:79"><name pos:start="189:61" pos:end="189:61">c</name><operator pos:start="189:62" pos:end="189:63">-&gt;</operator><name pos:start="189:64" pos:end="189:79">chrDstHSubSample</name></name><operator pos:start="189:80" pos:end="189:80">=</operator><literal type="number" pos:start="189:81" pos:end="189:81">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="line" pos:start="193:5" pos:end="193:50">// drop some chroma lines if the user wants it</comment>

    <expr_stmt pos:start="195:5" pos:end="195:75"><expr pos:start="195:5" pos:end="195:74"><name pos:start="195:5" pos:end="195:15"><name pos:start="195:5" pos:end="195:5">c</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:15">vChrDrop</name></name><operator pos:start="195:16" pos:end="195:16">=</operator> <operator pos:start="195:18" pos:end="195:18">(</operator><name pos:start="195:19" pos:end="195:23">flags</name><operator pos:start="195:24" pos:end="195:24">&amp;</operator><name pos:start="195:25" pos:end="195:47">SWS_SRC_V_CHR_DROP_MASK</name><operator pos:start="195:48" pos:end="195:48">)</operator><operator pos:start="195:49" pos:end="195:50">&gt;&gt;</operator><name pos:start="195:51" pos:end="195:74">SWS_SRC_V_CHR_DROP_SHIFT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:38"><expr pos:start="197:5" pos:end="197:37"><name pos:start="197:5" pos:end="197:23"><name pos:start="197:5" pos:end="197:5">c</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:23">chrSrcVSubSample</name></name><operator pos:start="197:24" pos:end="197:25">+=</operator> <name pos:start="197:27" pos:end="197:37"><name pos:start="197:27" pos:end="197:27">c</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:37">vChrDrop</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="201:5" pos:end="201:82">// drop every other pixel for chroma calculation unless user wants full chroma</comment>

    <if_stmt pos:start="203:5" pos:end="213:30"><if pos:start="203:5" pos:end="213:30">if <condition pos:start="203:8" pos:end="211:93">(<expr pos:start="203:9" pos:end="211:92"><call pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:16">isAnyRGB</name><argument_list pos:start="203:17" pos:end="203:27">(<argument pos:start="203:18" pos:end="203:26"><expr pos:start="203:18" pos:end="203:26"><name pos:start="203:18" pos:end="203:26">srcFormat</name></expr></argument>)</argument_list></call> <operator pos:start="203:29" pos:end="203:30">&amp;&amp;</operator> <operator pos:start="203:32" pos:end="203:32">!</operator><operator pos:start="203:33" pos:end="203:33">(</operator><name pos:start="203:34" pos:end="203:38">flags</name><operator pos:start="203:39" pos:end="203:39">&amp;</operator><name pos:start="203:40" pos:end="203:57">SWS_FULL_CHR_H_INP</name><operator pos:start="203:58" pos:end="203:58">)</operator>

      <operator pos:start="205:7" pos:end="205:8">&amp;&amp;</operator> <name pos:start="205:10" pos:end="205:18">srcFormat</name><operator pos:start="205:19" pos:end="205:20">!=</operator><name pos:start="205:21" pos:end="205:32">PIX_FMT_RGB8</name>      <operator pos:start="205:39" pos:end="205:40">&amp;&amp;</operator> <name pos:start="205:42" pos:end="205:50">srcFormat</name><operator pos:start="205:51" pos:end="205:52">!=</operator><name pos:start="205:53" pos:end="205:64">PIX_FMT_BGR8</name>

      <operator pos:start="207:7" pos:end="207:8">&amp;&amp;</operator> <name pos:start="207:10" pos:end="207:18">srcFormat</name><operator pos:start="207:19" pos:end="207:20">!=</operator><name pos:start="207:21" pos:end="207:32">PIX_FMT_RGB4</name>      <operator pos:start="207:39" pos:end="207:40">&amp;&amp;</operator> <name pos:start="207:42" pos:end="207:50">srcFormat</name><operator pos:start="207:51" pos:end="207:52">!=</operator><name pos:start="207:53" pos:end="207:64">PIX_FMT_BGR4</name>

      <operator pos:start="209:7" pos:end="209:8">&amp;&amp;</operator> <name pos:start="209:10" pos:end="209:18">srcFormat</name><operator pos:start="209:19" pos:end="209:20">!=</operator><name pos:start="209:21" pos:end="209:37">PIX_FMT_RGB4_BYTE</name> <operator pos:start="209:39" pos:end="209:40">&amp;&amp;</operator> <name pos:start="209:42" pos:end="209:50">srcFormat</name><operator pos:start="209:51" pos:end="209:52">!=</operator><name pos:start="209:53" pos:end="209:69">PIX_FMT_BGR4_BYTE</name>

      <operator pos:start="211:7" pos:end="211:8">&amp;&amp;</operator> <operator pos:start="211:10" pos:end="211:10">(</operator><operator pos:start="211:11" pos:end="211:11">(</operator><name pos:start="211:12" pos:end="211:15">dstW</name><operator pos:start="211:16" pos:end="211:17">&gt;&gt;</operator><name pos:start="211:18" pos:end="211:36"><name pos:start="211:18" pos:end="211:18">c</name><operator pos:start="211:19" pos:end="211:20">-&gt;</operator><name pos:start="211:21" pos:end="211:36">chrDstHSubSample</name></name><operator pos:start="211:37" pos:end="211:37">)</operator> <operator pos:start="211:39" pos:end="211:40">&lt;=</operator> <operator pos:start="211:42" pos:end="211:42">(</operator><name pos:start="211:43" pos:end="211:46">srcW</name><operator pos:start="211:47" pos:end="211:48">&gt;&gt;</operator><literal type="number" pos:start="211:49" pos:end="211:49">1</literal><operator pos:start="211:50" pos:end="211:50">)</operator> <operator pos:start="211:52" pos:end="211:53">||</operator> <operator pos:start="211:55" pos:end="211:55">(</operator><name pos:start="211:56" pos:end="211:60">flags</name><operator pos:start="211:61" pos:end="211:61">&amp;</operator><operator pos:start="211:62" pos:end="211:62">(</operator><name pos:start="211:63" pos:end="211:79">SWS_FAST_BILINEAR</name><operator pos:start="211:80" pos:end="211:80">|</operator><name pos:start="211:81" pos:end="211:89">SWS_POINT</name><operator pos:start="211:90" pos:end="211:90">)</operator><operator pos:start="211:91" pos:end="211:91">)</operator><operator pos:start="211:92" pos:end="211:92">)</operator></expr>)</condition><block type="pseudo" pos:start="213:9" pos:end="213:30"><block_content pos:start="213:9" pos:end="213:30">

        <expr_stmt pos:start="213:9" pos:end="213:30"><expr pos:start="213:9" pos:end="213:29"><name pos:start="213:9" pos:end="213:27"><name pos:start="213:9" pos:end="213:9">c</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:27">chrSrcHSubSample</name></name><operator pos:start="213:28" pos:end="213:28">=</operator><literal type="number" pos:start="213:29" pos:end="213:29">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="229:5"><if pos:start="217:5" pos:end="223:5">if <condition pos:start="217:8" pos:end="217:14">(<expr pos:start="217:9" pos:end="217:13"><name pos:start="217:9" pos:end="217:13">param</name></expr>)</condition> <block pos:start="217:16" pos:end="223:5">{<block_content pos:start="219:9" pos:end="221:31">

        <expr_stmt pos:start="219:9" pos:end="219:31"><expr pos:start="219:9" pos:end="219:30"><name pos:start="219:9" pos:end="219:19"><name pos:start="219:9" pos:end="219:9">c</name><operator pos:start="219:10" pos:end="219:11">-&gt;</operator><name pos:start="219:12" pos:end="219:16">param</name><index pos:start="219:17" pos:end="219:19">[<expr pos:start="219:18" pos:end="219:18"><literal type="number" pos:start="219:18" pos:end="219:18">0</literal></expr>]</index></name> <operator pos:start="219:21" pos:end="219:21">=</operator> <name pos:start="219:23" pos:end="219:30"><name pos:start="219:23" pos:end="219:27">param</name><index pos:start="219:28" pos:end="219:30">[<expr pos:start="219:29" pos:end="219:29"><literal type="number" pos:start="219:29" pos:end="219:29">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="221:9" pos:end="221:31"><expr pos:start="221:9" pos:end="221:30"><name pos:start="221:9" pos:end="221:19"><name pos:start="221:9" pos:end="221:9">c</name><operator pos:start="221:10" pos:end="221:11">-&gt;</operator><name pos:start="221:12" pos:end="221:16">param</name><index pos:start="221:17" pos:end="221:19">[<expr pos:start="221:18" pos:end="221:18"><literal type="number" pos:start="221:18" pos:end="221:18">1</literal></expr>]</index></name> <operator pos:start="221:21" pos:end="221:21">=</operator> <name pos:start="221:23" pos:end="221:30"><name pos:start="221:23" pos:end="221:27">param</name><index pos:start="221:28" pos:end="221:30">[<expr pos:start="221:29" pos:end="221:29"><literal type="number" pos:start="221:29" pos:end="221:29">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="223:7" pos:end="229:5">else <block pos:start="223:12" pos:end="229:5">{<block_content pos:start="225:9" pos:end="227:40">

        <expr_stmt pos:start="225:9" pos:end="227:40"><expr pos:start="225:9" pos:end="227:39"><name pos:start="225:9" pos:end="225:19"><name pos:start="225:9" pos:end="225:9">c</name><operator pos:start="225:10" pos:end="225:11">-&gt;</operator><name pos:start="225:12" pos:end="225:16">param</name><index pos:start="225:17" pos:end="225:19">[<expr pos:start="225:18" pos:end="225:18"><literal type="number" pos:start="225:18" pos:end="225:18">0</literal></expr>]</index></name> <operator pos:start="225:21" pos:end="225:21">=</operator>

        <name pos:start="227:9" pos:end="227:19"><name pos:start="227:9" pos:end="227:9">c</name><operator pos:start="227:10" pos:end="227:11">-&gt;</operator><name pos:start="227:12" pos:end="227:16">param</name><index pos:start="227:17" pos:end="227:19">[<expr pos:start="227:18" pos:end="227:18"><literal type="number" pos:start="227:18" pos:end="227:18">1</literal></expr>]</index></name> <operator pos:start="227:21" pos:end="227:21">=</operator> <name pos:start="227:23" pos:end="227:39">SWS_PARAM_DEFAULT</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="line" pos:start="233:5" pos:end="233:66">// Note the -((-x)&gt;&gt;y) is so that we always round toward +inf.</comment>

    <expr_stmt pos:start="235:5" pos:end="235:50"><expr pos:start="235:5" pos:end="235:49"><name pos:start="235:5" pos:end="235:14"><name pos:start="235:5" pos:end="235:5">c</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:14">chrSrcW</name></name><operator pos:start="235:15" pos:end="235:15">=</operator> <operator pos:start="235:17" pos:end="235:17">-</operator><operator pos:start="235:18" pos:end="235:18">(</operator><operator pos:start="235:19" pos:end="235:19">(</operator><operator pos:start="235:20" pos:end="235:20">-</operator><name pos:start="235:21" pos:end="235:24">srcW</name><operator pos:start="235:25" pos:end="235:25">)</operator> <operator pos:start="235:27" pos:end="235:28">&gt;&gt;</operator> <name pos:start="235:30" pos:end="235:48"><name pos:start="235:30" pos:end="235:30">c</name><operator pos:start="235:31" pos:end="235:32">-&gt;</operator><name pos:start="235:33" pos:end="235:48">chrSrcHSubSample</name></name><operator pos:start="235:49" pos:end="235:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:50"><expr pos:start="237:5" pos:end="237:49"><name pos:start="237:5" pos:end="237:14"><name pos:start="237:5" pos:end="237:5">c</name><operator pos:start="237:6" pos:end="237:7">-&gt;</operator><name pos:start="237:8" pos:end="237:14">chrSrcH</name></name><operator pos:start="237:15" pos:end="237:15">=</operator> <operator pos:start="237:17" pos:end="237:17">-</operator><operator pos:start="237:18" pos:end="237:18">(</operator><operator pos:start="237:19" pos:end="237:19">(</operator><operator pos:start="237:20" pos:end="237:20">-</operator><name pos:start="237:21" pos:end="237:24">srcH</name><operator pos:start="237:25" pos:end="237:25">)</operator> <operator pos:start="237:27" pos:end="237:28">&gt;&gt;</operator> <name pos:start="237:30" pos:end="237:48"><name pos:start="237:30" pos:end="237:30">c</name><operator pos:start="237:31" pos:end="237:32">-&gt;</operator><name pos:start="237:33" pos:end="237:48">chrSrcVSubSample</name></name><operator pos:start="237:49" pos:end="237:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:50"><expr pos:start="239:5" pos:end="239:49"><name pos:start="239:5" pos:end="239:14"><name pos:start="239:5" pos:end="239:5">c</name><operator pos:start="239:6" pos:end="239:7">-&gt;</operator><name pos:start="239:8" pos:end="239:14">chrDstW</name></name><operator pos:start="239:15" pos:end="239:15">=</operator> <operator pos:start="239:17" pos:end="239:17">-</operator><operator pos:start="239:18" pos:end="239:18">(</operator><operator pos:start="239:19" pos:end="239:19">(</operator><operator pos:start="239:20" pos:end="239:20">-</operator><name pos:start="239:21" pos:end="239:24">dstW</name><operator pos:start="239:25" pos:end="239:25">)</operator> <operator pos:start="239:27" pos:end="239:28">&gt;&gt;</operator> <name pos:start="239:30" pos:end="239:48"><name pos:start="239:30" pos:end="239:30">c</name><operator pos:start="239:31" pos:end="239:32">-&gt;</operator><name pos:start="239:33" pos:end="239:48">chrDstHSubSample</name></name><operator pos:start="239:49" pos:end="239:49">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:50"><expr pos:start="241:5" pos:end="241:49"><name pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:5">c</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:14">chrDstH</name></name><operator pos:start="241:15" pos:end="241:15">=</operator> <operator pos:start="241:17" pos:end="241:17">-</operator><operator pos:start="241:18" pos:end="241:18">(</operator><operator pos:start="241:19" pos:end="241:19">(</operator><operator pos:start="241:20" pos:end="241:20">-</operator><name pos:start="241:21" pos:end="241:24">dstH</name><operator pos:start="241:25" pos:end="241:25">)</operator> <operator pos:start="241:27" pos:end="241:28">&gt;&gt;</operator> <name pos:start="241:30" pos:end="241:48"><name pos:start="241:30" pos:end="241:30">c</name><operator pos:start="241:31" pos:end="241:32">-&gt;</operator><name pos:start="241:33" pos:end="241:48">chrDstVSubSample</name></name><operator pos:start="241:49" pos:end="241:49">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="245:5" pos:end="245:150"><expr pos:start="245:5" pos:end="245:149"><call pos:start="245:5" pos:end="245:149"><name pos:start="245:5" pos:end="245:28">sws_setColorspaceDetails</name><argument_list pos:start="245:29" pos:end="245:149">(<argument pos:start="245:30" pos:end="245:30"><expr pos:start="245:30" pos:end="245:30"><name pos:start="245:30" pos:end="245:30">c</name></expr></argument>, <argument pos:start="245:33" pos:end="245:65"><expr pos:start="245:33" pos:end="245:65"><name pos:start="245:33" pos:end="245:65"><name pos:start="245:33" pos:end="245:49">ff_yuv2rgb_coeffs</name><index pos:start="245:50" pos:end="245:65">[<expr pos:start="245:51" pos:end="245:64"><name pos:start="245:51" pos:end="245:64">SWS_CS_DEFAULT</name></expr>]</index></name></expr></argument>, <argument pos:start="245:68" pos:end="245:75"><expr pos:start="245:68" pos:end="245:75"><name pos:start="245:68" pos:end="245:75">srcRange</name></expr></argument>, <argument pos:start="245:78" pos:end="245:110"><expr pos:start="245:78" pos:end="245:110"><name pos:start="245:78" pos:end="245:110"><name pos:start="245:78" pos:end="245:94">ff_yuv2rgb_coeffs</name><index pos:start="245:95" pos:end="245:110">[<expr pos:start="245:96" pos:end="245:109"><name pos:start="245:96" pos:end="245:109">SWS_CS_DEFAULT</name></expr>]</index></name></expr></argument> <comment type="block" pos:start="245:112" pos:end="245:121">/* FIXME*/</comment>, <argument pos:start="245:124" pos:end="245:131"><expr pos:start="245:124" pos:end="245:131"><name pos:start="245:124" pos:end="245:131">dstRange</name></expr></argument>, <argument pos:start="245:134" pos:end="245:134"><expr pos:start="245:134" pos:end="245:134"><literal type="number" pos:start="245:134" pos:end="245:134">0</literal></expr></argument>, <argument pos:start="245:137" pos:end="245:141"><expr pos:start="245:137" pos:end="245:141"><literal type="number" pos:start="245:137" pos:end="245:137">1</literal><operator pos:start="245:138" pos:end="245:139">&lt;&lt;</operator><literal type="number" pos:start="245:140" pos:end="245:141">16</literal></expr></argument>, <argument pos:start="245:144" pos:end="245:148"><expr pos:start="245:144" pos:end="245:148"><literal type="number" pos:start="245:144" pos:end="245:144">1</literal><operator pos:start="245:145" pos:end="245:146">&lt;&lt;</operator><literal type="number" pos:start="245:147" pos:end="245:148">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="249:5" pos:end="249:32">/* unscaled special cases */</comment>

    <if_stmt pos:start="251:5" pos:end="269:5"><if pos:start="251:5" pos:end="269:5">if <condition pos:start="251:8" pos:end="251:98">(<expr pos:start="251:9" pos:end="251:97"><name pos:start="251:9" pos:end="251:16">unscaled</name> <operator pos:start="251:18" pos:end="251:19">&amp;&amp;</operator> <operator pos:start="251:21" pos:end="251:21">!</operator><name pos:start="251:22" pos:end="251:32">usesHFilter</name> <operator pos:start="251:34" pos:end="251:35">&amp;&amp;</operator> <operator pos:start="251:37" pos:end="251:37">!</operator><name pos:start="251:38" pos:end="251:48">usesVFilter</name> <operator pos:start="251:50" pos:end="251:51">&amp;&amp;</operator> <operator pos:start="251:53" pos:end="251:53">(</operator><name pos:start="251:54" pos:end="251:61">srcRange</name> <operator pos:start="251:63" pos:end="251:64">==</operator> <name pos:start="251:66" pos:end="251:73">dstRange</name> <operator pos:start="251:75" pos:end="251:76">||</operator> <call pos:start="251:78" pos:end="251:96"><name pos:start="251:78" pos:end="251:85">isAnyRGB</name><argument_list pos:start="251:86" pos:end="251:96">(<argument pos:start="251:87" pos:end="251:95"><expr pos:start="251:87" pos:end="251:95"><name pos:start="251:87" pos:end="251:95">dstFormat</name></expr></argument>)</argument_list></call><operator pos:start="251:97" pos:end="251:97">)</operator></expr>)</condition> <block pos:start="251:100" pos:end="269:5">{<block_content pos:start="253:9" pos:end="267:9">

        <expr_stmt pos:start="253:9" pos:end="253:35"><expr pos:start="253:9" pos:end="253:34"><call pos:start="253:9" pos:end="253:34"><name pos:start="253:9" pos:end="253:31">ff_get_unscaled_swscale</name><argument_list pos:start="253:32" pos:end="253:34">(<argument pos:start="253:33" pos:end="253:33"><expr pos:start="253:33" pos:end="253:33"><name pos:start="253:33" pos:end="253:33">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="257:9" pos:end="267:9"><if pos:start="257:9" pos:end="267:9">if <condition pos:start="257:12" pos:end="257:23">(<expr pos:start="257:13" pos:end="257:22"><name pos:start="257:13" pos:end="257:22"><name pos:start="257:13" pos:end="257:13">c</name><operator pos:start="257:14" pos:end="257:15">-&gt;</operator><name pos:start="257:16" pos:end="257:22">swScale</name></name></expr>)</condition> <block pos:start="257:25" pos:end="267:9">{<block_content pos:start="259:13" pos:end="265:21">

            <if_stmt pos:start="259:13" pos:end="263:79"><if pos:start="259:13" pos:end="263:79">if <condition pos:start="259:16" pos:end="259:37">(<expr pos:start="259:17" pos:end="259:36"><name pos:start="259:17" pos:end="259:21">flags</name><operator pos:start="259:22" pos:end="259:22">&amp;</operator><name pos:start="259:23" pos:end="259:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="263:79"><block_content pos:start="261:17" pos:end="263:79">

                <expr_stmt pos:start="261:17" pos:end="263:79"><expr pos:start="261:17" pos:end="263:78"><call pos:start="261:17" pos:end="263:78"><name pos:start="261:17" pos:end="261:22">av_log</name><argument_list pos:start="261:23" pos:end="263:78">(<argument pos:start="261:24" pos:end="261:24"><expr pos:start="261:24" pos:end="261:24"><name pos:start="261:24" pos:end="261:24">c</name></expr></argument>, <argument pos:start="261:27" pos:end="261:37"><expr pos:start="261:27" pos:end="261:37"><name pos:start="261:27" pos:end="261:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="261:40" pos:end="261:84"><expr pos:start="261:40" pos:end="261:84"><literal type="string" pos:start="261:40" pos:end="261:84">"using unscaled %s -&gt; %s special converter\n"</literal></expr></argument>,

                       <argument pos:start="263:24" pos:end="263:49"><expr pos:start="263:24" pos:end="263:49"><call pos:start="263:24" pos:end="263:49"><name pos:start="263:24" pos:end="263:38">sws_format_name</name><argument_list pos:start="263:39" pos:end="263:49">(<argument pos:start="263:40" pos:end="263:48"><expr pos:start="263:40" pos:end="263:48"><name pos:start="263:40" pos:end="263:48">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="263:52" pos:end="263:77"><expr pos:start="263:52" pos:end="263:77"><call pos:start="263:52" pos:end="263:77"><name pos:start="263:52" pos:end="263:66">sws_format_name</name><argument_list pos:start="263:67" pos:end="263:77">(<argument pos:start="263:68" pos:end="263:76"><expr pos:start="263:68" pos:end="263:76"><name pos:start="263:68" pos:end="263:76">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="265:13" pos:end="265:21">return <expr pos:start="265:20" pos:end="265:20"><name pos:start="265:20" pos:end="265:20">c</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="273:5" pos:end="291:27"><if pos:start="273:5" pos:end="287:5">if <condition pos:start="273:8" pos:end="273:34">(<expr pos:start="273:9" pos:end="273:33"><name pos:start="273:9" pos:end="273:13">flags</name> <operator pos:start="273:15" pos:end="273:15">&amp;</operator> <name pos:start="273:17" pos:end="273:33">SWS_CPU_CAPS_MMX2</name></expr>)</condition> <block pos:start="273:36" pos:end="287:5">{<block_content pos:start="275:9" pos:end="285:44">

        <expr_stmt pos:start="275:9" pos:end="275:80"><expr pos:start="275:9" pos:end="275:79"><name pos:start="275:9" pos:end="275:24"><name pos:start="275:9" pos:end="275:9">c</name><operator pos:start="275:10" pos:end="275:11">-&gt;</operator><name pos:start="275:12" pos:end="275:24">canMMX2BeUsed</name></name><operator pos:start="275:25" pos:end="275:25">=</operator> <ternary pos:start="275:27" pos:end="275:79"><condition pos:start="275:27" pos:end="275:73"><expr pos:start="275:27" pos:end="275:71"><operator pos:start="275:27" pos:end="275:27">(</operator><name pos:start="275:28" pos:end="275:31">dstW</name> <operator pos:start="275:33" pos:end="275:34">&gt;=</operator><name pos:start="275:35" pos:end="275:38">srcW</name> <operator pos:start="275:40" pos:end="275:41">&amp;&amp;</operator> <operator pos:start="275:43" pos:end="275:43">(</operator><name pos:start="275:44" pos:end="275:47">dstW</name><operator pos:start="275:48" pos:end="275:48">&amp;</operator><literal type="number" pos:start="275:49" pos:end="275:50">31</literal><operator pos:start="275:51" pos:end="275:51">)</operator><operator pos:start="275:52" pos:end="275:53">==</operator><literal type="number" pos:start="275:54" pos:end="275:54">0</literal> <operator pos:start="275:56" pos:end="275:57">&amp;&amp;</operator> <operator pos:start="275:59" pos:end="275:59">(</operator><name pos:start="275:60" pos:end="275:63">srcW</name><operator pos:start="275:64" pos:end="275:64">&amp;</operator><literal type="number" pos:start="275:65" pos:end="275:66">15</literal><operator pos:start="275:67" pos:end="275:67">)</operator><operator pos:start="275:68" pos:end="275:69">==</operator><literal type="number" pos:start="275:70" pos:end="275:70">0</literal><operator pos:start="275:71" pos:end="275:71">)</operator></expr> ?</condition><then pos:start="275:75" pos:end="275:75"> <expr pos:start="275:75" pos:end="275:75"><literal type="number" pos:start="275:75" pos:end="275:75">1</literal></expr> </then><else pos:start="275:77" pos:end="275:79">: <expr pos:start="275:79" pos:end="275:79"><literal type="number" pos:start="275:79" pos:end="275:79">0</literal></expr></else></ternary></expr>;</expr_stmt>

        <if_stmt pos:start="277:9" pos:end="283:9"><if pos:start="277:9" pos:end="283:9">if <condition pos:start="277:12" pos:end="277:90">(<expr pos:start="277:13" pos:end="277:89"><operator pos:start="277:13" pos:end="277:13">!</operator><name pos:start="277:14" pos:end="277:29"><name pos:start="277:14" pos:end="277:14">c</name><operator pos:start="277:15" pos:end="277:16">-&gt;</operator><name pos:start="277:17" pos:end="277:29">canMMX2BeUsed</name></name> <operator pos:start="277:31" pos:end="277:32">&amp;&amp;</operator> <name pos:start="277:34" pos:end="277:37">dstW</name> <operator pos:start="277:39" pos:end="277:40">&gt;=</operator><name pos:start="277:41" pos:end="277:44">srcW</name> <operator pos:start="277:46" pos:end="277:47">&amp;&amp;</operator> <operator pos:start="277:49" pos:end="277:49">(</operator><name pos:start="277:50" pos:end="277:53">srcW</name><operator pos:start="277:54" pos:end="277:54">&amp;</operator><literal type="number" pos:start="277:55" pos:end="277:56">15</literal><operator pos:start="277:57" pos:end="277:57">)</operator><operator pos:start="277:58" pos:end="277:59">==</operator><literal type="number" pos:start="277:60" pos:end="277:60">0</literal> <operator pos:start="277:62" pos:end="277:63">&amp;&amp;</operator> <operator pos:start="277:65" pos:end="277:65">(</operator><name pos:start="277:66" pos:end="277:70">flags</name><operator pos:start="277:71" pos:end="277:71">&amp;</operator><name pos:start="277:72" pos:end="277:88">SWS_FAST_BILINEAR</name><operator pos:start="277:89" pos:end="277:89">)</operator></expr>)</condition> <block pos:start="277:92" pos:end="283:9">{<block_content pos:start="279:13" pos:end="281:99">

            <if_stmt pos:start="279:13" pos:end="281:99"><if pos:start="279:13" pos:end="281:99">if <condition pos:start="279:16" pos:end="279:37">(<expr pos:start="279:17" pos:end="279:36"><name pos:start="279:17" pos:end="279:21">flags</name><operator pos:start="279:22" pos:end="279:22">&amp;</operator><name pos:start="279:23" pos:end="279:36">SWS_PRINT_INFO</name></expr>)</condition><block type="pseudo" pos:start="281:17" pos:end="281:99"><block_content pos:start="281:17" pos:end="281:99">

                <expr_stmt pos:start="281:17" pos:end="281:99"><expr pos:start="281:17" pos:end="281:98"><call pos:start="281:17" pos:end="281:98"><name pos:start="281:17" pos:end="281:22">av_log</name><argument_list pos:start="281:23" pos:end="281:98">(<argument pos:start="281:24" pos:end="281:24"><expr pos:start="281:24" pos:end="281:24"><name pos:start="281:24" pos:end="281:24">c</name></expr></argument>, <argument pos:start="281:27" pos:end="281:37"><expr pos:start="281:27" pos:end="281:37"><name pos:start="281:27" pos:end="281:37">AV_LOG_INFO</name></expr></argument>, <argument pos:start="281:40" pos:end="281:97"><expr pos:start="281:40" pos:end="281:97"><literal type="string" pos:start="281:40" pos:end="281:97">"output width is not a multiple of 32 -&gt; no MMX2 scaler\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="285:9" pos:end="285:44"><if pos:start="285:9" pos:end="285:44">if <condition pos:start="285:12" pos:end="285:24">(<expr pos:start="285:13" pos:end="285:23"><name pos:start="285:13" pos:end="285:23">usesHFilter</name></expr>)</condition><block type="pseudo" pos:start="285:26" pos:end="285:44"><block_content pos:start="285:26" pos:end="285:44"> <expr_stmt pos:start="285:26" pos:end="285:44"><expr pos:start="285:26" pos:end="285:43"><name pos:start="285:26" pos:end="285:41"><name pos:start="285:26" pos:end="285:26">c</name><operator pos:start="285:27" pos:end="285:28">-&gt;</operator><name pos:start="285:29" pos:end="285:41">canMMX2BeUsed</name></name><operator pos:start="285:42" pos:end="285:42">=</operator><literal type="number" pos:start="285:43" pos:end="285:43">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="289:5" pos:end="291:27">else<block type="pseudo" pos:start="291:9" pos:end="291:27"><block_content pos:start="291:9" pos:end="291:27">

        <expr_stmt pos:start="291:9" pos:end="291:27"><expr pos:start="291:9" pos:end="291:26"><name pos:start="291:9" pos:end="291:24"><name pos:start="291:9" pos:end="291:9">c</name><operator pos:start="291:10" pos:end="291:11">-&gt;</operator><name pos:start="291:12" pos:end="291:24">canMMX2BeUsed</name></name><operator pos:start="291:25" pos:end="291:25">=</operator><literal type="number" pos:start="291:26" pos:end="291:26">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="295:5" pos:end="295:64"><expr pos:start="295:5" pos:end="295:63"><name pos:start="295:5" pos:end="295:14"><name pos:start="295:5" pos:end="295:5">c</name><operator pos:start="295:6" pos:end="295:7">-&gt;</operator><name pos:start="295:8" pos:end="295:14">chrXInc</name></name><operator pos:start="295:15" pos:end="295:15">=</operator> <operator pos:start="295:17" pos:end="295:17">(</operator><operator pos:start="295:18" pos:end="295:18">(</operator><name pos:start="295:19" pos:end="295:28"><name pos:start="295:19" pos:end="295:19">c</name><operator pos:start="295:20" pos:end="295:21">-&gt;</operator><name pos:start="295:22" pos:end="295:28">chrSrcW</name></name><operator pos:start="295:29" pos:end="295:30">&lt;&lt;</operator><literal type="number" pos:start="295:31" pos:end="295:32">16</literal><operator pos:start="295:33" pos:end="295:33">)</operator> <operator pos:start="295:35" pos:end="295:35">+</operator> <operator pos:start="295:37" pos:end="295:37">(</operator><name pos:start="295:38" pos:end="295:47"><name pos:start="295:38" pos:end="295:38">c</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:47">chrDstW</name></name><operator pos:start="295:48" pos:end="295:49">&gt;&gt;</operator><literal type="number" pos:start="295:50" pos:end="295:50">1</literal><operator pos:start="295:51" pos:end="295:51">)</operator><operator pos:start="295:52" pos:end="295:52">)</operator><operator pos:start="295:53" pos:end="295:53">/</operator><name pos:start="295:54" pos:end="295:63"><name pos:start="295:54" pos:end="295:54">c</name><operator pos:start="295:55" pos:end="295:56">-&gt;</operator><name pos:start="295:57" pos:end="295:63">chrDstW</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="297:5" pos:end="297:64"><expr pos:start="297:5" pos:end="297:63"><name pos:start="297:5" pos:end="297:14"><name pos:start="297:5" pos:end="297:5">c</name><operator pos:start="297:6" pos:end="297:7">-&gt;</operator><name pos:start="297:8" pos:end="297:14">chrYInc</name></name><operator pos:start="297:15" pos:end="297:15">=</operator> <operator pos:start="297:17" pos:end="297:17">(</operator><operator pos:start="297:18" pos:end="297:18">(</operator><name pos:start="297:19" pos:end="297:28"><name pos:start="297:19" pos:end="297:19">c</name><operator pos:start="297:20" pos:end="297:21">-&gt;</operator><name pos:start="297:22" pos:end="297:28">chrSrcH</name></name><operator pos:start="297:29" pos:end="297:30">&lt;&lt;</operator><literal type="number" pos:start="297:31" pos:end="297:32">16</literal><operator pos:start="297:33" pos:end="297:33">)</operator> <operator pos:start="297:35" pos:end="297:35">+</operator> <operator pos:start="297:37" pos:end="297:37">(</operator><name pos:start="297:38" pos:end="297:47"><name pos:start="297:38" pos:end="297:38">c</name><operator pos:start="297:39" pos:end="297:40">-&gt;</operator><name pos:start="297:41" pos:end="297:47">chrDstH</name></name><operator pos:start="297:48" pos:end="297:49">&gt;&gt;</operator><literal type="number" pos:start="297:50" pos:end="297:50">1</literal><operator pos:start="297:51" pos:end="297:51">)</operator><operator pos:start="297:52" pos:end="297:52">)</operator><operator pos:start="297:53" pos:end="297:53">/</operator><name pos:start="297:54" pos:end="297:63"><name pos:start="297:54" pos:end="297:54">c</name><operator pos:start="297:55" pos:end="297:56">-&gt;</operator><name pos:start="297:57" pos:end="297:63">chrDstH</name></name></expr>;</expr_stmt>



    <comment type="line" pos:start="301:5" pos:end="301:96">// match pixel 0 of the src to pixel 0 of dst and match pixel n-2 of src to pixel n-2 of dst</comment>

    <comment type="line" pos:start="303:5" pos:end="303:71">// but only for the FAST_BILINEAR mode otherwise do correct scaling</comment>

    <comment type="line" pos:start="305:5" pos:end="305:51">// n-2 is the last chrominance sample available</comment>

    <comment type="line" pos:start="307:5" pos:end="307:93">// this is not perfect, but no one should notice the difference, the more correct variant</comment>

    <comment type="line" pos:start="309:5" pos:end="309:87">// would be like the vertical one, but that would require some special code for the</comment>

    <comment type="line" pos:start="311:5" pos:end="311:27">// first and last pixel</comment>

    <if_stmt pos:start="313:5" pos:end="333:5"><if pos:start="313:5" pos:end="333:5">if <condition pos:start="313:8" pos:end="313:32">(<expr pos:start="313:9" pos:end="313:31"><name pos:start="313:9" pos:end="313:13">flags</name><operator pos:start="313:14" pos:end="313:14">&amp;</operator><name pos:start="313:15" pos:end="313:31">SWS_FAST_BILINEAR</name></expr>)</condition> <block pos:start="313:34" pos:end="333:5">{<block_content pos:start="315:9" pos:end="331:9">

        <if_stmt pos:start="315:9" pos:end="331:9"><if pos:start="315:9" pos:end="321:9">if <condition pos:start="315:12" pos:end="315:29">(<expr pos:start="315:13" pos:end="315:28"><name pos:start="315:13" pos:end="315:28"><name pos:start="315:13" pos:end="315:13">c</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:28">canMMX2BeUsed</name></name></expr>)</condition> <block pos:start="315:31" pos:end="321:9">{<block_content pos:start="317:13" pos:end="319:28">

            <expr_stmt pos:start="317:13" pos:end="317:28"><expr pos:start="317:13" pos:end="317:27"><name pos:start="317:13" pos:end="317:22"><name pos:start="317:13" pos:end="317:13">c</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:22">lumXInc</name></name><operator pos:start="317:23" pos:end="317:24">+=</operator> <literal type="number" pos:start="317:26" pos:end="317:27">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="319:28"><expr pos:start="319:13" pos:end="319:27"><name pos:start="319:13" pos:end="319:22"><name pos:start="319:13" pos:end="319:13">c</name><operator pos:start="319:14" pos:end="319:15">-&gt;</operator><name pos:start="319:16" pos:end="319:22">chrXInc</name></name><operator pos:start="319:23" pos:end="319:24">+=</operator> <literal type="number" pos:start="319:26" pos:end="319:27">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if>

        <comment type="line" pos:start="323:9" pos:end="323:61">//we don't use the x86 asm scaler if MMX is available</comment>

        <if type="elseif" pos:start="325:9" pos:end="331:9">else if <condition pos:start="325:17" pos:end="325:42">(<expr pos:start="325:18" pos:end="325:41"><name pos:start="325:18" pos:end="325:22">flags</name> <operator pos:start="325:24" pos:end="325:24">&amp;</operator> <name pos:start="325:26" pos:end="325:41">SWS_CPU_CAPS_MMX</name></expr>)</condition> <block pos:start="325:44" pos:end="331:9">{<block_content pos:start="327:13" pos:end="329:66">

            <expr_stmt pos:start="327:13" pos:end="327:54"><expr pos:start="327:13" pos:end="327:53"><name pos:start="327:13" pos:end="327:22"><name pos:start="327:13" pos:end="327:13">c</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:22">lumXInc</name></name> <operator pos:start="327:24" pos:end="327:24">=</operator> <operator pos:start="327:26" pos:end="327:26">(</operator><operator pos:start="327:27" pos:end="327:27">(</operator><name pos:start="327:28" pos:end="327:31">srcW</name><operator pos:start="327:32" pos:end="327:32">-</operator><literal type="number" pos:start="327:33" pos:end="327:33">2</literal><operator pos:start="327:34" pos:end="327:34">)</operator><operator pos:start="327:35" pos:end="327:36">&lt;&lt;</operator><literal type="number" pos:start="327:37" pos:end="327:38">16</literal><operator pos:start="327:39" pos:end="327:39">)</operator><operator pos:start="327:40" pos:end="327:40">/</operator><operator pos:start="327:41" pos:end="327:41">(</operator><name pos:start="327:42" pos:end="327:45">dstW</name><operator pos:start="327:46" pos:end="327:46">-</operator><literal type="number" pos:start="327:47" pos:end="327:47">2</literal><operator pos:start="327:48" pos:end="327:48">)</operator> <operator pos:start="327:50" pos:end="327:50">-</operator> <literal type="number" pos:start="327:52" pos:end="327:53">20</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="329:13" pos:end="329:66"><expr pos:start="329:13" pos:end="329:65"><name pos:start="329:13" pos:end="329:22"><name pos:start="329:13" pos:end="329:13">c</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:22">chrXInc</name></name> <operator pos:start="329:24" pos:end="329:24">=</operator> <operator pos:start="329:26" pos:end="329:26">(</operator><operator pos:start="329:27" pos:end="329:27">(</operator><name pos:start="329:28" pos:end="329:37"><name pos:start="329:28" pos:end="329:28">c</name><operator pos:start="329:29" pos:end="329:30">-&gt;</operator><name pos:start="329:31" pos:end="329:37">chrSrcW</name></name><operator pos:start="329:38" pos:end="329:38">-</operator><literal type="number" pos:start="329:39" pos:end="329:39">2</literal><operator pos:start="329:40" pos:end="329:40">)</operator><operator pos:start="329:41" pos:end="329:42">&lt;&lt;</operator><literal type="number" pos:start="329:43" pos:end="329:44">16</literal><operator pos:start="329:45" pos:end="329:45">)</operator><operator pos:start="329:46" pos:end="329:46">/</operator><operator pos:start="329:47" pos:end="329:47">(</operator><name pos:start="329:48" pos:end="329:57"><name pos:start="329:48" pos:end="329:48">c</name><operator pos:start="329:49" pos:end="329:50">-&gt;</operator><name pos:start="329:51" pos:end="329:57">chrDstW</name></name><operator pos:start="329:58" pos:end="329:58">-</operator><literal type="number" pos:start="329:59" pos:end="329:59">2</literal><operator pos:start="329:60" pos:end="329:60">)</operator> <operator pos:start="329:62" pos:end="329:62">-</operator> <literal type="number" pos:start="329:64" pos:end="329:65">20</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="337:5" pos:end="337:60">/* precalculate horizontal scaler filter coefficients */</comment>

    <block pos:start="339:5" pos:end="437:5">{<block_content pos:start="345:9" pos:end="435:9">

<cpp:if pos:start="341:1" pos:end="341:69">#<cpp:directive pos:start="341:2" pos:end="341:3">if</cpp:directive> <expr pos:start="341:5" pos:end="341:69"><name pos:start="341:5" pos:end="341:12">ARCH_X86</name> <operator pos:start="341:14" pos:end="341:15">&amp;&amp;</operator> <operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:26">HAVE_MMX2</name> <operator pos:start="341:28" pos:end="341:29">||</operator> <name pos:start="341:31" pos:end="341:54">CONFIG_RUNTIME_CPUDETECT</name><operator pos:start="341:55" pos:end="341:55">)</operator> <operator pos:start="341:57" pos:end="341:58">&amp;&amp;</operator> <name pos:start="341:60" pos:end="341:69">CONFIG_GPL</name></expr></cpp:if>

<comment type="line" pos:start="343:1" pos:end="343:22">// can't downscale !!!</comment>

        <if_stmt pos:start="345:9" pos:end="435:9"><if pos:start="345:9" pos:end="401:9">if <condition pos:start="345:12" pos:end="345:60">(<expr pos:start="345:13" pos:end="345:59"><name pos:start="345:13" pos:end="345:28"><name pos:start="345:13" pos:end="345:13">c</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:28">canMMX2BeUsed</name></name> <operator pos:start="345:30" pos:end="345:31">&amp;&amp;</operator> <operator pos:start="345:33" pos:end="345:33">(</operator><name pos:start="345:34" pos:end="345:38">flags</name> <operator pos:start="345:40" pos:end="345:40">&amp;</operator> <name pos:start="345:42" pos:end="345:58">SWS_FAST_BILINEAR</name><operator pos:start="345:59" pos:end="345:59">)</operator></expr>)</condition> <block pos:start="345:62" pos:end="401:9">{<block_content pos:start="347:13" pos:end="400:0">

            <expr_stmt pos:start="347:13" pos:end="347:100"><expr pos:start="347:13" pos:end="347:99"><name pos:start="347:13" pos:end="347:36"><name pos:start="347:13" pos:end="347:13">c</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:36">lumMmx2FilterCodeSize</name></name> <operator pos:start="347:38" pos:end="347:38">=</operator> <call pos:start="347:40" pos:end="347:99"><name pos:start="347:40" pos:end="347:54">initMMX2HScaler</name><argument_list pos:start="347:55" pos:end="347:99">(      <argument pos:start="347:62" pos:end="347:65"><expr pos:start="347:62" pos:end="347:65"><name pos:start="347:62" pos:end="347:65">dstW</name></expr></argument>, <argument pos:start="347:68" pos:end="347:77"><expr pos:start="347:68" pos:end="347:77"><name pos:start="347:68" pos:end="347:77"><name pos:start="347:68" pos:end="347:68">c</name><operator pos:start="347:69" pos:end="347:70">-&gt;</operator><name pos:start="347:71" pos:end="347:77">lumXInc</name></name></expr></argument>, <argument pos:start="347:80" pos:end="347:83"><expr pos:start="347:80" pos:end="347:83"><name pos:start="347:80" pos:end="347:83">NULL</name></expr></argument>, <argument pos:start="347:86" pos:end="347:89"><expr pos:start="347:86" pos:end="347:89"><name pos:start="347:86" pos:end="347:89">NULL</name></expr></argument>, <argument pos:start="347:92" pos:end="347:95"><expr pos:start="347:92" pos:end="347:95"><name pos:start="347:92" pos:end="347:95">NULL</name></expr></argument>, <argument pos:start="347:98" pos:end="347:98"><expr pos:start="347:98" pos:end="347:98"><literal type="number" pos:start="347:98" pos:end="347:98">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="354:0"><expr pos:start="349:13" pos:end="349:99"><name pos:start="349:13" pos:end="349:36"><name pos:start="349:13" pos:end="349:13">c</name><operator pos:start="349:14" pos:end="349:15">-&gt;</operator><name pos:start="349:16" pos:end="349:36">chrMmx2FilterCodeSize</name></name> <operator pos:start="349:38" pos:end="349:38">=</operator> <call pos:start="349:40" pos:end="349:99"><name pos:start="349:40" pos:end="349:54">initMMX2HScaler</name><argument_list pos:start="349:55" pos:end="349:99">(<argument pos:start="349:56" pos:end="349:65"><expr pos:start="349:56" pos:end="349:65"><name pos:start="349:56" pos:end="349:65"><name pos:start="349:56" pos:end="349:56">c</name><operator pos:start="349:57" pos:end="349:58">-&gt;</operator><name pos:start="349:59" pos:end="349:65">chrDstW</name></name></expr></argument>, <argument pos:start="349:68" pos:end="349:77"><expr pos:start="349:68" pos:end="349:77"><name pos:start="349:68" pos:end="349:77"><name pos:start="349:68" pos:end="349:68">c</name><operator pos:start="349:69" pos:end="349:70">-&gt;</operator><name pos:start="349:71" pos:end="349:77">chrXInc</name></name></expr></argument>, <argument pos:start="349:80" pos:end="349:83"><expr pos:start="349:80" pos:end="349:83"><name pos:start="349:80" pos:end="349:83">NULL</name></expr></argument>, <argument pos:start="349:86" pos:end="349:89"><expr pos:start="349:86" pos:end="349:89"><name pos:start="349:86" pos:end="349:89">NULL</name></expr></argument>, <argument pos:start="349:92" pos:end="349:95"><expr pos:start="349:92" pos:end="349:95"><name pos:start="349:92" pos:end="349:95">NULL</name></expr></argument>, <argument pos:start="349:98" pos:end="349:98"><expr pos:start="349:98" pos:end="349:98"><literal type="number" pos:start="349:98" pos:end="349:98">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="353:1" pos:end="353:20">#<cpp:directive pos:start="353:2" pos:end="353:6">ifdef</cpp:directive> <name pos:start="353:8" pos:end="353:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="355:13" pos:end="355:131"><expr pos:start="355:13" pos:end="355:130"><name pos:start="355:13" pos:end="355:32"><name pos:start="355:13" pos:end="355:13">c</name><operator pos:start="355:14" pos:end="355:15">-&gt;</operator><name pos:start="355:16" pos:end="355:32">lumMmx2FilterCode</name></name> <operator pos:start="355:34" pos:end="355:34">=</operator> <call pos:start="355:36" pos:end="355:130"><name pos:start="355:36" pos:end="355:39">mmap</name><argument_list pos:start="355:40" pos:end="355:130">(<argument pos:start="355:41" pos:end="355:44"><expr pos:start="355:41" pos:end="355:44"><name pos:start="355:41" pos:end="355:44">NULL</name></expr></argument>, <argument pos:start="355:47" pos:end="355:70"><expr pos:start="355:47" pos:end="355:70"><name pos:start="355:47" pos:end="355:70"><name pos:start="355:47" pos:end="355:47">c</name><operator pos:start="355:48" pos:end="355:49">-&gt;</operator><name pos:start="355:50" pos:end="355:70">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="355:73" pos:end="355:94"><expr pos:start="355:73" pos:end="355:94"><name pos:start="355:73" pos:end="355:81">PROT_READ</name> <operator pos:start="355:83" pos:end="355:83">|</operator> <name pos:start="355:85" pos:end="355:94">PROT_WRITE</name></expr></argument>, <argument pos:start="355:97" pos:end="355:123"><expr pos:start="355:97" pos:end="355:123"><name pos:start="355:97" pos:end="355:107">MAP_PRIVATE</name> <operator pos:start="355:109" pos:end="355:109">|</operator> <name pos:start="355:111" pos:end="355:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="355:126" pos:end="355:126"><expr pos:start="355:126" pos:end="355:126"><literal type="number" pos:start="355:126" pos:end="355:126">0</literal></expr></argument>, <argument pos:start="355:129" pos:end="355:129"><expr pos:start="355:129" pos:end="355:129"><literal type="number" pos:start="355:129" pos:end="355:129">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="360:0"><expr pos:start="357:13" pos:end="357:130"><name pos:start="357:13" pos:end="357:32"><name pos:start="357:13" pos:end="357:13">c</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:32">chrMmx2FilterCode</name></name> <operator pos:start="357:34" pos:end="357:34">=</operator> <call pos:start="357:36" pos:end="357:130"><name pos:start="357:36" pos:end="357:39">mmap</name><argument_list pos:start="357:40" pos:end="357:130">(<argument pos:start="357:41" pos:end="357:44"><expr pos:start="357:41" pos:end="357:44"><name pos:start="357:41" pos:end="357:44">NULL</name></expr></argument>, <argument pos:start="357:47" pos:end="357:70"><expr pos:start="357:47" pos:end="357:70"><name pos:start="357:47" pos:end="357:70"><name pos:start="357:47" pos:end="357:47">c</name><operator pos:start="357:48" pos:end="357:49">-&gt;</operator><name pos:start="357:50" pos:end="357:70">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="357:73" pos:end="357:94"><expr pos:start="357:73" pos:end="357:94"><name pos:start="357:73" pos:end="357:81">PROT_READ</name> <operator pos:start="357:83" pos:end="357:83">|</operator> <name pos:start="357:85" pos:end="357:94">PROT_WRITE</name></expr></argument>, <argument pos:start="357:97" pos:end="357:123"><expr pos:start="357:97" pos:end="357:123"><name pos:start="357:97" pos:end="357:107">MAP_PRIVATE</name> <operator pos:start="357:109" pos:end="357:109">|</operator> <name pos:start="357:111" pos:end="357:123">MAP_ANONYMOUS</name></expr></argument>, <argument pos:start="357:126" pos:end="357:126"><expr pos:start="357:126" pos:end="357:126"><literal type="number" pos:start="357:126" pos:end="357:126">0</literal></expr></argument>, <argument pos:start="357:129" pos:end="357:129"><expr pos:start="357:129" pos:end="357:129"><literal type="number" pos:start="357:129" pos:end="357:129">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:elif pos:start="359:1" pos:end="359:23">#<cpp:directive pos:start="359:2" pos:end="359:5">elif</cpp:directive> <expr pos:start="359:7" pos:end="359:23"><name pos:start="359:7" pos:end="359:23">HAVE_VIRTUALALLOC</name></expr></cpp:elif>

            <expr_stmt pos:start="361:13" pos:end="361:116"><expr pos:start="361:13" pos:end="361:115"><name pos:start="361:13" pos:end="361:32"><name pos:start="361:13" pos:end="361:13">c</name><operator pos:start="361:14" pos:end="361:15">-&gt;</operator><name pos:start="361:16" pos:end="361:32">lumMmx2FilterCode</name></name> <operator pos:start="361:34" pos:end="361:34">=</operator> <call pos:start="361:36" pos:end="361:115"><name pos:start="361:36" pos:end="361:47">VirtualAlloc</name><argument_list pos:start="361:48" pos:end="361:115">(<argument pos:start="361:49" pos:end="361:52"><expr pos:start="361:49" pos:end="361:52"><name pos:start="361:49" pos:end="361:52">NULL</name></expr></argument>, <argument pos:start="361:55" pos:end="361:78"><expr pos:start="361:55" pos:end="361:78"><name pos:start="361:55" pos:end="361:78"><name pos:start="361:55" pos:end="361:55">c</name><operator pos:start="361:56" pos:end="361:57">-&gt;</operator><name pos:start="361:58" pos:end="361:78">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="361:81" pos:end="361:90"><expr pos:start="361:81" pos:end="361:90"><name pos:start="361:81" pos:end="361:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="361:93" pos:end="361:114"><expr pos:start="361:93" pos:end="361:114"><name pos:start="361:93" pos:end="361:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="366:0"><expr pos:start="363:13" pos:end="363:115"><name pos:start="363:13" pos:end="363:32"><name pos:start="363:13" pos:end="363:13">c</name><operator pos:start="363:14" pos:end="363:15">-&gt;</operator><name pos:start="363:16" pos:end="363:32">chrMmx2FilterCode</name></name> <operator pos:start="363:34" pos:end="363:34">=</operator> <call pos:start="363:36" pos:end="363:115"><name pos:start="363:36" pos:end="363:47">VirtualAlloc</name><argument_list pos:start="363:48" pos:end="363:115">(<argument pos:start="363:49" pos:end="363:52"><expr pos:start="363:49" pos:end="363:52"><name pos:start="363:49" pos:end="363:52">NULL</name></expr></argument>, <argument pos:start="363:55" pos:end="363:78"><expr pos:start="363:55" pos:end="363:78"><name pos:start="363:55" pos:end="363:78"><name pos:start="363:55" pos:end="363:55">c</name><operator pos:start="363:56" pos:end="363:57">-&gt;</operator><name pos:start="363:58" pos:end="363:78">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="363:81" pos:end="363:90"><expr pos:start="363:81" pos:end="363:90"><name pos:start="363:81" pos:end="363:90">MEM_COMMIT</name></expr></argument>, <argument pos:start="363:93" pos:end="363:114"><expr pos:start="363:93" pos:end="363:114"><name pos:start="363:93" pos:end="363:114">PAGE_EXECUTE_READWRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="365:1" pos:end="365:5">#<cpp:directive pos:start="365:2" pos:end="365:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="367:13" pos:end="367:71"><expr pos:start="367:13" pos:end="367:70"><name pos:start="367:13" pos:end="367:32"><name pos:start="367:13" pos:end="367:13">c</name><operator pos:start="367:14" pos:end="367:15">-&gt;</operator><name pos:start="367:16" pos:end="367:32">lumMmx2FilterCode</name></name> <operator pos:start="367:34" pos:end="367:34">=</operator> <call pos:start="367:36" pos:end="367:70"><name pos:start="367:36" pos:end="367:44">av_malloc</name><argument_list pos:start="367:45" pos:end="367:70">(<argument pos:start="367:46" pos:end="367:69"><expr pos:start="367:46" pos:end="367:69"><name pos:start="367:46" pos:end="367:69"><name pos:start="367:46" pos:end="367:46">c</name><operator pos:start="367:47" pos:end="367:48">-&gt;</operator><name pos:start="367:49" pos:end="367:69">lumMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="369:13" pos:end="372:0"><expr pos:start="369:13" pos:end="369:70"><name pos:start="369:13" pos:end="369:32"><name pos:start="369:13" pos:end="369:13">c</name><operator pos:start="369:14" pos:end="369:15">-&gt;</operator><name pos:start="369:16" pos:end="369:32">chrMmx2FilterCode</name></name> <operator pos:start="369:34" pos:end="369:34">=</operator> <call pos:start="369:36" pos:end="369:70"><name pos:start="369:36" pos:end="369:44">av_malloc</name><argument_list pos:start="369:45" pos:end="369:70">(<argument pos:start="369:46" pos:end="369:69"><expr pos:start="369:46" pos:end="369:69"><name pos:start="369:46" pos:end="369:69"><name pos:start="369:46" pos:end="369:46">c</name><operator pos:start="369:47" pos:end="369:48">-&gt;</operator><name pos:start="369:49" pos:end="369:69">chrMmx2FilterCodeSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="371:1" pos:end="371:6">#<cpp:directive pos:start="371:2" pos:end="371:6">endif</cpp:directive></cpp:endif>





            <expr_stmt pos:start="377:13" pos:end="377:93"><expr pos:start="377:13" pos:end="377:92"><call pos:start="377:13" pos:end="377:92"><name pos:start="377:13" pos:end="377:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="377:30" pos:end="377:92">(<argument pos:start="377:31" pos:end="377:31"><expr pos:start="377:31" pos:end="377:31"><name pos:start="377:31" pos:end="377:31">c</name></expr></argument>, <argument pos:start="377:34" pos:end="377:46"><expr pos:start="377:34" pos:end="377:46"><name pos:start="377:34" pos:end="377:46"><name pos:start="377:34" pos:end="377:34">c</name><operator pos:start="377:35" pos:end="377:36">-&gt;</operator><name pos:start="377:37" pos:end="377:46">hLumFilter</name></name></expr></argument>   , <argument pos:start="377:52" pos:end="377:85"><expr pos:start="377:52" pos:end="377:85"><operator pos:start="377:52" pos:end="377:52">(</operator><name pos:start="377:53" pos:end="377:56">dstW</name>        <operator pos:start="377:65" pos:end="377:65">/</operator><literal type="number" pos:start="377:66" pos:end="377:67">8</literal><operator pos:start="377:67" pos:end="377:67">+</operator><literal type="number" pos:start="377:68" pos:end="377:68">8</literal><operator pos:start="377:69" pos:end="377:69">)</operator><operator pos:start="377:70" pos:end="377:70">*</operator><sizeof pos:start="377:71" pos:end="377:85">sizeof<argument_list pos:start="377:77" pos:end="377:85">(<argument pos:start="377:78" pos:end="377:84"><expr pos:start="377:78" pos:end="377:84"><name pos:start="377:78" pos:end="377:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="377:88" pos:end="377:91"><expr pos:start="377:88" pos:end="377:91"><name pos:start="377:88" pos:end="377:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="379:13" pos:end="379:93"><expr pos:start="379:13" pos:end="379:92"><call pos:start="379:13" pos:end="379:92"><name pos:start="379:13" pos:end="379:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="379:30" pos:end="379:92">(<argument pos:start="379:31" pos:end="379:31"><expr pos:start="379:31" pos:end="379:31"><name pos:start="379:31" pos:end="379:31">c</name></expr></argument>, <argument pos:start="379:34" pos:end="379:46"><expr pos:start="379:34" pos:end="379:46"><name pos:start="379:34" pos:end="379:46"><name pos:start="379:34" pos:end="379:34">c</name><operator pos:start="379:35" pos:end="379:36">-&gt;</operator><name pos:start="379:37" pos:end="379:46">hChrFilter</name></name></expr></argument>   , <argument pos:start="379:52" pos:end="379:85"><expr pos:start="379:52" pos:end="379:85"><operator pos:start="379:52" pos:end="379:52">(</operator><name pos:start="379:53" pos:end="379:62"><name pos:start="379:53" pos:end="379:53">c</name><operator pos:start="379:54" pos:end="379:55">-&gt;</operator><name pos:start="379:56" pos:end="379:62">chrDstW</name></name>  <operator pos:start="379:65" pos:end="379:65">/</operator><literal type="number" pos:start="379:66" pos:end="379:67">4</literal><operator pos:start="379:67" pos:end="379:67">+</operator><literal type="number" pos:start="379:68" pos:end="379:68">8</literal><operator pos:start="379:69" pos:end="379:69">)</operator><operator pos:start="379:70" pos:end="379:70">*</operator><sizeof pos:start="379:71" pos:end="379:85">sizeof<argument_list pos:start="379:77" pos:end="379:85">(<argument pos:start="379:78" pos:end="379:84"><expr pos:start="379:78" pos:end="379:84"><name pos:start="379:78" pos:end="379:84">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="379:88" pos:end="379:91"><expr pos:start="379:88" pos:end="379:91"><name pos:start="379:88" pos:end="379:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="381:13" pos:end="381:93"><expr pos:start="381:13" pos:end="381:92"><call pos:start="381:13" pos:end="381:92"><name pos:start="381:13" pos:end="381:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="381:30" pos:end="381:92">(<argument pos:start="381:31" pos:end="381:31"><expr pos:start="381:31" pos:end="381:31"><name pos:start="381:31" pos:end="381:31">c</name></expr></argument>, <argument pos:start="381:34" pos:end="381:49"><expr pos:start="381:34" pos:end="381:49"><name pos:start="381:34" pos:end="381:49"><name pos:start="381:34" pos:end="381:34">c</name><operator pos:start="381:35" pos:end="381:36">-&gt;</operator><name pos:start="381:37" pos:end="381:49">hLumFilterPos</name></name></expr></argument>, <argument pos:start="381:52" pos:end="381:85"><expr pos:start="381:52" pos:end="381:85"><operator pos:start="381:52" pos:end="381:52">(</operator><name pos:start="381:53" pos:end="381:56">dstW</name>      <operator pos:start="381:63" pos:end="381:63">/</operator><literal type="number" pos:start="381:64" pos:end="381:64">2</literal><operator pos:start="381:65" pos:end="381:65">/</operator><literal type="number" pos:start="381:66" pos:end="381:67">8</literal><operator pos:start="381:67" pos:end="381:67">+</operator><literal type="number" pos:start="381:68" pos:end="381:68">8</literal><operator pos:start="381:69" pos:end="381:69">)</operator><operator pos:start="381:70" pos:end="381:70">*</operator><sizeof pos:start="381:71" pos:end="381:85">sizeof<argument_list pos:start="381:77" pos:end="381:85">(<argument pos:start="381:78" pos:end="381:84"><expr pos:start="381:78" pos:end="381:84"><name pos:start="381:78" pos:end="381:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="381:88" pos:end="381:91"><expr pos:start="381:88" pos:end="381:91"><name pos:start="381:88" pos:end="381:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="383:13" pos:end="383:93"><expr pos:start="383:13" pos:end="383:92"><call pos:start="383:13" pos:end="383:92"><name pos:start="383:13" pos:end="383:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="383:30" pos:end="383:92">(<argument pos:start="383:31" pos:end="383:31"><expr pos:start="383:31" pos:end="383:31"><name pos:start="383:31" pos:end="383:31">c</name></expr></argument>, <argument pos:start="383:34" pos:end="383:49"><expr pos:start="383:34" pos:end="383:49"><name pos:start="383:34" pos:end="383:49"><name pos:start="383:34" pos:end="383:34">c</name><operator pos:start="383:35" pos:end="383:36">-&gt;</operator><name pos:start="383:37" pos:end="383:49">hChrFilterPos</name></name></expr></argument>, <argument pos:start="383:52" pos:end="383:85"><expr pos:start="383:52" pos:end="383:85"><operator pos:start="383:52" pos:end="383:52">(</operator><name pos:start="383:53" pos:end="383:62"><name pos:start="383:53" pos:end="383:53">c</name><operator pos:start="383:54" pos:end="383:55">-&gt;</operator><name pos:start="383:56" pos:end="383:62">chrDstW</name></name><operator pos:start="383:63" pos:end="383:63">/</operator><literal type="number" pos:start="383:64" pos:end="383:64">2</literal><operator pos:start="383:65" pos:end="383:65">/</operator><literal type="number" pos:start="383:66" pos:end="383:67">4</literal><operator pos:start="383:67" pos:end="383:67">+</operator><literal type="number" pos:start="383:68" pos:end="383:68">8</literal><operator pos:start="383:69" pos:end="383:69">)</operator><operator pos:start="383:70" pos:end="383:70">*</operator><sizeof pos:start="383:71" pos:end="383:85">sizeof<argument_list pos:start="383:77" pos:end="383:85">(<argument pos:start="383:78" pos:end="383:84"><expr pos:start="383:78" pos:end="383:84"><name pos:start="383:78" pos:end="383:84">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="383:88" pos:end="383:91"><expr pos:start="383:88" pos:end="383:91"><name pos:start="383:88" pos:end="383:91">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="387:13" pos:end="387:110"><expr pos:start="387:13" pos:end="387:109"><call pos:start="387:13" pos:end="387:109"><name pos:start="387:13" pos:end="387:27">initMMX2HScaler</name><argument_list pos:start="387:28" pos:end="387:109">(      <argument pos:start="387:35" pos:end="387:38"><expr pos:start="387:35" pos:end="387:38"><name pos:start="387:35" pos:end="387:38">dstW</name></expr></argument>, <argument pos:start="387:41" pos:end="387:50"><expr pos:start="387:41" pos:end="387:50"><name pos:start="387:41" pos:end="387:50"><name pos:start="387:41" pos:end="387:41">c</name><operator pos:start="387:42" pos:end="387:43">-&gt;</operator><name pos:start="387:44" pos:end="387:50">lumXInc</name></name></expr></argument>, <argument pos:start="387:53" pos:end="387:72"><expr pos:start="387:53" pos:end="387:72"><name pos:start="387:53" pos:end="387:72"><name pos:start="387:53" pos:end="387:53">c</name><operator pos:start="387:54" pos:end="387:55">-&gt;</operator><name pos:start="387:56" pos:end="387:72">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="387:75" pos:end="387:87"><expr pos:start="387:75" pos:end="387:87"><name pos:start="387:75" pos:end="387:87"><name pos:start="387:75" pos:end="387:75">c</name><operator pos:start="387:76" pos:end="387:77">-&gt;</operator><name pos:start="387:78" pos:end="387:87">hLumFilter</name></name></expr></argument>, <argument pos:start="387:90" pos:end="387:105"><expr pos:start="387:90" pos:end="387:105"><name pos:start="387:90" pos:end="387:105"><name pos:start="387:90" pos:end="387:90">c</name><operator pos:start="387:91" pos:end="387:92">-&gt;</operator><name pos:start="387:93" pos:end="387:105">hLumFilterPos</name></name></expr></argument>, <argument pos:start="387:108" pos:end="387:108"><expr pos:start="387:108" pos:end="387:108"><literal type="number" pos:start="387:108" pos:end="387:108">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="394:0"><expr pos:start="389:13" pos:end="389:109"><call pos:start="389:13" pos:end="389:109"><name pos:start="389:13" pos:end="389:27">initMMX2HScaler</name><argument_list pos:start="389:28" pos:end="389:109">(<argument pos:start="389:29" pos:end="389:38"><expr pos:start="389:29" pos:end="389:38"><name pos:start="389:29" pos:end="389:38"><name pos:start="389:29" pos:end="389:29">c</name><operator pos:start="389:30" pos:end="389:31">-&gt;</operator><name pos:start="389:32" pos:end="389:38">chrDstW</name></name></expr></argument>, <argument pos:start="389:41" pos:end="389:50"><expr pos:start="389:41" pos:end="389:50"><name pos:start="389:41" pos:end="389:50"><name pos:start="389:41" pos:end="389:41">c</name><operator pos:start="389:42" pos:end="389:43">-&gt;</operator><name pos:start="389:44" pos:end="389:50">chrXInc</name></name></expr></argument>, <argument pos:start="389:53" pos:end="389:72"><expr pos:start="389:53" pos:end="389:72"><name pos:start="389:53" pos:end="389:72"><name pos:start="389:53" pos:end="389:53">c</name><operator pos:start="389:54" pos:end="389:55">-&gt;</operator><name pos:start="389:56" pos:end="389:72">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="389:75" pos:end="389:87"><expr pos:start="389:75" pos:end="389:87"><name pos:start="389:75" pos:end="389:87"><name pos:start="389:75" pos:end="389:75">c</name><operator pos:start="389:76" pos:end="389:77">-&gt;</operator><name pos:start="389:78" pos:end="389:87">hChrFilter</name></name></expr></argument>, <argument pos:start="389:90" pos:end="389:105"><expr pos:start="389:90" pos:end="389:105"><name pos:start="389:90" pos:end="389:105"><name pos:start="389:90" pos:end="389:90">c</name><operator pos:start="389:91" pos:end="389:92">-&gt;</operator><name pos:start="389:93" pos:end="389:105">hChrFilterPos</name></name></expr></argument>, <argument pos:start="389:108" pos:end="389:108"><expr pos:start="389:108" pos:end="389:108"><literal type="number" pos:start="389:108" pos:end="389:108">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:ifdef pos:start="393:1" pos:end="393:20">#<cpp:directive pos:start="393:2" pos:end="393:6">ifdef</cpp:directive> <name pos:start="393:8" pos:end="393:20">MAP_ANONYMOUS</name></cpp:ifdef>

            <expr_stmt pos:start="395:13" pos:end="395:92"><expr pos:start="395:13" pos:end="395:91"><call pos:start="395:13" pos:end="395:91"><name pos:start="395:13" pos:end="395:20">mprotect</name><argument_list pos:start="395:21" pos:end="395:91">(<argument pos:start="395:22" pos:end="395:41"><expr pos:start="395:22" pos:end="395:41"><name pos:start="395:22" pos:end="395:41"><name pos:start="395:22" pos:end="395:22">c</name><operator pos:start="395:23" pos:end="395:24">-&gt;</operator><name pos:start="395:25" pos:end="395:41">lumMmx2FilterCode</name></name></expr></argument>, <argument pos:start="395:44" pos:end="395:67"><expr pos:start="395:44" pos:end="395:67"><name pos:start="395:44" pos:end="395:67"><name pos:start="395:44" pos:end="395:44">c</name><operator pos:start="395:45" pos:end="395:46">-&gt;</operator><name pos:start="395:47" pos:end="395:67">lumMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="395:70" pos:end="395:90"><expr pos:start="395:70" pos:end="395:90"><name pos:start="395:70" pos:end="395:78">PROT_EXEC</name> <operator pos:start="395:80" pos:end="395:80">|</operator> <name pos:start="395:82" pos:end="395:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="397:13" pos:end="400:0"><expr pos:start="397:13" pos:end="397:91"><call pos:start="397:13" pos:end="397:91"><name pos:start="397:13" pos:end="397:20">mprotect</name><argument_list pos:start="397:21" pos:end="397:91">(<argument pos:start="397:22" pos:end="397:41"><expr pos:start="397:22" pos:end="397:41"><name pos:start="397:22" pos:end="397:41"><name pos:start="397:22" pos:end="397:22">c</name><operator pos:start="397:23" pos:end="397:24">-&gt;</operator><name pos:start="397:25" pos:end="397:41">chrMmx2FilterCode</name></name></expr></argument>, <argument pos:start="397:44" pos:end="397:67"><expr pos:start="397:44" pos:end="397:67"><name pos:start="397:44" pos:end="397:67"><name pos:start="397:44" pos:end="397:44">c</name><operator pos:start="397:45" pos:end="397:46">-&gt;</operator><name pos:start="397:47" pos:end="397:67">chrMmx2FilterCodeSize</name></name></expr></argument>, <argument pos:start="397:70" pos:end="397:90"><expr pos:start="397:70" pos:end="397:90"><name pos:start="397:70" pos:end="397:78">PROT_EXEC</name> <operator pos:start="397:80" pos:end="397:80">|</operator> <name pos:start="397:82" pos:end="397:90">PROT_READ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="399:1" pos:end="399:6">#<cpp:directive pos:start="399:2" pos:end="399:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="401:11" pos:end="435:9">else

<cpp:endif pos:start="403:1" pos:end="403:6">#<cpp:directive pos:start="403:2" pos:end="403:6">endif</cpp:directive></cpp:endif> <comment type="block" pos:start="403:8" pos:end="403:78">/* ARCH_X86 &amp;&amp; (HAVE_MMX2 || CONFIG_RUNTIME_CPUDETECT) &amp;&amp; CONFIG_GPL */</comment>

        <block pos:start="405:9" pos:end="435:9">{<block_content pos:start="407:13" pos:end="432:75">

            <decl_stmt pos:start="407:13" pos:end="413:18"><decl pos:start="407:13" pos:end="413:17"><type pos:start="407:13" pos:end="407:21"><specifier pos:start="407:13" pos:end="407:17">const</specifier> <name pos:start="407:19" pos:end="407:21">int</name></type> <name pos:start="407:23" pos:end="407:33">filterAlign</name><init pos:start="407:34" pos:end="413:17">=

                <expr pos:start="409:17" pos:end="413:17"><ternary pos:start="409:17" pos:end="413:17"><condition pos:start="409:17" pos:end="409:44"><expr pos:start="409:17" pos:end="409:42"><operator pos:start="409:17" pos:end="409:17">(</operator><name pos:start="409:18" pos:end="409:22">flags</name> <operator pos:start="409:24" pos:end="409:24">&amp;</operator> <name pos:start="409:26" pos:end="409:41">SWS_CPU_CAPS_MMX</name><operator pos:start="409:42" pos:end="409:42">)</operator></expr> ?</condition><then pos:start="409:46" pos:end="409:46"> <expr pos:start="409:46" pos:end="409:46"><literal type="number" pos:start="409:46" pos:end="409:46">4</literal></expr> </then><else pos:start="409:48" pos:end="413:17">:

                <expr pos:start="411:17" pos:end="413:17"><ternary pos:start="411:17" pos:end="413:17"><condition pos:start="411:17" pos:end="411:48"><expr pos:start="411:17" pos:end="411:46"><operator pos:start="411:17" pos:end="411:17">(</operator><name pos:start="411:18" pos:end="411:22">flags</name> <operator pos:start="411:24" pos:end="411:24">&amp;</operator> <name pos:start="411:26" pos:end="411:45">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="411:46" pos:end="411:46">)</operator></expr> ?</condition><then pos:start="411:50" pos:end="411:50"> <expr pos:start="411:50" pos:end="411:50"><literal type="number" pos:start="411:50" pos:end="411:50">8</literal></expr> </then><else pos:start="411:52" pos:end="413:17">:

                <expr pos:start="413:17" pos:end="413:17"><literal type="number" pos:start="413:17" pos:end="413:17">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="417:13" pos:end="432:75"><if pos:start="417:13" pos:end="432:75">if <condition pos:start="417:16" pos:end="423:75">(<expr pos:start="417:17" pos:end="423:74"><call pos:start="417:17" pos:end="423:70"><name pos:start="417:17" pos:end="417:26">initFilter</name><argument_list pos:start="417:27" pos:end="423:70">(<argument pos:start="417:28" pos:end="417:41"><expr pos:start="417:28" pos:end="417:41"><operator pos:start="417:28" pos:end="417:28">&amp;</operator><name pos:start="417:29" pos:end="417:41"><name pos:start="417:29" pos:end="417:29">c</name><operator pos:start="417:30" pos:end="417:31">-&gt;</operator><name pos:start="417:32" pos:end="417:41">hLumFilter</name></name></expr></argument>, <argument pos:start="417:44" pos:end="417:60"><expr pos:start="417:44" pos:end="417:60"><operator pos:start="417:44" pos:end="417:44">&amp;</operator><name pos:start="417:45" pos:end="417:60"><name pos:start="417:45" pos:end="417:45">c</name><operator pos:start="417:46" pos:end="417:47">-&gt;</operator><name pos:start="417:48" pos:end="417:60">hLumFilterPos</name></name></expr></argument>, <argument pos:start="417:63" pos:end="417:80"><expr pos:start="417:63" pos:end="417:80"><operator pos:start="417:63" pos:end="417:63">&amp;</operator><name pos:start="417:64" pos:end="417:80"><name pos:start="417:64" pos:end="417:64">c</name><operator pos:start="417:65" pos:end="417:66">-&gt;</operator><name pos:start="417:67" pos:end="417:80">hLumFilterSize</name></name></expr></argument>, <argument pos:start="417:83" pos:end="417:92"><expr pos:start="417:83" pos:end="417:92"><name pos:start="417:83" pos:end="417:92"><name pos:start="417:83" pos:end="417:83">c</name><operator pos:start="417:84" pos:end="417:85">-&gt;</operator><name pos:start="417:86" pos:end="417:92">lumXInc</name></name></expr></argument>,

                           <argument pos:start="419:28" pos:end="419:31"><expr pos:start="419:28" pos:end="419:31"><name pos:start="419:28" pos:end="419:31">srcW</name></expr></argument>      ,       <argument pos:start="419:46" pos:end="419:49"><expr pos:start="419:46" pos:end="419:49"><name pos:start="419:46" pos:end="419:49">dstW</name></expr></argument>, <argument pos:start="419:52" pos:end="419:62"><expr pos:start="419:52" pos:end="419:62"><name pos:start="419:52" pos:end="419:62">filterAlign</name></expr></argument>, <argument pos:start="419:65" pos:end="419:69"><expr pos:start="419:65" pos:end="419:69"><literal type="number" pos:start="419:65" pos:end="419:65">1</literal><operator pos:start="419:66" pos:end="419:67">&lt;&lt;</operator><literal type="number" pos:start="419:68" pos:end="419:69">14</literal></expr></argument>,

                           <argument pos:start="421:28" pos:end="421:78"><expr pos:start="421:28" pos:end="421:78"><ternary pos:start="421:28" pos:end="421:78"><condition pos:start="421:28" pos:end="421:49"><expr pos:start="421:28" pos:end="421:47"><operator pos:start="421:28" pos:end="421:28">(</operator><name pos:start="421:29" pos:end="421:33">flags</name><operator pos:start="421:34" pos:end="421:34">&amp;</operator><name pos:start="421:35" pos:end="421:46">SWS_BICUBLIN</name><operator pos:start="421:47" pos:end="421:47">)</operator></expr> ?</condition><then pos:start="421:51" pos:end="421:69"> <expr pos:start="421:51" pos:end="421:69"><operator pos:start="421:51" pos:end="421:51">(</operator><name pos:start="421:52" pos:end="421:56">flags</name><operator pos:start="421:57" pos:end="421:57">|</operator><name pos:start="421:58" pos:end="421:68">SWS_BICUBIC</name><operator pos:start="421:69" pos:end="421:69">)</operator></expr>  </then><else pos:start="421:72" pos:end="421:78">: <expr pos:start="421:74" pos:end="421:78"><name pos:start="421:74" pos:end="421:78">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="423:28" pos:end="423:42"><expr pos:start="423:28" pos:end="423:42"><name pos:start="423:28" pos:end="423:42"><name pos:start="423:28" pos:end="423:36">srcFilter</name><operator pos:start="423:37" pos:end="423:38">-&gt;</operator><name pos:start="423:39" pos:end="423:42">lumH</name></name></expr></argument>, <argument pos:start="423:45" pos:end="423:59"><expr pos:start="423:45" pos:end="423:59"><name pos:start="423:45" pos:end="423:59"><name pos:start="423:45" pos:end="423:53">dstFilter</name><operator pos:start="423:54" pos:end="423:55">-&gt;</operator><name pos:start="423:56" pos:end="423:59">lumH</name></name></expr></argument>, <argument pos:start="423:62" pos:end="423:69"><expr pos:start="423:62" pos:end="423:69"><name pos:start="423:62" pos:end="423:69"><name pos:start="423:62" pos:end="423:62">c</name><operator pos:start="423:63" pos:end="423:64">-&gt;</operator><name pos:start="423:65" pos:end="423:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="423:72" pos:end="423:72">&lt;</operator> <literal type="number" pos:start="423:74" pos:end="423:74">0</literal></expr>)</condition><block type="pseudo" pos:start="426:13" pos:end="432:75"><block_content pos:start="426:13" pos:end="432:75">


            <if_stmt pos:start="426:13" pos:end="432:75"><if pos:start="426:13" pos:end="432:75">if <condition pos:start="426:16" pos:end="432:75">(<expr pos:start="426:17" pos:end="432:74"><call pos:start="426:17" pos:end="432:70"><name pos:start="426:17" pos:end="426:26">initFilter</name><argument_list pos:start="426:27" pos:end="432:70">(<argument pos:start="426:28" pos:end="426:41"><expr pos:start="426:28" pos:end="426:41"><operator pos:start="426:28" pos:end="426:28">&amp;</operator><name pos:start="426:29" pos:end="426:41"><name pos:start="426:29" pos:end="426:29">c</name><operator pos:start="426:30" pos:end="426:31">-&gt;</operator><name pos:start="426:32" pos:end="426:41">hChrFilter</name></name></expr></argument>, <argument pos:start="426:44" pos:end="426:60"><expr pos:start="426:44" pos:end="426:60"><operator pos:start="426:44" pos:end="426:44">&amp;</operator><name pos:start="426:45" pos:end="426:60"><name pos:start="426:45" pos:end="426:45">c</name><operator pos:start="426:46" pos:end="426:47">-&gt;</operator><name pos:start="426:48" pos:end="426:60">hChrFilterPos</name></name></expr></argument>, <argument pos:start="426:63" pos:end="426:80"><expr pos:start="426:63" pos:end="426:80"><operator pos:start="426:63" pos:end="426:63">&amp;</operator><name pos:start="426:64" pos:end="426:80"><name pos:start="426:64" pos:end="426:64">c</name><operator pos:start="426:65" pos:end="426:66">-&gt;</operator><name pos:start="426:67" pos:end="426:80">hChrFilterSize</name></name></expr></argument>, <argument pos:start="426:83" pos:end="426:92"><expr pos:start="426:83" pos:end="426:92"><name pos:start="426:83" pos:end="426:92"><name pos:start="426:83" pos:end="426:83">c</name><operator pos:start="426:84" pos:end="426:85">-&gt;</operator><name pos:start="426:86" pos:end="426:92">chrXInc</name></name></expr></argument>,

                           <argument pos:start="428:28" pos:end="428:37"><expr pos:start="428:28" pos:end="428:37"><name pos:start="428:28" pos:end="428:37"><name pos:start="428:28" pos:end="428:28">c</name><operator pos:start="428:29" pos:end="428:30">-&gt;</operator><name pos:start="428:31" pos:end="428:37">chrSrcW</name></name></expr></argument>, <argument pos:start="428:40" pos:end="428:49"><expr pos:start="428:40" pos:end="428:49"><name pos:start="428:40" pos:end="428:49"><name pos:start="428:40" pos:end="428:40">c</name><operator pos:start="428:41" pos:end="428:42">-&gt;</operator><name pos:start="428:43" pos:end="428:49">chrDstW</name></name></expr></argument>, <argument pos:start="428:52" pos:end="428:62"><expr pos:start="428:52" pos:end="428:62"><name pos:start="428:52" pos:end="428:62">filterAlign</name></expr></argument>, <argument pos:start="428:65" pos:end="428:69"><expr pos:start="428:65" pos:end="428:69"><literal type="number" pos:start="428:65" pos:end="428:65">1</literal><operator pos:start="428:66" pos:end="428:67">&lt;&lt;</operator><literal type="number" pos:start="428:68" pos:end="428:69">14</literal></expr></argument>,

                           <argument pos:start="430:28" pos:end="430:78"><expr pos:start="430:28" pos:end="430:78"><ternary pos:start="430:28" pos:end="430:78"><condition pos:start="430:28" pos:end="430:49"><expr pos:start="430:28" pos:end="430:47"><operator pos:start="430:28" pos:end="430:28">(</operator><name pos:start="430:29" pos:end="430:33">flags</name><operator pos:start="430:34" pos:end="430:34">&amp;</operator><name pos:start="430:35" pos:end="430:46">SWS_BICUBLIN</name><operator pos:start="430:47" pos:end="430:47">)</operator></expr> ?</condition><then pos:start="430:51" pos:end="430:70"> <expr pos:start="430:51" pos:end="430:70"><operator pos:start="430:51" pos:end="430:51">(</operator><name pos:start="430:52" pos:end="430:56">flags</name><operator pos:start="430:57" pos:end="430:57">|</operator><name pos:start="430:58" pos:end="430:69">SWS_BILINEAR</name><operator pos:start="430:70" pos:end="430:70">)</operator></expr> </then><else pos:start="430:72" pos:end="430:78">: <expr pos:start="430:74" pos:end="430:78"><name pos:start="430:74" pos:end="430:78">flags</name></expr></else></ternary></expr></argument>,

                           <argument pos:start="432:28" pos:end="432:42"><expr pos:start="432:28" pos:end="432:42"><name pos:start="432:28" pos:end="432:42"><name pos:start="432:28" pos:end="432:36">srcFilter</name><operator pos:start="432:37" pos:end="432:38">-&gt;</operator><name pos:start="432:39" pos:end="432:42">chrH</name></name></expr></argument>, <argument pos:start="432:45" pos:end="432:59"><expr pos:start="432:45" pos:end="432:59"><name pos:start="432:45" pos:end="432:59"><name pos:start="432:45" pos:end="432:53">dstFilter</name><operator pos:start="432:54" pos:end="432:55">-&gt;</operator><name pos:start="432:56" pos:end="432:59">chrH</name></name></expr></argument>, <argument pos:start="432:62" pos:end="432:69"><expr pos:start="432:62" pos:end="432:69"><name pos:start="432:62" pos:end="432:69"><name pos:start="432:62" pos:end="432:62">c</name><operator pos:start="432:63" pos:end="432:64">-&gt;</operator><name pos:start="432:65" pos:end="432:69">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="432:72" pos:end="432:72">&lt;</operator> <literal type="number" pos:start="432:74" pos:end="432:74">0</literal></expr>)</condition><block type="pseudo"><block_content/></block></if></if_stmt></block_content></block></if></if_stmt>


        </block_content>}</block></else></if_stmt>

    </block_content>}</block> <comment type="line" pos:start="437:7" pos:end="437:36">// initialize horizontal stuff</comment>



    <comment type="block" pos:start="441:5" pos:end="441:58">/* precalculate vertical scaler filter coefficients */</comment>

    <block pos:start="443:5" pos:end="511:5">{<block_content pos:start="445:9" pos:end="510:0">

        <decl_stmt pos:start="445:9" pos:end="451:14"><decl pos:start="445:9" pos:end="451:13"><type pos:start="445:9" pos:end="445:17"><specifier pos:start="445:9" pos:end="445:13">const</specifier> <name pos:start="445:15" pos:end="445:17">int</name></type> <name pos:start="445:19" pos:end="445:29">filterAlign</name><init pos:start="445:30" pos:end="451:13">=

            <expr pos:start="447:13" pos:end="451:13"><ternary pos:start="447:13" pos:end="451:13"><condition pos:start="447:13" pos:end="447:70"><expr pos:start="447:13" pos:end="447:68"><operator pos:start="447:13" pos:end="447:13">(</operator><name pos:start="447:14" pos:end="447:18">flags</name> <operator pos:start="447:20" pos:end="447:20">&amp;</operator> <name pos:start="447:22" pos:end="447:37">SWS_CPU_CAPS_MMX</name><operator pos:start="447:38" pos:end="447:38">)</operator> <operator pos:start="447:40" pos:end="447:41">&amp;&amp;</operator> <operator pos:start="447:43" pos:end="447:43">(</operator><name pos:start="447:44" pos:end="447:48">flags</name> <operator pos:start="447:50" pos:end="447:50">&amp;</operator> <name pos:start="447:52" pos:end="447:67">SWS_ACCURATE_RND</name><operator pos:start="447:68" pos:end="447:68">)</operator></expr> ?</condition><then pos:start="447:72" pos:end="447:72"> <expr pos:start="447:72" pos:end="447:72"><literal type="number" pos:start="447:72" pos:end="447:72">2</literal></expr> </then><else pos:start="447:74" pos:end="451:13">:

            <expr pos:start="449:13" pos:end="451:13"><ternary pos:start="449:13" pos:end="451:13"><condition pos:start="449:13" pos:end="449:44"><expr pos:start="449:13" pos:end="449:42"><operator pos:start="449:13" pos:end="449:13">(</operator><name pos:start="449:14" pos:end="449:18">flags</name> <operator pos:start="449:20" pos:end="449:20">&amp;</operator> <name pos:start="449:22" pos:end="449:41">SWS_CPU_CAPS_ALTIVEC</name><operator pos:start="449:42" pos:end="449:42">)</operator></expr> ?</condition><then pos:start="449:46" pos:end="449:46"> <expr pos:start="449:46" pos:end="449:46"><literal type="number" pos:start="449:46" pos:end="449:46">8</literal></expr> </then><else pos:start="449:48" pos:end="451:13">:

            <expr pos:start="451:13" pos:end="451:13"><literal type="number" pos:start="451:13" pos:end="451:13">1</literal></expr></else></ternary></expr></else></ternary></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="455:9" pos:end="477:107"><if pos:start="455:9" pos:end="477:107">if <condition pos:start="455:12" pos:end="461:71">(<expr pos:start="455:13" pos:end="461:70"><call pos:start="455:13" pos:end="461:66"><name pos:start="455:13" pos:end="455:22">initFilter</name><argument_list pos:start="455:23" pos:end="461:66">(<argument pos:start="455:24" pos:end="455:37"><expr pos:start="455:24" pos:end="455:37"><operator pos:start="455:24" pos:end="455:24">&amp;</operator><name pos:start="455:25" pos:end="455:37"><name pos:start="455:25" pos:end="455:25">c</name><operator pos:start="455:26" pos:end="455:27">-&gt;</operator><name pos:start="455:28" pos:end="455:37">vLumFilter</name></name></expr></argument>, <argument pos:start="455:40" pos:end="455:56"><expr pos:start="455:40" pos:end="455:56"><operator pos:start="455:40" pos:end="455:40">&amp;</operator><name pos:start="455:41" pos:end="455:56"><name pos:start="455:41" pos:end="455:41">c</name><operator pos:start="455:42" pos:end="455:43">-&gt;</operator><name pos:start="455:44" pos:end="455:56">vLumFilterPos</name></name></expr></argument>, <argument pos:start="455:59" pos:end="455:76"><expr pos:start="455:59" pos:end="455:76"><operator pos:start="455:59" pos:end="455:59">&amp;</operator><name pos:start="455:60" pos:end="455:76"><name pos:start="455:60" pos:end="455:60">c</name><operator pos:start="455:61" pos:end="455:62">-&gt;</operator><name pos:start="455:63" pos:end="455:76">vLumFilterSize</name></name></expr></argument>, <argument pos:start="455:79" pos:end="455:88"><expr pos:start="455:79" pos:end="455:88"><name pos:start="455:79" pos:end="455:88"><name pos:start="455:79" pos:end="455:79">c</name><operator pos:start="455:80" pos:end="455:81">-&gt;</operator><name pos:start="455:82" pos:end="455:88">lumYInc</name></name></expr></argument>,

                       <argument pos:start="457:24" pos:end="457:27"><expr pos:start="457:24" pos:end="457:27"><name pos:start="457:24" pos:end="457:27">srcH</name></expr></argument>      ,        <argument pos:start="457:43" pos:end="457:46"><expr pos:start="457:43" pos:end="457:46"><name pos:start="457:43" pos:end="457:46">dstH</name></expr></argument>, <argument pos:start="457:49" pos:end="457:59"><expr pos:start="457:49" pos:end="457:59"><name pos:start="457:49" pos:end="457:59">filterAlign</name></expr></argument>, <argument pos:start="457:62" pos:end="457:68"><expr pos:start="457:62" pos:end="457:68"><operator pos:start="457:62" pos:end="457:62">(</operator><literal type="number" pos:start="457:63" pos:end="457:63">1</literal><operator pos:start="457:64" pos:end="457:65">&lt;&lt;</operator><literal type="number" pos:start="457:66" pos:end="457:67">12</literal><operator pos:start="457:68" pos:end="457:68">)</operator></expr></argument>,

                       <argument pos:start="459:24" pos:end="459:74"><expr pos:start="459:24" pos:end="459:74"><ternary pos:start="459:24" pos:end="459:74"><condition pos:start="459:24" pos:end="459:45"><expr pos:start="459:24" pos:end="459:43"><operator pos:start="459:24" pos:end="459:24">(</operator><name pos:start="459:25" pos:end="459:29">flags</name><operator pos:start="459:30" pos:end="459:30">&amp;</operator><name pos:start="459:31" pos:end="459:42">SWS_BICUBLIN</name><operator pos:start="459:43" pos:end="459:43">)</operator></expr> ?</condition><then pos:start="459:47" pos:end="459:65"> <expr pos:start="459:47" pos:end="459:65"><operator pos:start="459:47" pos:end="459:47">(</operator><name pos:start="459:48" pos:end="459:52">flags</name><operator pos:start="459:53" pos:end="459:53">|</operator><name pos:start="459:54" pos:end="459:64">SWS_BICUBIC</name><operator pos:start="459:65" pos:end="459:65">)</operator></expr>  </then><else pos:start="459:68" pos:end="459:74">: <expr pos:start="459:70" pos:end="459:74"><name pos:start="459:70" pos:end="459:74">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="461:24" pos:end="461:38"><expr pos:start="461:24" pos:end="461:38"><name pos:start="461:24" pos:end="461:38"><name pos:start="461:24" pos:end="461:32">srcFilter</name><operator pos:start="461:33" pos:end="461:34">-&gt;</operator><name pos:start="461:35" pos:end="461:38">lumV</name></name></expr></argument>, <argument pos:start="461:41" pos:end="461:55"><expr pos:start="461:41" pos:end="461:55"><name pos:start="461:41" pos:end="461:55"><name pos:start="461:41" pos:end="461:49">dstFilter</name><operator pos:start="461:50" pos:end="461:51">-&gt;</operator><name pos:start="461:52" pos:end="461:55">lumV</name></name></expr></argument>, <argument pos:start="461:58" pos:end="461:65"><expr pos:start="461:58" pos:end="461:65"><name pos:start="461:58" pos:end="461:65"><name pos:start="461:58" pos:end="461:58">c</name><operator pos:start="461:59" pos:end="461:60">-&gt;</operator><name pos:start="461:61" pos:end="461:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="461:68" pos:end="461:68">&lt;</operator> <literal type="number" pos:start="461:70" pos:end="461:70">0</literal></expr>)</condition><block type="pseudo" pos:start="464:9" pos:end="477:107"><block_content pos:start="464:9" pos:end="477:107">


        <if_stmt pos:start="464:9" pos:end="477:107"><if pos:start="464:9" pos:end="477:107">if <condition pos:start="464:12" pos:end="476:0">(<expr pos:start="464:13" pos:end="470:70"><call pos:start="464:13" pos:end="470:66"><name pos:start="464:13" pos:end="464:22">initFilter</name><argument_list pos:start="464:23" pos:end="470:66">(<argument pos:start="464:24" pos:end="464:37"><expr pos:start="464:24" pos:end="464:37"><operator pos:start="464:24" pos:end="464:24">&amp;</operator><name pos:start="464:25" pos:end="464:37"><name pos:start="464:25" pos:end="464:25">c</name><operator pos:start="464:26" pos:end="464:27">-&gt;</operator><name pos:start="464:28" pos:end="464:37">vChrFilter</name></name></expr></argument>, <argument pos:start="464:40" pos:end="464:56"><expr pos:start="464:40" pos:end="464:56"><operator pos:start="464:40" pos:end="464:40">&amp;</operator><name pos:start="464:41" pos:end="464:56"><name pos:start="464:41" pos:end="464:41">c</name><operator pos:start="464:42" pos:end="464:43">-&gt;</operator><name pos:start="464:44" pos:end="464:56">vChrFilterPos</name></name></expr></argument>, <argument pos:start="464:59" pos:end="464:76"><expr pos:start="464:59" pos:end="464:76"><operator pos:start="464:59" pos:end="464:59">&amp;</operator><name pos:start="464:60" pos:end="464:76"><name pos:start="464:60" pos:end="464:60">c</name><operator pos:start="464:61" pos:end="464:62">-&gt;</operator><name pos:start="464:63" pos:end="464:76">vChrFilterSize</name></name></expr></argument>, <argument pos:start="464:79" pos:end="464:88"><expr pos:start="464:79" pos:end="464:88"><name pos:start="464:79" pos:end="464:88"><name pos:start="464:79" pos:end="464:79">c</name><operator pos:start="464:80" pos:end="464:81">-&gt;</operator><name pos:start="464:82" pos:end="464:88">chrYInc</name></name></expr></argument>,

                       <argument pos:start="466:24" pos:end="466:33"><expr pos:start="466:24" pos:end="466:33"><name pos:start="466:24" pos:end="466:33"><name pos:start="466:24" pos:end="466:24">c</name><operator pos:start="466:25" pos:end="466:26">-&gt;</operator><name pos:start="466:27" pos:end="466:33">chrSrcH</name></name></expr></argument>, <argument pos:start="466:36" pos:end="466:45"><expr pos:start="466:36" pos:end="466:45"><name pos:start="466:36" pos:end="466:45"><name pos:start="466:36" pos:end="466:36">c</name><operator pos:start="466:37" pos:end="466:38">-&gt;</operator><name pos:start="466:39" pos:end="466:45">chrDstH</name></name></expr></argument>, <argument pos:start="466:48" pos:end="466:58"><expr pos:start="466:48" pos:end="466:58"><name pos:start="466:48" pos:end="466:58">filterAlign</name></expr></argument>, <argument pos:start="466:61" pos:end="466:67"><expr pos:start="466:61" pos:end="466:67"><operator pos:start="466:61" pos:end="466:61">(</operator><literal type="number" pos:start="466:62" pos:end="466:62">1</literal><operator pos:start="466:63" pos:end="466:64">&lt;&lt;</operator><literal type="number" pos:start="466:65" pos:end="466:66">12</literal><operator pos:start="466:67" pos:end="466:67">)</operator></expr></argument>,

                       <argument pos:start="468:24" pos:end="468:74"><expr pos:start="468:24" pos:end="468:74"><ternary pos:start="468:24" pos:end="468:74"><condition pos:start="468:24" pos:end="468:45"><expr pos:start="468:24" pos:end="468:43"><operator pos:start="468:24" pos:end="468:24">(</operator><name pos:start="468:25" pos:end="468:29">flags</name><operator pos:start="468:30" pos:end="468:30">&amp;</operator><name pos:start="468:31" pos:end="468:42">SWS_BICUBLIN</name><operator pos:start="468:43" pos:end="468:43">)</operator></expr> ?</condition><then pos:start="468:47" pos:end="468:66"> <expr pos:start="468:47" pos:end="468:66"><operator pos:start="468:47" pos:end="468:47">(</operator><name pos:start="468:48" pos:end="468:52">flags</name><operator pos:start="468:53" pos:end="468:53">|</operator><name pos:start="468:54" pos:end="468:65">SWS_BILINEAR</name><operator pos:start="468:66" pos:end="468:66">)</operator></expr> </then><else pos:start="468:68" pos:end="468:74">: <expr pos:start="468:70" pos:end="468:74"><name pos:start="468:70" pos:end="468:74">flags</name></expr></else></ternary></expr></argument>,

                       <argument pos:start="470:24" pos:end="470:38"><expr pos:start="470:24" pos:end="470:38"><name pos:start="470:24" pos:end="470:38"><name pos:start="470:24" pos:end="470:32">srcFilter</name><operator pos:start="470:33" pos:end="470:34">-&gt;</operator><name pos:start="470:35" pos:end="470:38">chrV</name></name></expr></argument>, <argument pos:start="470:41" pos:end="470:55"><expr pos:start="470:41" pos:end="470:55"><name pos:start="470:41" pos:end="470:55"><name pos:start="470:41" pos:end="470:49">dstFilter</name><operator pos:start="470:50" pos:end="470:51">-&gt;</operator><name pos:start="470:52" pos:end="470:55">chrV</name></name></expr></argument>, <argument pos:start="470:58" pos:end="470:65"><expr pos:start="470:58" pos:end="470:65"><name pos:start="470:58" pos:end="470:65"><name pos:start="470:58" pos:end="470:58">c</name><operator pos:start="470:59" pos:end="470:60">-&gt;</operator><name pos:start="470:61" pos:end="470:65">param</name></name></expr></argument>)</argument_list></call> <operator pos:start="470:68" pos:end="470:68">&lt;</operator> <literal type="number" pos:start="470:70" pos:end="470:70">0</literal></expr>)</condition><block type="pseudo" pos:start="477:9" pos:end="477:107"><block_content pos:start="477:9" pos:end="477:107">




<cpp:if pos:start="475:1" pos:end="475:58">#<cpp:directive pos:start="475:2" pos:end="475:3">if</cpp:directive> <expr pos:start="475:5" pos:end="475:58"><name pos:start="475:5" pos:end="475:12">ARCH_PPC</name> <operator pos:start="475:14" pos:end="475:15">&amp;&amp;</operator> <operator pos:start="475:17" pos:end="475:17">(</operator><name pos:start="475:18" pos:end="475:29">HAVE_ALTIVEC</name> <operator pos:start="475:31" pos:end="475:32">||</operator> <name pos:start="475:34" pos:end="475:57">CONFIG_RUNTIME_CPUDETECT</name><operator pos:start="475:58" pos:end="475:58">)</operator></expr></cpp:if>

        <expr_stmt pos:start="477:9" pos:end="477:107"><expr pos:start="477:9" pos:end="477:106"><call pos:start="477:9" pos:end="477:106"><name pos:start="477:9" pos:end="477:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="477:25" pos:end="477:106">(<argument pos:start="477:26" pos:end="477:26"><expr pos:start="477:26" pos:end="477:26"><name pos:start="477:26" pos:end="477:26">c</name></expr></argument>, <argument pos:start="477:29" pos:end="477:43"><expr pos:start="477:29" pos:end="477:43"><name pos:start="477:29" pos:end="477:43"><name pos:start="477:29" pos:end="477:29">c</name><operator pos:start="477:30" pos:end="477:31">-&gt;</operator><name pos:start="477:32" pos:end="477:43">vYCoeffsBank</name></name></expr></argument>, <argument pos:start="477:46" pos:end="477:99"><expr pos:start="477:46" pos:end="477:99">sizeof <operator pos:start="477:53" pos:end="477:53">(</operator><name pos:start="477:54" pos:end="477:59">vector</name> <name pos:start="477:61" pos:end="477:66">signed</name> <name pos:start="477:68" pos:end="477:72">short</name><operator pos:start="477:73" pos:end="477:73">)</operator><operator pos:start="477:74" pos:end="477:74">*</operator><name pos:start="477:75" pos:end="477:91"><name pos:start="477:75" pos:end="477:75">c</name><operator pos:start="477:76" pos:end="477:77">-&gt;</operator><name pos:start="477:78" pos:end="477:91">vLumFilterSize</name></name><operator pos:start="477:92" pos:end="477:92">*</operator><name pos:start="477:93" pos:end="477:99"><name pos:start="477:93" pos:end="477:93">c</name><operator pos:start="477:94" pos:end="477:95">-&gt;</operator><name pos:start="477:96" pos:end="477:99">dstH</name></name></expr></argument>, <argument pos:start="477:102" pos:end="477:105"><expr pos:start="477:102" pos:end="477:105"><name pos:start="477:102" pos:end="477:105">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="479:9" pos:end="479:110"><expr pos:start="479:9" pos:end="479:109"><call pos:start="479:9" pos:end="479:109"><name pos:start="479:9" pos:end="479:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="479:25" pos:end="479:109">(<argument pos:start="479:26" pos:end="479:26"><expr pos:start="479:26" pos:end="479:26"><name pos:start="479:26" pos:end="479:26">c</name></expr></argument>, <argument pos:start="479:29" pos:end="479:43"><expr pos:start="479:29" pos:end="479:43"><name pos:start="479:29" pos:end="479:43"><name pos:start="479:29" pos:end="479:29">c</name><operator pos:start="479:30" pos:end="479:31">-&gt;</operator><name pos:start="479:32" pos:end="479:43">vCCoeffsBank</name></name></expr></argument>, <argument pos:start="479:46" pos:end="479:102"><expr pos:start="479:46" pos:end="479:102">sizeof <operator pos:start="479:53" pos:end="479:53">(</operator><name pos:start="479:54" pos:end="479:59">vector</name> <name pos:start="479:61" pos:end="479:66">signed</name> <name pos:start="479:68" pos:end="479:72">short</name><operator pos:start="479:73" pos:end="479:73">)</operator><operator pos:start="479:74" pos:end="479:74">*</operator><name pos:start="479:75" pos:end="479:91"><name pos:start="479:75" pos:end="479:75">c</name><operator pos:start="479:76" pos:end="479:77">-&gt;</operator><name pos:start="479:78" pos:end="479:91">vChrFilterSize</name></name><operator pos:start="479:92" pos:end="479:92">*</operator><name pos:start="479:93" pos:end="479:102"><name pos:start="479:93" pos:end="479:93">c</name><operator pos:start="479:94" pos:end="479:95">-&gt;</operator><name pos:start="479:96" pos:end="479:102">chrDstH</name></name></expr></argument>, <argument pos:start="479:105" pos:end="479:108"><expr pos:start="479:105" pos:end="479:108"><name pos:start="479:105" pos:end="479:108">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="483:9" pos:end="493:9">for <control pos:start="483:13" pos:end="483:49">(<init pos:start="483:14" pos:end="483:17"><expr pos:start="483:14" pos:end="483:16"><name pos:start="483:14" pos:end="483:14">i</name><operator pos:start="483:15" pos:end="483:15">=</operator><literal type="number" pos:start="483:16" pos:end="483:16">0</literal></expr>;</init><condition pos:start="483:18" pos:end="483:45"><expr pos:start="483:18" pos:end="483:44"><name pos:start="483:18" pos:end="483:18">i</name><operator pos:start="483:19" pos:end="483:19">&lt;</operator><name pos:start="483:20" pos:end="483:36"><name pos:start="483:20" pos:end="483:20">c</name><operator pos:start="483:21" pos:end="483:22">-&gt;</operator><name pos:start="483:23" pos:end="483:36">vLumFilterSize</name></name><operator pos:start="483:37" pos:end="483:37">*</operator><name pos:start="483:38" pos:end="483:44"><name pos:start="483:38" pos:end="483:38">c</name><operator pos:start="483:39" pos:end="483:40">-&gt;</operator><name pos:start="483:41" pos:end="483:44">dstH</name></name></expr>;</condition><incr pos:start="483:46" pos:end="483:48"><expr pos:start="483:46" pos:end="483:48"><name pos:start="483:46" pos:end="483:46">i</name><operator pos:start="483:47" pos:end="483:48">++</operator></expr></incr>)</control> <block pos:start="483:51" pos:end="493:9">{<block_content pos:start="485:13" pos:end="491:40">

            <decl_stmt pos:start="485:13" pos:end="485:18"><decl pos:start="485:13" pos:end="485:17"><type pos:start="485:13" pos:end="485:15"><name pos:start="485:13" pos:end="485:15">int</name></type> <name pos:start="485:17" pos:end="485:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="487:13" pos:end="487:52"><decl pos:start="487:13" pos:end="487:51"><type pos:start="487:13" pos:end="487:19"><name pos:start="487:13" pos:end="487:17">short</name> <modifier pos:start="487:19" pos:end="487:19">*</modifier></type><name pos:start="487:20" pos:end="487:20">p</name> <init pos:start="487:22" pos:end="487:51">= <expr pos:start="487:24" pos:end="487:51"><operator pos:start="487:24" pos:end="487:24">(</operator><name pos:start="487:25" pos:end="487:29">short</name> <operator pos:start="487:31" pos:end="487:31">*</operator><operator pos:start="487:32" pos:end="487:32">)</operator><operator pos:start="487:33" pos:end="487:33">&amp;</operator><name pos:start="487:34" pos:end="487:51"><name pos:start="487:34" pos:end="487:34">c</name><operator pos:start="487:35" pos:end="487:36">-&gt;</operator><name pos:start="487:37" pos:end="487:48">vYCoeffsBank</name><index pos:start="487:49" pos:end="487:51">[<expr pos:start="487:50" pos:end="487:50"><name pos:start="487:50" pos:end="487:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="489:13" pos:end="491:40">for <control pos:start="489:17" pos:end="489:29">(<init pos:start="489:18" pos:end="489:21"><expr pos:start="489:18" pos:end="489:20"><name pos:start="489:18" pos:end="489:18">j</name><operator pos:start="489:19" pos:end="489:19">=</operator><literal type="number" pos:start="489:20" pos:end="489:20">0</literal></expr>;</init><condition pos:start="489:22" pos:end="489:25"><expr pos:start="489:22" pos:end="489:24"><name pos:start="489:22" pos:end="489:22">j</name><operator pos:start="489:23" pos:end="489:23">&lt;</operator><literal type="number" pos:start="489:24" pos:end="489:24">8</literal></expr>;</condition><incr pos:start="489:26" pos:end="489:28"><expr pos:start="489:26" pos:end="489:28"><name pos:start="489:26" pos:end="489:26">j</name><operator pos:start="489:27" pos:end="489:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="491:17" pos:end="491:40"><block_content pos:start="491:17" pos:end="491:40">

                <expr_stmt pos:start="491:17" pos:end="491:40"><expr pos:start="491:17" pos:end="491:39"><name pos:start="491:17" pos:end="491:20"><name pos:start="491:17" pos:end="491:17">p</name><index pos:start="491:18" pos:end="491:20">[<expr pos:start="491:19" pos:end="491:19"><name pos:start="491:19" pos:end="491:19">j</name></expr>]</index></name> <operator pos:start="491:22" pos:end="491:22">=</operator> <name pos:start="491:24" pos:end="491:39"><name pos:start="491:24" pos:end="491:24">c</name><operator pos:start="491:25" pos:end="491:26">-&gt;</operator><name pos:start="491:27" pos:end="491:36">vLumFilter</name><index pos:start="491:37" pos:end="491:39">[<expr pos:start="491:38" pos:end="491:38"><name pos:start="491:38" pos:end="491:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>



        <for pos:start="497:9" pos:end="510:0">for <control pos:start="497:13" pos:end="497:52">(<init pos:start="497:14" pos:end="497:17"><expr pos:start="497:14" pos:end="497:16"><name pos:start="497:14" pos:end="497:14">i</name><operator pos:start="497:15" pos:end="497:15">=</operator><literal type="number" pos:start="497:16" pos:end="497:16">0</literal></expr>;</init><condition pos:start="497:18" pos:end="497:48"><expr pos:start="497:18" pos:end="497:47"><name pos:start="497:18" pos:end="497:18">i</name><operator pos:start="497:19" pos:end="497:19">&lt;</operator><name pos:start="497:20" pos:end="497:36"><name pos:start="497:20" pos:end="497:20">c</name><operator pos:start="497:21" pos:end="497:22">-&gt;</operator><name pos:start="497:23" pos:end="497:36">vChrFilterSize</name></name><operator pos:start="497:37" pos:end="497:37">*</operator><name pos:start="497:38" pos:end="497:47"><name pos:start="497:38" pos:end="497:38">c</name><operator pos:start="497:39" pos:end="497:40">-&gt;</operator><name pos:start="497:41" pos:end="497:47">chrDstH</name></name></expr>;</condition><incr pos:start="497:49" pos:end="497:51"><expr pos:start="497:49" pos:end="497:51"><name pos:start="497:49" pos:end="497:49">i</name><operator pos:start="497:50" pos:end="497:51">++</operator></expr></incr>)</control> <block pos:start="497:54" pos:end="510:0">{<block_content pos:start="499:13" pos:end="505:40">

            <decl_stmt pos:start="499:13" pos:end="499:18"><decl pos:start="499:13" pos:end="499:17"><type pos:start="499:13" pos:end="499:15"><name pos:start="499:13" pos:end="499:15">int</name></type> <name pos:start="499:17" pos:end="499:17">j</name></decl>;</decl_stmt>

            <decl_stmt pos:start="501:13" pos:end="501:52"><decl pos:start="501:13" pos:end="501:51"><type pos:start="501:13" pos:end="501:19"><name pos:start="501:13" pos:end="501:17">short</name> <modifier pos:start="501:19" pos:end="501:19">*</modifier></type><name pos:start="501:20" pos:end="501:20">p</name> <init pos:start="501:22" pos:end="501:51">= <expr pos:start="501:24" pos:end="501:51"><operator pos:start="501:24" pos:end="501:24">(</operator><name pos:start="501:25" pos:end="501:29">short</name> <operator pos:start="501:31" pos:end="501:31">*</operator><operator pos:start="501:32" pos:end="501:32">)</operator><operator pos:start="501:33" pos:end="501:33">&amp;</operator><name pos:start="501:34" pos:end="501:51"><name pos:start="501:34" pos:end="501:34">c</name><operator pos:start="501:35" pos:end="501:36">-&gt;</operator><name pos:start="501:37" pos:end="501:48">vCCoeffsBank</name><index pos:start="501:49" pos:end="501:51">[<expr pos:start="501:50" pos:end="501:50"><name pos:start="501:50" pos:end="501:50">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="503:13" pos:end="505:40">for <control pos:start="503:17" pos:end="503:29">(<init pos:start="503:18" pos:end="503:21"><expr pos:start="503:18" pos:end="503:20"><name pos:start="503:18" pos:end="503:18">j</name><operator pos:start="503:19" pos:end="503:19">=</operator><literal type="number" pos:start="503:20" pos:end="503:20">0</literal></expr>;</init><condition pos:start="503:22" pos:end="503:25"><expr pos:start="503:22" pos:end="503:24"><name pos:start="503:22" pos:end="503:22">j</name><operator pos:start="503:23" pos:end="503:23">&lt;</operator><literal type="number" pos:start="503:24" pos:end="503:24">8</literal></expr>;</condition><incr pos:start="503:26" pos:end="503:28"><expr pos:start="503:26" pos:end="503:28"><name pos:start="503:26" pos:end="503:26">j</name><operator pos:start="503:27" pos:end="503:28">++</operator></expr></incr>)</control><block type="pseudo" pos:start="505:17" pos:end="505:40"><block_content pos:start="505:17" pos:end="505:40">

                <expr_stmt pos:start="505:17" pos:end="505:40"><expr pos:start="505:17" pos:end="505:39"><name pos:start="505:17" pos:end="505:20"><name pos:start="505:17" pos:end="505:17">p</name><index pos:start="505:18" pos:end="505:20">[<expr pos:start="505:19" pos:end="505:19"><name pos:start="505:19" pos:end="505:19">j</name></expr>]</index></name> <operator pos:start="505:22" pos:end="505:22">=</operator> <name pos:start="505:24" pos:end="505:39"><name pos:start="505:24" pos:end="505:24">c</name><operator pos:start="505:25" pos:end="505:26">-&gt;</operator><name pos:start="505:27" pos:end="505:36">vChrFilter</name><index pos:start="505:37" pos:end="505:39">[<expr pos:start="505:38" pos:end="505:38"><name pos:start="505:38" pos:end="505:38">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></for>

<cpp:endif pos:start="509:1" pos:end="509:6">#<cpp:directive pos:start="509:2" pos:end="509:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <comment type="line" pos:start="515:5" pos:end="515:89">// calculate buffer sizes so that they won't run out while handling these damn slices</comment>

    <expr_stmt pos:start="517:5" pos:end="517:38"><expr pos:start="517:5" pos:end="517:37"><name pos:start="517:5" pos:end="517:18"><name pos:start="517:5" pos:end="517:5">c</name><operator pos:start="517:6" pos:end="517:7">-&gt;</operator><name pos:start="517:8" pos:end="517:18">vLumBufSize</name></name><operator pos:start="517:19" pos:end="517:19">=</operator> <name pos:start="517:21" pos:end="517:37"><name pos:start="517:21" pos:end="517:21">c</name><operator pos:start="517:22" pos:end="517:23">-&gt;</operator><name pos:start="517:24" pos:end="517:37">vLumFilterSize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="519:5" pos:end="519:38"><expr pos:start="519:5" pos:end="519:37"><name pos:start="519:5" pos:end="519:18"><name pos:start="519:5" pos:end="519:5">c</name><operator pos:start="519:6" pos:end="519:7">-&gt;</operator><name pos:start="519:8" pos:end="519:18">vChrBufSize</name></name><operator pos:start="519:19" pos:end="519:19">=</operator> <name pos:start="519:21" pos:end="519:37"><name pos:start="519:21" pos:end="519:21">c</name><operator pos:start="519:22" pos:end="519:23">-&gt;</operator><name pos:start="519:24" pos:end="519:37">vChrFilterSize</name></name></expr>;</expr_stmt>

    <for pos:start="521:5" pos:end="543:5">for <control pos:start="521:9" pos:end="521:26">(<init pos:start="521:10" pos:end="521:13"><expr pos:start="521:10" pos:end="521:12"><name pos:start="521:10" pos:end="521:10">i</name><operator pos:start="521:11" pos:end="521:11">=</operator><literal type="number" pos:start="521:12" pos:end="521:12">0</literal></expr>;</init> <condition pos:start="521:15" pos:end="521:21"><expr pos:start="521:15" pos:end="521:20"><name pos:start="521:15" pos:end="521:15">i</name><operator pos:start="521:16" pos:end="521:16">&lt;</operator><name pos:start="521:17" pos:end="521:20">dstH</name></expr>;</condition> <incr pos:start="521:23" pos:end="521:25"><expr pos:start="521:23" pos:end="521:25"><name pos:start="521:23" pos:end="521:23">i</name><operator pos:start="521:24" pos:end="521:25">++</operator></expr></incr>)</control> <block pos:start="521:28" pos:end="543:5">{<block_content pos:start="523:9" pos:end="541:86">

        <decl_stmt pos:start="523:9" pos:end="523:38"><decl pos:start="523:9" pos:end="523:37"><type pos:start="523:9" pos:end="523:11"><name pos:start="523:9" pos:end="523:11">int</name></type> <name pos:start="523:13" pos:end="523:16">chrI</name><init pos:start="523:17" pos:end="523:37">= <expr pos:start="523:19" pos:end="523:37"><name pos:start="523:19" pos:end="523:19">i</name><operator pos:start="523:20" pos:end="523:20">*</operator><name pos:start="523:21" pos:end="523:30"><name pos:start="523:21" pos:end="523:21">c</name><operator pos:start="523:22" pos:end="523:23">-&gt;</operator><name pos:start="523:24" pos:end="523:30">chrDstH</name></name> <operator pos:start="523:32" pos:end="523:32">/</operator> <name pos:start="523:34" pos:end="523:37">dstH</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="525:9" pos:end="527:100"><decl pos:start="525:9" pos:end="527:99"><type pos:start="525:9" pos:end="525:11"><name pos:start="525:9" pos:end="525:11">int</name></type> <name pos:start="525:13" pos:end="525:21">nextSlice</name><init pos:start="525:22" pos:end="527:99">= <expr pos:start="525:24" pos:end="527:99"><call pos:start="525:24" pos:end="527:99"><name pos:start="525:24" pos:end="525:28">FFMAX</name><argument_list pos:start="525:29" pos:end="527:99">(<argument pos:start="525:30" pos:end="525:75"><expr pos:start="525:30" pos:end="525:75"><name pos:start="525:30" pos:end="525:51"><name pos:start="525:30" pos:end="525:30">c</name><operator pos:start="525:31" pos:end="525:32">-&gt;</operator><name pos:start="525:33" pos:end="525:45">vLumFilterPos</name><index pos:start="525:46" pos:end="525:51">[<expr pos:start="525:47" pos:end="525:47"><name pos:start="525:47" pos:end="525:47">i</name></expr>   ]</index></name> <operator pos:start="525:53" pos:end="525:53">+</operator> <name pos:start="525:55" pos:end="525:71"><name pos:start="525:55" pos:end="525:55">c</name><operator pos:start="525:56" pos:end="525:57">-&gt;</operator><name pos:start="525:58" pos:end="525:71">vLumFilterSize</name></name> <operator pos:start="525:73" pos:end="525:73">-</operator> <literal type="number" pos:start="525:75" pos:end="525:75">1</literal></expr></argument>,

                           <argument pos:start="527:28" pos:end="527:98"><expr pos:start="527:28" pos:end="527:98"><operator pos:start="527:28" pos:end="527:28">(</operator><operator pos:start="527:29" pos:end="527:29">(</operator><name pos:start="527:30" pos:end="527:51"><name pos:start="527:30" pos:end="527:30">c</name><operator pos:start="527:31" pos:end="527:32">-&gt;</operator><name pos:start="527:33" pos:end="527:45">vChrFilterPos</name><index pos:start="527:46" pos:end="527:51">[<expr pos:start="527:47" pos:end="527:50"><name pos:start="527:47" pos:end="527:50">chrI</name></expr>]</index></name> <operator pos:start="527:53" pos:end="527:53">+</operator> <name pos:start="527:55" pos:end="527:71"><name pos:start="527:55" pos:end="527:55">c</name><operator pos:start="527:56" pos:end="527:57">-&gt;</operator><name pos:start="527:58" pos:end="527:71">vChrFilterSize</name></name> <operator pos:start="527:73" pos:end="527:73">-</operator> <literal type="number" pos:start="527:75" pos:end="527:75">1</literal><operator pos:start="527:76" pos:end="527:76">)</operator><operator pos:start="527:77" pos:end="527:78">&lt;&lt;</operator><name pos:start="527:79" pos:end="527:97"><name pos:start="527:79" pos:end="527:79">c</name><operator pos:start="527:80" pos:end="527:81">-&gt;</operator><name pos:start="527:82" pos:end="527:97">chrSrcVSubSample</name></name><operator pos:start="527:98" pos:end="527:98">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="531:9" pos:end="531:41"><expr pos:start="531:9" pos:end="531:40"><name pos:start="531:9" pos:end="531:17">nextSlice</name><operator pos:start="531:18" pos:end="531:20">&gt;&gt;=</operator> <name pos:start="531:22" pos:end="531:40"><name pos:start="531:22" pos:end="531:22">c</name><operator pos:start="531:23" pos:end="531:24">-&gt;</operator><name pos:start="531:25" pos:end="531:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:41"><expr pos:start="533:9" pos:end="533:40"><name pos:start="533:9" pos:end="533:17">nextSlice</name><operator pos:start="533:18" pos:end="533:20">&lt;&lt;=</operator> <name pos:start="533:22" pos:end="533:40"><name pos:start="533:22" pos:end="533:22">c</name><operator pos:start="533:23" pos:end="533:24">-&gt;</operator><name pos:start="533:25" pos:end="533:40">chrSrcVSubSample</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="535:9" pos:end="537:60"><if pos:start="535:9" pos:end="537:60">if <condition pos:start="535:12" pos:end="535:64">(<expr pos:start="535:13" pos:end="535:63"><name pos:start="535:13" pos:end="535:34"><name pos:start="535:13" pos:end="535:13">c</name><operator pos:start="535:14" pos:end="535:15">-&gt;</operator><name pos:start="535:16" pos:end="535:28">vLumFilterPos</name><index pos:start="535:29" pos:end="535:34">[<expr pos:start="535:30" pos:end="535:30"><name pos:start="535:30" pos:end="535:30">i</name></expr>   ]</index></name> <operator pos:start="535:36" pos:end="535:36">+</operator> <name pos:start="535:38" pos:end="535:51"><name pos:start="535:38" pos:end="535:38">c</name><operator pos:start="535:39" pos:end="535:40">-&gt;</operator><name pos:start="535:41" pos:end="535:51">vLumBufSize</name></name> <operator pos:start="535:53" pos:end="535:53">&lt;</operator> <name pos:start="535:55" pos:end="535:63">nextSlice</name></expr>)</condition><block type="pseudo" pos:start="537:13" pos:end="537:60"><block_content pos:start="537:13" pos:end="537:60">

            <expr_stmt pos:start="537:13" pos:end="537:60"><expr pos:start="537:13" pos:end="537:59"><name pos:start="537:13" pos:end="537:26"><name pos:start="537:13" pos:end="537:13">c</name><operator pos:start="537:14" pos:end="537:15">-&gt;</operator><name pos:start="537:16" pos:end="537:26">vLumBufSize</name></name><operator pos:start="537:27" pos:end="537:27">=</operator> <name pos:start="537:29" pos:end="537:37">nextSlice</name> <operator pos:start="537:39" pos:end="537:39">-</operator> <name pos:start="537:41" pos:end="537:59"><name pos:start="537:41" pos:end="537:41">c</name><operator pos:start="537:42" pos:end="537:43">-&gt;</operator><name pos:start="537:44" pos:end="537:56">vLumFilterPos</name><index pos:start="537:57" pos:end="537:59">[<expr pos:start="537:58" pos:end="537:58"><name pos:start="537:58" pos:end="537:58">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="539:9" pos:end="541:86"><if pos:start="539:9" pos:end="541:86">if <condition pos:start="539:12" pos:end="539:87">(<expr pos:start="539:13" pos:end="539:86"><name pos:start="539:13" pos:end="539:34"><name pos:start="539:13" pos:end="539:13">c</name><operator pos:start="539:14" pos:end="539:15">-&gt;</operator><name pos:start="539:16" pos:end="539:28">vChrFilterPos</name><index pos:start="539:29" pos:end="539:34">[<expr pos:start="539:30" pos:end="539:33"><name pos:start="539:30" pos:end="539:33">chrI</name></expr>]</index></name> <operator pos:start="539:36" pos:end="539:36">+</operator> <name pos:start="539:38" pos:end="539:51"><name pos:start="539:38" pos:end="539:38">c</name><operator pos:start="539:39" pos:end="539:40">-&gt;</operator><name pos:start="539:41" pos:end="539:51">vChrBufSize</name></name> <operator pos:start="539:53" pos:end="539:53">&lt;</operator> <operator pos:start="539:55" pos:end="539:55">(</operator><name pos:start="539:56" pos:end="539:64">nextSlice</name><operator pos:start="539:65" pos:end="539:66">&gt;&gt;</operator><name pos:start="539:67" pos:end="539:85"><name pos:start="539:67" pos:end="539:67">c</name><operator pos:start="539:68" pos:end="539:69">-&gt;</operator><name pos:start="539:70" pos:end="539:85">chrSrcVSubSample</name></name><operator pos:start="539:86" pos:end="539:86">)</operator></expr>)</condition><block type="pseudo" pos:start="541:13" pos:end="541:86"><block_content pos:start="541:13" pos:end="541:86">

            <expr_stmt pos:start="541:13" pos:end="541:86"><expr pos:start="541:13" pos:end="541:85"><name pos:start="541:13" pos:end="541:26"><name pos:start="541:13" pos:end="541:13">c</name><operator pos:start="541:14" pos:end="541:15">-&gt;</operator><name pos:start="541:16" pos:end="541:26">vChrBufSize</name></name><operator pos:start="541:27" pos:end="541:27">=</operator> <operator pos:start="541:29" pos:end="541:29">(</operator><name pos:start="541:30" pos:end="541:38">nextSlice</name><operator pos:start="541:39" pos:end="541:40">&gt;&gt;</operator><name pos:start="541:41" pos:end="541:59"><name pos:start="541:41" pos:end="541:41">c</name><operator pos:start="541:42" pos:end="541:43">-&gt;</operator><name pos:start="541:44" pos:end="541:59">chrSrcVSubSample</name></name><operator pos:start="541:60" pos:end="541:60">)</operator> <operator pos:start="541:62" pos:end="541:62">-</operator> <name pos:start="541:64" pos:end="541:85"><name pos:start="541:64" pos:end="541:64">c</name><operator pos:start="541:65" pos:end="541:66">-&gt;</operator><name pos:start="541:67" pos:end="541:79">vChrFilterPos</name><index pos:start="541:80" pos:end="541:85">[<expr pos:start="541:81" pos:end="541:84"><name pos:start="541:81" pos:end="541:84">chrI</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="line" pos:start="547:5" pos:end="547:85">// allocate pixbufs (we use dynamic allocation because otherwise we would need to</comment>

    <comment type="line" pos:start="549:5" pos:end="549:63">// allocate several megabytes to handle all possible cases)</comment>

    <expr_stmt pos:start="551:5" pos:end="551:79"><expr pos:start="551:5" pos:end="551:78"><call pos:start="551:5" pos:end="551:78"><name pos:start="551:5" pos:end="551:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="551:21" pos:end="551:78">(<argument pos:start="551:22" pos:end="551:22"><expr pos:start="551:22" pos:end="551:22"><name pos:start="551:22" pos:end="551:22">c</name></expr></argument>, <argument pos:start="551:25" pos:end="551:36"><expr pos:start="551:25" pos:end="551:36"><name pos:start="551:25" pos:end="551:36"><name pos:start="551:25" pos:end="551:25">c</name><operator pos:start="551:26" pos:end="551:27">-&gt;</operator><name pos:start="551:28" pos:end="551:36">lumPixBuf</name></name></expr></argument>, <argument pos:start="551:39" pos:end="551:71"><expr pos:start="551:39" pos:end="551:71"><name pos:start="551:39" pos:end="551:52"><name pos:start="551:39" pos:end="551:39">c</name><operator pos:start="551:40" pos:end="551:41">-&gt;</operator><name pos:start="551:42" pos:end="551:52">vLumBufSize</name></name><operator pos:start="551:53" pos:end="551:53">*</operator><literal type="number" pos:start="551:54" pos:end="551:54">2</literal><operator pos:start="551:55" pos:end="551:55">*</operator><sizeof pos:start="551:56" pos:end="551:71">sizeof<argument_list pos:start="551:62" pos:end="551:71">(<argument pos:start="551:63" pos:end="551:70"><expr pos:start="551:63" pos:end="551:70"><name pos:start="551:63" pos:end="551:69">int16_t</name><operator pos:start="551:70" pos:end="551:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="551:74" pos:end="551:77"><expr pos:start="551:74" pos:end="551:77"><name pos:start="551:74" pos:end="551:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="553:5" pos:end="553:79"><expr pos:start="553:5" pos:end="553:78"><call pos:start="553:5" pos:end="553:78"><name pos:start="553:5" pos:end="553:20">FF_ALLOC_OR_GOTO</name><argument_list pos:start="553:21" pos:end="553:78">(<argument pos:start="553:22" pos:end="553:22"><expr pos:start="553:22" pos:end="553:22"><name pos:start="553:22" pos:end="553:22">c</name></expr></argument>, <argument pos:start="553:25" pos:end="553:36"><expr pos:start="553:25" pos:end="553:36"><name pos:start="553:25" pos:end="553:36"><name pos:start="553:25" pos:end="553:25">c</name><operator pos:start="553:26" pos:end="553:27">-&gt;</operator><name pos:start="553:28" pos:end="553:36">chrPixBuf</name></name></expr></argument>, <argument pos:start="553:39" pos:end="553:71"><expr pos:start="553:39" pos:end="553:71"><name pos:start="553:39" pos:end="553:52"><name pos:start="553:39" pos:end="553:39">c</name><operator pos:start="553:40" pos:end="553:41">-&gt;</operator><name pos:start="553:42" pos:end="553:52">vChrBufSize</name></name><operator pos:start="553:53" pos:end="553:53">*</operator><literal type="number" pos:start="553:54" pos:end="553:54">2</literal><operator pos:start="553:55" pos:end="553:55">*</operator><sizeof pos:start="553:56" pos:end="553:71">sizeof<argument_list pos:start="553:62" pos:end="553:71">(<argument pos:start="553:63" pos:end="553:70"><expr pos:start="553:63" pos:end="553:70"><name pos:start="553:63" pos:end="553:69">int16_t</name><operator pos:start="553:70" pos:end="553:70">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="553:74" pos:end="553:77"><expr pos:start="553:74" pos:end="553:77"><name pos:start="553:74" pos:end="553:77">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="555:5" pos:end="557:84"><if pos:start="555:5" pos:end="557:84">if <condition pos:start="555:8" pos:end="555:79">(<expr pos:start="555:9" pos:end="555:78"><name pos:start="555:9" pos:end="555:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="555:30" pos:end="555:31">&amp;&amp;</operator> <call pos:start="555:33" pos:end="555:53"><name pos:start="555:33" pos:end="555:39">isALPHA</name><argument_list pos:start="555:40" pos:end="555:53">(<argument pos:start="555:41" pos:end="555:52"><expr pos:start="555:41" pos:end="555:52"><name pos:start="555:41" pos:end="555:52"><name pos:start="555:41" pos:end="555:41">c</name><operator pos:start="555:42" pos:end="555:43">-&gt;</operator><name pos:start="555:44" pos:end="555:52">srcFormat</name></name></expr></argument>)</argument_list></call> <operator pos:start="555:55" pos:end="555:56">&amp;&amp;</operator> <call pos:start="555:58" pos:end="555:78"><name pos:start="555:58" pos:end="555:64">isALPHA</name><argument_list pos:start="555:65" pos:end="555:78">(<argument pos:start="555:66" pos:end="555:77"><expr pos:start="555:66" pos:end="555:77"><name pos:start="555:66" pos:end="555:77"><name pos:start="555:66" pos:end="555:66">c</name><operator pos:start="555:67" pos:end="555:68">-&gt;</operator><name pos:start="555:69" pos:end="555:77">dstFormat</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="557:9" pos:end="557:84"><block_content pos:start="557:9" pos:end="557:84">

        <expr_stmt pos:start="557:9" pos:end="557:84"><expr pos:start="557:9" pos:end="557:83"><call pos:start="557:9" pos:end="557:83"><name pos:start="557:9" pos:end="557:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="557:26" pos:end="557:83">(<argument pos:start="557:27" pos:end="557:27"><expr pos:start="557:27" pos:end="557:27"><name pos:start="557:27" pos:end="557:27">c</name></expr></argument>, <argument pos:start="557:30" pos:end="557:41"><expr pos:start="557:30" pos:end="557:41"><name pos:start="557:30" pos:end="557:41"><name pos:start="557:30" pos:end="557:30">c</name><operator pos:start="557:31" pos:end="557:32">-&gt;</operator><name pos:start="557:33" pos:end="557:41">alpPixBuf</name></name></expr></argument>, <argument pos:start="557:44" pos:end="557:76"><expr pos:start="557:44" pos:end="557:76"><name pos:start="557:44" pos:end="557:57"><name pos:start="557:44" pos:end="557:44">c</name><operator pos:start="557:45" pos:end="557:46">-&gt;</operator><name pos:start="557:47" pos:end="557:57">vLumBufSize</name></name><operator pos:start="557:58" pos:end="557:58">*</operator><literal type="number" pos:start="557:59" pos:end="557:59">2</literal><operator pos:start="557:60" pos:end="557:60">*</operator><sizeof pos:start="557:61" pos:end="557:76">sizeof<argument_list pos:start="557:67" pos:end="557:76">(<argument pos:start="557:68" pos:end="557:75"><expr pos:start="557:68" pos:end="557:75"><name pos:start="557:68" pos:end="557:74">int16_t</name><operator pos:start="557:75" pos:end="557:75">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="557:79" pos:end="557:82"><expr pos:start="557:79" pos:end="557:82"><name pos:start="557:79" pos:end="557:82">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="line" pos:start="559:5" pos:end="559:128">//Note we need at least one pixel more at the end because of the MMX code (just in case someone wanna replace the 4000/8000)</comment>

    <comment type="block" pos:start="561:5" pos:end="561:39">/* align at 16 bytes for AltiVec */</comment>

    <for pos:start="563:5" pos:end="569:5">for <control pos:start="563:9" pos:end="563:36">(<init pos:start="563:10" pos:end="563:13"><expr pos:start="563:10" pos:end="563:12"><name pos:start="563:10" pos:end="563:10">i</name><operator pos:start="563:11" pos:end="563:11">=</operator><literal type="number" pos:start="563:12" pos:end="563:12">0</literal></expr>;</init> <condition pos:start="563:15" pos:end="563:31"><expr pos:start="563:15" pos:end="563:30"><name pos:start="563:15" pos:end="563:15">i</name><operator pos:start="563:16" pos:end="563:16">&lt;</operator><name pos:start="563:17" pos:end="563:30"><name pos:start="563:17" pos:end="563:17">c</name><operator pos:start="563:18" pos:end="563:19">-&gt;</operator><name pos:start="563:20" pos:end="563:30">vLumBufSize</name></name></expr>;</condition> <incr pos:start="563:33" pos:end="563:35"><expr pos:start="563:33" pos:end="563:35"><name pos:start="563:33" pos:end="563:33">i</name><operator pos:start="563:34" pos:end="563:35">++</operator></expr></incr>)</control> <block pos:start="563:38" pos:end="569:5">{<block_content pos:start="565:9" pos:end="567:57">

        <expr_stmt pos:start="565:9" pos:end="565:74"><expr pos:start="565:9" pos:end="565:73"><call pos:start="565:9" pos:end="565:73"><name pos:start="565:9" pos:end="565:25">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="565:26" pos:end="565:73">(<argument pos:start="565:27" pos:end="565:27"><expr pos:start="565:27" pos:end="565:27"><name pos:start="565:27" pos:end="565:27">c</name></expr></argument>, <argument pos:start="565:30" pos:end="565:59"><expr pos:start="565:30" pos:end="565:59"><name pos:start="565:30" pos:end="565:59"><name pos:start="565:30" pos:end="565:30">c</name><operator pos:start="565:31" pos:end="565:32">-&gt;</operator><name pos:start="565:33" pos:end="565:41">lumPixBuf</name><index pos:start="565:42" pos:end="565:59">[<expr pos:start="565:43" pos:end="565:58"><name pos:start="565:43" pos:end="565:43">i</name><operator pos:start="565:44" pos:end="565:44">+</operator><name pos:start="565:45" pos:end="565:58"><name pos:start="565:45" pos:end="565:45">c</name><operator pos:start="565:46" pos:end="565:47">-&gt;</operator><name pos:start="565:48" pos:end="565:58">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="565:62" pos:end="565:66"><expr pos:start="565:62" pos:end="565:66"><name pos:start="565:62" pos:end="565:64">VOF</name><operator pos:start="565:65" pos:end="565:65">+</operator><literal type="number" pos:start="565:66" pos:end="565:66">1</literal></expr></argument>, <argument pos:start="565:69" pos:end="565:72"><expr pos:start="565:69" pos:end="565:72"><name pos:start="565:69" pos:end="565:72">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="567:9" pos:end="567:57"><expr pos:start="567:9" pos:end="567:56"><name pos:start="567:9" pos:end="567:23"><name pos:start="567:9" pos:end="567:9">c</name><operator pos:start="567:10" pos:end="567:11">-&gt;</operator><name pos:start="567:12" pos:end="567:20">lumPixBuf</name><index pos:start="567:21" pos:end="567:23">[<expr pos:start="567:22" pos:end="567:22"><name pos:start="567:22" pos:end="567:22">i</name></expr>]</index></name> <operator pos:start="567:25" pos:end="567:25">=</operator> <name pos:start="567:27" pos:end="567:56"><name pos:start="567:27" pos:end="567:27">c</name><operator pos:start="567:28" pos:end="567:29">-&gt;</operator><name pos:start="567:30" pos:end="567:38">lumPixBuf</name><index pos:start="567:39" pos:end="567:56">[<expr pos:start="567:40" pos:end="567:55"><name pos:start="567:40" pos:end="567:40">i</name><operator pos:start="567:41" pos:end="567:41">+</operator><name pos:start="567:42" pos:end="567:55"><name pos:start="567:42" pos:end="567:42">c</name><operator pos:start="567:43" pos:end="567:44">-&gt;</operator><name pos:start="567:45" pos:end="567:55">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <for pos:start="571:5" pos:end="577:5">for <control pos:start="571:9" pos:end="571:36">(<init pos:start="571:10" pos:end="571:13"><expr pos:start="571:10" pos:end="571:12"><name pos:start="571:10" pos:end="571:10">i</name><operator pos:start="571:11" pos:end="571:11">=</operator><literal type="number" pos:start="571:12" pos:end="571:12">0</literal></expr>;</init> <condition pos:start="571:15" pos:end="571:31"><expr pos:start="571:15" pos:end="571:30"><name pos:start="571:15" pos:end="571:15">i</name><operator pos:start="571:16" pos:end="571:16">&lt;</operator><name pos:start="571:17" pos:end="571:30"><name pos:start="571:17" pos:end="571:17">c</name><operator pos:start="571:18" pos:end="571:19">-&gt;</operator><name pos:start="571:20" pos:end="571:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="571:33" pos:end="571:35"><expr pos:start="571:33" pos:end="571:35"><name pos:start="571:33" pos:end="571:33">i</name><operator pos:start="571:34" pos:end="571:35">++</operator></expr></incr>)</control> <block pos:start="571:38" pos:end="577:5">{<block_content pos:start="573:9" pos:end="575:57">

        <expr_stmt pos:start="573:9" pos:end="573:77"><expr pos:start="573:9" pos:end="573:76"><call pos:start="573:9" pos:end="573:76"><name pos:start="573:9" pos:end="573:24">FF_ALLOC_OR_GOTO</name><argument_list pos:start="573:25" pos:end="573:76">(<argument pos:start="573:26" pos:end="573:26"><expr pos:start="573:26" pos:end="573:26"><name pos:start="573:26" pos:end="573:26">c</name></expr></argument>, <argument pos:start="573:29" pos:end="573:58"><expr pos:start="573:29" pos:end="573:58"><name pos:start="573:29" pos:end="573:58"><name pos:start="573:29" pos:end="573:29">c</name><operator pos:start="573:30" pos:end="573:31">-&gt;</operator><name pos:start="573:32" pos:end="573:40">chrPixBuf</name><index pos:start="573:41" pos:end="573:58">[<expr pos:start="573:42" pos:end="573:57"><name pos:start="573:42" pos:end="573:42">i</name><operator pos:start="573:43" pos:end="573:43">+</operator><name pos:start="573:44" pos:end="573:57"><name pos:start="573:44" pos:end="573:44">c</name><operator pos:start="573:45" pos:end="573:46">-&gt;</operator><name pos:start="573:47" pos:end="573:57">vChrBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="573:61" pos:end="573:69"><expr pos:start="573:61" pos:end="573:69"><operator pos:start="573:61" pos:end="573:61">(</operator><name pos:start="573:62" pos:end="573:64">VOF</name><operator pos:start="573:65" pos:end="573:65">+</operator><literal type="number" pos:start="573:66" pos:end="573:66">1</literal><operator pos:start="573:67" pos:end="573:67">)</operator><operator pos:start="573:68" pos:end="573:68">*</operator><literal type="number" pos:start="573:69" pos:end="573:69">2</literal></expr></argument>, <argument pos:start="573:72" pos:end="573:75"><expr pos:start="573:72" pos:end="573:75"><name pos:start="573:72" pos:end="573:75">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="575:9" pos:end="575:57"><expr pos:start="575:9" pos:end="575:56"><name pos:start="575:9" pos:end="575:23"><name pos:start="575:9" pos:end="575:9">c</name><operator pos:start="575:10" pos:end="575:11">-&gt;</operator><name pos:start="575:12" pos:end="575:20">chrPixBuf</name><index pos:start="575:21" pos:end="575:23">[<expr pos:start="575:22" pos:end="575:22"><name pos:start="575:22" pos:end="575:22">i</name></expr>]</index></name> <operator pos:start="575:25" pos:end="575:25">=</operator> <name pos:start="575:27" pos:end="575:56"><name pos:start="575:27" pos:end="575:27">c</name><operator pos:start="575:28" pos:end="575:29">-&gt;</operator><name pos:start="575:30" pos:end="575:38">chrPixBuf</name><index pos:start="575:39" pos:end="575:56">[<expr pos:start="575:40" pos:end="575:55"><name pos:start="575:40" pos:end="575:40">i</name><operator pos:start="575:41" pos:end="575:41">+</operator><name pos:start="575:42" pos:end="575:55"><name pos:start="575:42" pos:end="575:42">c</name><operator pos:start="575:43" pos:end="575:44">-&gt;</operator><name pos:start="575:45" pos:end="575:55">vChrBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="579:5" pos:end="587:9"><if pos:start="579:5" pos:end="587:9">if <condition pos:start="579:8" pos:end="579:45">(<expr pos:start="579:9" pos:end="579:44"><name pos:start="579:9" pos:end="579:28">CONFIG_SWSCALE_ALPHA</name> <operator pos:start="579:30" pos:end="579:31">&amp;&amp;</operator> <name pos:start="579:33" pos:end="579:44"><name pos:start="579:33" pos:end="579:33">c</name><operator pos:start="579:34" pos:end="579:35">-&gt;</operator><name pos:start="579:36" pos:end="579:44">alpPixBuf</name></name></expr>)</condition><block type="pseudo" pos:start="581:9" pos:end="587:9"><block_content pos:start="581:9" pos:end="587:9">

        <for pos:start="581:9" pos:end="587:9">for <control pos:start="581:13" pos:end="581:40">(<init pos:start="581:14" pos:end="581:17"><expr pos:start="581:14" pos:end="581:16"><name pos:start="581:14" pos:end="581:14">i</name><operator pos:start="581:15" pos:end="581:15">=</operator><literal type="number" pos:start="581:16" pos:end="581:16">0</literal></expr>;</init> <condition pos:start="581:19" pos:end="581:35"><expr pos:start="581:19" pos:end="581:34"><name pos:start="581:19" pos:end="581:19">i</name><operator pos:start="581:20" pos:end="581:20">&lt;</operator><name pos:start="581:21" pos:end="581:34"><name pos:start="581:21" pos:end="581:21">c</name><operator pos:start="581:22" pos:end="581:23">-&gt;</operator><name pos:start="581:24" pos:end="581:34">vLumBufSize</name></name></expr>;</condition> <incr pos:start="581:37" pos:end="581:39"><expr pos:start="581:37" pos:end="581:39"><name pos:start="581:37" pos:end="581:37">i</name><operator pos:start="581:38" pos:end="581:39">++</operator></expr></incr>)</control> <block pos:start="581:42" pos:end="587:9">{<block_content pos:start="583:13" pos:end="585:61">

            <expr_stmt pos:start="583:13" pos:end="583:78"><expr pos:start="583:13" pos:end="583:77"><call pos:start="583:13" pos:end="583:77"><name pos:start="583:13" pos:end="583:29">FF_ALLOCZ_OR_GOTO</name><argument_list pos:start="583:30" pos:end="583:77">(<argument pos:start="583:31" pos:end="583:31"><expr pos:start="583:31" pos:end="583:31"><name pos:start="583:31" pos:end="583:31">c</name></expr></argument>, <argument pos:start="583:34" pos:end="583:63"><expr pos:start="583:34" pos:end="583:63"><name pos:start="583:34" pos:end="583:63"><name pos:start="583:34" pos:end="583:34">c</name><operator pos:start="583:35" pos:end="583:36">-&gt;</operator><name pos:start="583:37" pos:end="583:45">alpPixBuf</name><index pos:start="583:46" pos:end="583:63">[<expr pos:start="583:47" pos:end="583:62"><name pos:start="583:47" pos:end="583:47">i</name><operator pos:start="583:48" pos:end="583:48">+</operator><name pos:start="583:49" pos:end="583:62"><name pos:start="583:49" pos:end="583:49">c</name><operator pos:start="583:50" pos:end="583:51">-&gt;</operator><name pos:start="583:52" pos:end="583:62">vLumBufSize</name></name></expr>]</index></name></expr></argument>, <argument pos:start="583:66" pos:end="583:70"><expr pos:start="583:66" pos:end="583:70"><name pos:start="583:66" pos:end="583:68">VOF</name><operator pos:start="583:69" pos:end="583:69">+</operator><literal type="number" pos:start="583:70" pos:end="583:70">1</literal></expr></argument>, <argument pos:start="583:73" pos:end="583:76"><expr pos:start="583:73" pos:end="583:76"><name pos:start="583:73" pos:end="583:76">fail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:61"><expr pos:start="585:13" pos:end="585:60"><name pos:start="585:13" pos:end="585:27"><name pos:start="585:13" pos:end="585:13">c</name><operator pos:start="585:14" pos:end="585:15">-&gt;</operator><name pos:start="585:16" pos:end="585:24">alpPixBuf</name><index pos:start="585:25" pos:end="585:27">[<expr pos:start="585:26" pos:end="585:26"><name pos:start="585:26" pos:end="585:26">i</name></expr>]</index></name> <operator pos:start="585:29" pos:end="585:29">=</operator> <name pos:start="585:31" pos:end="585:60"><name pos:start="585:31" pos:end="585:31">c</name><operator pos:start="585:32" pos:end="585:33">-&gt;</operator><name pos:start="585:34" pos:end="585:42">alpPixBuf</name><index pos:start="585:43" pos:end="585:60">[<expr pos:start="585:44" pos:end="585:59"><name pos:start="585:44" pos:end="585:44">i</name><operator pos:start="585:45" pos:end="585:45">+</operator><name pos:start="585:46" pos:end="585:59"><name pos:start="585:46" pos:end="585:46">c</name><operator pos:start="585:47" pos:end="585:48">-&gt;</operator><name pos:start="585:49" pos:end="585:59">vLumBufSize</name></name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for></block_content></block></if></if_stmt>



    <comment type="line" pos:start="591:5" pos:end="591:79">//try to avoid drawing green stuff between the right end and the stride end</comment>

    <for pos:start="593:5" pos:end="593:76">for <control pos:start="593:9" pos:end="593:36">(<init pos:start="593:10" pos:end="593:13"><expr pos:start="593:10" pos:end="593:12"><name pos:start="593:10" pos:end="593:10">i</name><operator pos:start="593:11" pos:end="593:11">=</operator><literal type="number" pos:start="593:12" pos:end="593:12">0</literal></expr>;</init> <condition pos:start="593:15" pos:end="593:31"><expr pos:start="593:15" pos:end="593:30"><name pos:start="593:15" pos:end="593:15">i</name><operator pos:start="593:16" pos:end="593:16">&lt;</operator><name pos:start="593:17" pos:end="593:30"><name pos:start="593:17" pos:end="593:17">c</name><operator pos:start="593:18" pos:end="593:19">-&gt;</operator><name pos:start="593:20" pos:end="593:30">vChrBufSize</name></name></expr>;</condition> <incr pos:start="593:33" pos:end="593:35"><expr pos:start="593:33" pos:end="593:35"><name pos:start="593:33" pos:end="593:33">i</name><operator pos:start="593:34" pos:end="593:35">++</operator></expr></incr>)</control><block type="pseudo" pos:start="593:38" pos:end="593:76"><block_content pos:start="593:38" pos:end="593:76"> <expr_stmt pos:start="593:38" pos:end="593:76"><expr pos:start="593:38" pos:end="593:75"><call pos:start="593:38" pos:end="593:75"><name pos:start="593:38" pos:end="593:43">memset</name><argument_list pos:start="593:44" pos:end="593:75">(<argument pos:start="593:45" pos:end="593:59"><expr pos:start="593:45" pos:end="593:59"><name pos:start="593:45" pos:end="593:59"><name pos:start="593:45" pos:end="593:45">c</name><operator pos:start="593:46" pos:end="593:47">-&gt;</operator><name pos:start="593:48" pos:end="593:56">chrPixBuf</name><index pos:start="593:57" pos:end="593:59">[<expr pos:start="593:58" pos:end="593:58"><name pos:start="593:58" pos:end="593:58">i</name></expr>]</index></name></expr></argument>, <argument pos:start="593:62" pos:end="593:63"><expr pos:start="593:62" pos:end="593:63"><literal type="number" pos:start="593:62" pos:end="593:63">64</literal></expr></argument>, <argument pos:start="593:66" pos:end="593:74"><expr pos:start="593:66" pos:end="593:74"><operator pos:start="593:66" pos:end="593:66">(</operator><name pos:start="593:67" pos:end="593:69">VOF</name><operator pos:start="593:70" pos:end="593:70">+</operator><literal type="number" pos:start="593:71" pos:end="593:71">1</literal><operator pos:start="593:72" pos:end="593:72">)</operator><operator pos:start="593:73" pos:end="593:73">*</operator><literal type="number" pos:start="593:74" pos:end="593:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="597:5" pos:end="597:26"><expr pos:start="597:5" pos:end="597:25"><call pos:start="597:5" pos:end="597:25"><name pos:start="597:5" pos:end="597:10">assert</name><argument_list pos:start="597:11" pos:end="597:25">(<argument pos:start="597:12" pos:end="597:24"><expr pos:start="597:12" pos:end="597:24"><literal type="number" pos:start="597:12" pos:end="597:12">2</literal><operator pos:start="597:13" pos:end="597:13">*</operator><name pos:start="597:14" pos:end="597:17">VOFW</name> <operator pos:start="597:19" pos:end="597:20">==</operator> <name pos:start="597:22" pos:end="597:24">VOF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="601:5" pos:end="601:31"><expr pos:start="601:5" pos:end="601:30"><call pos:start="601:5" pos:end="601:30"><name pos:start="601:5" pos:end="601:10">assert</name><argument_list pos:start="601:11" pos:end="601:30">(<argument pos:start="601:12" pos:end="601:29"><expr pos:start="601:12" pos:end="601:29"><name pos:start="601:12" pos:end="601:21"><name pos:start="601:12" pos:end="601:12">c</name><operator pos:start="601:13" pos:end="601:14">-&gt;</operator><name pos:start="601:15" pos:end="601:21">chrDstH</name></name> <operator pos:start="601:23" pos:end="601:24">&lt;=</operator> <name pos:start="601:26" pos:end="601:29">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="605:5" pos:end="813:5"><if pos:start="605:5" pos:end="813:5">if <condition pos:start="605:8" pos:end="605:29">(<expr pos:start="605:9" pos:end="605:28"><name pos:start="605:9" pos:end="605:13">flags</name><operator pos:start="605:14" pos:end="605:14">&amp;</operator><name pos:start="605:15" pos:end="605:28">SWS_PRINT_INFO</name></expr>)</condition> <block pos:start="605:31" pos:end="813:5">{<block_content pos:start="607:9" pos:end="811:87">

        <if_stmt pos:start="607:9" pos:end="653:59"><if pos:start="607:9" pos:end="609:61">if <condition pos:start="607:12" pos:end="607:36">(<expr pos:start="607:13" pos:end="607:35"><name pos:start="607:13" pos:end="607:17">flags</name><operator pos:start="607:18" pos:end="607:18">&amp;</operator><name pos:start="607:19" pos:end="607:35">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="609:13" pos:end="609:61"><block_content pos:start="609:13" pos:end="609:61">

            <expr_stmt pos:start="609:13" pos:end="609:61"><expr pos:start="609:13" pos:end="609:60"><call pos:start="609:13" pos:end="609:60"><name pos:start="609:13" pos:end="609:18">av_log</name><argument_list pos:start="609:19" pos:end="609:60">(<argument pos:start="609:20" pos:end="609:20"><expr pos:start="609:20" pos:end="609:20"><name pos:start="609:20" pos:end="609:20">c</name></expr></argument>, <argument pos:start="609:23" pos:end="609:33"><expr pos:start="609:23" pos:end="609:33"><name pos:start="609:23" pos:end="609:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="609:36" pos:end="609:59"><expr pos:start="609:36" pos:end="609:59"><literal type="string" pos:start="609:36" pos:end="609:59">"FAST_BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="611:9" pos:end="613:56">else if <condition pos:start="611:17" pos:end="611:36">(<expr pos:start="611:18" pos:end="611:35"><name pos:start="611:18" pos:end="611:22">flags</name><operator pos:start="611:23" pos:end="611:23">&amp;</operator><name pos:start="611:24" pos:end="611:35">SWS_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="613:13" pos:end="613:56"><block_content pos:start="613:13" pos:end="613:56">

            <expr_stmt pos:start="613:13" pos:end="613:56"><expr pos:start="613:13" pos:end="613:55"><call pos:start="613:13" pos:end="613:55"><name pos:start="613:13" pos:end="613:18">av_log</name><argument_list pos:start="613:19" pos:end="613:55">(<argument pos:start="613:20" pos:end="613:20"><expr pos:start="613:20" pos:end="613:20"><name pos:start="613:20" pos:end="613:20">c</name></expr></argument>, <argument pos:start="613:23" pos:end="613:33"><expr pos:start="613:23" pos:end="613:33"><name pos:start="613:23" pos:end="613:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="613:36" pos:end="613:54"><expr pos:start="613:36" pos:end="613:54"><literal type="string" pos:start="613:36" pos:end="613:54">"BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="615:9" pos:end="617:55">else if <condition pos:start="615:17" pos:end="615:35">(<expr pos:start="615:18" pos:end="615:34"><name pos:start="615:18" pos:end="615:22">flags</name><operator pos:start="615:23" pos:end="615:23">&amp;</operator><name pos:start="615:24" pos:end="615:34">SWS_BICUBIC</name></expr>)</condition><block type="pseudo" pos:start="617:13" pos:end="617:55"><block_content pos:start="617:13" pos:end="617:55">

            <expr_stmt pos:start="617:13" pos:end="617:55"><expr pos:start="617:13" pos:end="617:54"><call pos:start="617:13" pos:end="617:54"><name pos:start="617:13" pos:end="617:18">av_log</name><argument_list pos:start="617:19" pos:end="617:54">(<argument pos:start="617:20" pos:end="617:20"><expr pos:start="617:20" pos:end="617:20"><name pos:start="617:20" pos:end="617:20">c</name></expr></argument>, <argument pos:start="617:23" pos:end="617:33"><expr pos:start="617:23" pos:end="617:33"><name pos:start="617:23" pos:end="617:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="617:36" pos:end="617:53"><expr pos:start="617:36" pos:end="617:53"><literal type="string" pos:start="617:36" pos:end="617:53">"BICUBIC scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="619:9" pos:end="621:60">else if <condition pos:start="619:17" pos:end="619:29">(<expr pos:start="619:18" pos:end="619:28"><name pos:start="619:18" pos:end="619:22">flags</name><operator pos:start="619:23" pos:end="619:23">&amp;</operator><name pos:start="619:24" pos:end="619:28">SWS_X</name></expr>)</condition><block type="pseudo" pos:start="621:13" pos:end="621:60"><block_content pos:start="621:13" pos:end="621:60">

            <expr_stmt pos:start="621:13" pos:end="621:60"><expr pos:start="621:13" pos:end="621:59"><call pos:start="621:13" pos:end="621:59"><name pos:start="621:13" pos:end="621:18">av_log</name><argument_list pos:start="621:19" pos:end="621:59">(<argument pos:start="621:20" pos:end="621:20"><expr pos:start="621:20" pos:end="621:20"><name pos:start="621:20" pos:end="621:20">c</name></expr></argument>, <argument pos:start="621:23" pos:end="621:33"><expr pos:start="621:23" pos:end="621:33"><name pos:start="621:23" pos:end="621:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="621:36" pos:end="621:58"><expr pos:start="621:36" pos:end="621:58"><literal type="string" pos:start="621:36" pos:end="621:58">"Experimental scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="623:9" pos:end="625:72">else if <condition pos:start="623:17" pos:end="623:33">(<expr pos:start="623:18" pos:end="623:32"><name pos:start="623:18" pos:end="623:22">flags</name><operator pos:start="623:23" pos:end="623:23">&amp;</operator><name pos:start="623:24" pos:end="623:32">SWS_POINT</name></expr>)</condition><block type="pseudo" pos:start="625:13" pos:end="625:72"><block_content pos:start="625:13" pos:end="625:72">

            <expr_stmt pos:start="625:13" pos:end="625:72"><expr pos:start="625:13" pos:end="625:71"><call pos:start="625:13" pos:end="625:71"><name pos:start="625:13" pos:end="625:18">av_log</name><argument_list pos:start="625:19" pos:end="625:71">(<argument pos:start="625:20" pos:end="625:20"><expr pos:start="625:20" pos:end="625:20"><name pos:start="625:20" pos:end="625:20">c</name></expr></argument>, <argument pos:start="625:23" pos:end="625:33"><expr pos:start="625:23" pos:end="625:33"><name pos:start="625:23" pos:end="625:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="625:36" pos:end="625:70"><expr pos:start="625:36" pos:end="625:70"><literal type="string" pos:start="625:36" pos:end="625:70">"Nearest Neighbor / POINT scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="627:9" pos:end="629:62">else if <condition pos:start="627:17" pos:end="627:32">(<expr pos:start="627:18" pos:end="627:31"><name pos:start="627:18" pos:end="627:22">flags</name><operator pos:start="627:23" pos:end="627:23">&amp;</operator><name pos:start="627:24" pos:end="627:31">SWS_AREA</name></expr>)</condition><block type="pseudo" pos:start="629:13" pos:end="629:62"><block_content pos:start="629:13" pos:end="629:62">

            <expr_stmt pos:start="629:13" pos:end="629:62"><expr pos:start="629:13" pos:end="629:61"><call pos:start="629:13" pos:end="629:61"><name pos:start="629:13" pos:end="629:18">av_log</name><argument_list pos:start="629:19" pos:end="629:61">(<argument pos:start="629:20" pos:end="629:20"><expr pos:start="629:20" pos:end="629:20"><name pos:start="629:20" pos:end="629:20">c</name></expr></argument>, <argument pos:start="629:23" pos:end="629:33"><expr pos:start="629:23" pos:end="629:33"><name pos:start="629:23" pos:end="629:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="629:36" pos:end="629:60"><expr pos:start="629:36" pos:end="629:60"><literal type="string" pos:start="629:36" pos:end="629:60">"Area Averaging scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="631:9" pos:end="633:78">else if <condition pos:start="631:17" pos:end="631:36">(<expr pos:start="631:18" pos:end="631:35"><name pos:start="631:18" pos:end="631:22">flags</name><operator pos:start="631:23" pos:end="631:23">&amp;</operator><name pos:start="631:24" pos:end="631:35">SWS_BICUBLIN</name></expr>)</condition><block type="pseudo" pos:start="633:13" pos:end="633:78"><block_content pos:start="633:13" pos:end="633:78">

            <expr_stmt pos:start="633:13" pos:end="633:78"><expr pos:start="633:13" pos:end="633:77"><call pos:start="633:13" pos:end="633:77"><name pos:start="633:13" pos:end="633:18">av_log</name><argument_list pos:start="633:19" pos:end="633:77">(<argument pos:start="633:20" pos:end="633:20"><expr pos:start="633:20" pos:end="633:20"><name pos:start="633:20" pos:end="633:20">c</name></expr></argument>, <argument pos:start="633:23" pos:end="633:33"><expr pos:start="633:23" pos:end="633:33"><name pos:start="633:23" pos:end="633:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="633:36" pos:end="633:76"><expr pos:start="633:36" pos:end="633:76"><literal type="string" pos:start="633:36" pos:end="633:76">"luma BICUBIC / chroma BILINEAR scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="635:9" pos:end="637:56">else if <condition pos:start="635:17" pos:end="635:33">(<expr pos:start="635:18" pos:end="635:32"><name pos:start="635:18" pos:end="635:22">flags</name><operator pos:start="635:23" pos:end="635:23">&amp;</operator><name pos:start="635:24" pos:end="635:32">SWS_GAUSS</name></expr>)</condition><block type="pseudo" pos:start="637:13" pos:end="637:56"><block_content pos:start="637:13" pos:end="637:56">

            <expr_stmt pos:start="637:13" pos:end="637:56"><expr pos:start="637:13" pos:end="637:55"><call pos:start="637:13" pos:end="637:55"><name pos:start="637:13" pos:end="637:18">av_log</name><argument_list pos:start="637:19" pos:end="637:55">(<argument pos:start="637:20" pos:end="637:20"><expr pos:start="637:20" pos:end="637:20"><name pos:start="637:20" pos:end="637:20">c</name></expr></argument>, <argument pos:start="637:23" pos:end="637:33"><expr pos:start="637:23" pos:end="637:33"><name pos:start="637:23" pos:end="637:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="637:36" pos:end="637:54"><expr pos:start="637:36" pos:end="637:54"><literal type="string" pos:start="637:36" pos:end="637:54">"Gaussian scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="639:9" pos:end="641:52">else if <condition pos:start="639:17" pos:end="639:32">(<expr pos:start="639:18" pos:end="639:31"><name pos:start="639:18" pos:end="639:22">flags</name><operator pos:start="639:23" pos:end="639:23">&amp;</operator><name pos:start="639:24" pos:end="639:31">SWS_SINC</name></expr>)</condition><block type="pseudo" pos:start="641:13" pos:end="641:52"><block_content pos:start="641:13" pos:end="641:52">

            <expr_stmt pos:start="641:13" pos:end="641:52"><expr pos:start="641:13" pos:end="641:51"><call pos:start="641:13" pos:end="641:51"><name pos:start="641:13" pos:end="641:18">av_log</name><argument_list pos:start="641:19" pos:end="641:51">(<argument pos:start="641:20" pos:end="641:20"><expr pos:start="641:20" pos:end="641:20"><name pos:start="641:20" pos:end="641:20">c</name></expr></argument>, <argument pos:start="641:23" pos:end="641:33"><expr pos:start="641:23" pos:end="641:33"><name pos:start="641:23" pos:end="641:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="641:36" pos:end="641:50"><expr pos:start="641:36" pos:end="641:50"><literal type="string" pos:start="641:36" pos:end="641:50">"Sinc scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="643:9" pos:end="645:55">else if <condition pos:start="643:17" pos:end="643:35">(<expr pos:start="643:18" pos:end="643:34"><name pos:start="643:18" pos:end="643:22">flags</name><operator pos:start="643:23" pos:end="643:23">&amp;</operator><name pos:start="643:24" pos:end="643:34">SWS_LANCZOS</name></expr>)</condition><block type="pseudo" pos:start="645:13" pos:end="645:55"><block_content pos:start="645:13" pos:end="645:55">

            <expr_stmt pos:start="645:13" pos:end="645:55"><expr pos:start="645:13" pos:end="645:54"><call pos:start="645:13" pos:end="645:54"><name pos:start="645:13" pos:end="645:18">av_log</name><argument_list pos:start="645:19" pos:end="645:54">(<argument pos:start="645:20" pos:end="645:20"><expr pos:start="645:20" pos:end="645:20"><name pos:start="645:20" pos:end="645:20">c</name></expr></argument>, <argument pos:start="645:23" pos:end="645:33"><expr pos:start="645:23" pos:end="645:33"><name pos:start="645:23" pos:end="645:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="645:36" pos:end="645:53"><expr pos:start="645:36" pos:end="645:53"><literal type="string" pos:start="645:36" pos:end="645:53">"Lanczos scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="647:9" pos:end="649:62">else if <condition pos:start="647:17" pos:end="647:34">(<expr pos:start="647:18" pos:end="647:33"><name pos:start="647:18" pos:end="647:22">flags</name><operator pos:start="647:23" pos:end="647:23">&amp;</operator><name pos:start="647:24" pos:end="647:33">SWS_SPLINE</name></expr>)</condition><block type="pseudo" pos:start="649:13" pos:end="649:62"><block_content pos:start="649:13" pos:end="649:62">

            <expr_stmt pos:start="649:13" pos:end="649:62"><expr pos:start="649:13" pos:end="649:61"><call pos:start="649:13" pos:end="649:61"><name pos:start="649:13" pos:end="649:18">av_log</name><argument_list pos:start="649:19" pos:end="649:61">(<argument pos:start="649:20" pos:end="649:20"><expr pos:start="649:20" pos:end="649:20"><name pos:start="649:20" pos:end="649:20">c</name></expr></argument>, <argument pos:start="649:23" pos:end="649:33"><expr pos:start="649:23" pos:end="649:33"><name pos:start="649:23" pos:end="649:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="649:36" pos:end="649:60"><expr pos:start="649:36" pos:end="649:60"><literal type="string" pos:start="649:36" pos:end="649:60">"Bicubic spline scaler, "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="651:9" pos:end="653:59">else<block type="pseudo" pos:start="653:13" pos:end="653:59"><block_content pos:start="653:13" pos:end="653:59">

            <expr_stmt pos:start="653:13" pos:end="653:59"><expr pos:start="653:13" pos:end="653:58"><call pos:start="653:13" pos:end="653:58"><name pos:start="653:13" pos:end="653:18">av_log</name><argument_list pos:start="653:19" pos:end="653:58">(<argument pos:start="653:20" pos:end="653:20"><expr pos:start="653:20" pos:end="653:20"><name pos:start="653:20" pos:end="653:20">c</name></expr></argument>, <argument pos:start="653:23" pos:end="653:33"><expr pos:start="653:23" pos:end="653:33"><name pos:start="653:23" pos:end="653:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="653:36" pos:end="653:57"><expr pos:start="653:36" pos:end="653:57"><literal type="string" pos:start="653:36" pos:end="653:57">"ehh flags invalid?! "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="657:9" pos:end="671:43"><expr pos:start="657:9" pos:end="671:42"><call pos:start="657:9" pos:end="671:42"><name pos:start="657:9" pos:end="657:14">av_log</name><argument_list pos:start="657:15" pos:end="671:42">(<argument pos:start="657:16" pos:end="657:16"><expr pos:start="657:16" pos:end="657:16"><name pos:start="657:16" pos:end="657:16">c</name></expr></argument>, <argument pos:start="657:19" pos:end="657:29"><expr pos:start="657:19" pos:end="657:29"><name pos:start="657:19" pos:end="657:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="657:32" pos:end="657:49"><expr pos:start="657:32" pos:end="657:49"><literal type="string" pos:start="657:32" pos:end="657:49">"from %s to %s%s "</literal></expr></argument>,

               <argument pos:start="659:16" pos:end="659:41"><expr pos:start="659:16" pos:end="659:41"><call pos:start="659:16" pos:end="659:41"><name pos:start="659:16" pos:end="659:30">sws_format_name</name><argument_list pos:start="659:31" pos:end="659:41">(<argument pos:start="659:32" pos:end="659:40"><expr pos:start="659:32" pos:end="659:40"><name pos:start="659:32" pos:end="659:40">srcFormat</name></expr></argument>)</argument_list></call></expr></argument>,

<cpp:ifdef pos:start="661:1" pos:end="661:18">#<cpp:directive pos:start="661:2" pos:end="661:6">ifdef</cpp:directive> <name pos:start="661:8" pos:end="661:18">DITHER1XBPP</name></cpp:ifdef>

               <argument pos:start="663:16" pos:end="663:92"><expr pos:start="663:16" pos:end="663:92"><ternary pos:start="663:16" pos:end="663:92"><condition pos:start="663:16" pos:end="663:75"><expr pos:start="663:16" pos:end="663:73"><name pos:start="663:16" pos:end="663:24">dstFormat</name> <operator pos:start="663:26" pos:end="663:27">==</operator> <name pos:start="663:29" pos:end="663:42">PIX_FMT_BGR555</name> <operator pos:start="663:44" pos:end="663:45">||</operator> <name pos:start="663:47" pos:end="663:55">dstFormat</name> <operator pos:start="663:57" pos:end="663:58">==</operator> <name pos:start="663:60" pos:end="663:73">PIX_FMT_BGR565</name></expr> ?</condition><then pos:start="663:77" pos:end="663:87"> <expr pos:start="663:77" pos:end="663:87"><literal type="string" pos:start="663:77" pos:end="663:87">"dithered "</literal></expr> </then><else pos:start="663:89" pos:end="663:92">: <expr pos:start="663:91" pos:end="663:92"><literal type="string" pos:start="663:91" pos:end="663:92">""</literal></expr></else></ternary></expr></argument>,

<cpp:else pos:start="665:1" pos:end="665:5">#<cpp:directive pos:start="665:2" pos:end="665:5">else</cpp:directive></cpp:else>

               <argument pos:start="667:16" pos:end="667:17"><expr pos:start="667:16" pos:end="667:17"><literal type="string" pos:start="667:16" pos:end="667:17">""</literal></expr></argument>,

<cpp:endif pos:start="669:1" pos:end="669:6">#<cpp:directive pos:start="669:2" pos:end="669:6">endif</cpp:directive></cpp:endif>

               <argument pos:start="671:16" pos:end="671:41"><expr pos:start="671:16" pos:end="671:41"><call pos:start="671:16" pos:end="671:41"><name pos:start="671:16" pos:end="671:30">sws_format_name</name><argument_list pos:start="671:31" pos:end="671:41">(<argument pos:start="671:32" pos:end="671:40"><expr pos:start="671:32" pos:end="671:40"><name pos:start="671:32" pos:end="671:40">dstFormat</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="675:9" pos:end="693:48"><if pos:start="675:9" pos:end="677:51">if <condition pos:start="675:12" pos:end="675:38">(<expr pos:start="675:13" pos:end="675:37"><name pos:start="675:13" pos:end="675:17">flags</name> <operator pos:start="675:19" pos:end="675:19">&amp;</operator> <name pos:start="675:21" pos:end="675:37">SWS_CPU_CAPS_MMX2</name></expr>)</condition><block type="pseudo" pos:start="677:13" pos:end="677:51"><block_content pos:start="677:13" pos:end="677:51">

            <expr_stmt pos:start="677:13" pos:end="677:51"><expr pos:start="677:13" pos:end="677:50"><call pos:start="677:13" pos:end="677:50"><name pos:start="677:13" pos:end="677:18">av_log</name><argument_list pos:start="677:19" pos:end="677:50">(<argument pos:start="677:20" pos:end="677:20"><expr pos:start="677:20" pos:end="677:20"><name pos:start="677:20" pos:end="677:20">c</name></expr></argument>, <argument pos:start="677:23" pos:end="677:33"><expr pos:start="677:23" pos:end="677:33"><name pos:start="677:23" pos:end="677:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="677:36" pos:end="677:49"><expr pos:start="677:36" pos:end="677:49"><literal type="string" pos:start="677:36" pos:end="677:49">"using MMX2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="679:9" pos:end="681:52">else if <condition pos:start="679:17" pos:end="679:44">(<expr pos:start="679:18" pos:end="679:43"><name pos:start="679:18" pos:end="679:22">flags</name> <operator pos:start="679:24" pos:end="679:24">&amp;</operator> <name pos:start="679:26" pos:end="679:43">SWS_CPU_CAPS_3DNOW</name></expr>)</condition><block type="pseudo" pos:start="681:13" pos:end="681:52"><block_content pos:start="681:13" pos:end="681:52">

            <expr_stmt pos:start="681:13" pos:end="681:52"><expr pos:start="681:13" pos:end="681:51"><call pos:start="681:13" pos:end="681:51"><name pos:start="681:13" pos:end="681:18">av_log</name><argument_list pos:start="681:19" pos:end="681:51">(<argument pos:start="681:20" pos:end="681:20"><expr pos:start="681:20" pos:end="681:20"><name pos:start="681:20" pos:end="681:20">c</name></expr></argument>, <argument pos:start="681:23" pos:end="681:33"><expr pos:start="681:23" pos:end="681:33"><name pos:start="681:23" pos:end="681:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="681:36" pos:end="681:50"><expr pos:start="681:36" pos:end="681:50"><literal type="string" pos:start="681:36" pos:end="681:50">"using 3DNOW\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="683:9" pos:end="685:50">else if <condition pos:start="683:17" pos:end="683:42">(<expr pos:start="683:18" pos:end="683:41"><name pos:start="683:18" pos:end="683:22">flags</name> <operator pos:start="683:24" pos:end="683:24">&amp;</operator> <name pos:start="683:26" pos:end="683:41">SWS_CPU_CAPS_MMX</name></expr>)</condition><block type="pseudo" pos:start="685:13" pos:end="685:50"><block_content pos:start="685:13" pos:end="685:50">

            <expr_stmt pos:start="685:13" pos:end="685:50"><expr pos:start="685:13" pos:end="685:49"><call pos:start="685:13" pos:end="685:49"><name pos:start="685:13" pos:end="685:18">av_log</name><argument_list pos:start="685:19" pos:end="685:49">(<argument pos:start="685:20" pos:end="685:20"><expr pos:start="685:20" pos:end="685:20"><name pos:start="685:20" pos:end="685:20">c</name></expr></argument>, <argument pos:start="685:23" pos:end="685:33"><expr pos:start="685:23" pos:end="685:33"><name pos:start="685:23" pos:end="685:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="685:36" pos:end="685:48"><expr pos:start="685:36" pos:end="685:48"><literal type="string" pos:start="685:36" pos:end="685:48">"using MMX\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="687:9" pos:end="689:54">else if <condition pos:start="687:17" pos:end="687:46">(<expr pos:start="687:18" pos:end="687:45"><name pos:start="687:18" pos:end="687:22">flags</name> <operator pos:start="687:24" pos:end="687:24">&amp;</operator> <name pos:start="687:26" pos:end="687:45">SWS_CPU_CAPS_ALTIVEC</name></expr>)</condition><block type="pseudo" pos:start="689:13" pos:end="689:54"><block_content pos:start="689:13" pos:end="689:54">

            <expr_stmt pos:start="689:13" pos:end="689:54"><expr pos:start="689:13" pos:end="689:53"><call pos:start="689:13" pos:end="689:53"><name pos:start="689:13" pos:end="689:18">av_log</name><argument_list pos:start="689:19" pos:end="689:53">(<argument pos:start="689:20" pos:end="689:20"><expr pos:start="689:20" pos:end="689:20"><name pos:start="689:20" pos:end="689:20">c</name></expr></argument>, <argument pos:start="689:23" pos:end="689:33"><expr pos:start="689:23" pos:end="689:33"><name pos:start="689:23" pos:end="689:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="689:36" pos:end="689:52"><expr pos:start="689:36" pos:end="689:52"><literal type="string" pos:start="689:36" pos:end="689:52">"using AltiVec\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="691:9" pos:end="693:48">else<block type="pseudo" pos:start="693:13" pos:end="693:48"><block_content pos:start="693:13" pos:end="693:48">

            <expr_stmt pos:start="693:13" pos:end="693:48"><expr pos:start="693:13" pos:end="693:47"><call pos:start="693:13" pos:end="693:47"><name pos:start="693:13" pos:end="693:18">av_log</name><argument_list pos:start="693:19" pos:end="693:47">(<argument pos:start="693:20" pos:end="693:20"><expr pos:start="693:20" pos:end="693:20"><name pos:start="693:20" pos:end="693:20">c</name></expr></argument>, <argument pos:start="693:23" pos:end="693:33"><expr pos:start="693:23" pos:end="693:33"><name pos:start="693:23" pos:end="693:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="693:36" pos:end="693:46"><expr pos:start="693:36" pos:end="693:46"><literal type="string" pos:start="693:36" pos:end="693:46">"using C\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="697:9" pos:end="751:9"><if pos:start="697:9" pos:end="733:9">if <condition pos:start="697:12" pos:end="697:37">(<expr pos:start="697:13" pos:end="697:36"><name pos:start="697:13" pos:end="697:17">flags</name> <operator pos:start="697:19" pos:end="697:19">&amp;</operator> <name pos:start="697:21" pos:end="697:36">SWS_CPU_CAPS_MMX</name></expr>)</condition> <block pos:start="697:39" pos:end="733:9">{<block_content pos:start="699:13" pos:end="731:13">

            <if_stmt pos:start="699:13" pos:end="731:13"><if pos:start="699:13" pos:end="701:102">if <condition pos:start="699:16" pos:end="699:62">(<expr pos:start="699:17" pos:end="699:61"><name pos:start="699:17" pos:end="699:32"><name pos:start="699:17" pos:end="699:17">c</name><operator pos:start="699:18" pos:end="699:19">-&gt;</operator><name pos:start="699:20" pos:end="699:32">canMMX2BeUsed</name></name> <operator pos:start="699:34" pos:end="699:35">&amp;&amp;</operator> <operator pos:start="699:37" pos:end="699:37">(</operator><name pos:start="699:38" pos:end="699:42">flags</name><operator pos:start="699:43" pos:end="699:43">&amp;</operator><name pos:start="699:44" pos:end="699:60">SWS_FAST_BILINEAR</name><operator pos:start="699:61" pos:end="699:61">)</operator></expr>)</condition><block type="pseudo" pos:start="701:17" pos:end="701:102"><block_content pos:start="701:17" pos:end="701:102">

                <expr_stmt pos:start="701:17" pos:end="701:102"><expr pos:start="701:17" pos:end="701:101"><call pos:start="701:17" pos:end="701:101"><name pos:start="701:17" pos:end="701:22">av_log</name><argument_list pos:start="701:23" pos:end="701:101">(<argument pos:start="701:24" pos:end="701:24"><expr pos:start="701:24" pos:end="701:24"><name pos:start="701:24" pos:end="701:24">c</name></expr></argument>, <argument pos:start="701:27" pos:end="701:40"><expr pos:start="701:27" pos:end="701:40"><name pos:start="701:27" pos:end="701:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="701:43" pos:end="701:100"><expr pos:start="701:43" pos:end="701:100"><literal type="string" pos:start="701:43" pos:end="701:100">"using FAST_BILINEAR MMX2 scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="703:13" pos:end="731:13">else <block pos:start="703:18" pos:end="731:13">{<block_content pos:start="705:17" pos:end="729:109">

                <if_stmt pos:start="705:17" pos:end="715:107"><if pos:start="705:17" pos:end="707:107">if <condition pos:start="705:20" pos:end="705:41">(<expr pos:start="705:21" pos:end="705:40"><name pos:start="705:21" pos:end="705:37"><name pos:start="705:21" pos:end="705:21">c</name><operator pos:start="705:22" pos:end="705:23">-&gt;</operator><name pos:start="705:24" pos:end="705:37">hLumFilterSize</name></name><operator pos:start="705:38" pos:end="705:39">==</operator><literal type="number" pos:start="705:40" pos:end="705:40">4</literal></expr>)</condition><block type="pseudo" pos:start="707:21" pos:end="707:107"><block_content pos:start="707:21" pos:end="707:107">

                    <expr_stmt pos:start="707:21" pos:end="707:107"><expr pos:start="707:21" pos:end="707:106"><call pos:start="707:21" pos:end="707:106"><name pos:start="707:21" pos:end="707:26">av_log</name><argument_list pos:start="707:27" pos:end="707:106">(<argument pos:start="707:28" pos:end="707:28"><expr pos:start="707:28" pos:end="707:28"><name pos:start="707:28" pos:end="707:28">c</name></expr></argument>, <argument pos:start="707:31" pos:end="707:44"><expr pos:start="707:31" pos:end="707:44"><name pos:start="707:31" pos:end="707:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="707:47" pos:end="707:105"><expr pos:start="707:47" pos:end="707:105"><literal type="string" pos:start="707:47" pos:end="707:105">"using 4-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="709:17" pos:end="711:107">else if <condition pos:start="709:25" pos:end="709:46">(<expr pos:start="709:26" pos:end="709:45"><name pos:start="709:26" pos:end="709:42"><name pos:start="709:26" pos:end="709:26">c</name><operator pos:start="709:27" pos:end="709:28">-&gt;</operator><name pos:start="709:29" pos:end="709:42">hLumFilterSize</name></name><operator pos:start="709:43" pos:end="709:44">==</operator><literal type="number" pos:start="709:45" pos:end="709:45">8</literal></expr>)</condition><block type="pseudo" pos:start="711:21" pos:end="711:107"><block_content pos:start="711:21" pos:end="711:107">

                    <expr_stmt pos:start="711:21" pos:end="711:107"><expr pos:start="711:21" pos:end="711:106"><call pos:start="711:21" pos:end="711:106"><name pos:start="711:21" pos:end="711:26">av_log</name><argument_list pos:start="711:27" pos:end="711:106">(<argument pos:start="711:28" pos:end="711:28"><expr pos:start="711:28" pos:end="711:28"><name pos:start="711:28" pos:end="711:28">c</name></expr></argument>, <argument pos:start="711:31" pos:end="711:44"><expr pos:start="711:31" pos:end="711:44"><name pos:start="711:31" pos:end="711:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="711:47" pos:end="711:105"><expr pos:start="711:47" pos:end="711:105"><literal type="string" pos:start="711:47" pos:end="711:105">"using 8-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="713:17" pos:end="715:107">else<block type="pseudo" pos:start="715:21" pos:end="715:107"><block_content pos:start="715:21" pos:end="715:107">

                    <expr_stmt pos:start="715:21" pos:end="715:107"><expr pos:start="715:21" pos:end="715:106"><call pos:start="715:21" pos:end="715:106"><name pos:start="715:21" pos:end="715:26">av_log</name><argument_list pos:start="715:27" pos:end="715:106">(<argument pos:start="715:28" pos:end="715:28"><expr pos:start="715:28" pos:end="715:28"><name pos:start="715:28" pos:end="715:28">c</name></expr></argument>, <argument pos:start="715:31" pos:end="715:44"><expr pos:start="715:31" pos:end="715:44"><name pos:start="715:31" pos:end="715:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="715:47" pos:end="715:105"><expr pos:start="715:47" pos:end="715:105"><literal type="string" pos:start="715:47" pos:end="715:105">"using n-tap MMX scaler for horizontal luminance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <if_stmt pos:start="719:17" pos:end="729:109"><if pos:start="719:17" pos:end="721:109">if <condition pos:start="719:20" pos:end="719:41">(<expr pos:start="719:21" pos:end="719:40"><name pos:start="719:21" pos:end="719:37"><name pos:start="719:21" pos:end="719:21">c</name><operator pos:start="719:22" pos:end="719:23">-&gt;</operator><name pos:start="719:24" pos:end="719:37">hChrFilterSize</name></name><operator pos:start="719:38" pos:end="719:39">==</operator><literal type="number" pos:start="719:40" pos:end="719:40">4</literal></expr>)</condition><block type="pseudo" pos:start="721:21" pos:end="721:109"><block_content pos:start="721:21" pos:end="721:109">

                    <expr_stmt pos:start="721:21" pos:end="721:109"><expr pos:start="721:21" pos:end="721:108"><call pos:start="721:21" pos:end="721:108"><name pos:start="721:21" pos:end="721:26">av_log</name><argument_list pos:start="721:27" pos:end="721:108">(<argument pos:start="721:28" pos:end="721:28"><expr pos:start="721:28" pos:end="721:28"><name pos:start="721:28" pos:end="721:28">c</name></expr></argument>, <argument pos:start="721:31" pos:end="721:44"><expr pos:start="721:31" pos:end="721:44"><name pos:start="721:31" pos:end="721:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="721:47" pos:end="721:107"><expr pos:start="721:47" pos:end="721:107"><literal type="string" pos:start="721:47" pos:end="721:107">"using 4-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="723:17" pos:end="725:109">else if <condition pos:start="723:25" pos:end="723:46">(<expr pos:start="723:26" pos:end="723:45"><name pos:start="723:26" pos:end="723:42"><name pos:start="723:26" pos:end="723:26">c</name><operator pos:start="723:27" pos:end="723:28">-&gt;</operator><name pos:start="723:29" pos:end="723:42">hChrFilterSize</name></name><operator pos:start="723:43" pos:end="723:44">==</operator><literal type="number" pos:start="723:45" pos:end="723:45">8</literal></expr>)</condition><block type="pseudo" pos:start="725:21" pos:end="725:109"><block_content pos:start="725:21" pos:end="725:109">

                    <expr_stmt pos:start="725:21" pos:end="725:109"><expr pos:start="725:21" pos:end="725:108"><call pos:start="725:21" pos:end="725:108"><name pos:start="725:21" pos:end="725:26">av_log</name><argument_list pos:start="725:27" pos:end="725:108">(<argument pos:start="725:28" pos:end="725:28"><expr pos:start="725:28" pos:end="725:28"><name pos:start="725:28" pos:end="725:28">c</name></expr></argument>, <argument pos:start="725:31" pos:end="725:44"><expr pos:start="725:31" pos:end="725:44"><name pos:start="725:31" pos:end="725:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="725:47" pos:end="725:107"><expr pos:start="725:47" pos:end="725:107"><literal type="string" pos:start="725:47" pos:end="725:107">"using 8-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="727:17" pos:end="729:109">else<block type="pseudo" pos:start="729:21" pos:end="729:109"><block_content pos:start="729:21" pos:end="729:109">

                    <expr_stmt pos:start="729:21" pos:end="729:109"><expr pos:start="729:21" pos:end="729:108"><call pos:start="729:21" pos:end="729:108"><name pos:start="729:21" pos:end="729:26">av_log</name><argument_list pos:start="729:27" pos:end="729:108">(<argument pos:start="729:28" pos:end="729:28"><expr pos:start="729:28" pos:end="729:28"><name pos:start="729:28" pos:end="729:28">c</name></expr></argument>, <argument pos:start="729:31" pos:end="729:44"><expr pos:start="729:31" pos:end="729:44"><name pos:start="729:31" pos:end="729:44">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="729:47" pos:end="729:107"><expr pos:start="729:47" pos:end="729:107"><literal type="string" pos:start="729:47" pos:end="729:107">"using n-tap MMX scaler for horizontal chrominance scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="733:11" pos:end="751:9">else <block pos:start="733:16" pos:end="751:9">{<block_content pos:start="737:13" pos:end="750:0">

<cpp:if pos:start="735:1" pos:end="735:12">#<cpp:directive pos:start="735:2" pos:end="735:3">if</cpp:directive> <expr pos:start="735:5" pos:end="735:12"><name pos:start="735:5" pos:end="735:12">ARCH_X86</name></expr></cpp:if>

            <expr_stmt pos:start="737:13" pos:end="740:0"><expr pos:start="737:13" pos:end="737:86"><call pos:start="737:13" pos:end="737:86"><name pos:start="737:13" pos:end="737:18">av_log</name><argument_list pos:start="737:19" pos:end="737:86">(<argument pos:start="737:20" pos:end="737:20"><expr pos:start="737:20" pos:end="737:20"><name pos:start="737:20" pos:end="737:20">c</name></expr></argument>, <argument pos:start="737:23" pos:end="737:36"><expr pos:start="737:23" pos:end="737:36"><name pos:start="737:23" pos:end="737:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="737:39" pos:end="737:85"><expr pos:start="737:39" pos:end="737:85"><literal type="string" pos:start="737:39" pos:end="737:85">"using x86 asm scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="739:1" pos:end="739:5">#<cpp:directive pos:start="739:2" pos:end="739:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="741:13" pos:end="750:0"><if pos:start="741:13" pos:end="743:99">if <condition pos:start="741:16" pos:end="741:42">(<expr pos:start="741:17" pos:end="741:41"><name pos:start="741:17" pos:end="741:21">flags</name> <operator pos:start="741:23" pos:end="741:23">&amp;</operator> <name pos:start="741:25" pos:end="741:41">SWS_FAST_BILINEAR</name></expr>)</condition><block type="pseudo" pos:start="743:17" pos:end="743:99"><block_content pos:start="743:17" pos:end="743:99">

                <expr_stmt pos:start="743:17" pos:end="743:99"><expr pos:start="743:17" pos:end="743:98"><call pos:start="743:17" pos:end="743:98"><name pos:start="743:17" pos:end="743:22">av_log</name><argument_list pos:start="743:23" pos:end="743:98">(<argument pos:start="743:24" pos:end="743:24"><expr pos:start="743:24" pos:end="743:24"><name pos:start="743:24" pos:end="743:24">c</name></expr></argument>, <argument pos:start="743:27" pos:end="743:40"><expr pos:start="743:27" pos:end="743:40"><name pos:start="743:27" pos:end="743:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="743:43" pos:end="743:97"><expr pos:start="743:43" pos:end="743:97"><literal type="string" pos:start="743:43" pos:end="743:97">"using FAST_BILINEAR C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="745:13" pos:end="750:0">else<block type="pseudo" pos:start="747:17" pos:end="750:0"><block_content pos:start="747:17" pos:end="750:0">

                <expr_stmt pos:start="747:17" pos:end="750:0"><expr pos:start="747:17" pos:end="747:84"><call pos:start="747:17" pos:end="747:84"><name pos:start="747:17" pos:end="747:22">av_log</name><argument_list pos:start="747:23" pos:end="747:84">(<argument pos:start="747:24" pos:end="747:24"><expr pos:start="747:24" pos:end="747:24"><name pos:start="747:24" pos:end="747:24">c</name></expr></argument>, <argument pos:start="747:27" pos:end="747:40"><expr pos:start="747:27" pos:end="747:40"><name pos:start="747:27" pos:end="747:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="747:43" pos:end="747:83"><expr pos:start="747:43" pos:end="747:83"><literal type="string" pos:start="747:43" pos:end="747:83">"using C scaler for horizontal scaling\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="749:1" pos:end="749:6">#<cpp:directive pos:start="749:2" pos:end="749:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="753:9" pos:end="779:9"><if pos:start="753:9" pos:end="763:9">if <condition pos:start="753:12" pos:end="753:35">(<expr pos:start="753:13" pos:end="753:34"><call pos:start="753:13" pos:end="753:34"><name pos:start="753:13" pos:end="753:23">isPlanarYUV</name><argument_list pos:start="753:24" pos:end="753:34">(<argument pos:start="753:25" pos:end="753:33"><expr pos:start="753:25" pos:end="753:33"><name pos:start="753:25" pos:end="753:33">dstFormat</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="753:37" pos:end="763:9">{<block_content pos:start="755:13" pos:end="761:144">

            <if_stmt pos:start="755:13" pos:end="761:144"><if pos:start="755:13" pos:end="757:148">if <condition pos:start="755:16" pos:end="755:37">(<expr pos:start="755:17" pos:end="755:36"><name pos:start="755:17" pos:end="755:33"><name pos:start="755:17" pos:end="755:17">c</name><operator pos:start="755:18" pos:end="755:19">-&gt;</operator><name pos:start="755:20" pos:end="755:33">vLumFilterSize</name></name><operator pos:start="755:34" pos:end="755:35">==</operator><literal type="number" pos:start="755:36" pos:end="755:36">1</literal></expr>)</condition><block type="pseudo" pos:start="757:17" pos:end="757:148"><block_content pos:start="757:17" pos:end="757:148">

                <expr_stmt pos:start="757:17" pos:end="757:148"><expr pos:start="757:17" pos:end="757:147"><call pos:start="757:17" pos:end="757:147"><name pos:start="757:17" pos:end="757:22">av_log</name><argument_list pos:start="757:23" pos:end="757:147">(<argument pos:start="757:24" pos:end="757:24"><expr pos:start="757:24" pos:end="757:24"><name pos:start="757:24" pos:end="757:24">c</name></expr></argument>, <argument pos:start="757:27" pos:end="757:40"><expr pos:start="757:27" pos:end="757:40"><name pos:start="757:27" pos:end="757:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="757:43" pos:end="757:104"><expr pos:start="757:43" pos:end="757:104"><literal type="string" pos:start="757:43" pos:end="757:104">"using 1-tap %s \"scaler\" for vertical scaling (YV12 like)\n"</literal></expr></argument>, <argument pos:start="757:107" pos:end="757:146"><expr pos:start="757:107" pos:end="757:146"><ternary pos:start="757:107" pos:end="757:146"><condition pos:start="757:107" pos:end="757:134"><expr pos:start="757:107" pos:end="757:132"><operator pos:start="757:107" pos:end="757:107">(</operator><name pos:start="757:108" pos:end="757:112">flags</name> <operator pos:start="757:114" pos:end="757:114">&amp;</operator> <name pos:start="757:116" pos:end="757:131">SWS_CPU_CAPS_MMX</name><operator pos:start="757:132" pos:end="757:132">)</operator></expr> ?</condition><then pos:start="757:136" pos:end="757:140"> <expr pos:start="757:136" pos:end="757:140"><literal type="string" pos:start="757:136" pos:end="757:140">"MMX"</literal></expr> </then><else pos:start="757:142" pos:end="757:146">: <expr pos:start="757:144" pos:end="757:146"><literal type="string" pos:start="757:144" pos:end="757:146">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="759:13" pos:end="761:144">else<block type="pseudo" pos:start="761:17" pos:end="761:144"><block_content pos:start="761:17" pos:end="761:144">

                <expr_stmt pos:start="761:17" pos:end="761:144"><expr pos:start="761:17" pos:end="761:143"><call pos:start="761:17" pos:end="761:143"><name pos:start="761:17" pos:end="761:22">av_log</name><argument_list pos:start="761:23" pos:end="761:143">(<argument pos:start="761:24" pos:end="761:24"><expr pos:start="761:24" pos:end="761:24"><name pos:start="761:24" pos:end="761:24">c</name></expr></argument>, <argument pos:start="761:27" pos:end="761:40"><expr pos:start="761:27" pos:end="761:40"><name pos:start="761:27" pos:end="761:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="761:43" pos:end="761:100"><expr pos:start="761:43" pos:end="761:100"><literal type="string" pos:start="761:43" pos:end="761:100">"using n-tap %s scaler for vertical scaling (YV12 like)\n"</literal></expr></argument>, <argument pos:start="761:103" pos:end="761:142"><expr pos:start="761:103" pos:end="761:142"><ternary pos:start="761:103" pos:end="761:142"><condition pos:start="761:103" pos:end="761:130"><expr pos:start="761:103" pos:end="761:128"><operator pos:start="761:103" pos:end="761:103">(</operator><name pos:start="761:104" pos:end="761:108">flags</name> <operator pos:start="761:110" pos:end="761:110">&amp;</operator> <name pos:start="761:112" pos:end="761:127">SWS_CPU_CAPS_MMX</name><operator pos:start="761:128" pos:end="761:128">)</operator></expr> ?</condition><then pos:start="761:132" pos:end="761:136"> <expr pos:start="761:132" pos:end="761:136"><literal type="string" pos:start="761:132" pos:end="761:136">"MMX"</literal></expr> </then><else pos:start="761:138" pos:end="761:142">: <expr pos:start="761:140" pos:end="761:142"><literal type="string" pos:start="761:140" pos:end="761:142">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="763:11" pos:end="779:9">else <block pos:start="763:16" pos:end="779:9">{<block_content pos:start="765:13" pos:end="777:138">

            <if_stmt pos:start="765:13" pos:end="777:138"><if pos:start="765:13" pos:end="769:128">if <condition pos:start="765:16" pos:end="765:61">(<expr pos:start="765:17" pos:end="765:60"><name pos:start="765:17" pos:end="765:33"><name pos:start="765:17" pos:end="765:17">c</name><operator pos:start="765:18" pos:end="765:19">-&gt;</operator><name pos:start="765:20" pos:end="765:33">vLumFilterSize</name></name><operator pos:start="765:34" pos:end="765:35">==</operator><literal type="number" pos:start="765:36" pos:end="765:36">1</literal> <operator pos:start="765:38" pos:end="765:39">&amp;&amp;</operator> <name pos:start="765:41" pos:end="765:57"><name pos:start="765:41" pos:end="765:41">c</name><operator pos:start="765:42" pos:end="765:43">-&gt;</operator><name pos:start="765:44" pos:end="765:57">vChrFilterSize</name></name><operator pos:start="765:58" pos:end="765:59">==</operator><literal type="number" pos:start="765:60" pos:end="765:60">2</literal></expr>)</condition><block type="pseudo" pos:start="767:17" pos:end="769:128"><block_content pos:start="767:17" pos:end="769:128">

                <expr_stmt pos:start="767:17" pos:end="769:128"><expr pos:start="767:17" pos:end="769:127"><call pos:start="767:17" pos:end="769:127"><name pos:start="767:17" pos:end="767:22">av_log</name><argument_list pos:start="767:23" pos:end="769:127">(<argument pos:start="767:24" pos:end="767:24"><expr pos:start="767:24" pos:end="767:24"><name pos:start="767:24" pos:end="767:24">c</name></expr></argument>, <argument pos:start="767:27" pos:end="767:40"><expr pos:start="767:27" pos:end="767:40"><name pos:start="767:27" pos:end="767:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="767:43" pos:end="769:84"><expr pos:start="767:43" pos:end="769:84"><literal type="string" pos:start="767:43" pos:end="767:108">"using 1-tap %s \"scaler\" for vertical luminance scaling (BGR)\n"</literal>

                       <literal type="string" pos:start="769:24" pos:end="769:84">"      2-tap scaler for vertical chrominance scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="769:87" pos:end="769:126"><expr pos:start="769:87" pos:end="769:126"><ternary pos:start="769:87" pos:end="769:126"><condition pos:start="769:87" pos:end="769:114"><expr pos:start="769:87" pos:end="769:112"><operator pos:start="769:87" pos:end="769:87">(</operator><name pos:start="769:88" pos:end="769:92">flags</name> <operator pos:start="769:94" pos:end="769:94">&amp;</operator> <name pos:start="769:96" pos:end="769:111">SWS_CPU_CAPS_MMX</name><operator pos:start="769:112" pos:end="769:112">)</operator></expr> ?</condition><then pos:start="769:116" pos:end="769:120"> <expr pos:start="769:116" pos:end="769:120"><literal type="string" pos:start="769:116" pos:end="769:120">"MMX"</literal></expr> </then><else pos:start="769:122" pos:end="769:126">: <expr pos:start="769:124" pos:end="769:126"><literal type="string" pos:start="769:124" pos:end="769:126">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="771:13" pos:end="773:145">else if <condition pos:start="771:21" pos:end="771:66">(<expr pos:start="771:22" pos:end="771:65"><name pos:start="771:22" pos:end="771:38"><name pos:start="771:22" pos:end="771:22">c</name><operator pos:start="771:23" pos:end="771:24">-&gt;</operator><name pos:start="771:25" pos:end="771:38">vLumFilterSize</name></name><operator pos:start="771:39" pos:end="771:40">==</operator><literal type="number" pos:start="771:41" pos:end="771:41">2</literal> <operator pos:start="771:43" pos:end="771:44">&amp;&amp;</operator> <name pos:start="771:46" pos:end="771:62"><name pos:start="771:46" pos:end="771:46">c</name><operator pos:start="771:47" pos:end="771:48">-&gt;</operator><name pos:start="771:49" pos:end="771:62">vChrFilterSize</name></name><operator pos:start="771:63" pos:end="771:64">==</operator><literal type="number" pos:start="771:65" pos:end="771:65">2</literal></expr>)</condition><block type="pseudo" pos:start="773:17" pos:end="773:145"><block_content pos:start="773:17" pos:end="773:145">

                <expr_stmt pos:start="773:17" pos:end="773:145"><expr pos:start="773:17" pos:end="773:144"><call pos:start="773:17" pos:end="773:144"><name pos:start="773:17" pos:end="773:22">av_log</name><argument_list pos:start="773:23" pos:end="773:144">(<argument pos:start="773:24" pos:end="773:24"><expr pos:start="773:24" pos:end="773:24"><name pos:start="773:24" pos:end="773:24">c</name></expr></argument>, <argument pos:start="773:27" pos:end="773:40"><expr pos:start="773:27" pos:end="773:40"><name pos:start="773:27" pos:end="773:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="773:43" pos:end="773:101"><expr pos:start="773:43" pos:end="773:101"><literal type="string" pos:start="773:43" pos:end="773:101">"using 2-tap linear %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="773:104" pos:end="773:143"><expr pos:start="773:104" pos:end="773:143"><ternary pos:start="773:104" pos:end="773:143"><condition pos:start="773:104" pos:end="773:131"><expr pos:start="773:104" pos:end="773:129"><operator pos:start="773:104" pos:end="773:104">(</operator><name pos:start="773:105" pos:end="773:109">flags</name> <operator pos:start="773:111" pos:end="773:111">&amp;</operator> <name pos:start="773:113" pos:end="773:128">SWS_CPU_CAPS_MMX</name><operator pos:start="773:129" pos:end="773:129">)</operator></expr> ?</condition><then pos:start="773:133" pos:end="773:137"> <expr pos:start="773:133" pos:end="773:137"><literal type="string" pos:start="773:133" pos:end="773:137">"MMX"</literal></expr> </then><else pos:start="773:139" pos:end="773:143">: <expr pos:start="773:141" pos:end="773:143"><literal type="string" pos:start="773:141" pos:end="773:143">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="775:13" pos:end="777:138">else<block type="pseudo" pos:start="777:17" pos:end="777:138"><block_content pos:start="777:17" pos:end="777:138">

                <expr_stmt pos:start="777:17" pos:end="777:138"><expr pos:start="777:17" pos:end="777:137"><call pos:start="777:17" pos:end="777:137"><name pos:start="777:17" pos:end="777:22">av_log</name><argument_list pos:start="777:23" pos:end="777:137">(<argument pos:start="777:24" pos:end="777:24"><expr pos:start="777:24" pos:end="777:24"><name pos:start="777:24" pos:end="777:24">c</name></expr></argument>, <argument pos:start="777:27" pos:end="777:40"><expr pos:start="777:27" pos:end="777:40"><name pos:start="777:27" pos:end="777:40">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="777:43" pos:end="777:94"><expr pos:start="777:43" pos:end="777:94"><literal type="string" pos:start="777:43" pos:end="777:94">"using n-tap %s scaler for vertical scaling (BGR)\n"</literal></expr></argument>, <argument pos:start="777:97" pos:end="777:136"><expr pos:start="777:97" pos:end="777:136"><ternary pos:start="777:97" pos:end="777:136"><condition pos:start="777:97" pos:end="777:124"><expr pos:start="777:97" pos:end="777:122"><operator pos:start="777:97" pos:end="777:97">(</operator><name pos:start="777:98" pos:end="777:102">flags</name> <operator pos:start="777:104" pos:end="777:104">&amp;</operator> <name pos:start="777:106" pos:end="777:121">SWS_CPU_CAPS_MMX</name><operator pos:start="777:122" pos:end="777:122">)</operator></expr> ?</condition><then pos:start="777:126" pos:end="777:130"> <expr pos:start="777:126" pos:end="777:130"><literal type="string" pos:start="777:126" pos:end="777:130">"MMX"</literal></expr> </then><else pos:start="777:132" pos:end="777:136">: <expr pos:start="777:134" pos:end="777:136"><literal type="string" pos:start="777:134" pos:end="777:136">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="783:9" pos:end="799:116"><if pos:start="783:9" pos:end="787:102">if <condition pos:start="783:12" pos:end="783:37">(<expr pos:start="783:13" pos:end="783:36"><name pos:start="783:13" pos:end="783:21">dstFormat</name><operator pos:start="783:22" pos:end="783:23">==</operator><name pos:start="783:24" pos:end="783:36">PIX_FMT_BGR24</name></expr>)</condition><block type="pseudo" pos:start="785:13" pos:end="787:102"><block_content pos:start="785:13" pos:end="787:102">

            <expr_stmt pos:start="785:13" pos:end="787:102"><expr pos:start="785:13" pos:end="787:101"><call pos:start="785:13" pos:end="787:101"><name pos:start="785:13" pos:end="785:18">av_log</name><argument_list pos:start="785:19" pos:end="787:101">(<argument pos:start="785:20" pos:end="785:20"><expr pos:start="785:20" pos:end="785:20"><name pos:start="785:20" pos:end="785:20">c</name></expr></argument>, <argument pos:start="785:23" pos:end="785:36"><expr pos:start="785:23" pos:end="785:36"><name pos:start="785:23" pos:end="785:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="785:39" pos:end="785:72"><expr pos:start="785:39" pos:end="785:72"><literal type="string" pos:start="785:39" pos:end="785:72">"using %s YV12-&gt;BGR24 converter\n"</literal></expr></argument>,

                   <argument pos:start="787:20" pos:end="787:100"><expr pos:start="787:20" pos:end="787:100"><ternary pos:start="787:20" pos:end="787:100"><condition pos:start="787:20" pos:end="787:48"><expr pos:start="787:20" pos:end="787:46"><operator pos:start="787:20" pos:end="787:20">(</operator><name pos:start="787:21" pos:end="787:25">flags</name> <operator pos:start="787:27" pos:end="787:27">&amp;</operator> <name pos:start="787:29" pos:end="787:45">SWS_CPU_CAPS_MMX2</name><operator pos:start="787:46" pos:end="787:46">)</operator></expr> ?</condition><then pos:start="787:50" pos:end="787:55"> <expr pos:start="787:50" pos:end="787:55"><literal type="string" pos:start="787:50" pos:end="787:55">"MMX2"</literal></expr> </then><else pos:start="787:57" pos:end="787:100">: <expr pos:start="787:59" pos:end="787:100"><operator pos:start="787:59" pos:end="787:59">(</operator><ternary pos:start="787:60" pos:end="787:99"><condition pos:start="787:60" pos:end="787:87"><expr pos:start="787:60" pos:end="787:85"><operator pos:start="787:60" pos:end="787:60">(</operator><name pos:start="787:61" pos:end="787:65">flags</name> <operator pos:start="787:67" pos:end="787:67">&amp;</operator> <name pos:start="787:69" pos:end="787:84">SWS_CPU_CAPS_MMX</name><operator pos:start="787:85" pos:end="787:85">)</operator></expr> ?</condition><then pos:start="787:89" pos:end="787:93"> <expr pos:start="787:89" pos:end="787:93"><literal type="string" pos:start="787:89" pos:end="787:93">"MMX"</literal></expr> </then><else pos:start="787:95" pos:end="787:99">: <expr pos:start="787:97" pos:end="787:99"><literal type="string" pos:start="787:97" pos:end="787:99">"C"</literal></expr></else></ternary><operator pos:start="787:100" pos:end="787:100">)</operator></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="789:9" pos:end="791:116">else if <condition pos:start="789:17" pos:end="789:42">(<expr pos:start="789:18" pos:end="789:41"><name pos:start="789:18" pos:end="789:26">dstFormat</name><operator pos:start="789:27" pos:end="789:28">==</operator><name pos:start="789:29" pos:end="789:41">PIX_FMT_RGB32</name></expr>)</condition><block type="pseudo" pos:start="791:13" pos:end="791:116"><block_content pos:start="791:13" pos:end="791:116">

            <expr_stmt pos:start="791:13" pos:end="791:116"><expr pos:start="791:13" pos:end="791:115"><call pos:start="791:13" pos:end="791:115"><name pos:start="791:13" pos:end="791:18">av_log</name><argument_list pos:start="791:19" pos:end="791:115">(<argument pos:start="791:20" pos:end="791:20"><expr pos:start="791:20" pos:end="791:20"><name pos:start="791:20" pos:end="791:20">c</name></expr></argument>, <argument pos:start="791:23" pos:end="791:36"><expr pos:start="791:23" pos:end="791:36"><name pos:start="791:23" pos:end="791:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="791:39" pos:end="791:72"><expr pos:start="791:39" pos:end="791:72"><literal type="string" pos:start="791:39" pos:end="791:72">"using %s YV12-&gt;BGR32 converter\n"</literal></expr></argument>, <argument pos:start="791:75" pos:end="791:114"><expr pos:start="791:75" pos:end="791:114"><ternary pos:start="791:75" pos:end="791:114"><condition pos:start="791:75" pos:end="791:102"><expr pos:start="791:75" pos:end="791:100"><operator pos:start="791:75" pos:end="791:75">(</operator><name pos:start="791:76" pos:end="791:80">flags</name> <operator pos:start="791:82" pos:end="791:82">&amp;</operator> <name pos:start="791:84" pos:end="791:99">SWS_CPU_CAPS_MMX</name><operator pos:start="791:100" pos:end="791:100">)</operator></expr> ?</condition><then pos:start="791:104" pos:end="791:108"> <expr pos:start="791:104" pos:end="791:108"><literal type="string" pos:start="791:104" pos:end="791:108">"MMX"</literal></expr> </then><else pos:start="791:110" pos:end="791:114">: <expr pos:start="791:112" pos:end="791:114"><literal type="string" pos:start="791:112" pos:end="791:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="793:9" pos:end="795:116">else if <condition pos:start="793:17" pos:end="793:43">(<expr pos:start="793:18" pos:end="793:42"><name pos:start="793:18" pos:end="793:26">dstFormat</name><operator pos:start="793:27" pos:end="793:28">==</operator><name pos:start="793:29" pos:end="793:42">PIX_FMT_BGR565</name></expr>)</condition><block type="pseudo" pos:start="795:13" pos:end="795:116"><block_content pos:start="795:13" pos:end="795:116">

            <expr_stmt pos:start="795:13" pos:end="795:116"><expr pos:start="795:13" pos:end="795:115"><call pos:start="795:13" pos:end="795:115"><name pos:start="795:13" pos:end="795:18">av_log</name><argument_list pos:start="795:19" pos:end="795:115">(<argument pos:start="795:20" pos:end="795:20"><expr pos:start="795:20" pos:end="795:20"><name pos:start="795:20" pos:end="795:20">c</name></expr></argument>, <argument pos:start="795:23" pos:end="795:36"><expr pos:start="795:23" pos:end="795:36"><name pos:start="795:23" pos:end="795:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="795:39" pos:end="795:72"><expr pos:start="795:39" pos:end="795:72"><literal type="string" pos:start="795:39" pos:end="795:72">"using %s YV12-&gt;BGR16 converter\n"</literal></expr></argument>, <argument pos:start="795:75" pos:end="795:114"><expr pos:start="795:75" pos:end="795:114"><ternary pos:start="795:75" pos:end="795:114"><condition pos:start="795:75" pos:end="795:102"><expr pos:start="795:75" pos:end="795:100"><operator pos:start="795:75" pos:end="795:75">(</operator><name pos:start="795:76" pos:end="795:80">flags</name> <operator pos:start="795:82" pos:end="795:82">&amp;</operator> <name pos:start="795:84" pos:end="795:99">SWS_CPU_CAPS_MMX</name><operator pos:start="795:100" pos:end="795:100">)</operator></expr> ?</condition><then pos:start="795:104" pos:end="795:108"> <expr pos:start="795:104" pos:end="795:108"><literal type="string" pos:start="795:104" pos:end="795:108">"MMX"</literal></expr> </then><else pos:start="795:110" pos:end="795:114">: <expr pos:start="795:112" pos:end="795:114"><literal type="string" pos:start="795:112" pos:end="795:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="797:9" pos:end="799:116">else if <condition pos:start="797:17" pos:end="797:43">(<expr pos:start="797:18" pos:end="797:42"><name pos:start="797:18" pos:end="797:26">dstFormat</name><operator pos:start="797:27" pos:end="797:28">==</operator><name pos:start="797:29" pos:end="797:42">PIX_FMT_BGR555</name></expr>)</condition><block type="pseudo" pos:start="799:13" pos:end="799:116"><block_content pos:start="799:13" pos:end="799:116">

            <expr_stmt pos:start="799:13" pos:end="799:116"><expr pos:start="799:13" pos:end="799:115"><call pos:start="799:13" pos:end="799:115"><name pos:start="799:13" pos:end="799:18">av_log</name><argument_list pos:start="799:19" pos:end="799:115">(<argument pos:start="799:20" pos:end="799:20"><expr pos:start="799:20" pos:end="799:20"><name pos:start="799:20" pos:end="799:20">c</name></expr></argument>, <argument pos:start="799:23" pos:end="799:36"><expr pos:start="799:23" pos:end="799:36"><name pos:start="799:23" pos:end="799:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="799:39" pos:end="799:72"><expr pos:start="799:39" pos:end="799:72"><literal type="string" pos:start="799:39" pos:end="799:72">"using %s YV12-&gt;BGR15 converter\n"</literal></expr></argument>, <argument pos:start="799:75" pos:end="799:114"><expr pos:start="799:75" pos:end="799:114"><ternary pos:start="799:75" pos:end="799:114"><condition pos:start="799:75" pos:end="799:102"><expr pos:start="799:75" pos:end="799:100"><operator pos:start="799:75" pos:end="799:75">(</operator><name pos:start="799:76" pos:end="799:80">flags</name> <operator pos:start="799:82" pos:end="799:82">&amp;</operator> <name pos:start="799:84" pos:end="799:99">SWS_CPU_CAPS_MMX</name><operator pos:start="799:100" pos:end="799:100">)</operator></expr> ?</condition><then pos:start="799:104" pos:end="799:108"> <expr pos:start="799:104" pos:end="799:108"><literal type="string" pos:start="799:104" pos:end="799:108">"MMX"</literal></expr> </then><else pos:start="799:110" pos:end="799:114">: <expr pos:start="799:112" pos:end="799:114"><literal type="string" pos:start="799:112" pos:end="799:114">"C"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="803:9" pos:end="803:78"><expr pos:start="803:9" pos:end="803:77"><call pos:start="803:9" pos:end="803:77"><name pos:start="803:9" pos:end="803:14">av_log</name><argument_list pos:start="803:15" pos:end="803:77">(<argument pos:start="803:16" pos:end="803:16"><expr pos:start="803:16" pos:end="803:16"><name pos:start="803:16" pos:end="803:16">c</name></expr></argument>, <argument pos:start="803:19" pos:end="803:32"><expr pos:start="803:19" pos:end="803:32"><name pos:start="803:19" pos:end="803:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="803:35" pos:end="803:52"><expr pos:start="803:35" pos:end="803:52"><literal type="string" pos:start="803:35" pos:end="803:52">"%dx%d -&gt; %dx%d\n"</literal></expr></argument>, <argument pos:start="803:55" pos:end="803:58"><expr pos:start="803:55" pos:end="803:58"><name pos:start="803:55" pos:end="803:58">srcW</name></expr></argument>, <argument pos:start="803:61" pos:end="803:64"><expr pos:start="803:61" pos:end="803:64"><name pos:start="803:61" pos:end="803:64">srcH</name></expr></argument>, <argument pos:start="803:67" pos:end="803:70"><expr pos:start="803:67" pos:end="803:70"><name pos:start="803:67" pos:end="803:70">dstW</name></expr></argument>, <argument pos:start="803:73" pos:end="803:76"><expr pos:start="803:73" pos:end="803:76"><name pos:start="803:73" pos:end="803:76">dstH</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="805:9" pos:end="807:75"><expr pos:start="805:9" pos:end="807:74"><call pos:start="805:9" pos:end="807:74"><name pos:start="805:9" pos:end="805:14">av_log</name><argument_list pos:start="805:15" pos:end="807:74">(<argument pos:start="805:16" pos:end="805:16"><expr pos:start="805:16" pos:end="805:16"><name pos:start="805:16" pos:end="805:16">c</name></expr></argument>, <argument pos:start="805:19" pos:end="805:30"><expr pos:start="805:19" pos:end="805:30"><name pos:start="805:19" pos:end="805:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="805:33" pos:end="805:87"><expr pos:start="805:33" pos:end="805:87"><literal type="string" pos:start="805:33" pos:end="805:87">"lum srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="807:16" pos:end="807:22"><expr pos:start="807:16" pos:end="807:22"><name pos:start="807:16" pos:end="807:22"><name pos:start="807:16" pos:end="807:16">c</name><operator pos:start="807:17" pos:end="807:18">-&gt;</operator><name pos:start="807:19" pos:end="807:22">srcW</name></name></expr></argument>, <argument pos:start="807:25" pos:end="807:31"><expr pos:start="807:25" pos:end="807:31"><name pos:start="807:25" pos:end="807:31"><name pos:start="807:25" pos:end="807:25">c</name><operator pos:start="807:26" pos:end="807:27">-&gt;</operator><name pos:start="807:28" pos:end="807:31">srcH</name></name></expr></argument>, <argument pos:start="807:34" pos:end="807:40"><expr pos:start="807:34" pos:end="807:40"><name pos:start="807:34" pos:end="807:40"><name pos:start="807:34" pos:end="807:34">c</name><operator pos:start="807:35" pos:end="807:36">-&gt;</operator><name pos:start="807:37" pos:end="807:40">dstW</name></name></expr></argument>, <argument pos:start="807:43" pos:end="807:49"><expr pos:start="807:43" pos:end="807:49"><name pos:start="807:43" pos:end="807:49"><name pos:start="807:43" pos:end="807:43">c</name><operator pos:start="807:44" pos:end="807:45">-&gt;</operator><name pos:start="807:46" pos:end="807:49">dstH</name></name></expr></argument>, <argument pos:start="807:52" pos:end="807:61"><expr pos:start="807:52" pos:end="807:61"><name pos:start="807:52" pos:end="807:61"><name pos:start="807:52" pos:end="807:52">c</name><operator pos:start="807:53" pos:end="807:54">-&gt;</operator><name pos:start="807:55" pos:end="807:61">lumXInc</name></name></expr></argument>, <argument pos:start="807:64" pos:end="807:73"><expr pos:start="807:64" pos:end="807:73"><name pos:start="807:64" pos:end="807:73"><name pos:start="807:64" pos:end="807:64">c</name><operator pos:start="807:65" pos:end="807:66">-&gt;</operator><name pos:start="807:67" pos:end="807:73">lumYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="809:9" pos:end="811:87"><expr pos:start="809:9" pos:end="811:86"><call pos:start="809:9" pos:end="811:86"><name pos:start="809:9" pos:end="809:14">av_log</name><argument_list pos:start="809:15" pos:end="811:86">(<argument pos:start="809:16" pos:end="809:16"><expr pos:start="809:16" pos:end="809:16"><name pos:start="809:16" pos:end="809:16">c</name></expr></argument>, <argument pos:start="809:19" pos:end="809:30"><expr pos:start="809:19" pos:end="809:30"><name pos:start="809:19" pos:end="809:30">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="809:33" pos:end="809:87"><expr pos:start="809:33" pos:end="809:87"><literal type="string" pos:start="809:33" pos:end="809:87">"chr srcW=%d srcH=%d dstW=%d dstH=%d xInc=%d yInc=%d\n"</literal></expr></argument>,

               <argument pos:start="811:16" pos:end="811:25"><expr pos:start="811:16" pos:end="811:25"><name pos:start="811:16" pos:end="811:25"><name pos:start="811:16" pos:end="811:16">c</name><operator pos:start="811:17" pos:end="811:18">-&gt;</operator><name pos:start="811:19" pos:end="811:25">chrSrcW</name></name></expr></argument>, <argument pos:start="811:28" pos:end="811:37"><expr pos:start="811:28" pos:end="811:37"><name pos:start="811:28" pos:end="811:37"><name pos:start="811:28" pos:end="811:28">c</name><operator pos:start="811:29" pos:end="811:30">-&gt;</operator><name pos:start="811:31" pos:end="811:37">chrSrcH</name></name></expr></argument>, <argument pos:start="811:40" pos:end="811:49"><expr pos:start="811:40" pos:end="811:49"><name pos:start="811:40" pos:end="811:49"><name pos:start="811:40" pos:end="811:40">c</name><operator pos:start="811:41" pos:end="811:42">-&gt;</operator><name pos:start="811:43" pos:end="811:49">chrDstW</name></name></expr></argument>, <argument pos:start="811:52" pos:end="811:61"><expr pos:start="811:52" pos:end="811:61"><name pos:start="811:52" pos:end="811:61"><name pos:start="811:52" pos:end="811:52">c</name><operator pos:start="811:53" pos:end="811:54">-&gt;</operator><name pos:start="811:55" pos:end="811:61">chrDstH</name></name></expr></argument>, <argument pos:start="811:64" pos:end="811:73"><expr pos:start="811:64" pos:end="811:73"><name pos:start="811:64" pos:end="811:73"><name pos:start="811:64" pos:end="811:64">c</name><operator pos:start="811:65" pos:end="811:66">-&gt;</operator><name pos:start="811:67" pos:end="811:73">chrXInc</name></name></expr></argument>, <argument pos:start="811:76" pos:end="811:85"><expr pos:start="811:76" pos:end="811:85"><name pos:start="811:76" pos:end="811:85"><name pos:start="811:76" pos:end="811:76">c</name><operator pos:start="811:77" pos:end="811:78">-&gt;</operator><name pos:start="811:79" pos:end="811:85">chrYInc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="817:5" pos:end="817:33"><expr pos:start="817:5" pos:end="817:32"><name pos:start="817:5" pos:end="817:14"><name pos:start="817:5" pos:end="817:5">c</name><operator pos:start="817:6" pos:end="817:7">-&gt;</operator><name pos:start="817:8" pos:end="817:14">swScale</name></name><operator pos:start="817:15" pos:end="817:15">=</operator> <call pos:start="817:17" pos:end="817:32"><name pos:start="817:17" pos:end="817:29">ff_getSwsFunc</name><argument_list pos:start="817:30" pos:end="817:32">(<argument pos:start="817:31" pos:end="817:31"><expr pos:start="817:31" pos:end="817:31"><name pos:start="817:31" pos:end="817:31">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="819:5" pos:end="819:13">return <expr pos:start="819:12" pos:end="819:12"><name pos:start="819:12" pos:end="819:12">c</name></expr>;</return>



<label pos:start="823:1" pos:end="823:5"><name pos:start="823:1" pos:end="823:4">fail</name>:</label>

    <expr_stmt pos:start="825:5" pos:end="825:23"><expr pos:start="825:5" pos:end="825:22"><call pos:start="825:5" pos:end="825:22"><name pos:start="825:5" pos:end="825:19">sws_freeContext</name><argument_list pos:start="825:20" pos:end="825:22">(<argument pos:start="825:21" pos:end="825:21"><expr pos:start="825:21" pos:end="825:21"><name pos:start="825:21" pos:end="825:21">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="827:5" pos:end="827:16">return <expr pos:start="827:12" pos:end="827:15"><name pos:start="827:12" pos:end="827:15">NULL</name></expr>;</return>

</block_content>}</block></function></unit>
