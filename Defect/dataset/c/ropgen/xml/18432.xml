<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/18432.c" pos:tabs="8"><function pos:start="1:1" pos:end="735:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">ffserver_parse_config_stream</name><parameter_list pos:start="1:40" pos:end="3:79">(<parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:54">FFServerConfig</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">config</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:79"><decl pos:start="1:65" pos:end="1:79"><type pos:start="1:65" pos:end="1:79"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:74">char</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:79">cmd</name></decl></parameter>, <parameter pos:start="1:82" pos:end="1:95"><decl pos:start="1:82" pos:end="1:95"><type pos:start="1:82" pos:end="1:95"><specifier pos:start="1:82" pos:end="1:86">const</specifier> <name pos:start="1:88" pos:end="1:91">char</name> <modifier pos:start="1:93" pos:end="1:93">*</modifier><modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:95">p</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:52"><decl pos:start="3:41" pos:end="3:52"><type pos:start="3:41" pos:end="3:52"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:52">line_num</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:78"><decl pos:start="3:55" pos:end="3:78"><type pos:start="3:55" pos:end="3:78"><name pos:start="3:55" pos:end="3:68">FFServerStream</name> <modifier pos:start="3:70" pos:end="3:70">*</modifier><modifier pos:start="3:71" pos:end="3:71">*</modifier></type><name pos:start="3:72" pos:end="3:78">pstream</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="735:1">{<block_content pos:start="7:5" pos:end="733:27">

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:12">arg</name><index pos:start="7:13" pos:end="7:18">[<expr pos:start="7:14" pos:end="7:17"><literal type="number" pos:start="7:14" pos:end="7:17">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:21" pos:end="7:30"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:21" pos:end="7:30"><name pos:start="7:21" pos:end="7:24">arg2</name><index pos:start="7:25" pos:end="7:30">[<expr pos:start="7:26" pos:end="7:29"><literal type="number" pos:start="7:26" pos:end="7:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">FFServerStream</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><call pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:14">av_assert0</name><argument_list pos:start="15:15" pos:end="15:23">(<argument pos:start="15:16" pos:end="15:22"><expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">pstream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:10">stream</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <operator pos:start="17:14" pos:end="17:14">*</operator><name pos:start="17:15" pos:end="17:21">pstream</name></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="93:5"><if pos:start="21:5" pos:end="93:5">if <condition pos:start="21:8" pos:end="21:39">(<expr pos:start="21:9" pos:end="21:38"><operator pos:start="21:9" pos:end="21:9">!</operator><call pos:start="21:10" pos:end="21:38"><name pos:start="21:10" pos:end="21:22">av_strcasecmp</name><argument_list pos:start="21:23" pos:end="21:38">(<argument pos:start="21:24" pos:end="21:26"><expr pos:start="21:24" pos:end="21:26"><name pos:start="21:24" pos:end="21:26">cmd</name></expr></argument>, <argument pos:start="21:29" pos:end="21:37"><expr pos:start="21:29" pos:end="21:37"><literal type="string" pos:start="21:29" pos:end="21:37">"&lt;Stream"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:41" pos:end="93:5">{<block_content pos:start="23:9" pos:end="91:17">

        <decl_stmt pos:start="23:9" pos:end="23:16"><decl pos:start="23:9" pos:end="23:15"><type pos:start="23:9" pos:end="23:14"><name pos:start="23:9" pos:end="23:12">char</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:15">q</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:26"><decl pos:start="25:9" pos:end="25:25"><type pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:22">FFServerStream</name> <modifier pos:start="25:24" pos:end="25:24">*</modifier></type><name pos:start="25:25" pos:end="25:25">s</name></decl>;</decl_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:52"><expr pos:start="27:9" pos:end="27:51"><name pos:start="27:9" pos:end="27:14">stream</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <call pos:start="27:18" pos:end="27:51"><name pos:start="27:18" pos:end="27:27">av_mallocz</name><argument_list pos:start="27:28" pos:end="27:51">(<argument pos:start="27:29" pos:end="27:50"><expr pos:start="27:29" pos:end="27:50"><sizeof pos:start="27:29" pos:end="27:50">sizeof<argument_list pos:start="27:35" pos:end="27:50">(<argument pos:start="27:36" pos:end="27:49"><expr pos:start="27:36" pos:end="27:49"><name pos:start="27:36" pos:end="27:49">FFServerStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:35"><if pos:start="29:9" pos:end="31:35">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:19">stream</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:35"><block_content pos:start="31:13" pos:end="31:35">

            <return pos:start="31:13" pos:end="31:35">return <expr pos:start="31:20" pos:end="31:34"><call pos:start="31:20" pos:end="31:34"><name pos:start="31:20" pos:end="31:26">AVERROR</name><argument_list pos:start="31:27" pos:end="31:34">(<argument pos:start="31:28" pos:end="31:33"><expr pos:start="31:28" pos:end="31:33"><name pos:start="31:28" pos:end="31:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:58"><expr pos:start="33:9" pos:end="33:57"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:14">config</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:26">dummy_actx</name></name> <operator pos:start="33:28" pos:end="33:28">=</operator> <call pos:start="33:30" pos:end="33:57"><name pos:start="33:30" pos:end="33:51">avcodec_alloc_context3</name><argument_list pos:start="33:52" pos:end="33:57">(<argument pos:start="33:53" pos:end="33:56"><expr pos:start="33:53" pos:end="33:56"><name pos:start="33:53" pos:end="33:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:58"><expr pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:14">config</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:26">dummy_vctx</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:57"><name pos:start="35:30" pos:end="35:51">avcodec_alloc_context3</name><argument_list pos:start="35:52" pos:end="35:57">(<argument pos:start="35:53" pos:end="35:56"><expr pos:start="35:53" pos:end="35:56"><name pos:start="35:53" pos:end="35:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="47:9"><if pos:start="37:9" pos:end="47:9">if <condition pos:start="37:12" pos:end="37:55">(<expr pos:start="37:13" pos:end="37:54"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:31"><name pos:start="37:14" pos:end="37:19">config</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:31">dummy_vctx</name></name> <operator pos:start="37:33" pos:end="37:34">||</operator> <operator pos:start="37:36" pos:end="37:36">!</operator><name pos:start="37:37" pos:end="37:54"><name pos:start="37:37" pos:end="37:42">config</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:54">dummy_actx</name></name></expr>)</condition> <block pos:start="37:57" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:35">

            <expr_stmt pos:start="39:13" pos:end="39:28"><expr pos:start="39:13" pos:end="39:27"><call pos:start="39:13" pos:end="39:27"><name pos:start="39:13" pos:end="39:19">av_free</name><argument_list pos:start="39:20" pos:end="39:27">(<argument pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:26"><name pos:start="39:21" pos:end="39:26">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:54"><expr pos:start="41:13" pos:end="41:53"><call pos:start="41:13" pos:end="41:53"><name pos:start="41:13" pos:end="41:32">avcodec_free_context</name><argument_list pos:start="41:33" pos:end="41:53">(<argument pos:start="41:34" pos:end="41:52"><expr pos:start="41:34" pos:end="41:52"><operator pos:start="41:34" pos:end="41:34">&amp;</operator><name pos:start="41:35" pos:end="41:52"><name pos:start="41:35" pos:end="41:40">config</name><operator pos:start="41:41" pos:end="41:42">-&gt;</operator><name pos:start="41:43" pos:end="41:52">dummy_vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:54"><expr pos:start="43:13" pos:end="43:53"><call pos:start="43:13" pos:end="43:53"><name pos:start="43:13" pos:end="43:32">avcodec_free_context</name><argument_list pos:start="43:33" pos:end="43:53">(<argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><operator pos:start="43:34" pos:end="43:34">&amp;</operator><name pos:start="43:35" pos:end="43:52"><name pos:start="43:35" pos:end="43:40">config</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:52">dummy_actx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:35">return <expr pos:start="45:20" pos:end="45:34"><call pos:start="45:20" pos:end="45:34"><name pos:start="45:20" pos:end="45:26">AVERROR</name><argument_list pos:start="45:27" pos:end="45:34">(<argument pos:start="45:28" pos:end="45:33"><expr pos:start="45:28" pos:end="45:33"><name pos:start="45:28" pos:end="45:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:60"><expr pos:start="49:9" pos:end="49:59"><name pos:start="49:9" pos:end="49:38"><name pos:start="49:9" pos:end="49:14">config</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:26">dummy_actx</name><operator pos:start="49:27" pos:end="49:28">-&gt;</operator><name pos:start="49:29" pos:end="49:38">codec_type</name></name> <operator pos:start="49:40" pos:end="49:40">=</operator> <name pos:start="49:42" pos:end="49:59">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:60"><expr pos:start="51:9" pos:end="51:59"><name pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:14">config</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:26">dummy_vctx</name><operator pos:start="51:27" pos:end="51:28">-&gt;</operator><name pos:start="51:29" pos:end="51:38">codec_type</name></name> <operator pos:start="51:40" pos:end="51:40">=</operator> <name pos:start="51:42" pos:end="51:59">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:72"><expr pos:start="53:9" pos:end="53:71"><call pos:start="53:9" pos:end="53:71"><name pos:start="53:9" pos:end="53:24">ffserver_get_arg</name><argument_list pos:start="53:25" pos:end="53:71">(<argument pos:start="53:26" pos:end="53:41"><expr pos:start="53:26" pos:end="53:41"><name pos:start="53:26" pos:end="53:41"><name pos:start="53:26" pos:end="53:31">stream</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:41">filename</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:67"><expr pos:start="53:44" pos:end="53:67"><sizeof pos:start="53:44" pos:end="53:67">sizeof<argument_list pos:start="53:50" pos:end="53:67">(<argument pos:start="53:51" pos:end="53:66"><expr pos:start="53:51" pos:end="53:66"><name pos:start="53:51" pos:end="53:66"><name pos:start="53:51" pos:end="53:56">stream</name><operator pos:start="53:57" pos:end="53:58">-&gt;</operator><name pos:start="53:59" pos:end="53:66">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="53:70" pos:end="53:70"><expr pos:start="53:70" pos:end="53:70"><name pos:start="53:70" pos:end="53:70">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:43"><expr pos:start="55:9" pos:end="55:42"><name pos:start="55:9" pos:end="55:9">q</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <call pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:19">strrchr</name><argument_list pos:start="55:20" pos:end="55:42">(<argument pos:start="55:21" pos:end="55:36"><expr pos:start="55:21" pos:end="55:36"><name pos:start="55:21" pos:end="55:36"><name pos:start="55:21" pos:end="55:26">stream</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:36">filename</name></name></expr></argument>, <argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><literal type="char" pos:start="55:39" pos:end="55:41">'&gt;'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="59:22"><if pos:start="57:9" pos:end="59:22">if <condition pos:start="57:12" pos:end="57:14">(<expr pos:start="57:13" pos:end="57:13"><name pos:start="57:13" pos:end="57:13">q</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:22"><block_content pos:start="59:13" pos:end="59:22">

            <expr_stmt pos:start="59:13" pos:end="59:22"><expr pos:start="59:13" pos:end="59:21"><operator pos:start="59:13" pos:end="59:13">*</operator><name pos:start="59:14" pos:end="59:14">q</name> <operator pos:start="59:16" pos:end="59:16">=</operator> <literal type="char" pos:start="59:18" pos:end="59:21">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="63:9" pos:end="69:9">for <control pos:start="63:13" pos:end="63:54">(<init pos:start="63:14" pos:end="63:38"><expr pos:start="63:14" pos:end="63:37"><name pos:start="63:14" pos:end="63:14">s</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:37"><name pos:start="63:18" pos:end="63:23">config</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:37">first_stream</name></name></expr>;</init> <condition pos:start="63:40" pos:end="63:41"><expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">s</name></expr>;</condition> <incr pos:start="63:43" pos:end="63:53"><expr pos:start="63:43" pos:end="63:53"><name pos:start="63:43" pos:end="63:43">s</name> <operator pos:start="63:45" pos:end="63:45">=</operator> <name pos:start="63:47" pos:end="63:53"><name pos:start="63:47" pos:end="63:47">s</name><operator pos:start="63:48" pos:end="63:49">-&gt;</operator><name pos:start="63:50" pos:end="63:53">next</name></name></expr></incr>)</control> <block pos:start="63:56" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:71">

            <if_stmt pos:start="65:13" pos:end="67:71"><if pos:start="65:13" pos:end="67:71">if <condition pos:start="65:16" pos:end="65:55">(<expr pos:start="65:17" pos:end="65:54"><operator pos:start="65:17" pos:end="65:17">!</operator><call pos:start="65:18" pos:end="65:54"><name pos:start="65:18" pos:end="65:23">strcmp</name><argument_list pos:start="65:24" pos:end="65:54">(<argument pos:start="65:25" pos:end="65:40"><expr pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:30">stream</name><operator pos:start="65:31" pos:end="65:32">-&gt;</operator><name pos:start="65:33" pos:end="65:40">filename</name></name></expr></argument>, <argument pos:start="65:43" pos:end="65:53"><expr pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:53"><name pos:start="65:43" pos:end="65:43">s</name><operator pos:start="65:44" pos:end="65:45">-&gt;</operator><name pos:start="65:46" pos:end="65:53">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:71"><block_content pos:start="67:17" pos:end="67:71">

                <expr_stmt pos:start="67:17" pos:end="67:71"><expr pos:start="67:17" pos:end="67:70"><call pos:start="67:17" pos:end="67:70"><name pos:start="67:17" pos:end="67:21">ERROR</name><argument_list pos:start="67:22" pos:end="67:70">(<argument pos:start="67:23" pos:end="67:56"><expr pos:start="67:23" pos:end="67:56"><literal type="string" pos:start="67:23" pos:end="67:56">"Stream '%s' already registered\n"</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:69"><expr pos:start="67:59" pos:end="67:69"><name pos:start="67:59" pos:end="67:69"><name pos:start="67:59" pos:end="67:59">s</name><operator pos:start="67:60" pos:end="67:61">-&gt;</operator><name pos:start="67:62" pos:end="67:69">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="73:9" pos:end="73:74"><expr pos:start="73:9" pos:end="73:73"><name pos:start="73:9" pos:end="73:19"><name pos:start="73:9" pos:end="73:14">stream</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:19">fmt</name></name> <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:73"><name pos:start="73:23" pos:end="73:43">ffserver_guess_format</name><argument_list pos:start="73:44" pos:end="73:73">(<argument pos:start="73:45" pos:end="73:48"><expr pos:start="73:45" pos:end="73:48"><name pos:start="73:45" pos:end="73:48">NULL</name></expr></argument>, <argument pos:start="73:51" pos:end="73:66"><expr pos:start="73:51" pos:end="73:66"><name pos:start="73:51" pos:end="73:66"><name pos:start="73:51" pos:end="73:56">stream</name><operator pos:start="73:57" pos:end="73:58">-&gt;</operator><name pos:start="73:59" pos:end="73:66">filename</name></name></expr></argument>, <argument pos:start="73:69" pos:end="73:72"><expr pos:start="73:69" pos:end="73:72"><name pos:start="73:69" pos:end="73:72">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="75:9" pos:end="87:9"><if pos:start="75:9" pos:end="81:9">if <condition pos:start="75:12" pos:end="75:24">(<expr pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:23"><name pos:start="75:13" pos:end="75:18">stream</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:23">fmt</name></name></expr>)</condition> <block pos:start="75:26" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:70">

            <expr_stmt pos:start="77:13" pos:end="77:70"><expr pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:42"><name pos:start="77:13" pos:end="77:18">config</name><operator pos:start="77:19" pos:end="77:20">-&gt;</operator><name pos:start="77:21" pos:end="77:42">guessed_audio_codec_id</name></name> <operator pos:start="77:44" pos:end="77:44">=</operator> <name pos:start="77:46" pos:end="77:69"><name pos:start="77:46" pos:end="77:51">stream</name><operator pos:start="77:52" pos:end="77:53">-&gt;</operator><name pos:start="77:54" pos:end="77:56">fmt</name><operator pos:start="77:57" pos:end="77:58">-&gt;</operator><name pos:start="77:59" pos:end="77:69">audio_codec</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:70"><expr pos:start="79:13" pos:end="79:69"><name pos:start="79:13" pos:end="79:42"><name pos:start="79:13" pos:end="79:18">config</name><operator pos:start="79:19" pos:end="79:20">-&gt;</operator><name pos:start="79:21" pos:end="79:42">guessed_video_codec_id</name></name> <operator pos:start="79:44" pos:end="79:44">=</operator> <name pos:start="79:46" pos:end="79:69"><name pos:start="79:46" pos:end="79:51">stream</name><operator pos:start="79:52" pos:end="79:53">-&gt;</operator><name pos:start="79:54" pos:end="79:56">fmt</name><operator pos:start="79:57" pos:end="79:58">-&gt;</operator><name pos:start="79:59" pos:end="79:69">video_codec</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="81:11" pos:end="87:9">else <block pos:start="81:16" pos:end="87:9">{<block_content pos:start="83:13" pos:end="85:62">

            <expr_stmt pos:start="83:13" pos:end="83:62"><expr pos:start="83:13" pos:end="83:61"><name pos:start="83:13" pos:end="83:42"><name pos:start="83:13" pos:end="83:18">config</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:42">guessed_audio_codec_id</name></name> <operator pos:start="83:44" pos:end="83:44">=</operator> <name pos:start="83:46" pos:end="83:61">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:62"><expr pos:start="85:13" pos:end="85:61"><name pos:start="85:13" pos:end="85:42"><name pos:start="85:13" pos:end="85:18">config</name><operator pos:start="85:19" pos:end="85:20">-&gt;</operator><name pos:start="85:21" pos:end="85:42">guessed_video_codec_id</name></name> <operator pos:start="85:44" pos:end="85:44">=</operator> <name pos:start="85:46" pos:end="85:61">AV_CODEC_ID_NONE</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:26"><expr pos:start="89:9" pos:end="89:25"><operator pos:start="89:9" pos:end="89:9">*</operator><name pos:start="89:10" pos:end="89:16">pstream</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <name pos:start="89:20" pos:end="89:25">stream</name></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:17">return <expr pos:start="91:16" pos:end="91:16"><literal type="number" pos:start="91:16" pos:end="91:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:23"><expr pos:start="95:5" pos:end="95:22"><call pos:start="95:5" pos:end="95:22"><name pos:start="95:5" pos:end="95:14">av_assert0</name><argument_list pos:start="95:15" pos:end="95:22">(<argument pos:start="95:16" pos:end="95:21"><expr pos:start="95:16" pos:end="95:21"><name pos:start="95:16" pos:end="95:21">stream</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="713:5"><if pos:start="97:5" pos:end="125:5">if <condition pos:start="97:8" pos:end="97:36">(<expr pos:start="97:9" pos:end="97:35"><operator pos:start="97:9" pos:end="97:9">!</operator><call pos:start="97:10" pos:end="97:35"><name pos:start="97:10" pos:end="97:22">av_strcasecmp</name><argument_list pos:start="97:23" pos:end="97:35">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">cmd</name></expr></argument>, <argument pos:start="97:29" pos:end="97:34"><expr pos:start="97:29" pos:end="97:34"><literal type="string" pos:start="97:29" pos:end="97:34">"Feed"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="97:38" pos:end="125:5">{<block_content pos:start="99:9" pos:end="123:33">

        <decl_stmt pos:start="99:9" pos:end="99:30"><decl pos:start="99:9" pos:end="99:29"><type pos:start="99:9" pos:end="99:24"><name pos:start="99:9" pos:end="99:22">FFServerStream</name> <modifier pos:start="99:24" pos:end="99:24">*</modifier></type><name pos:start="99:25" pos:end="99:29">sfeed</name></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:46"><expr pos:start="101:9" pos:end="101:45"><call pos:start="101:9" pos:end="101:45"><name pos:start="101:9" pos:end="101:24">ffserver_get_arg</name><argument_list pos:start="101:25" pos:end="101:45">(<argument pos:start="101:26" pos:end="101:28"><expr pos:start="101:26" pos:end="101:28"><name pos:start="101:26" pos:end="101:28">arg</name></expr></argument>, <argument pos:start="101:31" pos:end="101:41"><expr pos:start="101:31" pos:end="101:41"><sizeof pos:start="101:31" pos:end="101:41">sizeof<argument_list pos:start="101:37" pos:end="101:41">(<argument pos:start="101:38" pos:end="101:40"><expr pos:start="101:38" pos:end="101:40"><name pos:start="101:38" pos:end="101:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="101:44" pos:end="101:44"><expr pos:start="101:44" pos:end="101:44"><name pos:start="101:44" pos:end="101:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:35"><expr pos:start="103:9" pos:end="103:34"><name pos:start="103:9" pos:end="103:13">sfeed</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:22">config</name><operator pos:start="103:23" pos:end="103:24">-&gt;</operator><name pos:start="103:25" pos:end="103:34">first_feed</name></name></expr>;</expr_stmt>

        <while pos:start="105:9" pos:end="113:9">while <condition pos:start="105:15" pos:end="105:21">(<expr pos:start="105:16" pos:end="105:20"><name pos:start="105:16" pos:end="105:20">sfeed</name></expr>)</condition> <block pos:start="105:23" pos:end="113:9">{<block_content pos:start="107:13" pos:end="111:37">

            <if_stmt pos:start="107:13" pos:end="109:22"><if pos:start="107:13" pos:end="109:22">if <condition pos:start="107:16" pos:end="107:46">(<expr pos:start="107:17" pos:end="107:45"><operator pos:start="107:17" pos:end="107:17">!</operator><call pos:start="107:18" pos:end="107:45"><name pos:start="107:18" pos:end="107:23">strcmp</name><argument_list pos:start="107:24" pos:end="107:45">(<argument pos:start="107:25" pos:end="107:39"><expr pos:start="107:25" pos:end="107:39"><name pos:start="107:25" pos:end="107:39"><name pos:start="107:25" pos:end="107:29">sfeed</name><operator pos:start="107:30" pos:end="107:31">-&gt;</operator><name pos:start="107:32" pos:end="107:39">filename</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:44"><expr pos:start="107:42" pos:end="107:44"><name pos:start="107:42" pos:end="107:44">arg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:22"><block_content pos:start="109:17" pos:end="109:22">

                <break pos:start="109:17" pos:end="109:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:37"><expr pos:start="111:13" pos:end="111:36"><name pos:start="111:13" pos:end="111:17">sfeed</name> <operator pos:start="111:19" pos:end="111:19">=</operator> <name pos:start="111:21" pos:end="111:36"><name pos:start="111:21" pos:end="111:25">sfeed</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:36">next_feed</name></name></expr>;</expr_stmt>

        </block_content>}</block></while>

        <if_stmt pos:start="115:9" pos:end="123:33"><if pos:start="115:9" pos:end="119:38">if <condition pos:start="115:12" pos:end="115:19">(<expr pos:start="115:13" pos:end="115:18"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:18">sfeed</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="119:38"><block_content pos:start="117:13" pos:end="119:38">

            <expr_stmt pos:start="117:13" pos:end="119:38"><expr pos:start="117:13" pos:end="119:37"><call pos:start="117:13" pos:end="119:37"><name pos:start="117:13" pos:end="117:17">ERROR</name><argument_list pos:start="117:18" pos:end="119:37">(<argument pos:start="117:19" pos:end="117:72"><expr pos:start="117:19" pos:end="117:72"><literal type="string" pos:start="117:19" pos:end="117:72">"Feed with name '%s' for stream '%s' is not defined\n"</literal></expr></argument>, <argument pos:start="117:75" pos:end="117:77"><expr pos:start="117:75" pos:end="117:77"><name pos:start="117:75" pos:end="117:77">arg</name></expr></argument>,

                    <argument pos:start="119:21" pos:end="119:36"><expr pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:36"><name pos:start="119:21" pos:end="119:26">stream</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:36">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="121:9" pos:end="123:33">else<block type="pseudo" pos:start="123:13" pos:end="123:33"><block_content pos:start="123:13" pos:end="123:33">

            <expr_stmt pos:start="123:13" pos:end="123:33"><expr pos:start="123:13" pos:end="123:32"><name pos:start="123:13" pos:end="123:24"><name pos:start="123:13" pos:end="123:18">stream</name><operator pos:start="123:19" pos:end="123:20">-&gt;</operator><name pos:start="123:21" pos:end="123:24">feed</name></name> <operator pos:start="123:26" pos:end="123:26">=</operator> <name pos:start="123:28" pos:end="123:32">sfeed</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="125:7" pos:end="161:5">else if <condition pos:start="125:15" pos:end="125:45">(<expr pos:start="125:16" pos:end="125:44"><operator pos:start="125:16" pos:end="125:16">!</operator><call pos:start="125:17" pos:end="125:44"><name pos:start="125:17" pos:end="125:29">av_strcasecmp</name><argument_list pos:start="125:30" pos:end="125:44">(<argument pos:start="125:31" pos:end="125:33"><expr pos:start="125:31" pos:end="125:33"><name pos:start="125:31" pos:end="125:33">cmd</name></expr></argument>, <argument pos:start="125:36" pos:end="125:43"><expr pos:start="125:36" pos:end="125:43"><literal type="string" pos:start="125:36" pos:end="125:43">"Format"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:47" pos:end="161:5">{<block_content pos:start="127:9" pos:end="159:9">

        <expr_stmt pos:start="127:9" pos:end="127:46"><expr pos:start="127:9" pos:end="127:45"><call pos:start="127:9" pos:end="127:45"><name pos:start="127:9" pos:end="127:24">ffserver_get_arg</name><argument_list pos:start="127:25" pos:end="127:45">(<argument pos:start="127:26" pos:end="127:28"><expr pos:start="127:26" pos:end="127:28"><name pos:start="127:26" pos:end="127:28">arg</name></expr></argument>, <argument pos:start="127:31" pos:end="127:41"><expr pos:start="127:31" pos:end="127:41"><sizeof pos:start="127:31" pos:end="127:41">sizeof<argument_list pos:start="127:37" pos:end="127:41">(<argument pos:start="127:38" pos:end="127:40"><expr pos:start="127:38" pos:end="127:40"><name pos:start="127:38" pos:end="127:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="127:44" pos:end="127:44"><expr pos:start="127:44" pos:end="127:44"><name pos:start="127:44" pos:end="127:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="129:9" pos:end="151:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:35">(<expr pos:start="129:13" pos:end="129:34"><operator pos:start="129:13" pos:end="129:13">!</operator><call pos:start="129:14" pos:end="129:34"><name pos:start="129:14" pos:end="129:19">strcmp</name><argument_list pos:start="129:20" pos:end="129:34">(<argument pos:start="129:21" pos:end="129:23"><expr pos:start="129:21" pos:end="129:23"><name pos:start="129:21" pos:end="129:23">arg</name></expr></argument>, <argument pos:start="129:26" pos:end="129:33"><expr pos:start="129:26" pos:end="129:33"><literal type="string" pos:start="129:26" pos:end="129:33">"status"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:37" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:31">

            <expr_stmt pos:start="131:13" pos:end="131:53"><expr pos:start="131:13" pos:end="131:52"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:18">stream</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:31">stream_type</name></name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:52">STREAM_TYPE_STATUS</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:31"><expr pos:start="133:13" pos:end="133:30"><name pos:start="133:13" pos:end="133:23"><name pos:start="133:13" pos:end="133:18">stream</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:23">fmt</name></name> <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:30">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="135:11" pos:end="151:9">else <block pos:start="135:16" pos:end="151:9">{<block_content pos:start="137:13" pos:end="149:51">

            <expr_stmt pos:start="137:13" pos:end="137:51"><expr pos:start="137:13" pos:end="137:50"><name pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:18">stream</name><operator pos:start="137:19" pos:end="137:20">-&gt;</operator><name pos:start="137:21" pos:end="137:31">stream_type</name></name> <operator pos:start="137:33" pos:end="137:33">=</operator> <name pos:start="137:35" pos:end="137:50">STREAM_TYPE_LIVE</name></expr>;</expr_stmt>

            <comment type="block" pos:start="139:13" pos:end="139:69">/* JPEG cannot be used here, so use single frame MJPEG */</comment>

            <if_stmt pos:start="141:13" pos:end="143:37"><if pos:start="141:13" pos:end="143:37">if <condition pos:start="141:16" pos:end="141:37">(<expr pos:start="141:17" pos:end="141:36"><operator pos:start="141:17" pos:end="141:17">!</operator><call pos:start="141:18" pos:end="141:36"><name pos:start="141:18" pos:end="141:23">strcmp</name><argument_list pos:start="141:24" pos:end="141:36">(<argument pos:start="141:25" pos:end="141:27"><expr pos:start="141:25" pos:end="141:27"><name pos:start="141:25" pos:end="141:27">arg</name></expr></argument>, <argument pos:start="141:30" pos:end="141:35"><expr pos:start="141:30" pos:end="141:35"><literal type="string" pos:start="141:30" pos:end="141:35">"jpeg"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:37"><block_content pos:start="143:17" pos:end="143:37">

                <expr_stmt pos:start="143:17" pos:end="143:37"><expr pos:start="143:17" pos:end="143:36"><call pos:start="143:17" pos:end="143:36"><name pos:start="143:17" pos:end="143:22">strcpy</name><argument_list pos:start="143:23" pos:end="143:36">(<argument pos:start="143:24" pos:end="143:26"><expr pos:start="143:24" pos:end="143:26"><name pos:start="143:24" pos:end="143:26">arg</name></expr></argument>, <argument pos:start="143:29" pos:end="143:35"><expr pos:start="143:29" pos:end="143:35"><literal type="string" pos:start="143:29" pos:end="143:35">"mjpeg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:65"><expr pos:start="145:13" pos:end="145:64"><name pos:start="145:13" pos:end="145:23"><name pos:start="145:13" pos:end="145:18">stream</name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:23">fmt</name></name> <operator pos:start="145:25" pos:end="145:25">=</operator> <call pos:start="145:27" pos:end="145:64"><name pos:start="145:27" pos:end="145:47">ffserver_guess_format</name><argument_list pos:start="145:48" pos:end="145:64">(<argument pos:start="145:49" pos:end="145:51"><expr pos:start="145:49" pos:end="145:51"><name pos:start="145:49" pos:end="145:51">arg</name></expr></argument>, <argument pos:start="145:54" pos:end="145:57"><expr pos:start="145:54" pos:end="145:57"><name pos:start="145:54" pos:end="145:57">NULL</name></expr></argument>, <argument pos:start="145:60" pos:end="145:63"><expr pos:start="145:60" pos:end="145:63"><name pos:start="145:60" pos:end="145:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="147:13" pos:end="149:51"><if pos:start="147:13" pos:end="149:51">if <condition pos:start="147:16" pos:end="147:29">(<expr pos:start="147:17" pos:end="147:28"><operator pos:start="147:17" pos:end="147:17">!</operator><name pos:start="147:18" pos:end="147:28"><name pos:start="147:18" pos:end="147:23">stream</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:28">fmt</name></name></expr>)</condition><block type="pseudo" pos:start="149:17" pos:end="149:51"><block_content pos:start="149:17" pos:end="149:51">

                <expr_stmt pos:start="149:17" pos:end="149:51"><expr pos:start="149:17" pos:end="149:50"><call pos:start="149:17" pos:end="149:50"><name pos:start="149:17" pos:end="149:21">ERROR</name><argument_list pos:start="149:22" pos:end="149:50">(<argument pos:start="149:23" pos:end="149:44"><expr pos:start="149:23" pos:end="149:44"><literal type="string" pos:start="149:23" pos:end="149:44">"Unknown Format: %s\n"</literal></expr></argument>, <argument pos:start="149:47" pos:end="149:49"><expr pos:start="149:47" pos:end="149:49"><name pos:start="149:47" pos:end="149:49">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="153:9" pos:end="159:9"><if pos:start="153:9" pos:end="159:9">if <condition pos:start="153:12" pos:end="153:24">(<expr pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:23"><name pos:start="153:13" pos:end="153:18">stream</name><operator pos:start="153:19" pos:end="153:20">-&gt;</operator><name pos:start="153:21" pos:end="153:23">fmt</name></name></expr>)</condition> <block pos:start="153:26" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:70">

            <expr_stmt pos:start="155:13" pos:end="155:70"><expr pos:start="155:13" pos:end="155:69"><name pos:start="155:13" pos:end="155:42"><name pos:start="155:13" pos:end="155:18">config</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:42">guessed_audio_codec_id</name></name> <operator pos:start="155:44" pos:end="155:44">=</operator> <name pos:start="155:46" pos:end="155:69"><name pos:start="155:46" pos:end="155:51">stream</name><operator pos:start="155:52" pos:end="155:53">-&gt;</operator><name pos:start="155:54" pos:end="155:56">fmt</name><operator pos:start="155:57" pos:end="155:58">-&gt;</operator><name pos:start="155:59" pos:end="155:69">audio_codec</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:70"><expr pos:start="157:13" pos:end="157:69"><name pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:18">config</name><operator pos:start="157:19" pos:end="157:20">-&gt;</operator><name pos:start="157:21" pos:end="157:42">guessed_video_codec_id</name></name> <operator pos:start="157:44" pos:end="157:44">=</operator> <name pos:start="157:46" pos:end="157:69"><name pos:start="157:46" pos:end="157:51">stream</name><operator pos:start="157:52" pos:end="157:53">-&gt;</operator><name pos:start="157:54" pos:end="157:56">fmt</name><operator pos:start="157:57" pos:end="157:58">-&gt;</operator><name pos:start="157:59" pos:end="157:69">video_codec</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="161:7" pos:end="171:5">else if <condition pos:start="161:15" pos:end="161:50">(<expr pos:start="161:16" pos:end="161:49"><operator pos:start="161:16" pos:end="161:16">!</operator><call pos:start="161:17" pos:end="161:49"><name pos:start="161:17" pos:end="161:29">av_strcasecmp</name><argument_list pos:start="161:30" pos:end="161:49">(<argument pos:start="161:31" pos:end="161:33"><expr pos:start="161:31" pos:end="161:33"><name pos:start="161:31" pos:end="161:33">cmd</name></expr></argument>, <argument pos:start="161:36" pos:end="161:48"><expr pos:start="161:36" pos:end="161:48"><literal type="string" pos:start="161:36" pos:end="161:48">"InputFormat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="161:52" pos:end="171:5">{<block_content pos:start="163:9" pos:end="169:53">

        <expr_stmt pos:start="163:9" pos:end="163:46"><expr pos:start="163:9" pos:end="163:45"><call pos:start="163:9" pos:end="163:45"><name pos:start="163:9" pos:end="163:24">ffserver_get_arg</name><argument_list pos:start="163:25" pos:end="163:45">(<argument pos:start="163:26" pos:end="163:28"><expr pos:start="163:26" pos:end="163:28"><name pos:start="163:26" pos:end="163:28">arg</name></expr></argument>, <argument pos:start="163:31" pos:end="163:41"><expr pos:start="163:31" pos:end="163:41"><sizeof pos:start="163:31" pos:end="163:41">sizeof<argument_list pos:start="163:37" pos:end="163:41">(<argument pos:start="163:38" pos:end="163:40"><expr pos:start="163:38" pos:end="163:40"><name pos:start="163:38" pos:end="163:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="163:44" pos:end="163:44"><expr pos:start="163:44" pos:end="163:44"><name pos:start="163:44" pos:end="163:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:49"><expr pos:start="165:9" pos:end="165:48"><name pos:start="165:9" pos:end="165:20"><name pos:start="165:9" pos:end="165:14">stream</name><operator pos:start="165:15" pos:end="165:16">-&gt;</operator><name pos:start="165:17" pos:end="165:20">ifmt</name></name> <operator pos:start="165:22" pos:end="165:22">=</operator> <call pos:start="165:24" pos:end="165:48"><name pos:start="165:24" pos:end="165:43">av_find_input_format</name><argument_list pos:start="165:44" pos:end="165:48">(<argument pos:start="165:45" pos:end="165:47"><expr pos:start="165:45" pos:end="165:47"><name pos:start="165:45" pos:end="165:47">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="169:53"><if pos:start="167:9" pos:end="169:53">if <condition pos:start="167:12" pos:end="167:26">(<expr pos:start="167:13" pos:end="167:25"><operator pos:start="167:13" pos:end="167:13">!</operator><name pos:start="167:14" pos:end="167:25"><name pos:start="167:14" pos:end="167:19">stream</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:25">ifmt</name></name></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="169:53"><block_content pos:start="169:13" pos:end="169:53">

            <expr_stmt pos:start="169:13" pos:end="169:53"><expr pos:start="169:13" pos:end="169:52"><call pos:start="169:13" pos:end="169:52"><name pos:start="169:13" pos:end="169:17">ERROR</name><argument_list pos:start="169:18" pos:end="169:52">(<argument pos:start="169:19" pos:end="169:46"><expr pos:start="169:19" pos:end="169:46"><literal type="string" pos:start="169:19" pos:end="169:46">"Unknown input format: %s\n"</literal></expr></argument>, <argument pos:start="169:49" pos:end="169:51"><expr pos:start="169:49" pos:end="169:51"><name pos:start="169:49" pos:end="169:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="171:7" pos:end="183:5">else if <condition pos:start="171:15" pos:end="171:49">(<expr pos:start="171:16" pos:end="171:48"><operator pos:start="171:16" pos:end="171:16">!</operator><call pos:start="171:17" pos:end="171:48"><name pos:start="171:17" pos:end="171:29">av_strcasecmp</name><argument_list pos:start="171:30" pos:end="171:48">(<argument pos:start="171:31" pos:end="171:33"><expr pos:start="171:31" pos:end="171:33"><name pos:start="171:31" pos:end="171:33">cmd</name></expr></argument>, <argument pos:start="171:36" pos:end="171:47"><expr pos:start="171:36" pos:end="171:47"><literal type="string" pos:start="171:36" pos:end="171:47">"FaviconURL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:51" pos:end="183:5">{<block_content pos:start="173:9" pos:end="181:68">

        <if_stmt pos:start="173:9" pos:end="181:68"><if pos:start="173:9" pos:end="177:54">if <condition pos:start="173:12" pos:end="173:54">(<expr pos:start="173:13" pos:end="173:53"><name pos:start="173:13" pos:end="173:31"><name pos:start="173:13" pos:end="173:18">stream</name><operator pos:start="173:19" pos:end="173:20">-&gt;</operator><name pos:start="173:21" pos:end="173:31">stream_type</name></name> <operator pos:start="173:33" pos:end="173:34">==</operator> <name pos:start="173:36" pos:end="173:53">STREAM_TYPE_STATUS</name></expr>)</condition><block type="pseudo" pos:start="175:13" pos:end="177:54"><block_content pos:start="175:13" pos:end="177:54">

            <expr_stmt pos:start="175:13" pos:end="177:54"><expr pos:start="175:13" pos:end="177:53"><call pos:start="175:13" pos:end="177:53"><name pos:start="175:13" pos:end="175:28">ffserver_get_arg</name><argument_list pos:start="175:29" pos:end="177:53">(<argument pos:start="175:30" pos:end="175:50"><expr pos:start="175:30" pos:end="175:50"><name pos:start="175:30" pos:end="175:50"><name pos:start="175:30" pos:end="175:35">stream</name><operator pos:start="175:36" pos:end="175:37">-&gt;</operator><name pos:start="175:38" pos:end="175:50">feed_filename</name></name></expr></argument>,

                    <argument pos:start="177:21" pos:end="177:49"><expr pos:start="177:21" pos:end="177:49"><sizeof pos:start="177:21" pos:end="177:49">sizeof<argument_list pos:start="177:27" pos:end="177:49">(<argument pos:start="177:28" pos:end="177:48"><expr pos:start="177:28" pos:end="177:48"><name pos:start="177:28" pos:end="177:48"><name pos:start="177:28" pos:end="177:33">stream</name><operator pos:start="177:34" pos:end="177:35">-&gt;</operator><name pos:start="177:36" pos:end="177:48">feed_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="177:52" pos:end="177:52"><expr pos:start="177:52" pos:end="177:52"><name pos:start="177:52" pos:end="177:52">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="179:9" pos:end="181:68">else<block type="pseudo" pos:start="181:13" pos:end="181:68"><block_content pos:start="181:13" pos:end="181:68">

            <expr_stmt pos:start="181:13" pos:end="181:68"><expr pos:start="181:13" pos:end="181:67"><call pos:start="181:13" pos:end="181:67"><name pos:start="181:13" pos:end="181:17">ERROR</name><argument_list pos:start="181:18" pos:end="181:67">(<argument pos:start="181:19" pos:end="181:66"><expr pos:start="181:19" pos:end="181:66"><literal type="string" pos:start="181:19" pos:end="181:66">"FaviconURL only permitted for status streams\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="183:7" pos:end="211:5">else if <condition pos:start="183:15" pos:end="189:44">(<expr pos:start="183:16" pos:end="189:43"><operator pos:start="183:16" pos:end="183:16">!</operator><call pos:start="183:17" pos:end="183:44"><name pos:start="183:17" pos:end="183:29">av_strcasecmp</name><argument_list pos:start="183:30" pos:end="183:44">(<argument pos:start="183:31" pos:end="183:33"><expr pos:start="183:31" pos:end="183:33"><name pos:start="183:31" pos:end="183:33">cmd</name></expr></argument>, <argument pos:start="183:36" pos:end="183:43"><expr pos:start="183:36" pos:end="183:43"><literal type="string" pos:start="183:36" pos:end="183:43">"Author"</literal></expr></argument>)</argument_list></call>    <operator pos:start="183:49" pos:end="183:50">||</operator>

               <operator pos:start="185:16" pos:end="185:16">!</operator><call pos:start="185:17" pos:end="185:45"><name pos:start="185:17" pos:end="185:29">av_strcasecmp</name><argument_list pos:start="185:30" pos:end="185:45">(<argument pos:start="185:31" pos:end="185:33"><expr pos:start="185:31" pos:end="185:33"><name pos:start="185:31" pos:end="185:33">cmd</name></expr></argument>, <argument pos:start="185:36" pos:end="185:44"><expr pos:start="185:36" pos:end="185:44"><literal type="string" pos:start="185:36" pos:end="185:44">"Comment"</literal></expr></argument>)</argument_list></call>   <operator pos:start="185:49" pos:end="185:50">||</operator>

               <operator pos:start="187:16" pos:end="187:16">!</operator><call pos:start="187:17" pos:end="187:47"><name pos:start="187:17" pos:end="187:29">av_strcasecmp</name><argument_list pos:start="187:30" pos:end="187:47">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">cmd</name></expr></argument>, <argument pos:start="187:36" pos:end="187:46"><expr pos:start="187:36" pos:end="187:46"><literal type="string" pos:start="187:36" pos:end="187:46">"Copyright"</literal></expr></argument>)</argument_list></call> <operator pos:start="187:49" pos:end="187:50">||</operator>

               <operator pos:start="189:16" pos:end="189:16">!</operator><call pos:start="189:17" pos:end="189:43"><name pos:start="189:17" pos:end="189:29">av_strcasecmp</name><argument_list pos:start="189:30" pos:end="189:43">(<argument pos:start="189:31" pos:end="189:33"><expr pos:start="189:31" pos:end="189:33"><name pos:start="189:31" pos:end="189:33">cmd</name></expr></argument>, <argument pos:start="189:36" pos:end="189:42"><expr pos:start="189:36" pos:end="189:42"><literal type="string" pos:start="189:36" pos:end="189:42">"Title"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="189:46" pos:end="211:5">{<block_content pos:start="191:9" pos:end="209:23">

        <decl_stmt pos:start="191:9" pos:end="191:21"><decl pos:start="191:9" pos:end="191:20"><type pos:start="191:9" pos:end="191:12"><name pos:start="191:9" pos:end="191:12">char</name></type> <name pos:start="191:14" pos:end="191:20"><name pos:start="191:14" pos:end="191:16">key</name><index pos:start="191:17" pos:end="191:20">[<expr pos:start="191:18" pos:end="191:19"><literal type="number" pos:start="191:18" pos:end="191:19">32</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="193:9" pos:end="193:14"><decl pos:start="193:9" pos:end="193:13"><type pos:start="193:9" pos:end="193:11"><name pos:start="193:9" pos:end="193:11">int</name></type> <name pos:start="193:13" pos:end="193:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="195:9" pos:end="195:46"><expr pos:start="195:9" pos:end="195:45"><call pos:start="195:9" pos:end="195:45"><name pos:start="195:9" pos:end="195:24">ffserver_get_arg</name><argument_list pos:start="195:25" pos:end="195:45">(<argument pos:start="195:26" pos:end="195:28"><expr pos:start="195:26" pos:end="195:28"><name pos:start="195:26" pos:end="195:28">arg</name></expr></argument>, <argument pos:start="195:31" pos:end="195:41"><expr pos:start="195:31" pos:end="195:41"><sizeof pos:start="195:31" pos:end="195:41">sizeof<argument_list pos:start="195:37" pos:end="195:41">(<argument pos:start="195:38" pos:end="195:40"><expr pos:start="195:38" pos:end="195:40"><name pos:start="195:38" pos:end="195:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="195:44" pos:end="195:44"><expr pos:start="195:44" pos:end="195:44"><name pos:start="195:44" pos:end="195:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="197:9" pos:end="199:40">for <control pos:start="197:13" pos:end="197:41">(<init pos:start="197:14" pos:end="197:19"><expr pos:start="197:14" pos:end="197:18"><name pos:start="197:14" pos:end="197:14">i</name> <operator pos:start="197:16" pos:end="197:16">=</operator> <literal type="number" pos:start="197:18" pos:end="197:18">0</literal></expr>;</init> <condition pos:start="197:21" pos:end="197:36"><expr pos:start="197:21" pos:end="197:35"><name pos:start="197:21" pos:end="197:21">i</name> <operator pos:start="197:23" pos:end="197:23">&lt;</operator> <call pos:start="197:25" pos:end="197:35"><name pos:start="197:25" pos:end="197:30">strlen</name><argument_list pos:start="197:31" pos:end="197:35">(<argument pos:start="197:32" pos:end="197:34"><expr pos:start="197:32" pos:end="197:34"><name pos:start="197:32" pos:end="197:34">cmd</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="197:38" pos:end="197:40"><expr pos:start="197:38" pos:end="197:40"><name pos:start="197:38" pos:end="197:38">i</name><operator pos:start="197:39" pos:end="197:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:13" pos:end="199:40"><block_content pos:start="199:13" pos:end="199:40">

            <expr_stmt pos:start="199:13" pos:end="199:40"><expr pos:start="199:13" pos:end="199:39"><name pos:start="199:13" pos:end="199:18"><name pos:start="199:13" pos:end="199:15">key</name><index pos:start="199:16" pos:end="199:18">[<expr pos:start="199:17" pos:end="199:17"><name pos:start="199:17" pos:end="199:17">i</name></expr>]</index></name> <operator pos:start="199:20" pos:end="199:20">=</operator> <call pos:start="199:22" pos:end="199:39"><name pos:start="199:22" pos:end="199:31">av_tolower</name><argument_list pos:start="199:32" pos:end="199:39">(<argument pos:start="199:33" pos:end="199:38"><expr pos:start="199:33" pos:end="199:38"><name pos:start="199:33" pos:end="199:38"><name pos:start="199:33" pos:end="199:35">cmd</name><index pos:start="199:36" pos:end="199:38">[<expr pos:start="199:37" pos:end="199:37"><name pos:start="199:37" pos:end="199:37">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="201:9" pos:end="201:19"><expr pos:start="201:9" pos:end="201:18"><name pos:start="201:9" pos:end="201:14"><name pos:start="201:9" pos:end="201:11">key</name><index pos:start="201:12" pos:end="201:14">[<expr pos:start="201:13" pos:end="201:13"><name pos:start="201:13" pos:end="201:13">i</name></expr>]</index></name> <operator pos:start="201:16" pos:end="201:16">=</operator> <literal type="number" pos:start="201:18" pos:end="201:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="203:9" pos:end="205:63"><expr pos:start="203:9" pos:end="205:62"><call pos:start="203:9" pos:end="205:62"><name pos:start="203:9" pos:end="203:15">WARNING</name><argument_list pos:start="203:16" pos:end="205:62">(<argument pos:start="203:17" pos:end="205:51"><expr pos:start="203:17" pos:end="205:51"><literal type="string" pos:start="203:17" pos:end="203:67">"'%s' option in configuration file is deprecated, "</literal>

                <literal type="string" pos:start="205:17" pos:end="205:51">"use 'Metadata %s VALUE' instead\n"</literal></expr></argument>, <argument pos:start="205:54" pos:end="205:56"><expr pos:start="205:54" pos:end="205:56"><name pos:start="205:54" pos:end="205:56">cmd</name></expr></argument>, <argument pos:start="205:59" pos:end="205:61"><expr pos:start="205:59" pos:end="205:61"><name pos:start="205:59" pos:end="205:61">key</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="209:23"><if pos:start="207:9" pos:end="209:23">if <condition pos:start="207:12" pos:end="207:60">(<expr pos:start="207:13" pos:end="207:59"><call pos:start="207:13" pos:end="207:55"><name pos:start="207:13" pos:end="207:23">av_dict_set</name><argument_list pos:start="207:24" pos:end="207:55">(<argument pos:start="207:25" pos:end="207:41"><expr pos:start="207:25" pos:end="207:41"><operator pos:start="207:25" pos:end="207:25">&amp;</operator><name pos:start="207:26" pos:end="207:41"><name pos:start="207:26" pos:end="207:31">stream</name><operator pos:start="207:32" pos:end="207:33">-&gt;</operator><name pos:start="207:34" pos:end="207:41">metadata</name></name></expr></argument>, <argument pos:start="207:44" pos:end="207:46"><expr pos:start="207:44" pos:end="207:46"><name pos:start="207:44" pos:end="207:46">key</name></expr></argument>, <argument pos:start="207:49" pos:end="207:51"><expr pos:start="207:49" pos:end="207:51"><name pos:start="207:49" pos:end="207:51">arg</name></expr></argument>, <argument pos:start="207:54" pos:end="207:54"><expr pos:start="207:54" pos:end="207:54"><literal type="number" pos:start="207:54" pos:end="207:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="207:57" pos:end="207:57">&lt;</operator> <literal type="number" pos:start="207:59" pos:end="207:59">0</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:23"><block_content pos:start="209:13" pos:end="209:23">

            <goto pos:start="209:13" pos:end="209:23">goto <name pos:start="209:18" pos:end="209:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="211:7" pos:end="221:5">else if <condition pos:start="211:15" pos:end="211:47">(<expr pos:start="211:16" pos:end="211:46"><operator pos:start="211:16" pos:end="211:16">!</operator><call pos:start="211:17" pos:end="211:46"><name pos:start="211:17" pos:end="211:29">av_strcasecmp</name><argument_list pos:start="211:30" pos:end="211:46">(<argument pos:start="211:31" pos:end="211:33"><expr pos:start="211:31" pos:end="211:33"><name pos:start="211:31" pos:end="211:33">cmd</name></expr></argument>, <argument pos:start="211:36" pos:end="211:45"><expr pos:start="211:36" pos:end="211:45"><literal type="string" pos:start="211:36" pos:end="211:45">"Metadata"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="211:49" pos:end="221:5">{<block_content pos:start="213:9" pos:end="219:23">

        <expr_stmt pos:start="213:9" pos:end="213:46"><expr pos:start="213:9" pos:end="213:45"><call pos:start="213:9" pos:end="213:45"><name pos:start="213:9" pos:end="213:24">ffserver_get_arg</name><argument_list pos:start="213:25" pos:end="213:45">(<argument pos:start="213:26" pos:end="213:28"><expr pos:start="213:26" pos:end="213:28"><name pos:start="213:26" pos:end="213:28">arg</name></expr></argument>, <argument pos:start="213:31" pos:end="213:41"><expr pos:start="213:31" pos:end="213:41"><sizeof pos:start="213:31" pos:end="213:41">sizeof<argument_list pos:start="213:37" pos:end="213:41">(<argument pos:start="213:38" pos:end="213:40"><expr pos:start="213:38" pos:end="213:40"><name pos:start="213:38" pos:end="213:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="213:44" pos:end="213:44"><expr pos:start="213:44" pos:end="213:44"><name pos:start="213:44" pos:end="213:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:48"><expr pos:start="215:9" pos:end="215:47"><call pos:start="215:9" pos:end="215:47"><name pos:start="215:9" pos:end="215:24">ffserver_get_arg</name><argument_list pos:start="215:25" pos:end="215:47">(<argument pos:start="215:26" pos:end="215:29"><expr pos:start="215:26" pos:end="215:29"><name pos:start="215:26" pos:end="215:29">arg2</name></expr></argument>, <argument pos:start="215:32" pos:end="215:43"><expr pos:start="215:32" pos:end="215:43"><sizeof pos:start="215:32" pos:end="215:43">sizeof<argument_list pos:start="215:38" pos:end="215:43">(<argument pos:start="215:39" pos:end="215:42"><expr pos:start="215:39" pos:end="215:42"><name pos:start="215:39" pos:end="215:42">arg2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="215:46" pos:end="215:46"><expr pos:start="215:46" pos:end="215:46"><name pos:start="215:46" pos:end="215:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="217:9" pos:end="219:23"><if pos:start="217:9" pos:end="219:23">if <condition pos:start="217:12" pos:end="217:61">(<expr pos:start="217:13" pos:end="217:60"><call pos:start="217:13" pos:end="217:56"><name pos:start="217:13" pos:end="217:23">av_dict_set</name><argument_list pos:start="217:24" pos:end="217:56">(<argument pos:start="217:25" pos:end="217:41"><expr pos:start="217:25" pos:end="217:41"><operator pos:start="217:25" pos:end="217:25">&amp;</operator><name pos:start="217:26" pos:end="217:41"><name pos:start="217:26" pos:end="217:31">stream</name><operator pos:start="217:32" pos:end="217:33">-&gt;</operator><name pos:start="217:34" pos:end="217:41">metadata</name></name></expr></argument>, <argument pos:start="217:44" pos:end="217:46"><expr pos:start="217:44" pos:end="217:46"><name pos:start="217:44" pos:end="217:46">arg</name></expr></argument>, <argument pos:start="217:49" pos:end="217:52"><expr pos:start="217:49" pos:end="217:52"><name pos:start="217:49" pos:end="217:52">arg2</name></expr></argument>, <argument pos:start="217:55" pos:end="217:55"><expr pos:start="217:55" pos:end="217:55"><literal type="number" pos:start="217:55" pos:end="217:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="217:58" pos:end="217:58">&lt;</operator> <literal type="number" pos:start="217:60" pos:end="217:60">0</literal></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:23"><block_content pos:start="219:13" pos:end="219:23">

            <goto pos:start="219:13" pos:end="219:23">goto <name pos:start="219:18" pos:end="219:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="221:7" pos:end="227:5">else if <condition pos:start="221:15" pos:end="221:46">(<expr pos:start="221:16" pos:end="221:45"><operator pos:start="221:16" pos:end="221:16">!</operator><call pos:start="221:17" pos:end="221:45"><name pos:start="221:17" pos:end="221:29">av_strcasecmp</name><argument_list pos:start="221:30" pos:end="221:45">(<argument pos:start="221:31" pos:end="221:33"><expr pos:start="221:31" pos:end="221:33"><name pos:start="221:31" pos:end="221:33">cmd</name></expr></argument>, <argument pos:start="221:36" pos:end="221:44"><expr pos:start="221:36" pos:end="221:44"><literal type="string" pos:start="221:36" pos:end="221:44">"Preroll"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="221:48" pos:end="227:5">{<block_content pos:start="223:9" pos:end="225:45">

        <expr_stmt pos:start="223:9" pos:end="223:46"><expr pos:start="223:9" pos:end="223:45"><call pos:start="223:9" pos:end="223:45"><name pos:start="223:9" pos:end="223:24">ffserver_get_arg</name><argument_list pos:start="223:25" pos:end="223:45">(<argument pos:start="223:26" pos:end="223:28"><expr pos:start="223:26" pos:end="223:28"><name pos:start="223:26" pos:end="223:28">arg</name></expr></argument>, <argument pos:start="223:31" pos:end="223:41"><expr pos:start="223:31" pos:end="223:41"><sizeof pos:start="223:31" pos:end="223:41">sizeof<argument_list pos:start="223:37" pos:end="223:41">(<argument pos:start="223:38" pos:end="223:40"><expr pos:start="223:38" pos:end="223:40"><name pos:start="223:38" pos:end="223:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="223:44" pos:end="223:44"><expr pos:start="223:44" pos:end="223:44"><name pos:start="223:44" pos:end="223:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:45"><expr pos:start="225:9" pos:end="225:44"><name pos:start="225:9" pos:end="225:25"><name pos:start="225:9" pos:end="225:14">stream</name><operator pos:start="225:15" pos:end="225:16">-&gt;</operator><name pos:start="225:17" pos:end="225:25">prebuffer</name></name> <operator pos:start="225:27" pos:end="225:27">=</operator> <call pos:start="225:29" pos:end="225:37"><name pos:start="225:29" pos:end="225:32">atof</name><argument_list pos:start="225:33" pos:end="225:37">(<argument pos:start="225:34" pos:end="225:36"><expr pos:start="225:34" pos:end="225:36"><name pos:start="225:34" pos:end="225:36">arg</name></expr></argument>)</argument_list></call> <operator pos:start="225:39" pos:end="225:39">*</operator> <literal type="number" pos:start="225:41" pos:end="225:44">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="227:7" pos:end="231:5">else if <condition pos:start="227:15" pos:end="227:53">(<expr pos:start="227:16" pos:end="227:52"><operator pos:start="227:16" pos:end="227:16">!</operator><call pos:start="227:17" pos:end="227:52"><name pos:start="227:17" pos:end="227:29">av_strcasecmp</name><argument_list pos:start="227:30" pos:end="227:52">(<argument pos:start="227:31" pos:end="227:33"><expr pos:start="227:31" pos:end="227:33"><name pos:start="227:31" pos:end="227:33">cmd</name></expr></argument>, <argument pos:start="227:36" pos:end="227:51"><expr pos:start="227:36" pos:end="227:51"><literal type="string" pos:start="227:36" pos:end="227:51">"StartSendOnKey"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="227:55" pos:end="231:5">{<block_content pos:start="229:9" pos:end="229:32">

        <expr_stmt pos:start="229:9" pos:end="229:32"><expr pos:start="229:9" pos:end="229:31"><name pos:start="229:9" pos:end="229:27"><name pos:start="229:9" pos:end="229:14">stream</name><operator pos:start="229:15" pos:end="229:16">-&gt;</operator><name pos:start="229:17" pos:end="229:27">send_on_key</name></name> <operator pos:start="229:29" pos:end="229:29">=</operator> <literal type="number" pos:start="229:31" pos:end="229:31">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="231:7" pos:end="237:5">else if <condition pos:start="231:15" pos:end="231:49">(<expr pos:start="231:16" pos:end="231:48"><operator pos:start="231:16" pos:end="231:16">!</operator><call pos:start="231:17" pos:end="231:48"><name pos:start="231:17" pos:end="231:29">av_strcasecmp</name><argument_list pos:start="231:30" pos:end="231:48">(<argument pos:start="231:31" pos:end="231:33"><expr pos:start="231:31" pos:end="231:33"><name pos:start="231:31" pos:end="231:33">cmd</name></expr></argument>, <argument pos:start="231:36" pos:end="231:47"><expr pos:start="231:36" pos:end="231:47"><literal type="string" pos:start="231:36" pos:end="231:47">"AudioCodec"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="231:51" pos:end="237:5">{<block_content pos:start="233:9" pos:end="235:70">

        <expr_stmt pos:start="233:9" pos:end="233:46"><expr pos:start="233:9" pos:end="233:45"><call pos:start="233:9" pos:end="233:45"><name pos:start="233:9" pos:end="233:24">ffserver_get_arg</name><argument_list pos:start="233:25" pos:end="233:45">(<argument pos:start="233:26" pos:end="233:28"><expr pos:start="233:26" pos:end="233:28"><name pos:start="233:26" pos:end="233:28">arg</name></expr></argument>, <argument pos:start="233:31" pos:end="233:41"><expr pos:start="233:31" pos:end="233:41"><sizeof pos:start="233:31" pos:end="233:41">sizeof<argument_list pos:start="233:37" pos:end="233:41">(<argument pos:start="233:38" pos:end="233:40"><expr pos:start="233:38" pos:end="233:40"><name pos:start="233:38" pos:end="233:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="233:44" pos:end="233:44"><expr pos:start="233:44" pos:end="233:44"><name pos:start="233:44" pos:end="233:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:70"><expr pos:start="235:9" pos:end="235:69"><call pos:start="235:9" pos:end="235:69"><name pos:start="235:9" pos:end="235:26">ffserver_set_codec</name><argument_list pos:start="235:27" pos:end="235:69">(<argument pos:start="235:28" pos:end="235:45"><expr pos:start="235:28" pos:end="235:45"><name pos:start="235:28" pos:end="235:45"><name pos:start="235:28" pos:end="235:33">config</name><operator pos:start="235:34" pos:end="235:35">-&gt;</operator><name pos:start="235:36" pos:end="235:45">dummy_actx</name></name></expr></argument>, <argument pos:start="235:48" pos:end="235:50"><expr pos:start="235:48" pos:end="235:50"><name pos:start="235:48" pos:end="235:50">arg</name></expr></argument>, <argument pos:start="235:53" pos:end="235:58"><expr pos:start="235:53" pos:end="235:58"><name pos:start="235:53" pos:end="235:58">config</name></expr></argument>, <argument pos:start="235:61" pos:end="235:68"><expr pos:start="235:61" pos:end="235:68"><name pos:start="235:61" pos:end="235:68">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="237:7" pos:end="243:5">else if <condition pos:start="237:15" pos:end="237:49">(<expr pos:start="237:16" pos:end="237:48"><operator pos:start="237:16" pos:end="237:16">!</operator><call pos:start="237:17" pos:end="237:48"><name pos:start="237:17" pos:end="237:29">av_strcasecmp</name><argument_list pos:start="237:30" pos:end="237:48">(<argument pos:start="237:31" pos:end="237:33"><expr pos:start="237:31" pos:end="237:33"><name pos:start="237:31" pos:end="237:33">cmd</name></expr></argument>, <argument pos:start="237:36" pos:end="237:47"><expr pos:start="237:36" pos:end="237:47"><literal type="string" pos:start="237:36" pos:end="237:47">"VideoCodec"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="237:51" pos:end="243:5">{<block_content pos:start="239:9" pos:end="241:70">

        <expr_stmt pos:start="239:9" pos:end="239:46"><expr pos:start="239:9" pos:end="239:45"><call pos:start="239:9" pos:end="239:45"><name pos:start="239:9" pos:end="239:24">ffserver_get_arg</name><argument_list pos:start="239:25" pos:end="239:45">(<argument pos:start="239:26" pos:end="239:28"><expr pos:start="239:26" pos:end="239:28"><name pos:start="239:26" pos:end="239:28">arg</name></expr></argument>, <argument pos:start="239:31" pos:end="239:41"><expr pos:start="239:31" pos:end="239:41"><sizeof pos:start="239:31" pos:end="239:41">sizeof<argument_list pos:start="239:37" pos:end="239:41">(<argument pos:start="239:38" pos:end="239:40"><expr pos:start="239:38" pos:end="239:40"><name pos:start="239:38" pos:end="239:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="239:44" pos:end="239:44"><expr pos:start="239:44" pos:end="239:44"><name pos:start="239:44" pos:end="239:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="241:9" pos:end="241:70"><expr pos:start="241:9" pos:end="241:69"><call pos:start="241:9" pos:end="241:69"><name pos:start="241:9" pos:end="241:26">ffserver_set_codec</name><argument_list pos:start="241:27" pos:end="241:69">(<argument pos:start="241:28" pos:end="241:45"><expr pos:start="241:28" pos:end="241:45"><name pos:start="241:28" pos:end="241:45"><name pos:start="241:28" pos:end="241:33">config</name><operator pos:start="241:34" pos:end="241:35">-&gt;</operator><name pos:start="241:36" pos:end="241:45">dummy_vctx</name></name></expr></argument>, <argument pos:start="241:48" pos:end="241:50"><expr pos:start="241:48" pos:end="241:50"><name pos:start="241:48" pos:end="241:50">arg</name></expr></argument>, <argument pos:start="241:53" pos:end="241:58"><expr pos:start="241:53" pos:end="241:58"><name pos:start="241:53" pos:end="241:58">config</name></expr></argument>, <argument pos:start="241:61" pos:end="241:68"><expr pos:start="241:61" pos:end="241:68"><name pos:start="241:61" pos:end="241:68">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="243:7" pos:end="249:5">else if <condition pos:start="243:15" pos:end="243:46">(<expr pos:start="243:16" pos:end="243:45"><operator pos:start="243:16" pos:end="243:16">!</operator><call pos:start="243:17" pos:end="243:45"><name pos:start="243:17" pos:end="243:29">av_strcasecmp</name><argument_list pos:start="243:30" pos:end="243:45">(<argument pos:start="243:31" pos:end="243:33"><expr pos:start="243:31" pos:end="243:33"><name pos:start="243:31" pos:end="243:33">cmd</name></expr></argument>, <argument pos:start="243:36" pos:end="243:44"><expr pos:start="243:36" pos:end="243:44"><literal type="string" pos:start="243:36" pos:end="243:44">"MaxTime"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="243:48" pos:end="249:5">{<block_content pos:start="245:9" pos:end="247:44">

        <expr_stmt pos:start="245:9" pos:end="245:46"><expr pos:start="245:9" pos:end="245:45"><call pos:start="245:9" pos:end="245:45"><name pos:start="245:9" pos:end="245:24">ffserver_get_arg</name><argument_list pos:start="245:25" pos:end="245:45">(<argument pos:start="245:26" pos:end="245:28"><expr pos:start="245:26" pos:end="245:28"><name pos:start="245:26" pos:end="245:28">arg</name></expr></argument>, <argument pos:start="245:31" pos:end="245:41"><expr pos:start="245:31" pos:end="245:41"><sizeof pos:start="245:31" pos:end="245:41">sizeof<argument_list pos:start="245:37" pos:end="245:41">(<argument pos:start="245:38" pos:end="245:40"><expr pos:start="245:38" pos:end="245:40"><name pos:start="245:38" pos:end="245:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="245:44" pos:end="245:44"><expr pos:start="245:44" pos:end="245:44"><name pos:start="245:44" pos:end="245:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="247:9" pos:end="247:44"><expr pos:start="247:9" pos:end="247:43"><name pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:14">stream</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:24">max_time</name></name> <operator pos:start="247:26" pos:end="247:26">=</operator> <call pos:start="247:28" pos:end="247:36"><name pos:start="247:28" pos:end="247:31">atof</name><argument_list pos:start="247:32" pos:end="247:36">(<argument pos:start="247:33" pos:end="247:35"><expr pos:start="247:33" pos:end="247:35"><name pos:start="247:33" pos:end="247:35">arg</name></expr></argument>)</argument_list></call> <operator pos:start="247:38" pos:end="247:38">*</operator> <literal type="number" pos:start="247:40" pos:end="247:43">1000</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="249:7" pos:end="263:5">else if <condition pos:start="249:15" pos:end="249:51">(<expr pos:start="249:16" pos:end="249:50"><operator pos:start="249:16" pos:end="249:16">!</operator><call pos:start="249:17" pos:end="249:50"><name pos:start="249:17" pos:end="249:29">av_strcasecmp</name><argument_list pos:start="249:30" pos:end="249:50">(<argument pos:start="249:31" pos:end="249:33"><expr pos:start="249:31" pos:end="249:33"><name pos:start="249:31" pos:end="249:33">cmd</name></expr></argument>, <argument pos:start="249:36" pos:end="249:49"><expr pos:start="249:36" pos:end="249:49"><literal type="string" pos:start="249:36" pos:end="249:49">"AudioBitRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:53" pos:end="263:5">{<block_content pos:start="251:9" pos:end="261:23">

        <decl_stmt pos:start="251:9" pos:end="251:16"><decl pos:start="251:9" pos:end="251:15"><type pos:start="251:9" pos:end="251:13"><name pos:start="251:9" pos:end="251:13">float</name></type> <name pos:start="251:15" pos:end="251:15">f</name></decl>;</decl_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:46"><expr pos:start="253:9" pos:end="253:45"><call pos:start="253:9" pos:end="253:45"><name pos:start="253:9" pos:end="253:24">ffserver_get_arg</name><argument_list pos:start="253:25" pos:end="253:45">(<argument pos:start="253:26" pos:end="253:28"><expr pos:start="253:26" pos:end="253:28"><name pos:start="253:26" pos:end="253:28">arg</name></expr></argument>, <argument pos:start="253:31" pos:end="253:41"><expr pos:start="253:31" pos:end="253:41"><sizeof pos:start="253:31" pos:end="253:41">sizeof<argument_list pos:start="253:37" pos:end="253:41">(<argument pos:start="253:38" pos:end="253:40"><expr pos:start="253:38" pos:end="253:40"><name pos:start="253:38" pos:end="253:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="253:44" pos:end="253:44"><expr pos:start="253:44" pos:end="253:44"><name pos:start="253:44" pos:end="253:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="257:46"><expr pos:start="255:9" pos:end="257:45"><call pos:start="255:9" pos:end="257:45"><name pos:start="255:9" pos:end="255:32">ffserver_set_float_param</name><argument_list pos:start="255:33" pos:end="257:45">(<argument pos:start="255:34" pos:end="255:35"><expr pos:start="255:34" pos:end="255:35"><operator pos:start="255:34" pos:end="255:34">&amp;</operator><name pos:start="255:35" pos:end="255:35">f</name></expr></argument>, <argument pos:start="255:38" pos:end="255:40"><expr pos:start="255:38" pos:end="255:40"><name pos:start="255:38" pos:end="255:40">arg</name></expr></argument>, <argument pos:start="255:43" pos:end="255:46"><expr pos:start="255:43" pos:end="255:46"><literal type="number" pos:start="255:43" pos:end="255:46">1000</literal></expr></argument>, <argument pos:start="255:49" pos:end="255:49"><expr pos:start="255:49" pos:end="255:49"><literal type="number" pos:start="255:49" pos:end="255:49">0</literal></expr></argument>, <argument pos:start="255:52" pos:end="255:58"><expr pos:start="255:52" pos:end="255:58"><name pos:start="255:52" pos:end="255:58">FLT_MAX</name></expr></argument>, <argument pos:start="255:61" pos:end="255:66"><expr pos:start="255:61" pos:end="255:66"><name pos:start="255:61" pos:end="255:66">config</name></expr></argument>, <argument pos:start="255:69" pos:end="255:76"><expr pos:start="255:69" pos:end="255:76"><name pos:start="255:69" pos:end="255:76">line_num</name></expr></argument>,

                <argument pos:start="257:17" pos:end="257:34"><expr pos:start="257:17" pos:end="257:34"><literal type="string" pos:start="257:17" pos:end="257:34">"Invalid %s: %s\n"</literal></expr></argument>, <argument pos:start="257:37" pos:end="257:39"><expr pos:start="257:37" pos:end="257:39"><name pos:start="257:37" pos:end="257:39">cmd</name></expr></argument>, <argument pos:start="257:42" pos:end="257:44"><expr pos:start="257:42" pos:end="257:44"><name pos:start="257:42" pos:end="257:44">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="259:9" pos:end="261:23"><if pos:start="259:9" pos:end="261:23">if <condition pos:start="259:12" pos:end="259:72">(<expr pos:start="259:13" pos:end="259:71"><call pos:start="259:13" pos:end="259:67"><name pos:start="259:13" pos:end="259:27">av_dict_set_int</name><argument_list pos:start="259:28" pos:end="259:67">(<argument pos:start="259:29" pos:end="259:47"><expr pos:start="259:29" pos:end="259:47"><operator pos:start="259:29" pos:end="259:29">&amp;</operator><name pos:start="259:30" pos:end="259:47"><name pos:start="259:30" pos:end="259:35">config</name><operator pos:start="259:36" pos:end="259:37">-&gt;</operator><name pos:start="259:38" pos:end="259:47">audio_conf</name></name></expr></argument>, <argument pos:start="259:50" pos:end="259:52"><expr pos:start="259:50" pos:end="259:52"><name pos:start="259:50" pos:end="259:52">cmd</name></expr></argument>, <argument pos:start="259:55" pos:end="259:63"><expr pos:start="259:55" pos:end="259:63"><call pos:start="259:55" pos:end="259:63"><name pos:start="259:55" pos:end="259:60">lrintf</name><argument_list pos:start="259:61" pos:end="259:63">(<argument pos:start="259:62" pos:end="259:62"><expr pos:start="259:62" pos:end="259:62"><name pos:start="259:62" pos:end="259:62">f</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="259:66" pos:end="259:66"><expr pos:start="259:66" pos:end="259:66"><literal type="number" pos:start="259:66" pos:end="259:66">0</literal></expr></argument>)</argument_list></call> <operator pos:start="259:69" pos:end="259:69">&lt;</operator> <literal type="number" pos:start="259:71" pos:end="259:71">0</literal></expr>)</condition><block type="pseudo" pos:start="261:13" pos:end="261:23"><block_content pos:start="261:13" pos:end="261:23">

            <goto pos:start="261:13" pos:end="261:23">goto <name pos:start="261:18" pos:end="261:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="263:7" pos:end="275:5">else if <condition pos:start="263:15" pos:end="263:52">(<expr pos:start="263:16" pos:end="263:51"><operator pos:start="263:16" pos:end="263:16">!</operator><call pos:start="263:17" pos:end="263:51"><name pos:start="263:17" pos:end="263:29">av_strcasecmp</name><argument_list pos:start="263:30" pos:end="263:51">(<argument pos:start="263:31" pos:end="263:33"><expr pos:start="263:31" pos:end="263:33"><name pos:start="263:31" pos:end="263:33">cmd</name></expr></argument>, <argument pos:start="263:36" pos:end="263:50"><expr pos:start="263:36" pos:end="263:50"><literal type="string" pos:start="263:36" pos:end="263:50">"AudioChannels"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="263:54" pos:end="275:5">{<block_content pos:start="265:9" pos:end="273:23">

        <expr_stmt pos:start="265:9" pos:end="265:46"><expr pos:start="265:9" pos:end="265:45"><call pos:start="265:9" pos:end="265:45"><name pos:start="265:9" pos:end="265:24">ffserver_get_arg</name><argument_list pos:start="265:25" pos:end="265:45">(<argument pos:start="265:26" pos:end="265:28"><expr pos:start="265:26" pos:end="265:28"><name pos:start="265:26" pos:end="265:28">arg</name></expr></argument>, <argument pos:start="265:31" pos:end="265:41"><expr pos:start="265:31" pos:end="265:41"><sizeof pos:start="265:31" pos:end="265:41">sizeof<argument_list pos:start="265:37" pos:end="265:41">(<argument pos:start="265:38" pos:end="265:40"><expr pos:start="265:38" pos:end="265:40"><name pos:start="265:38" pos:end="265:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="265:44" pos:end="265:44"><expr pos:start="265:44" pos:end="265:44"><name pos:start="265:44" pos:end="265:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="269:65"><expr pos:start="267:9" pos:end="269:64"><call pos:start="267:9" pos:end="269:64"><name pos:start="267:9" pos:end="267:30">ffserver_set_int_param</name><argument_list pos:start="267:31" pos:end="269:64">(<argument pos:start="267:32" pos:end="267:35"><expr pos:start="267:32" pos:end="267:35"><name pos:start="267:32" pos:end="267:35">NULL</name></expr></argument>, <argument pos:start="267:38" pos:end="267:40"><expr pos:start="267:38" pos:end="267:40"><name pos:start="267:38" pos:end="267:40">arg</name></expr></argument>, <argument pos:start="267:43" pos:end="267:43"><expr pos:start="267:43" pos:end="267:43"><literal type="number" pos:start="267:43" pos:end="267:43">0</literal></expr></argument>, <argument pos:start="267:46" pos:end="267:46"><expr pos:start="267:46" pos:end="267:46"><literal type="number" pos:start="267:46" pos:end="267:46">1</literal></expr></argument>, <argument pos:start="267:49" pos:end="267:49"><expr pos:start="267:49" pos:end="267:49"><literal type="number" pos:start="267:49" pos:end="267:49">8</literal></expr></argument>, <argument pos:start="267:52" pos:end="267:57"><expr pos:start="267:52" pos:end="267:57"><name pos:start="267:52" pos:end="267:57">config</name></expr></argument>, <argument pos:start="267:60" pos:end="267:67"><expr pos:start="267:60" pos:end="267:67"><name pos:start="267:60" pos:end="267:67">line_num</name></expr></argument>,

                <argument pos:start="269:17" pos:end="269:53"><expr pos:start="269:17" pos:end="269:53"><literal type="string" pos:start="269:17" pos:end="269:53">"Invalid %s: %s, valid range is 1-8."</literal></expr></argument>, <argument pos:start="269:56" pos:end="269:58"><expr pos:start="269:56" pos:end="269:58"><name pos:start="269:56" pos:end="269:58">cmd</name></expr></argument>, <argument pos:start="269:61" pos:end="269:63"><expr pos:start="269:61" pos:end="269:63"><name pos:start="269:61" pos:end="269:63">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="271:9" pos:end="273:23"><if pos:start="271:9" pos:end="273:23">if <condition pos:start="271:12" pos:end="271:62">(<expr pos:start="271:13" pos:end="271:61"><call pos:start="271:13" pos:end="271:57"><name pos:start="271:13" pos:end="271:23">av_dict_set</name><argument_list pos:start="271:24" pos:end="271:57">(<argument pos:start="271:25" pos:end="271:43"><expr pos:start="271:25" pos:end="271:43"><operator pos:start="271:25" pos:end="271:25">&amp;</operator><name pos:start="271:26" pos:end="271:43"><name pos:start="271:26" pos:end="271:31">config</name><operator pos:start="271:32" pos:end="271:33">-&gt;</operator><name pos:start="271:34" pos:end="271:43">audio_conf</name></name></expr></argument>, <argument pos:start="271:46" pos:end="271:48"><expr pos:start="271:46" pos:end="271:48"><name pos:start="271:46" pos:end="271:48">cmd</name></expr></argument>, <argument pos:start="271:51" pos:end="271:53"><expr pos:start="271:51" pos:end="271:53"><name pos:start="271:51" pos:end="271:53">arg</name></expr></argument>, <argument pos:start="271:56" pos:end="271:56"><expr pos:start="271:56" pos:end="271:56"><literal type="number" pos:start="271:56" pos:end="271:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="271:59" pos:end="271:59">&lt;</operator> <literal type="number" pos:start="271:61" pos:end="271:61">0</literal></expr>)</condition><block type="pseudo" pos:start="273:13" pos:end="273:23"><block_content pos:start="273:13" pos:end="273:23">

            <goto pos:start="273:13" pos:end="273:23">goto <name pos:start="273:18" pos:end="273:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="275:7" pos:end="287:5">else if <condition pos:start="275:15" pos:end="275:54">(<expr pos:start="275:16" pos:end="275:53"><operator pos:start="275:16" pos:end="275:16">!</operator><call pos:start="275:17" pos:end="275:53"><name pos:start="275:17" pos:end="275:29">av_strcasecmp</name><argument_list pos:start="275:30" pos:end="275:53">(<argument pos:start="275:31" pos:end="275:33"><expr pos:start="275:31" pos:end="275:33"><name pos:start="275:31" pos:end="275:33">cmd</name></expr></argument>, <argument pos:start="275:36" pos:end="275:52"><expr pos:start="275:36" pos:end="275:52"><literal type="string" pos:start="275:36" pos:end="275:52">"AudioSampleRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="275:56" pos:end="287:5">{<block_content pos:start="277:9" pos:end="285:23">

        <expr_stmt pos:start="277:9" pos:end="277:46"><expr pos:start="277:9" pos:end="277:45"><call pos:start="277:9" pos:end="277:45"><name pos:start="277:9" pos:end="277:24">ffserver_get_arg</name><argument_list pos:start="277:25" pos:end="277:45">(<argument pos:start="277:26" pos:end="277:28"><expr pos:start="277:26" pos:end="277:28"><name pos:start="277:26" pos:end="277:28">arg</name></expr></argument>, <argument pos:start="277:31" pos:end="277:41"><expr pos:start="277:31" pos:end="277:41"><sizeof pos:start="277:31" pos:end="277:41">sizeof<argument_list pos:start="277:37" pos:end="277:41">(<argument pos:start="277:38" pos:end="277:40"><expr pos:start="277:38" pos:end="277:40"><name pos:start="277:38" pos:end="277:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="277:44" pos:end="277:44"><expr pos:start="277:44" pos:end="277:44"><name pos:start="277:44" pos:end="277:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="281:44"><expr pos:start="279:9" pos:end="281:43"><call pos:start="279:9" pos:end="281:43"><name pos:start="279:9" pos:end="279:30">ffserver_set_int_param</name><argument_list pos:start="279:31" pos:end="281:43">(<argument pos:start="279:32" pos:end="279:35"><expr pos:start="279:32" pos:end="279:35"><name pos:start="279:32" pos:end="279:35">NULL</name></expr></argument>, <argument pos:start="279:38" pos:end="279:40"><expr pos:start="279:38" pos:end="279:40"><name pos:start="279:38" pos:end="279:40">arg</name></expr></argument>, <argument pos:start="279:43" pos:end="279:43"><expr pos:start="279:43" pos:end="279:43"><literal type="number" pos:start="279:43" pos:end="279:43">0</literal></expr></argument>, <argument pos:start="279:46" pos:end="279:46"><expr pos:start="279:46" pos:end="279:46"><literal type="number" pos:start="279:46" pos:end="279:46">0</literal></expr></argument>, <argument pos:start="279:49" pos:end="279:55"><expr pos:start="279:49" pos:end="279:55"><name pos:start="279:49" pos:end="279:55">INT_MAX</name></expr></argument>, <argument pos:start="279:58" pos:end="279:63"><expr pos:start="279:58" pos:end="279:63"><name pos:start="279:58" pos:end="279:63">config</name></expr></argument>, <argument pos:start="279:66" pos:end="279:73"><expr pos:start="279:66" pos:end="279:73"><name pos:start="279:66" pos:end="279:73">line_num</name></expr></argument>,

                <argument pos:start="281:17" pos:end="281:32"><expr pos:start="281:17" pos:end="281:32"><literal type="string" pos:start="281:17" pos:end="281:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="281:35" pos:end="281:37"><expr pos:start="281:35" pos:end="281:37"><name pos:start="281:35" pos:end="281:37">cmd</name></expr></argument>, <argument pos:start="281:40" pos:end="281:42"><expr pos:start="281:40" pos:end="281:42"><name pos:start="281:40" pos:end="281:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="283:9" pos:end="285:23"><if pos:start="283:9" pos:end="285:23">if <condition pos:start="283:12" pos:end="283:62">(<expr pos:start="283:13" pos:end="283:61"><call pos:start="283:13" pos:end="283:57"><name pos:start="283:13" pos:end="283:23">av_dict_set</name><argument_list pos:start="283:24" pos:end="283:57">(<argument pos:start="283:25" pos:end="283:43"><expr pos:start="283:25" pos:end="283:43"><operator pos:start="283:25" pos:end="283:25">&amp;</operator><name pos:start="283:26" pos:end="283:43"><name pos:start="283:26" pos:end="283:31">config</name><operator pos:start="283:32" pos:end="283:33">-&gt;</operator><name pos:start="283:34" pos:end="283:43">audio_conf</name></name></expr></argument>, <argument pos:start="283:46" pos:end="283:48"><expr pos:start="283:46" pos:end="283:48"><name pos:start="283:46" pos:end="283:48">cmd</name></expr></argument>, <argument pos:start="283:51" pos:end="283:53"><expr pos:start="283:51" pos:end="283:53"><name pos:start="283:51" pos:end="283:53">arg</name></expr></argument>, <argument pos:start="283:56" pos:end="283:56"><expr pos:start="283:56" pos:end="283:56"><literal type="number" pos:start="283:56" pos:end="283:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="283:59" pos:end="283:59">&lt;</operator> <literal type="number" pos:start="283:61" pos:end="283:61">0</literal></expr>)</condition><block type="pseudo" pos:start="285:13" pos:end="285:23"><block_content pos:start="285:13" pos:end="285:23">

            <goto pos:start="285:13" pos:end="285:23">goto <name pos:start="285:18" pos:end="285:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="287:7" pos:end="307:5">else if <condition pos:start="287:15" pos:end="287:56">(<expr pos:start="287:16" pos:end="287:55"><operator pos:start="287:16" pos:end="287:16">!</operator><call pos:start="287:17" pos:end="287:55"><name pos:start="287:17" pos:end="287:29">av_strcasecmp</name><argument_list pos:start="287:30" pos:end="287:55">(<argument pos:start="287:31" pos:end="287:33"><expr pos:start="287:31" pos:end="287:33"><name pos:start="287:31" pos:end="287:33">cmd</name></expr></argument>, <argument pos:start="287:36" pos:end="287:54"><expr pos:start="287:36" pos:end="287:54"><literal type="string" pos:start="287:36" pos:end="287:54">"VideoBitRateRange"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="287:58" pos:end="307:5">{<block_content pos:start="289:9" pos:end="305:46">

        <decl_stmt pos:start="289:9" pos:end="289:29"><decl pos:start="289:9" pos:end="289:19"><type pos:start="289:9" pos:end="289:11"><name pos:start="289:9" pos:end="289:11">int</name></type> <name pos:start="289:13" pos:end="289:19">minrate</name></decl>, <decl pos:start="289:22" pos:end="289:28"><type ref="prev" pos:start="289:9" pos:end="289:11"/><name pos:start="289:22" pos:end="289:28">maxrate</name></decl>;</decl_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:46"><expr pos:start="291:9" pos:end="291:45"><call pos:start="291:9" pos:end="291:45"><name pos:start="291:9" pos:end="291:24">ffserver_get_arg</name><argument_list pos:start="291:25" pos:end="291:45">(<argument pos:start="291:26" pos:end="291:28"><expr pos:start="291:26" pos:end="291:28"><name pos:start="291:26" pos:end="291:28">arg</name></expr></argument>, <argument pos:start="291:31" pos:end="291:41"><expr pos:start="291:31" pos:end="291:41"><sizeof pos:start="291:31" pos:end="291:41">sizeof<argument_list pos:start="291:37" pos:end="291:41">(<argument pos:start="291:38" pos:end="291:40"><expr pos:start="291:38" pos:end="291:40"><name pos:start="291:38" pos:end="291:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="291:44" pos:end="291:44"><expr pos:start="291:44" pos:end="291:44"><name pos:start="291:44" pos:end="291:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="293:9" pos:end="305:46"><if pos:start="293:9" pos:end="301:9">if <condition pos:start="293:12" pos:end="293:58">(<expr pos:start="293:13" pos:end="293:57"><call pos:start="293:13" pos:end="293:52"><name pos:start="293:13" pos:end="293:18">sscanf</name><argument_list pos:start="293:19" pos:end="293:52">(<argument pos:start="293:20" pos:end="293:22"><expr pos:start="293:20" pos:end="293:22"><name pos:start="293:20" pos:end="293:22">arg</name></expr></argument>, <argument pos:start="293:25" pos:end="293:31"><expr pos:start="293:25" pos:end="293:31"><literal type="string" pos:start="293:25" pos:end="293:31">"%d-%d"</literal></expr></argument>, <argument pos:start="293:34" pos:end="293:41"><expr pos:start="293:34" pos:end="293:41"><operator pos:start="293:34" pos:end="293:34">&amp;</operator><name pos:start="293:35" pos:end="293:41">minrate</name></expr></argument>, <argument pos:start="293:44" pos:end="293:51"><expr pos:start="293:44" pos:end="293:51"><operator pos:start="293:44" pos:end="293:44">&amp;</operator><name pos:start="293:45" pos:end="293:51">maxrate</name></expr></argument>)</argument_list></call> <operator pos:start="293:54" pos:end="293:55">==</operator> <literal type="number" pos:start="293:57" pos:end="293:57">2</literal></expr>)</condition> <block pos:start="293:60" pos:end="301:9">{<block_content pos:start="295:13" pos:end="299:27">

            <if_stmt pos:start="295:13" pos:end="299:27"><if pos:start="295:13" pos:end="299:27">if <condition pos:start="295:16" pos:end="297:93">(<expr pos:start="295:17" pos:end="297:92"><call pos:start="295:17" pos:end="295:88"><name pos:start="295:17" pos:end="295:31">av_dict_set_int</name><argument_list pos:start="295:32" pos:end="295:88">(<argument pos:start="295:33" pos:end="295:51"><expr pos:start="295:33" pos:end="295:51"><operator pos:start="295:33" pos:end="295:33">&amp;</operator><name pos:start="295:34" pos:end="295:51"><name pos:start="295:34" pos:end="295:39">config</name><operator pos:start="295:40" pos:end="295:41">-&gt;</operator><name pos:start="295:42" pos:end="295:51">video_conf</name></name></expr></argument>, <argument pos:start="295:54" pos:end="295:75"><expr pos:start="295:54" pos:end="295:75"><literal type="string" pos:start="295:54" pos:end="295:75">"VideoBitRateRangeMin"</literal></expr></argument>, <argument pos:start="295:78" pos:end="295:84"><expr pos:start="295:78" pos:end="295:84"><name pos:start="295:78" pos:end="295:84">minrate</name></expr></argument>, <argument pos:start="295:87" pos:end="295:87"><expr pos:start="295:87" pos:end="295:87"><literal type="number" pos:start="295:87" pos:end="295:87">0</literal></expr></argument>)</argument_list></call> <operator pos:start="295:90" pos:end="295:90">&lt;</operator> <literal type="number" pos:start="295:92" pos:end="295:92">0</literal> <operator pos:start="295:94" pos:end="295:95">||</operator>

                <call pos:start="297:17" pos:end="297:88"><name pos:start="297:17" pos:end="297:31">av_dict_set_int</name><argument_list pos:start="297:32" pos:end="297:88">(<argument pos:start="297:33" pos:end="297:51"><expr pos:start="297:33" pos:end="297:51"><operator pos:start="297:33" pos:end="297:33">&amp;</operator><name pos:start="297:34" pos:end="297:51"><name pos:start="297:34" pos:end="297:39">config</name><operator pos:start="297:40" pos:end="297:41">-&gt;</operator><name pos:start="297:42" pos:end="297:51">video_conf</name></name></expr></argument>, <argument pos:start="297:54" pos:end="297:75"><expr pos:start="297:54" pos:end="297:75"><literal type="string" pos:start="297:54" pos:end="297:75">"VideoBitRateRangeMax"</literal></expr></argument>, <argument pos:start="297:78" pos:end="297:84"><expr pos:start="297:78" pos:end="297:84"><name pos:start="297:78" pos:end="297:84">maxrate</name></expr></argument>, <argument pos:start="297:87" pos:end="297:87"><expr pos:start="297:87" pos:end="297:87"><literal type="number" pos:start="297:87" pos:end="297:87">0</literal></expr></argument>)</argument_list></call> <operator pos:start="297:90" pos:end="297:90">&lt;</operator> <literal type="number" pos:start="297:92" pos:end="297:92">0</literal></expr>)</condition><block type="pseudo" pos:start="299:17" pos:end="299:27"><block_content pos:start="299:17" pos:end="299:27">

                <goto pos:start="299:17" pos:end="299:27">goto <name pos:start="299:22" pos:end="299:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="301:11" pos:end="305:46">else<block type="pseudo" pos:start="303:13" pos:end="305:46"><block_content pos:start="303:13" pos:end="305:46">

            <expr_stmt pos:start="303:13" pos:end="305:46"><expr pos:start="303:13" pos:end="305:45"><call pos:start="303:13" pos:end="305:45"><name pos:start="303:13" pos:end="303:17">ERROR</name><argument_list pos:start="303:18" pos:end="305:45">(<argument pos:start="303:19" pos:end="305:39"><expr pos:start="303:19" pos:end="305:39"><literal type="string" pos:start="303:19" pos:end="303:72">"Incorrect format for VideoBitRateRange -- should be "</literal>

                    <literal type="string" pos:start="305:21" pos:end="305:39">"&lt;min&gt;-&lt;max&gt;: %s\n"</literal></expr></argument>, <argument pos:start="305:42" pos:end="305:44"><expr pos:start="305:42" pos:end="305:44"><name pos:start="305:42" pos:end="305:44">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="307:7" pos:end="319:5">else if <condition pos:start="307:15" pos:end="307:44">(<expr pos:start="307:16" pos:end="307:43"><operator pos:start="307:16" pos:end="307:16">!</operator><call pos:start="307:17" pos:end="307:43"><name pos:start="307:17" pos:end="307:29">av_strcasecmp</name><argument_list pos:start="307:30" pos:end="307:43">(<argument pos:start="307:31" pos:end="307:33"><expr pos:start="307:31" pos:end="307:33"><name pos:start="307:31" pos:end="307:33">cmd</name></expr></argument>, <argument pos:start="307:36" pos:end="307:42"><expr pos:start="307:36" pos:end="307:42"><literal type="string" pos:start="307:36" pos:end="307:42">"Debug"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="307:46" pos:end="319:5">{<block_content pos:start="309:9" pos:end="317:23">

        <expr_stmt pos:start="309:9" pos:end="309:46"><expr pos:start="309:9" pos:end="309:45"><call pos:start="309:9" pos:end="309:45"><name pos:start="309:9" pos:end="309:24">ffserver_get_arg</name><argument_list pos:start="309:25" pos:end="309:45">(<argument pos:start="309:26" pos:end="309:28"><expr pos:start="309:26" pos:end="309:28"><name pos:start="309:26" pos:end="309:28">arg</name></expr></argument>, <argument pos:start="309:31" pos:end="309:41"><expr pos:start="309:31" pos:end="309:41"><sizeof pos:start="309:31" pos:end="309:41">sizeof<argument_list pos:start="309:37" pos:end="309:41">(<argument pos:start="309:38" pos:end="309:40"><expr pos:start="309:38" pos:end="309:40"><name pos:start="309:38" pos:end="309:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="309:44" pos:end="309:44"><expr pos:start="309:44" pos:end="309:44"><name pos:start="309:44" pos:end="309:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="313:44"><expr pos:start="311:9" pos:end="313:43"><call pos:start="311:9" pos:end="313:43"><name pos:start="311:9" pos:end="311:30">ffserver_set_int_param</name><argument_list pos:start="311:31" pos:end="313:43">(<argument pos:start="311:32" pos:end="311:35"><expr pos:start="311:32" pos:end="311:35"><name pos:start="311:32" pos:end="311:35">NULL</name></expr></argument>, <argument pos:start="311:38" pos:end="311:40"><expr pos:start="311:38" pos:end="311:40"><name pos:start="311:38" pos:end="311:40">arg</name></expr></argument>, <argument pos:start="311:43" pos:end="311:43"><expr pos:start="311:43" pos:end="311:43"><literal type="number" pos:start="311:43" pos:end="311:43">0</literal></expr></argument>, <argument pos:start="311:46" pos:end="311:52"><expr pos:start="311:46" pos:end="311:52"><name pos:start="311:46" pos:end="311:52">INT_MIN</name></expr></argument>, <argument pos:start="311:55" pos:end="311:61"><expr pos:start="311:55" pos:end="311:61"><name pos:start="311:55" pos:end="311:61">INT_MAX</name></expr></argument>, <argument pos:start="311:64" pos:end="311:69"><expr pos:start="311:64" pos:end="311:69"><name pos:start="311:64" pos:end="311:69">config</name></expr></argument>, <argument pos:start="311:72" pos:end="311:79"><expr pos:start="311:72" pos:end="311:79"><name pos:start="311:72" pos:end="311:79">line_num</name></expr></argument>,

                <argument pos:start="313:17" pos:end="313:32"><expr pos:start="313:17" pos:end="313:32"><literal type="string" pos:start="313:17" pos:end="313:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="313:35" pos:end="313:37"><expr pos:start="313:35" pos:end="313:37"><name pos:start="313:35" pos:end="313:37">cmd</name></expr></argument>, <argument pos:start="313:40" pos:end="313:42"><expr pos:start="313:40" pos:end="313:42"><name pos:start="313:40" pos:end="313:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="315:9" pos:end="317:23"><if pos:start="315:9" pos:end="317:23">if <condition pos:start="315:12" pos:end="315:62">(<expr pos:start="315:13" pos:end="315:61"><call pos:start="315:13" pos:end="315:57"><name pos:start="315:13" pos:end="315:23">av_dict_set</name><argument_list pos:start="315:24" pos:end="315:57">(<argument pos:start="315:25" pos:end="315:43"><expr pos:start="315:25" pos:end="315:43"><operator pos:start="315:25" pos:end="315:25">&amp;</operator><name pos:start="315:26" pos:end="315:43"><name pos:start="315:26" pos:end="315:31">config</name><operator pos:start="315:32" pos:end="315:33">-&gt;</operator><name pos:start="315:34" pos:end="315:43">video_conf</name></name></expr></argument>, <argument pos:start="315:46" pos:end="315:48"><expr pos:start="315:46" pos:end="315:48"><name pos:start="315:46" pos:end="315:48">cmd</name></expr></argument>, <argument pos:start="315:51" pos:end="315:53"><expr pos:start="315:51" pos:end="315:53"><name pos:start="315:51" pos:end="315:53">arg</name></expr></argument>, <argument pos:start="315:56" pos:end="315:56"><expr pos:start="315:56" pos:end="315:56"><literal type="number" pos:start="315:56" pos:end="315:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="315:59" pos:end="315:59">&lt;</operator> <literal type="number" pos:start="315:61" pos:end="315:61">0</literal></expr>)</condition><block type="pseudo" pos:start="317:13" pos:end="317:23"><block_content pos:start="317:13" pos:end="317:23">

            <goto pos:start="317:13" pos:end="317:23">goto <name pos:start="317:18" pos:end="317:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="319:7" pos:end="331:5">else if <condition pos:start="319:15" pos:end="319:45">(<expr pos:start="319:16" pos:end="319:44"><operator pos:start="319:16" pos:end="319:16">!</operator><call pos:start="319:17" pos:end="319:44"><name pos:start="319:17" pos:end="319:29">av_strcasecmp</name><argument_list pos:start="319:30" pos:end="319:44">(<argument pos:start="319:31" pos:end="319:33"><expr pos:start="319:31" pos:end="319:33"><name pos:start="319:31" pos:end="319:33">cmd</name></expr></argument>, <argument pos:start="319:36" pos:end="319:43"><expr pos:start="319:36" pos:end="319:43"><literal type="string" pos:start="319:36" pos:end="319:43">"Strict"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="319:47" pos:end="331:5">{<block_content pos:start="321:9" pos:end="329:23">

        <expr_stmt pos:start="321:9" pos:end="321:46"><expr pos:start="321:9" pos:end="321:45"><call pos:start="321:9" pos:end="321:45"><name pos:start="321:9" pos:end="321:24">ffserver_get_arg</name><argument_list pos:start="321:25" pos:end="321:45">(<argument pos:start="321:26" pos:end="321:28"><expr pos:start="321:26" pos:end="321:28"><name pos:start="321:26" pos:end="321:28">arg</name></expr></argument>, <argument pos:start="321:31" pos:end="321:41"><expr pos:start="321:31" pos:end="321:41"><sizeof pos:start="321:31" pos:end="321:41">sizeof<argument_list pos:start="321:37" pos:end="321:41">(<argument pos:start="321:38" pos:end="321:40"><expr pos:start="321:38" pos:end="321:40"><name pos:start="321:38" pos:end="321:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="321:44" pos:end="321:44"><expr pos:start="321:44" pos:end="321:44"><name pos:start="321:44" pos:end="321:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="323:9" pos:end="325:44"><expr pos:start="323:9" pos:end="325:43"><call pos:start="323:9" pos:end="325:43"><name pos:start="323:9" pos:end="323:30">ffserver_set_int_param</name><argument_list pos:start="323:31" pos:end="325:43">(<argument pos:start="323:32" pos:end="323:35"><expr pos:start="323:32" pos:end="323:35"><name pos:start="323:32" pos:end="323:35">NULL</name></expr></argument>, <argument pos:start="323:38" pos:end="323:40"><expr pos:start="323:38" pos:end="323:40"><name pos:start="323:38" pos:end="323:40">arg</name></expr></argument>, <argument pos:start="323:43" pos:end="323:43"><expr pos:start="323:43" pos:end="323:43"><literal type="number" pos:start="323:43" pos:end="323:43">0</literal></expr></argument>, <argument pos:start="323:46" pos:end="323:52"><expr pos:start="323:46" pos:end="323:52"><name pos:start="323:46" pos:end="323:52">INT_MIN</name></expr></argument>, <argument pos:start="323:55" pos:end="323:61"><expr pos:start="323:55" pos:end="323:61"><name pos:start="323:55" pos:end="323:61">INT_MAX</name></expr></argument>, <argument pos:start="323:64" pos:end="323:69"><expr pos:start="323:64" pos:end="323:69"><name pos:start="323:64" pos:end="323:69">config</name></expr></argument>, <argument pos:start="323:72" pos:end="323:79"><expr pos:start="323:72" pos:end="323:79"><name pos:start="323:72" pos:end="323:79">line_num</name></expr></argument>,

                <argument pos:start="325:17" pos:end="325:32"><expr pos:start="325:17" pos:end="325:32"><literal type="string" pos:start="325:17" pos:end="325:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="325:35" pos:end="325:37"><expr pos:start="325:35" pos:end="325:37"><name pos:start="325:35" pos:end="325:37">cmd</name></expr></argument>, <argument pos:start="325:40" pos:end="325:42"><expr pos:start="325:40" pos:end="325:42"><name pos:start="325:40" pos:end="325:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="327:9" pos:end="329:23"><if pos:start="327:9" pos:end="329:23">if <condition pos:start="327:12" pos:end="327:62">(<expr pos:start="327:13" pos:end="327:61"><call pos:start="327:13" pos:end="327:57"><name pos:start="327:13" pos:end="327:23">av_dict_set</name><argument_list pos:start="327:24" pos:end="327:57">(<argument pos:start="327:25" pos:end="327:43"><expr pos:start="327:25" pos:end="327:43"><operator pos:start="327:25" pos:end="327:25">&amp;</operator><name pos:start="327:26" pos:end="327:43"><name pos:start="327:26" pos:end="327:31">config</name><operator pos:start="327:32" pos:end="327:33">-&gt;</operator><name pos:start="327:34" pos:end="327:43">video_conf</name></name></expr></argument>, <argument pos:start="327:46" pos:end="327:48"><expr pos:start="327:46" pos:end="327:48"><name pos:start="327:46" pos:end="327:48">cmd</name></expr></argument>, <argument pos:start="327:51" pos:end="327:53"><expr pos:start="327:51" pos:end="327:53"><name pos:start="327:51" pos:end="327:53">arg</name></expr></argument>, <argument pos:start="327:56" pos:end="327:56"><expr pos:start="327:56" pos:end="327:56"><literal type="number" pos:start="327:56" pos:end="327:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="327:59" pos:end="327:59">&lt;</operator> <literal type="number" pos:start="327:61" pos:end="327:61">0</literal></expr>)</condition><block type="pseudo" pos:start="329:13" pos:end="329:23"><block_content pos:start="329:13" pos:end="329:23">

            <goto pos:start="329:13" pos:end="329:23">goto <name pos:start="329:18" pos:end="329:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="331:7" pos:end="343:5">else if <condition pos:start="331:15" pos:end="331:54">(<expr pos:start="331:16" pos:end="331:53"><operator pos:start="331:16" pos:end="331:16">!</operator><call pos:start="331:17" pos:end="331:53"><name pos:start="331:17" pos:end="331:29">av_strcasecmp</name><argument_list pos:start="331:30" pos:end="331:53">(<argument pos:start="331:31" pos:end="331:33"><expr pos:start="331:31" pos:end="331:33"><name pos:start="331:31" pos:end="331:33">cmd</name></expr></argument>, <argument pos:start="331:36" pos:end="331:52"><expr pos:start="331:36" pos:end="331:52"><literal type="string" pos:start="331:36" pos:end="331:52">"VideoBufferSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:56" pos:end="343:5">{<block_content pos:start="333:9" pos:end="341:23">

        <expr_stmt pos:start="333:9" pos:end="333:46"><expr pos:start="333:9" pos:end="333:45"><call pos:start="333:9" pos:end="333:45"><name pos:start="333:9" pos:end="333:24">ffserver_get_arg</name><argument_list pos:start="333:25" pos:end="333:45">(<argument pos:start="333:26" pos:end="333:28"><expr pos:start="333:26" pos:end="333:28"><name pos:start="333:26" pos:end="333:28">arg</name></expr></argument>, <argument pos:start="333:31" pos:end="333:41"><expr pos:start="333:31" pos:end="333:41"><sizeof pos:start="333:31" pos:end="333:41">sizeof<argument_list pos:start="333:37" pos:end="333:41">(<argument pos:start="333:38" pos:end="333:40"><expr pos:start="333:38" pos:end="333:40"><name pos:start="333:38" pos:end="333:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="333:44" pos:end="333:44"><expr pos:start="333:44" pos:end="333:44"><name pos:start="333:44" pos:end="333:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="337:44"><expr pos:start="335:9" pos:end="337:43"><call pos:start="335:9" pos:end="337:43"><name pos:start="335:9" pos:end="335:30">ffserver_set_int_param</name><argument_list pos:start="335:31" pos:end="337:43">(<argument pos:start="335:32" pos:end="335:35"><expr pos:start="335:32" pos:end="335:35"><name pos:start="335:32" pos:end="335:35">NULL</name></expr></argument>, <argument pos:start="335:38" pos:end="335:40"><expr pos:start="335:38" pos:end="335:40"><name pos:start="335:38" pos:end="335:40">arg</name></expr></argument>, <argument pos:start="335:43" pos:end="335:48"><expr pos:start="335:43" pos:end="335:48"><literal type="number" pos:start="335:43" pos:end="335:43">8</literal><operator pos:start="335:44" pos:end="335:44">*</operator><literal type="number" pos:start="335:45" pos:end="335:48">1024</literal></expr></argument>, <argument pos:start="335:51" pos:end="335:51"><expr pos:start="335:51" pos:end="335:51"><literal type="number" pos:start="335:51" pos:end="335:51">0</literal></expr></argument>, <argument pos:start="335:54" pos:end="335:60"><expr pos:start="335:54" pos:end="335:60"><name pos:start="335:54" pos:end="335:60">INT_MAX</name></expr></argument>, <argument pos:start="335:63" pos:end="335:68"><expr pos:start="335:63" pos:end="335:68"><name pos:start="335:63" pos:end="335:68">config</name></expr></argument>, <argument pos:start="335:71" pos:end="335:78"><expr pos:start="335:71" pos:end="335:78"><name pos:start="335:71" pos:end="335:78">line_num</name></expr></argument>,

                <argument pos:start="337:17" pos:end="337:32"><expr pos:start="337:17" pos:end="337:32"><literal type="string" pos:start="337:17" pos:end="337:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="337:35" pos:end="337:37"><expr pos:start="337:35" pos:end="337:37"><name pos:start="337:35" pos:end="337:37">cmd</name></expr></argument>, <argument pos:start="337:40" pos:end="337:42"><expr pos:start="337:40" pos:end="337:42"><name pos:start="337:40" pos:end="337:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="339:9" pos:end="341:23"><if pos:start="339:9" pos:end="341:23">if <condition pos:start="339:12" pos:end="339:62">(<expr pos:start="339:13" pos:end="339:61"><call pos:start="339:13" pos:end="339:57"><name pos:start="339:13" pos:end="339:23">av_dict_set</name><argument_list pos:start="339:24" pos:end="339:57">(<argument pos:start="339:25" pos:end="339:43"><expr pos:start="339:25" pos:end="339:43"><operator pos:start="339:25" pos:end="339:25">&amp;</operator><name pos:start="339:26" pos:end="339:43"><name pos:start="339:26" pos:end="339:31">config</name><operator pos:start="339:32" pos:end="339:33">-&gt;</operator><name pos:start="339:34" pos:end="339:43">video_conf</name></name></expr></argument>, <argument pos:start="339:46" pos:end="339:48"><expr pos:start="339:46" pos:end="339:48"><name pos:start="339:46" pos:end="339:48">cmd</name></expr></argument>, <argument pos:start="339:51" pos:end="339:53"><expr pos:start="339:51" pos:end="339:53"><name pos:start="339:51" pos:end="339:53">arg</name></expr></argument>, <argument pos:start="339:56" pos:end="339:56"><expr pos:start="339:56" pos:end="339:56"><literal type="number" pos:start="339:56" pos:end="339:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="339:59" pos:end="339:59">&lt;</operator> <literal type="number" pos:start="339:61" pos:end="339:61">0</literal></expr>)</condition><block type="pseudo" pos:start="341:13" pos:end="341:23"><block_content pos:start="341:13" pos:end="341:23">

            <goto pos:start="341:13" pos:end="341:23">goto <name pos:start="341:18" pos:end="341:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="343:7" pos:end="355:5">else if <condition pos:start="343:15" pos:end="343:60">(<expr pos:start="343:16" pos:end="343:59"><operator pos:start="343:16" pos:end="343:16">!</operator><call pos:start="343:17" pos:end="343:59"><name pos:start="343:17" pos:end="343:29">av_strcasecmp</name><argument_list pos:start="343:30" pos:end="343:59">(<argument pos:start="343:31" pos:end="343:33"><expr pos:start="343:31" pos:end="343:33"><name pos:start="343:31" pos:end="343:33">cmd</name></expr></argument>, <argument pos:start="343:36" pos:end="343:58"><expr pos:start="343:36" pos:end="343:58"><literal type="string" pos:start="343:36" pos:end="343:58">"VideoBitRateTolerance"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="343:62" pos:end="355:5">{<block_content pos:start="345:9" pos:end="353:23">

        <expr_stmt pos:start="345:9" pos:end="345:46"><expr pos:start="345:9" pos:end="345:45"><call pos:start="345:9" pos:end="345:45"><name pos:start="345:9" pos:end="345:24">ffserver_get_arg</name><argument_list pos:start="345:25" pos:end="345:45">(<argument pos:start="345:26" pos:end="345:28"><expr pos:start="345:26" pos:end="345:28"><name pos:start="345:26" pos:end="345:28">arg</name></expr></argument>, <argument pos:start="345:31" pos:end="345:41"><expr pos:start="345:31" pos:end="345:41"><sizeof pos:start="345:31" pos:end="345:41">sizeof<argument_list pos:start="345:37" pos:end="345:41">(<argument pos:start="345:38" pos:end="345:40"><expr pos:start="345:38" pos:end="345:40"><name pos:start="345:38" pos:end="345:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="345:44" pos:end="345:44"><expr pos:start="345:44" pos:end="345:44"><name pos:start="345:44" pos:end="345:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="349:54"><expr pos:start="347:9" pos:end="349:53"><call pos:start="347:9" pos:end="349:53"><name pos:start="347:9" pos:end="347:30">ffserver_set_int_param</name><argument_list pos:start="347:31" pos:end="349:53">(<argument pos:start="347:32" pos:end="347:35"><expr pos:start="347:32" pos:end="347:35"><name pos:start="347:32" pos:end="347:35">NULL</name></expr></argument>, <argument pos:start="347:38" pos:end="347:40"><expr pos:start="347:38" pos:end="347:40"><name pos:start="347:38" pos:end="347:40">arg</name></expr></argument>, <argument pos:start="347:43" pos:end="347:46"><expr pos:start="347:43" pos:end="347:46"><literal type="number" pos:start="347:43" pos:end="347:46">1000</literal></expr></argument>, <argument pos:start="347:49" pos:end="347:55"><expr pos:start="347:49" pos:end="347:55"><name pos:start="347:49" pos:end="347:55">INT_MIN</name></expr></argument>, <argument pos:start="347:58" pos:end="347:64"><expr pos:start="347:58" pos:end="347:64"><name pos:start="347:58" pos:end="347:64">INT_MAX</name></expr></argument>, <argument pos:start="347:67" pos:end="347:72"><expr pos:start="347:67" pos:end="347:72"><name pos:start="347:67" pos:end="347:72">config</name></expr></argument>,

                <argument pos:start="349:17" pos:end="349:24"><expr pos:start="349:17" pos:end="349:24"><name pos:start="349:17" pos:end="349:24">line_num</name></expr></argument>, <argument pos:start="349:27" pos:end="349:42"><expr pos:start="349:27" pos:end="349:42"><literal type="string" pos:start="349:27" pos:end="349:42">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="349:45" pos:end="349:47"><expr pos:start="349:45" pos:end="349:47"><name pos:start="349:45" pos:end="349:47">cmd</name></expr></argument>, <argument pos:start="349:50" pos:end="349:52"><expr pos:start="349:50" pos:end="349:52"><name pos:start="349:50" pos:end="349:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="351:9" pos:end="353:23"><if pos:start="351:9" pos:end="353:23">if <condition pos:start="351:12" pos:end="351:62">(<expr pos:start="351:13" pos:end="351:61"><call pos:start="351:13" pos:end="351:57"><name pos:start="351:13" pos:end="351:23">av_dict_set</name><argument_list pos:start="351:24" pos:end="351:57">(<argument pos:start="351:25" pos:end="351:43"><expr pos:start="351:25" pos:end="351:43"><operator pos:start="351:25" pos:end="351:25">&amp;</operator><name pos:start="351:26" pos:end="351:43"><name pos:start="351:26" pos:end="351:31">config</name><operator pos:start="351:32" pos:end="351:33">-&gt;</operator><name pos:start="351:34" pos:end="351:43">video_conf</name></name></expr></argument>, <argument pos:start="351:46" pos:end="351:48"><expr pos:start="351:46" pos:end="351:48"><name pos:start="351:46" pos:end="351:48">cmd</name></expr></argument>, <argument pos:start="351:51" pos:end="351:53"><expr pos:start="351:51" pos:end="351:53"><name pos:start="351:51" pos:end="351:53">arg</name></expr></argument>, <argument pos:start="351:56" pos:end="351:56"><expr pos:start="351:56" pos:end="351:56"><literal type="number" pos:start="351:56" pos:end="351:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="351:59" pos:end="351:59">&lt;</operator> <literal type="number" pos:start="351:61" pos:end="351:61">0</literal></expr>)</condition><block type="pseudo" pos:start="353:13" pos:end="353:23"><block_content pos:start="353:13" pos:end="353:23">

            <goto pos:start="353:13" pos:end="353:23">goto <name pos:start="353:18" pos:end="353:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="355:7" pos:end="367:5">else if <condition pos:start="355:15" pos:end="355:51">(<expr pos:start="355:16" pos:end="355:50"><operator pos:start="355:16" pos:end="355:16">!</operator><call pos:start="355:17" pos:end="355:50"><name pos:start="355:17" pos:end="355:29">av_strcasecmp</name><argument_list pos:start="355:30" pos:end="355:50">(<argument pos:start="355:31" pos:end="355:33"><expr pos:start="355:31" pos:end="355:33"><name pos:start="355:31" pos:end="355:33">cmd</name></expr></argument>, <argument pos:start="355:36" pos:end="355:49"><expr pos:start="355:36" pos:end="355:49"><literal type="string" pos:start="355:36" pos:end="355:49">"VideoBitRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="355:53" pos:end="367:5">{<block_content pos:start="357:9" pos:end="365:22">

        <expr_stmt pos:start="357:9" pos:end="357:46"><expr pos:start="357:9" pos:end="357:45"><call pos:start="357:9" pos:end="357:45"><name pos:start="357:9" pos:end="357:24">ffserver_get_arg</name><argument_list pos:start="357:25" pos:end="357:45">(<argument pos:start="357:26" pos:end="357:28"><expr pos:start="357:26" pos:end="357:28"><name pos:start="357:26" pos:end="357:28">arg</name></expr></argument>, <argument pos:start="357:31" pos:end="357:41"><expr pos:start="357:31" pos:end="357:41"><sizeof pos:start="357:31" pos:end="357:41">sizeof<argument_list pos:start="357:37" pos:end="357:41">(<argument pos:start="357:38" pos:end="357:40"><expr pos:start="357:38" pos:end="357:40"><name pos:start="357:38" pos:end="357:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="357:44" pos:end="357:44"><expr pos:start="357:44" pos:end="357:44"><name pos:start="357:44" pos:end="357:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="359:9" pos:end="361:44"><expr pos:start="359:9" pos:end="361:43"><call pos:start="359:9" pos:end="361:43"><name pos:start="359:9" pos:end="359:30">ffserver_set_int_param</name><argument_list pos:start="359:31" pos:end="361:43">(<argument pos:start="359:32" pos:end="359:35"><expr pos:start="359:32" pos:end="359:35"><name pos:start="359:32" pos:end="359:35">NULL</name></expr></argument>, <argument pos:start="359:38" pos:end="359:40"><expr pos:start="359:38" pos:end="359:40"><name pos:start="359:38" pos:end="359:40">arg</name></expr></argument>, <argument pos:start="359:43" pos:end="359:46"><expr pos:start="359:43" pos:end="359:46"><literal type="number" pos:start="359:43" pos:end="359:46">1000</literal></expr></argument>, <argument pos:start="359:49" pos:end="359:49"><expr pos:start="359:49" pos:end="359:49"><literal type="number" pos:start="359:49" pos:end="359:49">0</literal></expr></argument>, <argument pos:start="359:52" pos:end="359:58"><expr pos:start="359:52" pos:end="359:58"><name pos:start="359:52" pos:end="359:58">INT_MAX</name></expr></argument>, <argument pos:start="359:61" pos:end="359:66"><expr pos:start="359:61" pos:end="359:66"><name pos:start="359:61" pos:end="359:66">config</name></expr></argument>, <argument pos:start="359:69" pos:end="359:76"><expr pos:start="359:69" pos:end="359:76"><name pos:start="359:69" pos:end="359:76">line_num</name></expr></argument>,

                <argument pos:start="361:17" pos:end="361:32"><expr pos:start="361:17" pos:end="361:32"><literal type="string" pos:start="361:17" pos:end="361:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="361:35" pos:end="361:37"><expr pos:start="361:35" pos:end="361:37"><name pos:start="361:35" pos:end="361:37">cmd</name></expr></argument>, <argument pos:start="361:40" pos:end="361:42"><expr pos:start="361:40" pos:end="361:42"><name pos:start="361:40" pos:end="361:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="363:9" pos:end="365:22"><if pos:start="363:9" pos:end="365:22">if <condition pos:start="363:12" pos:end="363:62">(<expr pos:start="363:13" pos:end="363:61"><call pos:start="363:13" pos:end="363:57"><name pos:start="363:13" pos:end="363:23">av_dict_set</name><argument_list pos:start="363:24" pos:end="363:57">(<argument pos:start="363:25" pos:end="363:43"><expr pos:start="363:25" pos:end="363:43"><operator pos:start="363:25" pos:end="363:25">&amp;</operator><name pos:start="363:26" pos:end="363:43"><name pos:start="363:26" pos:end="363:31">config</name><operator pos:start="363:32" pos:end="363:33">-&gt;</operator><name pos:start="363:34" pos:end="363:43">video_conf</name></name></expr></argument>, <argument pos:start="363:46" pos:end="363:48"><expr pos:start="363:46" pos:end="363:48"><name pos:start="363:46" pos:end="363:48">cmd</name></expr></argument>, <argument pos:start="363:51" pos:end="363:53"><expr pos:start="363:51" pos:end="363:53"><name pos:start="363:51" pos:end="363:53">arg</name></expr></argument>, <argument pos:start="363:56" pos:end="363:56"><expr pos:start="363:56" pos:end="363:56"><literal type="number" pos:start="363:56" pos:end="363:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="363:59" pos:end="363:59">&lt;</operator> <literal type="number" pos:start="363:61" pos:end="363:61">0</literal></expr>)</condition><block type="pseudo" pos:start="365:12" pos:end="365:22"><block_content pos:start="365:12" pos:end="365:22">

           <goto pos:start="365:12" pos:end="365:22">goto <name pos:start="365:17" pos:end="365:21">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="367:7" pos:end="389:5">else if <condition pos:start="367:15" pos:end="367:48">(<expr pos:start="367:16" pos:end="367:47"><operator pos:start="367:16" pos:end="367:16">!</operator><call pos:start="367:17" pos:end="367:47"><name pos:start="367:17" pos:end="367:29">av_strcasecmp</name><argument_list pos:start="367:30" pos:end="367:47">(<argument pos:start="367:31" pos:end="367:33"><expr pos:start="367:31" pos:end="367:33"><name pos:start="367:31" pos:end="367:33">cmd</name></expr></argument>, <argument pos:start="367:36" pos:end="367:46"><expr pos:start="367:36" pos:end="367:46"><literal type="string" pos:start="367:36" pos:end="367:46">"VideoSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="367:50" pos:end="389:5">{<block_content pos:start="369:9" pos:end="387:23">

        <decl_stmt pos:start="369:9" pos:end="369:22"><decl pos:start="369:9" pos:end="369:15"><type pos:start="369:9" pos:end="369:11"><name pos:start="369:9" pos:end="369:11">int</name></type> <name pos:start="369:13" pos:end="369:15">ret</name></decl>, <decl pos:start="369:18" pos:end="369:18"><type ref="prev" pos:start="369:9" pos:end="369:11"/><name pos:start="369:18" pos:end="369:18">w</name></decl>, <decl pos:start="369:21" pos:end="369:21"><type ref="prev" pos:start="369:9" pos:end="369:11"/><name pos:start="369:21" pos:end="369:21">h</name></decl>;</decl_stmt>

        <expr_stmt pos:start="371:9" pos:end="371:46"><expr pos:start="371:9" pos:end="371:45"><call pos:start="371:9" pos:end="371:45"><name pos:start="371:9" pos:end="371:24">ffserver_get_arg</name><argument_list pos:start="371:25" pos:end="371:45">(<argument pos:start="371:26" pos:end="371:28"><expr pos:start="371:26" pos:end="371:28"><name pos:start="371:26" pos:end="371:28">arg</name></expr></argument>, <argument pos:start="371:31" pos:end="371:41"><expr pos:start="371:31" pos:end="371:41"><sizeof pos:start="371:31" pos:end="371:41">sizeof<argument_list pos:start="371:37" pos:end="371:41">(<argument pos:start="371:38" pos:end="371:40"><expr pos:start="371:38" pos:end="371:40"><name pos:start="371:38" pos:end="371:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="371:44" pos:end="371:44"><expr pos:start="371:44" pos:end="371:44"><name pos:start="371:44" pos:end="371:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:47"><expr pos:start="373:9" pos:end="373:46"><name pos:start="373:9" pos:end="373:11">ret</name> <operator pos:start="373:13" pos:end="373:13">=</operator> <call pos:start="373:15" pos:end="373:46"><name pos:start="373:15" pos:end="373:33">av_parse_video_size</name><argument_list pos:start="373:34" pos:end="373:46">(<argument pos:start="373:35" pos:end="373:36"><expr pos:start="373:35" pos:end="373:36"><operator pos:start="373:35" pos:end="373:35">&amp;</operator><name pos:start="373:36" pos:end="373:36">w</name></expr></argument>, <argument pos:start="373:39" pos:end="373:40"><expr pos:start="373:39" pos:end="373:40"><operator pos:start="373:39" pos:end="373:39">&amp;</operator><name pos:start="373:40" pos:end="373:40">h</name></expr></argument>, <argument pos:start="373:43" pos:end="373:45"><expr pos:start="373:43" pos:end="373:45"><name pos:start="373:43" pos:end="373:45">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="375:9" pos:end="381:59"><if pos:start="375:9" pos:end="377:52">if <condition pos:start="375:12" pos:end="375:20">(<expr pos:start="375:13" pos:end="375:19"><name pos:start="375:13" pos:end="375:15">ret</name> <operator pos:start="375:17" pos:end="375:17">&lt;</operator> <literal type="number" pos:start="375:19" pos:end="375:19">0</literal></expr>)</condition><block type="pseudo" pos:start="377:13" pos:end="377:52"><block_content pos:start="377:13" pos:end="377:52">

            <expr_stmt pos:start="377:13" pos:end="377:52"><expr pos:start="377:13" pos:end="377:51"><call pos:start="377:13" pos:end="377:51"><name pos:start="377:13" pos:end="377:17">ERROR</name><argument_list pos:start="377:18" pos:end="377:51">(<argument pos:start="377:19" pos:end="377:45"><expr pos:start="377:19" pos:end="377:45"><literal type="string" pos:start="377:19" pos:end="377:45">"Invalid video size '%s'\n"</literal></expr></argument>, <argument pos:start="377:48" pos:end="377:50"><expr pos:start="377:48" pos:end="377:50"><name pos:start="377:48" pos:end="377:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="379:9" pos:end="381:59">else if <condition pos:start="379:17" pos:end="379:36">(<expr pos:start="379:18" pos:end="379:35"><operator pos:start="379:18" pos:end="379:18">(</operator><name pos:start="379:19" pos:end="379:19">w</name> <operator pos:start="379:21" pos:end="379:21">%</operator> <literal type="number" pos:start="379:23" pos:end="379:23">2</literal><operator pos:start="379:24" pos:end="379:24">)</operator> <operator pos:start="379:26" pos:end="379:27">||</operator> <operator pos:start="379:29" pos:end="379:29">(</operator><name pos:start="379:30" pos:end="379:30">h</name> <operator pos:start="379:32" pos:end="379:32">%</operator> <literal type="number" pos:start="379:34" pos:end="379:34">2</literal><operator pos:start="379:35" pos:end="379:35">)</operator></expr>)</condition><block type="pseudo" pos:start="381:13" pos:end="381:59"><block_content pos:start="381:13" pos:end="381:59">

            <expr_stmt pos:start="381:13" pos:end="381:59"><expr pos:start="381:13" pos:end="381:58"><call pos:start="381:13" pos:end="381:58"><name pos:start="381:13" pos:end="381:19">WARNING</name><argument_list pos:start="381:20" pos:end="381:58">(<argument pos:start="381:21" pos:end="381:57"><expr pos:start="381:21" pos:end="381:57"><literal type="string" pos:start="381:21" pos:end="381:57">"Image size is not a multiple of 2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="383:9" pos:end="387:23"><if pos:start="383:9" pos:end="387:23">if <condition pos:start="383:12" pos:end="385:78">(<expr pos:start="383:13" pos:end="385:77"><call pos:start="383:13" pos:end="383:72"><name pos:start="383:13" pos:end="383:27">av_dict_set_int</name><argument_list pos:start="383:28" pos:end="383:72">(<argument pos:start="383:29" pos:end="383:47"><expr pos:start="383:29" pos:end="383:47"><operator pos:start="383:29" pos:end="383:29">&amp;</operator><name pos:start="383:30" pos:end="383:47"><name pos:start="383:30" pos:end="383:35">config</name><operator pos:start="383:36" pos:end="383:37">-&gt;</operator><name pos:start="383:38" pos:end="383:47">video_conf</name></name></expr></argument>, <argument pos:start="383:50" pos:end="383:65"><expr pos:start="383:50" pos:end="383:65"><literal type="string" pos:start="383:50" pos:end="383:65">"VideoSizeWidth"</literal></expr></argument>, <argument pos:start="383:68" pos:end="383:68"><expr pos:start="383:68" pos:end="383:68"><name pos:start="383:68" pos:end="383:68">w</name></expr></argument>, <argument pos:start="383:71" pos:end="383:71"><expr pos:start="383:71" pos:end="383:71"><literal type="number" pos:start="383:71" pos:end="383:71">0</literal></expr></argument>)</argument_list></call> <operator pos:start="383:74" pos:end="383:74">&lt;</operator> <literal type="number" pos:start="383:76" pos:end="383:76">0</literal> <operator pos:start="383:78" pos:end="383:79">||</operator>

            <call pos:start="385:13" pos:end="385:73"><name pos:start="385:13" pos:end="385:27">av_dict_set_int</name><argument_list pos:start="385:28" pos:end="385:73">(<argument pos:start="385:29" pos:end="385:47"><expr pos:start="385:29" pos:end="385:47"><operator pos:start="385:29" pos:end="385:29">&amp;</operator><name pos:start="385:30" pos:end="385:47"><name pos:start="385:30" pos:end="385:35">config</name><operator pos:start="385:36" pos:end="385:37">-&gt;</operator><name pos:start="385:38" pos:end="385:47">video_conf</name></name></expr></argument>, <argument pos:start="385:50" pos:end="385:66"><expr pos:start="385:50" pos:end="385:66"><literal type="string" pos:start="385:50" pos:end="385:66">"VideoSizeHeight"</literal></expr></argument>, <argument pos:start="385:69" pos:end="385:69"><expr pos:start="385:69" pos:end="385:69"><name pos:start="385:69" pos:end="385:69">h</name></expr></argument>, <argument pos:start="385:72" pos:end="385:72"><expr pos:start="385:72" pos:end="385:72"><literal type="number" pos:start="385:72" pos:end="385:72">0</literal></expr></argument>)</argument_list></call> <operator pos:start="385:75" pos:end="385:75">&lt;</operator> <literal type="number" pos:start="385:77" pos:end="385:77">0</literal></expr>)</condition><block type="pseudo" pos:start="387:13" pos:end="387:23"><block_content pos:start="387:13" pos:end="387:23">

            <goto pos:start="387:13" pos:end="387:23">goto <name pos:start="387:18" pos:end="387:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="389:7" pos:end="409:5">else if <condition pos:start="389:15" pos:end="389:53">(<expr pos:start="389:16" pos:end="389:52"><operator pos:start="389:16" pos:end="389:16">!</operator><call pos:start="389:17" pos:end="389:52"><name pos:start="389:17" pos:end="389:29">av_strcasecmp</name><argument_list pos:start="389:30" pos:end="389:52">(<argument pos:start="389:31" pos:end="389:33"><expr pos:start="389:31" pos:end="389:33"><name pos:start="389:31" pos:end="389:33">cmd</name></expr></argument>, <argument pos:start="389:36" pos:end="389:51"><expr pos:start="389:36" pos:end="389:51"><literal type="string" pos:start="389:36" pos:end="389:51">"VideoFrameRate"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="389:55" pos:end="409:5">{<block_content pos:start="391:9" pos:end="407:9">

        <decl_stmt pos:start="391:9" pos:end="391:30"><decl pos:start="391:9" pos:end="391:29"><type pos:start="391:9" pos:end="391:18"><name pos:start="391:9" pos:end="391:18">AVRational</name></type> <name pos:start="391:20" pos:end="391:29">frame_rate</name></decl>;</decl_stmt>

        <expr_stmt pos:start="393:9" pos:end="393:46"><expr pos:start="393:9" pos:end="393:45"><call pos:start="393:9" pos:end="393:45"><name pos:start="393:9" pos:end="393:24">ffserver_get_arg</name><argument_list pos:start="393:25" pos:end="393:45">(<argument pos:start="393:26" pos:end="393:28"><expr pos:start="393:26" pos:end="393:28"><name pos:start="393:26" pos:end="393:28">arg</name></expr></argument>, <argument pos:start="393:31" pos:end="393:41"><expr pos:start="393:31" pos:end="393:41"><sizeof pos:start="393:31" pos:end="393:41">sizeof<argument_list pos:start="393:37" pos:end="393:41">(<argument pos:start="393:38" pos:end="393:40"><expr pos:start="393:38" pos:end="393:40"><name pos:start="393:38" pos:end="393:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="393:44" pos:end="393:44"><expr pos:start="393:44" pos:end="393:44"><name pos:start="393:44" pos:end="393:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="395:9" pos:end="407:9"><if pos:start="395:9" pos:end="399:9">if <condition pos:start="395:12" pos:end="395:54">(<expr pos:start="395:13" pos:end="395:53"><call pos:start="395:13" pos:end="395:49"><name pos:start="395:13" pos:end="395:31">av_parse_video_rate</name><argument_list pos:start="395:32" pos:end="395:49">(<argument pos:start="395:33" pos:end="395:43"><expr pos:start="395:33" pos:end="395:43"><operator pos:start="395:33" pos:end="395:33">&amp;</operator><name pos:start="395:34" pos:end="395:43">frame_rate</name></expr></argument>, <argument pos:start="395:46" pos:end="395:48"><expr pos:start="395:46" pos:end="395:48"><name pos:start="395:46" pos:end="395:48">arg</name></expr></argument>)</argument_list></call> <operator pos:start="395:51" pos:end="395:51">&lt;</operator> <literal type="number" pos:start="395:53" pos:end="395:53">0</literal></expr>)</condition> <block pos:start="395:56" pos:end="399:9">{<block_content pos:start="397:13" pos:end="397:53">

            <expr_stmt pos:start="397:13" pos:end="397:53"><expr pos:start="397:13" pos:end="397:52"><call pos:start="397:13" pos:end="397:52"><name pos:start="397:13" pos:end="397:17">ERROR</name><argument_list pos:start="397:18" pos:end="397:52">(<argument pos:start="397:19" pos:end="397:46"><expr pos:start="397:19" pos:end="397:46"><literal type="string" pos:start="397:19" pos:end="397:46">"Incorrect frame rate: %s\n"</literal></expr></argument>, <argument pos:start="397:49" pos:end="397:51"><expr pos:start="397:49" pos:end="397:51"><name pos:start="397:49" pos:end="397:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="399:11" pos:end="407:9">else <block pos:start="399:16" pos:end="407:9">{<block_content pos:start="401:13" pos:end="405:27">

            <if_stmt pos:start="401:13" pos:end="405:27"><if pos:start="401:13" pos:end="405:27">if <condition pos:start="401:16" pos:end="403:97">(<expr pos:start="401:17" pos:end="403:96"><call pos:start="401:17" pos:end="401:92"><name pos:start="401:17" pos:end="401:31">av_dict_set_int</name><argument_list pos:start="401:32" pos:end="401:92">(<argument pos:start="401:33" pos:end="401:51"><expr pos:start="401:33" pos:end="401:51"><operator pos:start="401:33" pos:end="401:33">&amp;</operator><name pos:start="401:34" pos:end="401:51"><name pos:start="401:34" pos:end="401:39">config</name><operator pos:start="401:40" pos:end="401:41">-&gt;</operator><name pos:start="401:42" pos:end="401:51">video_conf</name></name></expr></argument>, <argument pos:start="401:54" pos:end="401:72"><expr pos:start="401:54" pos:end="401:72"><literal type="string" pos:start="401:54" pos:end="401:72">"VideoFrameRateNum"</literal></expr></argument>, <argument pos:start="401:75" pos:end="401:88"><expr pos:start="401:75" pos:end="401:88"><name pos:start="401:75" pos:end="401:88"><name pos:start="401:75" pos:end="401:84">frame_rate</name><operator pos:start="401:85" pos:end="401:85">.</operator><name pos:start="401:86" pos:end="401:88">num</name></name></expr></argument>, <argument pos:start="401:91" pos:end="401:91"><expr pos:start="401:91" pos:end="401:91"><literal type="number" pos:start="401:91" pos:end="401:91">0</literal></expr></argument>)</argument_list></call> <operator pos:start="401:94" pos:end="401:94">&lt;</operator> <literal type="number" pos:start="401:96" pos:end="401:96">0</literal> <operator pos:start="401:98" pos:end="401:99">||</operator>

                <call pos:start="403:17" pos:end="403:92"><name pos:start="403:17" pos:end="403:31">av_dict_set_int</name><argument_list pos:start="403:32" pos:end="403:92">(<argument pos:start="403:33" pos:end="403:51"><expr pos:start="403:33" pos:end="403:51"><operator pos:start="403:33" pos:end="403:33">&amp;</operator><name pos:start="403:34" pos:end="403:51"><name pos:start="403:34" pos:end="403:39">config</name><operator pos:start="403:40" pos:end="403:41">-&gt;</operator><name pos:start="403:42" pos:end="403:51">video_conf</name></name></expr></argument>, <argument pos:start="403:54" pos:end="403:72"><expr pos:start="403:54" pos:end="403:72"><literal type="string" pos:start="403:54" pos:end="403:72">"VideoFrameRateDen"</literal></expr></argument>, <argument pos:start="403:75" pos:end="403:88"><expr pos:start="403:75" pos:end="403:88"><name pos:start="403:75" pos:end="403:88"><name pos:start="403:75" pos:end="403:84">frame_rate</name><operator pos:start="403:85" pos:end="403:85">.</operator><name pos:start="403:86" pos:end="403:88">den</name></name></expr></argument>, <argument pos:start="403:91" pos:end="403:91"><expr pos:start="403:91" pos:end="403:91"><literal type="number" pos:start="403:91" pos:end="403:91">0</literal></expr></argument>)</argument_list></call> <operator pos:start="403:94" pos:end="403:94">&lt;</operator> <literal type="number" pos:start="403:96" pos:end="403:96">0</literal></expr>)</condition><block type="pseudo" pos:start="405:17" pos:end="405:27"><block_content pos:start="405:17" pos:end="405:27">

                <goto pos:start="405:17" pos:end="405:27">goto <name pos:start="405:22" pos:end="405:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="409:7" pos:end="425:5">else if <condition pos:start="409:15" pos:end="409:50">(<expr pos:start="409:16" pos:end="409:49"><operator pos:start="409:16" pos:end="409:16">!</operator><call pos:start="409:17" pos:end="409:49"><name pos:start="409:17" pos:end="409:29">av_strcasecmp</name><argument_list pos:start="409:30" pos:end="409:49">(<argument pos:start="409:31" pos:end="409:33"><expr pos:start="409:31" pos:end="409:33"><name pos:start="409:31" pos:end="409:33">cmd</name></expr></argument>, <argument pos:start="409:36" pos:end="409:48"><expr pos:start="409:36" pos:end="409:48"><literal type="string" pos:start="409:36" pos:end="409:48">"PixelFormat"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="409:52" pos:end="425:5">{<block_content pos:start="411:9" pos:end="423:23">

        <decl_stmt pos:start="411:9" pos:end="411:35"><decl pos:start="411:9" pos:end="411:34"><type pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:26"><name pos:start="411:9" pos:end="411:12">enum</name> <name pos:start="411:14" pos:end="411:26">AVPixelFormat</name></name></type> <name pos:start="411:28" pos:end="411:34">pix_fmt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="413:9" pos:end="413:46"><expr pos:start="413:9" pos:end="413:45"><call pos:start="413:9" pos:end="413:45"><name pos:start="413:9" pos:end="413:24">ffserver_get_arg</name><argument_list pos:start="413:25" pos:end="413:45">(<argument pos:start="413:26" pos:end="413:28"><expr pos:start="413:26" pos:end="413:28"><name pos:start="413:26" pos:end="413:28">arg</name></expr></argument>, <argument pos:start="413:31" pos:end="413:41"><expr pos:start="413:31" pos:end="413:41"><sizeof pos:start="413:31" pos:end="413:41">sizeof<argument_list pos:start="413:37" pos:end="413:41">(<argument pos:start="413:38" pos:end="413:40"><expr pos:start="413:38" pos:end="413:40"><name pos:start="413:38" pos:end="413:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="413:44" pos:end="413:44"><expr pos:start="413:44" pos:end="413:44"><name pos:start="413:44" pos:end="413:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="415:9" pos:end="415:38"><expr pos:start="415:9" pos:end="415:37"><name pos:start="415:9" pos:end="415:15">pix_fmt</name> <operator pos:start="415:17" pos:end="415:17">=</operator> <call pos:start="415:19" pos:end="415:37"><name pos:start="415:19" pos:end="415:32">av_get_pix_fmt</name><argument_list pos:start="415:33" pos:end="415:37">(<argument pos:start="415:34" pos:end="415:36"><expr pos:start="415:34" pos:end="415:36"><name pos:start="415:34" pos:end="415:36">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="417:9" pos:end="419:53"><if pos:start="417:9" pos:end="419:53">if <condition pos:start="417:12" pos:end="417:39">(<expr pos:start="417:13" pos:end="417:38"><name pos:start="417:13" pos:end="417:19">pix_fmt</name> <operator pos:start="417:21" pos:end="417:22">==</operator> <name pos:start="417:24" pos:end="417:38">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="419:13" pos:end="419:53"><block_content pos:start="419:13" pos:end="419:53">

            <expr_stmt pos:start="419:13" pos:end="419:53"><expr pos:start="419:13" pos:end="419:52"><call pos:start="419:13" pos:end="419:52"><name pos:start="419:13" pos:end="419:17">ERROR</name><argument_list pos:start="419:18" pos:end="419:52">(<argument pos:start="419:19" pos:end="419:46"><expr pos:start="419:19" pos:end="419:46"><literal type="string" pos:start="419:19" pos:end="419:46">"Unknown pixel format: %s\n"</literal></expr></argument>, <argument pos:start="419:49" pos:end="419:51"><expr pos:start="419:49" pos:end="419:51"><name pos:start="419:49" pos:end="419:51">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="421:9" pos:end="423:23"><if pos:start="421:9" pos:end="423:23">if <condition pos:start="421:12" pos:end="421:70">(<expr pos:start="421:13" pos:end="421:69"><call pos:start="421:13" pos:end="421:65"><name pos:start="421:13" pos:end="421:27">av_dict_set_int</name><argument_list pos:start="421:28" pos:end="421:65">(<argument pos:start="421:29" pos:end="421:47"><expr pos:start="421:29" pos:end="421:47"><operator pos:start="421:29" pos:end="421:29">&amp;</operator><name pos:start="421:30" pos:end="421:47"><name pos:start="421:30" pos:end="421:35">config</name><operator pos:start="421:36" pos:end="421:37">-&gt;</operator><name pos:start="421:38" pos:end="421:47">video_conf</name></name></expr></argument>, <argument pos:start="421:50" pos:end="421:52"><expr pos:start="421:50" pos:end="421:52"><name pos:start="421:50" pos:end="421:52">cmd</name></expr></argument>, <argument pos:start="421:55" pos:end="421:61"><expr pos:start="421:55" pos:end="421:61"><name pos:start="421:55" pos:end="421:61">pix_fmt</name></expr></argument>, <argument pos:start="421:64" pos:end="421:64"><expr pos:start="421:64" pos:end="421:64"><literal type="number" pos:start="421:64" pos:end="421:64">0</literal></expr></argument>)</argument_list></call> <operator pos:start="421:67" pos:end="421:67">&lt;</operator> <literal type="number" pos:start="421:69" pos:end="421:69">0</literal></expr>)</condition><block type="pseudo" pos:start="423:13" pos:end="423:23"><block_content pos:start="423:13" pos:end="423:23">

            <goto pos:start="423:13" pos:end="423:23">goto <name pos:start="423:18" pos:end="423:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="425:7" pos:end="437:5">else if <condition pos:start="425:15" pos:end="425:51">(<expr pos:start="425:16" pos:end="425:50"><operator pos:start="425:16" pos:end="425:16">!</operator><call pos:start="425:17" pos:end="425:50"><name pos:start="425:17" pos:end="425:29">av_strcasecmp</name><argument_list pos:start="425:30" pos:end="425:50">(<argument pos:start="425:31" pos:end="425:33"><expr pos:start="425:31" pos:end="425:33"><name pos:start="425:31" pos:end="425:33">cmd</name></expr></argument>, <argument pos:start="425:36" pos:end="425:49"><expr pos:start="425:36" pos:end="425:49"><literal type="string" pos:start="425:36" pos:end="425:49">"VideoGopSize"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="425:53" pos:end="437:5">{<block_content pos:start="427:9" pos:end="435:23">

        <expr_stmt pos:start="427:9" pos:end="427:46"><expr pos:start="427:9" pos:end="427:45"><call pos:start="427:9" pos:end="427:45"><name pos:start="427:9" pos:end="427:24">ffserver_get_arg</name><argument_list pos:start="427:25" pos:end="427:45">(<argument pos:start="427:26" pos:end="427:28"><expr pos:start="427:26" pos:end="427:28"><name pos:start="427:26" pos:end="427:28">arg</name></expr></argument>, <argument pos:start="427:31" pos:end="427:41"><expr pos:start="427:31" pos:end="427:41"><sizeof pos:start="427:31" pos:end="427:41">sizeof<argument_list pos:start="427:37" pos:end="427:41">(<argument pos:start="427:38" pos:end="427:40"><expr pos:start="427:38" pos:end="427:40"><name pos:start="427:38" pos:end="427:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="427:44" pos:end="427:44"><expr pos:start="427:44" pos:end="427:44"><name pos:start="427:44" pos:end="427:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="431:44"><expr pos:start="429:9" pos:end="431:43"><call pos:start="429:9" pos:end="431:43"><name pos:start="429:9" pos:end="429:30">ffserver_set_int_param</name><argument_list pos:start="429:31" pos:end="431:43">(<argument pos:start="429:32" pos:end="429:35"><expr pos:start="429:32" pos:end="429:35"><name pos:start="429:32" pos:end="429:35">NULL</name></expr></argument>, <argument pos:start="429:38" pos:end="429:40"><expr pos:start="429:38" pos:end="429:40"><name pos:start="429:38" pos:end="429:40">arg</name></expr></argument>, <argument pos:start="429:43" pos:end="429:43"><expr pos:start="429:43" pos:end="429:43"><literal type="number" pos:start="429:43" pos:end="429:43">0</literal></expr></argument>, <argument pos:start="429:46" pos:end="429:52"><expr pos:start="429:46" pos:end="429:52"><name pos:start="429:46" pos:end="429:52">INT_MIN</name></expr></argument>, <argument pos:start="429:55" pos:end="429:61"><expr pos:start="429:55" pos:end="429:61"><name pos:start="429:55" pos:end="429:61">INT_MAX</name></expr></argument>, <argument pos:start="429:64" pos:end="429:69"><expr pos:start="429:64" pos:end="429:69"><name pos:start="429:64" pos:end="429:69">config</name></expr></argument>, <argument pos:start="429:72" pos:end="429:79"><expr pos:start="429:72" pos:end="429:79"><name pos:start="429:72" pos:end="429:79">line_num</name></expr></argument>,

                <argument pos:start="431:17" pos:end="431:32"><expr pos:start="431:17" pos:end="431:32"><literal type="string" pos:start="431:17" pos:end="431:32">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="431:35" pos:end="431:37"><expr pos:start="431:35" pos:end="431:37"><name pos:start="431:35" pos:end="431:37">cmd</name></expr></argument>, <argument pos:start="431:40" pos:end="431:42"><expr pos:start="431:40" pos:end="431:42"><name pos:start="431:40" pos:end="431:42">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="433:9" pos:end="435:23"><if pos:start="433:9" pos:end="435:23">if <condition pos:start="433:12" pos:end="433:62">(<expr pos:start="433:13" pos:end="433:61"><call pos:start="433:13" pos:end="433:57"><name pos:start="433:13" pos:end="433:23">av_dict_set</name><argument_list pos:start="433:24" pos:end="433:57">(<argument pos:start="433:25" pos:end="433:43"><expr pos:start="433:25" pos:end="433:43"><operator pos:start="433:25" pos:end="433:25">&amp;</operator><name pos:start="433:26" pos:end="433:43"><name pos:start="433:26" pos:end="433:31">config</name><operator pos:start="433:32" pos:end="433:33">-&gt;</operator><name pos:start="433:34" pos:end="433:43">video_conf</name></name></expr></argument>, <argument pos:start="433:46" pos:end="433:48"><expr pos:start="433:46" pos:end="433:48"><name pos:start="433:46" pos:end="433:48">cmd</name></expr></argument>, <argument pos:start="433:51" pos:end="433:53"><expr pos:start="433:51" pos:end="433:53"><name pos:start="433:51" pos:end="433:53">arg</name></expr></argument>, <argument pos:start="433:56" pos:end="433:56"><expr pos:start="433:56" pos:end="433:56"><literal type="number" pos:start="433:56" pos:end="433:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="433:59" pos:end="433:59">&lt;</operator> <literal type="number" pos:start="433:61" pos:end="433:61">0</literal></expr>)</condition><block type="pseudo" pos:start="435:13" pos:end="435:23"><block_content pos:start="435:13" pos:end="435:23">

            <goto pos:start="435:13" pos:end="435:23">goto <name pos:start="435:18" pos:end="435:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="437:7" pos:end="443:5">else if <condition pos:start="437:15" pos:end="437:53">(<expr pos:start="437:16" pos:end="437:52"><operator pos:start="437:16" pos:end="437:16">!</operator><call pos:start="437:17" pos:end="437:52"><name pos:start="437:17" pos:end="437:29">av_strcasecmp</name><argument_list pos:start="437:30" pos:end="437:52">(<argument pos:start="437:31" pos:end="437:33"><expr pos:start="437:31" pos:end="437:33"><name pos:start="437:31" pos:end="437:33">cmd</name></expr></argument>, <argument pos:start="437:36" pos:end="437:51"><expr pos:start="437:36" pos:end="437:51"><literal type="string" pos:start="437:36" pos:end="437:51">"VideoIntraOnly"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="437:55" pos:end="443:5">{<block_content pos:start="439:9" pos:end="441:23">

        <if_stmt pos:start="439:9" pos:end="441:23"><if pos:start="439:9" pos:end="441:23">if <condition pos:start="439:12" pos:end="439:62">(<expr pos:start="439:13" pos:end="439:61"><call pos:start="439:13" pos:end="439:57"><name pos:start="439:13" pos:end="439:23">av_dict_set</name><argument_list pos:start="439:24" pos:end="439:57">(<argument pos:start="439:25" pos:end="439:43"><expr pos:start="439:25" pos:end="439:43"><operator pos:start="439:25" pos:end="439:25">&amp;</operator><name pos:start="439:26" pos:end="439:43"><name pos:start="439:26" pos:end="439:31">config</name><operator pos:start="439:32" pos:end="439:33">-&gt;</operator><name pos:start="439:34" pos:end="439:43">video_conf</name></name></expr></argument>, <argument pos:start="439:46" pos:end="439:48"><expr pos:start="439:46" pos:end="439:48"><name pos:start="439:46" pos:end="439:48">cmd</name></expr></argument>, <argument pos:start="439:51" pos:end="439:53"><expr pos:start="439:51" pos:end="439:53"><literal type="string" pos:start="439:51" pos:end="439:53">"1"</literal></expr></argument>, <argument pos:start="439:56" pos:end="439:56"><expr pos:start="439:56" pos:end="439:56"><literal type="number" pos:start="439:56" pos:end="439:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="439:59" pos:end="439:59">&lt;</operator> <literal type="number" pos:start="439:61" pos:end="439:61">0</literal></expr>)</condition><block type="pseudo" pos:start="441:13" pos:end="441:23"><block_content pos:start="441:13" pos:end="441:23">

            <goto pos:start="441:13" pos:end="441:23">goto <name pos:start="441:18" pos:end="441:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="443:7" pos:end="449:5">else if <condition pos:start="443:15" pos:end="443:55">(<expr pos:start="443:16" pos:end="443:54"><operator pos:start="443:16" pos:end="443:16">!</operator><call pos:start="443:17" pos:end="443:54"><name pos:start="443:17" pos:end="443:29">av_strcasecmp</name><argument_list pos:start="443:30" pos:end="443:54">(<argument pos:start="443:31" pos:end="443:33"><expr pos:start="443:31" pos:end="443:33"><name pos:start="443:31" pos:end="443:33">cmd</name></expr></argument>, <argument pos:start="443:36" pos:end="443:53"><expr pos:start="443:36" pos:end="443:53"><literal type="string" pos:start="443:36" pos:end="443:53">"VideoHighQuality"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="443:57" pos:end="449:5">{<block_content pos:start="445:9" pos:end="447:23">

        <if_stmt pos:start="445:9" pos:end="447:23"><if pos:start="445:9" pos:end="447:23">if <condition pos:start="445:12" pos:end="445:61">(<expr pos:start="445:13" pos:end="445:60"><call pos:start="445:13" pos:end="445:56"><name pos:start="445:13" pos:end="445:23">av_dict_set</name><argument_list pos:start="445:24" pos:end="445:56">(<argument pos:start="445:25" pos:end="445:43"><expr pos:start="445:25" pos:end="445:43"><operator pos:start="445:25" pos:end="445:25">&amp;</operator><name pos:start="445:26" pos:end="445:43"><name pos:start="445:26" pos:end="445:31">config</name><operator pos:start="445:32" pos:end="445:33">-&gt;</operator><name pos:start="445:34" pos:end="445:43">video_conf</name></name></expr></argument>, <argument pos:start="445:46" pos:end="445:48"><expr pos:start="445:46" pos:end="445:48"><name pos:start="445:46" pos:end="445:48">cmd</name></expr></argument>, <argument pos:start="445:51" pos:end="445:52"><expr pos:start="445:51" pos:end="445:52"><literal type="string" pos:start="445:51" pos:end="445:52">""</literal></expr></argument>, <argument pos:start="445:55" pos:end="445:55"><expr pos:start="445:55" pos:end="445:55"><literal type="number" pos:start="445:55" pos:end="445:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="445:58" pos:end="445:58">&lt;</operator> <literal type="number" pos:start="445:60" pos:end="445:60">0</literal></expr>)</condition><block type="pseudo" pos:start="447:13" pos:end="447:23"><block_content pos:start="447:13" pos:end="447:23">

            <goto pos:start="447:13" pos:end="447:23">goto <name pos:start="447:18" pos:end="447:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="449:7" pos:end="455:5">else if <condition pos:start="449:15" pos:end="449:57">(<expr pos:start="449:16" pos:end="449:56"><operator pos:start="449:16" pos:end="449:16">!</operator><call pos:start="449:17" pos:end="449:56"><name pos:start="449:17" pos:end="449:29">av_strcasecmp</name><argument_list pos:start="449:30" pos:end="449:56">(<argument pos:start="449:31" pos:end="449:33"><expr pos:start="449:31" pos:end="449:33"><name pos:start="449:31" pos:end="449:33">cmd</name></expr></argument>, <argument pos:start="449:36" pos:end="449:55"><expr pos:start="449:36" pos:end="449:55"><literal type="string" pos:start="449:36" pos:end="449:55">"Video4MotionVector"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="449:59" pos:end="455:5">{<block_content pos:start="451:9" pos:end="453:23">

        <if_stmt pos:start="451:9" pos:end="453:23"><if pos:start="451:9" pos:end="453:23">if <condition pos:start="451:12" pos:end="451:61">(<expr pos:start="451:13" pos:end="451:60"><call pos:start="451:13" pos:end="451:56"><name pos:start="451:13" pos:end="451:23">av_dict_set</name><argument_list pos:start="451:24" pos:end="451:56">(<argument pos:start="451:25" pos:end="451:43"><expr pos:start="451:25" pos:end="451:43"><operator pos:start="451:25" pos:end="451:25">&amp;</operator><name pos:start="451:26" pos:end="451:43"><name pos:start="451:26" pos:end="451:31">config</name><operator pos:start="451:32" pos:end="451:33">-&gt;</operator><name pos:start="451:34" pos:end="451:43">video_conf</name></name></expr></argument>, <argument pos:start="451:46" pos:end="451:48"><expr pos:start="451:46" pos:end="451:48"><name pos:start="451:46" pos:end="451:48">cmd</name></expr></argument>, <argument pos:start="451:51" pos:end="451:52"><expr pos:start="451:51" pos:end="451:52"><literal type="string" pos:start="451:51" pos:end="451:52">""</literal></expr></argument>, <argument pos:start="451:55" pos:end="451:55"><expr pos:start="451:55" pos:end="451:55"><literal type="number" pos:start="451:55" pos:end="451:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="451:58" pos:end="451:58">&lt;</operator> <literal type="number" pos:start="451:60" pos:end="451:60">0</literal></expr>)</condition><block type="pseudo" pos:start="453:13" pos:end="453:23"><block_content pos:start="453:13" pos:end="453:23">

            <goto pos:start="453:13" pos:end="453:23">goto <name pos:start="453:18" pos:end="453:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="455:7" pos:end="481:5">else if <condition pos:start="455:15" pos:end="457:52">(<expr pos:start="455:16" pos:end="457:51"><operator pos:start="455:16" pos:end="455:16">!</operator><call pos:start="455:17" pos:end="455:51"><name pos:start="455:17" pos:end="455:29">av_strcasecmp</name><argument_list pos:start="455:30" pos:end="455:51">(<argument pos:start="455:31" pos:end="455:33"><expr pos:start="455:31" pos:end="455:33"><name pos:start="455:31" pos:end="455:33">cmd</name></expr></argument>, <argument pos:start="455:36" pos:end="455:50"><expr pos:start="455:36" pos:end="455:50"><literal type="string" pos:start="455:36" pos:end="455:50">"AVOptionVideo"</literal></expr></argument>)</argument_list></call> <operator pos:start="455:53" pos:end="455:54">||</operator>

               <operator pos:start="457:16" pos:end="457:16">!</operator><call pos:start="457:17" pos:end="457:51"><name pos:start="457:17" pos:end="457:29">av_strcasecmp</name><argument_list pos:start="457:30" pos:end="457:51">(<argument pos:start="457:31" pos:end="457:33"><expr pos:start="457:31" pos:end="457:33"><name pos:start="457:31" pos:end="457:33">cmd</name></expr></argument>, <argument pos:start="457:36" pos:end="457:50"><expr pos:start="457:36" pos:end="457:50"><literal type="string" pos:start="457:36" pos:end="457:50">"AVOptionAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="457:54" pos:end="481:5">{<block_content pos:start="459:9" pos:end="479:23">

        <decl_stmt pos:start="459:9" pos:end="459:16"><decl pos:start="459:9" pos:end="459:15"><type pos:start="459:9" pos:end="459:11"><name pos:start="459:9" pos:end="459:11">int</name></type> <name pos:start="459:13" pos:end="459:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="461:9" pos:end="461:46"><expr pos:start="461:9" pos:end="461:45"><call pos:start="461:9" pos:end="461:45"><name pos:start="461:9" pos:end="461:24">ffserver_get_arg</name><argument_list pos:start="461:25" pos:end="461:45">(<argument pos:start="461:26" pos:end="461:28"><expr pos:start="461:26" pos:end="461:28"><name pos:start="461:26" pos:end="461:28">arg</name></expr></argument>, <argument pos:start="461:31" pos:end="461:41"><expr pos:start="461:31" pos:end="461:41"><sizeof pos:start="461:31" pos:end="461:41">sizeof<argument_list pos:start="461:37" pos:end="461:41">(<argument pos:start="461:38" pos:end="461:40"><expr pos:start="461:38" pos:end="461:40"><name pos:start="461:38" pos:end="461:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="461:44" pos:end="461:44"><expr pos:start="461:44" pos:end="461:44"><name pos:start="461:44" pos:end="461:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:48"><expr pos:start="463:9" pos:end="463:47"><call pos:start="463:9" pos:end="463:47"><name pos:start="463:9" pos:end="463:24">ffserver_get_arg</name><argument_list pos:start="463:25" pos:end="463:47">(<argument pos:start="463:26" pos:end="463:29"><expr pos:start="463:26" pos:end="463:29"><name pos:start="463:26" pos:end="463:29">arg2</name></expr></argument>, <argument pos:start="463:32" pos:end="463:43"><expr pos:start="463:32" pos:end="463:43"><sizeof pos:start="463:32" pos:end="463:43">sizeof<argument_list pos:start="463:38" pos:end="463:43">(<argument pos:start="463:39" pos:end="463:42"><expr pos:start="463:39" pos:end="463:42"><name pos:start="463:39" pos:end="463:42">arg2</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="463:46" pos:end="463:46"><expr pos:start="463:46" pos:end="463:46"><name pos:start="463:46" pos:end="463:46">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="465:9" pos:end="475:84"><if pos:start="465:9" pos:end="469:84">if <condition pos:start="465:12" pos:end="465:49">(<expr pos:start="465:13" pos:end="465:48"><operator pos:start="465:13" pos:end="465:13">!</operator><call pos:start="465:14" pos:end="465:48"><name pos:start="465:14" pos:end="465:26">av_strcasecmp</name><argument_list pos:start="465:27" pos:end="465:48">(<argument pos:start="465:28" pos:end="465:30"><expr pos:start="465:28" pos:end="465:30"><name pos:start="465:28" pos:end="465:30">cmd</name></expr></argument>, <argument pos:start="465:33" pos:end="465:47"><expr pos:start="465:33" pos:end="465:47"><literal type="string" pos:start="465:33" pos:end="465:47">"AVOptionVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="467:13" pos:end="469:84"><block_content pos:start="467:13" pos:end="469:84">

            <expr_stmt pos:start="467:13" pos:end="469:84"><expr pos:start="467:13" pos:end="469:83"><name pos:start="467:13" pos:end="467:15">ret</name> <operator pos:start="467:17" pos:end="467:17">=</operator> <call pos:start="467:19" pos:end="469:83"><name pos:start="467:19" pos:end="467:40">ffserver_save_avoption</name><argument_list pos:start="467:41" pos:end="469:83">(<argument pos:start="467:42" pos:end="467:59"><expr pos:start="467:42" pos:end="467:59"><name pos:start="467:42" pos:end="467:59"><name pos:start="467:42" pos:end="467:47">config</name><operator pos:start="467:48" pos:end="467:49">-&gt;</operator><name pos:start="467:50" pos:end="467:59">dummy_vctx</name></name></expr></argument>, <argument pos:start="467:62" pos:end="467:64"><expr pos:start="467:62" pos:end="467:64"><name pos:start="467:62" pos:end="467:64">arg</name></expr></argument>, <argument pos:start="467:67" pos:end="467:70"><expr pos:start="467:67" pos:end="467:70"><name pos:start="467:67" pos:end="467:70">arg2</name></expr></argument>, <argument pos:start="467:73" pos:end="467:91"><expr pos:start="467:73" pos:end="467:91"><operator pos:start="467:73" pos:end="467:73">&amp;</operator><name pos:start="467:74" pos:end="467:91"><name pos:start="467:74" pos:end="467:79">config</name><operator pos:start="467:80" pos:end="467:81">-&gt;</operator><name pos:start="467:82" pos:end="467:91">video_opts</name></name></expr></argument>,

                                         <argument pos:start="469:42" pos:end="469:64"><expr pos:start="469:42" pos:end="469:64"><name pos:start="469:42" pos:end="469:64">AV_OPT_FLAG_VIDEO_PARAM</name></expr></argument> ,<argument pos:start="469:67" pos:end="469:72"><expr pos:start="469:67" pos:end="469:72"><name pos:start="469:67" pos:end="469:72">config</name></expr></argument>, <argument pos:start="469:75" pos:end="469:82"><expr pos:start="469:75" pos:end="469:82"><name pos:start="469:75" pos:end="469:82">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="471:9" pos:end="475:84">else<block type="pseudo" pos:start="473:13" pos:end="475:84"><block_content pos:start="473:13" pos:end="475:84">

            <expr_stmt pos:start="473:13" pos:end="475:84"><expr pos:start="473:13" pos:end="475:83"><name pos:start="473:13" pos:end="473:15">ret</name> <operator pos:start="473:17" pos:end="473:17">=</operator> <call pos:start="473:19" pos:end="475:83"><name pos:start="473:19" pos:end="473:40">ffserver_save_avoption</name><argument_list pos:start="473:41" pos:end="475:83">(<argument pos:start="473:42" pos:end="473:59"><expr pos:start="473:42" pos:end="473:59"><name pos:start="473:42" pos:end="473:59"><name pos:start="473:42" pos:end="473:47">config</name><operator pos:start="473:48" pos:end="473:49">-&gt;</operator><name pos:start="473:50" pos:end="473:59">dummy_actx</name></name></expr></argument>, <argument pos:start="473:62" pos:end="473:64"><expr pos:start="473:62" pos:end="473:64"><name pos:start="473:62" pos:end="473:64">arg</name></expr></argument>, <argument pos:start="473:67" pos:end="473:70"><expr pos:start="473:67" pos:end="473:70"><name pos:start="473:67" pos:end="473:70">arg2</name></expr></argument>, <argument pos:start="473:73" pos:end="473:91"><expr pos:start="473:73" pos:end="473:91"><operator pos:start="473:73" pos:end="473:73">&amp;</operator><name pos:start="473:74" pos:end="473:91"><name pos:start="473:74" pos:end="473:79">config</name><operator pos:start="473:80" pos:end="473:81">-&gt;</operator><name pos:start="473:82" pos:end="473:91">audio_opts</name></name></expr></argument>,

                                         <argument pos:start="475:42" pos:end="475:64"><expr pos:start="475:42" pos:end="475:64"><name pos:start="475:42" pos:end="475:64">AV_OPT_FLAG_AUDIO_PARAM</name></expr></argument> ,<argument pos:start="475:67" pos:end="475:72"><expr pos:start="475:67" pos:end="475:72"><name pos:start="475:67" pos:end="475:72">config</name></expr></argument>, <argument pos:start="475:75" pos:end="475:82"><expr pos:start="475:75" pos:end="475:82"><name pos:start="475:75" pos:end="475:82">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="477:9" pos:end="479:23"><if pos:start="477:9" pos:end="479:23">if <condition pos:start="477:12" pos:end="477:20">(<expr pos:start="477:13" pos:end="477:19"><name pos:start="477:13" pos:end="477:15">ret</name> <operator pos:start="477:17" pos:end="477:17">&lt;</operator> <literal type="number" pos:start="477:19" pos:end="477:19">0</literal></expr>)</condition><block type="pseudo" pos:start="479:13" pos:end="479:23"><block_content pos:start="479:13" pos:end="479:23">

            <goto pos:start="479:13" pos:end="479:23">goto <name pos:start="479:18" pos:end="479:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="481:7" pos:end="495:5">else if <condition pos:start="481:15" pos:end="483:52">(<expr pos:start="481:16" pos:end="483:51"><operator pos:start="481:16" pos:end="481:16">!</operator><call pos:start="481:17" pos:end="481:51"><name pos:start="481:17" pos:end="481:29">av_strcasecmp</name><argument_list pos:start="481:30" pos:end="481:51">(<argument pos:start="481:31" pos:end="481:33"><expr pos:start="481:31" pos:end="481:33"><name pos:start="481:31" pos:end="481:33">cmd</name></expr></argument>, <argument pos:start="481:36" pos:end="481:50"><expr pos:start="481:36" pos:end="481:50"><literal type="string" pos:start="481:36" pos:end="481:50">"AVPresetVideo"</literal></expr></argument>)</argument_list></call> <operator pos:start="481:53" pos:end="481:54">||</operator>

               <operator pos:start="483:16" pos:end="483:16">!</operator><call pos:start="483:17" pos:end="483:51"><name pos:start="483:17" pos:end="483:29">av_strcasecmp</name><argument_list pos:start="483:30" pos:end="483:51">(<argument pos:start="483:31" pos:end="483:33"><expr pos:start="483:31" pos:end="483:33"><name pos:start="483:31" pos:end="483:33">cmd</name></expr></argument>, <argument pos:start="483:36" pos:end="483:50"><expr pos:start="483:36" pos:end="483:50"><literal type="string" pos:start="483:36" pos:end="483:50">"AVPresetAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="483:54" pos:end="495:5">{<block_content pos:start="485:9" pos:end="493:75">

        <expr_stmt pos:start="485:9" pos:end="485:46"><expr pos:start="485:9" pos:end="485:45"><call pos:start="485:9" pos:end="485:45"><name pos:start="485:9" pos:end="485:24">ffserver_get_arg</name><argument_list pos:start="485:25" pos:end="485:45">(<argument pos:start="485:26" pos:end="485:28"><expr pos:start="485:26" pos:end="485:28"><name pos:start="485:26" pos:end="485:28">arg</name></expr></argument>, <argument pos:start="485:31" pos:end="485:41"><expr pos:start="485:31" pos:end="485:41"><sizeof pos:start="485:31" pos:end="485:41">sizeof<argument_list pos:start="485:37" pos:end="485:41">(<argument pos:start="485:38" pos:end="485:40"><expr pos:start="485:38" pos:end="485:40"><name pos:start="485:38" pos:end="485:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="485:44" pos:end="485:44"><expr pos:start="485:44" pos:end="485:44"><name pos:start="485:44" pos:end="485:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="487:9" pos:end="493:75"><if pos:start="487:9" pos:end="489:75">if <condition pos:start="487:12" pos:end="487:49">(<expr pos:start="487:13" pos:end="487:48"><operator pos:start="487:13" pos:end="487:13">!</operator><call pos:start="487:14" pos:end="487:48"><name pos:start="487:14" pos:end="487:26">av_strcasecmp</name><argument_list pos:start="487:27" pos:end="487:48">(<argument pos:start="487:28" pos:end="487:30"><expr pos:start="487:28" pos:end="487:30"><name pos:start="487:28" pos:end="487:30">cmd</name></expr></argument>, <argument pos:start="487:33" pos:end="487:47"><expr pos:start="487:33" pos:end="487:47"><literal type="string" pos:start="487:33" pos:end="487:47">"AVPresetVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="489:13" pos:end="489:75"><block_content pos:start="489:13" pos:end="489:75">

            <expr_stmt pos:start="489:13" pos:end="489:75"><expr pos:start="489:13" pos:end="489:74"><call pos:start="489:13" pos:end="489:74"><name pos:start="489:13" pos:end="489:31">ffserver_opt_preset</name><argument_list pos:start="489:32" pos:end="489:74">(<argument pos:start="489:33" pos:end="489:35"><expr pos:start="489:33" pos:end="489:35"><name pos:start="489:33" pos:end="489:35">arg</name></expr></argument>, <argument pos:start="489:38" pos:end="489:55"><expr pos:start="489:38" pos:end="489:55"><name pos:start="489:38" pos:end="489:55"><name pos:start="489:38" pos:end="489:43">config</name><operator pos:start="489:44" pos:end="489:45">-&gt;</operator><name pos:start="489:46" pos:end="489:55">dummy_vctx</name></name></expr></argument>, <argument pos:start="489:58" pos:end="489:63"><expr pos:start="489:58" pos:end="489:63"><name pos:start="489:58" pos:end="489:63">config</name></expr></argument>, <argument pos:start="489:66" pos:end="489:73"><expr pos:start="489:66" pos:end="489:73"><name pos:start="489:66" pos:end="489:73">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="491:9" pos:end="493:75">else<block type="pseudo" pos:start="493:13" pos:end="493:75"><block_content pos:start="493:13" pos:end="493:75">

            <expr_stmt pos:start="493:13" pos:end="493:75"><expr pos:start="493:13" pos:end="493:74"><call pos:start="493:13" pos:end="493:74"><name pos:start="493:13" pos:end="493:31">ffserver_opt_preset</name><argument_list pos:start="493:32" pos:end="493:74">(<argument pos:start="493:33" pos:end="493:35"><expr pos:start="493:33" pos:end="493:35"><name pos:start="493:33" pos:end="493:35">arg</name></expr></argument>, <argument pos:start="493:38" pos:end="493:55"><expr pos:start="493:38" pos:end="493:55"><name pos:start="493:38" pos:end="493:55"><name pos:start="493:38" pos:end="493:43">config</name><operator pos:start="493:44" pos:end="493:45">-&gt;</operator><name pos:start="493:46" pos:end="493:55">dummy_actx</name></name></expr></argument>, <argument pos:start="493:58" pos:end="493:63"><expr pos:start="493:58" pos:end="493:63"><name pos:start="493:58" pos:end="493:63">config</name></expr></argument>, <argument pos:start="493:66" pos:end="493:73"><expr pos:start="493:66" pos:end="493:73"><name pos:start="493:66" pos:end="493:73">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="495:7" pos:end="507:5">else if <condition pos:start="495:15" pos:end="495:47">(<expr pos:start="495:16" pos:end="495:46"><operator pos:start="495:16" pos:end="495:16">!</operator><call pos:start="495:17" pos:end="495:46"><name pos:start="495:17" pos:end="495:29">av_strcasecmp</name><argument_list pos:start="495:30" pos:end="495:46">(<argument pos:start="495:31" pos:end="495:33"><expr pos:start="495:31" pos:end="495:33"><name pos:start="495:31" pos:end="495:33">cmd</name></expr></argument>, <argument pos:start="495:36" pos:end="495:45"><expr pos:start="495:36" pos:end="495:45"><literal type="string" pos:start="495:36" pos:end="495:45">"VideoTag"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="495:49" pos:end="507:5">{<block_content pos:start="497:9" pos:end="505:9">

        <expr_stmt pos:start="497:9" pos:end="497:46"><expr pos:start="497:9" pos:end="497:45"><call pos:start="497:9" pos:end="497:45"><name pos:start="497:9" pos:end="497:24">ffserver_get_arg</name><argument_list pos:start="497:25" pos:end="497:45">(<argument pos:start="497:26" pos:end="497:28"><expr pos:start="497:26" pos:end="497:28"><name pos:start="497:26" pos:end="497:28">arg</name></expr></argument>, <argument pos:start="497:31" pos:end="497:41"><expr pos:start="497:31" pos:end="497:41"><sizeof pos:start="497:31" pos:end="497:41">sizeof<argument_list pos:start="497:37" pos:end="497:41">(<argument pos:start="497:38" pos:end="497:40"><expr pos:start="497:38" pos:end="497:40"><name pos:start="497:38" pos:end="497:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="497:44" pos:end="497:44"><expr pos:start="497:44" pos:end="497:44"><name pos:start="497:44" pos:end="497:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="499:9" pos:end="505:9"><if pos:start="499:9" pos:end="505:9">if <condition pos:start="499:12" pos:end="499:29">(<expr pos:start="499:13" pos:end="499:28"><call pos:start="499:13" pos:end="499:23"><name pos:start="499:13" pos:end="499:18">strlen</name><argument_list pos:start="499:19" pos:end="499:23">(<argument pos:start="499:20" pos:end="499:22"><expr pos:start="499:20" pos:end="499:22"><name pos:start="499:20" pos:end="499:22">arg</name></expr></argument>)</argument_list></call> <operator pos:start="499:25" pos:end="499:26">==</operator> <literal type="number" pos:start="499:28" pos:end="499:28">4</literal></expr>)</condition> <block pos:start="499:31" pos:end="505:9">{<block_content pos:start="501:13" pos:end="503:27">

            <if_stmt pos:start="501:13" pos:end="503:27"><if pos:start="501:13" pos:end="503:27">if <condition pos:start="501:16" pos:end="501:75">(<expr pos:start="501:17" pos:end="501:74"><call pos:start="501:17" pos:end="501:70"><name pos:start="501:17" pos:end="501:27">av_dict_set</name><argument_list pos:start="501:28" pos:end="501:70">(<argument pos:start="501:29" pos:end="501:47"><expr pos:start="501:29" pos:end="501:47"><operator pos:start="501:29" pos:end="501:29">&amp;</operator><name pos:start="501:30" pos:end="501:47"><name pos:start="501:30" pos:end="501:35">config</name><operator pos:start="501:36" pos:end="501:37">-&gt;</operator><name pos:start="501:38" pos:end="501:47">video_conf</name></name></expr></argument>, <argument pos:start="501:50" pos:end="501:59"><expr pos:start="501:50" pos:end="501:59"><literal type="string" pos:start="501:50" pos:end="501:59">"VideoTag"</literal></expr></argument>, <argument pos:start="501:62" pos:end="501:66"><expr pos:start="501:62" pos:end="501:66"><literal type="string" pos:start="501:62" pos:end="501:66">"arg"</literal></expr></argument>, <argument pos:start="501:69" pos:end="501:69"><expr pos:start="501:69" pos:end="501:69"><literal type="number" pos:start="501:69" pos:end="501:69">0</literal></expr></argument>)</argument_list></call> <operator pos:start="501:72" pos:end="501:72">&lt;</operator> <literal type="number" pos:start="501:74" pos:end="501:74">0</literal></expr>)</condition><block type="pseudo" pos:start="503:17" pos:end="503:27"><block_content pos:start="503:17" pos:end="503:27">

                <goto pos:start="503:17" pos:end="503:27">goto <name pos:start="503:22" pos:end="503:26">nomem</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="507:7" pos:end="513:5">else if <condition pos:start="507:15" pos:end="507:47">(<expr pos:start="507:16" pos:end="507:46"><operator pos:start="507:16" pos:end="507:16">!</operator><call pos:start="507:17" pos:end="507:46"><name pos:start="507:17" pos:end="507:29">av_strcasecmp</name><argument_list pos:start="507:30" pos:end="507:46">(<argument pos:start="507:31" pos:end="507:33"><expr pos:start="507:31" pos:end="507:33"><name pos:start="507:31" pos:end="507:33">cmd</name></expr></argument>, <argument pos:start="507:36" pos:end="507:45"><expr pos:start="507:36" pos:end="507:45"><literal type="string" pos:start="507:36" pos:end="507:45">"BitExact"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="507:49" pos:end="513:5">{<block_content pos:start="509:9" pos:end="511:23">

        <if_stmt pos:start="509:9" pos:end="511:23"><if pos:start="509:9" pos:end="511:23">if <condition pos:start="509:12" pos:end="509:61">(<expr pos:start="509:13" pos:end="509:60"><call pos:start="509:13" pos:end="509:56"><name pos:start="509:13" pos:end="509:23">av_dict_set</name><argument_list pos:start="509:24" pos:end="509:56">(<argument pos:start="509:25" pos:end="509:43"><expr pos:start="509:25" pos:end="509:43"><operator pos:start="509:25" pos:end="509:25">&amp;</operator><name pos:start="509:26" pos:end="509:43"><name pos:start="509:26" pos:end="509:31">config</name><operator pos:start="509:32" pos:end="509:33">-&gt;</operator><name pos:start="509:34" pos:end="509:43">video_conf</name></name></expr></argument>, <argument pos:start="509:46" pos:end="509:48"><expr pos:start="509:46" pos:end="509:48"><name pos:start="509:46" pos:end="509:48">cmd</name></expr></argument>, <argument pos:start="509:51" pos:end="509:52"><expr pos:start="509:51" pos:end="509:52"><literal type="string" pos:start="509:51" pos:end="509:52">""</literal></expr></argument>, <argument pos:start="509:55" pos:end="509:55"><expr pos:start="509:55" pos:end="509:55"><literal type="number" pos:start="509:55" pos:end="509:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="509:58" pos:end="509:58">&lt;</operator> <literal type="number" pos:start="509:60" pos:end="509:60">0</literal></expr>)</condition><block type="pseudo" pos:start="511:13" pos:end="511:23"><block_content pos:start="511:13" pos:end="511:23">

            <goto pos:start="511:13" pos:end="511:23">goto <name pos:start="511:18" pos:end="511:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="513:7" pos:end="519:5">else if <condition pos:start="513:15" pos:end="513:49">(<expr pos:start="513:16" pos:end="513:48"><operator pos:start="513:16" pos:end="513:16">!</operator><call pos:start="513:17" pos:end="513:48"><name pos:start="513:17" pos:end="513:29">av_strcasecmp</name><argument_list pos:start="513:30" pos:end="513:48">(<argument pos:start="513:31" pos:end="513:33"><expr pos:start="513:31" pos:end="513:33"><name pos:start="513:31" pos:end="513:33">cmd</name></expr></argument>, <argument pos:start="513:36" pos:end="513:47"><expr pos:start="513:36" pos:end="513:47"><literal type="string" pos:start="513:36" pos:end="513:47">"DctFastint"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="513:51" pos:end="519:5">{<block_content pos:start="515:9" pos:end="517:23">

        <if_stmt pos:start="515:9" pos:end="517:23"><if pos:start="515:9" pos:end="517:23">if <condition pos:start="515:12" pos:end="515:61">(<expr pos:start="515:13" pos:end="515:60"><call pos:start="515:13" pos:end="515:56"><name pos:start="515:13" pos:end="515:23">av_dict_set</name><argument_list pos:start="515:24" pos:end="515:56">(<argument pos:start="515:25" pos:end="515:43"><expr pos:start="515:25" pos:end="515:43"><operator pos:start="515:25" pos:end="515:25">&amp;</operator><name pos:start="515:26" pos:end="515:43"><name pos:start="515:26" pos:end="515:31">config</name><operator pos:start="515:32" pos:end="515:33">-&gt;</operator><name pos:start="515:34" pos:end="515:43">video_conf</name></name></expr></argument>, <argument pos:start="515:46" pos:end="515:48"><expr pos:start="515:46" pos:end="515:48"><name pos:start="515:46" pos:end="515:48">cmd</name></expr></argument>, <argument pos:start="515:51" pos:end="515:52"><expr pos:start="515:51" pos:end="515:52"><literal type="string" pos:start="515:51" pos:end="515:52">""</literal></expr></argument>, <argument pos:start="515:55" pos:end="515:55"><expr pos:start="515:55" pos:end="515:55"><literal type="number" pos:start="515:55" pos:end="515:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="515:58" pos:end="515:58">&lt;</operator> <literal type="number" pos:start="515:60" pos:end="515:60">0</literal></expr>)</condition><block type="pseudo" pos:start="517:13" pos:end="517:23"><block_content pos:start="517:13" pos:end="517:23">

            <goto pos:start="517:13" pos:end="517:23">goto <name pos:start="517:18" pos:end="517:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="519:7" pos:end="525:5">else if <condition pos:start="519:15" pos:end="519:49">(<expr pos:start="519:16" pos:end="519:48"><operator pos:start="519:16" pos:end="519:16">!</operator><call pos:start="519:17" pos:end="519:48"><name pos:start="519:17" pos:end="519:29">av_strcasecmp</name><argument_list pos:start="519:30" pos:end="519:48">(<argument pos:start="519:31" pos:end="519:33"><expr pos:start="519:31" pos:end="519:33"><name pos:start="519:31" pos:end="519:33">cmd</name></expr></argument>, <argument pos:start="519:36" pos:end="519:47"><expr pos:start="519:36" pos:end="519:47"><literal type="string" pos:start="519:36" pos:end="519:47">"IdctSimple"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="519:51" pos:end="525:5">{<block_content pos:start="521:9" pos:end="523:23">

        <if_stmt pos:start="521:9" pos:end="523:23"><if pos:start="521:9" pos:end="523:23">if <condition pos:start="521:12" pos:end="521:61">(<expr pos:start="521:13" pos:end="521:60"><call pos:start="521:13" pos:end="521:56"><name pos:start="521:13" pos:end="521:23">av_dict_set</name><argument_list pos:start="521:24" pos:end="521:56">(<argument pos:start="521:25" pos:end="521:43"><expr pos:start="521:25" pos:end="521:43"><operator pos:start="521:25" pos:end="521:25">&amp;</operator><name pos:start="521:26" pos:end="521:43"><name pos:start="521:26" pos:end="521:31">config</name><operator pos:start="521:32" pos:end="521:33">-&gt;</operator><name pos:start="521:34" pos:end="521:43">video_conf</name></name></expr></argument>, <argument pos:start="521:46" pos:end="521:48"><expr pos:start="521:46" pos:end="521:48"><name pos:start="521:46" pos:end="521:48">cmd</name></expr></argument>, <argument pos:start="521:51" pos:end="521:52"><expr pos:start="521:51" pos:end="521:52"><literal type="string" pos:start="521:51" pos:end="521:52">""</literal></expr></argument>, <argument pos:start="521:55" pos:end="521:55"><expr pos:start="521:55" pos:end="521:55"><literal type="number" pos:start="521:55" pos:end="521:55">0</literal></expr></argument>)</argument_list></call> <operator pos:start="521:58" pos:end="521:58">&lt;</operator> <literal type="number" pos:start="521:60" pos:end="521:60">0</literal></expr>)</condition><block type="pseudo" pos:start="523:13" pos:end="523:23"><block_content pos:start="523:13" pos:end="523:23">

            <goto pos:start="523:13" pos:end="523:23">goto <name pos:start="523:18" pos:end="523:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="525:7" pos:end="533:5">else if <condition pos:start="525:15" pos:end="525:45">(<expr pos:start="525:16" pos:end="525:44"><operator pos:start="525:16" pos:end="525:16">!</operator><call pos:start="525:17" pos:end="525:44"><name pos:start="525:17" pos:end="525:29">av_strcasecmp</name><argument_list pos:start="525:30" pos:end="525:44">(<argument pos:start="525:31" pos:end="525:33"><expr pos:start="525:31" pos:end="525:33"><name pos:start="525:31" pos:end="525:33">cmd</name></expr></argument>, <argument pos:start="525:36" pos:end="525:43"><expr pos:start="525:36" pos:end="525:43"><literal type="string" pos:start="525:36" pos:end="525:43">"Qscale"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="525:47" pos:end="533:5">{<block_content pos:start="527:9" pos:end="531:23">

        <expr_stmt pos:start="527:9" pos:end="527:46"><expr pos:start="527:9" pos:end="527:45"><call pos:start="527:9" pos:end="527:45"><name pos:start="527:9" pos:end="527:24">ffserver_get_arg</name><argument_list pos:start="527:25" pos:end="527:45">(<argument pos:start="527:26" pos:end="527:28"><expr pos:start="527:26" pos:end="527:28"><name pos:start="527:26" pos:end="527:28">arg</name></expr></argument>, <argument pos:start="527:31" pos:end="527:41"><expr pos:start="527:31" pos:end="527:41"><sizeof pos:start="527:31" pos:end="527:41">sizeof<argument_list pos:start="527:37" pos:end="527:41">(<argument pos:start="527:38" pos:end="527:40"><expr pos:start="527:38" pos:end="527:40"><name pos:start="527:38" pos:end="527:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="527:44" pos:end="527:44"><expr pos:start="527:44" pos:end="527:44"><name pos:start="527:44" pos:end="527:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="529:9" pos:end="531:23"><if pos:start="529:9" pos:end="531:23">if <condition pos:start="529:12" pos:end="529:62">(<expr pos:start="529:13" pos:end="529:61"><call pos:start="529:13" pos:end="529:57"><name pos:start="529:13" pos:end="529:23">av_dict_set</name><argument_list pos:start="529:24" pos:end="529:57">(<argument pos:start="529:25" pos:end="529:43"><expr pos:start="529:25" pos:end="529:43"><operator pos:start="529:25" pos:end="529:25">&amp;</operator><name pos:start="529:26" pos:end="529:43"><name pos:start="529:26" pos:end="529:31">config</name><operator pos:start="529:32" pos:end="529:33">-&gt;</operator><name pos:start="529:34" pos:end="529:43">video_conf</name></name></expr></argument>, <argument pos:start="529:46" pos:end="529:48"><expr pos:start="529:46" pos:end="529:48"><name pos:start="529:46" pos:end="529:48">cmd</name></expr></argument>, <argument pos:start="529:51" pos:end="529:53"><expr pos:start="529:51" pos:end="529:53"><name pos:start="529:51" pos:end="529:53">arg</name></expr></argument>, <argument pos:start="529:56" pos:end="529:56"><expr pos:start="529:56" pos:end="529:56"><literal type="number" pos:start="529:56" pos:end="529:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="529:59" pos:end="529:59">&lt;</operator> <literal type="number" pos:start="529:61" pos:end="529:61">0</literal></expr>)</condition><block type="pseudo" pos:start="531:13" pos:end="531:23"><block_content pos:start="531:13" pos:end="531:23">

            <goto pos:start="531:13" pos:end="531:23">goto <name pos:start="531:18" pos:end="531:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="533:7" pos:end="545:5">else if <condition pos:start="533:15" pos:end="533:49">(<expr pos:start="533:16" pos:end="533:48"><operator pos:start="533:16" pos:end="533:16">!</operator><call pos:start="533:17" pos:end="533:48"><name pos:start="533:17" pos:end="533:29">av_strcasecmp</name><argument_list pos:start="533:30" pos:end="533:48">(<argument pos:start="533:31" pos:end="533:33"><expr pos:start="533:31" pos:end="533:33"><name pos:start="533:31" pos:end="533:33">cmd</name></expr></argument>, <argument pos:start="533:36" pos:end="533:47"><expr pos:start="533:36" pos:end="533:47"><literal type="string" pos:start="533:36" pos:end="533:47">"VideoQDiff"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="533:51" pos:end="545:5">{<block_content pos:start="535:9" pos:end="543:23">

        <expr_stmt pos:start="535:9" pos:end="535:46"><expr pos:start="535:9" pos:end="535:45"><call pos:start="535:9" pos:end="535:45"><name pos:start="535:9" pos:end="535:24">ffserver_get_arg</name><argument_list pos:start="535:25" pos:end="535:45">(<argument pos:start="535:26" pos:end="535:28"><expr pos:start="535:26" pos:end="535:28"><name pos:start="535:26" pos:end="535:28">arg</name></expr></argument>, <argument pos:start="535:31" pos:end="535:41"><expr pos:start="535:31" pos:end="535:41"><sizeof pos:start="535:31" pos:end="535:41">sizeof<argument_list pos:start="535:37" pos:end="535:41">(<argument pos:start="535:38" pos:end="535:40"><expr pos:start="535:38" pos:end="535:40"><name pos:start="535:38" pos:end="535:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="535:44" pos:end="535:44"><expr pos:start="535:44" pos:end="535:44"><name pos:start="535:44" pos:end="535:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="537:9" pos:end="539:42"><expr pos:start="537:9" pos:end="539:41"><call pos:start="537:9" pos:end="539:41"><name pos:start="537:9" pos:end="537:30">ffserver_set_int_param</name><argument_list pos:start="537:31" pos:end="539:41">(<argument pos:start="537:32" pos:end="537:35"><expr pos:start="537:32" pos:end="537:35"><name pos:start="537:32" pos:end="537:35">NULL</name></expr></argument>, <argument pos:start="537:38" pos:end="537:40"><expr pos:start="537:38" pos:end="537:40"><name pos:start="537:38" pos:end="537:40">arg</name></expr></argument>, <argument pos:start="537:43" pos:end="537:43"><expr pos:start="537:43" pos:end="537:43"><literal type="number" pos:start="537:43" pos:end="537:43">0</literal></expr></argument>, <argument pos:start="537:46" pos:end="537:46"><expr pos:start="537:46" pos:end="537:46"><literal type="number" pos:start="537:46" pos:end="537:46">1</literal></expr></argument>, <argument pos:start="537:49" pos:end="537:50"><expr pos:start="537:49" pos:end="537:50"><literal type="number" pos:start="537:49" pos:end="537:50">31</literal></expr></argument>, <argument pos:start="537:53" pos:end="537:58"><expr pos:start="537:53" pos:end="537:58"><name pos:start="537:53" pos:end="537:58">config</name></expr></argument>, <argument pos:start="537:61" pos:end="537:68"><expr pos:start="537:61" pos:end="537:68"><name pos:start="537:61" pos:end="537:68">line_num</name></expr></argument>,

                <argument pos:start="539:17" pos:end="539:35"><expr pos:start="539:17" pos:end="539:35"><literal type="string" pos:start="539:17" pos:end="539:35">"%s out of range\n"</literal></expr></argument>, <argument pos:start="539:38" pos:end="539:40"><expr pos:start="539:38" pos:end="539:40"><name pos:start="539:38" pos:end="539:40">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="541:9" pos:end="543:23"><if pos:start="541:9" pos:end="543:23">if <condition pos:start="541:12" pos:end="541:62">(<expr pos:start="541:13" pos:end="541:61"><call pos:start="541:13" pos:end="541:57"><name pos:start="541:13" pos:end="541:23">av_dict_set</name><argument_list pos:start="541:24" pos:end="541:57">(<argument pos:start="541:25" pos:end="541:43"><expr pos:start="541:25" pos:end="541:43"><operator pos:start="541:25" pos:end="541:25">&amp;</operator><name pos:start="541:26" pos:end="541:43"><name pos:start="541:26" pos:end="541:31">config</name><operator pos:start="541:32" pos:end="541:33">-&gt;</operator><name pos:start="541:34" pos:end="541:43">video_conf</name></name></expr></argument>, <argument pos:start="541:46" pos:end="541:48"><expr pos:start="541:46" pos:end="541:48"><name pos:start="541:46" pos:end="541:48">cmd</name></expr></argument>, <argument pos:start="541:51" pos:end="541:53"><expr pos:start="541:51" pos:end="541:53"><name pos:start="541:51" pos:end="541:53">arg</name></expr></argument>, <argument pos:start="541:56" pos:end="541:56"><expr pos:start="541:56" pos:end="541:56"><literal type="number" pos:start="541:56" pos:end="541:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="541:59" pos:end="541:59">&lt;</operator> <literal type="number" pos:start="541:61" pos:end="541:61">0</literal></expr>)</condition><block type="pseudo" pos:start="543:13" pos:end="543:23"><block_content pos:start="543:13" pos:end="543:23">

            <goto pos:start="543:13" pos:end="543:23">goto <name pos:start="543:18" pos:end="543:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="545:7" pos:end="557:5">else if <condition pos:start="545:15" pos:end="545:48">(<expr pos:start="545:16" pos:end="545:47"><operator pos:start="545:16" pos:end="545:16">!</operator><call pos:start="545:17" pos:end="545:47"><name pos:start="545:17" pos:end="545:29">av_strcasecmp</name><argument_list pos:start="545:30" pos:end="545:47">(<argument pos:start="545:31" pos:end="545:33"><expr pos:start="545:31" pos:end="545:33"><name pos:start="545:31" pos:end="545:33">cmd</name></expr></argument>, <argument pos:start="545:36" pos:end="545:46"><expr pos:start="545:36" pos:end="545:46"><literal type="string" pos:start="545:36" pos:end="545:46">"VideoQMax"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="545:50" pos:end="557:5">{<block_content pos:start="547:9" pos:end="555:23">

        <expr_stmt pos:start="547:9" pos:end="547:46"><expr pos:start="547:9" pos:end="547:45"><call pos:start="547:9" pos:end="547:45"><name pos:start="547:9" pos:end="547:24">ffserver_get_arg</name><argument_list pos:start="547:25" pos:end="547:45">(<argument pos:start="547:26" pos:end="547:28"><expr pos:start="547:26" pos:end="547:28"><name pos:start="547:26" pos:end="547:28">arg</name></expr></argument>, <argument pos:start="547:31" pos:end="547:41"><expr pos:start="547:31" pos:end="547:41"><sizeof pos:start="547:31" pos:end="547:41">sizeof<argument_list pos:start="547:37" pos:end="547:41">(<argument pos:start="547:38" pos:end="547:40"><expr pos:start="547:38" pos:end="547:40"><name pos:start="547:38" pos:end="547:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="547:44" pos:end="547:44"><expr pos:start="547:44" pos:end="547:44"><name pos:start="547:44" pos:end="547:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="549:9" pos:end="551:42"><expr pos:start="549:9" pos:end="551:41"><call pos:start="549:9" pos:end="551:41"><name pos:start="549:9" pos:end="549:30">ffserver_set_int_param</name><argument_list pos:start="549:31" pos:end="551:41">(<argument pos:start="549:32" pos:end="549:35"><expr pos:start="549:32" pos:end="549:35"><name pos:start="549:32" pos:end="549:35">NULL</name></expr></argument>, <argument pos:start="549:38" pos:end="549:40"><expr pos:start="549:38" pos:end="549:40"><name pos:start="549:38" pos:end="549:40">arg</name></expr></argument>, <argument pos:start="549:43" pos:end="549:43"><expr pos:start="549:43" pos:end="549:43"><literal type="number" pos:start="549:43" pos:end="549:43">0</literal></expr></argument>, <argument pos:start="549:46" pos:end="549:46"><expr pos:start="549:46" pos:end="549:46"><literal type="number" pos:start="549:46" pos:end="549:46">1</literal></expr></argument>, <argument pos:start="549:49" pos:end="549:50"><expr pos:start="549:49" pos:end="549:50"><literal type="number" pos:start="549:49" pos:end="549:50">31</literal></expr></argument>, <argument pos:start="549:53" pos:end="549:58"><expr pos:start="549:53" pos:end="549:58"><name pos:start="549:53" pos:end="549:58">config</name></expr></argument>, <argument pos:start="549:61" pos:end="549:68"><expr pos:start="549:61" pos:end="549:68"><name pos:start="549:61" pos:end="549:68">line_num</name></expr></argument>,

                <argument pos:start="551:17" pos:end="551:35"><expr pos:start="551:17" pos:end="551:35"><literal type="string" pos:start="551:17" pos:end="551:35">"%s out of range\n"</literal></expr></argument>, <argument pos:start="551:38" pos:end="551:40"><expr pos:start="551:38" pos:end="551:40"><name pos:start="551:38" pos:end="551:40">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="553:9" pos:end="555:23"><if pos:start="553:9" pos:end="555:23">if <condition pos:start="553:12" pos:end="553:62">(<expr pos:start="553:13" pos:end="553:61"><call pos:start="553:13" pos:end="553:57"><name pos:start="553:13" pos:end="553:23">av_dict_set</name><argument_list pos:start="553:24" pos:end="553:57">(<argument pos:start="553:25" pos:end="553:43"><expr pos:start="553:25" pos:end="553:43"><operator pos:start="553:25" pos:end="553:25">&amp;</operator><name pos:start="553:26" pos:end="553:43"><name pos:start="553:26" pos:end="553:31">config</name><operator pos:start="553:32" pos:end="553:33">-&gt;</operator><name pos:start="553:34" pos:end="553:43">video_conf</name></name></expr></argument>, <argument pos:start="553:46" pos:end="553:48"><expr pos:start="553:46" pos:end="553:48"><name pos:start="553:46" pos:end="553:48">cmd</name></expr></argument>, <argument pos:start="553:51" pos:end="553:53"><expr pos:start="553:51" pos:end="553:53"><name pos:start="553:51" pos:end="553:53">arg</name></expr></argument>, <argument pos:start="553:56" pos:end="553:56"><expr pos:start="553:56" pos:end="553:56"><literal type="number" pos:start="553:56" pos:end="553:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="553:59" pos:end="553:59">&lt;</operator> <literal type="number" pos:start="553:61" pos:end="553:61">0</literal></expr>)</condition><block type="pseudo" pos:start="555:13" pos:end="555:23"><block_content pos:start="555:13" pos:end="555:23">

            <goto pos:start="555:13" pos:end="555:23">goto <name pos:start="555:18" pos:end="555:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="557:7" pos:end="569:5">else if <condition pos:start="557:15" pos:end="557:48">(<expr pos:start="557:16" pos:end="557:47"><operator pos:start="557:16" pos:end="557:16">!</operator><call pos:start="557:17" pos:end="557:47"><name pos:start="557:17" pos:end="557:29">av_strcasecmp</name><argument_list pos:start="557:30" pos:end="557:47">(<argument pos:start="557:31" pos:end="557:33"><expr pos:start="557:31" pos:end="557:33"><name pos:start="557:31" pos:end="557:33">cmd</name></expr></argument>, <argument pos:start="557:36" pos:end="557:46"><expr pos:start="557:36" pos:end="557:46"><literal type="string" pos:start="557:36" pos:end="557:46">"VideoQMin"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="557:50" pos:end="569:5">{<block_content pos:start="559:9" pos:end="567:23">

        <expr_stmt pos:start="559:9" pos:end="559:46"><expr pos:start="559:9" pos:end="559:45"><call pos:start="559:9" pos:end="559:45"><name pos:start="559:9" pos:end="559:24">ffserver_get_arg</name><argument_list pos:start="559:25" pos:end="559:45">(<argument pos:start="559:26" pos:end="559:28"><expr pos:start="559:26" pos:end="559:28"><name pos:start="559:26" pos:end="559:28">arg</name></expr></argument>, <argument pos:start="559:31" pos:end="559:41"><expr pos:start="559:31" pos:end="559:41"><sizeof pos:start="559:31" pos:end="559:41">sizeof<argument_list pos:start="559:37" pos:end="559:41">(<argument pos:start="559:38" pos:end="559:40"><expr pos:start="559:38" pos:end="559:40"><name pos:start="559:38" pos:end="559:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="559:44" pos:end="559:44"><expr pos:start="559:44" pos:end="559:44"><name pos:start="559:44" pos:end="559:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="561:9" pos:end="563:42"><expr pos:start="561:9" pos:end="563:41"><call pos:start="561:9" pos:end="563:41"><name pos:start="561:9" pos:end="561:30">ffserver_set_int_param</name><argument_list pos:start="561:31" pos:end="563:41">(<argument pos:start="561:32" pos:end="561:35"><expr pos:start="561:32" pos:end="561:35"><name pos:start="561:32" pos:end="561:35">NULL</name></expr></argument>, <argument pos:start="561:38" pos:end="561:40"><expr pos:start="561:38" pos:end="561:40"><name pos:start="561:38" pos:end="561:40">arg</name></expr></argument>, <argument pos:start="561:43" pos:end="561:43"><expr pos:start="561:43" pos:end="561:43"><literal type="number" pos:start="561:43" pos:end="561:43">0</literal></expr></argument>, <argument pos:start="561:46" pos:end="561:46"><expr pos:start="561:46" pos:end="561:46"><literal type="number" pos:start="561:46" pos:end="561:46">1</literal></expr></argument>, <argument pos:start="561:49" pos:end="561:50"><expr pos:start="561:49" pos:end="561:50"><literal type="number" pos:start="561:49" pos:end="561:50">31</literal></expr></argument>, <argument pos:start="561:53" pos:end="561:58"><expr pos:start="561:53" pos:end="561:58"><name pos:start="561:53" pos:end="561:58">config</name></expr></argument>, <argument pos:start="561:61" pos:end="561:68"><expr pos:start="561:61" pos:end="561:68"><name pos:start="561:61" pos:end="561:68">line_num</name></expr></argument>,

                <argument pos:start="563:17" pos:end="563:35"><expr pos:start="563:17" pos:end="563:35"><literal type="string" pos:start="563:17" pos:end="563:35">"%s out of range\n"</literal></expr></argument>, <argument pos:start="563:38" pos:end="563:40"><expr pos:start="563:38" pos:end="563:40"><name pos:start="563:38" pos:end="563:40">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="565:9" pos:end="567:23"><if pos:start="565:9" pos:end="567:23">if <condition pos:start="565:12" pos:end="565:62">(<expr pos:start="565:13" pos:end="565:61"><call pos:start="565:13" pos:end="565:57"><name pos:start="565:13" pos:end="565:23">av_dict_set</name><argument_list pos:start="565:24" pos:end="565:57">(<argument pos:start="565:25" pos:end="565:43"><expr pos:start="565:25" pos:end="565:43"><operator pos:start="565:25" pos:end="565:25">&amp;</operator><name pos:start="565:26" pos:end="565:43"><name pos:start="565:26" pos:end="565:31">config</name><operator pos:start="565:32" pos:end="565:33">-&gt;</operator><name pos:start="565:34" pos:end="565:43">video_conf</name></name></expr></argument>, <argument pos:start="565:46" pos:end="565:48"><expr pos:start="565:46" pos:end="565:48"><name pos:start="565:46" pos:end="565:48">cmd</name></expr></argument>, <argument pos:start="565:51" pos:end="565:53"><expr pos:start="565:51" pos:end="565:53"><name pos:start="565:51" pos:end="565:53">arg</name></expr></argument>, <argument pos:start="565:56" pos:end="565:56"><expr pos:start="565:56" pos:end="565:56"><literal type="number" pos:start="565:56" pos:end="565:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="565:59" pos:end="565:59">&lt;</operator> <literal type="number" pos:start="565:61" pos:end="565:61">0</literal></expr>)</condition><block type="pseudo" pos:start="567:13" pos:end="567:23"><block_content pos:start="567:13" pos:end="567:23">

            <goto pos:start="567:13" pos:end="567:23">goto <name pos:start="567:18" pos:end="567:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="569:7" pos:end="581:5">else if <condition pos:start="569:15" pos:end="569:47">(<expr pos:start="569:16" pos:end="569:46"><operator pos:start="569:16" pos:end="569:16">!</operator><call pos:start="569:17" pos:end="569:46"><name pos:start="569:17" pos:end="569:29">av_strcasecmp</name><argument_list pos:start="569:30" pos:end="569:46">(<argument pos:start="569:31" pos:end="569:33"><expr pos:start="569:31" pos:end="569:33"><name pos:start="569:31" pos:end="569:33">cmd</name></expr></argument>, <argument pos:start="569:36" pos:end="569:45"><expr pos:start="569:36" pos:end="569:45"><literal type="string" pos:start="569:36" pos:end="569:45">"LumiMask"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="569:49" pos:end="581:5">{<block_content pos:start="571:9" pos:end="579:23">

        <expr_stmt pos:start="571:9" pos:end="571:46"><expr pos:start="571:9" pos:end="571:45"><call pos:start="571:9" pos:end="571:45"><name pos:start="571:9" pos:end="571:24">ffserver_get_arg</name><argument_list pos:start="571:25" pos:end="571:45">(<argument pos:start="571:26" pos:end="571:28"><expr pos:start="571:26" pos:end="571:28"><name pos:start="571:26" pos:end="571:28">arg</name></expr></argument>, <argument pos:start="571:31" pos:end="571:41"><expr pos:start="571:31" pos:end="571:41"><sizeof pos:start="571:31" pos:end="571:41">sizeof<argument_list pos:start="571:37" pos:end="571:41">(<argument pos:start="571:38" pos:end="571:40"><expr pos:start="571:38" pos:end="571:40"><name pos:start="571:38" pos:end="571:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="571:44" pos:end="571:44"><expr pos:start="571:44" pos:end="571:44"><name pos:start="571:44" pos:end="571:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="573:9" pos:end="575:54"><expr pos:start="573:9" pos:end="575:53"><call pos:start="573:9" pos:end="575:53"><name pos:start="573:9" pos:end="573:32">ffserver_set_float_param</name><argument_list pos:start="573:33" pos:end="575:53">(<argument pos:start="573:34" pos:end="573:37"><expr pos:start="573:34" pos:end="573:37"><name pos:start="573:34" pos:end="573:37">NULL</name></expr></argument>, <argument pos:start="573:40" pos:end="573:42"><expr pos:start="573:40" pos:end="573:42"><name pos:start="573:40" pos:end="573:42">arg</name></expr></argument>, <argument pos:start="573:45" pos:end="573:45"><expr pos:start="573:45" pos:end="573:45"><literal type="number" pos:start="573:45" pos:end="573:45">0</literal></expr></argument>, <argument pos:start="573:48" pos:end="573:55"><expr pos:start="573:48" pos:end="573:55"><operator pos:start="573:48" pos:end="573:48">-</operator><name pos:start="573:49" pos:end="573:55">FLT_MAX</name></expr></argument>, <argument pos:start="573:58" pos:end="573:64"><expr pos:start="573:58" pos:end="573:64"><name pos:start="573:58" pos:end="573:64">FLT_MAX</name></expr></argument>, <argument pos:start="573:67" pos:end="573:72"><expr pos:start="573:67" pos:end="573:72"><name pos:start="573:67" pos:end="573:72">config</name></expr></argument>,

                <argument pos:start="575:17" pos:end="575:24"><expr pos:start="575:17" pos:end="575:24"><name pos:start="575:17" pos:end="575:24">line_num</name></expr></argument>, <argument pos:start="575:27" pos:end="575:42"><expr pos:start="575:27" pos:end="575:42"><literal type="string" pos:start="575:27" pos:end="575:42">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="575:45" pos:end="575:47"><expr pos:start="575:45" pos:end="575:47"><name pos:start="575:45" pos:end="575:47">cmd</name></expr></argument>, <argument pos:start="575:50" pos:end="575:52"><expr pos:start="575:50" pos:end="575:52"><name pos:start="575:50" pos:end="575:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="577:9" pos:end="579:23"><if pos:start="577:9" pos:end="579:23">if <condition pos:start="577:12" pos:end="577:62">(<expr pos:start="577:13" pos:end="577:61"><call pos:start="577:13" pos:end="577:57"><name pos:start="577:13" pos:end="577:23">av_dict_set</name><argument_list pos:start="577:24" pos:end="577:57">(<argument pos:start="577:25" pos:end="577:43"><expr pos:start="577:25" pos:end="577:43"><operator pos:start="577:25" pos:end="577:25">&amp;</operator><name pos:start="577:26" pos:end="577:43"><name pos:start="577:26" pos:end="577:31">config</name><operator pos:start="577:32" pos:end="577:33">-&gt;</operator><name pos:start="577:34" pos:end="577:43">video_conf</name></name></expr></argument>, <argument pos:start="577:46" pos:end="577:48"><expr pos:start="577:46" pos:end="577:48"><name pos:start="577:46" pos:end="577:48">cmd</name></expr></argument>, <argument pos:start="577:51" pos:end="577:53"><expr pos:start="577:51" pos:end="577:53"><name pos:start="577:51" pos:end="577:53">arg</name></expr></argument>, <argument pos:start="577:56" pos:end="577:56"><expr pos:start="577:56" pos:end="577:56"><literal type="number" pos:start="577:56" pos:end="577:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="577:59" pos:end="577:59">&lt;</operator> <literal type="number" pos:start="577:61" pos:end="577:61">0</literal></expr>)</condition><block type="pseudo" pos:start="579:13" pos:end="579:23"><block_content pos:start="579:13" pos:end="579:23">

            <goto pos:start="579:13" pos:end="579:23">goto <name pos:start="579:18" pos:end="579:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="581:7" pos:end="593:5">else if <condition pos:start="581:15" pos:end="581:47">(<expr pos:start="581:16" pos:end="581:46"><operator pos:start="581:16" pos:end="581:16">!</operator><call pos:start="581:17" pos:end="581:46"><name pos:start="581:17" pos:end="581:29">av_strcasecmp</name><argument_list pos:start="581:30" pos:end="581:46">(<argument pos:start="581:31" pos:end="581:33"><expr pos:start="581:31" pos:end="581:33"><name pos:start="581:31" pos:end="581:33">cmd</name></expr></argument>, <argument pos:start="581:36" pos:end="581:45"><expr pos:start="581:36" pos:end="581:45"><literal type="string" pos:start="581:36" pos:end="581:45">"DarkMask"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="581:49" pos:end="593:5">{<block_content pos:start="583:9" pos:end="591:23">

        <expr_stmt pos:start="583:9" pos:end="583:46"><expr pos:start="583:9" pos:end="583:45"><call pos:start="583:9" pos:end="583:45"><name pos:start="583:9" pos:end="583:24">ffserver_get_arg</name><argument_list pos:start="583:25" pos:end="583:45">(<argument pos:start="583:26" pos:end="583:28"><expr pos:start="583:26" pos:end="583:28"><name pos:start="583:26" pos:end="583:28">arg</name></expr></argument>, <argument pos:start="583:31" pos:end="583:41"><expr pos:start="583:31" pos:end="583:41"><sizeof pos:start="583:31" pos:end="583:41">sizeof<argument_list pos:start="583:37" pos:end="583:41">(<argument pos:start="583:38" pos:end="583:40"><expr pos:start="583:38" pos:end="583:40"><name pos:start="583:38" pos:end="583:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="583:44" pos:end="583:44"><expr pos:start="583:44" pos:end="583:44"><name pos:start="583:44" pos:end="583:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="585:9" pos:end="587:54"><expr pos:start="585:9" pos:end="587:53"><call pos:start="585:9" pos:end="587:53"><name pos:start="585:9" pos:end="585:32">ffserver_set_float_param</name><argument_list pos:start="585:33" pos:end="587:53">(<argument pos:start="585:34" pos:end="585:37"><expr pos:start="585:34" pos:end="585:37"><name pos:start="585:34" pos:end="585:37">NULL</name></expr></argument>, <argument pos:start="585:40" pos:end="585:42"><expr pos:start="585:40" pos:end="585:42"><name pos:start="585:40" pos:end="585:42">arg</name></expr></argument>, <argument pos:start="585:45" pos:end="585:45"><expr pos:start="585:45" pos:end="585:45"><literal type="number" pos:start="585:45" pos:end="585:45">0</literal></expr></argument>, <argument pos:start="585:48" pos:end="585:55"><expr pos:start="585:48" pos:end="585:55"><operator pos:start="585:48" pos:end="585:48">-</operator><name pos:start="585:49" pos:end="585:55">FLT_MAX</name></expr></argument>, <argument pos:start="585:58" pos:end="585:64"><expr pos:start="585:58" pos:end="585:64"><name pos:start="585:58" pos:end="585:64">FLT_MAX</name></expr></argument>, <argument pos:start="585:67" pos:end="585:72"><expr pos:start="585:67" pos:end="585:72"><name pos:start="585:67" pos:end="585:72">config</name></expr></argument>,

                <argument pos:start="587:17" pos:end="587:24"><expr pos:start="587:17" pos:end="587:24"><name pos:start="587:17" pos:end="587:24">line_num</name></expr></argument>, <argument pos:start="587:27" pos:end="587:42"><expr pos:start="587:27" pos:end="587:42"><literal type="string" pos:start="587:27" pos:end="587:42">"Invalid %s: %s"</literal></expr></argument>, <argument pos:start="587:45" pos:end="587:47"><expr pos:start="587:45" pos:end="587:47"><name pos:start="587:45" pos:end="587:47">cmd</name></expr></argument>, <argument pos:start="587:50" pos:end="587:52"><expr pos:start="587:50" pos:end="587:52"><name pos:start="587:50" pos:end="587:52">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="589:9" pos:end="591:23"><if pos:start="589:9" pos:end="591:23">if <condition pos:start="589:12" pos:end="589:62">(<expr pos:start="589:13" pos:end="589:61"><call pos:start="589:13" pos:end="589:57"><name pos:start="589:13" pos:end="589:23">av_dict_set</name><argument_list pos:start="589:24" pos:end="589:57">(<argument pos:start="589:25" pos:end="589:43"><expr pos:start="589:25" pos:end="589:43"><operator pos:start="589:25" pos:end="589:25">&amp;</operator><name pos:start="589:26" pos:end="589:43"><name pos:start="589:26" pos:end="589:31">config</name><operator pos:start="589:32" pos:end="589:33">-&gt;</operator><name pos:start="589:34" pos:end="589:43">video_conf</name></name></expr></argument>, <argument pos:start="589:46" pos:end="589:48"><expr pos:start="589:46" pos:end="589:48"><name pos:start="589:46" pos:end="589:48">cmd</name></expr></argument>, <argument pos:start="589:51" pos:end="589:53"><expr pos:start="589:51" pos:end="589:53"><name pos:start="589:51" pos:end="589:53">arg</name></expr></argument>, <argument pos:start="589:56" pos:end="589:56"><expr pos:start="589:56" pos:end="589:56"><literal type="number" pos:start="589:56" pos:end="589:56">0</literal></expr></argument>)</argument_list></call> <operator pos:start="589:59" pos:end="589:59">&lt;</operator> <literal type="number" pos:start="589:61" pos:end="589:61">0</literal></expr>)</condition><block type="pseudo" pos:start="591:13" pos:end="591:23"><block_content pos:start="591:13" pos:end="591:23">

            <goto pos:start="591:13" pos:end="591:23">goto <name pos:start="591:18" pos:end="591:22">nomem</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="593:7" pos:end="597:5">else if <condition pos:start="593:15" pos:end="593:46">(<expr pos:start="593:16" pos:end="593:45"><operator pos:start="593:16" pos:end="593:16">!</operator><call pos:start="593:17" pos:end="593:45"><name pos:start="593:17" pos:end="593:29">av_strcasecmp</name><argument_list pos:start="593:30" pos:end="593:45">(<argument pos:start="593:31" pos:end="593:33"><expr pos:start="593:31" pos:end="593:33"><name pos:start="593:31" pos:end="593:33">cmd</name></expr></argument>, <argument pos:start="593:36" pos:end="593:44"><expr pos:start="593:36" pos:end="593:44"><literal type="string" pos:start="593:36" pos:end="593:44">"NoVideo"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="593:48" pos:end="597:5">{<block_content pos:start="595:9" pos:end="595:29">

        <expr_stmt pos:start="595:9" pos:end="595:29"><expr pos:start="595:9" pos:end="595:28"><name pos:start="595:9" pos:end="595:24"><name pos:start="595:9" pos:end="595:14">config</name><operator pos:start="595:15" pos:end="595:16">-&gt;</operator><name pos:start="595:17" pos:end="595:24">no_video</name></name> <operator pos:start="595:26" pos:end="595:26">=</operator> <literal type="number" pos:start="595:28" pos:end="595:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="597:7" pos:end="601:5">else if <condition pos:start="597:15" pos:end="597:46">(<expr pos:start="597:16" pos:end="597:45"><operator pos:start="597:16" pos:end="597:16">!</operator><call pos:start="597:17" pos:end="597:45"><name pos:start="597:17" pos:end="597:29">av_strcasecmp</name><argument_list pos:start="597:30" pos:end="597:45">(<argument pos:start="597:31" pos:end="597:33"><expr pos:start="597:31" pos:end="597:33"><name pos:start="597:31" pos:end="597:33">cmd</name></expr></argument>, <argument pos:start="597:36" pos:end="597:44"><expr pos:start="597:36" pos:end="597:44"><literal type="string" pos:start="597:36" pos:end="597:44">"NoAudio"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="597:48" pos:end="601:5">{<block_content pos:start="599:9" pos:end="599:29">

        <expr_stmt pos:start="599:9" pos:end="599:29"><expr pos:start="599:9" pos:end="599:28"><name pos:start="599:9" pos:end="599:24"><name pos:start="599:9" pos:end="599:14">config</name><operator pos:start="599:15" pos:end="599:16">-&gt;</operator><name pos:start="599:17" pos:end="599:24">no_audio</name></name> <operator pos:start="599:26" pos:end="599:26">=</operator> <literal type="number" pos:start="599:28" pos:end="599:28">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="601:7" pos:end="607:5">else if <condition pos:start="601:15" pos:end="601:42">(<expr pos:start="601:16" pos:end="601:41"><operator pos:start="601:16" pos:end="601:16">!</operator><call pos:start="601:17" pos:end="601:41"><name pos:start="601:17" pos:end="601:29">av_strcasecmp</name><argument_list pos:start="601:30" pos:end="601:41">(<argument pos:start="601:31" pos:end="601:33"><expr pos:start="601:31" pos:end="601:33"><name pos:start="601:31" pos:end="601:33">cmd</name></expr></argument>, <argument pos:start="601:36" pos:end="601:40"><expr pos:start="601:36" pos:end="601:40"><literal type="string" pos:start="601:36" pos:end="601:40">"ACL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="601:44" pos:end="607:5">{<block_content pos:start="603:9" pos:end="605:26">

        <expr_stmt pos:start="603:9" pos:end="605:26"><expr pos:start="603:9" pos:end="605:25"><call pos:start="603:9" pos:end="605:25"><name pos:start="603:9" pos:end="603:30">ffserver_parse_acl_row</name><argument_list pos:start="603:31" pos:end="605:25">(<argument pos:start="603:32" pos:end="603:37"><expr pos:start="603:32" pos:end="603:37"><name pos:start="603:32" pos:end="603:37">stream</name></expr></argument>, <argument pos:start="603:40" pos:end="603:43"><expr pos:start="603:40" pos:end="603:43"><name pos:start="603:40" pos:end="603:43">NULL</name></expr></argument>, <argument pos:start="603:46" pos:end="603:49"><expr pos:start="603:46" pos:end="603:49"><name pos:start="603:46" pos:end="603:49">NULL</name></expr></argument>, <argument pos:start="603:52" pos:end="603:53"><expr pos:start="603:52" pos:end="603:53"><operator pos:start="603:52" pos:end="603:52">*</operator><name pos:start="603:53" pos:end="603:53">p</name></expr></argument>, <argument pos:start="603:56" pos:end="603:71"><expr pos:start="603:56" pos:end="603:71"><name pos:start="603:56" pos:end="603:71"><name pos:start="603:56" pos:end="603:61">config</name><operator pos:start="603:62" pos:end="603:63">-&gt;</operator><name pos:start="603:64" pos:end="603:71">filename</name></name></expr></argument>,

                <argument pos:start="605:17" pos:end="605:24"><expr pos:start="605:17" pos:end="605:24"><name pos:start="605:17" pos:end="605:24">line_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="607:7" pos:end="611:5">else if <condition pos:start="607:15" pos:end="607:49">(<expr pos:start="607:16" pos:end="607:48"><operator pos:start="607:16" pos:end="607:16">!</operator><call pos:start="607:17" pos:end="607:48"><name pos:start="607:17" pos:end="607:29">av_strcasecmp</name><argument_list pos:start="607:30" pos:end="607:48">(<argument pos:start="607:31" pos:end="607:33"><expr pos:start="607:31" pos:end="607:33"><name pos:start="607:31" pos:end="607:33">cmd</name></expr></argument>, <argument pos:start="607:36" pos:end="607:47"><expr pos:start="607:36" pos:end="607:47"><literal type="string" pos:start="607:36" pos:end="607:47">"DynamicACL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="607:51" pos:end="611:5">{<block_content pos:start="609:9" pos:end="609:78">

        <expr_stmt pos:start="609:9" pos:end="609:78"><expr pos:start="609:9" pos:end="609:77"><call pos:start="609:9" pos:end="609:77"><name pos:start="609:9" pos:end="609:24">ffserver_get_arg</name><argument_list pos:start="609:25" pos:end="609:77">(<argument pos:start="609:26" pos:end="609:44"><expr pos:start="609:26" pos:end="609:44"><name pos:start="609:26" pos:end="609:44"><name pos:start="609:26" pos:end="609:31">stream</name><operator pos:start="609:32" pos:end="609:33">-&gt;</operator><name pos:start="609:34" pos:end="609:44">dynamic_acl</name></name></expr></argument>, <argument pos:start="609:47" pos:end="609:73"><expr pos:start="609:47" pos:end="609:73"><sizeof pos:start="609:47" pos:end="609:73">sizeof<argument_list pos:start="609:53" pos:end="609:73">(<argument pos:start="609:54" pos:end="609:72"><expr pos:start="609:54" pos:end="609:72"><name pos:start="609:54" pos:end="609:72"><name pos:start="609:54" pos:end="609:59">stream</name><operator pos:start="609:60" pos:end="609:61">-&gt;</operator><name pos:start="609:62" pos:end="609:72">dynamic_acl</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="609:76" pos:end="609:76"><expr pos:start="609:76" pos:end="609:76"><name pos:start="609:76" pos:end="609:76">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="611:7" pos:end="619:5">else if <condition pos:start="611:15" pos:end="611:49">(<expr pos:start="611:16" pos:end="611:48"><operator pos:start="611:16" pos:end="611:16">!</operator><call pos:start="611:17" pos:end="611:48"><name pos:start="611:17" pos:end="611:29">av_strcasecmp</name><argument_list pos:start="611:30" pos:end="611:48">(<argument pos:start="611:31" pos:end="611:33"><expr pos:start="611:31" pos:end="611:33"><name pos:start="611:31" pos:end="611:33">cmd</name></expr></argument>, <argument pos:start="611:36" pos:end="611:47"><expr pos:start="611:36" pos:end="611:47"><literal type="string" pos:start="611:36" pos:end="611:47">"RTSPOption"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="611:51" pos:end="619:5">{<block_content pos:start="613:9" pos:end="617:45">

        <expr_stmt pos:start="613:9" pos:end="613:46"><expr pos:start="613:9" pos:end="613:45"><call pos:start="613:9" pos:end="613:45"><name pos:start="613:9" pos:end="613:24">ffserver_get_arg</name><argument_list pos:start="613:25" pos:end="613:45">(<argument pos:start="613:26" pos:end="613:28"><expr pos:start="613:26" pos:end="613:28"><name pos:start="613:26" pos:end="613:28">arg</name></expr></argument>, <argument pos:start="613:31" pos:end="613:41"><expr pos:start="613:31" pos:end="613:41"><sizeof pos:start="613:31" pos:end="613:41">sizeof<argument_list pos:start="613:37" pos:end="613:41">(<argument pos:start="613:38" pos:end="613:40"><expr pos:start="613:38" pos:end="613:40"><name pos:start="613:38" pos:end="613:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="613:44" pos:end="613:44"><expr pos:start="613:44" pos:end="613:44"><name pos:start="613:44" pos:end="613:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="615:9" pos:end="615:39"><expr pos:start="615:9" pos:end="615:38"><call pos:start="615:9" pos:end="615:38"><name pos:start="615:9" pos:end="615:16">av_freep</name><argument_list pos:start="615:17" pos:end="615:38">(<argument pos:start="615:18" pos:end="615:37"><expr pos:start="615:18" pos:end="615:37"><operator pos:start="615:18" pos:end="615:18">&amp;</operator><name pos:start="615:19" pos:end="615:37"><name pos:start="615:19" pos:end="615:24">stream</name><operator pos:start="615:25" pos:end="615:26">-&gt;</operator><name pos:start="615:27" pos:end="615:37">rtsp_option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="617:9" pos:end="617:45"><expr pos:start="617:9" pos:end="617:44"><name pos:start="617:9" pos:end="617:27"><name pos:start="617:9" pos:end="617:14">stream</name><operator pos:start="617:15" pos:end="617:16">-&gt;</operator><name pos:start="617:17" pos:end="617:27">rtsp_option</name></name> <operator pos:start="617:29" pos:end="617:29">=</operator> <call pos:start="617:31" pos:end="617:44"><name pos:start="617:31" pos:end="617:39">av_strdup</name><argument_list pos:start="617:40" pos:end="617:44">(<argument pos:start="617:41" pos:end="617:43"><expr pos:start="617:41" pos:end="617:43"><name pos:start="617:41" pos:end="617:43">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="619:7" pos:end="631:5">else if <condition pos:start="619:15" pos:end="619:55">(<expr pos:start="619:16" pos:end="619:54"><operator pos:start="619:16" pos:end="619:16">!</operator><call pos:start="619:17" pos:end="619:54"><name pos:start="619:17" pos:end="619:29">av_strcasecmp</name><argument_list pos:start="619:30" pos:end="619:54">(<argument pos:start="619:31" pos:end="619:33"><expr pos:start="619:31" pos:end="619:33"><name pos:start="619:31" pos:end="619:33">cmd</name></expr></argument>, <argument pos:start="619:36" pos:end="619:53"><expr pos:start="619:36" pos:end="619:53"><literal type="string" pos:start="619:36" pos:end="619:53">"MulticastAddress"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="619:57" pos:end="631:5">{<block_content pos:start="621:9" pos:end="629:25">

        <expr_stmt pos:start="621:9" pos:end="621:46"><expr pos:start="621:9" pos:end="621:45"><call pos:start="621:9" pos:end="621:45"><name pos:start="621:9" pos:end="621:24">ffserver_get_arg</name><argument_list pos:start="621:25" pos:end="621:45">(<argument pos:start="621:26" pos:end="621:28"><expr pos:start="621:26" pos:end="621:28"><name pos:start="621:26" pos:end="621:28">arg</name></expr></argument>, <argument pos:start="621:31" pos:end="621:41"><expr pos:start="621:31" pos:end="621:41"><sizeof pos:start="621:31" pos:end="621:41">sizeof<argument_list pos:start="621:37" pos:end="621:41">(<argument pos:start="621:38" pos:end="621:40"><expr pos:start="621:38" pos:end="621:40"><name pos:start="621:38" pos:end="621:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="621:44" pos:end="621:44"><expr pos:start="621:44" pos:end="621:44"><name pos:start="621:44" pos:end="621:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="623:9" pos:end="625:56"><if pos:start="623:9" pos:end="625:56">if <condition pos:start="623:12" pos:end="623:53">(<expr pos:start="623:13" pos:end="623:52"><call pos:start="623:13" pos:end="623:52"><name pos:start="623:13" pos:end="623:24">resolve_host</name><argument_list pos:start="623:25" pos:end="623:52">(<argument pos:start="623:26" pos:end="623:46"><expr pos:start="623:26" pos:end="623:46"><operator pos:start="623:26" pos:end="623:26">&amp;</operator><name pos:start="623:27" pos:end="623:46"><name pos:start="623:27" pos:end="623:32">stream</name><operator pos:start="623:33" pos:end="623:34">-&gt;</operator><name pos:start="623:35" pos:end="623:46">multicast_ip</name></name></expr></argument>, <argument pos:start="623:49" pos:end="623:51"><expr pos:start="623:49" pos:end="623:51"><name pos:start="623:49" pos:end="623:51">arg</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="625:13" pos:end="625:56"><block_content pos:start="625:13" pos:end="625:56">

            <expr_stmt pos:start="625:13" pos:end="625:56"><expr pos:start="625:13" pos:end="625:55"><call pos:start="625:13" pos:end="625:55"><name pos:start="625:13" pos:end="625:17">ERROR</name><argument_list pos:start="625:18" pos:end="625:55">(<argument pos:start="625:19" pos:end="625:49"><expr pos:start="625:19" pos:end="625:49"><literal type="string" pos:start="625:19" pos:end="625:49">"Invalid host/IP address: %s\n"</literal></expr></argument>, <argument pos:start="625:52" pos:end="625:54"><expr pos:start="625:52" pos:end="625:54"><name pos:start="625:52" pos:end="625:54">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="627:9" pos:end="627:33"><expr pos:start="627:9" pos:end="627:32"><name pos:start="627:9" pos:end="627:28"><name pos:start="627:9" pos:end="627:14">stream</name><operator pos:start="627:15" pos:end="627:16">-&gt;</operator><name pos:start="627:17" pos:end="627:28">is_multicast</name></name> <operator pos:start="627:30" pos:end="627:30">=</operator> <literal type="number" pos:start="627:32" pos:end="627:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="629:9" pos:end="629:25"><expr pos:start="629:9" pos:end="629:24"><name pos:start="629:9" pos:end="629:20"><name pos:start="629:9" pos:end="629:14">stream</name><operator pos:start="629:15" pos:end="629:16">-&gt;</operator><name pos:start="629:17" pos:end="629:20">loop</name></name> <operator pos:start="629:22" pos:end="629:22">=</operator> <literal type="number" pos:start="629:24" pos:end="629:24">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="629:27" pos:end="629:50">/* default is looping */</comment>

    </block_content>}</block></if> <if type="elseif" pos:start="631:7" pos:end="641:5">else if <condition pos:start="631:15" pos:end="631:52">(<expr pos:start="631:16" pos:end="631:51"><operator pos:start="631:16" pos:end="631:16">!</operator><call pos:start="631:17" pos:end="631:51"><name pos:start="631:17" pos:end="631:29">av_strcasecmp</name><argument_list pos:start="631:30" pos:end="631:51">(<argument pos:start="631:31" pos:end="631:33"><expr pos:start="631:31" pos:end="631:33"><name pos:start="631:31" pos:end="631:33">cmd</name></expr></argument>, <argument pos:start="631:36" pos:end="631:50"><expr pos:start="631:36" pos:end="631:50"><literal type="string" pos:start="631:36" pos:end="631:50">"MulticastPort"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="631:54" pos:end="641:5">{<block_content pos:start="633:9" pos:end="639:37">

        <expr_stmt pos:start="633:9" pos:end="633:46"><expr pos:start="633:9" pos:end="633:45"><call pos:start="633:9" pos:end="633:45"><name pos:start="633:9" pos:end="633:24">ffserver_get_arg</name><argument_list pos:start="633:25" pos:end="633:45">(<argument pos:start="633:26" pos:end="633:28"><expr pos:start="633:26" pos:end="633:28"><name pos:start="633:26" pos:end="633:28">arg</name></expr></argument>, <argument pos:start="633:31" pos:end="633:41"><expr pos:start="633:31" pos:end="633:41"><sizeof pos:start="633:31" pos:end="633:41">sizeof<argument_list pos:start="633:37" pos:end="633:41">(<argument pos:start="633:38" pos:end="633:40"><expr pos:start="633:38" pos:end="633:40"><name pos:start="633:38" pos:end="633:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="633:44" pos:end="633:44"><expr pos:start="633:44" pos:end="633:44"><name pos:start="633:44" pos:end="633:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="635:9" pos:end="637:52"><expr pos:start="635:9" pos:end="637:51"><call pos:start="635:9" pos:end="637:51"><name pos:start="635:9" pos:end="635:30">ffserver_set_int_param</name><argument_list pos:start="635:31" pos:end="637:51">(<argument pos:start="635:32" pos:end="635:35"><expr pos:start="635:32" pos:end="635:35"><operator pos:start="635:32" pos:end="635:32">&amp;</operator><name pos:start="635:33" pos:end="635:35">val</name></expr></argument>, <argument pos:start="635:38" pos:end="635:40"><expr pos:start="635:38" pos:end="635:40"><name pos:start="635:38" pos:end="635:40">arg</name></expr></argument>, <argument pos:start="635:43" pos:end="635:43"><expr pos:start="635:43" pos:end="635:43"><literal type="number" pos:start="635:43" pos:end="635:43">0</literal></expr></argument>, <argument pos:start="635:46" pos:end="635:46"><expr pos:start="635:46" pos:end="635:46"><literal type="number" pos:start="635:46" pos:end="635:46">1</literal></expr></argument>, <argument pos:start="635:49" pos:end="635:53"><expr pos:start="635:49" pos:end="635:53"><literal type="number" pos:start="635:49" pos:end="635:53">65535</literal></expr></argument>, <argument pos:start="635:56" pos:end="635:61"><expr pos:start="635:56" pos:end="635:61"><name pos:start="635:56" pos:end="635:61">config</name></expr></argument>, <argument pos:start="635:64" pos:end="635:71"><expr pos:start="635:64" pos:end="635:71"><name pos:start="635:64" pos:end="635:71">line_num</name></expr></argument>,

                <argument pos:start="637:17" pos:end="637:45"><expr pos:start="637:17" pos:end="637:45"><literal type="string" pos:start="637:17" pos:end="637:45">"Invalid MulticastPort: %s\n"</literal></expr></argument>, <argument pos:start="637:48" pos:end="637:50"><expr pos:start="637:48" pos:end="637:50"><name pos:start="637:48" pos:end="637:50">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="639:9" pos:end="639:37"><expr pos:start="639:9" pos:end="639:36"><name pos:start="639:9" pos:end="639:30"><name pos:start="639:9" pos:end="639:14">stream</name><operator pos:start="639:15" pos:end="639:16">-&gt;</operator><name pos:start="639:17" pos:end="639:30">multicast_port</name></name> <operator pos:start="639:32" pos:end="639:32">=</operator> <name pos:start="639:34" pos:end="639:36">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="641:7" pos:end="651:5">else if <condition pos:start="641:15" pos:end="641:51">(<expr pos:start="641:16" pos:end="641:50"><operator pos:start="641:16" pos:end="641:16">!</operator><call pos:start="641:17" pos:end="641:50"><name pos:start="641:17" pos:end="641:29">av_strcasecmp</name><argument_list pos:start="641:30" pos:end="641:50">(<argument pos:start="641:31" pos:end="641:33"><expr pos:start="641:31" pos:end="641:33"><name pos:start="641:31" pos:end="641:33">cmd</name></expr></argument>, <argument pos:start="641:36" pos:end="641:49"><expr pos:start="641:36" pos:end="641:49"><literal type="string" pos:start="641:36" pos:end="641:49">"MulticastTTL"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="641:53" pos:end="651:5">{<block_content pos:start="643:9" pos:end="649:36">

        <expr_stmt pos:start="643:9" pos:end="643:46"><expr pos:start="643:9" pos:end="643:45"><call pos:start="643:9" pos:end="643:45"><name pos:start="643:9" pos:end="643:24">ffserver_get_arg</name><argument_list pos:start="643:25" pos:end="643:45">(<argument pos:start="643:26" pos:end="643:28"><expr pos:start="643:26" pos:end="643:28"><name pos:start="643:26" pos:end="643:28">arg</name></expr></argument>, <argument pos:start="643:31" pos:end="643:41"><expr pos:start="643:31" pos:end="643:41"><sizeof pos:start="643:31" pos:end="643:41">sizeof<argument_list pos:start="643:37" pos:end="643:41">(<argument pos:start="643:38" pos:end="643:40"><expr pos:start="643:38" pos:end="643:40"><name pos:start="643:38" pos:end="643:40">arg</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="643:44" pos:end="643:44"><expr pos:start="643:44" pos:end="643:44"><name pos:start="643:44" pos:end="643:44">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="645:9" pos:end="647:61"><expr pos:start="645:9" pos:end="647:60"><call pos:start="645:9" pos:end="647:60"><name pos:start="645:9" pos:end="645:30">ffserver_set_int_param</name><argument_list pos:start="645:31" pos:end="647:60">(<argument pos:start="645:32" pos:end="645:35"><expr pos:start="645:32" pos:end="645:35"><operator pos:start="645:32" pos:end="645:32">&amp;</operator><name pos:start="645:33" pos:end="645:35">val</name></expr></argument>, <argument pos:start="645:38" pos:end="645:40"><expr pos:start="645:38" pos:end="645:40"><name pos:start="645:38" pos:end="645:40">arg</name></expr></argument>, <argument pos:start="645:43" pos:end="645:43"><expr pos:start="645:43" pos:end="645:43"><literal type="number" pos:start="645:43" pos:end="645:43">0</literal></expr></argument>, <argument pos:start="645:46" pos:end="645:52"><expr pos:start="645:46" pos:end="645:52"><name pos:start="645:46" pos:end="645:52">INT_MIN</name></expr></argument>, <argument pos:start="645:55" pos:end="645:61"><expr pos:start="645:55" pos:end="645:61"><name pos:start="645:55" pos:end="645:61">INT_MAX</name></expr></argument>, <argument pos:start="645:64" pos:end="645:69"><expr pos:start="645:64" pos:end="645:69"><name pos:start="645:64" pos:end="645:69">config</name></expr></argument>,

                <argument pos:start="647:17" pos:end="647:24"><expr pos:start="647:17" pos:end="647:24"><name pos:start="647:17" pos:end="647:24">line_num</name></expr></argument>, <argument pos:start="647:27" pos:end="647:54"><expr pos:start="647:27" pos:end="647:54"><literal type="string" pos:start="647:27" pos:end="647:54">"Invalid MulticastTTL: %s\n"</literal></expr></argument>, <argument pos:start="647:57" pos:end="647:59"><expr pos:start="647:57" pos:end="647:59"><name pos:start="647:57" pos:end="647:59">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:36"><expr pos:start="649:9" pos:end="649:35"><name pos:start="649:9" pos:end="649:29"><name pos:start="649:9" pos:end="649:14">stream</name><operator pos:start="649:15" pos:end="649:16">-&gt;</operator><name pos:start="649:17" pos:end="649:29">multicast_ttl</name></name> <operator pos:start="649:31" pos:end="649:31">=</operator> <name pos:start="649:33" pos:end="649:35">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="651:7" pos:end="655:5">else if <condition pos:start="651:15" pos:end="651:45">(<expr pos:start="651:16" pos:end="651:44"><operator pos:start="651:16" pos:end="651:16">!</operator><call pos:start="651:17" pos:end="651:44"><name pos:start="651:17" pos:end="651:29">av_strcasecmp</name><argument_list pos:start="651:30" pos:end="651:44">(<argument pos:start="651:31" pos:end="651:33"><expr pos:start="651:31" pos:end="651:33"><name pos:start="651:31" pos:end="651:33">cmd</name></expr></argument>, <argument pos:start="651:36" pos:end="651:43"><expr pos:start="651:36" pos:end="651:43"><literal type="string" pos:start="651:36" pos:end="651:43">"NoLoop"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="651:47" pos:end="655:5">{<block_content pos:start="653:9" pos:end="653:25">

        <expr_stmt pos:start="653:9" pos:end="653:25"><expr pos:start="653:9" pos:end="653:24"><name pos:start="653:9" pos:end="653:20"><name pos:start="653:9" pos:end="653:14">stream</name><operator pos:start="653:15" pos:end="653:16">-&gt;</operator><name pos:start="653:17" pos:end="653:20">loop</name></name> <operator pos:start="653:22" pos:end="653:22">=</operator> <literal type="number" pos:start="653:24" pos:end="653:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="655:7" pos:end="703:5">else if <condition pos:start="655:15" pos:end="655:48">(<expr pos:start="655:16" pos:end="655:47"><operator pos:start="655:16" pos:end="655:16">!</operator><call pos:start="655:17" pos:end="655:47"><name pos:start="655:17" pos:end="655:29">av_strcasecmp</name><argument_list pos:start="655:30" pos:end="655:47">(<argument pos:start="655:31" pos:end="655:33"><expr pos:start="655:31" pos:end="655:33"><name pos:start="655:31" pos:end="655:33">cmd</name></expr></argument>, <argument pos:start="655:36" pos:end="655:46"><expr pos:start="655:36" pos:end="655:46"><literal type="string" pos:start="655:36" pos:end="655:46">"&lt;/Stream&gt;"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="655:50" pos:end="703:5">{<block_content pos:start="657:9" pos:end="701:24">

        <if_stmt pos:start="657:9" pos:end="687:9"><if pos:start="657:9" pos:end="687:9">if <condition pos:start="657:12" pos:end="657:76">(<expr pos:start="657:13" pos:end="657:75"><name pos:start="657:13" pos:end="657:24"><name pos:start="657:13" pos:end="657:18">stream</name><operator pos:start="657:19" pos:end="657:20">-&gt;</operator><name pos:start="657:21" pos:end="657:24">feed</name></name> <operator pos:start="657:26" pos:end="657:27">&amp;&amp;</operator> <name pos:start="657:29" pos:end="657:39"><name pos:start="657:29" pos:end="657:34">stream</name><operator pos:start="657:35" pos:end="657:36">-&gt;</operator><name pos:start="657:37" pos:end="657:39">fmt</name></name> <operator pos:start="657:41" pos:end="657:42">&amp;&amp;</operator> <call pos:start="657:44" pos:end="657:75"><name pos:start="657:44" pos:end="657:49">strcmp</name><argument_list pos:start="657:50" pos:end="657:75">(<argument pos:start="657:51" pos:end="657:67"><expr pos:start="657:51" pos:end="657:67"><name pos:start="657:51" pos:end="657:67"><name pos:start="657:51" pos:end="657:56">stream</name><operator pos:start="657:57" pos:end="657:58">-&gt;</operator><name pos:start="657:59" pos:end="657:61">fmt</name><operator pos:start="657:62" pos:end="657:63">-&gt;</operator><name pos:start="657:64" pos:end="657:67">name</name></name></expr></argument>, <argument pos:start="657:70" pos:end="657:74"><expr pos:start="657:70" pos:end="657:74"><literal type="string" pos:start="657:70" pos:end="657:74">"ffm"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="657:78" pos:end="687:9">{<block_content pos:start="659:13" pos:end="685:13">

            <if_stmt pos:start="659:13" pos:end="661:78"><if pos:start="659:13" pos:end="661:78">if <condition pos:start="659:16" pos:end="659:65">(<expr pos:start="659:17" pos:end="659:64"><name pos:start="659:17" pos:end="659:44"><name pos:start="659:17" pos:end="659:22">config</name><operator pos:start="659:23" pos:end="659:24">-&gt;</operator><name pos:start="659:25" pos:end="659:34">dummy_actx</name><operator pos:start="659:35" pos:end="659:36">-&gt;</operator><name pos:start="659:37" pos:end="659:44">codec_id</name></name> <operator pos:start="659:46" pos:end="659:47">==</operator> <name pos:start="659:49" pos:end="659:64">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="661:17" pos:end="661:78"><block_content pos:start="661:17" pos:end="661:78">

                <expr_stmt pos:start="661:17" pos:end="661:78"><expr pos:start="661:17" pos:end="661:77"><name pos:start="661:17" pos:end="661:44"><name pos:start="661:17" pos:end="661:22">config</name><operator pos:start="661:23" pos:end="661:24">-&gt;</operator><name pos:start="661:25" pos:end="661:34">dummy_actx</name><operator pos:start="661:35" pos:end="661:36">-&gt;</operator><name pos:start="661:37" pos:end="661:44">codec_id</name></name> <operator pos:start="661:46" pos:end="661:46">=</operator> <name pos:start="661:48" pos:end="661:77"><name pos:start="661:48" pos:end="661:53">config</name><operator pos:start="661:54" pos:end="661:55">-&gt;</operator><name pos:start="661:56" pos:end="661:77">guessed_audio_codec_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="663:13" pos:end="671:13"><if pos:start="663:13" pos:end="671:13">if <condition pos:start="663:16" pos:end="663:86">(<expr pos:start="663:17" pos:end="663:85"><operator pos:start="663:17" pos:end="663:17">!</operator><name pos:start="663:18" pos:end="663:33"><name pos:start="663:18" pos:end="663:23">config</name><operator pos:start="663:24" pos:end="663:25">-&gt;</operator><name pos:start="663:26" pos:end="663:33">no_audio</name></name> <operator pos:start="663:35" pos:end="663:36">&amp;&amp;</operator> <name pos:start="663:38" pos:end="663:65"><name pos:start="663:38" pos:end="663:43">config</name><operator pos:start="663:44" pos:end="663:45">-&gt;</operator><name pos:start="663:46" pos:end="663:55">dummy_actx</name><operator pos:start="663:56" pos:end="663:57">-&gt;</operator><name pos:start="663:58" pos:end="663:65">codec_id</name></name> <operator pos:start="663:67" pos:end="663:68">!=</operator> <name pos:start="663:70" pos:end="663:85">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="663:88" pos:end="671:13">{<block_content pos:start="665:17" pos:end="669:45">

                <decl_stmt pos:start="665:17" pos:end="665:119"><decl pos:start="665:17" pos:end="665:118"><type pos:start="665:17" pos:end="665:32"><name pos:start="665:17" pos:end="665:30">AVCodecContext</name> <modifier pos:start="665:32" pos:end="665:32">*</modifier></type><name pos:start="665:33" pos:end="665:41">audio_enc</name> <init pos:start="665:43" pos:end="665:118">= <expr pos:start="665:45" pos:end="665:118"><call pos:start="665:45" pos:end="665:118"><name pos:start="665:45" pos:end="665:66">avcodec_alloc_context3</name><argument_list pos:start="665:67" pos:end="665:118">(<argument pos:start="665:68" pos:end="665:117"><expr pos:start="665:68" pos:end="665:117"><call pos:start="665:68" pos:end="665:117"><name pos:start="665:68" pos:end="665:87">avcodec_find_encoder</name><argument_list pos:start="665:88" pos:end="665:117">(<argument pos:start="665:89" pos:end="665:116"><expr pos:start="665:89" pos:end="665:116"><name pos:start="665:89" pos:end="665:116"><name pos:start="665:89" pos:end="665:94">config</name><operator pos:start="665:95" pos:end="665:96">-&gt;</operator><name pos:start="665:97" pos:end="665:106">dummy_actx</name><operator pos:start="665:107" pos:end="665:108">-&gt;</operator><name pos:start="665:109" pos:end="665:116">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="667:17" pos:end="667:97"><expr pos:start="667:17" pos:end="667:96"><call pos:start="667:17" pos:end="667:96"><name pos:start="667:17" pos:end="667:44">ffserver_apply_stream_config</name><argument_list pos:start="667:45" pos:end="667:96">(<argument pos:start="667:46" pos:end="667:54"><expr pos:start="667:46" pos:end="667:54"><name pos:start="667:46" pos:end="667:54">audio_enc</name></expr></argument>, <argument pos:start="667:57" pos:end="667:74"><expr pos:start="667:57" pos:end="667:74"><name pos:start="667:57" pos:end="667:74"><name pos:start="667:57" pos:end="667:62">config</name><operator pos:start="667:63" pos:end="667:64">-&gt;</operator><name pos:start="667:65" pos:end="667:74">audio_conf</name></name></expr></argument>, <argument pos:start="667:77" pos:end="667:95"><expr pos:start="667:77" pos:end="667:95"><operator pos:start="667:77" pos:end="667:77">&amp;</operator><name pos:start="667:78" pos:end="667:95"><name pos:start="667:78" pos:end="667:83">config</name><operator pos:start="667:84" pos:end="667:85">-&gt;</operator><name pos:start="667:86" pos:end="667:95">audio_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="669:17" pos:end="669:45"><expr pos:start="669:17" pos:end="669:44"><call pos:start="669:17" pos:end="669:44"><name pos:start="669:17" pos:end="669:25">add_codec</name><argument_list pos:start="669:26" pos:end="669:44">(<argument pos:start="669:27" pos:end="669:32"><expr pos:start="669:27" pos:end="669:32"><name pos:start="669:27" pos:end="669:32">stream</name></expr></argument>, <argument pos:start="669:35" pos:end="669:43"><expr pos:start="669:35" pos:end="669:43"><name pos:start="669:35" pos:end="669:43">audio_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="673:13" pos:end="675:78"><if pos:start="673:13" pos:end="675:78">if <condition pos:start="673:16" pos:end="673:65">(<expr pos:start="673:17" pos:end="673:64"><name pos:start="673:17" pos:end="673:44"><name pos:start="673:17" pos:end="673:22">config</name><operator pos:start="673:23" pos:end="673:24">-&gt;</operator><name pos:start="673:25" pos:end="673:34">dummy_vctx</name><operator pos:start="673:35" pos:end="673:36">-&gt;</operator><name pos:start="673:37" pos:end="673:44">codec_id</name></name> <operator pos:start="673:46" pos:end="673:47">==</operator> <name pos:start="673:49" pos:end="673:64">AV_CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="675:17" pos:end="675:78"><block_content pos:start="675:17" pos:end="675:78">

                <expr_stmt pos:start="675:17" pos:end="675:78"><expr pos:start="675:17" pos:end="675:77"><name pos:start="675:17" pos:end="675:44"><name pos:start="675:17" pos:end="675:22">config</name><operator pos:start="675:23" pos:end="675:24">-&gt;</operator><name pos:start="675:25" pos:end="675:34">dummy_vctx</name><operator pos:start="675:35" pos:end="675:36">-&gt;</operator><name pos:start="675:37" pos:end="675:44">codec_id</name></name> <operator pos:start="675:46" pos:end="675:46">=</operator> <name pos:start="675:48" pos:end="675:77"><name pos:start="675:48" pos:end="675:53">config</name><operator pos:start="675:54" pos:end="675:55">-&gt;</operator><name pos:start="675:56" pos:end="675:77">guessed_video_codec_id</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="677:13" pos:end="685:13"><if pos:start="677:13" pos:end="685:13">if <condition pos:start="677:16" pos:end="677:86">(<expr pos:start="677:17" pos:end="677:85"><operator pos:start="677:17" pos:end="677:17">!</operator><name pos:start="677:18" pos:end="677:33"><name pos:start="677:18" pos:end="677:23">config</name><operator pos:start="677:24" pos:end="677:25">-&gt;</operator><name pos:start="677:26" pos:end="677:33">no_video</name></name> <operator pos:start="677:35" pos:end="677:36">&amp;&amp;</operator> <name pos:start="677:38" pos:end="677:65"><name pos:start="677:38" pos:end="677:43">config</name><operator pos:start="677:44" pos:end="677:45">-&gt;</operator><name pos:start="677:46" pos:end="677:55">dummy_vctx</name><operator pos:start="677:56" pos:end="677:57">-&gt;</operator><name pos:start="677:58" pos:end="677:65">codec_id</name></name> <operator pos:start="677:67" pos:end="677:68">!=</operator> <name pos:start="677:70" pos:end="677:85">AV_CODEC_ID_NONE</name></expr>)</condition> <block pos:start="677:88" pos:end="685:13">{<block_content pos:start="679:17" pos:end="683:45">

                <decl_stmt pos:start="679:17" pos:end="679:119"><decl pos:start="679:17" pos:end="679:118"><type pos:start="679:17" pos:end="679:32"><name pos:start="679:17" pos:end="679:30">AVCodecContext</name> <modifier pos:start="679:32" pos:end="679:32">*</modifier></type><name pos:start="679:33" pos:end="679:41">video_enc</name> <init pos:start="679:43" pos:end="679:118">= <expr pos:start="679:45" pos:end="679:118"><call pos:start="679:45" pos:end="679:118"><name pos:start="679:45" pos:end="679:66">avcodec_alloc_context3</name><argument_list pos:start="679:67" pos:end="679:118">(<argument pos:start="679:68" pos:end="679:117"><expr pos:start="679:68" pos:end="679:117"><call pos:start="679:68" pos:end="679:117"><name pos:start="679:68" pos:end="679:87">avcodec_find_encoder</name><argument_list pos:start="679:88" pos:end="679:117">(<argument pos:start="679:89" pos:end="679:116"><expr pos:start="679:89" pos:end="679:116"><name pos:start="679:89" pos:end="679:116"><name pos:start="679:89" pos:end="679:94">config</name><operator pos:start="679:95" pos:end="679:96">-&gt;</operator><name pos:start="679:97" pos:end="679:106">dummy_vctx</name><operator pos:start="679:107" pos:end="679:108">-&gt;</operator><name pos:start="679:109" pos:end="679:116">codec_id</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="681:17" pos:end="681:97"><expr pos:start="681:17" pos:end="681:96"><call pos:start="681:17" pos:end="681:96"><name pos:start="681:17" pos:end="681:44">ffserver_apply_stream_config</name><argument_list pos:start="681:45" pos:end="681:96">(<argument pos:start="681:46" pos:end="681:54"><expr pos:start="681:46" pos:end="681:54"><name pos:start="681:46" pos:end="681:54">video_enc</name></expr></argument>, <argument pos:start="681:57" pos:end="681:74"><expr pos:start="681:57" pos:end="681:74"><name pos:start="681:57" pos:end="681:74"><name pos:start="681:57" pos:end="681:62">config</name><operator pos:start="681:63" pos:end="681:64">-&gt;</operator><name pos:start="681:65" pos:end="681:74">video_conf</name></name></expr></argument>, <argument pos:start="681:77" pos:end="681:95"><expr pos:start="681:77" pos:end="681:95"><operator pos:start="681:77" pos:end="681:77">&amp;</operator><name pos:start="681:78" pos:end="681:95"><name pos:start="681:78" pos:end="681:83">config</name><operator pos:start="681:84" pos:end="681:85">-&gt;</operator><name pos:start="681:86" pos:end="681:95">video_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="683:17" pos:end="683:45"><expr pos:start="683:17" pos:end="683:44"><call pos:start="683:17" pos:end="683:44"><name pos:start="683:17" pos:end="683:25">add_codec</name><argument_list pos:start="683:26" pos:end="683:44">(<argument pos:start="683:27" pos:end="683:32"><expr pos:start="683:27" pos:end="683:32"><name pos:start="683:27" pos:end="683:32">stream</name></expr></argument>, <argument pos:start="683:35" pos:end="683:43"><expr pos:start="683:35" pos:end="683:43"><name pos:start="683:35" pos:end="683:43">video_enc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:42"><expr pos:start="689:9" pos:end="689:41"><call pos:start="689:9" pos:end="689:41"><name pos:start="689:9" pos:end="689:20">av_dict_free</name><argument_list pos:start="689:21" pos:end="689:41">(<argument pos:start="689:22" pos:end="689:40"><expr pos:start="689:22" pos:end="689:40"><operator pos:start="689:22" pos:end="689:22">&amp;</operator><name pos:start="689:23" pos:end="689:40"><name pos:start="689:23" pos:end="689:28">config</name><operator pos:start="689:29" pos:end="689:30">-&gt;</operator><name pos:start="689:31" pos:end="689:40">video_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="691:42"><expr pos:start="691:9" pos:end="691:41"><call pos:start="691:9" pos:end="691:41"><name pos:start="691:9" pos:end="691:20">av_dict_free</name><argument_list pos:start="691:21" pos:end="691:41">(<argument pos:start="691:22" pos:end="691:40"><expr pos:start="691:22" pos:end="691:40"><operator pos:start="691:22" pos:end="691:22">&amp;</operator><name pos:start="691:23" pos:end="691:40"><name pos:start="691:23" pos:end="691:28">config</name><operator pos:start="691:29" pos:end="691:30">-&gt;</operator><name pos:start="691:31" pos:end="691:40">video_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="693:9" pos:end="693:42"><expr pos:start="693:9" pos:end="693:41"><call pos:start="693:9" pos:end="693:41"><name pos:start="693:9" pos:end="693:20">av_dict_free</name><argument_list pos:start="693:21" pos:end="693:41">(<argument pos:start="693:22" pos:end="693:40"><expr pos:start="693:22" pos:end="693:40"><operator pos:start="693:22" pos:end="693:22">&amp;</operator><name pos:start="693:23" pos:end="693:40"><name pos:start="693:23" pos:end="693:28">config</name><operator pos:start="693:29" pos:end="693:30">-&gt;</operator><name pos:start="693:31" pos:end="693:40">audio_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="695:9" pos:end="695:42"><expr pos:start="695:9" pos:end="695:41"><call pos:start="695:9" pos:end="695:41"><name pos:start="695:9" pos:end="695:20">av_dict_free</name><argument_list pos:start="695:21" pos:end="695:41">(<argument pos:start="695:22" pos:end="695:40"><expr pos:start="695:22" pos:end="695:40"><operator pos:start="695:22" pos:end="695:22">&amp;</operator><name pos:start="695:23" pos:end="695:40"><name pos:start="695:23" pos:end="695:28">config</name><operator pos:start="695:29" pos:end="695:30">-&gt;</operator><name pos:start="695:31" pos:end="695:40">audio_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="697:9" pos:end="697:50"><expr pos:start="697:9" pos:end="697:49"><call pos:start="697:9" pos:end="697:49"><name pos:start="697:9" pos:end="697:28">avcodec_free_context</name><argument_list pos:start="697:29" pos:end="697:49">(<argument pos:start="697:30" pos:end="697:48"><expr pos:start="697:30" pos:end="697:48"><operator pos:start="697:30" pos:end="697:30">&amp;</operator><name pos:start="697:31" pos:end="697:48"><name pos:start="697:31" pos:end="697:36">config</name><operator pos:start="697:37" pos:end="697:38">-&gt;</operator><name pos:start="697:39" pos:end="697:48">dummy_vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="699:9" pos:end="699:50"><expr pos:start="699:9" pos:end="699:49"><call pos:start="699:9" pos:end="699:49"><name pos:start="699:9" pos:end="699:28">avcodec_free_context</name><argument_list pos:start="699:29" pos:end="699:49">(<argument pos:start="699:30" pos:end="699:48"><expr pos:start="699:30" pos:end="699:48"><operator pos:start="699:30" pos:end="699:30">&amp;</operator><name pos:start="699:31" pos:end="699:48"><name pos:start="699:31" pos:end="699:36">config</name><operator pos:start="699:37" pos:end="699:38">-&gt;</operator><name pos:start="699:39" pos:end="699:48">dummy_actx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="701:9" pos:end="701:24"><expr pos:start="701:9" pos:end="701:23"><operator pos:start="701:9" pos:end="701:9">*</operator><name pos:start="701:10" pos:end="701:16">pstream</name> <operator pos:start="701:18" pos:end="701:18">=</operator> <name pos:start="701:20" pos:end="701:23">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="703:7" pos:end="709:5">else if <condition pos:start="703:15" pos:end="703:82">(<expr pos:start="703:16" pos:end="703:81"><operator pos:start="703:16" pos:end="703:16">!</operator><call pos:start="703:17" pos:end="703:42"><name pos:start="703:17" pos:end="703:29">av_strcasecmp</name><argument_list pos:start="703:30" pos:end="703:42">(<argument pos:start="703:31" pos:end="703:33"><expr pos:start="703:31" pos:end="703:33"><name pos:start="703:31" pos:end="703:33">cmd</name></expr></argument>, <argument pos:start="703:36" pos:end="703:41"><expr pos:start="703:36" pos:end="703:41"><literal type="string" pos:start="703:36" pos:end="703:41">"File"</literal></expr></argument>)</argument_list></call> <operator pos:start="703:44" pos:end="703:45">||</operator> <operator pos:start="703:47" pos:end="703:47">!</operator><call pos:start="703:48" pos:end="703:81"><name pos:start="703:48" pos:end="703:60">av_strcasecmp</name><argument_list pos:start="703:61" pos:end="703:81">(<argument pos:start="703:62" pos:end="703:64"><expr pos:start="703:62" pos:end="703:64"><name pos:start="703:62" pos:end="703:64">cmd</name></expr></argument>, <argument pos:start="703:67" pos:end="703:80"><expr pos:start="703:67" pos:end="703:80"><literal type="string" pos:start="703:67" pos:end="703:80">"ReadOnlyFile"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="703:84" pos:end="709:5">{<block_content pos:start="705:9" pos:end="707:19">

        <expr_stmt pos:start="705:9" pos:end="707:19"><expr pos:start="705:9" pos:end="707:18"><call pos:start="705:9" pos:end="707:18"><name pos:start="705:9" pos:end="705:24">ffserver_get_arg</name><argument_list pos:start="705:25" pos:end="707:18">(<argument pos:start="705:26" pos:end="705:46"><expr pos:start="705:26" pos:end="705:46"><name pos:start="705:26" pos:end="705:46"><name pos:start="705:26" pos:end="705:31">stream</name><operator pos:start="705:32" pos:end="705:33">-&gt;</operator><name pos:start="705:34" pos:end="705:46">feed_filename</name></name></expr></argument>, <argument pos:start="705:49" pos:end="705:77"><expr pos:start="705:49" pos:end="705:77"><sizeof pos:start="705:49" pos:end="705:77">sizeof<argument_list pos:start="705:55" pos:end="705:77">(<argument pos:start="705:56" pos:end="705:76"><expr pos:start="705:56" pos:end="705:76"><name pos:start="705:56" pos:end="705:76"><name pos:start="705:56" pos:end="705:61">stream</name><operator pos:start="705:62" pos:end="705:63">-&gt;</operator><name pos:start="705:64" pos:end="705:76">feed_filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="707:17" pos:end="707:17"><expr pos:start="707:17" pos:end="707:17"><name pos:start="707:17" pos:end="707:17">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="709:7" pos:end="713:5">else <block pos:start="709:12" pos:end="713:5">{<block_content pos:start="711:9" pos:end="711:68">

        <expr_stmt pos:start="711:9" pos:end="711:68"><expr pos:start="711:9" pos:end="711:67"><call pos:start="711:9" pos:end="711:67"><name pos:start="711:9" pos:end="711:13">ERROR</name><argument_list pos:start="711:14" pos:end="711:67">(<argument pos:start="711:15" pos:end="711:61"><expr pos:start="711:15" pos:end="711:61"><literal type="string" pos:start="711:15" pos:end="711:61">"Invalid entry '%s' inside &lt;Stream&gt;&lt;/Stream&gt;\n"</literal></expr></argument>, <argument pos:start="711:64" pos:end="711:66"><expr pos:start="711:64" pos:end="711:66"><name pos:start="711:64" pos:end="711:66">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="715:5" pos:end="715:13">return <expr pos:start="715:12" pos:end="715:12"><literal type="number" pos:start="715:12" pos:end="715:12">0</literal></expr>;</return>

  <label pos:start="717:3" pos:end="717:8"><name pos:start="717:3" pos:end="717:7">nomem</name>:</label>

    <expr_stmt pos:start="719:5" pos:end="719:61"><expr pos:start="719:5" pos:end="719:60"><call pos:start="719:5" pos:end="719:60"><name pos:start="719:5" pos:end="719:10">av_log</name><argument_list pos:start="719:11" pos:end="719:60">(<argument pos:start="719:12" pos:end="719:15"><expr pos:start="719:12" pos:end="719:15"><name pos:start="719:12" pos:end="719:15">NULL</name></expr></argument>, <argument pos:start="719:18" pos:end="719:29"><expr pos:start="719:18" pos:end="719:29"><name pos:start="719:18" pos:end="719:29">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="719:32" pos:end="719:59"><expr pos:start="719:32" pos:end="719:59"><literal type="string" pos:start="719:32" pos:end="719:59">"Out of memory. Aborting.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="721:5" pos:end="721:38"><expr pos:start="721:5" pos:end="721:37"><call pos:start="721:5" pos:end="721:37"><name pos:start="721:5" pos:end="721:16">av_dict_free</name><argument_list pos:start="721:17" pos:end="721:37">(<argument pos:start="721:18" pos:end="721:36"><expr pos:start="721:18" pos:end="721:36"><operator pos:start="721:18" pos:end="721:18">&amp;</operator><name pos:start="721:19" pos:end="721:36"><name pos:start="721:19" pos:end="721:24">config</name><operator pos:start="721:25" pos:end="721:26">-&gt;</operator><name pos:start="721:27" pos:end="721:36">video_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="723:5" pos:end="723:38"><expr pos:start="723:5" pos:end="723:37"><call pos:start="723:5" pos:end="723:37"><name pos:start="723:5" pos:end="723:16">av_dict_free</name><argument_list pos:start="723:17" pos:end="723:37">(<argument pos:start="723:18" pos:end="723:36"><expr pos:start="723:18" pos:end="723:36"><operator pos:start="723:18" pos:end="723:18">&amp;</operator><name pos:start="723:19" pos:end="723:36"><name pos:start="723:19" pos:end="723:24">config</name><operator pos:start="723:25" pos:end="723:26">-&gt;</operator><name pos:start="723:27" pos:end="723:36">video_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="725:5" pos:end="725:38"><expr pos:start="725:5" pos:end="725:37"><call pos:start="725:5" pos:end="725:37"><name pos:start="725:5" pos:end="725:16">av_dict_free</name><argument_list pos:start="725:17" pos:end="725:37">(<argument pos:start="725:18" pos:end="725:36"><expr pos:start="725:18" pos:end="725:36"><operator pos:start="725:18" pos:end="725:18">&amp;</operator><name pos:start="725:19" pos:end="725:36"><name pos:start="725:19" pos:end="725:24">config</name><operator pos:start="725:25" pos:end="725:26">-&gt;</operator><name pos:start="725:27" pos:end="725:36">audio_opts</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="727:5" pos:end="727:38"><expr pos:start="727:5" pos:end="727:37"><call pos:start="727:5" pos:end="727:37"><name pos:start="727:5" pos:end="727:16">av_dict_free</name><argument_list pos:start="727:17" pos:end="727:37">(<argument pos:start="727:18" pos:end="727:36"><expr pos:start="727:18" pos:end="727:36"><operator pos:start="727:18" pos:end="727:18">&amp;</operator><name pos:start="727:19" pos:end="727:36"><name pos:start="727:19" pos:end="727:24">config</name><operator pos:start="727:25" pos:end="727:26">-&gt;</operator><name pos:start="727:27" pos:end="727:36">audio_conf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="729:5" pos:end="729:46"><expr pos:start="729:5" pos:end="729:45"><call pos:start="729:5" pos:end="729:45"><name pos:start="729:5" pos:end="729:24">avcodec_free_context</name><argument_list pos:start="729:25" pos:end="729:45">(<argument pos:start="729:26" pos:end="729:44"><expr pos:start="729:26" pos:end="729:44"><operator pos:start="729:26" pos:end="729:26">&amp;</operator><name pos:start="729:27" pos:end="729:44"><name pos:start="729:27" pos:end="729:32">config</name><operator pos:start="729:33" pos:end="729:34">-&gt;</operator><name pos:start="729:35" pos:end="729:44">dummy_vctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="731:5" pos:end="731:46"><expr pos:start="731:5" pos:end="731:45"><call pos:start="731:5" pos:end="731:45"><name pos:start="731:5" pos:end="731:24">avcodec_free_context</name><argument_list pos:start="731:25" pos:end="731:45">(<argument pos:start="731:26" pos:end="731:44"><expr pos:start="731:26" pos:end="731:44"><operator pos:start="731:26" pos:end="731:26">&amp;</operator><name pos:start="731:27" pos:end="731:44"><name pos:start="731:27" pos:end="731:32">config</name><operator pos:start="731:33" pos:end="731:34">-&gt;</operator><name pos:start="731:35" pos:end="731:44">dummy_actx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="733:5" pos:end="733:27">return <expr pos:start="733:12" pos:end="733:26"><call pos:start="733:12" pos:end="733:26"><name pos:start="733:12" pos:end="733:18">AVERROR</name><argument_list pos:start="733:19" pos:end="733:26">(<argument pos:start="733:20" pos:end="733:25"><expr pos:start="733:20" pos:end="733:25"><name pos:start="733:20" pos:end="733:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
