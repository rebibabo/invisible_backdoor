<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3715.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:17">dp83932_init</name><parameter_list pos:start="1:18" pos:end="5:112">(<parameter pos:start="1:19" pos:end="1:29"><decl pos:start="1:19" pos:end="1:29"><type pos:start="1:19" pos:end="1:29"><name pos:start="1:19" pos:end="1:25">NICInfo</name> <modifier pos:start="1:27" pos:end="1:27">*</modifier></type><name pos:start="1:28" pos:end="1:29">nd</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:54"><decl pos:start="1:32" pos:end="1:54"><type pos:start="1:32" pos:end="1:54"><name pos:start="1:32" pos:end="1:49">target_phys_addr_t</name></type> <name pos:start="1:51" pos:end="1:54">base</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:68"><decl pos:start="1:57" pos:end="1:68"><type pos:start="1:57" pos:end="1:68"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:68">it_shift</name></decl></parameter>,

                  <parameter pos:start="3:19" pos:end="3:30"><decl pos:start="3:19" pos:end="3:30"><type pos:start="3:19" pos:end="3:30"><name pos:start="3:19" pos:end="3:26">qemu_irq</name></type> <name pos:start="3:28" pos:end="3:30">irq</name></decl></parameter>, <parameter pos:start="3:33" pos:end="3:48"><decl pos:start="3:33" pos:end="3:48"><type pos:start="3:33" pos:end="3:48"><name pos:start="3:33" pos:end="3:36">void</name><modifier pos:start="3:37" pos:end="3:37">*</modifier></type> <name pos:start="3:39" pos:end="3:48">mem_opaque</name></decl></parameter>,

                  <parameter pos:start="5:19" pos:end="5:111"><function_decl pos:start="5:19" pos:end="5:111"><type pos:start="5:19" pos:end="5:22"><name pos:start="5:19" pos:end="5:22">void</name></type> (<modifier pos:start="5:25" pos:end="5:25">*</modifier><name pos:start="5:26" pos:end="5:34">memory_rw</name>)<parameter_list pos:start="5:36" pos:end="5:111">(<parameter pos:start="5:37" pos:end="5:48"><decl pos:start="5:37" pos:end="5:48"><type pos:start="5:37" pos:end="5:48"><name pos:start="5:37" pos:end="5:40">void</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:48">opaque</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:73"><decl pos:start="5:51" pos:end="5:73"><type pos:start="5:51" pos:end="5:73"><name pos:start="5:51" pos:end="5:68">target_phys_addr_t</name></type> <name pos:start="5:70" pos:end="5:73">addr</name></decl></parameter>, <parameter pos:start="5:76" pos:end="5:87"><decl pos:start="5:76" pos:end="5:87"><type pos:start="5:76" pos:end="5:87"><name pos:start="5:76" pos:end="5:82">uint8_t</name> <modifier pos:start="5:84" pos:end="5:84">*</modifier></type><name pos:start="5:85" pos:end="5:87">buf</name></decl></parameter>, <parameter pos:start="5:90" pos:end="5:96"><decl pos:start="5:90" pos:end="5:96"><type pos:start="5:90" pos:end="5:96"><name pos:start="5:90" pos:end="5:92">int</name></type> <name pos:start="5:94" pos:end="5:96">len</name></decl></parameter>, <parameter pos:start="5:99" pos:end="5:110"><decl pos:start="5:99" pos:end="5:110"><type pos:start="5:99" pos:end="5:110"><name pos:start="5:99" pos:end="5:101">int</name></type> <name pos:start="5:103" pos:end="5:110">is_write</name></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="55:1">{<block_content pos:start="9:5" pos:end="53:61">

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">dp8393xState</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:11"><decl pos:start="11:5" pos:end="11:10"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:10">io</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:40"><expr pos:start="15:5" pos:end="15:39"><call pos:start="15:5" pos:end="15:39"><name pos:start="15:5" pos:end="15:24">qemu_check_nic_model</name><argument_list pos:start="15:25" pos:end="15:39">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">nd</name></expr></argument>, <argument pos:start="15:30" pos:end="15:38"><expr pos:start="15:30" pos:end="15:38"><literal type="string" pos:start="15:30" pos:end="15:38">"dp83932"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:5">s</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:20">qemu_mallocz</name><argument_list pos:start="19:21" pos:end="19:42">(<argument pos:start="19:22" pos:end="19:41"><expr pos:start="19:22" pos:end="19:41"><sizeof pos:start="19:22" pos:end="19:41">sizeof<argument_list pos:start="19:28" pos:end="19:41">(<argument pos:start="19:29" pos:end="19:40"><expr pos:start="19:29" pos:end="19:40"><name pos:start="19:29" pos:end="19:40">dp8393xState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:17">mem_opaque</name></name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:30">mem_opaque</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">memory_rw</name></name> <operator pos:start="25:18" pos:end="25:18">=</operator> <name pos:start="25:20" pos:end="25:28">memory_rw</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:15"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:15">it_shift</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:26">it_shift</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:17"><expr pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:5">s</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:10">irq</name></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:16">irq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:64"><expr pos:start="31:5" pos:end="31:63"><name pos:start="31:5" pos:end="31:15"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:15">watchdog</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="31:63"><name pos:start="31:19" pos:end="31:32">qemu_new_timer</name><argument_list pos:start="31:33" pos:end="31:63">(<argument pos:start="31:34" pos:end="31:41"><expr pos:start="31:34" pos:end="31:41"><name pos:start="31:34" pos:end="31:41">vm_clock</name></expr></argument>, <argument pos:start="31:44" pos:end="31:59"><expr pos:start="31:44" pos:end="31:59"><name pos:start="31:44" pos:end="31:59">dp8393x_watchdog</name></expr></argument>, <argument pos:start="31:62" pos:end="31:62"><expr pos:start="31:62" pos:end="31:62"><name pos:start="31:62" pos:end="31:62">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:5">s</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:11">regs</name><index pos:start="33:12" pos:end="33:21">[<expr pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:20">SONIC_SR</name></expr>]</index></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <literal type="number" pos:start="33:25" pos:end="33:30">0x0004</literal></expr>;</expr_stmt> <comment type="block" pos:start="33:33" pos:end="33:71">/* only revision recognized by Linux */</comment>



    <expr_stmt pos:start="37:5" pos:end="39:66"><expr pos:start="37:5" pos:end="39:65"><name pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:5">s</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:9">vc</name></name> <operator pos:start="37:11" pos:end="37:11">=</operator> <call pos:start="37:13" pos:end="39:65"><name pos:start="37:13" pos:end="37:32">qemu_new_vlan_client</name><argument_list pos:start="37:33" pos:end="39:65">(<argument pos:start="37:34" pos:end="37:41"><expr pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:41"><name pos:start="37:34" pos:end="37:35">nd</name><operator pos:start="37:36" pos:end="37:37">-&gt;</operator><name pos:start="37:38" pos:end="37:41">vlan</name></name></expr></argument>, <argument pos:start="37:44" pos:end="37:52"><expr pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:52"><name pos:start="37:44" pos:end="37:45">nd</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:52">model</name></name></expr></argument>, <argument pos:start="37:55" pos:end="37:62"><expr pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:62"><name pos:start="37:55" pos:end="37:56">nd</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:62">name</name></name></expr></argument>,

                                 <argument pos:start="39:34" pos:end="39:44"><expr pos:start="39:34" pos:end="39:44"><name pos:start="39:34" pos:end="39:44">nic_receive</name></expr></argument>, <argument pos:start="39:47" pos:end="39:61"><expr pos:start="39:47" pos:end="39:61"><name pos:start="39:47" pos:end="39:61">nic_can_receive</name></expr></argument>, <argument pos:start="39:64" pos:end="39:64"><expr pos:start="39:64" pos:end="39:64"><name pos:start="39:64" pos:end="39:64">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><call pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:28">qemu_format_nic_info_str</name><argument_list pos:start="43:29" pos:end="43:48">(<argument pos:start="43:30" pos:end="43:34"><expr pos:start="43:30" pos:end="43:34"><name pos:start="43:30" pos:end="43:34"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:34">vc</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:47"><expr pos:start="43:37" pos:end="43:47"><name pos:start="43:37" pos:end="43:47"><name pos:start="43:37" pos:end="43:38">nd</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:47">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:38"><expr pos:start="45:5" pos:end="45:37"><call pos:start="45:5" pos:end="45:37"><name pos:start="45:5" pos:end="45:23">qemu_register_reset</name><argument_list pos:start="45:24" pos:end="45:37">(<argument pos:start="45:25" pos:end="45:33"><expr pos:start="45:25" pos:end="45:33"><name pos:start="45:25" pos:end="45:33">nic_reset</name></expr></argument>, <argument pos:start="45:36" pos:end="45:36"><expr pos:start="45:36" pos:end="45:36"><name pos:start="45:36" pos:end="45:36">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:17"><expr pos:start="47:5" pos:end="47:16"><call pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:13">nic_reset</name><argument_list pos:start="47:14" pos:end="47:16">(<argument pos:start="47:15" pos:end="47:15"><expr pos:start="47:15" pos:end="47:15"><name pos:start="47:15" pos:end="47:15">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="51:5" pos:end="51:67"><expr pos:start="51:5" pos:end="51:66"><name pos:start="51:5" pos:end="51:6">io</name> <operator pos:start="51:8" pos:end="51:8">=</operator> <call pos:start="51:10" pos:end="51:66"><name pos:start="51:10" pos:end="51:31">cpu_register_io_memory</name><argument_list pos:start="51:32" pos:end="51:66">(<argument pos:start="51:33" pos:end="51:33"><expr pos:start="51:33" pos:end="51:33"><literal type="number" pos:start="51:33" pos:end="51:33">0</literal></expr></argument>, <argument pos:start="51:36" pos:end="51:47"><expr pos:start="51:36" pos:end="51:47"><name pos:start="51:36" pos:end="51:47">dp8393x_read</name></expr></argument>, <argument pos:start="51:50" pos:end="51:62"><expr pos:start="51:50" pos:end="51:62"><name pos:start="51:50" pos:end="51:62">dp8393x_write</name></expr></argument>, <argument pos:start="51:65" pos:end="51:65"><expr pos:start="51:65" pos:end="51:65"><name pos:start="51:65" pos:end="51:65">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><call pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:32">cpu_register_physical_memory</name><argument_list pos:start="53:33" pos:end="53:60">(<argument pos:start="53:34" pos:end="53:37"><expr pos:start="53:34" pos:end="53:37"><name pos:start="53:34" pos:end="53:37">base</name></expr></argument>, <argument pos:start="53:40" pos:end="53:55"><expr pos:start="53:40" pos:end="53:55"><literal type="number" pos:start="53:40" pos:end="53:43">0x40</literal> <operator pos:start="53:45" pos:end="53:46">&lt;&lt;</operator> <name pos:start="53:48" pos:end="53:55">it_shift</name></expr></argument>, <argument pos:start="53:58" pos:end="53:59"><expr pos:start="53:58" pos:end="53:59"><name pos:start="53:58" pos:end="53:59">io</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
