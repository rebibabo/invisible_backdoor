<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13972.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:52">decode_subband_internal</name><parameter_list pos:start="1:53" pos:end="1:95">(<parameter pos:start="1:54" pos:end="1:68"><decl pos:start="1:54" pos:end="1:68"><type pos:start="1:54" pos:end="1:68"><name pos:start="1:54" pos:end="1:65">DiracContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">s</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:80"><decl pos:start="1:71" pos:end="1:80"><type pos:start="1:71" pos:end="1:80"><name pos:start="1:71" pos:end="1:77">SubBand</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:80">b</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:94"><decl pos:start="1:83" pos:end="1:94"><type pos:start="1:83" pos:end="1:94"><name pos:start="1:83" pos:end="1:85">int</name></type> <name pos:start="1:87" pos:end="1:94">is_arith</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:31">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">cb_x</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:18">cb_y</name></decl>, <decl pos:start="5:21" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:24">left</name></decl>, <decl pos:start="5:27" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:27" pos:end="5:31">right</name></decl>, <decl pos:start="5:34" pos:end="5:36"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:34" pos:end="5:36">top</name></decl>, <decl pos:start="5:39" pos:end="5:44"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:39" pos:end="5:44">bottom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">DiracArith</name></type> <name pos:start="7:16" pos:end="7:16">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:17">GetBitContext</name></type> <name pos:start="9:19" pos:end="9:20">gb</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:82"><decl pos:start="11:5" pos:end="11:81"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">cb_width</name>  <init pos:start="11:19" pos:end="11:81">= <expr pos:start="11:21" pos:end="11:81"><name pos:start="11:21" pos:end="11:75"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:32">codeblock</name><index pos:start="11:33" pos:end="11:75">[<expr pos:start="11:34" pos:end="11:74"><name pos:start="11:34" pos:end="11:41"><name pos:start="11:34" pos:end="11:34">b</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:41">level</name></name> <operator pos:start="11:43" pos:end="11:43">+</operator> <operator pos:start="11:45" pos:end="11:45">(</operator><name pos:start="11:46" pos:end="11:59"><name pos:start="11:46" pos:end="11:46">b</name><operator pos:start="11:47" pos:end="11:48">-&gt;</operator><name pos:start="11:49" pos:end="11:59">orientation</name></name> <operator pos:start="11:61" pos:end="11:62">!=</operator> <name pos:start="11:64" pos:end="11:73">subband_ll</name><operator pos:start="11:74" pos:end="11:74">)</operator></expr>]</index></name><operator pos:start="11:76" pos:end="11:76">.</operator><name pos:start="11:77" pos:end="11:81">width</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:83"><decl pos:start="13:5" pos:end="13:82"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">cb_height</name> <init pos:start="13:19" pos:end="13:82">= <expr pos:start="13:21" pos:end="13:82"><name pos:start="13:21" pos:end="13:75"><name pos:start="13:21" pos:end="13:21">s</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:32">codeblock</name><index pos:start="13:33" pos:end="13:75">[<expr pos:start="13:34" pos:end="13:74"><name pos:start="13:34" pos:end="13:41"><name pos:start="13:34" pos:end="13:34">b</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:41">level</name></name> <operator pos:start="13:43" pos:end="13:43">+</operator> <operator pos:start="13:45" pos:end="13:45">(</operator><name pos:start="13:46" pos:end="13:59"><name pos:start="13:46" pos:end="13:46">b</name><operator pos:start="13:47" pos:end="13:48">-&gt;</operator><name pos:start="13:49" pos:end="13:59">orientation</name></name> <operator pos:start="13:61" pos:end="13:62">!=</operator> <name pos:start="13:64" pos:end="13:73">subband_ll</name><operator pos:start="13:74" pos:end="13:74">)</operator></expr>]</index></name><operator pos:start="13:76" pos:end="13:76">.</operator><name pos:start="13:77" pos:end="13:82">height</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:51"><decl pos:start="15:5" pos:end="15:50"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:20">blockcnt_one</name> <init pos:start="15:22" pos:end="15:50">= <expr pos:start="15:24" pos:end="15:50"><operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:32">cb_width</name> <operator pos:start="15:34" pos:end="15:34">+</operator> <name pos:start="15:36" pos:end="15:44">cb_height</name><operator pos:start="15:45" pos:end="15:45">)</operator> <operator pos:start="15:47" pos:end="15:48">==</operator> <literal type="number" pos:start="15:50" pos:end="15:50">2</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:15"><if pos:start="19:5" pos:end="21:15">if <condition pos:start="19:8" pos:end="19:19">(<expr pos:start="19:9" pos:end="19:18"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:18"><name pos:start="19:10" pos:end="19:10">b</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:18">length</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:15"><block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><call pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:18">init_get_bits8</name><argument_list pos:start="25:19" pos:end="25:49">(<argument pos:start="25:20" pos:end="25:22"><expr pos:start="25:20" pos:end="25:22"><operator pos:start="25:20" pos:end="25:20">&amp;</operator><name pos:start="25:21" pos:end="25:22">gb</name></expr></argument>, <argument pos:start="25:25" pos:end="25:37"><expr pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:37"><name pos:start="25:25" pos:end="25:25">b</name><operator pos:start="25:26" pos:end="25:27">-&gt;</operator><name pos:start="25:28" pos:end="25:37">coeff_data</name></name></expr></argument>, <argument pos:start="25:40" pos:end="25:48"><expr pos:start="25:40" pos:end="25:48"><name pos:start="25:40" pos:end="25:48"><name pos:start="25:40" pos:end="25:40">b</name><operator pos:start="25:41" pos:end="25:42">-&gt;</operator><name pos:start="25:43" pos:end="25:48">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="31:56"><if pos:start="29:5" pos:end="31:56">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:16">is_arith</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:56"><block_content pos:start="31:9" pos:end="31:56">

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><call pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:35">ff_dirac_init_arith_decoder</name><argument_list pos:start="31:36" pos:end="31:55">(<argument pos:start="31:37" pos:end="31:38"><expr pos:start="31:37" pos:end="31:38"><operator pos:start="31:37" pos:end="31:37">&amp;</operator><name pos:start="31:38" pos:end="31:38">c</name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><operator pos:start="31:41" pos:end="31:41">&amp;</operator><name pos:start="31:42" pos:end="31:43">gb</name></expr></argument>, <argument pos:start="31:46" pos:end="31:54"><expr pos:start="31:46" pos:end="31:54"><name pos:start="31:46" pos:end="31:54"><name pos:start="31:46" pos:end="31:46">b</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:54">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:12"><expr pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:7">top</name> <operator pos:start="35:9" pos:end="35:9">=</operator> <literal type="number" pos:start="35:11" pos:end="35:11">0</literal></expr>;</expr_stmt>

    <for pos:start="37:5" pos:end="55:5">for <control pos:start="37:9" pos:end="37:44">(<init pos:start="37:10" pos:end="37:18"><expr pos:start="37:10" pos:end="37:17"><name pos:start="37:10" pos:end="37:13">cb_y</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</init> <condition pos:start="37:20" pos:end="37:36"><expr pos:start="37:20" pos:end="37:35"><name pos:start="37:20" pos:end="37:23">cb_y</name> <operator pos:start="37:25" pos:end="37:25">&lt;</operator> <name pos:start="37:27" pos:end="37:35">cb_height</name></expr>;</condition> <incr pos:start="37:38" pos:end="37:43"><expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:41">cb_y</name><operator pos:start="37:42" pos:end="37:43">++</operator></expr></incr>)</control> <block pos:start="37:46" pos:end="55:5">{<block_content pos:start="39:9" pos:end="53:21">

        <expr_stmt pos:start="39:9" pos:end="39:52"><expr pos:start="39:9" pos:end="39:51"><name pos:start="39:9" pos:end="39:14">bottom</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:27"><name pos:start="39:19" pos:end="39:19">b</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">height</name></name> <operator pos:start="39:29" pos:end="39:29">*</operator> <operator pos:start="39:31" pos:end="39:31">(</operator><name pos:start="39:32" pos:end="39:35">cb_y</name><operator pos:start="39:36" pos:end="39:36">+</operator><literal type="number" pos:start="39:37" pos:end="39:37">1</literal><operator pos:start="39:38" pos:end="39:38">)</operator><operator pos:start="39:39" pos:end="39:39">)</operator> <operator pos:start="39:41" pos:end="39:41">/</operator> <name pos:start="39:43" pos:end="39:51">cb_height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:17"><expr pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:12">left</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:16">0</literal></expr>;</expr_stmt>

        <for pos:start="43:9" pos:end="51:9">for <control pos:start="43:13" pos:end="43:47">(<init pos:start="43:14" pos:end="43:22"><expr pos:start="43:14" pos:end="43:21"><name pos:start="43:14" pos:end="43:17">cb_x</name> <operator pos:start="43:19" pos:end="43:19">=</operator> <literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>;</init> <condition pos:start="43:24" pos:end="43:39"><expr pos:start="43:24" pos:end="43:38"><name pos:start="43:24" pos:end="43:27">cb_x</name> <operator pos:start="43:29" pos:end="43:29">&lt;</operator> <name pos:start="43:31" pos:end="43:38">cb_width</name></expr>;</condition> <incr pos:start="43:41" pos:end="43:46"><expr pos:start="43:41" pos:end="43:46"><name pos:start="43:41" pos:end="43:44">cb_x</name><operator pos:start="43:45" pos:end="43:46">++</operator></expr></incr>)</control> <block pos:start="43:49" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:25">

            <expr_stmt pos:start="45:13" pos:end="45:53"><expr pos:start="45:13" pos:end="45:52"><name pos:start="45:13" pos:end="45:17">right</name> <operator pos:start="45:19" pos:end="45:19">=</operator> <operator pos:start="45:21" pos:end="45:21">(</operator><name pos:start="45:22" pos:end="45:29"><name pos:start="45:22" pos:end="45:22">b</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:29">width</name></name> <operator pos:start="45:31" pos:end="45:31">*</operator> <operator pos:start="45:33" pos:end="45:33">(</operator><name pos:start="45:34" pos:end="45:37">cb_x</name><operator pos:start="45:38" pos:end="45:38">+</operator><literal type="number" pos:start="45:39" pos:end="45:39">1</literal><operator pos:start="45:40" pos:end="45:40">)</operator><operator pos:start="45:41" pos:end="45:41">)</operator> <operator pos:start="45:43" pos:end="45:43">/</operator> <name pos:start="45:45" pos:end="45:52">cb_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:87"><expr pos:start="47:13" pos:end="47:86"><call pos:start="47:13" pos:end="47:86"><name pos:start="47:13" pos:end="47:21">codeblock</name><argument_list pos:start="47:22" pos:end="47:86">(<argument pos:start="47:23" pos:end="47:23"><expr pos:start="47:23" pos:end="47:23"><name pos:start="47:23" pos:end="47:23">s</name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><name pos:start="47:26" pos:end="47:26">b</name></expr></argument>, <argument pos:start="47:29" pos:end="47:31"><expr pos:start="47:29" pos:end="47:31"><operator pos:start="47:29" pos:end="47:29">&amp;</operator><name pos:start="47:30" pos:end="47:31">gb</name></expr></argument>, <argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><operator pos:start="47:34" pos:end="47:34">&amp;</operator><name pos:start="47:35" pos:end="47:35">c</name></expr></argument>, <argument pos:start="47:38" pos:end="47:41"><expr pos:start="47:38" pos:end="47:41"><name pos:start="47:38" pos:end="47:41">left</name></expr></argument>, <argument pos:start="47:44" pos:end="47:48"><expr pos:start="47:44" pos:end="47:48"><name pos:start="47:44" pos:end="47:48">right</name></expr></argument>, <argument pos:start="47:51" pos:end="47:53"><expr pos:start="47:51" pos:end="47:53"><name pos:start="47:51" pos:end="47:53">top</name></expr></argument>, <argument pos:start="47:56" pos:end="47:61"><expr pos:start="47:56" pos:end="47:61"><name pos:start="47:56" pos:end="47:61">bottom</name></expr></argument>, <argument pos:start="47:64" pos:end="47:75"><expr pos:start="47:64" pos:end="47:75"><name pos:start="47:64" pos:end="47:75">blockcnt_one</name></expr></argument>, <argument pos:start="47:78" pos:end="47:85"><expr pos:start="47:78" pos:end="47:85"><name pos:start="47:78" pos:end="47:85">is_arith</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:25"><expr pos:start="49:13" pos:end="49:24"><name pos:start="49:13" pos:end="49:16">left</name> <operator pos:start="49:18" pos:end="49:18">=</operator> <name pos:start="49:20" pos:end="49:24">right</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="53:9" pos:end="53:21"><expr pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:11">top</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <name pos:start="53:15" pos:end="53:20">bottom</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="59:5" pos:end="61:31"><if pos:start="59:5" pos:end="61:31">if <condition pos:start="59:8" pos:end="59:57">(<expr pos:start="59:9" pos:end="59:56"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:9">b</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:22">orientation</name></name> <operator pos:start="59:24" pos:end="59:25">==</operator> <name pos:start="59:27" pos:end="59:36">subband_ll</name> <operator pos:start="59:38" pos:end="59:39">&amp;&amp;</operator> <name pos:start="59:41" pos:end="59:51"><name pos:start="59:41" pos:end="59:41">s</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:51">num_refs</name></name> <operator pos:start="59:53" pos:end="59:54">==</operator> <literal type="number" pos:start="59:56" pos:end="59:56">0</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:31"><block_content pos:start="61:9" pos:end="61:31">

        <expr_stmt pos:start="61:9" pos:end="61:31"><expr pos:start="61:9" pos:end="61:30"><call pos:start="61:9" pos:end="61:30"><name pos:start="61:9" pos:end="61:27">intra_dc_prediction</name><argument_list pos:start="61:28" pos:end="61:30">(<argument pos:start="61:29" pos:end="61:29"><expr pos:start="61:29" pos:end="61:29"><name pos:start="61:29" pos:end="61:29">b</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
