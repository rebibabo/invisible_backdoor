<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8683.c" pos:tabs="8"><function pos:start="1:1" pos:end="2769:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">disas_arm_insn</name><parameter_list pos:start="1:27" pos:end="1:62">(<parameter pos:start="1:28" pos:end="1:44"><decl pos:start="1:28" pos:end="1:44"><type pos:start="1:28" pos:end="1:44"><name pos:start="1:28" pos:end="1:38">CPUARMState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type> <name pos:start="1:42" pos:end="1:44">env</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><name pos:start="1:47" pos:end="1:58">DisasContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2769:1">{<block_content pos:start="5:5" pos:end="2767:5">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">cond</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:27">insn</name></decl>, <decl pos:start="5:30" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:30" pos:end="5:32">val</name></decl>, <decl pos:start="5:35" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:35" pos:end="5:37">op1</name></decl>, <decl pos:start="5:40" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:40" pos:end="5:40">i</name></decl>, <decl pos:start="5:43" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:43" pos:end="5:47">shift</name></decl>, <decl pos:start="5:50" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:50" pos:end="5:51">rm</name></decl>, <decl pos:start="5:54" pos:end="5:55"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:54" pos:end="5:55">rs</name></decl>, <decl pos:start="5:58" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:58" pos:end="5:59">rn</name></decl>, <decl pos:start="5:62" pos:end="5:63"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:62" pos:end="5:63">rd</name></decl>, <decl pos:start="5:66" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:66" pos:end="5:67">sh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">TCGv_i32</name></type> <name pos:start="7:14" pos:end="7:16">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">TCGv_i32</name></type> <name pos:start="9:14" pos:end="9:17">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">TCGv_i32</name></type> <name pos:start="11:14" pos:end="11:17">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">TCGv_i32</name></type> <name pos:start="13:14" pos:end="13:17">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i64</name></type> <name pos:start="15:14" pos:end="15:18">tmp64</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:51"><expr pos:start="19:5" pos:end="19:50"><name pos:start="19:5" pos:end="19:8">insn</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:50"><name pos:start="19:12" pos:end="19:23">arm_ldl_code</name><argument_list pos:start="19:24" pos:end="19:50">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">env</name></expr></argument>, <argument pos:start="19:30" pos:end="19:34"><expr pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:34"><name pos:start="19:30" pos:end="19:30">s</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:34">pc</name></name></expr></argument>, <argument pos:start="19:37" pos:end="19:49"><expr pos:start="19:37" pos:end="19:49"><name pos:start="19:37" pos:end="19:49"><name pos:start="19:37" pos:end="19:37">s</name><operator pos:start="19:38" pos:end="19:39">-&gt;</operator><name pos:start="19:40" pos:end="19:49">bswap_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">pc</name></name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:48">/* M variants do not implement ARM mode.  */</comment>

    <if_stmt pos:start="27:5" pos:end="29:24"><if pos:start="27:5" pos:end="29:24">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><call pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">IS_M</name><argument_list pos:start="27:13" pos:end="27:17">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:24"><block_content pos:start="29:9" pos:end="29:24">

        <goto pos:start="29:9" pos:end="29:24">goto <name pos:start="29:14" pos:end="29:23">illegal_op</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:8">cond</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:15">insn</name> <operator pos:start="31:17" pos:end="31:18">&gt;&gt;</operator> <literal type="number" pos:start="31:20" pos:end="31:21">28</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="407:5"><if pos:start="33:5" pos:end="407:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">cond</name> <operator pos:start="33:14" pos:end="33:15">==</operator> <literal type="number" pos:start="33:17" pos:end="33:19">0xf</literal></expr>)</condition><block pos:start="33:21" pos:end="407:5">{<block_content pos:start="43:9" pos:end="405:24">

        <comment type="block" pos:start="35:9" pos:end="41:11">/* In ARMv3 and v4 the NV condition is UNPREDICTABLE; we

         * choose to UNDEF. In ARMv5 and above the space is used

         * for miscellaneous unconditional instructions.

         */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:16"><expr pos:start="43:9" pos:end="43:15"><call pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:12">ARCH</name><argument_list pos:start="43:13" pos:end="43:15">(<argument pos:start="43:14" pos:end="43:14"><expr pos:start="43:14" pos:end="43:14"><literal type="number" pos:start="43:14" pos:end="43:14">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="47:9" pos:end="47:42">/* Unconditional instructions.  */</comment>

        <if_stmt pos:start="49:9" pos:end="65:9"><if pos:start="49:9" pos:end="65:9">if <condition pos:start="49:12" pos:end="49:36">(<expr pos:start="49:13" pos:end="49:35"><operator pos:start="49:13" pos:end="49:13">(</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:18">insn</name> <operator pos:start="49:20" pos:end="49:21">&gt;&gt;</operator> <literal type="number" pos:start="49:23" pos:end="49:24">25</literal><operator pos:start="49:25" pos:end="49:25">)</operator> <operator pos:start="49:27" pos:end="49:27">&amp;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">7</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:33">==</operator> <literal type="number" pos:start="49:35" pos:end="49:35">1</literal></expr>)</condition> <block pos:start="49:38" pos:end="65:9">{<block_content pos:start="53:13" pos:end="63:19">

            <comment type="block" pos:start="51:13" pos:end="51:40">/* NEON Data processing.  */</comment>

            <if_stmt pos:start="53:13" pos:end="55:32"><if pos:start="53:13" pos:end="55:32">if <condition pos:start="53:16" pos:end="53:52">(<expr pos:start="53:17" pos:end="53:51"><operator pos:start="53:17" pos:end="53:17">!</operator><call pos:start="53:18" pos:end="53:51"><name pos:start="53:18" pos:end="53:28">arm_feature</name><argument_list pos:start="53:29" pos:end="53:51">(<argument pos:start="53:30" pos:end="53:32"><expr pos:start="53:30" pos:end="53:32"><name pos:start="53:30" pos:end="53:32">env</name></expr></argument>, <argument pos:start="53:35" pos:end="53:50"><expr pos:start="53:35" pos:end="53:50"><name pos:start="53:35" pos:end="53:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:32"><block_content pos:start="55:17" pos:end="55:32">

                <goto pos:start="55:17" pos:end="55:32">goto <name pos:start="55:22" pos:end="55:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="59:13" pos:end="61:32"><if pos:start="59:13" pos:end="61:32">if <condition pos:start="59:16" pos:end="59:51">(<expr pos:start="59:17" pos:end="59:50"><call pos:start="59:17" pos:end="59:50"><name pos:start="59:17" pos:end="59:36">disas_neon_data_insn</name><argument_list pos:start="59:37" pos:end="59:50">(<argument pos:start="59:38" pos:end="59:40"><expr pos:start="59:38" pos:end="59:40"><name pos:start="59:38" pos:end="59:40">env</name></expr></argument>, <argument pos:start="59:43" pos:end="59:43"><expr pos:start="59:43" pos:end="59:43"><name pos:start="59:43" pos:end="59:43">s</name></expr></argument>, <argument pos:start="59:46" pos:end="59:49"><expr pos:start="59:46" pos:end="59:49"><name pos:start="59:46" pos:end="59:49">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:32"><block_content pos:start="61:17" pos:end="61:32">

                <goto pos:start="61:17" pos:end="61:32">goto <name pos:start="61:22" pos:end="61:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="63:13" pos:end="63:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="67:9" pos:end="83:9"><if pos:start="67:9" pos:end="83:9">if <condition pos:start="67:12" pos:end="67:46">(<expr pos:start="67:13" pos:end="67:45"><operator pos:start="67:13" pos:end="67:13">(</operator><name pos:start="67:14" pos:end="67:17">insn</name> <operator pos:start="67:19" pos:end="67:19">&amp;</operator> <literal type="number" pos:start="67:21" pos:end="67:30">0x0f100000</literal><operator pos:start="67:31" pos:end="67:31">)</operator> <operator pos:start="67:33" pos:end="67:34">==</operator> <literal type="number" pos:start="67:36" pos:end="67:45">0x04000000</literal></expr>)</condition> <block pos:start="67:48" pos:end="83:9">{<block_content pos:start="71:13" pos:end="81:19">

            <comment type="block" pos:start="69:13" pos:end="69:35">/* NEON load/store.  */</comment>

            <if_stmt pos:start="71:13" pos:end="73:32"><if pos:start="71:13" pos:end="73:32">if <condition pos:start="71:16" pos:end="71:52">(<expr pos:start="71:17" pos:end="71:51"><operator pos:start="71:17" pos:end="71:17">!</operator><call pos:start="71:18" pos:end="71:51"><name pos:start="71:18" pos:end="71:28">arm_feature</name><argument_list pos:start="71:29" pos:end="71:51">(<argument pos:start="71:30" pos:end="71:32"><expr pos:start="71:30" pos:end="71:32"><name pos:start="71:30" pos:end="71:32">env</name></expr></argument>, <argument pos:start="71:35" pos:end="71:50"><expr pos:start="71:35" pos:end="71:50"><name pos:start="71:35" pos:end="71:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:32"><block_content pos:start="73:17" pos:end="73:32">

                <goto pos:start="73:17" pos:end="73:32">goto <name pos:start="73:22" pos:end="73:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="77:13" pos:end="79:32"><if pos:start="77:13" pos:end="79:32">if <condition pos:start="77:16" pos:end="77:49">(<expr pos:start="77:17" pos:end="77:48"><call pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:34">disas_neon_ls_insn</name><argument_list pos:start="77:35" pos:end="77:48">(<argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">env</name></expr></argument>, <argument pos:start="77:41" pos:end="77:41"><expr pos:start="77:41" pos:end="77:41"><name pos:start="77:41" pos:end="77:41">s</name></expr></argument>, <argument pos:start="77:44" pos:end="77:47"><expr pos:start="77:44" pos:end="77:47"><name pos:start="77:44" pos:end="77:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:32"><block_content pos:start="79:17" pos:end="79:32">

                <goto pos:start="79:17" pos:end="79:32">goto <name pos:start="79:22" pos:end="79:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="81:13" pos:end="81:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="85:9" pos:end="97:9"><if pos:start="85:9" pos:end="97:9">if <condition pos:start="85:12" pos:end="85:46">(<expr pos:start="85:13" pos:end="85:45"><operator pos:start="85:13" pos:end="85:13">(</operator><name pos:start="85:14" pos:end="85:17">insn</name> <operator pos:start="85:19" pos:end="85:19">&amp;</operator> <literal type="number" pos:start="85:21" pos:end="85:30">0x0f000e10</literal><operator pos:start="85:31" pos:end="85:31">)</operator> <operator pos:start="85:33" pos:end="85:34">==</operator> <literal type="number" pos:start="85:36" pos:end="85:45">0x0e000a00</literal></expr>)</condition> <block pos:start="85:48" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:19">

            <comment type="block" pos:start="87:13" pos:end="87:23">/* VFP.  */</comment>

            <if_stmt pos:start="89:13" pos:end="93:13"><if pos:start="89:13" pos:end="93:13">if <condition pos:start="89:16" pos:end="89:45">(<expr pos:start="89:17" pos:end="89:44"><call pos:start="89:17" pos:end="89:44"><name pos:start="89:17" pos:end="89:30">disas_vfp_insn</name><argument_list pos:start="89:31" pos:end="89:44">(<argument pos:start="89:32" pos:end="89:34"><expr pos:start="89:32" pos:end="89:34"><name pos:start="89:32" pos:end="89:34">env</name></expr></argument>, <argument pos:start="89:37" pos:end="89:37"><expr pos:start="89:37" pos:end="89:37"><name pos:start="89:37" pos:end="89:37">s</name></expr></argument>, <argument pos:start="89:40" pos:end="89:43"><expr pos:start="89:40" pos:end="89:43"><name pos:start="89:40" pos:end="89:43">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:47" pos:end="93:13">{<block_content pos:start="91:17" pos:end="91:32">

                <goto pos:start="91:17" pos:end="91:32">goto <name pos:start="91:22" pos:end="91:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="95:13" pos:end="95:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="99:9" pos:end="121:9"><if pos:start="99:9" pos:end="121:9">if <condition pos:start="99:12" pos:end="101:48">(<expr pos:start="99:13" pos:end="101:47"><operator pos:start="99:13" pos:end="99:13">(</operator><operator pos:start="99:14" pos:end="99:14">(</operator><name pos:start="99:15" pos:end="99:18">insn</name> <operator pos:start="99:20" pos:end="99:20">&amp;</operator> <literal type="number" pos:start="99:22" pos:end="99:31">0x0f30f000</literal><operator pos:start="99:32" pos:end="99:32">)</operator> <operator pos:start="99:34" pos:end="99:35">==</operator> <literal type="number" pos:start="99:37" pos:end="99:46">0x0510f000</literal><operator pos:start="99:47" pos:end="99:47">)</operator> <operator pos:start="99:49" pos:end="99:50">||</operator>

            <operator pos:start="101:13" pos:end="101:13">(</operator><operator pos:start="101:14" pos:end="101:14">(</operator><name pos:start="101:15" pos:end="101:18">insn</name> <operator pos:start="101:20" pos:end="101:20">&amp;</operator> <literal type="number" pos:start="101:22" pos:end="101:31">0x0f30f010</literal><operator pos:start="101:32" pos:end="101:32">)</operator> <operator pos:start="101:34" pos:end="101:35">==</operator> <literal type="number" pos:start="101:37" pos:end="101:46">0x0710f000</literal><operator pos:start="101:47" pos:end="101:47">)</operator></expr>)</condition> <block pos:start="101:50" pos:end="121:9">{<block_content pos:start="103:13" pos:end="119:19">

            <if_stmt pos:start="103:13" pos:end="113:13"><if pos:start="103:13" pos:end="113:13">if <condition pos:start="103:16" pos:end="103:40">(<expr pos:start="103:17" pos:end="103:39"><operator pos:start="103:17" pos:end="103:17">(</operator><name pos:start="103:18" pos:end="103:21">insn</name> <operator pos:start="103:23" pos:end="103:23">&amp;</operator> <operator pos:start="103:25" pos:end="103:25">(</operator><literal type="number" pos:start="103:26" pos:end="103:26">1</literal> <operator pos:start="103:28" pos:end="103:29">&lt;&lt;</operator> <literal type="number" pos:start="103:31" pos:end="103:32">22</literal><operator pos:start="103:33" pos:end="103:33">)</operator><operator pos:start="103:34" pos:end="103:34">)</operator> <operator pos:start="103:36" pos:end="103:37">==</operator> <literal type="number" pos:start="103:39" pos:end="103:39">0</literal></expr>)</condition> <block pos:start="103:42" pos:end="113:13">{<block_content pos:start="107:17" pos:end="111:17">

                <comment type="block" pos:start="105:17" pos:end="105:32">/* PLDW; v7MP */</comment>

                <if_stmt pos:start="107:17" pos:end="111:17"><if pos:start="107:17" pos:end="111:17">if <condition pos:start="107:20" pos:end="107:56">(<expr pos:start="107:21" pos:end="107:55"><operator pos:start="107:21" pos:end="107:21">!</operator><call pos:start="107:22" pos:end="107:55"><name pos:start="107:22" pos:end="107:32">arm_feature</name><argument_list pos:start="107:33" pos:end="107:55">(<argument pos:start="107:34" pos:end="107:36"><expr pos:start="107:34" pos:end="107:36"><name pos:start="107:34" pos:end="107:36">env</name></expr></argument>, <argument pos:start="107:39" pos:end="107:54"><expr pos:start="107:39" pos:end="107:54"><name pos:start="107:39" pos:end="107:54">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="107:58" pos:end="111:17">{<block_content pos:start="109:21" pos:end="109:36">

                    <goto pos:start="109:21" pos:end="109:36">goto <name pos:start="109:26" pos:end="109:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="115:13" pos:end="115:38">/* Otherwise PLD; v5TE+ */</comment>

            <expr_stmt pos:start="117:13" pos:end="117:22"><expr pos:start="117:13" pos:end="117:21"><call pos:start="117:13" pos:end="117:21"><name pos:start="117:13" pos:end="117:16">ARCH</name><argument_list pos:start="117:17" pos:end="117:21">(<argument pos:start="117:18" pos:end="117:20"><expr pos:start="117:18" pos:end="117:20"><literal type="number" pos:start="117:18" pos:end="117:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="119:13" pos:end="119:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="123:9" pos:end="131:9"><if pos:start="123:9" pos:end="131:9">if <condition pos:start="123:12" pos:end="125:48">(<expr pos:start="123:13" pos:end="125:47"><operator pos:start="123:13" pos:end="123:13">(</operator><operator pos:start="123:14" pos:end="123:14">(</operator><name pos:start="123:15" pos:end="123:18">insn</name> <operator pos:start="123:20" pos:end="123:20">&amp;</operator> <literal type="number" pos:start="123:22" pos:end="123:31">0x0f70f000</literal><operator pos:start="123:32" pos:end="123:32">)</operator> <operator pos:start="123:34" pos:end="123:35">==</operator> <literal type="number" pos:start="123:37" pos:end="123:46">0x0450f000</literal><operator pos:start="123:47" pos:end="123:47">)</operator> <operator pos:start="123:49" pos:end="123:50">||</operator>

            <operator pos:start="125:13" pos:end="125:13">(</operator><operator pos:start="125:14" pos:end="125:14">(</operator><name pos:start="125:15" pos:end="125:18">insn</name> <operator pos:start="125:20" pos:end="125:20">&amp;</operator> <literal type="number" pos:start="125:22" pos:end="125:31">0x0f70f010</literal><operator pos:start="125:32" pos:end="125:32">)</operator> <operator pos:start="125:34" pos:end="125:35">==</operator> <literal type="number" pos:start="125:37" pos:end="125:46">0x0650f000</literal><operator pos:start="125:47" pos:end="125:47">)</operator></expr>)</condition> <block pos:start="125:50" pos:end="131:9">{<block_content pos:start="127:13" pos:end="129:19">

            <expr_stmt pos:start="127:13" pos:end="127:20"><expr pos:start="127:13" pos:end="127:19"><call pos:start="127:13" pos:end="127:19"><name pos:start="127:13" pos:end="127:16">ARCH</name><argument_list pos:start="127:17" pos:end="127:19">(<argument pos:start="127:18" pos:end="127:18"><expr pos:start="127:18" pos:end="127:18"><literal type="number" pos:start="127:18" pos:end="127:18">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="129:13" pos:end="129:19">return;</return> <comment type="block" pos:start="129:21" pos:end="129:33">/* PLI; V7 */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="133:9" pos:end="145:9"><if pos:start="133:9" pos:end="145:9">if <condition pos:start="133:12" pos:end="135:48">(<expr pos:start="133:13" pos:end="135:47"><operator pos:start="133:13" pos:end="133:13">(</operator><operator pos:start="133:14" pos:end="133:14">(</operator><name pos:start="133:15" pos:end="133:18">insn</name> <operator pos:start="133:20" pos:end="133:20">&amp;</operator> <literal type="number" pos:start="133:22" pos:end="133:31">0x0f700000</literal><operator pos:start="133:32" pos:end="133:32">)</operator> <operator pos:start="133:34" pos:end="133:35">==</operator> <literal type="number" pos:start="133:37" pos:end="133:46">0x04100000</literal><operator pos:start="133:47" pos:end="133:47">)</operator> <operator pos:start="133:49" pos:end="133:50">||</operator>

            <operator pos:start="135:13" pos:end="135:13">(</operator><operator pos:start="135:14" pos:end="135:14">(</operator><name pos:start="135:15" pos:end="135:18">insn</name> <operator pos:start="135:20" pos:end="135:20">&amp;</operator> <literal type="number" pos:start="135:22" pos:end="135:31">0x0f700010</literal><operator pos:start="135:32" pos:end="135:32">)</operator> <operator pos:start="135:34" pos:end="135:35">==</operator> <literal type="number" pos:start="135:37" pos:end="135:46">0x06100000</literal><operator pos:start="135:47" pos:end="135:47">)</operator></expr>)</condition> <block pos:start="135:50" pos:end="145:9">{<block_content pos:start="137:13" pos:end="143:19">

            <if_stmt pos:start="137:13" pos:end="141:13"><if pos:start="137:13" pos:end="141:13">if <condition pos:start="137:16" pos:end="137:52">(<expr pos:start="137:17" pos:end="137:51"><operator pos:start="137:17" pos:end="137:17">!</operator><call pos:start="137:18" pos:end="137:51"><name pos:start="137:18" pos:end="137:28">arm_feature</name><argument_list pos:start="137:29" pos:end="137:51">(<argument pos:start="137:30" pos:end="137:32"><expr pos:start="137:30" pos:end="137:32"><name pos:start="137:30" pos:end="137:32">env</name></expr></argument>, <argument pos:start="137:35" pos:end="137:50"><expr pos:start="137:35" pos:end="137:50"><name pos:start="137:35" pos:end="137:50">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:54" pos:end="141:13">{<block_content pos:start="139:17" pos:end="139:32">

                <goto pos:start="139:17" pos:end="139:32">goto <name pos:start="139:22" pos:end="139:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="143:13" pos:end="143:19">return;</return> <comment type="block" pos:start="143:21" pos:end="143:65">/* v7MP: Unallocated memory hint: must NOP */</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="149:9" pos:end="403:9"><if pos:start="149:9" pos:end="167:9">if <condition pos:start="149:12" pos:end="149:46">(<expr pos:start="149:13" pos:end="149:45"><operator pos:start="149:13" pos:end="149:13">(</operator><name pos:start="149:14" pos:end="149:17">insn</name> <operator pos:start="149:19" pos:end="149:19">&amp;</operator> <literal type="number" pos:start="149:21" pos:end="149:30">0x0ffffdff</literal><operator pos:start="149:31" pos:end="149:31">)</operator> <operator pos:start="149:33" pos:end="149:34">==</operator> <literal type="number" pos:start="149:36" pos:end="149:45">0x01010000</literal></expr>)</condition> <block pos:start="149:48" pos:end="167:9">{<block_content pos:start="151:13" pos:end="165:19">

            <expr_stmt pos:start="151:13" pos:end="151:20"><expr pos:start="151:13" pos:end="151:19"><call pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:16">ARCH</name><argument_list pos:start="151:17" pos:end="151:19">(<argument pos:start="151:18" pos:end="151:18"><expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="153:13" pos:end="153:24">/* setend */</comment>

            <if_stmt pos:start="155:13" pos:end="163:13"><if pos:start="155:13" pos:end="163:13">if <condition pos:start="155:16" pos:end="155:51">(<expr pos:start="155:17" pos:end="155:50"><operator pos:start="155:17" pos:end="155:17">(</operator><operator pos:start="155:18" pos:end="155:18">(</operator><name pos:start="155:19" pos:end="155:22">insn</name> <operator pos:start="155:24" pos:end="155:25">&gt;&gt;</operator> <literal type="number" pos:start="155:27" pos:end="155:27">9</literal><operator pos:start="155:28" pos:end="155:28">)</operator> <operator pos:start="155:30" pos:end="155:30">&amp;</operator> <literal type="number" pos:start="155:32" pos:end="155:32">1</literal><operator pos:start="155:33" pos:end="155:33">)</operator> <operator pos:start="155:35" pos:end="155:36">!=</operator> <name pos:start="155:38" pos:end="155:50"><name pos:start="155:38" pos:end="155:38">s</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:50">bswap_code</name></name></expr>)</condition> <block pos:start="155:53" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:32">

                <comment type="block" pos:start="157:17" pos:end="157:67">/* Dynamic endianness switching not implemented. */</comment>

                <expr_stmt pos:start="159:17" pos:end="159:72"><expr pos:start="159:17" pos:end="159:71"><call pos:start="159:17" pos:end="159:71"><name pos:start="159:17" pos:end="159:29">qemu_log_mask</name><argument_list pos:start="159:30" pos:end="159:71">(<argument pos:start="159:31" pos:end="159:39"><expr pos:start="159:31" pos:end="159:39"><name pos:start="159:31" pos:end="159:39">LOG_UNIMP</name></expr></argument>, <argument pos:start="159:42" pos:end="159:70"><expr pos:start="159:42" pos:end="159:70"><literal type="string" pos:start="159:42" pos:end="159:70">"arm: unimplemented setend\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="161:17" pos:end="161:32">goto <name pos:start="161:22" pos:end="161:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="165:13" pos:end="165:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="167:11" pos:end="197:9">else if <condition pos:start="167:19" pos:end="167:53">(<expr pos:start="167:20" pos:end="167:52"><operator pos:start="167:20" pos:end="167:20">(</operator><name pos:start="167:21" pos:end="167:24">insn</name> <operator pos:start="167:26" pos:end="167:26">&amp;</operator> <literal type="number" pos:start="167:28" pos:end="167:37">0x0fffff00</literal><operator pos:start="167:38" pos:end="167:38">)</operator> <operator pos:start="167:40" pos:end="167:41">==</operator> <literal type="number" pos:start="167:43" pos:end="167:52">0x057ff000</literal></expr>)</condition> <block pos:start="167:55" pos:end="197:9">{<block_content pos:start="169:13" pos:end="195:13">

            <switch pos:start="169:13" pos:end="195:13">switch <condition pos:start="169:20" pos:end="169:38">(<expr pos:start="169:21" pos:end="169:37"><operator pos:start="169:21" pos:end="169:21">(</operator><name pos:start="169:22" pos:end="169:25">insn</name> <operator pos:start="169:27" pos:end="169:28">&gt;&gt;</operator> <literal type="number" pos:start="169:30" pos:end="169:30">4</literal><operator pos:start="169:31" pos:end="169:31">)</operator> <operator pos:start="169:33" pos:end="169:33">&amp;</operator> <literal type="number" pos:start="169:35" pos:end="169:37">0xf</literal></expr>)</condition> <block pos:start="169:40" pos:end="195:13">{<block_content pos:start="171:13" pos:end="193:32">

            <case pos:start="171:13" pos:end="171:19">case <expr pos:start="171:18" pos:end="171:18"><literal type="number" pos:start="171:18" pos:end="171:18">1</literal></expr>:</case> <comment type="block" pos:start="171:21" pos:end="171:31">/* clrex */</comment>

                <expr_stmt pos:start="173:17" pos:end="173:25"><expr pos:start="173:17" pos:end="173:24"><call pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:20">ARCH</name><argument_list pos:start="173:21" pos:end="173:24">(<argument pos:start="173:22" pos:end="173:23"><expr pos:start="173:22" pos:end="173:23"><literal type="number" pos:start="173:22" pos:end="173:23">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:29"><expr pos:start="175:17" pos:end="175:28"><call pos:start="175:17" pos:end="175:28"><name pos:start="175:17" pos:end="175:25">gen_clrex</name><argument_list pos:start="175:26" pos:end="175:28">(<argument pos:start="175:27" pos:end="175:27"><expr pos:start="175:27" pos:end="175:27"><name pos:start="175:27" pos:end="175:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="177:17" pos:end="177:23">return;</return>

            <case pos:start="179:13" pos:end="179:19">case <expr pos:start="179:18" pos:end="179:18"><literal type="number" pos:start="179:18" pos:end="179:18">4</literal></expr>:</case> <comment type="block" pos:start="179:21" pos:end="179:29">/* dsb */</comment>

            <case pos:start="181:13" pos:end="181:19">case <expr pos:start="181:18" pos:end="181:18"><literal type="number" pos:start="181:18" pos:end="181:18">5</literal></expr>:</case> <comment type="block" pos:start="181:21" pos:end="181:29">/* dmb */</comment>

            <case pos:start="183:13" pos:end="183:19">case <expr pos:start="183:18" pos:end="183:18"><literal type="number" pos:start="183:18" pos:end="183:18">6</literal></expr>:</case> <comment type="block" pos:start="183:21" pos:end="183:29">/* isb */</comment>

                <expr_stmt pos:start="185:17" pos:end="185:24"><expr pos:start="185:17" pos:end="185:23"><call pos:start="185:17" pos:end="185:23"><name pos:start="185:17" pos:end="185:20">ARCH</name><argument_list pos:start="185:21" pos:end="185:23">(<argument pos:start="185:22" pos:end="185:22"><expr pos:start="185:22" pos:end="185:22"><literal type="number" pos:start="185:22" pos:end="185:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="187:17" pos:end="187:68">/* We don't emulate caches so these are a no-op.  */</comment>

                <return pos:start="189:17" pos:end="189:23">return;</return>

            <default pos:start="191:13" pos:end="191:20">default:</default>

                <goto pos:start="193:17" pos:end="193:32">goto <name pos:start="193:22" pos:end="193:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="197:11" pos:end="213:9">else if <condition pos:start="197:19" pos:end="197:53">(<expr pos:start="197:20" pos:end="197:52"><operator pos:start="197:20" pos:end="197:20">(</operator><name pos:start="197:21" pos:end="197:24">insn</name> <operator pos:start="197:26" pos:end="197:26">&amp;</operator> <literal type="number" pos:start="197:28" pos:end="197:37">0x0e5fffe0</literal><operator pos:start="197:38" pos:end="197:38">)</operator> <operator pos:start="197:40" pos:end="197:41">==</operator> <literal type="number" pos:start="197:43" pos:end="197:52">0x084d0500</literal></expr>)</condition> <block pos:start="197:55" pos:end="213:9">{<block_content pos:start="201:13" pos:end="211:19">

            <comment type="block" pos:start="199:13" pos:end="199:21">/* srs */</comment>

            <if_stmt pos:start="201:13" pos:end="205:13"><if pos:start="201:13" pos:end="205:13">if <condition pos:start="201:16" pos:end="201:27">(<expr pos:start="201:17" pos:end="201:26"><call pos:start="201:17" pos:end="201:26"><name pos:start="201:17" pos:end="201:23">IS_USER</name><argument_list pos:start="201:24" pos:end="201:26">(<argument pos:start="201:25" pos:end="201:25"><expr pos:start="201:25" pos:end="201:25"><name pos:start="201:25" pos:end="201:25">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:29" pos:end="205:13">{<block_content pos:start="203:17" pos:end="203:32">

                <goto pos:start="203:17" pos:end="203:32">goto <name pos:start="203:22" pos:end="203:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:20"><expr pos:start="207:13" pos:end="207:19"><call pos:start="207:13" pos:end="207:19"><name pos:start="207:13" pos:end="207:16">ARCH</name><argument_list pos:start="207:17" pos:end="207:19">(<argument pos:start="207:18" pos:end="207:18"><expr pos:start="207:18" pos:end="207:18"><literal type="number" pos:start="207:18" pos:end="207:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:74"><expr pos:start="209:13" pos:end="209:73"><call pos:start="209:13" pos:end="209:73"><name pos:start="209:13" pos:end="209:19">gen_srs</name><argument_list pos:start="209:20" pos:end="209:73">(<argument pos:start="209:21" pos:end="209:21"><expr pos:start="209:21" pos:end="209:21"><name pos:start="209:21" pos:end="209:21">s</name></expr></argument>, <argument pos:start="209:24" pos:end="209:36"><expr pos:start="209:24" pos:end="209:36"><operator pos:start="209:24" pos:end="209:24">(</operator><name pos:start="209:25" pos:end="209:28">insn</name> <operator pos:start="209:30" pos:end="209:30">&amp;</operator> <literal type="number" pos:start="209:32" pos:end="209:35">0x1f</literal><operator pos:start="209:36" pos:end="209:36">)</operator></expr></argument>, <argument pos:start="209:39" pos:end="209:54"><expr pos:start="209:39" pos:end="209:54"><operator pos:start="209:39" pos:end="209:39">(</operator><name pos:start="209:40" pos:end="209:43">insn</name> <operator pos:start="209:45" pos:end="209:46">&gt;&gt;</operator> <literal type="number" pos:start="209:48" pos:end="209:49">23</literal><operator pos:start="209:50" pos:end="209:50">)</operator> <operator pos:start="209:52" pos:end="209:52">&amp;</operator> <literal type="number" pos:start="209:54" pos:end="209:54">3</literal></expr></argument>, <argument pos:start="209:57" pos:end="209:72"><expr pos:start="209:57" pos:end="209:72"><name pos:start="209:57" pos:end="209:60">insn</name> <operator pos:start="209:62" pos:end="209:62">&amp;</operator> <operator pos:start="209:64" pos:end="209:64">(</operator><literal type="number" pos:start="209:65" pos:end="209:65">1</literal> <operator pos:start="209:67" pos:end="209:68">&lt;&lt;</operator> <literal type="number" pos:start="209:70" pos:end="209:71">21</literal><operator pos:start="209:72" pos:end="209:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="211:13" pos:end="211:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="213:11" pos:end="295:9">else if <condition pos:start="213:19" pos:end="213:53">(<expr pos:start="213:20" pos:end="213:52"><operator pos:start="213:20" pos:end="213:20">(</operator><name pos:start="213:21" pos:end="213:24">insn</name> <operator pos:start="213:26" pos:end="213:26">&amp;</operator> <literal type="number" pos:start="213:28" pos:end="213:37">0x0e50ffe0</literal><operator pos:start="213:38" pos:end="213:38">)</operator> <operator pos:start="213:40" pos:end="213:41">==</operator> <literal type="number" pos:start="213:43" pos:end="213:52">0x08100a00</literal></expr>)</condition> <block pos:start="213:55" pos:end="295:9">{<block_content pos:start="217:13" pos:end="293:19">

            <comment type="block" pos:start="215:13" pos:end="215:21">/* rfe */</comment>

            <decl_stmt pos:start="217:13" pos:end="217:27"><decl pos:start="217:13" pos:end="217:26"><type pos:start="217:13" pos:end="217:19"><name pos:start="217:13" pos:end="217:19">int32_t</name></type> <name pos:start="217:21" pos:end="217:26">offset</name></decl>;</decl_stmt>

            <if_stmt pos:start="219:13" pos:end="221:32"><if pos:start="219:13" pos:end="221:32">if <condition pos:start="219:16" pos:end="219:27">(<expr pos:start="219:17" pos:end="219:26"><call pos:start="219:17" pos:end="219:26"><name pos:start="219:17" pos:end="219:23">IS_USER</name><argument_list pos:start="219:24" pos:end="219:26">(<argument pos:start="219:25" pos:end="219:25"><expr pos:start="219:25" pos:end="219:25"><name pos:start="219:25" pos:end="219:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="221:17" pos:end="221:32"><block_content pos:start="221:17" pos:end="221:32">

                <goto pos:start="221:17" pos:end="221:32">goto <name pos:start="221:22" pos:end="221:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:20"><expr pos:start="223:13" pos:end="223:19"><call pos:start="223:13" pos:end="223:19"><name pos:start="223:13" pos:end="223:16">ARCH</name><argument_list pos:start="223:17" pos:end="223:19">(<argument pos:start="223:18" pos:end="223:18"><expr pos:start="223:18" pos:end="223:18"><literal type="number" pos:start="223:18" pos:end="223:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:36"><expr pos:start="225:13" pos:end="225:35"><name pos:start="225:13" pos:end="225:14">rn</name> <operator pos:start="225:16" pos:end="225:16">=</operator> <operator pos:start="225:18" pos:end="225:18">(</operator><name pos:start="225:19" pos:end="225:22">insn</name> <operator pos:start="225:24" pos:end="225:25">&gt;&gt;</operator> <literal type="number" pos:start="225:27" pos:end="225:28">16</literal><operator pos:start="225:29" pos:end="225:29">)</operator> <operator pos:start="225:31" pos:end="225:31">&amp;</operator> <literal type="number" pos:start="225:33" pos:end="225:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="227:13" pos:end="227:35"><expr pos:start="227:13" pos:end="227:34"><name pos:start="227:13" pos:end="227:16">addr</name> <operator pos:start="227:18" pos:end="227:18">=</operator> <call pos:start="227:20" pos:end="227:34"><name pos:start="227:20" pos:end="227:27">load_reg</name><argument_list pos:start="227:28" pos:end="227:34">(<argument pos:start="227:29" pos:end="227:29"><expr pos:start="227:29" pos:end="227:29"><name pos:start="227:29" pos:end="227:29">s</name></expr></argument>, <argument pos:start="227:32" pos:end="227:33"><expr pos:start="227:32" pos:end="227:33"><name pos:start="227:32" pos:end="227:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:33"><expr pos:start="229:13" pos:end="229:32"><name pos:start="229:13" pos:end="229:13">i</name> <operator pos:start="229:15" pos:end="229:15">=</operator> <operator pos:start="229:17" pos:end="229:17">(</operator><name pos:start="229:18" pos:end="229:21">insn</name> <operator pos:start="229:23" pos:end="229:24">&gt;&gt;</operator> <literal type="number" pos:start="229:26" pos:end="229:27">23</literal><operator pos:start="229:28" pos:end="229:28">)</operator> <operator pos:start="229:30" pos:end="229:30">&amp;</operator> <literal type="number" pos:start="229:32" pos:end="229:32">3</literal></expr>;</expr_stmt>

            <switch pos:start="231:13" pos:end="243:13">switch <condition pos:start="231:20" pos:end="231:22">(<expr pos:start="231:21" pos:end="231:21"><name pos:start="231:21" pos:end="231:21">i</name></expr>)</condition> <block pos:start="231:24" pos:end="243:13">{<block_content pos:start="233:13" pos:end="241:29">

            <case pos:start="233:13" pos:end="233:19">case <expr pos:start="233:18" pos:end="233:18"><literal type="number" pos:start="233:18" pos:end="233:18">0</literal></expr>:</case> <expr_stmt pos:start="233:21" pos:end="233:32"><expr pos:start="233:21" pos:end="233:31"><name pos:start="233:21" pos:end="233:26">offset</name> <operator pos:start="233:28" pos:end="233:28">=</operator> <operator pos:start="233:30" pos:end="233:30">-</operator><literal type="number" pos:start="233:31" pos:end="233:31">4</literal></expr>;</expr_stmt> <break pos:start="233:34" pos:end="233:39">break;</break> <comment type="block" pos:start="233:41" pos:end="233:48">/* DA */</comment>

            <case pos:start="235:13" pos:end="235:19">case <expr pos:start="235:18" pos:end="235:18"><literal type="number" pos:start="235:18" pos:end="235:18">1</literal></expr>:</case> <expr_stmt pos:start="235:21" pos:end="235:31"><expr pos:start="235:21" pos:end="235:30"><name pos:start="235:21" pos:end="235:26">offset</name> <operator pos:start="235:28" pos:end="235:28">=</operator> <literal type="number" pos:start="235:30" pos:end="235:30">0</literal></expr>;</expr_stmt> <break pos:start="235:33" pos:end="235:38">break;</break> <comment type="block" pos:start="235:40" pos:end="235:47">/* IA */</comment>

            <case pos:start="237:13" pos:end="237:19">case <expr pos:start="237:18" pos:end="237:18"><literal type="number" pos:start="237:18" pos:end="237:18">2</literal></expr>:</case> <expr_stmt pos:start="237:21" pos:end="237:32"><expr pos:start="237:21" pos:end="237:31"><name pos:start="237:21" pos:end="237:26">offset</name> <operator pos:start="237:28" pos:end="237:28">=</operator> <operator pos:start="237:30" pos:end="237:30">-</operator><literal type="number" pos:start="237:31" pos:end="237:31">8</literal></expr>;</expr_stmt> <break pos:start="237:34" pos:end="237:39">break;</break> <comment type="block" pos:start="237:41" pos:end="237:48">/* DB */</comment>

            <case pos:start="239:13" pos:end="239:19">case <expr pos:start="239:18" pos:end="239:18"><literal type="number" pos:start="239:18" pos:end="239:18">3</literal></expr>:</case> <expr_stmt pos:start="239:21" pos:end="239:31"><expr pos:start="239:21" pos:end="239:30"><name pos:start="239:21" pos:end="239:26">offset</name> <operator pos:start="239:28" pos:end="239:28">=</operator> <literal type="number" pos:start="239:30" pos:end="239:30">4</literal></expr>;</expr_stmt> <break pos:start="239:33" pos:end="239:38">break;</break> <comment type="block" pos:start="239:40" pos:end="239:47">/* IB */</comment>

            <default pos:start="241:13" pos:end="241:20">default:</default> <expr_stmt pos:start="241:22" pos:end="241:29"><expr pos:start="241:22" pos:end="241:28"><call pos:start="241:22" pos:end="241:28"><name pos:start="241:22" pos:end="241:26">abort</name><argument_list pos:start="241:27" pos:end="241:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="245:13" pos:end="247:53"><if pos:start="245:13" pos:end="247:53">if <condition pos:start="245:16" pos:end="245:23">(<expr pos:start="245:17" pos:end="245:22"><name pos:start="245:17" pos:end="245:22">offset</name></expr>)</condition><block type="pseudo" pos:start="247:17" pos:end="247:53"><block_content pos:start="247:17" pos:end="247:53">

                <expr_stmt pos:start="247:17" pos:end="247:53"><expr pos:start="247:17" pos:end="247:52"><call pos:start="247:17" pos:end="247:52"><name pos:start="247:17" pos:end="247:32">tcg_gen_addi_i32</name><argument_list pos:start="247:33" pos:end="247:52">(<argument pos:start="247:34" pos:end="247:37"><expr pos:start="247:34" pos:end="247:37"><name pos:start="247:34" pos:end="247:37">addr</name></expr></argument>, <argument pos:start="247:40" pos:end="247:43"><expr pos:start="247:40" pos:end="247:43"><name pos:start="247:40" pos:end="247:43">addr</name></expr></argument>, <argument pos:start="247:46" pos:end="247:51"><expr pos:start="247:46" pos:end="247:51"><name pos:start="247:46" pos:end="247:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="249:13" pos:end="249:55">/* Load PC into tmp and CPSR into tmp2.  */</comment>

            <expr_stmt pos:start="251:13" pos:end="251:37"><expr pos:start="251:13" pos:end="251:36"><name pos:start="251:13" pos:end="251:15">tmp</name> <operator pos:start="251:17" pos:end="251:17">=</operator> <call pos:start="251:19" pos:end="251:36"><name pos:start="251:19" pos:end="251:34">tcg_temp_new_i32</name><argument_list pos:start="251:35" pos:end="251:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:41"><expr pos:start="253:13" pos:end="253:40"><call pos:start="253:13" pos:end="253:40"><name pos:start="253:13" pos:end="253:26">gen_aa32_ld32u</name><argument_list pos:start="253:27" pos:end="253:40">(<argument pos:start="253:28" pos:end="253:30"><expr pos:start="253:28" pos:end="253:30"><name pos:start="253:28" pos:end="253:30">tmp</name></expr></argument>, <argument pos:start="253:33" pos:end="253:36"><expr pos:start="253:33" pos:end="253:36"><name pos:start="253:33" pos:end="253:36">addr</name></expr></argument>, <argument pos:start="253:39" pos:end="253:39"><expr pos:start="253:39" pos:end="253:39"><literal type="number" pos:start="253:39" pos:end="253:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:44"><expr pos:start="255:13" pos:end="255:43"><call pos:start="255:13" pos:end="255:43"><name pos:start="255:13" pos:end="255:28">tcg_gen_addi_i32</name><argument_list pos:start="255:29" pos:end="255:43">(<argument pos:start="255:30" pos:end="255:33"><expr pos:start="255:30" pos:end="255:33"><name pos:start="255:30" pos:end="255:33">addr</name></expr></argument>, <argument pos:start="255:36" pos:end="255:39"><expr pos:start="255:36" pos:end="255:39"><name pos:start="255:36" pos:end="255:39">addr</name></expr></argument>, <argument pos:start="255:42" pos:end="255:42"><expr pos:start="255:42" pos:end="255:42"><literal type="number" pos:start="255:42" pos:end="255:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:38"><expr pos:start="257:13" pos:end="257:37"><name pos:start="257:13" pos:end="257:16">tmp2</name> <operator pos:start="257:18" pos:end="257:18">=</operator> <call pos:start="257:20" pos:end="257:37"><name pos:start="257:20" pos:end="257:35">tcg_temp_new_i32</name><argument_list pos:start="257:36" pos:end="257:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:42"><expr pos:start="259:13" pos:end="259:41"><call pos:start="259:13" pos:end="259:41"><name pos:start="259:13" pos:end="259:26">gen_aa32_ld32u</name><argument_list pos:start="259:27" pos:end="259:41">(<argument pos:start="259:28" pos:end="259:31"><expr pos:start="259:28" pos:end="259:31"><name pos:start="259:28" pos:end="259:31">tmp2</name></expr></argument>, <argument pos:start="259:34" pos:end="259:37"><expr pos:start="259:34" pos:end="259:37"><name pos:start="259:34" pos:end="259:37">addr</name></expr></argument>, <argument pos:start="259:40" pos:end="259:40"><expr pos:start="259:40" pos:end="259:40"><literal type="number" pos:start="259:40" pos:end="259:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="289:13"><if pos:start="261:13" pos:end="285:13">if <condition pos:start="261:16" pos:end="261:33">(<expr pos:start="261:17" pos:end="261:32"><name pos:start="261:17" pos:end="261:20">insn</name> <operator pos:start="261:22" pos:end="261:22">&amp;</operator> <operator pos:start="261:24" pos:end="261:24">(</operator><literal type="number" pos:start="261:25" pos:end="261:25">1</literal> <operator pos:start="261:27" pos:end="261:28">&lt;&lt;</operator> <literal type="number" pos:start="261:30" pos:end="261:31">21</literal><operator pos:start="261:32" pos:end="261:32">)</operator></expr>)</condition> <block pos:start="261:35" pos:end="285:13">{<block_content pos:start="265:17" pos:end="283:39">

                <comment type="block" pos:start="263:17" pos:end="263:38">/* Base writeback.  */</comment>

                <switch pos:start="265:17" pos:end="277:17">switch <condition pos:start="265:24" pos:end="265:26">(<expr pos:start="265:25" pos:end="265:25"><name pos:start="265:25" pos:end="265:25">i</name></expr>)</condition> <block pos:start="265:28" pos:end="277:17">{<block_content pos:start="267:17" pos:end="275:33">

                <case pos:start="267:17" pos:end="267:23">case <expr pos:start="267:22" pos:end="267:22"><literal type="number" pos:start="267:22" pos:end="267:22">0</literal></expr>:</case> <expr_stmt pos:start="267:25" pos:end="267:36"><expr pos:start="267:25" pos:end="267:35"><name pos:start="267:25" pos:end="267:30">offset</name> <operator pos:start="267:32" pos:end="267:32">=</operator> <operator pos:start="267:34" pos:end="267:34">-</operator><literal type="number" pos:start="267:35" pos:end="267:35">8</literal></expr>;</expr_stmt> <break pos:start="267:38" pos:end="267:43">break;</break>

                <case pos:start="269:17" pos:end="269:23">case <expr pos:start="269:22" pos:end="269:22"><literal type="number" pos:start="269:22" pos:end="269:22">1</literal></expr>:</case> <expr_stmt pos:start="269:25" pos:end="269:35"><expr pos:start="269:25" pos:end="269:34"><name pos:start="269:25" pos:end="269:30">offset</name> <operator pos:start="269:32" pos:end="269:32">=</operator> <literal type="number" pos:start="269:34" pos:end="269:34">4</literal></expr>;</expr_stmt> <break pos:start="269:37" pos:end="269:42">break;</break>

                <case pos:start="271:17" pos:end="271:23">case <expr pos:start="271:22" pos:end="271:22"><literal type="number" pos:start="271:22" pos:end="271:22">2</literal></expr>:</case> <expr_stmt pos:start="271:25" pos:end="271:36"><expr pos:start="271:25" pos:end="271:35"><name pos:start="271:25" pos:end="271:30">offset</name> <operator pos:start="271:32" pos:end="271:32">=</operator> <operator pos:start="271:34" pos:end="271:34">-</operator><literal type="number" pos:start="271:35" pos:end="271:35">4</literal></expr>;</expr_stmt> <break pos:start="271:38" pos:end="271:43">break;</break>

                <case pos:start="273:17" pos:end="273:23">case <expr pos:start="273:22" pos:end="273:22"><literal type="number" pos:start="273:22" pos:end="273:22">3</literal></expr>:</case> <expr_stmt pos:start="273:25" pos:end="273:35"><expr pos:start="273:25" pos:end="273:34"><name pos:start="273:25" pos:end="273:30">offset</name> <operator pos:start="273:32" pos:end="273:32">=</operator> <literal type="number" pos:start="273:34" pos:end="273:34">0</literal></expr>;</expr_stmt> <break pos:start="273:37" pos:end="273:42">break;</break>

                <default pos:start="275:17" pos:end="275:24">default:</default> <expr_stmt pos:start="275:26" pos:end="275:33"><expr pos:start="275:26" pos:end="275:32"><call pos:start="275:26" pos:end="275:32"><name pos:start="275:26" pos:end="275:30">abort</name><argument_list pos:start="275:31" pos:end="275:32">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="279:17" pos:end="281:57"><if pos:start="279:17" pos:end="281:57">if <condition pos:start="279:20" pos:end="279:27">(<expr pos:start="279:21" pos:end="279:26"><name pos:start="279:21" pos:end="279:26">offset</name></expr>)</condition><block type="pseudo" pos:start="281:21" pos:end="281:57"><block_content pos:start="281:21" pos:end="281:57">

                    <expr_stmt pos:start="281:21" pos:end="281:57"><expr pos:start="281:21" pos:end="281:56"><call pos:start="281:21" pos:end="281:56"><name pos:start="281:21" pos:end="281:36">tcg_gen_addi_i32</name><argument_list pos:start="281:37" pos:end="281:56">(<argument pos:start="281:38" pos:end="281:41"><expr pos:start="281:38" pos:end="281:41"><name pos:start="281:38" pos:end="281:41">addr</name></expr></argument>, <argument pos:start="281:44" pos:end="281:47"><expr pos:start="281:44" pos:end="281:47"><name pos:start="281:44" pos:end="281:47">addr</name></expr></argument>, <argument pos:start="281:50" pos:end="281:55"><expr pos:start="281:50" pos:end="281:55"><name pos:start="281:50" pos:end="281:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="283:17" pos:end="283:39"><expr pos:start="283:17" pos:end="283:38"><call pos:start="283:17" pos:end="283:38"><name pos:start="283:17" pos:end="283:25">store_reg</name><argument_list pos:start="283:26" pos:end="283:38">(<argument pos:start="283:27" pos:end="283:27"><expr pos:start="283:27" pos:end="283:27"><name pos:start="283:27" pos:end="283:27">s</name></expr></argument>, <argument pos:start="283:30" pos:end="283:31"><expr pos:start="283:30" pos:end="283:31"><name pos:start="283:30" pos:end="283:31">rn</name></expr></argument>, <argument pos:start="283:34" pos:end="283:37"><expr pos:start="283:34" pos:end="283:37"><name pos:start="283:34" pos:end="283:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="285:15" pos:end="289:13">else <block pos:start="285:20" pos:end="289:13">{<block_content pos:start="287:17" pos:end="287:40">

                <expr_stmt pos:start="287:17" pos:end="287:40"><expr pos:start="287:17" pos:end="287:39"><call pos:start="287:17" pos:end="287:39"><name pos:start="287:17" pos:end="287:33">tcg_temp_free_i32</name><argument_list pos:start="287:34" pos:end="287:39">(<argument pos:start="287:35" pos:end="287:38"><expr pos:start="287:35" pos:end="287:38"><name pos:start="287:35" pos:end="287:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:34"><expr pos:start="291:13" pos:end="291:33"><call pos:start="291:13" pos:end="291:33"><name pos:start="291:13" pos:end="291:19">gen_rfe</name><argument_list pos:start="291:20" pos:end="291:33">(<argument pos:start="291:21" pos:end="291:21"><expr pos:start="291:21" pos:end="291:21"><name pos:start="291:21" pos:end="291:21">s</name></expr></argument>, <argument pos:start="291:24" pos:end="291:26"><expr pos:start="291:24" pos:end="291:26"><name pos:start="291:24" pos:end="291:26">tmp</name></expr></argument>, <argument pos:start="291:29" pos:end="291:32"><expr pos:start="291:29" pos:end="291:32"><name pos:start="291:29" pos:end="291:32">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="293:13" pos:end="293:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="295:11" pos:end="329:9">else if <condition pos:start="295:19" pos:end="295:53">(<expr pos:start="295:20" pos:end="295:52"><operator pos:start="295:20" pos:end="295:20">(</operator><name pos:start="295:21" pos:end="295:24">insn</name> <operator pos:start="295:26" pos:end="295:26">&amp;</operator> <literal type="number" pos:start="295:28" pos:end="295:37">0x0e000000</literal><operator pos:start="295:38" pos:end="295:38">)</operator> <operator pos:start="295:40" pos:end="295:41">==</operator> <literal type="number" pos:start="295:43" pos:end="295:52">0x0a000000</literal></expr>)</condition> <block pos:start="295:55" pos:end="329:9">{<block_content pos:start="299:13" pos:end="327:19">

            <comment type="block" pos:start="297:13" pos:end="297:64">/* branch link and change to thumb (blx &lt;offset&gt;) */</comment>

            <decl_stmt pos:start="299:13" pos:end="299:27"><decl pos:start="299:13" pos:end="299:26"><type pos:start="299:13" pos:end="299:19"><name pos:start="299:13" pos:end="299:19">int32_t</name></type> <name pos:start="299:21" pos:end="299:26">offset</name></decl>;</decl_stmt>



            <expr_stmt pos:start="303:13" pos:end="303:34"><expr pos:start="303:13" pos:end="303:33"><name pos:start="303:13" pos:end="303:15">val</name> <operator pos:start="303:17" pos:end="303:17">=</operator> <operator pos:start="303:19" pos:end="303:19">(</operator><name pos:start="303:20" pos:end="303:27">uint32_t</name><operator pos:start="303:28" pos:end="303:28">)</operator><name pos:start="303:29" pos:end="303:33"><name pos:start="303:29" pos:end="303:29">s</name><operator pos:start="303:30" pos:end="303:31">-&gt;</operator><name pos:start="303:32" pos:end="303:33">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:37"><expr pos:start="305:13" pos:end="305:36"><name pos:start="305:13" pos:end="305:15">tmp</name> <operator pos:start="305:17" pos:end="305:17">=</operator> <call pos:start="305:19" pos:end="305:36"><name pos:start="305:19" pos:end="305:34">tcg_temp_new_i32</name><argument_list pos:start="305:35" pos:end="305:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:39"><expr pos:start="307:13" pos:end="307:38"><call pos:start="307:13" pos:end="307:38"><name pos:start="307:13" pos:end="307:28">tcg_gen_movi_i32</name><argument_list pos:start="307:29" pos:end="307:38">(<argument pos:start="307:30" pos:end="307:32"><expr pos:start="307:30" pos:end="307:32"><name pos:start="307:30" pos:end="307:32">tmp</name></expr></argument>, <argument pos:start="307:35" pos:end="307:37"><expr pos:start="307:35" pos:end="307:37"><name pos:start="307:35" pos:end="307:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="309:13" pos:end="309:34"><expr pos:start="309:13" pos:end="309:33"><call pos:start="309:13" pos:end="309:33"><name pos:start="309:13" pos:end="309:21">store_reg</name><argument_list pos:start="309:22" pos:end="309:33">(<argument pos:start="309:23" pos:end="309:23"><expr pos:start="309:23" pos:end="309:23"><name pos:start="309:23" pos:end="309:23">s</name></expr></argument>, <argument pos:start="309:26" pos:end="309:27"><expr pos:start="309:26" pos:end="309:27"><literal type="number" pos:start="309:26" pos:end="309:27">14</literal></expr></argument>, <argument pos:start="309:30" pos:end="309:32"><expr pos:start="309:30" pos:end="309:32"><name pos:start="309:30" pos:end="309:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="311:13" pos:end="311:47">/* Sign-extend the 24-bit offset */</comment>

            <expr_stmt pos:start="313:13" pos:end="313:49"><expr pos:start="313:13" pos:end="313:48"><name pos:start="313:13" pos:end="313:18">offset</name> <operator pos:start="313:20" pos:end="313:20">=</operator> <operator pos:start="313:22" pos:end="313:22">(</operator><operator pos:start="313:23" pos:end="313:23">(</operator><operator pos:start="313:24" pos:end="313:24">(</operator><name pos:start="313:25" pos:end="313:31">int32_t</name><operator pos:start="313:32" pos:end="313:32">)</operator><name pos:start="313:33" pos:end="313:36">insn</name><operator pos:start="313:37" pos:end="313:37">)</operator> <operator pos:start="313:39" pos:end="313:40">&lt;&lt;</operator> <literal type="number" pos:start="313:42" pos:end="313:42">8</literal><operator pos:start="313:43" pos:end="313:43">)</operator> <operator pos:start="313:45" pos:end="313:46">&gt;&gt;</operator> <literal type="number" pos:start="313:48" pos:end="313:48">8</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="315:13" pos:end="315:54">/* offset * 4 + bit24 * 2 + (thumb bit) */</comment>

            <expr_stmt pos:start="317:13" pos:end="317:58"><expr pos:start="317:13" pos:end="317:57"><name pos:start="317:13" pos:end="317:15">val</name> <operator pos:start="317:17" pos:end="317:18">+=</operator> <operator pos:start="317:20" pos:end="317:20">(</operator><name pos:start="317:21" pos:end="317:26">offset</name> <operator pos:start="317:28" pos:end="317:29">&lt;&lt;</operator> <literal type="number" pos:start="317:31" pos:end="317:31">2</literal><operator pos:start="317:32" pos:end="317:32">)</operator> <operator pos:start="317:34" pos:end="317:34">|</operator> <operator pos:start="317:36" pos:end="317:36">(</operator><operator pos:start="317:37" pos:end="317:37">(</operator><name pos:start="317:38" pos:end="317:41">insn</name> <operator pos:start="317:43" pos:end="317:44">&gt;&gt;</operator> <literal type="number" pos:start="317:46" pos:end="317:47">23</literal><operator pos:start="317:48" pos:end="317:48">)</operator> <operator pos:start="317:50" pos:end="317:50">&amp;</operator> <literal type="number" pos:start="317:52" pos:end="317:52">2</literal><operator pos:start="317:53" pos:end="317:53">)</operator> <operator pos:start="317:55" pos:end="317:55">|</operator> <literal type="number" pos:start="317:57" pos:end="317:57">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="319:13" pos:end="319:33">/* pipeline offset */</comment>

            <expr_stmt pos:start="321:13" pos:end="321:21"><expr pos:start="321:13" pos:end="321:20"><name pos:start="321:13" pos:end="321:15">val</name> <operator pos:start="321:17" pos:end="321:18">+=</operator> <literal type="number" pos:start="321:20" pos:end="321:20">4</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="323:13" pos:end="323:77">/* protected by ARCH(5); above, near the start of uncond block */</comment>

            <expr_stmt pos:start="325:13" pos:end="325:30"><expr pos:start="325:13" pos:end="325:29"><call pos:start="325:13" pos:end="325:29"><name pos:start="325:13" pos:end="325:21">gen_bx_im</name><argument_list pos:start="325:22" pos:end="325:29">(<argument pos:start="325:23" pos:end="325:23"><expr pos:start="325:23" pos:end="325:23"><name pos:start="325:23" pos:end="325:23">s</name></expr></argument>, <argument pos:start="325:26" pos:end="325:28"><expr pos:start="325:26" pos:end="325:28"><name pos:start="325:26" pos:end="325:28">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="327:13" pos:end="327:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="329:11" pos:end="343:9">else if <condition pos:start="329:19" pos:end="329:53">(<expr pos:start="329:20" pos:end="329:52"><operator pos:start="329:20" pos:end="329:20">(</operator><name pos:start="329:21" pos:end="329:24">insn</name> <operator pos:start="329:26" pos:end="329:26">&amp;</operator> <literal type="number" pos:start="329:28" pos:end="329:37">0x0e000f00</literal><operator pos:start="329:38" pos:end="329:38">)</operator> <operator pos:start="329:40" pos:end="329:41">==</operator> <literal type="number" pos:start="329:43" pos:end="329:52">0x0c000100</literal></expr>)</condition> <block pos:start="329:55" pos:end="343:9">{<block_content pos:start="331:13" pos:end="341:13">

            <if_stmt pos:start="331:13" pos:end="341:13"><if pos:start="331:13" pos:end="341:13">if <condition pos:start="331:16" pos:end="331:53">(<expr pos:start="331:17" pos:end="331:52"><call pos:start="331:17" pos:end="331:52"><name pos:start="331:17" pos:end="331:27">arm_feature</name><argument_list pos:start="331:28" pos:end="331:52">(<argument pos:start="331:29" pos:end="331:31"><expr pos:start="331:29" pos:end="331:31"><name pos:start="331:29" pos:end="331:31">env</name></expr></argument>, <argument pos:start="331:34" pos:end="331:51"><expr pos:start="331:34" pos:end="331:51"><name pos:start="331:34" pos:end="331:51">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:55" pos:end="341:13">{<block_content pos:start="335:17" pos:end="339:31">

                <comment type="block" pos:start="333:17" pos:end="333:48">/* iWMMXt register transfer.  */</comment>

                <if_stmt pos:start="335:17" pos:end="339:31"><if pos:start="335:17" pos:end="339:31">if <condition pos:start="335:20" pos:end="335:50">(<expr pos:start="335:21" pos:end="335:49"><name pos:start="335:21" pos:end="335:38"><name pos:start="335:21" pos:end="335:23">env</name><operator pos:start="335:24" pos:end="335:25">-&gt;</operator><name pos:start="335:26" pos:end="335:29">cp15</name><operator pos:start="335:30" pos:end="335:30">.</operator><name pos:start="335:31" pos:end="335:38">c15_cpar</name></name> <operator pos:start="335:40" pos:end="335:40">&amp;</operator> <operator pos:start="335:42" pos:end="335:42">(</operator><literal type="number" pos:start="335:43" pos:end="335:43">1</literal> <operator pos:start="335:45" pos:end="335:46">&lt;&lt;</operator> <literal type="number" pos:start="335:48" pos:end="335:48">1</literal><operator pos:start="335:49" pos:end="335:49">)</operator></expr>)</condition><block type="pseudo" pos:start="337:21" pos:end="339:31"><block_content pos:start="337:21" pos:end="339:31">

                    <if_stmt pos:start="337:21" pos:end="339:31"><if pos:start="337:21" pos:end="339:31">if <condition pos:start="337:24" pos:end="337:57">(<expr pos:start="337:25" pos:end="337:56"><operator pos:start="337:25" pos:end="337:25">!</operator><call pos:start="337:26" pos:end="337:56"><name pos:start="337:26" pos:end="337:42">disas_iwmmxt_insn</name><argument_list pos:start="337:43" pos:end="337:56">(<argument pos:start="337:44" pos:end="337:46"><expr pos:start="337:44" pos:end="337:46"><name pos:start="337:44" pos:end="337:46">env</name></expr></argument>, <argument pos:start="337:49" pos:end="337:49"><expr pos:start="337:49" pos:end="337:49"><name pos:start="337:49" pos:end="337:49">s</name></expr></argument>, <argument pos:start="337:52" pos:end="337:55"><expr pos:start="337:52" pos:end="337:55"><name pos:start="337:52" pos:end="337:55">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="339:25" pos:end="339:31"><block_content pos:start="339:25" pos:end="339:31">

                        <return pos:start="339:25" pos:end="339:31">return;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="343:11" pos:end="349:9">else if <condition pos:start="343:19" pos:end="343:53">(<expr pos:start="343:20" pos:end="343:52"><operator pos:start="343:20" pos:end="343:20">(</operator><name pos:start="343:21" pos:end="343:24">insn</name> <operator pos:start="343:26" pos:end="343:26">&amp;</operator> <literal type="number" pos:start="343:28" pos:end="343:37">0x0fe00000</literal><operator pos:start="343:38" pos:end="343:38">)</operator> <operator pos:start="343:40" pos:end="343:41">==</operator> <literal type="number" pos:start="343:43" pos:end="343:52">0x0c400000</literal></expr>)</condition> <block pos:start="343:55" pos:end="349:9">{<block_content pos:start="347:13" pos:end="347:22">

            <comment type="block" pos:start="345:13" pos:end="345:56">/* Coprocessor double register transfer.  */</comment>

            <expr_stmt pos:start="347:13" pos:end="347:22"><expr pos:start="347:13" pos:end="347:21"><call pos:start="347:13" pos:end="347:21"><name pos:start="347:13" pos:end="347:16">ARCH</name><argument_list pos:start="347:17" pos:end="347:21">(<argument pos:start="347:18" pos:end="347:20"><expr pos:start="347:18" pos:end="347:20"><literal type="number" pos:start="347:18" pos:end="347:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="349:11" pos:end="353:9">else if <condition pos:start="349:19" pos:end="349:53">(<expr pos:start="349:20" pos:end="349:52"><operator pos:start="349:20" pos:end="349:20">(</operator><name pos:start="349:21" pos:end="349:24">insn</name> <operator pos:start="349:26" pos:end="349:26">&amp;</operator> <literal type="number" pos:start="349:28" pos:end="349:37">0x0f000010</literal><operator pos:start="349:38" pos:end="349:38">)</operator> <operator pos:start="349:40" pos:end="349:41">==</operator> <literal type="number" pos:start="349:43" pos:end="349:52">0x0e000010</literal></expr>)</condition> <block pos:start="349:55" pos:end="353:9">{<block_content>

            <comment type="block" pos:start="351:13" pos:end="351:60">/* Additional coprocessor register transfer.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="353:11" pos:end="403:9">else if <condition pos:start="353:19" pos:end="353:53">(<expr pos:start="353:20" pos:end="353:52"><operator pos:start="353:20" pos:end="353:20">(</operator><name pos:start="353:21" pos:end="353:24">insn</name> <operator pos:start="353:26" pos:end="353:26">&amp;</operator> <literal type="number" pos:start="353:28" pos:end="353:37">0x0ff10020</literal><operator pos:start="353:38" pos:end="353:38">)</operator> <operator pos:start="353:40" pos:end="353:41">==</operator> <literal type="number" pos:start="353:43" pos:end="353:52">0x01000000</literal></expr>)</condition> <block pos:start="353:55" pos:end="403:9">{<block_content pos:start="355:13" pos:end="401:19">

            <decl_stmt pos:start="355:13" pos:end="355:26"><decl pos:start="355:13" pos:end="355:25"><type pos:start="355:13" pos:end="355:20"><name pos:start="355:13" pos:end="355:20">uint32_t</name></type> <name pos:start="355:22" pos:end="355:25">mask</name></decl>;</decl_stmt>

            <decl_stmt pos:start="357:13" pos:end="357:25"><decl pos:start="357:13" pos:end="357:24"><type pos:start="357:13" pos:end="357:20"><name pos:start="357:13" pos:end="357:20">uint32_t</name></type> <name pos:start="357:22" pos:end="357:24">val</name></decl>;</decl_stmt>

            <comment type="block" pos:start="359:13" pos:end="359:34">/* cps (privileged) */</comment>

            <if_stmt pos:start="361:13" pos:end="363:23"><if pos:start="361:13" pos:end="363:23">if <condition pos:start="361:16" pos:end="361:27">(<expr pos:start="361:17" pos:end="361:26"><call pos:start="361:17" pos:end="361:26"><name pos:start="361:17" pos:end="361:23">IS_USER</name><argument_list pos:start="361:24" pos:end="361:26">(<argument pos:start="361:25" pos:end="361:25"><expr pos:start="361:25" pos:end="361:25"><name pos:start="361:25" pos:end="361:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="363:17" pos:end="363:23"><block_content pos:start="363:17" pos:end="363:23">

                <return pos:start="363:17" pos:end="363:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="365:13" pos:end="365:27"><expr pos:start="365:13" pos:end="365:26"><name pos:start="365:13" pos:end="365:16">mask</name> <operator pos:start="365:18" pos:end="365:18">=</operator> <name pos:start="365:20" pos:end="365:22">val</name> <operator pos:start="365:24" pos:end="365:24">=</operator> <literal type="number" pos:start="365:26" pos:end="365:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="367:13" pos:end="385:13"><if pos:start="367:13" pos:end="385:13">if <condition pos:start="367:16" pos:end="367:33">(<expr pos:start="367:17" pos:end="367:32"><name pos:start="367:17" pos:end="367:20">insn</name> <operator pos:start="367:22" pos:end="367:22">&amp;</operator> <operator pos:start="367:24" pos:end="367:24">(</operator><literal type="number" pos:start="367:25" pos:end="367:25">1</literal> <operator pos:start="367:27" pos:end="367:28">&lt;&lt;</operator> <literal type="number" pos:start="367:30" pos:end="367:31">19</literal><operator pos:start="367:32" pos:end="367:32">)</operator></expr>)</condition> <block pos:start="367:35" pos:end="385:13">{<block_content pos:start="369:17" pos:end="383:32">

                <if_stmt pos:start="369:17" pos:end="371:35"><if pos:start="369:17" pos:end="371:35">if <condition pos:start="369:20" pos:end="369:36">(<expr pos:start="369:21" pos:end="369:35"><name pos:start="369:21" pos:end="369:24">insn</name> <operator pos:start="369:26" pos:end="369:26">&amp;</operator> <operator pos:start="369:28" pos:end="369:28">(</operator><literal type="number" pos:start="369:29" pos:end="369:29">1</literal> <operator pos:start="369:31" pos:end="369:32">&lt;&lt;</operator> <literal type="number" pos:start="369:34" pos:end="369:34">8</literal><operator pos:start="369:35" pos:end="369:35">)</operator></expr>)</condition><block type="pseudo" pos:start="371:21" pos:end="371:35"><block_content pos:start="371:21" pos:end="371:35">

                    <expr_stmt pos:start="371:21" pos:end="371:35"><expr pos:start="371:21" pos:end="371:34"><name pos:start="371:21" pos:end="371:24">mask</name> <operator pos:start="371:26" pos:end="371:27">|=</operator> <name pos:start="371:29" pos:end="371:34">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="373:17" pos:end="375:35"><if pos:start="373:17" pos:end="375:35">if <condition pos:start="373:20" pos:end="373:36">(<expr pos:start="373:21" pos:end="373:35"><name pos:start="373:21" pos:end="373:24">insn</name> <operator pos:start="373:26" pos:end="373:26">&amp;</operator> <operator pos:start="373:28" pos:end="373:28">(</operator><literal type="number" pos:start="373:29" pos:end="373:29">1</literal> <operator pos:start="373:31" pos:end="373:32">&lt;&lt;</operator> <literal type="number" pos:start="373:34" pos:end="373:34">7</literal><operator pos:start="373:35" pos:end="373:35">)</operator></expr>)</condition><block type="pseudo" pos:start="375:21" pos:end="375:35"><block_content pos:start="375:21" pos:end="375:35">

                    <expr_stmt pos:start="375:21" pos:end="375:35"><expr pos:start="375:21" pos:end="375:34"><name pos:start="375:21" pos:end="375:24">mask</name> <operator pos:start="375:26" pos:end="375:27">|=</operator> <name pos:start="375:29" pos:end="375:34">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="377:17" pos:end="379:35"><if pos:start="377:17" pos:end="379:35">if <condition pos:start="377:20" pos:end="377:36">(<expr pos:start="377:21" pos:end="377:35"><name pos:start="377:21" pos:end="377:24">insn</name> <operator pos:start="377:26" pos:end="377:26">&amp;</operator> <operator pos:start="377:28" pos:end="377:28">(</operator><literal type="number" pos:start="377:29" pos:end="377:29">1</literal> <operator pos:start="377:31" pos:end="377:32">&lt;&lt;</operator> <literal type="number" pos:start="377:34" pos:end="377:34">6</literal><operator pos:start="377:35" pos:end="377:35">)</operator></expr>)</condition><block type="pseudo" pos:start="379:21" pos:end="379:35"><block_content pos:start="379:21" pos:end="379:35">

                    <expr_stmt pos:start="379:21" pos:end="379:35"><expr pos:start="379:21" pos:end="379:34"><name pos:start="379:21" pos:end="379:24">mask</name> <operator pos:start="379:26" pos:end="379:27">|=</operator> <name pos:start="379:29" pos:end="379:34">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="381:17" pos:end="383:32"><if pos:start="381:17" pos:end="383:32">if <condition pos:start="381:20" pos:end="381:37">(<expr pos:start="381:21" pos:end="381:36"><name pos:start="381:21" pos:end="381:24">insn</name> <operator pos:start="381:26" pos:end="381:26">&amp;</operator> <operator pos:start="381:28" pos:end="381:28">(</operator><literal type="number" pos:start="381:29" pos:end="381:29">1</literal> <operator pos:start="381:31" pos:end="381:32">&lt;&lt;</operator> <literal type="number" pos:start="381:34" pos:end="381:35">18</literal><operator pos:start="381:36" pos:end="381:36">)</operator></expr>)</condition><block type="pseudo" pos:start="383:21" pos:end="383:32"><block_content pos:start="383:21" pos:end="383:32">

                    <expr_stmt pos:start="383:21" pos:end="383:32"><expr pos:start="383:21" pos:end="383:31"><name pos:start="383:21" pos:end="383:23">val</name> <operator pos:start="383:25" pos:end="383:26">|=</operator> <name pos:start="383:28" pos:end="383:31">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="387:13" pos:end="393:13"><if pos:start="387:13" pos:end="393:13">if <condition pos:start="387:16" pos:end="387:33">(<expr pos:start="387:17" pos:end="387:32"><name pos:start="387:17" pos:end="387:20">insn</name> <operator pos:start="387:22" pos:end="387:22">&amp;</operator> <operator pos:start="387:24" pos:end="387:24">(</operator><literal type="number" pos:start="387:25" pos:end="387:25">1</literal> <operator pos:start="387:27" pos:end="387:28">&lt;&lt;</operator> <literal type="number" pos:start="387:30" pos:end="387:31">17</literal><operator pos:start="387:32" pos:end="387:32">)</operator></expr>)</condition> <block pos:start="387:35" pos:end="393:13">{<block_content pos:start="389:17" pos:end="391:37">

                <expr_stmt pos:start="389:17" pos:end="389:31"><expr pos:start="389:17" pos:end="389:30"><name pos:start="389:17" pos:end="389:20">mask</name> <operator pos:start="389:22" pos:end="389:23">|=</operator> <name pos:start="389:25" pos:end="389:30">CPSR_M</name></expr>;</expr_stmt>

                <expr_stmt pos:start="391:17" pos:end="391:37"><expr pos:start="391:17" pos:end="391:36"><name pos:start="391:17" pos:end="391:19">val</name> <operator pos:start="391:21" pos:end="391:22">|=</operator> <operator pos:start="391:24" pos:end="391:24">(</operator><name pos:start="391:25" pos:end="391:28">insn</name> <operator pos:start="391:30" pos:end="391:30">&amp;</operator> <literal type="number" pos:start="391:32" pos:end="391:35">0x1f</literal><operator pos:start="391:36" pos:end="391:36">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="395:13" pos:end="399:13"><if pos:start="395:13" pos:end="399:13">if <condition pos:start="395:16" pos:end="395:21">(<expr pos:start="395:17" pos:end="395:20"><name pos:start="395:17" pos:end="395:20">mask</name></expr>)</condition> <block pos:start="395:23" pos:end="399:13">{<block_content pos:start="397:17" pos:end="397:48">

                <expr_stmt pos:start="397:17" pos:end="397:48"><expr pos:start="397:17" pos:end="397:47"><call pos:start="397:17" pos:end="397:47"><name pos:start="397:17" pos:end="397:30">gen_set_psr_im</name><argument_list pos:start="397:31" pos:end="397:47">(<argument pos:start="397:32" pos:end="397:32"><expr pos:start="397:32" pos:end="397:32"><name pos:start="397:32" pos:end="397:32">s</name></expr></argument>, <argument pos:start="397:35" pos:end="397:38"><expr pos:start="397:35" pos:end="397:38"><name pos:start="397:35" pos:end="397:38">mask</name></expr></argument>, <argument pos:start="397:41" pos:end="397:41"><expr pos:start="397:41" pos:end="397:41"><literal type="number" pos:start="397:41" pos:end="397:41">0</literal></expr></argument>, <argument pos:start="397:44" pos:end="397:46"><expr pos:start="397:44" pos:end="397:46"><name pos:start="397:44" pos:end="397:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="401:13" pos:end="401:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="405:9" pos:end="405:24">goto <name pos:start="405:14" pos:end="405:23">illegal_op</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="409:5" pos:end="421:5"><if pos:start="409:5" pos:end="421:5">if <condition pos:start="409:8" pos:end="409:20">(<expr pos:start="409:9" pos:end="409:19"><name pos:start="409:9" pos:end="409:12">cond</name> <operator pos:start="409:14" pos:end="409:15">!=</operator> <literal type="number" pos:start="409:17" pos:end="409:19">0xe</literal></expr>)</condition> <block pos:start="409:22" pos:end="421:5">{<block_content pos:start="415:9" pos:end="419:23">

        <comment type="block" pos:start="411:9" pos:end="413:30">/* if not always execute, we generate a conditional jump to

           next instruction */</comment>

        <expr_stmt pos:start="415:9" pos:end="415:39"><expr pos:start="415:9" pos:end="415:38"><name pos:start="415:9" pos:end="415:20"><name pos:start="415:9" pos:end="415:9">s</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:20">condlabel</name></name> <operator pos:start="415:22" pos:end="415:22">=</operator> <call pos:start="415:24" pos:end="415:38"><name pos:start="415:24" pos:end="415:36">gen_new_label</name><argument_list pos:start="415:37" pos:end="415:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="417:48"><expr pos:start="417:9" pos:end="417:47"><call pos:start="417:9" pos:end="417:47"><name pos:start="417:9" pos:end="417:23">arm_gen_test_cc</name><argument_list pos:start="417:24" pos:end="417:47">(<argument pos:start="417:25" pos:end="417:32"><expr pos:start="417:25" pos:end="417:32"><name pos:start="417:25" pos:end="417:28">cond</name> <operator pos:start="417:30" pos:end="417:30">^</operator> <literal type="number" pos:start="417:32" pos:end="417:32">1</literal></expr></argument>, <argument pos:start="417:35" pos:end="417:46"><expr pos:start="417:35" pos:end="417:46"><name pos:start="417:35" pos:end="417:46"><name pos:start="417:35" pos:end="417:35">s</name><operator pos:start="417:36" pos:end="417:37">-&gt;</operator><name pos:start="417:38" pos:end="417:46">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:23"><expr pos:start="419:9" pos:end="419:22"><name pos:start="419:9" pos:end="419:18"><name pos:start="419:9" pos:end="419:9">s</name><operator pos:start="419:10" pos:end="419:11">-&gt;</operator><name pos:start="419:12" pos:end="419:18">condjmp</name></name> <operator pos:start="419:20" pos:end="419:20">=</operator> <literal type="number" pos:start="419:22" pos:end="419:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="423:5" pos:end="2767:5"><if pos:start="423:5" pos:end="487:5">if <condition pos:start="423:8" pos:end="423:42">(<expr pos:start="423:9" pos:end="423:41"><operator pos:start="423:9" pos:end="423:9">(</operator><name pos:start="423:10" pos:end="423:13">insn</name> <operator pos:start="423:15" pos:end="423:15">&amp;</operator> <literal type="number" pos:start="423:17" pos:end="423:26">0x0f900000</literal><operator pos:start="423:27" pos:end="423:27">)</operator> <operator pos:start="423:29" pos:end="423:30">==</operator> <literal type="number" pos:start="423:32" pos:end="423:41">0x03000000</literal></expr>)</condition> <block pos:start="423:44" pos:end="487:5">{<block_content pos:start="425:9" pos:end="485:9">

        <if_stmt pos:start="425:9" pos:end="485:9"><if pos:start="425:9" pos:end="455:9">if <condition pos:start="425:12" pos:end="425:36">(<expr pos:start="425:13" pos:end="425:35"><operator pos:start="425:13" pos:end="425:13">(</operator><name pos:start="425:14" pos:end="425:17">insn</name> <operator pos:start="425:19" pos:end="425:19">&amp;</operator> <operator pos:start="425:21" pos:end="425:21">(</operator><literal type="number" pos:start="425:22" pos:end="425:22">1</literal> <operator pos:start="425:24" pos:end="425:25">&lt;&lt;</operator> <literal type="number" pos:start="425:27" pos:end="425:28">21</literal><operator pos:start="425:29" pos:end="425:29">)</operator><operator pos:start="425:30" pos:end="425:30">)</operator> <operator pos:start="425:32" pos:end="425:33">==</operator> <literal type="number" pos:start="425:35" pos:end="425:35">0</literal></expr>)</condition> <block pos:start="425:38" pos:end="455:9">{<block_content pos:start="427:13" pos:end="453:34">

            <expr_stmt pos:start="427:13" pos:end="427:22"><expr pos:start="427:13" pos:end="427:21"><call pos:start="427:13" pos:end="427:21"><name pos:start="427:13" pos:end="427:16">ARCH</name><argument_list pos:start="427:17" pos:end="427:21">(<argument pos:start="427:18" pos:end="427:20"><expr pos:start="427:18" pos:end="427:20"><literal type="number" pos:start="427:18" pos:end="427:20">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="429:36"><expr pos:start="429:13" pos:end="429:35"><name pos:start="429:13" pos:end="429:14">rd</name> <operator pos:start="429:16" pos:end="429:16">=</operator> <operator pos:start="429:18" pos:end="429:18">(</operator><name pos:start="429:19" pos:end="429:22">insn</name> <operator pos:start="429:24" pos:end="429:25">&gt;&gt;</operator> <literal type="number" pos:start="429:27" pos:end="429:28">12</literal><operator pos:start="429:29" pos:end="429:29">)</operator> <operator pos:start="429:31" pos:end="429:31">&amp;</operator> <literal type="number" pos:start="429:33" pos:end="429:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="431:13" pos:end="431:58"><expr pos:start="431:13" pos:end="431:57"><name pos:start="431:13" pos:end="431:15">val</name> <operator pos:start="431:17" pos:end="431:17">=</operator> <operator pos:start="431:19" pos:end="431:19">(</operator><operator pos:start="431:20" pos:end="431:20">(</operator><name pos:start="431:21" pos:end="431:24">insn</name> <operator pos:start="431:26" pos:end="431:27">&gt;&gt;</operator> <literal type="number" pos:start="431:29" pos:end="431:29">4</literal><operator pos:start="431:30" pos:end="431:30">)</operator> <operator pos:start="431:32" pos:end="431:32">&amp;</operator> <literal type="number" pos:start="431:34" pos:end="431:39">0xf000</literal><operator pos:start="431:40" pos:end="431:40">)</operator> <operator pos:start="431:42" pos:end="431:42">|</operator> <operator pos:start="431:44" pos:end="431:44">(</operator><name pos:start="431:45" pos:end="431:48">insn</name> <operator pos:start="431:50" pos:end="431:50">&amp;</operator> <literal type="number" pos:start="431:52" pos:end="431:56">0xfff</literal><operator pos:start="431:57" pos:end="431:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="433:13" pos:end="451:13"><if pos:start="433:13" pos:end="441:13">if <condition pos:start="433:16" pos:end="433:40">(<expr pos:start="433:17" pos:end="433:39"><operator pos:start="433:17" pos:end="433:17">(</operator><name pos:start="433:18" pos:end="433:21">insn</name> <operator pos:start="433:23" pos:end="433:23">&amp;</operator> <operator pos:start="433:25" pos:end="433:25">(</operator><literal type="number" pos:start="433:26" pos:end="433:26">1</literal> <operator pos:start="433:28" pos:end="433:29">&lt;&lt;</operator> <literal type="number" pos:start="433:31" pos:end="433:32">22</literal><operator pos:start="433:33" pos:end="433:33">)</operator><operator pos:start="433:34" pos:end="433:34">)</operator> <operator pos:start="433:36" pos:end="433:37">==</operator> <literal type="number" pos:start="433:39" pos:end="433:39">0</literal></expr>)</condition> <block pos:start="433:42" pos:end="441:13">{<block_content pos:start="437:17" pos:end="439:43">

                <comment type="block" pos:start="435:17" pos:end="435:26">/* MOVW */</comment>

                <expr_stmt pos:start="437:17" pos:end="437:41"><expr pos:start="437:17" pos:end="437:40"><name pos:start="437:17" pos:end="437:19">tmp</name> <operator pos:start="437:21" pos:end="437:21">=</operator> <call pos:start="437:23" pos:end="437:40"><name pos:start="437:23" pos:end="437:38">tcg_temp_new_i32</name><argument_list pos:start="437:39" pos:end="437:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="439:17" pos:end="439:43"><expr pos:start="439:17" pos:end="439:42"><call pos:start="439:17" pos:end="439:42"><name pos:start="439:17" pos:end="439:32">tcg_gen_movi_i32</name><argument_list pos:start="439:33" pos:end="439:42">(<argument pos:start="439:34" pos:end="439:36"><expr pos:start="439:34" pos:end="439:36"><name pos:start="439:34" pos:end="439:36">tmp</name></expr></argument>, <argument pos:start="439:39" pos:end="439:41"><expr pos:start="439:39" pos:end="439:41"><name pos:start="439:39" pos:end="439:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="441:15" pos:end="451:13">else <block pos:start="441:20" pos:end="451:13">{<block_content pos:start="445:17" pos:end="449:53">

                <comment type="block" pos:start="443:17" pos:end="443:26">/* MOVT */</comment>

                <expr_stmt pos:start="445:17" pos:end="445:38"><expr pos:start="445:17" pos:end="445:37"><name pos:start="445:17" pos:end="445:19">tmp</name> <operator pos:start="445:21" pos:end="445:21">=</operator> <call pos:start="445:23" pos:end="445:37"><name pos:start="445:23" pos:end="445:30">load_reg</name><argument_list pos:start="445:31" pos:end="445:37">(<argument pos:start="445:32" pos:end="445:32"><expr pos:start="445:32" pos:end="445:32"><name pos:start="445:32" pos:end="445:32">s</name></expr></argument>, <argument pos:start="445:35" pos:end="445:36"><expr pos:start="445:35" pos:end="445:36"><name pos:start="445:35" pos:end="445:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="447:17" pos:end="447:45"><expr pos:start="447:17" pos:end="447:44"><call pos:start="447:17" pos:end="447:44"><name pos:start="447:17" pos:end="447:34">tcg_gen_ext16u_i32</name><argument_list pos:start="447:35" pos:end="447:44">(<argument pos:start="447:36" pos:end="447:38"><expr pos:start="447:36" pos:end="447:38"><name pos:start="447:36" pos:end="447:38">tmp</name></expr></argument>, <argument pos:start="447:41" pos:end="447:43"><expr pos:start="447:41" pos:end="447:43"><name pos:start="447:41" pos:end="447:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="449:17" pos:end="449:53"><expr pos:start="449:17" pos:end="449:52"><call pos:start="449:17" pos:end="449:52"><name pos:start="449:17" pos:end="449:31">tcg_gen_ori_i32</name><argument_list pos:start="449:32" pos:end="449:52">(<argument pos:start="449:33" pos:end="449:35"><expr pos:start="449:33" pos:end="449:35"><name pos:start="449:33" pos:end="449:35">tmp</name></expr></argument>, <argument pos:start="449:38" pos:end="449:40"><expr pos:start="449:38" pos:end="449:40"><name pos:start="449:38" pos:end="449:40">tmp</name></expr></argument>, <argument pos:start="449:43" pos:end="449:51"><expr pos:start="449:43" pos:end="449:51"><name pos:start="449:43" pos:end="449:45">val</name> <operator pos:start="449:47" pos:end="449:48">&lt;&lt;</operator> <literal type="number" pos:start="449:50" pos:end="449:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="453:13" pos:end="453:34"><expr pos:start="453:13" pos:end="453:33"><call pos:start="453:13" pos:end="453:33"><name pos:start="453:13" pos:end="453:21">store_reg</name><argument_list pos:start="453:22" pos:end="453:33">(<argument pos:start="453:23" pos:end="453:23"><expr pos:start="453:23" pos:end="453:23"><name pos:start="453:23" pos:end="453:23">s</name></expr></argument>, <argument pos:start="453:26" pos:end="453:27"><expr pos:start="453:26" pos:end="453:27"><name pos:start="453:26" pos:end="453:27">rd</name></expr></argument>, <argument pos:start="453:30" pos:end="453:32"><expr pos:start="453:30" pos:end="453:32"><name pos:start="453:30" pos:end="453:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="455:11" pos:end="485:9">else <block pos:start="455:16" pos:end="485:9">{<block_content pos:start="457:13" pos:end="483:13">

            <if_stmt pos:start="457:13" pos:end="459:32"><if pos:start="457:13" pos:end="459:32">if <condition pos:start="457:16" pos:end="457:44">(<expr pos:start="457:17" pos:end="457:43"><operator pos:start="457:17" pos:end="457:17">(</operator><operator pos:start="457:18" pos:end="457:18">(</operator><name pos:start="457:19" pos:end="457:22">insn</name> <operator pos:start="457:24" pos:end="457:25">&gt;&gt;</operator> <literal type="number" pos:start="457:27" pos:end="457:28">12</literal><operator pos:start="457:29" pos:end="457:29">)</operator> <operator pos:start="457:31" pos:end="457:31">&amp;</operator> <literal type="number" pos:start="457:33" pos:end="457:35">0xf</literal><operator pos:start="457:36" pos:end="457:36">)</operator> <operator pos:start="457:38" pos:end="457:39">!=</operator> <literal type="number" pos:start="457:41" pos:end="457:43">0xf</literal></expr>)</condition><block type="pseudo" pos:start="459:17" pos:end="459:32"><block_content pos:start="459:17" pos:end="459:32">

                <goto pos:start="459:17" pos:end="459:32">goto <name pos:start="459:22" pos:end="459:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="461:13" pos:end="483:13"><if pos:start="461:13" pos:end="465:13">if <condition pos:start="461:16" pos:end="461:42">(<expr pos:start="461:17" pos:end="461:41"><operator pos:start="461:17" pos:end="461:17">(</operator><operator pos:start="461:18" pos:end="461:18">(</operator><name pos:start="461:19" pos:end="461:22">insn</name> <operator pos:start="461:24" pos:end="461:25">&gt;&gt;</operator> <literal type="number" pos:start="461:27" pos:end="461:28">16</literal><operator pos:start="461:29" pos:end="461:29">)</operator> <operator pos:start="461:31" pos:end="461:31">&amp;</operator> <literal type="number" pos:start="461:33" pos:end="461:35">0xf</literal><operator pos:start="461:36" pos:end="461:36">)</operator> <operator pos:start="461:38" pos:end="461:39">==</operator> <literal type="number" pos:start="461:41" pos:end="461:41">0</literal></expr>)</condition> <block pos:start="461:44" pos:end="465:13">{<block_content pos:start="463:17" pos:end="463:45">

                <expr_stmt pos:start="463:17" pos:end="463:45"><expr pos:start="463:17" pos:end="463:44"><call pos:start="463:17" pos:end="463:44"><name pos:start="463:17" pos:end="463:28">gen_nop_hint</name><argument_list pos:start="463:29" pos:end="463:44">(<argument pos:start="463:30" pos:end="463:30"><expr pos:start="463:30" pos:end="463:30"><name pos:start="463:30" pos:end="463:30">s</name></expr></argument>, <argument pos:start="463:33" pos:end="463:43"><expr pos:start="463:33" pos:end="463:43"><name pos:start="463:33" pos:end="463:36">insn</name> <operator pos:start="463:38" pos:end="463:38">&amp;</operator> <literal type="number" pos:start="463:40" pos:end="463:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="465:15" pos:end="483:13">else <block pos:start="465:20" pos:end="483:13">{<block_content pos:start="469:17" pos:end="481:36">

                <comment type="block" pos:start="467:17" pos:end="467:38">/* CPSR = immediate */</comment>

                <expr_stmt pos:start="469:17" pos:end="469:34"><expr pos:start="469:17" pos:end="469:33"><name pos:start="469:17" pos:end="469:19">val</name> <operator pos:start="469:21" pos:end="469:21">=</operator> <name pos:start="469:23" pos:end="469:26">insn</name> <operator pos:start="469:28" pos:end="469:28">&amp;</operator> <literal type="number" pos:start="469:30" pos:end="469:33">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="471:17" pos:end="471:48"><expr pos:start="471:17" pos:end="471:47"><name pos:start="471:17" pos:end="471:21">shift</name> <operator pos:start="471:23" pos:end="471:23">=</operator> <operator pos:start="471:25" pos:end="471:25">(</operator><operator pos:start="471:26" pos:end="471:26">(</operator><name pos:start="471:27" pos:end="471:30">insn</name> <operator pos:start="471:32" pos:end="471:33">&gt;&gt;</operator> <literal type="number" pos:start="471:35" pos:end="471:35">8</literal><operator pos:start="471:36" pos:end="471:36">)</operator> <operator pos:start="471:38" pos:end="471:38">&amp;</operator> <literal type="number" pos:start="471:40" pos:end="471:42">0xf</literal><operator pos:start="471:43" pos:end="471:43">)</operator> <operator pos:start="471:45" pos:end="471:45">*</operator> <literal type="number" pos:start="471:47" pos:end="471:47">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="473:17" pos:end="475:65"><if pos:start="473:17" pos:end="475:65">if <condition pos:start="473:20" pos:end="473:26">(<expr pos:start="473:21" pos:end="473:25"><name pos:start="473:21" pos:end="473:25">shift</name></expr>)</condition><block type="pseudo" pos:start="475:21" pos:end="475:65"><block_content pos:start="475:21" pos:end="475:65">

                    <expr_stmt pos:start="475:21" pos:end="475:65"><expr pos:start="475:21" pos:end="475:64"><name pos:start="475:21" pos:end="475:23">val</name> <operator pos:start="475:25" pos:end="475:25">=</operator> <operator pos:start="475:27" pos:end="475:27">(</operator><name pos:start="475:28" pos:end="475:30">val</name> <operator pos:start="475:32" pos:end="475:33">&gt;&gt;</operator> <name pos:start="475:35" pos:end="475:39">shift</name><operator pos:start="475:40" pos:end="475:40">)</operator> <operator pos:start="475:42" pos:end="475:42">|</operator> <operator pos:start="475:44" pos:end="475:44">(</operator><name pos:start="475:45" pos:end="475:47">val</name> <operator pos:start="475:49" pos:end="475:50">&lt;&lt;</operator> <operator pos:start="475:52" pos:end="475:52">(</operator><literal type="number" pos:start="475:53" pos:end="475:56">32</literal> <operator pos:start="475:56" pos:end="475:56">-</operator> <name pos:start="475:58" pos:end="475:62">shift</name><operator pos:start="475:63" pos:end="475:63">)</operator><operator pos:start="475:64" pos:end="475:64">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="477:17" pos:end="477:46"><expr pos:start="477:17" pos:end="477:45"><name pos:start="477:17" pos:end="477:17">i</name> <operator pos:start="477:19" pos:end="477:19">=</operator> <operator pos:start="477:21" pos:end="477:21">(</operator><operator pos:start="477:22" pos:end="477:22">(</operator><name pos:start="477:23" pos:end="477:26">insn</name> <operator pos:start="477:28" pos:end="477:28">&amp;</operator> <operator pos:start="477:30" pos:end="477:30">(</operator><literal type="number" pos:start="477:31" pos:end="477:31">1</literal> <operator pos:start="477:33" pos:end="477:34">&lt;&lt;</operator> <literal type="number" pos:start="477:36" pos:end="477:37">22</literal><operator pos:start="477:38" pos:end="477:38">)</operator><operator pos:start="477:39" pos:end="477:39">)</operator> <operator pos:start="477:41" pos:end="477:42">!=</operator> <literal type="number" pos:start="477:44" pos:end="477:44">0</literal><operator pos:start="477:45" pos:end="477:45">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="479:17" pos:end="481:36"><if pos:start="479:17" pos:end="481:36">if <condition pos:start="479:20" pos:end="479:87">(<expr pos:start="479:21" pos:end="479:86"><call pos:start="479:21" pos:end="479:86"><name pos:start="479:21" pos:end="479:34">gen_set_psr_im</name><argument_list pos:start="479:35" pos:end="479:86">(<argument pos:start="479:36" pos:end="479:36"><expr pos:start="479:36" pos:end="479:36"><name pos:start="479:36" pos:end="479:36">s</name></expr></argument>, <argument pos:start="479:39" pos:end="479:77"><expr pos:start="479:39" pos:end="479:77"><call pos:start="479:39" pos:end="479:77"><name pos:start="479:39" pos:end="479:46">msr_mask</name><argument_list pos:start="479:47" pos:end="479:77">(<argument pos:start="479:48" pos:end="479:50"><expr pos:start="479:48" pos:end="479:50"><name pos:start="479:48" pos:end="479:50">env</name></expr></argument>, <argument pos:start="479:53" pos:end="479:53"><expr pos:start="479:53" pos:end="479:53"><name pos:start="479:53" pos:end="479:53">s</name></expr></argument>, <argument pos:start="479:56" pos:end="479:73"><expr pos:start="479:56" pos:end="479:73"><operator pos:start="479:56" pos:end="479:56">(</operator><name pos:start="479:57" pos:end="479:60">insn</name> <operator pos:start="479:62" pos:end="479:63">&gt;&gt;</operator> <literal type="number" pos:start="479:65" pos:end="479:66">16</literal><operator pos:start="479:67" pos:end="479:67">)</operator> <operator pos:start="479:69" pos:end="479:69">&amp;</operator> <literal type="number" pos:start="479:71" pos:end="479:73">0xf</literal></expr></argument>, <argument pos:start="479:76" pos:end="479:76"><expr pos:start="479:76" pos:end="479:76"><name pos:start="479:76" pos:end="479:76">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="479:80" pos:end="479:80"><expr pos:start="479:80" pos:end="479:80"><name pos:start="479:80" pos:end="479:80">i</name></expr></argument>, <argument pos:start="479:83" pos:end="479:85"><expr pos:start="479:83" pos:end="479:85"><name pos:start="479:83" pos:end="479:85">val</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="481:21" pos:end="481:36"><block_content pos:start="481:21" pos:end="481:36">

                    <goto pos:start="481:21" pos:end="481:36">goto <name pos:start="481:26" pos:end="481:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="487:7" pos:end="845:5">else if <condition pos:start="487:15" pos:end="489:52">(<expr pos:start="487:16" pos:end="489:51"><operator pos:start="487:16" pos:end="487:16">(</operator><name pos:start="487:17" pos:end="487:20">insn</name> <operator pos:start="487:22" pos:end="487:22">&amp;</operator> <literal type="number" pos:start="487:24" pos:end="487:33">0x0f900000</literal><operator pos:start="487:34" pos:end="487:34">)</operator> <operator pos:start="487:36" pos:end="487:37">==</operator> <literal type="number" pos:start="487:39" pos:end="487:48">0x01000000</literal>

               <operator pos:start="489:16" pos:end="489:17">&amp;&amp;</operator> <operator pos:start="489:19" pos:end="489:19">(</operator><name pos:start="489:20" pos:end="489:23">insn</name> <operator pos:start="489:25" pos:end="489:25">&amp;</operator> <literal type="number" pos:start="489:27" pos:end="489:36">0x00000090</literal><operator pos:start="489:37" pos:end="489:37">)</operator> <operator pos:start="489:39" pos:end="489:40">!=</operator> <literal type="number" pos:start="489:42" pos:end="489:51">0x00000090</literal></expr>)</condition> <block pos:start="489:54" pos:end="845:5">{<block_content pos:start="493:9" pos:end="843:9">

        <comment type="block" pos:start="491:9" pos:end="491:40">/* miscellaneous instructions */</comment>

        <expr_stmt pos:start="493:9" pos:end="493:31"><expr pos:start="493:9" pos:end="493:30"><name pos:start="493:9" pos:end="493:11">op1</name> <operator pos:start="493:13" pos:end="493:13">=</operator> <operator pos:start="493:15" pos:end="493:15">(</operator><name pos:start="493:16" pos:end="493:19">insn</name> <operator pos:start="493:21" pos:end="493:22">&gt;&gt;</operator> <literal type="number" pos:start="493:24" pos:end="493:25">21</literal><operator pos:start="493:26" pos:end="493:26">)</operator> <operator pos:start="493:28" pos:end="493:28">&amp;</operator> <literal type="number" pos:start="493:30" pos:end="493:30">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="495:9" pos:end="495:31"><expr pos:start="495:9" pos:end="495:30"><name pos:start="495:9" pos:end="495:10">sh</name> <operator pos:start="495:12" pos:end="495:12">=</operator> <operator pos:start="495:14" pos:end="495:14">(</operator><name pos:start="495:15" pos:end="495:18">insn</name> <operator pos:start="495:20" pos:end="495:21">&gt;&gt;</operator> <literal type="number" pos:start="495:23" pos:end="495:23">4</literal><operator pos:start="495:24" pos:end="495:24">)</operator> <operator pos:start="495:26" pos:end="495:26">&amp;</operator> <literal type="number" pos:start="495:28" pos:end="495:30">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="497:9" pos:end="497:24"><expr pos:start="497:9" pos:end="497:23"><name pos:start="497:9" pos:end="497:10">rm</name> <operator pos:start="497:12" pos:end="497:12">=</operator> <name pos:start="497:14" pos:end="497:17">insn</name> <operator pos:start="497:19" pos:end="497:19">&amp;</operator> <literal type="number" pos:start="497:21" pos:end="497:23">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="499:9" pos:end="843:9">switch <condition pos:start="499:16" pos:end="499:19">(<expr pos:start="499:17" pos:end="499:18"><name pos:start="499:17" pos:end="499:18">sh</name></expr>)</condition> <block pos:start="499:21" pos:end="843:9">{<block_content pos:start="501:9" pos:end="841:28">

        <case pos:start="501:9" pos:end="501:17">case <expr pos:start="501:14" pos:end="501:16"><literal type="number" pos:start="501:14" pos:end="501:16">0x0</literal></expr>:</case> <comment type="block" pos:start="501:19" pos:end="501:52">/* move program status register */</comment>

            <if_stmt pos:start="503:13" pos:end="539:13"><if pos:start="503:13" pos:end="515:13">if <condition pos:start="503:16" pos:end="503:24">(<expr pos:start="503:17" pos:end="503:23"><name pos:start="503:17" pos:end="503:19">op1</name> <operator pos:start="503:21" pos:end="503:21">&amp;</operator> <literal type="number" pos:start="503:23" pos:end="503:23">1</literal></expr>)</condition> <block pos:start="503:26" pos:end="515:13">{<block_content pos:start="507:17" pos:end="513:36">

                <comment type="block" pos:start="505:17" pos:end="505:31">/* PSR = reg */</comment>

                <expr_stmt pos:start="507:17" pos:end="507:38"><expr pos:start="507:17" pos:end="507:37"><name pos:start="507:17" pos:end="507:19">tmp</name> <operator pos:start="507:21" pos:end="507:21">=</operator> <call pos:start="507:23" pos:end="507:37"><name pos:start="507:23" pos:end="507:30">load_reg</name><argument_list pos:start="507:31" pos:end="507:37">(<argument pos:start="507:32" pos:end="507:32"><expr pos:start="507:32" pos:end="507:32"><name pos:start="507:32" pos:end="507:32">s</name></expr></argument>, <argument pos:start="507:35" pos:end="507:36"><expr pos:start="507:35" pos:end="507:36"><name pos:start="507:35" pos:end="507:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="509:17" pos:end="509:37"><expr pos:start="509:17" pos:end="509:36"><name pos:start="509:17" pos:end="509:17">i</name> <operator pos:start="509:19" pos:end="509:19">=</operator> <operator pos:start="509:21" pos:end="509:21">(</operator><operator pos:start="509:22" pos:end="509:22">(</operator><name pos:start="509:23" pos:end="509:25">op1</name> <operator pos:start="509:27" pos:end="509:27">&amp;</operator> <literal type="number" pos:start="509:29" pos:end="509:29">2</literal><operator pos:start="509:30" pos:end="509:30">)</operator> <operator pos:start="509:32" pos:end="509:33">!=</operator> <literal type="number" pos:start="509:35" pos:end="509:35">0</literal><operator pos:start="509:36" pos:end="509:36">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="511:17" pos:end="513:36"><if pos:start="511:17" pos:end="513:36">if <condition pos:start="511:20" pos:end="511:84">(<expr pos:start="511:21" pos:end="511:83"><call pos:start="511:21" pos:end="511:83"><name pos:start="511:21" pos:end="511:31">gen_set_psr</name><argument_list pos:start="511:32" pos:end="511:83">(<argument pos:start="511:33" pos:end="511:33"><expr pos:start="511:33" pos:end="511:33"><name pos:start="511:33" pos:end="511:33">s</name></expr></argument>, <argument pos:start="511:36" pos:end="511:74"><expr pos:start="511:36" pos:end="511:74"><call pos:start="511:36" pos:end="511:74"><name pos:start="511:36" pos:end="511:43">msr_mask</name><argument_list pos:start="511:44" pos:end="511:74">(<argument pos:start="511:45" pos:end="511:47"><expr pos:start="511:45" pos:end="511:47"><name pos:start="511:45" pos:end="511:47">env</name></expr></argument>, <argument pos:start="511:50" pos:end="511:50"><expr pos:start="511:50" pos:end="511:50"><name pos:start="511:50" pos:end="511:50">s</name></expr></argument>, <argument pos:start="511:53" pos:end="511:70"><expr pos:start="511:53" pos:end="511:70"><operator pos:start="511:53" pos:end="511:53">(</operator><name pos:start="511:54" pos:end="511:57">insn</name> <operator pos:start="511:59" pos:end="511:60">&gt;&gt;</operator> <literal type="number" pos:start="511:62" pos:end="511:63">16</literal><operator pos:start="511:64" pos:end="511:64">)</operator> <operator pos:start="511:66" pos:end="511:66">&amp;</operator> <literal type="number" pos:start="511:68" pos:end="511:70">0xf</literal></expr></argument>, <argument pos:start="511:73" pos:end="511:73"><expr pos:start="511:73" pos:end="511:73"><name pos:start="511:73" pos:end="511:73">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="511:77" pos:end="511:77"><expr pos:start="511:77" pos:end="511:77"><name pos:start="511:77" pos:end="511:77">i</name></expr></argument>, <argument pos:start="511:80" pos:end="511:82"><expr pos:start="511:80" pos:end="511:82"><name pos:start="511:80" pos:end="511:82">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="513:21" pos:end="513:36"><block_content pos:start="513:21" pos:end="513:36">

                    <goto pos:start="513:21" pos:end="513:36">goto <name pos:start="513:26" pos:end="513:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="515:15" pos:end="539:13">else <block pos:start="515:20" pos:end="539:13">{<block_content pos:start="519:17" pos:end="537:38">

                <comment type="block" pos:start="517:17" pos:end="517:31">/* reg = PSR */</comment>

                <expr_stmt pos:start="519:17" pos:end="519:40"><expr pos:start="519:17" pos:end="519:39"><name pos:start="519:17" pos:end="519:18">rd</name> <operator pos:start="519:20" pos:end="519:20">=</operator> <operator pos:start="519:22" pos:end="519:22">(</operator><name pos:start="519:23" pos:end="519:26">insn</name> <operator pos:start="519:28" pos:end="519:29">&gt;&gt;</operator> <literal type="number" pos:start="519:31" pos:end="519:32">12</literal><operator pos:start="519:33" pos:end="519:33">)</operator> <operator pos:start="519:35" pos:end="519:35">&amp;</operator> <literal type="number" pos:start="519:37" pos:end="519:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="521:17" pos:end="535:17"><if pos:start="521:17" pos:end="529:17">if <condition pos:start="521:20" pos:end="521:28">(<expr pos:start="521:21" pos:end="521:27"><name pos:start="521:21" pos:end="521:23">op1</name> <operator pos:start="521:25" pos:end="521:25">&amp;</operator> <literal type="number" pos:start="521:27" pos:end="521:27">2</literal></expr>)</condition> <block pos:start="521:30" pos:end="529:17">{<block_content pos:start="523:21" pos:end="527:47">

                    <if_stmt pos:start="523:21" pos:end="525:40"><if pos:start="523:21" pos:end="525:40">if <condition pos:start="523:24" pos:end="523:35">(<expr pos:start="523:25" pos:end="523:34"><call pos:start="523:25" pos:end="523:34"><name pos:start="523:25" pos:end="523:31">IS_USER</name><argument_list pos:start="523:32" pos:end="523:34">(<argument pos:start="523:33" pos:end="523:33"><expr pos:start="523:33" pos:end="523:33"><name pos:start="523:33" pos:end="523:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="525:25" pos:end="525:40"><block_content pos:start="525:25" pos:end="525:40">

                        <goto pos:start="525:25" pos:end="525:40">goto <name pos:start="525:30" pos:end="525:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="527:21" pos:end="527:47"><expr pos:start="527:21" pos:end="527:46"><name pos:start="527:21" pos:end="527:23">tmp</name> <operator pos:start="527:25" pos:end="527:25">=</operator> <call pos:start="527:27" pos:end="527:46"><name pos:start="527:27" pos:end="527:40">load_cpu_field</name><argument_list pos:start="527:41" pos:end="527:46">(<argument pos:start="527:42" pos:end="527:45"><expr pos:start="527:42" pos:end="527:45"><name pos:start="527:42" pos:end="527:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="529:19" pos:end="535:17">else <block pos:start="529:24" pos:end="535:17">{<block_content pos:start="531:21" pos:end="533:55">

                    <expr_stmt pos:start="531:21" pos:end="531:45"><expr pos:start="531:21" pos:end="531:44"><name pos:start="531:21" pos:end="531:23">tmp</name> <operator pos:start="531:25" pos:end="531:25">=</operator> <call pos:start="531:27" pos:end="531:44"><name pos:start="531:27" pos:end="531:42">tcg_temp_new_i32</name><argument_list pos:start="531:43" pos:end="531:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="533:21" pos:end="533:55"><expr pos:start="533:21" pos:end="533:54"><call pos:start="533:21" pos:end="533:54"><name pos:start="533:21" pos:end="533:40">gen_helper_cpsr_read</name><argument_list pos:start="533:41" pos:end="533:54">(<argument pos:start="533:42" pos:end="533:44"><expr pos:start="533:42" pos:end="533:44"><name pos:start="533:42" pos:end="533:44">tmp</name></expr></argument>, <argument pos:start="533:47" pos:end="533:53"><expr pos:start="533:47" pos:end="533:53"><name pos:start="533:47" pos:end="533:53">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="537:17" pos:end="537:38"><expr pos:start="537:17" pos:end="537:37"><call pos:start="537:17" pos:end="537:37"><name pos:start="537:17" pos:end="537:25">store_reg</name><argument_list pos:start="537:26" pos:end="537:37">(<argument pos:start="537:27" pos:end="537:27"><expr pos:start="537:27" pos:end="537:27"><name pos:start="537:27" pos:end="537:27">s</name></expr></argument>, <argument pos:start="537:30" pos:end="537:31"><expr pos:start="537:30" pos:end="537:31"><name pos:start="537:30" pos:end="537:31">rd</name></expr></argument>, <argument pos:start="537:34" pos:end="537:36"><expr pos:start="537:34" pos:end="537:36"><name pos:start="537:34" pos:end="537:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="541:13" pos:end="541:18">break;</break>

        <case pos:start="543:9" pos:end="543:17">case <expr pos:start="543:14" pos:end="543:16"><literal type="number" pos:start="543:14" pos:end="543:16">0x1</literal></expr>:</case>

            <if_stmt pos:start="545:13" pos:end="573:13"><if pos:start="545:13" pos:end="555:13">if <condition pos:start="545:16" pos:end="545:25">(<expr pos:start="545:17" pos:end="545:24"><name pos:start="545:17" pos:end="545:19">op1</name> <operator pos:start="545:21" pos:end="545:22">==</operator> <literal type="number" pos:start="545:24" pos:end="545:24">1</literal></expr>)</condition> <block pos:start="545:27" pos:end="555:13">{<block_content pos:start="549:17" pos:end="553:31">

                <comment type="block" pos:start="547:17" pos:end="547:50">/* branch/exchange thumb (bx).  */</comment>

                <expr_stmt pos:start="549:17" pos:end="549:25"><expr pos:start="549:17" pos:end="549:24"><call pos:start="549:17" pos:end="549:24"><name pos:start="549:17" pos:end="549:20">ARCH</name><argument_list pos:start="549:21" pos:end="549:24">(<argument pos:start="549:22" pos:end="549:23"><expr pos:start="549:22" pos:end="549:23"><literal type="number" pos:start="549:22" pos:end="549:23">4T</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="551:17" pos:end="551:38"><expr pos:start="551:17" pos:end="551:37"><name pos:start="551:17" pos:end="551:19">tmp</name> <operator pos:start="551:21" pos:end="551:21">=</operator> <call pos:start="551:23" pos:end="551:37"><name pos:start="551:23" pos:end="551:30">load_reg</name><argument_list pos:start="551:31" pos:end="551:37">(<argument pos:start="551:32" pos:end="551:32"><expr pos:start="551:32" pos:end="551:32"><name pos:start="551:32" pos:end="551:32">s</name></expr></argument>, <argument pos:start="551:35" pos:end="551:36"><expr pos:start="551:35" pos:end="551:36"><name pos:start="551:35" pos:end="551:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="553:17" pos:end="553:31"><expr pos:start="553:17" pos:end="553:30"><call pos:start="553:17" pos:end="553:30"><name pos:start="553:17" pos:end="553:22">gen_bx</name><argument_list pos:start="553:23" pos:end="553:30">(<argument pos:start="553:24" pos:end="553:24"><expr pos:start="553:24" pos:end="553:24"><name pos:start="553:24" pos:end="553:24">s</name></expr></argument>, <argument pos:start="553:27" pos:end="553:29"><expr pos:start="553:27" pos:end="553:29"><name pos:start="553:27" pos:end="553:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="555:15" pos:end="569:13">else if <condition pos:start="555:23" pos:end="555:32">(<expr pos:start="555:24" pos:end="555:31"><name pos:start="555:24" pos:end="555:26">op1</name> <operator pos:start="555:28" pos:end="555:29">==</operator> <literal type="number" pos:start="555:31" pos:end="555:31">3</literal></expr>)</condition> <block pos:start="555:34" pos:end="569:13">{<block_content pos:start="559:17" pos:end="567:38">

                <comment type="block" pos:start="557:17" pos:end="557:25">/* clz */</comment>

                <expr_stmt pos:start="559:17" pos:end="559:24"><expr pos:start="559:17" pos:end="559:23"><call pos:start="559:17" pos:end="559:23"><name pos:start="559:17" pos:end="559:20">ARCH</name><argument_list pos:start="559:21" pos:end="559:23">(<argument pos:start="559:22" pos:end="559:22"><expr pos:start="559:22" pos:end="559:22"><literal type="number" pos:start="559:22" pos:end="559:22">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:40"><expr pos:start="561:17" pos:end="561:39"><name pos:start="561:17" pos:end="561:18">rd</name> <operator pos:start="561:20" pos:end="561:20">=</operator> <operator pos:start="561:22" pos:end="561:22">(</operator><name pos:start="561:23" pos:end="561:26">insn</name> <operator pos:start="561:28" pos:end="561:29">&gt;&gt;</operator> <literal type="number" pos:start="561:31" pos:end="561:32">12</literal><operator pos:start="561:33" pos:end="561:33">)</operator> <operator pos:start="561:35" pos:end="561:35">&amp;</operator> <literal type="number" pos:start="561:37" pos:end="561:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:38"><expr pos:start="563:17" pos:end="563:37"><name pos:start="563:17" pos:end="563:19">tmp</name> <operator pos:start="563:21" pos:end="563:21">=</operator> <call pos:start="563:23" pos:end="563:37"><name pos:start="563:23" pos:end="563:30">load_reg</name><argument_list pos:start="563:31" pos:end="563:37">(<argument pos:start="563:32" pos:end="563:32"><expr pos:start="563:32" pos:end="563:32"><name pos:start="563:32" pos:end="563:32">s</name></expr></argument>, <argument pos:start="563:35" pos:end="563:36"><expr pos:start="563:35" pos:end="563:36"><name pos:start="563:35" pos:end="563:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="565:17" pos:end="565:41"><expr pos:start="565:17" pos:end="565:40"><call pos:start="565:17" pos:end="565:40"><name pos:start="565:17" pos:end="565:30">gen_helper_clz</name><argument_list pos:start="565:31" pos:end="565:40">(<argument pos:start="565:32" pos:end="565:34"><expr pos:start="565:32" pos:end="565:34"><name pos:start="565:32" pos:end="565:34">tmp</name></expr></argument>, <argument pos:start="565:37" pos:end="565:39"><expr pos:start="565:37" pos:end="565:39"><name pos:start="565:37" pos:end="565:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="567:17" pos:end="567:38"><expr pos:start="567:17" pos:end="567:37"><call pos:start="567:17" pos:end="567:37"><name pos:start="567:17" pos:end="567:25">store_reg</name><argument_list pos:start="567:26" pos:end="567:37">(<argument pos:start="567:27" pos:end="567:27"><expr pos:start="567:27" pos:end="567:27"><name pos:start="567:27" pos:end="567:27">s</name></expr></argument>, <argument pos:start="567:30" pos:end="567:31"><expr pos:start="567:30" pos:end="567:31"><name pos:start="567:30" pos:end="567:31">rd</name></expr></argument>, <argument pos:start="567:34" pos:end="567:36"><expr pos:start="567:34" pos:end="567:36"><name pos:start="567:34" pos:end="567:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="569:15" pos:end="573:13">else <block pos:start="569:20" pos:end="573:13">{<block_content pos:start="571:17" pos:end="571:32">

                <goto pos:start="571:17" pos:end="571:32">goto <name pos:start="571:22" pos:end="571:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="575:13" pos:end="575:18">break;</break>

        <case pos:start="577:9" pos:end="577:17">case <expr pos:start="577:14" pos:end="577:16"><literal type="number" pos:start="577:14" pos:end="577:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="579:13" pos:end="593:13"><if pos:start="579:13" pos:end="589:13">if <condition pos:start="579:16" pos:end="579:25">(<expr pos:start="579:17" pos:end="579:24"><name pos:start="579:17" pos:end="579:19">op1</name> <operator pos:start="579:21" pos:end="579:22">==</operator> <literal type="number" pos:start="579:24" pos:end="579:24">1</literal></expr>)</condition> <block pos:start="579:27" pos:end="589:13">{<block_content pos:start="581:17" pos:end="587:31">

                <expr_stmt pos:start="581:17" pos:end="581:25"><expr pos:start="581:17" pos:end="581:24"><call pos:start="581:17" pos:end="581:24"><name pos:start="581:17" pos:end="581:20">ARCH</name><argument_list pos:start="581:21" pos:end="581:24">(<argument pos:start="581:22" pos:end="581:23"><expr pos:start="581:22" pos:end="581:23"><literal type="number" pos:start="581:22" pos:end="581:23">5J</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="581:27" pos:end="581:35">/* bxj */</comment>

                <comment type="block" pos:start="583:17" pos:end="583:63">/* Trivial implementation equivalent to bx.  */</comment>

                <expr_stmt pos:start="585:17" pos:end="585:38"><expr pos:start="585:17" pos:end="585:37"><name pos:start="585:17" pos:end="585:19">tmp</name> <operator pos:start="585:21" pos:end="585:21">=</operator> <call pos:start="585:23" pos:end="585:37"><name pos:start="585:23" pos:end="585:30">load_reg</name><argument_list pos:start="585:31" pos:end="585:37">(<argument pos:start="585:32" pos:end="585:32"><expr pos:start="585:32" pos:end="585:32"><name pos:start="585:32" pos:end="585:32">s</name></expr></argument>, <argument pos:start="585:35" pos:end="585:36"><expr pos:start="585:35" pos:end="585:36"><name pos:start="585:35" pos:end="585:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:31"><expr pos:start="587:17" pos:end="587:30"><call pos:start="587:17" pos:end="587:30"><name pos:start="587:17" pos:end="587:22">gen_bx</name><argument_list pos:start="587:23" pos:end="587:30">(<argument pos:start="587:24" pos:end="587:24"><expr pos:start="587:24" pos:end="587:24"><name pos:start="587:24" pos:end="587:24">s</name></expr></argument>, <argument pos:start="587:27" pos:end="587:29"><expr pos:start="587:27" pos:end="587:29"><name pos:start="587:27" pos:end="587:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="589:15" pos:end="593:13">else <block pos:start="589:20" pos:end="593:13">{<block_content pos:start="591:17" pos:end="591:32">

                <goto pos:start="591:17" pos:end="591:32">goto <name pos:start="591:22" pos:end="591:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="595:13" pos:end="595:18">break;</break>

        <case pos:start="597:9" pos:end="597:17">case <expr pos:start="597:14" pos:end="597:16"><literal type="number" pos:start="597:14" pos:end="597:16">0x3</literal></expr>:</case>

            <if_stmt pos:start="599:13" pos:end="601:30"><if pos:start="599:13" pos:end="601:30">if <condition pos:start="599:16" pos:end="599:25">(<expr pos:start="599:17" pos:end="599:24"><name pos:start="599:17" pos:end="599:19">op1</name> <operator pos:start="599:21" pos:end="599:22">!=</operator> <literal type="number" pos:start="599:24" pos:end="599:24">1</literal></expr>)</condition><block type="pseudo" pos:start="601:15" pos:end="601:30"><block_content pos:start="601:15" pos:end="601:30">

              <goto pos:start="601:15" pos:end="601:30">goto <name pos:start="601:20" pos:end="601:29">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <expr_stmt pos:start="605:13" pos:end="605:20"><expr pos:start="605:13" pos:end="605:19"><call pos:start="605:13" pos:end="605:19"><name pos:start="605:13" pos:end="605:16">ARCH</name><argument_list pos:start="605:17" pos:end="605:19">(<argument pos:start="605:18" pos:end="605:18"><expr pos:start="605:18" pos:end="605:18"><literal type="number" pos:start="605:18" pos:end="605:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="607:13" pos:end="607:50">/* branch link/exchange thumb (blx) */</comment>

            <expr_stmt pos:start="609:13" pos:end="609:34"><expr pos:start="609:13" pos:end="609:33"><name pos:start="609:13" pos:end="609:15">tmp</name> <operator pos:start="609:17" pos:end="609:17">=</operator> <call pos:start="609:19" pos:end="609:33"><name pos:start="609:19" pos:end="609:26">load_reg</name><argument_list pos:start="609:27" pos:end="609:33">(<argument pos:start="609:28" pos:end="609:28"><expr pos:start="609:28" pos:end="609:28"><name pos:start="609:28" pos:end="609:28">s</name></expr></argument>, <argument pos:start="609:31" pos:end="609:32"><expr pos:start="609:31" pos:end="609:32"><name pos:start="609:31" pos:end="609:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="611:13" pos:end="611:38"><expr pos:start="611:13" pos:end="611:37"><name pos:start="611:13" pos:end="611:16">tmp2</name> <operator pos:start="611:18" pos:end="611:18">=</operator> <call pos:start="611:20" pos:end="611:37"><name pos:start="611:20" pos:end="611:35">tcg_temp_new_i32</name><argument_list pos:start="611:36" pos:end="611:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:42"><expr pos:start="613:13" pos:end="613:41"><call pos:start="613:13" pos:end="613:41"><name pos:start="613:13" pos:end="613:28">tcg_gen_movi_i32</name><argument_list pos:start="613:29" pos:end="613:41">(<argument pos:start="613:30" pos:end="613:33"><expr pos:start="613:30" pos:end="613:33"><name pos:start="613:30" pos:end="613:33">tmp2</name></expr></argument>, <argument pos:start="613:36" pos:end="613:40"><expr pos:start="613:36" pos:end="613:40"><name pos:start="613:36" pos:end="613:40"><name pos:start="613:36" pos:end="613:36">s</name><operator pos:start="613:37" pos:end="613:38">-&gt;</operator><name pos:start="613:39" pos:end="613:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="615:13" pos:end="615:35"><expr pos:start="615:13" pos:end="615:34"><call pos:start="615:13" pos:end="615:34"><name pos:start="615:13" pos:end="615:21">store_reg</name><argument_list pos:start="615:22" pos:end="615:34">(<argument pos:start="615:23" pos:end="615:23"><expr pos:start="615:23" pos:end="615:23"><name pos:start="615:23" pos:end="615:23">s</name></expr></argument>, <argument pos:start="615:26" pos:end="615:27"><expr pos:start="615:26" pos:end="615:27"><literal type="number" pos:start="615:26" pos:end="615:27">14</literal></expr></argument>, <argument pos:start="615:30" pos:end="615:33"><expr pos:start="615:30" pos:end="615:33"><name pos:start="615:30" pos:end="615:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="617:13" pos:end="617:27"><expr pos:start="617:13" pos:end="617:26"><call pos:start="617:13" pos:end="617:26"><name pos:start="617:13" pos:end="617:18">gen_bx</name><argument_list pos:start="617:19" pos:end="617:26">(<argument pos:start="617:20" pos:end="617:20"><expr pos:start="617:20" pos:end="617:20"><name pos:start="617:20" pos:end="617:20">s</name></expr></argument>, <argument pos:start="617:23" pos:end="617:25"><expr pos:start="617:23" pos:end="617:25"><name pos:start="617:23" pos:end="617:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="619:13" pos:end="619:18">break;</break>

        <case pos:start="621:9" pos:end="621:17">case <expr pos:start="621:14" pos:end="621:16"><literal type="number" pos:start="621:14" pos:end="621:16">0x4</literal></expr>:</case>

        <block pos:start="623:9" pos:end="679:9">{<block_content pos:start="627:13" pos:end="677:18">

            <comment type="block" pos:start="625:13" pos:end="625:30">/* crc32/crc32c */</comment>

            <decl_stmt pos:start="627:13" pos:end="627:47"><decl pos:start="627:13" pos:end="627:46"><type pos:start="627:13" pos:end="627:20"><name pos:start="627:13" pos:end="627:20">uint32_t</name></type> <name pos:start="627:22" pos:end="627:22">c</name> <init pos:start="627:24" pos:end="627:46">= <expr pos:start="627:26" pos:end="627:46"><call pos:start="627:26" pos:end="627:46"><name pos:start="627:26" pos:end="627:34">extract32</name><argument_list pos:start="627:35" pos:end="627:46">(<argument pos:start="627:36" pos:end="627:39"><expr pos:start="627:36" pos:end="627:39"><name pos:start="627:36" pos:end="627:39">insn</name></expr></argument>, <argument pos:start="627:42" pos:end="627:42"><expr pos:start="627:42" pos:end="627:42"><literal type="number" pos:start="627:42" pos:end="627:42">8</literal></expr></argument>, <argument pos:start="627:45" pos:end="627:45"><expr pos:start="627:45" pos:end="627:45"><literal type="number" pos:start="627:45" pos:end="627:45">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <comment type="block" pos:start="631:13" pos:end="637:15">/* Check this CPU supports ARMv8 CRC instructions.

             * op1 == 3 is UNPREDICTABLE but handle as UNDEFINED.

             * Bits 8, 10 and 11 should be zero.

             */</comment>

            <if_stmt pos:start="639:13" pos:end="645:13"><if pos:start="639:13" pos:end="645:13">if <condition pos:start="639:16" pos:end="641:31">(<expr pos:start="639:17" pos:end="641:30"><operator pos:start="639:17" pos:end="639:17">!</operator><call pos:start="639:18" pos:end="639:50"><name pos:start="639:18" pos:end="639:28">arm_feature</name><argument_list pos:start="639:29" pos:end="639:50">(<argument pos:start="639:30" pos:end="639:32"><expr pos:start="639:30" pos:end="639:32"><name pos:start="639:30" pos:end="639:32">env</name></expr></argument>, <argument pos:start="639:35" pos:end="639:49"><expr pos:start="639:35" pos:end="639:49"><name pos:start="639:35" pos:end="639:49">ARM_FEATURE_CRC</name></expr></argument>)</argument_list></call> <operator pos:start="639:52" pos:end="639:53">||</operator> <name pos:start="639:55" pos:end="639:57">op1</name> <operator pos:start="639:59" pos:end="639:60">==</operator> <literal type="number" pos:start="639:62" pos:end="639:64">0x3</literal> <operator pos:start="639:66" pos:end="639:67">||</operator>

                <operator pos:start="641:17" pos:end="641:17">(</operator><name pos:start="641:18" pos:end="641:18">c</name> <operator pos:start="641:20" pos:end="641:20">&amp;</operator> <literal type="number" pos:start="641:22" pos:end="641:24">0xd</literal><operator pos:start="641:25" pos:end="641:25">)</operator> <operator pos:start="641:27" pos:end="641:28">!=</operator> <literal type="number" pos:start="641:30" pos:end="641:30">0</literal></expr>)</condition> <block pos:start="641:33" pos:end="645:13">{<block_content pos:start="643:17" pos:end="643:32">

                <goto pos:start="643:17" pos:end="643:32">goto <name pos:start="643:22" pos:end="643:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="649:13" pos:end="649:40"><expr pos:start="649:13" pos:end="649:39"><name pos:start="649:13" pos:end="649:14">rn</name> <operator pos:start="649:16" pos:end="649:16">=</operator> <call pos:start="649:18" pos:end="649:39"><name pos:start="649:18" pos:end="649:26">extract32</name><argument_list pos:start="649:27" pos:end="649:39">(<argument pos:start="649:28" pos:end="649:31"><expr pos:start="649:28" pos:end="649:31"><name pos:start="649:28" pos:end="649:31">insn</name></expr></argument>, <argument pos:start="649:34" pos:end="649:35"><expr pos:start="649:34" pos:end="649:35"><literal type="number" pos:start="649:34" pos:end="649:35">16</literal></expr></argument>, <argument pos:start="649:38" pos:end="649:38"><expr pos:start="649:38" pos:end="649:38"><literal type="number" pos:start="649:38" pos:end="649:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="651:13" pos:end="651:40"><expr pos:start="651:13" pos:end="651:39"><name pos:start="651:13" pos:end="651:14">rd</name> <operator pos:start="651:16" pos:end="651:16">=</operator> <call pos:start="651:18" pos:end="651:39"><name pos:start="651:18" pos:end="651:26">extract32</name><argument_list pos:start="651:27" pos:end="651:39">(<argument pos:start="651:28" pos:end="651:31"><expr pos:start="651:28" pos:end="651:31"><name pos:start="651:28" pos:end="651:31">insn</name></expr></argument>, <argument pos:start="651:34" pos:end="651:35"><expr pos:start="651:34" pos:end="651:35"><literal type="number" pos:start="651:34" pos:end="651:35">12</literal></expr></argument>, <argument pos:start="651:38" pos:end="651:38"><expr pos:start="651:38" pos:end="651:38"><literal type="number" pos:start="651:38" pos:end="651:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="655:13" pos:end="655:34"><expr pos:start="655:13" pos:end="655:33"><name pos:start="655:13" pos:end="655:15">tmp</name> <operator pos:start="655:17" pos:end="655:17">=</operator> <call pos:start="655:19" pos:end="655:33"><name pos:start="655:19" pos:end="655:26">load_reg</name><argument_list pos:start="655:27" pos:end="655:33">(<argument pos:start="655:28" pos:end="655:28"><expr pos:start="655:28" pos:end="655:28"><name pos:start="655:28" pos:end="655:28">s</name></expr></argument>, <argument pos:start="655:31" pos:end="655:32"><expr pos:start="655:31" pos:end="655:32"><name pos:start="655:31" pos:end="655:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="657:13" pos:end="657:35"><expr pos:start="657:13" pos:end="657:34"><name pos:start="657:13" pos:end="657:16">tmp2</name> <operator pos:start="657:18" pos:end="657:18">=</operator> <call pos:start="657:20" pos:end="657:34"><name pos:start="657:20" pos:end="657:27">load_reg</name><argument_list pos:start="657:28" pos:end="657:34">(<argument pos:start="657:29" pos:end="657:29"><expr pos:start="657:29" pos:end="657:29"><name pos:start="657:29" pos:end="657:29">s</name></expr></argument>, <argument pos:start="657:32" pos:end="657:33"><expr pos:start="657:32" pos:end="657:33"><name pos:start="657:32" pos:end="657:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="659:13" pos:end="659:43"><expr pos:start="659:13" pos:end="659:42"><name pos:start="659:13" pos:end="659:16">tmp3</name> <operator pos:start="659:18" pos:end="659:18">=</operator> <call pos:start="659:20" pos:end="659:42"><name pos:start="659:20" pos:end="659:32">tcg_const_i32</name><argument_list pos:start="659:33" pos:end="659:42">(<argument pos:start="659:34" pos:end="659:41"><expr pos:start="659:34" pos:end="659:41"><literal type="number" pos:start="659:34" pos:end="659:34">1</literal> <operator pos:start="659:36" pos:end="659:37">&lt;&lt;</operator> <name pos:start="659:39" pos:end="659:41">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="661:13" pos:end="669:13"><if pos:start="661:13" pos:end="665:13">if <condition pos:start="661:16" pos:end="661:24">(<expr pos:start="661:17" pos:end="661:23"><name pos:start="661:17" pos:end="661:17">c</name> <operator pos:start="661:19" pos:end="661:19">&amp;</operator> <literal type="number" pos:start="661:21" pos:end="661:23">0x2</literal></expr>)</condition> <block pos:start="661:26" pos:end="665:13">{<block_content pos:start="663:17" pos:end="663:56">

                <expr_stmt pos:start="663:17" pos:end="663:56"><expr pos:start="663:17" pos:end="663:55"><call pos:start="663:17" pos:end="663:55"><name pos:start="663:17" pos:end="663:33">gen_helper_crc32c</name><argument_list pos:start="663:34" pos:end="663:55">(<argument pos:start="663:35" pos:end="663:37"><expr pos:start="663:35" pos:end="663:37"><name pos:start="663:35" pos:end="663:37">tmp</name></expr></argument>, <argument pos:start="663:40" pos:end="663:42"><expr pos:start="663:40" pos:end="663:42"><name pos:start="663:40" pos:end="663:42">tmp</name></expr></argument>, <argument pos:start="663:45" pos:end="663:48"><expr pos:start="663:45" pos:end="663:48"><name pos:start="663:45" pos:end="663:48">tmp2</name></expr></argument>, <argument pos:start="663:51" pos:end="663:54"><expr pos:start="663:51" pos:end="663:54"><name pos:start="663:51" pos:end="663:54">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="665:15" pos:end="669:13">else <block pos:start="665:20" pos:end="669:13">{<block_content pos:start="667:17" pos:end="667:55">

                <expr_stmt pos:start="667:17" pos:end="667:55"><expr pos:start="667:17" pos:end="667:54"><call pos:start="667:17" pos:end="667:54"><name pos:start="667:17" pos:end="667:32">gen_helper_crc32</name><argument_list pos:start="667:33" pos:end="667:54">(<argument pos:start="667:34" pos:end="667:36"><expr pos:start="667:34" pos:end="667:36"><name pos:start="667:34" pos:end="667:36">tmp</name></expr></argument>, <argument pos:start="667:39" pos:end="667:41"><expr pos:start="667:39" pos:end="667:41"><name pos:start="667:39" pos:end="667:41">tmp</name></expr></argument>, <argument pos:start="667:44" pos:end="667:47"><expr pos:start="667:44" pos:end="667:47"><name pos:start="667:44" pos:end="667:47">tmp2</name></expr></argument>, <argument pos:start="667:50" pos:end="667:53"><expr pos:start="667:50" pos:end="667:53"><name pos:start="667:50" pos:end="667:53">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:36"><expr pos:start="671:13" pos:end="671:35"><call pos:start="671:13" pos:end="671:35"><name pos:start="671:13" pos:end="671:29">tcg_temp_free_i32</name><argument_list pos:start="671:30" pos:end="671:35">(<argument pos:start="671:31" pos:end="671:34"><expr pos:start="671:31" pos:end="671:34"><name pos:start="671:31" pos:end="671:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="673:13" pos:end="673:36"><expr pos:start="673:13" pos:end="673:35"><call pos:start="673:13" pos:end="673:35"><name pos:start="673:13" pos:end="673:29">tcg_temp_free_i32</name><argument_list pos:start="673:30" pos:end="673:35">(<argument pos:start="673:31" pos:end="673:34"><expr pos:start="673:31" pos:end="673:34"><name pos:start="673:31" pos:end="673:34">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:34"><expr pos:start="675:13" pos:end="675:33"><call pos:start="675:13" pos:end="675:33"><name pos:start="675:13" pos:end="675:21">store_reg</name><argument_list pos:start="675:22" pos:end="675:33">(<argument pos:start="675:23" pos:end="675:23"><expr pos:start="675:23" pos:end="675:23"><name pos:start="675:23" pos:end="675:23">s</name></expr></argument>, <argument pos:start="675:26" pos:end="675:27"><expr pos:start="675:26" pos:end="675:27"><name pos:start="675:26" pos:end="675:27">rd</name></expr></argument>, <argument pos:start="675:30" pos:end="675:32"><expr pos:start="675:30" pos:end="675:32"><name pos:start="675:30" pos:end="675:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="677:13" pos:end="677:18">break;</break>

        </block_content>}</block>

        <case pos:start="681:9" pos:end="681:17">case <expr pos:start="681:14" pos:end="681:16"><literal type="number" pos:start="681:14" pos:end="681:16">0x5</literal></expr>:</case> <comment type="block" pos:start="681:19" pos:end="681:47">/* saturating add/subtract */</comment>

            <expr_stmt pos:start="683:13" pos:end="683:22"><expr pos:start="683:13" pos:end="683:21"><call pos:start="683:13" pos:end="683:21"><name pos:start="683:13" pos:end="683:16">ARCH</name><argument_list pos:start="683:17" pos:end="683:21">(<argument pos:start="683:18" pos:end="683:20"><expr pos:start="683:18" pos:end="683:20"><literal type="number" pos:start="683:18" pos:end="683:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:36"><expr pos:start="685:13" pos:end="685:35"><name pos:start="685:13" pos:end="685:14">rd</name> <operator pos:start="685:16" pos:end="685:16">=</operator> <operator pos:start="685:18" pos:end="685:18">(</operator><name pos:start="685:19" pos:end="685:22">insn</name> <operator pos:start="685:24" pos:end="685:25">&gt;&gt;</operator> <literal type="number" pos:start="685:27" pos:end="685:28">12</literal><operator pos:start="685:29" pos:end="685:29">)</operator> <operator pos:start="685:31" pos:end="685:31">&amp;</operator> <literal type="number" pos:start="685:33" pos:end="685:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="687:13" pos:end="687:36"><expr pos:start="687:13" pos:end="687:35"><name pos:start="687:13" pos:end="687:14">rn</name> <operator pos:start="687:16" pos:end="687:16">=</operator> <operator pos:start="687:18" pos:end="687:18">(</operator><name pos:start="687:19" pos:end="687:22">insn</name> <operator pos:start="687:24" pos:end="687:25">&gt;&gt;</operator> <literal type="number" pos:start="687:27" pos:end="687:28">16</literal><operator pos:start="687:29" pos:end="687:29">)</operator> <operator pos:start="687:31" pos:end="687:31">&amp;</operator> <literal type="number" pos:start="687:33" pos:end="687:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:34"><expr pos:start="689:13" pos:end="689:33"><name pos:start="689:13" pos:end="689:15">tmp</name> <operator pos:start="689:17" pos:end="689:17">=</operator> <call pos:start="689:19" pos:end="689:33"><name pos:start="689:19" pos:end="689:26">load_reg</name><argument_list pos:start="689:27" pos:end="689:33">(<argument pos:start="689:28" pos:end="689:28"><expr pos:start="689:28" pos:end="689:28"><name pos:start="689:28" pos:end="689:28">s</name></expr></argument>, <argument pos:start="689:31" pos:end="689:32"><expr pos:start="689:31" pos:end="689:32"><name pos:start="689:31" pos:end="689:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="691:13" pos:end="691:35"><expr pos:start="691:13" pos:end="691:34"><name pos:start="691:13" pos:end="691:16">tmp2</name> <operator pos:start="691:18" pos:end="691:18">=</operator> <call pos:start="691:20" pos:end="691:34"><name pos:start="691:20" pos:end="691:27">load_reg</name><argument_list pos:start="691:28" pos:end="691:34">(<argument pos:start="691:29" pos:end="691:29"><expr pos:start="691:29" pos:end="691:29"><name pos:start="691:29" pos:end="691:29">s</name></expr></argument>, <argument pos:start="691:32" pos:end="691:33"><expr pos:start="691:32" pos:end="691:33"><name pos:start="691:32" pos:end="691:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="693:13" pos:end="695:64"><if pos:start="693:13" pos:end="695:64">if <condition pos:start="693:16" pos:end="693:24">(<expr pos:start="693:17" pos:end="693:23"><name pos:start="693:17" pos:end="693:19">op1</name> <operator pos:start="693:21" pos:end="693:21">&amp;</operator> <literal type="number" pos:start="693:23" pos:end="693:23">2</literal></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="695:64"><block_content pos:start="695:17" pos:end="695:64">

                <expr_stmt pos:start="695:17" pos:end="695:64"><expr pos:start="695:17" pos:end="695:63"><call pos:start="695:17" pos:end="695:63"><name pos:start="695:17" pos:end="695:42">gen_helper_double_saturate</name><argument_list pos:start="695:43" pos:end="695:63">(<argument pos:start="695:44" pos:end="695:47"><expr pos:start="695:44" pos:end="695:47"><name pos:start="695:44" pos:end="695:47">tmp2</name></expr></argument>, <argument pos:start="695:50" pos:end="695:56"><expr pos:start="695:50" pos:end="695:56"><name pos:start="695:50" pos:end="695:56">cpu_env</name></expr></argument>, <argument pos:start="695:59" pos:end="695:62"><expr pos:start="695:59" pos:end="695:62"><name pos:start="695:59" pos:end="695:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="697:13" pos:end="703:65"><if pos:start="697:13" pos:end="699:65">if <condition pos:start="697:16" pos:end="697:24">(<expr pos:start="697:17" pos:end="697:23"><name pos:start="697:17" pos:end="697:19">op1</name> <operator pos:start="697:21" pos:end="697:21">&amp;</operator> <literal type="number" pos:start="697:23" pos:end="697:23">1</literal></expr>)</condition><block type="pseudo" pos:start="699:17" pos:end="699:65"><block_content pos:start="699:17" pos:end="699:65">

                <expr_stmt pos:start="699:17" pos:end="699:65"><expr pos:start="699:17" pos:end="699:64"><call pos:start="699:17" pos:end="699:64"><name pos:start="699:17" pos:end="699:39">gen_helper_sub_saturate</name><argument_list pos:start="699:40" pos:end="699:64">(<argument pos:start="699:41" pos:end="699:43"><expr pos:start="699:41" pos:end="699:43"><name pos:start="699:41" pos:end="699:43">tmp</name></expr></argument>, <argument pos:start="699:46" pos:end="699:52"><expr pos:start="699:46" pos:end="699:52"><name pos:start="699:46" pos:end="699:52">cpu_env</name></expr></argument>, <argument pos:start="699:55" pos:end="699:57"><expr pos:start="699:55" pos:end="699:57"><name pos:start="699:55" pos:end="699:57">tmp</name></expr></argument>, <argument pos:start="699:60" pos:end="699:63"><expr pos:start="699:60" pos:end="699:63"><name pos:start="699:60" pos:end="699:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="701:13" pos:end="703:65">else<block type="pseudo" pos:start="703:17" pos:end="703:65"><block_content pos:start="703:17" pos:end="703:65">

                <expr_stmt pos:start="703:17" pos:end="703:65"><expr pos:start="703:17" pos:end="703:64"><call pos:start="703:17" pos:end="703:64"><name pos:start="703:17" pos:end="703:39">gen_helper_add_saturate</name><argument_list pos:start="703:40" pos:end="703:64">(<argument pos:start="703:41" pos:end="703:43"><expr pos:start="703:41" pos:end="703:43"><name pos:start="703:41" pos:end="703:43">tmp</name></expr></argument>, <argument pos:start="703:46" pos:end="703:52"><expr pos:start="703:46" pos:end="703:52"><name pos:start="703:46" pos:end="703:52">cpu_env</name></expr></argument>, <argument pos:start="703:55" pos:end="703:57"><expr pos:start="703:55" pos:end="703:57"><name pos:start="703:55" pos:end="703:57">tmp</name></expr></argument>, <argument pos:start="703:60" pos:end="703:63"><expr pos:start="703:60" pos:end="703:63"><name pos:start="703:60" pos:end="703:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="705:13" pos:end="705:36"><expr pos:start="705:13" pos:end="705:35"><call pos:start="705:13" pos:end="705:35"><name pos:start="705:13" pos:end="705:29">tcg_temp_free_i32</name><argument_list pos:start="705:30" pos:end="705:35">(<argument pos:start="705:31" pos:end="705:34"><expr pos:start="705:31" pos:end="705:34"><name pos:start="705:31" pos:end="705:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="707:13" pos:end="707:34"><expr pos:start="707:13" pos:end="707:33"><call pos:start="707:13" pos:end="707:33"><name pos:start="707:13" pos:end="707:21">store_reg</name><argument_list pos:start="707:22" pos:end="707:33">(<argument pos:start="707:23" pos:end="707:23"><expr pos:start="707:23" pos:end="707:23"><name pos:start="707:23" pos:end="707:23">s</name></expr></argument>, <argument pos:start="707:26" pos:end="707:27"><expr pos:start="707:26" pos:end="707:27"><name pos:start="707:26" pos:end="707:27">rd</name></expr></argument>, <argument pos:start="707:30" pos:end="707:32"><expr pos:start="707:30" pos:end="707:32"><name pos:start="707:30" pos:end="707:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="709:13" pos:end="709:18">break;</break>

        <case pos:start="711:9" pos:end="711:15">case <expr pos:start="711:14" pos:end="711:14"><literal type="number" pos:start="711:14" pos:end="711:14">7</literal></expr>:</case>

        <block pos:start="713:9" pos:end="737:9">{<block_content pos:start="715:13" pos:end="735:18">

            <decl_stmt pos:start="715:13" pos:end="715:78"><decl pos:start="715:13" pos:end="715:77"><type pos:start="715:13" pos:end="715:15"><name pos:start="715:13" pos:end="715:15">int</name></type> <name pos:start="715:17" pos:end="715:21">imm16</name> <init pos:start="715:23" pos:end="715:77">= <expr pos:start="715:25" pos:end="715:77"><call pos:start="715:25" pos:end="715:45"><name pos:start="715:25" pos:end="715:33">extract32</name><argument_list pos:start="715:34" pos:end="715:45">(<argument pos:start="715:35" pos:end="715:38"><expr pos:start="715:35" pos:end="715:38"><name pos:start="715:35" pos:end="715:38">insn</name></expr></argument>, <argument pos:start="715:41" pos:end="715:41"><expr pos:start="715:41" pos:end="715:41"><literal type="number" pos:start="715:41" pos:end="715:41">0</literal></expr></argument>, <argument pos:start="715:44" pos:end="715:44"><expr pos:start="715:44" pos:end="715:44"><literal type="number" pos:start="715:44" pos:end="715:44">4</literal></expr></argument>)</argument_list></call> <operator pos:start="715:47" pos:end="715:47">|</operator> <operator pos:start="715:49" pos:end="715:49">(</operator><call pos:start="715:50" pos:end="715:71"><name pos:start="715:50" pos:end="715:58">extract32</name><argument_list pos:start="715:59" pos:end="715:71">(<argument pos:start="715:60" pos:end="715:63"><expr pos:start="715:60" pos:end="715:63"><name pos:start="715:60" pos:end="715:63">insn</name></expr></argument>, <argument pos:start="715:66" pos:end="715:66"><expr pos:start="715:66" pos:end="715:66"><literal type="number" pos:start="715:66" pos:end="715:66">8</literal></expr></argument>, <argument pos:start="715:69" pos:end="715:70"><expr pos:start="715:69" pos:end="715:70"><literal type="number" pos:start="715:69" pos:end="715:70">12</literal></expr></argument>)</argument_list></call> <operator pos:start="715:73" pos:end="715:74">&lt;&lt;</operator> <literal type="number" pos:start="715:76" pos:end="715:76">4</literal><operator pos:start="715:77" pos:end="715:77">)</operator></expr></init></decl>;</decl_stmt>

            <comment type="block" pos:start="717:13" pos:end="721:27">/* SMC instruction (op1 == 3)

               and undefined instructions (op1 == 0 || op1 == 2)

               will trap */</comment>

            <if_stmt pos:start="723:13" pos:end="727:13"><if pos:start="723:13" pos:end="727:13">if <condition pos:start="723:16" pos:end="723:25">(<expr pos:start="723:17" pos:end="723:24"><name pos:start="723:17" pos:end="723:19">op1</name> <operator pos:start="723:21" pos:end="723:22">!=</operator> <literal type="number" pos:start="723:24" pos:end="723:24">1</literal></expr>)</condition> <block pos:start="723:27" pos:end="727:13">{<block_content pos:start="725:17" pos:end="725:32">

                <goto pos:start="725:17" pos:end="725:32">goto <name pos:start="725:22" pos:end="725:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="729:13" pos:end="729:22">/* bkpt */</comment>

            <expr_stmt pos:start="731:13" pos:end="731:20"><expr pos:start="731:13" pos:end="731:19"><call pos:start="731:13" pos:end="731:19"><name pos:start="731:13" pos:end="731:16">ARCH</name><argument_list pos:start="731:17" pos:end="731:19">(<argument pos:start="731:18" pos:end="731:18"><expr pos:start="731:18" pos:end="731:18"><literal type="number" pos:start="731:18" pos:end="731:18">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:77"><expr pos:start="733:13" pos:end="733:76"><call pos:start="733:13" pos:end="733:76"><name pos:start="733:13" pos:end="733:30">gen_exception_insn</name><argument_list pos:start="733:31" pos:end="733:76">(<argument pos:start="733:32" pos:end="733:32"><expr pos:start="733:32" pos:end="733:32"><name pos:start="733:32" pos:end="733:32">s</name></expr></argument>, <argument pos:start="733:35" pos:end="733:35"><expr pos:start="733:35" pos:end="733:35"><literal type="number" pos:start="733:35" pos:end="733:35">4</literal></expr></argument>, <argument pos:start="733:38" pos:end="733:46"><expr pos:start="733:38" pos:end="733:46"><name pos:start="733:38" pos:end="733:46">EXCP_BKPT</name></expr></argument>, <argument pos:start="733:49" pos:end="733:75"><expr pos:start="733:49" pos:end="733:75"><call pos:start="733:49" pos:end="733:75"><name pos:start="733:49" pos:end="733:61">syn_aa32_bkpt</name><argument_list pos:start="733:62" pos:end="733:75">(<argument pos:start="733:63" pos:end="733:67"><expr pos:start="733:63" pos:end="733:67"><name pos:start="733:63" pos:end="733:67">imm16</name></expr></argument>, <argument pos:start="733:70" pos:end="733:74"><expr pos:start="733:70" pos:end="733:74"><name pos:start="733:70" pos:end="733:74">false</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        </block_content>}</block>

        <case pos:start="739:9" pos:end="739:17">case <expr pos:start="739:14" pos:end="739:16"><literal type="number" pos:start="739:14" pos:end="739:16">0x8</literal></expr>:</case> <comment type="block" pos:start="739:19" pos:end="739:39">/* signed multiply */</comment>

        <case pos:start="741:9" pos:end="741:17">case <expr pos:start="741:14" pos:end="741:16"><literal type="number" pos:start="741:14" pos:end="741:16">0xa</literal></expr>:</case>

        <case pos:start="743:9" pos:end="743:17">case <expr pos:start="743:14" pos:end="743:16"><literal type="number" pos:start="743:14" pos:end="743:16">0xc</literal></expr>:</case>

        <case pos:start="745:9" pos:end="745:17">case <expr pos:start="745:14" pos:end="745:16"><literal type="number" pos:start="745:14" pos:end="745:16">0xe</literal></expr>:</case>

            <expr_stmt pos:start="747:13" pos:end="747:22"><expr pos:start="747:13" pos:end="747:21"><call pos:start="747:13" pos:end="747:21"><name pos:start="747:13" pos:end="747:16">ARCH</name><argument_list pos:start="747:17" pos:end="747:21">(<argument pos:start="747:18" pos:end="747:20"><expr pos:start="747:18" pos:end="747:20"><literal type="number" pos:start="747:18" pos:end="747:20">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="749:13" pos:end="749:35"><expr pos:start="749:13" pos:end="749:34"><name pos:start="749:13" pos:end="749:14">rs</name> <operator pos:start="749:16" pos:end="749:16">=</operator> <operator pos:start="749:18" pos:end="749:18">(</operator><name pos:start="749:19" pos:end="749:22">insn</name> <operator pos:start="749:24" pos:end="749:25">&gt;&gt;</operator> <literal type="number" pos:start="749:27" pos:end="749:27">8</literal><operator pos:start="749:28" pos:end="749:28">)</operator> <operator pos:start="749:30" pos:end="749:30">&amp;</operator> <literal type="number" pos:start="749:32" pos:end="749:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:36"><expr pos:start="751:13" pos:end="751:35"><name pos:start="751:13" pos:end="751:14">rn</name> <operator pos:start="751:16" pos:end="751:16">=</operator> <operator pos:start="751:18" pos:end="751:18">(</operator><name pos:start="751:19" pos:end="751:22">insn</name> <operator pos:start="751:24" pos:end="751:25">&gt;&gt;</operator> <literal type="number" pos:start="751:27" pos:end="751:28">12</literal><operator pos:start="751:29" pos:end="751:29">)</operator> <operator pos:start="751:31" pos:end="751:31">&amp;</operator> <literal type="number" pos:start="751:33" pos:end="751:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:36"><expr pos:start="753:13" pos:end="753:35"><name pos:start="753:13" pos:end="753:14">rd</name> <operator pos:start="753:16" pos:end="753:16">=</operator> <operator pos:start="753:18" pos:end="753:18">(</operator><name pos:start="753:19" pos:end="753:22">insn</name> <operator pos:start="753:24" pos:end="753:25">&gt;&gt;</operator> <literal type="number" pos:start="753:27" pos:end="753:28">16</literal><operator pos:start="753:29" pos:end="753:29">)</operator> <operator pos:start="753:31" pos:end="753:31">&amp;</operator> <literal type="number" pos:start="753:33" pos:end="753:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="755:13" pos:end="835:13"><if pos:start="755:13" pos:end="793:13">if <condition pos:start="755:16" pos:end="755:25">(<expr pos:start="755:17" pos:end="755:24"><name pos:start="755:17" pos:end="755:19">op1</name> <operator pos:start="755:21" pos:end="755:22">==</operator> <literal type="number" pos:start="755:24" pos:end="755:24">1</literal></expr>)</condition> <block pos:start="755:27" pos:end="793:13">{<block_content pos:start="759:17" pos:end="791:38">

                <comment type="block" pos:start="757:17" pos:end="757:37">/* (32 * 16) &gt;&gt; 16 */</comment>

                <expr_stmt pos:start="759:17" pos:end="759:38"><expr pos:start="759:17" pos:end="759:37"><name pos:start="759:17" pos:end="759:19">tmp</name> <operator pos:start="759:21" pos:end="759:21">=</operator> <call pos:start="759:23" pos:end="759:37"><name pos:start="759:23" pos:end="759:30">load_reg</name><argument_list pos:start="759:31" pos:end="759:37">(<argument pos:start="759:32" pos:end="759:32"><expr pos:start="759:32" pos:end="759:32"><name pos:start="759:32" pos:end="759:32">s</name></expr></argument>, <argument pos:start="759:35" pos:end="759:36"><expr pos:start="759:35" pos:end="759:36"><name pos:start="759:35" pos:end="759:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="761:17" pos:end="761:39"><expr pos:start="761:17" pos:end="761:38"><name pos:start="761:17" pos:end="761:20">tmp2</name> <operator pos:start="761:22" pos:end="761:22">=</operator> <call pos:start="761:24" pos:end="761:38"><name pos:start="761:24" pos:end="761:31">load_reg</name><argument_list pos:start="761:32" pos:end="761:38">(<argument pos:start="761:33" pos:end="761:33"><expr pos:start="761:33" pos:end="761:33"><name pos:start="761:33" pos:end="761:33">s</name></expr></argument>, <argument pos:start="761:36" pos:end="761:37"><expr pos:start="761:36" pos:end="761:37"><name pos:start="761:36" pos:end="761:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="763:17" pos:end="769:35"><if pos:start="763:17" pos:end="765:53">if <condition pos:start="763:20" pos:end="763:27">(<expr pos:start="763:21" pos:end="763:26"><name pos:start="763:21" pos:end="763:22">sh</name> <operator pos:start="763:24" pos:end="763:24">&amp;</operator> <literal type="number" pos:start="763:26" pos:end="763:26">4</literal></expr>)</condition><block type="pseudo" pos:start="765:21" pos:end="765:53"><block_content pos:start="765:21" pos:end="765:53">

                    <expr_stmt pos:start="765:21" pos:end="765:53"><expr pos:start="765:21" pos:end="765:52"><call pos:start="765:21" pos:end="765:52"><name pos:start="765:21" pos:end="765:36">tcg_gen_sari_i32</name><argument_list pos:start="765:37" pos:end="765:52">(<argument pos:start="765:38" pos:end="765:41"><expr pos:start="765:38" pos:end="765:41"><name pos:start="765:38" pos:end="765:41">tmp2</name></expr></argument>, <argument pos:start="765:44" pos:end="765:47"><expr pos:start="765:44" pos:end="765:47"><name pos:start="765:44" pos:end="765:47">tmp2</name></expr></argument>, <argument pos:start="765:50" pos:end="765:51"><expr pos:start="765:50" pos:end="765:51"><literal type="number" pos:start="765:50" pos:end="765:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="767:17" pos:end="769:35">else<block type="pseudo" pos:start="769:21" pos:end="769:35"><block_content pos:start="769:21" pos:end="769:35">

                    <expr_stmt pos:start="769:21" pos:end="769:35"><expr pos:start="769:21" pos:end="769:34"><call pos:start="769:21" pos:end="769:34"><name pos:start="769:21" pos:end="769:28">gen_sxth</name><argument_list pos:start="769:29" pos:end="769:34">(<argument pos:start="769:30" pos:end="769:33"><expr pos:start="769:30" pos:end="769:33"><name pos:start="769:30" pos:end="769:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="771:17" pos:end="771:52"><expr pos:start="771:17" pos:end="771:51"><name pos:start="771:17" pos:end="771:21">tmp64</name> <operator pos:start="771:23" pos:end="771:23">=</operator> <call pos:start="771:25" pos:end="771:51"><name pos:start="771:25" pos:end="771:40">gen_muls_i64_i32</name><argument_list pos:start="771:41" pos:end="771:51">(<argument pos:start="771:42" pos:end="771:44"><expr pos:start="771:42" pos:end="771:44"><name pos:start="771:42" pos:end="771:44">tmp</name></expr></argument>, <argument pos:start="771:47" pos:end="771:50"><expr pos:start="771:47" pos:end="771:50"><name pos:start="771:47" pos:end="771:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="773:17" pos:end="773:51"><expr pos:start="773:17" pos:end="773:50"><call pos:start="773:17" pos:end="773:50"><name pos:start="773:17" pos:end="773:32">tcg_gen_shri_i64</name><argument_list pos:start="773:33" pos:end="773:50">(<argument pos:start="773:34" pos:end="773:38"><expr pos:start="773:34" pos:end="773:38"><name pos:start="773:34" pos:end="773:38">tmp64</name></expr></argument>, <argument pos:start="773:41" pos:end="773:45"><expr pos:start="773:41" pos:end="773:45"><name pos:start="773:41" pos:end="773:45">tmp64</name></expr></argument>, <argument pos:start="773:48" pos:end="773:49"><expr pos:start="773:48" pos:end="773:49"><literal type="number" pos:start="773:48" pos:end="773:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="775:17" pos:end="775:41"><expr pos:start="775:17" pos:end="775:40"><name pos:start="775:17" pos:end="775:19">tmp</name> <operator pos:start="775:21" pos:end="775:21">=</operator> <call pos:start="775:23" pos:end="775:40"><name pos:start="775:23" pos:end="775:38">tcg_temp_new_i32</name><argument_list pos:start="775:39" pos:end="775:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="777:17" pos:end="777:50"><expr pos:start="777:17" pos:end="777:49"><call pos:start="777:17" pos:end="777:49"><name pos:start="777:17" pos:end="777:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="777:38" pos:end="777:49">(<argument pos:start="777:39" pos:end="777:41"><expr pos:start="777:39" pos:end="777:41"><name pos:start="777:39" pos:end="777:41">tmp</name></expr></argument>, <argument pos:start="777:44" pos:end="777:48"><expr pos:start="777:44" pos:end="777:48"><name pos:start="777:44" pos:end="777:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="779:17" pos:end="779:41"><expr pos:start="779:17" pos:end="779:40"><call pos:start="779:17" pos:end="779:40"><name pos:start="779:17" pos:end="779:33">tcg_temp_free_i64</name><argument_list pos:start="779:34" pos:end="779:40">(<argument pos:start="779:35" pos:end="779:39"><expr pos:start="779:35" pos:end="779:39"><name pos:start="779:35" pos:end="779:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="781:17" pos:end="789:17"><if pos:start="781:17" pos:end="789:17">if <condition pos:start="781:20" pos:end="781:34">(<expr pos:start="781:21" pos:end="781:33"><operator pos:start="781:21" pos:end="781:21">(</operator><name pos:start="781:22" pos:end="781:23">sh</name> <operator pos:start="781:25" pos:end="781:25">&amp;</operator> <literal type="number" pos:start="781:27" pos:end="781:27">2</literal><operator pos:start="781:28" pos:end="781:28">)</operator> <operator pos:start="781:30" pos:end="781:31">==</operator> <literal type="number" pos:start="781:33" pos:end="781:33">0</literal></expr>)</condition> <block pos:start="781:36" pos:end="789:17">{<block_content pos:start="783:21" pos:end="787:44">

                    <expr_stmt pos:start="783:21" pos:end="783:43"><expr pos:start="783:21" pos:end="783:42"><name pos:start="783:21" pos:end="783:24">tmp2</name> <operator pos:start="783:26" pos:end="783:26">=</operator> <call pos:start="783:28" pos:end="783:42"><name pos:start="783:28" pos:end="783:35">load_reg</name><argument_list pos:start="783:36" pos:end="783:42">(<argument pos:start="783:37" pos:end="783:37"><expr pos:start="783:37" pos:end="783:37"><name pos:start="783:37" pos:end="783:37">s</name></expr></argument>, <argument pos:start="783:40" pos:end="783:41"><expr pos:start="783:40" pos:end="783:41"><name pos:start="783:40" pos:end="783:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="785:21" pos:end="785:65"><expr pos:start="785:21" pos:end="785:64"><call pos:start="785:21" pos:end="785:64"><name pos:start="785:21" pos:end="785:39">gen_helper_add_setq</name><argument_list pos:start="785:40" pos:end="785:64">(<argument pos:start="785:41" pos:end="785:43"><expr pos:start="785:41" pos:end="785:43"><name pos:start="785:41" pos:end="785:43">tmp</name></expr></argument>, <argument pos:start="785:46" pos:end="785:52"><expr pos:start="785:46" pos:end="785:52"><name pos:start="785:46" pos:end="785:52">cpu_env</name></expr></argument>, <argument pos:start="785:55" pos:end="785:57"><expr pos:start="785:55" pos:end="785:57"><name pos:start="785:55" pos:end="785:57">tmp</name></expr></argument>, <argument pos:start="785:60" pos:end="785:63"><expr pos:start="785:60" pos:end="785:63"><name pos:start="785:60" pos:end="785:63">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="787:21" pos:end="787:44"><expr pos:start="787:21" pos:end="787:43"><call pos:start="787:21" pos:end="787:43"><name pos:start="787:21" pos:end="787:37">tcg_temp_free_i32</name><argument_list pos:start="787:38" pos:end="787:43">(<argument pos:start="787:39" pos:end="787:42"><expr pos:start="787:39" pos:end="787:42"><name pos:start="787:39" pos:end="787:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="791:17" pos:end="791:38"><expr pos:start="791:17" pos:end="791:37"><call pos:start="791:17" pos:end="791:37"><name pos:start="791:17" pos:end="791:25">store_reg</name><argument_list pos:start="791:26" pos:end="791:37">(<argument pos:start="791:27" pos:end="791:27"><expr pos:start="791:27" pos:end="791:27"><name pos:start="791:27" pos:end="791:27">s</name></expr></argument>, <argument pos:start="791:30" pos:end="791:31"><expr pos:start="791:30" pos:end="791:31"><name pos:start="791:30" pos:end="791:31">rd</name></expr></argument>, <argument pos:start="791:34" pos:end="791:36"><expr pos:start="791:34" pos:end="791:36"><name pos:start="791:34" pos:end="791:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="793:15" pos:end="835:13">else <block pos:start="793:20" pos:end="835:13">{<block_content pos:start="797:17" pos:end="833:17">

                <comment type="block" pos:start="795:17" pos:end="795:29">/* 16 * 16 */</comment>

                <expr_stmt pos:start="797:17" pos:end="797:38"><expr pos:start="797:17" pos:end="797:37"><name pos:start="797:17" pos:end="797:19">tmp</name> <operator pos:start="797:21" pos:end="797:21">=</operator> <call pos:start="797:23" pos:end="797:37"><name pos:start="797:23" pos:end="797:30">load_reg</name><argument_list pos:start="797:31" pos:end="797:37">(<argument pos:start="797:32" pos:end="797:32"><expr pos:start="797:32" pos:end="797:32"><name pos:start="797:32" pos:end="797:32">s</name></expr></argument>, <argument pos:start="797:35" pos:end="797:36"><expr pos:start="797:35" pos:end="797:36"><name pos:start="797:35" pos:end="797:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="799:17" pos:end="799:39"><expr pos:start="799:17" pos:end="799:38"><name pos:start="799:17" pos:end="799:20">tmp2</name> <operator pos:start="799:22" pos:end="799:22">=</operator> <call pos:start="799:24" pos:end="799:38"><name pos:start="799:24" pos:end="799:31">load_reg</name><argument_list pos:start="799:32" pos:end="799:38">(<argument pos:start="799:33" pos:end="799:33"><expr pos:start="799:33" pos:end="799:33"><name pos:start="799:33" pos:end="799:33">s</name></expr></argument>, <argument pos:start="799:36" pos:end="799:37"><expr pos:start="799:36" pos:end="799:37"><name pos:start="799:36" pos:end="799:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="801:17" pos:end="801:53"><expr pos:start="801:17" pos:end="801:52"><call pos:start="801:17" pos:end="801:52"><name pos:start="801:17" pos:end="801:25">gen_mulxy</name><argument_list pos:start="801:26" pos:end="801:52">(<argument pos:start="801:27" pos:end="801:29"><expr pos:start="801:27" pos:end="801:29"><name pos:start="801:27" pos:end="801:29">tmp</name></expr></argument>, <argument pos:start="801:32" pos:end="801:35"><expr pos:start="801:32" pos:end="801:35"><name pos:start="801:32" pos:end="801:35">tmp2</name></expr></argument>, <argument pos:start="801:38" pos:end="801:43"><expr pos:start="801:38" pos:end="801:43"><name pos:start="801:38" pos:end="801:39">sh</name> <operator pos:start="801:41" pos:end="801:41">&amp;</operator> <literal type="number" pos:start="801:43" pos:end="801:43">2</literal></expr></argument>, <argument pos:start="801:46" pos:end="801:51"><expr pos:start="801:46" pos:end="801:51"><name pos:start="801:46" pos:end="801:47">sh</name> <operator pos:start="801:49" pos:end="801:49">&amp;</operator> <literal type="number" pos:start="801:51" pos:end="801:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="803:17" pos:end="803:40"><expr pos:start="803:17" pos:end="803:39"><call pos:start="803:17" pos:end="803:39"><name pos:start="803:17" pos:end="803:33">tcg_temp_free_i32</name><argument_list pos:start="803:34" pos:end="803:39">(<argument pos:start="803:35" pos:end="803:38"><expr pos:start="803:35" pos:end="803:38"><name pos:start="803:35" pos:end="803:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="805:17" pos:end="833:17"><if pos:start="805:17" pos:end="819:17">if <condition pos:start="805:20" pos:end="805:29">(<expr pos:start="805:21" pos:end="805:28"><name pos:start="805:21" pos:end="805:23">op1</name> <operator pos:start="805:25" pos:end="805:26">==</operator> <literal type="number" pos:start="805:28" pos:end="805:28">2</literal></expr>)</condition> <block pos:start="805:31" pos:end="819:17">{<block_content pos:start="807:21" pos:end="817:45">

                    <expr_stmt pos:start="807:21" pos:end="807:47"><expr pos:start="807:21" pos:end="807:46"><name pos:start="807:21" pos:end="807:25">tmp64</name> <operator pos:start="807:27" pos:end="807:27">=</operator> <call pos:start="807:29" pos:end="807:46"><name pos:start="807:29" pos:end="807:44">tcg_temp_new_i64</name><argument_list pos:start="807:45" pos:end="807:46">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="809:21" pos:end="809:52"><expr pos:start="809:21" pos:end="809:51"><call pos:start="809:21" pos:end="809:51"><name pos:start="809:21" pos:end="809:39">tcg_gen_ext_i32_i64</name><argument_list pos:start="809:40" pos:end="809:51">(<argument pos:start="809:41" pos:end="809:45"><expr pos:start="809:41" pos:end="809:45"><name pos:start="809:41" pos:end="809:45">tmp64</name></expr></argument>, <argument pos:start="809:48" pos:end="809:50"><expr pos:start="809:48" pos:end="809:50"><name pos:start="809:48" pos:end="809:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="811:21" pos:end="811:43"><expr pos:start="811:21" pos:end="811:42"><call pos:start="811:21" pos:end="811:42"><name pos:start="811:21" pos:end="811:37">tcg_temp_free_i32</name><argument_list pos:start="811:38" pos:end="811:42">(<argument pos:start="811:39" pos:end="811:41"><expr pos:start="811:39" pos:end="811:41"><name pos:start="811:39" pos:end="811:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="813:21" pos:end="813:47"><expr pos:start="813:21" pos:end="813:46"><call pos:start="813:21" pos:end="813:46"><name pos:start="813:21" pos:end="813:28">gen_addq</name><argument_list pos:start="813:29" pos:end="813:46">(<argument pos:start="813:30" pos:end="813:30"><expr pos:start="813:30" pos:end="813:30"><name pos:start="813:30" pos:end="813:30">s</name></expr></argument>, <argument pos:start="813:33" pos:end="813:37"><expr pos:start="813:33" pos:end="813:37"><name pos:start="813:33" pos:end="813:37">tmp64</name></expr></argument>, <argument pos:start="813:40" pos:end="813:41"><expr pos:start="813:40" pos:end="813:41"><name pos:start="813:40" pos:end="813:41">rn</name></expr></argument>, <argument pos:start="813:44" pos:end="813:45"><expr pos:start="813:44" pos:end="813:45"><name pos:start="813:44" pos:end="813:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="815:21" pos:end="815:53"><expr pos:start="815:21" pos:end="815:52"><call pos:start="815:21" pos:end="815:52"><name pos:start="815:21" pos:end="815:34">gen_storeq_reg</name><argument_list pos:start="815:35" pos:end="815:52">(<argument pos:start="815:36" pos:end="815:36"><expr pos:start="815:36" pos:end="815:36"><name pos:start="815:36" pos:end="815:36">s</name></expr></argument>, <argument pos:start="815:39" pos:end="815:40"><expr pos:start="815:39" pos:end="815:40"><name pos:start="815:39" pos:end="815:40">rn</name></expr></argument>, <argument pos:start="815:43" pos:end="815:44"><expr pos:start="815:43" pos:end="815:44"><name pos:start="815:43" pos:end="815:44">rd</name></expr></argument>, <argument pos:start="815:47" pos:end="815:51"><expr pos:start="815:47" pos:end="815:51"><name pos:start="815:47" pos:end="815:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="817:21" pos:end="817:45"><expr pos:start="817:21" pos:end="817:44"><call pos:start="817:21" pos:end="817:44"><name pos:start="817:21" pos:end="817:37">tcg_temp_free_i64</name><argument_list pos:start="817:38" pos:end="817:44">(<argument pos:start="817:39" pos:end="817:43"><expr pos:start="817:39" pos:end="817:43"><name pos:start="817:39" pos:end="817:43">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="819:19" pos:end="833:17">else <block pos:start="819:24" pos:end="833:17">{<block_content pos:start="821:21" pos:end="831:42">

                    <if_stmt pos:start="821:21" pos:end="829:21"><if pos:start="821:21" pos:end="829:21">if <condition pos:start="821:24" pos:end="821:33">(<expr pos:start="821:25" pos:end="821:32"><name pos:start="821:25" pos:end="821:27">op1</name> <operator pos:start="821:29" pos:end="821:30">==</operator> <literal type="number" pos:start="821:32" pos:end="821:32">0</literal></expr>)</condition> <block pos:start="821:35" pos:end="829:21">{<block_content pos:start="823:25" pos:end="827:48">

                        <expr_stmt pos:start="823:25" pos:end="823:47"><expr pos:start="823:25" pos:end="823:46"><name pos:start="823:25" pos:end="823:28">tmp2</name> <operator pos:start="823:30" pos:end="823:30">=</operator> <call pos:start="823:32" pos:end="823:46"><name pos:start="823:32" pos:end="823:39">load_reg</name><argument_list pos:start="823:40" pos:end="823:46">(<argument pos:start="823:41" pos:end="823:41"><expr pos:start="823:41" pos:end="823:41"><name pos:start="823:41" pos:end="823:41">s</name></expr></argument>, <argument pos:start="823:44" pos:end="823:45"><expr pos:start="823:44" pos:end="823:45"><name pos:start="823:44" pos:end="823:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="825:25" pos:end="825:69"><expr pos:start="825:25" pos:end="825:68"><call pos:start="825:25" pos:end="825:68"><name pos:start="825:25" pos:end="825:43">gen_helper_add_setq</name><argument_list pos:start="825:44" pos:end="825:68">(<argument pos:start="825:45" pos:end="825:47"><expr pos:start="825:45" pos:end="825:47"><name pos:start="825:45" pos:end="825:47">tmp</name></expr></argument>, <argument pos:start="825:50" pos:end="825:56"><expr pos:start="825:50" pos:end="825:56"><name pos:start="825:50" pos:end="825:56">cpu_env</name></expr></argument>, <argument pos:start="825:59" pos:end="825:61"><expr pos:start="825:59" pos:end="825:61"><name pos:start="825:59" pos:end="825:61">tmp</name></expr></argument>, <argument pos:start="825:64" pos:end="825:67"><expr pos:start="825:64" pos:end="825:67"><name pos:start="825:64" pos:end="825:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="827:25" pos:end="827:48"><expr pos:start="827:25" pos:end="827:47"><call pos:start="827:25" pos:end="827:47"><name pos:start="827:25" pos:end="827:41">tcg_temp_free_i32</name><argument_list pos:start="827:42" pos:end="827:47">(<argument pos:start="827:43" pos:end="827:46"><expr pos:start="827:43" pos:end="827:46"><name pos:start="827:43" pos:end="827:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="831:21" pos:end="831:42"><expr pos:start="831:21" pos:end="831:41"><call pos:start="831:21" pos:end="831:41"><name pos:start="831:21" pos:end="831:29">store_reg</name><argument_list pos:start="831:30" pos:end="831:41">(<argument pos:start="831:31" pos:end="831:31"><expr pos:start="831:31" pos:end="831:31"><name pos:start="831:31" pos:end="831:31">s</name></expr></argument>, <argument pos:start="831:34" pos:end="831:35"><expr pos:start="831:34" pos:end="831:35"><name pos:start="831:34" pos:end="831:35">rd</name></expr></argument>, <argument pos:start="831:38" pos:end="831:40"><expr pos:start="831:38" pos:end="831:40"><name pos:start="831:38" pos:end="831:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="837:13" pos:end="837:18">break;</break>

        <default pos:start="839:9" pos:end="839:16">default:</default>

            <goto pos:start="841:13" pos:end="841:28">goto <name pos:start="841:18" pos:end="841:27">illegal_op</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="845:7" pos:end="1207:5">else if <condition pos:start="845:15" pos:end="849:50">(<expr pos:start="845:16" pos:end="849:49"><operator pos:start="845:16" pos:end="845:16">(</operator><operator pos:start="845:17" pos:end="845:17">(</operator><name pos:start="845:18" pos:end="845:21">insn</name> <operator pos:start="845:23" pos:end="845:23">&amp;</operator> <literal type="number" pos:start="845:25" pos:end="845:34">0x0e000000</literal><operator pos:start="845:35" pos:end="845:35">)</operator> <operator pos:start="845:37" pos:end="845:38">==</operator> <literal type="number" pos:start="845:40" pos:end="845:40">0</literal> <operator pos:start="845:42" pos:end="845:43">&amp;&amp;</operator>

                <operator pos:start="847:17" pos:end="847:17">(</operator><name pos:start="847:18" pos:end="847:21">insn</name> <operator pos:start="847:23" pos:end="847:23">&amp;</operator> <literal type="number" pos:start="847:25" pos:end="847:34">0x00000090</literal><operator pos:start="847:35" pos:end="847:35">)</operator> <operator pos:start="847:37" pos:end="847:38">!=</operator> <literal type="number" pos:start="847:40" pos:end="847:43">0x90</literal><operator pos:start="847:44" pos:end="847:44">)</operator> <operator pos:start="847:46" pos:end="847:47">||</operator>

               <operator pos:start="849:16" pos:end="849:16">(</operator><operator pos:start="849:17" pos:end="849:17">(</operator><name pos:start="849:18" pos:end="849:21">insn</name> <operator pos:start="849:23" pos:end="849:23">&amp;</operator> <literal type="number" pos:start="849:25" pos:end="849:34">0x0e000000</literal><operator pos:start="849:35" pos:end="849:35">)</operator> <operator pos:start="849:37" pos:end="849:38">==</operator> <operator pos:start="849:40" pos:end="849:40">(</operator><literal type="number" pos:start="849:41" pos:end="849:41">1</literal> <operator pos:start="849:43" pos:end="849:44">&lt;&lt;</operator> <literal type="number" pos:start="849:46" pos:end="849:47">25</literal><operator pos:start="849:48" pos:end="849:48">)</operator><operator pos:start="849:49" pos:end="849:49">)</operator></expr>)</condition> <block pos:start="849:52" pos:end="1207:5">{<block_content pos:start="851:9" pos:end="1205:9">

        <decl_stmt pos:start="851:9" pos:end="851:38"><decl pos:start="851:9" pos:end="851:18"><type pos:start="851:9" pos:end="851:11"><name pos:start="851:9" pos:end="851:11">int</name></type> <name pos:start="851:13" pos:end="851:18">set_cc</name></decl>, <decl pos:start="851:21" pos:end="851:28"><type ref="prev" pos:start="851:9" pos:end="851:11"/><name pos:start="851:21" pos:end="851:28">logic_cc</name></decl>, <decl pos:start="851:31" pos:end="851:37"><type ref="prev" pos:start="851:9" pos:end="851:11"/><name pos:start="851:31" pos:end="851:37">shiftop</name></decl>;</decl_stmt>



        <expr_stmt pos:start="855:9" pos:end="855:33"><expr pos:start="855:9" pos:end="855:32"><name pos:start="855:9" pos:end="855:11">op1</name> <operator pos:start="855:13" pos:end="855:13">=</operator> <operator pos:start="855:15" pos:end="855:15">(</operator><name pos:start="855:16" pos:end="855:19">insn</name> <operator pos:start="855:21" pos:end="855:22">&gt;&gt;</operator> <literal type="number" pos:start="855:24" pos:end="855:25">21</literal><operator pos:start="855:26" pos:end="855:26">)</operator> <operator pos:start="855:28" pos:end="855:28">&amp;</operator> <literal type="number" pos:start="855:30" pos:end="855:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="857:9" pos:end="857:34"><expr pos:start="857:9" pos:end="857:33"><name pos:start="857:9" pos:end="857:14">set_cc</name> <operator pos:start="857:16" pos:end="857:16">=</operator> <operator pos:start="857:18" pos:end="857:18">(</operator><name pos:start="857:19" pos:end="857:22">insn</name> <operator pos:start="857:24" pos:end="857:25">&gt;&gt;</operator> <literal type="number" pos:start="857:27" pos:end="857:28">20</literal><operator pos:start="857:29" pos:end="857:29">)</operator> <operator pos:start="857:31" pos:end="857:31">&amp;</operator> <literal type="number" pos:start="857:33" pos:end="857:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="859:9" pos:end="859:48"><expr pos:start="859:9" pos:end="859:47"><name pos:start="859:9" pos:end="859:16">logic_cc</name> <operator pos:start="859:18" pos:end="859:18">=</operator> <name pos:start="859:20" pos:end="859:38"><name pos:start="859:20" pos:end="859:33">table_logic_cc</name><index pos:start="859:34" pos:end="859:38">[<expr pos:start="859:35" pos:end="859:37"><name pos:start="859:35" pos:end="859:37">op1</name></expr>]</index></name> <operator pos:start="859:40" pos:end="859:40">&amp;</operator> <name pos:start="859:42" pos:end="859:47">set_cc</name></expr>;</expr_stmt>



        <comment type="block" pos:start="863:9" pos:end="863:41">/* data processing instruction */</comment>

        <if_stmt pos:start="865:9" pos:end="915:9"><if pos:start="865:9" pos:end="889:9">if <condition pos:start="865:12" pos:end="865:29">(<expr pos:start="865:13" pos:end="865:28"><name pos:start="865:13" pos:end="865:16">insn</name> <operator pos:start="865:18" pos:end="865:18">&amp;</operator> <operator pos:start="865:20" pos:end="865:20">(</operator><literal type="number" pos:start="865:21" pos:end="865:21">1</literal> <operator pos:start="865:23" pos:end="865:24">&lt;&lt;</operator> <literal type="number" pos:start="865:26" pos:end="865:27">25</literal><operator pos:start="865:28" pos:end="865:28">)</operator></expr>)</condition> <block pos:start="865:31" pos:end="889:9">{<block_content pos:start="869:13" pos:end="887:13">

            <comment type="block" pos:start="867:13" pos:end="867:35">/* immediate operand */</comment>

            <expr_stmt pos:start="869:13" pos:end="869:30"><expr pos:start="869:13" pos:end="869:29"><name pos:start="869:13" pos:end="869:15">val</name> <operator pos:start="869:17" pos:end="869:17">=</operator> <name pos:start="869:19" pos:end="869:22">insn</name> <operator pos:start="869:24" pos:end="869:24">&amp;</operator> <literal type="number" pos:start="869:26" pos:end="869:29">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="871:13" pos:end="871:44"><expr pos:start="871:13" pos:end="871:43"><name pos:start="871:13" pos:end="871:17">shift</name> <operator pos:start="871:19" pos:end="871:19">=</operator> <operator pos:start="871:21" pos:end="871:21">(</operator><operator pos:start="871:22" pos:end="871:22">(</operator><name pos:start="871:23" pos:end="871:26">insn</name> <operator pos:start="871:28" pos:end="871:29">&gt;&gt;</operator> <literal type="number" pos:start="871:31" pos:end="871:31">8</literal><operator pos:start="871:32" pos:end="871:32">)</operator> <operator pos:start="871:34" pos:end="871:34">&amp;</operator> <literal type="number" pos:start="871:36" pos:end="871:38">0xf</literal><operator pos:start="871:39" pos:end="871:39">)</operator> <operator pos:start="871:41" pos:end="871:41">*</operator> <literal type="number" pos:start="871:43" pos:end="871:43">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="873:13" pos:end="877:13"><if pos:start="873:13" pos:end="877:13">if <condition pos:start="873:16" pos:end="873:22">(<expr pos:start="873:17" pos:end="873:21"><name pos:start="873:17" pos:end="873:21">shift</name></expr>)</condition> <block pos:start="873:24" pos:end="877:13">{<block_content pos:start="875:17" pos:end="875:61">

                <expr_stmt pos:start="875:17" pos:end="875:61"><expr pos:start="875:17" pos:end="875:60"><name pos:start="875:17" pos:end="875:19">val</name> <operator pos:start="875:21" pos:end="875:21">=</operator> <operator pos:start="875:23" pos:end="875:23">(</operator><name pos:start="875:24" pos:end="875:26">val</name> <operator pos:start="875:28" pos:end="875:29">&gt;&gt;</operator> <name pos:start="875:31" pos:end="875:35">shift</name><operator pos:start="875:36" pos:end="875:36">)</operator> <operator pos:start="875:38" pos:end="875:38">|</operator> <operator pos:start="875:40" pos:end="875:40">(</operator><name pos:start="875:41" pos:end="875:43">val</name> <operator pos:start="875:45" pos:end="875:46">&lt;&lt;</operator> <operator pos:start="875:48" pos:end="875:48">(</operator><literal type="number" pos:start="875:49" pos:end="875:52">32</literal> <operator pos:start="875:52" pos:end="875:52">-</operator> <name pos:start="875:54" pos:end="875:58">shift</name><operator pos:start="875:59" pos:end="875:59">)</operator><operator pos:start="875:60" pos:end="875:60">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="879:13" pos:end="879:38"><expr pos:start="879:13" pos:end="879:37"><name pos:start="879:13" pos:end="879:16">tmp2</name> <operator pos:start="879:18" pos:end="879:18">=</operator> <call pos:start="879:20" pos:end="879:37"><name pos:start="879:20" pos:end="879:35">tcg_temp_new_i32</name><argument_list pos:start="879:36" pos:end="879:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="881:13" pos:end="881:40"><expr pos:start="881:13" pos:end="881:39"><call pos:start="881:13" pos:end="881:39"><name pos:start="881:13" pos:end="881:28">tcg_gen_movi_i32</name><argument_list pos:start="881:29" pos:end="881:39">(<argument pos:start="881:30" pos:end="881:33"><expr pos:start="881:30" pos:end="881:33"><name pos:start="881:30" pos:end="881:33">tmp2</name></expr></argument>, <argument pos:start="881:36" pos:end="881:38"><expr pos:start="881:36" pos:end="881:38"><name pos:start="881:36" pos:end="881:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="883:13" pos:end="887:13"><if pos:start="883:13" pos:end="887:13">if <condition pos:start="883:16" pos:end="883:34">(<expr pos:start="883:17" pos:end="883:33"><name pos:start="883:17" pos:end="883:24">logic_cc</name> <operator pos:start="883:26" pos:end="883:27">&amp;&amp;</operator> <name pos:start="883:29" pos:end="883:33">shift</name></expr>)</condition> <block pos:start="883:36" pos:end="887:13">{<block_content pos:start="885:17" pos:end="885:39">

                <expr_stmt pos:start="885:17" pos:end="885:39"><expr pos:start="885:17" pos:end="885:38"><call pos:start="885:17" pos:end="885:38"><name pos:start="885:17" pos:end="885:32">gen_set_CF_bit31</name><argument_list pos:start="885:33" pos:end="885:38">(<argument pos:start="885:34" pos:end="885:37"><expr pos:start="885:34" pos:end="885:37"><name pos:start="885:34" pos:end="885:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="889:11" pos:end="915:9">else <block pos:start="889:16" pos:end="915:9">{<block_content pos:start="893:13" pos:end="913:13">

            <comment type="block" pos:start="891:13" pos:end="891:26">/* register */</comment>

            <expr_stmt pos:start="893:13" pos:end="893:30"><expr pos:start="893:13" pos:end="893:29"><name pos:start="893:13" pos:end="893:14">rm</name> <operator pos:start="893:16" pos:end="893:16">=</operator> <operator pos:start="893:18" pos:end="893:18">(</operator><name pos:start="893:19" pos:end="893:22">insn</name><operator pos:start="893:23" pos:end="893:23">)</operator> <operator pos:start="893:25" pos:end="893:25">&amp;</operator> <literal type="number" pos:start="893:27" pos:end="893:29">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="895:13" pos:end="895:35"><expr pos:start="895:13" pos:end="895:34"><name pos:start="895:13" pos:end="895:16">tmp2</name> <operator pos:start="895:18" pos:end="895:18">=</operator> <call pos:start="895:20" pos:end="895:34"><name pos:start="895:20" pos:end="895:27">load_reg</name><argument_list pos:start="895:28" pos:end="895:34">(<argument pos:start="895:29" pos:end="895:29"><expr pos:start="895:29" pos:end="895:29"><name pos:start="895:29" pos:end="895:29">s</name></expr></argument>, <argument pos:start="895:32" pos:end="895:33"><expr pos:start="895:32" pos:end="895:33"><name pos:start="895:32" pos:end="895:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="897:13" pos:end="897:38"><expr pos:start="897:13" pos:end="897:37"><name pos:start="897:13" pos:end="897:19">shiftop</name> <operator pos:start="897:21" pos:end="897:21">=</operator> <operator pos:start="897:23" pos:end="897:23">(</operator><name pos:start="897:24" pos:end="897:27">insn</name> <operator pos:start="897:29" pos:end="897:30">&gt;&gt;</operator> <literal type="number" pos:start="897:32" pos:end="897:32">5</literal><operator pos:start="897:33" pos:end="897:33">)</operator> <operator pos:start="897:35" pos:end="897:35">&amp;</operator> <literal type="number" pos:start="897:37" pos:end="897:37">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="899:13" pos:end="913:13"><if pos:start="899:13" pos:end="905:13">if <condition pos:start="899:16" pos:end="899:35">(<expr pos:start="899:17" pos:end="899:34"><operator pos:start="899:17" pos:end="899:17">!</operator><operator pos:start="899:18" pos:end="899:18">(</operator><name pos:start="899:19" pos:end="899:22">insn</name> <operator pos:start="899:24" pos:end="899:24">&amp;</operator> <operator pos:start="899:26" pos:end="899:26">(</operator><literal type="number" pos:start="899:27" pos:end="899:27">1</literal> <operator pos:start="899:29" pos:end="899:30">&lt;&lt;</operator> <literal type="number" pos:start="899:32" pos:end="899:32">4</literal><operator pos:start="899:33" pos:end="899:33">)</operator><operator pos:start="899:34" pos:end="899:34">)</operator></expr>)</condition> <block pos:start="899:37" pos:end="905:13">{<block_content pos:start="901:17" pos:end="903:65">

                <expr_stmt pos:start="901:17" pos:end="901:43"><expr pos:start="901:17" pos:end="901:42"><name pos:start="901:17" pos:end="901:21">shift</name> <operator pos:start="901:23" pos:end="901:23">=</operator> <operator pos:start="901:25" pos:end="901:25">(</operator><name pos:start="901:26" pos:end="901:29">insn</name> <operator pos:start="901:31" pos:end="901:32">&gt;&gt;</operator> <literal type="number" pos:start="901:34" pos:end="901:34">7</literal><operator pos:start="901:35" pos:end="901:35">)</operator> <operator pos:start="901:37" pos:end="901:37">&amp;</operator> <literal type="number" pos:start="901:39" pos:end="901:42">0x1f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="903:17" pos:end="903:65"><expr pos:start="903:17" pos:end="903:64"><call pos:start="903:17" pos:end="903:64"><name pos:start="903:17" pos:end="903:32">gen_arm_shift_im</name><argument_list pos:start="903:33" pos:end="903:64">(<argument pos:start="903:34" pos:end="903:37"><expr pos:start="903:34" pos:end="903:37"><name pos:start="903:34" pos:end="903:37">tmp2</name></expr></argument>, <argument pos:start="903:40" pos:end="903:46"><expr pos:start="903:40" pos:end="903:46"><name pos:start="903:40" pos:end="903:46">shiftop</name></expr></argument>, <argument pos:start="903:49" pos:end="903:53"><expr pos:start="903:49" pos:end="903:53"><name pos:start="903:49" pos:end="903:53">shift</name></expr></argument>, <argument pos:start="903:56" pos:end="903:63"><expr pos:start="903:56" pos:end="903:63"><name pos:start="903:56" pos:end="903:63">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="905:15" pos:end="913:13">else <block pos:start="905:20" pos:end="913:13">{<block_content pos:start="907:17" pos:end="911:64">

                <expr_stmt pos:start="907:17" pos:end="907:39"><expr pos:start="907:17" pos:end="907:38"><name pos:start="907:17" pos:end="907:18">rs</name> <operator pos:start="907:20" pos:end="907:20">=</operator> <operator pos:start="907:22" pos:end="907:22">(</operator><name pos:start="907:23" pos:end="907:26">insn</name> <operator pos:start="907:28" pos:end="907:29">&gt;&gt;</operator> <literal type="number" pos:start="907:31" pos:end="907:31">8</literal><operator pos:start="907:32" pos:end="907:32">)</operator> <operator pos:start="907:34" pos:end="907:34">&amp;</operator> <literal type="number" pos:start="907:36" pos:end="907:38">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="909:17" pos:end="909:38"><expr pos:start="909:17" pos:end="909:37"><name pos:start="909:17" pos:end="909:19">tmp</name> <operator pos:start="909:21" pos:end="909:21">=</operator> <call pos:start="909:23" pos:end="909:37"><name pos:start="909:23" pos:end="909:30">load_reg</name><argument_list pos:start="909:31" pos:end="909:37">(<argument pos:start="909:32" pos:end="909:32"><expr pos:start="909:32" pos:end="909:32"><name pos:start="909:32" pos:end="909:32">s</name></expr></argument>, <argument pos:start="909:35" pos:end="909:36"><expr pos:start="909:35" pos:end="909:36"><name pos:start="909:35" pos:end="909:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="911:17" pos:end="911:64"><expr pos:start="911:17" pos:end="911:63"><call pos:start="911:17" pos:end="911:63"><name pos:start="911:17" pos:end="911:33">gen_arm_shift_reg</name><argument_list pos:start="911:34" pos:end="911:63">(<argument pos:start="911:35" pos:end="911:38"><expr pos:start="911:35" pos:end="911:38"><name pos:start="911:35" pos:end="911:38">tmp2</name></expr></argument>, <argument pos:start="911:41" pos:end="911:47"><expr pos:start="911:41" pos:end="911:47"><name pos:start="911:41" pos:end="911:47">shiftop</name></expr></argument>, <argument pos:start="911:50" pos:end="911:52"><expr pos:start="911:50" pos:end="911:52"><name pos:start="911:50" pos:end="911:52">tmp</name></expr></argument>, <argument pos:start="911:55" pos:end="911:62"><expr pos:start="911:55" pos:end="911:62"><name pos:start="911:55" pos:end="911:62">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="917:9" pos:end="927:9"><if pos:start="917:9" pos:end="923:9">if <condition pos:start="917:12" pos:end="917:39">(<expr pos:start="917:13" pos:end="917:38"><name pos:start="917:13" pos:end="917:15">op1</name> <operator pos:start="917:17" pos:end="917:18">!=</operator> <literal type="number" pos:start="917:20" pos:end="917:23">0x0f</literal> <operator pos:start="917:25" pos:end="917:26">&amp;&amp;</operator> <name pos:start="917:28" pos:end="917:30">op1</name> <operator pos:start="917:32" pos:end="917:33">!=</operator> <literal type="number" pos:start="917:35" pos:end="917:38">0x0d</literal></expr>)</condition> <block pos:start="917:41" pos:end="923:9">{<block_content pos:start="919:13" pos:end="921:34">

            <expr_stmt pos:start="919:13" pos:end="919:36"><expr pos:start="919:13" pos:end="919:35"><name pos:start="919:13" pos:end="919:14">rn</name> <operator pos:start="919:16" pos:end="919:16">=</operator> <operator pos:start="919:18" pos:end="919:18">(</operator><name pos:start="919:19" pos:end="919:22">insn</name> <operator pos:start="919:24" pos:end="919:25">&gt;&gt;</operator> <literal type="number" pos:start="919:27" pos:end="919:28">16</literal><operator pos:start="919:29" pos:end="919:29">)</operator> <operator pos:start="919:31" pos:end="919:31">&amp;</operator> <literal type="number" pos:start="919:33" pos:end="919:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="921:13" pos:end="921:34"><expr pos:start="921:13" pos:end="921:33"><name pos:start="921:13" pos:end="921:15">tmp</name> <operator pos:start="921:17" pos:end="921:17">=</operator> <call pos:start="921:19" pos:end="921:33"><name pos:start="921:19" pos:end="921:26">load_reg</name><argument_list pos:start="921:27" pos:end="921:33">(<argument pos:start="921:28" pos:end="921:28"><expr pos:start="921:28" pos:end="921:28"><name pos:start="921:28" pos:end="921:28">s</name></expr></argument>, <argument pos:start="921:31" pos:end="921:32"><expr pos:start="921:31" pos:end="921:32"><name pos:start="921:31" pos:end="921:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="923:11" pos:end="927:9">else <block pos:start="923:16" pos:end="927:9">{<block_content pos:start="925:13" pos:end="925:33">

            <expr_stmt pos:start="925:13" pos:end="925:33"><expr pos:start="925:13" pos:end="925:32"><call pos:start="925:13" pos:end="925:32"><name pos:start="925:13" pos:end="925:27">TCGV_UNUSED_I32</name><argument_list pos:start="925:28" pos:end="925:32">(<argument pos:start="925:29" pos:end="925:31"><expr pos:start="925:29" pos:end="925:31"><name pos:start="925:29" pos:end="925:31">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="929:9" pos:end="929:32"><expr pos:start="929:9" pos:end="929:31"><name pos:start="929:9" pos:end="929:10">rd</name> <operator pos:start="929:12" pos:end="929:12">=</operator> <operator pos:start="929:14" pos:end="929:14">(</operator><name pos:start="929:15" pos:end="929:18">insn</name> <operator pos:start="929:20" pos:end="929:21">&gt;&gt;</operator> <literal type="number" pos:start="929:23" pos:end="929:24">12</literal><operator pos:start="929:25" pos:end="929:25">)</operator> <operator pos:start="929:27" pos:end="929:27">&amp;</operator> <literal type="number" pos:start="929:29" pos:end="929:31">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="931:9" pos:end="1199:9">switch<condition pos:start="931:15" pos:end="931:19">(<expr pos:start="931:16" pos:end="931:18"><name pos:start="931:16" pos:end="931:18">op1</name></expr>)</condition> <block pos:start="931:21" pos:end="1199:9">{<block_content pos:start="933:9" pos:end="1197:18">

        <case pos:start="933:9" pos:end="933:18">case <expr pos:start="933:14" pos:end="933:17"><literal type="number" pos:start="933:14" pos:end="933:17">0x00</literal></expr>:</case>

            <expr_stmt pos:start="935:13" pos:end="935:44"><expr pos:start="935:13" pos:end="935:43"><call pos:start="935:13" pos:end="935:43"><name pos:start="935:13" pos:end="935:27">tcg_gen_and_i32</name><argument_list pos:start="935:28" pos:end="935:43">(<argument pos:start="935:29" pos:end="935:31"><expr pos:start="935:29" pos:end="935:31"><name pos:start="935:29" pos:end="935:31">tmp</name></expr></argument>, <argument pos:start="935:34" pos:end="935:36"><expr pos:start="935:34" pos:end="935:36"><name pos:start="935:34" pos:end="935:36">tmp</name></expr></argument>, <argument pos:start="935:39" pos:end="935:42"><expr pos:start="935:39" pos:end="935:42"><name pos:start="935:39" pos:end="935:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="937:13" pos:end="941:13"><if pos:start="937:13" pos:end="941:13">if <condition pos:start="937:16" pos:end="937:25">(<expr pos:start="937:17" pos:end="937:24"><name pos:start="937:17" pos:end="937:24">logic_cc</name></expr>)</condition> <block pos:start="937:27" pos:end="941:13">{<block_content pos:start="939:17" pos:end="939:34">

                <expr_stmt pos:start="939:17" pos:end="939:34"><expr pos:start="939:17" pos:end="939:33"><call pos:start="939:17" pos:end="939:33"><name pos:start="939:17" pos:end="939:28">gen_logic_CC</name><argument_list pos:start="939:29" pos:end="939:33">(<argument pos:start="939:30" pos:end="939:32"><expr pos:start="939:30" pos:end="939:32"><name pos:start="939:30" pos:end="939:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="943:13" pos:end="943:42"><expr pos:start="943:13" pos:end="943:41"><call pos:start="943:13" pos:end="943:41"><name pos:start="943:13" pos:end="943:24">store_reg_bx</name><argument_list pos:start="943:25" pos:end="943:41">(<argument pos:start="943:26" pos:end="943:28"><expr pos:start="943:26" pos:end="943:28"><name pos:start="943:26" pos:end="943:28">env</name></expr></argument>, <argument pos:start="943:31" pos:end="943:31"><expr pos:start="943:31" pos:end="943:31"><name pos:start="943:31" pos:end="943:31">s</name></expr></argument>, <argument pos:start="943:34" pos:end="943:35"><expr pos:start="943:34" pos:end="943:35"><name pos:start="943:34" pos:end="943:35">rd</name></expr></argument>, <argument pos:start="943:38" pos:end="943:40"><expr pos:start="943:38" pos:end="943:40"><name pos:start="943:38" pos:end="943:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="945:13" pos:end="945:18">break;</break>

        <case pos:start="947:9" pos:end="947:18">case <expr pos:start="947:14" pos:end="947:17"><literal type="number" pos:start="947:14" pos:end="947:17">0x01</literal></expr>:</case>

            <expr_stmt pos:start="949:13" pos:end="949:44"><expr pos:start="949:13" pos:end="949:43"><call pos:start="949:13" pos:end="949:43"><name pos:start="949:13" pos:end="949:27">tcg_gen_xor_i32</name><argument_list pos:start="949:28" pos:end="949:43">(<argument pos:start="949:29" pos:end="949:31"><expr pos:start="949:29" pos:end="949:31"><name pos:start="949:29" pos:end="949:31">tmp</name></expr></argument>, <argument pos:start="949:34" pos:end="949:36"><expr pos:start="949:34" pos:end="949:36"><name pos:start="949:34" pos:end="949:36">tmp</name></expr></argument>, <argument pos:start="949:39" pos:end="949:42"><expr pos:start="949:39" pos:end="949:42"><name pos:start="949:39" pos:end="949:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="951:13" pos:end="955:13"><if pos:start="951:13" pos:end="955:13">if <condition pos:start="951:16" pos:end="951:25">(<expr pos:start="951:17" pos:end="951:24"><name pos:start="951:17" pos:end="951:24">logic_cc</name></expr>)</condition> <block pos:start="951:27" pos:end="955:13">{<block_content pos:start="953:17" pos:end="953:34">

                <expr_stmt pos:start="953:17" pos:end="953:34"><expr pos:start="953:17" pos:end="953:33"><call pos:start="953:17" pos:end="953:33"><name pos:start="953:17" pos:end="953:28">gen_logic_CC</name><argument_list pos:start="953:29" pos:end="953:33">(<argument pos:start="953:30" pos:end="953:32"><expr pos:start="953:30" pos:end="953:32"><name pos:start="953:30" pos:end="953:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="957:13" pos:end="957:42"><expr pos:start="957:13" pos:end="957:41"><call pos:start="957:13" pos:end="957:41"><name pos:start="957:13" pos:end="957:24">store_reg_bx</name><argument_list pos:start="957:25" pos:end="957:41">(<argument pos:start="957:26" pos:end="957:28"><expr pos:start="957:26" pos:end="957:28"><name pos:start="957:26" pos:end="957:28">env</name></expr></argument>, <argument pos:start="957:31" pos:end="957:31"><expr pos:start="957:31" pos:end="957:31"><name pos:start="957:31" pos:end="957:31">s</name></expr></argument>, <argument pos:start="957:34" pos:end="957:35"><expr pos:start="957:34" pos:end="957:35"><name pos:start="957:34" pos:end="957:35">rd</name></expr></argument>, <argument pos:start="957:38" pos:end="957:40"><expr pos:start="957:38" pos:end="957:40"><name pos:start="957:38" pos:end="957:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="959:13" pos:end="959:18">break;</break>

        <case pos:start="961:9" pos:end="961:18">case <expr pos:start="961:14" pos:end="961:17"><literal type="number" pos:start="961:14" pos:end="961:17">0x02</literal></expr>:</case>

            <if_stmt pos:start="963:13" pos:end="991:13"><if pos:start="963:13" pos:end="977:13">if <condition pos:start="963:16" pos:end="963:35">(<expr pos:start="963:17" pos:end="963:34"><name pos:start="963:17" pos:end="963:22">set_cc</name> <operator pos:start="963:24" pos:end="963:25">&amp;&amp;</operator> <name pos:start="963:27" pos:end="963:28">rd</name> <operator pos:start="963:30" pos:end="963:31">==</operator> <literal type="number" pos:start="963:33" pos:end="963:34">15</literal></expr>)</condition> <block pos:start="963:37" pos:end="977:13">{<block_content pos:start="967:17" pos:end="975:45">

                <comment type="block" pos:start="965:17" pos:end="965:66">/* SUBS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="967:17" pos:end="971:17"><if pos:start="967:17" pos:end="971:17">if <condition pos:start="967:20" pos:end="967:31">(<expr pos:start="967:21" pos:end="967:30"><call pos:start="967:21" pos:end="967:30"><name pos:start="967:21" pos:end="967:27">IS_USER</name><argument_list pos:start="967:28" pos:end="967:30">(<argument pos:start="967:29" pos:end="967:29"><expr pos:start="967:29" pos:end="967:29"><name pos:start="967:29" pos:end="967:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="967:33" pos:end="971:17">{<block_content pos:start="969:21" pos:end="969:36">

                    <goto pos:start="969:21" pos:end="969:36">goto <name pos:start="969:26" pos:end="969:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="973:17" pos:end="973:43"><expr pos:start="973:17" pos:end="973:42"><call pos:start="973:17" pos:end="973:42"><name pos:start="973:17" pos:end="973:26">gen_sub_CC</name><argument_list pos:start="973:27" pos:end="973:42">(<argument pos:start="973:28" pos:end="973:30"><expr pos:start="973:28" pos:end="973:30"><name pos:start="973:28" pos:end="973:30">tmp</name></expr></argument>, <argument pos:start="973:33" pos:end="973:35"><expr pos:start="973:33" pos:end="973:35"><name pos:start="973:33" pos:end="973:35">tmp</name></expr></argument>, <argument pos:start="973:38" pos:end="973:41"><expr pos:start="973:38" pos:end="973:41"><name pos:start="973:38" pos:end="973:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="975:17" pos:end="975:45"><expr pos:start="975:17" pos:end="975:44"><call pos:start="975:17" pos:end="975:44"><name pos:start="975:17" pos:end="975:36">gen_exception_return</name><argument_list pos:start="975:37" pos:end="975:44">(<argument pos:start="975:38" pos:end="975:38"><expr pos:start="975:38" pos:end="975:38"><name pos:start="975:38" pos:end="975:38">s</name></expr></argument>, <argument pos:start="975:41" pos:end="975:43"><expr pos:start="975:41" pos:end="975:43"><name pos:start="975:41" pos:end="975:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="977:15" pos:end="991:13">else <block pos:start="977:20" pos:end="991:13">{<block_content pos:start="979:17" pos:end="989:46">

                <if_stmt pos:start="979:17" pos:end="987:17"><if pos:start="979:17" pos:end="983:17">if <condition pos:start="979:20" pos:end="979:27">(<expr pos:start="979:21" pos:end="979:26"><name pos:start="979:21" pos:end="979:26">set_cc</name></expr>)</condition> <block pos:start="979:29" pos:end="983:17">{<block_content pos:start="981:21" pos:end="981:47">

                    <expr_stmt pos:start="981:21" pos:end="981:47"><expr pos:start="981:21" pos:end="981:46"><call pos:start="981:21" pos:end="981:46"><name pos:start="981:21" pos:end="981:30">gen_sub_CC</name><argument_list pos:start="981:31" pos:end="981:46">(<argument pos:start="981:32" pos:end="981:34"><expr pos:start="981:32" pos:end="981:34"><name pos:start="981:32" pos:end="981:34">tmp</name></expr></argument>, <argument pos:start="981:37" pos:end="981:39"><expr pos:start="981:37" pos:end="981:39"><name pos:start="981:37" pos:end="981:39">tmp</name></expr></argument>, <argument pos:start="981:42" pos:end="981:45"><expr pos:start="981:42" pos:end="981:45"><name pos:start="981:42" pos:end="981:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="983:19" pos:end="987:17">else <block pos:start="983:24" pos:end="987:17">{<block_content pos:start="985:21" pos:end="985:52">

                    <expr_stmt pos:start="985:21" pos:end="985:52"><expr pos:start="985:21" pos:end="985:51"><call pos:start="985:21" pos:end="985:51"><name pos:start="985:21" pos:end="985:35">tcg_gen_sub_i32</name><argument_list pos:start="985:36" pos:end="985:51">(<argument pos:start="985:37" pos:end="985:39"><expr pos:start="985:37" pos:end="985:39"><name pos:start="985:37" pos:end="985:39">tmp</name></expr></argument>, <argument pos:start="985:42" pos:end="985:44"><expr pos:start="985:42" pos:end="985:44"><name pos:start="985:42" pos:end="985:44">tmp</name></expr></argument>, <argument pos:start="985:47" pos:end="985:50"><expr pos:start="985:47" pos:end="985:50"><name pos:start="985:47" pos:end="985:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="989:17" pos:end="989:46"><expr pos:start="989:17" pos:end="989:45"><call pos:start="989:17" pos:end="989:45"><name pos:start="989:17" pos:end="989:28">store_reg_bx</name><argument_list pos:start="989:29" pos:end="989:45">(<argument pos:start="989:30" pos:end="989:32"><expr pos:start="989:30" pos:end="989:32"><name pos:start="989:30" pos:end="989:32">env</name></expr></argument>, <argument pos:start="989:35" pos:end="989:35"><expr pos:start="989:35" pos:end="989:35"><name pos:start="989:35" pos:end="989:35">s</name></expr></argument>, <argument pos:start="989:38" pos:end="989:39"><expr pos:start="989:38" pos:end="989:39"><name pos:start="989:38" pos:end="989:39">rd</name></expr></argument>, <argument pos:start="989:42" pos:end="989:44"><expr pos:start="989:42" pos:end="989:44"><name pos:start="989:42" pos:end="989:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="993:13" pos:end="993:18">break;</break>

        <case pos:start="995:9" pos:end="995:18">case <expr pos:start="995:14" pos:end="995:17"><literal type="number" pos:start="995:14" pos:end="995:17">0x03</literal></expr>:</case>

            <if_stmt pos:start="997:13" pos:end="1005:13"><if pos:start="997:13" pos:end="1001:13">if <condition pos:start="997:16" pos:end="997:23">(<expr pos:start="997:17" pos:end="997:22"><name pos:start="997:17" pos:end="997:22">set_cc</name></expr>)</condition> <block pos:start="997:25" pos:end="1001:13">{<block_content pos:start="999:17" pos:end="999:43">

                <expr_stmt pos:start="999:17" pos:end="999:43"><expr pos:start="999:17" pos:end="999:42"><call pos:start="999:17" pos:end="999:42"><name pos:start="999:17" pos:end="999:26">gen_sub_CC</name><argument_list pos:start="999:27" pos:end="999:42">(<argument pos:start="999:28" pos:end="999:30"><expr pos:start="999:28" pos:end="999:30"><name pos:start="999:28" pos:end="999:30">tmp</name></expr></argument>, <argument pos:start="999:33" pos:end="999:36"><expr pos:start="999:33" pos:end="999:36"><name pos:start="999:33" pos:end="999:36">tmp2</name></expr></argument>, <argument pos:start="999:39" pos:end="999:41"><expr pos:start="999:39" pos:end="999:41"><name pos:start="999:39" pos:end="999:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1001:15" pos:end="1005:13">else <block pos:start="1001:20" pos:end="1005:13">{<block_content pos:start="1003:17" pos:end="1003:48">

                <expr_stmt pos:start="1003:17" pos:end="1003:48"><expr pos:start="1003:17" pos:end="1003:47"><call pos:start="1003:17" pos:end="1003:47"><name pos:start="1003:17" pos:end="1003:31">tcg_gen_sub_i32</name><argument_list pos:start="1003:32" pos:end="1003:47">(<argument pos:start="1003:33" pos:end="1003:35"><expr pos:start="1003:33" pos:end="1003:35"><name pos:start="1003:33" pos:end="1003:35">tmp</name></expr></argument>, <argument pos:start="1003:38" pos:end="1003:41"><expr pos:start="1003:38" pos:end="1003:41"><name pos:start="1003:38" pos:end="1003:41">tmp2</name></expr></argument>, <argument pos:start="1003:44" pos:end="1003:46"><expr pos:start="1003:44" pos:end="1003:46"><name pos:start="1003:44" pos:end="1003:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1007:13" pos:end="1007:42"><expr pos:start="1007:13" pos:end="1007:41"><call pos:start="1007:13" pos:end="1007:41"><name pos:start="1007:13" pos:end="1007:24">store_reg_bx</name><argument_list pos:start="1007:25" pos:end="1007:41">(<argument pos:start="1007:26" pos:end="1007:28"><expr pos:start="1007:26" pos:end="1007:28"><name pos:start="1007:26" pos:end="1007:28">env</name></expr></argument>, <argument pos:start="1007:31" pos:end="1007:31"><expr pos:start="1007:31" pos:end="1007:31"><name pos:start="1007:31" pos:end="1007:31">s</name></expr></argument>, <argument pos:start="1007:34" pos:end="1007:35"><expr pos:start="1007:34" pos:end="1007:35"><name pos:start="1007:34" pos:end="1007:35">rd</name></expr></argument>, <argument pos:start="1007:38" pos:end="1007:40"><expr pos:start="1007:38" pos:end="1007:40"><name pos:start="1007:38" pos:end="1007:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1009:13" pos:end="1009:18">break;</break>

        <case pos:start="1011:9" pos:end="1011:18">case <expr pos:start="1011:14" pos:end="1011:17"><literal type="number" pos:start="1011:14" pos:end="1011:17">0x04</literal></expr>:</case>

            <if_stmt pos:start="1013:13" pos:end="1021:13"><if pos:start="1013:13" pos:end="1017:13">if <condition pos:start="1013:16" pos:end="1013:23">(<expr pos:start="1013:17" pos:end="1013:22"><name pos:start="1013:17" pos:end="1013:22">set_cc</name></expr>)</condition> <block pos:start="1013:25" pos:end="1017:13">{<block_content pos:start="1015:17" pos:end="1015:43">

                <expr_stmt pos:start="1015:17" pos:end="1015:43"><expr pos:start="1015:17" pos:end="1015:42"><call pos:start="1015:17" pos:end="1015:42"><name pos:start="1015:17" pos:end="1015:26">gen_add_CC</name><argument_list pos:start="1015:27" pos:end="1015:42">(<argument pos:start="1015:28" pos:end="1015:30"><expr pos:start="1015:28" pos:end="1015:30"><name pos:start="1015:28" pos:end="1015:30">tmp</name></expr></argument>, <argument pos:start="1015:33" pos:end="1015:35"><expr pos:start="1015:33" pos:end="1015:35"><name pos:start="1015:33" pos:end="1015:35">tmp</name></expr></argument>, <argument pos:start="1015:38" pos:end="1015:41"><expr pos:start="1015:38" pos:end="1015:41"><name pos:start="1015:38" pos:end="1015:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1017:15" pos:end="1021:13">else <block pos:start="1017:20" pos:end="1021:13">{<block_content pos:start="1019:17" pos:end="1019:48">

                <expr_stmt pos:start="1019:17" pos:end="1019:48"><expr pos:start="1019:17" pos:end="1019:47"><call pos:start="1019:17" pos:end="1019:47"><name pos:start="1019:17" pos:end="1019:31">tcg_gen_add_i32</name><argument_list pos:start="1019:32" pos:end="1019:47">(<argument pos:start="1019:33" pos:end="1019:35"><expr pos:start="1019:33" pos:end="1019:35"><name pos:start="1019:33" pos:end="1019:35">tmp</name></expr></argument>, <argument pos:start="1019:38" pos:end="1019:40"><expr pos:start="1019:38" pos:end="1019:40"><name pos:start="1019:38" pos:end="1019:40">tmp</name></expr></argument>, <argument pos:start="1019:43" pos:end="1019:46"><expr pos:start="1019:43" pos:end="1019:46"><name pos:start="1019:43" pos:end="1019:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1023:13" pos:end="1023:42"><expr pos:start="1023:13" pos:end="1023:41"><call pos:start="1023:13" pos:end="1023:41"><name pos:start="1023:13" pos:end="1023:24">store_reg_bx</name><argument_list pos:start="1023:25" pos:end="1023:41">(<argument pos:start="1023:26" pos:end="1023:28"><expr pos:start="1023:26" pos:end="1023:28"><name pos:start="1023:26" pos:end="1023:28">env</name></expr></argument>, <argument pos:start="1023:31" pos:end="1023:31"><expr pos:start="1023:31" pos:end="1023:31"><name pos:start="1023:31" pos:end="1023:31">s</name></expr></argument>, <argument pos:start="1023:34" pos:end="1023:35"><expr pos:start="1023:34" pos:end="1023:35"><name pos:start="1023:34" pos:end="1023:35">rd</name></expr></argument>, <argument pos:start="1023:38" pos:end="1023:40"><expr pos:start="1023:38" pos:end="1023:40"><name pos:start="1023:38" pos:end="1023:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1025:13" pos:end="1025:18">break;</break>

        <case pos:start="1027:9" pos:end="1027:18">case <expr pos:start="1027:14" pos:end="1027:17"><literal type="number" pos:start="1027:14" pos:end="1027:17">0x05</literal></expr>:</case>

            <if_stmt pos:start="1029:13" pos:end="1037:13"><if pos:start="1029:13" pos:end="1033:13">if <condition pos:start="1029:16" pos:end="1029:23">(<expr pos:start="1029:17" pos:end="1029:22"><name pos:start="1029:17" pos:end="1029:22">set_cc</name></expr>)</condition> <block pos:start="1029:25" pos:end="1033:13">{<block_content pos:start="1031:17" pos:end="1031:43">

                <expr_stmt pos:start="1031:17" pos:end="1031:43"><expr pos:start="1031:17" pos:end="1031:42"><call pos:start="1031:17" pos:end="1031:42"><name pos:start="1031:17" pos:end="1031:26">gen_adc_CC</name><argument_list pos:start="1031:27" pos:end="1031:42">(<argument pos:start="1031:28" pos:end="1031:30"><expr pos:start="1031:28" pos:end="1031:30"><name pos:start="1031:28" pos:end="1031:30">tmp</name></expr></argument>, <argument pos:start="1031:33" pos:end="1031:35"><expr pos:start="1031:33" pos:end="1031:35"><name pos:start="1031:33" pos:end="1031:35">tmp</name></expr></argument>, <argument pos:start="1031:38" pos:end="1031:41"><expr pos:start="1031:38" pos:end="1031:41"><name pos:start="1031:38" pos:end="1031:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1033:15" pos:end="1037:13">else <block pos:start="1033:20" pos:end="1037:13">{<block_content pos:start="1035:17" pos:end="1035:46">

                <expr_stmt pos:start="1035:17" pos:end="1035:46"><expr pos:start="1035:17" pos:end="1035:45"><call pos:start="1035:17" pos:end="1035:45"><name pos:start="1035:17" pos:end="1035:29">gen_add_carry</name><argument_list pos:start="1035:30" pos:end="1035:45">(<argument pos:start="1035:31" pos:end="1035:33"><expr pos:start="1035:31" pos:end="1035:33"><name pos:start="1035:31" pos:end="1035:33">tmp</name></expr></argument>, <argument pos:start="1035:36" pos:end="1035:38"><expr pos:start="1035:36" pos:end="1035:38"><name pos:start="1035:36" pos:end="1035:38">tmp</name></expr></argument>, <argument pos:start="1035:41" pos:end="1035:44"><expr pos:start="1035:41" pos:end="1035:44"><name pos:start="1035:41" pos:end="1035:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1039:13" pos:end="1039:42"><expr pos:start="1039:13" pos:end="1039:41"><call pos:start="1039:13" pos:end="1039:41"><name pos:start="1039:13" pos:end="1039:24">store_reg_bx</name><argument_list pos:start="1039:25" pos:end="1039:41">(<argument pos:start="1039:26" pos:end="1039:28"><expr pos:start="1039:26" pos:end="1039:28"><name pos:start="1039:26" pos:end="1039:28">env</name></expr></argument>, <argument pos:start="1039:31" pos:end="1039:31"><expr pos:start="1039:31" pos:end="1039:31"><name pos:start="1039:31" pos:end="1039:31">s</name></expr></argument>, <argument pos:start="1039:34" pos:end="1039:35"><expr pos:start="1039:34" pos:end="1039:35"><name pos:start="1039:34" pos:end="1039:35">rd</name></expr></argument>, <argument pos:start="1039:38" pos:end="1039:40"><expr pos:start="1039:38" pos:end="1039:40"><name pos:start="1039:38" pos:end="1039:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:18">case <expr pos:start="1043:14" pos:end="1043:17"><literal type="number" pos:start="1043:14" pos:end="1043:17">0x06</literal></expr>:</case>

            <if_stmt pos:start="1045:13" pos:end="1053:13"><if pos:start="1045:13" pos:end="1049:13">if <condition pos:start="1045:16" pos:end="1045:23">(<expr pos:start="1045:17" pos:end="1045:22"><name pos:start="1045:17" pos:end="1045:22">set_cc</name></expr>)</condition> <block pos:start="1045:25" pos:end="1049:13">{<block_content pos:start="1047:17" pos:end="1047:43">

                <expr_stmt pos:start="1047:17" pos:end="1047:43"><expr pos:start="1047:17" pos:end="1047:42"><call pos:start="1047:17" pos:end="1047:42"><name pos:start="1047:17" pos:end="1047:26">gen_sbc_CC</name><argument_list pos:start="1047:27" pos:end="1047:42">(<argument pos:start="1047:28" pos:end="1047:30"><expr pos:start="1047:28" pos:end="1047:30"><name pos:start="1047:28" pos:end="1047:30">tmp</name></expr></argument>, <argument pos:start="1047:33" pos:end="1047:35"><expr pos:start="1047:33" pos:end="1047:35"><name pos:start="1047:33" pos:end="1047:35">tmp</name></expr></argument>, <argument pos:start="1047:38" pos:end="1047:41"><expr pos:start="1047:38" pos:end="1047:41"><name pos:start="1047:38" pos:end="1047:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1049:15" pos:end="1053:13">else <block pos:start="1049:20" pos:end="1053:13">{<block_content pos:start="1051:17" pos:end="1051:46">

                <expr_stmt pos:start="1051:17" pos:end="1051:46"><expr pos:start="1051:17" pos:end="1051:45"><call pos:start="1051:17" pos:end="1051:45"><name pos:start="1051:17" pos:end="1051:29">gen_sub_carry</name><argument_list pos:start="1051:30" pos:end="1051:45">(<argument pos:start="1051:31" pos:end="1051:33"><expr pos:start="1051:31" pos:end="1051:33"><name pos:start="1051:31" pos:end="1051:33">tmp</name></expr></argument>, <argument pos:start="1051:36" pos:end="1051:38"><expr pos:start="1051:36" pos:end="1051:38"><name pos:start="1051:36" pos:end="1051:38">tmp</name></expr></argument>, <argument pos:start="1051:41" pos:end="1051:44"><expr pos:start="1051:41" pos:end="1051:44"><name pos:start="1051:41" pos:end="1051:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1055:13" pos:end="1055:42"><expr pos:start="1055:13" pos:end="1055:41"><call pos:start="1055:13" pos:end="1055:41"><name pos:start="1055:13" pos:end="1055:24">store_reg_bx</name><argument_list pos:start="1055:25" pos:end="1055:41">(<argument pos:start="1055:26" pos:end="1055:28"><expr pos:start="1055:26" pos:end="1055:28"><name pos:start="1055:26" pos:end="1055:28">env</name></expr></argument>, <argument pos:start="1055:31" pos:end="1055:31"><expr pos:start="1055:31" pos:end="1055:31"><name pos:start="1055:31" pos:end="1055:31">s</name></expr></argument>, <argument pos:start="1055:34" pos:end="1055:35"><expr pos:start="1055:34" pos:end="1055:35"><name pos:start="1055:34" pos:end="1055:35">rd</name></expr></argument>, <argument pos:start="1055:38" pos:end="1055:40"><expr pos:start="1055:38" pos:end="1055:40"><name pos:start="1055:38" pos:end="1055:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1057:13" pos:end="1057:18">break;</break>

        <case pos:start="1059:9" pos:end="1059:18">case <expr pos:start="1059:14" pos:end="1059:17"><literal type="number" pos:start="1059:14" pos:end="1059:17">0x07</literal></expr>:</case>

            <if_stmt pos:start="1061:13" pos:end="1069:13"><if pos:start="1061:13" pos:end="1065:13">if <condition pos:start="1061:16" pos:end="1061:23">(<expr pos:start="1061:17" pos:end="1061:22"><name pos:start="1061:17" pos:end="1061:22">set_cc</name></expr>)</condition> <block pos:start="1061:25" pos:end="1065:13">{<block_content pos:start="1063:17" pos:end="1063:43">

                <expr_stmt pos:start="1063:17" pos:end="1063:43"><expr pos:start="1063:17" pos:end="1063:42"><call pos:start="1063:17" pos:end="1063:42"><name pos:start="1063:17" pos:end="1063:26">gen_sbc_CC</name><argument_list pos:start="1063:27" pos:end="1063:42">(<argument pos:start="1063:28" pos:end="1063:30"><expr pos:start="1063:28" pos:end="1063:30"><name pos:start="1063:28" pos:end="1063:30">tmp</name></expr></argument>, <argument pos:start="1063:33" pos:end="1063:36"><expr pos:start="1063:33" pos:end="1063:36"><name pos:start="1063:33" pos:end="1063:36">tmp2</name></expr></argument>, <argument pos:start="1063:39" pos:end="1063:41"><expr pos:start="1063:39" pos:end="1063:41"><name pos:start="1063:39" pos:end="1063:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1065:15" pos:end="1069:13">else <block pos:start="1065:20" pos:end="1069:13">{<block_content pos:start="1067:17" pos:end="1067:46">

                <expr_stmt pos:start="1067:17" pos:end="1067:46"><expr pos:start="1067:17" pos:end="1067:45"><call pos:start="1067:17" pos:end="1067:45"><name pos:start="1067:17" pos:end="1067:29">gen_sub_carry</name><argument_list pos:start="1067:30" pos:end="1067:45">(<argument pos:start="1067:31" pos:end="1067:33"><expr pos:start="1067:31" pos:end="1067:33"><name pos:start="1067:31" pos:end="1067:33">tmp</name></expr></argument>, <argument pos:start="1067:36" pos:end="1067:39"><expr pos:start="1067:36" pos:end="1067:39"><name pos:start="1067:36" pos:end="1067:39">tmp2</name></expr></argument>, <argument pos:start="1067:42" pos:end="1067:44"><expr pos:start="1067:42" pos:end="1067:44"><name pos:start="1067:42" pos:end="1067:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1071:13" pos:end="1071:42"><expr pos:start="1071:13" pos:end="1071:41"><call pos:start="1071:13" pos:end="1071:41"><name pos:start="1071:13" pos:end="1071:24">store_reg_bx</name><argument_list pos:start="1071:25" pos:end="1071:41">(<argument pos:start="1071:26" pos:end="1071:28"><expr pos:start="1071:26" pos:end="1071:28"><name pos:start="1071:26" pos:end="1071:28">env</name></expr></argument>, <argument pos:start="1071:31" pos:end="1071:31"><expr pos:start="1071:31" pos:end="1071:31"><name pos:start="1071:31" pos:end="1071:31">s</name></expr></argument>, <argument pos:start="1071:34" pos:end="1071:35"><expr pos:start="1071:34" pos:end="1071:35"><name pos:start="1071:34" pos:end="1071:35">rd</name></expr></argument>, <argument pos:start="1071:38" pos:end="1071:40"><expr pos:start="1071:38" pos:end="1071:40"><name pos:start="1071:38" pos:end="1071:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1073:13" pos:end="1073:18">break;</break>

        <case pos:start="1075:9" pos:end="1075:18">case <expr pos:start="1075:14" pos:end="1075:17"><literal type="number" pos:start="1075:14" pos:end="1075:17">0x08</literal></expr>:</case>

            <if_stmt pos:start="1077:13" pos:end="1083:13"><if pos:start="1077:13" pos:end="1083:13">if <condition pos:start="1077:16" pos:end="1077:23">(<expr pos:start="1077:17" pos:end="1077:22"><name pos:start="1077:17" pos:end="1077:22">set_cc</name></expr>)</condition> <block pos:start="1077:25" pos:end="1083:13">{<block_content pos:start="1079:17" pos:end="1081:34">

                <expr_stmt pos:start="1079:17" pos:end="1079:48"><expr pos:start="1079:17" pos:end="1079:47"><call pos:start="1079:17" pos:end="1079:47"><name pos:start="1079:17" pos:end="1079:31">tcg_gen_and_i32</name><argument_list pos:start="1079:32" pos:end="1079:47">(<argument pos:start="1079:33" pos:end="1079:35"><expr pos:start="1079:33" pos:end="1079:35"><name pos:start="1079:33" pos:end="1079:35">tmp</name></expr></argument>, <argument pos:start="1079:38" pos:end="1079:40"><expr pos:start="1079:38" pos:end="1079:40"><name pos:start="1079:38" pos:end="1079:40">tmp</name></expr></argument>, <argument pos:start="1079:43" pos:end="1079:46"><expr pos:start="1079:43" pos:end="1079:46"><name pos:start="1079:43" pos:end="1079:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1081:17" pos:end="1081:34"><expr pos:start="1081:17" pos:end="1081:33"><call pos:start="1081:17" pos:end="1081:33"><name pos:start="1081:17" pos:end="1081:28">gen_logic_CC</name><argument_list pos:start="1081:29" pos:end="1081:33">(<argument pos:start="1081:30" pos:end="1081:32"><expr pos:start="1081:30" pos:end="1081:32"><name pos:start="1081:30" pos:end="1081:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1085:13" pos:end="1085:35"><expr pos:start="1085:13" pos:end="1085:34"><call pos:start="1085:13" pos:end="1085:34"><name pos:start="1085:13" pos:end="1085:29">tcg_temp_free_i32</name><argument_list pos:start="1085:30" pos:end="1085:34">(<argument pos:start="1085:31" pos:end="1085:33"><expr pos:start="1085:31" pos:end="1085:33"><name pos:start="1085:31" pos:end="1085:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1087:13" pos:end="1087:18">break;</break>

        <case pos:start="1089:9" pos:end="1089:18">case <expr pos:start="1089:14" pos:end="1089:17"><literal type="number" pos:start="1089:14" pos:end="1089:17">0x09</literal></expr>:</case>

            <if_stmt pos:start="1091:13" pos:end="1097:13"><if pos:start="1091:13" pos:end="1097:13">if <condition pos:start="1091:16" pos:end="1091:23">(<expr pos:start="1091:17" pos:end="1091:22"><name pos:start="1091:17" pos:end="1091:22">set_cc</name></expr>)</condition> <block pos:start="1091:25" pos:end="1097:13">{<block_content pos:start="1093:17" pos:end="1095:34">

                <expr_stmt pos:start="1093:17" pos:end="1093:48"><expr pos:start="1093:17" pos:end="1093:47"><call pos:start="1093:17" pos:end="1093:47"><name pos:start="1093:17" pos:end="1093:31">tcg_gen_xor_i32</name><argument_list pos:start="1093:32" pos:end="1093:47">(<argument pos:start="1093:33" pos:end="1093:35"><expr pos:start="1093:33" pos:end="1093:35"><name pos:start="1093:33" pos:end="1093:35">tmp</name></expr></argument>, <argument pos:start="1093:38" pos:end="1093:40"><expr pos:start="1093:38" pos:end="1093:40"><name pos:start="1093:38" pos:end="1093:40">tmp</name></expr></argument>, <argument pos:start="1093:43" pos:end="1093:46"><expr pos:start="1093:43" pos:end="1093:46"><name pos:start="1093:43" pos:end="1093:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1095:17" pos:end="1095:34"><expr pos:start="1095:17" pos:end="1095:33"><call pos:start="1095:17" pos:end="1095:33"><name pos:start="1095:17" pos:end="1095:28">gen_logic_CC</name><argument_list pos:start="1095:29" pos:end="1095:33">(<argument pos:start="1095:30" pos:end="1095:32"><expr pos:start="1095:30" pos:end="1095:32"><name pos:start="1095:30" pos:end="1095:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1099:13" pos:end="1099:35"><expr pos:start="1099:13" pos:end="1099:34"><call pos:start="1099:13" pos:end="1099:34"><name pos:start="1099:13" pos:end="1099:29">tcg_temp_free_i32</name><argument_list pos:start="1099:30" pos:end="1099:34">(<argument pos:start="1099:31" pos:end="1099:33"><expr pos:start="1099:31" pos:end="1099:33"><name pos:start="1099:31" pos:end="1099:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1101:13" pos:end="1101:18">break;</break>

        <case pos:start="1103:9" pos:end="1103:18">case <expr pos:start="1103:14" pos:end="1103:17"><literal type="number" pos:start="1103:14" pos:end="1103:17">0x0a</literal></expr>:</case>

            <if_stmt pos:start="1105:13" pos:end="1109:13"><if pos:start="1105:13" pos:end="1109:13">if <condition pos:start="1105:16" pos:end="1105:23">(<expr pos:start="1105:17" pos:end="1105:22"><name pos:start="1105:17" pos:end="1105:22">set_cc</name></expr>)</condition> <block pos:start="1105:25" pos:end="1109:13">{<block_content pos:start="1107:17" pos:end="1107:43">

                <expr_stmt pos:start="1107:17" pos:end="1107:43"><expr pos:start="1107:17" pos:end="1107:42"><call pos:start="1107:17" pos:end="1107:42"><name pos:start="1107:17" pos:end="1107:26">gen_sub_CC</name><argument_list pos:start="1107:27" pos:end="1107:42">(<argument pos:start="1107:28" pos:end="1107:30"><expr pos:start="1107:28" pos:end="1107:30"><name pos:start="1107:28" pos:end="1107:30">tmp</name></expr></argument>, <argument pos:start="1107:33" pos:end="1107:35"><expr pos:start="1107:33" pos:end="1107:35"><name pos:start="1107:33" pos:end="1107:35">tmp</name></expr></argument>, <argument pos:start="1107:38" pos:end="1107:41"><expr pos:start="1107:38" pos:end="1107:41"><name pos:start="1107:38" pos:end="1107:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1111:13" pos:end="1111:35"><expr pos:start="1111:13" pos:end="1111:34"><call pos:start="1111:13" pos:end="1111:34"><name pos:start="1111:13" pos:end="1111:29">tcg_temp_free_i32</name><argument_list pos:start="1111:30" pos:end="1111:34">(<argument pos:start="1111:31" pos:end="1111:33"><expr pos:start="1111:31" pos:end="1111:33"><name pos:start="1111:31" pos:end="1111:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1113:13" pos:end="1113:18">break;</break>

        <case pos:start="1115:9" pos:end="1115:18">case <expr pos:start="1115:14" pos:end="1115:17"><literal type="number" pos:start="1115:14" pos:end="1115:17">0x0b</literal></expr>:</case>

            <if_stmt pos:start="1117:13" pos:end="1121:13"><if pos:start="1117:13" pos:end="1121:13">if <condition pos:start="1117:16" pos:end="1117:23">(<expr pos:start="1117:17" pos:end="1117:22"><name pos:start="1117:17" pos:end="1117:22">set_cc</name></expr>)</condition> <block pos:start="1117:25" pos:end="1121:13">{<block_content pos:start="1119:17" pos:end="1119:43">

                <expr_stmt pos:start="1119:17" pos:end="1119:43"><expr pos:start="1119:17" pos:end="1119:42"><call pos:start="1119:17" pos:end="1119:42"><name pos:start="1119:17" pos:end="1119:26">gen_add_CC</name><argument_list pos:start="1119:27" pos:end="1119:42">(<argument pos:start="1119:28" pos:end="1119:30"><expr pos:start="1119:28" pos:end="1119:30"><name pos:start="1119:28" pos:end="1119:30">tmp</name></expr></argument>, <argument pos:start="1119:33" pos:end="1119:35"><expr pos:start="1119:33" pos:end="1119:35"><name pos:start="1119:33" pos:end="1119:35">tmp</name></expr></argument>, <argument pos:start="1119:38" pos:end="1119:41"><expr pos:start="1119:38" pos:end="1119:41"><name pos:start="1119:38" pos:end="1119:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1123:13" pos:end="1123:35"><expr pos:start="1123:13" pos:end="1123:34"><call pos:start="1123:13" pos:end="1123:34"><name pos:start="1123:13" pos:end="1123:29">tcg_temp_free_i32</name><argument_list pos:start="1123:30" pos:end="1123:34">(<argument pos:start="1123:31" pos:end="1123:33"><expr pos:start="1123:31" pos:end="1123:33"><name pos:start="1123:31" pos:end="1123:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1125:13" pos:end="1125:18">break;</break>

        <case pos:start="1127:9" pos:end="1127:18">case <expr pos:start="1127:14" pos:end="1127:17"><literal type="number" pos:start="1127:14" pos:end="1127:17">0x0c</literal></expr>:</case>

            <expr_stmt pos:start="1129:13" pos:end="1129:43"><expr pos:start="1129:13" pos:end="1129:42"><call pos:start="1129:13" pos:end="1129:42"><name pos:start="1129:13" pos:end="1129:26">tcg_gen_or_i32</name><argument_list pos:start="1129:27" pos:end="1129:42">(<argument pos:start="1129:28" pos:end="1129:30"><expr pos:start="1129:28" pos:end="1129:30"><name pos:start="1129:28" pos:end="1129:30">tmp</name></expr></argument>, <argument pos:start="1129:33" pos:end="1129:35"><expr pos:start="1129:33" pos:end="1129:35"><name pos:start="1129:33" pos:end="1129:35">tmp</name></expr></argument>, <argument pos:start="1129:38" pos:end="1129:41"><expr pos:start="1129:38" pos:end="1129:41"><name pos:start="1129:38" pos:end="1129:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1131:13" pos:end="1135:13"><if pos:start="1131:13" pos:end="1135:13">if <condition pos:start="1131:16" pos:end="1131:25">(<expr pos:start="1131:17" pos:end="1131:24"><name pos:start="1131:17" pos:end="1131:24">logic_cc</name></expr>)</condition> <block pos:start="1131:27" pos:end="1135:13">{<block_content pos:start="1133:17" pos:end="1133:34">

                <expr_stmt pos:start="1133:17" pos:end="1133:34"><expr pos:start="1133:17" pos:end="1133:33"><call pos:start="1133:17" pos:end="1133:33"><name pos:start="1133:17" pos:end="1133:28">gen_logic_CC</name><argument_list pos:start="1133:29" pos:end="1133:33">(<argument pos:start="1133:30" pos:end="1133:32"><expr pos:start="1133:30" pos:end="1133:32"><name pos:start="1133:30" pos:end="1133:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1137:13" pos:end="1137:42"><expr pos:start="1137:13" pos:end="1137:41"><call pos:start="1137:13" pos:end="1137:41"><name pos:start="1137:13" pos:end="1137:24">store_reg_bx</name><argument_list pos:start="1137:25" pos:end="1137:41">(<argument pos:start="1137:26" pos:end="1137:28"><expr pos:start="1137:26" pos:end="1137:28"><name pos:start="1137:26" pos:end="1137:28">env</name></expr></argument>, <argument pos:start="1137:31" pos:end="1137:31"><expr pos:start="1137:31" pos:end="1137:31"><name pos:start="1137:31" pos:end="1137:31">s</name></expr></argument>, <argument pos:start="1137:34" pos:end="1137:35"><expr pos:start="1137:34" pos:end="1137:35"><name pos:start="1137:34" pos:end="1137:35">rd</name></expr></argument>, <argument pos:start="1137:38" pos:end="1137:40"><expr pos:start="1137:38" pos:end="1137:40"><name pos:start="1137:38" pos:end="1137:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1139:13" pos:end="1139:18">break;</break>

        <case pos:start="1141:9" pos:end="1141:18">case <expr pos:start="1141:14" pos:end="1141:17"><literal type="number" pos:start="1141:14" pos:end="1141:17">0x0d</literal></expr>:</case>

            <if_stmt pos:start="1143:13" pos:end="1165:13"><if pos:start="1143:13" pos:end="1155:13">if <condition pos:start="1143:16" pos:end="1143:37">(<expr pos:start="1143:17" pos:end="1143:36"><name pos:start="1143:17" pos:end="1143:24">logic_cc</name> <operator pos:start="1143:26" pos:end="1143:27">&amp;&amp;</operator> <name pos:start="1143:29" pos:end="1143:30">rd</name> <operator pos:start="1143:32" pos:end="1143:33">==</operator> <literal type="number" pos:start="1143:35" pos:end="1143:36">15</literal></expr>)</condition> <block pos:start="1143:39" pos:end="1155:13">{<block_content pos:start="1147:17" pos:end="1153:46">

                <comment type="block" pos:start="1145:17" pos:end="1145:66">/* MOVS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="1147:17" pos:end="1151:17"><if pos:start="1147:17" pos:end="1151:17">if <condition pos:start="1147:20" pos:end="1147:31">(<expr pos:start="1147:21" pos:end="1147:30"><call pos:start="1147:21" pos:end="1147:30"><name pos:start="1147:21" pos:end="1147:27">IS_USER</name><argument_list pos:start="1147:28" pos:end="1147:30">(<argument pos:start="1147:29" pos:end="1147:29"><expr pos:start="1147:29" pos:end="1147:29"><name pos:start="1147:29" pos:end="1147:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1147:33" pos:end="1151:17">{<block_content pos:start="1149:21" pos:end="1149:36">

                    <goto pos:start="1149:21" pos:end="1149:36">goto <name pos:start="1149:26" pos:end="1149:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1153:17" pos:end="1153:46"><expr pos:start="1153:17" pos:end="1153:45"><call pos:start="1153:17" pos:end="1153:45"><name pos:start="1153:17" pos:end="1153:36">gen_exception_return</name><argument_list pos:start="1153:37" pos:end="1153:45">(<argument pos:start="1153:38" pos:end="1153:38"><expr pos:start="1153:38" pos:end="1153:38"><name pos:start="1153:38" pos:end="1153:38">s</name></expr></argument>, <argument pos:start="1153:41" pos:end="1153:44"><expr pos:start="1153:41" pos:end="1153:44"><name pos:start="1153:41" pos:end="1153:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1155:15" pos:end="1165:13">else <block pos:start="1155:20" pos:end="1165:13">{<block_content pos:start="1157:17" pos:end="1163:47">

                <if_stmt pos:start="1157:17" pos:end="1161:17"><if pos:start="1157:17" pos:end="1161:17">if <condition pos:start="1157:20" pos:end="1157:29">(<expr pos:start="1157:21" pos:end="1157:28"><name pos:start="1157:21" pos:end="1157:28">logic_cc</name></expr>)</condition> <block pos:start="1157:31" pos:end="1161:17">{<block_content pos:start="1159:21" pos:end="1159:39">

                    <expr_stmt pos:start="1159:21" pos:end="1159:39"><expr pos:start="1159:21" pos:end="1159:38"><call pos:start="1159:21" pos:end="1159:38"><name pos:start="1159:21" pos:end="1159:32">gen_logic_CC</name><argument_list pos:start="1159:33" pos:end="1159:38">(<argument pos:start="1159:34" pos:end="1159:37"><expr pos:start="1159:34" pos:end="1159:37"><name pos:start="1159:34" pos:end="1159:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1163:17" pos:end="1163:47"><expr pos:start="1163:17" pos:end="1163:46"><call pos:start="1163:17" pos:end="1163:46"><name pos:start="1163:17" pos:end="1163:28">store_reg_bx</name><argument_list pos:start="1163:29" pos:end="1163:46">(<argument pos:start="1163:30" pos:end="1163:32"><expr pos:start="1163:30" pos:end="1163:32"><name pos:start="1163:30" pos:end="1163:32">env</name></expr></argument>, <argument pos:start="1163:35" pos:end="1163:35"><expr pos:start="1163:35" pos:end="1163:35"><name pos:start="1163:35" pos:end="1163:35">s</name></expr></argument>, <argument pos:start="1163:38" pos:end="1163:39"><expr pos:start="1163:38" pos:end="1163:39"><name pos:start="1163:38" pos:end="1163:39">rd</name></expr></argument>, <argument pos:start="1163:42" pos:end="1163:45"><expr pos:start="1163:42" pos:end="1163:45"><name pos:start="1163:42" pos:end="1163:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1167:13" pos:end="1167:18">break;</break>

        <case pos:start="1169:9" pos:end="1169:18">case <expr pos:start="1169:14" pos:end="1169:17"><literal type="number" pos:start="1169:14" pos:end="1169:17">0x0e</literal></expr>:</case>

            <expr_stmt pos:start="1171:13" pos:end="1171:45"><expr pos:start="1171:13" pos:end="1171:44"><call pos:start="1171:13" pos:end="1171:44"><name pos:start="1171:13" pos:end="1171:28">tcg_gen_andc_i32</name><argument_list pos:start="1171:29" pos:end="1171:44">(<argument pos:start="1171:30" pos:end="1171:32"><expr pos:start="1171:30" pos:end="1171:32"><name pos:start="1171:30" pos:end="1171:32">tmp</name></expr></argument>, <argument pos:start="1171:35" pos:end="1171:37"><expr pos:start="1171:35" pos:end="1171:37"><name pos:start="1171:35" pos:end="1171:37">tmp</name></expr></argument>, <argument pos:start="1171:40" pos:end="1171:43"><expr pos:start="1171:40" pos:end="1171:43"><name pos:start="1171:40" pos:end="1171:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1173:13" pos:end="1177:13"><if pos:start="1173:13" pos:end="1177:13">if <condition pos:start="1173:16" pos:end="1173:25">(<expr pos:start="1173:17" pos:end="1173:24"><name pos:start="1173:17" pos:end="1173:24">logic_cc</name></expr>)</condition> <block pos:start="1173:27" pos:end="1177:13">{<block_content pos:start="1175:17" pos:end="1175:34">

                <expr_stmt pos:start="1175:17" pos:end="1175:34"><expr pos:start="1175:17" pos:end="1175:33"><call pos:start="1175:17" pos:end="1175:33"><name pos:start="1175:17" pos:end="1175:28">gen_logic_CC</name><argument_list pos:start="1175:29" pos:end="1175:33">(<argument pos:start="1175:30" pos:end="1175:32"><expr pos:start="1175:30" pos:end="1175:32"><name pos:start="1175:30" pos:end="1175:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1179:13" pos:end="1179:42"><expr pos:start="1179:13" pos:end="1179:41"><call pos:start="1179:13" pos:end="1179:41"><name pos:start="1179:13" pos:end="1179:24">store_reg_bx</name><argument_list pos:start="1179:25" pos:end="1179:41">(<argument pos:start="1179:26" pos:end="1179:28"><expr pos:start="1179:26" pos:end="1179:28"><name pos:start="1179:26" pos:end="1179:28">env</name></expr></argument>, <argument pos:start="1179:31" pos:end="1179:31"><expr pos:start="1179:31" pos:end="1179:31"><name pos:start="1179:31" pos:end="1179:31">s</name></expr></argument>, <argument pos:start="1179:34" pos:end="1179:35"><expr pos:start="1179:34" pos:end="1179:35"><name pos:start="1179:34" pos:end="1179:35">rd</name></expr></argument>, <argument pos:start="1179:38" pos:end="1179:40"><expr pos:start="1179:38" pos:end="1179:40"><name pos:start="1179:38" pos:end="1179:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1181:13" pos:end="1181:18">break;</break>

        <default pos:start="1183:9" pos:end="1183:16">default:</default>

        <case pos:start="1185:9" pos:end="1185:18">case <expr pos:start="1185:14" pos:end="1185:17"><literal type="number" pos:start="1185:14" pos:end="1185:17">0x0f</literal></expr>:</case>

            <expr_stmt pos:start="1187:13" pos:end="1187:40"><expr pos:start="1187:13" pos:end="1187:39"><call pos:start="1187:13" pos:end="1187:39"><name pos:start="1187:13" pos:end="1187:27">tcg_gen_not_i32</name><argument_list pos:start="1187:28" pos:end="1187:39">(<argument pos:start="1187:29" pos:end="1187:32"><expr pos:start="1187:29" pos:end="1187:32"><name pos:start="1187:29" pos:end="1187:32">tmp2</name></expr></argument>, <argument pos:start="1187:35" pos:end="1187:38"><expr pos:start="1187:35" pos:end="1187:38"><name pos:start="1187:35" pos:end="1187:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1189:13" pos:end="1193:13"><if pos:start="1189:13" pos:end="1193:13">if <condition pos:start="1189:16" pos:end="1189:25">(<expr pos:start="1189:17" pos:end="1189:24"><name pos:start="1189:17" pos:end="1189:24">logic_cc</name></expr>)</condition> <block pos:start="1189:27" pos:end="1193:13">{<block_content pos:start="1191:17" pos:end="1191:35">

                <expr_stmt pos:start="1191:17" pos:end="1191:35"><expr pos:start="1191:17" pos:end="1191:34"><call pos:start="1191:17" pos:end="1191:34"><name pos:start="1191:17" pos:end="1191:28">gen_logic_CC</name><argument_list pos:start="1191:29" pos:end="1191:34">(<argument pos:start="1191:30" pos:end="1191:33"><expr pos:start="1191:30" pos:end="1191:33"><name pos:start="1191:30" pos:end="1191:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1195:13" pos:end="1195:43"><expr pos:start="1195:13" pos:end="1195:42"><call pos:start="1195:13" pos:end="1195:42"><name pos:start="1195:13" pos:end="1195:24">store_reg_bx</name><argument_list pos:start="1195:25" pos:end="1195:42">(<argument pos:start="1195:26" pos:end="1195:28"><expr pos:start="1195:26" pos:end="1195:28"><name pos:start="1195:26" pos:end="1195:28">env</name></expr></argument>, <argument pos:start="1195:31" pos:end="1195:31"><expr pos:start="1195:31" pos:end="1195:31"><name pos:start="1195:31" pos:end="1195:31">s</name></expr></argument>, <argument pos:start="1195:34" pos:end="1195:35"><expr pos:start="1195:34" pos:end="1195:35"><name pos:start="1195:34" pos:end="1195:35">rd</name></expr></argument>, <argument pos:start="1195:38" pos:end="1195:41"><expr pos:start="1195:38" pos:end="1195:41"><name pos:start="1195:38" pos:end="1195:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1197:13" pos:end="1197:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="1201:9" pos:end="1205:9"><if pos:start="1201:9" pos:end="1205:9">if <condition pos:start="1201:12" pos:end="1201:39">(<expr pos:start="1201:13" pos:end="1201:38"><name pos:start="1201:13" pos:end="1201:15">op1</name> <operator pos:start="1201:17" pos:end="1201:18">!=</operator> <literal type="number" pos:start="1201:20" pos:end="1201:23">0x0f</literal> <operator pos:start="1201:25" pos:end="1201:26">&amp;&amp;</operator> <name pos:start="1201:28" pos:end="1201:30">op1</name> <operator pos:start="1201:32" pos:end="1201:33">!=</operator> <literal type="number" pos:start="1201:35" pos:end="1201:38">0x0d</literal></expr>)</condition> <block pos:start="1201:41" pos:end="1205:9">{<block_content pos:start="1203:13" pos:end="1203:36">

            <expr_stmt pos:start="1203:13" pos:end="1203:36"><expr pos:start="1203:13" pos:end="1203:35"><call pos:start="1203:13" pos:end="1203:35"><name pos:start="1203:13" pos:end="1203:29">tcg_temp_free_i32</name><argument_list pos:start="1203:30" pos:end="1203:35">(<argument pos:start="1203:31" pos:end="1203:34"><expr pos:start="1203:31" pos:end="1203:34"><name pos:start="1203:31" pos:end="1203:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="1207:7" pos:end="2767:5">else <block pos:start="1207:12" pos:end="2767:5">{<block_content pos:start="1211:9" pos:end="2765:9">

        <comment type="block" pos:start="1209:9" pos:end="1209:32">/* other instructions */</comment>

        <expr_stmt pos:start="1211:9" pos:end="1211:33"><expr pos:start="1211:9" pos:end="1211:32"><name pos:start="1211:9" pos:end="1211:11">op1</name> <operator pos:start="1211:13" pos:end="1211:13">=</operator> <operator pos:start="1211:15" pos:end="1211:15">(</operator><name pos:start="1211:16" pos:end="1211:19">insn</name> <operator pos:start="1211:21" pos:end="1211:22">&gt;&gt;</operator> <literal type="number" pos:start="1211:24" pos:end="1211:25">24</literal><operator pos:start="1211:26" pos:end="1211:26">)</operator> <operator pos:start="1211:28" pos:end="1211:28">&amp;</operator> <literal type="number" pos:start="1211:30" pos:end="1211:32">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="1213:9" pos:end="2765:9">switch<condition pos:start="1213:15" pos:end="1213:19">(<expr pos:start="1213:16" pos:end="1213:18"><name pos:start="1213:16" pos:end="1213:18">op1</name></expr>)</condition> <block pos:start="1213:21" pos:end="2765:9">{<block_content pos:start="1215:9" pos:end="2763:18">

        <case pos:start="1215:9" pos:end="1215:17">case <expr pos:start="1215:14" pos:end="1215:16"><literal type="number" pos:start="1215:14" pos:end="1215:16">0x0</literal></expr>:</case>

        <case pos:start="1217:9" pos:end="1217:17">case <expr pos:start="1217:14" pos:end="1217:16"><literal type="number" pos:start="1217:14" pos:end="1217:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="1219:13" pos:end="1219:47">/* multiplies, extra load/stores */</comment>

            <expr_stmt pos:start="1221:13" pos:end="1221:33"><expr pos:start="1221:13" pos:end="1221:32"><name pos:start="1221:13" pos:end="1221:14">sh</name> <operator pos:start="1221:16" pos:end="1221:16">=</operator> <operator pos:start="1221:18" pos:end="1221:18">(</operator><name pos:start="1221:19" pos:end="1221:22">insn</name> <operator pos:start="1221:24" pos:end="1221:25">&gt;&gt;</operator> <literal type="number" pos:start="1221:27" pos:end="1221:27">5</literal><operator pos:start="1221:28" pos:end="1221:28">)</operator> <operator pos:start="1221:30" pos:end="1221:30">&amp;</operator> <literal type="number" pos:start="1221:32" pos:end="1221:32">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1223:13" pos:end="1767:13"><if pos:start="1223:13" pos:end="1615:13">if <condition pos:start="1223:16" pos:end="1223:24">(<expr pos:start="1223:17" pos:end="1223:23"><name pos:start="1223:17" pos:end="1223:18">sh</name> <operator pos:start="1223:20" pos:end="1223:21">==</operator> <literal type="number" pos:start="1223:23" pos:end="1223:23">0</literal></expr>)</condition> <block pos:start="1223:26" pos:end="1615:13">{<block_content pos:start="1225:17" pos:end="1613:17">

                <if_stmt pos:start="1225:17" pos:end="1613:17"><if pos:start="1225:17" pos:end="1357:17">if <condition pos:start="1225:20" pos:end="1225:31">(<expr pos:start="1225:21" pos:end="1225:30"><name pos:start="1225:21" pos:end="1225:23">op1</name> <operator pos:start="1225:25" pos:end="1225:26">==</operator> <literal type="number" pos:start="1225:28" pos:end="1225:30">0x0</literal></expr>)</condition> <block pos:start="1225:33" pos:end="1357:17">{<block_content pos:start="1227:21" pos:end="1355:21">

                    <expr_stmt pos:start="1227:21" pos:end="1227:44"><expr pos:start="1227:21" pos:end="1227:43"><name pos:start="1227:21" pos:end="1227:22">rd</name> <operator pos:start="1227:24" pos:end="1227:24">=</operator> <operator pos:start="1227:26" pos:end="1227:26">(</operator><name pos:start="1227:27" pos:end="1227:30">insn</name> <operator pos:start="1227:32" pos:end="1227:33">&gt;&gt;</operator> <literal type="number" pos:start="1227:35" pos:end="1227:36">16</literal><operator pos:start="1227:37" pos:end="1227:37">)</operator> <operator pos:start="1227:39" pos:end="1227:39">&amp;</operator> <literal type="number" pos:start="1227:41" pos:end="1227:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1229:21" pos:end="1229:44"><expr pos:start="1229:21" pos:end="1229:43"><name pos:start="1229:21" pos:end="1229:22">rn</name> <operator pos:start="1229:24" pos:end="1229:24">=</operator> <operator pos:start="1229:26" pos:end="1229:26">(</operator><name pos:start="1229:27" pos:end="1229:30">insn</name> <operator pos:start="1229:32" pos:end="1229:33">&gt;&gt;</operator> <literal type="number" pos:start="1229:35" pos:end="1229:36">12</literal><operator pos:start="1229:37" pos:end="1229:37">)</operator> <operator pos:start="1229:39" pos:end="1229:39">&amp;</operator> <literal type="number" pos:start="1229:41" pos:end="1229:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1231:21" pos:end="1231:43"><expr pos:start="1231:21" pos:end="1231:42"><name pos:start="1231:21" pos:end="1231:22">rs</name> <operator pos:start="1231:24" pos:end="1231:24">=</operator> <operator pos:start="1231:26" pos:end="1231:26">(</operator><name pos:start="1231:27" pos:end="1231:30">insn</name> <operator pos:start="1231:32" pos:end="1231:33">&gt;&gt;</operator> <literal type="number" pos:start="1231:35" pos:end="1231:35">8</literal><operator pos:start="1231:36" pos:end="1231:36">)</operator> <operator pos:start="1231:38" pos:end="1231:38">&amp;</operator> <literal type="number" pos:start="1231:40" pos:end="1231:42">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1233:21" pos:end="1233:38"><expr pos:start="1233:21" pos:end="1233:37"><name pos:start="1233:21" pos:end="1233:22">rm</name> <operator pos:start="1233:24" pos:end="1233:24">=</operator> <operator pos:start="1233:26" pos:end="1233:26">(</operator><name pos:start="1233:27" pos:end="1233:30">insn</name><operator pos:start="1233:31" pos:end="1233:31">)</operator> <operator pos:start="1233:33" pos:end="1233:33">&amp;</operator> <literal type="number" pos:start="1233:35" pos:end="1233:37">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1235:21" pos:end="1235:45"><expr pos:start="1235:21" pos:end="1235:44"><name pos:start="1235:21" pos:end="1235:23">op1</name> <operator pos:start="1235:25" pos:end="1235:25">=</operator> <operator pos:start="1235:27" pos:end="1235:27">(</operator><name pos:start="1235:28" pos:end="1235:31">insn</name> <operator pos:start="1235:33" pos:end="1235:34">&gt;&gt;</operator> <literal type="number" pos:start="1235:36" pos:end="1235:37">20</literal><operator pos:start="1235:38" pos:end="1235:38">)</operator> <operator pos:start="1235:40" pos:end="1235:40">&amp;</operator> <literal type="number" pos:start="1235:42" pos:end="1235:44">0xf</literal></expr>;</expr_stmt>

                    <switch pos:start="1237:21" pos:end="1355:21">switch <condition pos:start="1237:28" pos:end="1237:32">(<expr pos:start="1237:29" pos:end="1237:31"><name pos:start="1237:29" pos:end="1237:31">op1</name></expr>)</condition> <block pos:start="1237:34" pos:end="1355:21">{<block_content pos:start="1239:21" pos:end="1353:40">

                    <case pos:start="1239:21" pos:end="1239:27">case <expr pos:start="1239:26" pos:end="1239:26"><literal type="number" pos:start="1239:26" pos:end="1239:26">0</literal></expr>:</case> <case pos:start="1239:29" pos:end="1239:35">case <expr pos:start="1239:34" pos:end="1239:34"><literal type="number" pos:start="1239:34" pos:end="1239:34">1</literal></expr>:</case> <case pos:start="1239:37" pos:end="1239:43">case <expr pos:start="1239:42" pos:end="1239:42"><literal type="number" pos:start="1239:42" pos:end="1239:42">2</literal></expr>:</case> <case pos:start="1239:45" pos:end="1239:51">case <expr pos:start="1239:50" pos:end="1239:50"><literal type="number" pos:start="1239:50" pos:end="1239:50">3</literal></expr>:</case> <case pos:start="1239:53" pos:end="1239:59">case <expr pos:start="1239:58" pos:end="1239:58"><literal type="number" pos:start="1239:58" pos:end="1239:58">6</literal></expr>:</case>

                        <comment type="block" pos:start="1241:25" pos:end="1241:40">/* 32 bit mul */</comment>

                        <expr_stmt pos:start="1243:25" pos:end="1243:46"><expr pos:start="1243:25" pos:end="1243:45"><name pos:start="1243:25" pos:end="1243:27">tmp</name> <operator pos:start="1243:29" pos:end="1243:29">=</operator> <call pos:start="1243:31" pos:end="1243:45"><name pos:start="1243:31" pos:end="1243:38">load_reg</name><argument_list pos:start="1243:39" pos:end="1243:45">(<argument pos:start="1243:40" pos:end="1243:40"><expr pos:start="1243:40" pos:end="1243:40"><name pos:start="1243:40" pos:end="1243:40">s</name></expr></argument>, <argument pos:start="1243:43" pos:end="1243:44"><expr pos:start="1243:43" pos:end="1243:44"><name pos:start="1243:43" pos:end="1243:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1245:25" pos:end="1245:47"><expr pos:start="1245:25" pos:end="1245:46"><name pos:start="1245:25" pos:end="1245:28">tmp2</name> <operator pos:start="1245:30" pos:end="1245:30">=</operator> <call pos:start="1245:32" pos:end="1245:46"><name pos:start="1245:32" pos:end="1245:39">load_reg</name><argument_list pos:start="1245:40" pos:end="1245:46">(<argument pos:start="1245:41" pos:end="1245:41"><expr pos:start="1245:41" pos:end="1245:41"><name pos:start="1245:41" pos:end="1245:41">s</name></expr></argument>, <argument pos:start="1245:44" pos:end="1245:45"><expr pos:start="1245:44" pos:end="1245:45"><name pos:start="1245:44" pos:end="1245:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1247:25" pos:end="1247:56"><expr pos:start="1247:25" pos:end="1247:55"><call pos:start="1247:25" pos:end="1247:55"><name pos:start="1247:25" pos:end="1247:39">tcg_gen_mul_i32</name><argument_list pos:start="1247:40" pos:end="1247:55">(<argument pos:start="1247:41" pos:end="1247:43"><expr pos:start="1247:41" pos:end="1247:43"><name pos:start="1247:41" pos:end="1247:43">tmp</name></expr></argument>, <argument pos:start="1247:46" pos:end="1247:48"><expr pos:start="1247:46" pos:end="1247:48"><name pos:start="1247:46" pos:end="1247:48">tmp</name></expr></argument>, <argument pos:start="1247:51" pos:end="1247:54"><expr pos:start="1247:51" pos:end="1247:54"><name pos:start="1247:51" pos:end="1247:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1249:25" pos:end="1249:48"><expr pos:start="1249:25" pos:end="1249:47"><call pos:start="1249:25" pos:end="1249:47"><name pos:start="1249:25" pos:end="1249:41">tcg_temp_free_i32</name><argument_list pos:start="1249:42" pos:end="1249:47">(<argument pos:start="1249:43" pos:end="1249:46"><expr pos:start="1249:43" pos:end="1249:46"><name pos:start="1249:43" pos:end="1249:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1251:25" pos:end="1273:25"><if pos:start="1251:25" pos:end="1263:25">if <condition pos:start="1251:28" pos:end="1251:45">(<expr pos:start="1251:29" pos:end="1251:44"><name pos:start="1251:29" pos:end="1251:32">insn</name> <operator pos:start="1251:34" pos:end="1251:34">&amp;</operator> <operator pos:start="1251:36" pos:end="1251:36">(</operator><literal type="number" pos:start="1251:37" pos:end="1251:37">1</literal> <operator pos:start="1251:39" pos:end="1251:40">&lt;&lt;</operator> <literal type="number" pos:start="1251:42" pos:end="1251:43">22</literal><operator pos:start="1251:44" pos:end="1251:44">)</operator></expr>)</condition> <block pos:start="1251:47" pos:end="1263:25">{<block_content pos:start="1255:29" pos:end="1261:52">

                            <comment type="block" pos:start="1253:29" pos:end="1253:48">/* Subtract (mls) */</comment>

                            <expr_stmt pos:start="1255:29" pos:end="1255:38"><expr pos:start="1255:29" pos:end="1255:37"><call pos:start="1255:29" pos:end="1255:37"><name pos:start="1255:29" pos:end="1255:32">ARCH</name><argument_list pos:start="1255:33" pos:end="1255:37">(<argument pos:start="1255:34" pos:end="1255:36"><expr pos:start="1255:34" pos:end="1255:36"><literal type="number" pos:start="1255:34" pos:end="1255:36">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1257:29" pos:end="1257:51"><expr pos:start="1257:29" pos:end="1257:50"><name pos:start="1257:29" pos:end="1257:32">tmp2</name> <operator pos:start="1257:34" pos:end="1257:34">=</operator> <call pos:start="1257:36" pos:end="1257:50"><name pos:start="1257:36" pos:end="1257:43">load_reg</name><argument_list pos:start="1257:44" pos:end="1257:50">(<argument pos:start="1257:45" pos:end="1257:45"><expr pos:start="1257:45" pos:end="1257:45"><name pos:start="1257:45" pos:end="1257:45">s</name></expr></argument>, <argument pos:start="1257:48" pos:end="1257:49"><expr pos:start="1257:48" pos:end="1257:49"><name pos:start="1257:48" pos:end="1257:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1259:29" pos:end="1259:60"><expr pos:start="1259:29" pos:end="1259:59"><call pos:start="1259:29" pos:end="1259:59"><name pos:start="1259:29" pos:end="1259:43">tcg_gen_sub_i32</name><argument_list pos:start="1259:44" pos:end="1259:59">(<argument pos:start="1259:45" pos:end="1259:47"><expr pos:start="1259:45" pos:end="1259:47"><name pos:start="1259:45" pos:end="1259:47">tmp</name></expr></argument>, <argument pos:start="1259:50" pos:end="1259:53"><expr pos:start="1259:50" pos:end="1259:53"><name pos:start="1259:50" pos:end="1259:53">tmp2</name></expr></argument>, <argument pos:start="1259:56" pos:end="1259:58"><expr pos:start="1259:56" pos:end="1259:58"><name pos:start="1259:56" pos:end="1259:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1261:29" pos:end="1261:52"><expr pos:start="1261:29" pos:end="1261:51"><call pos:start="1261:29" pos:end="1261:51"><name pos:start="1261:29" pos:end="1261:45">tcg_temp_free_i32</name><argument_list pos:start="1261:46" pos:end="1261:51">(<argument pos:start="1261:47" pos:end="1261:50"><expr pos:start="1261:47" pos:end="1261:50"><name pos:start="1261:47" pos:end="1261:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1263:27" pos:end="1273:25">else if <condition pos:start="1263:35" pos:end="1263:52">(<expr pos:start="1263:36" pos:end="1263:51"><name pos:start="1263:36" pos:end="1263:39">insn</name> <operator pos:start="1263:41" pos:end="1263:41">&amp;</operator> <operator pos:start="1263:43" pos:end="1263:43">(</operator><literal type="number" pos:start="1263:44" pos:end="1263:44">1</literal> <operator pos:start="1263:46" pos:end="1263:47">&lt;&lt;</operator> <literal type="number" pos:start="1263:49" pos:end="1263:50">21</literal><operator pos:start="1263:51" pos:end="1263:51">)</operator></expr>)</condition> <block pos:start="1263:54" pos:end="1273:25">{<block_content pos:start="1267:29" pos:end="1271:52">

                            <comment type="block" pos:start="1265:29" pos:end="1265:37">/* Add */</comment>

                            <expr_stmt pos:start="1267:29" pos:end="1267:51"><expr pos:start="1267:29" pos:end="1267:50"><name pos:start="1267:29" pos:end="1267:32">tmp2</name> <operator pos:start="1267:34" pos:end="1267:34">=</operator> <call pos:start="1267:36" pos:end="1267:50"><name pos:start="1267:36" pos:end="1267:43">load_reg</name><argument_list pos:start="1267:44" pos:end="1267:50">(<argument pos:start="1267:45" pos:end="1267:45"><expr pos:start="1267:45" pos:end="1267:45"><name pos:start="1267:45" pos:end="1267:45">s</name></expr></argument>, <argument pos:start="1267:48" pos:end="1267:49"><expr pos:start="1267:48" pos:end="1267:49"><name pos:start="1267:48" pos:end="1267:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1269:29" pos:end="1269:60"><expr pos:start="1269:29" pos:end="1269:59"><call pos:start="1269:29" pos:end="1269:59"><name pos:start="1269:29" pos:end="1269:43">tcg_gen_add_i32</name><argument_list pos:start="1269:44" pos:end="1269:59">(<argument pos:start="1269:45" pos:end="1269:47"><expr pos:start="1269:45" pos:end="1269:47"><name pos:start="1269:45" pos:end="1269:47">tmp</name></expr></argument>, <argument pos:start="1269:50" pos:end="1269:52"><expr pos:start="1269:50" pos:end="1269:52"><name pos:start="1269:50" pos:end="1269:52">tmp</name></expr></argument>, <argument pos:start="1269:55" pos:end="1269:58"><expr pos:start="1269:55" pos:end="1269:58"><name pos:start="1269:55" pos:end="1269:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1271:29" pos:end="1271:52"><expr pos:start="1271:29" pos:end="1271:51"><call pos:start="1271:29" pos:end="1271:51"><name pos:start="1271:29" pos:end="1271:45">tcg_temp_free_i32</name><argument_list pos:start="1271:46" pos:end="1271:51">(<argument pos:start="1271:47" pos:end="1271:50"><expr pos:start="1271:47" pos:end="1271:50"><name pos:start="1271:47" pos:end="1271:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1275:25" pos:end="1277:46"><if pos:start="1275:25" pos:end="1277:46">if <condition pos:start="1275:28" pos:end="1275:45">(<expr pos:start="1275:29" pos:end="1275:44"><name pos:start="1275:29" pos:end="1275:32">insn</name> <operator pos:start="1275:34" pos:end="1275:34">&amp;</operator> <operator pos:start="1275:36" pos:end="1275:36">(</operator><literal type="number" pos:start="1275:37" pos:end="1275:37">1</literal> <operator pos:start="1275:39" pos:end="1275:40">&lt;&lt;</operator> <literal type="number" pos:start="1275:42" pos:end="1275:43">20</literal><operator pos:start="1275:44" pos:end="1275:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1277:29" pos:end="1277:46"><block_content pos:start="1277:29" pos:end="1277:46">

                            <expr_stmt pos:start="1277:29" pos:end="1277:46"><expr pos:start="1277:29" pos:end="1277:45"><call pos:start="1277:29" pos:end="1277:45"><name pos:start="1277:29" pos:end="1277:40">gen_logic_CC</name><argument_list pos:start="1277:41" pos:end="1277:45">(<argument pos:start="1277:42" pos:end="1277:44"><expr pos:start="1277:42" pos:end="1277:44"><name pos:start="1277:42" pos:end="1277:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1279:25" pos:end="1279:46"><expr pos:start="1279:25" pos:end="1279:45"><call pos:start="1279:25" pos:end="1279:45"><name pos:start="1279:25" pos:end="1279:33">store_reg</name><argument_list pos:start="1279:34" pos:end="1279:45">(<argument pos:start="1279:35" pos:end="1279:35"><expr pos:start="1279:35" pos:end="1279:35"><name pos:start="1279:35" pos:end="1279:35">s</name></expr></argument>, <argument pos:start="1279:38" pos:end="1279:39"><expr pos:start="1279:38" pos:end="1279:39"><name pos:start="1279:38" pos:end="1279:39">rd</name></expr></argument>, <argument pos:start="1279:42" pos:end="1279:44"><expr pos:start="1279:42" pos:end="1279:44"><name pos:start="1279:42" pos:end="1279:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1281:25" pos:end="1281:30">break;</break>

                    <case pos:start="1283:21" pos:end="1283:27">case <expr pos:start="1283:26" pos:end="1283:26"><literal type="number" pos:start="1283:26" pos:end="1283:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="1285:25" pos:end="1285:66">/* 64 bit mul double accumulate (UMAAL) */</comment>

                        <expr_stmt pos:start="1287:25" pos:end="1287:32"><expr pos:start="1287:25" pos:end="1287:31"><call pos:start="1287:25" pos:end="1287:31"><name pos:start="1287:25" pos:end="1287:28">ARCH</name><argument_list pos:start="1287:29" pos:end="1287:31">(<argument pos:start="1287:30" pos:end="1287:30"><expr pos:start="1287:30" pos:end="1287:30"><literal type="number" pos:start="1287:30" pos:end="1287:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1289:25" pos:end="1289:46"><expr pos:start="1289:25" pos:end="1289:45"><name pos:start="1289:25" pos:end="1289:27">tmp</name> <operator pos:start="1289:29" pos:end="1289:29">=</operator> <call pos:start="1289:31" pos:end="1289:45"><name pos:start="1289:31" pos:end="1289:38">load_reg</name><argument_list pos:start="1289:39" pos:end="1289:45">(<argument pos:start="1289:40" pos:end="1289:40"><expr pos:start="1289:40" pos:end="1289:40"><name pos:start="1289:40" pos:end="1289:40">s</name></expr></argument>, <argument pos:start="1289:43" pos:end="1289:44"><expr pos:start="1289:43" pos:end="1289:44"><name pos:start="1289:43" pos:end="1289:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1291:25" pos:end="1291:47"><expr pos:start="1291:25" pos:end="1291:46"><name pos:start="1291:25" pos:end="1291:28">tmp2</name> <operator pos:start="1291:30" pos:end="1291:30">=</operator> <call pos:start="1291:32" pos:end="1291:46"><name pos:start="1291:32" pos:end="1291:39">load_reg</name><argument_list pos:start="1291:40" pos:end="1291:46">(<argument pos:start="1291:41" pos:end="1291:41"><expr pos:start="1291:41" pos:end="1291:41"><name pos:start="1291:41" pos:end="1291:41">s</name></expr></argument>, <argument pos:start="1291:44" pos:end="1291:45"><expr pos:start="1291:44" pos:end="1291:45"><name pos:start="1291:44" pos:end="1291:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1293:25" pos:end="1293:60"><expr pos:start="1293:25" pos:end="1293:59"><name pos:start="1293:25" pos:end="1293:29">tmp64</name> <operator pos:start="1293:31" pos:end="1293:31">=</operator> <call pos:start="1293:33" pos:end="1293:59"><name pos:start="1293:33" pos:end="1293:48">gen_mulu_i64_i32</name><argument_list pos:start="1293:49" pos:end="1293:59">(<argument pos:start="1293:50" pos:end="1293:52"><expr pos:start="1293:50" pos:end="1293:52"><name pos:start="1293:50" pos:end="1293:52">tmp</name></expr></argument>, <argument pos:start="1293:55" pos:end="1293:58"><expr pos:start="1293:55" pos:end="1293:58"><name pos:start="1293:55" pos:end="1293:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1295:25" pos:end="1295:50"><expr pos:start="1295:25" pos:end="1295:49"><call pos:start="1295:25" pos:end="1295:49"><name pos:start="1295:25" pos:end="1295:35">gen_addq_lo</name><argument_list pos:start="1295:36" pos:end="1295:49">(<argument pos:start="1295:37" pos:end="1295:37"><expr pos:start="1295:37" pos:end="1295:37"><name pos:start="1295:37" pos:end="1295:37">s</name></expr></argument>, <argument pos:start="1295:40" pos:end="1295:44"><expr pos:start="1295:40" pos:end="1295:44"><name pos:start="1295:40" pos:end="1295:44">tmp64</name></expr></argument>, <argument pos:start="1295:47" pos:end="1295:48"><expr pos:start="1295:47" pos:end="1295:48"><name pos:start="1295:47" pos:end="1295:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1297:25" pos:end="1297:50"><expr pos:start="1297:25" pos:end="1297:49"><call pos:start="1297:25" pos:end="1297:49"><name pos:start="1297:25" pos:end="1297:35">gen_addq_lo</name><argument_list pos:start="1297:36" pos:end="1297:49">(<argument pos:start="1297:37" pos:end="1297:37"><expr pos:start="1297:37" pos:end="1297:37"><name pos:start="1297:37" pos:end="1297:37">s</name></expr></argument>, <argument pos:start="1297:40" pos:end="1297:44"><expr pos:start="1297:40" pos:end="1297:44"><name pos:start="1297:40" pos:end="1297:44">tmp64</name></expr></argument>, <argument pos:start="1297:47" pos:end="1297:48"><expr pos:start="1297:47" pos:end="1297:48"><name pos:start="1297:47" pos:end="1297:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1299:25" pos:end="1299:57"><expr pos:start="1299:25" pos:end="1299:56"><call pos:start="1299:25" pos:end="1299:56"><name pos:start="1299:25" pos:end="1299:38">gen_storeq_reg</name><argument_list pos:start="1299:39" pos:end="1299:56">(<argument pos:start="1299:40" pos:end="1299:40"><expr pos:start="1299:40" pos:end="1299:40"><name pos:start="1299:40" pos:end="1299:40">s</name></expr></argument>, <argument pos:start="1299:43" pos:end="1299:44"><expr pos:start="1299:43" pos:end="1299:44"><name pos:start="1299:43" pos:end="1299:44">rn</name></expr></argument>, <argument pos:start="1299:47" pos:end="1299:48"><expr pos:start="1299:47" pos:end="1299:48"><name pos:start="1299:47" pos:end="1299:48">rd</name></expr></argument>, <argument pos:start="1299:51" pos:end="1299:55"><expr pos:start="1299:51" pos:end="1299:55"><name pos:start="1299:51" pos:end="1299:55">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1301:25" pos:end="1301:49"><expr pos:start="1301:25" pos:end="1301:48"><call pos:start="1301:25" pos:end="1301:48"><name pos:start="1301:25" pos:end="1301:41">tcg_temp_free_i64</name><argument_list pos:start="1301:42" pos:end="1301:48">(<argument pos:start="1301:43" pos:end="1301:47"><expr pos:start="1301:43" pos:end="1301:47"><name pos:start="1301:43" pos:end="1301:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1303:25" pos:end="1303:30">break;</break>

                    <case pos:start="1305:21" pos:end="1305:27">case <expr pos:start="1305:26" pos:end="1305:26"><literal type="number" pos:start="1305:26" pos:end="1305:26">8</literal></expr>:</case> <case pos:start="1305:29" pos:end="1305:35">case <expr pos:start="1305:34" pos:end="1305:34"><literal type="number" pos:start="1305:34" pos:end="1305:34">9</literal></expr>:</case> <case pos:start="1305:37" pos:end="1305:44">case <expr pos:start="1305:42" pos:end="1305:43"><literal type="number" pos:start="1305:42" pos:end="1305:43">10</literal></expr>:</case> <case pos:start="1305:46" pos:end="1305:53">case <expr pos:start="1305:51" pos:end="1305:52"><literal type="number" pos:start="1305:51" pos:end="1305:52">11</literal></expr>:</case>

                    <case pos:start="1307:21" pos:end="1307:28">case <expr pos:start="1307:26" pos:end="1307:27"><literal type="number" pos:start="1307:26" pos:end="1307:27">12</literal></expr>:</case> <case pos:start="1307:30" pos:end="1307:37">case <expr pos:start="1307:35" pos:end="1307:36"><literal type="number" pos:start="1307:35" pos:end="1307:36">13</literal></expr>:</case> <case pos:start="1307:39" pos:end="1307:46">case <expr pos:start="1307:44" pos:end="1307:45"><literal type="number" pos:start="1307:44" pos:end="1307:45">14</literal></expr>:</case> <case pos:start="1307:48" pos:end="1307:55">case <expr pos:start="1307:53" pos:end="1307:54"><literal type="number" pos:start="1307:53" pos:end="1307:54">15</literal></expr>:</case>

                        <comment type="block" pos:start="1309:25" pos:end="1309:69">/* 64 bit mul: UMULL, UMLAL, SMULL, SMLAL. */</comment>

                        <expr_stmt pos:start="1311:25" pos:end="1311:46"><expr pos:start="1311:25" pos:end="1311:45"><name pos:start="1311:25" pos:end="1311:27">tmp</name> <operator pos:start="1311:29" pos:end="1311:29">=</operator> <call pos:start="1311:31" pos:end="1311:45"><name pos:start="1311:31" pos:end="1311:38">load_reg</name><argument_list pos:start="1311:39" pos:end="1311:45">(<argument pos:start="1311:40" pos:end="1311:40"><expr pos:start="1311:40" pos:end="1311:40"><name pos:start="1311:40" pos:end="1311:40">s</name></expr></argument>, <argument pos:start="1311:43" pos:end="1311:44"><expr pos:start="1311:43" pos:end="1311:44"><name pos:start="1311:43" pos:end="1311:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1313:25" pos:end="1313:47"><expr pos:start="1313:25" pos:end="1313:46"><name pos:start="1313:25" pos:end="1313:28">tmp2</name> <operator pos:start="1313:30" pos:end="1313:30">=</operator> <call pos:start="1313:32" pos:end="1313:46"><name pos:start="1313:32" pos:end="1313:39">load_reg</name><argument_list pos:start="1313:40" pos:end="1313:46">(<argument pos:start="1313:41" pos:end="1313:41"><expr pos:start="1313:41" pos:end="1313:41"><name pos:start="1313:41" pos:end="1313:41">s</name></expr></argument>, <argument pos:start="1313:44" pos:end="1313:45"><expr pos:start="1313:44" pos:end="1313:45"><name pos:start="1313:44" pos:end="1313:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1315:25" pos:end="1323:25"><if pos:start="1315:25" pos:end="1319:25">if <condition pos:start="1315:28" pos:end="1315:45">(<expr pos:start="1315:29" pos:end="1315:44"><name pos:start="1315:29" pos:end="1315:32">insn</name> <operator pos:start="1315:34" pos:end="1315:34">&amp;</operator> <operator pos:start="1315:36" pos:end="1315:36">(</operator><literal type="number" pos:start="1315:37" pos:end="1315:37">1</literal> <operator pos:start="1315:39" pos:end="1315:40">&lt;&lt;</operator> <literal type="number" pos:start="1315:42" pos:end="1315:43">22</literal><operator pos:start="1315:44" pos:end="1315:44">)</operator></expr>)</condition> <block pos:start="1315:47" pos:end="1319:25">{<block_content pos:start="1317:29" pos:end="1317:68">

                            <expr_stmt pos:start="1317:29" pos:end="1317:68"><expr pos:start="1317:29" pos:end="1317:67"><call pos:start="1317:29" pos:end="1317:67"><name pos:start="1317:29" pos:end="1317:45">tcg_gen_muls2_i32</name><argument_list pos:start="1317:46" pos:end="1317:67">(<argument pos:start="1317:47" pos:end="1317:49"><expr pos:start="1317:47" pos:end="1317:49"><name pos:start="1317:47" pos:end="1317:49">tmp</name></expr></argument>, <argument pos:start="1317:52" pos:end="1317:55"><expr pos:start="1317:52" pos:end="1317:55"><name pos:start="1317:52" pos:end="1317:55">tmp2</name></expr></argument>, <argument pos:start="1317:58" pos:end="1317:60"><expr pos:start="1317:58" pos:end="1317:60"><name pos:start="1317:58" pos:end="1317:60">tmp</name></expr></argument>, <argument pos:start="1317:63" pos:end="1317:66"><expr pos:start="1317:63" pos:end="1317:66"><name pos:start="1317:63" pos:end="1317:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1319:27" pos:end="1323:25">else <block pos:start="1319:32" pos:end="1323:25">{<block_content pos:start="1321:29" pos:end="1321:68">

                            <expr_stmt pos:start="1321:29" pos:end="1321:68"><expr pos:start="1321:29" pos:end="1321:67"><call pos:start="1321:29" pos:end="1321:67"><name pos:start="1321:29" pos:end="1321:45">tcg_gen_mulu2_i32</name><argument_list pos:start="1321:46" pos:end="1321:67">(<argument pos:start="1321:47" pos:end="1321:49"><expr pos:start="1321:47" pos:end="1321:49"><name pos:start="1321:47" pos:end="1321:49">tmp</name></expr></argument>, <argument pos:start="1321:52" pos:end="1321:55"><expr pos:start="1321:52" pos:end="1321:55"><name pos:start="1321:52" pos:end="1321:55">tmp2</name></expr></argument>, <argument pos:start="1321:58" pos:end="1321:60"><expr pos:start="1321:58" pos:end="1321:60"><name pos:start="1321:58" pos:end="1321:60">tmp</name></expr></argument>, <argument pos:start="1321:63" pos:end="1321:66"><expr pos:start="1321:63" pos:end="1321:66"><name pos:start="1321:63" pos:end="1321:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="1325:25" pos:end="1337:25"><if pos:start="1325:25" pos:end="1337:25">if <condition pos:start="1325:28" pos:end="1325:45">(<expr pos:start="1325:29" pos:end="1325:44"><name pos:start="1325:29" pos:end="1325:32">insn</name> <operator pos:start="1325:34" pos:end="1325:34">&amp;</operator> <operator pos:start="1325:36" pos:end="1325:36">(</operator><literal type="number" pos:start="1325:37" pos:end="1325:37">1</literal> <operator pos:start="1325:39" pos:end="1325:40">&lt;&lt;</operator> <literal type="number" pos:start="1325:42" pos:end="1325:43">21</literal><operator pos:start="1325:44" pos:end="1325:44">)</operator></expr>)</condition> <block pos:start="1325:47" pos:end="1337:25">{<block_content pos:start="1327:29" pos:end="1335:50"> <comment type="block" pos:start="1325:49" pos:end="1325:69">/* mult accumulate */</comment>

                            <decl_stmt pos:start="1327:29" pos:end="1327:58"><decl pos:start="1327:29" pos:end="1327:57"><type pos:start="1327:29" pos:end="1327:36"><name pos:start="1327:29" pos:end="1327:36">TCGv_i32</name></type> <name pos:start="1327:38" pos:end="1327:39">al</name> <init pos:start="1327:41" pos:end="1327:57">= <expr pos:start="1327:43" pos:end="1327:57"><call pos:start="1327:43" pos:end="1327:57"><name pos:start="1327:43" pos:end="1327:50">load_reg</name><argument_list pos:start="1327:51" pos:end="1327:57">(<argument pos:start="1327:52" pos:end="1327:52"><expr pos:start="1327:52" pos:end="1327:52"><name pos:start="1327:52" pos:end="1327:52">s</name></expr></argument>, <argument pos:start="1327:55" pos:end="1327:56"><expr pos:start="1327:55" pos:end="1327:56"><name pos:start="1327:55" pos:end="1327:56">rn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <decl_stmt pos:start="1329:29" pos:end="1329:58"><decl pos:start="1329:29" pos:end="1329:57"><type pos:start="1329:29" pos:end="1329:36"><name pos:start="1329:29" pos:end="1329:36">TCGv_i32</name></type> <name pos:start="1329:38" pos:end="1329:39">ah</name> <init pos:start="1329:41" pos:end="1329:57">= <expr pos:start="1329:43" pos:end="1329:57"><call pos:start="1329:43" pos:end="1329:57"><name pos:start="1329:43" pos:end="1329:50">load_reg</name><argument_list pos:start="1329:51" pos:end="1329:57">(<argument pos:start="1329:52" pos:end="1329:52"><expr pos:start="1329:52" pos:end="1329:52"><name pos:start="1329:52" pos:end="1329:52">s</name></expr></argument>, <argument pos:start="1329:55" pos:end="1329:56"><expr pos:start="1329:55" pos:end="1329:56"><name pos:start="1329:55" pos:end="1329:56">rd</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                            <expr_stmt pos:start="1331:29" pos:end="1331:75"><expr pos:start="1331:29" pos:end="1331:74"><call pos:start="1331:29" pos:end="1331:74"><name pos:start="1331:29" pos:end="1331:44">tcg_gen_add2_i32</name><argument_list pos:start="1331:45" pos:end="1331:74">(<argument pos:start="1331:46" pos:end="1331:48"><expr pos:start="1331:46" pos:end="1331:48"><name pos:start="1331:46" pos:end="1331:48">tmp</name></expr></argument>, <argument pos:start="1331:51" pos:end="1331:54"><expr pos:start="1331:51" pos:end="1331:54"><name pos:start="1331:51" pos:end="1331:54">tmp2</name></expr></argument>, <argument pos:start="1331:57" pos:end="1331:59"><expr pos:start="1331:57" pos:end="1331:59"><name pos:start="1331:57" pos:end="1331:59">tmp</name></expr></argument>, <argument pos:start="1331:62" pos:end="1331:65"><expr pos:start="1331:62" pos:end="1331:65"><name pos:start="1331:62" pos:end="1331:65">tmp2</name></expr></argument>, <argument pos:start="1331:68" pos:end="1331:69"><expr pos:start="1331:68" pos:end="1331:69"><name pos:start="1331:68" pos:end="1331:69">al</name></expr></argument>, <argument pos:start="1331:72" pos:end="1331:73"><expr pos:start="1331:72" pos:end="1331:73"><name pos:start="1331:72" pos:end="1331:73">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1333:29" pos:end="1333:50"><expr pos:start="1333:29" pos:end="1333:49"><call pos:start="1333:29" pos:end="1333:49"><name pos:start="1333:29" pos:end="1333:45">tcg_temp_free_i32</name><argument_list pos:start="1333:46" pos:end="1333:49">(<argument pos:start="1333:47" pos:end="1333:48"><expr pos:start="1333:47" pos:end="1333:48"><name pos:start="1333:47" pos:end="1333:48">al</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1335:29" pos:end="1335:50"><expr pos:start="1335:29" pos:end="1335:49"><call pos:start="1335:29" pos:end="1335:49"><name pos:start="1335:29" pos:end="1335:45">tcg_temp_free_i32</name><argument_list pos:start="1335:46" pos:end="1335:49">(<argument pos:start="1335:47" pos:end="1335:48"><expr pos:start="1335:47" pos:end="1335:48"><name pos:start="1335:47" pos:end="1335:48">ah</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1339:25" pos:end="1343:25"><if pos:start="1339:25" pos:end="1343:25">if <condition pos:start="1339:28" pos:end="1339:45">(<expr pos:start="1339:29" pos:end="1339:44"><name pos:start="1339:29" pos:end="1339:32">insn</name> <operator pos:start="1339:34" pos:end="1339:34">&amp;</operator> <operator pos:start="1339:36" pos:end="1339:36">(</operator><literal type="number" pos:start="1339:37" pos:end="1339:37">1</literal> <operator pos:start="1339:39" pos:end="1339:40">&lt;&lt;</operator> <literal type="number" pos:start="1339:42" pos:end="1339:43">20</literal><operator pos:start="1339:44" pos:end="1339:44">)</operator></expr>)</condition> <block pos:start="1339:47" pos:end="1343:25">{<block_content pos:start="1341:29" pos:end="1341:53">

                            <expr_stmt pos:start="1341:29" pos:end="1341:53"><expr pos:start="1341:29" pos:end="1341:52"><call pos:start="1341:29" pos:end="1341:52"><name pos:start="1341:29" pos:end="1341:41">gen_logicq_cc</name><argument_list pos:start="1341:42" pos:end="1341:52">(<argument pos:start="1341:43" pos:end="1341:45"><expr pos:start="1341:43" pos:end="1341:45"><name pos:start="1341:43" pos:end="1341:45">tmp</name></expr></argument>, <argument pos:start="1341:48" pos:end="1341:51"><expr pos:start="1341:48" pos:end="1341:51"><name pos:start="1341:48" pos:end="1341:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1345:25" pos:end="1345:46"><expr pos:start="1345:25" pos:end="1345:45"><call pos:start="1345:25" pos:end="1345:45"><name pos:start="1345:25" pos:end="1345:33">store_reg</name><argument_list pos:start="1345:34" pos:end="1345:45">(<argument pos:start="1345:35" pos:end="1345:35"><expr pos:start="1345:35" pos:end="1345:35"><name pos:start="1345:35" pos:end="1345:35">s</name></expr></argument>, <argument pos:start="1345:38" pos:end="1345:39"><expr pos:start="1345:38" pos:end="1345:39"><name pos:start="1345:38" pos:end="1345:39">rn</name></expr></argument>, <argument pos:start="1345:42" pos:end="1345:44"><expr pos:start="1345:42" pos:end="1345:44"><name pos:start="1345:42" pos:end="1345:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1347:25" pos:end="1347:47"><expr pos:start="1347:25" pos:end="1347:46"><call pos:start="1347:25" pos:end="1347:46"><name pos:start="1347:25" pos:end="1347:33">store_reg</name><argument_list pos:start="1347:34" pos:end="1347:46">(<argument pos:start="1347:35" pos:end="1347:35"><expr pos:start="1347:35" pos:end="1347:35"><name pos:start="1347:35" pos:end="1347:35">s</name></expr></argument>, <argument pos:start="1347:38" pos:end="1347:39"><expr pos:start="1347:38" pos:end="1347:39"><name pos:start="1347:38" pos:end="1347:39">rd</name></expr></argument>, <argument pos:start="1347:42" pos:end="1347:45"><expr pos:start="1347:42" pos:end="1347:45"><name pos:start="1347:42" pos:end="1347:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1349:25" pos:end="1349:30">break;</break>

                    <default pos:start="1351:21" pos:end="1351:28">default:</default>

                        <goto pos:start="1353:25" pos:end="1353:40">goto <name pos:start="1353:30" pos:end="1353:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="1357:19" pos:end="1613:17">else <block pos:start="1357:24" pos:end="1613:17">{<block_content pos:start="1359:21" pos:end="1611:21">

                    <expr_stmt pos:start="1359:21" pos:end="1359:44"><expr pos:start="1359:21" pos:end="1359:43"><name pos:start="1359:21" pos:end="1359:22">rn</name> <operator pos:start="1359:24" pos:end="1359:24">=</operator> <operator pos:start="1359:26" pos:end="1359:26">(</operator><name pos:start="1359:27" pos:end="1359:30">insn</name> <operator pos:start="1359:32" pos:end="1359:33">&gt;&gt;</operator> <literal type="number" pos:start="1359:35" pos:end="1359:36">16</literal><operator pos:start="1359:37" pos:end="1359:37">)</operator> <operator pos:start="1359:39" pos:end="1359:39">&amp;</operator> <literal type="number" pos:start="1359:41" pos:end="1359:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1361:21" pos:end="1361:44"><expr pos:start="1361:21" pos:end="1361:43"><name pos:start="1361:21" pos:end="1361:22">rd</name> <operator pos:start="1361:24" pos:end="1361:24">=</operator> <operator pos:start="1361:26" pos:end="1361:26">(</operator><name pos:start="1361:27" pos:end="1361:30">insn</name> <operator pos:start="1361:32" pos:end="1361:33">&gt;&gt;</operator> <literal type="number" pos:start="1361:35" pos:end="1361:36">12</literal><operator pos:start="1361:37" pos:end="1361:37">)</operator> <operator pos:start="1361:39" pos:end="1361:39">&amp;</operator> <literal type="number" pos:start="1361:41" pos:end="1361:43">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1363:21" pos:end="1611:21"><if pos:start="1363:21" pos:end="1571:21">if <condition pos:start="1363:24" pos:end="1363:41">(<expr pos:start="1363:25" pos:end="1363:40"><name pos:start="1363:25" pos:end="1363:28">insn</name> <operator pos:start="1363:30" pos:end="1363:30">&amp;</operator> <operator pos:start="1363:32" pos:end="1363:32">(</operator><literal type="number" pos:start="1363:33" pos:end="1363:33">1</literal> <operator pos:start="1363:35" pos:end="1363:36">&lt;&lt;</operator> <literal type="number" pos:start="1363:38" pos:end="1363:39">23</literal><operator pos:start="1363:40" pos:end="1363:40">)</operator></expr>)</condition> <block pos:start="1363:43" pos:end="1571:21">{<block_content pos:start="1367:25" pos:end="1569:48">

                        <comment type="block" pos:start="1365:25" pos:end="1365:50">/* load/store exclusive */</comment>

                        <decl_stmt pos:start="1367:25" pos:end="1367:50"><decl pos:start="1367:25" pos:end="1367:49"><type pos:start="1367:25" pos:end="1367:27"><name pos:start="1367:25" pos:end="1367:27">int</name></type> <name pos:start="1367:29" pos:end="1367:31">op2</name> <init pos:start="1367:33" pos:end="1367:49">= <expr pos:start="1367:35" pos:end="1367:49"><operator pos:start="1367:35" pos:end="1367:35">(</operator><name pos:start="1367:36" pos:end="1367:39">insn</name> <operator pos:start="1367:41" pos:end="1367:42">&gt;&gt;</operator> <literal type="number" pos:start="1367:44" pos:end="1367:44">8</literal><operator pos:start="1367:45" pos:end="1367:45">)</operator> <operator pos:start="1367:47" pos:end="1367:47">&amp;</operator> <literal type="number" pos:start="1367:49" pos:end="1367:49">3</literal></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1369:25" pos:end="1369:49"><expr pos:start="1369:25" pos:end="1369:48"><name pos:start="1369:25" pos:end="1369:27">op1</name> <operator pos:start="1369:29" pos:end="1369:29">=</operator> <operator pos:start="1369:31" pos:end="1369:31">(</operator><name pos:start="1369:32" pos:end="1369:35">insn</name> <operator pos:start="1369:37" pos:end="1369:38">&gt;&gt;</operator> <literal type="number" pos:start="1369:40" pos:end="1369:41">21</literal><operator pos:start="1369:42" pos:end="1369:42">)</operator> <operator pos:start="1369:44" pos:end="1369:44">&amp;</operator> <literal type="number" pos:start="1369:46" pos:end="1369:48">0x3</literal></expr>;</expr_stmt>



                        <switch pos:start="1373:25" pos:end="1411:25">switch <condition pos:start="1373:32" pos:end="1373:36">(<expr pos:start="1373:33" pos:end="1373:35"><name pos:start="1373:33" pos:end="1373:35">op2</name></expr>)</condition> <block pos:start="1373:38" pos:end="1411:25">{<block_content pos:start="1375:25" pos:end="1409:34">

                        <case pos:start="1375:25" pos:end="1375:31">case <expr pos:start="1375:30" pos:end="1375:30"><literal type="number" pos:start="1375:30" pos:end="1375:30">0</literal></expr>:</case> <comment type="block" pos:start="1375:33" pos:end="1375:45">/* lda/stl */</comment>

                            <if_stmt pos:start="1377:29" pos:end="1381:29"><if pos:start="1377:29" pos:end="1381:29">if <condition pos:start="1377:32" pos:end="1377:41">(<expr pos:start="1377:33" pos:end="1377:40"><name pos:start="1377:33" pos:end="1377:35">op1</name> <operator pos:start="1377:37" pos:end="1377:38">==</operator> <literal type="number" pos:start="1377:40" pos:end="1377:40">1</literal></expr>)</condition> <block pos:start="1377:43" pos:end="1381:29">{<block_content pos:start="1379:33" pos:end="1379:48">

                                <goto pos:start="1379:33" pos:end="1379:48">goto <name pos:start="1379:38" pos:end="1379:47">illegal_op</name>;</goto>

                            </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="1383:29" pos:end="1383:36"><expr pos:start="1383:29" pos:end="1383:35"><call pos:start="1383:29" pos:end="1383:35"><name pos:start="1383:29" pos:end="1383:32">ARCH</name><argument_list pos:start="1383:33" pos:end="1383:35">(<argument pos:start="1383:34" pos:end="1383:34"><expr pos:start="1383:34" pos:end="1383:34"><literal type="number" pos:start="1383:34" pos:end="1383:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1385:29" pos:end="1385:34">break;</break>

                        <case pos:start="1387:25" pos:end="1387:31">case <expr pos:start="1387:30" pos:end="1387:30"><literal type="number" pos:start="1387:30" pos:end="1387:30">1</literal></expr>:</case> <comment type="block" pos:start="1387:33" pos:end="1387:46">/* reserved */</comment>

                            <goto pos:start="1389:29" pos:end="1389:44">goto <name pos:start="1389:34" pos:end="1389:43">illegal_op</name>;</goto>

                        <case pos:start="1391:25" pos:end="1391:31">case <expr pos:start="1391:30" pos:end="1391:30"><literal type="number" pos:start="1391:30" pos:end="1391:30">2</literal></expr>:</case> <comment type="block" pos:start="1391:33" pos:end="1391:49">/* ldaex/stlex */</comment>

                            <expr_stmt pos:start="1393:29" pos:end="1393:36"><expr pos:start="1393:29" pos:end="1393:35"><call pos:start="1393:29" pos:end="1393:35"><name pos:start="1393:29" pos:end="1393:32">ARCH</name><argument_list pos:start="1393:33" pos:end="1393:35">(<argument pos:start="1393:34" pos:end="1393:34"><expr pos:start="1393:34" pos:end="1393:34"><literal type="number" pos:start="1393:34" pos:end="1393:34">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1395:29" pos:end="1395:34">break;</break>

                        <case pos:start="1397:25" pos:end="1397:31">case <expr pos:start="1397:30" pos:end="1397:30"><literal type="number" pos:start="1397:30" pos:end="1397:30">3</literal></expr>:</case> <comment type="block" pos:start="1397:33" pos:end="1397:49">/* ldrex/strex */</comment>

                            <if_stmt pos:start="1399:29" pos:end="1407:29"><if pos:start="1399:29" pos:end="1403:29">if <condition pos:start="1399:32" pos:end="1399:36">(<expr pos:start="1399:33" pos:end="1399:35"><name pos:start="1399:33" pos:end="1399:35">op1</name></expr>)</condition> <block pos:start="1399:38" pos:end="1403:29">{<block_content pos:start="1401:33" pos:end="1401:41">

                                <expr_stmt pos:start="1401:33" pos:end="1401:41"><expr pos:start="1401:33" pos:end="1401:40"><call pos:start="1401:33" pos:end="1401:40"><name pos:start="1401:33" pos:end="1401:36">ARCH</name><argument_list pos:start="1401:37" pos:end="1401:40">(<argument pos:start="1401:38" pos:end="1401:39"><expr pos:start="1401:38" pos:end="1401:39"><literal type="number" pos:start="1401:38" pos:end="1401:39">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1403:31" pos:end="1407:29">else <block pos:start="1403:36" pos:end="1407:29">{<block_content pos:start="1405:33" pos:end="1405:40">

                                <expr_stmt pos:start="1405:33" pos:end="1405:40"><expr pos:start="1405:33" pos:end="1405:39"><call pos:start="1405:33" pos:end="1405:39"><name pos:start="1405:33" pos:end="1405:36">ARCH</name><argument_list pos:start="1405:37" pos:end="1405:39">(<argument pos:start="1405:38" pos:end="1405:38"><expr pos:start="1405:38" pos:end="1405:38"><literal type="number" pos:start="1405:38" pos:end="1405:38">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <break pos:start="1409:29" pos:end="1409:34">break;</break>

                        </block_content>}</block></switch>



                        <expr_stmt pos:start="1415:25" pos:end="1415:56"><expr pos:start="1415:25" pos:end="1415:55"><name pos:start="1415:25" pos:end="1415:28">addr</name> <operator pos:start="1415:30" pos:end="1415:30">=</operator> <call pos:start="1415:32" pos:end="1415:55"><name pos:start="1415:32" pos:end="1415:53">tcg_temp_local_new_i32</name><argument_list pos:start="1415:54" pos:end="1415:55">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1417:25" pos:end="1417:50"><expr pos:start="1417:25" pos:end="1417:49"><call pos:start="1417:25" pos:end="1417:49"><name pos:start="1417:25" pos:end="1417:36">load_reg_var</name><argument_list pos:start="1417:37" pos:end="1417:49">(<argument pos:start="1417:38" pos:end="1417:38"><expr pos:start="1417:38" pos:end="1417:38"><name pos:start="1417:38" pos:end="1417:38">s</name></expr></argument>, <argument pos:start="1417:41" pos:end="1417:44"><expr pos:start="1417:41" pos:end="1417:44"><name pos:start="1417:41" pos:end="1417:44">addr</name></expr></argument>, <argument pos:start="1417:47" pos:end="1417:48"><expr pos:start="1417:47" pos:end="1417:48"><name pos:start="1417:47" pos:end="1417:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <comment type="block" pos:start="1421:25" pos:end="1425:38">/* Since the emulation does not have barriers,

                           the acquire/release semantics need no special

                           handling */</comment>

                        <if_stmt pos:start="1427:25" pos:end="1567:25"><if pos:start="1427:25" pos:end="1497:25">if <condition pos:start="1427:28" pos:end="1427:37">(<expr pos:start="1427:29" pos:end="1427:36"><name pos:start="1427:29" pos:end="1427:31">op2</name> <operator pos:start="1427:33" pos:end="1427:34">==</operator> <literal type="number" pos:start="1427:36" pos:end="1427:36">0</literal></expr>)</condition> <block pos:start="1427:39" pos:end="1497:25">{<block_content pos:start="1429:29" pos:end="1495:29">

                            <if_stmt pos:start="1429:29" pos:end="1495:29"><if pos:start="1429:29" pos:end="1461:29">if <condition pos:start="1429:32" pos:end="1429:49">(<expr pos:start="1429:33" pos:end="1429:48"><name pos:start="1429:33" pos:end="1429:36">insn</name> <operator pos:start="1429:38" pos:end="1429:38">&amp;</operator> <operator pos:start="1429:40" pos:end="1429:40">(</operator><literal type="number" pos:start="1429:41" pos:end="1429:41">1</literal> <operator pos:start="1429:43" pos:end="1429:44">&lt;&lt;</operator> <literal type="number" pos:start="1429:46" pos:end="1429:47">20</literal><operator pos:start="1429:48" pos:end="1429:48">)</operator></expr>)</condition> <block pos:start="1429:51" pos:end="1461:29">{<block_content pos:start="1431:33" pos:end="1459:54">

                                <expr_stmt pos:start="1431:33" pos:end="1431:57"><expr pos:start="1431:33" pos:end="1431:56"><name pos:start="1431:33" pos:end="1431:35">tmp</name> <operator pos:start="1431:37" pos:end="1431:37">=</operator> <call pos:start="1431:39" pos:end="1431:56"><name pos:start="1431:39" pos:end="1431:54">tcg_temp_new_i32</name><argument_list pos:start="1431:55" pos:end="1431:56">()</argument_list></call></expr>;</expr_stmt>

                                <switch pos:start="1433:33" pos:end="1457:33">switch <condition pos:start="1433:40" pos:end="1433:44">(<expr pos:start="1433:41" pos:end="1433:43"><name pos:start="1433:41" pos:end="1433:43">op1</name></expr>)</condition> <block pos:start="1433:46" pos:end="1457:33">{<block_content pos:start="1435:33" pos:end="1455:44">

                                <case pos:start="1435:33" pos:end="1435:39">case <expr pos:start="1435:38" pos:end="1435:38"><literal type="number" pos:start="1435:38" pos:end="1435:38">0</literal></expr>:</case> <comment type="block" pos:start="1435:41" pos:end="1435:49">/* lda */</comment>

                                    <expr_stmt pos:start="1437:37" pos:end="1437:74"><expr pos:start="1437:37" pos:end="1437:73"><call pos:start="1437:37" pos:end="1437:73"><name pos:start="1437:37" pos:end="1437:50">gen_aa32_ld32u</name><argument_list pos:start="1437:51" pos:end="1437:73">(<argument pos:start="1437:52" pos:end="1437:54"><expr pos:start="1437:52" pos:end="1437:54"><name pos:start="1437:52" pos:end="1437:54">tmp</name></expr></argument>, <argument pos:start="1437:57" pos:end="1437:60"><expr pos:start="1437:57" pos:end="1437:60"><name pos:start="1437:57" pos:end="1437:60">addr</name></expr></argument>, <argument pos:start="1437:63" pos:end="1437:72"><expr pos:start="1437:63" pos:end="1437:72"><call pos:start="1437:63" pos:end="1437:72"><name pos:start="1437:63" pos:end="1437:69">IS_USER</name><argument_list pos:start="1437:70" pos:end="1437:72">(<argument pos:start="1437:71" pos:end="1437:71"><expr pos:start="1437:71" pos:end="1437:71"><name pos:start="1437:71" pos:end="1437:71">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1439:37" pos:end="1439:42">break;</break>

                                <case pos:start="1441:33" pos:end="1441:39">case <expr pos:start="1441:38" pos:end="1441:38"><literal type="number" pos:start="1441:38" pos:end="1441:38">2</literal></expr>:</case> <comment type="block" pos:start="1441:41" pos:end="1441:50">/* ldab */</comment>

                                    <expr_stmt pos:start="1443:37" pos:end="1443:73"><expr pos:start="1443:37" pos:end="1443:72"><call pos:start="1443:37" pos:end="1443:72"><name pos:start="1443:37" pos:end="1443:49">gen_aa32_ld8u</name><argument_list pos:start="1443:50" pos:end="1443:72">(<argument pos:start="1443:51" pos:end="1443:53"><expr pos:start="1443:51" pos:end="1443:53"><name pos:start="1443:51" pos:end="1443:53">tmp</name></expr></argument>, <argument pos:start="1443:56" pos:end="1443:59"><expr pos:start="1443:56" pos:end="1443:59"><name pos:start="1443:56" pos:end="1443:59">addr</name></expr></argument>, <argument pos:start="1443:62" pos:end="1443:71"><expr pos:start="1443:62" pos:end="1443:71"><call pos:start="1443:62" pos:end="1443:71"><name pos:start="1443:62" pos:end="1443:68">IS_USER</name><argument_list pos:start="1443:69" pos:end="1443:71">(<argument pos:start="1443:70" pos:end="1443:70"><expr pos:start="1443:70" pos:end="1443:70"><name pos:start="1443:70" pos:end="1443:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1445:37" pos:end="1445:42">break;</break>

                                <case pos:start="1447:33" pos:end="1447:39">case <expr pos:start="1447:38" pos:end="1447:38"><literal type="number" pos:start="1447:38" pos:end="1447:38">3</literal></expr>:</case> <comment type="block" pos:start="1447:41" pos:end="1447:50">/* ldah */</comment>

                                    <expr_stmt pos:start="1449:37" pos:end="1449:74"><expr pos:start="1449:37" pos:end="1449:73"><call pos:start="1449:37" pos:end="1449:73"><name pos:start="1449:37" pos:end="1449:50">gen_aa32_ld16u</name><argument_list pos:start="1449:51" pos:end="1449:73">(<argument pos:start="1449:52" pos:end="1449:54"><expr pos:start="1449:52" pos:end="1449:54"><name pos:start="1449:52" pos:end="1449:54">tmp</name></expr></argument>, <argument pos:start="1449:57" pos:end="1449:60"><expr pos:start="1449:57" pos:end="1449:60"><name pos:start="1449:57" pos:end="1449:60">addr</name></expr></argument>, <argument pos:start="1449:63" pos:end="1449:72"><expr pos:start="1449:63" pos:end="1449:72"><call pos:start="1449:63" pos:end="1449:72"><name pos:start="1449:63" pos:end="1449:69">IS_USER</name><argument_list pos:start="1449:70" pos:end="1449:72">(<argument pos:start="1449:71" pos:end="1449:71"><expr pos:start="1449:71" pos:end="1449:71"><name pos:start="1449:71" pos:end="1449:71">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1451:37" pos:end="1451:42">break;</break>

                                <default pos:start="1453:33" pos:end="1453:40">default:</default>

                                    <expr_stmt pos:start="1455:37" pos:end="1455:44"><expr pos:start="1455:37" pos:end="1455:43"><call pos:start="1455:37" pos:end="1455:43"><name pos:start="1455:37" pos:end="1455:41">abort</name><argument_list pos:start="1455:42" pos:end="1455:43">()</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></switch>

                                <expr_stmt pos:start="1459:33" pos:end="1459:54"><expr pos:start="1459:33" pos:end="1459:53"><call pos:start="1459:33" pos:end="1459:53"><name pos:start="1459:33" pos:end="1459:41">store_reg</name><argument_list pos:start="1459:42" pos:end="1459:53">(<argument pos:start="1459:43" pos:end="1459:43"><expr pos:start="1459:43" pos:end="1459:43"><name pos:start="1459:43" pos:end="1459:43">s</name></expr></argument>, <argument pos:start="1459:46" pos:end="1459:47"><expr pos:start="1459:46" pos:end="1459:47"><name pos:start="1459:46" pos:end="1459:47">rd</name></expr></argument>, <argument pos:start="1459:50" pos:end="1459:52"><expr pos:start="1459:50" pos:end="1459:52"><name pos:start="1459:50" pos:end="1459:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1461:31" pos:end="1495:29">else <block pos:start="1461:36" pos:end="1495:29">{<block_content pos:start="1463:33" pos:end="1493:55">

                                <expr_stmt pos:start="1463:33" pos:end="1463:48"><expr pos:start="1463:33" pos:end="1463:47"><name pos:start="1463:33" pos:end="1463:34">rm</name> <operator pos:start="1463:36" pos:end="1463:36">=</operator> <name pos:start="1463:38" pos:end="1463:41">insn</name> <operator pos:start="1463:43" pos:end="1463:43">&amp;</operator> <literal type="number" pos:start="1463:45" pos:end="1463:47">0xf</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="1465:33" pos:end="1465:54"><expr pos:start="1465:33" pos:end="1465:53"><name pos:start="1465:33" pos:end="1465:35">tmp</name> <operator pos:start="1465:37" pos:end="1465:37">=</operator> <call pos:start="1465:39" pos:end="1465:53"><name pos:start="1465:39" pos:end="1465:46">load_reg</name><argument_list pos:start="1465:47" pos:end="1465:53">(<argument pos:start="1465:48" pos:end="1465:48"><expr pos:start="1465:48" pos:end="1465:48"><name pos:start="1465:48" pos:end="1465:48">s</name></expr></argument>, <argument pos:start="1465:51" pos:end="1465:52"><expr pos:start="1465:51" pos:end="1465:52"><name pos:start="1465:51" pos:end="1465:52">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <switch pos:start="1467:33" pos:end="1491:33">switch <condition pos:start="1467:40" pos:end="1467:44">(<expr pos:start="1467:41" pos:end="1467:43"><name pos:start="1467:41" pos:end="1467:43">op1</name></expr>)</condition> <block pos:start="1467:46" pos:end="1491:33">{<block_content pos:start="1469:33" pos:end="1489:44">

                                <case pos:start="1469:33" pos:end="1469:39">case <expr pos:start="1469:38" pos:end="1469:38"><literal type="number" pos:start="1469:38" pos:end="1469:38">0</literal></expr>:</case> <comment type="block" pos:start="1469:41" pos:end="1469:49">/* stl */</comment>

                                    <expr_stmt pos:start="1471:37" pos:end="1471:73"><expr pos:start="1471:37" pos:end="1471:72"><call pos:start="1471:37" pos:end="1471:72"><name pos:start="1471:37" pos:end="1471:49">gen_aa32_st32</name><argument_list pos:start="1471:50" pos:end="1471:72">(<argument pos:start="1471:51" pos:end="1471:53"><expr pos:start="1471:51" pos:end="1471:53"><name pos:start="1471:51" pos:end="1471:53">tmp</name></expr></argument>, <argument pos:start="1471:56" pos:end="1471:59"><expr pos:start="1471:56" pos:end="1471:59"><name pos:start="1471:56" pos:end="1471:59">addr</name></expr></argument>, <argument pos:start="1471:62" pos:end="1471:71"><expr pos:start="1471:62" pos:end="1471:71"><call pos:start="1471:62" pos:end="1471:71"><name pos:start="1471:62" pos:end="1471:68">IS_USER</name><argument_list pos:start="1471:69" pos:end="1471:71">(<argument pos:start="1471:70" pos:end="1471:70"><expr pos:start="1471:70" pos:end="1471:70"><name pos:start="1471:70" pos:end="1471:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1473:37" pos:end="1473:42">break;</break>

                                <case pos:start="1475:33" pos:end="1475:39">case <expr pos:start="1475:38" pos:end="1475:38"><literal type="number" pos:start="1475:38" pos:end="1475:38">2</literal></expr>:</case> <comment type="block" pos:start="1475:41" pos:end="1475:50">/* stlb */</comment>

                                    <expr_stmt pos:start="1477:37" pos:end="1477:72"><expr pos:start="1477:37" pos:end="1477:71"><call pos:start="1477:37" pos:end="1477:71"><name pos:start="1477:37" pos:end="1477:48">gen_aa32_st8</name><argument_list pos:start="1477:49" pos:end="1477:71">(<argument pos:start="1477:50" pos:end="1477:52"><expr pos:start="1477:50" pos:end="1477:52"><name pos:start="1477:50" pos:end="1477:52">tmp</name></expr></argument>, <argument pos:start="1477:55" pos:end="1477:58"><expr pos:start="1477:55" pos:end="1477:58"><name pos:start="1477:55" pos:end="1477:58">addr</name></expr></argument>, <argument pos:start="1477:61" pos:end="1477:70"><expr pos:start="1477:61" pos:end="1477:70"><call pos:start="1477:61" pos:end="1477:70"><name pos:start="1477:61" pos:end="1477:67">IS_USER</name><argument_list pos:start="1477:68" pos:end="1477:70">(<argument pos:start="1477:69" pos:end="1477:69"><expr pos:start="1477:69" pos:end="1477:69"><name pos:start="1477:69" pos:end="1477:69">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1479:37" pos:end="1479:42">break;</break>

                                <case pos:start="1481:33" pos:end="1481:39">case <expr pos:start="1481:38" pos:end="1481:38"><literal type="number" pos:start="1481:38" pos:end="1481:38">3</literal></expr>:</case> <comment type="block" pos:start="1481:41" pos:end="1481:50">/* stlh */</comment>

                                    <expr_stmt pos:start="1483:37" pos:end="1483:73"><expr pos:start="1483:37" pos:end="1483:72"><call pos:start="1483:37" pos:end="1483:72"><name pos:start="1483:37" pos:end="1483:49">gen_aa32_st16</name><argument_list pos:start="1483:50" pos:end="1483:72">(<argument pos:start="1483:51" pos:end="1483:53"><expr pos:start="1483:51" pos:end="1483:53"><name pos:start="1483:51" pos:end="1483:53">tmp</name></expr></argument>, <argument pos:start="1483:56" pos:end="1483:59"><expr pos:start="1483:56" pos:end="1483:59"><name pos:start="1483:56" pos:end="1483:59">addr</name></expr></argument>, <argument pos:start="1483:62" pos:end="1483:71"><expr pos:start="1483:62" pos:end="1483:71"><call pos:start="1483:62" pos:end="1483:71"><name pos:start="1483:62" pos:end="1483:68">IS_USER</name><argument_list pos:start="1483:69" pos:end="1483:71">(<argument pos:start="1483:70" pos:end="1483:70"><expr pos:start="1483:70" pos:end="1483:70"><name pos:start="1483:70" pos:end="1483:70">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                    <break pos:start="1485:37" pos:end="1485:42">break;</break>

                                <default pos:start="1487:33" pos:end="1487:40">default:</default>

                                    <expr_stmt pos:start="1489:37" pos:end="1489:44"><expr pos:start="1489:37" pos:end="1489:43"><call pos:start="1489:37" pos:end="1489:43"><name pos:start="1489:37" pos:end="1489:41">abort</name><argument_list pos:start="1489:42" pos:end="1489:43">()</argument_list></call></expr>;</expr_stmt>

                                </block_content>}</block></switch>

                                <expr_stmt pos:start="1493:33" pos:end="1493:55"><expr pos:start="1493:33" pos:end="1493:54"><call pos:start="1493:33" pos:end="1493:54"><name pos:start="1493:33" pos:end="1493:49">tcg_temp_free_i32</name><argument_list pos:start="1493:50" pos:end="1493:54">(<argument pos:start="1493:51" pos:end="1493:53"><expr pos:start="1493:51" pos:end="1493:53"><name pos:start="1493:51" pos:end="1493:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1497:27" pos:end="1531:25">else if <condition pos:start="1497:35" pos:end="1497:52">(<expr pos:start="1497:36" pos:end="1497:51"><name pos:start="1497:36" pos:end="1497:39">insn</name> <operator pos:start="1497:41" pos:end="1497:41">&amp;</operator> <operator pos:start="1497:43" pos:end="1497:43">(</operator><literal type="number" pos:start="1497:44" pos:end="1497:44">1</literal> <operator pos:start="1497:46" pos:end="1497:47">&lt;&lt;</operator> <literal type="number" pos:start="1497:49" pos:end="1497:50">20</literal><operator pos:start="1497:51" pos:end="1497:51">)</operator></expr>)</condition> <block pos:start="1497:54" pos:end="1531:25">{<block_content pos:start="1499:29" pos:end="1529:29">

                            <switch pos:start="1499:29" pos:end="1529:29">switch <condition pos:start="1499:36" pos:end="1499:40">(<expr pos:start="1499:37" pos:end="1499:39"><name pos:start="1499:37" pos:end="1499:39">op1</name></expr>)</condition> <block pos:start="1499:42" pos:end="1529:29">{<block_content pos:start="1501:29" pos:end="1527:40">

                            <case pos:start="1501:29" pos:end="1501:35">case <expr pos:start="1501:34" pos:end="1501:34"><literal type="number" pos:start="1501:34" pos:end="1501:34">0</literal></expr>:</case> <comment type="block" pos:start="1501:37" pos:end="1501:47">/* ldrex */</comment>

                                <expr_stmt pos:start="1503:33" pos:end="1503:71"><expr pos:start="1503:33" pos:end="1503:70"><call pos:start="1503:33" pos:end="1503:70"><name pos:start="1503:33" pos:end="1503:50">gen_load_exclusive</name><argument_list pos:start="1503:51" pos:end="1503:70">(<argument pos:start="1503:52" pos:end="1503:52"><expr pos:start="1503:52" pos:end="1503:52"><name pos:start="1503:52" pos:end="1503:52">s</name></expr></argument>, <argument pos:start="1503:55" pos:end="1503:56"><expr pos:start="1503:55" pos:end="1503:56"><name pos:start="1503:55" pos:end="1503:56">rd</name></expr></argument>, <argument pos:start="1503:59" pos:end="1503:60"><expr pos:start="1503:59" pos:end="1503:60"><literal type="number" pos:start="1503:59" pos:end="1503:60">15</literal></expr></argument>, <argument pos:start="1503:63" pos:end="1503:66"><expr pos:start="1503:63" pos:end="1503:66"><name pos:start="1503:63" pos:end="1503:66">addr</name></expr></argument>, <argument pos:start="1503:69" pos:end="1503:69"><expr pos:start="1503:69" pos:end="1503:69"><literal type="number" pos:start="1503:69" pos:end="1503:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1505:33" pos:end="1505:38">break;</break>

                            <case pos:start="1507:29" pos:end="1507:35">case <expr pos:start="1507:34" pos:end="1507:34"><literal type="number" pos:start="1507:34" pos:end="1507:34">1</literal></expr>:</case> <comment type="block" pos:start="1507:37" pos:end="1507:48">/* ldrexd */</comment>

                                <expr_stmt pos:start="1509:33" pos:end="1509:75"><expr pos:start="1509:33" pos:end="1509:74"><call pos:start="1509:33" pos:end="1509:74"><name pos:start="1509:33" pos:end="1509:50">gen_load_exclusive</name><argument_list pos:start="1509:51" pos:end="1509:74">(<argument pos:start="1509:52" pos:end="1509:52"><expr pos:start="1509:52" pos:end="1509:52"><name pos:start="1509:52" pos:end="1509:52">s</name></expr></argument>, <argument pos:start="1509:55" pos:end="1509:56"><expr pos:start="1509:55" pos:end="1509:56"><name pos:start="1509:55" pos:end="1509:56">rd</name></expr></argument>, <argument pos:start="1509:59" pos:end="1509:64"><expr pos:start="1509:59" pos:end="1509:64"><name pos:start="1509:59" pos:end="1509:60">rd</name> <operator pos:start="1509:62" pos:end="1509:62">+</operator> <literal type="number" pos:start="1509:64" pos:end="1509:64">1</literal></expr></argument>, <argument pos:start="1509:67" pos:end="1509:70"><expr pos:start="1509:67" pos:end="1509:70"><name pos:start="1509:67" pos:end="1509:70">addr</name></expr></argument>, <argument pos:start="1509:73" pos:end="1509:73"><expr pos:start="1509:73" pos:end="1509:73"><literal type="number" pos:start="1509:73" pos:end="1509:73">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1511:33" pos:end="1511:38">break;</break>

                            <case pos:start="1513:29" pos:end="1513:35">case <expr pos:start="1513:34" pos:end="1513:34"><literal type="number" pos:start="1513:34" pos:end="1513:34">2</literal></expr>:</case> <comment type="block" pos:start="1513:37" pos:end="1513:48">/* ldrexb */</comment>

                                <expr_stmt pos:start="1515:33" pos:end="1515:71"><expr pos:start="1515:33" pos:end="1515:70"><call pos:start="1515:33" pos:end="1515:70"><name pos:start="1515:33" pos:end="1515:50">gen_load_exclusive</name><argument_list pos:start="1515:51" pos:end="1515:70">(<argument pos:start="1515:52" pos:end="1515:52"><expr pos:start="1515:52" pos:end="1515:52"><name pos:start="1515:52" pos:end="1515:52">s</name></expr></argument>, <argument pos:start="1515:55" pos:end="1515:56"><expr pos:start="1515:55" pos:end="1515:56"><name pos:start="1515:55" pos:end="1515:56">rd</name></expr></argument>, <argument pos:start="1515:59" pos:end="1515:60"><expr pos:start="1515:59" pos:end="1515:60"><literal type="number" pos:start="1515:59" pos:end="1515:60">15</literal></expr></argument>, <argument pos:start="1515:63" pos:end="1515:66"><expr pos:start="1515:63" pos:end="1515:66"><name pos:start="1515:63" pos:end="1515:66">addr</name></expr></argument>, <argument pos:start="1515:69" pos:end="1515:69"><expr pos:start="1515:69" pos:end="1515:69"><literal type="number" pos:start="1515:69" pos:end="1515:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1517:33" pos:end="1517:38">break;</break>

                            <case pos:start="1519:29" pos:end="1519:35">case <expr pos:start="1519:34" pos:end="1519:34"><literal type="number" pos:start="1519:34" pos:end="1519:34">3</literal></expr>:</case> <comment type="block" pos:start="1519:37" pos:end="1519:48">/* ldrexh */</comment>

                                <expr_stmt pos:start="1521:33" pos:end="1521:71"><expr pos:start="1521:33" pos:end="1521:70"><call pos:start="1521:33" pos:end="1521:70"><name pos:start="1521:33" pos:end="1521:50">gen_load_exclusive</name><argument_list pos:start="1521:51" pos:end="1521:70">(<argument pos:start="1521:52" pos:end="1521:52"><expr pos:start="1521:52" pos:end="1521:52"><name pos:start="1521:52" pos:end="1521:52">s</name></expr></argument>, <argument pos:start="1521:55" pos:end="1521:56"><expr pos:start="1521:55" pos:end="1521:56"><name pos:start="1521:55" pos:end="1521:56">rd</name></expr></argument>, <argument pos:start="1521:59" pos:end="1521:60"><expr pos:start="1521:59" pos:end="1521:60"><literal type="number" pos:start="1521:59" pos:end="1521:60">15</literal></expr></argument>, <argument pos:start="1521:63" pos:end="1521:66"><expr pos:start="1521:63" pos:end="1521:66"><name pos:start="1521:63" pos:end="1521:66">addr</name></expr></argument>, <argument pos:start="1521:69" pos:end="1521:69"><expr pos:start="1521:69" pos:end="1521:69"><literal type="number" pos:start="1521:69" pos:end="1521:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1523:33" pos:end="1523:38">break;</break>

                            <default pos:start="1525:29" pos:end="1525:36">default:</default>

                                <expr_stmt pos:start="1527:33" pos:end="1527:40"><expr pos:start="1527:33" pos:end="1527:39"><call pos:start="1527:33" pos:end="1527:39"><name pos:start="1527:33" pos:end="1527:37">abort</name><argument_list pos:start="1527:38" pos:end="1527:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></if> <else pos:start="1531:27" pos:end="1567:25">else <block pos:start="1531:32" pos:end="1567:25">{<block_content pos:start="1533:29" pos:end="1565:29">

                            <expr_stmt pos:start="1533:29" pos:end="1533:44"><expr pos:start="1533:29" pos:end="1533:43"><name pos:start="1533:29" pos:end="1533:30">rm</name> <operator pos:start="1533:32" pos:end="1533:32">=</operator> <name pos:start="1533:34" pos:end="1533:37">insn</name> <operator pos:start="1533:39" pos:end="1533:39">&amp;</operator> <literal type="number" pos:start="1533:41" pos:end="1533:43">0xf</literal></expr>;</expr_stmt>

                            <switch pos:start="1535:29" pos:end="1565:29">switch <condition pos:start="1535:36" pos:end="1535:40">(<expr pos:start="1535:37" pos:end="1535:39"><name pos:start="1535:37" pos:end="1535:39">op1</name></expr>)</condition> <block pos:start="1535:42" pos:end="1565:29">{<block_content pos:start="1537:29" pos:end="1563:40">

                            <case pos:start="1537:29" pos:end="1537:35">case <expr pos:start="1537:34" pos:end="1537:34"><literal type="number" pos:start="1537:34" pos:end="1537:34">0</literal></expr>:</case>  <comment type="block" pos:start="1537:38" pos:end="1537:49">/*  strex */</comment>

                                <expr_stmt pos:start="1539:33" pos:end="1539:76"><expr pos:start="1539:33" pos:end="1539:75"><call pos:start="1539:33" pos:end="1539:75"><name pos:start="1539:33" pos:end="1539:51">gen_store_exclusive</name><argument_list pos:start="1539:52" pos:end="1539:75">(<argument pos:start="1539:53" pos:end="1539:53"><expr pos:start="1539:53" pos:end="1539:53"><name pos:start="1539:53" pos:end="1539:53">s</name></expr></argument>, <argument pos:start="1539:56" pos:end="1539:57"><expr pos:start="1539:56" pos:end="1539:57"><name pos:start="1539:56" pos:end="1539:57">rd</name></expr></argument>, <argument pos:start="1539:60" pos:end="1539:61"><expr pos:start="1539:60" pos:end="1539:61"><name pos:start="1539:60" pos:end="1539:61">rm</name></expr></argument>, <argument pos:start="1539:64" pos:end="1539:65"><expr pos:start="1539:64" pos:end="1539:65"><literal type="number" pos:start="1539:64" pos:end="1539:65">15</literal></expr></argument>, <argument pos:start="1539:68" pos:end="1539:71"><expr pos:start="1539:68" pos:end="1539:71"><name pos:start="1539:68" pos:end="1539:71">addr</name></expr></argument>, <argument pos:start="1539:74" pos:end="1539:74"><expr pos:start="1539:74" pos:end="1539:74"><literal type="number" pos:start="1539:74" pos:end="1539:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1541:33" pos:end="1541:38">break;</break>

                            <case pos:start="1543:29" pos:end="1543:35">case <expr pos:start="1543:34" pos:end="1543:34"><literal type="number" pos:start="1543:34" pos:end="1543:34">1</literal></expr>:</case> <comment type="block" pos:start="1543:37" pos:end="1543:49">/*  strexd */</comment>

                                <expr_stmt pos:start="1545:33" pos:end="1545:80"><expr pos:start="1545:33" pos:end="1545:79"><call pos:start="1545:33" pos:end="1545:79"><name pos:start="1545:33" pos:end="1545:51">gen_store_exclusive</name><argument_list pos:start="1545:52" pos:end="1545:79">(<argument pos:start="1545:53" pos:end="1545:53"><expr pos:start="1545:53" pos:end="1545:53"><name pos:start="1545:53" pos:end="1545:53">s</name></expr></argument>, <argument pos:start="1545:56" pos:end="1545:57"><expr pos:start="1545:56" pos:end="1545:57"><name pos:start="1545:56" pos:end="1545:57">rd</name></expr></argument>, <argument pos:start="1545:60" pos:end="1545:61"><expr pos:start="1545:60" pos:end="1545:61"><name pos:start="1545:60" pos:end="1545:61">rm</name></expr></argument>, <argument pos:start="1545:64" pos:end="1545:69"><expr pos:start="1545:64" pos:end="1545:69"><name pos:start="1545:64" pos:end="1545:65">rm</name> <operator pos:start="1545:67" pos:end="1545:67">+</operator> <literal type="number" pos:start="1545:69" pos:end="1545:69">1</literal></expr></argument>, <argument pos:start="1545:72" pos:end="1545:75"><expr pos:start="1545:72" pos:end="1545:75"><name pos:start="1545:72" pos:end="1545:75">addr</name></expr></argument>, <argument pos:start="1545:78" pos:end="1545:78"><expr pos:start="1545:78" pos:end="1545:78"><literal type="number" pos:start="1545:78" pos:end="1545:78">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1547:33" pos:end="1547:38">break;</break>

                            <case pos:start="1549:29" pos:end="1549:35">case <expr pos:start="1549:34" pos:end="1549:34"><literal type="number" pos:start="1549:34" pos:end="1549:34">2</literal></expr>:</case> <comment type="block" pos:start="1549:37" pos:end="1549:49">/*  strexb */</comment>

                                <expr_stmt pos:start="1551:33" pos:end="1551:76"><expr pos:start="1551:33" pos:end="1551:75"><call pos:start="1551:33" pos:end="1551:75"><name pos:start="1551:33" pos:end="1551:51">gen_store_exclusive</name><argument_list pos:start="1551:52" pos:end="1551:75">(<argument pos:start="1551:53" pos:end="1551:53"><expr pos:start="1551:53" pos:end="1551:53"><name pos:start="1551:53" pos:end="1551:53">s</name></expr></argument>, <argument pos:start="1551:56" pos:end="1551:57"><expr pos:start="1551:56" pos:end="1551:57"><name pos:start="1551:56" pos:end="1551:57">rd</name></expr></argument>, <argument pos:start="1551:60" pos:end="1551:61"><expr pos:start="1551:60" pos:end="1551:61"><name pos:start="1551:60" pos:end="1551:61">rm</name></expr></argument>, <argument pos:start="1551:64" pos:end="1551:65"><expr pos:start="1551:64" pos:end="1551:65"><literal type="number" pos:start="1551:64" pos:end="1551:65">15</literal></expr></argument>, <argument pos:start="1551:68" pos:end="1551:71"><expr pos:start="1551:68" pos:end="1551:71"><name pos:start="1551:68" pos:end="1551:71">addr</name></expr></argument>, <argument pos:start="1551:74" pos:end="1551:74"><expr pos:start="1551:74" pos:end="1551:74"><literal type="number" pos:start="1551:74" pos:end="1551:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1553:33" pos:end="1553:38">break;</break>

                            <case pos:start="1555:29" pos:end="1555:35">case <expr pos:start="1555:34" pos:end="1555:34"><literal type="number" pos:start="1555:34" pos:end="1555:34">3</literal></expr>:</case> <comment type="block" pos:start="1555:37" pos:end="1555:48">/* strexh */</comment>

                                <expr_stmt pos:start="1557:33" pos:end="1557:76"><expr pos:start="1557:33" pos:end="1557:75"><call pos:start="1557:33" pos:end="1557:75"><name pos:start="1557:33" pos:end="1557:51">gen_store_exclusive</name><argument_list pos:start="1557:52" pos:end="1557:75">(<argument pos:start="1557:53" pos:end="1557:53"><expr pos:start="1557:53" pos:end="1557:53"><name pos:start="1557:53" pos:end="1557:53">s</name></expr></argument>, <argument pos:start="1557:56" pos:end="1557:57"><expr pos:start="1557:56" pos:end="1557:57"><name pos:start="1557:56" pos:end="1557:57">rd</name></expr></argument>, <argument pos:start="1557:60" pos:end="1557:61"><expr pos:start="1557:60" pos:end="1557:61"><name pos:start="1557:60" pos:end="1557:61">rm</name></expr></argument>, <argument pos:start="1557:64" pos:end="1557:65"><expr pos:start="1557:64" pos:end="1557:65"><literal type="number" pos:start="1557:64" pos:end="1557:65">15</literal></expr></argument>, <argument pos:start="1557:68" pos:end="1557:71"><expr pos:start="1557:68" pos:end="1557:71"><name pos:start="1557:68" pos:end="1557:71">addr</name></expr></argument>, <argument pos:start="1557:74" pos:end="1557:74"><expr pos:start="1557:74" pos:end="1557:74"><literal type="number" pos:start="1557:74" pos:end="1557:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1559:33" pos:end="1559:38">break;</break>

                            <default pos:start="1561:29" pos:end="1561:36">default:</default>

                                <expr_stmt pos:start="1563:33" pos:end="1563:40"><expr pos:start="1563:33" pos:end="1563:39"><call pos:start="1563:33" pos:end="1563:39"><name pos:start="1563:33" pos:end="1563:37">abort</name><argument_list pos:start="1563:38" pos:end="1563:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1569:25" pos:end="1569:48"><expr pos:start="1569:25" pos:end="1569:47"><call pos:start="1569:25" pos:end="1569:47"><name pos:start="1569:25" pos:end="1569:41">tcg_temp_free_i32</name><argument_list pos:start="1569:42" pos:end="1569:47">(<argument pos:start="1569:43" pos:end="1569:46"><expr pos:start="1569:43" pos:end="1569:46"><name pos:start="1569:43" pos:end="1569:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1571:23" pos:end="1611:21">else <block pos:start="1571:28" pos:end="1611:21">{<block_content pos:start="1575:25" pos:end="1609:47">

                        <comment type="block" pos:start="1573:25" pos:end="1573:45">/* SWP instruction */</comment>

                        <expr_stmt pos:start="1575:25" pos:end="1575:42"><expr pos:start="1575:25" pos:end="1575:41"><name pos:start="1575:25" pos:end="1575:26">rm</name> <operator pos:start="1575:28" pos:end="1575:28">=</operator> <operator pos:start="1575:30" pos:end="1575:30">(</operator><name pos:start="1575:31" pos:end="1575:34">insn</name><operator pos:start="1575:35" pos:end="1575:35">)</operator> <operator pos:start="1575:37" pos:end="1575:37">&amp;</operator> <literal type="number" pos:start="1575:39" pos:end="1575:41">0xf</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="1579:25" pos:end="1583:52">/* ??? This is not really atomic.  However we know

                           we never have multiple CPUs running in parallel,

                           so it is good enough.  */</comment>

                        <expr_stmt pos:start="1585:25" pos:end="1585:47"><expr pos:start="1585:25" pos:end="1585:46"><name pos:start="1585:25" pos:end="1585:28">addr</name> <operator pos:start="1585:30" pos:end="1585:30">=</operator> <call pos:start="1585:32" pos:end="1585:46"><name pos:start="1585:32" pos:end="1585:39">load_reg</name><argument_list pos:start="1585:40" pos:end="1585:46">(<argument pos:start="1585:41" pos:end="1585:41"><expr pos:start="1585:41" pos:end="1585:41"><name pos:start="1585:41" pos:end="1585:41">s</name></expr></argument>, <argument pos:start="1585:44" pos:end="1585:45"><expr pos:start="1585:44" pos:end="1585:45"><name pos:start="1585:44" pos:end="1585:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1587:25" pos:end="1587:46"><expr pos:start="1587:25" pos:end="1587:45"><name pos:start="1587:25" pos:end="1587:27">tmp</name> <operator pos:start="1587:29" pos:end="1587:29">=</operator> <call pos:start="1587:31" pos:end="1587:45"><name pos:start="1587:31" pos:end="1587:38">load_reg</name><argument_list pos:start="1587:39" pos:end="1587:45">(<argument pos:start="1587:40" pos:end="1587:40"><expr pos:start="1587:40" pos:end="1587:40"><name pos:start="1587:40" pos:end="1587:40">s</name></expr></argument>, <argument pos:start="1587:43" pos:end="1587:44"><expr pos:start="1587:43" pos:end="1587:44"><name pos:start="1587:43" pos:end="1587:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1589:25" pos:end="1589:50"><expr pos:start="1589:25" pos:end="1589:49"><name pos:start="1589:25" pos:end="1589:28">tmp2</name> <operator pos:start="1589:30" pos:end="1589:30">=</operator> <call pos:start="1589:32" pos:end="1589:49"><name pos:start="1589:32" pos:end="1589:47">tcg_temp_new_i32</name><argument_list pos:start="1589:48" pos:end="1589:49">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1591:25" pos:end="1603:25"><if pos:start="1591:25" pos:end="1597:25">if <condition pos:start="1591:28" pos:end="1591:45">(<expr pos:start="1591:29" pos:end="1591:44"><name pos:start="1591:29" pos:end="1591:32">insn</name> <operator pos:start="1591:34" pos:end="1591:34">&amp;</operator> <operator pos:start="1591:36" pos:end="1591:36">(</operator><literal type="number" pos:start="1591:37" pos:end="1591:37">1</literal> <operator pos:start="1591:39" pos:end="1591:40">&lt;&lt;</operator> <literal type="number" pos:start="1591:42" pos:end="1591:43">22</literal><operator pos:start="1591:44" pos:end="1591:44">)</operator></expr>)</condition> <block pos:start="1591:47" pos:end="1597:25">{<block_content pos:start="1593:29" pos:end="1595:64">

                            <expr_stmt pos:start="1593:29" pos:end="1593:66"><expr pos:start="1593:29" pos:end="1593:65"><call pos:start="1593:29" pos:end="1593:65"><name pos:start="1593:29" pos:end="1593:41">gen_aa32_ld8u</name><argument_list pos:start="1593:42" pos:end="1593:65">(<argument pos:start="1593:43" pos:end="1593:46"><expr pos:start="1593:43" pos:end="1593:46"><name pos:start="1593:43" pos:end="1593:46">tmp2</name></expr></argument>, <argument pos:start="1593:49" pos:end="1593:52"><expr pos:start="1593:49" pos:end="1593:52"><name pos:start="1593:49" pos:end="1593:52">addr</name></expr></argument>, <argument pos:start="1593:55" pos:end="1593:64"><expr pos:start="1593:55" pos:end="1593:64"><call pos:start="1593:55" pos:end="1593:64"><name pos:start="1593:55" pos:end="1593:61">IS_USER</name><argument_list pos:start="1593:62" pos:end="1593:64">(<argument pos:start="1593:63" pos:end="1593:63"><expr pos:start="1593:63" pos:end="1593:63"><name pos:start="1593:63" pos:end="1593:63">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1595:29" pos:end="1595:64"><expr pos:start="1595:29" pos:end="1595:63"><call pos:start="1595:29" pos:end="1595:63"><name pos:start="1595:29" pos:end="1595:40">gen_aa32_st8</name><argument_list pos:start="1595:41" pos:end="1595:63">(<argument pos:start="1595:42" pos:end="1595:44"><expr pos:start="1595:42" pos:end="1595:44"><name pos:start="1595:42" pos:end="1595:44">tmp</name></expr></argument>, <argument pos:start="1595:47" pos:end="1595:50"><expr pos:start="1595:47" pos:end="1595:50"><name pos:start="1595:47" pos:end="1595:50">addr</name></expr></argument>, <argument pos:start="1595:53" pos:end="1595:62"><expr pos:start="1595:53" pos:end="1595:62"><call pos:start="1595:53" pos:end="1595:62"><name pos:start="1595:53" pos:end="1595:59">IS_USER</name><argument_list pos:start="1595:60" pos:end="1595:62">(<argument pos:start="1595:61" pos:end="1595:61"><expr pos:start="1595:61" pos:end="1595:61"><name pos:start="1595:61" pos:end="1595:61">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1597:27" pos:end="1603:25">else <block pos:start="1597:32" pos:end="1603:25">{<block_content pos:start="1599:29" pos:end="1601:65">

                            <expr_stmt pos:start="1599:29" pos:end="1599:67"><expr pos:start="1599:29" pos:end="1599:66"><call pos:start="1599:29" pos:end="1599:66"><name pos:start="1599:29" pos:end="1599:42">gen_aa32_ld32u</name><argument_list pos:start="1599:43" pos:end="1599:66">(<argument pos:start="1599:44" pos:end="1599:47"><expr pos:start="1599:44" pos:end="1599:47"><name pos:start="1599:44" pos:end="1599:47">tmp2</name></expr></argument>, <argument pos:start="1599:50" pos:end="1599:53"><expr pos:start="1599:50" pos:end="1599:53"><name pos:start="1599:50" pos:end="1599:53">addr</name></expr></argument>, <argument pos:start="1599:56" pos:end="1599:65"><expr pos:start="1599:56" pos:end="1599:65"><call pos:start="1599:56" pos:end="1599:65"><name pos:start="1599:56" pos:end="1599:62">IS_USER</name><argument_list pos:start="1599:63" pos:end="1599:65">(<argument pos:start="1599:64" pos:end="1599:64"><expr pos:start="1599:64" pos:end="1599:64"><name pos:start="1599:64" pos:end="1599:64">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1601:29" pos:end="1601:65"><expr pos:start="1601:29" pos:end="1601:64"><call pos:start="1601:29" pos:end="1601:64"><name pos:start="1601:29" pos:end="1601:41">gen_aa32_st32</name><argument_list pos:start="1601:42" pos:end="1601:64">(<argument pos:start="1601:43" pos:end="1601:45"><expr pos:start="1601:43" pos:end="1601:45"><name pos:start="1601:43" pos:end="1601:45">tmp</name></expr></argument>, <argument pos:start="1601:48" pos:end="1601:51"><expr pos:start="1601:48" pos:end="1601:51"><name pos:start="1601:48" pos:end="1601:51">addr</name></expr></argument>, <argument pos:start="1601:54" pos:end="1601:63"><expr pos:start="1601:54" pos:end="1601:63"><call pos:start="1601:54" pos:end="1601:63"><name pos:start="1601:54" pos:end="1601:60">IS_USER</name><argument_list pos:start="1601:61" pos:end="1601:63">(<argument pos:start="1601:62" pos:end="1601:62"><expr pos:start="1601:62" pos:end="1601:62"><name pos:start="1601:62" pos:end="1601:62">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1605:25" pos:end="1605:47"><expr pos:start="1605:25" pos:end="1605:46"><call pos:start="1605:25" pos:end="1605:46"><name pos:start="1605:25" pos:end="1605:41">tcg_temp_free_i32</name><argument_list pos:start="1605:42" pos:end="1605:46">(<argument pos:start="1605:43" pos:end="1605:45"><expr pos:start="1605:43" pos:end="1605:45"><name pos:start="1605:43" pos:end="1605:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1607:25" pos:end="1607:48"><expr pos:start="1607:25" pos:end="1607:47"><call pos:start="1607:25" pos:end="1607:47"><name pos:start="1607:25" pos:end="1607:41">tcg_temp_free_i32</name><argument_list pos:start="1607:42" pos:end="1607:47">(<argument pos:start="1607:43" pos:end="1607:46"><expr pos:start="1607:43" pos:end="1607:46"><name pos:start="1607:43" pos:end="1607:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1609:25" pos:end="1609:47"><expr pos:start="1609:25" pos:end="1609:46"><call pos:start="1609:25" pos:end="1609:46"><name pos:start="1609:25" pos:end="1609:33">store_reg</name><argument_list pos:start="1609:34" pos:end="1609:46">(<argument pos:start="1609:35" pos:end="1609:35"><expr pos:start="1609:35" pos:end="1609:35"><name pos:start="1609:35" pos:end="1609:35">s</name></expr></argument>, <argument pos:start="1609:38" pos:end="1609:39"><expr pos:start="1609:38" pos:end="1609:39"><name pos:start="1609:38" pos:end="1609:39">rd</name></expr></argument>, <argument pos:start="1609:42" pos:end="1609:45"><expr pos:start="1609:42" pos:end="1609:45"><name pos:start="1609:42" pos:end="1609:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1615:15" pos:end="1767:13">else <block pos:start="1615:20" pos:end="1767:13">{<block_content pos:start="1617:17" pos:end="1765:17">

                <decl_stmt pos:start="1617:17" pos:end="1617:35"><decl pos:start="1617:17" pos:end="1617:34"><type pos:start="1617:17" pos:end="1617:19"><name pos:start="1617:17" pos:end="1617:19">int</name></type> <name pos:start="1617:21" pos:end="1617:34">address_offset</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1619:17" pos:end="1619:25"><decl pos:start="1619:17" pos:end="1619:24"><type pos:start="1619:17" pos:end="1619:19"><name pos:start="1619:17" pos:end="1619:19">int</name></type> <name pos:start="1619:21" pos:end="1619:24">load</name></decl>;</decl_stmt>

                <comment type="block" pos:start="1621:17" pos:end="1621:37">/* Misc load/store */</comment>

                <expr_stmt pos:start="1623:17" pos:end="1623:40"><expr pos:start="1623:17" pos:end="1623:39"><name pos:start="1623:17" pos:end="1623:18">rn</name> <operator pos:start="1623:20" pos:end="1623:20">=</operator> <operator pos:start="1623:22" pos:end="1623:22">(</operator><name pos:start="1623:23" pos:end="1623:26">insn</name> <operator pos:start="1623:28" pos:end="1623:29">&gt;&gt;</operator> <literal type="number" pos:start="1623:31" pos:end="1623:32">16</literal><operator pos:start="1623:33" pos:end="1623:33">)</operator> <operator pos:start="1623:35" pos:end="1623:35">&amp;</operator> <literal type="number" pos:start="1623:37" pos:end="1623:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1625:17" pos:end="1625:40"><expr pos:start="1625:17" pos:end="1625:39"><name pos:start="1625:17" pos:end="1625:18">rd</name> <operator pos:start="1625:20" pos:end="1625:20">=</operator> <operator pos:start="1625:22" pos:end="1625:22">(</operator><name pos:start="1625:23" pos:end="1625:26">insn</name> <operator pos:start="1625:28" pos:end="1625:29">&gt;&gt;</operator> <literal type="number" pos:start="1625:31" pos:end="1625:32">12</literal><operator pos:start="1625:33" pos:end="1625:33">)</operator> <operator pos:start="1625:35" pos:end="1625:35">&amp;</operator> <literal type="number" pos:start="1625:37" pos:end="1625:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1627:17" pos:end="1627:39"><expr pos:start="1627:17" pos:end="1627:38"><name pos:start="1627:17" pos:end="1627:20">addr</name> <operator pos:start="1627:22" pos:end="1627:22">=</operator> <call pos:start="1627:24" pos:end="1627:38"><name pos:start="1627:24" pos:end="1627:31">load_reg</name><argument_list pos:start="1627:32" pos:end="1627:38">(<argument pos:start="1627:33" pos:end="1627:33"><expr pos:start="1627:33" pos:end="1627:33"><name pos:start="1627:33" pos:end="1627:33">s</name></expr></argument>, <argument pos:start="1627:36" pos:end="1627:37"><expr pos:start="1627:36" pos:end="1627:37"><name pos:start="1627:36" pos:end="1627:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1629:17" pos:end="1631:59"><if pos:start="1629:17" pos:end="1631:59">if <condition pos:start="1629:20" pos:end="1629:37">(<expr pos:start="1629:21" pos:end="1629:36"><name pos:start="1629:21" pos:end="1629:24">insn</name> <operator pos:start="1629:26" pos:end="1629:26">&amp;</operator> <operator pos:start="1629:28" pos:end="1629:28">(</operator><literal type="number" pos:start="1629:29" pos:end="1629:29">1</literal> <operator pos:start="1629:31" pos:end="1629:32">&lt;&lt;</operator> <literal type="number" pos:start="1629:34" pos:end="1629:35">24</literal><operator pos:start="1629:36" pos:end="1629:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1631:21" pos:end="1631:59"><block_content pos:start="1631:21" pos:end="1631:59">

                    <expr_stmt pos:start="1631:21" pos:end="1631:59"><expr pos:start="1631:21" pos:end="1631:58"><call pos:start="1631:21" pos:end="1631:58"><name pos:start="1631:21" pos:end="1631:40">gen_add_datah_offset</name><argument_list pos:start="1631:41" pos:end="1631:58">(<argument pos:start="1631:42" pos:end="1631:42"><expr pos:start="1631:42" pos:end="1631:42"><name pos:start="1631:42" pos:end="1631:42">s</name></expr></argument>, <argument pos:start="1631:45" pos:end="1631:48"><expr pos:start="1631:45" pos:end="1631:48"><name pos:start="1631:45" pos:end="1631:48">insn</name></expr></argument>, <argument pos:start="1631:51" pos:end="1631:51"><expr pos:start="1631:51" pos:end="1631:51"><literal type="number" pos:start="1631:51" pos:end="1631:51">0</literal></expr></argument>, <argument pos:start="1631:54" pos:end="1631:57"><expr pos:start="1631:54" pos:end="1631:57"><name pos:start="1631:54" pos:end="1631:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1633:17" pos:end="1633:35"><expr pos:start="1633:17" pos:end="1633:34"><name pos:start="1633:17" pos:end="1633:30">address_offset</name> <operator pos:start="1633:32" pos:end="1633:32">=</operator> <literal type="number" pos:start="1633:34" pos:end="1633:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1635:17" pos:end="1729:17"><if pos:start="1635:17" pos:end="1667:17">if <condition pos:start="1635:20" pos:end="1635:37">(<expr pos:start="1635:21" pos:end="1635:36"><name pos:start="1635:21" pos:end="1635:24">insn</name> <operator pos:start="1635:26" pos:end="1635:26">&amp;</operator> <operator pos:start="1635:28" pos:end="1635:28">(</operator><literal type="number" pos:start="1635:29" pos:end="1635:29">1</literal> <operator pos:start="1635:31" pos:end="1635:32">&lt;&lt;</operator> <literal type="number" pos:start="1635:34" pos:end="1635:35">20</literal><operator pos:start="1635:36" pos:end="1635:36">)</operator></expr>)</condition> <block pos:start="1635:39" pos:end="1667:17">{<block_content pos:start="1639:21" pos:end="1665:29">

                    <comment type="block" pos:start="1637:21" pos:end="1637:30">/* load */</comment>

                    <expr_stmt pos:start="1639:21" pos:end="1639:45"><expr pos:start="1639:21" pos:end="1639:44"><name pos:start="1639:21" pos:end="1639:23">tmp</name> <operator pos:start="1639:25" pos:end="1639:25">=</operator> <call pos:start="1639:27" pos:end="1639:44"><name pos:start="1639:27" pos:end="1639:42">tcg_temp_new_i32</name><argument_list pos:start="1639:43" pos:end="1639:44">()</argument_list></call></expr>;</expr_stmt>

                    <switch pos:start="1641:21" pos:end="1663:21">switch<condition pos:start="1641:27" pos:end="1641:30">(<expr pos:start="1641:28" pos:end="1641:29"><name pos:start="1641:28" pos:end="1641:29">sh</name></expr>)</condition> <block pos:start="1641:32" pos:end="1663:21">{<block_content pos:start="1643:21" pos:end="1661:30">

                    <case pos:start="1643:21" pos:end="1643:27">case <expr pos:start="1643:26" pos:end="1643:26"><literal type="number" pos:start="1643:26" pos:end="1643:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="1645:25" pos:end="1645:62"><expr pos:start="1645:25" pos:end="1645:61"><call pos:start="1645:25" pos:end="1645:61"><name pos:start="1645:25" pos:end="1645:38">gen_aa32_ld16u</name><argument_list pos:start="1645:39" pos:end="1645:61">(<argument pos:start="1645:40" pos:end="1645:42"><expr pos:start="1645:40" pos:end="1645:42"><name pos:start="1645:40" pos:end="1645:42">tmp</name></expr></argument>, <argument pos:start="1645:45" pos:end="1645:48"><expr pos:start="1645:45" pos:end="1645:48"><name pos:start="1645:45" pos:end="1645:48">addr</name></expr></argument>, <argument pos:start="1645:51" pos:end="1645:60"><expr pos:start="1645:51" pos:end="1645:60"><call pos:start="1645:51" pos:end="1645:60"><name pos:start="1645:51" pos:end="1645:57">IS_USER</name><argument_list pos:start="1645:58" pos:end="1645:60">(<argument pos:start="1645:59" pos:end="1645:59"><expr pos:start="1645:59" pos:end="1645:59"><name pos:start="1645:59" pos:end="1645:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1647:25" pos:end="1647:30">break;</break>

                    <case pos:start="1649:21" pos:end="1649:27">case <expr pos:start="1649:26" pos:end="1649:26"><literal type="number" pos:start="1649:26" pos:end="1649:26">2</literal></expr>:</case>

                        <expr_stmt pos:start="1651:25" pos:end="1651:61"><expr pos:start="1651:25" pos:end="1651:60"><call pos:start="1651:25" pos:end="1651:60"><name pos:start="1651:25" pos:end="1651:37">gen_aa32_ld8s</name><argument_list pos:start="1651:38" pos:end="1651:60">(<argument pos:start="1651:39" pos:end="1651:41"><expr pos:start="1651:39" pos:end="1651:41"><name pos:start="1651:39" pos:end="1651:41">tmp</name></expr></argument>, <argument pos:start="1651:44" pos:end="1651:47"><expr pos:start="1651:44" pos:end="1651:47"><name pos:start="1651:44" pos:end="1651:47">addr</name></expr></argument>, <argument pos:start="1651:50" pos:end="1651:59"><expr pos:start="1651:50" pos:end="1651:59"><call pos:start="1651:50" pos:end="1651:59"><name pos:start="1651:50" pos:end="1651:56">IS_USER</name><argument_list pos:start="1651:57" pos:end="1651:59">(<argument pos:start="1651:58" pos:end="1651:58"><expr pos:start="1651:58" pos:end="1651:58"><name pos:start="1651:58" pos:end="1651:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1653:25" pos:end="1653:30">break;</break>

                    <default pos:start="1655:21" pos:end="1655:28">default:</default>

                    <case pos:start="1657:21" pos:end="1657:27">case <expr pos:start="1657:26" pos:end="1657:26"><literal type="number" pos:start="1657:26" pos:end="1657:26">3</literal></expr>:</case>

                        <expr_stmt pos:start="1659:25" pos:end="1659:62"><expr pos:start="1659:25" pos:end="1659:61"><call pos:start="1659:25" pos:end="1659:61"><name pos:start="1659:25" pos:end="1659:38">gen_aa32_ld16s</name><argument_list pos:start="1659:39" pos:end="1659:61">(<argument pos:start="1659:40" pos:end="1659:42"><expr pos:start="1659:40" pos:end="1659:42"><name pos:start="1659:40" pos:end="1659:42">tmp</name></expr></argument>, <argument pos:start="1659:45" pos:end="1659:48"><expr pos:start="1659:45" pos:end="1659:48"><name pos:start="1659:45" pos:end="1659:48">addr</name></expr></argument>, <argument pos:start="1659:51" pos:end="1659:60"><expr pos:start="1659:51" pos:end="1659:60"><call pos:start="1659:51" pos:end="1659:60"><name pos:start="1659:51" pos:end="1659:57">IS_USER</name><argument_list pos:start="1659:58" pos:end="1659:60">(<argument pos:start="1659:59" pos:end="1659:59"><expr pos:start="1659:59" pos:end="1659:59"><name pos:start="1659:59" pos:end="1659:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1661:25" pos:end="1661:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1665:21" pos:end="1665:29"><expr pos:start="1665:21" pos:end="1665:28"><name pos:start="1665:21" pos:end="1665:24">load</name> <operator pos:start="1665:26" pos:end="1665:26">=</operator> <literal type="number" pos:start="1665:28" pos:end="1665:28">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1667:19" pos:end="1717:17">else if <condition pos:start="1667:27" pos:end="1667:34">(<expr pos:start="1667:28" pos:end="1667:33"><name pos:start="1667:28" pos:end="1667:29">sh</name> <operator pos:start="1667:31" pos:end="1667:31">&amp;</operator> <literal type="number" pos:start="1667:33" pos:end="1667:33">2</literal></expr>)</condition> <block pos:start="1667:36" pos:end="1717:17">{<block_content pos:start="1669:21" pos:end="1715:40">

                    <expr_stmt pos:start="1669:21" pos:end="1669:30"><expr pos:start="1669:21" pos:end="1669:29"><call pos:start="1669:21" pos:end="1669:29"><name pos:start="1669:21" pos:end="1669:24">ARCH</name><argument_list pos:start="1669:25" pos:end="1669:29">(<argument pos:start="1669:26" pos:end="1669:28"><expr pos:start="1669:26" pos:end="1669:28"><literal type="number" pos:start="1669:26" pos:end="1669:28">5TE</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="1671:21" pos:end="1671:36">/* doubleword */</comment>

                    <if_stmt pos:start="1673:21" pos:end="1713:21"><if pos:start="1673:21" pos:end="1693:21">if <condition pos:start="1673:24" pos:end="1673:31">(<expr pos:start="1673:25" pos:end="1673:30"><name pos:start="1673:25" pos:end="1673:26">sh</name> <operator pos:start="1673:28" pos:end="1673:28">&amp;</operator> <literal type="number" pos:start="1673:30" pos:end="1673:30">1</literal></expr>)</condition> <block pos:start="1673:33" pos:end="1693:21">{<block_content pos:start="1677:25" pos:end="1691:33">

                        <comment type="block" pos:start="1675:25" pos:end="1675:35">/* store */</comment>

                        <expr_stmt pos:start="1677:25" pos:end="1677:46"><expr pos:start="1677:25" pos:end="1677:45"><name pos:start="1677:25" pos:end="1677:27">tmp</name> <operator pos:start="1677:29" pos:end="1677:29">=</operator> <call pos:start="1677:31" pos:end="1677:45"><name pos:start="1677:31" pos:end="1677:38">load_reg</name><argument_list pos:start="1677:39" pos:end="1677:45">(<argument pos:start="1677:40" pos:end="1677:40"><expr pos:start="1677:40" pos:end="1677:40"><name pos:start="1677:40" pos:end="1677:40">s</name></expr></argument>, <argument pos:start="1677:43" pos:end="1677:44"><expr pos:start="1677:43" pos:end="1677:44"><name pos:start="1677:43" pos:end="1677:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1679:25" pos:end="1679:61"><expr pos:start="1679:25" pos:end="1679:60"><call pos:start="1679:25" pos:end="1679:60"><name pos:start="1679:25" pos:end="1679:37">gen_aa32_st32</name><argument_list pos:start="1679:38" pos:end="1679:60">(<argument pos:start="1679:39" pos:end="1679:41"><expr pos:start="1679:39" pos:end="1679:41"><name pos:start="1679:39" pos:end="1679:41">tmp</name></expr></argument>, <argument pos:start="1679:44" pos:end="1679:47"><expr pos:start="1679:44" pos:end="1679:47"><name pos:start="1679:44" pos:end="1679:47">addr</name></expr></argument>, <argument pos:start="1679:50" pos:end="1679:59"><expr pos:start="1679:50" pos:end="1679:59"><call pos:start="1679:50" pos:end="1679:59"><name pos:start="1679:50" pos:end="1679:56">IS_USER</name><argument_list pos:start="1679:57" pos:end="1679:59">(<argument pos:start="1679:58" pos:end="1679:58"><expr pos:start="1679:58" pos:end="1679:58"><name pos:start="1679:58" pos:end="1679:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1681:25" pos:end="1681:47"><expr pos:start="1681:25" pos:end="1681:46"><call pos:start="1681:25" pos:end="1681:46"><name pos:start="1681:25" pos:end="1681:41">tcg_temp_free_i32</name><argument_list pos:start="1681:42" pos:end="1681:46">(<argument pos:start="1681:43" pos:end="1681:45"><expr pos:start="1681:43" pos:end="1681:45"><name pos:start="1681:43" pos:end="1681:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1683:25" pos:end="1683:56"><expr pos:start="1683:25" pos:end="1683:55"><call pos:start="1683:25" pos:end="1683:55"><name pos:start="1683:25" pos:end="1683:40">tcg_gen_addi_i32</name><argument_list pos:start="1683:41" pos:end="1683:55">(<argument pos:start="1683:42" pos:end="1683:45"><expr pos:start="1683:42" pos:end="1683:45"><name pos:start="1683:42" pos:end="1683:45">addr</name></expr></argument>, <argument pos:start="1683:48" pos:end="1683:51"><expr pos:start="1683:48" pos:end="1683:51"><name pos:start="1683:48" pos:end="1683:51">addr</name></expr></argument>, <argument pos:start="1683:54" pos:end="1683:54"><expr pos:start="1683:54" pos:end="1683:54"><literal type="number" pos:start="1683:54" pos:end="1683:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1685:25" pos:end="1685:50"><expr pos:start="1685:25" pos:end="1685:49"><name pos:start="1685:25" pos:end="1685:27">tmp</name> <operator pos:start="1685:29" pos:end="1685:29">=</operator> <call pos:start="1685:31" pos:end="1685:49"><name pos:start="1685:31" pos:end="1685:38">load_reg</name><argument_list pos:start="1685:39" pos:end="1685:49">(<argument pos:start="1685:40" pos:end="1685:40"><expr pos:start="1685:40" pos:end="1685:40"><name pos:start="1685:40" pos:end="1685:40">s</name></expr></argument>, <argument pos:start="1685:43" pos:end="1685:48"><expr pos:start="1685:43" pos:end="1685:48"><name pos:start="1685:43" pos:end="1685:44">rd</name> <operator pos:start="1685:46" pos:end="1685:46">+</operator> <literal type="number" pos:start="1685:48" pos:end="1685:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1687:25" pos:end="1687:61"><expr pos:start="1687:25" pos:end="1687:60"><call pos:start="1687:25" pos:end="1687:60"><name pos:start="1687:25" pos:end="1687:37">gen_aa32_st32</name><argument_list pos:start="1687:38" pos:end="1687:60">(<argument pos:start="1687:39" pos:end="1687:41"><expr pos:start="1687:39" pos:end="1687:41"><name pos:start="1687:39" pos:end="1687:41">tmp</name></expr></argument>, <argument pos:start="1687:44" pos:end="1687:47"><expr pos:start="1687:44" pos:end="1687:47"><name pos:start="1687:44" pos:end="1687:47">addr</name></expr></argument>, <argument pos:start="1687:50" pos:end="1687:59"><expr pos:start="1687:50" pos:end="1687:59"><call pos:start="1687:50" pos:end="1687:59"><name pos:start="1687:50" pos:end="1687:56">IS_USER</name><argument_list pos:start="1687:57" pos:end="1687:59">(<argument pos:start="1687:58" pos:end="1687:58"><expr pos:start="1687:58" pos:end="1687:58"><name pos:start="1687:58" pos:end="1687:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1689:25" pos:end="1689:47"><expr pos:start="1689:25" pos:end="1689:46"><call pos:start="1689:25" pos:end="1689:46"><name pos:start="1689:25" pos:end="1689:41">tcg_temp_free_i32</name><argument_list pos:start="1689:42" pos:end="1689:46">(<argument pos:start="1689:43" pos:end="1689:45"><expr pos:start="1689:43" pos:end="1689:45"><name pos:start="1689:43" pos:end="1689:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1691:25" pos:end="1691:33"><expr pos:start="1691:25" pos:end="1691:32"><name pos:start="1691:25" pos:end="1691:28">load</name> <operator pos:start="1691:30" pos:end="1691:30">=</operator> <literal type="number" pos:start="1691:32" pos:end="1691:32">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1693:23" pos:end="1713:21">else <block pos:start="1693:28" pos:end="1713:21">{<block_content pos:start="1697:25" pos:end="1711:33">

                        <comment type="block" pos:start="1695:25" pos:end="1695:34">/* load */</comment>

                        <expr_stmt pos:start="1697:25" pos:end="1697:49"><expr pos:start="1697:25" pos:end="1697:48"><name pos:start="1697:25" pos:end="1697:27">tmp</name> <operator pos:start="1697:29" pos:end="1697:29">=</operator> <call pos:start="1697:31" pos:end="1697:48"><name pos:start="1697:31" pos:end="1697:46">tcg_temp_new_i32</name><argument_list pos:start="1697:47" pos:end="1697:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1699:25" pos:end="1699:62"><expr pos:start="1699:25" pos:end="1699:61"><call pos:start="1699:25" pos:end="1699:61"><name pos:start="1699:25" pos:end="1699:38">gen_aa32_ld32u</name><argument_list pos:start="1699:39" pos:end="1699:61">(<argument pos:start="1699:40" pos:end="1699:42"><expr pos:start="1699:40" pos:end="1699:42"><name pos:start="1699:40" pos:end="1699:42">tmp</name></expr></argument>, <argument pos:start="1699:45" pos:end="1699:48"><expr pos:start="1699:45" pos:end="1699:48"><name pos:start="1699:45" pos:end="1699:48">addr</name></expr></argument>, <argument pos:start="1699:51" pos:end="1699:60"><expr pos:start="1699:51" pos:end="1699:60"><call pos:start="1699:51" pos:end="1699:60"><name pos:start="1699:51" pos:end="1699:57">IS_USER</name><argument_list pos:start="1699:58" pos:end="1699:60">(<argument pos:start="1699:59" pos:end="1699:59"><expr pos:start="1699:59" pos:end="1699:59"><name pos:start="1699:59" pos:end="1699:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1701:25" pos:end="1701:46"><expr pos:start="1701:25" pos:end="1701:45"><call pos:start="1701:25" pos:end="1701:45"><name pos:start="1701:25" pos:end="1701:33">store_reg</name><argument_list pos:start="1701:34" pos:end="1701:45">(<argument pos:start="1701:35" pos:end="1701:35"><expr pos:start="1701:35" pos:end="1701:35"><name pos:start="1701:35" pos:end="1701:35">s</name></expr></argument>, <argument pos:start="1701:38" pos:end="1701:39"><expr pos:start="1701:38" pos:end="1701:39"><name pos:start="1701:38" pos:end="1701:39">rd</name></expr></argument>, <argument pos:start="1701:42" pos:end="1701:44"><expr pos:start="1701:42" pos:end="1701:44"><name pos:start="1701:42" pos:end="1701:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1703:25" pos:end="1703:56"><expr pos:start="1703:25" pos:end="1703:55"><call pos:start="1703:25" pos:end="1703:55"><name pos:start="1703:25" pos:end="1703:40">tcg_gen_addi_i32</name><argument_list pos:start="1703:41" pos:end="1703:55">(<argument pos:start="1703:42" pos:end="1703:45"><expr pos:start="1703:42" pos:end="1703:45"><name pos:start="1703:42" pos:end="1703:45">addr</name></expr></argument>, <argument pos:start="1703:48" pos:end="1703:51"><expr pos:start="1703:48" pos:end="1703:51"><name pos:start="1703:48" pos:end="1703:51">addr</name></expr></argument>, <argument pos:start="1703:54" pos:end="1703:54"><expr pos:start="1703:54" pos:end="1703:54"><literal type="number" pos:start="1703:54" pos:end="1703:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1705:25" pos:end="1705:49"><expr pos:start="1705:25" pos:end="1705:48"><name pos:start="1705:25" pos:end="1705:27">tmp</name> <operator pos:start="1705:29" pos:end="1705:29">=</operator> <call pos:start="1705:31" pos:end="1705:48"><name pos:start="1705:31" pos:end="1705:46">tcg_temp_new_i32</name><argument_list pos:start="1705:47" pos:end="1705:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1707:25" pos:end="1707:62"><expr pos:start="1707:25" pos:end="1707:61"><call pos:start="1707:25" pos:end="1707:61"><name pos:start="1707:25" pos:end="1707:38">gen_aa32_ld32u</name><argument_list pos:start="1707:39" pos:end="1707:61">(<argument pos:start="1707:40" pos:end="1707:42"><expr pos:start="1707:40" pos:end="1707:42"><name pos:start="1707:40" pos:end="1707:42">tmp</name></expr></argument>, <argument pos:start="1707:45" pos:end="1707:48"><expr pos:start="1707:45" pos:end="1707:48"><name pos:start="1707:45" pos:end="1707:48">addr</name></expr></argument>, <argument pos:start="1707:51" pos:end="1707:60"><expr pos:start="1707:51" pos:end="1707:60"><call pos:start="1707:51" pos:end="1707:60"><name pos:start="1707:51" pos:end="1707:57">IS_USER</name><argument_list pos:start="1707:58" pos:end="1707:60">(<argument pos:start="1707:59" pos:end="1707:59"><expr pos:start="1707:59" pos:end="1707:59"><name pos:start="1707:59" pos:end="1707:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1709:25" pos:end="1709:29"><expr pos:start="1709:25" pos:end="1709:28"><name pos:start="1709:25" pos:end="1709:26">rd</name><operator pos:start="1709:27" pos:end="1709:28">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1711:25" pos:end="1711:33"><expr pos:start="1711:25" pos:end="1711:32"><name pos:start="1711:25" pos:end="1711:28">load</name> <operator pos:start="1711:30" pos:end="1711:30">=</operator> <literal type="number" pos:start="1711:32" pos:end="1711:32">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1715:21" pos:end="1715:40"><expr pos:start="1715:21" pos:end="1715:39"><name pos:start="1715:21" pos:end="1715:34">address_offset</name> <operator pos:start="1715:36" pos:end="1715:36">=</operator> <operator pos:start="1715:38" pos:end="1715:38">-</operator><literal type="number" pos:start="1715:39" pos:end="1715:39">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1717:19" pos:end="1729:17">else <block pos:start="1717:24" pos:end="1729:17">{<block_content pos:start="1721:21" pos:end="1727:29">

                    <comment type="block" pos:start="1719:21" pos:end="1719:31">/* store */</comment>

                    <expr_stmt pos:start="1721:21" pos:end="1721:42"><expr pos:start="1721:21" pos:end="1721:41"><name pos:start="1721:21" pos:end="1721:23">tmp</name> <operator pos:start="1721:25" pos:end="1721:25">=</operator> <call pos:start="1721:27" pos:end="1721:41"><name pos:start="1721:27" pos:end="1721:34">load_reg</name><argument_list pos:start="1721:35" pos:end="1721:41">(<argument pos:start="1721:36" pos:end="1721:36"><expr pos:start="1721:36" pos:end="1721:36"><name pos:start="1721:36" pos:end="1721:36">s</name></expr></argument>, <argument pos:start="1721:39" pos:end="1721:40"><expr pos:start="1721:39" pos:end="1721:40"><name pos:start="1721:39" pos:end="1721:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1723:21" pos:end="1723:57"><expr pos:start="1723:21" pos:end="1723:56"><call pos:start="1723:21" pos:end="1723:56"><name pos:start="1723:21" pos:end="1723:33">gen_aa32_st16</name><argument_list pos:start="1723:34" pos:end="1723:56">(<argument pos:start="1723:35" pos:end="1723:37"><expr pos:start="1723:35" pos:end="1723:37"><name pos:start="1723:35" pos:end="1723:37">tmp</name></expr></argument>, <argument pos:start="1723:40" pos:end="1723:43"><expr pos:start="1723:40" pos:end="1723:43"><name pos:start="1723:40" pos:end="1723:43">addr</name></expr></argument>, <argument pos:start="1723:46" pos:end="1723:55"><expr pos:start="1723:46" pos:end="1723:55"><call pos:start="1723:46" pos:end="1723:55"><name pos:start="1723:46" pos:end="1723:52">IS_USER</name><argument_list pos:start="1723:53" pos:end="1723:55">(<argument pos:start="1723:54" pos:end="1723:54"><expr pos:start="1723:54" pos:end="1723:54"><name pos:start="1723:54" pos:end="1723:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1725:21" pos:end="1725:43"><expr pos:start="1725:21" pos:end="1725:42"><call pos:start="1725:21" pos:end="1725:42"><name pos:start="1725:21" pos:end="1725:37">tcg_temp_free_i32</name><argument_list pos:start="1725:38" pos:end="1725:42">(<argument pos:start="1725:39" pos:end="1725:41"><expr pos:start="1725:39" pos:end="1725:41"><name pos:start="1725:39" pos:end="1725:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1727:21" pos:end="1727:29"><expr pos:start="1727:21" pos:end="1727:28"><name pos:start="1727:21" pos:end="1727:24">load</name> <operator pos:start="1727:26" pos:end="1727:26">=</operator> <literal type="number" pos:start="1727:28" pos:end="1727:28">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="block" pos:start="1731:17" pos:end="1737:63">/* Perform base writeback before the loaded value to

                   ensure correct behavior with overlapping index registers.

                   ldrd with base writeback is is undefined if the

                   destination and index registers overlap.  */</comment>

                <if_stmt pos:start="1739:17" pos:end="1757:17"><if pos:start="1739:17" pos:end="1745:17">if <condition pos:start="1739:20" pos:end="1739:40">(<expr pos:start="1739:21" pos:end="1739:39"><operator pos:start="1739:21" pos:end="1739:21">!</operator><operator pos:start="1739:22" pos:end="1739:22">(</operator><name pos:start="1739:23" pos:end="1739:26">insn</name> <operator pos:start="1739:28" pos:end="1739:28">&amp;</operator> <operator pos:start="1739:30" pos:end="1739:30">(</operator><literal type="number" pos:start="1739:31" pos:end="1739:31">1</literal> <operator pos:start="1739:33" pos:end="1739:34">&lt;&lt;</operator> <literal type="number" pos:start="1739:36" pos:end="1739:37">24</literal><operator pos:start="1739:38" pos:end="1739:38">)</operator><operator pos:start="1739:39" pos:end="1739:39">)</operator></expr>)</condition> <block pos:start="1739:42" pos:end="1745:17">{<block_content pos:start="1741:21" pos:end="1743:43">

                    <expr_stmt pos:start="1741:21" pos:end="1741:72"><expr pos:start="1741:21" pos:end="1741:71"><call pos:start="1741:21" pos:end="1741:71"><name pos:start="1741:21" pos:end="1741:40">gen_add_datah_offset</name><argument_list pos:start="1741:41" pos:end="1741:71">(<argument pos:start="1741:42" pos:end="1741:42"><expr pos:start="1741:42" pos:end="1741:42"><name pos:start="1741:42" pos:end="1741:42">s</name></expr></argument>, <argument pos:start="1741:45" pos:end="1741:48"><expr pos:start="1741:45" pos:end="1741:48"><name pos:start="1741:45" pos:end="1741:48">insn</name></expr></argument>, <argument pos:start="1741:51" pos:end="1741:64"><expr pos:start="1741:51" pos:end="1741:64"><name pos:start="1741:51" pos:end="1741:64">address_offset</name></expr></argument>, <argument pos:start="1741:67" pos:end="1741:70"><expr pos:start="1741:67" pos:end="1741:70"><name pos:start="1741:67" pos:end="1741:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1743:21" pos:end="1743:43"><expr pos:start="1743:21" pos:end="1743:42"><call pos:start="1743:21" pos:end="1743:42"><name pos:start="1743:21" pos:end="1743:29">store_reg</name><argument_list pos:start="1743:30" pos:end="1743:42">(<argument pos:start="1743:31" pos:end="1743:31"><expr pos:start="1743:31" pos:end="1743:31"><name pos:start="1743:31" pos:end="1743:31">s</name></expr></argument>, <argument pos:start="1743:34" pos:end="1743:35"><expr pos:start="1743:34" pos:end="1743:35"><name pos:start="1743:34" pos:end="1743:35">rn</name></expr></argument>, <argument pos:start="1743:38" pos:end="1743:41"><expr pos:start="1743:38" pos:end="1743:41"><name pos:start="1743:38" pos:end="1743:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1745:19" pos:end="1753:17">else if <condition pos:start="1745:27" pos:end="1745:44">(<expr pos:start="1745:28" pos:end="1745:43"><name pos:start="1745:28" pos:end="1745:31">insn</name> <operator pos:start="1745:33" pos:end="1745:33">&amp;</operator> <operator pos:start="1745:35" pos:end="1745:35">(</operator><literal type="number" pos:start="1745:36" pos:end="1745:36">1</literal> <operator pos:start="1745:38" pos:end="1745:39">&lt;&lt;</operator> <literal type="number" pos:start="1745:41" pos:end="1745:42">21</literal><operator pos:start="1745:43" pos:end="1745:43">)</operator></expr>)</condition> <block pos:start="1745:46" pos:end="1753:17">{<block_content pos:start="1747:21" pos:end="1751:43">

                    <if_stmt pos:start="1747:21" pos:end="1749:69"><if pos:start="1747:21" pos:end="1749:69">if <condition pos:start="1747:24" pos:end="1747:39">(<expr pos:start="1747:25" pos:end="1747:38"><name pos:start="1747:25" pos:end="1747:38">address_offset</name></expr>)</condition><block type="pseudo" pos:start="1749:25" pos:end="1749:69"><block_content pos:start="1749:25" pos:end="1749:69">

                        <expr_stmt pos:start="1749:25" pos:end="1749:69"><expr pos:start="1749:25" pos:end="1749:68"><call pos:start="1749:25" pos:end="1749:68"><name pos:start="1749:25" pos:end="1749:40">tcg_gen_addi_i32</name><argument_list pos:start="1749:41" pos:end="1749:68">(<argument pos:start="1749:42" pos:end="1749:45"><expr pos:start="1749:42" pos:end="1749:45"><name pos:start="1749:42" pos:end="1749:45">addr</name></expr></argument>, <argument pos:start="1749:48" pos:end="1749:51"><expr pos:start="1749:48" pos:end="1749:51"><name pos:start="1749:48" pos:end="1749:51">addr</name></expr></argument>, <argument pos:start="1749:54" pos:end="1749:67"><expr pos:start="1749:54" pos:end="1749:67"><name pos:start="1749:54" pos:end="1749:67">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1751:21" pos:end="1751:43"><expr pos:start="1751:21" pos:end="1751:42"><call pos:start="1751:21" pos:end="1751:42"><name pos:start="1751:21" pos:end="1751:29">store_reg</name><argument_list pos:start="1751:30" pos:end="1751:42">(<argument pos:start="1751:31" pos:end="1751:31"><expr pos:start="1751:31" pos:end="1751:31"><name pos:start="1751:31" pos:end="1751:31">s</name></expr></argument>, <argument pos:start="1751:34" pos:end="1751:35"><expr pos:start="1751:34" pos:end="1751:35"><name pos:start="1751:34" pos:end="1751:35">rn</name></expr></argument>, <argument pos:start="1751:38" pos:end="1751:41"><expr pos:start="1751:38" pos:end="1751:41"><name pos:start="1751:38" pos:end="1751:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1753:19" pos:end="1757:17">else <block pos:start="1753:24" pos:end="1757:17">{<block_content pos:start="1755:21" pos:end="1755:44">

                    <expr_stmt pos:start="1755:21" pos:end="1755:44"><expr pos:start="1755:21" pos:end="1755:43"><call pos:start="1755:21" pos:end="1755:43"><name pos:start="1755:21" pos:end="1755:37">tcg_temp_free_i32</name><argument_list pos:start="1755:38" pos:end="1755:43">(<argument pos:start="1755:39" pos:end="1755:42"><expr pos:start="1755:39" pos:end="1755:42"><name pos:start="1755:39" pos:end="1755:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1759:17" pos:end="1765:17"><if pos:start="1759:17" pos:end="1765:17">if <condition pos:start="1759:20" pos:end="1759:25">(<expr pos:start="1759:21" pos:end="1759:24"><name pos:start="1759:21" pos:end="1759:24">load</name></expr>)</condition> <block pos:start="1759:27" pos:end="1765:17">{<block_content pos:start="1763:21" pos:end="1763:42">

                    <comment type="block" pos:start="1761:21" pos:end="1761:45">/* Complete the load.  */</comment>

                    <expr_stmt pos:start="1763:21" pos:end="1763:42"><expr pos:start="1763:21" pos:end="1763:41"><call pos:start="1763:21" pos:end="1763:41"><name pos:start="1763:21" pos:end="1763:29">store_reg</name><argument_list pos:start="1763:30" pos:end="1763:41">(<argument pos:start="1763:31" pos:end="1763:31"><expr pos:start="1763:31" pos:end="1763:31"><name pos:start="1763:31" pos:end="1763:31">s</name></expr></argument>, <argument pos:start="1763:34" pos:end="1763:35"><expr pos:start="1763:34" pos:end="1763:35"><name pos:start="1763:34" pos:end="1763:35">rd</name></expr></argument>, <argument pos:start="1763:38" pos:end="1763:40"><expr pos:start="1763:38" pos:end="1763:40"><name pos:start="1763:38" pos:end="1763:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1769:13" pos:end="1769:18">break;</break>

        <case pos:start="1771:9" pos:end="1771:17">case <expr pos:start="1771:14" pos:end="1771:16"><literal type="number" pos:start="1771:14" pos:end="1771:16">0x4</literal></expr>:</case>

        <case pos:start="1773:9" pos:end="1773:17">case <expr pos:start="1773:14" pos:end="1773:16"><literal type="number" pos:start="1773:14" pos:end="1773:16">0x5</literal></expr>:</case>

            <goto pos:start="1775:13" pos:end="1775:25">goto <name pos:start="1775:18" pos:end="1775:24">do_ldst</name>;</goto>

        <case pos:start="1777:9" pos:end="1777:17">case <expr pos:start="1777:14" pos:end="1777:16"><literal type="number" pos:start="1777:14" pos:end="1777:16">0x6</literal></expr>:</case>

        <case pos:start="1779:9" pos:end="1779:17">case <expr pos:start="1779:14" pos:end="1779:16"><literal type="number" pos:start="1779:14" pos:end="1779:16">0x7</literal></expr>:</case>

            <if_stmt pos:start="1781:13" pos:end="2345:13"><if pos:start="1781:13" pos:end="2345:13">if <condition pos:start="1781:16" pos:end="1781:32">(<expr pos:start="1781:17" pos:end="1781:31"><name pos:start="1781:17" pos:end="1781:20">insn</name> <operator pos:start="1781:22" pos:end="1781:22">&amp;</operator> <operator pos:start="1781:24" pos:end="1781:24">(</operator><literal type="number" pos:start="1781:25" pos:end="1781:25">1</literal> <operator pos:start="1781:27" pos:end="1781:28">&lt;&lt;</operator> <literal type="number" pos:start="1781:30" pos:end="1781:30">4</literal><operator pos:start="1781:31" pos:end="1781:31">)</operator></expr>)</condition> <block pos:start="1781:34" pos:end="2345:13">{<block_content pos:start="1783:17" pos:end="2343:22">

                <expr_stmt pos:start="1783:17" pos:end="1783:24"><expr pos:start="1783:17" pos:end="1783:23"><call pos:start="1783:17" pos:end="1783:23"><name pos:start="1783:17" pos:end="1783:20">ARCH</name><argument_list pos:start="1783:21" pos:end="1783:23">(<argument pos:start="1783:22" pos:end="1783:22"><expr pos:start="1783:22" pos:end="1783:22"><literal type="number" pos:start="1783:22" pos:end="1783:22">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1785:17" pos:end="1785:48">/* Armv6 Media instructions.  */</comment>

                <expr_stmt pos:start="1787:17" pos:end="1787:32"><expr pos:start="1787:17" pos:end="1787:31"><name pos:start="1787:17" pos:end="1787:18">rm</name> <operator pos:start="1787:20" pos:end="1787:20">=</operator> <name pos:start="1787:22" pos:end="1787:25">insn</name> <operator pos:start="1787:27" pos:end="1787:27">&amp;</operator> <literal type="number" pos:start="1787:29" pos:end="1787:31">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1789:17" pos:end="1789:40"><expr pos:start="1789:17" pos:end="1789:39"><name pos:start="1789:17" pos:end="1789:18">rn</name> <operator pos:start="1789:20" pos:end="1789:20">=</operator> <operator pos:start="1789:22" pos:end="1789:22">(</operator><name pos:start="1789:23" pos:end="1789:26">insn</name> <operator pos:start="1789:28" pos:end="1789:29">&gt;&gt;</operator> <literal type="number" pos:start="1789:31" pos:end="1789:32">16</literal><operator pos:start="1789:33" pos:end="1789:33">)</operator> <operator pos:start="1789:35" pos:end="1789:35">&amp;</operator> <literal type="number" pos:start="1789:37" pos:end="1789:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1791:17" pos:end="1791:40"><expr pos:start="1791:17" pos:end="1791:39"><name pos:start="1791:17" pos:end="1791:18">rd</name> <operator pos:start="1791:20" pos:end="1791:20">=</operator> <operator pos:start="1791:22" pos:end="1791:22">(</operator><name pos:start="1791:23" pos:end="1791:26">insn</name> <operator pos:start="1791:28" pos:end="1791:29">&gt;&gt;</operator> <literal type="number" pos:start="1791:31" pos:end="1791:32">12</literal><operator pos:start="1791:33" pos:end="1791:33">)</operator> <operator pos:start="1791:35" pos:end="1791:35">&amp;</operator> <literal type="number" pos:start="1791:37" pos:end="1791:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1793:17" pos:end="1793:39"><expr pos:start="1793:17" pos:end="1793:38"><name pos:start="1793:17" pos:end="1793:18">rs</name> <operator pos:start="1793:20" pos:end="1793:20">=</operator> <operator pos:start="1793:22" pos:end="1793:22">(</operator><name pos:start="1793:23" pos:end="1793:26">insn</name> <operator pos:start="1793:28" pos:end="1793:29">&gt;&gt;</operator> <literal type="number" pos:start="1793:31" pos:end="1793:31">8</literal><operator pos:start="1793:32" pos:end="1793:32">)</operator> <operator pos:start="1793:34" pos:end="1793:34">&amp;</operator> <literal type="number" pos:start="1793:36" pos:end="1793:38">0xf</literal></expr>;</expr_stmt>

                <switch pos:start="1795:17" pos:end="2341:17">switch <condition pos:start="1795:24" pos:end="1795:41">(<expr pos:start="1795:25" pos:end="1795:40"><operator pos:start="1795:25" pos:end="1795:25">(</operator><name pos:start="1795:26" pos:end="1795:29">insn</name> <operator pos:start="1795:31" pos:end="1795:32">&gt;&gt;</operator> <literal type="number" pos:start="1795:34" pos:end="1795:35">23</literal><operator pos:start="1795:36" pos:end="1795:36">)</operator> <operator pos:start="1795:38" pos:end="1795:38">&amp;</operator> <literal type="number" pos:start="1795:40" pos:end="1795:40">3</literal></expr>)</condition> <block pos:start="1795:43" pos:end="2341:17">{<block_content pos:start="1797:17" pos:end="2339:26">

                <case pos:start="1797:17" pos:end="1797:23">case <expr pos:start="1797:22" pos:end="1797:22"><literal type="number" pos:start="1797:22" pos:end="1797:22">0</literal></expr>:</case> <comment type="block" pos:start="1797:25" pos:end="1797:53">/* Parallel add/subtract.  */</comment>

                    <expr_stmt pos:start="1799:21" pos:end="1799:43"><expr pos:start="1799:21" pos:end="1799:42"><name pos:start="1799:21" pos:end="1799:23">op1</name> <operator pos:start="1799:25" pos:end="1799:25">=</operator> <operator pos:start="1799:27" pos:end="1799:27">(</operator><name pos:start="1799:28" pos:end="1799:31">insn</name> <operator pos:start="1799:33" pos:end="1799:34">&gt;&gt;</operator> <literal type="number" pos:start="1799:36" pos:end="1799:37">20</literal><operator pos:start="1799:38" pos:end="1799:38">)</operator> <operator pos:start="1799:40" pos:end="1799:40">&amp;</operator> <literal type="number" pos:start="1799:42" pos:end="1799:42">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1801:21" pos:end="1801:42"><expr pos:start="1801:21" pos:end="1801:41"><name pos:start="1801:21" pos:end="1801:23">tmp</name> <operator pos:start="1801:25" pos:end="1801:25">=</operator> <call pos:start="1801:27" pos:end="1801:41"><name pos:start="1801:27" pos:end="1801:34">load_reg</name><argument_list pos:start="1801:35" pos:end="1801:41">(<argument pos:start="1801:36" pos:end="1801:36"><expr pos:start="1801:36" pos:end="1801:36"><name pos:start="1801:36" pos:end="1801:36">s</name></expr></argument>, <argument pos:start="1801:39" pos:end="1801:40"><expr pos:start="1801:39" pos:end="1801:40"><name pos:start="1801:39" pos:end="1801:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1803:21" pos:end="1803:43"><expr pos:start="1803:21" pos:end="1803:42"><name pos:start="1803:21" pos:end="1803:24">tmp2</name> <operator pos:start="1803:26" pos:end="1803:26">=</operator> <call pos:start="1803:28" pos:end="1803:42"><name pos:start="1803:28" pos:end="1803:35">load_reg</name><argument_list pos:start="1803:36" pos:end="1803:42">(<argument pos:start="1803:37" pos:end="1803:37"><expr pos:start="1803:37" pos:end="1803:37"><name pos:start="1803:37" pos:end="1803:37">s</name></expr></argument>, <argument pos:start="1803:40" pos:end="1803:41"><expr pos:start="1803:40" pos:end="1803:41"><name pos:start="1803:40" pos:end="1803:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1805:21" pos:end="1805:41"><expr pos:start="1805:21" pos:end="1805:40"><name pos:start="1805:21" pos:end="1805:22">sh</name> <operator pos:start="1805:24" pos:end="1805:24">=</operator> <operator pos:start="1805:26" pos:end="1805:26">(</operator><name pos:start="1805:27" pos:end="1805:30">insn</name> <operator pos:start="1805:32" pos:end="1805:33">&gt;&gt;</operator> <literal type="number" pos:start="1805:35" pos:end="1805:35">5</literal><operator pos:start="1805:36" pos:end="1805:36">)</operator> <operator pos:start="1805:38" pos:end="1805:38">&amp;</operator> <literal type="number" pos:start="1805:40" pos:end="1805:40">7</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1807:21" pos:end="1809:40"><if pos:start="1807:21" pos:end="1809:40">if <condition pos:start="1807:24" pos:end="1807:61">(<expr pos:start="1807:25" pos:end="1807:60"><operator pos:start="1807:25" pos:end="1807:25">(</operator><name pos:start="1807:26" pos:end="1807:28">op1</name> <operator pos:start="1807:30" pos:end="1807:30">&amp;</operator> <literal type="number" pos:start="1807:32" pos:end="1807:32">3</literal><operator pos:start="1807:33" pos:end="1807:33">)</operator> <operator pos:start="1807:35" pos:end="1807:36">==</operator> <literal type="number" pos:start="1807:38" pos:end="1807:38">0</literal> <operator pos:start="1807:40" pos:end="1807:41">||</operator> <name pos:start="1807:43" pos:end="1807:44">sh</name> <operator pos:start="1807:46" pos:end="1807:47">==</operator> <literal type="number" pos:start="1807:49" pos:end="1807:49">5</literal> <operator pos:start="1807:51" pos:end="1807:52">||</operator> <name pos:start="1807:54" pos:end="1807:55">sh</name> <operator pos:start="1807:57" pos:end="1807:58">==</operator> <literal type="number" pos:start="1807:60" pos:end="1807:60">6</literal></expr>)</condition><block type="pseudo" pos:start="1809:25" pos:end="1809:40"><block_content pos:start="1809:25" pos:end="1809:40">

                        <goto pos:start="1809:25" pos:end="1809:40">goto <name pos:start="1809:30" pos:end="1809:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1811:21" pos:end="1811:64"><expr pos:start="1811:21" pos:end="1811:63"><call pos:start="1811:21" pos:end="1811:63"><name pos:start="1811:21" pos:end="1811:43">gen_arm_parallel_addsub</name><argument_list pos:start="1811:44" pos:end="1811:63">(<argument pos:start="1811:45" pos:end="1811:47"><expr pos:start="1811:45" pos:end="1811:47"><name pos:start="1811:45" pos:end="1811:47">op1</name></expr></argument>, <argument pos:start="1811:50" pos:end="1811:51"><expr pos:start="1811:50" pos:end="1811:51"><name pos:start="1811:50" pos:end="1811:51">sh</name></expr></argument>, <argument pos:start="1811:54" pos:end="1811:56"><expr pos:start="1811:54" pos:end="1811:56"><name pos:start="1811:54" pos:end="1811:56">tmp</name></expr></argument>, <argument pos:start="1811:59" pos:end="1811:62"><expr pos:start="1811:59" pos:end="1811:62"><name pos:start="1811:59" pos:end="1811:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1813:21" pos:end="1813:44"><expr pos:start="1813:21" pos:end="1813:43"><call pos:start="1813:21" pos:end="1813:43"><name pos:start="1813:21" pos:end="1813:37">tcg_temp_free_i32</name><argument_list pos:start="1813:38" pos:end="1813:43">(<argument pos:start="1813:39" pos:end="1813:42"><expr pos:start="1813:39" pos:end="1813:42"><name pos:start="1813:39" pos:end="1813:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1815:21" pos:end="1815:42"><expr pos:start="1815:21" pos:end="1815:41"><call pos:start="1815:21" pos:end="1815:41"><name pos:start="1815:21" pos:end="1815:29">store_reg</name><argument_list pos:start="1815:30" pos:end="1815:41">(<argument pos:start="1815:31" pos:end="1815:31"><expr pos:start="1815:31" pos:end="1815:31"><name pos:start="1815:31" pos:end="1815:31">s</name></expr></argument>, <argument pos:start="1815:34" pos:end="1815:35"><expr pos:start="1815:34" pos:end="1815:35"><name pos:start="1815:34" pos:end="1815:35">rd</name></expr></argument>, <argument pos:start="1815:38" pos:end="1815:40"><expr pos:start="1815:38" pos:end="1815:40"><name pos:start="1815:38" pos:end="1815:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1817:21" pos:end="1817:26">break;</break>

                <case pos:start="1819:17" pos:end="1819:23">case <expr pos:start="1819:22" pos:end="1819:22"><literal type="number" pos:start="1819:22" pos:end="1819:22">1</literal></expr>:</case>

                    <if_stmt pos:start="1821:21" pos:end="2037:21"><if pos:start="1821:21" pos:end="1865:21">if <condition pos:start="1821:24" pos:end="1821:49">(<expr pos:start="1821:25" pos:end="1821:48"><operator pos:start="1821:25" pos:end="1821:25">(</operator><name pos:start="1821:26" pos:end="1821:29">insn</name> <operator pos:start="1821:31" pos:end="1821:31">&amp;</operator> <literal type="number" pos:start="1821:33" pos:end="1821:42">0x00700020</literal><operator pos:start="1821:43" pos:end="1821:43">)</operator> <operator pos:start="1821:45" pos:end="1821:46">==</operator> <literal type="number" pos:start="1821:48" pos:end="1821:48">0</literal></expr>)</condition> <block pos:start="1821:51" pos:end="1865:21">{<block_content pos:start="1825:25" pos:end="1863:46">

                        <comment type="block" pos:start="1823:25" pos:end="1823:45">/* Halfword pack.  */</comment>

                        <expr_stmt pos:start="1825:25" pos:end="1825:46"><expr pos:start="1825:25" pos:end="1825:45"><name pos:start="1825:25" pos:end="1825:27">tmp</name> <operator pos:start="1825:29" pos:end="1825:29">=</operator> <call pos:start="1825:31" pos:end="1825:45"><name pos:start="1825:31" pos:end="1825:38">load_reg</name><argument_list pos:start="1825:39" pos:end="1825:45">(<argument pos:start="1825:40" pos:end="1825:40"><expr pos:start="1825:40" pos:end="1825:40"><name pos:start="1825:40" pos:end="1825:40">s</name></expr></argument>, <argument pos:start="1825:43" pos:end="1825:44"><expr pos:start="1825:43" pos:end="1825:44"><name pos:start="1825:43" pos:end="1825:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1827:25" pos:end="1827:47"><expr pos:start="1827:25" pos:end="1827:46"><name pos:start="1827:25" pos:end="1827:28">tmp2</name> <operator pos:start="1827:30" pos:end="1827:30">=</operator> <call pos:start="1827:32" pos:end="1827:46"><name pos:start="1827:32" pos:end="1827:39">load_reg</name><argument_list pos:start="1827:40" pos:end="1827:46">(<argument pos:start="1827:41" pos:end="1827:41"><expr pos:start="1827:41" pos:end="1827:41"><name pos:start="1827:41" pos:end="1827:41">s</name></expr></argument>, <argument pos:start="1827:44" pos:end="1827:45"><expr pos:start="1827:44" pos:end="1827:45"><name pos:start="1827:44" pos:end="1827:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1829:25" pos:end="1829:51"><expr pos:start="1829:25" pos:end="1829:50"><name pos:start="1829:25" pos:end="1829:29">shift</name> <operator pos:start="1829:31" pos:end="1829:31">=</operator> <operator pos:start="1829:33" pos:end="1829:33">(</operator><name pos:start="1829:34" pos:end="1829:37">insn</name> <operator pos:start="1829:39" pos:end="1829:40">&gt;&gt;</operator> <literal type="number" pos:start="1829:42" pos:end="1829:42">7</literal><operator pos:start="1829:43" pos:end="1829:43">)</operator> <operator pos:start="1829:45" pos:end="1829:45">&amp;</operator> <literal type="number" pos:start="1829:47" pos:end="1829:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1831:25" pos:end="1857:25"><if pos:start="1831:25" pos:end="1845:25">if <condition pos:start="1831:28" pos:end="1831:44">(<expr pos:start="1831:29" pos:end="1831:43"><name pos:start="1831:29" pos:end="1831:32">insn</name> <operator pos:start="1831:34" pos:end="1831:34">&amp;</operator> <operator pos:start="1831:36" pos:end="1831:36">(</operator><literal type="number" pos:start="1831:37" pos:end="1831:37">1</literal> <operator pos:start="1831:39" pos:end="1831:40">&lt;&lt;</operator> <literal type="number" pos:start="1831:42" pos:end="1831:42">6</literal><operator pos:start="1831:43" pos:end="1831:43">)</operator></expr>)</condition> <block pos:start="1831:46" pos:end="1845:25">{<block_content pos:start="1835:29" pos:end="1843:59">

                            <comment type="block" pos:start="1833:29" pos:end="1833:39">/* pkhtb */</comment>

                            <if_stmt pos:start="1835:29" pos:end="1837:43"><if pos:start="1835:29" pos:end="1837:43">if <condition pos:start="1835:32" pos:end="1835:43">(<expr pos:start="1835:33" pos:end="1835:42"><name pos:start="1835:33" pos:end="1835:37">shift</name> <operator pos:start="1835:39" pos:end="1835:40">==</operator> <literal type="number" pos:start="1835:42" pos:end="1835:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1837:33" pos:end="1837:43"><block_content pos:start="1837:33" pos:end="1837:43">

                                <expr_stmt pos:start="1837:33" pos:end="1837:43"><expr pos:start="1837:33" pos:end="1837:42"><name pos:start="1837:33" pos:end="1837:37">shift</name> <operator pos:start="1837:39" pos:end="1837:39">=</operator> <literal type="number" pos:start="1837:41" pos:end="1837:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1839:29" pos:end="1839:64"><expr pos:start="1839:29" pos:end="1839:63"><call pos:start="1839:29" pos:end="1839:63"><name pos:start="1839:29" pos:end="1839:44">tcg_gen_sari_i32</name><argument_list pos:start="1839:45" pos:end="1839:63">(<argument pos:start="1839:46" pos:end="1839:49"><expr pos:start="1839:46" pos:end="1839:49"><name pos:start="1839:46" pos:end="1839:49">tmp2</name></expr></argument>, <argument pos:start="1839:52" pos:end="1839:55"><expr pos:start="1839:52" pos:end="1839:55"><name pos:start="1839:52" pos:end="1839:55">tmp2</name></expr></argument>, <argument pos:start="1839:58" pos:end="1839:62"><expr pos:start="1839:58" pos:end="1839:62"><name pos:start="1839:58" pos:end="1839:62">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1841:29" pos:end="1841:67"><expr pos:start="1841:29" pos:end="1841:66"><call pos:start="1841:29" pos:end="1841:66"><name pos:start="1841:29" pos:end="1841:44">tcg_gen_andi_i32</name><argument_list pos:start="1841:45" pos:end="1841:66">(<argument pos:start="1841:46" pos:end="1841:48"><expr pos:start="1841:46" pos:end="1841:48"><name pos:start="1841:46" pos:end="1841:48">tmp</name></expr></argument>, <argument pos:start="1841:51" pos:end="1841:53"><expr pos:start="1841:51" pos:end="1841:53"><name pos:start="1841:51" pos:end="1841:53">tmp</name></expr></argument>, <argument pos:start="1841:56" pos:end="1841:65"><expr pos:start="1841:56" pos:end="1841:65"><literal type="number" pos:start="1841:56" pos:end="1841:65">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1843:29" pos:end="1843:59"><expr pos:start="1843:29" pos:end="1843:58"><call pos:start="1843:29" pos:end="1843:58"><name pos:start="1843:29" pos:end="1843:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1843:47" pos:end="1843:58">(<argument pos:start="1843:48" pos:end="1843:51"><expr pos:start="1843:48" pos:end="1843:51"><name pos:start="1843:48" pos:end="1843:51">tmp2</name></expr></argument>, <argument pos:start="1843:54" pos:end="1843:57"><expr pos:start="1843:54" pos:end="1843:57"><name pos:start="1843:54" pos:end="1843:57">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1845:27" pos:end="1857:25">else <block pos:start="1845:32" pos:end="1857:25">{<block_content pos:start="1849:29" pos:end="1855:69">

                            <comment type="block" pos:start="1847:29" pos:end="1847:39">/* pkhbt */</comment>

                            <if_stmt pos:start="1849:29" pos:end="1851:68"><if pos:start="1849:29" pos:end="1851:68">if <condition pos:start="1849:32" pos:end="1849:38">(<expr pos:start="1849:33" pos:end="1849:37"><name pos:start="1849:33" pos:end="1849:37">shift</name></expr>)</condition><block type="pseudo" pos:start="1851:33" pos:end="1851:68"><block_content pos:start="1851:33" pos:end="1851:68">

                                <expr_stmt pos:start="1851:33" pos:end="1851:68"><expr pos:start="1851:33" pos:end="1851:67"><call pos:start="1851:33" pos:end="1851:67"><name pos:start="1851:33" pos:end="1851:48">tcg_gen_shli_i32</name><argument_list pos:start="1851:49" pos:end="1851:67">(<argument pos:start="1851:50" pos:end="1851:53"><expr pos:start="1851:50" pos:end="1851:53"><name pos:start="1851:50" pos:end="1851:53">tmp2</name></expr></argument>, <argument pos:start="1851:56" pos:end="1851:59"><expr pos:start="1851:56" pos:end="1851:59"><name pos:start="1851:56" pos:end="1851:59">tmp2</name></expr></argument>, <argument pos:start="1851:62" pos:end="1851:66"><expr pos:start="1851:62" pos:end="1851:66"><name pos:start="1851:62" pos:end="1851:66">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1853:29" pos:end="1853:57"><expr pos:start="1853:29" pos:end="1853:56"><call pos:start="1853:29" pos:end="1853:56"><name pos:start="1853:29" pos:end="1853:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1853:47" pos:end="1853:56">(<argument pos:start="1853:48" pos:end="1853:50"><expr pos:start="1853:48" pos:end="1853:50"><name pos:start="1853:48" pos:end="1853:50">tmp</name></expr></argument>, <argument pos:start="1853:53" pos:end="1853:55"><expr pos:start="1853:53" pos:end="1853:55"><name pos:start="1853:53" pos:end="1853:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1855:29" pos:end="1855:69"><expr pos:start="1855:29" pos:end="1855:68"><call pos:start="1855:29" pos:end="1855:68"><name pos:start="1855:29" pos:end="1855:44">tcg_gen_andi_i32</name><argument_list pos:start="1855:45" pos:end="1855:68">(<argument pos:start="1855:46" pos:end="1855:49"><expr pos:start="1855:46" pos:end="1855:49"><name pos:start="1855:46" pos:end="1855:49">tmp2</name></expr></argument>, <argument pos:start="1855:52" pos:end="1855:55"><expr pos:start="1855:52" pos:end="1855:55"><name pos:start="1855:52" pos:end="1855:55">tmp2</name></expr></argument>, <argument pos:start="1855:58" pos:end="1855:67"><expr pos:start="1855:58" pos:end="1855:67"><literal type="number" pos:start="1855:58" pos:end="1855:67">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1859:25" pos:end="1859:55"><expr pos:start="1859:25" pos:end="1859:54"><call pos:start="1859:25" pos:end="1859:54"><name pos:start="1859:25" pos:end="1859:38">tcg_gen_or_i32</name><argument_list pos:start="1859:39" pos:end="1859:54">(<argument pos:start="1859:40" pos:end="1859:42"><expr pos:start="1859:40" pos:end="1859:42"><name pos:start="1859:40" pos:end="1859:42">tmp</name></expr></argument>, <argument pos:start="1859:45" pos:end="1859:47"><expr pos:start="1859:45" pos:end="1859:47"><name pos:start="1859:45" pos:end="1859:47">tmp</name></expr></argument>, <argument pos:start="1859:50" pos:end="1859:53"><expr pos:start="1859:50" pos:end="1859:53"><name pos:start="1859:50" pos:end="1859:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1861:25" pos:end="1861:48"><expr pos:start="1861:25" pos:end="1861:47"><call pos:start="1861:25" pos:end="1861:47"><name pos:start="1861:25" pos:end="1861:41">tcg_temp_free_i32</name><argument_list pos:start="1861:42" pos:end="1861:47">(<argument pos:start="1861:43" pos:end="1861:46"><expr pos:start="1861:43" pos:end="1861:46"><name pos:start="1861:43" pos:end="1861:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1863:25" pos:end="1863:46"><expr pos:start="1863:25" pos:end="1863:45"><call pos:start="1863:25" pos:end="1863:45"><name pos:start="1863:25" pos:end="1863:33">store_reg</name><argument_list pos:start="1863:34" pos:end="1863:45">(<argument pos:start="1863:35" pos:end="1863:35"><expr pos:start="1863:35" pos:end="1863:35"><name pos:start="1863:35" pos:end="1863:35">s</name></expr></argument>, <argument pos:start="1863:38" pos:end="1863:39"><expr pos:start="1863:38" pos:end="1863:39"><name pos:start="1863:38" pos:end="1863:39">rd</name></expr></argument>, <argument pos:start="1863:42" pos:end="1863:44"><expr pos:start="1863:42" pos:end="1863:44"><name pos:start="1863:42" pos:end="1863:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1865:23" pos:end="1903:21">else if <condition pos:start="1865:31" pos:end="1865:65">(<expr pos:start="1865:32" pos:end="1865:64"><operator pos:start="1865:32" pos:end="1865:32">(</operator><name pos:start="1865:33" pos:end="1865:36">insn</name> <operator pos:start="1865:38" pos:end="1865:38">&amp;</operator> <literal type="number" pos:start="1865:40" pos:end="1865:49">0x00200020</literal><operator pos:start="1865:50" pos:end="1865:50">)</operator> <operator pos:start="1865:52" pos:end="1865:53">==</operator> <literal type="number" pos:start="1865:55" pos:end="1865:64">0x00200000</literal></expr>)</condition> <block pos:start="1865:67" pos:end="1903:21">{<block_content pos:start="1869:25" pos:end="1901:46">

                        <comment type="block" pos:start="1867:25" pos:end="1867:37">/* [us]sat */</comment>

                        <expr_stmt pos:start="1869:25" pos:end="1869:46"><expr pos:start="1869:25" pos:end="1869:45"><name pos:start="1869:25" pos:end="1869:27">tmp</name> <operator pos:start="1869:29" pos:end="1869:29">=</operator> <call pos:start="1869:31" pos:end="1869:45"><name pos:start="1869:31" pos:end="1869:38">load_reg</name><argument_list pos:start="1869:39" pos:end="1869:45">(<argument pos:start="1869:40" pos:end="1869:40"><expr pos:start="1869:40" pos:end="1869:40"><name pos:start="1869:40" pos:end="1869:40">s</name></expr></argument>, <argument pos:start="1869:43" pos:end="1869:44"><expr pos:start="1869:43" pos:end="1869:44"><name pos:start="1869:43" pos:end="1869:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1871:25" pos:end="1871:51"><expr pos:start="1871:25" pos:end="1871:50"><name pos:start="1871:25" pos:end="1871:29">shift</name> <operator pos:start="1871:31" pos:end="1871:31">=</operator> <operator pos:start="1871:33" pos:end="1871:33">(</operator><name pos:start="1871:34" pos:end="1871:37">insn</name> <operator pos:start="1871:39" pos:end="1871:40">&gt;&gt;</operator> <literal type="number" pos:start="1871:42" pos:end="1871:42">7</literal><operator pos:start="1871:43" pos:end="1871:43">)</operator> <operator pos:start="1871:45" pos:end="1871:45">&amp;</operator> <literal type="number" pos:start="1871:47" pos:end="1871:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1873:25" pos:end="1885:25"><if pos:start="1873:25" pos:end="1881:25">if <condition pos:start="1873:28" pos:end="1873:44">(<expr pos:start="1873:29" pos:end="1873:43"><name pos:start="1873:29" pos:end="1873:32">insn</name> <operator pos:start="1873:34" pos:end="1873:34">&amp;</operator> <operator pos:start="1873:36" pos:end="1873:36">(</operator><literal type="number" pos:start="1873:37" pos:end="1873:37">1</literal> <operator pos:start="1873:39" pos:end="1873:40">&lt;&lt;</operator> <literal type="number" pos:start="1873:42" pos:end="1873:42">6</literal><operator pos:start="1873:43" pos:end="1873:43">)</operator></expr>)</condition> <block pos:start="1873:46" pos:end="1881:25">{<block_content pos:start="1875:29" pos:end="1879:62">

                            <if_stmt pos:start="1875:29" pos:end="1877:43"><if pos:start="1875:29" pos:end="1877:43">if <condition pos:start="1875:32" pos:end="1875:43">(<expr pos:start="1875:33" pos:end="1875:42"><name pos:start="1875:33" pos:end="1875:37">shift</name> <operator pos:start="1875:39" pos:end="1875:40">==</operator> <literal type="number" pos:start="1875:42" pos:end="1875:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1877:33" pos:end="1877:43"><block_content pos:start="1877:33" pos:end="1877:43">

                                <expr_stmt pos:start="1877:33" pos:end="1877:43"><expr pos:start="1877:33" pos:end="1877:42"><name pos:start="1877:33" pos:end="1877:37">shift</name> <operator pos:start="1877:39" pos:end="1877:39">=</operator> <literal type="number" pos:start="1877:41" pos:end="1877:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1879:29" pos:end="1879:62"><expr pos:start="1879:29" pos:end="1879:61"><call pos:start="1879:29" pos:end="1879:61"><name pos:start="1879:29" pos:end="1879:44">tcg_gen_sari_i32</name><argument_list pos:start="1879:45" pos:end="1879:61">(<argument pos:start="1879:46" pos:end="1879:48"><expr pos:start="1879:46" pos:end="1879:48"><name pos:start="1879:46" pos:end="1879:48">tmp</name></expr></argument>, <argument pos:start="1879:51" pos:end="1879:53"><expr pos:start="1879:51" pos:end="1879:53"><name pos:start="1879:51" pos:end="1879:53">tmp</name></expr></argument>, <argument pos:start="1879:56" pos:end="1879:60"><expr pos:start="1879:56" pos:end="1879:60"><name pos:start="1879:56" pos:end="1879:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1881:27" pos:end="1885:25">else <block pos:start="1881:32" pos:end="1885:25">{<block_content pos:start="1883:29" pos:end="1883:62">

                            <expr_stmt pos:start="1883:29" pos:end="1883:62"><expr pos:start="1883:29" pos:end="1883:61"><call pos:start="1883:29" pos:end="1883:61"><name pos:start="1883:29" pos:end="1883:44">tcg_gen_shli_i32</name><argument_list pos:start="1883:45" pos:end="1883:61">(<argument pos:start="1883:46" pos:end="1883:48"><expr pos:start="1883:46" pos:end="1883:48"><name pos:start="1883:46" pos:end="1883:48">tmp</name></expr></argument>, <argument pos:start="1883:51" pos:end="1883:53"><expr pos:start="1883:51" pos:end="1883:53"><name pos:start="1883:51" pos:end="1883:53">tmp</name></expr></argument>, <argument pos:start="1883:56" pos:end="1883:60"><expr pos:start="1883:56" pos:end="1883:60"><name pos:start="1883:56" pos:end="1883:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1887:25" pos:end="1887:49"><expr pos:start="1887:25" pos:end="1887:48"><name pos:start="1887:25" pos:end="1887:26">sh</name> <operator pos:start="1887:28" pos:end="1887:28">=</operator> <operator pos:start="1887:30" pos:end="1887:30">(</operator><name pos:start="1887:31" pos:end="1887:34">insn</name> <operator pos:start="1887:36" pos:end="1887:37">&gt;&gt;</operator> <literal type="number" pos:start="1887:39" pos:end="1887:40">16</literal><operator pos:start="1887:41" pos:end="1887:41">)</operator> <operator pos:start="1887:43" pos:end="1887:43">&amp;</operator> <literal type="number" pos:start="1887:45" pos:end="1887:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1889:25" pos:end="1889:49"><expr pos:start="1889:25" pos:end="1889:48"><name pos:start="1889:25" pos:end="1889:28">tmp2</name> <operator pos:start="1889:30" pos:end="1889:30">=</operator> <call pos:start="1889:32" pos:end="1889:48"><name pos:start="1889:32" pos:end="1889:44">tcg_const_i32</name><argument_list pos:start="1889:45" pos:end="1889:48">(<argument pos:start="1889:46" pos:end="1889:47"><expr pos:start="1889:46" pos:end="1889:47"><name pos:start="1889:46" pos:end="1889:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1891:25" pos:end="1897:67"><if pos:start="1891:25" pos:end="1893:67">if <condition pos:start="1891:28" pos:end="1891:45">(<expr pos:start="1891:29" pos:end="1891:44"><name pos:start="1891:29" pos:end="1891:32">insn</name> <operator pos:start="1891:34" pos:end="1891:34">&amp;</operator> <operator pos:start="1891:36" pos:end="1891:36">(</operator><literal type="number" pos:start="1891:37" pos:end="1891:37">1</literal> <operator pos:start="1891:39" pos:end="1891:40">&lt;&lt;</operator> <literal type="number" pos:start="1891:42" pos:end="1891:43">22</literal><operator pos:start="1891:44" pos:end="1891:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1893:27" pos:end="1893:67"><block_content pos:start="1893:27" pos:end="1893:67">

                          <expr_stmt pos:start="1893:27" pos:end="1893:67"><expr pos:start="1893:27" pos:end="1893:66"><call pos:start="1893:27" pos:end="1893:66"><name pos:start="1893:27" pos:end="1893:41">gen_helper_usat</name><argument_list pos:start="1893:42" pos:end="1893:66">(<argument pos:start="1893:43" pos:end="1893:45"><expr pos:start="1893:43" pos:end="1893:45"><name pos:start="1893:43" pos:end="1893:45">tmp</name></expr></argument>, <argument pos:start="1893:48" pos:end="1893:54"><expr pos:start="1893:48" pos:end="1893:54"><name pos:start="1893:48" pos:end="1893:54">cpu_env</name></expr></argument>, <argument pos:start="1893:57" pos:end="1893:59"><expr pos:start="1893:57" pos:end="1893:59"><name pos:start="1893:57" pos:end="1893:59">tmp</name></expr></argument>, <argument pos:start="1893:62" pos:end="1893:65"><expr pos:start="1893:62" pos:end="1893:65"><name pos:start="1893:62" pos:end="1893:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1895:25" pos:end="1897:67">else<block type="pseudo" pos:start="1897:27" pos:end="1897:67"><block_content pos:start="1897:27" pos:end="1897:67">

                          <expr_stmt pos:start="1897:27" pos:end="1897:67"><expr pos:start="1897:27" pos:end="1897:66"><call pos:start="1897:27" pos:end="1897:66"><name pos:start="1897:27" pos:end="1897:41">gen_helper_ssat</name><argument_list pos:start="1897:42" pos:end="1897:66">(<argument pos:start="1897:43" pos:end="1897:45"><expr pos:start="1897:43" pos:end="1897:45"><name pos:start="1897:43" pos:end="1897:45">tmp</name></expr></argument>, <argument pos:start="1897:48" pos:end="1897:54"><expr pos:start="1897:48" pos:end="1897:54"><name pos:start="1897:48" pos:end="1897:54">cpu_env</name></expr></argument>, <argument pos:start="1897:57" pos:end="1897:59"><expr pos:start="1897:57" pos:end="1897:59"><name pos:start="1897:57" pos:end="1897:59">tmp</name></expr></argument>, <argument pos:start="1897:62" pos:end="1897:65"><expr pos:start="1897:62" pos:end="1897:65"><name pos:start="1897:62" pos:end="1897:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1899:25" pos:end="1899:48"><expr pos:start="1899:25" pos:end="1899:47"><call pos:start="1899:25" pos:end="1899:47"><name pos:start="1899:25" pos:end="1899:41">tcg_temp_free_i32</name><argument_list pos:start="1899:42" pos:end="1899:47">(<argument pos:start="1899:43" pos:end="1899:46"><expr pos:start="1899:43" pos:end="1899:46"><name pos:start="1899:43" pos:end="1899:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1901:25" pos:end="1901:46"><expr pos:start="1901:25" pos:end="1901:45"><call pos:start="1901:25" pos:end="1901:45"><name pos:start="1901:25" pos:end="1901:33">store_reg</name><argument_list pos:start="1901:34" pos:end="1901:45">(<argument pos:start="1901:35" pos:end="1901:35"><expr pos:start="1901:35" pos:end="1901:35"><name pos:start="1901:35" pos:end="1901:35">s</name></expr></argument>, <argument pos:start="1901:38" pos:end="1901:39"><expr pos:start="1901:38" pos:end="1901:39"><name pos:start="1901:38" pos:end="1901:39">rd</name></expr></argument>, <argument pos:start="1901:42" pos:end="1901:44"><expr pos:start="1901:42" pos:end="1901:44"><name pos:start="1901:42" pos:end="1901:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1903:23" pos:end="1925:21">else if <condition pos:start="1903:31" pos:end="1903:65">(<expr pos:start="1903:32" pos:end="1903:64"><operator pos:start="1903:32" pos:end="1903:32">(</operator><name pos:start="1903:33" pos:end="1903:36">insn</name> <operator pos:start="1903:38" pos:end="1903:38">&amp;</operator> <literal type="number" pos:start="1903:40" pos:end="1903:49">0x00300fe0</literal><operator pos:start="1903:50" pos:end="1903:50">)</operator> <operator pos:start="1903:52" pos:end="1903:53">==</operator> <literal type="number" pos:start="1903:55" pos:end="1903:64">0x00200f20</literal></expr>)</condition> <block pos:start="1903:67" pos:end="1925:21">{<block_content pos:start="1907:25" pos:end="1923:46">

                        <comment type="block" pos:start="1905:25" pos:end="1905:39">/* [us]sat16 */</comment>

                        <expr_stmt pos:start="1907:25" pos:end="1907:46"><expr pos:start="1907:25" pos:end="1907:45"><name pos:start="1907:25" pos:end="1907:27">tmp</name> <operator pos:start="1907:29" pos:end="1907:29">=</operator> <call pos:start="1907:31" pos:end="1907:45"><name pos:start="1907:31" pos:end="1907:38">load_reg</name><argument_list pos:start="1907:39" pos:end="1907:45">(<argument pos:start="1907:40" pos:end="1907:40"><expr pos:start="1907:40" pos:end="1907:40"><name pos:start="1907:40" pos:end="1907:40">s</name></expr></argument>, <argument pos:start="1907:43" pos:end="1907:44"><expr pos:start="1907:43" pos:end="1907:44"><name pos:start="1907:43" pos:end="1907:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1909:25" pos:end="1909:49"><expr pos:start="1909:25" pos:end="1909:48"><name pos:start="1909:25" pos:end="1909:26">sh</name> <operator pos:start="1909:28" pos:end="1909:28">=</operator> <operator pos:start="1909:30" pos:end="1909:30">(</operator><name pos:start="1909:31" pos:end="1909:34">insn</name> <operator pos:start="1909:36" pos:end="1909:37">&gt;&gt;</operator> <literal type="number" pos:start="1909:39" pos:end="1909:40">16</literal><operator pos:start="1909:41" pos:end="1909:41">)</operator> <operator pos:start="1909:43" pos:end="1909:43">&amp;</operator> <literal type="number" pos:start="1909:45" pos:end="1909:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1911:25" pos:end="1911:49"><expr pos:start="1911:25" pos:end="1911:48"><name pos:start="1911:25" pos:end="1911:28">tmp2</name> <operator pos:start="1911:30" pos:end="1911:30">=</operator> <call pos:start="1911:32" pos:end="1911:48"><name pos:start="1911:32" pos:end="1911:44">tcg_const_i32</name><argument_list pos:start="1911:45" pos:end="1911:48">(<argument pos:start="1911:46" pos:end="1911:47"><expr pos:start="1911:46" pos:end="1911:47"><name pos:start="1911:46" pos:end="1911:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1913:25" pos:end="1919:69"><if pos:start="1913:25" pos:end="1915:69">if <condition pos:start="1913:28" pos:end="1913:45">(<expr pos:start="1913:29" pos:end="1913:44"><name pos:start="1913:29" pos:end="1913:32">insn</name> <operator pos:start="1913:34" pos:end="1913:34">&amp;</operator> <operator pos:start="1913:36" pos:end="1913:36">(</operator><literal type="number" pos:start="1913:37" pos:end="1913:37">1</literal> <operator pos:start="1913:39" pos:end="1913:40">&lt;&lt;</operator> <literal type="number" pos:start="1913:42" pos:end="1913:43">22</literal><operator pos:start="1913:44" pos:end="1913:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1915:27" pos:end="1915:69"><block_content pos:start="1915:27" pos:end="1915:69">

                          <expr_stmt pos:start="1915:27" pos:end="1915:69"><expr pos:start="1915:27" pos:end="1915:68"><call pos:start="1915:27" pos:end="1915:68"><name pos:start="1915:27" pos:end="1915:43">gen_helper_usat16</name><argument_list pos:start="1915:44" pos:end="1915:68">(<argument pos:start="1915:45" pos:end="1915:47"><expr pos:start="1915:45" pos:end="1915:47"><name pos:start="1915:45" pos:end="1915:47">tmp</name></expr></argument>, <argument pos:start="1915:50" pos:end="1915:56"><expr pos:start="1915:50" pos:end="1915:56"><name pos:start="1915:50" pos:end="1915:56">cpu_env</name></expr></argument>, <argument pos:start="1915:59" pos:end="1915:61"><expr pos:start="1915:59" pos:end="1915:61"><name pos:start="1915:59" pos:end="1915:61">tmp</name></expr></argument>, <argument pos:start="1915:64" pos:end="1915:67"><expr pos:start="1915:64" pos:end="1915:67"><name pos:start="1915:64" pos:end="1915:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1917:25" pos:end="1919:69">else<block type="pseudo" pos:start="1919:27" pos:end="1919:69"><block_content pos:start="1919:27" pos:end="1919:69">

                          <expr_stmt pos:start="1919:27" pos:end="1919:69"><expr pos:start="1919:27" pos:end="1919:68"><call pos:start="1919:27" pos:end="1919:68"><name pos:start="1919:27" pos:end="1919:43">gen_helper_ssat16</name><argument_list pos:start="1919:44" pos:end="1919:68">(<argument pos:start="1919:45" pos:end="1919:47"><expr pos:start="1919:45" pos:end="1919:47"><name pos:start="1919:45" pos:end="1919:47">tmp</name></expr></argument>, <argument pos:start="1919:50" pos:end="1919:56"><expr pos:start="1919:50" pos:end="1919:56"><name pos:start="1919:50" pos:end="1919:56">cpu_env</name></expr></argument>, <argument pos:start="1919:59" pos:end="1919:61"><expr pos:start="1919:59" pos:end="1919:61"><name pos:start="1919:59" pos:end="1919:61">tmp</name></expr></argument>, <argument pos:start="1919:64" pos:end="1919:67"><expr pos:start="1919:64" pos:end="1919:67"><name pos:start="1919:64" pos:end="1919:67">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1921:25" pos:end="1921:48"><expr pos:start="1921:25" pos:end="1921:47"><call pos:start="1921:25" pos:end="1921:47"><name pos:start="1921:25" pos:end="1921:41">tcg_temp_free_i32</name><argument_list pos:start="1921:42" pos:end="1921:47">(<argument pos:start="1921:43" pos:end="1921:46"><expr pos:start="1921:43" pos:end="1921:46"><name pos:start="1921:43" pos:end="1921:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1923:25" pos:end="1923:46"><expr pos:start="1923:25" pos:end="1923:45"><call pos:start="1923:25" pos:end="1923:45"><name pos:start="1923:25" pos:end="1923:33">store_reg</name><argument_list pos:start="1923:34" pos:end="1923:45">(<argument pos:start="1923:35" pos:end="1923:35"><expr pos:start="1923:35" pos:end="1923:35"><name pos:start="1923:35" pos:end="1923:35">s</name></expr></argument>, <argument pos:start="1923:38" pos:end="1923:39"><expr pos:start="1923:38" pos:end="1923:39"><name pos:start="1923:38" pos:end="1923:39">rd</name></expr></argument>, <argument pos:start="1923:42" pos:end="1923:44"><expr pos:start="1923:42" pos:end="1923:44"><name pos:start="1923:42" pos:end="1923:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1925:23" pos:end="1945:21">else if <condition pos:start="1925:31" pos:end="1925:65">(<expr pos:start="1925:32" pos:end="1925:64"><operator pos:start="1925:32" pos:end="1925:32">(</operator><name pos:start="1925:33" pos:end="1925:36">insn</name> <operator pos:start="1925:38" pos:end="1925:38">&amp;</operator> <literal type="number" pos:start="1925:40" pos:end="1925:49">0x00700fe0</literal><operator pos:start="1925:50" pos:end="1925:50">)</operator> <operator pos:start="1925:52" pos:end="1925:53">==</operator> <literal type="number" pos:start="1925:55" pos:end="1925:64">0x00000fa0</literal></expr>)</condition> <block pos:start="1925:67" pos:end="1945:21">{<block_content pos:start="1929:25" pos:end="1943:46">

                        <comment type="block" pos:start="1927:25" pos:end="1927:44">/* Select bytes.  */</comment>

                        <expr_stmt pos:start="1929:25" pos:end="1929:46"><expr pos:start="1929:25" pos:end="1929:45"><name pos:start="1929:25" pos:end="1929:27">tmp</name> <operator pos:start="1929:29" pos:end="1929:29">=</operator> <call pos:start="1929:31" pos:end="1929:45"><name pos:start="1929:31" pos:end="1929:38">load_reg</name><argument_list pos:start="1929:39" pos:end="1929:45">(<argument pos:start="1929:40" pos:end="1929:40"><expr pos:start="1929:40" pos:end="1929:40"><name pos:start="1929:40" pos:end="1929:40">s</name></expr></argument>, <argument pos:start="1929:43" pos:end="1929:44"><expr pos:start="1929:43" pos:end="1929:44"><name pos:start="1929:43" pos:end="1929:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1931:25" pos:end="1931:47"><expr pos:start="1931:25" pos:end="1931:46"><name pos:start="1931:25" pos:end="1931:28">tmp2</name> <operator pos:start="1931:30" pos:end="1931:30">=</operator> <call pos:start="1931:32" pos:end="1931:46"><name pos:start="1931:32" pos:end="1931:39">load_reg</name><argument_list pos:start="1931:40" pos:end="1931:46">(<argument pos:start="1931:41" pos:end="1931:41"><expr pos:start="1931:41" pos:end="1931:41"><name pos:start="1931:41" pos:end="1931:41">s</name></expr></argument>, <argument pos:start="1931:44" pos:end="1931:45"><expr pos:start="1931:44" pos:end="1931:45"><name pos:start="1931:44" pos:end="1931:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1933:25" pos:end="1933:50"><expr pos:start="1933:25" pos:end="1933:49"><name pos:start="1933:25" pos:end="1933:28">tmp3</name> <operator pos:start="1933:30" pos:end="1933:30">=</operator> <call pos:start="1933:32" pos:end="1933:49"><name pos:start="1933:32" pos:end="1933:47">tcg_temp_new_i32</name><argument_list pos:start="1933:48" pos:end="1933:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1935:25" pos:end="1935:81"><expr pos:start="1935:25" pos:end="1935:80"><call pos:start="1935:25" pos:end="1935:80"><name pos:start="1935:25" pos:end="1935:38">tcg_gen_ld_i32</name><argument_list pos:start="1935:39" pos:end="1935:80">(<argument pos:start="1935:40" pos:end="1935:43"><expr pos:start="1935:40" pos:end="1935:43"><name pos:start="1935:40" pos:end="1935:43">tmp3</name></expr></argument>, <argument pos:start="1935:46" pos:end="1935:52"><expr pos:start="1935:46" pos:end="1935:52"><name pos:start="1935:46" pos:end="1935:52">cpu_env</name></expr></argument>, <argument pos:start="1935:55" pos:end="1935:79"><expr pos:start="1935:55" pos:end="1935:79"><call pos:start="1935:55" pos:end="1935:79"><name pos:start="1935:55" pos:end="1935:62">offsetof</name><argument_list pos:start="1935:63" pos:end="1935:79">(<argument pos:start="1935:64" pos:end="1935:74"><expr pos:start="1935:64" pos:end="1935:74"><name pos:start="1935:64" pos:end="1935:74">CPUARMState</name></expr></argument>, <argument pos:start="1935:77" pos:end="1935:78"><expr pos:start="1935:77" pos:end="1935:78"><name pos:start="1935:77" pos:end="1935:78">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1937:25" pos:end="1937:67"><expr pos:start="1937:25" pos:end="1937:66"><call pos:start="1937:25" pos:end="1937:66"><name pos:start="1937:25" pos:end="1937:44">gen_helper_sel_flags</name><argument_list pos:start="1937:45" pos:end="1937:66">(<argument pos:start="1937:46" pos:end="1937:48"><expr pos:start="1937:46" pos:end="1937:48"><name pos:start="1937:46" pos:end="1937:48">tmp</name></expr></argument>, <argument pos:start="1937:51" pos:end="1937:54"><expr pos:start="1937:51" pos:end="1937:54"><name pos:start="1937:51" pos:end="1937:54">tmp3</name></expr></argument>, <argument pos:start="1937:57" pos:end="1937:59"><expr pos:start="1937:57" pos:end="1937:59"><name pos:start="1937:57" pos:end="1937:59">tmp</name></expr></argument>, <argument pos:start="1937:62" pos:end="1937:65"><expr pos:start="1937:62" pos:end="1937:65"><name pos:start="1937:62" pos:end="1937:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1939:25" pos:end="1939:48"><expr pos:start="1939:25" pos:end="1939:47"><call pos:start="1939:25" pos:end="1939:47"><name pos:start="1939:25" pos:end="1939:41">tcg_temp_free_i32</name><argument_list pos:start="1939:42" pos:end="1939:47">(<argument pos:start="1939:43" pos:end="1939:46"><expr pos:start="1939:43" pos:end="1939:46"><name pos:start="1939:43" pos:end="1939:46">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1941:25" pos:end="1941:48"><expr pos:start="1941:25" pos:end="1941:47"><call pos:start="1941:25" pos:end="1941:47"><name pos:start="1941:25" pos:end="1941:41">tcg_temp_free_i32</name><argument_list pos:start="1941:42" pos:end="1941:47">(<argument pos:start="1941:43" pos:end="1941:46"><expr pos:start="1941:43" pos:end="1941:46"><name pos:start="1941:43" pos:end="1941:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1943:25" pos:end="1943:46"><expr pos:start="1943:25" pos:end="1943:45"><call pos:start="1943:25" pos:end="1943:45"><name pos:start="1943:25" pos:end="1943:33">store_reg</name><argument_list pos:start="1943:34" pos:end="1943:45">(<argument pos:start="1943:35" pos:end="1943:35"><expr pos:start="1943:35" pos:end="1943:35"><name pos:start="1943:35" pos:end="1943:35">s</name></expr></argument>, <argument pos:start="1943:38" pos:end="1943:39"><expr pos:start="1943:38" pos:end="1943:39"><name pos:start="1943:38" pos:end="1943:39">rd</name></expr></argument>, <argument pos:start="1943:42" pos:end="1943:44"><expr pos:start="1943:42" pos:end="1943:44"><name pos:start="1943:42" pos:end="1943:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1945:23" pos:end="1999:21">else if <condition pos:start="1945:31" pos:end="1945:65">(<expr pos:start="1945:32" pos:end="1945:64"><operator pos:start="1945:32" pos:end="1945:32">(</operator><name pos:start="1945:33" pos:end="1945:36">insn</name> <operator pos:start="1945:38" pos:end="1945:38">&amp;</operator> <literal type="number" pos:start="1945:40" pos:end="1945:49">0x000003e0</literal><operator pos:start="1945:50" pos:end="1945:50">)</operator> <operator pos:start="1945:52" pos:end="1945:53">==</operator> <literal type="number" pos:start="1945:55" pos:end="1945:64">0x00000060</literal></expr>)</condition> <block pos:start="1945:67" pos:end="1999:21">{<block_content pos:start="1947:25" pos:end="1997:46">

                        <expr_stmt pos:start="1947:25" pos:end="1947:46"><expr pos:start="1947:25" pos:end="1947:45"><name pos:start="1947:25" pos:end="1947:27">tmp</name> <operator pos:start="1947:29" pos:end="1947:29">=</operator> <call pos:start="1947:31" pos:end="1947:45"><name pos:start="1947:31" pos:end="1947:38">load_reg</name><argument_list pos:start="1947:39" pos:end="1947:45">(<argument pos:start="1947:40" pos:end="1947:40"><expr pos:start="1947:40" pos:end="1947:40"><name pos:start="1947:40" pos:end="1947:40">s</name></expr></argument>, <argument pos:start="1947:43" pos:end="1947:44"><expr pos:start="1947:43" pos:end="1947:44"><name pos:start="1947:43" pos:end="1947:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1949:25" pos:end="1949:49"><expr pos:start="1949:25" pos:end="1949:48"><name pos:start="1949:25" pos:end="1949:29">shift</name> <operator pos:start="1949:31" pos:end="1949:31">=</operator> <operator pos:start="1949:33" pos:end="1949:33">(</operator><name pos:start="1949:34" pos:end="1949:37">insn</name> <operator pos:start="1949:39" pos:end="1949:40">&gt;&gt;</operator> <literal type="number" pos:start="1949:42" pos:end="1949:43">10</literal><operator pos:start="1949:44" pos:end="1949:44">)</operator> <operator pos:start="1949:46" pos:end="1949:46">&amp;</operator> <literal type="number" pos:start="1949:48" pos:end="1949:48">3</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="1951:25" pos:end="1953:61">/* ??? In many cases it's not necessary to do a

                           rotate, a shift is sufficient.  */</comment>

                        <if_stmt pos:start="1955:25" pos:end="1957:67"><if pos:start="1955:25" pos:end="1957:67">if <condition pos:start="1955:28" pos:end="1955:39">(<expr pos:start="1955:29" pos:end="1955:38"><name pos:start="1955:29" pos:end="1955:33">shift</name> <operator pos:start="1955:35" pos:end="1955:36">!=</operator> <literal type="number" pos:start="1955:38" pos:end="1955:38">0</literal></expr>)</condition><block type="pseudo" pos:start="1957:29" pos:end="1957:67"><block_content pos:start="1957:29" pos:end="1957:67">

                            <expr_stmt pos:start="1957:29" pos:end="1957:67"><expr pos:start="1957:29" pos:end="1957:66"><call pos:start="1957:29" pos:end="1957:66"><name pos:start="1957:29" pos:end="1957:45">tcg_gen_rotri_i32</name><argument_list pos:start="1957:46" pos:end="1957:66">(<argument pos:start="1957:47" pos:end="1957:49"><expr pos:start="1957:47" pos:end="1957:49"><name pos:start="1957:47" pos:end="1957:49">tmp</name></expr></argument>, <argument pos:start="1957:52" pos:end="1957:54"><expr pos:start="1957:52" pos:end="1957:54"><name pos:start="1957:52" pos:end="1957:54">tmp</name></expr></argument>, <argument pos:start="1957:57" pos:end="1957:65"><expr pos:start="1957:57" pos:end="1957:65"><name pos:start="1957:57" pos:end="1957:61">shift</name> <operator pos:start="1957:63" pos:end="1957:63">*</operator> <literal type="number" pos:start="1957:65" pos:end="1957:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1959:25" pos:end="1959:47"><expr pos:start="1959:25" pos:end="1959:46"><name pos:start="1959:25" pos:end="1959:27">op1</name> <operator pos:start="1959:29" pos:end="1959:29">=</operator> <operator pos:start="1959:31" pos:end="1959:31">(</operator><name pos:start="1959:32" pos:end="1959:35">insn</name> <operator pos:start="1959:37" pos:end="1959:38">&gt;&gt;</operator> <literal type="number" pos:start="1959:40" pos:end="1959:41">20</literal><operator pos:start="1959:42" pos:end="1959:42">)</operator> <operator pos:start="1959:44" pos:end="1959:44">&amp;</operator> <literal type="number" pos:start="1959:46" pos:end="1959:46">7</literal></expr>;</expr_stmt>

                        <switch pos:start="1961:25" pos:end="1977:25">switch <condition pos:start="1961:32" pos:end="1961:36">(<expr pos:start="1961:33" pos:end="1961:35"><name pos:start="1961:33" pos:end="1961:35">op1</name></expr>)</condition> <block pos:start="1961:38" pos:end="1977:25">{<block_content pos:start="1963:25" pos:end="1975:49">

                        <case pos:start="1963:25" pos:end="1963:31">case <expr pos:start="1963:30" pos:end="1963:30"><literal type="number" pos:start="1963:30" pos:end="1963:30">0</literal></expr>:</case> <expr_stmt pos:start="1963:33" pos:end="1963:48"><expr pos:start="1963:33" pos:end="1963:47"><call pos:start="1963:33" pos:end="1963:47"><name pos:start="1963:33" pos:end="1963:42">gen_sxtb16</name><argument_list pos:start="1963:43" pos:end="1963:47">(<argument pos:start="1963:44" pos:end="1963:46"><expr pos:start="1963:44" pos:end="1963:46"><name pos:start="1963:44" pos:end="1963:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1963:51" pos:end="1963:56">break;</break>

                        <case pos:start="1965:25" pos:end="1965:31">case <expr pos:start="1965:30" pos:end="1965:30"><literal type="number" pos:start="1965:30" pos:end="1965:30">2</literal></expr>:</case> <expr_stmt pos:start="1965:33" pos:end="1965:46"><expr pos:start="1965:33" pos:end="1965:45"><call pos:start="1965:33" pos:end="1965:45"><name pos:start="1965:33" pos:end="1965:40">gen_sxtb</name><argument_list pos:start="1965:41" pos:end="1965:45">(<argument pos:start="1965:42" pos:end="1965:44"><expr pos:start="1965:42" pos:end="1965:44"><name pos:start="1965:42" pos:end="1965:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1965:51" pos:end="1965:56">break;</break>

                        <case pos:start="1967:25" pos:end="1967:31">case <expr pos:start="1967:30" pos:end="1967:30"><literal type="number" pos:start="1967:30" pos:end="1967:30">3</literal></expr>:</case> <expr_stmt pos:start="1967:33" pos:end="1967:46"><expr pos:start="1967:33" pos:end="1967:45"><call pos:start="1967:33" pos:end="1967:45"><name pos:start="1967:33" pos:end="1967:40">gen_sxth</name><argument_list pos:start="1967:41" pos:end="1967:45">(<argument pos:start="1967:42" pos:end="1967:44"><expr pos:start="1967:42" pos:end="1967:44"><name pos:start="1967:42" pos:end="1967:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1967:51" pos:end="1967:56">break;</break>

                        <case pos:start="1969:25" pos:end="1969:31">case <expr pos:start="1969:30" pos:end="1969:30"><literal type="number" pos:start="1969:30" pos:end="1969:30">4</literal></expr>:</case> <expr_stmt pos:start="1969:33" pos:end="1969:48"><expr pos:start="1969:33" pos:end="1969:47"><call pos:start="1969:33" pos:end="1969:47"><name pos:start="1969:33" pos:end="1969:42">gen_uxtb16</name><argument_list pos:start="1969:43" pos:end="1969:47">(<argument pos:start="1969:44" pos:end="1969:46"><expr pos:start="1969:44" pos:end="1969:46"><name pos:start="1969:44" pos:end="1969:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1969:51" pos:end="1969:56">break;</break>

                        <case pos:start="1971:25" pos:end="1971:31">case <expr pos:start="1971:30" pos:end="1971:30"><literal type="number" pos:start="1971:30" pos:end="1971:30">6</literal></expr>:</case> <expr_stmt pos:start="1971:33" pos:end="1971:46"><expr pos:start="1971:33" pos:end="1971:45"><call pos:start="1971:33" pos:end="1971:45"><name pos:start="1971:33" pos:end="1971:40">gen_uxtb</name><argument_list pos:start="1971:41" pos:end="1971:45">(<argument pos:start="1971:42" pos:end="1971:44"><expr pos:start="1971:42" pos:end="1971:44"><name pos:start="1971:42" pos:end="1971:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1971:51" pos:end="1971:56">break;</break>

                        <case pos:start="1973:25" pos:end="1973:31">case <expr pos:start="1973:30" pos:end="1973:30"><literal type="number" pos:start="1973:30" pos:end="1973:30">7</literal></expr>:</case> <expr_stmt pos:start="1973:33" pos:end="1973:46"><expr pos:start="1973:33" pos:end="1973:45"><call pos:start="1973:33" pos:end="1973:45"><name pos:start="1973:33" pos:end="1973:40">gen_uxth</name><argument_list pos:start="1973:41" pos:end="1973:45">(<argument pos:start="1973:42" pos:end="1973:44"><expr pos:start="1973:42" pos:end="1973:44"><name pos:start="1973:42" pos:end="1973:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1973:51" pos:end="1973:56">break;</break>

                        <default pos:start="1975:25" pos:end="1975:32">default:</default> <goto pos:start="1975:34" pos:end="1975:49">goto <name pos:start="1975:39" pos:end="1975:48">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <if_stmt pos:start="1979:25" pos:end="1995:25"><if pos:start="1979:25" pos:end="1995:25">if <condition pos:start="1979:28" pos:end="1979:37">(<expr pos:start="1979:29" pos:end="1979:36"><name pos:start="1979:29" pos:end="1979:30">rn</name> <operator pos:start="1979:32" pos:end="1979:33">!=</operator> <literal type="number" pos:start="1979:35" pos:end="1979:36">15</literal></expr>)</condition> <block pos:start="1979:39" pos:end="1995:25">{<block_content pos:start="1981:29" pos:end="1993:29">

                            <expr_stmt pos:start="1981:29" pos:end="1981:51"><expr pos:start="1981:29" pos:end="1981:50"><name pos:start="1981:29" pos:end="1981:32">tmp2</name> <operator pos:start="1981:34" pos:end="1981:34">=</operator> <call pos:start="1981:36" pos:end="1981:50"><name pos:start="1981:36" pos:end="1981:43">load_reg</name><argument_list pos:start="1981:44" pos:end="1981:50">(<argument pos:start="1981:45" pos:end="1981:45"><expr pos:start="1981:45" pos:end="1981:45"><name pos:start="1981:45" pos:end="1981:45">s</name></expr></argument>, <argument pos:start="1981:48" pos:end="1981:49"><expr pos:start="1981:48" pos:end="1981:49"><name pos:start="1981:48" pos:end="1981:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1983:29" pos:end="1993:29"><if pos:start="1983:29" pos:end="1987:29">if <condition pos:start="1983:32" pos:end="1983:47">(<expr pos:start="1983:33" pos:end="1983:46"><operator pos:start="1983:33" pos:end="1983:33">(</operator><name pos:start="1983:34" pos:end="1983:36">op1</name> <operator pos:start="1983:38" pos:end="1983:38">&amp;</operator> <literal type="number" pos:start="1983:40" pos:end="1983:40">3</literal><operator pos:start="1983:41" pos:end="1983:41">)</operator> <operator pos:start="1983:43" pos:end="1983:44">==</operator> <literal type="number" pos:start="1983:46" pos:end="1983:46">0</literal></expr>)</condition> <block pos:start="1983:49" pos:end="1987:29">{<block_content pos:start="1985:33" pos:end="1985:53">

                                <expr_stmt pos:start="1985:33" pos:end="1985:53"><expr pos:start="1985:33" pos:end="1985:52"><call pos:start="1985:33" pos:end="1985:52"><name pos:start="1985:33" pos:end="1985:41">gen_add16</name><argument_list pos:start="1985:42" pos:end="1985:52">(<argument pos:start="1985:43" pos:end="1985:45"><expr pos:start="1985:43" pos:end="1985:45"><name pos:start="1985:43" pos:end="1985:45">tmp</name></expr></argument>, <argument pos:start="1985:48" pos:end="1985:51"><expr pos:start="1985:48" pos:end="1985:51"><name pos:start="1985:48" pos:end="1985:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1987:31" pos:end="1993:29">else <block pos:start="1987:36" pos:end="1993:29">{<block_content pos:start="1989:33" pos:end="1991:56">

                                <expr_stmt pos:start="1989:33" pos:end="1989:64"><expr pos:start="1989:33" pos:end="1989:63"><call pos:start="1989:33" pos:end="1989:63"><name pos:start="1989:33" pos:end="1989:47">tcg_gen_add_i32</name><argument_list pos:start="1989:48" pos:end="1989:63">(<argument pos:start="1989:49" pos:end="1989:51"><expr pos:start="1989:49" pos:end="1989:51"><name pos:start="1989:49" pos:end="1989:51">tmp</name></expr></argument>, <argument pos:start="1989:54" pos:end="1989:56"><expr pos:start="1989:54" pos:end="1989:56"><name pos:start="1989:54" pos:end="1989:56">tmp</name></expr></argument>, <argument pos:start="1989:59" pos:end="1989:62"><expr pos:start="1989:59" pos:end="1989:62"><name pos:start="1989:59" pos:end="1989:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1991:33" pos:end="1991:56"><expr pos:start="1991:33" pos:end="1991:55"><call pos:start="1991:33" pos:end="1991:55"><name pos:start="1991:33" pos:end="1991:49">tcg_temp_free_i32</name><argument_list pos:start="1991:50" pos:end="1991:55">(<argument pos:start="1991:51" pos:end="1991:54"><expr pos:start="1991:51" pos:end="1991:54"><name pos:start="1991:51" pos:end="1991:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1997:25" pos:end="1997:46"><expr pos:start="1997:25" pos:end="1997:45"><call pos:start="1997:25" pos:end="1997:45"><name pos:start="1997:25" pos:end="1997:33">store_reg</name><argument_list pos:start="1997:34" pos:end="1997:45">(<argument pos:start="1997:35" pos:end="1997:35"><expr pos:start="1997:35" pos:end="1997:35"><name pos:start="1997:35" pos:end="1997:35">s</name></expr></argument>, <argument pos:start="1997:38" pos:end="1997:39"><expr pos:start="1997:38" pos:end="1997:39"><name pos:start="1997:38" pos:end="1997:39">rd</name></expr></argument>, <argument pos:start="1997:42" pos:end="1997:44"><expr pos:start="1997:42" pos:end="1997:44"><name pos:start="1997:42" pos:end="1997:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1999:23" pos:end="2033:21">else if <condition pos:start="1999:31" pos:end="1999:65">(<expr pos:start="1999:32" pos:end="1999:64"><operator pos:start="1999:32" pos:end="1999:32">(</operator><name pos:start="1999:33" pos:end="1999:36">insn</name> <operator pos:start="1999:38" pos:end="1999:38">&amp;</operator> <literal type="number" pos:start="1999:40" pos:end="1999:49">0x003f0f60</literal><operator pos:start="1999:50" pos:end="1999:50">)</operator> <operator pos:start="1999:52" pos:end="1999:53">==</operator> <literal type="number" pos:start="1999:55" pos:end="1999:64">0x003f0f20</literal></expr>)</condition> <block pos:start="1999:67" pos:end="2033:21">{<block_content pos:start="2003:25" pos:end="2031:46">

                        <comment type="block" pos:start="2001:25" pos:end="2001:33">/* rev */</comment>

                        <expr_stmt pos:start="2003:25" pos:end="2003:46"><expr pos:start="2003:25" pos:end="2003:45"><name pos:start="2003:25" pos:end="2003:27">tmp</name> <operator pos:start="2003:29" pos:end="2003:29">=</operator> <call pos:start="2003:31" pos:end="2003:45"><name pos:start="2003:31" pos:end="2003:38">load_reg</name><argument_list pos:start="2003:39" pos:end="2003:45">(<argument pos:start="2003:40" pos:end="2003:40"><expr pos:start="2003:40" pos:end="2003:40"><name pos:start="2003:40" pos:end="2003:40">s</name></expr></argument>, <argument pos:start="2003:43" pos:end="2003:44"><expr pos:start="2003:43" pos:end="2003:44"><name pos:start="2003:43" pos:end="2003:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2005:25" pos:end="2029:25"><if pos:start="2005:25" pos:end="2019:25">if <condition pos:start="2005:28" pos:end="2005:45">(<expr pos:start="2005:29" pos:end="2005:44"><name pos:start="2005:29" pos:end="2005:32">insn</name> <operator pos:start="2005:34" pos:end="2005:34">&amp;</operator> <operator pos:start="2005:36" pos:end="2005:36">(</operator><literal type="number" pos:start="2005:37" pos:end="2005:37">1</literal> <operator pos:start="2005:39" pos:end="2005:40">&lt;&lt;</operator> <literal type="number" pos:start="2005:42" pos:end="2005:43">22</literal><operator pos:start="2005:44" pos:end="2005:44">)</operator></expr>)</condition> <block pos:start="2005:47" pos:end="2019:25">{<block_content pos:start="2007:29" pos:end="2017:29">

                            <if_stmt pos:start="2007:29" pos:end="2017:29"><if pos:start="2007:29" pos:end="2011:29">if <condition pos:start="2007:32" pos:end="2007:48">(<expr pos:start="2007:33" pos:end="2007:47"><name pos:start="2007:33" pos:end="2007:36">insn</name> <operator pos:start="2007:38" pos:end="2007:38">&amp;</operator> <operator pos:start="2007:40" pos:end="2007:40">(</operator><literal type="number" pos:start="2007:41" pos:end="2007:41">1</literal> <operator pos:start="2007:43" pos:end="2007:44">&lt;&lt;</operator> <literal type="number" pos:start="2007:46" pos:end="2007:46">7</literal><operator pos:start="2007:47" pos:end="2007:47">)</operator></expr>)</condition> <block pos:start="2007:50" pos:end="2011:29">{<block_content pos:start="2009:33" pos:end="2009:47">

                                <expr_stmt pos:start="2009:33" pos:end="2009:47"><expr pos:start="2009:33" pos:end="2009:46"><call pos:start="2009:33" pos:end="2009:46"><name pos:start="2009:33" pos:end="2009:41">gen_revsh</name><argument_list pos:start="2009:42" pos:end="2009:46">(<argument pos:start="2009:43" pos:end="2009:45"><expr pos:start="2009:43" pos:end="2009:45"><name pos:start="2009:43" pos:end="2009:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2011:31" pos:end="2017:29">else <block pos:start="2011:36" pos:end="2017:29">{<block_content pos:start="2013:33" pos:end="2015:58">

                                <expr_stmt pos:start="2013:33" pos:end="2013:42"><expr pos:start="2013:33" pos:end="2013:41"><call pos:start="2013:33" pos:end="2013:41"><name pos:start="2013:33" pos:end="2013:36">ARCH</name><argument_list pos:start="2013:37" pos:end="2013:41">(<argument pos:start="2013:38" pos:end="2013:40"><expr pos:start="2013:38" pos:end="2013:40"><literal type="number" pos:start="2013:38" pos:end="2013:40">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2015:33" pos:end="2015:58"><expr pos:start="2015:33" pos:end="2015:57"><call pos:start="2015:33" pos:end="2015:57"><name pos:start="2015:33" pos:end="2015:47">gen_helper_rbit</name><argument_list pos:start="2015:48" pos:end="2015:57">(<argument pos:start="2015:49" pos:end="2015:51"><expr pos:start="2015:49" pos:end="2015:51"><name pos:start="2015:49" pos:end="2015:51">tmp</name></expr></argument>, <argument pos:start="2015:54" pos:end="2015:56"><expr pos:start="2015:54" pos:end="2015:56"><name pos:start="2015:54" pos:end="2015:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2019:27" pos:end="2029:25">else <block pos:start="2019:32" pos:end="2029:25">{<block_content pos:start="2021:29" pos:end="2027:62">

                            <if_stmt pos:start="2021:29" pos:end="2027:62"><if pos:start="2021:29" pos:end="2023:47">if <condition pos:start="2021:32" pos:end="2021:48">(<expr pos:start="2021:33" pos:end="2021:47"><name pos:start="2021:33" pos:end="2021:36">insn</name> <operator pos:start="2021:38" pos:end="2021:38">&amp;</operator> <operator pos:start="2021:40" pos:end="2021:40">(</operator><literal type="number" pos:start="2021:41" pos:end="2021:41">1</literal> <operator pos:start="2021:43" pos:end="2021:44">&lt;&lt;</operator> <literal type="number" pos:start="2021:46" pos:end="2021:46">7</literal><operator pos:start="2021:47" pos:end="2021:47">)</operator></expr>)</condition><block type="pseudo" pos:start="2023:33" pos:end="2023:47"><block_content pos:start="2023:33" pos:end="2023:47">

                                <expr_stmt pos:start="2023:33" pos:end="2023:47"><expr pos:start="2023:33" pos:end="2023:46"><call pos:start="2023:33" pos:end="2023:46"><name pos:start="2023:33" pos:end="2023:41">gen_rev16</name><argument_list pos:start="2023:42" pos:end="2023:46">(<argument pos:start="2023:43" pos:end="2023:45"><expr pos:start="2023:43" pos:end="2023:45"><name pos:start="2023:43" pos:end="2023:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="2025:29" pos:end="2027:62">else<block type="pseudo" pos:start="2027:33" pos:end="2027:62"><block_content pos:start="2027:33" pos:end="2027:62">

                                <expr_stmt pos:start="2027:33" pos:end="2027:62"><expr pos:start="2027:33" pos:end="2027:61"><call pos:start="2027:33" pos:end="2027:61"><name pos:start="2027:33" pos:end="2027:51">tcg_gen_bswap32_i32</name><argument_list pos:start="2027:52" pos:end="2027:61">(<argument pos:start="2027:53" pos:end="2027:55"><expr pos:start="2027:53" pos:end="2027:55"><name pos:start="2027:53" pos:end="2027:55">tmp</name></expr></argument>, <argument pos:start="2027:58" pos:end="2027:60"><expr pos:start="2027:58" pos:end="2027:60"><name pos:start="2027:58" pos:end="2027:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2031:25" pos:end="2031:46"><expr pos:start="2031:25" pos:end="2031:45"><call pos:start="2031:25" pos:end="2031:45"><name pos:start="2031:25" pos:end="2031:33">store_reg</name><argument_list pos:start="2031:34" pos:end="2031:45">(<argument pos:start="2031:35" pos:end="2031:35"><expr pos:start="2031:35" pos:end="2031:35"><name pos:start="2031:35" pos:end="2031:35">s</name></expr></argument>, <argument pos:start="2031:38" pos:end="2031:39"><expr pos:start="2031:38" pos:end="2031:39"><name pos:start="2031:38" pos:end="2031:39">rd</name></expr></argument>, <argument pos:start="2031:42" pos:end="2031:44"><expr pos:start="2031:42" pos:end="2031:44"><name pos:start="2031:42" pos:end="2031:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2033:23" pos:end="2037:21">else <block pos:start="2033:28" pos:end="2037:21">{<block_content pos:start="2035:25" pos:end="2035:40">

                        <goto pos:start="2035:25" pos:end="2035:40">goto <name pos:start="2035:30" pos:end="2035:39">illegal_op</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="2039:21" pos:end="2039:26">break;</break>

                <case pos:start="2041:17" pos:end="2041:23">case <expr pos:start="2041:22" pos:end="2041:22"><literal type="number" pos:start="2041:22" pos:end="2041:22">2</literal></expr>:</case> <comment type="block" pos:start="2041:25" pos:end="2041:51">/* Multiplies (Type 3).  */</comment>

                    <switch pos:start="2043:21" pos:end="2225:21">switch <condition pos:start="2043:28" pos:end="2043:47">(<expr pos:start="2043:29" pos:end="2043:46"><operator pos:start="2043:29" pos:end="2043:29">(</operator><name pos:start="2043:30" pos:end="2043:33">insn</name> <operator pos:start="2043:35" pos:end="2043:36">&gt;&gt;</operator> <literal type="number" pos:start="2043:38" pos:end="2043:39">20</literal><operator pos:start="2043:40" pos:end="2043:40">)</operator> <operator pos:start="2043:42" pos:end="2043:42">&amp;</operator> <literal type="number" pos:start="2043:44" pos:end="2043:46">0x7</literal></expr>)</condition> <block pos:start="2043:49" pos:end="2225:21">{<block_content pos:start="2045:21" pos:end="2223:40">

                    <case pos:start="2045:21" pos:end="2045:27">case <expr pos:start="2045:26" pos:end="2045:26"><literal type="number" pos:start="2045:26" pos:end="2045:26">5</literal></expr>:</case>

                        <if_stmt pos:start="2047:25" pos:end="2053:25"><if pos:start="2047:25" pos:end="2053:25">if <condition pos:start="2047:28" pos:end="2047:60">(<expr pos:start="2047:29" pos:end="2047:59"><operator pos:start="2047:29" pos:end="2047:29">(</operator><operator pos:start="2047:30" pos:end="2047:30">(</operator><name pos:start="2047:31" pos:end="2047:34">insn</name> <operator pos:start="2047:36" pos:end="2047:37">&gt;&gt;</operator> <literal type="number" pos:start="2047:39" pos:end="2047:39">6</literal><operator pos:start="2047:40" pos:end="2047:40">)</operator> <operator pos:start="2047:42" pos:end="2047:42">^</operator> <operator pos:start="2047:44" pos:end="2047:44">(</operator><name pos:start="2047:45" pos:end="2047:48">insn</name> <operator pos:start="2047:50" pos:end="2047:51">&gt;&gt;</operator> <literal type="number" pos:start="2047:53" pos:end="2047:53">7</literal><operator pos:start="2047:54" pos:end="2047:54">)</operator><operator pos:start="2047:55" pos:end="2047:55">)</operator> <operator pos:start="2047:57" pos:end="2047:57">&amp;</operator> <literal type="number" pos:start="2047:59" pos:end="2047:59">1</literal></expr>)</condition> <block pos:start="2047:62" pos:end="2053:25">{<block_content pos:start="2051:29" pos:end="2051:44">

                            <comment type="block" pos:start="2049:29" pos:end="2049:60">/* op2 not 00x or 11x : UNDEF */</comment>

                            <goto pos:start="2051:29" pos:end="2051:44">goto <name pos:start="2051:34" pos:end="2051:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="2055:25" pos:end="2057:51">/* Signed multiply most significant [accumulate].

                           (SMMUL, SMMLA, SMMLS) */</comment>

                        <expr_stmt pos:start="2059:25" pos:end="2059:46"><expr pos:start="2059:25" pos:end="2059:45"><name pos:start="2059:25" pos:end="2059:27">tmp</name> <operator pos:start="2059:29" pos:end="2059:29">=</operator> <call pos:start="2059:31" pos:end="2059:45"><name pos:start="2059:31" pos:end="2059:38">load_reg</name><argument_list pos:start="2059:39" pos:end="2059:45">(<argument pos:start="2059:40" pos:end="2059:40"><expr pos:start="2059:40" pos:end="2059:40"><name pos:start="2059:40" pos:end="2059:40">s</name></expr></argument>, <argument pos:start="2059:43" pos:end="2059:44"><expr pos:start="2059:43" pos:end="2059:44"><name pos:start="2059:43" pos:end="2059:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2061:25" pos:end="2061:47"><expr pos:start="2061:25" pos:end="2061:46"><name pos:start="2061:25" pos:end="2061:28">tmp2</name> <operator pos:start="2061:30" pos:end="2061:30">=</operator> <call pos:start="2061:32" pos:end="2061:46"><name pos:start="2061:32" pos:end="2061:39">load_reg</name><argument_list pos:start="2061:40" pos:end="2061:46">(<argument pos:start="2061:41" pos:end="2061:41"><expr pos:start="2061:41" pos:end="2061:41"><name pos:start="2061:41" pos:end="2061:41">s</name></expr></argument>, <argument pos:start="2061:44" pos:end="2061:45"><expr pos:start="2061:44" pos:end="2061:45"><name pos:start="2061:44" pos:end="2061:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2063:25" pos:end="2063:60"><expr pos:start="2063:25" pos:end="2063:59"><name pos:start="2063:25" pos:end="2063:29">tmp64</name> <operator pos:start="2063:31" pos:end="2063:31">=</operator> <call pos:start="2063:33" pos:end="2063:59"><name pos:start="2063:33" pos:end="2063:48">gen_muls_i64_i32</name><argument_list pos:start="2063:49" pos:end="2063:59">(<argument pos:start="2063:50" pos:end="2063:52"><expr pos:start="2063:50" pos:end="2063:52"><name pos:start="2063:50" pos:end="2063:52">tmp</name></expr></argument>, <argument pos:start="2063:55" pos:end="2063:58"><expr pos:start="2063:55" pos:end="2063:58"><name pos:start="2063:55" pos:end="2063:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="2067:25" pos:end="2081:25"><if pos:start="2067:25" pos:end="2081:25">if <condition pos:start="2067:28" pos:end="2067:37">(<expr pos:start="2067:29" pos:end="2067:36"><name pos:start="2067:29" pos:end="2067:30">rd</name> <operator pos:start="2067:32" pos:end="2067:33">!=</operator> <literal type="number" pos:start="2067:35" pos:end="2067:36">15</literal></expr>)</condition> <block pos:start="2067:39" pos:end="2081:25">{<block_content pos:start="2069:29" pos:end="2079:29">

                            <expr_stmt pos:start="2069:29" pos:end="2069:50"><expr pos:start="2069:29" pos:end="2069:49"><name pos:start="2069:29" pos:end="2069:31">tmp</name> <operator pos:start="2069:33" pos:end="2069:33">=</operator> <call pos:start="2069:35" pos:end="2069:49"><name pos:start="2069:35" pos:end="2069:42">load_reg</name><argument_list pos:start="2069:43" pos:end="2069:49">(<argument pos:start="2069:44" pos:end="2069:44"><expr pos:start="2069:44" pos:end="2069:44"><name pos:start="2069:44" pos:end="2069:44">s</name></expr></argument>, <argument pos:start="2069:47" pos:end="2069:48"><expr pos:start="2069:47" pos:end="2069:48"><name pos:start="2069:47" pos:end="2069:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2071:29" pos:end="2079:29"><if pos:start="2071:29" pos:end="2075:29">if <condition pos:start="2071:32" pos:end="2071:48">(<expr pos:start="2071:33" pos:end="2071:47"><name pos:start="2071:33" pos:end="2071:36">insn</name> <operator pos:start="2071:38" pos:end="2071:38">&amp;</operator> <operator pos:start="2071:40" pos:end="2071:40">(</operator><literal type="number" pos:start="2071:41" pos:end="2071:41">1</literal> <operator pos:start="2071:43" pos:end="2071:44">&lt;&lt;</operator> <literal type="number" pos:start="2071:46" pos:end="2071:46">6</literal><operator pos:start="2071:47" pos:end="2071:47">)</operator></expr>)</condition> <block pos:start="2071:50" pos:end="2075:29">{<block_content pos:start="2073:33" pos:end="2073:65">

                                <expr_stmt pos:start="2073:33" pos:end="2073:65"><expr pos:start="2073:33" pos:end="2073:64"><name pos:start="2073:33" pos:end="2073:37">tmp64</name> <operator pos:start="2073:39" pos:end="2073:39">=</operator> <call pos:start="2073:41" pos:end="2073:64"><name pos:start="2073:41" pos:end="2073:52">gen_subq_msw</name><argument_list pos:start="2073:53" pos:end="2073:64">(<argument pos:start="2073:54" pos:end="2073:58"><expr pos:start="2073:54" pos:end="2073:58"><name pos:start="2073:54" pos:end="2073:58">tmp64</name></expr></argument>, <argument pos:start="2073:61" pos:end="2073:63"><expr pos:start="2073:61" pos:end="2073:63"><name pos:start="2073:61" pos:end="2073:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2075:31" pos:end="2079:29">else <block pos:start="2075:36" pos:end="2079:29">{<block_content pos:start="2077:33" pos:end="2077:65">

                                <expr_stmt pos:start="2077:33" pos:end="2077:65"><expr pos:start="2077:33" pos:end="2077:64"><name pos:start="2077:33" pos:end="2077:37">tmp64</name> <operator pos:start="2077:39" pos:end="2077:39">=</operator> <call pos:start="2077:41" pos:end="2077:64"><name pos:start="2077:41" pos:end="2077:52">gen_addq_msw</name><argument_list pos:start="2077:53" pos:end="2077:64">(<argument pos:start="2077:54" pos:end="2077:58"><expr pos:start="2077:54" pos:end="2077:58"><name pos:start="2077:54" pos:end="2077:58">tmp64</name></expr></argument>, <argument pos:start="2077:61" pos:end="2077:63"><expr pos:start="2077:61" pos:end="2077:63"><name pos:start="2077:61" pos:end="2077:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="2083:25" pos:end="2087:25"><if pos:start="2083:25" pos:end="2087:25">if <condition pos:start="2083:28" pos:end="2083:44">(<expr pos:start="2083:29" pos:end="2083:43"><name pos:start="2083:29" pos:end="2083:32">insn</name> <operator pos:start="2083:34" pos:end="2083:34">&amp;</operator> <operator pos:start="2083:36" pos:end="2083:36">(</operator><literal type="number" pos:start="2083:37" pos:end="2083:37">1</literal> <operator pos:start="2083:39" pos:end="2083:40">&lt;&lt;</operator> <literal type="number" pos:start="2083:42" pos:end="2083:42">5</literal><operator pos:start="2083:43" pos:end="2083:43">)</operator></expr>)</condition> <block pos:start="2083:46" pos:end="2087:25">{<block_content pos:start="2085:29" pos:end="2085:72">

                            <expr_stmt pos:start="2085:29" pos:end="2085:72"><expr pos:start="2085:29" pos:end="2085:71"><call pos:start="2085:29" pos:end="2085:71"><name pos:start="2085:29" pos:end="2085:44">tcg_gen_addi_i64</name><argument_list pos:start="2085:45" pos:end="2085:71">(<argument pos:start="2085:46" pos:end="2085:50"><expr pos:start="2085:46" pos:end="2085:50"><name pos:start="2085:46" pos:end="2085:50">tmp64</name></expr></argument>, <argument pos:start="2085:53" pos:end="2085:57"><expr pos:start="2085:53" pos:end="2085:57"><name pos:start="2085:53" pos:end="2085:57">tmp64</name></expr></argument>, <argument pos:start="2085:60" pos:end="2085:70"><expr pos:start="2085:60" pos:end="2085:70"><literal type="number" pos:start="2085:60" pos:end="2085:70">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2089:25" pos:end="2089:59"><expr pos:start="2089:25" pos:end="2089:58"><call pos:start="2089:25" pos:end="2089:58"><name pos:start="2089:25" pos:end="2089:40">tcg_gen_shri_i64</name><argument_list pos:start="2089:41" pos:end="2089:58">(<argument pos:start="2089:42" pos:end="2089:46"><expr pos:start="2089:42" pos:end="2089:46"><name pos:start="2089:42" pos:end="2089:46">tmp64</name></expr></argument>, <argument pos:start="2089:49" pos:end="2089:53"><expr pos:start="2089:49" pos:end="2089:53"><name pos:start="2089:49" pos:end="2089:53">tmp64</name></expr></argument>, <argument pos:start="2089:56" pos:end="2089:57"><expr pos:start="2089:56" pos:end="2089:57"><literal type="number" pos:start="2089:56" pos:end="2089:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2091:25" pos:end="2091:49"><expr pos:start="2091:25" pos:end="2091:48"><name pos:start="2091:25" pos:end="2091:27">tmp</name> <operator pos:start="2091:29" pos:end="2091:29">=</operator> <call pos:start="2091:31" pos:end="2091:48"><name pos:start="2091:31" pos:end="2091:46">tcg_temp_new_i32</name><argument_list pos:start="2091:47" pos:end="2091:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2093:25" pos:end="2093:58"><expr pos:start="2093:25" pos:end="2093:57"><call pos:start="2093:25" pos:end="2093:57"><name pos:start="2093:25" pos:end="2093:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="2093:46" pos:end="2093:57">(<argument pos:start="2093:47" pos:end="2093:49"><expr pos:start="2093:47" pos:end="2093:49"><name pos:start="2093:47" pos:end="2093:49">tmp</name></expr></argument>, <argument pos:start="2093:52" pos:end="2093:56"><expr pos:start="2093:52" pos:end="2093:56"><name pos:start="2093:52" pos:end="2093:56">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2095:25" pos:end="2095:49"><expr pos:start="2095:25" pos:end="2095:48"><call pos:start="2095:25" pos:end="2095:48"><name pos:start="2095:25" pos:end="2095:41">tcg_temp_free_i64</name><argument_list pos:start="2095:42" pos:end="2095:48">(<argument pos:start="2095:43" pos:end="2095:47"><expr pos:start="2095:43" pos:end="2095:47"><name pos:start="2095:43" pos:end="2095:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2097:25" pos:end="2097:46"><expr pos:start="2097:25" pos:end="2097:45"><call pos:start="2097:25" pos:end="2097:45"><name pos:start="2097:25" pos:end="2097:33">store_reg</name><argument_list pos:start="2097:34" pos:end="2097:45">(<argument pos:start="2097:35" pos:end="2097:35"><expr pos:start="2097:35" pos:end="2097:35"><name pos:start="2097:35" pos:end="2097:35">s</name></expr></argument>, <argument pos:start="2097:38" pos:end="2097:39"><expr pos:start="2097:38" pos:end="2097:39"><name pos:start="2097:38" pos:end="2097:39">rn</name></expr></argument>, <argument pos:start="2097:42" pos:end="2097:44"><expr pos:start="2097:42" pos:end="2097:44"><name pos:start="2097:42" pos:end="2097:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2099:25" pos:end="2099:30">break;</break>

                    <case pos:start="2101:21" pos:end="2101:27">case <expr pos:start="2101:26" pos:end="2101:26"><literal type="number" pos:start="2101:26" pos:end="2101:26">0</literal></expr>:</case>

                    <case pos:start="2103:21" pos:end="2103:27">case <expr pos:start="2103:26" pos:end="2103:26"><literal type="number" pos:start="2103:26" pos:end="2103:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="2105:25" pos:end="2105:72">/* SMLAD, SMUAD, SMLSD, SMUSD, SMLALD, SMLSLD */</comment>

                        <if_stmt pos:start="2107:25" pos:end="2111:25"><if pos:start="2107:25" pos:end="2111:25">if <condition pos:start="2107:28" pos:end="2107:44">(<expr pos:start="2107:29" pos:end="2107:43"><name pos:start="2107:29" pos:end="2107:32">insn</name> <operator pos:start="2107:34" pos:end="2107:34">&amp;</operator> <operator pos:start="2107:36" pos:end="2107:36">(</operator><literal type="number" pos:start="2107:37" pos:end="2107:37">1</literal> <operator pos:start="2107:39" pos:end="2107:40">&lt;&lt;</operator> <literal type="number" pos:start="2107:42" pos:end="2107:42">7</literal><operator pos:start="2107:43" pos:end="2107:43">)</operator></expr>)</condition> <block pos:start="2107:46" pos:end="2111:25">{<block_content pos:start="2109:29" pos:end="2109:44">

                            <goto pos:start="2109:29" pos:end="2109:44">goto <name pos:start="2109:34" pos:end="2109:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2113:25" pos:end="2113:46"><expr pos:start="2113:25" pos:end="2113:45"><name pos:start="2113:25" pos:end="2113:27">tmp</name> <operator pos:start="2113:29" pos:end="2113:29">=</operator> <call pos:start="2113:31" pos:end="2113:45"><name pos:start="2113:31" pos:end="2113:38">load_reg</name><argument_list pos:start="2113:39" pos:end="2113:45">(<argument pos:start="2113:40" pos:end="2113:40"><expr pos:start="2113:40" pos:end="2113:40"><name pos:start="2113:40" pos:end="2113:40">s</name></expr></argument>, <argument pos:start="2113:43" pos:end="2113:44"><expr pos:start="2113:43" pos:end="2113:44"><name pos:start="2113:43" pos:end="2113:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2115:25" pos:end="2115:47"><expr pos:start="2115:25" pos:end="2115:46"><name pos:start="2115:25" pos:end="2115:28">tmp2</name> <operator pos:start="2115:30" pos:end="2115:30">=</operator> <call pos:start="2115:32" pos:end="2115:46"><name pos:start="2115:32" pos:end="2115:39">load_reg</name><argument_list pos:start="2115:40" pos:end="2115:46">(<argument pos:start="2115:41" pos:end="2115:41"><expr pos:start="2115:41" pos:end="2115:41"><name pos:start="2115:41" pos:end="2115:41">s</name></expr></argument>, <argument pos:start="2115:44" pos:end="2115:45"><expr pos:start="2115:44" pos:end="2115:45"><name pos:start="2115:44" pos:end="2115:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2117:25" pos:end="2119:48"><if pos:start="2117:25" pos:end="2119:48">if <condition pos:start="2117:28" pos:end="2117:44">(<expr pos:start="2117:29" pos:end="2117:43"><name pos:start="2117:29" pos:end="2117:32">insn</name> <operator pos:start="2117:34" pos:end="2117:34">&amp;</operator> <operator pos:start="2117:36" pos:end="2117:36">(</operator><literal type="number" pos:start="2117:37" pos:end="2117:37">1</literal> <operator pos:start="2117:39" pos:end="2117:40">&lt;&lt;</operator> <literal type="number" pos:start="2117:42" pos:end="2117:42">5</literal><operator pos:start="2117:43" pos:end="2117:43">)</operator></expr>)</condition><block type="pseudo" pos:start="2119:29" pos:end="2119:48"><block_content pos:start="2119:29" pos:end="2119:48">

                            <expr_stmt pos:start="2119:29" pos:end="2119:48"><expr pos:start="2119:29" pos:end="2119:47"><call pos:start="2119:29" pos:end="2119:47"><name pos:start="2119:29" pos:end="2119:41">gen_swap_half</name><argument_list pos:start="2119:42" pos:end="2119:47">(<argument pos:start="2119:43" pos:end="2119:46"><expr pos:start="2119:43" pos:end="2119:46"><name pos:start="2119:43" pos:end="2119:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="2121:25" pos:end="2121:49"><expr pos:start="2121:25" pos:end="2121:48"><call pos:start="2121:25" pos:end="2121:48"><name pos:start="2121:25" pos:end="2121:37">gen_smul_dual</name><argument_list pos:start="2121:38" pos:end="2121:48">(<argument pos:start="2121:39" pos:end="2121:41"><expr pos:start="2121:39" pos:end="2121:41"><name pos:start="2121:39" pos:end="2121:41">tmp</name></expr></argument>, <argument pos:start="2121:44" pos:end="2121:47"><expr pos:start="2121:44" pos:end="2121:47"><name pos:start="2121:44" pos:end="2121:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2123:25" pos:end="2141:25"><if pos:start="2123:25" pos:end="2129:25">if <condition pos:start="2123:28" pos:end="2123:44">(<expr pos:start="2123:29" pos:end="2123:43"><name pos:start="2123:29" pos:end="2123:32">insn</name> <operator pos:start="2123:34" pos:end="2123:34">&amp;</operator> <operator pos:start="2123:36" pos:end="2123:36">(</operator><literal type="number" pos:start="2123:37" pos:end="2123:37">1</literal> <operator pos:start="2123:39" pos:end="2123:40">&lt;&lt;</operator> <literal type="number" pos:start="2123:42" pos:end="2123:42">6</literal><operator pos:start="2123:43" pos:end="2123:43">)</operator></expr>)</condition> <block pos:start="2123:46" pos:end="2129:25">{<block_content pos:start="2127:29" pos:end="2127:60">

                            <comment type="block" pos:start="2125:29" pos:end="2125:67">/* This subtraction cannot overflow. */</comment>

                            <expr_stmt pos:start="2127:29" pos:end="2127:60"><expr pos:start="2127:29" pos:end="2127:59"><call pos:start="2127:29" pos:end="2127:59"><name pos:start="2127:29" pos:end="2127:43">tcg_gen_sub_i32</name><argument_list pos:start="2127:44" pos:end="2127:59">(<argument pos:start="2127:45" pos:end="2127:47"><expr pos:start="2127:45" pos:end="2127:47"><name pos:start="2127:45" pos:end="2127:47">tmp</name></expr></argument>, <argument pos:start="2127:50" pos:end="2127:52"><expr pos:start="2127:50" pos:end="2127:52"><name pos:start="2127:50" pos:end="2127:52">tmp</name></expr></argument>, <argument pos:start="2127:55" pos:end="2127:58"><expr pos:start="2127:55" pos:end="2127:58"><name pos:start="2127:55" pos:end="2127:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2129:27" pos:end="2141:25">else <block pos:start="2129:32" pos:end="2141:25">{<block_content pos:start="2139:29" pos:end="2139:73">

                            <comment type="block" pos:start="2131:29" pos:end="2137:31">/* This addition cannot overflow 32 bits;

                             * however it may overflow considered as a signed

                             * operation, in which case we must set the Q flag.

                             */</comment>

                            <expr_stmt pos:start="2139:29" pos:end="2139:73"><expr pos:start="2139:29" pos:end="2139:72"><call pos:start="2139:29" pos:end="2139:72"><name pos:start="2139:29" pos:end="2139:47">gen_helper_add_setq</name><argument_list pos:start="2139:48" pos:end="2139:72">(<argument pos:start="2139:49" pos:end="2139:51"><expr pos:start="2139:49" pos:end="2139:51"><name pos:start="2139:49" pos:end="2139:51">tmp</name></expr></argument>, <argument pos:start="2139:54" pos:end="2139:60"><expr pos:start="2139:54" pos:end="2139:60"><name pos:start="2139:54" pos:end="2139:60">cpu_env</name></expr></argument>, <argument pos:start="2139:63" pos:end="2139:65"><expr pos:start="2139:63" pos:end="2139:65"><name pos:start="2139:63" pos:end="2139:65">tmp</name></expr></argument>, <argument pos:start="2139:68" pos:end="2139:71"><expr pos:start="2139:68" pos:end="2139:71"><name pos:start="2139:68" pos:end="2139:71">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2143:25" pos:end="2143:48"><expr pos:start="2143:25" pos:end="2143:47"><call pos:start="2143:25" pos:end="2143:47"><name pos:start="2143:25" pos:end="2143:41">tcg_temp_free_i32</name><argument_list pos:start="2143:42" pos:end="2143:47">(<argument pos:start="2143:43" pos:end="2143:46"><expr pos:start="2143:43" pos:end="2143:46"><name pos:start="2143:43" pos:end="2143:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2145:25" pos:end="2179:25"><if pos:start="2145:25" pos:end="2161:25">if <condition pos:start="2145:28" pos:end="2145:45">(<expr pos:start="2145:29" pos:end="2145:44"><name pos:start="2145:29" pos:end="2145:32">insn</name> <operator pos:start="2145:34" pos:end="2145:34">&amp;</operator> <operator pos:start="2145:36" pos:end="2145:36">(</operator><literal type="number" pos:start="2145:37" pos:end="2145:37">1</literal> <operator pos:start="2145:39" pos:end="2145:40">&lt;&lt;</operator> <literal type="number" pos:start="2145:42" pos:end="2145:43">22</literal><operator pos:start="2145:44" pos:end="2145:44">)</operator></expr>)</condition> <block pos:start="2145:47" pos:end="2161:25">{<block_content pos:start="2149:29" pos:end="2159:53">

                            <comment type="block" pos:start="2147:29" pos:end="2147:48">/* smlald, smlsld */</comment>

                            <expr_stmt pos:start="2149:29" pos:end="2149:55"><expr pos:start="2149:29" pos:end="2149:54"><name pos:start="2149:29" pos:end="2149:33">tmp64</name> <operator pos:start="2149:35" pos:end="2149:35">=</operator> <call pos:start="2149:37" pos:end="2149:54"><name pos:start="2149:37" pos:end="2149:52">tcg_temp_new_i64</name><argument_list pos:start="2149:53" pos:end="2149:54">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2151:29" pos:end="2151:60"><expr pos:start="2151:29" pos:end="2151:59"><call pos:start="2151:29" pos:end="2151:59"><name pos:start="2151:29" pos:end="2151:47">tcg_gen_ext_i32_i64</name><argument_list pos:start="2151:48" pos:end="2151:59">(<argument pos:start="2151:49" pos:end="2151:53"><expr pos:start="2151:49" pos:end="2151:53"><name pos:start="2151:49" pos:end="2151:53">tmp64</name></expr></argument>, <argument pos:start="2151:56" pos:end="2151:58"><expr pos:start="2151:56" pos:end="2151:58"><name pos:start="2151:56" pos:end="2151:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2153:29" pos:end="2153:51"><expr pos:start="2153:29" pos:end="2153:50"><call pos:start="2153:29" pos:end="2153:50"><name pos:start="2153:29" pos:end="2153:45">tcg_temp_free_i32</name><argument_list pos:start="2153:46" pos:end="2153:50">(<argument pos:start="2153:47" pos:end="2153:49"><expr pos:start="2153:47" pos:end="2153:49"><name pos:start="2153:47" pos:end="2153:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2155:29" pos:end="2155:55"><expr pos:start="2155:29" pos:end="2155:54"><call pos:start="2155:29" pos:end="2155:54"><name pos:start="2155:29" pos:end="2155:36">gen_addq</name><argument_list pos:start="2155:37" pos:end="2155:54">(<argument pos:start="2155:38" pos:end="2155:38"><expr pos:start="2155:38" pos:end="2155:38"><name pos:start="2155:38" pos:end="2155:38">s</name></expr></argument>, <argument pos:start="2155:41" pos:end="2155:45"><expr pos:start="2155:41" pos:end="2155:45"><name pos:start="2155:41" pos:end="2155:45">tmp64</name></expr></argument>, <argument pos:start="2155:48" pos:end="2155:49"><expr pos:start="2155:48" pos:end="2155:49"><name pos:start="2155:48" pos:end="2155:49">rd</name></expr></argument>, <argument pos:start="2155:52" pos:end="2155:53"><expr pos:start="2155:52" pos:end="2155:53"><name pos:start="2155:52" pos:end="2155:53">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2157:29" pos:end="2157:61"><expr pos:start="2157:29" pos:end="2157:60"><call pos:start="2157:29" pos:end="2157:60"><name pos:start="2157:29" pos:end="2157:42">gen_storeq_reg</name><argument_list pos:start="2157:43" pos:end="2157:60">(<argument pos:start="2157:44" pos:end="2157:44"><expr pos:start="2157:44" pos:end="2157:44"><name pos:start="2157:44" pos:end="2157:44">s</name></expr></argument>, <argument pos:start="2157:47" pos:end="2157:48"><expr pos:start="2157:47" pos:end="2157:48"><name pos:start="2157:47" pos:end="2157:48">rd</name></expr></argument>, <argument pos:start="2157:51" pos:end="2157:52"><expr pos:start="2157:51" pos:end="2157:52"><name pos:start="2157:51" pos:end="2157:52">rn</name></expr></argument>, <argument pos:start="2157:55" pos:end="2157:59"><expr pos:start="2157:55" pos:end="2157:59"><name pos:start="2157:55" pos:end="2157:59">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2159:29" pos:end="2159:53"><expr pos:start="2159:29" pos:end="2159:52"><call pos:start="2159:29" pos:end="2159:52"><name pos:start="2159:29" pos:end="2159:45">tcg_temp_free_i64</name><argument_list pos:start="2159:46" pos:end="2159:52">(<argument pos:start="2159:47" pos:end="2159:51"><expr pos:start="2159:47" pos:end="2159:51"><name pos:start="2159:47" pos:end="2159:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2161:27" pos:end="2179:25">else <block pos:start="2161:32" pos:end="2179:25">{<block_content pos:start="2165:29" pos:end="2177:50">

                            <comment type="block" pos:start="2163:29" pos:end="2163:60">/* smuad, smusd, smlad, smlsd */</comment>

                            <if_stmt pos:start="2165:29" pos:end="2175:31"><if pos:start="2165:29" pos:end="2175:31">if <condition pos:start="2165:32" pos:end="2165:41">(<expr pos:start="2165:33" pos:end="2165:40"><name pos:start="2165:33" pos:end="2165:34">rd</name> <operator pos:start="2165:36" pos:end="2165:37">!=</operator> <literal type="number" pos:start="2165:39" pos:end="2165:40">15</literal></expr>)</condition>

                              <block pos:start="2167:31" pos:end="2175:31">{<block_content pos:start="2169:33" pos:end="2173:56">

                                <expr_stmt pos:start="2169:33" pos:end="2169:55"><expr pos:start="2169:33" pos:end="2169:54"><name pos:start="2169:33" pos:end="2169:36">tmp2</name> <operator pos:start="2169:38" pos:end="2169:38">=</operator> <call pos:start="2169:40" pos:end="2169:54"><name pos:start="2169:40" pos:end="2169:47">load_reg</name><argument_list pos:start="2169:48" pos:end="2169:54">(<argument pos:start="2169:49" pos:end="2169:49"><expr pos:start="2169:49" pos:end="2169:49"><name pos:start="2169:49" pos:end="2169:49">s</name></expr></argument>, <argument pos:start="2169:52" pos:end="2169:53"><expr pos:start="2169:52" pos:end="2169:53"><name pos:start="2169:52" pos:end="2169:53">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2171:33" pos:end="2171:77"><expr pos:start="2171:33" pos:end="2171:76"><call pos:start="2171:33" pos:end="2171:76"><name pos:start="2171:33" pos:end="2171:51">gen_helper_add_setq</name><argument_list pos:start="2171:52" pos:end="2171:76">(<argument pos:start="2171:53" pos:end="2171:55"><expr pos:start="2171:53" pos:end="2171:55"><name pos:start="2171:53" pos:end="2171:55">tmp</name></expr></argument>, <argument pos:start="2171:58" pos:end="2171:64"><expr pos:start="2171:58" pos:end="2171:64"><name pos:start="2171:58" pos:end="2171:64">cpu_env</name></expr></argument>, <argument pos:start="2171:67" pos:end="2171:69"><expr pos:start="2171:67" pos:end="2171:69"><name pos:start="2171:67" pos:end="2171:69">tmp</name></expr></argument>, <argument pos:start="2171:72" pos:end="2171:75"><expr pos:start="2171:72" pos:end="2171:75"><name pos:start="2171:72" pos:end="2171:75">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2173:33" pos:end="2173:56"><expr pos:start="2173:33" pos:end="2173:55"><call pos:start="2173:33" pos:end="2173:55"><name pos:start="2173:33" pos:end="2173:49">tcg_temp_free_i32</name><argument_list pos:start="2173:50" pos:end="2173:55">(<argument pos:start="2173:51" pos:end="2173:54"><expr pos:start="2173:51" pos:end="2173:54"><name pos:start="2173:51" pos:end="2173:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                              </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="2177:29" pos:end="2177:50"><expr pos:start="2177:29" pos:end="2177:49"><call pos:start="2177:29" pos:end="2177:49"><name pos:start="2177:29" pos:end="2177:37">store_reg</name><argument_list pos:start="2177:38" pos:end="2177:49">(<argument pos:start="2177:39" pos:end="2177:39"><expr pos:start="2177:39" pos:end="2177:39"><name pos:start="2177:39" pos:end="2177:39">s</name></expr></argument>, <argument pos:start="2177:42" pos:end="2177:43"><expr pos:start="2177:42" pos:end="2177:43"><name pos:start="2177:42" pos:end="2177:43">rn</name></expr></argument>, <argument pos:start="2177:46" pos:end="2177:48"><expr pos:start="2177:46" pos:end="2177:48"><name pos:start="2177:46" pos:end="2177:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <break pos:start="2181:25" pos:end="2181:30">break;</break>

                    <case pos:start="2183:21" pos:end="2183:27">case <expr pos:start="2183:26" pos:end="2183:26"><literal type="number" pos:start="2183:26" pos:end="2183:26">1</literal></expr>:</case>

                    <case pos:start="2185:21" pos:end="2185:27">case <expr pos:start="2185:26" pos:end="2185:26"><literal type="number" pos:start="2185:26" pos:end="2185:26">3</literal></expr>:</case>

                        <comment type="block" pos:start="2187:25" pos:end="2187:40">/* SDIV, UDIV */</comment>

                        <if_stmt pos:start="2189:25" pos:end="2193:25"><if pos:start="2189:25" pos:end="2193:25">if <condition pos:start="2189:28" pos:end="2189:67">(<expr pos:start="2189:29" pos:end="2189:66"><operator pos:start="2189:29" pos:end="2189:29">!</operator><call pos:start="2189:30" pos:end="2189:66"><name pos:start="2189:30" pos:end="2189:40">arm_feature</name><argument_list pos:start="2189:41" pos:end="2189:66">(<argument pos:start="2189:42" pos:end="2189:44"><expr pos:start="2189:42" pos:end="2189:44"><name pos:start="2189:42" pos:end="2189:44">env</name></expr></argument>, <argument pos:start="2189:47" pos:end="2189:65"><expr pos:start="2189:47" pos:end="2189:65"><name pos:start="2189:47" pos:end="2189:65">ARM_FEATURE_ARM_DIV</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2189:69" pos:end="2193:25">{<block_content pos:start="2191:29" pos:end="2191:44">

                            <goto pos:start="2191:29" pos:end="2191:44">goto <name pos:start="2191:34" pos:end="2191:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="2195:25" pos:end="2199:25"><if pos:start="2195:25" pos:end="2199:25">if <condition pos:start="2195:28" pos:end="2195:60">(<expr pos:start="2195:29" pos:end="2195:59"><operator pos:start="2195:29" pos:end="2195:29">(</operator><operator pos:start="2195:30" pos:end="2195:30">(</operator><name pos:start="2195:31" pos:end="2195:34">insn</name> <operator pos:start="2195:36" pos:end="2195:37">&gt;&gt;</operator> <literal type="number" pos:start="2195:39" pos:end="2195:39">5</literal><operator pos:start="2195:40" pos:end="2195:40">)</operator> <operator pos:start="2195:42" pos:end="2195:42">&amp;</operator> <literal type="number" pos:start="2195:44" pos:end="2195:44">7</literal><operator pos:start="2195:45" pos:end="2195:45">)</operator> <operator pos:start="2195:47" pos:end="2195:48">||</operator> <operator pos:start="2195:50" pos:end="2195:50">(</operator><name pos:start="2195:51" pos:end="2195:52">rd</name> <operator pos:start="2195:54" pos:end="2195:55">!=</operator> <literal type="number" pos:start="2195:57" pos:end="2195:58">15</literal><operator pos:start="2195:59" pos:end="2195:59">)</operator></expr>)</condition> <block pos:start="2195:62" pos:end="2199:25">{<block_content pos:start="2197:29" pos:end="2197:44">

                            <goto pos:start="2197:29" pos:end="2197:44">goto <name pos:start="2197:34" pos:end="2197:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2201:25" pos:end="2201:46"><expr pos:start="2201:25" pos:end="2201:45"><name pos:start="2201:25" pos:end="2201:27">tmp</name> <operator pos:start="2201:29" pos:end="2201:29">=</operator> <call pos:start="2201:31" pos:end="2201:45"><name pos:start="2201:31" pos:end="2201:38">load_reg</name><argument_list pos:start="2201:39" pos:end="2201:45">(<argument pos:start="2201:40" pos:end="2201:40"><expr pos:start="2201:40" pos:end="2201:40"><name pos:start="2201:40" pos:end="2201:40">s</name></expr></argument>, <argument pos:start="2201:43" pos:end="2201:44"><expr pos:start="2201:43" pos:end="2201:44"><name pos:start="2201:43" pos:end="2201:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2203:25" pos:end="2203:47"><expr pos:start="2203:25" pos:end="2203:46"><name pos:start="2203:25" pos:end="2203:28">tmp2</name> <operator pos:start="2203:30" pos:end="2203:30">=</operator> <call pos:start="2203:32" pos:end="2203:46"><name pos:start="2203:32" pos:end="2203:39">load_reg</name><argument_list pos:start="2203:40" pos:end="2203:46">(<argument pos:start="2203:41" pos:end="2203:41"><expr pos:start="2203:41" pos:end="2203:41"><name pos:start="2203:41" pos:end="2203:41">s</name></expr></argument>, <argument pos:start="2203:44" pos:end="2203:45"><expr pos:start="2203:44" pos:end="2203:45"><name pos:start="2203:44" pos:end="2203:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2205:25" pos:end="2213:25"><if pos:start="2205:25" pos:end="2209:25">if <condition pos:start="2205:28" pos:end="2205:45">(<expr pos:start="2205:29" pos:end="2205:44"><name pos:start="2205:29" pos:end="2205:32">insn</name> <operator pos:start="2205:34" pos:end="2205:34">&amp;</operator> <operator pos:start="2205:36" pos:end="2205:36">(</operator><literal type="number" pos:start="2205:37" pos:end="2205:37">1</literal> <operator pos:start="2205:39" pos:end="2205:40">&lt;&lt;</operator> <literal type="number" pos:start="2205:42" pos:end="2205:43">21</literal><operator pos:start="2205:44" pos:end="2205:44">)</operator></expr>)</condition> <block pos:start="2205:47" pos:end="2209:25">{<block_content pos:start="2207:29" pos:end="2207:60">

                            <expr_stmt pos:start="2207:29" pos:end="2207:60"><expr pos:start="2207:29" pos:end="2207:59"><call pos:start="2207:29" pos:end="2207:59"><name pos:start="2207:29" pos:end="2207:43">gen_helper_udiv</name><argument_list pos:start="2207:44" pos:end="2207:59">(<argument pos:start="2207:45" pos:end="2207:47"><expr pos:start="2207:45" pos:end="2207:47"><name pos:start="2207:45" pos:end="2207:47">tmp</name></expr></argument>, <argument pos:start="2207:50" pos:end="2207:52"><expr pos:start="2207:50" pos:end="2207:52"><name pos:start="2207:50" pos:end="2207:52">tmp</name></expr></argument>, <argument pos:start="2207:55" pos:end="2207:58"><expr pos:start="2207:55" pos:end="2207:58"><name pos:start="2207:55" pos:end="2207:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2209:27" pos:end="2213:25">else <block pos:start="2209:32" pos:end="2213:25">{<block_content pos:start="2211:29" pos:end="2211:60">

                            <expr_stmt pos:start="2211:29" pos:end="2211:60"><expr pos:start="2211:29" pos:end="2211:59"><call pos:start="2211:29" pos:end="2211:59"><name pos:start="2211:29" pos:end="2211:43">gen_helper_sdiv</name><argument_list pos:start="2211:44" pos:end="2211:59">(<argument pos:start="2211:45" pos:end="2211:47"><expr pos:start="2211:45" pos:end="2211:47"><name pos:start="2211:45" pos:end="2211:47">tmp</name></expr></argument>, <argument pos:start="2211:50" pos:end="2211:52"><expr pos:start="2211:50" pos:end="2211:52"><name pos:start="2211:50" pos:end="2211:52">tmp</name></expr></argument>, <argument pos:start="2211:55" pos:end="2211:58"><expr pos:start="2211:55" pos:end="2211:58"><name pos:start="2211:55" pos:end="2211:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2215:25" pos:end="2215:48"><expr pos:start="2215:25" pos:end="2215:47"><call pos:start="2215:25" pos:end="2215:47"><name pos:start="2215:25" pos:end="2215:41">tcg_temp_free_i32</name><argument_list pos:start="2215:42" pos:end="2215:47">(<argument pos:start="2215:43" pos:end="2215:46"><expr pos:start="2215:43" pos:end="2215:46"><name pos:start="2215:43" pos:end="2215:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2217:25" pos:end="2217:46"><expr pos:start="2217:25" pos:end="2217:45"><call pos:start="2217:25" pos:end="2217:45"><name pos:start="2217:25" pos:end="2217:33">store_reg</name><argument_list pos:start="2217:34" pos:end="2217:45">(<argument pos:start="2217:35" pos:end="2217:35"><expr pos:start="2217:35" pos:end="2217:35"><name pos:start="2217:35" pos:end="2217:35">s</name></expr></argument>, <argument pos:start="2217:38" pos:end="2217:39"><expr pos:start="2217:38" pos:end="2217:39"><name pos:start="2217:38" pos:end="2217:39">rn</name></expr></argument>, <argument pos:start="2217:42" pos:end="2217:44"><expr pos:start="2217:42" pos:end="2217:44"><name pos:start="2217:42" pos:end="2217:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2219:25" pos:end="2219:30">break;</break>

                    <default pos:start="2221:21" pos:end="2221:28">default:</default>

                        <goto pos:start="2223:25" pos:end="2223:40">goto <name pos:start="2223:30" pos:end="2223:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2227:21" pos:end="2227:26">break;</break>

                <case pos:start="2229:17" pos:end="2229:23">case <expr pos:start="2229:22" pos:end="2229:22"><literal type="number" pos:start="2229:22" pos:end="2229:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="2231:21" pos:end="2231:68"><expr pos:start="2231:21" pos:end="2231:67"><name pos:start="2231:21" pos:end="2231:23">op1</name> <operator pos:start="2231:25" pos:end="2231:25">=</operator> <operator pos:start="2231:27" pos:end="2231:27">(</operator><operator pos:start="2231:28" pos:end="2231:28">(</operator><name pos:start="2231:29" pos:end="2231:32">insn</name> <operator pos:start="2231:34" pos:end="2231:35">&gt;&gt;</operator> <literal type="number" pos:start="2231:37" pos:end="2231:38">17</literal><operator pos:start="2231:39" pos:end="2231:39">)</operator> <operator pos:start="2231:41" pos:end="2231:41">&amp;</operator> <literal type="number" pos:start="2231:43" pos:end="2231:46">0x38</literal><operator pos:start="2231:47" pos:end="2231:47">)</operator> <operator pos:start="2231:49" pos:end="2231:49">|</operator> <operator pos:start="2231:51" pos:end="2231:51">(</operator><operator pos:start="2231:52" pos:end="2231:52">(</operator><name pos:start="2231:53" pos:end="2231:56">insn</name> <operator pos:start="2231:58" pos:end="2231:59">&gt;&gt;</operator> <literal type="number" pos:start="2231:61" pos:end="2231:61">5</literal><operator pos:start="2231:62" pos:end="2231:62">)</operator> <operator pos:start="2231:64" pos:end="2231:64">&amp;</operator> <literal type="number" pos:start="2231:66" pos:end="2231:66">7</literal><operator pos:start="2231:67" pos:end="2231:67">)</operator></expr>;</expr_stmt>

                    <switch pos:start="2233:21" pos:end="2337:21">switch <condition pos:start="2233:28" pos:end="2233:32">(<expr pos:start="2233:29" pos:end="2233:31"><name pos:start="2233:29" pos:end="2233:31">op1</name></expr>)</condition> <block pos:start="2233:34" pos:end="2337:21">{<block_content pos:start="2235:21" pos:end="2335:40">

                    <case pos:start="2235:21" pos:end="2235:27">case <expr pos:start="2235:26" pos:end="2235:26"><literal type="number" pos:start="2235:26" pos:end="2235:26">0</literal></expr>:</case> <comment type="block" pos:start="2235:29" pos:end="2235:72">/* Unsigned sum of absolute differences.  */</comment>

                        <expr_stmt pos:start="2237:25" pos:end="2237:32"><expr pos:start="2237:25" pos:end="2237:31"><call pos:start="2237:25" pos:end="2237:31"><name pos:start="2237:25" pos:end="2237:28">ARCH</name><argument_list pos:start="2237:29" pos:end="2237:31">(<argument pos:start="2237:30" pos:end="2237:30"><expr pos:start="2237:30" pos:end="2237:30"><literal type="number" pos:start="2237:30" pos:end="2237:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2239:25" pos:end="2239:46"><expr pos:start="2239:25" pos:end="2239:45"><name pos:start="2239:25" pos:end="2239:27">tmp</name> <operator pos:start="2239:29" pos:end="2239:29">=</operator> <call pos:start="2239:31" pos:end="2239:45"><name pos:start="2239:31" pos:end="2239:38">load_reg</name><argument_list pos:start="2239:39" pos:end="2239:45">(<argument pos:start="2239:40" pos:end="2239:40"><expr pos:start="2239:40" pos:end="2239:40"><name pos:start="2239:40" pos:end="2239:40">s</name></expr></argument>, <argument pos:start="2239:43" pos:end="2239:44"><expr pos:start="2239:43" pos:end="2239:44"><name pos:start="2239:43" pos:end="2239:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2241:25" pos:end="2241:47"><expr pos:start="2241:25" pos:end="2241:46"><name pos:start="2241:25" pos:end="2241:28">tmp2</name> <operator pos:start="2241:30" pos:end="2241:30">=</operator> <call pos:start="2241:32" pos:end="2241:46"><name pos:start="2241:32" pos:end="2241:39">load_reg</name><argument_list pos:start="2241:40" pos:end="2241:46">(<argument pos:start="2241:41" pos:end="2241:41"><expr pos:start="2241:41" pos:end="2241:41"><name pos:start="2241:41" pos:end="2241:41">s</name></expr></argument>, <argument pos:start="2241:44" pos:end="2241:45"><expr pos:start="2241:44" pos:end="2241:45"><name pos:start="2241:44" pos:end="2241:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2243:25" pos:end="2243:57"><expr pos:start="2243:25" pos:end="2243:56"><call pos:start="2243:25" pos:end="2243:56"><name pos:start="2243:25" pos:end="2243:40">gen_helper_usad8</name><argument_list pos:start="2243:41" pos:end="2243:56">(<argument pos:start="2243:42" pos:end="2243:44"><expr pos:start="2243:42" pos:end="2243:44"><name pos:start="2243:42" pos:end="2243:44">tmp</name></expr></argument>, <argument pos:start="2243:47" pos:end="2243:49"><expr pos:start="2243:47" pos:end="2243:49"><name pos:start="2243:47" pos:end="2243:49">tmp</name></expr></argument>, <argument pos:start="2243:52" pos:end="2243:55"><expr pos:start="2243:52" pos:end="2243:55"><name pos:start="2243:52" pos:end="2243:55">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2245:25" pos:end="2245:48"><expr pos:start="2245:25" pos:end="2245:47"><call pos:start="2245:25" pos:end="2245:47"><name pos:start="2245:25" pos:end="2245:41">tcg_temp_free_i32</name><argument_list pos:start="2245:42" pos:end="2245:47">(<argument pos:start="2245:43" pos:end="2245:46"><expr pos:start="2245:43" pos:end="2245:46"><name pos:start="2245:43" pos:end="2245:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="2247:25" pos:end="2255:25"><if pos:start="2247:25" pos:end="2255:25">if <condition pos:start="2247:28" pos:end="2247:37">(<expr pos:start="2247:29" pos:end="2247:36"><name pos:start="2247:29" pos:end="2247:30">rd</name> <operator pos:start="2247:32" pos:end="2247:33">!=</operator> <literal type="number" pos:start="2247:35" pos:end="2247:36">15</literal></expr>)</condition> <block pos:start="2247:39" pos:end="2255:25">{<block_content pos:start="2249:29" pos:end="2253:52">

                            <expr_stmt pos:start="2249:29" pos:end="2249:51"><expr pos:start="2249:29" pos:end="2249:50"><name pos:start="2249:29" pos:end="2249:32">tmp2</name> <operator pos:start="2249:34" pos:end="2249:34">=</operator> <call pos:start="2249:36" pos:end="2249:50"><name pos:start="2249:36" pos:end="2249:43">load_reg</name><argument_list pos:start="2249:44" pos:end="2249:50">(<argument pos:start="2249:45" pos:end="2249:45"><expr pos:start="2249:45" pos:end="2249:45"><name pos:start="2249:45" pos:end="2249:45">s</name></expr></argument>, <argument pos:start="2249:48" pos:end="2249:49"><expr pos:start="2249:48" pos:end="2249:49"><name pos:start="2249:48" pos:end="2249:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2251:29" pos:end="2251:60"><expr pos:start="2251:29" pos:end="2251:59"><call pos:start="2251:29" pos:end="2251:59"><name pos:start="2251:29" pos:end="2251:43">tcg_gen_add_i32</name><argument_list pos:start="2251:44" pos:end="2251:59">(<argument pos:start="2251:45" pos:end="2251:47"><expr pos:start="2251:45" pos:end="2251:47"><name pos:start="2251:45" pos:end="2251:47">tmp</name></expr></argument>, <argument pos:start="2251:50" pos:end="2251:52"><expr pos:start="2251:50" pos:end="2251:52"><name pos:start="2251:50" pos:end="2251:52">tmp</name></expr></argument>, <argument pos:start="2251:55" pos:end="2251:58"><expr pos:start="2251:55" pos:end="2251:58"><name pos:start="2251:55" pos:end="2251:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2253:29" pos:end="2253:52"><expr pos:start="2253:29" pos:end="2253:51"><call pos:start="2253:29" pos:end="2253:51"><name pos:start="2253:29" pos:end="2253:45">tcg_temp_free_i32</name><argument_list pos:start="2253:46" pos:end="2253:51">(<argument pos:start="2253:47" pos:end="2253:50"><expr pos:start="2253:47" pos:end="2253:50"><name pos:start="2253:47" pos:end="2253:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2257:25" pos:end="2257:46"><expr pos:start="2257:25" pos:end="2257:45"><call pos:start="2257:25" pos:end="2257:45"><name pos:start="2257:25" pos:end="2257:33">store_reg</name><argument_list pos:start="2257:34" pos:end="2257:45">(<argument pos:start="2257:35" pos:end="2257:35"><expr pos:start="2257:35" pos:end="2257:35"><name pos:start="2257:35" pos:end="2257:35">s</name></expr></argument>, <argument pos:start="2257:38" pos:end="2257:39"><expr pos:start="2257:38" pos:end="2257:39"><name pos:start="2257:38" pos:end="2257:39">rn</name></expr></argument>, <argument pos:start="2257:42" pos:end="2257:44"><expr pos:start="2257:42" pos:end="2257:44"><name pos:start="2257:42" pos:end="2257:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2259:25" pos:end="2259:30">break;</break>

                    <case pos:start="2261:21" pos:end="2261:30">case <expr pos:start="2261:26" pos:end="2261:29"><literal type="number" pos:start="2261:26" pos:end="2261:29">0x20</literal></expr>:</case> <case pos:start="2261:32" pos:end="2261:41">case <expr pos:start="2261:37" pos:end="2261:40"><literal type="number" pos:start="2261:37" pos:end="2261:40">0x24</literal></expr>:</case> <case pos:start="2261:43" pos:end="2261:52">case <expr pos:start="2261:48" pos:end="2261:51"><literal type="number" pos:start="2261:48" pos:end="2261:51">0x28</literal></expr>:</case> <case pos:start="2261:54" pos:end="2261:63">case <expr pos:start="2261:59" pos:end="2261:62"><literal type="number" pos:start="2261:59" pos:end="2261:62">0x2c</literal></expr>:</case>

                        <comment type="block" pos:start="2263:25" pos:end="2263:53">/* Bitfield insert/clear.  */</comment>

                        <expr_stmt pos:start="2265:25" pos:end="2265:34"><expr pos:start="2265:25" pos:end="2265:33"><call pos:start="2265:25" pos:end="2265:33"><name pos:start="2265:25" pos:end="2265:28">ARCH</name><argument_list pos:start="2265:29" pos:end="2265:33">(<argument pos:start="2265:30" pos:end="2265:32"><expr pos:start="2265:30" pos:end="2265:32"><literal type="number" pos:start="2265:30" pos:end="2265:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2267:25" pos:end="2267:51"><expr pos:start="2267:25" pos:end="2267:50"><name pos:start="2267:25" pos:end="2267:29">shift</name> <operator pos:start="2267:31" pos:end="2267:31">=</operator> <operator pos:start="2267:33" pos:end="2267:33">(</operator><name pos:start="2267:34" pos:end="2267:37">insn</name> <operator pos:start="2267:39" pos:end="2267:40">&gt;&gt;</operator> <literal type="number" pos:start="2267:42" pos:end="2267:42">7</literal><operator pos:start="2267:43" pos:end="2267:43">)</operator> <operator pos:start="2267:45" pos:end="2267:45">&amp;</operator> <literal type="number" pos:start="2267:47" pos:end="2267:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2269:25" pos:end="2269:48"><expr pos:start="2269:25" pos:end="2269:47"><name pos:start="2269:25" pos:end="2269:25">i</name> <operator pos:start="2269:27" pos:end="2269:27">=</operator> <operator pos:start="2269:29" pos:end="2269:29">(</operator><name pos:start="2269:30" pos:end="2269:33">insn</name> <operator pos:start="2269:35" pos:end="2269:36">&gt;&gt;</operator> <literal type="number" pos:start="2269:38" pos:end="2269:39">16</literal><operator pos:start="2269:40" pos:end="2269:40">)</operator> <operator pos:start="2269:42" pos:end="2269:42">&amp;</operator> <literal type="number" pos:start="2269:44" pos:end="2269:47">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2271:25" pos:end="2271:42"><expr pos:start="2271:25" pos:end="2271:41"><name pos:start="2271:25" pos:end="2271:25">i</name> <operator pos:start="2271:27" pos:end="2271:27">=</operator> <name pos:start="2271:29" pos:end="2271:29">i</name> <operator pos:start="2271:31" pos:end="2271:31">+</operator> <literal type="number" pos:start="2271:33" pos:end="2271:35">1</literal> <operator pos:start="2271:35" pos:end="2271:35">-</operator> <name pos:start="2271:37" pos:end="2271:41">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="2273:25" pos:end="2283:25"><if pos:start="2273:25" pos:end="2279:25">if <condition pos:start="2273:28" pos:end="2273:37">(<expr pos:start="2273:29" pos:end="2273:36"><name pos:start="2273:29" pos:end="2273:30">rm</name> <operator pos:start="2273:32" pos:end="2273:33">==</operator> <literal type="number" pos:start="2273:35" pos:end="2273:36">15</literal></expr>)</condition> <block pos:start="2273:39" pos:end="2279:25">{<block_content pos:start="2275:29" pos:end="2277:53">

                            <expr_stmt pos:start="2275:29" pos:end="2275:53"><expr pos:start="2275:29" pos:end="2275:52"><name pos:start="2275:29" pos:end="2275:31">tmp</name> <operator pos:start="2275:33" pos:end="2275:33">=</operator> <call pos:start="2275:35" pos:end="2275:52"><name pos:start="2275:35" pos:end="2275:50">tcg_temp_new_i32</name><argument_list pos:start="2275:51" pos:end="2275:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2277:29" pos:end="2277:53"><expr pos:start="2277:29" pos:end="2277:52"><call pos:start="2277:29" pos:end="2277:52"><name pos:start="2277:29" pos:end="2277:44">tcg_gen_movi_i32</name><argument_list pos:start="2277:45" pos:end="2277:52">(<argument pos:start="2277:46" pos:end="2277:48"><expr pos:start="2277:46" pos:end="2277:48"><name pos:start="2277:46" pos:end="2277:48">tmp</name></expr></argument>, <argument pos:start="2277:51" pos:end="2277:51"><expr pos:start="2277:51" pos:end="2277:51"><literal type="number" pos:start="2277:51" pos:end="2277:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2279:27" pos:end="2283:25">else <block pos:start="2279:32" pos:end="2283:25">{<block_content pos:start="2281:29" pos:end="2281:50">

                            <expr_stmt pos:start="2281:29" pos:end="2281:50"><expr pos:start="2281:29" pos:end="2281:49"><name pos:start="2281:29" pos:end="2281:31">tmp</name> <operator pos:start="2281:33" pos:end="2281:33">=</operator> <call pos:start="2281:35" pos:end="2281:49"><name pos:start="2281:35" pos:end="2281:42">load_reg</name><argument_list pos:start="2281:43" pos:end="2281:49">(<argument pos:start="2281:44" pos:end="2281:44"><expr pos:start="2281:44" pos:end="2281:44"><name pos:start="2281:44" pos:end="2281:44">s</name></expr></argument>, <argument pos:start="2281:47" pos:end="2281:48"><expr pos:start="2281:47" pos:end="2281:48"><name pos:start="2281:47" pos:end="2281:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="2285:25" pos:end="2293:25"><if pos:start="2285:25" pos:end="2293:25">if <condition pos:start="2285:28" pos:end="2285:36">(<expr pos:start="2285:29" pos:end="2285:35"><name pos:start="2285:29" pos:end="2285:29">i</name> <operator pos:start="2285:31" pos:end="2285:32">!=</operator> <literal type="number" pos:start="2285:34" pos:end="2285:35">32</literal></expr>)</condition> <block pos:start="2285:38" pos:end="2293:25">{<block_content pos:start="2287:29" pos:end="2291:52">

                            <expr_stmt pos:start="2287:29" pos:end="2287:51"><expr pos:start="2287:29" pos:end="2287:50"><name pos:start="2287:29" pos:end="2287:32">tmp2</name> <operator pos:start="2287:34" pos:end="2287:34">=</operator> <call pos:start="2287:36" pos:end="2287:50"><name pos:start="2287:36" pos:end="2287:43">load_reg</name><argument_list pos:start="2287:44" pos:end="2287:50">(<argument pos:start="2287:45" pos:end="2287:45"><expr pos:start="2287:45" pos:end="2287:45"><name pos:start="2287:45" pos:end="2287:45">s</name></expr></argument>, <argument pos:start="2287:48" pos:end="2287:49"><expr pos:start="2287:48" pos:end="2287:49"><name pos:start="2287:48" pos:end="2287:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2289:29" pos:end="2289:74"><expr pos:start="2289:29" pos:end="2289:73"><call pos:start="2289:29" pos:end="2289:73"><name pos:start="2289:29" pos:end="2289:47">tcg_gen_deposit_i32</name><argument_list pos:start="2289:48" pos:end="2289:73">(<argument pos:start="2289:49" pos:end="2289:51"><expr pos:start="2289:49" pos:end="2289:51"><name pos:start="2289:49" pos:end="2289:51">tmp</name></expr></argument>, <argument pos:start="2289:54" pos:end="2289:57"><expr pos:start="2289:54" pos:end="2289:57"><name pos:start="2289:54" pos:end="2289:57">tmp2</name></expr></argument>, <argument pos:start="2289:60" pos:end="2289:62"><expr pos:start="2289:60" pos:end="2289:62"><name pos:start="2289:60" pos:end="2289:62">tmp</name></expr></argument>, <argument pos:start="2289:65" pos:end="2289:69"><expr pos:start="2289:65" pos:end="2289:69"><name pos:start="2289:65" pos:end="2289:69">shift</name></expr></argument>, <argument pos:start="2289:72" pos:end="2289:72"><expr pos:start="2289:72" pos:end="2289:72"><name pos:start="2289:72" pos:end="2289:72">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2291:29" pos:end="2291:52"><expr pos:start="2291:29" pos:end="2291:51"><call pos:start="2291:29" pos:end="2291:51"><name pos:start="2291:29" pos:end="2291:45">tcg_temp_free_i32</name><argument_list pos:start="2291:46" pos:end="2291:51">(<argument pos:start="2291:47" pos:end="2291:50"><expr pos:start="2291:47" pos:end="2291:50"><name pos:start="2291:47" pos:end="2291:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2295:25" pos:end="2295:46"><expr pos:start="2295:25" pos:end="2295:45"><call pos:start="2295:25" pos:end="2295:45"><name pos:start="2295:25" pos:end="2295:33">store_reg</name><argument_list pos:start="2295:34" pos:end="2295:45">(<argument pos:start="2295:35" pos:end="2295:35"><expr pos:start="2295:35" pos:end="2295:35"><name pos:start="2295:35" pos:end="2295:35">s</name></expr></argument>, <argument pos:start="2295:38" pos:end="2295:39"><expr pos:start="2295:38" pos:end="2295:39"><name pos:start="2295:38" pos:end="2295:39">rd</name></expr></argument>, <argument pos:start="2295:42" pos:end="2295:44"><expr pos:start="2295:42" pos:end="2295:44"><name pos:start="2295:42" pos:end="2295:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2297:25" pos:end="2297:30">break;</break>

                    <case pos:start="2299:21" pos:end="2299:30">case <expr pos:start="2299:26" pos:end="2299:29"><literal type="number" pos:start="2299:26" pos:end="2299:29">0x12</literal></expr>:</case> <case pos:start="2299:32" pos:end="2299:41">case <expr pos:start="2299:37" pos:end="2299:40"><literal type="number" pos:start="2299:37" pos:end="2299:40">0x16</literal></expr>:</case> <case pos:start="2299:43" pos:end="2299:52">case <expr pos:start="2299:48" pos:end="2299:51"><literal type="number" pos:start="2299:48" pos:end="2299:51">0x1a</literal></expr>:</case> <case pos:start="2299:54" pos:end="2299:63">case <expr pos:start="2299:59" pos:end="2299:62"><literal type="number" pos:start="2299:59" pos:end="2299:62">0x1e</literal></expr>:</case> <comment type="block" pos:start="2299:65" pos:end="2299:74">/* sbfx */</comment>

                    <case pos:start="2301:21" pos:end="2301:30">case <expr pos:start="2301:26" pos:end="2301:29"><literal type="number" pos:start="2301:26" pos:end="2301:29">0x32</literal></expr>:</case> <case pos:start="2301:32" pos:end="2301:41">case <expr pos:start="2301:37" pos:end="2301:40"><literal type="number" pos:start="2301:37" pos:end="2301:40">0x36</literal></expr>:</case> <case pos:start="2301:43" pos:end="2301:52">case <expr pos:start="2301:48" pos:end="2301:51"><literal type="number" pos:start="2301:48" pos:end="2301:51">0x3a</literal></expr>:</case> <case pos:start="2301:54" pos:end="2301:63">case <expr pos:start="2301:59" pos:end="2301:62"><literal type="number" pos:start="2301:59" pos:end="2301:62">0x3e</literal></expr>:</case> <comment type="block" pos:start="2301:65" pos:end="2301:74">/* ubfx */</comment>

                        <expr_stmt pos:start="2303:25" pos:end="2303:34"><expr pos:start="2303:25" pos:end="2303:33"><call pos:start="2303:25" pos:end="2303:33"><name pos:start="2303:25" pos:end="2303:28">ARCH</name><argument_list pos:start="2303:29" pos:end="2303:33">(<argument pos:start="2303:30" pos:end="2303:32"><expr pos:start="2303:30" pos:end="2303:32"><literal type="number" pos:start="2303:30" pos:end="2303:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2305:25" pos:end="2305:46"><expr pos:start="2305:25" pos:end="2305:45"><name pos:start="2305:25" pos:end="2305:27">tmp</name> <operator pos:start="2305:29" pos:end="2305:29">=</operator> <call pos:start="2305:31" pos:end="2305:45"><name pos:start="2305:31" pos:end="2305:38">load_reg</name><argument_list pos:start="2305:39" pos:end="2305:45">(<argument pos:start="2305:40" pos:end="2305:40"><expr pos:start="2305:40" pos:end="2305:40"><name pos:start="2305:40" pos:end="2305:40">s</name></expr></argument>, <argument pos:start="2305:43" pos:end="2305:44"><expr pos:start="2305:43" pos:end="2305:44"><name pos:start="2305:43" pos:end="2305:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2307:25" pos:end="2307:51"><expr pos:start="2307:25" pos:end="2307:50"><name pos:start="2307:25" pos:end="2307:29">shift</name> <operator pos:start="2307:31" pos:end="2307:31">=</operator> <operator pos:start="2307:33" pos:end="2307:33">(</operator><name pos:start="2307:34" pos:end="2307:37">insn</name> <operator pos:start="2307:39" pos:end="2307:40">&gt;&gt;</operator> <literal type="number" pos:start="2307:42" pos:end="2307:42">7</literal><operator pos:start="2307:43" pos:end="2307:43">)</operator> <operator pos:start="2307:45" pos:end="2307:45">&amp;</operator> <literal type="number" pos:start="2307:47" pos:end="2307:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2309:25" pos:end="2309:54"><expr pos:start="2309:25" pos:end="2309:53"><name pos:start="2309:25" pos:end="2309:25">i</name> <operator pos:start="2309:27" pos:end="2309:27">=</operator> <operator pos:start="2309:29" pos:end="2309:29">(</operator><operator pos:start="2309:30" pos:end="2309:30">(</operator><name pos:start="2309:31" pos:end="2309:34">insn</name> <operator pos:start="2309:36" pos:end="2309:37">&gt;&gt;</operator> <literal type="number" pos:start="2309:39" pos:end="2309:40">16</literal><operator pos:start="2309:41" pos:end="2309:41">)</operator> <operator pos:start="2309:43" pos:end="2309:43">&amp;</operator> <literal type="number" pos:start="2309:45" pos:end="2309:48">0x1f</literal><operator pos:start="2309:49" pos:end="2309:49">)</operator> <operator pos:start="2309:51" pos:end="2309:51">+</operator> <literal type="number" pos:start="2309:53" pos:end="2309:53">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="2311:25" pos:end="2313:44"><if pos:start="2311:25" pos:end="2313:44">if <condition pos:start="2311:28" pos:end="2311:43">(<expr pos:start="2311:29" pos:end="2311:42"><name pos:start="2311:29" pos:end="2311:33">shift</name> <operator pos:start="2311:35" pos:end="2311:35">+</operator> <name pos:start="2311:37" pos:end="2311:37">i</name> <operator pos:start="2311:39" pos:end="2311:39">&gt;</operator> <literal type="number" pos:start="2311:41" pos:end="2311:42">32</literal></expr>)</condition><block type="pseudo" pos:start="2313:29" pos:end="2313:44"><block_content pos:start="2313:29" pos:end="2313:44">

                            <goto pos:start="2313:29" pos:end="2313:44">goto <name pos:start="2313:34" pos:end="2313:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="2315:25" pos:end="2327:25"><if pos:start="2315:25" pos:end="2327:25">if <condition pos:start="2315:28" pos:end="2315:35">(<expr pos:start="2315:29" pos:end="2315:34"><name pos:start="2315:29" pos:end="2315:29">i</name> <operator pos:start="2315:31" pos:end="2315:31">&lt;</operator> <literal type="number" pos:start="2315:33" pos:end="2315:34">32</literal></expr>)</condition> <block pos:start="2315:37" pos:end="2327:25">{<block_content pos:start="2317:29" pos:end="2325:29">

                            <if_stmt pos:start="2317:29" pos:end="2325:29"><if pos:start="2317:29" pos:end="2321:29">if <condition pos:start="2317:32" pos:end="2317:43">(<expr pos:start="2317:33" pos:end="2317:42"><name pos:start="2317:33" pos:end="2317:35">op1</name> <operator pos:start="2317:37" pos:end="2317:37">&amp;</operator> <literal type="number" pos:start="2317:39" pos:end="2317:42">0x20</literal></expr>)</condition> <block pos:start="2317:45" pos:end="2321:29">{<block_content pos:start="2319:33" pos:end="2319:68">

                                <expr_stmt pos:start="2319:33" pos:end="2319:68"><expr pos:start="2319:33" pos:end="2319:67"><call pos:start="2319:33" pos:end="2319:67"><name pos:start="2319:33" pos:end="2319:40">gen_ubfx</name><argument_list pos:start="2319:41" pos:end="2319:67">(<argument pos:start="2319:42" pos:end="2319:44"><expr pos:start="2319:42" pos:end="2319:44"><name pos:start="2319:42" pos:end="2319:44">tmp</name></expr></argument>, <argument pos:start="2319:47" pos:end="2319:51"><expr pos:start="2319:47" pos:end="2319:51"><name pos:start="2319:47" pos:end="2319:51">shift</name></expr></argument>, <argument pos:start="2319:54" pos:end="2319:66"><expr pos:start="2319:54" pos:end="2319:66"><operator pos:start="2319:54" pos:end="2319:54">(</operator><literal type="number" pos:start="2319:55" pos:end="2319:56">1u</literal> <operator pos:start="2319:58" pos:end="2319:59">&lt;&lt;</operator> <name pos:start="2319:61" pos:end="2319:61">i</name><operator pos:start="2319:62" pos:end="2319:62">)</operator> <operator pos:start="2319:64" pos:end="2319:64">-</operator> <literal type="number" pos:start="2319:66" pos:end="2319:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2321:31" pos:end="2325:29">else <block pos:start="2321:36" pos:end="2325:29">{<block_content pos:start="2323:33" pos:end="2323:56">

                                <expr_stmt pos:start="2323:33" pos:end="2323:56"><expr pos:start="2323:33" pos:end="2323:55"><call pos:start="2323:33" pos:end="2323:55"><name pos:start="2323:33" pos:end="2323:40">gen_sbfx</name><argument_list pos:start="2323:41" pos:end="2323:55">(<argument pos:start="2323:42" pos:end="2323:44"><expr pos:start="2323:42" pos:end="2323:44"><name pos:start="2323:42" pos:end="2323:44">tmp</name></expr></argument>, <argument pos:start="2323:47" pos:end="2323:51"><expr pos:start="2323:47" pos:end="2323:51"><name pos:start="2323:47" pos:end="2323:51">shift</name></expr></argument>, <argument pos:start="2323:54" pos:end="2323:54"><expr pos:start="2323:54" pos:end="2323:54"><name pos:start="2323:54" pos:end="2323:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2329:25" pos:end="2329:46"><expr pos:start="2329:25" pos:end="2329:45"><call pos:start="2329:25" pos:end="2329:45"><name pos:start="2329:25" pos:end="2329:33">store_reg</name><argument_list pos:start="2329:34" pos:end="2329:45">(<argument pos:start="2329:35" pos:end="2329:35"><expr pos:start="2329:35" pos:end="2329:35"><name pos:start="2329:35" pos:end="2329:35">s</name></expr></argument>, <argument pos:start="2329:38" pos:end="2329:39"><expr pos:start="2329:38" pos:end="2329:39"><name pos:start="2329:38" pos:end="2329:39">rd</name></expr></argument>, <argument pos:start="2329:42" pos:end="2329:44"><expr pos:start="2329:42" pos:end="2329:44"><name pos:start="2329:42" pos:end="2329:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2331:25" pos:end="2331:30">break;</break>

                    <default pos:start="2333:21" pos:end="2333:28">default:</default>

                        <goto pos:start="2335:25" pos:end="2335:40">goto <name pos:start="2335:30" pos:end="2335:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2339:21" pos:end="2339:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2343:17" pos:end="2343:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="2347:9" pos:end="2347:16"><name pos:start="2347:9" pos:end="2347:15">do_ldst</name>:</label>

            <comment type="block" pos:start="2349:13" pos:end="2355:15">/* Check for undefined extension instructions

             * per the ARM Bible IE:

             * xxxx 0111 1111 xxxx  xxxx xxxx 1111 xxxx

             */</comment>

            <expr_stmt pos:start="2357:13" pos:end="2357:42"><expr pos:start="2357:13" pos:end="2357:41"><name pos:start="2357:13" pos:end="2357:14">sh</name> <operator pos:start="2357:16" pos:end="2357:16">=</operator> <operator pos:start="2357:18" pos:end="2357:18">(</operator><literal type="number" pos:start="2357:19" pos:end="2357:21">0xf</literal> <operator pos:start="2357:23" pos:end="2357:24">&lt;&lt;</operator> <literal type="number" pos:start="2357:26" pos:end="2357:27">20</literal><operator pos:start="2357:28" pos:end="2357:28">)</operator> <operator pos:start="2357:30" pos:end="2357:30">|</operator> <operator pos:start="2357:32" pos:end="2357:32">(</operator><literal type="number" pos:start="2357:33" pos:end="2357:35">0xf</literal> <operator pos:start="2357:37" pos:end="2357:38">&lt;&lt;</operator> <literal type="number" pos:start="2357:40" pos:end="2357:40">4</literal><operator pos:start="2357:41" pos:end="2357:41">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2359:13" pos:end="2365:13"><if pos:start="2359:13" pos:end="2365:13">if <condition pos:start="2359:16" pos:end="2359:50">(<expr pos:start="2359:17" pos:end="2359:49"><name pos:start="2359:17" pos:end="2359:19">op1</name> <operator pos:start="2359:21" pos:end="2359:22">==</operator> <literal type="number" pos:start="2359:24" pos:end="2359:26">0x7</literal> <operator pos:start="2359:28" pos:end="2359:29">&amp;&amp;</operator> <operator pos:start="2359:31" pos:end="2359:31">(</operator><operator pos:start="2359:32" pos:end="2359:32">(</operator><name pos:start="2359:33" pos:end="2359:36">insn</name> <operator pos:start="2359:38" pos:end="2359:38">&amp;</operator> <name pos:start="2359:40" pos:end="2359:41">sh</name><operator pos:start="2359:42" pos:end="2359:42">)</operator> <operator pos:start="2359:44" pos:end="2359:45">==</operator> <name pos:start="2359:47" pos:end="2359:48">sh</name><operator pos:start="2359:49" pos:end="2359:49">)</operator></expr>)</condition>

            <block pos:start="2361:13" pos:end="2365:13">{<block_content pos:start="2363:17" pos:end="2363:32">

                <goto pos:start="2363:17" pos:end="2363:32">goto <name pos:start="2363:22" pos:end="2363:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="2367:13" pos:end="2367:38">/* load/store byte/word */</comment>

            <expr_stmt pos:start="2369:13" pos:end="2369:36"><expr pos:start="2369:13" pos:end="2369:35"><name pos:start="2369:13" pos:end="2369:14">rn</name> <operator pos:start="2369:16" pos:end="2369:16">=</operator> <operator pos:start="2369:18" pos:end="2369:18">(</operator><name pos:start="2369:19" pos:end="2369:22">insn</name> <operator pos:start="2369:24" pos:end="2369:25">&gt;&gt;</operator> <literal type="number" pos:start="2369:27" pos:end="2369:28">16</literal><operator pos:start="2369:29" pos:end="2369:29">)</operator> <operator pos:start="2369:31" pos:end="2369:31">&amp;</operator> <literal type="number" pos:start="2369:33" pos:end="2369:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2371:13" pos:end="2371:36"><expr pos:start="2371:13" pos:end="2371:35"><name pos:start="2371:13" pos:end="2371:14">rd</name> <operator pos:start="2371:16" pos:end="2371:16">=</operator> <operator pos:start="2371:18" pos:end="2371:18">(</operator><name pos:start="2371:19" pos:end="2371:22">insn</name> <operator pos:start="2371:24" pos:end="2371:25">&gt;&gt;</operator> <literal type="number" pos:start="2371:27" pos:end="2371:28">12</literal><operator pos:start="2371:29" pos:end="2371:29">)</operator> <operator pos:start="2371:31" pos:end="2371:31">&amp;</operator> <literal type="number" pos:start="2371:33" pos:end="2371:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2373:13" pos:end="2373:35"><expr pos:start="2373:13" pos:end="2373:34"><name pos:start="2373:13" pos:end="2373:16">tmp2</name> <operator pos:start="2373:18" pos:end="2373:18">=</operator> <call pos:start="2373:20" pos:end="2373:34"><name pos:start="2373:20" pos:end="2373:27">load_reg</name><argument_list pos:start="2373:28" pos:end="2373:34">(<argument pos:start="2373:29" pos:end="2373:29"><expr pos:start="2373:29" pos:end="2373:29"><name pos:start="2373:29" pos:end="2373:29">s</name></expr></argument>, <argument pos:start="2373:32" pos:end="2373:33"><expr pos:start="2373:32" pos:end="2373:33"><name pos:start="2373:32" pos:end="2373:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2375:13" pos:end="2375:66"><expr pos:start="2375:13" pos:end="2375:65"><name pos:start="2375:13" pos:end="2375:13">i</name> <operator pos:start="2375:15" pos:end="2375:15">=</operator> <operator pos:start="2375:17" pos:end="2375:17">(</operator><call pos:start="2375:18" pos:end="2375:27"><name pos:start="2375:18" pos:end="2375:24">IS_USER</name><argument_list pos:start="2375:25" pos:end="2375:27">(<argument pos:start="2375:26" pos:end="2375:26"><expr pos:start="2375:26" pos:end="2375:26"><name pos:start="2375:26" pos:end="2375:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="2375:29" pos:end="2375:30">||</operator> <operator pos:start="2375:32" pos:end="2375:32">(</operator><name pos:start="2375:33" pos:end="2375:36">insn</name> <operator pos:start="2375:38" pos:end="2375:38">&amp;</operator> <literal type="number" pos:start="2375:40" pos:end="2375:49">0x01200000</literal><operator pos:start="2375:50" pos:end="2375:50">)</operator> <operator pos:start="2375:52" pos:end="2375:53">==</operator> <literal type="number" pos:start="2375:55" pos:end="2375:64">0x00200000</literal><operator pos:start="2375:65" pos:end="2375:65">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2377:13" pos:end="2379:51"><if pos:start="2377:13" pos:end="2379:51">if <condition pos:start="2377:16" pos:end="2377:33">(<expr pos:start="2377:17" pos:end="2377:32"><name pos:start="2377:17" pos:end="2377:20">insn</name> <operator pos:start="2377:22" pos:end="2377:22">&amp;</operator> <operator pos:start="2377:24" pos:end="2377:24">(</operator><literal type="number" pos:start="2377:25" pos:end="2377:25">1</literal> <operator pos:start="2377:27" pos:end="2377:28">&lt;&lt;</operator> <literal type="number" pos:start="2377:30" pos:end="2377:31">24</literal><operator pos:start="2377:32" pos:end="2377:32">)</operator></expr>)</condition><block type="pseudo" pos:start="2379:17" pos:end="2379:51"><block_content pos:start="2379:17" pos:end="2379:51">

                <expr_stmt pos:start="2379:17" pos:end="2379:51"><expr pos:start="2379:17" pos:end="2379:50"><call pos:start="2379:17" pos:end="2379:50"><name pos:start="2379:17" pos:end="2379:35">gen_add_data_offset</name><argument_list pos:start="2379:36" pos:end="2379:50">(<argument pos:start="2379:37" pos:end="2379:37"><expr pos:start="2379:37" pos:end="2379:37"><name pos:start="2379:37" pos:end="2379:37">s</name></expr></argument>, <argument pos:start="2379:40" pos:end="2379:43"><expr pos:start="2379:40" pos:end="2379:43"><name pos:start="2379:40" pos:end="2379:43">insn</name></expr></argument>, <argument pos:start="2379:46" pos:end="2379:49"><expr pos:start="2379:46" pos:end="2379:49"><name pos:start="2379:46" pos:end="2379:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="2381:13" pos:end="2415:13"><if pos:start="2381:13" pos:end="2397:13">if <condition pos:start="2381:16" pos:end="2381:33">(<expr pos:start="2381:17" pos:end="2381:32"><name pos:start="2381:17" pos:end="2381:20">insn</name> <operator pos:start="2381:22" pos:end="2381:22">&amp;</operator> <operator pos:start="2381:24" pos:end="2381:24">(</operator><literal type="number" pos:start="2381:25" pos:end="2381:25">1</literal> <operator pos:start="2381:27" pos:end="2381:28">&lt;&lt;</operator> <literal type="number" pos:start="2381:30" pos:end="2381:31">20</literal><operator pos:start="2381:32" pos:end="2381:32">)</operator></expr>)</condition> <block pos:start="2381:35" pos:end="2397:13">{<block_content pos:start="2385:17" pos:end="2395:17">

                <comment type="block" pos:start="2383:17" pos:end="2383:26">/* load */</comment>

                <expr_stmt pos:start="2385:17" pos:end="2385:41"><expr pos:start="2385:17" pos:end="2385:40"><name pos:start="2385:17" pos:end="2385:19">tmp</name> <operator pos:start="2385:21" pos:end="2385:21">=</operator> <call pos:start="2385:23" pos:end="2385:40"><name pos:start="2385:23" pos:end="2385:38">tcg_temp_new_i32</name><argument_list pos:start="2385:39" pos:end="2385:40">()</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2387:17" pos:end="2395:17"><if pos:start="2387:17" pos:end="2391:17">if <condition pos:start="2387:20" pos:end="2387:37">(<expr pos:start="2387:21" pos:end="2387:36"><name pos:start="2387:21" pos:end="2387:24">insn</name> <operator pos:start="2387:26" pos:end="2387:26">&amp;</operator> <operator pos:start="2387:28" pos:end="2387:28">(</operator><literal type="number" pos:start="2387:29" pos:end="2387:29">1</literal> <operator pos:start="2387:31" pos:end="2387:32">&lt;&lt;</operator> <literal type="number" pos:start="2387:34" pos:end="2387:35">22</literal><operator pos:start="2387:36" pos:end="2387:36">)</operator></expr>)</condition> <block pos:start="2387:39" pos:end="2391:17">{<block_content pos:start="2389:21" pos:end="2389:48">

                    <expr_stmt pos:start="2389:21" pos:end="2389:48"><expr pos:start="2389:21" pos:end="2389:47"><call pos:start="2389:21" pos:end="2389:47"><name pos:start="2389:21" pos:end="2389:33">gen_aa32_ld8u</name><argument_list pos:start="2389:34" pos:end="2389:47">(<argument pos:start="2389:35" pos:end="2389:37"><expr pos:start="2389:35" pos:end="2389:37"><name pos:start="2389:35" pos:end="2389:37">tmp</name></expr></argument>, <argument pos:start="2389:40" pos:end="2389:43"><expr pos:start="2389:40" pos:end="2389:43"><name pos:start="2389:40" pos:end="2389:43">tmp2</name></expr></argument>, <argument pos:start="2389:46" pos:end="2389:46"><expr pos:start="2389:46" pos:end="2389:46"><name pos:start="2389:46" pos:end="2389:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2391:19" pos:end="2395:17">else <block pos:start="2391:24" pos:end="2395:17">{<block_content pos:start="2393:21" pos:end="2393:49">

                    <expr_stmt pos:start="2393:21" pos:end="2393:49"><expr pos:start="2393:21" pos:end="2393:48"><call pos:start="2393:21" pos:end="2393:48"><name pos:start="2393:21" pos:end="2393:34">gen_aa32_ld32u</name><argument_list pos:start="2393:35" pos:end="2393:48">(<argument pos:start="2393:36" pos:end="2393:38"><expr pos:start="2393:36" pos:end="2393:38"><name pos:start="2393:36" pos:end="2393:38">tmp</name></expr></argument>, <argument pos:start="2393:41" pos:end="2393:44"><expr pos:start="2393:41" pos:end="2393:44"><name pos:start="2393:41" pos:end="2393:44">tmp2</name></expr></argument>, <argument pos:start="2393:47" pos:end="2393:47"><expr pos:start="2393:47" pos:end="2393:47"><name pos:start="2393:47" pos:end="2393:47">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="2397:15" pos:end="2415:13">else <block pos:start="2397:20" pos:end="2415:13">{<block_content pos:start="2401:17" pos:end="2413:39">

                <comment type="block" pos:start="2399:17" pos:end="2399:27">/* store */</comment>

                <expr_stmt pos:start="2401:17" pos:end="2401:38"><expr pos:start="2401:17" pos:end="2401:37"><name pos:start="2401:17" pos:end="2401:19">tmp</name> <operator pos:start="2401:21" pos:end="2401:21">=</operator> <call pos:start="2401:23" pos:end="2401:37"><name pos:start="2401:23" pos:end="2401:30">load_reg</name><argument_list pos:start="2401:31" pos:end="2401:37">(<argument pos:start="2401:32" pos:end="2401:32"><expr pos:start="2401:32" pos:end="2401:32"><name pos:start="2401:32" pos:end="2401:32">s</name></expr></argument>, <argument pos:start="2401:35" pos:end="2401:36"><expr pos:start="2401:35" pos:end="2401:36"><name pos:start="2401:35" pos:end="2401:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2403:17" pos:end="2411:17"><if pos:start="2403:17" pos:end="2407:17">if <condition pos:start="2403:20" pos:end="2403:37">(<expr pos:start="2403:21" pos:end="2403:36"><name pos:start="2403:21" pos:end="2403:24">insn</name> <operator pos:start="2403:26" pos:end="2403:26">&amp;</operator> <operator pos:start="2403:28" pos:end="2403:28">(</operator><literal type="number" pos:start="2403:29" pos:end="2403:29">1</literal> <operator pos:start="2403:31" pos:end="2403:32">&lt;&lt;</operator> <literal type="number" pos:start="2403:34" pos:end="2403:35">22</literal><operator pos:start="2403:36" pos:end="2403:36">)</operator></expr>)</condition> <block pos:start="2403:39" pos:end="2407:17">{<block_content pos:start="2405:21" pos:end="2405:47">

                    <expr_stmt pos:start="2405:21" pos:end="2405:47"><expr pos:start="2405:21" pos:end="2405:46"><call pos:start="2405:21" pos:end="2405:46"><name pos:start="2405:21" pos:end="2405:32">gen_aa32_st8</name><argument_list pos:start="2405:33" pos:end="2405:46">(<argument pos:start="2405:34" pos:end="2405:36"><expr pos:start="2405:34" pos:end="2405:36"><name pos:start="2405:34" pos:end="2405:36">tmp</name></expr></argument>, <argument pos:start="2405:39" pos:end="2405:42"><expr pos:start="2405:39" pos:end="2405:42"><name pos:start="2405:39" pos:end="2405:42">tmp2</name></expr></argument>, <argument pos:start="2405:45" pos:end="2405:45"><expr pos:start="2405:45" pos:end="2405:45"><name pos:start="2405:45" pos:end="2405:45">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2407:19" pos:end="2411:17">else <block pos:start="2407:24" pos:end="2411:17">{<block_content pos:start="2409:21" pos:end="2409:48">

                    <expr_stmt pos:start="2409:21" pos:end="2409:48"><expr pos:start="2409:21" pos:end="2409:47"><call pos:start="2409:21" pos:end="2409:47"><name pos:start="2409:21" pos:end="2409:33">gen_aa32_st32</name><argument_list pos:start="2409:34" pos:end="2409:47">(<argument pos:start="2409:35" pos:end="2409:37"><expr pos:start="2409:35" pos:end="2409:37"><name pos:start="2409:35" pos:end="2409:37">tmp</name></expr></argument>, <argument pos:start="2409:40" pos:end="2409:43"><expr pos:start="2409:40" pos:end="2409:43"><name pos:start="2409:40" pos:end="2409:43">tmp2</name></expr></argument>, <argument pos:start="2409:46" pos:end="2409:46"><expr pos:start="2409:46" pos:end="2409:46"><name pos:start="2409:46" pos:end="2409:46">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2413:17" pos:end="2413:39"><expr pos:start="2413:17" pos:end="2413:38"><call pos:start="2413:17" pos:end="2413:38"><name pos:start="2413:17" pos:end="2413:33">tcg_temp_free_i32</name><argument_list pos:start="2413:34" pos:end="2413:38">(<argument pos:start="2413:35" pos:end="2413:37"><expr pos:start="2413:35" pos:end="2413:37"><name pos:start="2413:35" pos:end="2413:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2417:13" pos:end="2431:13"><if pos:start="2417:13" pos:end="2423:13">if <condition pos:start="2417:16" pos:end="2417:36">(<expr pos:start="2417:17" pos:end="2417:35"><operator pos:start="2417:17" pos:end="2417:17">!</operator><operator pos:start="2417:18" pos:end="2417:18">(</operator><name pos:start="2417:19" pos:end="2417:22">insn</name> <operator pos:start="2417:24" pos:end="2417:24">&amp;</operator> <operator pos:start="2417:26" pos:end="2417:26">(</operator><literal type="number" pos:start="2417:27" pos:end="2417:27">1</literal> <operator pos:start="2417:29" pos:end="2417:30">&lt;&lt;</operator> <literal type="number" pos:start="2417:32" pos:end="2417:33">24</literal><operator pos:start="2417:34" pos:end="2417:34">)</operator><operator pos:start="2417:35" pos:end="2417:35">)</operator></expr>)</condition> <block pos:start="2417:38" pos:end="2423:13">{<block_content pos:start="2419:17" pos:end="2421:39">

                <expr_stmt pos:start="2419:17" pos:end="2419:51"><expr pos:start="2419:17" pos:end="2419:50"><call pos:start="2419:17" pos:end="2419:50"><name pos:start="2419:17" pos:end="2419:35">gen_add_data_offset</name><argument_list pos:start="2419:36" pos:end="2419:50">(<argument pos:start="2419:37" pos:end="2419:37"><expr pos:start="2419:37" pos:end="2419:37"><name pos:start="2419:37" pos:end="2419:37">s</name></expr></argument>, <argument pos:start="2419:40" pos:end="2419:43"><expr pos:start="2419:40" pos:end="2419:43"><name pos:start="2419:40" pos:end="2419:43">insn</name></expr></argument>, <argument pos:start="2419:46" pos:end="2419:49"><expr pos:start="2419:46" pos:end="2419:49"><name pos:start="2419:46" pos:end="2419:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2421:17" pos:end="2421:39"><expr pos:start="2421:17" pos:end="2421:38"><call pos:start="2421:17" pos:end="2421:38"><name pos:start="2421:17" pos:end="2421:25">store_reg</name><argument_list pos:start="2421:26" pos:end="2421:38">(<argument pos:start="2421:27" pos:end="2421:27"><expr pos:start="2421:27" pos:end="2421:27"><name pos:start="2421:27" pos:end="2421:27">s</name></expr></argument>, <argument pos:start="2421:30" pos:end="2421:31"><expr pos:start="2421:30" pos:end="2421:31"><name pos:start="2421:30" pos:end="2421:31">rn</name></expr></argument>, <argument pos:start="2421:34" pos:end="2421:37"><expr pos:start="2421:34" pos:end="2421:37"><name pos:start="2421:34" pos:end="2421:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2423:15" pos:end="2427:13">else if <condition pos:start="2423:23" pos:end="2423:40">(<expr pos:start="2423:24" pos:end="2423:39"><name pos:start="2423:24" pos:end="2423:27">insn</name> <operator pos:start="2423:29" pos:end="2423:29">&amp;</operator> <operator pos:start="2423:31" pos:end="2423:31">(</operator><literal type="number" pos:start="2423:32" pos:end="2423:32">1</literal> <operator pos:start="2423:34" pos:end="2423:35">&lt;&lt;</operator> <literal type="number" pos:start="2423:37" pos:end="2423:38">21</literal><operator pos:start="2423:39" pos:end="2423:39">)</operator></expr>)</condition> <block pos:start="2423:42" pos:end="2427:13">{<block_content pos:start="2425:17" pos:end="2425:39">

                <expr_stmt pos:start="2425:17" pos:end="2425:39"><expr pos:start="2425:17" pos:end="2425:38"><call pos:start="2425:17" pos:end="2425:38"><name pos:start="2425:17" pos:end="2425:25">store_reg</name><argument_list pos:start="2425:26" pos:end="2425:38">(<argument pos:start="2425:27" pos:end="2425:27"><expr pos:start="2425:27" pos:end="2425:27"><name pos:start="2425:27" pos:end="2425:27">s</name></expr></argument>, <argument pos:start="2425:30" pos:end="2425:31"><expr pos:start="2425:30" pos:end="2425:31"><name pos:start="2425:30" pos:end="2425:31">rn</name></expr></argument>, <argument pos:start="2425:34" pos:end="2425:37"><expr pos:start="2425:34" pos:end="2425:37"><name pos:start="2425:34" pos:end="2425:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2427:15" pos:end="2431:13">else <block pos:start="2427:20" pos:end="2431:13">{<block_content pos:start="2429:17" pos:end="2429:40">

                <expr_stmt pos:start="2429:17" pos:end="2429:40"><expr pos:start="2429:17" pos:end="2429:39"><call pos:start="2429:17" pos:end="2429:39"><name pos:start="2429:17" pos:end="2429:33">tcg_temp_free_i32</name><argument_list pos:start="2429:34" pos:end="2429:39">(<argument pos:start="2429:35" pos:end="2429:38"><expr pos:start="2429:35" pos:end="2429:38"><name pos:start="2429:35" pos:end="2429:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2433:13" pos:end="2439:13"><if pos:start="2433:13" pos:end="2439:13">if <condition pos:start="2433:16" pos:end="2433:33">(<expr pos:start="2433:17" pos:end="2433:32"><name pos:start="2433:17" pos:end="2433:20">insn</name> <operator pos:start="2433:22" pos:end="2433:22">&amp;</operator> <operator pos:start="2433:24" pos:end="2433:24">(</operator><literal type="number" pos:start="2433:25" pos:end="2433:25">1</literal> <operator pos:start="2433:27" pos:end="2433:28">&lt;&lt;</operator> <literal type="number" pos:start="2433:30" pos:end="2433:31">20</literal><operator pos:start="2433:32" pos:end="2433:32">)</operator></expr>)</condition> <block pos:start="2433:35" pos:end="2439:13">{<block_content pos:start="2437:17" pos:end="2437:53">

                <comment type="block" pos:start="2435:17" pos:end="2435:41">/* Complete the load.  */</comment>

                <expr_stmt pos:start="2437:17" pos:end="2437:53"><expr pos:start="2437:17" pos:end="2437:52"><call pos:start="2437:17" pos:end="2437:52"><name pos:start="2437:17" pos:end="2437:35">store_reg_from_load</name><argument_list pos:start="2437:36" pos:end="2437:52">(<argument pos:start="2437:37" pos:end="2437:39"><expr pos:start="2437:37" pos:end="2437:39"><name pos:start="2437:37" pos:end="2437:39">env</name></expr></argument>, <argument pos:start="2437:42" pos:end="2437:42"><expr pos:start="2437:42" pos:end="2437:42"><name pos:start="2437:42" pos:end="2437:42">s</name></expr></argument>, <argument pos:start="2437:45" pos:end="2437:46"><expr pos:start="2437:45" pos:end="2437:46"><name pos:start="2437:45" pos:end="2437:46">rd</name></expr></argument>, <argument pos:start="2437:49" pos:end="2437:51"><expr pos:start="2437:49" pos:end="2437:51"><name pos:start="2437:49" pos:end="2437:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2441:13" pos:end="2441:18">break;</break>

        <case pos:start="2443:9" pos:end="2443:18">case <expr pos:start="2443:14" pos:end="2443:17"><literal type="number" pos:start="2443:14" pos:end="2443:17">0x08</literal></expr>:</case>

        <case pos:start="2445:9" pos:end="2445:18">case <expr pos:start="2445:14" pos:end="2445:17"><literal type="number" pos:start="2445:14" pos:end="2445:17">0x09</literal></expr>:</case>

            <block pos:start="2447:13" pos:end="2681:13">{<block_content pos:start="2449:17" pos:end="2679:17">

                <decl_stmt pos:start="2449:17" pos:end="2449:44"><decl pos:start="2449:17" pos:end="2449:21"><type pos:start="2449:17" pos:end="2449:19"><name pos:start="2449:17" pos:end="2449:19">int</name></type> <name pos:start="2449:21" pos:end="2449:21">j</name></decl>, <decl pos:start="2449:24" pos:end="2449:24"><type ref="prev" pos:start="2449:17" pos:end="2449:19"/><name pos:start="2449:24" pos:end="2449:24">n</name></decl>, <decl pos:start="2449:27" pos:end="2449:30"><type ref="prev" pos:start="2449:17" pos:end="2449:19"/><name pos:start="2449:27" pos:end="2449:30">user</name></decl>, <decl pos:start="2449:33" pos:end="2449:43"><type ref="prev" pos:start="2449:17" pos:end="2449:19"/><name pos:start="2449:33" pos:end="2449:43">loaded_base</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2451:17" pos:end="2451:36"><decl pos:start="2451:17" pos:end="2451:35"><type pos:start="2451:17" pos:end="2451:24"><name pos:start="2451:17" pos:end="2451:24">TCGv_i32</name></type> <name pos:start="2451:26" pos:end="2451:35">loaded_var</name></decl>;</decl_stmt>

                <comment type="block" pos:start="2453:17" pos:end="2453:47">/* load/store multiple words */</comment>

                <comment type="block" pos:start="2455:17" pos:end="2455:59">/* XXX: store correct base if write back */</comment>

                <expr_stmt pos:start="2457:17" pos:end="2457:25"><expr pos:start="2457:17" pos:end="2457:24"><name pos:start="2457:17" pos:end="2457:20">user</name> <operator pos:start="2457:22" pos:end="2457:22">=</operator> <literal type="number" pos:start="2457:24" pos:end="2457:24">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="2459:17" pos:end="2471:17"><if pos:start="2459:17" pos:end="2471:17">if <condition pos:start="2459:20" pos:end="2459:37">(<expr pos:start="2459:21" pos:end="2459:36"><name pos:start="2459:21" pos:end="2459:24">insn</name> <operator pos:start="2459:26" pos:end="2459:26">&amp;</operator> <operator pos:start="2459:28" pos:end="2459:28">(</operator><literal type="number" pos:start="2459:29" pos:end="2459:29">1</literal> <operator pos:start="2459:31" pos:end="2459:32">&lt;&lt;</operator> <literal type="number" pos:start="2459:34" pos:end="2459:35">22</literal><operator pos:start="2459:36" pos:end="2459:36">)</operator></expr>)</condition> <block pos:start="2459:39" pos:end="2471:17">{<block_content pos:start="2461:21" pos:end="2469:33">

                    <if_stmt pos:start="2461:21" pos:end="2463:40"><if pos:start="2461:21" pos:end="2463:40">if <condition pos:start="2461:24" pos:end="2461:35">(<expr pos:start="2461:25" pos:end="2461:34"><call pos:start="2461:25" pos:end="2461:34"><name pos:start="2461:25" pos:end="2461:31">IS_USER</name><argument_list pos:start="2461:32" pos:end="2461:34">(<argument pos:start="2461:33" pos:end="2461:33"><expr pos:start="2461:33" pos:end="2461:33"><name pos:start="2461:33" pos:end="2461:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2463:25" pos:end="2463:40"><block_content pos:start="2463:25" pos:end="2463:40">

                        <goto pos:start="2463:25" pos:end="2463:40">goto <name pos:start="2463:30" pos:end="2463:39">illegal_op</name>;</goto></block_content></block></if></if_stmt> <comment type="block" pos:start="2463:42" pos:end="2463:77">/* only usable in supervisor mode */</comment>



                    <if_stmt pos:start="2467:21" pos:end="2469:33"><if pos:start="2467:21" pos:end="2469:33">if <condition pos:start="2467:24" pos:end="2467:48">(<expr pos:start="2467:25" pos:end="2467:47"><operator pos:start="2467:25" pos:end="2467:25">(</operator><name pos:start="2467:26" pos:end="2467:29">insn</name> <operator pos:start="2467:31" pos:end="2467:31">&amp;</operator> <operator pos:start="2467:33" pos:end="2467:33">(</operator><literal type="number" pos:start="2467:34" pos:end="2467:34">1</literal> <operator pos:start="2467:36" pos:end="2467:37">&lt;&lt;</operator> <literal type="number" pos:start="2467:39" pos:end="2467:40">15</literal><operator pos:start="2467:41" pos:end="2467:41">)</operator><operator pos:start="2467:42" pos:end="2467:42">)</operator> <operator pos:start="2467:44" pos:end="2467:45">==</operator> <literal type="number" pos:start="2467:47" pos:end="2467:47">0</literal></expr>)</condition><block type="pseudo" pos:start="2469:25" pos:end="2469:33"><block_content pos:start="2469:25" pos:end="2469:33">

                        <expr_stmt pos:start="2469:25" pos:end="2469:33"><expr pos:start="2469:25" pos:end="2469:32"><name pos:start="2469:25" pos:end="2469:28">user</name> <operator pos:start="2469:30" pos:end="2469:30">=</operator> <literal type="number" pos:start="2469:32" pos:end="2469:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2473:17" pos:end="2473:40"><expr pos:start="2473:17" pos:end="2473:39"><name pos:start="2473:17" pos:end="2473:18">rn</name> <operator pos:start="2473:20" pos:end="2473:20">=</operator> <operator pos:start="2473:22" pos:end="2473:22">(</operator><name pos:start="2473:23" pos:end="2473:26">insn</name> <operator pos:start="2473:28" pos:end="2473:29">&gt;&gt;</operator> <literal type="number" pos:start="2473:31" pos:end="2473:32">16</literal><operator pos:start="2473:33" pos:end="2473:33">)</operator> <operator pos:start="2473:35" pos:end="2473:35">&amp;</operator> <literal type="number" pos:start="2473:37" pos:end="2473:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2475:17" pos:end="2475:39"><expr pos:start="2475:17" pos:end="2475:38"><name pos:start="2475:17" pos:end="2475:20">addr</name> <operator pos:start="2475:22" pos:end="2475:22">=</operator> <call pos:start="2475:24" pos:end="2475:38"><name pos:start="2475:24" pos:end="2475:31">load_reg</name><argument_list pos:start="2475:32" pos:end="2475:38">(<argument pos:start="2475:33" pos:end="2475:33"><expr pos:start="2475:33" pos:end="2475:33"><name pos:start="2475:33" pos:end="2475:33">s</name></expr></argument>, <argument pos:start="2475:36" pos:end="2475:37"><expr pos:start="2475:36" pos:end="2475:37"><name pos:start="2475:36" pos:end="2475:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="2479:17" pos:end="2479:40">/* compute total size */</comment>

                <expr_stmt pos:start="2481:17" pos:end="2481:32"><expr pos:start="2481:17" pos:end="2481:31"><name pos:start="2481:17" pos:end="2481:27">loaded_base</name> <operator pos:start="2481:29" pos:end="2481:29">=</operator> <literal type="number" pos:start="2481:31" pos:end="2481:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2483:17" pos:end="2483:44"><expr pos:start="2483:17" pos:end="2483:43"><call pos:start="2483:17" pos:end="2483:43"><name pos:start="2483:17" pos:end="2483:31">TCGV_UNUSED_I32</name><argument_list pos:start="2483:32" pos:end="2483:43">(<argument pos:start="2483:33" pos:end="2483:42"><expr pos:start="2483:33" pos:end="2483:42"><name pos:start="2483:33" pos:end="2483:42">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2485:17" pos:end="2485:22"><expr pos:start="2485:17" pos:end="2485:21"><name pos:start="2485:17" pos:end="2485:17">n</name> <operator pos:start="2485:19" pos:end="2485:19">=</operator> <literal type="number" pos:start="2485:21" pos:end="2485:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2487:17" pos:end="2493:17">for<control pos:start="2487:20" pos:end="2487:33">(<init pos:start="2487:21" pos:end="2487:24"><expr pos:start="2487:21" pos:end="2487:23"><name pos:start="2487:21" pos:end="2487:21">i</name><operator pos:start="2487:22" pos:end="2487:22">=</operator><literal type="number" pos:start="2487:23" pos:end="2487:23">0</literal></expr>;</init><condition pos:start="2487:25" pos:end="2487:29"><expr pos:start="2487:25" pos:end="2487:28"><name pos:start="2487:25" pos:end="2487:25">i</name><operator pos:start="2487:26" pos:end="2487:26">&lt;</operator><literal type="number" pos:start="2487:27" pos:end="2487:28">16</literal></expr>;</condition><incr pos:start="2487:30" pos:end="2487:32"><expr pos:start="2487:30" pos:end="2487:32"><name pos:start="2487:30" pos:end="2487:30">i</name><operator pos:start="2487:31" pos:end="2487:32">++</operator></expr></incr>)</control> <block pos:start="2487:35" pos:end="2493:17">{<block_content pos:start="2489:21" pos:end="2491:28">

                    <if_stmt pos:start="2489:21" pos:end="2491:28"><if pos:start="2489:21" pos:end="2491:28">if <condition pos:start="2489:24" pos:end="2489:40">(<expr pos:start="2489:25" pos:end="2489:39"><name pos:start="2489:25" pos:end="2489:28">insn</name> <operator pos:start="2489:30" pos:end="2489:30">&amp;</operator> <operator pos:start="2489:32" pos:end="2489:32">(</operator><literal type="number" pos:start="2489:33" pos:end="2489:33">1</literal> <operator pos:start="2489:35" pos:end="2489:36">&lt;&lt;</operator> <name pos:start="2489:38" pos:end="2489:38">i</name><operator pos:start="2489:39" pos:end="2489:39">)</operator></expr>)</condition><block type="pseudo" pos:start="2491:25" pos:end="2491:28"><block_content pos:start="2491:25" pos:end="2491:28">

                        <expr_stmt pos:start="2491:25" pos:end="2491:28"><expr pos:start="2491:25" pos:end="2491:27"><name pos:start="2491:25" pos:end="2491:25">n</name><operator pos:start="2491:26" pos:end="2491:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="2495:17" pos:end="2495:53">/* XXX: test invalid n == 0 case ? */</comment>

                <if_stmt pos:start="2497:17" pos:end="2529:17"><if pos:start="2497:17" pos:end="2511:17">if <condition pos:start="2497:20" pos:end="2497:37">(<expr pos:start="2497:21" pos:end="2497:36"><name pos:start="2497:21" pos:end="2497:24">insn</name> <operator pos:start="2497:26" pos:end="2497:26">&amp;</operator> <operator pos:start="2497:28" pos:end="2497:28">(</operator><literal type="number" pos:start="2497:29" pos:end="2497:29">1</literal> <operator pos:start="2497:31" pos:end="2497:32">&lt;&lt;</operator> <literal type="number" pos:start="2497:34" pos:end="2497:35">23</literal><operator pos:start="2497:36" pos:end="2497:36">)</operator></expr>)</condition> <block pos:start="2497:39" pos:end="2511:17">{<block_content pos:start="2499:21" pos:end="2509:21">

                    <if_stmt pos:start="2499:21" pos:end="2509:21"><if pos:start="2499:21" pos:end="2505:21">if <condition pos:start="2499:24" pos:end="2499:41">(<expr pos:start="2499:25" pos:end="2499:40"><name pos:start="2499:25" pos:end="2499:28">insn</name> <operator pos:start="2499:30" pos:end="2499:30">&amp;</operator> <operator pos:start="2499:32" pos:end="2499:32">(</operator><literal type="number" pos:start="2499:33" pos:end="2499:33">1</literal> <operator pos:start="2499:35" pos:end="2499:36">&lt;&lt;</operator> <literal type="number" pos:start="2499:38" pos:end="2499:39">24</literal><operator pos:start="2499:40" pos:end="2499:40">)</operator></expr>)</condition> <block pos:start="2499:43" pos:end="2505:21">{<block_content pos:start="2503:25" pos:end="2503:56">

                        <comment type="block" pos:start="2501:25" pos:end="2501:43">/* pre increment */</comment>

                        <expr_stmt pos:start="2503:25" pos:end="2503:56"><expr pos:start="2503:25" pos:end="2503:55"><call pos:start="2503:25" pos:end="2503:55"><name pos:start="2503:25" pos:end="2503:40">tcg_gen_addi_i32</name><argument_list pos:start="2503:41" pos:end="2503:55">(<argument pos:start="2503:42" pos:end="2503:45"><expr pos:start="2503:42" pos:end="2503:45"><name pos:start="2503:42" pos:end="2503:45">addr</name></expr></argument>, <argument pos:start="2503:48" pos:end="2503:51"><expr pos:start="2503:48" pos:end="2503:51"><name pos:start="2503:48" pos:end="2503:51">addr</name></expr></argument>, <argument pos:start="2503:54" pos:end="2503:54"><expr pos:start="2503:54" pos:end="2503:54"><literal type="number" pos:start="2503:54" pos:end="2503:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2505:23" pos:end="2509:21">else <block pos:start="2505:28" pos:end="2509:21">{<block_content>

                        <comment type="block" pos:start="2507:25" pos:end="2507:44">/* post increment */</comment>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="2511:19" pos:end="2529:17">else <block pos:start="2511:24" pos:end="2529:17">{<block_content pos:start="2513:21" pos:end="2527:21">

                    <if_stmt pos:start="2513:21" pos:end="2527:21"><if pos:start="2513:21" pos:end="2519:21">if <condition pos:start="2513:24" pos:end="2513:41">(<expr pos:start="2513:25" pos:end="2513:40"><name pos:start="2513:25" pos:end="2513:28">insn</name> <operator pos:start="2513:30" pos:end="2513:30">&amp;</operator> <operator pos:start="2513:32" pos:end="2513:32">(</operator><literal type="number" pos:start="2513:33" pos:end="2513:33">1</literal> <operator pos:start="2513:35" pos:end="2513:36">&lt;&lt;</operator> <literal type="number" pos:start="2513:38" pos:end="2513:39">24</literal><operator pos:start="2513:40" pos:end="2513:40">)</operator></expr>)</condition> <block pos:start="2513:43" pos:end="2519:21">{<block_content pos:start="2517:25" pos:end="2517:63">

                        <comment type="block" pos:start="2515:25" pos:end="2515:43">/* pre decrement */</comment>

                        <expr_stmt pos:start="2517:25" pos:end="2517:63"><expr pos:start="2517:25" pos:end="2517:62"><call pos:start="2517:25" pos:end="2517:62"><name pos:start="2517:25" pos:end="2517:40">tcg_gen_addi_i32</name><argument_list pos:start="2517:41" pos:end="2517:62">(<argument pos:start="2517:42" pos:end="2517:45"><expr pos:start="2517:42" pos:end="2517:45"><name pos:start="2517:42" pos:end="2517:45">addr</name></expr></argument>, <argument pos:start="2517:48" pos:end="2517:51"><expr pos:start="2517:48" pos:end="2517:51"><name pos:start="2517:48" pos:end="2517:51">addr</name></expr></argument>, <argument pos:start="2517:54" pos:end="2517:61"><expr pos:start="2517:54" pos:end="2517:61"><operator pos:start="2517:54" pos:end="2517:54">-</operator><operator pos:start="2517:55" pos:end="2517:55">(</operator><name pos:start="2517:56" pos:end="2517:56">n</name> <operator pos:start="2517:58" pos:end="2517:58">*</operator> <literal type="number" pos:start="2517:60" pos:end="2517:60">4</literal><operator pos:start="2517:61" pos:end="2517:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2519:23" pos:end="2527:21">else <block pos:start="2519:28" pos:end="2527:21">{<block_content pos:start="2523:25" pos:end="2525:69">

                        <comment type="block" pos:start="2521:25" pos:end="2521:44">/* post decrement */</comment>

                        <if_stmt pos:start="2523:25" pos:end="2525:69"><if pos:start="2523:25" pos:end="2525:69">if <condition pos:start="2523:28" pos:end="2523:35">(<expr pos:start="2523:29" pos:end="2523:34"><name pos:start="2523:29" pos:end="2523:29">n</name> <operator pos:start="2523:31" pos:end="2523:32">!=</operator> <literal type="number" pos:start="2523:34" pos:end="2523:34">1</literal></expr>)</condition><block type="pseudo" pos:start="2525:25" pos:end="2525:69"><block_content pos:start="2525:25" pos:end="2525:69">

                        <expr_stmt pos:start="2525:25" pos:end="2525:69"><expr pos:start="2525:25" pos:end="2525:68"><call pos:start="2525:25" pos:end="2525:68"><name pos:start="2525:25" pos:end="2525:40">tcg_gen_addi_i32</name><argument_list pos:start="2525:41" pos:end="2525:68">(<argument pos:start="2525:42" pos:end="2525:45"><expr pos:start="2525:42" pos:end="2525:45"><name pos:start="2525:42" pos:end="2525:45">addr</name></expr></argument>, <argument pos:start="2525:48" pos:end="2525:51"><expr pos:start="2525:48" pos:end="2525:51"><name pos:start="2525:48" pos:end="2525:51">addr</name></expr></argument>, <argument pos:start="2525:54" pos:end="2525:67"><expr pos:start="2525:54" pos:end="2525:67"><operator pos:start="2525:54" pos:end="2525:54">-</operator><operator pos:start="2525:55" pos:end="2525:55">(</operator><operator pos:start="2525:56" pos:end="2525:56">(</operator><name pos:start="2525:57" pos:end="2525:57">n</name> <operator pos:start="2525:59" pos:end="2525:59">-</operator> <literal type="number" pos:start="2525:61" pos:end="2525:61">1</literal><operator pos:start="2525:62" pos:end="2525:62">)</operator> <operator pos:start="2525:64" pos:end="2525:64">*</operator> <literal type="number" pos:start="2525:66" pos:end="2525:66">4</literal><operator pos:start="2525:67" pos:end="2525:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2531:17" pos:end="2531:22"><expr pos:start="2531:17" pos:end="2531:21"><name pos:start="2531:17" pos:end="2531:17">j</name> <operator pos:start="2531:19" pos:end="2531:19">=</operator> <literal type="number" pos:start="2531:21" pos:end="2531:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2533:17" pos:end="2613:17">for<control pos:start="2533:20" pos:end="2533:33">(<init pos:start="2533:21" pos:end="2533:24"><expr pos:start="2533:21" pos:end="2533:23"><name pos:start="2533:21" pos:end="2533:21">i</name><operator pos:start="2533:22" pos:end="2533:22">=</operator><literal type="number" pos:start="2533:23" pos:end="2533:23">0</literal></expr>;</init><condition pos:start="2533:25" pos:end="2533:29"><expr pos:start="2533:25" pos:end="2533:28"><name pos:start="2533:25" pos:end="2533:25">i</name><operator pos:start="2533:26" pos:end="2533:26">&lt;</operator><literal type="number" pos:start="2533:27" pos:end="2533:28">16</literal></expr>;</condition><incr pos:start="2533:30" pos:end="2533:32"><expr pos:start="2533:30" pos:end="2533:32"><name pos:start="2533:30" pos:end="2533:30">i</name><operator pos:start="2533:31" pos:end="2533:32">++</operator></expr></incr>)</control> <block pos:start="2533:35" pos:end="2613:17">{<block_content pos:start="2535:21" pos:end="2611:21">

                    <if_stmt pos:start="2535:21" pos:end="2611:21"><if pos:start="2535:21" pos:end="2611:21">if <condition pos:start="2535:24" pos:end="2535:40">(<expr pos:start="2535:25" pos:end="2535:39"><name pos:start="2535:25" pos:end="2535:28">insn</name> <operator pos:start="2535:30" pos:end="2535:30">&amp;</operator> <operator pos:start="2535:32" pos:end="2535:32">(</operator><literal type="number" pos:start="2535:33" pos:end="2535:33">1</literal> <operator pos:start="2535:35" pos:end="2535:36">&lt;&lt;</operator> <name pos:start="2535:38" pos:end="2535:38">i</name><operator pos:start="2535:39" pos:end="2535:39">)</operator></expr>)</condition> <block pos:start="2535:42" pos:end="2611:21">{<block_content pos:start="2537:25" pos:end="2609:60">

                        <if_stmt pos:start="2537:25" pos:end="2601:25"><if pos:start="2537:25" pos:end="2567:25">if <condition pos:start="2537:28" pos:end="2537:45">(<expr pos:start="2537:29" pos:end="2537:44"><name pos:start="2537:29" pos:end="2537:32">insn</name> <operator pos:start="2537:34" pos:end="2537:34">&amp;</operator> <operator pos:start="2537:36" pos:end="2537:36">(</operator><literal type="number" pos:start="2537:37" pos:end="2537:37">1</literal> <operator pos:start="2537:39" pos:end="2537:40">&lt;&lt;</operator> <literal type="number" pos:start="2537:42" pos:end="2537:43">20</literal><operator pos:start="2537:44" pos:end="2537:44">)</operator></expr>)</condition> <block pos:start="2537:47" pos:end="2567:25">{<block_content pos:start="2541:29" pos:end="2565:29">

                            <comment type="block" pos:start="2539:29" pos:end="2539:38">/* load */</comment>

                            <expr_stmt pos:start="2541:29" pos:end="2541:53"><expr pos:start="2541:29" pos:end="2541:52"><name pos:start="2541:29" pos:end="2541:31">tmp</name> <operator pos:start="2541:33" pos:end="2541:33">=</operator> <call pos:start="2541:35" pos:end="2541:52"><name pos:start="2541:35" pos:end="2541:50">tcg_temp_new_i32</name><argument_list pos:start="2541:51" pos:end="2541:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2543:29" pos:end="2543:66"><expr pos:start="2543:29" pos:end="2543:65"><call pos:start="2543:29" pos:end="2543:65"><name pos:start="2543:29" pos:end="2543:42">gen_aa32_ld32u</name><argument_list pos:start="2543:43" pos:end="2543:65">(<argument pos:start="2543:44" pos:end="2543:46"><expr pos:start="2543:44" pos:end="2543:46"><name pos:start="2543:44" pos:end="2543:46">tmp</name></expr></argument>, <argument pos:start="2543:49" pos:end="2543:52"><expr pos:start="2543:49" pos:end="2543:52"><name pos:start="2543:49" pos:end="2543:52">addr</name></expr></argument>, <argument pos:start="2543:55" pos:end="2543:64"><expr pos:start="2543:55" pos:end="2543:64"><call pos:start="2543:55" pos:end="2543:64"><name pos:start="2543:55" pos:end="2543:61">IS_USER</name><argument_list pos:start="2543:62" pos:end="2543:64">(<argument pos:start="2543:63" pos:end="2543:63"><expr pos:start="2543:63" pos:end="2543:63"><name pos:start="2543:63" pos:end="2543:63">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2545:29" pos:end="2565:29"><if pos:start="2545:29" pos:end="2555:29">if <condition pos:start="2545:32" pos:end="2545:37">(<expr pos:start="2545:33" pos:end="2545:36"><name pos:start="2545:33" pos:end="2545:36">user</name></expr>)</condition> <block pos:start="2545:39" pos:end="2555:29">{<block_content pos:start="2547:33" pos:end="2553:55">

                                <expr_stmt pos:start="2547:33" pos:end="2547:56"><expr pos:start="2547:33" pos:end="2547:55"><name pos:start="2547:33" pos:end="2547:36">tmp2</name> <operator pos:start="2547:38" pos:end="2547:38">=</operator> <call pos:start="2547:40" pos:end="2547:55"><name pos:start="2547:40" pos:end="2547:52">tcg_const_i32</name><argument_list pos:start="2547:53" pos:end="2547:55">(<argument pos:start="2547:54" pos:end="2547:54"><expr pos:start="2547:54" pos:end="2547:54"><name pos:start="2547:54" pos:end="2547:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2549:33" pos:end="2549:76"><expr pos:start="2549:33" pos:end="2549:75"><call pos:start="2549:33" pos:end="2549:75"><name pos:start="2549:33" pos:end="2549:55">gen_helper_set_user_reg</name><argument_list pos:start="2549:56" pos:end="2549:75">(<argument pos:start="2549:57" pos:end="2549:63"><expr pos:start="2549:57" pos:end="2549:63"><name pos:start="2549:57" pos:end="2549:63">cpu_env</name></expr></argument>, <argument pos:start="2549:66" pos:end="2549:69"><expr pos:start="2549:66" pos:end="2549:69"><name pos:start="2549:66" pos:end="2549:69">tmp2</name></expr></argument>, <argument pos:start="2549:72" pos:end="2549:74"><expr pos:start="2549:72" pos:end="2549:74"><name pos:start="2549:72" pos:end="2549:74">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2551:33" pos:end="2551:56"><expr pos:start="2551:33" pos:end="2551:55"><call pos:start="2551:33" pos:end="2551:55"><name pos:start="2551:33" pos:end="2551:49">tcg_temp_free_i32</name><argument_list pos:start="2551:50" pos:end="2551:55">(<argument pos:start="2551:51" pos:end="2551:54"><expr pos:start="2551:51" pos:end="2551:54"><name pos:start="2551:51" pos:end="2551:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2553:33" pos:end="2553:55"><expr pos:start="2553:33" pos:end="2553:54"><call pos:start="2553:33" pos:end="2553:54"><name pos:start="2553:33" pos:end="2553:49">tcg_temp_free_i32</name><argument_list pos:start="2553:50" pos:end="2553:54">(<argument pos:start="2553:51" pos:end="2553:53"><expr pos:start="2553:51" pos:end="2553:53"><name pos:start="2553:51" pos:end="2553:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2555:31" pos:end="2561:29">else if <condition pos:start="2555:39" pos:end="2555:47">(<expr pos:start="2555:40" pos:end="2555:46"><name pos:start="2555:40" pos:end="2555:40">i</name> <operator pos:start="2555:42" pos:end="2555:43">==</operator> <name pos:start="2555:45" pos:end="2555:46">rn</name></expr>)</condition> <block pos:start="2555:49" pos:end="2561:29">{<block_content pos:start="2557:33" pos:end="2559:48">

                                <expr_stmt pos:start="2557:33" pos:end="2557:49"><expr pos:start="2557:33" pos:end="2557:48"><name pos:start="2557:33" pos:end="2557:42">loaded_var</name> <operator pos:start="2557:44" pos:end="2557:44">=</operator> <name pos:start="2557:46" pos:end="2557:48">tmp</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="2559:33" pos:end="2559:48"><expr pos:start="2559:33" pos:end="2559:47"><name pos:start="2559:33" pos:end="2559:43">loaded_base</name> <operator pos:start="2559:45" pos:end="2559:45">=</operator> <literal type="number" pos:start="2559:47" pos:end="2559:47">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2561:31" pos:end="2565:29">else <block pos:start="2561:36" pos:end="2565:29">{<block_content pos:start="2563:33" pos:end="2563:68">

                                <expr_stmt pos:start="2563:33" pos:end="2563:68"><expr pos:start="2563:33" pos:end="2563:67"><call pos:start="2563:33" pos:end="2563:67"><name pos:start="2563:33" pos:end="2563:51">store_reg_from_load</name><argument_list pos:start="2563:52" pos:end="2563:67">(<argument pos:start="2563:53" pos:end="2563:55"><expr pos:start="2563:53" pos:end="2563:55"><name pos:start="2563:53" pos:end="2563:55">env</name></expr></argument>, <argument pos:start="2563:58" pos:end="2563:58"><expr pos:start="2563:58" pos:end="2563:58"><name pos:start="2563:58" pos:end="2563:58">s</name></expr></argument>, <argument pos:start="2563:61" pos:end="2563:61"><expr pos:start="2563:61" pos:end="2563:61"><name pos:start="2563:61" pos:end="2563:61">i</name></expr></argument>, <argument pos:start="2563:64" pos:end="2563:66"><expr pos:start="2563:64" pos:end="2563:66"><name pos:start="2563:64" pos:end="2563:66">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2567:27" pos:end="2601:25">else <block pos:start="2567:32" pos:end="2601:25">{<block_content pos:start="2571:29" pos:end="2599:51">

                            <comment type="block" pos:start="2569:29" pos:end="2569:39">/* store */</comment>

                            <if_stmt pos:start="2571:29" pos:end="2595:29"><if pos:start="2571:29" pos:end="2581:29">if <condition pos:start="2571:32" pos:end="2571:40">(<expr pos:start="2571:33" pos:end="2571:39"><name pos:start="2571:33" pos:end="2571:33">i</name> <operator pos:start="2571:35" pos:end="2571:36">==</operator> <literal type="number" pos:start="2571:38" pos:end="2571:39">15</literal></expr>)</condition> <block pos:start="2571:42" pos:end="2581:29">{<block_content pos:start="2575:33" pos:end="2579:59">

                                <comment type="block" pos:start="2573:33" pos:end="2573:64">/* special case: r15 = PC + 8 */</comment>

                                <expr_stmt pos:start="2575:33" pos:end="2575:54"><expr pos:start="2575:33" pos:end="2575:53"><name pos:start="2575:33" pos:end="2575:35">val</name> <operator pos:start="2575:37" pos:end="2575:37">=</operator> <operator pos:start="2575:39" pos:end="2575:39">(</operator><name pos:start="2575:40" pos:end="2575:43">long</name><operator pos:start="2575:44" pos:end="2575:44">)</operator><name pos:start="2575:45" pos:end="2575:49"><name pos:start="2575:45" pos:end="2575:45">s</name><operator pos:start="2575:46" pos:end="2575:47">-&gt;</operator><name pos:start="2575:48" pos:end="2575:49">pc</name></name> <operator pos:start="2575:51" pos:end="2575:51">+</operator> <literal type="number" pos:start="2575:53" pos:end="2575:53">4</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="2577:33" pos:end="2577:57"><expr pos:start="2577:33" pos:end="2577:56"><name pos:start="2577:33" pos:end="2577:35">tmp</name> <operator pos:start="2577:37" pos:end="2577:37">=</operator> <call pos:start="2577:39" pos:end="2577:56"><name pos:start="2577:39" pos:end="2577:54">tcg_temp_new_i32</name><argument_list pos:start="2577:55" pos:end="2577:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2579:33" pos:end="2579:59"><expr pos:start="2579:33" pos:end="2579:58"><call pos:start="2579:33" pos:end="2579:58"><name pos:start="2579:33" pos:end="2579:48">tcg_gen_movi_i32</name><argument_list pos:start="2579:49" pos:end="2579:58">(<argument pos:start="2579:50" pos:end="2579:52"><expr pos:start="2579:50" pos:end="2579:52"><name pos:start="2579:50" pos:end="2579:52">tmp</name></expr></argument>, <argument pos:start="2579:55" pos:end="2579:57"><expr pos:start="2579:55" pos:end="2579:57"><name pos:start="2579:55" pos:end="2579:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2581:31" pos:end="2591:29">else if <condition pos:start="2581:39" pos:end="2581:44">(<expr pos:start="2581:40" pos:end="2581:43"><name pos:start="2581:40" pos:end="2581:43">user</name></expr>)</condition> <block pos:start="2581:46" pos:end="2591:29">{<block_content pos:start="2583:33" pos:end="2589:56">

                                <expr_stmt pos:start="2583:33" pos:end="2583:57"><expr pos:start="2583:33" pos:end="2583:56"><name pos:start="2583:33" pos:end="2583:35">tmp</name> <operator pos:start="2583:37" pos:end="2583:37">=</operator> <call pos:start="2583:39" pos:end="2583:56"><name pos:start="2583:39" pos:end="2583:54">tcg_temp_new_i32</name><argument_list pos:start="2583:55" pos:end="2583:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2585:33" pos:end="2585:56"><expr pos:start="2585:33" pos:end="2585:55"><name pos:start="2585:33" pos:end="2585:36">tmp2</name> <operator pos:start="2585:38" pos:end="2585:38">=</operator> <call pos:start="2585:40" pos:end="2585:55"><name pos:start="2585:40" pos:end="2585:52">tcg_const_i32</name><argument_list pos:start="2585:53" pos:end="2585:55">(<argument pos:start="2585:54" pos:end="2585:54"><expr pos:start="2585:54" pos:end="2585:54"><name pos:start="2585:54" pos:end="2585:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2587:33" pos:end="2587:76"><expr pos:start="2587:33" pos:end="2587:75"><call pos:start="2587:33" pos:end="2587:75"><name pos:start="2587:33" pos:end="2587:55">gen_helper_get_user_reg</name><argument_list pos:start="2587:56" pos:end="2587:75">(<argument pos:start="2587:57" pos:end="2587:59"><expr pos:start="2587:57" pos:end="2587:59"><name pos:start="2587:57" pos:end="2587:59">tmp</name></expr></argument>, <argument pos:start="2587:62" pos:end="2587:68"><expr pos:start="2587:62" pos:end="2587:68"><name pos:start="2587:62" pos:end="2587:68">cpu_env</name></expr></argument>, <argument pos:start="2587:71" pos:end="2587:74"><expr pos:start="2587:71" pos:end="2587:74"><name pos:start="2587:71" pos:end="2587:74">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2589:33" pos:end="2589:56"><expr pos:start="2589:33" pos:end="2589:55"><call pos:start="2589:33" pos:end="2589:55"><name pos:start="2589:33" pos:end="2589:49">tcg_temp_free_i32</name><argument_list pos:start="2589:50" pos:end="2589:55">(<argument pos:start="2589:51" pos:end="2589:54"><expr pos:start="2589:51" pos:end="2589:54"><name pos:start="2589:51" pos:end="2589:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2591:31" pos:end="2595:29">else <block pos:start="2591:36" pos:end="2595:29">{<block_content pos:start="2593:33" pos:end="2593:53">

                                <expr_stmt pos:start="2593:33" pos:end="2593:53"><expr pos:start="2593:33" pos:end="2593:52"><name pos:start="2593:33" pos:end="2593:35">tmp</name> <operator pos:start="2593:37" pos:end="2593:37">=</operator> <call pos:start="2593:39" pos:end="2593:52"><name pos:start="2593:39" pos:end="2593:46">load_reg</name><argument_list pos:start="2593:47" pos:end="2593:52">(<argument pos:start="2593:48" pos:end="2593:48"><expr pos:start="2593:48" pos:end="2593:48"><name pos:start="2593:48" pos:end="2593:48">s</name></expr></argument>, <argument pos:start="2593:51" pos:end="2593:51"><expr pos:start="2593:51" pos:end="2593:51"><name pos:start="2593:51" pos:end="2593:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2597:29" pos:end="2597:65"><expr pos:start="2597:29" pos:end="2597:64"><call pos:start="2597:29" pos:end="2597:64"><name pos:start="2597:29" pos:end="2597:41">gen_aa32_st32</name><argument_list pos:start="2597:42" pos:end="2597:64">(<argument pos:start="2597:43" pos:end="2597:45"><expr pos:start="2597:43" pos:end="2597:45"><name pos:start="2597:43" pos:end="2597:45">tmp</name></expr></argument>, <argument pos:start="2597:48" pos:end="2597:51"><expr pos:start="2597:48" pos:end="2597:51"><name pos:start="2597:48" pos:end="2597:51">addr</name></expr></argument>, <argument pos:start="2597:54" pos:end="2597:63"><expr pos:start="2597:54" pos:end="2597:63"><call pos:start="2597:54" pos:end="2597:63"><name pos:start="2597:54" pos:end="2597:60">IS_USER</name><argument_list pos:start="2597:61" pos:end="2597:63">(<argument pos:start="2597:62" pos:end="2597:62"><expr pos:start="2597:62" pos:end="2597:62"><name pos:start="2597:62" pos:end="2597:62">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2599:29" pos:end="2599:51"><expr pos:start="2599:29" pos:end="2599:50"><call pos:start="2599:29" pos:end="2599:50"><name pos:start="2599:29" pos:end="2599:45">tcg_temp_free_i32</name><argument_list pos:start="2599:46" pos:end="2599:50">(<argument pos:start="2599:47" pos:end="2599:49"><expr pos:start="2599:47" pos:end="2599:49"><name pos:start="2599:47" pos:end="2599:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2603:25" pos:end="2603:28"><expr pos:start="2603:25" pos:end="2603:27"><name pos:start="2603:25" pos:end="2603:25">j</name><operator pos:start="2603:26" pos:end="2603:27">++</operator></expr>;</expr_stmt>

                        <comment type="block" pos:start="2605:25" pos:end="2605:68">/* no need to add after the last transfer */</comment>

                        <if_stmt pos:start="2607:25" pos:end="2609:60"><if pos:start="2607:25" pos:end="2609:60">if <condition pos:start="2607:28" pos:end="2607:35">(<expr pos:start="2607:29" pos:end="2607:34"><name pos:start="2607:29" pos:end="2607:29">j</name> <operator pos:start="2607:31" pos:end="2607:32">!=</operator> <name pos:start="2607:34" pos:end="2607:34">n</name></expr>)</condition><block type="pseudo" pos:start="2609:29" pos:end="2609:60"><block_content pos:start="2609:29" pos:end="2609:60">

                            <expr_stmt pos:start="2609:29" pos:end="2609:60"><expr pos:start="2609:29" pos:end="2609:59"><call pos:start="2609:29" pos:end="2609:59"><name pos:start="2609:29" pos:end="2609:44">tcg_gen_addi_i32</name><argument_list pos:start="2609:45" pos:end="2609:59">(<argument pos:start="2609:46" pos:end="2609:49"><expr pos:start="2609:46" pos:end="2609:49"><name pos:start="2609:46" pos:end="2609:49">addr</name></expr></argument>, <argument pos:start="2609:52" pos:end="2609:55"><expr pos:start="2609:52" pos:end="2609:55"><name pos:start="2609:52" pos:end="2609:55">addr</name></expr></argument>, <argument pos:start="2609:58" pos:end="2609:58"><expr pos:start="2609:58" pos:end="2609:58"><literal type="number" pos:start="2609:58" pos:end="2609:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="2615:17" pos:end="2659:17"><if pos:start="2615:17" pos:end="2655:17">if <condition pos:start="2615:20" pos:end="2615:37">(<expr pos:start="2615:21" pos:end="2615:36"><name pos:start="2615:21" pos:end="2615:24">insn</name> <operator pos:start="2615:26" pos:end="2615:26">&amp;</operator> <operator pos:start="2615:28" pos:end="2615:28">(</operator><literal type="number" pos:start="2615:29" pos:end="2615:29">1</literal> <operator pos:start="2615:31" pos:end="2615:32">&lt;&lt;</operator> <literal type="number" pos:start="2615:34" pos:end="2615:35">21</literal><operator pos:start="2615:36" pos:end="2615:36">)</operator></expr>)</condition> <block pos:start="2615:39" pos:end="2655:17">{<block_content pos:start="2619:21" pos:end="2653:43">

                    <comment type="block" pos:start="2617:21" pos:end="2617:36">/* write back */</comment>

                    <if_stmt pos:start="2619:21" pos:end="2651:21"><if pos:start="2619:21" pos:end="2633:21">if <condition pos:start="2619:24" pos:end="2619:41">(<expr pos:start="2619:25" pos:end="2619:40"><name pos:start="2619:25" pos:end="2619:28">insn</name> <operator pos:start="2619:30" pos:end="2619:30">&amp;</operator> <operator pos:start="2619:32" pos:end="2619:32">(</operator><literal type="number" pos:start="2619:33" pos:end="2619:33">1</literal> <operator pos:start="2619:35" pos:end="2619:36">&lt;&lt;</operator> <literal type="number" pos:start="2619:38" pos:end="2619:39">23</literal><operator pos:start="2619:40" pos:end="2619:40">)</operator></expr>)</condition> <block pos:start="2619:43" pos:end="2633:21">{<block_content pos:start="2621:25" pos:end="2631:25">

                        <if_stmt pos:start="2621:25" pos:end="2631:25"><if pos:start="2621:25" pos:end="2625:25">if <condition pos:start="2621:28" pos:end="2621:45">(<expr pos:start="2621:29" pos:end="2621:44"><name pos:start="2621:29" pos:end="2621:32">insn</name> <operator pos:start="2621:34" pos:end="2621:34">&amp;</operator> <operator pos:start="2621:36" pos:end="2621:36">(</operator><literal type="number" pos:start="2621:37" pos:end="2621:37">1</literal> <operator pos:start="2621:39" pos:end="2621:40">&lt;&lt;</operator> <literal type="number" pos:start="2621:42" pos:end="2621:43">24</literal><operator pos:start="2621:44" pos:end="2621:44">)</operator></expr>)</condition> <block pos:start="2621:47" pos:end="2625:25">{<block_content>

                            <comment type="block" pos:start="2623:29" pos:end="2623:47">/* pre increment */</comment>

                        </block_content>}</block></if> <else pos:start="2625:27" pos:end="2631:25">else <block pos:start="2625:32" pos:end="2631:25">{<block_content pos:start="2629:29" pos:end="2629:60">

                            <comment type="block" pos:start="2627:29" pos:end="2627:48">/* post increment */</comment>

                            <expr_stmt pos:start="2629:29" pos:end="2629:60"><expr pos:start="2629:29" pos:end="2629:59"><call pos:start="2629:29" pos:end="2629:59"><name pos:start="2629:29" pos:end="2629:44">tcg_gen_addi_i32</name><argument_list pos:start="2629:45" pos:end="2629:59">(<argument pos:start="2629:46" pos:end="2629:49"><expr pos:start="2629:46" pos:end="2629:49"><name pos:start="2629:46" pos:end="2629:49">addr</name></expr></argument>, <argument pos:start="2629:52" pos:end="2629:55"><expr pos:start="2629:52" pos:end="2629:55"><name pos:start="2629:52" pos:end="2629:55">addr</name></expr></argument>, <argument pos:start="2629:58" pos:end="2629:58"><expr pos:start="2629:58" pos:end="2629:58"><literal type="number" pos:start="2629:58" pos:end="2629:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="2633:23" pos:end="2651:21">else <block pos:start="2633:28" pos:end="2651:21">{<block_content pos:start="2635:25" pos:end="2649:25">

                        <if_stmt pos:start="2635:25" pos:end="2649:25"><if pos:start="2635:25" pos:end="2643:25">if <condition pos:start="2635:28" pos:end="2635:45">(<expr pos:start="2635:29" pos:end="2635:44"><name pos:start="2635:29" pos:end="2635:32">insn</name> <operator pos:start="2635:34" pos:end="2635:34">&amp;</operator> <operator pos:start="2635:36" pos:end="2635:36">(</operator><literal type="number" pos:start="2635:37" pos:end="2635:37">1</literal> <operator pos:start="2635:39" pos:end="2635:40">&lt;&lt;</operator> <literal type="number" pos:start="2635:42" pos:end="2635:43">24</literal><operator pos:start="2635:44" pos:end="2635:44">)</operator></expr>)</condition> <block pos:start="2635:47" pos:end="2643:25">{<block_content pos:start="2639:29" pos:end="2641:77">

                            <comment type="block" pos:start="2637:29" pos:end="2637:47">/* pre decrement */</comment>

                            <if_stmt pos:start="2639:29" pos:end="2641:77"><if pos:start="2639:29" pos:end="2641:77">if <condition pos:start="2639:32" pos:end="2639:39">(<expr pos:start="2639:33" pos:end="2639:38"><name pos:start="2639:33" pos:end="2639:33">n</name> <operator pos:start="2639:35" pos:end="2639:36">!=</operator> <literal type="number" pos:start="2639:38" pos:end="2639:38">1</literal></expr>)</condition><block type="pseudo" pos:start="2641:33" pos:end="2641:77"><block_content pos:start="2641:33" pos:end="2641:77">

                                <expr_stmt pos:start="2641:33" pos:end="2641:77"><expr pos:start="2641:33" pos:end="2641:76"><call pos:start="2641:33" pos:end="2641:76"><name pos:start="2641:33" pos:end="2641:48">tcg_gen_addi_i32</name><argument_list pos:start="2641:49" pos:end="2641:76">(<argument pos:start="2641:50" pos:end="2641:53"><expr pos:start="2641:50" pos:end="2641:53"><name pos:start="2641:50" pos:end="2641:53">addr</name></expr></argument>, <argument pos:start="2641:56" pos:end="2641:59"><expr pos:start="2641:56" pos:end="2641:59"><name pos:start="2641:56" pos:end="2641:59">addr</name></expr></argument>, <argument pos:start="2641:62" pos:end="2641:75"><expr pos:start="2641:62" pos:end="2641:75"><operator pos:start="2641:62" pos:end="2641:62">-</operator><operator pos:start="2641:63" pos:end="2641:63">(</operator><operator pos:start="2641:64" pos:end="2641:64">(</operator><name pos:start="2641:65" pos:end="2641:65">n</name> <operator pos:start="2641:67" pos:end="2641:67">-</operator> <literal type="number" pos:start="2641:69" pos:end="2641:69">1</literal><operator pos:start="2641:70" pos:end="2641:70">)</operator> <operator pos:start="2641:72" pos:end="2641:72">*</operator> <literal type="number" pos:start="2641:74" pos:end="2641:74">4</literal><operator pos:start="2641:75" pos:end="2641:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="2643:27" pos:end="2649:25">else <block pos:start="2643:32" pos:end="2649:25">{<block_content pos:start="2647:29" pos:end="2647:67">

                            <comment type="block" pos:start="2645:29" pos:end="2645:48">/* post decrement */</comment>

                            <expr_stmt pos:start="2647:29" pos:end="2647:67"><expr pos:start="2647:29" pos:end="2647:66"><call pos:start="2647:29" pos:end="2647:66"><name pos:start="2647:29" pos:end="2647:44">tcg_gen_addi_i32</name><argument_list pos:start="2647:45" pos:end="2647:66">(<argument pos:start="2647:46" pos:end="2647:49"><expr pos:start="2647:46" pos:end="2647:49"><name pos:start="2647:46" pos:end="2647:49">addr</name></expr></argument>, <argument pos:start="2647:52" pos:end="2647:55"><expr pos:start="2647:52" pos:end="2647:55"><name pos:start="2647:52" pos:end="2647:55">addr</name></expr></argument>, <argument pos:start="2647:58" pos:end="2647:65"><expr pos:start="2647:58" pos:end="2647:65"><operator pos:start="2647:58" pos:end="2647:58">-</operator><operator pos:start="2647:59" pos:end="2647:59">(</operator><name pos:start="2647:60" pos:end="2647:60">n</name> <operator pos:start="2647:62" pos:end="2647:62">*</operator> <literal type="number" pos:start="2647:64" pos:end="2647:64">4</literal><operator pos:start="2647:65" pos:end="2647:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="2653:21" pos:end="2653:43"><expr pos:start="2653:21" pos:end="2653:42"><call pos:start="2653:21" pos:end="2653:42"><name pos:start="2653:21" pos:end="2653:29">store_reg</name><argument_list pos:start="2653:30" pos:end="2653:42">(<argument pos:start="2653:31" pos:end="2653:31"><expr pos:start="2653:31" pos:end="2653:31"><name pos:start="2653:31" pos:end="2653:31">s</name></expr></argument>, <argument pos:start="2653:34" pos:end="2653:35"><expr pos:start="2653:34" pos:end="2653:35"><name pos:start="2653:34" pos:end="2653:35">rn</name></expr></argument>, <argument pos:start="2653:38" pos:end="2653:41"><expr pos:start="2653:38" pos:end="2653:41"><name pos:start="2653:38" pos:end="2653:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2655:19" pos:end="2659:17">else <block pos:start="2655:24" pos:end="2659:17">{<block_content pos:start="2657:21" pos:end="2657:44">

                    <expr_stmt pos:start="2657:21" pos:end="2657:44"><expr pos:start="2657:21" pos:end="2657:43"><call pos:start="2657:21" pos:end="2657:43"><name pos:start="2657:21" pos:end="2657:37">tcg_temp_free_i32</name><argument_list pos:start="2657:38" pos:end="2657:43">(<argument pos:start="2657:39" pos:end="2657:42"><expr pos:start="2657:39" pos:end="2657:42"><name pos:start="2657:39" pos:end="2657:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="2661:17" pos:end="2665:17"><if pos:start="2661:17" pos:end="2665:17">if <condition pos:start="2661:20" pos:end="2661:32">(<expr pos:start="2661:21" pos:end="2661:31"><name pos:start="2661:21" pos:end="2661:31">loaded_base</name></expr>)</condition> <block pos:start="2661:34" pos:end="2665:17">{<block_content pos:start="2663:21" pos:end="2663:49">

                    <expr_stmt pos:start="2663:21" pos:end="2663:49"><expr pos:start="2663:21" pos:end="2663:48"><call pos:start="2663:21" pos:end="2663:48"><name pos:start="2663:21" pos:end="2663:29">store_reg</name><argument_list pos:start="2663:30" pos:end="2663:48">(<argument pos:start="2663:31" pos:end="2663:31"><expr pos:start="2663:31" pos:end="2663:31"><name pos:start="2663:31" pos:end="2663:31">s</name></expr></argument>, <argument pos:start="2663:34" pos:end="2663:35"><expr pos:start="2663:34" pos:end="2663:35"><name pos:start="2663:34" pos:end="2663:35">rn</name></expr></argument>, <argument pos:start="2663:38" pos:end="2663:47"><expr pos:start="2663:38" pos:end="2663:47"><name pos:start="2663:38" pos:end="2663:47">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="2667:17" pos:end="2679:17"><if pos:start="2667:17" pos:end="2679:17">if <condition pos:start="2667:20" pos:end="2667:48">(<expr pos:start="2667:21" pos:end="2667:47"><operator pos:start="2667:21" pos:end="2667:21">(</operator><name pos:start="2667:22" pos:end="2667:25">insn</name> <operator pos:start="2667:27" pos:end="2667:27">&amp;</operator> <operator pos:start="2667:29" pos:end="2667:29">(</operator><literal type="number" pos:start="2667:30" pos:end="2667:30">1</literal> <operator pos:start="2667:32" pos:end="2667:33">&lt;&lt;</operator> <literal type="number" pos:start="2667:35" pos:end="2667:36">22</literal><operator pos:start="2667:37" pos:end="2667:37">)</operator><operator pos:start="2667:38" pos:end="2667:38">)</operator> <operator pos:start="2667:40" pos:end="2667:41">&amp;&amp;</operator> <operator pos:start="2667:43" pos:end="2667:43">!</operator><name pos:start="2667:44" pos:end="2667:47">user</name></expr>)</condition> <block pos:start="2667:50" pos:end="2679:17">{<block_content pos:start="2671:21" pos:end="2677:45">

                    <comment type="block" pos:start="2669:21" pos:end="2669:50">/* Restore CPSR from SPSR.  */</comment>

                    <expr_stmt pos:start="2671:21" pos:end="2671:47"><expr pos:start="2671:21" pos:end="2671:46"><name pos:start="2671:21" pos:end="2671:23">tmp</name> <operator pos:start="2671:25" pos:end="2671:25">=</operator> <call pos:start="2671:27" pos:end="2671:46"><name pos:start="2671:27" pos:end="2671:40">load_cpu_field</name><argument_list pos:start="2671:41" pos:end="2671:46">(<argument pos:start="2671:42" pos:end="2671:45"><expr pos:start="2671:42" pos:end="2671:45"><name pos:start="2671:42" pos:end="2671:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2673:21" pos:end="2673:50"><expr pos:start="2673:21" pos:end="2673:49"><call pos:start="2673:21" pos:end="2673:49"><name pos:start="2673:21" pos:end="2673:32">gen_set_cpsr</name><argument_list pos:start="2673:33" pos:end="2673:49">(<argument pos:start="2673:34" pos:end="2673:36"><expr pos:start="2673:34" pos:end="2673:36"><name pos:start="2673:34" pos:end="2673:36">tmp</name></expr></argument>, <argument pos:start="2673:39" pos:end="2673:48"><expr pos:start="2673:39" pos:end="2673:48"><literal type="number" pos:start="2673:39" pos:end="2673:48">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2675:21" pos:end="2675:43"><expr pos:start="2675:21" pos:end="2675:42"><call pos:start="2675:21" pos:end="2675:42"><name pos:start="2675:21" pos:end="2675:37">tcg_temp_free_i32</name><argument_list pos:start="2675:38" pos:end="2675:42">(<argument pos:start="2675:39" pos:end="2675:41"><expr pos:start="2675:39" pos:end="2675:41"><name pos:start="2675:39" pos:end="2675:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2677:21" pos:end="2677:45"><expr pos:start="2677:21" pos:end="2677:44"><name pos:start="2677:21" pos:end="2677:29"><name pos:start="2677:21" pos:end="2677:21">s</name><operator pos:start="2677:22" pos:end="2677:23">-&gt;</operator><name pos:start="2677:24" pos:end="2677:29">is_jmp</name></name> <operator pos:start="2677:31" pos:end="2677:31">=</operator> <name pos:start="2677:33" pos:end="2677:44">DISAS_UPDATE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="2683:13" pos:end="2683:18">break;</break>

        <case pos:start="2685:9" pos:end="2685:17">case <expr pos:start="2685:14" pos:end="2685:16"><literal type="number" pos:start="2685:14" pos:end="2685:16">0xa</literal></expr>:</case>

        <case pos:start="2687:9" pos:end="2687:17">case <expr pos:start="2687:14" pos:end="2687:16"><literal type="number" pos:start="2687:14" pos:end="2687:16">0xb</literal></expr>:</case>

            <block pos:start="2689:13" pos:end="2715:13">{<block_content pos:start="2691:17" pos:end="2713:32">

                <decl_stmt pos:start="2691:17" pos:end="2691:31"><decl pos:start="2691:17" pos:end="2691:30"><type pos:start="2691:17" pos:end="2691:23"><name pos:start="2691:17" pos:end="2691:23">int32_t</name></type> <name pos:start="2691:25" pos:end="2691:30">offset</name></decl>;</decl_stmt>



                <comment type="block" pos:start="2695:17" pos:end="2695:39">/* branch (and link) */</comment>

                <expr_stmt pos:start="2697:17" pos:end="2697:37"><expr pos:start="2697:17" pos:end="2697:36"><name pos:start="2697:17" pos:end="2697:19">val</name> <operator pos:start="2697:21" pos:end="2697:21">=</operator> <operator pos:start="2697:23" pos:end="2697:23">(</operator><name pos:start="2697:24" pos:end="2697:30">int32_t</name><operator pos:start="2697:31" pos:end="2697:31">)</operator><name pos:start="2697:32" pos:end="2697:36"><name pos:start="2697:32" pos:end="2697:32">s</name><operator pos:start="2697:33" pos:end="2697:34">-&gt;</operator><name pos:start="2697:35" pos:end="2697:36">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="2699:17" pos:end="2707:17"><if pos:start="2699:17" pos:end="2707:17">if <condition pos:start="2699:20" pos:end="2699:37">(<expr pos:start="2699:21" pos:end="2699:36"><name pos:start="2699:21" pos:end="2699:24">insn</name> <operator pos:start="2699:26" pos:end="2699:26">&amp;</operator> <operator pos:start="2699:28" pos:end="2699:28">(</operator><literal type="number" pos:start="2699:29" pos:end="2699:29">1</literal> <operator pos:start="2699:31" pos:end="2699:32">&lt;&lt;</operator> <literal type="number" pos:start="2699:34" pos:end="2699:35">24</literal><operator pos:start="2699:36" pos:end="2699:36">)</operator></expr>)</condition> <block pos:start="2699:39" pos:end="2707:17">{<block_content pos:start="2701:21" pos:end="2705:42">

                    <expr_stmt pos:start="2701:21" pos:end="2701:45"><expr pos:start="2701:21" pos:end="2701:44"><name pos:start="2701:21" pos:end="2701:23">tmp</name> <operator pos:start="2701:25" pos:end="2701:25">=</operator> <call pos:start="2701:27" pos:end="2701:44"><name pos:start="2701:27" pos:end="2701:42">tcg_temp_new_i32</name><argument_list pos:start="2701:43" pos:end="2701:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2703:21" pos:end="2703:47"><expr pos:start="2703:21" pos:end="2703:46"><call pos:start="2703:21" pos:end="2703:46"><name pos:start="2703:21" pos:end="2703:36">tcg_gen_movi_i32</name><argument_list pos:start="2703:37" pos:end="2703:46">(<argument pos:start="2703:38" pos:end="2703:40"><expr pos:start="2703:38" pos:end="2703:40"><name pos:start="2703:38" pos:end="2703:40">tmp</name></expr></argument>, <argument pos:start="2703:43" pos:end="2703:45"><expr pos:start="2703:43" pos:end="2703:45"><name pos:start="2703:43" pos:end="2703:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2705:21" pos:end="2705:42"><expr pos:start="2705:21" pos:end="2705:41"><call pos:start="2705:21" pos:end="2705:41"><name pos:start="2705:21" pos:end="2705:29">store_reg</name><argument_list pos:start="2705:30" pos:end="2705:41">(<argument pos:start="2705:31" pos:end="2705:31"><expr pos:start="2705:31" pos:end="2705:31"><name pos:start="2705:31" pos:end="2705:31">s</name></expr></argument>, <argument pos:start="2705:34" pos:end="2705:35"><expr pos:start="2705:34" pos:end="2705:35"><literal type="number" pos:start="2705:34" pos:end="2705:35">14</literal></expr></argument>, <argument pos:start="2705:38" pos:end="2705:40"><expr pos:start="2705:38" pos:end="2705:40"><name pos:start="2705:38" pos:end="2705:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2709:17" pos:end="2709:54"><expr pos:start="2709:17" pos:end="2709:53"><name pos:start="2709:17" pos:end="2709:22">offset</name> <operator pos:start="2709:24" pos:end="2709:24">=</operator> <call pos:start="2709:26" pos:end="2709:53"><name pos:start="2709:26" pos:end="2709:35">sextract32</name><argument_list pos:start="2709:36" pos:end="2709:53">(<argument pos:start="2709:37" pos:end="2709:45"><expr pos:start="2709:37" pos:end="2709:45"><name pos:start="2709:37" pos:end="2709:40">insn</name> <operator pos:start="2709:42" pos:end="2709:43">&lt;&lt;</operator> <literal type="number" pos:start="2709:45" pos:end="2709:45">2</literal></expr></argument>, <argument pos:start="2709:48" pos:end="2709:48"><expr pos:start="2709:48" pos:end="2709:48"><literal type="number" pos:start="2709:48" pos:end="2709:48">0</literal></expr></argument>, <argument pos:start="2709:51" pos:end="2709:52"><expr pos:start="2709:51" pos:end="2709:52"><literal type="number" pos:start="2709:51" pos:end="2709:52">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2711:17" pos:end="2711:34"><expr pos:start="2711:17" pos:end="2711:33"><name pos:start="2711:17" pos:end="2711:19">val</name> <operator pos:start="2711:21" pos:end="2711:22">+=</operator> <name pos:start="2711:24" pos:end="2711:29">offset</name> <operator pos:start="2711:31" pos:end="2711:31">+</operator> <literal type="number" pos:start="2711:33" pos:end="2711:33">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2713:17" pos:end="2713:32"><expr pos:start="2713:17" pos:end="2713:31"><call pos:start="2713:17" pos:end="2713:31"><name pos:start="2713:17" pos:end="2713:23">gen_jmp</name><argument_list pos:start="2713:24" pos:end="2713:31">(<argument pos:start="2713:25" pos:end="2713:25"><expr pos:start="2713:25" pos:end="2713:25"><name pos:start="2713:25" pos:end="2713:25">s</name></expr></argument>, <argument pos:start="2713:28" pos:end="2713:30"><expr pos:start="2713:28" pos:end="2713:30"><name pos:start="2713:28" pos:end="2713:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="2717:13" pos:end="2717:18">break;</break>

        <case pos:start="2719:9" pos:end="2719:17">case <expr pos:start="2719:14" pos:end="2719:16"><literal type="number" pos:start="2719:14" pos:end="2719:16">0xc</literal></expr>:</case>

        <case pos:start="2721:9" pos:end="2721:17">case <expr pos:start="2721:14" pos:end="2721:16"><literal type="number" pos:start="2721:14" pos:end="2721:16">0xd</literal></expr>:</case>

        <case pos:start="2723:9" pos:end="2723:17">case <expr pos:start="2723:14" pos:end="2723:16"><literal type="number" pos:start="2723:14" pos:end="2723:16">0xe</literal></expr>:</case>

            <if_stmt pos:start="2725:13" pos:end="2741:13"><if pos:start="2725:13" pos:end="2735:13">if <condition pos:start="2725:16" pos:end="2725:42">(<expr pos:start="2725:17" pos:end="2725:41"><operator pos:start="2725:17" pos:end="2725:17">(</operator><operator pos:start="2725:18" pos:end="2725:18">(</operator><name pos:start="2725:19" pos:end="2725:22">insn</name> <operator pos:start="2725:24" pos:end="2725:25">&gt;&gt;</operator> <literal type="number" pos:start="2725:27" pos:end="2725:27">8</literal><operator pos:start="2725:28" pos:end="2725:28">)</operator> <operator pos:start="2725:30" pos:end="2725:30">&amp;</operator> <literal type="number" pos:start="2725:32" pos:end="2725:34">0xe</literal><operator pos:start="2725:35" pos:end="2725:35">)</operator> <operator pos:start="2725:37" pos:end="2725:38">==</operator> <literal type="number" pos:start="2725:40" pos:end="2725:41">10</literal></expr>)</condition> <block pos:start="2725:44" pos:end="2735:13">{<block_content pos:start="2729:17" pos:end="2733:17">

                <comment type="block" pos:start="2727:17" pos:end="2727:27">/* VFP.  */</comment>

                <if_stmt pos:start="2729:17" pos:end="2733:17"><if pos:start="2729:17" pos:end="2733:17">if <condition pos:start="2729:20" pos:end="2729:49">(<expr pos:start="2729:21" pos:end="2729:48"><call pos:start="2729:21" pos:end="2729:48"><name pos:start="2729:21" pos:end="2729:34">disas_vfp_insn</name><argument_list pos:start="2729:35" pos:end="2729:48">(<argument pos:start="2729:36" pos:end="2729:38"><expr pos:start="2729:36" pos:end="2729:38"><name pos:start="2729:36" pos:end="2729:38">env</name></expr></argument>, <argument pos:start="2729:41" pos:end="2729:41"><expr pos:start="2729:41" pos:end="2729:41"><name pos:start="2729:41" pos:end="2729:41">s</name></expr></argument>, <argument pos:start="2729:44" pos:end="2729:47"><expr pos:start="2729:44" pos:end="2729:47"><name pos:start="2729:44" pos:end="2729:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2729:51" pos:end="2733:17">{<block_content pos:start="2731:21" pos:end="2731:36">

                    <goto pos:start="2731:21" pos:end="2731:36">goto <name pos:start="2731:26" pos:end="2731:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2735:15" pos:end="2741:13">else if <condition pos:start="2735:23" pos:end="2735:55">(<expr pos:start="2735:24" pos:end="2735:54"><call pos:start="2735:24" pos:end="2735:54"><name pos:start="2735:24" pos:end="2735:40">disas_coproc_insn</name><argument_list pos:start="2735:41" pos:end="2735:54">(<argument pos:start="2735:42" pos:end="2735:44"><expr pos:start="2735:42" pos:end="2735:44"><name pos:start="2735:42" pos:end="2735:44">env</name></expr></argument>, <argument pos:start="2735:47" pos:end="2735:47"><expr pos:start="2735:47" pos:end="2735:47"><name pos:start="2735:47" pos:end="2735:47">s</name></expr></argument>, <argument pos:start="2735:50" pos:end="2735:53"><expr pos:start="2735:50" pos:end="2735:53"><name pos:start="2735:50" pos:end="2735:53">insn</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2735:57" pos:end="2741:13">{<block_content pos:start="2739:17" pos:end="2739:32">

                <comment type="block" pos:start="2737:17" pos:end="2737:35">/* Coprocessor.  */</comment>

                <goto pos:start="2739:17" pos:end="2739:32">goto <name pos:start="2739:22" pos:end="2739:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2743:13" pos:end="2743:18">break;</break>

        <case pos:start="2745:9" pos:end="2745:17">case <expr pos:start="2745:14" pos:end="2745:16"><literal type="number" pos:start="2745:14" pos:end="2745:16">0xf</literal></expr>:</case>

            <comment type="block" pos:start="2747:13" pos:end="2747:21">/* swi */</comment>

            <expr_stmt pos:start="2749:13" pos:end="2749:36"><expr pos:start="2749:13" pos:end="2749:35"><call pos:start="2749:13" pos:end="2749:35"><name pos:start="2749:13" pos:end="2749:25">gen_set_pc_im</name><argument_list pos:start="2749:26" pos:end="2749:35">(<argument pos:start="2749:27" pos:end="2749:27"><expr pos:start="2749:27" pos:end="2749:27"><name pos:start="2749:27" pos:end="2749:27">s</name></expr></argument>, <argument pos:start="2749:30" pos:end="2749:34"><expr pos:start="2749:30" pos:end="2749:34"><name pos:start="2749:30" pos:end="2749:34"><name pos:start="2749:30" pos:end="2749:30">s</name><operator pos:start="2749:31" pos:end="2749:32">-&gt;</operator><name pos:start="2749:33" pos:end="2749:34">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2751:13" pos:end="2751:48"><expr pos:start="2751:13" pos:end="2751:47"><name pos:start="2751:13" pos:end="2751:22"><name pos:start="2751:13" pos:end="2751:13">s</name><operator pos:start="2751:14" pos:end="2751:15">-&gt;</operator><name pos:start="2751:16" pos:end="2751:22">svc_imm</name></name> <operator pos:start="2751:24" pos:end="2751:24">=</operator> <call pos:start="2751:26" pos:end="2751:47"><name pos:start="2751:26" pos:end="2751:34">extract32</name><argument_list pos:start="2751:35" pos:end="2751:47">(<argument pos:start="2751:36" pos:end="2751:39"><expr pos:start="2751:36" pos:end="2751:39"><name pos:start="2751:36" pos:end="2751:39">insn</name></expr></argument>, <argument pos:start="2751:42" pos:end="2751:42"><expr pos:start="2751:42" pos:end="2751:42"><literal type="number" pos:start="2751:42" pos:end="2751:42">0</literal></expr></argument>, <argument pos:start="2751:45" pos:end="2751:46"><expr pos:start="2751:45" pos:end="2751:46"><literal type="number" pos:start="2751:45" pos:end="2751:46">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2753:13" pos:end="2753:34"><expr pos:start="2753:13" pos:end="2753:33"><name pos:start="2753:13" pos:end="2753:21"><name pos:start="2753:13" pos:end="2753:13">s</name><operator pos:start="2753:14" pos:end="2753:15">-&gt;</operator><name pos:start="2753:16" pos:end="2753:21">is_jmp</name></name> <operator pos:start="2753:23" pos:end="2753:23">=</operator> <name pos:start="2753:25" pos:end="2753:33">DISAS_SWI</name></expr>;</expr_stmt>

            <break pos:start="2755:13" pos:end="2755:18">break;</break>

        <default pos:start="2757:9" pos:end="2757:16">default:</default>

        <label pos:start="2759:9" pos:end="2759:19"><name pos:start="2759:9" pos:end="2759:18">illegal_op</name>:</label>

            <expr_stmt pos:start="2761:13" pos:end="2761:69"><expr pos:start="2761:13" pos:end="2761:68"><call pos:start="2761:13" pos:end="2761:68"><name pos:start="2761:13" pos:end="2761:30">gen_exception_insn</name><argument_list pos:start="2761:31" pos:end="2761:68">(<argument pos:start="2761:32" pos:end="2761:32"><expr pos:start="2761:32" pos:end="2761:32"><name pos:start="2761:32" pos:end="2761:32">s</name></expr></argument>, <argument pos:start="2761:35" pos:end="2761:35"><expr pos:start="2761:35" pos:end="2761:35"><literal type="number" pos:start="2761:35" pos:end="2761:35">4</literal></expr></argument>, <argument pos:start="2761:38" pos:end="2761:46"><expr pos:start="2761:38" pos:end="2761:46"><name pos:start="2761:38" pos:end="2761:46">EXCP_UDEF</name></expr></argument>, <argument pos:start="2761:49" pos:end="2761:67"><expr pos:start="2761:49" pos:end="2761:67"><call pos:start="2761:49" pos:end="2761:67"><name pos:start="2761:49" pos:end="2761:65">syn_uncategorized</name><argument_list pos:start="2761:66" pos:end="2761:67">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2763:13" pos:end="2763:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
