<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21421.c" pos:tabs="8"><function pos:start="1:1" pos:end="199:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mips_cps_realize</name><parameter_list pos:start="1:29" pos:end="1:60">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:40">DeviceState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:59"><decl pos:start="1:48" pos:end="1:59"><type pos:start="1:48" pos:end="1:59"><name pos:start="1:48" pos:end="1:52">Error</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="199:1">{<block_content pos:start="5:5" pos:end="197:80">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MIPSCPSState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:35">= <expr pos:start="5:23" pos:end="5:35"><call pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:30">MIPS_CPS</name><argument_list pos:start="5:31" pos:end="5:35">(<argument pos:start="5:32" pos:end="5:34"><expr pos:start="5:32" pos:end="5:34"><name pos:start="5:32" pos:end="5:34">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">CPUMIPSState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:21">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">MIPSCPU</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">cpu</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:21"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:9">Error</name> <modifier pos:start="13:11" pos:end="13:11">*</modifier></type><name pos:start="13:12" pos:end="13:14">err</name> <init pos:start="13:16" pos:end="13:21">= <expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:25">gcr_base</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">bool</name></type> <name pos:start="17:10" pos:end="17:20">itu_present</name> <init pos:start="17:22" pos:end="17:28">= <expr pos:start="17:24" pos:end="17:28"><name pos:start="17:24" pos:end="17:28">false</name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="57:5">for <control pos:start="21:9" pos:end="21:35">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:30"><expr pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:29"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:29">num_vp</name></name></expr>;</condition> <incr pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:32">i</name><operator pos:start="21:33" pos:end="21:34">++</operator></expr></incr>)</control> <block pos:start="21:37" pos:end="57:5">{<block_content pos:start="23:9" pos:end="55:49">

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:11">cpu</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:41"><name pos:start="23:15" pos:end="23:27">cpu_mips_init</name><argument_list pos:start="23:28" pos:end="23:41">(<argument pos:start="23:29" pos:end="23:40"><expr pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:40"><name pos:start="23:29" pos:end="23:29">s</name><operator pos:start="23:30" pos:end="23:31">-&gt;</operator><name pos:start="23:32" pos:end="23:40">cpu_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:24">(<expr pos:start="25:13" pos:end="25:23"><name pos:start="25:13" pos:end="25:15">cpu</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:23">NULL</name></expr>)</condition> <block pos:start="25:26" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:19">

            <expr_stmt pos:start="27:13" pos:end="27:75"><expr pos:start="27:13" pos:end="27:74"><call pos:start="27:13" pos:end="27:74"><name pos:start="27:13" pos:end="27:22">error_setg</name><argument_list pos:start="27:23" pos:end="27:74">(<argument pos:start="27:24" pos:end="27:27"><expr pos:start="27:24" pos:end="27:27"><name pos:start="27:24" pos:end="27:27">errp</name></expr></argument>, <argument pos:start="27:30" pos:end="27:62"><expr pos:start="27:30" pos:end="27:62"><literal type="string" pos:start="27:30" pos:end="27:62">"%s: CPU initialization failed\n"</literal></expr></argument>,  <argument pos:start="27:66" pos:end="27:73"><expr pos:start="27:66" pos:end="27:73"><name pos:start="27:66" pos:end="27:73">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="35:9" pos:end="35:35">/* Init internal devices */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:35"><expr pos:start="37:9" pos:end="37:34"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:29">cpu_mips_irq_init_cpu</name><argument_list pos:start="37:30" pos:end="37:34">(<argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:33"><expr pos:start="39:9" pos:end="39:32"><call pos:start="39:9" pos:end="39:32"><name pos:start="39:9" pos:end="39:27">cpu_mips_clock_init</name><argument_list pos:start="39:28" pos:end="39:32">(<argument pos:start="39:29" pos:end="39:31"><expr pos:start="39:29" pos:end="39:31"><name pos:start="39:29" pos:end="39:31">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:24"><expr pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:11">env</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <operator pos:start="43:15" pos:end="43:15">&amp;</operator><name pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:18">cpu</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:23">env</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="53:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:40">(<expr pos:start="45:13" pos:end="45:39"><call pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:34">cpu_mips_itu_supported</name><argument_list pos:start="45:35" pos:end="45:39">(<argument pos:start="45:36" pos:end="45:38"><expr pos:start="45:36" pos:end="45:38"><name pos:start="45:36" pos:end="45:38">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:42" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:60">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:23">itu_present</name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:30">true</name></expr>;</expr_stmt>

            <comment type="block" pos:start="49:13" pos:end="49:42">/* Attach ITC Tag to the VP */</comment>

            <expr_stmt pos:start="51:13" pos:end="51:60"><expr pos:start="51:13" pos:end="51:59"><name pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:15">env</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">itc_tag</name></name> <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:59"><name pos:start="51:28" pos:end="51:50">mips_itu_get_tag_region</name><argument_list pos:start="51:51" pos:end="51:59">(<argument pos:start="51:52" pos:end="51:58"><expr pos:start="51:52" pos:end="51:58"><operator pos:start="51:52" pos:end="51:52">&amp;</operator><name pos:start="51:53" pos:end="51:58"><name pos:start="51:53" pos:end="51:53">s</name><operator pos:start="51:54" pos:end="51:55">-&gt;</operator><name pos:start="51:56" pos:end="51:58">itu</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><call pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:27">qemu_register_reset</name><argument_list pos:start="55:28" pos:end="55:48">(<argument pos:start="55:29" pos:end="55:42"><expr pos:start="55:29" pos:end="55:42"><name pos:start="55:29" pos:end="55:42">main_cpu_reset</name></expr></argument>, <argument pos:start="55:45" pos:end="55:47"><expr pos:start="55:45" pos:end="55:47"><name pos:start="55:45" pos:end="55:47">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:7">cpu</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:29"><name pos:start="61:11" pos:end="61:18">MIPS_CPU</name><argument_list pos:start="61:19" pos:end="61:29">(<argument pos:start="61:20" pos:end="61:28"><expr pos:start="61:20" pos:end="61:28"><name pos:start="61:20" pos:end="61:28">first_cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:20"><expr pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:7">env</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <operator pos:start="63:11" pos:end="63:11">&amp;</operator><name pos:start="63:12" pos:end="63:19"><name pos:start="63:12" pos:end="63:14">cpu</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:19">env</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:41">/* Inter-Thread Communication Unit */</comment>

    <if_stmt pos:start="69:5" pos:end="97:5"><if pos:start="69:5" pos:end="97:5">if <condition pos:start="69:8" pos:end="69:20">(<expr pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:19">itu_present</name></expr>)</condition> <block pos:start="69:22" pos:end="97:5">{<block_content pos:start="71:9" pos:end="95:79">

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:25">object_initialize</name><argument_list pos:start="71:26" pos:end="71:65">(<argument pos:start="71:27" pos:end="71:33"><expr pos:start="71:27" pos:end="71:33"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:33"><name pos:start="71:28" pos:end="71:28">s</name><operator pos:start="71:29" pos:end="71:30">-&gt;</operator><name pos:start="71:31" pos:end="71:33">itu</name></name></expr></argument>, <argument pos:start="71:36" pos:end="71:49"><expr pos:start="71:36" pos:end="71:49"><sizeof pos:start="71:36" pos:end="71:49">sizeof<argument_list pos:start="71:42" pos:end="71:49">(<argument pos:start="71:43" pos:end="71:48"><expr pos:start="71:43" pos:end="71:48"><name pos:start="71:43" pos:end="71:48"><name pos:start="71:43" pos:end="71:43">s</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:48">itu</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="71:52" pos:end="71:64"><expr pos:start="71:52" pos:end="71:64"><name pos:start="71:52" pos:end="71:64">TYPE_MIPS_ITU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:67"><expr pos:start="73:9" pos:end="73:66"><call pos:start="73:9" pos:end="73:66"><name pos:start="73:9" pos:end="73:27">qdev_set_parent_bus</name><argument_list pos:start="73:28" pos:end="73:66">(<argument pos:start="73:29" pos:end="73:43"><expr pos:start="73:29" pos:end="73:43"><call pos:start="73:29" pos:end="73:43"><name pos:start="73:29" pos:end="73:34">DEVICE</name><argument_list pos:start="73:35" pos:end="73:43">(<argument pos:start="73:36" pos:end="73:42"><expr pos:start="73:36" pos:end="73:42"><operator pos:start="73:36" pos:end="73:36">&amp;</operator><name pos:start="73:37" pos:end="73:42"><name pos:start="73:37" pos:end="73:37">s</name><operator pos:start="73:38" pos:end="73:39">-&gt;</operator><name pos:start="73:40" pos:end="73:42">itu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:46" pos:end="73:65"><expr pos:start="73:46" pos:end="73:65"><call pos:start="73:46" pos:end="73:65"><name pos:start="73:46" pos:end="73:63">sysbus_get_default</name><argument_list pos:start="73:64" pos:end="73:65">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:71"><expr pos:start="77:9" pos:end="77:70"><call pos:start="77:9" pos:end="77:70"><name pos:start="77:9" pos:end="77:31">object_property_set_int</name><argument_list pos:start="77:32" pos:end="77:70">(<argument pos:start="77:33" pos:end="77:47"><expr pos:start="77:33" pos:end="77:47"><call pos:start="77:33" pos:end="77:47"><name pos:start="77:33" pos:end="77:38">OBJECT</name><argument_list pos:start="77:39" pos:end="77:47">(<argument pos:start="77:40" pos:end="77:46"><expr pos:start="77:40" pos:end="77:46"><operator pos:start="77:40" pos:end="77:40">&amp;</operator><name pos:start="77:41" pos:end="77:46"><name pos:start="77:41" pos:end="77:41">s</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:46">itu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="77:50" pos:end="77:51"><expr pos:start="77:50" pos:end="77:51"><literal type="number" pos:start="77:50" pos:end="77:51">16</literal></expr></argument>, <argument pos:start="77:54" pos:end="77:63"><expr pos:start="77:54" pos:end="77:63"><literal type="string" pos:start="77:54" pos:end="77:63">"num-fifo"</literal></expr></argument>, <argument pos:start="77:66" pos:end="77:69"><expr pos:start="77:66" pos:end="77:69"><operator pos:start="77:66" pos:end="77:66">&amp;</operator><name pos:start="77:67" pos:end="77:69">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:77"><expr pos:start="79:9" pos:end="79:76"><call pos:start="79:9" pos:end="79:76"><name pos:start="79:9" pos:end="79:31">object_property_set_int</name><argument_list pos:start="79:32" pos:end="79:76">(<argument pos:start="79:33" pos:end="79:47"><expr pos:start="79:33" pos:end="79:47"><call pos:start="79:33" pos:end="79:47"><name pos:start="79:33" pos:end="79:38">OBJECT</name><argument_list pos:start="79:39" pos:end="79:47">(<argument pos:start="79:40" pos:end="79:46"><expr pos:start="79:40" pos:end="79:46"><operator pos:start="79:40" pos:end="79:40">&amp;</operator><name pos:start="79:41" pos:end="79:46"><name pos:start="79:41" pos:end="79:41">s</name><operator pos:start="79:42" pos:end="79:43">-&gt;</operator><name pos:start="79:44" pos:end="79:46">itu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="79:50" pos:end="79:51"><expr pos:start="79:50" pos:end="79:51"><literal type="number" pos:start="79:50" pos:end="79:51">16</literal></expr></argument>, <argument pos:start="79:54" pos:end="79:69"><expr pos:start="79:54" pos:end="79:69"><literal type="string" pos:start="79:54" pos:end="79:69">"num-semaphores"</literal></expr></argument>, <argument pos:start="79:72" pos:end="79:75"><expr pos:start="79:72" pos:end="79:75"><operator pos:start="79:72" pos:end="79:72">&amp;</operator><name pos:start="79:73" pos:end="79:75">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><call pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:32">object_property_set_bool</name><argument_list pos:start="81:33" pos:end="81:73">(<argument pos:start="81:34" pos:end="81:48"><expr pos:start="81:34" pos:end="81:48"><call pos:start="81:34" pos:end="81:48"><name pos:start="81:34" pos:end="81:39">OBJECT</name><argument_list pos:start="81:40" pos:end="81:48">(<argument pos:start="81:41" pos:end="81:47"><expr pos:start="81:41" pos:end="81:47"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:47"><name pos:start="81:42" pos:end="81:42">s</name><operator pos:start="81:43" pos:end="81:44">-&gt;</operator><name pos:start="81:45" pos:end="81:47">itu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="81:51" pos:end="81:54"><expr pos:start="81:51" pos:end="81:54"><name pos:start="81:51" pos:end="81:54">true</name></expr></argument>, <argument pos:start="81:57" pos:end="81:66"><expr pos:start="81:57" pos:end="81:66"><literal type="string" pos:start="81:57" pos:end="81:66">"realized"</literal></expr></argument>, <argument pos:start="81:69" pos:end="81:72"><expr pos:start="81:69" pos:end="81:72"><operator pos:start="81:69" pos:end="81:69">&amp;</operator><name pos:start="81:70" pos:end="81:72">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="89:9"><if pos:start="83:9" pos:end="89:9">if <condition pos:start="83:12" pos:end="83:24">(<expr pos:start="83:13" pos:end="83:23"><name pos:start="83:13" pos:end="83:15">err</name> <operator pos:start="83:17" pos:end="83:18">!=</operator> <name pos:start="83:20" pos:end="83:23">NULL</name></expr>)</condition> <block pos:start="83:26" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:19">

            <expr_stmt pos:start="85:13" pos:end="85:39"><expr pos:start="85:13" pos:end="85:38"><call pos:start="85:13" pos:end="85:38"><name pos:start="85:13" pos:end="85:27">error_propagate</name><argument_list pos:start="85:28" pos:end="85:38">(<argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><name pos:start="85:29" pos:end="85:32">errp</name></expr></argument>, <argument pos:start="85:35" pos:end="85:37"><expr pos:start="85:35" pos:end="85:37"><name pos:start="85:35" pos:end="85:37">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="87:13" pos:end="87:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="95:79"><expr pos:start="93:9" pos:end="95:78"><call pos:start="93:9" pos:end="95:78"><name pos:start="93:9" pos:end="93:35">memory_region_add_subregion</name><argument_list pos:start="93:36" pos:end="95:78">(<argument pos:start="93:37" pos:end="93:49"><expr pos:start="93:37" pos:end="93:49"><operator pos:start="93:37" pos:end="93:37">&amp;</operator><name pos:start="93:38" pos:end="93:49"><name pos:start="93:38" pos:end="93:38">s</name><operator pos:start="93:39" pos:end="93:40">-&gt;</operator><name pos:start="93:41" pos:end="93:49">container</name></name></expr></argument>, <argument pos:start="93:52" pos:end="93:52"><expr pos:start="93:52" pos:end="93:52"><literal type="number" pos:start="93:52" pos:end="93:52">0</literal></expr></argument>,

                           <argument pos:start="95:28" pos:end="95:77"><expr pos:start="95:28" pos:end="95:77"><call pos:start="95:28" pos:end="95:77"><name pos:start="95:28" pos:end="95:49">sysbus_mmio_get_region</name><argument_list pos:start="95:50" pos:end="95:77">(<argument pos:start="95:51" pos:end="95:73"><expr pos:start="95:51" pos:end="95:73"><call pos:start="95:51" pos:end="95:73"><name pos:start="95:51" pos:end="95:64">SYS_BUS_DEVICE</name><argument_list pos:start="95:65" pos:end="95:73">(<argument pos:start="95:66" pos:end="95:72"><expr pos:start="95:66" pos:end="95:72"><operator pos:start="95:66" pos:end="95:66">&amp;</operator><name pos:start="95:67" pos:end="95:72"><name pos:start="95:67" pos:end="95:67">s</name><operator pos:start="95:68" pos:end="95:69">-&gt;</operator><name pos:start="95:70" pos:end="95:72">itu</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:76" pos:end="95:76"><expr pos:start="95:76" pos:end="95:76"><literal type="number" pos:start="95:76" pos:end="95:76">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:34">/* Cluster Power Controller */</comment>

    <expr_stmt pos:start="103:5" pos:end="103:62"><expr pos:start="103:5" pos:end="103:61"><call pos:start="103:5" pos:end="103:61"><name pos:start="103:5" pos:end="103:21">object_initialize</name><argument_list pos:start="103:22" pos:end="103:61">(<argument pos:start="103:23" pos:end="103:29"><expr pos:start="103:23" pos:end="103:29"><operator pos:start="103:23" pos:end="103:23">&amp;</operator><name pos:start="103:24" pos:end="103:29"><name pos:start="103:24" pos:end="103:24">s</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:29">cpc</name></name></expr></argument>, <argument pos:start="103:32" pos:end="103:45"><expr pos:start="103:32" pos:end="103:45"><sizeof pos:start="103:32" pos:end="103:45">sizeof<argument_list pos:start="103:38" pos:end="103:45">(<argument pos:start="103:39" pos:end="103:44"><expr pos:start="103:39" pos:end="103:44"><name pos:start="103:39" pos:end="103:44"><name pos:start="103:39" pos:end="103:39">s</name><operator pos:start="103:40" pos:end="103:41">-&gt;</operator><name pos:start="103:42" pos:end="103:44">cpc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="103:48" pos:end="103:60"><expr pos:start="103:48" pos:end="103:60"><name pos:start="103:48" pos:end="103:60">TYPE_MIPS_CPC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:63"><expr pos:start="105:5" pos:end="105:62"><call pos:start="105:5" pos:end="105:62"><name pos:start="105:5" pos:end="105:23">qdev_set_parent_bus</name><argument_list pos:start="105:24" pos:end="105:62">(<argument pos:start="105:25" pos:end="105:39"><expr pos:start="105:25" pos:end="105:39"><call pos:start="105:25" pos:end="105:39"><name pos:start="105:25" pos:end="105:30">DEVICE</name><argument_list pos:start="105:31" pos:end="105:39">(<argument pos:start="105:32" pos:end="105:38"><expr pos:start="105:32" pos:end="105:38"><operator pos:start="105:32" pos:end="105:32">&amp;</operator><name pos:start="105:33" pos:end="105:38"><name pos:start="105:33" pos:end="105:33">s</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:38">cpc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:42" pos:end="105:61"><expr pos:start="105:42" pos:end="105:61"><call pos:start="105:42" pos:end="105:61"><name pos:start="105:42" pos:end="105:59">sysbus_get_default</name><argument_list pos:start="105:60" pos:end="105:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:72"><expr pos:start="109:5" pos:end="109:71"><call pos:start="109:5" pos:end="109:71"><name pos:start="109:5" pos:end="109:27">object_property_set_int</name><argument_list pos:start="109:28" pos:end="109:71">(<argument pos:start="109:29" pos:end="109:43"><expr pos:start="109:29" pos:end="109:43"><call pos:start="109:29" pos:end="109:43"><name pos:start="109:29" pos:end="109:34">OBJECT</name><argument_list pos:start="109:35" pos:end="109:43">(<argument pos:start="109:36" pos:end="109:42"><expr pos:start="109:36" pos:end="109:42"><operator pos:start="109:36" pos:end="109:36">&amp;</operator><name pos:start="109:37" pos:end="109:42"><name pos:start="109:37" pos:end="109:37">s</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:42">cpc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:46" pos:end="109:54"><expr pos:start="109:46" pos:end="109:54"><name pos:start="109:46" pos:end="109:54"><name pos:start="109:46" pos:end="109:46">s</name><operator pos:start="109:47" pos:end="109:48">-&gt;</operator><name pos:start="109:49" pos:end="109:54">num_vp</name></name></expr></argument>, <argument pos:start="109:57" pos:end="109:64"><expr pos:start="109:57" pos:end="109:64"><literal type="string" pos:start="109:57" pos:end="109:64">"num-vp"</literal></expr></argument>, <argument pos:start="109:67" pos:end="109:70"><expr pos:start="109:67" pos:end="109:70"><operator pos:start="109:67" pos:end="109:67">&amp;</operator><name pos:start="109:68" pos:end="109:70">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:74"><expr pos:start="111:5" pos:end="111:73"><call pos:start="111:5" pos:end="111:73"><name pos:start="111:5" pos:end="111:27">object_property_set_int</name><argument_list pos:start="111:28" pos:end="111:73">(<argument pos:start="111:29" pos:end="111:43"><expr pos:start="111:29" pos:end="111:43"><call pos:start="111:29" pos:end="111:43"><name pos:start="111:29" pos:end="111:34">OBJECT</name><argument_list pos:start="111:35" pos:end="111:43">(<argument pos:start="111:36" pos:end="111:42"><expr pos:start="111:36" pos:end="111:42"><operator pos:start="111:36" pos:end="111:36">&amp;</operator><name pos:start="111:37" pos:end="111:42"><name pos:start="111:37" pos:end="111:37">s</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:42">cpc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="111:46" pos:end="111:46"><expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">1</literal></expr></argument>, <argument pos:start="111:49" pos:end="111:66"><expr pos:start="111:49" pos:end="111:66"><literal type="string" pos:start="111:49" pos:end="111:66">"vp-start-running"</literal></expr></argument>, <argument pos:start="111:69" pos:end="111:72"><expr pos:start="111:69" pos:end="111:72"><operator pos:start="111:69" pos:end="111:69">&amp;</operator><name pos:start="111:70" pos:end="111:72">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:70"><expr pos:start="113:5" pos:end="113:69"><call pos:start="113:5" pos:end="113:69"><name pos:start="113:5" pos:end="113:28">object_property_set_bool</name><argument_list pos:start="113:29" pos:end="113:69">(<argument pos:start="113:30" pos:end="113:44"><expr pos:start="113:30" pos:end="113:44"><call pos:start="113:30" pos:end="113:44"><name pos:start="113:30" pos:end="113:35">OBJECT</name><argument_list pos:start="113:36" pos:end="113:44">(<argument pos:start="113:37" pos:end="113:43"><expr pos:start="113:37" pos:end="113:43"><operator pos:start="113:37" pos:end="113:37">&amp;</operator><name pos:start="113:38" pos:end="113:43"><name pos:start="113:38" pos:end="113:38">s</name><operator pos:start="113:39" pos:end="113:40">-&gt;</operator><name pos:start="113:41" pos:end="113:43">cpc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="113:47" pos:end="113:50"><expr pos:start="113:47" pos:end="113:50"><name pos:start="113:47" pos:end="113:50">true</name></expr></argument>, <argument pos:start="113:53" pos:end="113:62"><expr pos:start="113:53" pos:end="113:62"><literal type="string" pos:start="113:53" pos:end="113:62">"realized"</literal></expr></argument>, <argument pos:start="113:65" pos:end="113:68"><expr pos:start="113:65" pos:end="113:68"><operator pos:start="113:65" pos:end="113:65">&amp;</operator><name pos:start="113:66" pos:end="113:68">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="121:5"><if pos:start="115:5" pos:end="121:5">if <condition pos:start="115:8" pos:end="115:20">(<expr pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:11">err</name> <operator pos:start="115:13" pos:end="115:14">!=</operator> <name pos:start="115:16" pos:end="115:19">NULL</name></expr>)</condition> <block pos:start="115:22" pos:end="121:5">{<block_content pos:start="117:9" pos:end="119:15">

        <expr_stmt pos:start="117:9" pos:end="117:35"><expr pos:start="117:9" pos:end="117:34"><call pos:start="117:9" pos:end="117:34"><name pos:start="117:9" pos:end="117:23">error_propagate</name><argument_list pos:start="117:24" pos:end="117:34">(<argument pos:start="117:25" pos:end="117:28"><expr pos:start="117:25" pos:end="117:28"><name pos:start="117:25" pos:end="117:28">errp</name></expr></argument>, <argument pos:start="117:31" pos:end="117:33"><expr pos:start="117:31" pos:end="117:33"><name pos:start="117:31" pos:end="117:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="119:9" pos:end="119:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="127:80"><expr pos:start="125:5" pos:end="127:79"><call pos:start="125:5" pos:end="127:79"><name pos:start="125:5" pos:end="125:31">memory_region_add_subregion</name><argument_list pos:start="125:32" pos:end="127:79">(<argument pos:start="125:33" pos:end="125:45"><expr pos:start="125:33" pos:end="125:45"><operator pos:start="125:33" pos:end="125:33">&amp;</operator><name pos:start="125:34" pos:end="125:45"><name pos:start="125:34" pos:end="125:34">s</name><operator pos:start="125:35" pos:end="125:36">-&gt;</operator><name pos:start="125:37" pos:end="125:45">container</name></name></expr></argument>, <argument pos:start="125:48" pos:end="125:48"><expr pos:start="125:48" pos:end="125:48"><literal type="number" pos:start="125:48" pos:end="125:48">0</literal></expr></argument>,

                            <argument pos:start="127:29" pos:end="127:78"><expr pos:start="127:29" pos:end="127:78"><call pos:start="127:29" pos:end="127:78"><name pos:start="127:29" pos:end="127:50">sysbus_mmio_get_region</name><argument_list pos:start="127:51" pos:end="127:78">(<argument pos:start="127:52" pos:end="127:74"><expr pos:start="127:52" pos:end="127:74"><call pos:start="127:52" pos:end="127:74"><name pos:start="127:52" pos:end="127:65">SYS_BUS_DEVICE</name><argument_list pos:start="127:66" pos:end="127:74">(<argument pos:start="127:67" pos:end="127:73"><expr pos:start="127:67" pos:end="127:73"><operator pos:start="127:67" pos:end="127:67">&amp;</operator><name pos:start="127:68" pos:end="127:73"><name pos:start="127:68" pos:end="127:68">s</name><operator pos:start="127:69" pos:end="127:70">-&gt;</operator><name pos:start="127:71" pos:end="127:73">cpc</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="127:77" pos:end="127:77"><expr pos:start="127:77" pos:end="127:77"><literal type="number" pos:start="127:77" pos:end="127:77">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="131:5" pos:end="131:37">/* Global Interrupt Controller */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:62"><expr pos:start="133:5" pos:end="133:61"><call pos:start="133:5" pos:end="133:61"><name pos:start="133:5" pos:end="133:21">object_initialize</name><argument_list pos:start="133:22" pos:end="133:61">(<argument pos:start="133:23" pos:end="133:29"><expr pos:start="133:23" pos:end="133:29"><operator pos:start="133:23" pos:end="133:23">&amp;</operator><name pos:start="133:24" pos:end="133:29"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:29">gic</name></name></expr></argument>, <argument pos:start="133:32" pos:end="133:45"><expr pos:start="133:32" pos:end="133:45"><sizeof pos:start="133:32" pos:end="133:45">sizeof<argument_list pos:start="133:38" pos:end="133:45">(<argument pos:start="133:39" pos:end="133:44"><expr pos:start="133:39" pos:end="133:44"><name pos:start="133:39" pos:end="133:44"><name pos:start="133:39" pos:end="133:39">s</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:44">gic</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="133:48" pos:end="133:60"><expr pos:start="133:48" pos:end="133:60"><name pos:start="133:48" pos:end="133:60">TYPE_MIPS_GIC</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:63"><expr pos:start="135:5" pos:end="135:62"><call pos:start="135:5" pos:end="135:62"><name pos:start="135:5" pos:end="135:23">qdev_set_parent_bus</name><argument_list pos:start="135:24" pos:end="135:62">(<argument pos:start="135:25" pos:end="135:39"><expr pos:start="135:25" pos:end="135:39"><call pos:start="135:25" pos:end="135:39"><name pos:start="135:25" pos:end="135:30">DEVICE</name><argument_list pos:start="135:31" pos:end="135:39">(<argument pos:start="135:32" pos:end="135:38"><expr pos:start="135:32" pos:end="135:38"><operator pos:start="135:32" pos:end="135:32">&amp;</operator><name pos:start="135:33" pos:end="135:38"><name pos:start="135:33" pos:end="135:33">s</name><operator pos:start="135:34" pos:end="135:35">-&gt;</operator><name pos:start="135:36" pos:end="135:38">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="135:42" pos:end="135:61"><expr pos:start="135:42" pos:end="135:61"><call pos:start="135:42" pos:end="135:61"><name pos:start="135:42" pos:end="135:59">sysbus_get_default</name><argument_list pos:start="135:60" pos:end="135:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:72"><expr pos:start="139:5" pos:end="139:71"><call pos:start="139:5" pos:end="139:71"><name pos:start="139:5" pos:end="139:27">object_property_set_int</name><argument_list pos:start="139:28" pos:end="139:71">(<argument pos:start="139:29" pos:end="139:43"><expr pos:start="139:29" pos:end="139:43"><call pos:start="139:29" pos:end="139:43"><name pos:start="139:29" pos:end="139:34">OBJECT</name><argument_list pos:start="139:35" pos:end="139:43">(<argument pos:start="139:36" pos:end="139:42"><expr pos:start="139:36" pos:end="139:42"><operator pos:start="139:36" pos:end="139:36">&amp;</operator><name pos:start="139:37" pos:end="139:42"><name pos:start="139:37" pos:end="139:37">s</name><operator pos:start="139:38" pos:end="139:39">-&gt;</operator><name pos:start="139:40" pos:end="139:42">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:46" pos:end="139:54"><expr pos:start="139:46" pos:end="139:54"><name pos:start="139:46" pos:end="139:54"><name pos:start="139:46" pos:end="139:46">s</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:54">num_vp</name></name></expr></argument>, <argument pos:start="139:57" pos:end="139:64"><expr pos:start="139:57" pos:end="139:64"><literal type="string" pos:start="139:57" pos:end="139:64">"num-vp"</literal></expr></argument>, <argument pos:start="139:67" pos:end="139:70"><expr pos:start="139:67" pos:end="139:70"><operator pos:start="139:67" pos:end="139:67">&amp;</operator><name pos:start="139:68" pos:end="139:70">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:67"><expr pos:start="141:5" pos:end="141:66"><call pos:start="141:5" pos:end="141:66"><name pos:start="141:5" pos:end="141:27">object_property_set_int</name><argument_list pos:start="141:28" pos:end="141:66">(<argument pos:start="141:29" pos:end="141:43"><expr pos:start="141:29" pos:end="141:43"><call pos:start="141:29" pos:end="141:43"><name pos:start="141:29" pos:end="141:34">OBJECT</name><argument_list pos:start="141:35" pos:end="141:43">(<argument pos:start="141:36" pos:end="141:42"><expr pos:start="141:36" pos:end="141:42"><operator pos:start="141:36" pos:end="141:36">&amp;</operator><name pos:start="141:37" pos:end="141:42"><name pos:start="141:37" pos:end="141:37">s</name><operator pos:start="141:38" pos:end="141:39">-&gt;</operator><name pos:start="141:40" pos:end="141:42">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="141:46" pos:end="141:48"><expr pos:start="141:46" pos:end="141:48"><literal type="number" pos:start="141:46" pos:end="141:48">128</literal></expr></argument>, <argument pos:start="141:51" pos:end="141:59"><expr pos:start="141:51" pos:end="141:59"><literal type="string" pos:start="141:51" pos:end="141:59">"num-irq"</literal></expr></argument>, <argument pos:start="141:62" pos:end="141:65"><expr pos:start="141:62" pos:end="141:65"><operator pos:start="141:62" pos:end="141:62">&amp;</operator><name pos:start="141:63" pos:end="141:65">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="143:5" pos:end="143:70"><expr pos:start="143:5" pos:end="143:69"><call pos:start="143:5" pos:end="143:69"><name pos:start="143:5" pos:end="143:28">object_property_set_bool</name><argument_list pos:start="143:29" pos:end="143:69">(<argument pos:start="143:30" pos:end="143:44"><expr pos:start="143:30" pos:end="143:44"><call pos:start="143:30" pos:end="143:44"><name pos:start="143:30" pos:end="143:35">OBJECT</name><argument_list pos:start="143:36" pos:end="143:44">(<argument pos:start="143:37" pos:end="143:43"><expr pos:start="143:37" pos:end="143:43"><operator pos:start="143:37" pos:end="143:37">&amp;</operator><name pos:start="143:38" pos:end="143:43"><name pos:start="143:38" pos:end="143:38">s</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:43">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="143:47" pos:end="143:50"><expr pos:start="143:47" pos:end="143:50"><name pos:start="143:47" pos:end="143:50">true</name></expr></argument>, <argument pos:start="143:53" pos:end="143:62"><expr pos:start="143:53" pos:end="143:62"><literal type="string" pos:start="143:53" pos:end="143:62">"realized"</literal></expr></argument>, <argument pos:start="143:65" pos:end="143:68"><expr pos:start="143:65" pos:end="143:68"><operator pos:start="143:65" pos:end="143:65">&amp;</operator><name pos:start="143:66" pos:end="143:68">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="151:5"><if pos:start="145:5" pos:end="151:5">if <condition pos:start="145:8" pos:end="145:20">(<expr pos:start="145:9" pos:end="145:19"><name pos:start="145:9" pos:end="145:11">err</name> <operator pos:start="145:13" pos:end="145:14">!=</operator> <name pos:start="145:16" pos:end="145:19">NULL</name></expr>)</condition> <block pos:start="145:22" pos:end="151:5">{<block_content pos:start="147:9" pos:end="149:15">

        <expr_stmt pos:start="147:9" pos:end="147:35"><expr pos:start="147:9" pos:end="147:34"><call pos:start="147:9" pos:end="147:34"><name pos:start="147:9" pos:end="147:23">error_propagate</name><argument_list pos:start="147:24" pos:end="147:34">(<argument pos:start="147:25" pos:end="147:28"><expr pos:start="147:25" pos:end="147:28"><name pos:start="147:25" pos:end="147:28">errp</name></expr></argument>, <argument pos:start="147:31" pos:end="147:33"><expr pos:start="147:31" pos:end="147:33"><name pos:start="147:31" pos:end="147:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="149:9" pos:end="149:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="155:5" pos:end="157:80"><expr pos:start="155:5" pos:end="157:79"><call pos:start="155:5" pos:end="157:79"><name pos:start="155:5" pos:end="155:31">memory_region_add_subregion</name><argument_list pos:start="155:32" pos:end="157:79">(<argument pos:start="155:33" pos:end="155:45"><expr pos:start="155:33" pos:end="155:45"><operator pos:start="155:33" pos:end="155:33">&amp;</operator><name pos:start="155:34" pos:end="155:45"><name pos:start="155:34" pos:end="155:34">s</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:45">container</name></name></expr></argument>, <argument pos:start="155:48" pos:end="155:48"><expr pos:start="155:48" pos:end="155:48"><literal type="number" pos:start="155:48" pos:end="155:48">0</literal></expr></argument>,

                            <argument pos:start="157:29" pos:end="157:78"><expr pos:start="157:29" pos:end="157:78"><call pos:start="157:29" pos:end="157:78"><name pos:start="157:29" pos:end="157:50">sysbus_mmio_get_region</name><argument_list pos:start="157:51" pos:end="157:78">(<argument pos:start="157:52" pos:end="157:74"><expr pos:start="157:52" pos:end="157:74"><call pos:start="157:52" pos:end="157:74"><name pos:start="157:52" pos:end="157:65">SYS_BUS_DEVICE</name><argument_list pos:start="157:66" pos:end="157:74">(<argument pos:start="157:67" pos:end="157:73"><expr pos:start="157:67" pos:end="157:73"><operator pos:start="157:67" pos:end="157:67">&amp;</operator><name pos:start="157:68" pos:end="157:73"><name pos:start="157:68" pos:end="157:68">s</name><operator pos:start="157:69" pos:end="157:70">-&gt;</operator><name pos:start="157:71" pos:end="157:73">gic</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:77" pos:end="157:77"><expr pos:start="157:77" pos:end="157:77"><literal type="number" pos:start="157:77" pos:end="157:77">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="161:5" pos:end="161:40">/* Global Configuration Registers */</comment>

    <expr_stmt pos:start="163:5" pos:end="163:39"><expr pos:start="163:5" pos:end="163:38"><name pos:start="163:5" pos:end="163:12">gcr_base</name> <operator pos:start="163:14" pos:end="163:14">=</operator> <name pos:start="163:16" pos:end="163:33"><name pos:start="163:16" pos:end="163:18">env</name><operator pos:start="163:19" pos:end="163:20">-&gt;</operator><name pos:start="163:21" pos:end="163:33">CP0_CMGCRBase</name></name> <operator pos:start="163:35" pos:end="163:36">&lt;&lt;</operator> <literal type="number" pos:start="163:38" pos:end="163:38">4</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="167:5" pos:end="167:62"><expr pos:start="167:5" pos:end="167:61"><call pos:start="167:5" pos:end="167:61"><name pos:start="167:5" pos:end="167:21">object_initialize</name><argument_list pos:start="167:22" pos:end="167:61">(<argument pos:start="167:23" pos:end="167:29"><expr pos:start="167:23" pos:end="167:29"><operator pos:start="167:23" pos:end="167:23">&amp;</operator><name pos:start="167:24" pos:end="167:29"><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:29">gcr</name></name></expr></argument>, <argument pos:start="167:32" pos:end="167:45"><expr pos:start="167:32" pos:end="167:45"><sizeof pos:start="167:32" pos:end="167:45">sizeof<argument_list pos:start="167:38" pos:end="167:45">(<argument pos:start="167:39" pos:end="167:44"><expr pos:start="167:39" pos:end="167:44"><name pos:start="167:39" pos:end="167:44"><name pos:start="167:39" pos:end="167:39">s</name><operator pos:start="167:40" pos:end="167:41">-&gt;</operator><name pos:start="167:42" pos:end="167:44">gcr</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="167:48" pos:end="167:60"><expr pos:start="167:48" pos:end="167:60"><name pos:start="167:48" pos:end="167:60">TYPE_MIPS_GCR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:63"><expr pos:start="169:5" pos:end="169:62"><call pos:start="169:5" pos:end="169:62"><name pos:start="169:5" pos:end="169:23">qdev_set_parent_bus</name><argument_list pos:start="169:24" pos:end="169:62">(<argument pos:start="169:25" pos:end="169:39"><expr pos:start="169:25" pos:end="169:39"><call pos:start="169:25" pos:end="169:39"><name pos:start="169:25" pos:end="169:30">DEVICE</name><argument_list pos:start="169:31" pos:end="169:39">(<argument pos:start="169:32" pos:end="169:38"><expr pos:start="169:32" pos:end="169:38"><operator pos:start="169:32" pos:end="169:32">&amp;</operator><name pos:start="169:33" pos:end="169:38"><name pos:start="169:33" pos:end="169:33">s</name><operator pos:start="169:34" pos:end="169:35">-&gt;</operator><name pos:start="169:36" pos:end="169:38">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="169:42" pos:end="169:61"><expr pos:start="169:42" pos:end="169:61"><call pos:start="169:42" pos:end="169:61"><name pos:start="169:42" pos:end="169:59">sysbus_get_default</name><argument_list pos:start="169:60" pos:end="169:61">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="173:72"><expr pos:start="173:5" pos:end="173:71"><call pos:start="173:5" pos:end="173:71"><name pos:start="173:5" pos:end="173:27">object_property_set_int</name><argument_list pos:start="173:28" pos:end="173:71">(<argument pos:start="173:29" pos:end="173:43"><expr pos:start="173:29" pos:end="173:43"><call pos:start="173:29" pos:end="173:43"><name pos:start="173:29" pos:end="173:34">OBJECT</name><argument_list pos:start="173:35" pos:end="173:43">(<argument pos:start="173:36" pos:end="173:42"><expr pos:start="173:36" pos:end="173:42"><operator pos:start="173:36" pos:end="173:36">&amp;</operator><name pos:start="173:37" pos:end="173:42"><name pos:start="173:37" pos:end="173:37">s</name><operator pos:start="173:38" pos:end="173:39">-&gt;</operator><name pos:start="173:40" pos:end="173:42">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="173:46" pos:end="173:54"><expr pos:start="173:46" pos:end="173:54"><name pos:start="173:46" pos:end="173:54"><name pos:start="173:46" pos:end="173:46">s</name><operator pos:start="173:47" pos:end="173:48">-&gt;</operator><name pos:start="173:49" pos:end="173:54">num_vp</name></name></expr></argument>, <argument pos:start="173:57" pos:end="173:64"><expr pos:start="173:57" pos:end="173:64"><literal type="string" pos:start="173:57" pos:end="173:64">"num-vp"</literal></expr></argument>, <argument pos:start="173:67" pos:end="173:70"><expr pos:start="173:67" pos:end="173:70"><operator pos:start="173:67" pos:end="173:67">&amp;</operator><name pos:start="173:68" pos:end="173:70">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:69"><expr pos:start="175:5" pos:end="175:68"><call pos:start="175:5" pos:end="175:68"><name pos:start="175:5" pos:end="175:27">object_property_set_int</name><argument_list pos:start="175:28" pos:end="175:68">(<argument pos:start="175:29" pos:end="175:43"><expr pos:start="175:29" pos:end="175:43"><call pos:start="175:29" pos:end="175:43"><name pos:start="175:29" pos:end="175:34">OBJECT</name><argument_list pos:start="175:35" pos:end="175:43">(<argument pos:start="175:36" pos:end="175:42"><expr pos:start="175:36" pos:end="175:42"><operator pos:start="175:36" pos:end="175:36">&amp;</operator><name pos:start="175:37" pos:end="175:42"><name pos:start="175:37" pos:end="175:37">s</name><operator pos:start="175:38" pos:end="175:39">-&gt;</operator><name pos:start="175:40" pos:end="175:42">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="175:46" pos:end="175:50"><expr pos:start="175:46" pos:end="175:50"><literal type="number" pos:start="175:46" pos:end="175:50">0x800</literal></expr></argument>, <argument pos:start="175:53" pos:end="175:61"><expr pos:start="175:53" pos:end="175:61"><literal type="string" pos:start="175:53" pos:end="175:61">"gcr-rev"</literal></expr></argument>, <argument pos:start="175:64" pos:end="175:67"><expr pos:start="175:64" pos:end="175:67"><operator pos:start="175:64" pos:end="175:64">&amp;</operator><name pos:start="175:65" pos:end="175:67">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:73"><expr pos:start="177:5" pos:end="177:72"><call pos:start="177:5" pos:end="177:72"><name pos:start="177:5" pos:end="177:27">object_property_set_int</name><argument_list pos:start="177:28" pos:end="177:72">(<argument pos:start="177:29" pos:end="177:43"><expr pos:start="177:29" pos:end="177:43"><call pos:start="177:29" pos:end="177:43"><name pos:start="177:29" pos:end="177:34">OBJECT</name><argument_list pos:start="177:35" pos:end="177:43">(<argument pos:start="177:36" pos:end="177:42"><expr pos:start="177:36" pos:end="177:42"><operator pos:start="177:36" pos:end="177:36">&amp;</operator><name pos:start="177:37" pos:end="177:42"><name pos:start="177:37" pos:end="177:37">s</name><operator pos:start="177:38" pos:end="177:39">-&gt;</operator><name pos:start="177:40" pos:end="177:42">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:46" pos:end="177:53"><expr pos:start="177:46" pos:end="177:53"><name pos:start="177:46" pos:end="177:53">gcr_base</name></expr></argument>, <argument pos:start="177:56" pos:end="177:65"><expr pos:start="177:56" pos:end="177:65"><literal type="string" pos:start="177:56" pos:end="177:65">"gcr-base"</literal></expr></argument>, <argument pos:start="177:68" pos:end="177:71"><expr pos:start="177:68" pos:end="177:71"><operator pos:start="177:68" pos:end="177:68">&amp;</operator><name pos:start="177:69" pos:end="177:71">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="179:5" pos:end="179:79"><expr pos:start="179:5" pos:end="179:78"><call pos:start="179:5" pos:end="179:78"><name pos:start="179:5" pos:end="179:28">object_property_set_link</name><argument_list pos:start="179:29" pos:end="179:78">(<argument pos:start="179:30" pos:end="179:44"><expr pos:start="179:30" pos:end="179:44"><call pos:start="179:30" pos:end="179:44"><name pos:start="179:30" pos:end="179:35">OBJECT</name><argument_list pos:start="179:36" pos:end="179:44">(<argument pos:start="179:37" pos:end="179:43"><expr pos:start="179:37" pos:end="179:43"><operator pos:start="179:37" pos:end="179:37">&amp;</operator><name pos:start="179:38" pos:end="179:43"><name pos:start="179:38" pos:end="179:38">s</name><operator pos:start="179:39" pos:end="179:40">-&gt;</operator><name pos:start="179:41" pos:end="179:43">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:47" pos:end="179:64"><expr pos:start="179:47" pos:end="179:64"><call pos:start="179:47" pos:end="179:64"><name pos:start="179:47" pos:end="179:52">OBJECT</name><argument_list pos:start="179:53" pos:end="179:64">(<argument pos:start="179:54" pos:end="179:63"><expr pos:start="179:54" pos:end="179:63"><operator pos:start="179:54" pos:end="179:54">&amp;</operator><name pos:start="179:55" pos:end="179:63"><name pos:start="179:55" pos:end="179:55">s</name><operator pos:start="179:56" pos:end="179:57">-&gt;</operator><name pos:start="179:58" pos:end="179:60">gic</name><operator pos:start="179:61" pos:end="179:61">.</operator><name pos:start="179:62" pos:end="179:63">mr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:67" pos:end="179:71"><expr pos:start="179:67" pos:end="179:71"><literal type="string" pos:start="179:67" pos:end="179:71">"gic"</literal></expr></argument>, <argument pos:start="179:74" pos:end="179:77"><expr pos:start="179:74" pos:end="179:77"><operator pos:start="179:74" pos:end="179:74">&amp;</operator><name pos:start="179:75" pos:end="179:77">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="181:79"><expr pos:start="181:5" pos:end="181:78"><call pos:start="181:5" pos:end="181:78"><name pos:start="181:5" pos:end="181:28">object_property_set_link</name><argument_list pos:start="181:29" pos:end="181:78">(<argument pos:start="181:30" pos:end="181:44"><expr pos:start="181:30" pos:end="181:44"><call pos:start="181:30" pos:end="181:44"><name pos:start="181:30" pos:end="181:35">OBJECT</name><argument_list pos:start="181:36" pos:end="181:44">(<argument pos:start="181:37" pos:end="181:43"><expr pos:start="181:37" pos:end="181:43"><operator pos:start="181:37" pos:end="181:37">&amp;</operator><name pos:start="181:38" pos:end="181:43"><name pos:start="181:38" pos:end="181:38">s</name><operator pos:start="181:39" pos:end="181:40">-&gt;</operator><name pos:start="181:41" pos:end="181:43">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:47" pos:end="181:64"><expr pos:start="181:47" pos:end="181:64"><call pos:start="181:47" pos:end="181:64"><name pos:start="181:47" pos:end="181:52">OBJECT</name><argument_list pos:start="181:53" pos:end="181:64">(<argument pos:start="181:54" pos:end="181:63"><expr pos:start="181:54" pos:end="181:63"><operator pos:start="181:54" pos:end="181:54">&amp;</operator><name pos:start="181:55" pos:end="181:63"><name pos:start="181:55" pos:end="181:55">s</name><operator pos:start="181:56" pos:end="181:57">-&gt;</operator><name pos:start="181:58" pos:end="181:60">cpc</name><operator pos:start="181:61" pos:end="181:61">.</operator><name pos:start="181:62" pos:end="181:63">mr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:67" pos:end="181:71"><expr pos:start="181:67" pos:end="181:71"><literal type="string" pos:start="181:67" pos:end="181:71">"cpc"</literal></expr></argument>, <argument pos:start="181:74" pos:end="181:77"><expr pos:start="181:74" pos:end="181:77"><operator pos:start="181:74" pos:end="181:74">&amp;</operator><name pos:start="181:75" pos:end="181:77">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:70"><expr pos:start="183:5" pos:end="183:69"><call pos:start="183:5" pos:end="183:69"><name pos:start="183:5" pos:end="183:28">object_property_set_bool</name><argument_list pos:start="183:29" pos:end="183:69">(<argument pos:start="183:30" pos:end="183:44"><expr pos:start="183:30" pos:end="183:44"><call pos:start="183:30" pos:end="183:44"><name pos:start="183:30" pos:end="183:35">OBJECT</name><argument_list pos:start="183:36" pos:end="183:44">(<argument pos:start="183:37" pos:end="183:43"><expr pos:start="183:37" pos:end="183:43"><operator pos:start="183:37" pos:end="183:37">&amp;</operator><name pos:start="183:38" pos:end="183:43"><name pos:start="183:38" pos:end="183:38">s</name><operator pos:start="183:39" pos:end="183:40">-&gt;</operator><name pos:start="183:41" pos:end="183:43">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:47" pos:end="183:50"><expr pos:start="183:47" pos:end="183:50"><name pos:start="183:47" pos:end="183:50">true</name></expr></argument>, <argument pos:start="183:53" pos:end="183:62"><expr pos:start="183:53" pos:end="183:62"><literal type="string" pos:start="183:53" pos:end="183:62">"realized"</literal></expr></argument>, <argument pos:start="183:65" pos:end="183:68"><expr pos:start="183:65" pos:end="183:68"><operator pos:start="183:65" pos:end="183:65">&amp;</operator><name pos:start="183:66" pos:end="183:68">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="185:5" pos:end="191:5"><if pos:start="185:5" pos:end="191:5">if <condition pos:start="185:8" pos:end="185:20">(<expr pos:start="185:9" pos:end="185:19"><name pos:start="185:9" pos:end="185:11">err</name> <operator pos:start="185:13" pos:end="185:14">!=</operator> <name pos:start="185:16" pos:end="185:19">NULL</name></expr>)</condition> <block pos:start="185:22" pos:end="191:5">{<block_content pos:start="187:9" pos:end="189:15">

        <expr_stmt pos:start="187:9" pos:end="187:35"><expr pos:start="187:9" pos:end="187:34"><call pos:start="187:9" pos:end="187:34"><name pos:start="187:9" pos:end="187:23">error_propagate</name><argument_list pos:start="187:24" pos:end="187:34">(<argument pos:start="187:25" pos:end="187:28"><expr pos:start="187:25" pos:end="187:28"><name pos:start="187:25" pos:end="187:28">errp</name></expr></argument>, <argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="189:9" pos:end="189:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="195:5" pos:end="197:80"><expr pos:start="195:5" pos:end="197:79"><call pos:start="195:5" pos:end="197:79"><name pos:start="195:5" pos:end="195:31">memory_region_add_subregion</name><argument_list pos:start="195:32" pos:end="197:79">(<argument pos:start="195:33" pos:end="195:45"><expr pos:start="195:33" pos:end="195:45"><operator pos:start="195:33" pos:end="195:33">&amp;</operator><name pos:start="195:34" pos:end="195:45"><name pos:start="195:34" pos:end="195:34">s</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:45">container</name></name></expr></argument>, <argument pos:start="195:48" pos:end="195:55"><expr pos:start="195:48" pos:end="195:55"><name pos:start="195:48" pos:end="195:55">gcr_base</name></expr></argument>,

                            <argument pos:start="197:29" pos:end="197:78"><expr pos:start="197:29" pos:end="197:78"><call pos:start="197:29" pos:end="197:78"><name pos:start="197:29" pos:end="197:50">sysbus_mmio_get_region</name><argument_list pos:start="197:51" pos:end="197:78">(<argument pos:start="197:52" pos:end="197:74"><expr pos:start="197:52" pos:end="197:74"><call pos:start="197:52" pos:end="197:74"><name pos:start="197:52" pos:end="197:65">SYS_BUS_DEVICE</name><argument_list pos:start="197:66" pos:end="197:74">(<argument pos:start="197:67" pos:end="197:73"><expr pos:start="197:67" pos:end="197:73"><operator pos:start="197:67" pos:end="197:67">&amp;</operator><name pos:start="197:68" pos:end="197:73"><name pos:start="197:68" pos:end="197:68">s</name><operator pos:start="197:69" pos:end="197:70">-&gt;</operator><name pos:start="197:71" pos:end="197:73">gcr</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="197:77" pos:end="197:77"><expr pos:start="197:77" pos:end="197:77"><literal type="number" pos:start="197:77" pos:end="197:77">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
