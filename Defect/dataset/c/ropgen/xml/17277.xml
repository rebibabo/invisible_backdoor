<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/17277.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:14"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">oss_open</name> <parameter_list pos:start="1:21" pos:end="2:54">(<parameter pos:start="1:22" pos:end="1:27"><decl pos:start="1:22" pos:end="1:27"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:27">in</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:46">oss_params</name></name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">req</name></decl></parameter>,
                     <parameter pos:start="2:22" pos:end="2:43"><decl pos:start="2:22" pos:end="2:43"><type pos:start="2:22" pos:end="2:43"><name pos:start="2:22" pos:end="2:38"><name pos:start="2:22" pos:end="2:27">struct</name> <name pos:start="2:29" pos:end="2:38">oss_params</name></name> <modifier pos:start="2:40" pos:end="2:40">*</modifier></type><name pos:start="2:41" pos:end="2:43">obt</name></decl></parameter>, <parameter pos:start="2:46" pos:end="2:53"><decl pos:start="2:46" pos:end="2:53"><type pos:start="2:46" pos:end="2:53"><name pos:start="2:46" pos:end="2:48">int</name> <modifier pos:start="2:50" pos:end="2:50">*</modifier></type><name pos:start="2:51" pos:end="2:53">pfd</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="53:14">{<block_content pos:start="4:5" pos:end="53:14">
    <decl_stmt pos:start="4:5" pos:end="4:11"><decl pos:start="4:5" pos:end="4:10"><type pos:start="4:5" pos:end="4:7"><name pos:start="4:5" pos:end="4:7">int</name></type> <name pos:start="4:9" pos:end="4:10">fd</name></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">mmmmssss</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:26"><decl pos:start="6:5" pos:end="6:25"><type pos:start="6:5" pos:end="6:18"><name pos:start="6:5" pos:end="6:18">audio_buf_info</name></type> <name pos:start="6:20" pos:end="6:25">abinfo</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">fmt</name></decl>, <decl pos:start="7:14" pos:end="7:17"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:17">freq</name></decl>, <decl pos:start="7:20" pos:end="7:28"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:20" pos:end="7:28">nchannels</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:66"><decl pos:start="8:5" pos:end="8:65"><type pos:start="8:5" pos:end="8:16"><specifier pos:start="8:5" pos:end="8:9">const</specifier> <name pos:start="8:11" pos:end="8:14">char</name> <modifier pos:start="8:16" pos:end="8:16">*</modifier></type><name pos:start="8:17" pos:end="8:23">dspname</name> <init pos:start="8:25" pos:end="8:65">= <expr pos:start="8:27" pos:end="8:65"><ternary pos:start="8:27" pos:end="8:65"><condition pos:start="8:27" pos:end="8:30"><expr pos:start="8:27" pos:end="8:28"><name pos:start="8:27" pos:end="8:28">in</name></expr> ?</condition><then pos:start="8:32" pos:end="8:46"> <expr pos:start="8:32" pos:end="8:46"><name pos:start="8:32" pos:end="8:46"><name pos:start="8:32" pos:end="8:35">conf</name><operator pos:start="8:36" pos:end="8:36">.</operator><name pos:start="8:37" pos:end="8:46">devpath_in</name></name></expr> </then><else pos:start="8:48" pos:end="8:65">: <expr pos:start="8:50" pos:end="8:65"><name pos:start="8:50" pos:end="8:65"><name pos:start="8:50" pos:end="8:53">conf</name><operator pos:start="8:54" pos:end="8:54">.</operator><name pos:start="8:55" pos:end="8:65">devpath_out</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">typ</name> <init pos:start="9:21" pos:end="9:40">= <expr pos:start="9:23" pos:end="9:40"><ternary pos:start="9:23" pos:end="9:40"><condition pos:start="9:23" pos:end="9:26"><expr pos:start="9:23" pos:end="9:24"><name pos:start="9:23" pos:end="9:24">in</name></expr> ?</condition><then pos:start="9:28" pos:end="9:32"> <expr pos:start="9:28" pos:end="9:32"><literal type="string" pos:start="9:28" pos:end="9:32">"ADC"</literal></expr> </then><else pos:start="9:34" pos:end="9:40">: <expr pos:start="9:36" pos:end="9:40"><literal type="string" pos:start="9:36" pos:end="9:40">"DAC"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:65"><expr pos:start="10:5" pos:end="10:64"><name pos:start="10:5" pos:end="10:6">fd</name> <operator pos:start="10:8" pos:end="10:8">=</operator> <call pos:start="10:10" pos:end="10:64"><name pos:start="10:10" pos:end="10:13">open</name> <argument_list pos:start="10:15" pos:end="10:64">(<argument pos:start="10:16" pos:end="10:22"><expr pos:start="10:16" pos:end="10:22"><name pos:start="10:16" pos:end="10:22">dspname</name></expr></argument>, <argument pos:start="10:25" pos:end="10:63"><expr pos:start="10:25" pos:end="10:63"><operator pos:start="10:25" pos:end="10:25">(</operator><ternary pos:start="10:26" pos:end="10:49"><condition pos:start="10:26" pos:end="10:29"><expr pos:start="10:26" pos:end="10:27"><name pos:start="10:26" pos:end="10:27">in</name></expr> ?</condition><then pos:start="10:31" pos:end="10:38"> <expr pos:start="10:31" pos:end="10:38"><name pos:start="10:31" pos:end="10:38">O_RDONLY</name></expr> </then><else pos:start="10:40" pos:end="10:49">: <expr pos:start="10:42" pos:end="10:49"><name pos:start="10:42" pos:end="10:49">O_WRONLY</name></expr></else></ternary><operator pos:start="10:50" pos:end="10:50">)</operator> <operator pos:start="10:52" pos:end="10:52">|</operator> <name pos:start="10:54" pos:end="10:63">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="11:5" pos:end="53:14"><if pos:start="11:5" pos:end="53:14">if <condition pos:start="11:8" pos:end="11:17">(<expr pos:start="11:9" pos:end="11:16"><operator pos:start="11:9" pos:end="11:9">-</operator><literal type="number" pos:start="11:10" pos:end="11:10">1</literal> <operator pos:start="11:12" pos:end="11:13">==</operator> <name pos:start="11:15" pos:end="11:16">fd</name></expr>)</condition> <block pos:start="11:19" pos:end="53:14">{<block_content pos:start="12:9" pos:end="53:14">
        <expr_stmt pos:start="12:9" pos:end="12:67"><expr pos:start="12:9" pos:end="12:66"><call pos:start="12:9" pos:end="12:66"><name pos:start="12:9" pos:end="12:19">oss_logerr2</name> <argument_list pos:start="12:21" pos:end="12:66">(<argument pos:start="12:22" pos:end="12:26"><expr pos:start="12:22" pos:end="12:26"><name pos:start="12:22" pos:end="12:26">errno</name></expr></argument>, <argument pos:start="12:29" pos:end="12:31"><expr pos:start="12:29" pos:end="12:31"><name pos:start="12:29" pos:end="12:31">typ</name></expr></argument>, <argument pos:start="12:34" pos:end="12:56"><expr pos:start="12:34" pos:end="12:56"><literal type="string" pos:start="12:34" pos:end="12:56">"Failed to open `%s'\n"</literal></expr></argument>, <argument pos:start="12:59" pos:end="12:65"><expr pos:start="12:59" pos:end="12:65"><name pos:start="12:59" pos:end="12:65">dspname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>
    <expr_stmt pos:start="14:5" pos:end="14:21"><expr pos:start="14:5" pos:end="14:20"><name pos:start="14:5" pos:end="14:8">freq</name> <operator pos:start="14:10" pos:end="14:10">=</operator> <name pos:start="14:12" pos:end="14:20"><name pos:start="14:12" pos:end="14:14">req</name><operator pos:start="14:15" pos:end="14:16">-&gt;</operator><name pos:start="14:17" pos:end="14:20">freq</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="15:5" pos:end="15:31"><expr pos:start="15:5" pos:end="15:30"><name pos:start="15:5" pos:end="15:13">nchannels</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <name pos:start="15:17" pos:end="15:30"><name pos:start="15:17" pos:end="15:19">req</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:30">nchannels</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="16:5" pos:end="16:19"><expr pos:start="16:5" pos:end="16:18"><name pos:start="16:5" pos:end="16:7">fmt</name> <operator pos:start="16:9" pos:end="16:9">=</operator> <name pos:start="16:11" pos:end="16:18"><name pos:start="16:11" pos:end="16:13">req</name><operator pos:start="16:14" pos:end="16:15">-&gt;</operator><name pos:start="16:16" pos:end="16:18">fmt</name></name></expr>;</expr_stmt>
    <if_stmt pos:start="17:5" pos:end="53:14"><if pos:start="17:5" pos:end="53:14">if <condition pos:start="17:8" pos:end="17:48">(<expr pos:start="17:9" pos:end="17:47"><call pos:start="17:9" pos:end="17:47"><name pos:start="17:9" pos:end="17:13">ioctl</name> <argument_list pos:start="17:15" pos:end="17:47">(<argument pos:start="17:16" pos:end="17:17"><expr pos:start="17:16" pos:end="17:17"><name pos:start="17:16" pos:end="17:17">fd</name></expr></argument>, <argument pos:start="17:20" pos:end="17:40"><expr pos:start="17:20" pos:end="17:40"><name pos:start="17:20" pos:end="17:40">SNDCTL_DSP_SAMPLESIZE</name></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><operator pos:start="17:43" pos:end="17:43">&amp;</operator><name pos:start="17:44" pos:end="17:46">fmt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:50" pos:end="53:14">{<block_content pos:start="18:9" pos:end="53:14">
        <expr_stmt pos:start="18:9" pos:end="18:77"><expr pos:start="18:9" pos:end="18:76"><call pos:start="18:9" pos:end="18:76"><name pos:start="18:9" pos:end="18:19">oss_logerr2</name> <argument_list pos:start="18:21" pos:end="18:76">(<argument pos:start="18:22" pos:end="18:26"><expr pos:start="18:22" pos:end="18:26"><name pos:start="18:22" pos:end="18:26">errno</name></expr></argument>, <argument pos:start="18:29" pos:end="18:31"><expr pos:start="18:29" pos:end="18:31"><name pos:start="18:29" pos:end="18:31">typ</name></expr></argument>, <argument pos:start="18:34" pos:end="18:65"><expr pos:start="18:34" pos:end="18:65"><literal type="string" pos:start="18:34" pos:end="18:65">"Failed to set sample size %d\n"</literal></expr></argument>, <argument pos:start="18:68" pos:end="18:75"><expr pos:start="18:68" pos:end="18:75"><name pos:start="18:68" pos:end="18:75"><name pos:start="18:68" pos:end="18:70">req</name><operator pos:start="18:71" pos:end="18:72">-&gt;</operator><name pos:start="18:73" pos:end="18:75">fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="19:5" pos:end="53:14"><if pos:start="19:5" pos:end="53:14">if <condition pos:start="19:8" pos:end="19:52">(<expr pos:start="19:9" pos:end="19:51"><call pos:start="19:9" pos:end="19:51"><name pos:start="19:9" pos:end="19:13">ioctl</name> <argument_list pos:start="19:15" pos:end="19:51">(<argument pos:start="19:16" pos:end="19:17"><expr pos:start="19:16" pos:end="19:17"><name pos:start="19:16" pos:end="19:17">fd</name></expr></argument>, <argument pos:start="19:20" pos:end="19:38"><expr pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:38">SNDCTL_DSP_CHANNELS</name></expr></argument>, <argument pos:start="19:41" pos:end="19:50"><expr pos:start="19:41" pos:end="19:50"><operator pos:start="19:41" pos:end="19:41">&amp;</operator><name pos:start="19:42" pos:end="19:50">nchannels</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:54" pos:end="53:14">{<block_content pos:start="20:9" pos:end="53:14">
        <expr_stmt pos:start="20:9" pos:end="21:37"><expr pos:start="20:9" pos:end="21:36"><call pos:start="20:9" pos:end="21:36"><name pos:start="20:9" pos:end="20:19">oss_logerr2</name> <argument_list pos:start="20:21" pos:end="21:36">(<argument pos:start="20:22" pos:end="20:26"><expr pos:start="20:22" pos:end="20:26"><name pos:start="20:22" pos:end="20:26">errno</name></expr></argument>, <argument pos:start="20:29" pos:end="20:31"><expr pos:start="20:29" pos:end="20:31"><name pos:start="20:29" pos:end="20:31">typ</name></expr></argument>, <argument pos:start="20:34" pos:end="20:72"><expr pos:start="20:34" pos:end="20:72"><literal type="string" pos:start="20:34" pos:end="20:72">"Failed to set number of channels %d\n"</literal></expr></argument>,
                     <argument pos:start="21:22" pos:end="21:35"><expr pos:start="21:22" pos:end="21:35"><name pos:start="21:22" pos:end="21:35"><name pos:start="21:22" pos:end="21:24">req</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:35">nchannels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="22:5" pos:end="53:14"><if pos:start="22:5" pos:end="53:14">if <condition pos:start="22:8" pos:end="22:44">(<expr pos:start="22:9" pos:end="22:43"><call pos:start="22:9" pos:end="22:43"><name pos:start="22:9" pos:end="22:13">ioctl</name> <argument_list pos:start="22:15" pos:end="22:43">(<argument pos:start="22:16" pos:end="22:17"><expr pos:start="22:16" pos:end="22:17"><name pos:start="22:16" pos:end="22:17">fd</name></expr></argument>, <argument pos:start="22:20" pos:end="22:35"><expr pos:start="22:20" pos:end="22:35"><name pos:start="22:20" pos:end="22:35">SNDCTL_DSP_SPEED</name></expr></argument>, <argument pos:start="22:38" pos:end="22:42"><expr pos:start="22:38" pos:end="22:42"><operator pos:start="22:38" pos:end="22:38">&amp;</operator><name pos:start="22:39" pos:end="22:42">freq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="22:46" pos:end="53:14">{<block_content pos:start="23:9" pos:end="53:14">
        <expr_stmt pos:start="23:9" pos:end="23:76"><expr pos:start="23:9" pos:end="23:75"><call pos:start="23:9" pos:end="23:75"><name pos:start="23:9" pos:end="23:19">oss_logerr2</name> <argument_list pos:start="23:21" pos:end="23:75">(<argument pos:start="23:22" pos:end="23:26"><expr pos:start="23:22" pos:end="23:26"><name pos:start="23:22" pos:end="23:26">errno</name></expr></argument>, <argument pos:start="23:29" pos:end="23:31"><expr pos:start="23:29" pos:end="23:31"><name pos:start="23:29" pos:end="23:31">typ</name></expr></argument>, <argument pos:start="23:34" pos:end="23:63"><expr pos:start="23:34" pos:end="23:63"><literal type="string" pos:start="23:34" pos:end="23:63">"Failed to set frequency %d\n"</literal></expr></argument>, <argument pos:start="23:66" pos:end="23:74"><expr pos:start="23:66" pos:end="23:74"><name pos:start="23:66" pos:end="23:74"><name pos:start="23:66" pos:end="23:68">req</name><operator pos:start="23:69" pos:end="23:70">-&gt;</operator><name pos:start="23:71" pos:end="23:74">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="24:5" pos:end="53:14"><if pos:start="24:5" pos:end="53:14">if <condition pos:start="24:8" pos:end="24:40">(<expr pos:start="24:9" pos:end="24:39"><call pos:start="24:9" pos:end="24:39"><name pos:start="24:9" pos:end="24:13">ioctl</name> <argument_list pos:start="24:15" pos:end="24:39">(<argument pos:start="24:16" pos:end="24:17"><expr pos:start="24:16" pos:end="24:17"><name pos:start="24:16" pos:end="24:17">fd</name></expr></argument>, <argument pos:start="24:20" pos:end="24:38"><expr pos:start="24:20" pos:end="24:38"><name pos:start="24:20" pos:end="24:38">SNDCTL_DSP_NONBLOCK</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="24:42" pos:end="53:14">{<block_content pos:start="25:9" pos:end="53:14">
        <expr_stmt pos:start="25:9" pos:end="25:70"><expr pos:start="25:9" pos:end="25:69"><call pos:start="25:9" pos:end="25:69"><name pos:start="25:9" pos:end="25:19">oss_logerr2</name> <argument_list pos:start="25:21" pos:end="25:69">(<argument pos:start="25:22" pos:end="25:26"><expr pos:start="25:22" pos:end="25:26"><name pos:start="25:22" pos:end="25:26">errno</name></expr></argument>, <argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">typ</name></expr></argument>, <argument pos:start="25:34" pos:end="25:68"><expr pos:start="25:34" pos:end="25:68"><literal type="string" pos:start="25:34" pos:end="25:68">"Failed to set non-blocking mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="26:5" pos:end="26:62"><expr pos:start="26:5" pos:end="26:61"><name pos:start="26:5" pos:end="26:12">mmmmssss</name> <operator pos:start="26:14" pos:end="26:14">=</operator> <operator pos:start="26:16" pos:end="26:16">(</operator><name pos:start="26:17" pos:end="26:27"><name pos:start="26:17" pos:end="26:19">req</name><operator pos:start="26:20" pos:end="26:21">-&gt;</operator><name pos:start="26:22" pos:end="26:27">nfrags</name></name> <operator pos:start="26:29" pos:end="26:30">&lt;&lt;</operator> <literal type="number" pos:start="26:32" pos:end="26:33">16</literal><operator pos:start="26:34" pos:end="26:34">)</operator> <operator pos:start="26:36" pos:end="26:36">|</operator> <call pos:start="26:38" pos:end="26:61"><name pos:start="26:38" pos:end="26:45">lsbindex</name> <argument_list pos:start="26:47" pos:end="26:61">(<argument pos:start="26:48" pos:end="26:60"><expr pos:start="26:48" pos:end="26:60"><name pos:start="26:48" pos:end="26:60"><name pos:start="26:48" pos:end="26:50">req</name><operator pos:start="26:51" pos:end="26:52">-&gt;</operator><name pos:start="26:53" pos:end="26:60">fragsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="27:5" pos:end="53:14"><if pos:start="27:5" pos:end="53:14">if <condition pos:start="27:8" pos:end="27:54">(<expr pos:start="27:9" pos:end="27:53"><call pos:start="27:9" pos:end="27:53"><name pos:start="27:9" pos:end="27:13">ioctl</name> <argument_list pos:start="27:15" pos:end="27:53">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">fd</name></expr></argument>, <argument pos:start="27:20" pos:end="27:41"><expr pos:start="27:20" pos:end="27:41"><name pos:start="27:20" pos:end="27:41">SNDCTL_DSP_SETFRAGMENT</name></expr></argument>, <argument pos:start="27:44" pos:end="27:52"><expr pos:start="27:44" pos:end="27:52"><operator pos:start="27:44" pos:end="27:44">&amp;</operator><name pos:start="27:45" pos:end="27:52">mmmmssss</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:56" pos:end="53:14">{<block_content pos:start="28:9" pos:end="53:14">
        <expr_stmt pos:start="28:9" pos:end="29:49"><expr pos:start="28:9" pos:end="29:48"><call pos:start="28:9" pos:end="29:48"><name pos:start="28:9" pos:end="28:19">oss_logerr2</name> <argument_list pos:start="28:21" pos:end="29:48">(<argument pos:start="28:22" pos:end="28:26"><expr pos:start="28:22" pos:end="28:26"><name pos:start="28:22" pos:end="28:26">errno</name></expr></argument>, <argument pos:start="28:29" pos:end="28:31"><expr pos:start="28:29" pos:end="28:31"><name pos:start="28:29" pos:end="28:31">typ</name></expr></argument>, <argument pos:start="28:34" pos:end="28:73"><expr pos:start="28:34" pos:end="28:73"><literal type="string" pos:start="28:34" pos:end="28:73">"Failed to set buffer length (%d, %d)\n"</literal></expr></argument>,
                     <argument pos:start="29:22" pos:end="29:32"><expr pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:32"><name pos:start="29:22" pos:end="29:24">req</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:32">nfrags</name></name></expr></argument>, <argument pos:start="29:35" pos:end="29:47"><expr pos:start="29:35" pos:end="29:47"><name pos:start="29:35" pos:end="29:47"><name pos:start="29:35" pos:end="29:37">req</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:47">fragsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="53:14"><if pos:start="30:5" pos:end="53:14">if <condition pos:start="30:8" pos:end="30:78">(<expr pos:start="30:9" pos:end="30:77"><call pos:start="30:9" pos:end="30:77"><name pos:start="30:9" pos:end="30:13">ioctl</name> <argument_list pos:start="30:15" pos:end="30:77">(<argument pos:start="30:16" pos:end="30:17"><expr pos:start="30:16" pos:end="30:17"><name pos:start="30:16" pos:end="30:17">fd</name></expr></argument>, <argument pos:start="30:20" pos:end="30:67"><expr pos:start="30:20" pos:end="30:67"><ternary pos:start="30:20" pos:end="30:67"><condition pos:start="30:20" pos:end="30:23"><expr pos:start="30:20" pos:end="30:21"><name pos:start="30:20" pos:end="30:21">in</name></expr> ?</condition><then pos:start="30:25" pos:end="30:44"> <expr pos:start="30:25" pos:end="30:44"><name pos:start="30:25" pos:end="30:44">SNDCTL_DSP_GETISPACE</name></expr> </then><else pos:start="30:46" pos:end="30:67">: <expr pos:start="30:48" pos:end="30:67"><name pos:start="30:48" pos:end="30:67">SNDCTL_DSP_GETOSPACE</name></expr></else></ternary></expr></argument>, <argument pos:start="30:70" pos:end="30:76"><expr pos:start="30:70" pos:end="30:76"><operator pos:start="30:70" pos:end="30:70">&amp;</operator><name pos:start="30:71" pos:end="30:76">abinfo</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="30:80" pos:end="53:14">{<block_content pos:start="31:9" pos:end="53:14">
        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:19">oss_logerr2</name> <argument_list pos:start="31:21" pos:end="31:65">(<argument pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:26">errno</name></expr></argument>, <argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">typ</name></expr></argument>, <argument pos:start="31:34" pos:end="31:64"><expr pos:start="31:34" pos:end="31:64"><literal type="string" pos:start="31:34" pos:end="31:64">"Failed to get buffer length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="32:5" pos:end="32:19"><expr pos:start="32:5" pos:end="32:18"><name pos:start="32:5" pos:end="32:12"><name pos:start="32:5" pos:end="32:7">obt</name><operator pos:start="32:8" pos:end="32:9">-&gt;</operator><name pos:start="32:10" pos:end="32:12">fmt</name></name> <operator pos:start="32:14" pos:end="32:14">=</operator> <name pos:start="32:16" pos:end="32:18">fmt</name></expr>;</expr_stmt>
    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:7">obt</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:18">nchannels</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:30">nchannels</name></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:21"><expr pos:start="34:5" pos:end="34:20"><name pos:start="34:5" pos:end="34:13"><name pos:start="34:5" pos:end="34:7">obt</name><operator pos:start="34:8" pos:end="34:9">-&gt;</operator><name pos:start="34:10" pos:end="34:13">freq</name></name> <operator pos:start="34:15" pos:end="34:15">=</operator> <name pos:start="34:17" pos:end="34:20">freq</name></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:7">obt</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:15">nfrags</name></name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:35"><name pos:start="35:19" pos:end="35:24">abinfo</name><operator pos:start="35:25" pos:end="35:25">.</operator><name pos:start="35:26" pos:end="35:35">fragstotal</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="36:5" pos:end="36:36"><expr pos:start="36:5" pos:end="36:35"><name pos:start="36:5" pos:end="36:17"><name pos:start="36:5" pos:end="36:7">obt</name><operator pos:start="36:8" pos:end="36:9">-&gt;</operator><name pos:start="36:10" pos:end="36:17">fragsize</name></name> <operator pos:start="36:19" pos:end="36:19">=</operator> <name pos:start="36:21" pos:end="36:35"><name pos:start="36:21" pos:end="36:26">abinfo</name><operator pos:start="36:27" pos:end="36:27">.</operator><name pos:start="36:28" pos:end="36:35">fragsize</name></name></expr>;</expr_stmt>
    <expr_stmt pos:start="37:5" pos:end="39:0"><expr pos:start="37:5" pos:end="37:13"><operator pos:start="37:5" pos:end="37:5">*</operator><name pos:start="37:6" pos:end="37:8">pfd</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <name pos:start="37:12" pos:end="37:13">fd</name></expr>;</expr_stmt>
<cpp:ifdef pos:start="38:1" pos:end="38:23">#<cpp:directive pos:start="38:2" pos:end="38:6">ifdef</cpp:directive> <name pos:start="38:8" pos:end="38:23">DEBUG_MISMATCHES</name></cpp:ifdef>
    <if_stmt pos:start="39:5" pos:end="53:14"><if pos:start="39:5" pos:end="53:14">if <condition pos:start="39:8" pos:end="43:37">(<expr pos:start="39:9" pos:end="43:36"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:17"><name pos:start="39:10" pos:end="39:12">req</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:17">fmt</name></name> <operator pos:start="39:19" pos:end="39:20">!=</operator> <name pos:start="39:22" pos:end="39:29"><name pos:start="39:22" pos:end="39:24">obt</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:29">fmt</name></name><operator pos:start="39:30" pos:end="39:30">)</operator> <operator pos:start="39:32" pos:end="39:33">||</operator>
        <operator pos:start="40:9" pos:end="40:9">(</operator><name pos:start="40:10" pos:end="40:23"><name pos:start="40:10" pos:end="40:12">req</name><operator pos:start="40:13" pos:end="40:14">-&gt;</operator><name pos:start="40:15" pos:end="40:23">nchannels</name></name> <operator pos:start="40:25" pos:end="40:26">!=</operator> <name pos:start="40:28" pos:end="40:41"><name pos:start="40:28" pos:end="40:30">obt</name><operator pos:start="40:31" pos:end="40:32">-&gt;</operator><name pos:start="40:33" pos:end="40:41">nchannels</name></name><operator pos:start="40:42" pos:end="40:42">)</operator> <operator pos:start="40:44" pos:end="40:45">||</operator>
        <operator pos:start="41:9" pos:end="41:9">(</operator><name pos:start="41:10" pos:end="41:18"><name pos:start="41:10" pos:end="41:12">req</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:18">freq</name></name> <operator pos:start="41:20" pos:end="41:21">!=</operator> <name pos:start="41:23" pos:end="41:31"><name pos:start="41:23" pos:end="41:25">obt</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:31">freq</name></name><operator pos:start="41:32" pos:end="41:32">)</operator> <operator pos:start="41:34" pos:end="41:35">||</operator>
        <operator pos:start="42:9" pos:end="42:9">(</operator><name pos:start="42:10" pos:end="42:22"><name pos:start="42:10" pos:end="42:12">req</name><operator pos:start="42:13" pos:end="42:14">-&gt;</operator><name pos:start="42:15" pos:end="42:22">fragsize</name></name> <operator pos:start="42:24" pos:end="42:25">!=</operator> <name pos:start="42:27" pos:end="42:39"><name pos:start="42:27" pos:end="42:29">obt</name><operator pos:start="42:30" pos:end="42:31">-&gt;</operator><name pos:start="42:32" pos:end="42:39">fragsize</name></name><operator pos:start="42:40" pos:end="42:40">)</operator> <operator pos:start="42:42" pos:end="42:43">||</operator>
        <operator pos:start="43:9" pos:end="43:9">(</operator><name pos:start="43:10" pos:end="43:20"><name pos:start="43:10" pos:end="43:12">req</name><operator pos:start="43:13" pos:end="43:14">-&gt;</operator><name pos:start="43:15" pos:end="43:20">nfrags</name></name> <operator pos:start="43:22" pos:end="43:23">!=</operator> <name pos:start="43:25" pos:end="43:35"><name pos:start="43:25" pos:end="43:27">obt</name><operator pos:start="43:28" pos:end="43:29">-&gt;</operator><name pos:start="43:30" pos:end="43:35">nfrags</name></name><operator pos:start="43:36" pos:end="43:36">)</operator></expr>)</condition> <block pos:start="43:39" pos:end="53:14">{<block_content pos:start="44:9" pos:end="53:14">
        <expr_stmt pos:start="44:9" pos:end="44:46"><expr pos:start="44:9" pos:end="44:45"><call pos:start="44:9" pos:end="44:45"><name pos:start="44:9" pos:end="44:13">dolog</name> <argument_list pos:start="44:15" pos:end="44:45">(<argument pos:start="44:16" pos:end="44:44"><expr pos:start="44:16" pos:end="44:44"><literal type="string" pos:start="44:16" pos:end="44:44">"Audio parameters mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <expr_stmt pos:start="45:9" pos:end="48:0"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:21">oss_dump_info</name> <argument_list pos:start="45:23" pos:end="45:32">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">req</name></expr></argument>, <argument pos:start="45:29" pos:end="45:31"><expr pos:start="45:29" pos:end="45:31"><name pos:start="45:29" pos:end="45:31">obt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="46:1" pos:end="46:6">#<cpp:directive pos:start="46:2" pos:end="46:6">endif</cpp:directive></cpp:endif>
<cpp:ifdef pos:start="47:1" pos:end="47:12">#<cpp:directive pos:start="47:2" pos:end="47:6">ifdef</cpp:directive> <name pos:start="47:8" pos:end="47:12">DEBUG</name></cpp:ifdef>
    <expr_stmt pos:start="48:5" pos:end="50:0"><expr pos:start="48:5" pos:end="48:28"><call pos:start="48:5" pos:end="48:28"><name pos:start="48:5" pos:end="48:17">oss_dump_info</name> <argument_list pos:start="48:19" pos:end="48:28">(<argument pos:start="48:20" pos:end="48:22"><expr pos:start="48:20" pos:end="48:22"><name pos:start="48:20" pos:end="48:22">req</name></expr></argument>, <argument pos:start="48:25" pos:end="48:27"><expr pos:start="48:25" pos:end="48:27"><name pos:start="48:25" pos:end="48:27">obt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>
    <return pos:start="50:5" pos:end="50:13">return <expr pos:start="50:12" pos:end="50:12"><literal type="number" pos:start="50:12" pos:end="50:12">0</literal></expr>;</return>
 <label pos:start="51:2" pos:end="51:5"><name pos:start="51:2" pos:end="51:4">err</name>:</label>
    <expr_stmt pos:start="52:5" pos:end="52:25"><expr pos:start="52:5" pos:end="52:24"><call pos:start="52:5" pos:end="52:24"><name pos:start="52:5" pos:end="52:18">oss_anal_close</name> <argument_list pos:start="52:20" pos:end="52:24">(<argument pos:start="52:21" pos:end="52:23"><expr pos:start="52:21" pos:end="52:23"><operator pos:start="52:21" pos:end="52:21">&amp;</operator><name pos:start="52:22" pos:end="52:23">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <return pos:start="53:5" pos:end="53:14">return <expr pos:start="53:12" pos:end="53:13"><operator pos:start="53:12" pos:end="53:12">-</operator><literal type="number" pos:start="53:13" pos:end="53:13">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt></block_content></block></function></unit>
