<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14927.c" pos:tabs="8"><function pos:start="1:1" pos:end="167:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vnc_connect</name><parameter_list pos:start="1:24" pos:end="3:54">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:34">VncDisplay</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:38">vd</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:62"><decl pos:start="1:41" pos:end="1:62"><type pos:start="1:41" pos:end="1:62"><name pos:start="1:41" pos:end="1:56">QIOChannelSocket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">sioc</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:28">bool</name></type> <name pos:start="3:30" pos:end="3:37">skipauth</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:53"><decl pos:start="3:40" pos:end="3:53"><type pos:start="3:40" pos:end="3:53"><name pos:start="3:40" pos:end="3:43">bool</name></type> <name pos:start="3:45" pos:end="3:53">websocket</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="167:1">{<block_content pos:start="7:5" pos:end="165:5">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">vs</name> <init pos:start="7:18" pos:end="7:38">= <expr pos:start="7:20" pos:end="7:38"><call pos:start="7:20" pos:end="7:38"><name pos:start="7:20" pos:end="7:25">g_new0</name><argument_list pos:start="7:26" pos:end="7:38">(<argument pos:start="7:27" pos:end="7:34"><expr pos:start="7:27" pos:end="7:34"><name pos:start="7:27" pos:end="7:34">VncState</name></expr></argument>, <argument pos:start="7:37" pos:end="7:37"><expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:6">vs</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:12">sioc</name></name> <operator pos:start="13:14" pos:end="13:14">=</operator> <name pos:start="13:16" pos:end="13:19">sioc</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:33"><expr pos:start="15:5" pos:end="15:32"><call pos:start="15:5" pos:end="15:32"><name pos:start="15:5" pos:end="15:14">object_ref</name><argument_list pos:start="15:15" pos:end="15:32">(<argument pos:start="15:16" pos:end="15:31"><expr pos:start="15:16" pos:end="15:31"><call pos:start="15:16" pos:end="15:31"><name pos:start="15:16" pos:end="15:21">OBJECT</name><argument_list pos:start="15:22" pos:end="15:31">(<argument pos:start="15:23" pos:end="15:30"><expr pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:30"><name pos:start="15:23" pos:end="15:24">vs</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:30">sioc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:6">vs</name><operator pos:start="17:7" pos:end="17:8">-&gt;</operator><name pos:start="17:9" pos:end="17:11">ioc</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <call pos:start="17:15" pos:end="17:31"><name pos:start="17:15" pos:end="17:25">QIO_CHANNEL</name><argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:14">object_ref</name><argument_list pos:start="19:15" pos:end="19:31">(<argument pos:start="19:16" pos:end="19:30"><expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:21">OBJECT</name><argument_list pos:start="19:22" pos:end="19:30">(<argument pos:start="19:23" pos:end="19:29"><expr pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:29"><name pos:start="19:23" pos:end="19:24">vs</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:29">ioc</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:16"><expr pos:start="21:5" pos:end="21:15"><name pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:6">vs</name><operator pos:start="21:7" pos:end="21:8">-&gt;</operator><name pos:start="21:9" pos:end="21:10">vd</name></name> <operator pos:start="21:12" pos:end="21:12">=</operator> <name pos:start="21:14" pos:end="21:15">vd</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:59"><expr pos:start="25:5" pos:end="25:58"><call pos:start="25:5" pos:end="25:58"><name pos:start="25:5" pos:end="25:15">buffer_init</name><argument_list pos:start="25:16" pos:end="25:58">(<argument pos:start="25:17" pos:end="25:26"><expr pos:start="25:17" pos:end="25:26"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:26"><name pos:start="25:18" pos:end="25:19">vs</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:26">input</name></name></expr></argument>,          <argument pos:start="25:38" pos:end="25:51"><expr pos:start="25:38" pos:end="25:51"><literal type="string" pos:start="25:38" pos:end="25:51">"vnc-input/%p"</literal></expr></argument>, <argument pos:start="25:54" pos:end="25:57"><expr pos:start="25:54" pos:end="25:57"><name pos:start="25:54" pos:end="25:57">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:60"><expr pos:start="27:5" pos:end="27:59"><call pos:start="27:5" pos:end="27:59"><name pos:start="27:5" pos:end="27:15">buffer_init</name><argument_list pos:start="27:16" pos:end="27:59">(<argument pos:start="27:17" pos:end="27:27"><expr pos:start="27:17" pos:end="27:27"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:27"><name pos:start="27:18" pos:end="27:19">vs</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:27">output</name></name></expr></argument>,         <argument pos:start="27:38" pos:end="27:52"><expr pos:start="27:38" pos:end="27:52"><literal type="string" pos:start="27:38" pos:end="27:52">"vnc-output/%p"</literal></expr></argument>, <argument pos:start="27:55" pos:end="27:58"><expr pos:start="27:55" pos:end="27:58"><name pos:start="27:55" pos:end="27:58">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><call pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:15">buffer_init</name><argument_list pos:start="29:16" pos:end="29:64">(<argument pos:start="29:17" pos:end="29:32"><expr pos:start="29:17" pos:end="29:32"><operator pos:start="29:17" pos:end="29:17">&amp;</operator><name pos:start="29:18" pos:end="29:32"><name pos:start="29:18" pos:end="29:19">vs</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:32">jobs_buffer</name></name></expr></argument>,    <argument pos:start="29:38" pos:end="29:57"><expr pos:start="29:38" pos:end="29:57"><literal type="string" pos:start="29:38" pos:end="29:57">"vnc-jobs_buffer/%p"</literal></expr></argument>, <argument pos:start="29:60" pos:end="29:63"><expr pos:start="29:60" pos:end="29:63"><name pos:start="29:60" pos:end="29:63">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:59"><expr pos:start="33:5" pos:end="33:58"><call pos:start="33:5" pos:end="33:58"><name pos:start="33:5" pos:end="33:15">buffer_init</name><argument_list pos:start="33:16" pos:end="33:58">(<argument pos:start="33:17" pos:end="33:32"><expr pos:start="33:17" pos:end="33:32"><operator pos:start="33:17" pos:end="33:17">&amp;</operator><name pos:start="33:18" pos:end="33:32"><name pos:start="33:18" pos:end="33:19">vs</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:26">tight</name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:32">tight</name></name></expr></argument>,    <argument pos:start="33:38" pos:end="33:51"><expr pos:start="33:38" pos:end="33:51"><literal type="string" pos:start="33:38" pos:end="33:51">"vnc-tight/%p"</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:57"><expr pos:start="33:54" pos:end="33:57"><name pos:start="33:54" pos:end="33:57">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:64"><expr pos:start="35:5" pos:end="35:63"><call pos:start="35:5" pos:end="35:63"><name pos:start="35:5" pos:end="35:15">buffer_init</name><argument_list pos:start="35:16" pos:end="35:63">(<argument pos:start="35:17" pos:end="35:31"><expr pos:start="35:17" pos:end="35:31"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:19">vs</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:26">tight</name><operator pos:start="35:27" pos:end="35:27">.</operator><name pos:start="35:28" pos:end="35:31">zlib</name></name></expr></argument>,     <argument pos:start="35:38" pos:end="35:56"><expr pos:start="35:38" pos:end="35:56"><literal type="string" pos:start="35:38" pos:end="35:56">"vnc-tight-zlib/%p"</literal></expr></argument>, <argument pos:start="35:59" pos:end="35:62"><expr pos:start="35:59" pos:end="35:62"><name pos:start="35:59" pos:end="35:62">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="40:0"><expr pos:start="37:5" pos:end="37:67"><call pos:start="37:5" pos:end="37:67"><name pos:start="37:5" pos:end="37:15">buffer_init</name><argument_list pos:start="37:16" pos:end="37:67">(<argument pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:35"><operator pos:start="37:17" pos:end="37:17">&amp;</operator><name pos:start="37:18" pos:end="37:35"><name pos:start="37:18" pos:end="37:19">vs</name><operator pos:start="37:20" pos:end="37:21">-&gt;</operator><name pos:start="37:22" pos:end="37:26">tight</name><operator pos:start="37:27" pos:end="37:27">.</operator><name pos:start="37:28" pos:end="37:35">gradient</name></name></expr></argument>, <argument pos:start="37:38" pos:end="37:60"><expr pos:start="37:38" pos:end="37:60"><literal type="string" pos:start="37:38" pos:end="37:60">"vnc-tight-gradient/%p"</literal></expr></argument>, <argument pos:start="37:63" pos:end="37:66"><expr pos:start="37:63" pos:end="37:66"><name pos:start="37:63" pos:end="37:66">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="39:1" pos:end="39:22">#<cpp:directive pos:start="39:2" pos:end="39:6">ifdef</cpp:directive> <name pos:start="39:8" pos:end="39:22">CONFIG_VNC_JPEG</name></cpp:ifdef>

    <expr_stmt pos:start="41:5" pos:end="46:0"><expr pos:start="41:5" pos:end="41:63"><call pos:start="41:5" pos:end="41:63"><name pos:start="41:5" pos:end="41:15">buffer_init</name><argument_list pos:start="41:16" pos:end="41:63">(<argument pos:start="41:17" pos:end="41:31"><expr pos:start="41:17" pos:end="41:31"><operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:31"><name pos:start="41:18" pos:end="41:19">vs</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:26">tight</name><operator pos:start="41:27" pos:end="41:27">.</operator><name pos:start="41:28" pos:end="41:31">jpeg</name></name></expr></argument>,     <argument pos:start="41:38" pos:end="41:56"><expr pos:start="41:38" pos:end="41:56"><literal type="string" pos:start="41:38" pos:end="41:56">"vnc-tight-jpeg/%p"</literal></expr></argument>, <argument pos:start="41:59" pos:end="41:62"><expr pos:start="41:59" pos:end="41:62"><name pos:start="41:59" pos:end="41:62">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="45:1" pos:end="45:21">#<cpp:directive pos:start="45:2" pos:end="45:6">ifdef</cpp:directive> <name pos:start="45:8" pos:end="45:21">CONFIG_VNC_PNG</name></cpp:ifdef>

    <expr_stmt pos:start="47:5" pos:end="50:0"><expr pos:start="47:5" pos:end="47:62"><call pos:start="47:5" pos:end="47:62"><name pos:start="47:5" pos:end="47:15">buffer_init</name><argument_list pos:start="47:16" pos:end="47:62">(<argument pos:start="47:17" pos:end="47:30"><expr pos:start="47:17" pos:end="47:30"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:30"><name pos:start="47:18" pos:end="47:19">vs</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:26">tight</name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:30">png</name></name></expr></argument>,      <argument pos:start="47:38" pos:end="47:55"><expr pos:start="47:38" pos:end="47:55"><literal type="string" pos:start="47:38" pos:end="47:55">"vnc-tight-png/%p"</literal></expr></argument>, <argument pos:start="47:58" pos:end="47:61"><expr pos:start="47:58" pos:end="47:61"><name pos:start="47:58" pos:end="47:61">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="51:5" pos:end="51:58"><expr pos:start="51:5" pos:end="51:57"><call pos:start="51:5" pos:end="51:57"><name pos:start="51:5" pos:end="51:15">buffer_init</name><argument_list pos:start="51:16" pos:end="51:57">(<argument pos:start="51:17" pos:end="51:30"><expr pos:start="51:17" pos:end="51:30"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:30"><name pos:start="51:18" pos:end="51:19">vs</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:25">zlib</name><operator pos:start="51:26" pos:end="51:26">.</operator><name pos:start="51:27" pos:end="51:30">zlib</name></name></expr></argument>,      <argument pos:start="51:38" pos:end="51:50"><expr pos:start="51:38" pos:end="51:50"><literal type="string" pos:start="51:38" pos:end="51:50">"vnc-zlib/%p"</literal></expr></argument>, <argument pos:start="51:53" pos:end="51:56"><expr pos:start="51:53" pos:end="51:56"><name pos:start="51:53" pos:end="51:56">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:58"><expr pos:start="53:5" pos:end="53:57"><call pos:start="53:5" pos:end="53:57"><name pos:start="53:5" pos:end="53:15">buffer_init</name><argument_list pos:start="53:16" pos:end="53:57">(<argument pos:start="53:17" pos:end="53:30"><expr pos:start="53:17" pos:end="53:30"><operator pos:start="53:17" pos:end="53:17">&amp;</operator><name pos:start="53:18" pos:end="53:30"><name pos:start="53:18" pos:end="53:19">vs</name><operator pos:start="53:20" pos:end="53:21">-&gt;</operator><name pos:start="53:22" pos:end="53:25">zrle</name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:30">zrle</name></name></expr></argument>,      <argument pos:start="53:38" pos:end="53:50"><expr pos:start="53:38" pos:end="53:50"><literal type="string" pos:start="53:38" pos:end="53:50">"vnc-zrle/%p"</literal></expr></argument>, <argument pos:start="53:53" pos:end="53:56"><expr pos:start="53:53" pos:end="53:56"><name pos:start="53:53" pos:end="53:56">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:61"><expr pos:start="55:5" pos:end="55:60"><call pos:start="55:5" pos:end="55:60"><name pos:start="55:5" pos:end="55:15">buffer_init</name><argument_list pos:start="55:16" pos:end="55:60">(<argument pos:start="55:17" pos:end="55:28"><expr pos:start="55:17" pos:end="55:28"><operator pos:start="55:17" pos:end="55:17">&amp;</operator><name pos:start="55:18" pos:end="55:28"><name pos:start="55:18" pos:end="55:19">vs</name><operator pos:start="55:20" pos:end="55:21">-&gt;</operator><name pos:start="55:22" pos:end="55:25">zrle</name><operator pos:start="55:26" pos:end="55:26">.</operator><name pos:start="55:27" pos:end="55:28">fb</name></name></expr></argument>,        <argument pos:start="55:38" pos:end="55:53"><expr pos:start="55:38" pos:end="55:53"><literal type="string" pos:start="55:38" pos:end="55:53">"vnc-zrle-fb/%p"</literal></expr></argument>, <argument pos:start="55:56" pos:end="55:59"><expr pos:start="55:56" pos:end="55:59"><name pos:start="55:56" pos:end="55:59">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:63"><expr pos:start="57:5" pos:end="57:62"><call pos:start="57:5" pos:end="57:62"><name pos:start="57:5" pos:end="57:15">buffer_init</name><argument_list pos:start="57:16" pos:end="57:62">(<argument pos:start="57:17" pos:end="57:30"><expr pos:start="57:17" pos:end="57:30"><operator pos:start="57:17" pos:end="57:17">&amp;</operator><name pos:start="57:18" pos:end="57:30"><name pos:start="57:18" pos:end="57:19">vs</name><operator pos:start="57:20" pos:end="57:21">-&gt;</operator><name pos:start="57:22" pos:end="57:25">zrle</name><operator pos:start="57:26" pos:end="57:26">.</operator><name pos:start="57:27" pos:end="57:30">zlib</name></name></expr></argument>,      <argument pos:start="57:38" pos:end="57:55"><expr pos:start="57:38" pos:end="57:55"><literal type="string" pos:start="57:38" pos:end="57:55">"vnc-zrle-zlib/%p"</literal></expr></argument>, <argument pos:start="57:58" pos:end="57:61"><expr pos:start="57:58" pos:end="57:61"><name pos:start="57:58" pos:end="57:61">sioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="83:5"><if pos:start="61:5" pos:end="67:5">if <condition pos:start="61:8" pos:end="61:17">(<expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:16">skipauth</name></expr>)</condition> <block pos:start="61:19" pos:end="67:5">{<block_content pos:start="63:9" pos:end="65:39">

	<expr_stmt pos:start="63:9" pos:end="63:33"><expr pos:start="63:9" pos:end="63:32"><name pos:start="63:9" pos:end="63:16"><name pos:start="63:9" pos:end="63:10">vs</name><operator pos:start="63:11" pos:end="63:12">-&gt;</operator><name pos:start="63:13" pos:end="63:16">auth</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <name pos:start="63:20" pos:end="63:32">VNC_AUTH_NONE</name></expr>;</expr_stmt>

	<expr_stmt pos:start="65:9" pos:end="65:39"><expr pos:start="65:9" pos:end="65:38"><name pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:10">vs</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:19">subauth</name></name> <operator pos:start="65:21" pos:end="65:21">=</operator> <name pos:start="65:23" pos:end="65:38">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="67:7" pos:end="83:5">else <block pos:start="67:12" pos:end="83:5">{<block_content pos:start="69:9" pos:end="81:9">

        <if_stmt pos:start="69:9" pos:end="81:9"><if pos:start="69:9" pos:end="75:9">if <condition pos:start="69:12" pos:end="69:22">(<expr pos:start="69:13" pos:end="69:21"><name pos:start="69:13" pos:end="69:21">websocket</name></expr>)</condition> <block pos:start="69:24" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:43">

            <expr_stmt pos:start="71:13" pos:end="71:35"><expr pos:start="71:13" pos:end="71:34"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:14">vs</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:20">auth</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <name pos:start="71:24" pos:end="71:34"><name pos:start="71:24" pos:end="71:25">vd</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:34">ws_auth</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:43"><expr pos:start="73:13" pos:end="73:42"><name pos:start="73:13" pos:end="73:23"><name pos:start="73:13" pos:end="73:14">vs</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:23">subauth</name></name> <operator pos:start="73:25" pos:end="73:25">=</operator> <name pos:start="73:27" pos:end="73:42">VNC_AUTH_INVALID</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="81:9">else <block pos:start="75:16" pos:end="81:9">{<block_content pos:start="77:13" pos:end="79:38">

            <expr_stmt pos:start="77:13" pos:end="77:32"><expr pos:start="77:13" pos:end="77:31"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:14">vs</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:20">auth</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:31"><name pos:start="77:24" pos:end="77:25">vd</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:31">auth</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:38"><expr pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:23"><name pos:start="79:13" pos:end="79:14">vs</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:23">subauth</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:37"><name pos:start="79:27" pos:end="79:28">vd</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:37">subauth</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="85:5" pos:end="87:54"><expr pos:start="85:5" pos:end="87:53"><call pos:start="85:5" pos:end="87:53"><name pos:start="85:5" pos:end="85:13">VNC_DEBUG</name><argument_list pos:start="85:14" pos:end="87:53">(<argument pos:start="85:15" pos:end="85:57"><expr pos:start="85:15" pos:end="85:57"><literal type="string" pos:start="85:15" pos:end="85:57">"Client sioc=%p ws=%d auth=%d subauth=%d\n"</literal></expr></argument>,

              <argument pos:start="87:15" pos:end="87:18"><expr pos:start="87:15" pos:end="87:18"><name pos:start="87:15" pos:end="87:18">sioc</name></expr></argument>, <argument pos:start="87:21" pos:end="87:29"><expr pos:start="87:21" pos:end="87:29"><name pos:start="87:21" pos:end="87:29">websocket</name></expr></argument>, <argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:33">vs</name><operator pos:start="87:34" pos:end="87:35">-&gt;</operator><name pos:start="87:36" pos:end="87:39">auth</name></name></expr></argument>, <argument pos:start="87:42" pos:end="87:52"><expr pos:start="87:42" pos:end="87:52"><name pos:start="87:42" pos:end="87:52"><name pos:start="87:42" pos:end="87:43">vs</name><operator pos:start="87:44" pos:end="87:45">-&gt;</operator><name pos:start="87:46" pos:end="87:52">subauth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:73"><expr pos:start="91:5" pos:end="91:72"><name pos:start="91:5" pos:end="91:18"><name pos:start="91:5" pos:end="91:6">vs</name><operator pos:start="91:7" pos:end="91:8">-&gt;</operator><name pos:start="91:9" pos:end="91:18">lossy_rect</name></name> <operator pos:start="91:20" pos:end="91:20">=</operator> <call pos:start="91:22" pos:end="91:72"><name pos:start="91:22" pos:end="91:30">g_malloc0</name><argument_list pos:start="91:31" pos:end="91:72">(<argument pos:start="91:32" pos:end="91:71"><expr pos:start="91:32" pos:end="91:71"><name pos:start="91:32" pos:end="91:44">VNC_STAT_ROWS</name> <operator pos:start="91:46" pos:end="91:46">*</operator> <sizeof pos:start="91:48" pos:end="91:71">sizeof <argument_list pos:start="91:55" pos:end="91:71">(<argument pos:start="91:56" pos:end="91:70"><expr pos:start="91:56" pos:end="91:70"><operator pos:start="91:56" pos:end="91:56">*</operator><name pos:start="91:57" pos:end="91:70"><name pos:start="91:57" pos:end="91:58">vs</name><operator pos:start="91:59" pos:end="91:60">-&gt;</operator><name pos:start="91:61" pos:end="91:70">lossy_rect</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="93:5" pos:end="97:5">for <control pos:start="93:9" pos:end="93:39">(<init pos:start="93:10" pos:end="93:15"><expr pos:start="93:10" pos:end="93:14"><name pos:start="93:10" pos:end="93:10">i</name> <operator pos:start="93:12" pos:end="93:12">=</operator> <literal type="number" pos:start="93:14" pos:end="93:14">0</literal></expr>;</init> <condition pos:start="93:17" pos:end="93:34"><expr pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:17">i</name> <operator pos:start="93:19" pos:end="93:19">&lt;</operator> <name pos:start="93:21" pos:end="93:33">VNC_STAT_ROWS</name></expr>;</condition> <incr pos:start="93:36" pos:end="93:38"><expr pos:start="93:36" pos:end="93:38"><operator pos:start="93:36" pos:end="93:37">++</operator><name pos:start="93:38" pos:end="93:38">i</name></expr></incr>)</control> <block pos:start="93:41" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:59">

        <expr_stmt pos:start="95:9" pos:end="95:59"><expr pos:start="95:9" pos:end="95:58"><name pos:start="95:9" pos:end="95:25"><name pos:start="95:9" pos:end="95:10">vs</name><operator pos:start="95:11" pos:end="95:12">-&gt;</operator><name pos:start="95:13" pos:end="95:22">lossy_rect</name><index pos:start="95:23" pos:end="95:25">[<expr pos:start="95:24" pos:end="95:24"><name pos:start="95:24" pos:end="95:24">i</name></expr>]</index></name> <operator pos:start="95:27" pos:end="95:27">=</operator> <call pos:start="95:29" pos:end="95:58"><name pos:start="95:29" pos:end="95:34">g_new0</name><argument_list pos:start="95:35" pos:end="95:58">(<argument pos:start="95:36" pos:end="95:42"><expr pos:start="95:36" pos:end="95:42"><name pos:start="95:36" pos:end="95:42">uint8_t</name></expr></argument>, <argument pos:start="95:45" pos:end="95:57"><expr pos:start="95:45" pos:end="95:57"><name pos:start="95:45" pos:end="95:57">VNC_STAT_COLS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="101:5" pos:end="101:53"><expr pos:start="101:5" pos:end="101:52"><call pos:start="101:5" pos:end="101:52"><name pos:start="101:5" pos:end="101:13">VNC_DEBUG</name><argument_list pos:start="101:14" pos:end="101:52">(<argument pos:start="101:15" pos:end="101:41"><expr pos:start="101:15" pos:end="101:41"><literal type="string" pos:start="101:15" pos:end="101:41">"New client on socket %p\n"</literal></expr></argument>, <argument pos:start="101:44" pos:end="101:51"><expr pos:start="101:44" pos:end="101:51"><name pos:start="101:44" pos:end="101:51"><name pos:start="101:44" pos:end="101:45">vs</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:51">sioc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:70"><expr pos:start="103:5" pos:end="103:69"><call pos:start="103:5" pos:end="103:69"><name pos:start="103:5" pos:end="103:32">update_displaychangelistener</name><argument_list pos:start="103:33" pos:end="103:69">(<argument pos:start="103:34" pos:end="103:41"><expr pos:start="103:34" pos:end="103:41"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:41"><name pos:start="103:35" pos:end="103:36">vd</name><operator pos:start="103:37" pos:end="103:38">-&gt;</operator><name pos:start="103:39" pos:end="103:41">dcl</name></name></expr></argument>, <argument pos:start="103:44" pos:end="103:68"><expr pos:start="103:44" pos:end="103:68"><name pos:start="103:44" pos:end="103:68">VNC_REFRESH_INTERVAL_BASE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><call pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:28">qio_channel_set_blocking</name><argument_list pos:start="105:29" pos:end="105:50">(<argument pos:start="105:30" pos:end="105:36"><expr pos:start="105:30" pos:end="105:36"><name pos:start="105:30" pos:end="105:36"><name pos:start="105:30" pos:end="105:31">vs</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:36">ioc</name></name></expr></argument>, <argument pos:start="105:39" pos:end="105:43"><expr pos:start="105:39" pos:end="105:43"><name pos:start="105:39" pos:end="105:43">false</name></expr></argument>, <argument pos:start="105:46" pos:end="105:49"><expr pos:start="105:46" pos:end="105:49"><name pos:start="105:46" pos:end="105:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="131:5"><if pos:start="107:5" pos:end="125:5">if <condition pos:start="107:8" pos:end="107:18">(<expr pos:start="107:9" pos:end="107:17"><name pos:start="107:9" pos:end="107:17">websocket</name></expr>)</condition> <block pos:start="107:20" pos:end="125:5">{<block_content pos:start="109:9" pos:end="123:9">

        <expr_stmt pos:start="109:9" pos:end="109:26"><expr pos:start="109:9" pos:end="109:25"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:10">vs</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:21">websocket</name></name> <operator pos:start="109:23" pos:end="109:23">=</operator> <literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="123:9"><if pos:start="111:9" pos:end="117:9">if <condition pos:start="111:12" pos:end="111:23">(<expr pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:14">vd</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:22">ws_tls</name></name></expr>)</condition> <block pos:start="111:25" pos:end="117:9">{<block_content pos:start="113:13" pos:end="115:68">

            <expr_stmt pos:start="113:13" pos:end="115:68"><expr pos:start="113:13" pos:end="115:67"><name pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:14">vs</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:23">ioc_tag</name></name> <operator pos:start="113:25" pos:end="113:25">=</operator> <call pos:start="113:27" pos:end="115:67"><name pos:start="113:27" pos:end="113:47">qio_channel_add_watch</name><argument_list pos:start="113:48" pos:end="115:67">(

                <argument pos:start="115:17" pos:end="115:23"><expr pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:23"><name pos:start="115:17" pos:end="115:18">vs</name><operator pos:start="115:19" pos:end="115:20">-&gt;</operator><name pos:start="115:21" pos:end="115:23">ioc</name></name></expr></argument>, <argument pos:start="115:26" pos:end="115:32"><expr pos:start="115:26" pos:end="115:32"><name pos:start="115:26" pos:end="115:32">G_IO_IN</name></expr></argument>, <argument pos:start="115:35" pos:end="115:56"><expr pos:start="115:35" pos:end="115:56"><name pos:start="115:35" pos:end="115:56">vncws_tls_handshake_io</name></expr></argument>, <argument pos:start="115:59" pos:end="115:60"><expr pos:start="115:59" pos:end="115:60"><name pos:start="115:59" pos:end="115:60">vs</name></expr></argument>, <argument pos:start="115:63" pos:end="115:66"><expr pos:start="115:63" pos:end="115:66"><name pos:start="115:63" pos:end="115:66">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="123:9">else <block pos:start="117:16" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:64">

            <expr_stmt pos:start="119:13" pos:end="121:64"><expr pos:start="119:13" pos:end="121:63"><name pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:14">vs</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:23">ioc_tag</name></name> <operator pos:start="119:25" pos:end="119:25">=</operator> <call pos:start="119:27" pos:end="121:63"><name pos:start="119:27" pos:end="119:47">qio_channel_add_watch</name><argument_list pos:start="119:48" pos:end="121:63">(

                <argument pos:start="121:17" pos:end="121:23"><expr pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:23"><name pos:start="121:17" pos:end="121:18">vs</name><operator pos:start="121:19" pos:end="121:20">-&gt;</operator><name pos:start="121:21" pos:end="121:23">ioc</name></name></expr></argument>, <argument pos:start="121:26" pos:end="121:32"><expr pos:start="121:26" pos:end="121:32"><name pos:start="121:26" pos:end="121:32">G_IO_IN</name></expr></argument>, <argument pos:start="121:35" pos:end="121:52"><expr pos:start="121:35" pos:end="121:52"><name pos:start="121:35" pos:end="121:52">vncws_handshake_io</name></expr></argument>, <argument pos:start="121:55" pos:end="121:56"><expr pos:start="121:55" pos:end="121:56"><name pos:start="121:55" pos:end="121:56">vs</name></expr></argument>, <argument pos:start="121:59" pos:end="121:62"><expr pos:start="121:59" pos:end="121:62"><name pos:start="121:59" pos:end="121:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="125:7" pos:end="131:5">else <block pos:start="125:12" pos:end="131:5">{<block_content pos:start="127:9" pos:end="129:55">

        <expr_stmt pos:start="127:9" pos:end="129:55"><expr pos:start="127:9" pos:end="129:54"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:10">vs</name><operator pos:start="127:11" pos:end="127:12">-&gt;</operator><name pos:start="127:13" pos:end="127:19">ioc_tag</name></name> <operator pos:start="127:21" pos:end="127:21">=</operator> <call pos:start="127:23" pos:end="129:54"><name pos:start="127:23" pos:end="127:43">qio_channel_add_watch</name><argument_list pos:start="127:44" pos:end="129:54">(

            <argument pos:start="129:13" pos:end="129:19"><expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:14">vs</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:19">ioc</name></name></expr></argument>, <argument pos:start="129:22" pos:end="129:28"><expr pos:start="129:22" pos:end="129:28"><name pos:start="129:22" pos:end="129:28">G_IO_IN</name></expr></argument>, <argument pos:start="129:31" pos:end="129:43"><expr pos:start="129:31" pos:end="129:43"><name pos:start="129:31" pos:end="129:43">vnc_client_io</name></expr></argument>, <argument pos:start="129:46" pos:end="129:47"><expr pos:start="129:46" pos:end="129:47"><name pos:start="129:46" pos:end="129:47">vs</name></expr></argument>, <argument pos:start="129:50" pos:end="129:53"><expr pos:start="129:50" pos:end="129:53"><name pos:start="129:50" pos:end="129:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="135:5" pos:end="135:30"><expr pos:start="135:5" pos:end="135:29"><call pos:start="135:5" pos:end="135:29"><name pos:start="135:5" pos:end="135:25">vnc_client_cache_addr</name><argument_list pos:start="135:26" pos:end="135:29">(<argument pos:start="135:27" pos:end="135:28"><expr pos:start="135:27" pos:end="135:28"><name pos:start="135:27" pos:end="135:28">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:48"><expr pos:start="137:5" pos:end="137:47"><call pos:start="137:5" pos:end="137:47"><name pos:start="137:5" pos:end="137:17">vnc_qmp_event</name><argument_list pos:start="137:18" pos:end="137:47">(<argument pos:start="137:19" pos:end="137:20"><expr pos:start="137:19" pos:end="137:20"><name pos:start="137:19" pos:end="137:20">vs</name></expr></argument>, <argument pos:start="137:23" pos:end="137:46"><expr pos:start="137:23" pos:end="137:46"><name pos:start="137:23" pos:end="137:46">QAPI_EVENT_VNC_CONNECTED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:54"><expr pos:start="139:5" pos:end="139:53"><call pos:start="139:5" pos:end="139:53"><name pos:start="139:5" pos:end="139:22">vnc_set_share_mode</name><argument_list pos:start="139:23" pos:end="139:53">(<argument pos:start="139:24" pos:end="139:25"><expr pos:start="139:24" pos:end="139:25"><name pos:start="139:24" pos:end="139:25">vs</name></expr></argument>, <argument pos:start="139:28" pos:end="139:52"><expr pos:start="139:28" pos:end="139:52"><name pos:start="139:28" pos:end="139:52">VNC_SHARE_MODE_CONNECTING</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="147:5"><if pos:start="143:5" pos:end="147:5">if <condition pos:start="143:8" pos:end="143:23">(<expr pos:start="143:9" pos:end="143:22"><operator pos:start="143:9" pos:end="143:9">!</operator><name pos:start="143:10" pos:end="143:22"><name pos:start="143:10" pos:end="143:11">vs</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:22">websocket</name></name></expr>)</condition> <block pos:start="143:25" pos:end="147:5">{<block_content pos:start="145:9" pos:end="145:27">

        <expr_stmt pos:start="145:9" pos:end="145:27"><expr pos:start="145:9" pos:end="145:26"><call pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:22">vnc_init_state</name><argument_list pos:start="145:23" pos:end="145:26">(<argument pos:start="145:24" pos:end="145:25"><expr pos:start="145:24" pos:end="145:25"><name pos:start="145:24" pos:end="145:25">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="151:5" pos:end="165:5"><if pos:start="151:5" pos:end="165:5">if <condition pos:start="151:8" pos:end="151:51">(<expr pos:start="151:9" pos:end="151:50"><name pos:start="151:9" pos:end="151:26"><name pos:start="151:9" pos:end="151:10">vd</name><operator pos:start="151:11" pos:end="151:12">-&gt;</operator><name pos:start="151:13" pos:end="151:26">num_connecting</name></name> <operator pos:start="151:28" pos:end="151:28">&gt;</operator> <name pos:start="151:30" pos:end="151:50"><name pos:start="151:30" pos:end="151:31">vd</name><operator pos:start="151:32" pos:end="151:33">-&gt;</operator><name pos:start="151:34" pos:end="151:50">connections_limit</name></name></expr>)</condition> <block pos:start="151:53" pos:end="165:5">{<block_content pos:start="153:9" pos:end="163:9">

        <macro pos:start="153:9" pos:end="153:46"><name pos:start="153:9" pos:end="153:22">QTAILQ_FOREACH</name><argument_list pos:start="153:23" pos:end="153:46">(<argument pos:start="153:24" pos:end="153:25">vs</argument>, <argument pos:start="153:28" pos:end="153:39">&amp;vd-&gt;clients</argument>, <argument pos:start="153:42" pos:end="153:45">next</argument>)</argument_list></macro> <block pos:start="153:48" pos:end="163:9">{<block_content pos:start="155:13" pos:end="161:13">

            <if_stmt pos:start="155:13" pos:end="161:13"><if pos:start="155:13" pos:end="161:13">if <condition pos:start="155:16" pos:end="155:60">(<expr pos:start="155:17" pos:end="155:59"><name pos:start="155:17" pos:end="155:30"><name pos:start="155:17" pos:end="155:18">vs</name><operator pos:start="155:19" pos:end="155:20">-&gt;</operator><name pos:start="155:21" pos:end="155:30">share_mode</name></name> <operator pos:start="155:32" pos:end="155:33">==</operator> <name pos:start="155:35" pos:end="155:59">VNC_SHARE_MODE_CONNECTING</name></expr>)</condition> <block pos:start="155:62" pos:end="161:13">{<block_content pos:start="157:17" pos:end="159:23">

                <expr_stmt pos:start="157:17" pos:end="157:41"><expr pos:start="157:17" pos:end="157:40"><call pos:start="157:17" pos:end="157:40"><name pos:start="157:17" pos:end="157:36">vnc_disconnect_start</name><argument_list pos:start="157:37" pos:end="157:40">(<argument pos:start="157:38" pos:end="157:39"><expr pos:start="157:38" pos:end="157:39"><name pos:start="157:38" pos:end="157:39">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="159:17" pos:end="159:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
