<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3877.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:30"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name> <name pos:start="1:12" pos:end="1:30">attribute_align_arg</name></type> <name pos:start="1:32" pos:end="1:62">av_buffersrc_add_frame_internal</name><parameter_list pos:start="1:63" pos:end="3:89">(<parameter pos:start="1:64" pos:end="1:83"><decl pos:start="1:64" pos:end="1:83"><type pos:start="1:64" pos:end="1:83"><name pos:start="1:64" pos:end="1:78">AVFilterContext</name> <modifier pos:start="1:80" pos:end="1:80">*</modifier></type><name pos:start="1:81" pos:end="1:83">ctx</name></decl></parameter>,

                                                               <parameter pos:start="3:64" pos:end="3:77"><decl pos:start="3:64" pos:end="3:77"><type pos:start="3:64" pos:end="3:77"><name pos:start="3:64" pos:end="3:70">AVFrame</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:77">frame</name></decl></parameter>, <parameter pos:start="3:80" pos:end="3:88"><decl pos:start="3:80" pos:end="3:88"><type pos:start="3:80" pos:end="3:88"><name pos:start="3:80" pos:end="3:82">int</name></type> <name pos:start="3:84" pos:end="3:88">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">BufferSourceContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:38">= <expr pos:start="7:30" pos:end="7:38"><name pos:start="7:30" pos:end="7:38"><name pos:start="7:30" pos:end="7:32">ctx</name><operator pos:start="7:33" pos:end="7:34">-&gt;</operator><name pos:start="7:35" pos:end="7:38">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:17">copy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="23:31"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:15">(<expr pos:start="15:9" pos:end="15:14"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:14">frame</name></expr>)</condition> <block pos:start="15:17" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:17">

        <expr_stmt pos:start="17:9" pos:end="17:19"><expr pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:14">eof</name></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">1</literal></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="21:7" pos:end="23:31">else if <condition pos:start="21:15" pos:end="21:22">(<expr pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:21"><name pos:start="21:16" pos:end="21:16">s</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:21">eof</name></name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:31"><block_content pos:start="23:9" pos:end="23:31">

        <return pos:start="23:9" pos:end="23:31">return <expr pos:start="23:16" pos:end="23:30"><call pos:start="23:16" pos:end="23:30"><name pos:start="23:16" pos:end="23:22">AVERROR</name><argument_list pos:start="23:23" pos:end="23:30">(<argument pos:start="23:24" pos:end="23:29"><expr pos:start="23:24" pos:end="23:29"><name pos:start="23:24" pos:end="23:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="27:5" pos:end="63:5"><if pos:start="27:5" pos:end="63:5">if <condition pos:start="27:8" pos:end="27:53">(<expr pos:start="27:9" pos:end="27:52"><operator pos:start="27:9" pos:end="27:9">!</operator><operator pos:start="27:10" pos:end="27:10">(</operator><name pos:start="27:11" pos:end="27:15">flags</name> <operator pos:start="27:17" pos:end="27:17">&amp;</operator> <name pos:start="27:19" pos:end="27:51">AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT</name><operator pos:start="27:52" pos:end="27:52">)</operator></expr>)</condition> <block pos:start="27:55" pos:end="63:5">{<block_content pos:start="31:5" pos:end="59:5">



    <switch pos:start="31:5" pos:end="59:5">switch <condition pos:start="31:12" pos:end="31:34">(<expr pos:start="31:13" pos:end="31:33"><name pos:start="31:13" pos:end="31:27"><name pos:start="31:13" pos:end="31:15">ctx</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:24">outputs</name><index pos:start="31:25" pos:end="31:27">[<expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">0</literal></expr>]</index></name><operator pos:start="31:28" pos:end="31:29">-&gt;</operator><name pos:start="31:30" pos:end="31:33">type</name></expr>)</condition> <block pos:start="31:36" pos:end="59:5">{<block_content pos:start="33:5" pos:end="57:31">

    <case pos:start="33:5" pos:end="33:28">case <expr pos:start="33:10" pos:end="33:27"><name pos:start="33:10" pos:end="33:27">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="37:48"><expr pos:start="35:9" pos:end="37:47"><call pos:start="35:9" pos:end="37:47"><name pos:start="35:9" pos:end="35:32">CHECK_VIDEO_PARAM_CHANGE</name><argument_list pos:start="35:33" pos:end="37:47">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">ctx</name></expr></argument>, <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><name pos:start="35:39" pos:end="35:39">s</name></expr></argument>, <argument pos:start="35:42" pos:end="35:53"><expr pos:start="35:42" pos:end="35:53"><name pos:start="35:42" pos:end="35:53"><name pos:start="35:42" pos:end="35:46">frame</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:53">width</name></name></expr></argument>, <argument pos:start="35:56" pos:end="35:68"><expr pos:start="35:56" pos:end="35:68"><name pos:start="35:56" pos:end="35:68"><name pos:start="35:56" pos:end="35:60">frame</name><operator pos:start="35:61" pos:end="35:62">-&gt;</operator><name pos:start="35:63" pos:end="35:68">height</name></name></expr></argument>,

                                 <argument pos:start="37:34" pos:end="37:46"><expr pos:start="37:34" pos:end="37:46"><name pos:start="37:34" pos:end="37:46"><name pos:start="37:34" pos:end="37:38">frame</name><operator pos:start="37:39" pos:end="37:40">-&gt;</operator><name pos:start="37:41" pos:end="37:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:28">case <expr pos:start="41:10" pos:end="41:27"><name pos:start="41:10" pos:end="41:27">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

        <comment type="block" pos:start="43:9" pos:end="43:79">/* For layouts unknown on input but known on link after negotiation. */</comment>

        <if_stmt pos:start="45:9" pos:end="47:54"><if pos:start="45:9" pos:end="47:54">if <condition pos:start="45:12" pos:end="45:35">(<expr pos:start="45:13" pos:end="45:34"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:34"><name pos:start="45:14" pos:end="45:18">frame</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:34">channel_layout</name></name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:54"><block_content pos:start="47:13" pos:end="47:54">

            <expr_stmt pos:start="47:13" pos:end="47:54"><expr pos:start="47:13" pos:end="47:53"><name pos:start="47:13" pos:end="47:33"><name pos:start="47:13" pos:end="47:17">frame</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:33">channel_layout</name></name> <operator pos:start="47:35" pos:end="47:35">=</operator> <name pos:start="47:37" pos:end="47:53"><name pos:start="47:37" pos:end="47:37">s</name><operator pos:start="47:38" pos:end="47:39">-&gt;</operator><name pos:start="47:40" pos:end="47:53">channel_layout</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:48"><expr pos:start="49:9" pos:end="51:47"><call pos:start="49:9" pos:end="51:47"><name pos:start="49:9" pos:end="49:32">CHECK_AUDIO_PARAM_CHANGE</name><argument_list pos:start="49:33" pos:end="51:47">(<argument pos:start="49:34" pos:end="49:36"><expr pos:start="49:34" pos:end="49:36"><name pos:start="49:34" pos:end="49:36">ctx</name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><name pos:start="49:39" pos:end="49:39">s</name></expr></argument>, <argument pos:start="49:42" pos:end="49:59"><expr pos:start="49:42" pos:end="49:59"><name pos:start="49:42" pos:end="49:59"><name pos:start="49:42" pos:end="49:46">frame</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:59">sample_rate</name></name></expr></argument>, <argument pos:start="49:62" pos:end="49:82"><expr pos:start="49:62" pos:end="49:82"><name pos:start="49:62" pos:end="49:82"><name pos:start="49:62" pos:end="49:66">frame</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:82">channel_layout</name></name></expr></argument>,

                                 <argument pos:start="51:34" pos:end="51:46"><expr pos:start="51:34" pos:end="51:46"><name pos:start="51:34" pos:end="51:46"><name pos:start="51:34" pos:end="51:38">frame</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:46">format</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>



    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="73:19"><if pos:start="67:5" pos:end="73:19">if <condition pos:start="67:8" pos:end="71:60">(<expr pos:start="67:9" pos:end="71:59"><operator pos:start="67:9" pos:end="67:9">!</operator><call pos:start="67:10" pos:end="67:31"><name pos:start="67:10" pos:end="67:22">av_fifo_space</name><argument_list pos:start="67:23" pos:end="67:31">(<argument pos:start="67:24" pos:end="67:30"><expr pos:start="67:24" pos:end="67:30"><name pos:start="67:24" pos:end="67:30"><name pos:start="67:24" pos:end="67:24">s</name><operator pos:start="67:25" pos:end="67:26">-&gt;</operator><name pos:start="67:27" pos:end="67:30">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="67:33" pos:end="67:34">&amp;&amp;</operator>

        <operator pos:start="69:9" pos:end="69:9">(</operator><name pos:start="69:10" pos:end="69:12">ret</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="71:54"><name pos:start="69:16" pos:end="69:31">av_fifo_realloc2</name><argument_list pos:start="69:32" pos:end="71:54">(<argument pos:start="69:33" pos:end="69:39"><expr pos:start="69:33" pos:end="69:39"><name pos:start="69:33" pos:end="69:39"><name pos:start="69:33" pos:end="69:33">s</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:39">fifo</name></name></expr></argument>, <argument pos:start="69:42" pos:end="71:53"><expr pos:start="69:42" pos:end="71:53"><call pos:start="69:42" pos:end="69:62"><name pos:start="69:42" pos:end="69:53">av_fifo_size</name><argument_list pos:start="69:54" pos:end="69:62">(<argument pos:start="69:55" pos:end="69:61"><expr pos:start="69:55" pos:end="69:61"><name pos:start="69:55" pos:end="69:61"><name pos:start="69:55" pos:end="69:55">s</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:61">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="69:64" pos:end="69:64">+</operator>

                                         <sizeof pos:start="71:42" pos:end="71:53">sizeof<argument_list pos:start="71:48" pos:end="71:53">(<argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">copy</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="71:55" pos:end="71:55">)</operator> <operator pos:start="71:57" pos:end="71:57">&lt;</operator> <literal type="number" pos:start="71:59" pos:end="71:59">0</literal></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:19"><block_content pos:start="73:9" pos:end="73:19">

        <return pos:start="73:9" pos:end="73:19">return <expr pos:start="73:16" pos:end="73:18"><name pos:start="73:16" pos:end="73:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="77:5" pos:end="79:31"><if pos:start="77:5" pos:end="79:31">if <condition pos:start="77:8" pos:end="77:35">(<expr pos:start="77:9" pos:end="77:34"><operator pos:start="77:9" pos:end="77:9">!</operator><operator pos:start="77:10" pos:end="77:10">(</operator><name pos:start="77:11" pos:end="77:14">copy</name> <operator pos:start="77:16" pos:end="77:16">=</operator> <call pos:start="77:18" pos:end="77:33"><name pos:start="77:18" pos:end="77:31">av_frame_alloc</name><argument_list pos:start="77:32" pos:end="77:33">()</argument_list></call><operator pos:start="77:34" pos:end="77:34">)</operator></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:31"><block_content pos:start="79:9" pos:end="79:31">

        <return pos:start="79:9" pos:end="79:31">return <expr pos:start="79:16" pos:end="79:30"><call pos:start="79:16" pos:end="79:30"><name pos:start="79:16" pos:end="79:22">AVERROR</name><argument_list pos:start="79:23" pos:end="79:30">(<argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><name pos:start="79:24" pos:end="79:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><call pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:21">av_frame_move_ref</name><argument_list pos:start="81:22" pos:end="81:34">(<argument pos:start="81:23" pos:end="81:26"><expr pos:start="81:23" pos:end="81:26"><name pos:start="81:23" pos:end="81:26">copy</name></expr></argument>, <argument pos:start="81:29" pos:end="81:33"><expr pos:start="81:29" pos:end="81:33"><name pos:start="81:29" pos:end="81:33">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="85:78">(<expr pos:start="85:9" pos:end="85:77"><operator pos:start="85:9" pos:end="85:9">(</operator><name pos:start="85:10" pos:end="85:12">ret</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <call pos:start="85:16" pos:end="85:72"><name pos:start="85:16" pos:end="85:36">av_fifo_generic_write</name><argument_list pos:start="85:37" pos:end="85:72">(<argument pos:start="85:38" pos:end="85:44"><expr pos:start="85:38" pos:end="85:44"><name pos:start="85:38" pos:end="85:44"><name pos:start="85:38" pos:end="85:38">s</name><operator pos:start="85:39" pos:end="85:40">-&gt;</operator><name pos:start="85:41" pos:end="85:44">fifo</name></name></expr></argument>, <argument pos:start="85:47" pos:end="85:51"><expr pos:start="85:47" pos:end="85:51"><operator pos:start="85:47" pos:end="85:47">&amp;</operator><name pos:start="85:48" pos:end="85:51">copy</name></expr></argument>, <argument pos:start="85:54" pos:end="85:65"><expr pos:start="85:54" pos:end="85:65"><sizeof pos:start="85:54" pos:end="85:65">sizeof<argument_list pos:start="85:60" pos:end="85:65">(<argument pos:start="85:61" pos:end="85:64"><expr pos:start="85:61" pos:end="85:64"><name pos:start="85:61" pos:end="85:64">copy</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="85:68" pos:end="85:71"><expr pos:start="85:68" pos:end="85:71"><name pos:start="85:68" pos:end="85:71">NULL</name></expr></argument>)</argument_list></call><operator pos:start="85:73" pos:end="85:73">)</operator> <operator pos:start="85:75" pos:end="85:75">&lt;</operator> <literal type="number" pos:start="85:77" pos:end="85:77">0</literal></expr>)</condition> <block pos:start="85:80" pos:end="93:5">{<block_content pos:start="87:9" pos:end="91:19">

        <expr_stmt pos:start="87:9" pos:end="87:39"><expr pos:start="87:9" pos:end="87:38"><call pos:start="87:9" pos:end="87:38"><name pos:start="87:9" pos:end="87:25">av_frame_move_ref</name><argument_list pos:start="87:26" pos:end="87:38">(<argument pos:start="87:27" pos:end="87:31"><expr pos:start="87:27" pos:end="87:31"><name pos:start="87:27" pos:end="87:31">frame</name></expr></argument>, <argument pos:start="87:34" pos:end="87:37"><expr pos:start="87:34" pos:end="87:37"><name pos:start="87:34" pos:end="87:37">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:29"><expr pos:start="89:9" pos:end="89:28"><call pos:start="89:9" pos:end="89:28"><name pos:start="89:9" pos:end="89:21">av_frame_free</name><argument_list pos:start="89:22" pos:end="89:28">(<argument pos:start="89:23" pos:end="89:27"><expr pos:start="89:23" pos:end="89:27"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:27">copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="91:9" pos:end="91:19">return <expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="97:5" pos:end="101:23"><if pos:start="97:5" pos:end="101:23">if <condition pos:start="97:8" pos:end="97:41">(<expr pos:start="97:9" pos:end="97:40"><operator pos:start="97:9" pos:end="97:9">(</operator><name pos:start="97:10" pos:end="97:14">flags</name> <operator pos:start="97:16" pos:end="97:16">&amp;</operator> <name pos:start="97:18" pos:end="97:39">AV_BUFFERSRC_FLAG_PUSH</name><operator pos:start="97:40" pos:end="97:40">)</operator></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="101:23"><block_content pos:start="99:9" pos:end="101:23">

        <if_stmt pos:start="99:9" pos:end="101:23"><if pos:start="99:9" pos:end="101:23">if <condition pos:start="99:12" pos:end="99:75">(<expr pos:start="99:13" pos:end="99:74"><operator pos:start="99:13" pos:end="99:13">(</operator><name pos:start="99:14" pos:end="99:16">ret</name> <operator pos:start="99:18" pos:end="99:18">=</operator> <name pos:start="99:20" pos:end="99:38"><name pos:start="99:20" pos:end="99:22">ctx</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:35">output_pads</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">0</literal></expr>]</index></name><operator pos:start="99:39" pos:end="99:39">.</operator><call pos:start="99:40" pos:end="99:69"><name pos:start="99:40" pos:end="99:52">request_frame</name><argument_list pos:start="99:53" pos:end="99:69">(<argument pos:start="99:54" pos:end="99:68"><expr pos:start="99:54" pos:end="99:68"><name pos:start="99:54" pos:end="99:68"><name pos:start="99:54" pos:end="99:56">ctx</name><operator pos:start="99:57" pos:end="99:58">-&gt;</operator><name pos:start="99:59" pos:end="99:65">outputs</name><index pos:start="99:66" pos:end="99:68">[<expr pos:start="99:67" pos:end="99:67"><literal type="number" pos:start="99:67" pos:end="99:67">0</literal></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="99:70" pos:end="99:70">)</operator> <operator pos:start="99:72" pos:end="99:72">&lt;</operator> <literal type="number" pos:start="99:74" pos:end="99:74">0</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:23"><block_content pos:start="101:13" pos:end="101:23">

            <return pos:start="101:13" pos:end="101:23">return <expr pos:start="101:20" pos:end="101:22"><name pos:start="101:20" pos:end="101:22">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



    <return pos:start="105:5" pos:end="105:13">return <expr pos:start="105:12" pos:end="105:12"><literal type="number" pos:start="105:12" pos:end="105:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
