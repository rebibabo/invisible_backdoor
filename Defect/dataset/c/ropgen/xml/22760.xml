<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22760.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">char</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:30">socket_address_to_string</name><parameter_list pos:start="1:31" pos:end="1:72">(<parameter pos:start="1:32" pos:end="1:57"><decl pos:start="1:32" pos:end="1:57"><type pos:start="1:32" pos:end="1:57"><name pos:start="1:32" pos:end="1:51"><name pos:start="1:32" pos:end="1:37">struct</name> <name pos:start="1:39" pos:end="1:51">SocketAddress</name></name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">addr</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:64">Error</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier><modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:71">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:15">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">char</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:13">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">InetSocketAddress</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">inet</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="63:5">switch <condition pos:start="11:12" pos:end="11:23">(<expr pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:16">addr</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:22">type</name></name></expr>)</condition> <block pos:start="11:25" pos:end="63:5">{<block_content pos:start="13:5" pos:end="61:16">

    <case pos:start="13:5" pos:end="13:34">case <expr pos:start="13:10" pos:end="13:33"><name pos:start="13:10" pos:end="13:33">SOCKET_ADDRESS_KIND_INET</name></expr>:</case>

        <expr_stmt pos:start="15:9" pos:end="15:33"><expr pos:start="15:9" pos:end="15:32"><name pos:start="15:9" pos:end="15:12">inet</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:32"><name pos:start="15:16" pos:end="15:19">addr</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:22">u</name><operator pos:start="15:23" pos:end="15:23">.</operator><name pos:start="15:24" pos:end="15:27">inet</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:32">data</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="25:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:44">(<expr pos:start="17:13" pos:end="17:43"><call pos:start="17:13" pos:end="17:35"><name pos:start="17:13" pos:end="17:18">strchr</name><argument_list pos:start="17:19" pos:end="17:35">(<argument pos:start="17:20" pos:end="17:29"><expr pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:29"><name pos:start="17:20" pos:end="17:23">inet</name><operator pos:start="17:24" pos:end="17:25">-&gt;</operator><name pos:start="17:26" pos:end="17:29">host</name></name></expr></argument>, <argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><literal type="char" pos:start="17:32" pos:end="17:34">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="17:37" pos:end="17:38">==</operator> <name pos:start="17:40" pos:end="17:43">NULL</name></expr>)</condition> <block pos:start="17:46" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:67">

            <expr_stmt pos:start="19:13" pos:end="19:67"><expr pos:start="19:13" pos:end="19:66"><name pos:start="19:13" pos:end="19:15">buf</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:66"><name pos:start="19:19" pos:end="19:33">g_strdup_printf</name><argument_list pos:start="19:34" pos:end="19:66">(<argument pos:start="19:35" pos:end="19:41"><expr pos:start="19:35" pos:end="19:41"><literal type="string" pos:start="19:35" pos:end="19:41">"%s:%s"</literal></expr></argument>, <argument pos:start="19:44" pos:end="19:53"><expr pos:start="19:44" pos:end="19:53"><name pos:start="19:44" pos:end="19:53"><name pos:start="19:44" pos:end="19:47">inet</name><operator pos:start="19:48" pos:end="19:49">-&gt;</operator><name pos:start="19:50" pos:end="19:53">host</name></name></expr></argument>, <argument pos:start="19:56" pos:end="19:65"><expr pos:start="19:56" pos:end="19:65"><name pos:start="19:56" pos:end="19:65"><name pos:start="19:56" pos:end="19:59">inet</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:65">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="21:11" pos:end="25:9">else <block pos:start="21:16" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:69">

            <expr_stmt pos:start="23:13" pos:end="23:69"><expr pos:start="23:13" pos:end="23:68"><name pos:start="23:13" pos:end="23:15">buf</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:68"><name pos:start="23:19" pos:end="23:33">g_strdup_printf</name><argument_list pos:start="23:34" pos:end="23:68">(<argument pos:start="23:35" pos:end="23:43"><expr pos:start="23:35" pos:end="23:43"><literal type="string" pos:start="23:35" pos:end="23:43">"[%s]:%s"</literal></expr></argument>, <argument pos:start="23:46" pos:end="23:55"><expr pos:start="23:46" pos:end="23:55"><name pos:start="23:46" pos:end="23:55"><name pos:start="23:46" pos:end="23:49">inet</name><operator pos:start="23:50" pos:end="23:51">-&gt;</operator><name pos:start="23:52" pos:end="23:55">host</name></name></expr></argument>, <argument pos:start="23:58" pos:end="23:67"><expr pos:start="23:58" pos:end="23:67"><name pos:start="23:58" pos:end="23:67"><name pos:start="23:58" pos:end="23:61">inet</name><operator pos:start="23:62" pos:end="23:63">-&gt;</operator><name pos:start="23:64" pos:end="23:67">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>



    <case pos:start="31:5" pos:end="31:34">case <expr pos:start="31:10" pos:end="31:33"><name pos:start="31:10" pos:end="31:33">SOCKET_ADDRESS_KIND_UNIX</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:50"><expr pos:start="33:9" pos:end="33:49"><name pos:start="33:9" pos:end="33:11">buf</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:49"><name pos:start="33:15" pos:end="33:22">g_strdup</name><argument_list pos:start="33:23" pos:end="33:49">(<argument pos:start="33:24" pos:end="33:48"><expr pos:start="33:24" pos:end="33:48"><name pos:start="33:24" pos:end="33:48"><name pos:start="33:24" pos:end="33:27">addr</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:30">u</name><operator pos:start="33:31" pos:end="33:31">.</operator><name pos:start="33:32" pos:end="33:37">q_unix</name><operator pos:start="33:38" pos:end="33:38">.</operator><name pos:start="33:39" pos:end="33:42">data</name><operator pos:start="33:43" pos:end="33:44">-&gt;</operator><name pos:start="33:45" pos:end="33:48">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>



    <case pos:start="39:5" pos:end="39:32">case <expr pos:start="39:10" pos:end="39:31"><name pos:start="39:10" pos:end="39:31">SOCKET_ADDRESS_KIND_FD</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:45"><expr pos:start="41:9" pos:end="41:44"><name pos:start="41:9" pos:end="41:11">buf</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <call pos:start="41:15" pos:end="41:44"><name pos:start="41:15" pos:end="41:22">g_strdup</name><argument_list pos:start="41:23" pos:end="41:44">(<argument pos:start="41:24" pos:end="41:43"><expr pos:start="41:24" pos:end="41:43"><name pos:start="41:24" pos:end="41:43"><name pos:start="41:24" pos:end="41:27">addr</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:30">u</name><operator pos:start="41:31" pos:end="41:31">.</operator><name pos:start="41:32" pos:end="41:33">fd</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:38">data</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:43">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>



    <case pos:start="47:5" pos:end="47:35">case <expr pos:start="47:10" pos:end="47:34"><name pos:start="47:10" pos:end="47:34">SOCKET_ADDRESS_KIND_VSOCK</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="53:56"><expr pos:start="49:9" pos:end="53:55"><name pos:start="49:9" pos:end="49:11">buf</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <call pos:start="49:15" pos:end="53:55"><name pos:start="49:15" pos:end="49:29">g_strdup_printf</name><argument_list pos:start="49:30" pos:end="53:55">(<argument pos:start="49:31" pos:end="49:37"><expr pos:start="49:31" pos:end="49:37"><literal type="string" pos:start="49:31" pos:end="49:37">"%s:%s"</literal></expr></argument>,

                              <argument pos:start="51:31" pos:end="51:53"><expr pos:start="51:31" pos:end="51:53"><name pos:start="51:31" pos:end="51:53"><name pos:start="51:31" pos:end="51:34">addr</name><operator pos:start="51:35" pos:end="51:36">-&gt;</operator><name pos:start="51:37" pos:end="51:37">u</name><operator pos:start="51:38" pos:end="51:38">.</operator><name pos:start="51:39" pos:end="51:43">vsock</name><operator pos:start="51:44" pos:end="51:44">.</operator><name pos:start="51:45" pos:end="51:48">data</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:53">cid</name></name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:54"><expr pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:54"><name pos:start="53:31" pos:end="53:34">addr</name><operator pos:start="53:35" pos:end="53:36">-&gt;</operator><name pos:start="53:37" pos:end="53:37">u</name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:43">vsock</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:48">data</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:54">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>



    <default pos:start="59:5" pos:end="59:12">default:</default>

        <expr_stmt pos:start="61:9" pos:end="61:16"><expr pos:start="61:9" pos:end="61:15"><call pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:13">abort</name><argument_list pos:start="61:14" pos:end="61:15">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">buf</name></expr>;</return>

</block_content>}</block></function>
</unit>
