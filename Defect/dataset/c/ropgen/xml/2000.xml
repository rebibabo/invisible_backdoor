<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/2000.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:35">vmsvga_fill_rect</name><parameter_list pos:start="1:36" pos:end="3:55">(<parameter pos:start="1:37" pos:end="1:60"><decl pos:start="1:37" pos:end="1:60"><type pos:start="1:37" pos:end="1:60"><name pos:start="1:37" pos:end="1:57"><name pos:start="1:37" pos:end="1:42">struct</name> <name pos:start="1:44" pos:end="1:57">vmsvga_state_s</name></name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:60">s</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:26"><decl pos:start="3:17" pos:end="3:26"><type pos:start="3:17" pos:end="3:26"><name pos:start="3:17" pos:end="3:24">uint32_t</name></type> <name pos:start="3:26" pos:end="3:26">c</name></decl></parameter>, <parameter pos:start="3:29" pos:end="3:33"><decl pos:start="3:29" pos:end="3:33"><type pos:start="3:29" pos:end="3:33"><name pos:start="3:29" pos:end="3:31">int</name></type> <name pos:start="3:33" pos:end="3:33">x</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:40"><decl pos:start="3:36" pos:end="3:40"><type pos:start="3:36" pos:end="3:40"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:40">y</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:47"><decl pos:start="3:43" pos:end="3:47"><type pos:start="3:43" pos:end="3:47"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:47">w</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:54"><decl pos:start="3:50" pos:end="3:54"><type pos:start="3:50" pos:end="3:54"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:54">h</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="75:1">{<block_content pos:start="7:5" pos:end="73:46">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">DisplaySurface</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:27">surface</name> <init pos:start="7:29" pos:end="7:62">= <expr pos:start="7:31" pos:end="7:62"><call pos:start="7:31" pos:end="7:62"><name pos:start="7:31" pos:end="7:50">qemu_console_surface</name><argument_list pos:start="7:51" pos:end="7:62">(<argument pos:start="7:52" pos:end="7:61"><expr pos:start="7:52" pos:end="7:61"><name pos:start="7:52" pos:end="7:61"><name pos:start="7:52" pos:end="7:52">s</name><operator pos:start="7:53" pos:end="7:54">-&gt;</operator><name pos:start="7:55" pos:end="7:57">vga</name><operator pos:start="7:58" pos:end="7:58">.</operator><name pos:start="7:59" pos:end="7:61">con</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bypl</name> <init pos:start="9:14" pos:end="9:38">= <expr pos:start="9:16" pos:end="9:38"><call pos:start="9:16" pos:end="9:38"><name pos:start="9:16" pos:end="9:29">surface_stride</name><argument_list pos:start="9:30" pos:end="9:38">(<argument pos:start="9:31" pos:end="9:37"><expr pos:start="9:31" pos:end="9:37"><name pos:start="9:31" pos:end="9:37">surface</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">width</name> <init pos:start="11:15" pos:end="11:52">= <expr pos:start="11:17" pos:end="11:52"><call pos:start="11:17" pos:end="11:48"><name pos:start="11:17" pos:end="11:39">surface_bytes_per_pixel</name><argument_list pos:start="11:40" pos:end="11:48">(<argument pos:start="11:41" pos:end="11:47"><expr pos:start="11:41" pos:end="11:47"><name pos:start="11:41" pos:end="11:47">surface</name></expr></argument>)</argument_list></call> <operator pos:start="11:50" pos:end="11:50">*</operator> <name pos:start="11:52" pos:end="11:52">w</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">line</name> <init pos:start="13:14" pos:end="13:16">= <expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:14">column</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">uint8_t</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">fst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:17"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:11">uint8_t</name> <modifier pos:start="19:13" pos:end="19:13">*</modifier></type><name pos:start="19:14" pos:end="19:16">dst</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:16">src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:11"><name pos:start="23:5" pos:end="23:11">uint8_t</name></type> <name pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:15">col</name><index pos:start="23:16" pos:end="23:18">[<expr pos:start="23:17" pos:end="23:17"><literal type="number" pos:start="23:17" pos:end="23:17">4</literal></expr>]</index></name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:15"><expr pos:start="27:5" pos:end="27:14"><name pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:7">col</name><index pos:start="27:8" pos:end="27:10">[<expr pos:start="27:9" pos:end="27:9"><literal type="number" pos:start="27:9" pos:end="27:9">0</literal></expr>]</index></name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:14">c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:20"><expr pos:start="29:5" pos:end="29:19"><name pos:start="29:5" pos:end="29:10"><name pos:start="29:5" pos:end="29:7">col</name><index pos:start="29:8" pos:end="29:10">[<expr pos:start="29:9" pos:end="29:9"><literal type="number" pos:start="29:9" pos:end="29:9">1</literal></expr>]</index></name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:14">c</name> <operator pos:start="29:16" pos:end="29:17">&gt;&gt;</operator> <literal type="number" pos:start="29:19" pos:end="29:19">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:10"><name pos:start="31:5" pos:end="31:7">col</name><index pos:start="31:8" pos:end="31:10">[<expr pos:start="31:9" pos:end="31:9"><literal type="number" pos:start="31:9" pos:end="31:9">2</literal></expr>]</index></name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:14">c</name> <operator pos:start="31:16" pos:end="31:17">&gt;&gt;</operator> <literal type="number" pos:start="31:19" pos:end="31:20">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:21"><expr pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:7">col</name><index pos:start="33:8" pos:end="33:10">[<expr pos:start="33:9" pos:end="33:9"><literal type="number" pos:start="33:9" pos:end="33:9">3</literal></expr>]</index></name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:14">c</name> <operator pos:start="33:16" pos:end="33:17">&gt;&gt;</operator> <literal type="number" pos:start="33:19" pos:end="33:20">24</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:76"><expr pos:start="37:5" pos:end="37:75"><name pos:start="37:5" pos:end="37:7">fst</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:25"><name pos:start="37:11" pos:end="37:11">s</name><operator pos:start="37:12" pos:end="37:13">-&gt;</operator><name pos:start="37:14" pos:end="37:16">vga</name><operator pos:start="37:17" pos:end="37:17">.</operator><name pos:start="37:18" pos:end="37:25">vram_ptr</name></name> <operator pos:start="37:27" pos:end="37:27">+</operator> <call pos:start="37:29" pos:end="37:60"><name pos:start="37:29" pos:end="37:51">surface_bytes_per_pixel</name><argument_list pos:start="37:52" pos:end="37:60">(<argument pos:start="37:53" pos:end="37:59"><expr pos:start="37:53" pos:end="37:59"><name pos:start="37:53" pos:end="37:59">surface</name></expr></argument>)</argument_list></call> <operator pos:start="37:62" pos:end="37:62">*</operator> <name pos:start="37:64" pos:end="37:64">x</name> <operator pos:start="37:66" pos:end="37:66">+</operator> <name pos:start="37:68" pos:end="37:71">bypl</name> <operator pos:start="37:73" pos:end="37:73">*</operator> <name pos:start="37:75" pos:end="37:75">y</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="69:5"><if pos:start="41:5" pos:end="69:5">if <condition pos:start="41:8" pos:end="41:15">(<expr pos:start="41:9" pos:end="41:14"><name pos:start="41:9" pos:end="41:12">line</name><operator pos:start="41:13" pos:end="41:14">--</operator></expr>)</condition> <block pos:start="41:17" pos:end="69:5">{<block_content pos:start="43:9" pos:end="67:9">

        <expr_stmt pos:start="43:9" pos:end="43:18"><expr pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:11">dst</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:17">fst</name></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:18"><expr pos:start="45:9" pos:end="45:17"><name pos:start="45:9" pos:end="45:11">src</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:17">col</name></expr>;</expr_stmt>

        <for pos:start="47:9" pos:end="57:9">for <control pos:start="47:13" pos:end="47:50">(<init pos:start="47:14" pos:end="47:28"><expr pos:start="47:14" pos:end="47:27"><name pos:start="47:14" pos:end="47:19">column</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:27">width</name></expr>;</init> <condition pos:start="47:30" pos:end="47:40"><expr pos:start="47:30" pos:end="47:39"><name pos:start="47:30" pos:end="47:35">column</name> <operator pos:start="47:37" pos:end="47:37">&gt;</operator> <literal type="number" pos:start="47:39" pos:end="47:39">0</literal></expr>;</condition> <incr pos:start="47:42" pos:end="47:49"><expr pos:start="47:42" pos:end="47:49"><name pos:start="47:42" pos:end="47:47">column</name><operator pos:start="47:48" pos:end="47:49">--</operator></expr></incr>)</control> <block pos:start="47:52" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:13">

            <expr_stmt pos:start="49:13" pos:end="49:32"><expr pos:start="49:13" pos:end="49:31"><operator pos:start="49:13" pos:end="49:13">*</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:17">dst</name><operator pos:start="49:18" pos:end="49:19">++</operator><operator pos:start="49:20" pos:end="49:20">)</operator> <operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">*</operator><operator pos:start="49:25" pos:end="49:25">(</operator><name pos:start="49:26" pos:end="49:28">src</name><operator pos:start="49:29" pos:end="49:30">++</operator><operator pos:start="49:31" pos:end="49:31">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="55:13"><if pos:start="51:13" pos:end="55:13">if <condition pos:start="51:16" pos:end="51:62">(<expr pos:start="51:17" pos:end="51:61"><name pos:start="51:17" pos:end="51:19">src</name> <operator pos:start="51:21" pos:end="51:21">-</operator> <name pos:start="51:23" pos:end="51:25">col</name> <operator pos:start="51:27" pos:end="51:28">==</operator> <call pos:start="51:30" pos:end="51:61"><name pos:start="51:30" pos:end="51:52">surface_bytes_per_pixel</name><argument_list pos:start="51:53" pos:end="51:61">(<argument pos:start="51:54" pos:end="51:60"><expr pos:start="51:54" pos:end="51:60"><name pos:start="51:54" pos:end="51:60">surface</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:64" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:26">

                <expr_stmt pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:19">src</name> <operator pos:start="53:21" pos:end="53:21">=</operator> <name pos:start="53:23" pos:end="53:25">col</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="59:9" pos:end="59:18"><expr pos:start="59:9" pos:end="59:17"><name pos:start="59:9" pos:end="59:11">dst</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:17">fst</name></expr>;</expr_stmt>

        <for pos:start="61:9" pos:end="67:9">for <control pos:start="61:13" pos:end="61:32">(<init pos:start="61:14" pos:end="61:14">;</init> <condition pos:start="61:16" pos:end="61:24"><expr pos:start="61:16" pos:end="61:23"><name pos:start="61:16" pos:end="61:19">line</name> <operator pos:start="61:21" pos:end="61:21">&gt;</operator> <literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr>;</condition> <incr pos:start="61:26" pos:end="61:31"><expr pos:start="61:26" pos:end="61:31"><name pos:start="61:26" pos:end="61:29">line</name><operator pos:start="61:30" pos:end="61:31">--</operator></expr></incr>)</control> <block pos:start="61:34" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:36">

            <expr_stmt pos:start="63:13" pos:end="63:24"><expr pos:start="63:13" pos:end="63:23"><name pos:start="63:13" pos:end="63:15">dst</name> <operator pos:start="63:17" pos:end="63:18">+=</operator> <name pos:start="63:20" pos:end="63:23">bypl</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><call pos:start="65:13" pos:end="65:35"><name pos:start="65:13" pos:end="65:18">memcpy</name><argument_list pos:start="65:19" pos:end="65:35">(<argument pos:start="65:20" pos:end="65:22"><expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">dst</name></expr></argument>, <argument pos:start="65:25" pos:end="65:27"><expr pos:start="65:25" pos:end="65:27"><name pos:start="65:25" pos:end="65:27">fst</name></expr></argument>, <argument pos:start="65:30" pos:end="65:34"><expr pos:start="65:30" pos:end="65:34"><name pos:start="65:30" pos:end="65:34">width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:46"><expr pos:start="73:5" pos:end="73:45"><call pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:30">vmsvga_update_rect_delayed</name><argument_list pos:start="73:31" pos:end="73:45">(<argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><name pos:start="73:32" pos:end="73:32">s</name></expr></argument>, <argument pos:start="73:35" pos:end="73:35"><expr pos:start="73:35" pos:end="73:35"><name pos:start="73:35" pos:end="73:35">x</name></expr></argument>, <argument pos:start="73:38" pos:end="73:38"><expr pos:start="73:38" pos:end="73:38"><name pos:start="73:38" pos:end="73:38">y</name></expr></argument>, <argument pos:start="73:41" pos:end="73:41"><expr pos:start="73:41" pos:end="73:41"><name pos:start="73:41" pos:end="73:41">w</name></expr></argument>, <argument pos:start="73:44" pos:end="73:44"><expr pos:start="73:44" pos:end="73:44"><name pos:start="73:44" pos:end="73:44">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
